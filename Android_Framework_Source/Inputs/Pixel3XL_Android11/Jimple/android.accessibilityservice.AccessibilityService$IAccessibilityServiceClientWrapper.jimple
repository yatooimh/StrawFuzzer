public class android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper extends android.accessibilityservice.IAccessibilityServiceClient$Stub implements com.android.internal.os.HandlerCaller$Callback
{
    private static final int DO_ACCESSIBILITY_BUTTON_AVAILABILITY_CHANGED;
    private static final int DO_ACCESSIBILITY_BUTTON_CLICKED;
    private static final int DO_CLEAR_ACCESSIBILITY_CACHE;
    private static final int DO_GESTURE_COMPLETE;
    private static final int DO_INIT;
    private static final int DO_ON_ACCESSIBILITY_EVENT;
    private static final int DO_ON_FINGERPRINT_ACTIVE_CHANGED;
    private static final int DO_ON_FINGERPRINT_GESTURE;
    private static final int DO_ON_GESTURE;
    private static final int DO_ON_INTERRUPT;
    private static final int DO_ON_KEY_EVENT;
    private static final int DO_ON_MAGNIFICATION_CHANGED;
    private static final int DO_ON_SOFT_KEYBOARD_SHOW_MODE_CHANGED;
    private static final int DO_ON_SYSTEM_ACTIONS_CHANGED;
    private final android.accessibilityservice.AccessibilityService$Callbacks mCallback;
    private final com.android.internal.os.HandlerCaller mCaller;
    private int mConnectionId;

    public void <init>(android.content.Context, android.os.Looper, android.accessibilityservice.AccessibilityService$Callbacks)
    {
        android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper r0;
        android.content.Context r1;
        android.os.Looper r2;
        android.accessibilityservice.AccessibilityService$Callbacks r3;
        com.android.internal.os.HandlerCaller $r4;

        r0 := @this: android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.os.Looper;

        r3 := @parameter2: android.accessibilityservice.AccessibilityService$Callbacks;

        specialinvoke r0.<android.accessibilityservice.IAccessibilityServiceClient$Stub: void <init>()>();

        r0.<android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper: int mConnectionId> = -1;

        r0.<android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper: android.accessibilityservice.AccessibilityService$Callbacks mCallback> = r3;

        $r4 = new com.android.internal.os.HandlerCaller;

        specialinvoke $r4.<com.android.internal.os.HandlerCaller: void <init>(android.content.Context,android.os.Looper,com.android.internal.os.HandlerCaller$Callback,boolean)>(r1, r2, r0, 1);

        r0.<android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper: com.android.internal.os.HandlerCaller mCaller> = $r4;

        return;
    }

    public void clearAccessibilityCache()
    {
        android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper r0;
        android.os.Message r1;
        com.android.internal.os.HandlerCaller $r2, $r3;

        r0 := @this: android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper;

        $r2 = r0.<android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper: com.android.internal.os.HandlerCaller mCaller>;

        r1 = virtualinvoke $r2.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessage(int)>(5);

        $r3 = r0.<android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper: com.android.internal.os.HandlerCaller mCaller>;

        virtualinvoke $r3.<com.android.internal.os.HandlerCaller: void sendMessage(android.os.Message)>(r1);

        return;
    }

    public void executeMessage(android.os.Message)
    {
        android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, i26, i27, i28;
        float f0, f1, f2;
        android.accessibilityservice.AccessibilityService$Callbacks $r1, $r2, $r3, $r4, $r5, $r6, $r15, $r18, $r22, $r25, $r26, $r32, $r34, $r35, r47;
        java.lang.Object $r7, $r8, $r9, $r11, $r13, $r16, $r20, $r23, $r27, $r28, $r29;
        java.lang.Float $r10, $r12, $r14;
        android.view.accessibility.AccessibilityInteractionClient $r19, $r24, $r31;
        android.accessibilityservice.AccessibilityGestureEvent $r21;
        java.lang.StringBuilder $r36;
        java.lang.String $r39;
        java.lang.Throwable $r40, $r41, $r43, $r44;
        android.os.RemoteException $r42;
        android.os.Message r45;
        boolean z3, z4, z5, z6, z7;
        com.android.internal.os.SomeArgs r48, r58;
        android.graphics.Region r49;
        android.view.KeyEvent r50;
        android.accessibilityservice.IAccessibilityServiceConnection r51, r59;
        android.view.accessibility.AccessibilityEvent r56;
        android.os.IBinder r60;

        r0 := @this: android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper;

        r45 := @parameter0: android.os.Message;

        i0 = r45.<android.os.Message: int what>;

        z3 = 0;

        z4 = 0;

        tableswitch(i0)
        {
            case 1: goto label48;
            case 2: goto label46;
            case 3: goto label40;
            case 4: goto label38;
            case 5: goto label37;
            case 6: goto label21;
            case 7: goto label19;
            case 8: goto label17;
            case 9: goto label14;
            case 10: goto label11;
            case 11: goto label09;
            case 12: goto label07;
            case 13: goto label04;
            case 14: goto label02;
            default: goto label01;
        };

     label01:
        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown message type ");

        $i24 = r45.<android.os.Message: int what>;

        virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i24);

        $r39 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("AccessibilityService", $r39);

        return;

     label02:
        $i1 = r0.<android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper: int mConnectionId>;

        if $i1 == -1 goto label03;

        $r1 = r0.<android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper: android.accessibilityservice.AccessibilityService$Callbacks mCallback>;

        interfaceinvoke $r1.<android.accessibilityservice.AccessibilityService$Callbacks: void onSystemActionsChanged()>();

     label03:
        return;

     label04:
        $i2 = r0.<android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper: int mConnectionId>;

        if $i2 == -1 goto label06;

        $i3 = r45.<android.os.Message: int arg1>;

        if $i3 == 0 goto label05;

        z4 = 1;

     label05:
        $r2 = r0.<android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper: android.accessibilityservice.AccessibilityService$Callbacks mCallback>;

        interfaceinvoke $r2.<android.accessibilityservice.AccessibilityService$Callbacks: void onAccessibilityButtonAvailabilityChanged(boolean)>(z4);

     label06:
        return;

     label07:
        $i4 = r0.<android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper: int mConnectionId>;

        if $i4 == -1 goto label08;

        $r3 = r0.<android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper: android.accessibilityservice.AccessibilityService$Callbacks mCallback>;

        $i5 = r45.<android.os.Message: int arg1>;

        interfaceinvoke $r3.<android.accessibilityservice.AccessibilityService$Callbacks: void onAccessibilityButtonClicked(int)>($i5);

     label08:
        return;

     label09:
        $i6 = r0.<android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper: int mConnectionId>;

        if $i6 == -1 goto label10;

        $r4 = r0.<android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper: android.accessibilityservice.AccessibilityService$Callbacks mCallback>;

        $i7 = r45.<android.os.Message: int arg1>;

        interfaceinvoke $r4.<android.accessibilityservice.AccessibilityService$Callbacks: void onFingerprintGesture(int)>($i7);

     label10:
        return;

     label11:
        $i8 = r0.<android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper: int mConnectionId>;

        if $i8 == -1 goto label13;

        r47 = r0.<android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper: android.accessibilityservice.AccessibilityService$Callbacks mCallback>;

        z5 = 0;

        $i9 = r45.<android.os.Message: int arg1>;

        if $i9 != 1 goto label12;

        z5 = 1;

     label12:
        interfaceinvoke r47.<android.accessibilityservice.AccessibilityService$Callbacks: void onFingerprintCapturingGesturesChanged(boolean)>(z5);

     label13:
        return;

     label14:
        $i10 = r0.<android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper: int mConnectionId>;

        if $i10 == -1 goto label16;

        z6 = 0;

        $i11 = r45.<android.os.Message: int arg2>;

        if $i11 != 1 goto label15;

        z6 = 1;

     label15:
        $r5 = r0.<android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper: android.accessibilityservice.AccessibilityService$Callbacks mCallback>;

        $i12 = r45.<android.os.Message: int arg1>;

        interfaceinvoke $r5.<android.accessibilityservice.AccessibilityService$Callbacks: void onPerformGestureResult(int,boolean)>($i12, z6);

     label16:
        return;

     label17:
        $i13 = r0.<android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper: int mConnectionId>;

        if $i13 == -1 goto label18;

        i26 = r45.<android.os.Message: int arg1>;

        $r6 = r0.<android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper: android.accessibilityservice.AccessibilityService$Callbacks mCallback>;

        interfaceinvoke $r6.<android.accessibilityservice.AccessibilityService$Callbacks: void onSoftKeyboardShowModeChanged(int)>(i26);

     label18:
        return;

     label19:
        $i14 = r0.<android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper: int mConnectionId>;

        if $i14 == -1 goto label20;

        $r7 = r45.<android.os.Message: java.lang.Object obj>;

        r48 = (com.android.internal.os.SomeArgs) $r7;

        $r8 = r48.<com.android.internal.os.SomeArgs: java.lang.Object arg1>;

        r49 = (android.graphics.Region) $r8;

        $r9 = r48.<com.android.internal.os.SomeArgs: java.lang.Object arg2>;

        $r10 = (java.lang.Float) $r9;

        f0 = virtualinvoke $r10.<java.lang.Float: float floatValue()>();

        $r11 = r48.<com.android.internal.os.SomeArgs: java.lang.Object arg3>;

        $r12 = (java.lang.Float) $r11;

        f1 = virtualinvoke $r12.<java.lang.Float: float floatValue()>();

        $r13 = r48.<com.android.internal.os.SomeArgs: java.lang.Object arg4>;

        $r14 = (java.lang.Float) $r13;

        f2 = virtualinvoke $r14.<java.lang.Float: float floatValue()>();

        i27 = r48.<com.android.internal.os.SomeArgs: int argi1>;

        virtualinvoke r48.<com.android.internal.os.SomeArgs: void recycle()>();

        $r15 = r0.<android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper: android.accessibilityservice.AccessibilityService$Callbacks mCallback>;

        interfaceinvoke $r15.<android.accessibilityservice.AccessibilityService$Callbacks: void onMagnificationChanged(int,android.graphics.Region,float,float,float)>(i27, r49, f0, f1, f2);

     label20:
        return;

     label21:
        $r16 = r45.<android.os.Message: java.lang.Object obj>;

        r50 = (android.view.KeyEvent) $r16;

     label22:
        staticinvoke <android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityInteractionClient getInstance()>();

        $i15 = r0.<android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper: int mConnectionId>;

        r51 = staticinvoke <android.view.accessibility.AccessibilityInteractionClient: android.accessibilityservice.IAccessibilityServiceConnection getConnection(int)>($i15);

     label23:
        if r51 == null goto label28;

     label24:
        $r18 = r0.<android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper: android.accessibilityservice.AccessibilityService$Callbacks mCallback>;

        z7 = interfaceinvoke $r18.<android.accessibilityservice.AccessibilityService$Callbacks: boolean onKeyEvent(android.view.KeyEvent)>(r50);

        i28 = r45.<android.os.Message: int arg1>;

     label25:
        interfaceinvoke r51.<android.accessibilityservice.IAccessibilityServiceConnection: void setOnKeyEventResult(boolean,int)>(z7, i28);

     label26:
        goto label28;

     label27:
        $r42 := @caughtexception;

     label28:
        virtualinvoke r50.<android.view.KeyEvent: void recycle()>();

     label29:
        goto label31;

     label30:
        $r43 := @caughtexception;

     label31:
        return;

     label32:
        $r44 := @caughtexception;

     label33:
        virtualinvoke r50.<android.view.KeyEvent: void recycle()>();

     label34:
        goto label36;

     label35:
        $r41 := @caughtexception;

     label36:
        throw $r44;

     label37:
        $r19 = staticinvoke <android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityInteractionClient getInstance()>();

        virtualinvoke $r19.<android.view.accessibility.AccessibilityInteractionClient: void clearCache()>();

        return;

     label38:
        $i16 = r0.<android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper: int mConnectionId>;

        if $i16 == -1 goto label39;

        $r22 = r0.<android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper: android.accessibilityservice.AccessibilityService$Callbacks mCallback>;

        $r20 = r45.<android.os.Message: java.lang.Object obj>;

        $r21 = (android.accessibilityservice.AccessibilityGestureEvent) $r20;

        interfaceinvoke $r22.<android.accessibilityservice.AccessibilityService$Callbacks: boolean onGesture(android.accessibilityservice.AccessibilityGestureEvent)>($r21);

     label39:
        return;

     label40:
        $r23 = r45.<android.os.Message: java.lang.Object obj>;

        r56 = (android.view.accessibility.AccessibilityEvent) $r23;

        $i17 = r45.<android.os.Message: int arg1>;

        if $i17 == 0 goto label41;

        z3 = 1;

     label41:
        if r56 == null goto label45;

        $r24 = staticinvoke <android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityInteractionClient getInstance()>();

        virtualinvoke $r24.<android.view.accessibility.AccessibilityInteractionClient: void onAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>(r56);

        if z3 == 0 goto label42;

        $i18 = r0.<android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper: int mConnectionId>;

        if $i18 == -1 goto label42;

        $r25 = r0.<android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper: android.accessibilityservice.AccessibilityService$Callbacks mCallback>;

        interfaceinvoke $r25.<android.accessibilityservice.AccessibilityService$Callbacks: void onAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>(r56);

     label42:
        virtualinvoke r56.<android.view.accessibility.AccessibilityEvent: void recycle()>();

     label43:
        goto label45;

     label44:
        $r40 := @caughtexception;

     label45:
        return;

     label46:
        $i19 = r0.<android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper: int mConnectionId>;

        if $i19 == -1 goto label47;

        $r26 = r0.<android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper: android.accessibilityservice.AccessibilityService$Callbacks mCallback>;

        interfaceinvoke $r26.<android.accessibilityservice.AccessibilityService$Callbacks: void onInterrupt()>();

     label47:
        return;

     label48:
        $i20 = r45.<android.os.Message: int arg1>;

        r0.<android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper: int mConnectionId> = $i20;

        $r27 = r45.<android.os.Message: java.lang.Object obj>;

        r58 = (com.android.internal.os.SomeArgs) $r27;

        $r28 = r58.<com.android.internal.os.SomeArgs: java.lang.Object arg1>;

        r59 = (android.accessibilityservice.IAccessibilityServiceConnection) $r28;

        $r29 = r58.<com.android.internal.os.SomeArgs: java.lang.Object arg2>;

        r60 = (android.os.IBinder) $r29;

        virtualinvoke r58.<com.android.internal.os.SomeArgs: void recycle()>();

        if r59 == null goto label49;

        staticinvoke <android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityInteractionClient getInstance()>();

        $i22 = r0.<android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper: int mConnectionId>;

        staticinvoke <android.view.accessibility.AccessibilityInteractionClient: void addConnection(int,android.accessibilityservice.IAccessibilityServiceConnection)>($i22, r59);

        $r34 = r0.<android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper: android.accessibilityservice.AccessibilityService$Callbacks mCallback>;

        $i23 = r0.<android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper: int mConnectionId>;

        interfaceinvoke $r34.<android.accessibilityservice.AccessibilityService$Callbacks: void init(int,android.os.IBinder)>($i23, r60);

        $r35 = r0.<android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper: android.accessibilityservice.AccessibilityService$Callbacks mCallback>;

        interfaceinvoke $r35.<android.accessibilityservice.AccessibilityService$Callbacks: void onServiceConnected()>();

        goto label50;

     label49:
        staticinvoke <android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityInteractionClient getInstance()>();

        $i21 = r0.<android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper: int mConnectionId>;

        staticinvoke <android.view.accessibility.AccessibilityInteractionClient: void removeConnection(int)>($i21);

        r0.<android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper: int mConnectionId> = -1;

        $r31 = staticinvoke <android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityInteractionClient getInstance()>();

        virtualinvoke $r31.<android.view.accessibility.AccessibilityInteractionClient: void clearCache()>();

        $r32 = r0.<android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper: android.accessibilityservice.AccessibilityService$Callbacks mCallback>;

        interfaceinvoke $r32.<android.accessibilityservice.AccessibilityService$Callbacks: void init(int,android.os.IBinder)>(-1, null);

     label50:
        return;

        catch java.lang.Throwable from label22 to label23 with label32;
        catch java.lang.Throwable from label24 to label25 with label32;
        catch android.os.RemoteException from label25 to label26 with label27;
        catch java.lang.Throwable from label25 to label26 with label32;
        catch java.lang.IllegalStateException from label28 to label29 with label30;
        catch java.lang.IllegalStateException from label33 to label34 with label35;
        catch java.lang.IllegalStateException from label42 to label43 with label44;
    }

    public void init(android.accessibilityservice.IAccessibilityServiceConnection, int, android.os.IBinder)
    {
        android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper r0;
        int i0;
        android.os.IBinder r1;
        com.android.internal.os.HandlerCaller $r2, $r3;
        android.accessibilityservice.IAccessibilityServiceConnection r4;
        android.os.Message r5;

        r0 := @this: android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper;

        r4 := @parameter0: android.accessibilityservice.IAccessibilityServiceConnection;

        i0 := @parameter1: int;

        r1 := @parameter2: android.os.IBinder;

        $r2 = r0.<android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper: com.android.internal.os.HandlerCaller mCaller>;

        r5 = virtualinvoke $r2.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageIOO(int,int,java.lang.Object,java.lang.Object)>(1, i0, r4, r1);

        $r3 = r0.<android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper: com.android.internal.os.HandlerCaller mCaller>;

        virtualinvoke $r3.<com.android.internal.os.HandlerCaller: void sendMessage(android.os.Message)>(r5);

        return;
    }

    public void onAccessibilityButtonAvailabilityChanged(boolean)
    {
        android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper r0;
        boolean z0;
        com.android.internal.os.HandlerCaller $r1, r2;
        android.os.Message r3;
        int i0;

        r0 := @this: android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper;

        z0 := @parameter0: boolean;

        r2 = r0.<android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper: com.android.internal.os.HandlerCaller mCaller>;

        i0 = (int) z0;

        r3 = virtualinvoke r2.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageI(int,int)>(13, i0);

        $r1 = r0.<android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper: com.android.internal.os.HandlerCaller mCaller>;

        virtualinvoke $r1.<com.android.internal.os.HandlerCaller: void sendMessage(android.os.Message)>(r3);

        return;
    }

    public void onAccessibilityButtonClicked(int)
    {
        android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper r0;
        int i0;
        android.os.Message r1;
        com.android.internal.os.HandlerCaller $r2, $r3;

        r0 := @this: android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper;

        i0 := @parameter0: int;

        $r2 = r0.<android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper: com.android.internal.os.HandlerCaller mCaller>;

        r1 = virtualinvoke $r2.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageI(int,int)>(12, i0);

        $r3 = r0.<android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper: com.android.internal.os.HandlerCaller mCaller>;

        virtualinvoke $r3.<com.android.internal.os.HandlerCaller: void sendMessage(android.os.Message)>(r1);

        return;
    }

    public void onAccessibilityEvent(android.view.accessibility.AccessibilityEvent, boolean)
    {
        android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper r0;
        boolean z0;
        com.android.internal.os.HandlerCaller $r1, $r2;
        android.view.accessibility.AccessibilityEvent r3;
        android.os.Message r4;

        r0 := @this: android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper;

        r3 := @parameter0: android.view.accessibility.AccessibilityEvent;

        z0 := @parameter1: boolean;

        $r1 = r0.<android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper: com.android.internal.os.HandlerCaller mCaller>;

        r4 = virtualinvoke $r1.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageBO(int,boolean,java.lang.Object)>(3, z0, r3);

        $r2 = r0.<android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper: com.android.internal.os.HandlerCaller mCaller>;

        virtualinvoke $r2.<com.android.internal.os.HandlerCaller: void sendMessage(android.os.Message)>(r4);

        return;
    }

    public void onFingerprintCapturingGesturesChanged(boolean)
    {
        android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper r0;
        boolean z0;
        com.android.internal.os.HandlerCaller r1;
        android.os.Message $r2;
        int i0;

        r0 := @this: android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper;

        z0 := @parameter0: boolean;

        r1 = r0.<android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper: com.android.internal.os.HandlerCaller mCaller>;

        i0 = (int) z0;

        $r2 = virtualinvoke r1.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageI(int,int)>(10, i0);

        virtualinvoke r1.<com.android.internal.os.HandlerCaller: void sendMessage(android.os.Message)>($r2);

        return;
    }

    public void onFingerprintGesture(int)
    {
        android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper r0;
        int i0;
        com.android.internal.os.HandlerCaller r1;
        android.os.Message $r2;

        r0 := @this: android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper;

        i0 := @parameter0: int;

        r1 = r0.<android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r2 = virtualinvoke r1.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageI(int,int)>(11, i0);

        virtualinvoke r1.<com.android.internal.os.HandlerCaller: void sendMessage(android.os.Message)>($r2);

        return;
    }

    public void onGesture(android.accessibilityservice.AccessibilityGestureEvent)
    {
        android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper r0;
        com.android.internal.os.HandlerCaller $r1, $r2;
        android.accessibilityservice.AccessibilityGestureEvent r3;
        android.os.Message r4;

        r0 := @this: android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper;

        r3 := @parameter0: android.accessibilityservice.AccessibilityGestureEvent;

        $r1 = r0.<android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper: com.android.internal.os.HandlerCaller mCaller>;

        r4 = virtualinvoke $r1.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageO(int,java.lang.Object)>(4, r3);

        $r2 = r0.<android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper: com.android.internal.os.HandlerCaller mCaller>;

        virtualinvoke $r2.<com.android.internal.os.HandlerCaller: void sendMessage(android.os.Message)>(r4);

        return;
    }

    public void onInterrupt()
    {
        android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper r0;
        android.os.Message r1;
        com.android.internal.os.HandlerCaller $r2, $r3;

        r0 := @this: android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper;

        $r2 = r0.<android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper: com.android.internal.os.HandlerCaller mCaller>;

        r1 = virtualinvoke $r2.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessage(int)>(2);

        $r3 = r0.<android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper: com.android.internal.os.HandlerCaller mCaller>;

        virtualinvoke $r3.<com.android.internal.os.HandlerCaller: void sendMessage(android.os.Message)>(r1);

        return;
    }

    public void onKeyEvent(android.view.KeyEvent, int)
    {
        android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper r0;
        int i0;
        com.android.internal.os.HandlerCaller $r1, $r2;
        android.view.KeyEvent r3;
        android.os.Message r4;

        r0 := @this: android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper;

        r3 := @parameter0: android.view.KeyEvent;

        i0 := @parameter1: int;

        $r1 = r0.<android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper: com.android.internal.os.HandlerCaller mCaller>;

        r4 = virtualinvoke $r1.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageIO(int,int,java.lang.Object)>(6, i0, r3);

        $r2 = r0.<android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper: com.android.internal.os.HandlerCaller mCaller>;

        virtualinvoke $r2.<com.android.internal.os.HandlerCaller: void sendMessage(android.os.Message)>(r4);

        return;
    }

    public void onMagnificationChanged(int, android.graphics.Region, float, float, float)
    {
        android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper r0;
        int i0;
        float f0, f1, f2;
        com.android.internal.os.SomeArgs r1;
        java.lang.Float $r2, $r3, $r4;
        com.android.internal.os.HandlerCaller $r5, $r6;
        android.graphics.Region r7;
        android.os.Message r8;

        r0 := @this: android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper;

        i0 := @parameter0: int;

        r7 := @parameter1: android.graphics.Region;

        f0 := @parameter2: float;

        f1 := @parameter3: float;

        f2 := @parameter4: float;

        r1 = staticinvoke <com.android.internal.os.SomeArgs: com.android.internal.os.SomeArgs obtain()>();

        r1.<com.android.internal.os.SomeArgs: java.lang.Object arg1> = r7;

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f0);

        r1.<com.android.internal.os.SomeArgs: java.lang.Object arg2> = $r2;

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f1);

        r1.<com.android.internal.os.SomeArgs: java.lang.Object arg3> = $r3;

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f2);

        r1.<com.android.internal.os.SomeArgs: java.lang.Object arg4> = $r4;

        r1.<com.android.internal.os.SomeArgs: int argi1> = i0;

        $r5 = r0.<android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper: com.android.internal.os.HandlerCaller mCaller>;

        r8 = virtualinvoke $r5.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageO(int,java.lang.Object)>(7, r1);

        $r6 = r0.<android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper: com.android.internal.os.HandlerCaller mCaller>;

        virtualinvoke $r6.<com.android.internal.os.HandlerCaller: void sendMessage(android.os.Message)>(r8);

        return;
    }

    public void onPerformGestureResult(int, boolean)
    {
        android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper r0;
        int i0, i1;
        boolean z0;
        com.android.internal.os.HandlerCaller $r1, r2;
        android.os.Message r3;

        r0 := @this: android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r2 = r0.<android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper: com.android.internal.os.HandlerCaller mCaller>;

        i1 = (int) z0;

        r3 = virtualinvoke r2.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageII(int,int,int)>(9, i0, i1);

        $r1 = r0.<android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper: com.android.internal.os.HandlerCaller mCaller>;

        virtualinvoke $r1.<com.android.internal.os.HandlerCaller: void sendMessage(android.os.Message)>(r3);

        return;
    }

    public void onSoftKeyboardShowModeChanged(int)
    {
        android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper r0;
        int i0;
        android.os.Message r1;
        com.android.internal.os.HandlerCaller $r2, $r3;

        r0 := @this: android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper;

        i0 := @parameter0: int;

        $r2 = r0.<android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper: com.android.internal.os.HandlerCaller mCaller>;

        r1 = virtualinvoke $r2.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageI(int,int)>(8, i0);

        $r3 = r0.<android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper: com.android.internal.os.HandlerCaller mCaller>;

        virtualinvoke $r3.<com.android.internal.os.HandlerCaller: void sendMessage(android.os.Message)>(r1);

        return;
    }

    public void onSystemActionsChanged()
    {
        android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper r0;
        com.android.internal.os.HandlerCaller r1;
        android.os.Message $r2;

        r0 := @this: android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper;

        r1 = r0.<android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r2 = virtualinvoke r1.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessage(int)>(14);

        virtualinvoke r1.<com.android.internal.os.HandlerCaller: void sendMessage(android.os.Message)>($r2);

        return;
    }

    public static void <clinit>()
    {
        <android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper: int DO_ON_SYSTEM_ACTIONS_CHANGED> = 14;

        <android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper: int DO_ON_SOFT_KEYBOARD_SHOW_MODE_CHANGED> = 8;

        <android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper: int DO_ON_MAGNIFICATION_CHANGED> = 7;

        <android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper: int DO_ON_KEY_EVENT> = 6;

        <android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper: int DO_ON_INTERRUPT> = 2;

        <android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper: int DO_ON_GESTURE> = 4;

        <android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper: int DO_ON_FINGERPRINT_GESTURE> = 11;

        <android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper: int DO_ON_FINGERPRINT_ACTIVE_CHANGED> = 10;

        <android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper: int DO_ON_ACCESSIBILITY_EVENT> = 3;

        <android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper: int DO_INIT> = 1;

        <android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper: int DO_GESTURE_COMPLETE> = 9;

        <android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper: int DO_CLEAR_ACCESSIBILITY_CACHE> = 5;

        <android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper: int DO_ACCESSIBILITY_BUTTON_CLICKED> = 12;

        <android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper: int DO_ACCESSIBILITY_BUTTON_AVAILABILITY_CHANGED> = 13;

        return;
    }
}
