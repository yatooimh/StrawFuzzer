public final class android.accessibilityservice.AccessibilityService$ScreenshotResult extends java.lang.Object
{
    private final android.graphics.ColorSpace mColorSpace;
    private final android.hardware.HardwareBuffer mHardwareBuffer;
    private final long mTimestamp;

    private void <init>(android.hardware.HardwareBuffer, android.graphics.ColorSpace, long)
    {
        android.accessibilityservice.AccessibilityService$ScreenshotResult r0;
        android.hardware.HardwareBuffer r1;
        android.graphics.ColorSpace r2;
        long l0;

        r0 := @this: android.accessibilityservice.AccessibilityService$ScreenshotResult;

        r1 := @parameter0: android.hardware.HardwareBuffer;

        r2 := @parameter1: android.graphics.ColorSpace;

        l0 := @parameter2: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "hardwareBuffer cannot be null");

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r2, "colorSpace cannot be null");

        r0.<android.accessibilityservice.AccessibilityService$ScreenshotResult: android.hardware.HardwareBuffer mHardwareBuffer> = r1;

        r0.<android.accessibilityservice.AccessibilityService$ScreenshotResult: android.graphics.ColorSpace mColorSpace> = r2;

        r0.<android.accessibilityservice.AccessibilityService$ScreenshotResult: long mTimestamp> = l0;

        return;
    }

    void <init>(android.hardware.HardwareBuffer, android.graphics.ColorSpace, long, android.accessibilityservice.AccessibilityService$1)
    {
        android.accessibilityservice.AccessibilityService$ScreenshotResult r0;
        android.hardware.HardwareBuffer r1;
        android.graphics.ColorSpace r2;
        long l0;
        android.accessibilityservice.AccessibilityService$1 r3;

        r0 := @this: android.accessibilityservice.AccessibilityService$ScreenshotResult;

        r1 := @parameter0: android.hardware.HardwareBuffer;

        r2 := @parameter1: android.graphics.ColorSpace;

        l0 := @parameter2: long;

        r3 := @parameter3: android.accessibilityservice.AccessibilityService$1;

        specialinvoke r0.<android.accessibilityservice.AccessibilityService$ScreenshotResult: void <init>(android.hardware.HardwareBuffer,android.graphics.ColorSpace,long)>(r1, r2, l0);

        return;
    }

    public android.graphics.ColorSpace getColorSpace()
    {
        android.accessibilityservice.AccessibilityService$ScreenshotResult r0;
        android.graphics.ColorSpace $r1;

        r0 := @this: android.accessibilityservice.AccessibilityService$ScreenshotResult;

        $r1 = r0.<android.accessibilityservice.AccessibilityService$ScreenshotResult: android.graphics.ColorSpace mColorSpace>;

        return $r1;
    }

    public android.hardware.HardwareBuffer getHardwareBuffer()
    {
        android.accessibilityservice.AccessibilityService$ScreenshotResult r0;
        android.hardware.HardwareBuffer $r1;

        r0 := @this: android.accessibilityservice.AccessibilityService$ScreenshotResult;

        $r1 = r0.<android.accessibilityservice.AccessibilityService$ScreenshotResult: android.hardware.HardwareBuffer mHardwareBuffer>;

        return $r1;
    }

    public long getTimestamp()
    {
        android.accessibilityservice.AccessibilityService$ScreenshotResult r0;
        long $l0;

        r0 := @this: android.accessibilityservice.AccessibilityService$ScreenshotResult;

        $l0 = r0.<android.accessibilityservice.AccessibilityService$ScreenshotResult: long mTimestamp>;

        return $l0;
    }
}
