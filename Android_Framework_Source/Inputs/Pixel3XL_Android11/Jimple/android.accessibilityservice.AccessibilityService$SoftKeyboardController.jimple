public final class android.accessibilityservice.AccessibilityService$SoftKeyboardController extends java.lang.Object
{
    private android.util.ArrayMap mListeners;
    private final java.lang.Object mLock;
    private final android.accessibilityservice.AccessibilityService mService;

    void <init>(android.accessibilityservice.AccessibilityService, java.lang.Object)
    {
        android.accessibilityservice.AccessibilityService$SoftKeyboardController r0;
        android.accessibilityservice.AccessibilityService r1;
        java.lang.Object r2;

        r0 := @this: android.accessibilityservice.AccessibilityService$SoftKeyboardController;

        r1 := @parameter0: android.accessibilityservice.AccessibilityService;

        r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.accessibilityservice.AccessibilityService$SoftKeyboardController: android.accessibilityservice.AccessibilityService mService> = r1;

        r0.<android.accessibilityservice.AccessibilityService$SoftKeyboardController: java.lang.Object mLock> = r2;

        return;
    }

    private void setSoftKeyboardCallbackEnabled(boolean)
    {
        android.accessibilityservice.AccessibilityService$SoftKeyboardController r0;
        boolean z0;
        android.accessibilityservice.AccessibilityService $r2;
        int $i0;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;
        android.accessibilityservice.IAccessibilityServiceConnection r5;

        r0 := @this: android.accessibilityservice.AccessibilityService$SoftKeyboardController;

        z0 := @parameter0: boolean;

        staticinvoke <android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityInteractionClient getInstance()>();

        $r2 = r0.<android.accessibilityservice.AccessibilityService$SoftKeyboardController: android.accessibilityservice.AccessibilityService mService>;

        $i0 = staticinvoke <android.accessibilityservice.AccessibilityService: int access$000(android.accessibilityservice.AccessibilityService)>($r2);

        r5 = staticinvoke <android.view.accessibility.AccessibilityInteractionClient: android.accessibilityservice.IAccessibilityServiceConnection getConnection(int)>($i0);

        if r5 == null goto label4;

     label1:
        interfaceinvoke r5.<android.accessibilityservice.IAccessibilityServiceConnection: void setSoftKeyboardCallbackEnabled(boolean)>(z0);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r3);

        throw $r4;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void addOnShowModeChangedListener(android.accessibilityservice.AccessibilityService$SoftKeyboardController$OnShowModeChangedListener)
    {
        android.accessibilityservice.AccessibilityService$SoftKeyboardController r0;
        android.accessibilityservice.AccessibilityService$SoftKeyboardController$OnShowModeChangedListener r1;

        r0 := @this: android.accessibilityservice.AccessibilityService$SoftKeyboardController;

        r1 := @parameter0: android.accessibilityservice.AccessibilityService$SoftKeyboardController$OnShowModeChangedListener;

        virtualinvoke r0.<android.accessibilityservice.AccessibilityService$SoftKeyboardController: void addOnShowModeChangedListener(android.accessibilityservice.AccessibilityService$SoftKeyboardController$OnShowModeChangedListener,android.os.Handler)>(r1, null);

        return;
    }

    public void addOnShowModeChangedListener(android.accessibilityservice.AccessibilityService$SoftKeyboardController$OnShowModeChangedListener, android.os.Handler)
    {
        android.accessibilityservice.AccessibilityService$SoftKeyboardController r0;
        android.os.Handler r1;
        java.lang.Object r2;
        android.util.ArrayMap r3, $r4, $r5, $r6;
        boolean z0;
        java.lang.Throwable $r8;
        android.accessibilityservice.AccessibilityService$SoftKeyboardController$OnShowModeChangedListener r9;

        r0 := @this: android.accessibilityservice.AccessibilityService$SoftKeyboardController;

        r9 := @parameter0: android.accessibilityservice.AccessibilityService$SoftKeyboardController$OnShowModeChangedListener;

        r1 := @parameter1: android.os.Handler;

        r2 = r0.<android.accessibilityservice.AccessibilityService$SoftKeyboardController: java.lang.Object mLock>;

        entermonitor r2;

     label1:
        $r4 = r0.<android.accessibilityservice.AccessibilityService$SoftKeyboardController: android.util.ArrayMap mListeners>;

        if $r4 != null goto label2;

        r3 = new android.util.ArrayMap;

        specialinvoke r3.<android.util.ArrayMap: void <init>()>();

        r0.<android.accessibilityservice.AccessibilityService$SoftKeyboardController: android.util.ArrayMap mListeners> = r3;

     label2:
        $r5 = r0.<android.accessibilityservice.AccessibilityService$SoftKeyboardController: android.util.ArrayMap mListeners>;

        z0 = virtualinvoke $r5.<android.util.ArrayMap: boolean isEmpty()>();

        $r6 = r0.<android.accessibilityservice.AccessibilityService$SoftKeyboardController: android.util.ArrayMap mListeners>;

        virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r9, r1);

     label3:
        if z0 == 0 goto label5;

     label4:
        specialinvoke r0.<android.accessibilityservice.AccessibilityService$SoftKeyboardController: void setSoftKeyboardCallbackEnabled(boolean)>(1);

     label5:
        exitmonitor r2;

     label6:
        return;

     label7:
        $r8 := @caughtexception;

     label8:
        exitmonitor r2;

     label9:
        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    void dispatchSoftKeyboardShowModeChanged(int)
    {
        android.accessibilityservice.AccessibilityService$SoftKeyboardController r0;
        int i0, i1, i3;
        android.accessibilityservice.AccessibilityService$SoftKeyboardController$OnShowModeChangedListener r1;
        android.util.ArrayMap $r2, $r3, $r4, r10;
        boolean $z0;
        java.lang.Object $r5, $r6, r9;
        android.accessibilityservice.AccessibilityService$SoftKeyboardController$1 $r7;
        java.lang.Throwable $r8;
        android.os.Handler r11;

        r0 := @this: android.accessibilityservice.AccessibilityService$SoftKeyboardController;

        i0 := @parameter0: int;

        r9 = r0.<android.accessibilityservice.AccessibilityService$SoftKeyboardController: java.lang.Object mLock>;

        entermonitor r9;

     label01:
        $r2 = r0.<android.accessibilityservice.AccessibilityService$SoftKeyboardController: android.util.ArrayMap mListeners>;

        if $r2 == null goto label09;

        $r3 = r0.<android.accessibilityservice.AccessibilityService$SoftKeyboardController: android.util.ArrayMap mListeners>;

        $z0 = virtualinvoke $r3.<android.util.ArrayMap: boolean isEmpty()>();

        if $z0 == 0 goto label03;

     label02:
        goto label09;

     label03:
        r10 = new android.util.ArrayMap;

        $r4 = r0.<android.accessibilityservice.AccessibilityService$SoftKeyboardController: android.util.ArrayMap mListeners>;

        specialinvoke r10.<android.util.ArrayMap: void <init>(android.util.ArrayMap)>($r4);

        exitmonitor r9;

     label04:
        i3 = 0;

        i1 = virtualinvoke r10.<android.util.ArrayMap: int size()>();

     label05:
        if i3 >= i1 goto label08;

        $r5 = virtualinvoke r10.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i3);

        r1 = (android.accessibilityservice.AccessibilityService$SoftKeyboardController$OnShowModeChangedListener) $r5;

        $r6 = virtualinvoke r10.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i3);

        r11 = (android.os.Handler) $r6;

        if r11 == null goto label06;

        $r7 = new android.accessibilityservice.AccessibilityService$SoftKeyboardController$1;

        specialinvoke $r7.<android.accessibilityservice.AccessibilityService$SoftKeyboardController$1: void <init>(android.accessibilityservice.AccessibilityService$SoftKeyboardController,android.accessibilityservice.AccessibilityService$SoftKeyboardController$OnShowModeChangedListener,int)>(r0, r1, i0);

        virtualinvoke r11.<android.os.Handler: boolean post(java.lang.Runnable)>($r7);

        goto label07;

     label06:
        interfaceinvoke r1.<android.accessibilityservice.AccessibilityService$SoftKeyboardController$OnShowModeChangedListener: void onShowModeChanged(android.accessibilityservice.AccessibilityService$SoftKeyboardController,int)>(r0, i0);

     label07:
        i3 = i3 + 1;

        goto label05;

     label08:
        return;

     label09:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AccessibilityService", "Received soft keyboard show mode changed callback with no listeners registered!");

        specialinvoke r0.<android.accessibilityservice.AccessibilityService$SoftKeyboardController: void setSoftKeyboardCallbackEnabled(boolean)>(0);

        exitmonitor r9;

     label10:
        return;

     label11:
        $r8 := @caughtexception;

     label12:
        exitmonitor r9;

     label13:
        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    public int getShowMode()
    {
        android.accessibilityservice.AccessibilityService$SoftKeyboardController r0;
        int i0, $i1;
        android.accessibilityservice.AccessibilityService $r2;
        android.os.RemoteException $r3;
        android.accessibilityservice.IAccessibilityServiceConnection r5;

        r0 := @this: android.accessibilityservice.AccessibilityService$SoftKeyboardController;

        staticinvoke <android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityInteractionClient getInstance()>();

        $r2 = r0.<android.accessibilityservice.AccessibilityService$SoftKeyboardController: android.accessibilityservice.AccessibilityService mService>;

        $i1 = staticinvoke <android.accessibilityservice.AccessibilityService: int access$000(android.accessibilityservice.AccessibilityService)>($r2);

        r5 = staticinvoke <android.view.accessibility.AccessibilityInteractionClient: android.accessibilityservice.IAccessibilityServiceConnection getConnection(int)>($i1);

        if r5 == null goto label4;

     label1:
        i0 = interfaceinvoke r5.<android.accessibilityservice.IAccessibilityServiceConnection: int getSoftKeyboardShowMode()>();

     label2:
        return i0;

     label3:
        $r3 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("AccessibilityService", "Failed to set soft keyboard behavior", $r3);

        virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

     label4:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    void onServiceConnected()
    {
        android.accessibilityservice.AccessibilityService$SoftKeyboardController r0;
        java.lang.Object r1;
        android.util.ArrayMap $r3, $r4;
        boolean $z0;
        java.lang.Throwable $r5;

        r0 := @this: android.accessibilityservice.AccessibilityService$SoftKeyboardController;

        r1 = r0.<android.accessibilityservice.AccessibilityService$SoftKeyboardController: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<android.accessibilityservice.AccessibilityService$SoftKeyboardController: android.util.ArrayMap mListeners>;

        if $r3 == null goto label2;

        $r4 = r0.<android.accessibilityservice.AccessibilityService$SoftKeyboardController: android.util.ArrayMap mListeners>;

        $z0 = virtualinvoke $r4.<android.util.ArrayMap: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        specialinvoke r0.<android.accessibilityservice.AccessibilityService$SoftKeyboardController: void setSoftKeyboardCallbackEnabled(boolean)>(1);

     label2:
        exitmonitor r1;

     label3:
        return;

     label4:
        $r5 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public boolean removeOnShowModeChangedListener(android.accessibilityservice.AccessibilityService$SoftKeyboardController$OnShowModeChangedListener)
    {
        android.accessibilityservice.AccessibilityService$SoftKeyboardController r0;
        java.lang.Object r1;
        int i0;
        android.util.ArrayMap $r2, $r3, $r4, $r5;
        boolean $z0, z1;
        java.lang.Throwable $r7;
        android.accessibilityservice.AccessibilityService$SoftKeyboardController$OnShowModeChangedListener r8;

        r0 := @this: android.accessibilityservice.AccessibilityService$SoftKeyboardController;

        r8 := @parameter0: android.accessibilityservice.AccessibilityService$SoftKeyboardController$OnShowModeChangedListener;

        $r2 = r0.<android.accessibilityservice.AccessibilityService$SoftKeyboardController: android.util.ArrayMap mListeners>;

        if $r2 != null goto label01;

        return 0;

     label01:
        r1 = r0.<android.accessibilityservice.AccessibilityService$SoftKeyboardController: java.lang.Object mLock>;

        entermonitor r1;

     label02:
        $r3 = r0.<android.accessibilityservice.AccessibilityService$SoftKeyboardController: android.util.ArrayMap mListeners>;

        i0 = virtualinvoke $r3.<android.util.ArrayMap: int indexOfKey(java.lang.Object)>(r8);

     label03:
        if i0 < 0 goto label04;

        z1 = 1;

        goto label05;

     label04:
        z1 = 0;

     label05:
        if z1 == 0 goto label07;

     label06:
        $r5 = r0.<android.accessibilityservice.AccessibilityService$SoftKeyboardController: android.util.ArrayMap mListeners>;

        virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object removeAt(int)>(i0);

     label07:
        if z1 == 0 goto label09;

     label08:
        $r4 = r0.<android.accessibilityservice.AccessibilityService$SoftKeyboardController: android.util.ArrayMap mListeners>;

        $z0 = virtualinvoke $r4.<android.util.ArrayMap: boolean isEmpty()>();

        if $z0 == 0 goto label09;

        specialinvoke r0.<android.accessibilityservice.AccessibilityService$SoftKeyboardController: void setSoftKeyboardCallbackEnabled(boolean)>(0);

     label09:
        exitmonitor r1;

     label10:
        return z1;

     label11:
        $r7 := @caughtexception;

     label12:
        exitmonitor r1;

     label13:
        throw $r7;

        catch java.lang.Throwable from label02 to label03 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label08 to label09 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    public boolean setShowMode(int)
    {
        android.accessibilityservice.AccessibilityService$SoftKeyboardController r0;
        int i0, $i1;
        boolean z0;
        android.accessibilityservice.AccessibilityService $r2;
        android.os.RemoteException $r3;
        android.accessibilityservice.IAccessibilityServiceConnection r5;

        r0 := @this: android.accessibilityservice.AccessibilityService$SoftKeyboardController;

        i0 := @parameter0: int;

        staticinvoke <android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityInteractionClient getInstance()>();

        $r2 = r0.<android.accessibilityservice.AccessibilityService$SoftKeyboardController: android.accessibilityservice.AccessibilityService mService>;

        $i1 = staticinvoke <android.accessibilityservice.AccessibilityService: int access$000(android.accessibilityservice.AccessibilityService)>($r2);

        r5 = staticinvoke <android.view.accessibility.AccessibilityInteractionClient: android.accessibilityservice.IAccessibilityServiceConnection getConnection(int)>($i1);

        if r5 == null goto label4;

     label1:
        z0 = interfaceinvoke r5.<android.accessibilityservice.IAccessibilityServiceConnection: boolean setSoftKeyboardShowMode(int)>(i0);

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("AccessibilityService", "Failed to set soft keyboard behavior", $r3);

        virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

     label4:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean switchToInputMethod(java.lang.String)
    {
        android.accessibilityservice.AccessibilityService$SoftKeyboardController r0;
        android.accessibilityservice.IAccessibilityServiceConnection r1;
        boolean z0;
        android.accessibilityservice.AccessibilityService $r3;
        int $i0;
        android.os.RemoteException $r4;
        java.lang.RuntimeException $r5;
        java.lang.String r6;

        r0 := @this: android.accessibilityservice.AccessibilityService$SoftKeyboardController;

        r6 := @parameter0: java.lang.String;

        staticinvoke <android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityInteractionClient getInstance()>();

        $r3 = r0.<android.accessibilityservice.AccessibilityService$SoftKeyboardController: android.accessibilityservice.AccessibilityService mService>;

        $i0 = staticinvoke <android.accessibilityservice.AccessibilityService: int access$000(android.accessibilityservice.AccessibilityService)>($r3);

        r1 = staticinvoke <android.view.accessibility.AccessibilityInteractionClient: android.accessibilityservice.IAccessibilityServiceConnection getConnection(int)>($i0);

        if r1 == null goto label4;

     label1:
        z0 = interfaceinvoke r1.<android.accessibilityservice.IAccessibilityServiceConnection: boolean switchToInputMethod(java.lang.String)>(r6);

     label2:
        return z0;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r4);

        throw $r5;

     label4:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }
}
