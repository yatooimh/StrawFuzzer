public final class android.accessibilityservice.FingerprintGestureController extends java.lang.Object
{
    public static final int FINGERPRINT_GESTURE_SWIPE_DOWN;
    public static final int FINGERPRINT_GESTURE_SWIPE_LEFT;
    public static final int FINGERPRINT_GESTURE_SWIPE_RIGHT;
    public static final int FINGERPRINT_GESTURE_SWIPE_UP;
    private static final java.lang.String LOG_TAG;
    private final android.accessibilityservice.IAccessibilityServiceConnection mAccessibilityServiceConnection;
    private final android.util.ArrayMap mCallbackHandlerMap;
    private final java.lang.Object mLock;

    public void <init>(android.accessibilityservice.IAccessibilityServiceConnection)
    {
        android.accessibilityservice.FingerprintGestureController r0;
        android.accessibilityservice.IAccessibilityServiceConnection r1;
        java.lang.Object $r2;
        android.util.ArrayMap $r3;

        r0 := @this: android.accessibilityservice.FingerprintGestureController;

        r1 := @parameter0: android.accessibilityservice.IAccessibilityServiceConnection;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<android.accessibilityservice.FingerprintGestureController: java.lang.Object mLock> = $r2;

        $r3 = new android.util.ArrayMap;

        specialinvoke $r3.<android.util.ArrayMap: void <init>(int)>(1);

        r0.<android.accessibilityservice.FingerprintGestureController: android.util.ArrayMap mCallbackHandlerMap> = $r3;

        r0.<android.accessibilityservice.FingerprintGestureController: android.accessibilityservice.IAccessibilityServiceConnection mAccessibilityServiceConnection> = r1;

        return;
    }

    static void lambda$onGesture$1(android.accessibilityservice.FingerprintGestureController$FingerprintGestureCallback, int)
    {
        android.accessibilityservice.FingerprintGestureController$FingerprintGestureCallback r0;
        int i0;

        r0 := @parameter0: android.accessibilityservice.FingerprintGestureController$FingerprintGestureCallback;

        i0 := @parameter1: int;

        virtualinvoke r0.<android.accessibilityservice.FingerprintGestureController$FingerprintGestureCallback: void onGestureDetected(int)>(i0);

        return;
    }

    static void lambda$onGestureDetectionActiveChanged$0(android.accessibilityservice.FingerprintGestureController$FingerprintGestureCallback, boolean)
    {
        android.accessibilityservice.FingerprintGestureController$FingerprintGestureCallback r0;
        boolean z0;

        r0 := @parameter0: android.accessibilityservice.FingerprintGestureController$FingerprintGestureCallback;

        z0 := @parameter1: boolean;

        virtualinvoke r0.<android.accessibilityservice.FingerprintGestureController$FingerprintGestureCallback: void onGestureDetectionAvailabilityChanged(boolean)>(z0);

        return;
    }

    public boolean isGestureDetectionAvailable()
    {
        android.accessibilityservice.FingerprintGestureController r0;
        boolean z0;
        android.accessibilityservice.IAccessibilityServiceConnection $r2;
        android.os.RemoteException $r3;

        r0 := @this: android.accessibilityservice.FingerprintGestureController;

     label1:
        $r2 = r0.<android.accessibilityservice.FingerprintGestureController: android.accessibilityservice.IAccessibilityServiceConnection mAccessibilityServiceConnection>;

        z0 = interfaceinvoke $r2.<android.accessibilityservice.IAccessibilityServiceConnection: boolean isFingerprintGestureDetectionAvailable()>();

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("FingerprintGestureController", "Failed to check if fingerprint gestures are active", $r3);

        virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void onGesture(int)
    {
        android.accessibilityservice.FingerprintGestureController r0;
        int i0, i1, i2;
        android.accessibilityservice.FingerprintGestureController$FingerprintGestureCallback r1;
        android.util.ArrayMap $r2, r8;
        java.lang.Object $r3, $r4, r7;
        android.accessibilityservice._$$Lambda$FingerprintGestureController$BQjrQQom4K3C98FNiI0fi7SvHfY $r5;
        java.lang.Throwable $r6;
        android.os.Handler r9;

        r0 := @this: android.accessibilityservice.FingerprintGestureController;

        i0 := @parameter0: int;

        r7 = r0.<android.accessibilityservice.FingerprintGestureController: java.lang.Object mLock>;

        entermonitor r7;

     label1:
        r8 = new android.util.ArrayMap;

        $r2 = r0.<android.accessibilityservice.FingerprintGestureController: android.util.ArrayMap mCallbackHandlerMap>;

        specialinvoke r8.<android.util.ArrayMap: void <init>(android.util.ArrayMap)>($r2);

        exitmonitor r7;

     label2:
        i1 = virtualinvoke r8.<android.util.ArrayMap: int size()>();

        i2 = 0;

     label3:
        if i2 >= i1 goto label6;

        $r3 = virtualinvoke r8.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i2);

        r1 = (android.accessibilityservice.FingerprintGestureController$FingerprintGestureCallback) $r3;

        $r4 = virtualinvoke r8.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i2);

        r9 = (android.os.Handler) $r4;

        if r9 == null goto label4;

        $r5 = new android.accessibilityservice._$$Lambda$FingerprintGestureController$BQjrQQom4K3C98FNiI0fi7SvHfY;

        specialinvoke $r5.<android.accessibilityservice._$$Lambda$FingerprintGestureController$BQjrQQom4K3C98FNiI0fi7SvHfY: void <init>(android.accessibilityservice.FingerprintGestureController$FingerprintGestureCallback,int)>(r1, i0);

        virtualinvoke r9.<android.os.Handler: boolean post(java.lang.Runnable)>($r5);

        goto label5;

     label4:
        virtualinvoke r1.<android.accessibilityservice.FingerprintGestureController$FingerprintGestureCallback: void onGestureDetected(int)>(i0);

     label5:
        i2 = i2 + 1;

        goto label3;

     label6:
        return;

     label7:
        $r6 := @caughtexception;

     label8:
        exitmonitor r7;

     label9:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public void onGestureDetectionActiveChanged(boolean)
    {
        android.accessibilityservice.FingerprintGestureController r0;
        boolean z0;
        int i0, i1;
        android.accessibilityservice.FingerprintGestureController$FingerprintGestureCallback r1;
        android.util.ArrayMap $r2, r8;
        java.lang.Object $r3, $r4, r7;
        android.accessibilityservice._$$Lambda$FingerprintGestureController$M_ZApqp96G6ZF2WdWrGDJ8Qsfck $r5;
        java.lang.Throwable $r6;
        android.os.Handler r9;

        r0 := @this: android.accessibilityservice.FingerprintGestureController;

        z0 := @parameter0: boolean;

        r7 = r0.<android.accessibilityservice.FingerprintGestureController: java.lang.Object mLock>;

        entermonitor r7;

     label1:
        r8 = new android.util.ArrayMap;

        $r2 = r0.<android.accessibilityservice.FingerprintGestureController: android.util.ArrayMap mCallbackHandlerMap>;

        specialinvoke r8.<android.util.ArrayMap: void <init>(android.util.ArrayMap)>($r2);

        exitmonitor r7;

     label2:
        i0 = virtualinvoke r8.<android.util.ArrayMap: int size()>();

        i1 = 0;

     label3:
        if i1 >= i0 goto label6;

        $r3 = virtualinvoke r8.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i1);

        r1 = (android.accessibilityservice.FingerprintGestureController$FingerprintGestureCallback) $r3;

        $r4 = virtualinvoke r8.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i1);

        r9 = (android.os.Handler) $r4;

        if r9 == null goto label4;

        $r5 = new android.accessibilityservice._$$Lambda$FingerprintGestureController$M_ZApqp96G6ZF2WdWrGDJ8Qsfck;

        specialinvoke $r5.<android.accessibilityservice._$$Lambda$FingerprintGestureController$M_ZApqp96G6ZF2WdWrGDJ8Qsfck: void <init>(android.accessibilityservice.FingerprintGestureController$FingerprintGestureCallback,boolean)>(r1, z0);

        virtualinvoke r9.<android.os.Handler: boolean post(java.lang.Runnable)>($r5);

        goto label5;

     label4:
        virtualinvoke r1.<android.accessibilityservice.FingerprintGestureController$FingerprintGestureCallback: void onGestureDetectionAvailabilityChanged(boolean)>(z0);

     label5:
        i1 = i1 + 1;

        goto label3;

     label6:
        return;

     label7:
        $r6 := @caughtexception;

     label8:
        exitmonitor r7;

     label9:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public void registerFingerprintGestureCallback(android.accessibilityservice.FingerprintGestureController$FingerprintGestureCallback, android.os.Handler)
    {
        android.accessibilityservice.FingerprintGestureController r0;
        android.os.Handler r1;
        java.lang.Object r2;
        android.util.ArrayMap $r3;
        java.lang.Throwable $r5;
        android.accessibilityservice.FingerprintGestureController$FingerprintGestureCallback r6;

        r0 := @this: android.accessibilityservice.FingerprintGestureController;

        r6 := @parameter0: android.accessibilityservice.FingerprintGestureController$FingerprintGestureCallback;

        r1 := @parameter1: android.os.Handler;

        r2 = r0.<android.accessibilityservice.FingerprintGestureController: java.lang.Object mLock>;

        entermonitor r2;

     label1:
        $r3 = r0.<android.accessibilityservice.FingerprintGestureController: android.util.ArrayMap mCallbackHandlerMap>;

        virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, r1);

        exitmonitor r2;

     label2:
        return;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r2;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void unregisterFingerprintGestureCallback(android.accessibilityservice.FingerprintGestureController$FingerprintGestureCallback)
    {
        android.accessibilityservice.FingerprintGestureController r0;
        java.lang.Object r1;
        android.util.ArrayMap $r2;
        java.lang.Throwable $r4;
        android.accessibilityservice.FingerprintGestureController$FingerprintGestureCallback r5;

        r0 := @this: android.accessibilityservice.FingerprintGestureController;

        r5 := @parameter0: android.accessibilityservice.FingerprintGestureController$FingerprintGestureCallback;

        r1 = r0.<android.accessibilityservice.FingerprintGestureController: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<android.accessibilityservice.FingerprintGestureController: android.util.ArrayMap mCallbackHandlerMap>;

        virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r5);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public static void <clinit>()
    {
        <android.accessibilityservice.FingerprintGestureController: java.lang.String LOG_TAG> = "FingerprintGestureController";

        <android.accessibilityservice.FingerprintGestureController: int FINGERPRINT_GESTURE_SWIPE_UP> = 4;

        <android.accessibilityservice.FingerprintGestureController: int FINGERPRINT_GESTURE_SWIPE_RIGHT> = 1;

        <android.accessibilityservice.FingerprintGestureController: int FINGERPRINT_GESTURE_SWIPE_LEFT> = 2;

        <android.accessibilityservice.FingerprintGestureController: int FINGERPRINT_GESTURE_SWIPE_DOWN> = 8;

        return;
    }
}
