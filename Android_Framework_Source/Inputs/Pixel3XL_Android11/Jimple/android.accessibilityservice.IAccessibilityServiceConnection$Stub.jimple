public abstract class android.accessibilityservice.IAccessibilityServiceConnection$Stub extends android.os.Binder implements android.accessibilityservice.IAccessibilityServiceConnection
{
    private static final java.lang.String DESCRIPTOR;
    static final int TRANSACTION_disableSelf;
    static final int TRANSACTION_dispatchGesture;
    static final int TRANSACTION_findAccessibilityNodeInfoByAccessibilityId;
    static final int TRANSACTION_findAccessibilityNodeInfosByText;
    static final int TRANSACTION_findAccessibilityNodeInfosByViewId;
    static final int TRANSACTION_findFocus;
    static final int TRANSACTION_focusSearch;
    static final int TRANSACTION_getMagnificationCenterX;
    static final int TRANSACTION_getMagnificationCenterY;
    static final int TRANSACTION_getMagnificationRegion;
    static final int TRANSACTION_getMagnificationScale;
    static final int TRANSACTION_getOverlayWindowToken;
    static final int TRANSACTION_getServiceInfo;
    static final int TRANSACTION_getSoftKeyboardShowMode;
    static final int TRANSACTION_getSystemActions;
    static final int TRANSACTION_getWindow;
    static final int TRANSACTION_getWindowIdForLeashToken;
    static final int TRANSACTION_getWindows;
    static final int TRANSACTION_isAccessibilityButtonAvailable;
    static final int TRANSACTION_isFingerprintGestureDetectionAvailable;
    static final int TRANSACTION_performAccessibilityAction;
    static final int TRANSACTION_performGlobalAction;
    static final int TRANSACTION_resetMagnification;
    static final int TRANSACTION_sendGesture;
    static final int TRANSACTION_setGestureDetectionPassthroughRegion;
    static final int TRANSACTION_setMagnificationCallbackEnabled;
    static final int TRANSACTION_setMagnificationScaleAndCenter;
    static final int TRANSACTION_setOnKeyEventResult;
    static final int TRANSACTION_setServiceInfo;
    static final int TRANSACTION_setSoftKeyboardCallbackEnabled;
    static final int TRANSACTION_setSoftKeyboardShowMode;
    static final int TRANSACTION_setTouchExplorationPassthroughRegion;
    static final int TRANSACTION_switchToInputMethod;
    static final int TRANSACTION_takeScreenshot;

    public void <init>()
    {
        android.accessibilityservice.IAccessibilityServiceConnection$Stub r0;

        r0 := @this: android.accessibilityservice.IAccessibilityServiceConnection$Stub;

        specialinvoke r0.<android.os.Binder: void <init>()>();

        virtualinvoke r0.<android.accessibilityservice.IAccessibilityServiceConnection$Stub: void attachInterface(android.os.IInterface,java.lang.String)>(r0, "android.accessibilityservice.IAccessibilityServiceConnection");

        return;
    }

    public static android.accessibilityservice.IAccessibilityServiceConnection asInterface(android.os.IBinder)
    {
        android.os.IBinder r0;
        android.os.IInterface r1;
        android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy $r2;
        boolean $z0;
        android.accessibilityservice.IAccessibilityServiceConnection $r3;

        r0 := @parameter0: android.os.IBinder;

        if r0 != null goto label1;

        return null;

     label1:
        r1 = interfaceinvoke r0.<android.os.IBinder: android.os.IInterface queryLocalInterface(java.lang.String)>("android.accessibilityservice.IAccessibilityServiceConnection");

        if r1 == null goto label2;

        $z0 = r1 instanceof android.accessibilityservice.IAccessibilityServiceConnection;

        if $z0 == 0 goto label2;

        $r3 = (android.accessibilityservice.IAccessibilityServiceConnection) r1;

        return $r3;

     label2:
        $r2 = new android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy;

        specialinvoke $r2.<android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy: void <init>(android.os.IBinder)>(r0);

        return $r2;
    }

    public static android.accessibilityservice.IAccessibilityServiceConnection getDefaultImpl()
    {
        android.accessibilityservice.IAccessibilityServiceConnection $r0;

        $r0 = <android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy: android.accessibilityservice.IAccessibilityServiceConnection sDefaultImpl>;

        return $r0;
    }

    public static java.lang.String getDefaultTransactionName(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label35;
            case 2: goto label34;
            case 3: goto label33;
            case 4: goto label32;
            case 5: goto label31;
            case 6: goto label30;
            case 7: goto label29;
            case 8: goto label28;
            case 9: goto label27;
            case 10: goto label26;
            case 11: goto label25;
            case 12: goto label24;
            case 13: goto label23;
            case 14: goto label22;
            case 15: goto label21;
            case 16: goto label20;
            case 17: goto label19;
            case 18: goto label18;
            case 19: goto label17;
            case 20: goto label16;
            case 21: goto label15;
            case 22: goto label14;
            case 23: goto label13;
            case 24: goto label12;
            case 25: goto label11;
            case 26: goto label10;
            case 27: goto label09;
            case 28: goto label08;
            case 29: goto label07;
            case 30: goto label06;
            case 31: goto label05;
            case 32: goto label04;
            case 33: goto label03;
            case 34: goto label02;
            default: goto label01;
        };

     label01:
        return null;

     label02:
        return "setTouchExplorationPassthroughRegion";

     label03:
        return "setGestureDetectionPassthroughRegion";

     label04:
        return "takeScreenshot";

     label05:
        return "getWindowIdForLeashToken";

     label06:
        return "getOverlayWindowToken";

     label07:
        return "isFingerprintGestureDetectionAvailable";

     label08:
        return "dispatchGesture";

     label09:
        return "sendGesture";

     label10:
        return "isAccessibilityButtonAvailable";

     label11:
        return "switchToInputMethod";

     label12:
        return "setSoftKeyboardCallbackEnabled";

     label13:
        return "getSoftKeyboardShowMode";

     label14:
        return "setSoftKeyboardShowMode";

     label15:
        return "setMagnificationCallbackEnabled";

     label16:
        return "setMagnificationScaleAndCenter";

     label17:
        return "resetMagnification";

     label18:
        return "getMagnificationRegion";

     label19:
        return "getMagnificationCenterY";

     label20:
        return "getMagnificationCenterX";

     label21:
        return "getMagnificationScale";

     label22:
        return "setOnKeyEventResult";

     label23:
        return "disableSelf";

     label24:
        return "getSystemActions";

     label25:
        return "performGlobalAction";

     label26:
        return "getServiceInfo";

     label27:
        return "getWindows";

     label28:
        return "getWindow";

     label29:
        return "performAccessibilityAction";

     label30:
        return "focusSearch";

     label31:
        return "findFocus";

     label32:
        return "findAccessibilityNodeInfosByViewId";

     label33:
        return "findAccessibilityNodeInfosByText";

     label34:
        return "findAccessibilityNodeInfoByAccessibilityId";

     label35:
        return "setServiceInfo";
    }

    public static boolean setDefaultImpl(android.accessibilityservice.IAccessibilityServiceConnection)
    {
        android.accessibilityservice.IAccessibilityServiceConnection r0, $r1;
        java.lang.IllegalStateException $r2;

        r0 := @parameter0: android.accessibilityservice.IAccessibilityServiceConnection;

        $r1 = <android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy: android.accessibilityservice.IAccessibilityServiceConnection sDefaultImpl>;

        if $r1 != null goto label2;

        if r0 == null goto label1;

        <android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy: android.accessibilityservice.IAccessibilityServiceConnection sDefaultImpl> = r0;

        return 1;

     label1:
        return 0;

     label2:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("setDefaultImpl() called twice");

        throw $r2;
    }

    public android.os.IBinder asBinder()
    {
        android.accessibilityservice.IAccessibilityServiceConnection$Stub r0;

        r0 := @this: android.accessibilityservice.IAccessibilityServiceConnection$Stub;

        return r0;
    }

    public java.lang.String getTransactionName(int)
    {
        android.accessibilityservice.IAccessibilityServiceConnection$Stub r0;
        int i0;
        java.lang.String $r1;

        r0 := @this: android.accessibilityservice.IAccessibilityServiceConnection$Stub;

        i0 := @parameter0: int;

        $r1 = staticinvoke <android.accessibilityservice.IAccessibilityServiceConnection$Stub: java.lang.String getDefaultTransactionName(int)>(i0);

        return $r1;
    }

    public boolean onTransact(int, android.os.Parcel, android.os.Parcel, int) throws android.os.RemoteException
    {
        android.accessibilityservice.IAccessibilityServiceConnection$Stub r0;
        android.os.Parcel r1, r33;
        float f0, f1, f2, f3, f4, f5;
        int i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i25, $i27, $i28, $i30, $i32, $i33, $i35, $i37, $i39, $i41, $i43, $i44, i45, i46, i47, i48, i49, i50, i51, i52, i53, i54, i55, i56, i57, i59, i60, i61, i63, i64, i65, i66, i67, i68, i69, i70;
        long l1, $l24, $l26, $l29, $l31, $l34, $l36, $l38, $l40, $l42, l58, l62;
        android.os.Parcelable$Creator $r2, $r4, $r6, $r16, $r29, $r31;
        java.lang.Object $r3, $r5, $r7, $r10, $r12, $r17, $r30, $r32;
        android.os.IBinder $r8, $r14, $r18, $r20, $r23, $r26, $r28, r37;
        android.os.Parcelable$ClassLoaderCreator $r9, $r11;
        java.lang.String $r13, $r22, $r25;
        android.view.accessibility.IAccessibilityInteractionConnectionCallback $r15, $r19, $r21, $r24, $r27, r50;
        boolean $z3, z4, z5, z6, z7, z8, z9, z10, z11, z12, z13, z14, z15, z16;
        android.graphics.Region r34, r35, r40;
        android.os.RemoteCallback r36;
        android.content.pm.ParceledListSlice r38, r39;
        java.util.List r41;
        android.accessibilityservice.AccessibilityServiceInfo r42, r53;
        android.view.accessibility.AccessibilityWindowInfo$WindowListSparseArray r43;
        android.view.accessibility.AccessibilityWindowInfo r44;
        android.os.Bundle r45, r51;
        java.lang.String[] r46, r47, r48, r49, r52;

        r0 := @this: android.accessibilityservice.IAccessibilityServiceConnection$Stub;

        i45 := @parameter0: int;

        r33 := @parameter1: android.os.Parcel;

        r1 := @parameter2: android.os.Parcel;

        i46 := @parameter3: int;

        if i45 == 1598968902 goto label66;

        z4 = 0;

        tableswitch(i45)
        {
            case 1: goto label63;
            case 2: goto label60;
            case 3: goto label59;
            case 4: goto label58;
            case 5: goto label57;
            case 6: goto label56;
            case 7: goto label53;
            case 8: goto label50;
            case 9: goto label47;
            case 10: goto label44;
            case 11: goto label43;
            case 12: goto label42;
            case 13: goto label41;
            case 14: goto label39;
            case 15: goto label38;
            case 16: goto label37;
            case 17: goto label36;
            case 18: goto label33;
            case 19: goto label31;
            case 20: goto label28;
            case 21: goto label26;
            case 22: goto label25;
            case 23: goto label24;
            case 24: goto label22;
            case 25: goto label21;
            case 26: goto label20;
            case 27: goto label17;
            case 28: goto label14;
            case 29: goto label13;
            case 30: goto label12;
            case 31: goto label11;
            case 32: goto label08;
            case 33: goto label05;
            case 34: goto label02;
            default: goto label01;
        };

     label01:
        $z3 = specialinvoke r0.<android.os.Binder: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>(i45, r33, r1, i46);

        return $z3;

     label02:
        virtualinvoke r33.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.accessibilityservice.IAccessibilityServiceConnection");

        i47 = virtualinvoke r33.<android.os.Parcel: int readInt()>();

        $i2 = virtualinvoke r33.<android.os.Parcel: int readInt()>();

        if $i2 == 0 goto label03;

        $r2 = <android.graphics.Region: android.os.Parcelable$Creator CREATOR>;

        $r3 = interfaceinvoke $r2.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r33);

        r34 = (android.graphics.Region) $r3;

        goto label04;

     label03:
        r34 = null;

     label04:
        virtualinvoke r0.<android.accessibilityservice.IAccessibilityServiceConnection$Stub: void setTouchExplorationPassthroughRegion(int,android.graphics.Region)>(i47, r34);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label05:
        virtualinvoke r33.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.accessibilityservice.IAccessibilityServiceConnection");

        i48 = virtualinvoke r33.<android.os.Parcel: int readInt()>();

        $i3 = virtualinvoke r33.<android.os.Parcel: int readInt()>();

        if $i3 == 0 goto label06;

        $r4 = <android.graphics.Region: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r33);

        r35 = (android.graphics.Region) $r5;

        goto label07;

     label06:
        r35 = null;

     label07:
        virtualinvoke r0.<android.accessibilityservice.IAccessibilityServiceConnection$Stub: void setGestureDetectionPassthroughRegion(int,android.graphics.Region)>(i48, r35);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label08:
        virtualinvoke r33.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.accessibilityservice.IAccessibilityServiceConnection");

        i49 = virtualinvoke r33.<android.os.Parcel: int readInt()>();

        $i4 = virtualinvoke r33.<android.os.Parcel: int readInt()>();

        if $i4 == 0 goto label09;

        $r6 = <android.os.RemoteCallback: android.os.Parcelable$Creator CREATOR>;

        $r7 = interfaceinvoke $r6.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r33);

        r36 = (android.os.RemoteCallback) $r7;

        goto label10;

     label09:
        r36 = null;

     label10:
        virtualinvoke r0.<android.accessibilityservice.IAccessibilityServiceConnection$Stub: void takeScreenshot(int,android.os.RemoteCallback)>(i49, r36);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label11:
        virtualinvoke r33.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.accessibilityservice.IAccessibilityServiceConnection");

        $r8 = virtualinvoke r33.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        i50 = virtualinvoke r0.<android.accessibilityservice.IAccessibilityServiceConnection$Stub: int getWindowIdForLeashToken(android.os.IBinder)>($r8);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i50);

        return 1;

     label12:
        virtualinvoke r33.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.accessibilityservice.IAccessibilityServiceConnection");

        $i5 = virtualinvoke r33.<android.os.Parcel: int readInt()>();

        r37 = virtualinvoke r0.<android.accessibilityservice.IAccessibilityServiceConnection$Stub: android.os.IBinder getOverlayWindowToken(int)>($i5);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r37);

        return 1;

     label13:
        virtualinvoke r33.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.accessibilityservice.IAccessibilityServiceConnection");

        z5 = virtualinvoke r0.<android.accessibilityservice.IAccessibilityServiceConnection$Stub: boolean isFingerprintGestureDetectionAvailable()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i63 = (int) z5;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i63);

        return 1;

     label14:
        virtualinvoke r33.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.accessibilityservice.IAccessibilityServiceConnection");

        i51 = virtualinvoke r33.<android.os.Parcel: int readInt()>();

        $i6 = virtualinvoke r33.<android.os.Parcel: int readInt()>();

        if $i6 == 0 goto label15;

        $r9 = <android.content.pm.ParceledListSlice: android.os.Parcelable$ClassLoaderCreator CREATOR>;

        $r10 = interfaceinvoke $r9.<android.os.Parcelable$ClassLoaderCreator: java.lang.Object createFromParcel(android.os.Parcel)>(r33);

        r38 = (android.content.pm.ParceledListSlice) $r10;

        goto label16;

     label15:
        r38 = null;

     label16:
        $i7 = virtualinvoke r33.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.accessibilityservice.IAccessibilityServiceConnection$Stub: void dispatchGesture(int,android.content.pm.ParceledListSlice,int)>(i51, r38, $i7);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label17:
        virtualinvoke r33.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.accessibilityservice.IAccessibilityServiceConnection");

        i52 = virtualinvoke r33.<android.os.Parcel: int readInt()>();

        $i8 = virtualinvoke r33.<android.os.Parcel: int readInt()>();

        if $i8 == 0 goto label18;

        $r11 = <android.content.pm.ParceledListSlice: android.os.Parcelable$ClassLoaderCreator CREATOR>;

        $r12 = interfaceinvoke $r11.<android.os.Parcelable$ClassLoaderCreator: java.lang.Object createFromParcel(android.os.Parcel)>(r33);

        r39 = (android.content.pm.ParceledListSlice) $r12;

        goto label19;

     label18:
        r39 = null;

     label19:
        virtualinvoke r0.<android.accessibilityservice.IAccessibilityServiceConnection$Stub: void sendGesture(int,android.content.pm.ParceledListSlice)>(i52, r39);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label20:
        virtualinvoke r33.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.accessibilityservice.IAccessibilityServiceConnection");

        z6 = virtualinvoke r0.<android.accessibilityservice.IAccessibilityServiceConnection$Stub: boolean isAccessibilityButtonAvailable()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i64 = (int) z6;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i64);

        return 1;

     label21:
        virtualinvoke r33.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.accessibilityservice.IAccessibilityServiceConnection");

        $r13 = virtualinvoke r33.<android.os.Parcel: java.lang.String readString()>();

        z7 = virtualinvoke r0.<android.accessibilityservice.IAccessibilityServiceConnection$Stub: boolean switchToInputMethod(java.lang.String)>($r13);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i65 = (int) z7;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i65);

        return 1;

     label22:
        virtualinvoke r33.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.accessibilityservice.IAccessibilityServiceConnection");

        $i9 = virtualinvoke r33.<android.os.Parcel: int readInt()>();

        if $i9 == 0 goto label23;

        z4 = 1;

     label23:
        virtualinvoke r0.<android.accessibilityservice.IAccessibilityServiceConnection$Stub: void setSoftKeyboardCallbackEnabled(boolean)>(z4);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label24:
        virtualinvoke r33.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.accessibilityservice.IAccessibilityServiceConnection");

        i53 = virtualinvoke r0.<android.accessibilityservice.IAccessibilityServiceConnection$Stub: int getSoftKeyboardShowMode()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i53);

        return 1;

     label25:
        virtualinvoke r33.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.accessibilityservice.IAccessibilityServiceConnection");

        $i10 = virtualinvoke r33.<android.os.Parcel: int readInt()>();

        z8 = virtualinvoke r0.<android.accessibilityservice.IAccessibilityServiceConnection$Stub: boolean setSoftKeyboardShowMode(int)>($i10);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i66 = (int) z8;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i66);

        return 1;

     label26:
        virtualinvoke r33.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.accessibilityservice.IAccessibilityServiceConnection");

        i54 = virtualinvoke r33.<android.os.Parcel: int readInt()>();

        z9 = 0;

        $i11 = virtualinvoke r33.<android.os.Parcel: int readInt()>();

        if $i11 == 0 goto label27;

        z9 = 1;

     label27:
        virtualinvoke r0.<android.accessibilityservice.IAccessibilityServiceConnection$Stub: void setMagnificationCallbackEnabled(int,boolean)>(i54, z9);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label28:
        virtualinvoke r33.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.accessibilityservice.IAccessibilityServiceConnection");

        i55 = virtualinvoke r33.<android.os.Parcel: int readInt()>();

        f0 = virtualinvoke r33.<android.os.Parcel: float readFloat()>();

        f1 = virtualinvoke r33.<android.os.Parcel: float readFloat()>();

        f2 = virtualinvoke r33.<android.os.Parcel: float readFloat()>();

        $i12 = virtualinvoke r33.<android.os.Parcel: int readInt()>();

        if $i12 == 0 goto label29;

        z10 = 1;

        goto label30;

     label29:
        z10 = 0;

     label30:
        z11 = virtualinvoke r0.<android.accessibilityservice.IAccessibilityServiceConnection$Stub: boolean setMagnificationScaleAndCenter(int,float,float,float,boolean)>(i55, f0, f1, f2, z10);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i67 = (int) z11;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i67);

        return 1;

     label31:
        virtualinvoke r33.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.accessibilityservice.IAccessibilityServiceConnection");

        i56 = virtualinvoke r33.<android.os.Parcel: int readInt()>();

        z12 = 0;

        $i13 = virtualinvoke r33.<android.os.Parcel: int readInt()>();

        if $i13 == 0 goto label32;

        z12 = 1;

     label32:
        z13 = virtualinvoke r0.<android.accessibilityservice.IAccessibilityServiceConnection$Stub: boolean resetMagnification(int,boolean)>(i56, z12);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i68 = (int) z13;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i68);

        return 1;

     label33:
        virtualinvoke r33.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.accessibilityservice.IAccessibilityServiceConnection");

        $i14 = virtualinvoke r33.<android.os.Parcel: int readInt()>();

        r40 = virtualinvoke r0.<android.accessibilityservice.IAccessibilityServiceConnection$Stub: android.graphics.Region getMagnificationRegion(int)>($i14);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        if r40 == null goto label34;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r40.<android.graphics.Region: void writeToParcel(android.os.Parcel,int)>(r1, 1);

        goto label35;

     label34:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label35:
        return 1;

     label36:
        virtualinvoke r33.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.accessibilityservice.IAccessibilityServiceConnection");

        $i15 = virtualinvoke r33.<android.os.Parcel: int readInt()>();

        f3 = virtualinvoke r0.<android.accessibilityservice.IAccessibilityServiceConnection$Stub: float getMagnificationCenterY(int)>($i15);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeFloat(float)>(f3);

        return 1;

     label37:
        virtualinvoke r33.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.accessibilityservice.IAccessibilityServiceConnection");

        $i16 = virtualinvoke r33.<android.os.Parcel: int readInt()>();

        f4 = virtualinvoke r0.<android.accessibilityservice.IAccessibilityServiceConnection$Stub: float getMagnificationCenterX(int)>($i16);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeFloat(float)>(f4);

        return 1;

     label38:
        virtualinvoke r33.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.accessibilityservice.IAccessibilityServiceConnection");

        $i17 = virtualinvoke r33.<android.os.Parcel: int readInt()>();

        f5 = virtualinvoke r0.<android.accessibilityservice.IAccessibilityServiceConnection$Stub: float getMagnificationScale(int)>($i17);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeFloat(float)>(f5);

        return 1;

     label39:
        virtualinvoke r33.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.accessibilityservice.IAccessibilityServiceConnection");

        z14 = 0;

        $i18 = virtualinvoke r33.<android.os.Parcel: int readInt()>();

        if $i18 == 0 goto label40;

        z14 = 1;

     label40:
        $i19 = virtualinvoke r33.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.accessibilityservice.IAccessibilityServiceConnection$Stub: void setOnKeyEventResult(boolean,int)>(z14, $i19);

        return 1;

     label41:
        virtualinvoke r33.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.accessibilityservice.IAccessibilityServiceConnection");

        virtualinvoke r0.<android.accessibilityservice.IAccessibilityServiceConnection$Stub: void disableSelf()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label42:
        virtualinvoke r33.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.accessibilityservice.IAccessibilityServiceConnection");

        r41 = virtualinvoke r0.<android.accessibilityservice.IAccessibilityServiceConnection$Stub: java.util.List getSystemActions()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeTypedList(java.util.List)>(r41);

        return 1;

     label43:
        virtualinvoke r33.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.accessibilityservice.IAccessibilityServiceConnection");

        $i20 = virtualinvoke r33.<android.os.Parcel: int readInt()>();

        z15 = virtualinvoke r0.<android.accessibilityservice.IAccessibilityServiceConnection$Stub: boolean performGlobalAction(int)>($i20);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i69 = (int) z15;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i69);

        return 1;

     label44:
        virtualinvoke r33.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.accessibilityservice.IAccessibilityServiceConnection");

        r42 = virtualinvoke r0.<android.accessibilityservice.IAccessibilityServiceConnection$Stub: android.accessibilityservice.AccessibilityServiceInfo getServiceInfo()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        if r42 == null goto label45;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r42.<android.accessibilityservice.AccessibilityServiceInfo: void writeToParcel(android.os.Parcel,int)>(r1, 1);

        goto label46;

     label45:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label46:
        return 1;

     label47:
        virtualinvoke r33.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.accessibilityservice.IAccessibilityServiceConnection");

        r43 = virtualinvoke r0.<android.accessibilityservice.IAccessibilityServiceConnection$Stub: android.view.accessibility.AccessibilityWindowInfo$WindowListSparseArray getWindows()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        if r43 == null goto label48;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r43.<android.view.accessibility.AccessibilityWindowInfo$WindowListSparseArray: void writeToParcel(android.os.Parcel,int)>(r1, 1);

        goto label49;

     label48:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label49:
        return 1;

     label50:
        virtualinvoke r33.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.accessibilityservice.IAccessibilityServiceConnection");

        $i21 = virtualinvoke r33.<android.os.Parcel: int readInt()>();

        r44 = virtualinvoke r0.<android.accessibilityservice.IAccessibilityServiceConnection$Stub: android.view.accessibility.AccessibilityWindowInfo getWindow(int)>($i21);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        if r44 == null goto label51;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r44.<android.view.accessibility.AccessibilityWindowInfo: void writeToParcel(android.os.Parcel,int)>(r1, 1);

        goto label52;

     label51:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label52:
        return 1;

     label53:
        virtualinvoke r33.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.accessibilityservice.IAccessibilityServiceConnection");

        i57 = virtualinvoke r33.<android.os.Parcel: int readInt()>();

        l58 = virtualinvoke r33.<android.os.Parcel: long readLong()>();

        i59 = virtualinvoke r33.<android.os.Parcel: int readInt()>();

        $i22 = virtualinvoke r33.<android.os.Parcel: int readInt()>();

        if $i22 == 0 goto label54;

        $r16 = <android.os.Bundle: android.os.Parcelable$Creator CREATOR>;

        $r17 = interfaceinvoke $r16.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r33);

        r45 = (android.os.Bundle) $r17;

        goto label55;

     label54:
        r45 = null;

     label55:
        $i23 = virtualinvoke r33.<android.os.Parcel: int readInt()>();

        $r14 = virtualinvoke r33.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r15 = staticinvoke <android.view.accessibility.IAccessibilityInteractionConnectionCallback$Stub: android.view.accessibility.IAccessibilityInteractionConnectionCallback asInterface(android.os.IBinder)>($r14);

        $l24 = virtualinvoke r33.<android.os.Parcel: long readLong()>();

        z16 = virtualinvoke r0.<android.accessibilityservice.IAccessibilityServiceConnection$Stub: boolean performAccessibilityAction(int,long,int,android.os.Bundle,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,long)>(i57, l58, i59, r45, $i23, $r15, $l24);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i70 = (int) z16;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i70);

        return 1;

     label56:
        virtualinvoke r33.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.accessibilityservice.IAccessibilityServiceConnection");

        $i25 = virtualinvoke r33.<android.os.Parcel: int readInt()>();

        $l26 = virtualinvoke r33.<android.os.Parcel: long readLong()>();

        $i27 = virtualinvoke r33.<android.os.Parcel: int readInt()>();

        $i28 = virtualinvoke r33.<android.os.Parcel: int readInt()>();

        $r18 = virtualinvoke r33.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r19 = staticinvoke <android.view.accessibility.IAccessibilityInteractionConnectionCallback$Stub: android.view.accessibility.IAccessibilityInteractionConnectionCallback asInterface(android.os.IBinder)>($r18);

        $l29 = virtualinvoke r33.<android.os.Parcel: long readLong()>();

        r46 = virtualinvoke r0.<android.accessibilityservice.IAccessibilityServiceConnection$Stub: java.lang.String[] focusSearch(int,long,int,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,long)>($i25, $l26, $i27, $i28, $r19, $l29);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeStringArray(java.lang.String[])>(r46);

        return 1;

     label57:
        virtualinvoke r33.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.accessibilityservice.IAccessibilityServiceConnection");

        $i30 = virtualinvoke r33.<android.os.Parcel: int readInt()>();

        $l31 = virtualinvoke r33.<android.os.Parcel: long readLong()>();

        $i32 = virtualinvoke r33.<android.os.Parcel: int readInt()>();

        $i33 = virtualinvoke r33.<android.os.Parcel: int readInt()>();

        $r20 = virtualinvoke r33.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r21 = staticinvoke <android.view.accessibility.IAccessibilityInteractionConnectionCallback$Stub: android.view.accessibility.IAccessibilityInteractionConnectionCallback asInterface(android.os.IBinder)>($r20);

        $l34 = virtualinvoke r33.<android.os.Parcel: long readLong()>();

        r47 = virtualinvoke r0.<android.accessibilityservice.IAccessibilityServiceConnection$Stub: java.lang.String[] findFocus(int,long,int,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,long)>($i30, $l31, $i32, $i33, $r21, $l34);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeStringArray(java.lang.String[])>(r47);

        return 1;

     label58:
        virtualinvoke r33.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.accessibilityservice.IAccessibilityServiceConnection");

        $i35 = virtualinvoke r33.<android.os.Parcel: int readInt()>();

        $l36 = virtualinvoke r33.<android.os.Parcel: long readLong()>();

        $r22 = virtualinvoke r33.<android.os.Parcel: java.lang.String readString()>();

        $i37 = virtualinvoke r33.<android.os.Parcel: int readInt()>();

        $r23 = virtualinvoke r33.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r24 = staticinvoke <android.view.accessibility.IAccessibilityInteractionConnectionCallback$Stub: android.view.accessibility.IAccessibilityInteractionConnectionCallback asInterface(android.os.IBinder)>($r23);

        $l38 = virtualinvoke r33.<android.os.Parcel: long readLong()>();

        r48 = virtualinvoke r0.<android.accessibilityservice.IAccessibilityServiceConnection$Stub: java.lang.String[] findAccessibilityNodeInfosByViewId(int,long,java.lang.String,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,long)>($i35, $l36, $r22, $i37, $r24, $l38);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeStringArray(java.lang.String[])>(r48);

        return 1;

     label59:
        virtualinvoke r33.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.accessibilityservice.IAccessibilityServiceConnection");

        $i39 = virtualinvoke r33.<android.os.Parcel: int readInt()>();

        $l40 = virtualinvoke r33.<android.os.Parcel: long readLong()>();

        $r25 = virtualinvoke r33.<android.os.Parcel: java.lang.String readString()>();

        $i41 = virtualinvoke r33.<android.os.Parcel: int readInt()>();

        $r26 = virtualinvoke r33.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r27 = staticinvoke <android.view.accessibility.IAccessibilityInteractionConnectionCallback$Stub: android.view.accessibility.IAccessibilityInteractionConnectionCallback asInterface(android.os.IBinder)>($r26);

        $l42 = virtualinvoke r33.<android.os.Parcel: long readLong()>();

        r49 = virtualinvoke r0.<android.accessibilityservice.IAccessibilityServiceConnection$Stub: java.lang.String[] findAccessibilityNodeInfosByText(int,long,java.lang.String,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,long)>($i39, $l40, $r25, $i41, $r27, $l42);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeStringArray(java.lang.String[])>(r49);

        return 1;

     label60:
        virtualinvoke r33.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.accessibilityservice.IAccessibilityServiceConnection");

        i0 = virtualinvoke r33.<android.os.Parcel: int readInt()>();

        l1 = virtualinvoke r33.<android.os.Parcel: long readLong()>();

        i60 = virtualinvoke r33.<android.os.Parcel: int readInt()>();

        $r28 = virtualinvoke r33.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r50 = staticinvoke <android.view.accessibility.IAccessibilityInteractionConnectionCallback$Stub: android.view.accessibility.IAccessibilityInteractionConnectionCallback asInterface(android.os.IBinder)>($r28);

        i61 = virtualinvoke r33.<android.os.Parcel: int readInt()>();

        l62 = virtualinvoke r33.<android.os.Parcel: long readLong()>();

        $i43 = virtualinvoke r33.<android.os.Parcel: int readInt()>();

        if $i43 == 0 goto label61;

        $r29 = <android.os.Bundle: android.os.Parcelable$Creator CREATOR>;

        $r30 = interfaceinvoke $r29.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r33);

        r51 = (android.os.Bundle) $r30;

        goto label62;

     label61:
        r51 = null;

     label62:
        r52 = virtualinvoke r0.<android.accessibilityservice.IAccessibilityServiceConnection$Stub: java.lang.String[] findAccessibilityNodeInfoByAccessibilityId(int,long,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,long,android.os.Bundle)>(i0, l1, i60, r50, i61, l62, r51);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeStringArray(java.lang.String[])>(r52);

        return 1;

     label63:
        virtualinvoke r33.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.accessibilityservice.IAccessibilityServiceConnection");

        $i44 = virtualinvoke r33.<android.os.Parcel: int readInt()>();

        if $i44 == 0 goto label64;

        $r31 = <android.accessibilityservice.AccessibilityServiceInfo: android.os.Parcelable$Creator CREATOR>;

        $r32 = interfaceinvoke $r31.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r33);

        r53 = (android.accessibilityservice.AccessibilityServiceInfo) $r32;

        goto label65;

     label64:
        r53 = null;

     label65:
        virtualinvoke r0.<android.accessibilityservice.IAccessibilityServiceConnection$Stub: void setServiceInfo(android.accessibilityservice.AccessibilityServiceInfo)>(r53);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label66:
        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>("android.accessibilityservice.IAccessibilityServiceConnection");

        return 1;
    }

    public static void <clinit>()
    {
        <android.accessibilityservice.IAccessibilityServiceConnection$Stub: int TRANSACTION_takeScreenshot> = 32;

        <android.accessibilityservice.IAccessibilityServiceConnection$Stub: int TRANSACTION_switchToInputMethod> = 25;

        <android.accessibilityservice.IAccessibilityServiceConnection$Stub: int TRANSACTION_setTouchExplorationPassthroughRegion> = 34;

        <android.accessibilityservice.IAccessibilityServiceConnection$Stub: int TRANSACTION_setSoftKeyboardShowMode> = 22;

        <android.accessibilityservice.IAccessibilityServiceConnection$Stub: int TRANSACTION_setSoftKeyboardCallbackEnabled> = 24;

        <android.accessibilityservice.IAccessibilityServiceConnection$Stub: int TRANSACTION_setServiceInfo> = 1;

        <android.accessibilityservice.IAccessibilityServiceConnection$Stub: int TRANSACTION_setOnKeyEventResult> = 14;

        <android.accessibilityservice.IAccessibilityServiceConnection$Stub: int TRANSACTION_setMagnificationScaleAndCenter> = 20;

        <android.accessibilityservice.IAccessibilityServiceConnection$Stub: int TRANSACTION_setMagnificationCallbackEnabled> = 21;

        <android.accessibilityservice.IAccessibilityServiceConnection$Stub: int TRANSACTION_setGestureDetectionPassthroughRegion> = 33;

        <android.accessibilityservice.IAccessibilityServiceConnection$Stub: int TRANSACTION_sendGesture> = 27;

        <android.accessibilityservice.IAccessibilityServiceConnection$Stub: int TRANSACTION_resetMagnification> = 19;

        <android.accessibilityservice.IAccessibilityServiceConnection$Stub: int TRANSACTION_performGlobalAction> = 11;

        <android.accessibilityservice.IAccessibilityServiceConnection$Stub: int TRANSACTION_performAccessibilityAction> = 7;

        <android.accessibilityservice.IAccessibilityServiceConnection$Stub: int TRANSACTION_isFingerprintGestureDetectionAvailable> = 29;

        <android.accessibilityservice.IAccessibilityServiceConnection$Stub: int TRANSACTION_isAccessibilityButtonAvailable> = 26;

        <android.accessibilityservice.IAccessibilityServiceConnection$Stub: int TRANSACTION_getWindows> = 9;

        <android.accessibilityservice.IAccessibilityServiceConnection$Stub: int TRANSACTION_getWindowIdForLeashToken> = 31;

        <android.accessibilityservice.IAccessibilityServiceConnection$Stub: int TRANSACTION_getWindow> = 8;

        <android.accessibilityservice.IAccessibilityServiceConnection$Stub: int TRANSACTION_getSystemActions> = 12;

        <android.accessibilityservice.IAccessibilityServiceConnection$Stub: int TRANSACTION_getSoftKeyboardShowMode> = 23;

        <android.accessibilityservice.IAccessibilityServiceConnection$Stub: int TRANSACTION_getServiceInfo> = 10;

        <android.accessibilityservice.IAccessibilityServiceConnection$Stub: int TRANSACTION_getOverlayWindowToken> = 30;

        <android.accessibilityservice.IAccessibilityServiceConnection$Stub: int TRANSACTION_getMagnificationScale> = 15;

        <android.accessibilityservice.IAccessibilityServiceConnection$Stub: int TRANSACTION_getMagnificationRegion> = 18;

        <android.accessibilityservice.IAccessibilityServiceConnection$Stub: int TRANSACTION_getMagnificationCenterY> = 17;

        <android.accessibilityservice.IAccessibilityServiceConnection$Stub: int TRANSACTION_getMagnificationCenterX> = 16;

        <android.accessibilityservice.IAccessibilityServiceConnection$Stub: int TRANSACTION_focusSearch> = 6;

        <android.accessibilityservice.IAccessibilityServiceConnection$Stub: int TRANSACTION_findFocus> = 5;

        <android.accessibilityservice.IAccessibilityServiceConnection$Stub: int TRANSACTION_findAccessibilityNodeInfosByViewId> = 4;

        <android.accessibilityservice.IAccessibilityServiceConnection$Stub: int TRANSACTION_findAccessibilityNodeInfosByText> = 3;

        <android.accessibilityservice.IAccessibilityServiceConnection$Stub: int TRANSACTION_findAccessibilityNodeInfoByAccessibilityId> = 2;

        <android.accessibilityservice.IAccessibilityServiceConnection$Stub: int TRANSACTION_dispatchGesture> = 28;

        <android.accessibilityservice.IAccessibilityServiceConnection$Stub: int TRANSACTION_disableSelf> = 13;

        <android.accessibilityservice.IAccessibilityServiceConnection$Stub: java.lang.String DESCRIPTOR> = "android.accessibilityservice.IAccessibilityServiceConnection";

        return;
    }
}
