public final class android.accessibilityservice.util.AccessibilityUtils extends java.lang.Object
{
    private static final java.lang.String ANCHOR_TAG;
    private static final java.lang.String IMG_PREFIX;
    private static final java.util.List UNSUPPORTED_TAG_LIST;

    static void <clinit>()
    {
        java.util.ArrayList $r0;
        java.util.List $r1;

        <android.accessibilityservice.util.AccessibilityUtils: java.lang.String IMG_PREFIX> = "R.drawable.";

        <android.accessibilityservice.util.AccessibilityUtils: java.lang.String ANCHOR_TAG> = "a";

        $r0 = new java.util.ArrayList;

        $r1 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>("a");

        specialinvoke $r0.<java.util.ArrayList: void <init>(java.util.Collection)>($r1);

        <android.accessibilityservice.util.AccessibilityUtils: java.util.List UNSUPPORTED_TAG_LIST> = $r0;

        return;
    }

    private void <init>()
    {
        android.accessibilityservice.util.AccessibilityUtils r0;

        r0 := @this: android.accessibilityservice.util.AccessibilityUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String getFilteredHtmlText(java.lang.String)
    {
        java.util.Iterator r0;
        java.util.List $r2;
        boolean $z0;
        java.util.regex.Pattern $r3, $r15, $r17;
        java.util.regex.Matcher $r4, $r16, $r18;
        java.lang.String $r5, r19, r20, r22, r23, r24;
        java.lang.Object $r6;
        java.lang.StringBuilder $r7, $r11;

        r19 := @parameter0: java.lang.String;

        $r2 = <android.accessibilityservice.util.AccessibilityUtils: java.util.List UNSUPPORTED_TAG_LIST>;

        r0 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r0.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r0.<java.util.Iterator: java.lang.Object next()>();

        r20 = (java.lang.String) $r6;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(?i)<");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r20);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(\\s+|>)");

        r22 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(?i)</");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r20);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\s*>");

        r23 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r15 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(r22);

        $r16 = virtualinvoke $r15.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r19);

        r24 = virtualinvoke $r16.<java.util.regex.Matcher: java.lang.String replaceAll(java.lang.String)>("<invalidtag ");

        $r17 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(r23);

        $r18 = virtualinvoke $r17.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r24);

        r19 = virtualinvoke $r18.<java.util.regex.Matcher: java.lang.String replaceAll(java.lang.String)>("</invalidtag>");

        goto label1;

     label2:
        $r3 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("(?i)<img\\s+(?!src\\s*=\\s*\"(?-i)R.drawable.)");

        $r4 = virtualinvoke $r3.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r19);

        $r5 = virtualinvoke $r4.<java.util.regex.Matcher: java.lang.String replaceAll(java.lang.String)>("<invalidtag ");

        return $r5;
    }

    private static int getScreenHeightPixels(android.content.Context)
    {
        android.content.res.Configuration $r0;
        int $i0, $i1;
        float $f0, $f1;
        android.util.DisplayMetrics $r1;
        android.content.Context r2;
        android.content.res.Resources r3;

        r2 := @parameter0: android.content.Context;

        r3 = virtualinvoke r2.<android.content.Context: android.content.res.Resources getResources()>();

        $r0 = virtualinvoke r3.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $i0 = $r0.<android.content.res.Configuration: int screenHeightDp>;

        $f0 = (float) $i0;

        $r1 = virtualinvoke r3.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f1 = staticinvoke <android.util.TypedValue: float applyDimension(int,float,android.util.DisplayMetrics)>(1, $f0, $r1);

        $i1 = staticinvoke <java.lang.Math: int round(float)>($f1);

        return $i1;
    }

    private static int getScreenWidthPixels(android.content.Context)
    {
        android.content.res.Configuration $r0;
        int $i0, $i1;
        float $f0, $f1;
        android.util.DisplayMetrics $r1;
        android.content.Context r2;
        android.content.res.Resources r3;

        r2 := @parameter0: android.content.Context;

        r3 = virtualinvoke r2.<android.content.Context: android.content.res.Resources getResources()>();

        $r0 = virtualinvoke r3.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $i0 = $r0.<android.content.res.Configuration: int screenWidthDp>;

        $f0 = (float) $i0;

        $r1 = virtualinvoke r3.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f1 = staticinvoke <android.util.TypedValue: float applyDimension(int,float,android.util.DisplayMetrics)>(1, $f0, $r1);

        $i1 = staticinvoke <java.lang.Math: int round(float)>($f1);

        return $i1;
    }

    public static android.graphics.drawable.Drawable loadSafeAnimatedImage(android.content.Context, android.content.pm.ApplicationInfo, int)
    {
        int i0, $i1, $i2, i3, i4;
        android.content.pm.PackageManager $r0;
        java.lang.String $r1;
        android.content.Context r2;
        android.content.pm.ApplicationInfo r3;
        android.graphics.drawable.Drawable r4, r5;
        boolean z0, z1;

        r2 := @parameter0: android.content.Context;

        r3 := @parameter1: android.content.pm.ApplicationInfo;

        i3 := @parameter2: int;

        if i3 != 0 goto label1;

        return null;

     label1:
        $r0 = virtualinvoke r2.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r1 = r3.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        r4 = virtualinvoke $r0.<android.content.pm.PackageManager: android.graphics.drawable.Drawable getDrawable(java.lang.String,int,android.content.pm.ApplicationInfo)>($r1, i3, r3);

        if r4 != null goto label2;

        return null;

     label2:
        i0 = virtualinvoke r4.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        i4 = staticinvoke <android.accessibilityservice.util.AccessibilityUtils: int getScreenWidthPixels(android.content.Context)>(r2);

        z0 = 1;

        if i0 <= i4 goto label3;

        z1 = 1;

        goto label4;

     label3:
        z1 = 0;

     label4:
        $i1 = virtualinvoke r4.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        $i2 = staticinvoke <android.accessibilityservice.util.AccessibilityUtils: int getScreenHeightPixels(android.content.Context)>(r2);

        if $i1 <= $i2 goto label5;

        goto label6;

     label5:
        z0 = 0;

     label6:
        if z1 != 0 goto label8;

        if z0 == 0 goto label7;

        goto label8;

     label7:
        r5 = r4;

        goto label9;

     label8:
        r5 = null;

     label9:
        return r5;
    }
}
