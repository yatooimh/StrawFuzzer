public class android.accounts.Account extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    private static final java.lang.String TAG;
    private static final java.util.Set sAccessedAccounts;
    private final java.lang.String accessId;
    private java.lang.String mSafeName;
    public final java.lang.String name;
    public final java.lang.String type;

    static void <clinit>()
    {
        android.util.ArraySet $r0;
        android.accounts.Account$1 $r1;

        <android.accounts.Account: java.lang.String TAG> = "Account";

        $r0 = new android.util.ArraySet;

        specialinvoke $r0.<android.util.ArraySet: void <init>()>();

        <android.accounts.Account: java.util.Set sAccessedAccounts> = $r0;

        $r1 = new android.accounts.Account$1;

        specialinvoke $r1.<android.accounts.Account$1: void <init>()>();

        <android.accounts.Account: android.os.Parcelable$Creator CREATOR> = $r1;

        return;
    }

    public void <init>(android.accounts.Account, java.lang.String)
    {
        android.accounts.Account r0, r1;
        java.lang.String r2, $r3, $r4;

        r0 := @this: android.accounts.Account;

        r1 := @parameter0: android.accounts.Account;

        r2 := @parameter1: java.lang.String;

        $r4 = r1.<android.accounts.Account: java.lang.String name>;

        $r3 = r1.<android.accounts.Account: java.lang.String type>;

        specialinvoke r0.<android.accounts.Account: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r4, $r3, r2);

        return;
    }

    public void <init>(android.os.Parcel)
    {
        android.accounts.Account r0;
        boolean z0, $z1, $z2;
        java.lang.String $r1, $r2, $r3, $r6, $r9, $r10, $r13, $r16, $r20, r24;
        java.lang.StringBuilder $r4, $r11;
        android.os.BadParcelableException $r8, $r15;
        java.util.Set $r17, r25;
        android.os.IBinder $r18;
        android.accounts.IAccountManager $r19;
        android.os.RemoteException $r21;
        java.lang.Throwable $r22;
        android.os.Parcel r23;

        r0 := @this: android.accounts.Account;

        r23 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = virtualinvoke r23.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.accounts.Account: java.lang.String name> = $r1;

        $r2 = virtualinvoke r23.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.accounts.Account: java.lang.String type> = $r2;

        $r3 = r0.<android.accounts.Account: java.lang.String name>;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r3);

        if $z1 != 0 goto label14;

        $r10 = r0.<android.accounts.Account: java.lang.String type>;

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r10);

        if $z2 != 0 goto label13;

        r24 = virtualinvoke r23.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.accounts.Account: java.lang.String accessId> = r24;

        if r24 == null goto label12;

        r25 = <android.accounts.Account: java.util.Set sAccessedAccounts>;

        entermonitor r25;

     label01:
        $r17 = <android.accounts.Account: java.util.Set sAccessedAccounts>;

        z0 = interfaceinvoke $r17.<java.util.Set: boolean add(java.lang.Object)>(r0);

     label02:
        if z0 == 0 goto label07;

     label03:
        $r18 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("account");

        $r19 = staticinvoke <android.accounts.IAccountManager$Stub: android.accounts.IAccountManager asInterface(android.os.IBinder)>($r18);

        $r20 = r0.<android.accounts.Account: java.lang.String accessId>;

        interfaceinvoke $r19.<android.accounts.IAccountManager: void onAccountAccessed(java.lang.String)>($r20);

     label04:
        goto label07;

     label05:
        $r21 := @caughtexception;

     label06:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("Account", "Error noting account access", $r21);

     label07:
        exitmonitor r25;

     label08:
        goto label12;

     label09:
        $r22 := @caughtexception;

     label10:
        exitmonitor r25;

     label11:
        throw $r22;

     label12:
        return;

     label13:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("the type must not be empty: ");

        $r13 = r0.<android.accounts.Account: java.lang.String type>;

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = new android.os.BadParcelableException;

        $r16 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<android.os.BadParcelableException: void <init>(java.lang.String)>($r16);

        throw $r15;

     label14:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("the name must not be empty: ");

        $r6 = r0.<android.accounts.Account: java.lang.String name>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = new android.os.BadParcelableException;

        $r9 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<android.os.BadParcelableException: void <init>(java.lang.String)>($r9);

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch android.os.RemoteException from label03 to label04 with label05;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public void <init>(java.lang.String, java.lang.String)
    {
        android.accounts.Account r0;
        java.lang.String r1, r2;

        r0 := @this: android.accounts.Account;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<android.accounts.Account: void <init>(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, null);

        return;
    }

    public void <init>(java.lang.String, java.lang.String, java.lang.String)
    {
        android.accounts.Account r0;
        java.lang.String r1, $r6, $r11, r12, r13;
        boolean $z0, $z1;
        java.lang.StringBuilder $r2, $r7;
        java.lang.IllegalArgumentException $r5, $r10;

        r0 := @this: android.accounts.Account;

        r12 := @parameter0: java.lang.String;

        r13 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r12);

        if $z0 != 0 goto label2;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r13);

        if $z1 != 0 goto label1;

        r0.<android.accounts.Account: java.lang.String name> = r12;

        r0.<android.accounts.Account: java.lang.String type> = r13;

        r0.<android.accounts.Account: java.lang.String accessId> = r1;

        return;

     label1:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("the type must not be empty: ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);

        $r10 = new java.lang.IllegalArgumentException;

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r10;

     label2:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("the name must not be empty: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12);

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r5;
    }

    public static java.lang.String toSafeName(java.lang.String, char)
    {
        java.lang.String r0, $r3;
        char c0, c2;
        int i1, i3;
        java.lang.StringBuilder $r2;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        c0 := @parameter1: char;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>(64);

        i1 = virtualinvoke r0.<java.lang.String: int length()>();

        i3 = 0;

     label1:
        if i3 >= i1 goto label4;

        c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i3);

        $z0 = staticinvoke <java.lang.Character: boolean isLetterOrDigit(char)>(c2);

        if $z0 == 0 goto label2;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);

        goto label3;

     label2:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c2);

     label3:
        i3 = i3 + 1;

        goto label1;

     label4:
        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    public int describeContents()
    {
        android.accounts.Account r0;

        r0 := @this: android.accounts.Account;

        return 0;
    }

    public boolean equals(java.lang.Object)
    {
        android.accounts.Account r0, r6;
        boolean $z0, $z1, $z2, z3;
        java.lang.String $r1, $r2, $r3, $r4;
        java.lang.Object r5;

        r0 := @this: android.accounts.Account;

        r5 := @parameter0: java.lang.Object;

        z3 = 1;

        if r5 != r0 goto label1;

        return 1;

     label1:
        $z0 = r5 instanceof android.accounts.Account;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r6 = (android.accounts.Account) r5;

        $r2 = r0.<android.accounts.Account: java.lang.String name>;

        $r1 = r6.<android.accounts.Account: java.lang.String name>;

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z1 == 0 goto label3;

        $r4 = r0.<android.accounts.Account: java.lang.String type>;

        $r3 = r6.<android.accounts.Account: java.lang.String type>;

        $z2 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z2 == 0 goto label3;

        goto label4;

     label3:
        z3 = 0;

     label4:
        return z3;
    }

    public java.lang.String getAccessId()
    {
        android.accounts.Account r0;
        java.lang.String $r1;

        r0 := @this: android.accounts.Account;

        $r1 = r0.<android.accounts.Account: java.lang.String accessId>;

        return $r1;
    }

    public int hashCode()
    {
        android.accounts.Account r0;
        java.lang.String $r1, $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: android.accounts.Account;

        $i0 = 17 * 31;

        $r1 = r0.<android.accounts.Account: java.lang.String name>;

        $i1 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        $i2 = $i0 + $i1;

        $i3 = $i2 * 31;

        $r2 = r0.<android.accounts.Account: java.lang.String type>;

        $i4 = virtualinvoke $r2.<java.lang.String: int hashCode()>();

        $i5 = $i3 + $i4;

        return $i5;
    }

    public java.lang.String toSafeString()
    {
        android.accounts.Account r0;
        java.lang.String $r2, $r5, $r8, $r11, $r12, $r13;
        java.lang.StringBuilder $r3;

        r0 := @this: android.accounts.Account;

        $r2 = r0.<android.accounts.Account: java.lang.String mSafeName>;

        if $r2 != null goto label1;

        $r12 = r0.<android.accounts.Account: java.lang.String name>;

        $r13 = staticinvoke <android.accounts.Account: java.lang.String toSafeName(java.lang.String,char)>($r12, 120);

        r0.<android.accounts.Account: java.lang.String mSafeName> = $r13;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Account {name=");

        $r5 = r0.<android.accounts.Account: java.lang.String mSafeName>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", type=");

        $r8 = r0.<android.accounts.Account: java.lang.String type>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r11 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;
    }

    public java.lang.String toString()
    {
        android.accounts.Account r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r4, $r7, $r10;

        r0 := @this: android.accounts.Account;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Account {name=");

        $r4 = r0.<android.accounts.Account: java.lang.String name>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", type=");

        $r7 = r0.<android.accounts.Account: java.lang.String type>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r10 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.accounts.Account r0;
        android.os.Parcel r1;
        int i0;
        java.lang.String $r2, $r3, $r4;

        r0 := @this: android.accounts.Account;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $r2 = r0.<android.accounts.Account: java.lang.String name>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r2);

        $r3 = r0.<android.accounts.Account: java.lang.String type>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r3);

        $r4 = r0.<android.accounts.Account: java.lang.String accessId>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r4);

        return;
    }
}
