class android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask extends android.accounts.AccountManager$AmsTask implements android.accounts.AccountManagerCallback
{
    final java.lang.String mAccountType;
    final android.os.Bundle mAddAccountOptions;
    final java.lang.String mAuthTokenType;
    final java.lang.String[] mFeatures;
    volatile android.accounts.AccountManagerFuture mFuture;
    final android.os.Bundle mLoginOptions;
    final android.accounts.AccountManagerCallback mMyCallback;
    private volatile int mNumAccounts;
    final android.accounts.AccountManager this$0;

    void <init>(android.accounts.AccountManager, java.lang.String, java.lang.String, java.lang.String[], android.app.Activity, android.os.Bundle, android.os.Bundle, android.accounts.AccountManagerCallback, android.os.Handler)
    {
        android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask r0;
        android.accounts.AccountManager r1;
        java.lang.String r2, r3;
        java.lang.String[] r4;
        android.app.Activity r5;
        android.os.Bundle r6, r7;
        android.accounts.AccountManagerCallback r8;
        android.os.Handler r9;
        java.lang.IllegalArgumentException $r10;

        r0 := @this: android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask;

        r1 := @parameter0: android.accounts.AccountManager;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String[];

        r5 := @parameter4: android.app.Activity;

        r6 := @parameter5: android.os.Bundle;

        r7 := @parameter6: android.os.Bundle;

        r8 := @parameter7: android.accounts.AccountManagerCallback;

        r9 := @parameter8: android.os.Handler;

        r0.<android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask: android.accounts.AccountManager this$0> = r1;

        specialinvoke r0.<android.accounts.AccountManager$AmsTask: void <init>(android.accounts.AccountManager,android.app.Activity,android.os.Handler,android.accounts.AccountManagerCallback)>(r1, r5, r9, r8);

        r0.<android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask: android.accounts.AccountManagerFuture mFuture> = null;

        r0.<android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask: int mNumAccounts> = 0;

        if r2 == null goto label1;

        r0.<android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask: java.lang.String mAccountType> = r2;

        r0.<android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask: java.lang.String mAuthTokenType> = r3;

        r0.<android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask: java.lang.String[] mFeatures> = r4;

        r0.<android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask: android.os.Bundle mAddAccountOptions> = r6;

        r0.<android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask: android.os.Bundle mLoginOptions> = r7;

        r0.<android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask: android.accounts.AccountManagerCallback mMyCallback> = r0;

        return;

     label1:
        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("account type is null");

        throw $r10;
    }

    static void access$1200(android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask, java.lang.Throwable)
    {
        android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask r0;
        java.lang.Throwable r1;

        r0 := @parameter0: android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask;

        r1 := @parameter1: java.lang.Throwable;

        virtualinvoke r0.<android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask: void setException(java.lang.Throwable)>(r1);

        return;
    }

    static void access$1300(android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask, java.lang.Throwable)
    {
        android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask r0;
        java.lang.Throwable r1;

        r0 := @parameter0: android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask;

        r1 := @parameter1: java.lang.Throwable;

        virtualinvoke r0.<android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask: void setException(java.lang.Throwable)>(r1);

        return;
    }

    static void access$1400(android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask, java.lang.Throwable)
    {
        android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask r0;
        java.lang.Throwable r1;

        r0 := @parameter0: android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask;

        r1 := @parameter1: java.lang.Throwable;

        virtualinvoke r0.<android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask: void setException(java.lang.Throwable)>(r1);

        return;
    }

    static int access$1502(android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask, int)
    {
        android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask r0;
        int i0;

        r0 := @parameter0: android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask;

        i0 := @parameter1: int;

        r0.<android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask: int mNumAccounts> = i0;

        return i0;
    }

    public void doWork() throws android.os.RemoteException
    {
        android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask r0;
        android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask$1 $r1;
        android.accounts.AccountManager $r2;
        java.lang.String $r3;
        java.lang.String[] $r4;
        android.os.Handler $r5;

        r0 := @this: android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask;

        $r2 = r0.<android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask: android.accounts.AccountManager this$0>;

        $r3 = r0.<android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask: java.lang.String mAccountType>;

        $r4 = r0.<android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask: java.lang.String[] mFeatures>;

        $r1 = new android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask$1;

        specialinvoke $r1.<android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask$1: void <init>(android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask)>(r0);

        $r5 = r0.<android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask: android.os.Handler mHandler>;

        staticinvoke <android.accounts.AccountManager: void access$1600(android.accounts.AccountManager,java.lang.String,java.lang.String[],android.accounts.AccountManagerCallback,android.os.Handler)>($r2, $r3, $r4, $r1, $r5);

        return;
    }

    public void run(android.accounts.AccountManagerFuture)
    {
        android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask r0;
        java.lang.String r1, r2, $r7, r15;
        java.lang.Object $r3;
        int $i0;
        boolean $z0, $z1;
        android.os.Handler $r4;
        android.accounts.AccountManagerCallback $r5;
        android.app.Activity $r6;
        android.accounts.AccountManager $r8;
        java.lang.Throwable $r10;
        android.accounts.AuthenticatorException $r11, r17;
        android.accounts.OperationCanceledException $r12;
        android.accounts.AccountManagerFuture r13;
        android.os.Bundle r14;
        android.accounts.Account r16;

        r0 := @this: android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask;

        r13 := @parameter0: android.accounts.AccountManagerFuture;

     label01:
        $r3 = interfaceinvoke r13.<android.accounts.AccountManagerFuture: java.lang.Object getResult()>();

        r14 = (android.os.Bundle) $r3;

        $i0 = r0.<android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask: int mNumAccounts>;

        if $i0 != 0 goto label07;

        r1 = virtualinvoke r14.<android.os.Bundle: java.lang.String getString(java.lang.String)>("authAccount");

        r15 = virtualinvoke r14.<android.os.Bundle: java.lang.String getString(java.lang.String)>("accountType");

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 != 0 goto label05;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r15);

        if $z1 == 0 goto label03;

     label02:
        goto label05;

     label03:
        r2 = virtualinvoke r14.<android.os.Bundle: java.lang.String getString(java.lang.String)>("accountAccessId");

        r16 = new android.accounts.Account;

        specialinvoke r16.<android.accounts.Account: void <init>(java.lang.String,java.lang.String,java.lang.String)>(r1, r15, r2);

        r0.<android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask: int mNumAccounts> = 1;

        $r8 = r0.<android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask: android.accounts.AccountManager this$0>;

        $r7 = r0.<android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask: java.lang.String mAuthTokenType>;

        $r6 = r0.<android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask: android.app.Activity mActivity>;

        $r5 = r0.<android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask: android.accounts.AccountManagerCallback mMyCallback>;

        $r4 = r0.<android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask: android.os.Handler mHandler>;

        virtualinvoke $r8.<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthToken(android.accounts.Account,java.lang.String,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>(r16, $r7, null, $r6, $r5, $r4);

     label04:
        return;

     label05:
        r17 = new android.accounts.AuthenticatorException;

        specialinvoke r17.<android.accounts.AuthenticatorException: void <init>(java.lang.String)>("account not in result");

        virtualinvoke r0.<android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask: void setException(java.lang.Throwable)>(r17);

     label06:
        return;

     label07:
        virtualinvoke r0.<android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask: void set(android.os.Bundle)>(r14);

     label08:
        goto label12;

     label09:
        $r11 := @caughtexception;

        virtualinvoke r0.<android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask: void setException(java.lang.Throwable)>($r11);

        goto label12;

     label10:
        $r10 := @caughtexception;

        virtualinvoke r0.<android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask: void setException(java.lang.Throwable)>($r10);

        goto label12;

     label11:
        $r12 := @caughtexception;

        virtualinvoke r0.<android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask: boolean cancel(boolean)>(1);

     label12:
        return;

        catch android.accounts.OperationCanceledException from label01 to label02 with label11;
        catch java.io.IOException from label01 to label02 with label10;
        catch android.accounts.AuthenticatorException from label01 to label02 with label09;
        catch android.accounts.OperationCanceledException from label03 to label04 with label11;
        catch java.io.IOException from label03 to label04 with label10;
        catch android.accounts.AuthenticatorException from label03 to label04 with label09;
        catch android.accounts.OperationCanceledException from label05 to label06 with label11;
        catch java.io.IOException from label05 to label06 with label10;
        catch android.accounts.AuthenticatorException from label05 to label06 with label09;
        catch android.accounts.OperationCanceledException from label07 to label08 with label11;
        catch java.io.IOException from label07 to label08 with label10;
        catch android.accounts.AuthenticatorException from label07 to label08 with label09;
    }
}
