public class android.accounts.IAccountManager$Default extends java.lang.Object implements android.accounts.IAccountManager
{

    public void <init>()
    {
        android.accounts.IAccountManager$Default r0;

        r0 := @this: android.accounts.IAccountManager$Default;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean accountAuthenticated(android.accounts.Account) throws android.os.RemoteException
    {
        android.accounts.IAccountManager$Default r0;
        android.accounts.Account r1;

        r0 := @this: android.accounts.IAccountManager$Default;

        r1 := @parameter0: android.accounts.Account;

        return 0;
    }

    public void addAccount(android.accounts.IAccountManagerResponse, java.lang.String, java.lang.String, java.lang.String[], boolean, android.os.Bundle) throws android.os.RemoteException
    {
        android.accounts.IAccountManager$Default r0;
        android.accounts.IAccountManagerResponse r1;
        java.lang.String r2, r3;
        java.lang.String[] r4;
        boolean z0;
        android.os.Bundle r5;

        r0 := @this: android.accounts.IAccountManager$Default;

        r1 := @parameter0: android.accounts.IAccountManagerResponse;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String[];

        z0 := @parameter4: boolean;

        r5 := @parameter5: android.os.Bundle;

        return;
    }

    public void addAccountAsUser(android.accounts.IAccountManagerResponse, java.lang.String, java.lang.String, java.lang.String[], boolean, android.os.Bundle, int) throws android.os.RemoteException
    {
        android.accounts.IAccountManager$Default r0;
        android.accounts.IAccountManagerResponse r1;
        java.lang.String r2, r3;
        java.lang.String[] r4;
        boolean z0;
        android.os.Bundle r5;
        int i0;

        r0 := @this: android.accounts.IAccountManager$Default;

        r1 := @parameter0: android.accounts.IAccountManagerResponse;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String[];

        z0 := @parameter4: boolean;

        r5 := @parameter5: android.os.Bundle;

        i0 := @parameter6: int;

        return;
    }

    public boolean addAccountExplicitly(android.accounts.Account, java.lang.String, android.os.Bundle) throws android.os.RemoteException
    {
        android.accounts.IAccountManager$Default r0;
        android.accounts.Account r1;
        java.lang.String r2;
        android.os.Bundle r3;

        r0 := @this: android.accounts.IAccountManager$Default;

        r1 := @parameter0: android.accounts.Account;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.Bundle;

        return 0;
    }

    public boolean addAccountExplicitlyWithVisibility(android.accounts.Account, java.lang.String, android.os.Bundle, java.util.Map) throws android.os.RemoteException
    {
        android.accounts.IAccountManager$Default r0;
        android.accounts.Account r1;
        java.lang.String r2;
        android.os.Bundle r3;
        java.util.Map r4;

        r0 := @this: android.accounts.IAccountManager$Default;

        r1 := @parameter0: android.accounts.Account;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.Bundle;

        r4 := @parameter3: java.util.Map;

        return 0;
    }

    public void addSharedAccountsFromParentUser(int, int, java.lang.String) throws android.os.RemoteException
    {
        android.accounts.IAccountManager$Default r0;
        int i0, i1;
        java.lang.String r1;

        r0 := @this: android.accounts.IAccountManager$Default;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.accounts.IAccountManager$Default r0;

        r0 := @this: android.accounts.IAccountManager$Default;

        return null;
    }

    public void clearPassword(android.accounts.Account) throws android.os.RemoteException
    {
        android.accounts.IAccountManager$Default r0;
        android.accounts.Account r1;

        r0 := @this: android.accounts.IAccountManager$Default;

        r1 := @parameter0: android.accounts.Account;

        return;
    }

    public void confirmCredentialsAsUser(android.accounts.IAccountManagerResponse, android.accounts.Account, android.os.Bundle, boolean, int) throws android.os.RemoteException
    {
        android.accounts.IAccountManager$Default r0;
        android.accounts.IAccountManagerResponse r1;
        android.accounts.Account r2;
        android.os.Bundle r3;
        boolean z0;
        int i0;

        r0 := @this: android.accounts.IAccountManager$Default;

        r1 := @parameter0: android.accounts.IAccountManagerResponse;

        r2 := @parameter1: android.accounts.Account;

        r3 := @parameter2: android.os.Bundle;

        z0 := @parameter3: boolean;

        i0 := @parameter4: int;

        return;
    }

    public void copyAccountToUser(android.accounts.IAccountManagerResponse, android.accounts.Account, int, int) throws android.os.RemoteException
    {
        android.accounts.IAccountManager$Default r0;
        android.accounts.IAccountManagerResponse r1;
        android.accounts.Account r2;
        int i0, i1;

        r0 := @this: android.accounts.IAccountManager$Default;

        r1 := @parameter0: android.accounts.IAccountManagerResponse;

        r2 := @parameter1: android.accounts.Account;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        return;
    }

    public android.content.IntentSender createRequestAccountAccessIntentSenderAsUser(android.accounts.Account, java.lang.String, android.os.UserHandle) throws android.os.RemoteException
    {
        android.accounts.IAccountManager$Default r0;
        android.accounts.Account r1;
        java.lang.String r2;
        android.os.UserHandle r3;

        r0 := @this: android.accounts.IAccountManager$Default;

        r1 := @parameter0: android.accounts.Account;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.UserHandle;

        return null;
    }

    public void editProperties(android.accounts.IAccountManagerResponse, java.lang.String, boolean) throws android.os.RemoteException
    {
        android.accounts.IAccountManager$Default r0;
        android.accounts.IAccountManagerResponse r1;
        java.lang.String r2;
        boolean z0;

        r0 := @this: android.accounts.IAccountManager$Default;

        r1 := @parameter0: android.accounts.IAccountManagerResponse;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        return;
    }

    public void finishSessionAsUser(android.accounts.IAccountManagerResponse, android.os.Bundle, boolean, android.os.Bundle, int) throws android.os.RemoteException
    {
        android.accounts.IAccountManager$Default r0;
        android.accounts.IAccountManagerResponse r1;
        android.os.Bundle r2, r3;
        boolean z0;
        int i0;

        r0 := @this: android.accounts.IAccountManager$Default;

        r1 := @parameter0: android.accounts.IAccountManagerResponse;

        r2 := @parameter1: android.os.Bundle;

        z0 := @parameter2: boolean;

        r3 := @parameter3: android.os.Bundle;

        i0 := @parameter4: int;

        return;
    }

    public void getAccountByTypeAndFeatures(android.accounts.IAccountManagerResponse, java.lang.String, java.lang.String[], java.lang.String) throws android.os.RemoteException
    {
        android.accounts.IAccountManager$Default r0;
        android.accounts.IAccountManagerResponse r1;
        java.lang.String r2, r4;
        java.lang.String[] r3;

        r0 := @this: android.accounts.IAccountManager$Default;

        r1 := @parameter0: android.accounts.IAccountManagerResponse;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String[];

        r4 := @parameter3: java.lang.String;

        return;
    }

    public int getAccountVisibility(android.accounts.Account, java.lang.String) throws android.os.RemoteException
    {
        android.accounts.IAccountManager$Default r0;
        android.accounts.Account r1;
        java.lang.String r2;

        r0 := @this: android.accounts.IAccountManager$Default;

        r1 := @parameter0: android.accounts.Account;

        r2 := @parameter1: java.lang.String;

        return 0;
    }

    public java.util.Map getAccountsAndVisibilityForPackage(java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.accounts.IAccountManager$Default r0;
        java.lang.String r1, r2;

        r0 := @this: android.accounts.IAccountManager$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        return null;
    }

    public android.accounts.Account[] getAccountsAsUser(java.lang.String, int, java.lang.String) throws android.os.RemoteException
    {
        android.accounts.IAccountManager$Default r0;
        java.lang.String r1, r2;
        int i0;

        r0 := @this: android.accounts.IAccountManager$Default;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        return null;
    }

    public void getAccountsByFeatures(android.accounts.IAccountManagerResponse, java.lang.String, java.lang.String[], java.lang.String) throws android.os.RemoteException
    {
        android.accounts.IAccountManager$Default r0;
        android.accounts.IAccountManagerResponse r1;
        java.lang.String r2, r4;
        java.lang.String[] r3;

        r0 := @this: android.accounts.IAccountManager$Default;

        r1 := @parameter0: android.accounts.IAccountManagerResponse;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String[];

        r4 := @parameter3: java.lang.String;

        return;
    }

    public android.accounts.Account[] getAccountsByTypeForPackage(java.lang.String, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.accounts.IAccountManager$Default r0;
        java.lang.String r1, r2, r3;

        r0 := @this: android.accounts.IAccountManager$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        return null;
    }

    public android.accounts.Account[] getAccountsForPackage(java.lang.String, int, java.lang.String) throws android.os.RemoteException
    {
        android.accounts.IAccountManager$Default r0;
        java.lang.String r1, r2;
        int i0;

        r0 := @this: android.accounts.IAccountManager$Default;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        return null;
    }

    public void getAuthToken(android.accounts.IAccountManagerResponse, android.accounts.Account, java.lang.String, boolean, boolean, android.os.Bundle) throws android.os.RemoteException
    {
        android.accounts.IAccountManager$Default r0;
        android.accounts.IAccountManagerResponse r1;
        android.accounts.Account r2;
        java.lang.String r3;
        boolean z0, z1;
        android.os.Bundle r4;

        r0 := @this: android.accounts.IAccountManager$Default;

        r1 := @parameter0: android.accounts.IAccountManagerResponse;

        r2 := @parameter1: android.accounts.Account;

        r3 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        r4 := @parameter5: android.os.Bundle;

        return;
    }

    public void getAuthTokenLabel(android.accounts.IAccountManagerResponse, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.accounts.IAccountManager$Default r0;
        android.accounts.IAccountManagerResponse r1;
        java.lang.String r2, r3;

        r0 := @this: android.accounts.IAccountManager$Default;

        r1 := @parameter0: android.accounts.IAccountManagerResponse;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        return;
    }

    public android.accounts.AuthenticatorDescription[] getAuthenticatorTypes(int) throws android.os.RemoteException
    {
        android.accounts.IAccountManager$Default r0;
        int i0;

        r0 := @this: android.accounts.IAccountManager$Default;

        i0 := @parameter0: int;

        return null;
    }

    public java.util.Map getPackagesAndVisibilityForAccount(android.accounts.Account) throws android.os.RemoteException
    {
        android.accounts.IAccountManager$Default r0;
        android.accounts.Account r1;

        r0 := @this: android.accounts.IAccountManager$Default;

        r1 := @parameter0: android.accounts.Account;

        return null;
    }

    public java.lang.String getPassword(android.accounts.Account) throws android.os.RemoteException
    {
        android.accounts.IAccountManager$Default r0;
        android.accounts.Account r1;

        r0 := @this: android.accounts.IAccountManager$Default;

        r1 := @parameter0: android.accounts.Account;

        return null;
    }

    public java.lang.String getPreviousName(android.accounts.Account) throws android.os.RemoteException
    {
        android.accounts.IAccountManager$Default r0;
        android.accounts.Account r1;

        r0 := @this: android.accounts.IAccountManager$Default;

        r1 := @parameter0: android.accounts.Account;

        return null;
    }

    public java.lang.String getUserData(android.accounts.Account, java.lang.String) throws android.os.RemoteException
    {
        android.accounts.IAccountManager$Default r0;
        android.accounts.Account r1;
        java.lang.String r2;

        r0 := @this: android.accounts.IAccountManager$Default;

        r1 := @parameter0: android.accounts.Account;

        r2 := @parameter1: java.lang.String;

        return null;
    }

    public boolean hasAccountAccess(android.accounts.Account, java.lang.String, android.os.UserHandle) throws android.os.RemoteException
    {
        android.accounts.IAccountManager$Default r0;
        android.accounts.Account r1;
        java.lang.String r2;
        android.os.UserHandle r3;

        r0 := @this: android.accounts.IAccountManager$Default;

        r1 := @parameter0: android.accounts.Account;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.UserHandle;

        return 0;
    }

    public void hasFeatures(android.accounts.IAccountManagerResponse, android.accounts.Account, java.lang.String[], java.lang.String) throws android.os.RemoteException
    {
        android.accounts.IAccountManager$Default r0;
        android.accounts.IAccountManagerResponse r1;
        android.accounts.Account r2;
        java.lang.String[] r3;
        java.lang.String r4;

        r0 := @this: android.accounts.IAccountManager$Default;

        r1 := @parameter0: android.accounts.IAccountManagerResponse;

        r2 := @parameter1: android.accounts.Account;

        r3 := @parameter2: java.lang.String[];

        r4 := @parameter3: java.lang.String;

        return;
    }

    public void invalidateAuthToken(java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.accounts.IAccountManager$Default r0;
        java.lang.String r1, r2;

        r0 := @this: android.accounts.IAccountManager$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        return;
    }

    public void isCredentialsUpdateSuggested(android.accounts.IAccountManagerResponse, android.accounts.Account, java.lang.String) throws android.os.RemoteException
    {
        android.accounts.IAccountManager$Default r0;
        android.accounts.IAccountManagerResponse r1;
        android.accounts.Account r2;
        java.lang.String r3;

        r0 := @this: android.accounts.IAccountManager$Default;

        r1 := @parameter0: android.accounts.IAccountManagerResponse;

        r2 := @parameter1: android.accounts.Account;

        r3 := @parameter2: java.lang.String;

        return;
    }

    public void onAccountAccessed(java.lang.String) throws android.os.RemoteException
    {
        android.accounts.IAccountManager$Default r0;
        java.lang.String r1;

        r0 := @this: android.accounts.IAccountManager$Default;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public java.lang.String peekAuthToken(android.accounts.Account, java.lang.String) throws android.os.RemoteException
    {
        android.accounts.IAccountManager$Default r0;
        android.accounts.Account r1;
        java.lang.String r2;

        r0 := @this: android.accounts.IAccountManager$Default;

        r1 := @parameter0: android.accounts.Account;

        r2 := @parameter1: java.lang.String;

        return null;
    }

    public void registerAccountListener(java.lang.String[], java.lang.String) throws android.os.RemoteException
    {
        android.accounts.IAccountManager$Default r0;
        java.lang.String[] r1;
        java.lang.String r2;

        r0 := @this: android.accounts.IAccountManager$Default;

        r1 := @parameter0: java.lang.String[];

        r2 := @parameter1: java.lang.String;

        return;
    }

    public void removeAccountAsUser(android.accounts.IAccountManagerResponse, android.accounts.Account, boolean, int) throws android.os.RemoteException
    {
        android.accounts.IAccountManager$Default r0;
        android.accounts.IAccountManagerResponse r1;
        android.accounts.Account r2;
        boolean z0;
        int i0;

        r0 := @this: android.accounts.IAccountManager$Default;

        r1 := @parameter0: android.accounts.IAccountManagerResponse;

        r2 := @parameter1: android.accounts.Account;

        z0 := @parameter2: boolean;

        i0 := @parameter3: int;

        return;
    }

    public boolean removeAccountExplicitly(android.accounts.Account) throws android.os.RemoteException
    {
        android.accounts.IAccountManager$Default r0;
        android.accounts.Account r1;

        r0 := @this: android.accounts.IAccountManager$Default;

        r1 := @parameter0: android.accounts.Account;

        return 0;
    }

    public void renameAccount(android.accounts.IAccountManagerResponse, android.accounts.Account, java.lang.String) throws android.os.RemoteException
    {
        android.accounts.IAccountManager$Default r0;
        android.accounts.IAccountManagerResponse r1;
        android.accounts.Account r2;
        java.lang.String r3;

        r0 := @this: android.accounts.IAccountManager$Default;

        r1 := @parameter0: android.accounts.IAccountManagerResponse;

        r2 := @parameter1: android.accounts.Account;

        r3 := @parameter2: java.lang.String;

        return;
    }

    public boolean setAccountVisibility(android.accounts.Account, java.lang.String, int) throws android.os.RemoteException
    {
        android.accounts.IAccountManager$Default r0;
        android.accounts.Account r1;
        java.lang.String r2;
        int i0;

        r0 := @this: android.accounts.IAccountManager$Default;

        r1 := @parameter0: android.accounts.Account;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        return 0;
    }

    public void setAuthToken(android.accounts.Account, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.accounts.IAccountManager$Default r0;
        android.accounts.Account r1;
        java.lang.String r2, r3;

        r0 := @this: android.accounts.IAccountManager$Default;

        r1 := @parameter0: android.accounts.Account;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        return;
    }

    public void setPassword(android.accounts.Account, java.lang.String) throws android.os.RemoteException
    {
        android.accounts.IAccountManager$Default r0;
        android.accounts.Account r1;
        java.lang.String r2;

        r0 := @this: android.accounts.IAccountManager$Default;

        r1 := @parameter0: android.accounts.Account;

        r2 := @parameter1: java.lang.String;

        return;
    }

    public void setUserData(android.accounts.Account, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.accounts.IAccountManager$Default r0;
        android.accounts.Account r1;
        java.lang.String r2, r3;

        r0 := @this: android.accounts.IAccountManager$Default;

        r1 := @parameter0: android.accounts.Account;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        return;
    }

    public boolean someUserHasAccount(android.accounts.Account) throws android.os.RemoteException
    {
        android.accounts.IAccountManager$Default r0;
        android.accounts.Account r1;

        r0 := @this: android.accounts.IAccountManager$Default;

        r1 := @parameter0: android.accounts.Account;

        return 0;
    }

    public void startAddAccountSession(android.accounts.IAccountManagerResponse, java.lang.String, java.lang.String, java.lang.String[], boolean, android.os.Bundle) throws android.os.RemoteException
    {
        android.accounts.IAccountManager$Default r0;
        android.accounts.IAccountManagerResponse r1;
        java.lang.String r2, r3;
        java.lang.String[] r4;
        boolean z0;
        android.os.Bundle r5;

        r0 := @this: android.accounts.IAccountManager$Default;

        r1 := @parameter0: android.accounts.IAccountManagerResponse;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String[];

        z0 := @parameter4: boolean;

        r5 := @parameter5: android.os.Bundle;

        return;
    }

    public void startUpdateCredentialsSession(android.accounts.IAccountManagerResponse, android.accounts.Account, java.lang.String, boolean, android.os.Bundle) throws android.os.RemoteException
    {
        android.accounts.IAccountManager$Default r0;
        android.accounts.IAccountManagerResponse r1;
        android.accounts.Account r2;
        java.lang.String r3;
        boolean z0;
        android.os.Bundle r4;

        r0 := @this: android.accounts.IAccountManager$Default;

        r1 := @parameter0: android.accounts.IAccountManagerResponse;

        r2 := @parameter1: android.accounts.Account;

        r3 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        r4 := @parameter4: android.os.Bundle;

        return;
    }

    public void unregisterAccountListener(java.lang.String[], java.lang.String) throws android.os.RemoteException
    {
        android.accounts.IAccountManager$Default r0;
        java.lang.String[] r1;
        java.lang.String r2;

        r0 := @this: android.accounts.IAccountManager$Default;

        r1 := @parameter0: java.lang.String[];

        r2 := @parameter1: java.lang.String;

        return;
    }

    public void updateAppPermission(android.accounts.Account, java.lang.String, int, boolean) throws android.os.RemoteException
    {
        android.accounts.IAccountManager$Default r0;
        android.accounts.Account r1;
        java.lang.String r2;
        int i0;
        boolean z0;

        r0 := @this: android.accounts.IAccountManager$Default;

        r1 := @parameter0: android.accounts.Account;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        return;
    }

    public void updateCredentials(android.accounts.IAccountManagerResponse, android.accounts.Account, java.lang.String, boolean, android.os.Bundle) throws android.os.RemoteException
    {
        android.accounts.IAccountManager$Default r0;
        android.accounts.IAccountManagerResponse r1;
        android.accounts.Account r2;
        java.lang.String r3;
        boolean z0;
        android.os.Bundle r4;

        r0 := @this: android.accounts.IAccountManager$Default;

        r1 := @parameter0: android.accounts.IAccountManagerResponse;

        r2 := @parameter1: android.accounts.Account;

        r3 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        r4 := @parameter4: android.os.Bundle;

        return;
    }
}
