public class android.animation.AnimatorInflater extends java.lang.Object
{
    private static final boolean DBG_ANIMATOR_INFLATER;
    private static final int SEQUENTIALLY;
    private static final java.lang.String TAG;
    private static final int TOGETHER;
    private static final int VALUE_TYPE_COLOR;
    private static final int VALUE_TYPE_FLOAT;
    private static final int VALUE_TYPE_INT;
    private static final int VALUE_TYPE_PATH;
    private static final int VALUE_TYPE_UNDEFINED;
    private static final android.util.TypedValue sTmpTypedValue;

    static void <clinit>()
    {
        android.util.TypedValue $r0;

        <android.animation.AnimatorInflater: int VALUE_TYPE_UNDEFINED> = 4;

        <android.animation.AnimatorInflater: int VALUE_TYPE_PATH> = 2;

        <android.animation.AnimatorInflater: int VALUE_TYPE_INT> = 1;

        <android.animation.AnimatorInflater: int VALUE_TYPE_FLOAT> = 0;

        <android.animation.AnimatorInflater: int VALUE_TYPE_COLOR> = 3;

        <android.animation.AnimatorInflater: int TOGETHER> = 0;

        <android.animation.AnimatorInflater: java.lang.String TAG> = "AnimatorInflater";

        <android.animation.AnimatorInflater: int SEQUENTIALLY> = 1;

        <android.animation.AnimatorInflater: boolean DBG_ANIMATOR_INFLATER> = 0;

        $r0 = new android.util.TypedValue;

        specialinvoke $r0.<android.util.TypedValue: void <init>()>();

        <android.animation.AnimatorInflater: android.util.TypedValue sTmpTypedValue> = $r0;

        return;
    }

    public void <init>()
    {
        android.animation.AnimatorInflater r0;

        r0 := @this: android.animation.AnimatorInflater;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static android.animation.Animator createAnimatorFromXml(android.content.res.Resources, android.content.res.Resources$Theme, org.xmlpull.v1.XmlPullParser, float) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.res.Resources r0;
        android.content.res.Resources$Theme r1;
        org.xmlpull.v1.XmlPullParser r2;
        float f0;
        android.util.AttributeSet $r3;
        android.animation.Animator $r4;

        r0 := @parameter0: android.content.res.Resources;

        r1 := @parameter1: android.content.res.Resources$Theme;

        r2 := @parameter2: org.xmlpull.v1.XmlPullParser;

        f0 := @parameter3: float;

        $r3 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>(r2);

        $r4 = staticinvoke <android.animation.AnimatorInflater: android.animation.Animator createAnimatorFromXml(android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float)>(r0, r1, r2, $r3, null, 0, f0);

        return $r4;
    }

    private static android.animation.Animator createAnimatorFromXml(android.content.res.Resources, android.content.res.Resources$Theme, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.animation.AnimatorSet, int, float) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser r0;
        android.util.AttributeSet r1, $r11;
        android.animation.AnimatorSet r2, $r14, $r16;
        int i0, i1, i2, $i3, $i4, $i5, i6, i7;
        float f0;
        boolean $z0, $z1, $z2, $z3, $z4, $z6, z7;
        java.lang.Object $r3;
        android.animation.Animator $r4, r21;
        java.lang.StringBuilder $r5;
        java.lang.String $r7, $r10, r23;
        java.lang.RuntimeException $r9;
        java.util.ArrayList $r12, r22, r27;
        android.animation.ValueAnimator $r13;
        int[] $r15, $r18;
        android.content.res.Resources r19;
        android.content.res.Resources$Theme r20;
        android.content.res.TypedArray r25;
        android.animation.PropertyValuesHolder[] r26;
        android.animation.Animator[] r29;
        java.util.Iterator r30;

        r19 := @parameter0: android.content.res.Resources;

        r20 := @parameter1: android.content.res.Resources$Theme;

        r0 := @parameter2: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter3: android.util.AttributeSet;

        r2 := @parameter4: android.animation.AnimatorSet;

        i0 := @parameter5: int;

        f0 := @parameter6: float;

        r21 = null;

        i1 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        r22 = null;

     label01:
        i6 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i6 != 3 goto label03;

        $i5 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i5 <= i1 goto label02;

        goto label03;

     label02:
        goto label15;

     label03:
        if i6 == 1 goto label15;

        if i6 == 2 goto label04;

        goto label01;

     label04:
        r23 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        z7 = 0;

        $z1 = virtualinvoke r23.<java.lang.String: boolean equals(java.lang.Object)>("objectAnimator");

        if $z1 == 0 goto label05;

        r21 = staticinvoke <android.animation.AnimatorInflater: android.animation.ObjectAnimator loadObjectAnimator(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,float)>(r19, r20, r1, f0);

        goto label11;

     label05:
        $z2 = virtualinvoke r23.<java.lang.String: boolean equals(java.lang.Object)>("animator");

        if $z2 == 0 goto label06;

        r21 = staticinvoke <android.animation.AnimatorInflater: android.animation.ValueAnimator loadAnimator(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,android.animation.ValueAnimator,float)>(r19, r20, r1, null, f0);

        goto label11;

     label06:
        $z3 = virtualinvoke r23.<java.lang.String: boolean equals(java.lang.Object)>("set");

        if $z3 == 0 goto label09;

        $r14 = new android.animation.AnimatorSet;

        specialinvoke $r14.<android.animation.AnimatorSet: void <init>()>();

        if r20 == null goto label07;

        $r18 = <com.android.internal.R$styleable: int[] AnimatorSet>;

        r25 = virtualinvoke r20.<android.content.res.Resources$Theme: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r1, $r18, 0, 0);

        goto label08;

     label07:
        $r15 = <com.android.internal.R$styleable: int[] AnimatorSet>;

        r25 = virtualinvoke r19.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r1, $r15);

     label08:
        $i4 = virtualinvoke r25.<android.content.res.TypedArray: int getChangingConfigurations()>();

        virtualinvoke $r14.<android.animation.Animator: void appendChangingConfigurations(int)>($i4);

        i2 = virtualinvoke r25.<android.content.res.TypedArray: int getInt(int,int)>(0, 0);

        $r16 = (android.animation.AnimatorSet) $r14;

        staticinvoke <android.animation.AnimatorInflater: android.animation.Animator createAnimatorFromXml(android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float)>(r19, r20, r0, r1, $r16, i2, f0);

        virtualinvoke r25.<android.content.res.TypedArray: void recycle()>();

        r21 = $r14;

        goto label11;

     label09:
        $z4 = virtualinvoke r23.<java.lang.String: boolean equals(java.lang.Object)>("propertyValuesHolder");

        if $z4 == 0 goto label14;

        $r11 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>(r0);

        r26 = staticinvoke <android.animation.AnimatorInflater: android.animation.PropertyValuesHolder[] loadValues(android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>(r19, r20, r0, $r11);

        if r26 == null goto label10;

        if r21 == null goto label10;

        $z6 = r21 instanceof android.animation.ValueAnimator;

        if $z6 == 0 goto label10;

        $r13 = (android.animation.ValueAnimator) r21;

        virtualinvoke $r13.<android.animation.ValueAnimator: void setValues(android.animation.PropertyValuesHolder[])>(r26);

     label10:
        z7 = 1;

     label11:
        r27 = r22;

        if r2 == null goto label13;

        r27 = r22;

        if z7 != 0 goto label13;

        r27 = r22;

        if r22 != null goto label12;

        $r12 = new java.util.ArrayList;

        specialinvoke $r12.<java.util.ArrayList: void <init>()>();

        r27 = $r12;

     label12:
        virtualinvoke r27.<java.util.ArrayList: boolean add(java.lang.Object)>(r21);

     label13:
        r22 = r27;

        goto label01;

     label14:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown animator name: ");

        $r7 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = new java.lang.RuntimeException;

        $r10 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String)>($r10);

        throw $r9;

     label15:
        if r2 == null goto label19;

        if r22 == null goto label19;

        $i3 = virtualinvoke r22.<java.util.ArrayList: int size()>();

        r29 = newarray (android.animation.Animator)[$i3];

        i7 = 0;

        r30 = virtualinvoke r22.<java.util.ArrayList: java.util.Iterator iterator()>();

     label16:
        $z0 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label17;

        $r3 = interfaceinvoke r30.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (android.animation.Animator) $r3;

        r29[i7] = $r4;

        i7 = i7 + 1;

        goto label16;

     label17:
        if i0 != 0 goto label18;

        virtualinvoke r2.<android.animation.AnimatorSet: void playTogether(android.animation.Animator[])>(r29);

        goto label19;

     label18:
        virtualinvoke r2.<android.animation.AnimatorSet: void playSequentially(android.animation.Animator[])>(r29);

     label19:
        return r21;
    }

    private static android.animation.Keyframe createNewKeyframe(android.animation.Keyframe, float)
    {
        float f0;
        java.lang.Class $r0, $r1, $r2, $r3;
        android.animation.Keyframe r4, r5;

        r4 := @parameter0: android.animation.Keyframe;

        f0 := @parameter1: float;

        $r0 = virtualinvoke r4.<android.animation.Keyframe: java.lang.Class getType()>();

        $r1 = <java.lang.Float: java.lang.Class TYPE>;

        if $r0 != $r1 goto label1;

        r5 = staticinvoke <android.animation.Keyframe: android.animation.Keyframe ofFloat(float)>(f0);

        goto label3;

     label1:
        $r2 = virtualinvoke r4.<android.animation.Keyframe: java.lang.Class getType()>();

        $r3 = <java.lang.Integer: java.lang.Class TYPE>;

        if $r2 != $r3 goto label2;

        r5 = staticinvoke <android.animation.Keyframe: android.animation.Keyframe ofInt(float)>(f0);

        goto label3;

     label2:
        r5 = staticinvoke <android.animation.Keyframe: android.animation.Keyframe ofObject(float)>(f0);

     label3:
        return r5;
    }

    private static android.animation.StateListAnimator createStateListAnimatorFromXml(android.content.Context, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        android.content.Context r0;
        org.xmlpull.v1.XmlPullParser r1;
        android.util.AttributeSet r2;
        int i0, $i1, i2, i3, i4, i5;
        int[] r4, $r9;
        android.animation.StateListAnimator $r5;
        java.lang.String $r6, $r7;
        boolean $z0, $z1;
        android.content.res.Resources$NotFoundException $r8;
        android.content.res.Resources $r10;
        android.content.res.Resources$Theme $r11;
        android.animation.Animator r12, r13;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter2: android.util.AttributeSet;

        $r5 = new android.animation.StateListAnimator;

        specialinvoke $r5.<android.animation.StateListAnimator: void <init>()>();

     label01:
        i2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i2 == 1 goto label12;

        if i2 == 2 goto label02;

        if i2 == 3 goto label12;

        goto label11;

     label02:
        r12 = null;

        $r6 = "item";

        $r7 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label11;

        i0 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getAttributeCount()>();

        r4 = newarray (int)[i0];

        i3 = 0;

        i4 = 0;

     label03:
        if i4 >= i0 goto label08;

        i5 = interfaceinvoke r2.<android.util.AttributeSet: int getAttributeNameResource(int)>(i4);

        if i5 != 16843213 goto label04;

        $i1 = interfaceinvoke r2.<android.util.AttributeSet: int getAttributeResourceValue(int,int)>(i4, 0);

        r12 = staticinvoke <android.animation.AnimatorInflater: android.animation.Animator loadAnimator(android.content.Context,int)>(r0, $i1);

        goto label07;

     label04:
        $z1 = interfaceinvoke r2.<android.util.AttributeSet: boolean getAttributeBooleanValue(int,boolean)>(i4, 0);

        if $z1 == 0 goto label05;

        goto label06;

     label05:
        i5 = neg i5;

     label06:
        r4[i3] = i5;

        i3 = i3 + 1;

     label07:
        i4 = i4 + 1;

        goto label03;

     label08:
        r13 = r12;

        if r12 != null goto label09;

        $r10 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r11 = virtualinvoke r0.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        r13 = staticinvoke <android.animation.AnimatorInflater: android.animation.Animator createAnimatorFromXml(android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,float)>($r10, $r11, r1, 1.0F);

     label09:
        if r13 == null goto label10;

        $r9 = staticinvoke <android.util.StateSet: int[] trimStateSet(int[],int)>(r4, i3);

        virtualinvoke $r5.<android.animation.StateListAnimator: void addState(int[],android.animation.Animator)>($r9, r13);

        goto label11;

     label10:
        $r8 = new android.content.res.Resources$NotFoundException;

        specialinvoke $r8.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>("animation state item must have a valid animation");

        throw $r8;

     label11:
        goto label01;

     label12:
        return $r5;
    }

    private static void distributeKeyframes(android.animation.Keyframe[], float, int, int)
    {
        android.animation.Keyframe[] r0;
        int i0, $i1, $i2, $i3, i4;
        float $f0, $f1, $f2, f3, f4;
        android.animation.Keyframe $r1, $r2;

        r0 := @parameter0: android.animation.Keyframe[];

        f3 := @parameter1: float;

        i4 := @parameter2: int;

        i0 := @parameter3: int;

        $i1 = i0 - i4;

        $i2 = $i1 + 2;

        $f0 = (float) $i2;

        f4 = f3 / $f0;

     label1:
        if i4 > i0 goto label2;

        $r2 = r0[i4];

        $i3 = i4 - 1;

        $r1 = r0[$i3];

        $f1 = virtualinvoke $r1.<android.animation.Keyframe: float getFraction()>();

        $f2 = $f1 + f4;

        virtualinvoke $r2.<android.animation.Keyframe: void setFraction(float)>($f2);

        i4 = i4 + 1;

        goto label1;

     label2:
        return;
    }

    private static void dumpKeyframes(java.lang.Object[], java.lang.String)
    {
        java.lang.Object[] r0;
        int i0, $i1, i5;
        android.animation.Keyframe r1;
        float f0, $f1;
        java.lang.Object $r4, r15;
        java.lang.StringBuilder $r5;
        byte $b3;
        boolean $z0;
        java.lang.String $r12, r13;
        java.io.Serializable r14;

        r0 := @parameter0: java.lang.Object[];

        r13 := @parameter1: java.lang.String;

        if r0 == null goto label7;

        $i1 = lengthof r0;

        if $i1 != 0 goto label1;

        goto label7;

     label1:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("AnimatorInflater", r13);

        i0 = lengthof r0;

        i5 = 0;

     label2:
        if i5 >= i0 goto label6;

        $r4 = r0[i5];

        r1 = (android.animation.Keyframe) $r4;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Keyframe ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": fraction ");

        f0 = virtualinvoke r1.<android.animation.Keyframe: float getFraction()>();

        $b3 = f0 cmpg 0.0F;

        if $b3 >= 0 goto label3;

        r14 = "null";

        goto label4;

     label3:
        $f1 = virtualinvoke r1.<android.animation.Keyframe: float getFraction()>();

        r14 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f1);

     label4:
        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r14);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", , value : ");

        r15 = "null";

        $z0 = virtualinvoke r1.<android.animation.Keyframe: boolean hasValue()>();

        if $z0 == 0 goto label5;

        r15 = virtualinvoke r1.<android.animation.Keyframe: java.lang.Object getValue()>();

     label5:
        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r15);

        $r12 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("AnimatorInflater", $r12);

        i5 = i5 + 1;

        goto label2;

     label6:
        return;

     label7:
        return;
    }

    private static int getChangingConfigs(android.content.res.Resources, int)
    {
        android.util.TypedValue r0, $r1, $r2;
        java.lang.Throwable $r3;
        android.content.res.Resources r4;
        int i0, i1;

        r4 := @parameter0: android.content.res.Resources;

        i0 := @parameter1: int;

        r0 = <android.animation.AnimatorInflater: android.util.TypedValue sTmpTypedValue>;

        entermonitor r0;

     label1:
        $r1 = <android.animation.AnimatorInflater: android.util.TypedValue sTmpTypedValue>;

        virtualinvoke r4.<android.content.res.Resources: void getValue(int,android.util.TypedValue,boolean)>(i0, $r1, 1);

        $r2 = <android.animation.AnimatorInflater: android.util.TypedValue sTmpTypedValue>;

        i1 = $r2.<android.util.TypedValue: int changingConfigurations>;

        exitmonitor r0;

     label2:
        return i1;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private static android.animation.PropertyValuesHolder getPVH(android.content.res.TypedArray, int, int, int, java.lang.String)
    {
        int i0, i1, i2, i3, i4, i5, i6, i7;
        java.lang.String r0, r1, $r19, r22;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, z6, z7, z8;
        float $f0, $f1, $f2, f3, f4, f5;
        int[] $r3, $r32, $r33;
        float[] $r4, $r5, $r6;
        android.util.PathParser$PathData $r7, $r8, r25, r26;
        android.animation.AnimatorInflater$PathDataEvaluator $r9, $r11;
        java.lang.Object[] $r10, $r12, $r20;
        java.lang.StringBuilder $r13;
        android.view.InflateException $r18;
        android.content.res.TypedArray r21;
        android.util.TypedValue r23, r24;
        android.animation.PropertyValuesHolder r27, r29, r31;
        android.animation.ArgbEvaluator r30;

        r21 := @parameter0: android.content.res.TypedArray;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i0 := @parameter3: int;

        r22 := @parameter4: java.lang.String;

        r23 = virtualinvoke r21.<android.content.res.TypedArray: android.util.TypedValue peekValue(int)>(i2);

        if r23 == null goto label01;

        z6 = 1;

        goto label02;

     label01:
        z6 = 0;

     label02:
        if z6 == 0 goto label03;

        i3 = r23.<android.util.TypedValue: int type>;

        goto label04;

     label03:
        i3 = 0;

     label04:
        r24 = virtualinvoke r21.<android.content.res.TypedArray: android.util.TypedValue peekValue(int)>(i0);

        if r24 == null goto label05;

        z7 = 1;

        goto label06;

     label05:
        z7 = 0;

     label06:
        if z7 == 0 goto label07;

        i4 = r24.<android.util.TypedValue: int type>;

        goto label08;

     label07:
        i4 = 0;

     label08:
        if i1 != 4 goto label12;

        if z6 == 0 goto label09;

        $z5 = staticinvoke <android.animation.AnimatorInflater: boolean isColorType(int)>(i3);

        if $z5 != 0 goto label10;

     label09:
        if z7 == 0 goto label11;

        $z4 = staticinvoke <android.animation.AnimatorInflater: boolean isColorType(int)>(i4);

        if $z4 == 0 goto label11;

     label10:
        i1 = 3;

        goto label12;

     label11:
        i1 = 0;

        goto label12;

     label12:
        if i1 != 0 goto label13;

        z8 = 1;

        goto label14;

     label13:
        z8 = 0;

     label14:
        if i1 != 2 goto label27;

        r0 = virtualinvoke r21.<android.content.res.TypedArray: java.lang.String getString(int)>(i2);

        r1 = virtualinvoke r21.<android.content.res.TypedArray: java.lang.String getString(int)>(i0);

        if r0 != null goto label15;

        r25 = null;

        goto label16;

     label15:
        $r7 = new android.util.PathParser$PathData;

        specialinvoke $r7.<android.util.PathParser$PathData: void <init>(java.lang.String)>(r0);

        r25 = $r7;

     label16:
        if r1 != null goto label17;

        r26 = null;

        goto label18;

     label17:
        $r8 = new android.util.PathParser$PathData;

        specialinvoke $r8.<android.util.PathParser$PathData: void <init>(java.lang.String)>(r1);

        r26 = $r8;

     label18:
        if r25 != null goto label20;

        if r26 == null goto label19;

        goto label20;

     label19:
        goto label25;

     label20:
        if r25 == null goto label24;

        $r11 = new android.animation.AnimatorInflater$PathDataEvaluator;

        specialinvoke $r11.<android.animation.AnimatorInflater$PathDataEvaluator: void <init>(android.animation.AnimatorInflater$1)>(null);

        if r26 == null goto label22;

        $z3 = staticinvoke <android.util.PathParser: boolean canMorph(android.util.PathParser$PathData,android.util.PathParser$PathData)>(r25, r26);

        if $z3 == 0 goto label21;

        $r20 = newarray (java.lang.Object)[2];

        $r20[0] = r25;

        $r20[1] = r26;

        r27 = staticinvoke <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofObject(java.lang.String,android.animation.TypeEvaluator,java.lang.Object[])>(r22, $r11, $r20);

        goto label23;

     label21:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Can\'t morph from ");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r18 = new android.view.InflateException;

        $r19 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<android.view.InflateException: void <init>(java.lang.String)>($r19);

        throw $r18;

     label22:
        $r12 = newarray (java.lang.Object)[1];

        $r12[0] = r25;

        r27 = staticinvoke <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofObject(java.lang.String,android.animation.TypeEvaluator,java.lang.Object[])>(r22, $r11, $r12);

     label23:
        goto label26;

     label24:
        if r26 == null goto label25;

        $r9 = new android.animation.AnimatorInflater$PathDataEvaluator;

        specialinvoke $r9.<android.animation.AnimatorInflater$PathDataEvaluator: void <init>(android.animation.AnimatorInflater$1)>(null);

        $r10 = newarray (java.lang.Object)[1];

        $r10[0] = r26;

        r27 = staticinvoke <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofObject(java.lang.String,android.animation.TypeEvaluator,java.lang.Object[])>(r22, $r9, $r10);

        goto label26;

     label25:
        r27 = null;

     label26:
        r29 = r27;

        goto label52;

     label27:
        r30 = null;

        if i1 != 3 goto label28;

        r30 = staticinvoke <android.animation.ArgbEvaluator: android.animation.ArgbEvaluator getInstance()>();

     label28:
        if z8 == 0 goto label38;

        if z6 == 0 goto label34;

        if i3 != 5 goto label29;

        f3 = virtualinvoke r21.<android.content.res.TypedArray: float getDimension(int,float)>(i2, 0.0F);

        goto label30;

     label29:
        f3 = virtualinvoke r21.<android.content.res.TypedArray: float getFloat(int,float)>(i2, 0.0F);

     label30:
        if z7 == 0 goto label33;

        if i4 != 5 goto label31;

        f4 = virtualinvoke r21.<android.content.res.TypedArray: float getDimension(int,float)>(i0, 0.0F);

        goto label32;

     label31:
        f4 = virtualinvoke r21.<android.content.res.TypedArray: float getFloat(int,float)>(i0, 0.0F);

     label32:
        $r6 = newarray (float)[2];

        $r6[0] = f3;

        $r6[1] = f4;

        r31 = staticinvoke <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofFloat(java.lang.String,float[])>(r22, $r6);

        goto label37;

     label33:
        $r5 = newarray (float)[1];

        $r5[0] = f3;

        r31 = staticinvoke <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofFloat(java.lang.String,float[])>(r22, $r5);

        goto label37;

     label34:
        if i4 != 5 goto label35;

        f5 = virtualinvoke r21.<android.content.res.TypedArray: float getDimension(int,float)>(i0, 0.0F);

        goto label36;

     label35:
        f5 = virtualinvoke r21.<android.content.res.TypedArray: float getFloat(int,float)>(i0, 0.0F);

     label36:
        $r4 = newarray (float)[1];

        $r4[0] = f5;

        r31 = staticinvoke <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofFloat(java.lang.String,float[])>(r22, $r4);

     label37:
        goto label51;

     label38:
        if z6 == 0 goto label46;

        if i3 != 5 goto label39;

        $f2 = virtualinvoke r21.<android.content.res.TypedArray: float getDimension(int,float)>(i2, 0.0F);

        i5 = (int) $f2;

        goto label41;

     label39:
        $z1 = staticinvoke <android.animation.AnimatorInflater: boolean isColorType(int)>(i3);

        if $z1 == 0 goto label40;

        i5 = virtualinvoke r21.<android.content.res.TypedArray: int getColor(int,int)>(i2, 0);

        goto label41;

     label40:
        i5 = virtualinvoke r21.<android.content.res.TypedArray: int getInt(int,int)>(i2, 0);

     label41:
        if z7 == 0 goto label45;

        if i4 != 5 goto label42;

        $f1 = virtualinvoke r21.<android.content.res.TypedArray: float getDimension(int,float)>(i0, 0.0F);

        i6 = (int) $f1;

        goto label44;

     label42:
        $z2 = staticinvoke <android.animation.AnimatorInflater: boolean isColorType(int)>(i4);

        if $z2 == 0 goto label43;

        i6 = virtualinvoke r21.<android.content.res.TypedArray: int getColor(int,int)>(i0, 0);

        goto label44;

     label43:
        i6 = virtualinvoke r21.<android.content.res.TypedArray: int getInt(int,int)>(i0, 0);

     label44:
        $r32 = newarray (int)[2];

        $r32[0] = i5;

        $r32[1] = i6;

        r31 = staticinvoke <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofInt(java.lang.String,int[])>(r22, $r32);

        goto label51;

     label45:
        $r3 = newarray (int)[1];

        $r3[0] = i5;

        r31 = staticinvoke <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofInt(java.lang.String,int[])>(r22, $r3);

        goto label51;

     label46:
        if z7 == 0 goto label50;

        if i4 != 5 goto label47;

        $f0 = virtualinvoke r21.<android.content.res.TypedArray: float getDimension(int,float)>(i0, 0.0F);

        i7 = (int) $f0;

        goto label49;

     label47:
        $z0 = staticinvoke <android.animation.AnimatorInflater: boolean isColorType(int)>(i4);

        if $z0 == 0 goto label48;

        i7 = virtualinvoke r21.<android.content.res.TypedArray: int getColor(int,int)>(i0, 0);

        goto label49;

     label48:
        i7 = virtualinvoke r21.<android.content.res.TypedArray: int getInt(int,int)>(i0, 0);

     label49:
        $r33 = newarray (int)[1];

        $r33[0] = i7;

        r31 = staticinvoke <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofInt(java.lang.String,int[])>(r22, $r33);

        goto label51;

     label50:
        r31 = null;

     label51:
        r29 = r31;

        if r31 == null goto label52;

        r29 = r31;

        if r30 == null goto label52;

        virtualinvoke r31.<android.animation.PropertyValuesHolder: void setEvaluator(android.animation.TypeEvaluator)>(r30);

        r29 = r31;

     label52:
        return r29;
    }

    private static int inferValueTypeFromValues(android.content.res.TypedArray, int, int)
    {
        android.util.TypedValue r0, r2;
        boolean $z1, $z2, z3, z4;
        android.content.res.TypedArray r1;
        int i0, i1, i2, i3;
        byte b4;

        r1 := @parameter0: android.content.res.TypedArray;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r0 = virtualinvoke r1.<android.content.res.TypedArray: android.util.TypedValue peekValue(int)>(i0);

        i2 = 0;

        if r0 == null goto label01;

        z3 = 1;

        goto label02;

     label01:
        z3 = 0;

     label02:
        if z3 == 0 goto label03;

        i3 = r0.<android.util.TypedValue: int type>;

        goto label04;

     label03:
        i3 = 0;

     label04:
        r2 = virtualinvoke r1.<android.content.res.TypedArray: android.util.TypedValue peekValue(int)>(i1);

        if r2 == null goto label05;

        z4 = 1;

        goto label06;

     label05:
        z4 = 0;

     label06:
        if z4 == 0 goto label07;

        i2 = r2.<android.util.TypedValue: int type>;

     label07:
        if z3 == 0 goto label08;

        $z2 = staticinvoke <android.animation.AnimatorInflater: boolean isColorType(int)>(i3);

        if $z2 != 0 goto label09;

     label08:
        if z4 == 0 goto label10;

        $z1 = staticinvoke <android.animation.AnimatorInflater: boolean isColorType(int)>(i2);

        if $z1 == 0 goto label10;

     label09:
        b4 = 3;

        goto label11;

     label10:
        b4 = 0;

     label11:
        return b4;
    }

    private static int inferValueTypeOfKeyframe(android.content.res.Resources, android.content.res.Resources$Theme, android.util.AttributeSet)
    {
        android.util.AttributeSet r0;
        int[] $r1, $r2;
        int $i0;
        boolean $z0, z1;
        android.content.res.Resources r3;
        android.content.res.Resources$Theme r4;
        android.content.res.TypedArray r5;
        android.util.TypedValue r6;
        byte b1;

        r3 := @parameter0: android.content.res.Resources;

        r4 := @parameter1: android.content.res.Resources$Theme;

        r0 := @parameter2: android.util.AttributeSet;

        z1 = 0;

        if r4 == null goto label1;

        $r2 = <com.android.internal.R$styleable: int[] Keyframe>;

        r5 = virtualinvoke r4.<android.content.res.Resources$Theme: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r0, $r2, 0, 0);

        goto label2;

     label1:
        $r1 = <com.android.internal.R$styleable: int[] Keyframe>;

        r5 = virtualinvoke r3.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r0, $r1);

     label2:
        r6 = virtualinvoke r5.<android.content.res.TypedArray: android.util.TypedValue peekValue(int)>(0);

        if r6 == null goto label3;

        z1 = 1;

     label3:
        if z1 == 0 goto label4;

        $i0 = r6.<android.util.TypedValue: int type>;

        $z0 = staticinvoke <android.animation.AnimatorInflater: boolean isColorType(int)>($i0);

        if $z0 == 0 goto label4;

        b1 = 3;

        goto label5;

     label4:
        b1 = 0;

     label5:
        virtualinvoke r5.<android.content.res.TypedArray: void recycle()>();

        return b1;
    }

    private static boolean isColorType(int)
    {
        int i0;
        boolean z0;

        i0 := @parameter0: int;

        if i0 < 28 goto label1;

        if i0 > 31 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public static android.animation.Animator loadAnimator(android.content.Context, int) throws android.content.res.Resources$NotFoundException
    {
        android.content.Context r0;
        int i0;
        android.content.res.Resources $r1;
        android.content.res.Resources$Theme $r2;
        android.animation.Animator $r3;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        $r1 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke r0.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $r3 = staticinvoke <android.animation.AnimatorInflater: android.animation.Animator loadAnimator(android.content.res.Resources,android.content.res.Resources$Theme,int)>($r1, $r2, i0);

        return $r3;
    }

    public static android.animation.Animator loadAnimator(android.content.res.Resources, android.content.res.Resources$Theme, int) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources r0;
        android.content.res.Resources$Theme r1;
        int i0;
        android.animation.Animator $r2;

        r0 := @parameter0: android.content.res.Resources;

        r1 := @parameter1: android.content.res.Resources$Theme;

        i0 := @parameter2: int;

        $r2 = staticinvoke <android.animation.AnimatorInflater: android.animation.Animator loadAnimator(android.content.res.Resources,android.content.res.Resources$Theme,int,float)>(r0, r1, i0, 1.0F);

        return $r2;
    }

    public static android.animation.Animator loadAnimator(android.content.res.Resources, android.content.res.Resources$Theme, int, float) throws android.content.res.Resources$NotFoundException
    {
        int i0, $i2;
        float f0;
        android.content.res.ConfigurationBoundResourceCache r0;
        android.content.res.XmlResourceParser r1, r22, r23, r24;
        android.animation.Animator r2, r21, r25, r26;
        android.content.res.ConstantState r3;
        long $l1, $l3;
        java.lang.Object $r4, $r5;
        java.lang.Throwable $r6, $r12, $r13;
        java.lang.String $r8, $r10, $r15, $r17;
        android.content.res.Resources r19;
        android.content.res.Resources$Theme r20;
        android.content.res.Resources$NotFoundException r29, r32;
        java.lang.StringBuilder r30, r33;

        r19 := @parameter0: android.content.res.Resources;

        r20 := @parameter1: android.content.res.Resources$Theme;

        i0 := @parameter2: int;

        f0 := @parameter3: float;

        r0 = virtualinvoke r19.<android.content.res.Resources: android.content.res.ConfigurationBoundResourceCache getAnimatorCache()>();

        $l1 = (long) i0;

        $r4 = virtualinvoke r0.<android.content.res.ConfigurationBoundResourceCache: java.lang.Object getInstance(long,android.content.res.Resources,android.content.res.Resources$Theme)>($l1, r19, r20);

        r21 = (android.animation.Animator) $r4;

        if r21 == null goto label01;

        return r21;

     label01:
        r22 = null;

        r23 = null;

        r24 = null;

     label02:
        r1 = virtualinvoke r19.<android.content.res.Resources: android.content.res.XmlResourceParser getAnimation(int)>(i0);

     label03:
        r24 = r1;

        r22 = r1;

        r23 = r1;

     label04:
        r2 = staticinvoke <android.animation.AnimatorInflater: android.animation.Animator createAnimatorFromXml(android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,float)>(r19, r20, r1, f0);

     label05:
        r25 = r2;

        if r2 == null goto label14;

        r24 = r1;

        r22 = r1;

        r23 = r1;

     label06:
        $i2 = staticinvoke <android.animation.AnimatorInflater: int getChangingConfigs(android.content.res.Resources,int)>(r19, i0);

        virtualinvoke r2.<android.animation.Animator: void appendChangingConfigurations(int)>($i2);

     label07:
        r24 = r1;

        r22 = r1;

        r23 = r1;

     label08:
        r3 = virtualinvoke r2.<android.animation.Animator: android.content.res.ConstantState createConstantState()>();

     label09:
        r25 = r2;

        if r3 == null goto label14;

        r24 = r1;

        r22 = r1;

        r23 = r1;

     label10:
        $l3 = (long) i0;

        virtualinvoke r0.<android.content.res.ConfigurationBoundResourceCache: void put(long,android.content.res.Resources$Theme,java.lang.Object)>($l3, r20, r3);

     label11:
        r24 = r1;

        r22 = r1;

        r23 = r1;

     label12:
        $r5 = virtualinvoke r3.<android.content.res.ConstantState: java.lang.Object newInstance(android.content.res.Resources,android.content.res.Resources$Theme)>(r19, r20);

        r26 = (android.animation.Animator) $r5;

     label13:
        r25 = r26;

     label14:
        if r1 == null goto label15;

        interfaceinvoke r1.<android.content.res.XmlResourceParser: void close()>();

     label15:
        return r25;

     label16:
        $r12 := @caughtexception;

        goto label49;

     label17:
        $r13 := @caughtexception;

        r24 = r22;

     label18:
        r29 = new android.content.res.Resources$NotFoundException;

     label19:
        r24 = r22;

     label20:
        r30 = new java.lang.StringBuilder;

     label21:
        r24 = r22;

     label22:
        specialinvoke r30.<java.lang.StringBuilder: void <init>()>();

     label23:
        r24 = r22;

     label24:
        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t load animation resource ID #0x");

     label25:
        r24 = r22;

     label26:
        $r15 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

     label27:
        r24 = r22;

     label28:
        $r17 = virtualinvoke r30.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r29.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r17);

     label29:
        r24 = r22;

     label30:
        virtualinvoke r29.<android.content.res.Resources$NotFoundException: java.lang.Throwable initCause(java.lang.Throwable)>($r13);

     label31:
        r24 = r22;

     label32:
        throw r29;

     label33:
        $r6 := @caughtexception;

        r24 = r23;

     label34:
        r32 = new android.content.res.Resources$NotFoundException;

     label35:
        r24 = r23;

     label36:
        r33 = new java.lang.StringBuilder;

     label37:
        r24 = r23;

     label38:
        specialinvoke r33.<java.lang.StringBuilder: void <init>()>();

     label39:
        r24 = r23;

     label40:
        virtualinvoke r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t load animation resource ID #0x");

     label41:
        r24 = r23;

     label42:
        $r8 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        virtualinvoke r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

     label43:
        r24 = r23;

     label44:
        $r10 = virtualinvoke r33.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r32.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r10);

     label45:
        r24 = r23;

     label46:
        virtualinvoke r32.<android.content.res.Resources$NotFoundException: java.lang.Throwable initCause(java.lang.Throwable)>($r6);

     label47:
        r24 = r23;

     label48:
        throw r32;

     label49:
        if r24 == null goto label50;

        interfaceinvoke r24.<android.content.res.XmlResourceParser: void close()>();

     label50:
        throw $r12;

        catch org.xmlpull.v1.XmlPullParserException from label02 to label03 with label33;
        catch java.io.IOException from label02 to label03 with label17;
        catch java.lang.Throwable from label02 to label03 with label16;
        catch org.xmlpull.v1.XmlPullParserException from label04 to label05 with label33;
        catch java.io.IOException from label04 to label05 with label17;
        catch java.lang.Throwable from label04 to label05 with label16;
        catch org.xmlpull.v1.XmlPullParserException from label06 to label07 with label33;
        catch java.io.IOException from label06 to label07 with label17;
        catch java.lang.Throwable from label06 to label07 with label16;
        catch org.xmlpull.v1.XmlPullParserException from label08 to label09 with label33;
        catch java.io.IOException from label08 to label09 with label17;
        catch java.lang.Throwable from label08 to label09 with label16;
        catch org.xmlpull.v1.XmlPullParserException from label10 to label11 with label33;
        catch java.io.IOException from label10 to label11 with label17;
        catch java.lang.Throwable from label10 to label11 with label16;
        catch org.xmlpull.v1.XmlPullParserException from label12 to label13 with label33;
        catch java.io.IOException from label12 to label13 with label17;
        catch java.lang.Throwable from label12 to label13 with label16;
        catch java.lang.Throwable from label18 to label19 with label16;
        catch java.lang.Throwable from label20 to label21 with label16;
        catch java.lang.Throwable from label22 to label23 with label16;
        catch java.lang.Throwable from label24 to label25 with label16;
        catch java.lang.Throwable from label26 to label27 with label16;
        catch java.lang.Throwable from label28 to label29 with label16;
        catch java.lang.Throwable from label30 to label31 with label16;
        catch java.lang.Throwable from label32 to label33 with label16;
        catch java.lang.Throwable from label34 to label35 with label16;
        catch java.lang.Throwable from label36 to label37 with label16;
        catch java.lang.Throwable from label38 to label39 with label16;
        catch java.lang.Throwable from label40 to label41 with label16;
        catch java.lang.Throwable from label42 to label43 with label16;
        catch java.lang.Throwable from label44 to label45 with label16;
        catch java.lang.Throwable from label46 to label47 with label16;
        catch java.lang.Throwable from label48 to label49 with label16;
    }

    private static android.animation.ValueAnimator loadAnimator(android.content.res.Resources, android.content.res.Resources$Theme, android.util.AttributeSet, android.animation.ValueAnimator, float) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources$Theme r0;
        android.animation.ValueAnimator r1, $r4, r13;
        float f0;
        int i0, $i1, $i2, $i3;
        int[] $r2, $r5, $r6, $r7;
        boolean $z0;
        android.view.animation.BaseInterpolator $r3;
        android.content.res.Resources r8;
        android.util.AttributeSet r9;
        android.content.res.TypedArray r10, r11, r12;
        android.view.animation.Interpolator r14;

        r8 := @parameter0: android.content.res.Resources;

        r0 := @parameter1: android.content.res.Resources$Theme;

        r9 := @parameter2: android.util.AttributeSet;

        r1 := @parameter3: android.animation.ValueAnimator;

        f0 := @parameter4: float;

        r10 = null;

        if r0 == null goto label1;

        $r7 = <com.android.internal.R$styleable: int[] Animator>;

        r11 = virtualinvoke r0.<android.content.res.Resources$Theme: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r9, $r7, 0, 0);

        goto label2;

     label1:
        $r2 = <com.android.internal.R$styleable: int[] Animator>;

        r11 = virtualinvoke r8.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r9, $r2);

     label2:
        if r1 == null goto label5;

        if r0 == null goto label3;

        $r6 = <com.android.internal.R$styleable: int[] PropertyAnimator>;

        r12 = virtualinvoke r0.<android.content.res.Resources$Theme: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r9, $r6, 0, 0);

        goto label4;

     label3:
        $r5 = <com.android.internal.R$styleable: int[] PropertyAnimator>;

        r12 = virtualinvoke r8.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r9, $r5);

     label4:
        $i3 = virtualinvoke r12.<android.content.res.TypedArray: int getChangingConfigurations()>();

        virtualinvoke r1.<android.animation.ValueAnimator: void appendChangingConfigurations(int)>($i3);

        r10 = r12;

     label5:
        r13 = r1;

        if r1 != null goto label6;

        $r4 = new android.animation.ValueAnimator;

        specialinvoke $r4.<android.animation.ValueAnimator: void <init>()>();

        r13 = $r4;

     label6:
        $i1 = virtualinvoke r11.<android.content.res.TypedArray: int getChangingConfigurations()>();

        virtualinvoke r13.<android.animation.ValueAnimator: void appendChangingConfigurations(int)>($i1);

        staticinvoke <android.animation.AnimatorInflater: void parseAnimatorFromTypeArray(android.animation.ValueAnimator,android.content.res.TypedArray,android.content.res.TypedArray,float)>(r13, r11, r10, f0);

        i0 = virtualinvoke r11.<android.content.res.TypedArray: int getResourceId(int,int)>(0, 0);

        if i0 <= 0 goto label8;

        r14 = staticinvoke <android.view.animation.AnimationUtils: android.view.animation.Interpolator loadInterpolator(android.content.res.Resources,android.content.res.Resources$Theme,int)>(r8, r0, i0);

        $z0 = r14 instanceof android.view.animation.BaseInterpolator;

        if $z0 == 0 goto label7;

        $r3 = (android.view.animation.BaseInterpolator) r14;

        $i2 = virtualinvoke $r3.<android.view.animation.BaseInterpolator: int getChangingConfiguration()>();

        virtualinvoke r13.<android.animation.ValueAnimator: void appendChangingConfigurations(int)>($i2);

     label7:
        virtualinvoke r13.<android.animation.ValueAnimator: void setInterpolator(android.animation.TimeInterpolator)>(r14);

     label8:
        virtualinvoke r11.<android.content.res.TypedArray: void recycle()>();

        if r10 == null goto label9;

        virtualinvoke r10.<android.content.res.TypedArray: void recycle()>();

     label9:
        return r13;
    }

    private static android.animation.Keyframe loadKeyframe(android.content.res.Resources, android.content.res.Resources$Theme, android.util.AttributeSet, int) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.res.Resources r0;
        android.content.res.Resources$Theme r1;
        float f0, $f1;
        android.util.TypedValue r2;
        int[] $r3, $r5;
        android.view.animation.Interpolator $r4;
        int $i0, $i1, i2, i3, i4;
        boolean $z0, z1;
        android.util.AttributeSet r6;
        android.content.res.TypedArray r7;
        android.animation.Keyframe r8;

        r0 := @parameter0: android.content.res.Resources;

        r1 := @parameter1: android.content.res.Resources$Theme;

        r6 := @parameter2: android.util.AttributeSet;

        i2 := @parameter3: int;

        if r1 == null goto label01;

        $r5 = <com.android.internal.R$styleable: int[] Keyframe>;

        r7 = virtualinvoke r1.<android.content.res.Resources$Theme: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r6, $r5, 0, 0);

        goto label02;

     label01:
        $r3 = <com.android.internal.R$styleable: int[] Keyframe>;

        r7 = virtualinvoke r0.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r6, $r3);

     label02:
        r8 = null;

        f0 = virtualinvoke r7.<android.content.res.TypedArray: float getFloat(int,float)>(3, -1.0F);

        r2 = virtualinvoke r7.<android.content.res.TypedArray: android.util.TypedValue peekValue(int)>(0);

        if r2 == null goto label03;

        z1 = 1;

        goto label04;

     label03:
        z1 = 0;

     label04:
        i3 = i2;

        if i2 != 4 goto label06;

        if z1 == 0 goto label05;

        $i1 = r2.<android.util.TypedValue: int type>;

        $z0 = staticinvoke <android.animation.AnimatorInflater: boolean isColorType(int)>($i1);

        if $z0 == 0 goto label05;

        i3 = 3;

        goto label06;

     label05:
        i3 = 0;

     label06:
        if z1 == 0 goto label10;

        if i3 == 0 goto label08;

        if i3 == 1 goto label07;

        if i3 == 3 goto label07;

        goto label09;

     label07:
        $i0 = virtualinvoke r7.<android.content.res.TypedArray: int getInt(int,int)>(0, 0);

        r8 = staticinvoke <android.animation.Keyframe: android.animation.Keyframe ofInt(float,int)>(f0, $i0);

        goto label09;

     label08:
        $f1 = virtualinvoke r7.<android.content.res.TypedArray: float getFloat(int,float)>(0, 0.0F);

        r8 = staticinvoke <android.animation.Keyframe: android.animation.Keyframe ofFloat(float,float)>(f0, $f1);

     label09:
        goto label12;

     label10:
        if i3 != 0 goto label11;

        r8 = staticinvoke <android.animation.Keyframe: android.animation.Keyframe ofFloat(float)>(f0);

        goto label12;

     label11:
        r8 = staticinvoke <android.animation.Keyframe: android.animation.Keyframe ofInt(float)>(f0);

     label12:
        i4 = virtualinvoke r7.<android.content.res.TypedArray: int getResourceId(int,int)>(1, 0);

        if i4 <= 0 goto label13;

        $r4 = staticinvoke <android.view.animation.AnimationUtils: android.view.animation.Interpolator loadInterpolator(android.content.res.Resources,android.content.res.Resources$Theme,int)>(r0, r1, i4);

        virtualinvoke r8.<android.animation.Keyframe: void setInterpolator(android.animation.TimeInterpolator)>($r4);

     label13:
        virtualinvoke r7.<android.content.res.TypedArray: void recycle()>();

        return r8;
    }

    private static android.animation.ObjectAnimator loadObjectAnimator(android.content.res.Resources, android.content.res.Resources$Theme, android.util.AttributeSet, float) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources r0;
        android.content.res.Resources$Theme r1;
        android.util.AttributeSet r2;
        float f0;
        android.animation.ObjectAnimator $r4;

        r0 := @parameter0: android.content.res.Resources;

        r1 := @parameter1: android.content.res.Resources$Theme;

        r2 := @parameter2: android.util.AttributeSet;

        f0 := @parameter3: float;

        $r4 = new android.animation.ObjectAnimator;

        specialinvoke $r4.<android.animation.ObjectAnimator: void <init>()>();

        staticinvoke <android.animation.AnimatorInflater: android.animation.ValueAnimator loadAnimator(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,android.animation.ValueAnimator,float)>(r0, r1, r2, $r4, f0);

        return $r4;
    }

    private static android.animation.PropertyValuesHolder loadPvh(android.content.res.Resources, android.content.res.Resources$Theme, org.xmlpull.v1.XmlPullParser, java.lang.String, int) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String r1, $r11;
        android.animation.Keyframe r2, $r6, $r7, $r8, $r9, $r10, r19, r20, r22;
        java.lang.Object $r3, $r4;
        int $i0, $i3, $i4, $i5, $i6, $i10, i11, i12, i13, i14, i16, i17, i19, i20, i21;
        byte $b1, $b2, $b7, $b8, $b9, $b18;
        android.animation.ArgbEvaluator $r5;
        float $f0, $f1, $f2, $f3, $f4, f5, f7;
        boolean $z0;
        android.util.AttributeSet $r12, $r14;
        java.util.ArrayList $r13, r17, r18;
        android.content.res.Resources r15;
        android.content.res.Resources$Theme r16;
        android.animation.Keyframe[] r21;
        android.animation.PropertyValuesHolder r23, r24;

        r15 := @parameter0: android.content.res.Resources;

        r16 := @parameter1: android.content.res.Resources$Theme;

        r0 := @parameter2: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter3: java.lang.String;

        i11 := @parameter4: int;

        r17 = null;

     label01:
        i12 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i12 == 3 goto label06;

        if i12 == 1 goto label06;

        i13 = i11;

        r18 = r17;

        $r11 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>("keyframe");

        if $z0 == 0 goto label05;

        i13 = i11;

        if i11 != 4 goto label02;

        $r14 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>(r0);

        i13 = staticinvoke <android.animation.AnimatorInflater: int inferValueTypeOfKeyframe(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet)>(r15, r16, $r14);

     label02:
        $r12 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>(r0);

        r2 = staticinvoke <android.animation.AnimatorInflater: android.animation.Keyframe loadKeyframe(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int)>(r15, r16, $r12, i13);

        r18 = r17;

        if r2 == null goto label04;

        r18 = r17;

        if r17 != null goto label03;

        $r13 = new java.util.ArrayList;

        specialinvoke $r13.<java.util.ArrayList: void <init>()>();

        r18 = $r13;

     label03:
        virtualinvoke r18.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

     label04:
        interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

     label05:
        i11 = i13;

        r17 = r18;

        goto label01;

     label06:
        if r17 == null goto label20;

        i14 = virtualinvoke r17.<java.util.ArrayList: int size()>();

        if i14 <= 0 goto label19;

        $r3 = virtualinvoke r17.<java.util.ArrayList: java.lang.Object get(int)>(0);

        r19 = (android.animation.Keyframe) $r3;

        $i0 = i14 - 1;

        $r4 = virtualinvoke r17.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        r20 = (android.animation.Keyframe) $r4;

        f5 = virtualinvoke r20.<android.animation.Keyframe: float getFraction()>();

        i16 = i14;

        $b1 = f5 cmpg 1.0F;

        if $b1 >= 0 goto label08;

        $b9 = f5 cmpg 0.0F;

        if $b9 >= 0 goto label07;

        virtualinvoke r20.<android.animation.Keyframe: void setFraction(float)>(1.0F);

        i16 = i14;

        goto label08;

     label07:
        $i10 = virtualinvoke r17.<java.util.ArrayList: int size()>();

        $r10 = staticinvoke <android.animation.AnimatorInflater: android.animation.Keyframe createNewKeyframe(android.animation.Keyframe,float)>(r20, 1.0F);

        virtualinvoke r17.<java.util.ArrayList: void add(int,java.lang.Object)>($i10, $r10);

        i16 = i14 + 1;

     label08:
        f7 = virtualinvoke r19.<android.animation.Keyframe: float getFraction()>();

        i17 = i16;

        $b18 = f7 cmpl 0.0F;

        if $b18 == 0 goto label10;

        $b8 = f7 cmpg 0.0F;

        if $b8 >= 0 goto label09;

        virtualinvoke r19.<android.animation.Keyframe: void setFraction(float)>(0.0F);

        i17 = i16;

        goto label10;

     label09:
        $r9 = staticinvoke <android.animation.AnimatorInflater: android.animation.Keyframe createNewKeyframe(android.animation.Keyframe,float)>(r19, 0.0F);

        virtualinvoke r17.<java.util.ArrayList: void add(int,java.lang.Object)>(0, $r9);

        i17 = i16 + 1;

     label10:
        r21 = newarray (android.animation.Keyframe)[i17];

        virtualinvoke r17.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>(r21);

        i19 = 0;

     label11:
        if i19 >= i17 goto label18;

        r22 = r21[i19];

        $f0 = virtualinvoke r22.<android.animation.Keyframe: float getFraction()>();

        $b2 = $f0 cmpg 0.0F;

        if $b2 >= 0 goto label17;

        if i19 != 0 goto label12;

        virtualinvoke r22.<android.animation.Keyframe: void setFraction(float)>(0.0F);

        goto label17;

     label12:
        $i3 = i17 - 1;

        if i19 != $i3 goto label13;

        virtualinvoke r22.<android.animation.Keyframe: void setFraction(float)>(1.0F);

        goto label17;

     label13:
        i20 = i19;

        i21 = i19 + 1;

     label14:
        $i4 = i17 - 1;

        if i21 >= $i4 goto label16;

        $r8 = r21[i21];

        $f4 = virtualinvoke $r8.<android.animation.Keyframe: float getFraction()>();

        $b7 = $f4 cmpl 0.0F;

        if $b7 < 0 goto label15;

        goto label16;

     label15:
        i20 = i21;

        i21 = i21 + 1;

        goto label14;

     label16:
        $i5 = i20 + 1;

        $r6 = r21[$i5];

        $f1 = virtualinvoke $r6.<android.animation.Keyframe: float getFraction()>();

        $i6 = i19 - 1;

        $r7 = r21[$i6];

        $f2 = virtualinvoke $r7.<android.animation.Keyframe: float getFraction()>();

        $f3 = $f1 - $f2;

        staticinvoke <android.animation.AnimatorInflater: void distributeKeyframes(android.animation.Keyframe[],float,int,int)>(r21, $f3, i19, i20);

        goto label17;

     label17:
        i19 = i19 + 1;

        goto label11;

     label18:
        r23 = staticinvoke <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofKeyframe(java.lang.String,android.animation.Keyframe[])>(r1, r21);

        r24 = r23;

        if i11 != 3 goto label21;

        $r5 = staticinvoke <android.animation.ArgbEvaluator: android.animation.ArgbEvaluator getInstance()>();

        virtualinvoke r23.<android.animation.PropertyValuesHolder: void setEvaluator(android.animation.TypeEvaluator)>($r5);

        r24 = r23;

        goto label21;

     label19:
        r24 = null;

        goto label21;

     label20:
        r24 = null;

     label21:
        return r24;
    }

    public static android.animation.StateListAnimator loadStateListAnimator(android.content.Context, int) throws android.content.res.Resources$NotFoundException
    {
        int i0, $i2;
        android.content.res.Resources r0;
        android.content.res.ConfigurationBoundResourceCache r1;
        android.content.res.Resources$Theme r2;
        android.animation.StateListAnimator r3, r22, r27;
        android.content.res.ConstantState r4;
        long $l1, $l3;
        java.lang.Object $r5, $r7;
        android.util.AttributeSet $r6;
        java.lang.Throwable $r8, $r9, $r15;
        java.lang.String $r11, $r13, $r17, $r19;
        android.content.Context r21;
        android.content.res.XmlResourceParser r23, r24, r25, r26;
        android.content.res.Resources$NotFoundException r30, r33;
        java.lang.StringBuilder r31, r34;

        r21 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r0 = virtualinvoke r21.<android.content.Context: android.content.res.Resources getResources()>();

        r1 = virtualinvoke r0.<android.content.res.Resources: android.content.res.ConfigurationBoundResourceCache getStateListAnimatorCache()>();

        r2 = virtualinvoke r21.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $l1 = (long) i0;

        $r5 = virtualinvoke r1.<android.content.res.ConfigurationBoundResourceCache: java.lang.Object getInstance(long,android.content.res.Resources,android.content.res.Resources$Theme)>($l1, r0, r2);

        r22 = (android.animation.StateListAnimator) $r5;

        if r22 == null goto label01;

        return r22;

     label01:
        r23 = null;

        r24 = null;

        r25 = null;

     label02:
        r26 = virtualinvoke r0.<android.content.res.Resources: android.content.res.XmlResourceParser getAnimation(int)>(i0);

     label03:
        r25 = r26;

        r23 = r26;

        r24 = r26;

     label04:
        $r6 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>(r26);

        r3 = staticinvoke <android.animation.AnimatorInflater: android.animation.StateListAnimator createStateListAnimatorFromXml(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>(r21, r26, $r6);

     label05:
        r27 = r3;

        if r3 == null goto label13;

        r25 = r26;

        r23 = r26;

        r24 = r26;

     label06:
        $i2 = staticinvoke <android.animation.AnimatorInflater: int getChangingConfigs(android.content.res.Resources,int)>(r0, i0);

        virtualinvoke r3.<android.animation.StateListAnimator: void appendChangingConfigurations(int)>($i2);

     label07:
        r25 = r26;

        r23 = r26;

        r24 = r26;

     label08:
        r4 = virtualinvoke r3.<android.animation.StateListAnimator: android.content.res.ConstantState createConstantState()>();

     label09:
        r27 = r3;

        if r4 == null goto label13;

        r25 = r26;

        r23 = r26;

        r24 = r26;

     label10:
        $l3 = (long) i0;

        virtualinvoke r1.<android.content.res.ConfigurationBoundResourceCache: void put(long,android.content.res.Resources$Theme,java.lang.Object)>($l3, r2, r4);

     label11:
        r25 = r26;

        r23 = r26;

        r24 = r26;

     label12:
        $r7 = virtualinvoke r4.<android.content.res.ConstantState: java.lang.Object newInstance(android.content.res.Resources,android.content.res.Resources$Theme)>(r0, r2);

        r27 = (android.animation.StateListAnimator) $r7;

     label13:
        if r26 == null goto label14;

        interfaceinvoke r26.<android.content.res.XmlResourceParser: void close()>();

     label14:
        return r27;

     label15:
        $r8 := @caughtexception;

        goto label48;

     label16:
        $r9 := @caughtexception;

        r25 = r23;

     label17:
        r30 = new android.content.res.Resources$NotFoundException;

     label18:
        r25 = r23;

     label19:
        r31 = new java.lang.StringBuilder;

     label20:
        r25 = r23;

     label21:
        specialinvoke r31.<java.lang.StringBuilder: void <init>()>();

     label22:
        r25 = r23;

     label23:
        virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t load state list animator resource ID #0x");

     label24:
        r25 = r23;

     label25:
        $r11 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

     label26:
        r25 = r23;

     label27:
        $r13 = virtualinvoke r31.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r30.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r13);

     label28:
        r25 = r23;

     label29:
        virtualinvoke r30.<android.content.res.Resources$NotFoundException: java.lang.Throwable initCause(java.lang.Throwable)>($r9);

     label30:
        r25 = r23;

     label31:
        throw r30;

     label32:
        $r15 := @caughtexception;

        r25 = r24;

     label33:
        r33 = new android.content.res.Resources$NotFoundException;

     label34:
        r25 = r24;

     label35:
        r34 = new java.lang.StringBuilder;

     label36:
        r25 = r24;

     label37:
        specialinvoke r34.<java.lang.StringBuilder: void <init>()>();

     label38:
        r25 = r24;

     label39:
        virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t load state list animator resource ID #0x");

     label40:
        r25 = r24;

     label41:
        $r17 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

     label42:
        r25 = r24;

     label43:
        $r19 = virtualinvoke r34.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r33.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r19);

     label44:
        r25 = r24;

     label45:
        virtualinvoke r33.<android.content.res.Resources$NotFoundException: java.lang.Throwable initCause(java.lang.Throwable)>($r15);

     label46:
        r25 = r24;

     label47:
        throw r33;

     label48:
        if r25 == null goto label49;

        interfaceinvoke r25.<android.content.res.XmlResourceParser: void close()>();

     label49:
        throw $r8;

        catch org.xmlpull.v1.XmlPullParserException from label02 to label03 with label32;
        catch java.io.IOException from label02 to label03 with label16;
        catch java.lang.Throwable from label02 to label03 with label15;
        catch org.xmlpull.v1.XmlPullParserException from label04 to label05 with label32;
        catch java.io.IOException from label04 to label05 with label16;
        catch java.lang.Throwable from label04 to label05 with label15;
        catch org.xmlpull.v1.XmlPullParserException from label06 to label07 with label32;
        catch java.io.IOException from label06 to label07 with label16;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch org.xmlpull.v1.XmlPullParserException from label08 to label09 with label32;
        catch java.io.IOException from label08 to label09 with label16;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch org.xmlpull.v1.XmlPullParserException from label10 to label11 with label32;
        catch java.io.IOException from label10 to label11 with label16;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch org.xmlpull.v1.XmlPullParserException from label12 to label13 with label32;
        catch java.io.IOException from label12 to label13 with label16;
        catch java.lang.Throwable from label12 to label13 with label15;
        catch java.lang.Throwable from label17 to label18 with label15;
        catch java.lang.Throwable from label19 to label20 with label15;
        catch java.lang.Throwable from label21 to label22 with label15;
        catch java.lang.Throwable from label23 to label24 with label15;
        catch java.lang.Throwable from label25 to label26 with label15;
        catch java.lang.Throwable from label27 to label28 with label15;
        catch java.lang.Throwable from label29 to label30 with label15;
        catch java.lang.Throwable from label31 to label32 with label15;
        catch java.lang.Throwable from label33 to label34 with label15;
        catch java.lang.Throwable from label35 to label36 with label15;
        catch java.lang.Throwable from label37 to label38 with label15;
        catch java.lang.Throwable from label39 to label40 with label15;
        catch java.lang.Throwable from label41 to label42 with label15;
        catch java.lang.Throwable from label43 to label44 with label15;
        catch java.lang.Throwable from label45 to label46 with label15;
        catch java.lang.Throwable from label47 to label48 with label15;
    }

    private static android.animation.PropertyValuesHolder[] loadValues(android.content.res.Resources, android.content.res.Resources$Theme, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser r0;
        android.util.AttributeSet r1;
        java.lang.String r2, $r5;
        int i0, i3, i4, i5;
        java.lang.Object $r3;
        android.animation.PropertyValuesHolder $r4, r14, r15;
        boolean $z0;
        int[] $r6, $r8;
        java.util.ArrayList $r7, r11, r12;
        android.content.res.Resources r9;
        android.content.res.Resources$Theme r10;
        android.content.res.TypedArray r13;
        android.animation.PropertyValuesHolder[] r16, r17;

        r9 := @parameter0: android.content.res.Resources;

        r10 := @parameter1: android.content.res.Resources$Theme;

        r0 := @parameter2: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter3: android.util.AttributeSet;

        r11 = null;

     label01:
        i3 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

        if i3 == 3 goto label09;

        if i3 == 1 goto label09;

        if i3 == 2 goto label02;

        interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        goto label01;

     label02:
        r12 = r11;

        $r5 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("propertyValuesHolder");

        if $z0 == 0 goto label08;

        if r10 == null goto label03;

        $r8 = <com.android.internal.R$styleable: int[] PropertyValuesHolder>;

        r13 = virtualinvoke r10.<android.content.res.Resources$Theme: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r1, $r8, 0, 0);

        goto label04;

     label03:
        $r6 = <com.android.internal.R$styleable: int[] PropertyValuesHolder>;

        r13 = virtualinvoke r9.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r1, $r6);

     label04:
        r2 = virtualinvoke r13.<android.content.res.TypedArray: java.lang.String getString(int)>(3);

        i4 = virtualinvoke r13.<android.content.res.TypedArray: int getInt(int,int)>(2, 4);

        r14 = staticinvoke <android.animation.AnimatorInflater: android.animation.PropertyValuesHolder loadPvh(android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r9, r10, r0, r2, i4);

        r15 = r14;

        if r14 != null goto label05;

        r15 = staticinvoke <android.animation.AnimatorInflater: android.animation.PropertyValuesHolder getPVH(android.content.res.TypedArray,int,int,int,java.lang.String)>(r13, i4, 0, 1, r2);

     label05:
        r12 = r11;

        if r15 == null goto label07;

        r12 = r11;

        if r11 != null goto label06;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r12 = $r7;

     label06:
        virtualinvoke r12.<java.util.ArrayList: boolean add(java.lang.Object)>(r15);

     label07:
        virtualinvoke r13.<android.content.res.TypedArray: void recycle()>();

     label08:
        interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        r11 = r12;

        goto label01;

     label09:
        r16 = null;

        if r11 == null goto label11;

        i0 = virtualinvoke r11.<java.util.ArrayList: int size()>();

        r17 = newarray (android.animation.PropertyValuesHolder)[i0];

        i5 = 0;

     label10:
        r16 = r17;

        if i5 >= i0 goto label11;

        $r3 = virtualinvoke r11.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        $r4 = (android.animation.PropertyValuesHolder) $r3;

        r17[i5] = $r4;

        i5 = i5 + 1;

        goto label10;

     label11:
        return r16;
    }

    private static void parseAnimatorFromTypeArray(android.animation.ValueAnimator, android.content.res.TypedArray, android.content.res.TypedArray, float)
    {
        android.animation.ValueAnimator r0;
        android.content.res.TypedArray r1, r2;
        float f0;
        long l0, l1;
        int i2, $i3, $i4, $i5, $i6, i7;
        android.animation.PropertyValuesHolder r3;
        boolean $z0, $z1;
        android.animation.PropertyValuesHolder[] $r5;

        r0 := @parameter0: android.animation.ValueAnimator;

        r1 := @parameter1: android.content.res.TypedArray;

        r2 := @parameter2: android.content.res.TypedArray;

        f0 := @parameter3: float;

        $i3 = virtualinvoke r1.<android.content.res.TypedArray: int getInt(int,int)>(1, 300);

        l0 = (long) $i3;

        $i4 = virtualinvoke r1.<android.content.res.TypedArray: int getInt(int,int)>(2, 0);

        l1 = (long) $i4;

        i2 = virtualinvoke r1.<android.content.res.TypedArray: int getInt(int,int)>(7, 4);

        i7 = i2;

        if i2 != 4 goto label1;

        i7 = staticinvoke <android.animation.AnimatorInflater: int inferValueTypeFromValues(android.content.res.TypedArray,int,int)>(r1, 5, 6);

     label1:
        r3 = staticinvoke <android.animation.AnimatorInflater: android.animation.PropertyValuesHolder getPVH(android.content.res.TypedArray,int,int,int,java.lang.String)>(r1, i7, 5, 6, "");

        if r3 == null goto label2;

        $r5 = newarray (android.animation.PropertyValuesHolder)[1];

        $r5[0] = r3;

        virtualinvoke r0.<android.animation.ValueAnimator: void setValues(android.animation.PropertyValuesHolder[])>($r5);

     label2:
        virtualinvoke r0.<android.animation.ValueAnimator: android.animation.ValueAnimator setDuration(long)>(l0);

        virtualinvoke r0.<android.animation.ValueAnimator: void setStartDelay(long)>(l1);

        $z0 = virtualinvoke r1.<android.content.res.TypedArray: boolean hasValue(int)>(3);

        if $z0 == 0 goto label3;

        $i6 = virtualinvoke r1.<android.content.res.TypedArray: int getInt(int,int)>(3, 0);

        virtualinvoke r0.<android.animation.ValueAnimator: void setRepeatCount(int)>($i6);

     label3:
        $z1 = virtualinvoke r1.<android.content.res.TypedArray: boolean hasValue(int)>(4);

        if $z1 == 0 goto label4;

        $i5 = virtualinvoke r1.<android.content.res.TypedArray: int getInt(int,int)>(4, 1);

        virtualinvoke r0.<android.animation.ValueAnimator: void setRepeatMode(int)>($i5);

     label4:
        if r2 == null goto label5;

        staticinvoke <android.animation.AnimatorInflater: void setupObjectAnimator(android.animation.ValueAnimator,android.content.res.TypedArray,int,float)>(r0, r2, i7, f0);

     label5:
        return;
    }

    private static android.animation.TypeEvaluator setupAnimatorForPath(android.animation.ValueAnimator, android.content.res.TypedArray)
    {
        java.lang.String r0, r1, $r10, $r12;
        android.util.PathParser$PathData $r2, $r3, r15, r16;
        java.lang.Object[] $r4, $r6, $r8;
        android.animation.AnimatorInflater$PathDataEvaluator $r5, $r7, r18;
        boolean $z0;
        java.lang.StringBuilder $r9;
        android.view.InflateException $r11;
        android.animation.ValueAnimator r13;
        android.content.res.TypedArray r14;

        r13 := @parameter0: android.animation.ValueAnimator;

        r14 := @parameter1: android.content.res.TypedArray;

        r0 = virtualinvoke r14.<android.content.res.TypedArray: java.lang.String getString(int)>(5);

        r1 = virtualinvoke r14.<android.content.res.TypedArray: java.lang.String getString(int)>(6);

        if r0 != null goto label1;

        r15 = null;

        goto label2;

     label1:
        $r2 = new android.util.PathParser$PathData;

        specialinvoke $r2.<android.util.PathParser$PathData: void <init>(java.lang.String)>(r0);

        r15 = $r2;

     label2:
        if r1 != null goto label3;

        r16 = null;

        goto label4;

     label3:
        $r3 = new android.util.PathParser$PathData;

        specialinvoke $r3.<android.util.PathParser$PathData: void <init>(java.lang.String)>(r1);

        r16 = $r3;

     label4:
        if r15 == null goto label8;

        if r16 == null goto label6;

        $r8 = newarray (java.lang.Object)[2];

        $r8[0] = r15;

        $r8[1] = r16;

        virtualinvoke r13.<android.animation.ValueAnimator: void setObjectValues(java.lang.Object[])>($r8);

        $z0 = staticinvoke <android.util.PathParser: boolean canMorph(android.util.PathParser$PathData,android.util.PathParser$PathData)>(r15, r16);

        if $z0 == 0 goto label5;

        goto label7;

     label5:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke r14.<android.content.res.TypedArray: java.lang.String getPositionDescription()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Can\'t morph from ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = new android.view.InflateException;

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<android.view.InflateException: void <init>(java.lang.String)>($r12);

        throw $r11;

     label6:
        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = r15;

        virtualinvoke r13.<android.animation.ValueAnimator: void setObjectValues(java.lang.Object[])>($r6);

     label7:
        $r7 = new android.animation.AnimatorInflater$PathDataEvaluator;

        specialinvoke $r7.<android.animation.AnimatorInflater$PathDataEvaluator: void <init>(android.animation.AnimatorInflater$1)>(null);

        r18 = $r7;

        goto label9;

     label8:
        r18 = null;

        if r16 == null goto label9;

        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = r16;

        virtualinvoke r13.<android.animation.ValueAnimator: void setObjectValues(java.lang.Object[])>($r4);

        $r5 = new android.animation.AnimatorInflater$PathDataEvaluator;

        specialinvoke $r5.<android.animation.AnimatorInflater$PathDataEvaluator: void <init>(android.animation.AnimatorInflater$1)>(null);

        r18 = $r5;

     label9:
        return r18;
    }

    private static void setupObjectAnimator(android.animation.ValueAnimator, android.content.res.TypedArray, int, float)
    {
        float f0, $f1;
        android.animation.ObjectAnimator r0;
        java.lang.String r1, r2, $r3, $r9, $r11, r14;
        android.graphics.Path $r4;
        android.animation.PropertyValuesHolder[] $r5, $r6, $r7;
        java.lang.StringBuilder $r8;
        android.view.InflateException $r10;
        android.animation.ValueAnimator r12;
        android.content.res.TypedArray r13;
        int i1, i2;
        android.animation.PathKeyframes r16;
        android.animation.Keyframes r17, r18;
        android.animation.PropertyValuesHolder r19, r20;

        r12 := @parameter0: android.animation.ValueAnimator;

        r13 := @parameter1: android.content.res.TypedArray;

        i1 := @parameter2: int;

        f0 := @parameter3: float;

        r0 = (android.animation.ObjectAnimator) r12;

        r14 = virtualinvoke r13.<android.content.res.TypedArray: java.lang.String getString(int)>(1);

        if r14 == null goto label12;

        r1 = virtualinvoke r13.<android.content.res.TypedArray: java.lang.String getString(int)>(2);

        r2 = virtualinvoke r13.<android.content.res.TypedArray: java.lang.String getString(int)>(3);

        if i1 == 2 goto label01;

        i2 = i1;

        if i1 != 4 goto label02;

     label01:
        i2 = 0;

     label02:
        if r1 != null goto label04;

        if r2 == null goto label03;

        goto label04;

     label03:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke r13.<android.content.res.TypedArray: java.lang.String getPositionDescription()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" propertyXName or propertyYName is needed for PathData");

        $r10 = new android.view.InflateException;

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<android.view.InflateException: void <init>(java.lang.String)>($r11);

        throw $r10;

     label04:
        $r4 = staticinvoke <android.util.PathParser: android.graphics.Path createPathFromPathData(java.lang.String)>(r14);

        $f1 = 0.5F * f0;

        r16 = staticinvoke <android.animation.KeyframeSet: android.animation.PathKeyframes ofPath(android.graphics.Path,float)>($r4, $f1);

        if i2 != 0 goto label05;

        r17 = virtualinvoke r16.<android.animation.PathKeyframes: android.animation.Keyframes$FloatKeyframes createXFloatKeyframes()>();

        r18 = virtualinvoke r16.<android.animation.PathKeyframes: android.animation.Keyframes$FloatKeyframes createYFloatKeyframes()>();

        goto label06;

     label05:
        r17 = virtualinvoke r16.<android.animation.PathKeyframes: android.animation.Keyframes$IntKeyframes createXIntKeyframes()>();

        r18 = virtualinvoke r16.<android.animation.PathKeyframes: android.animation.Keyframes$IntKeyframes createYIntKeyframes()>();

     label06:
        r19 = null;

        if r1 == null goto label07;

        r19 = staticinvoke <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofKeyframes(java.lang.String,android.animation.Keyframes)>(r1, r17);

     label07:
        r20 = null;

        if r2 == null goto label08;

        r20 = staticinvoke <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofKeyframes(java.lang.String,android.animation.Keyframes)>(r2, r18);

     label08:
        if r19 != null goto label09;

        $r7 = newarray (android.animation.PropertyValuesHolder)[1];

        $r7[0] = r20;

        virtualinvoke r0.<android.animation.ObjectAnimator: void setValues(android.animation.PropertyValuesHolder[])>($r7);

        goto label11;

     label09:
        if r20 != null goto label10;

        $r6 = newarray (android.animation.PropertyValuesHolder)[1];

        $r6[0] = r19;

        virtualinvoke r0.<android.animation.ObjectAnimator: void setValues(android.animation.PropertyValuesHolder[])>($r6);

        goto label11;

     label10:
        $r5 = newarray (android.animation.PropertyValuesHolder)[2];

        $r5[0] = r19;

        $r5[1] = r20;

        virtualinvoke r0.<android.animation.ObjectAnimator: void setValues(android.animation.PropertyValuesHolder[])>($r5);

     label11:
        goto label13;

     label12:
        $r3 = virtualinvoke r13.<android.content.res.TypedArray: java.lang.String getString(int)>(0);

        virtualinvoke r0.<android.animation.ObjectAnimator: void setPropertyName(java.lang.String)>($r3);

     label13:
        return;
    }

    private static void setupValues(android.animation.ValueAnimator, android.content.res.TypedArray, boolean, boolean, int, boolean, int)
    {
        android.animation.ValueAnimator r0;
        android.content.res.TypedArray r1;
        boolean z0, z1, z2, $z3, $z4, $z5;
        float $f0, $f1, $f2, f3, f4, f5;
        int[] $r2, $r6, $r7;
        float[] $r3, $r4, $r5;
        int i0, i1, i2, i3, i4;

        r0 := @parameter0: android.animation.ValueAnimator;

        r1 := @parameter1: android.content.res.TypedArray;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        i0 := @parameter4: int;

        z2 := @parameter5: boolean;

        i1 := @parameter6: int;

        if z0 == 0 goto label10;

        if z1 == 0 goto label06;

        if i0 != 5 goto label01;

        f3 = virtualinvoke r1.<android.content.res.TypedArray: float getDimension(int,float)>(5, 0.0F);

        goto label02;

     label01:
        f3 = virtualinvoke r1.<android.content.res.TypedArray: float getFloat(int,float)>(5, 0.0F);

     label02:
        if z2 == 0 goto label05;

        if i1 != 5 goto label03;

        f4 = virtualinvoke r1.<android.content.res.TypedArray: float getDimension(int,float)>(6, 0.0F);

        goto label04;

     label03:
        f4 = virtualinvoke r1.<android.content.res.TypedArray: float getFloat(int,float)>(6, 0.0F);

     label04:
        $r5 = newarray (float)[2];

        $r5[0] = f3;

        $r5[1] = f4;

        virtualinvoke r0.<android.animation.ValueAnimator: void setFloatValues(float[])>($r5);

        goto label09;

     label05:
        $r4 = newarray (float)[1];

        $r4[0] = f3;

        virtualinvoke r0.<android.animation.ValueAnimator: void setFloatValues(float[])>($r4);

        goto label09;

     label06:
        if i1 != 5 goto label07;

        f5 = virtualinvoke r1.<android.content.res.TypedArray: float getDimension(int,float)>(6, 0.0F);

        goto label08;

     label07:
        f5 = virtualinvoke r1.<android.content.res.TypedArray: float getFloat(int,float)>(6, 0.0F);

     label08:
        $r3 = newarray (float)[1];

        $r3[0] = f5;

        virtualinvoke r0.<android.animation.ValueAnimator: void setFloatValues(float[])>($r3);

     label09:
        goto label22;

     label10:
        if z1 == 0 goto label18;

        if i0 != 5 goto label11;

        $f2 = virtualinvoke r1.<android.content.res.TypedArray: float getDimension(int,float)>(5, 0.0F);

        i2 = (int) $f2;

        goto label13;

     label11:
        $z4 = staticinvoke <android.animation.AnimatorInflater: boolean isColorType(int)>(i0);

        if $z4 == 0 goto label12;

        i2 = virtualinvoke r1.<android.content.res.TypedArray: int getColor(int,int)>(5, 0);

        goto label13;

     label12:
        i2 = virtualinvoke r1.<android.content.res.TypedArray: int getInt(int,int)>(5, 0);

     label13:
        if z2 == 0 goto label17;

        if i1 != 5 goto label14;

        $f1 = virtualinvoke r1.<android.content.res.TypedArray: float getDimension(int,float)>(6, 0.0F);

        i3 = (int) $f1;

        goto label16;

     label14:
        $z5 = staticinvoke <android.animation.AnimatorInflater: boolean isColorType(int)>(i1);

        if $z5 == 0 goto label15;

        i3 = virtualinvoke r1.<android.content.res.TypedArray: int getColor(int,int)>(6, 0);

        goto label16;

     label15:
        i3 = virtualinvoke r1.<android.content.res.TypedArray: int getInt(int,int)>(6, 0);

     label16:
        $r6 = newarray (int)[2];

        $r6[0] = i2;

        $r6[1] = i3;

        virtualinvoke r0.<android.animation.ValueAnimator: void setIntValues(int[])>($r6);

        goto label22;

     label17:
        $r2 = newarray (int)[1];

        $r2[0] = i2;

        virtualinvoke r0.<android.animation.ValueAnimator: void setIntValues(int[])>($r2);

        goto label22;

     label18:
        if z2 == 0 goto label22;

        if i1 != 5 goto label19;

        $f0 = virtualinvoke r1.<android.content.res.TypedArray: float getDimension(int,float)>(6, 0.0F);

        i4 = (int) $f0;

        goto label21;

     label19:
        $z3 = staticinvoke <android.animation.AnimatorInflater: boolean isColorType(int)>(i1);

        if $z3 == 0 goto label20;

        i4 = virtualinvoke r1.<android.content.res.TypedArray: int getColor(int,int)>(6, 0);

        goto label21;

     label20:
        i4 = virtualinvoke r1.<android.content.res.TypedArray: int getInt(int,int)>(6, 0);

     label21:
        $r7 = newarray (int)[1];

        $r7[0] = i4;

        virtualinvoke r0.<android.animation.ValueAnimator: void setIntValues(int[])>($r7);

     label22:
        return;
    }
}
