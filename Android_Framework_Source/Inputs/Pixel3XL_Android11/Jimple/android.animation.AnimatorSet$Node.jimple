class android.animation.AnimatorSet$Node extends java.lang.Object implements java.lang.Cloneable
{
    android.animation.Animator mAnimation;
    java.util.ArrayList mChildNodes;
    long mEndTime;
    boolean mEnded;
    android.animation.AnimatorSet$Node mLatestParent;
    java.util.ArrayList mParents;
    boolean mParentsAdded;
    java.util.ArrayList mSiblings;
    long mStartTime;
    long mTotalDuration;

    public void <init>(android.animation.Animator)
    {
        android.animation.AnimatorSet$Node r0;
        android.animation.Animator r1;

        r0 := @this: android.animation.AnimatorSet$Node;

        r1 := @parameter0: android.animation.Animator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.animation.AnimatorSet$Node: java.util.ArrayList mChildNodes> = null;

        r0.<android.animation.AnimatorSet$Node: boolean mEnded> = 0;

        r0.<android.animation.AnimatorSet$Node: android.animation.AnimatorSet$Node mLatestParent> = null;

        r0.<android.animation.AnimatorSet$Node: boolean mParentsAdded> = 0;

        r0.<android.animation.AnimatorSet$Node: long mStartTime> = 0L;

        r0.<android.animation.AnimatorSet$Node: long mEndTime> = 0L;

        r0.<android.animation.AnimatorSet$Node: long mTotalDuration> = 0L;

        r0.<android.animation.AnimatorSet$Node: android.animation.Animator mAnimation> = r1;

        return;
    }

    void addChild(android.animation.AnimatorSet$Node)
    {
        android.animation.AnimatorSet$Node r0, r1;
        java.util.ArrayList $r2, $r3, $r4, $r5;
        boolean $z0;

        r0 := @this: android.animation.AnimatorSet$Node;

        r1 := @parameter0: android.animation.AnimatorSet$Node;

        $r2 = r0.<android.animation.AnimatorSet$Node: java.util.ArrayList mChildNodes>;

        if $r2 != null goto label1;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<android.animation.AnimatorSet$Node: java.util.ArrayList mChildNodes> = $r5;

     label1:
        $r3 = r0.<android.animation.AnimatorSet$Node: java.util.ArrayList mChildNodes>;

        $z0 = virtualinvoke $r3.<java.util.ArrayList: boolean contains(java.lang.Object)>(r1);

        if $z0 != 0 goto label2;

        $r4 = r0.<android.animation.AnimatorSet$Node: java.util.ArrayList mChildNodes>;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        virtualinvoke r1.<android.animation.AnimatorSet$Node: void addParent(android.animation.AnimatorSet$Node)>(r0);

     label2:
        return;
    }

    public void addParent(android.animation.AnimatorSet$Node)
    {
        android.animation.AnimatorSet$Node r0, r1;
        java.util.ArrayList $r2, $r3, $r4, $r5;
        boolean $z0;

        r0 := @this: android.animation.AnimatorSet$Node;

        r1 := @parameter0: android.animation.AnimatorSet$Node;

        $r2 = r0.<android.animation.AnimatorSet$Node: java.util.ArrayList mParents>;

        if $r2 != null goto label1;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<android.animation.AnimatorSet$Node: java.util.ArrayList mParents> = $r5;

     label1:
        $r3 = r0.<android.animation.AnimatorSet$Node: java.util.ArrayList mParents>;

        $z0 = virtualinvoke $r3.<java.util.ArrayList: boolean contains(java.lang.Object)>(r1);

        if $z0 != 0 goto label2;

        $r4 = r0.<android.animation.AnimatorSet$Node: java.util.ArrayList mParents>;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        virtualinvoke r1.<android.animation.AnimatorSet$Node: void addChild(android.animation.AnimatorSet$Node)>(r0);

     label2:
        return;
    }

    public void addParents(java.util.ArrayList)
    {
        android.animation.AnimatorSet$Node r0, $r3;
        java.util.ArrayList r1;
        int i0, i1;
        java.lang.Object $r2;

        r0 := @this: android.animation.AnimatorSet$Node;

        r1 := @parameter0: java.util.ArrayList;

        if r1 != null goto label1;

        return;

     label1:
        i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        i1 = 0;

     label2:
        if i1 >= i0 goto label3;

        $r2 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r3 = (android.animation.AnimatorSet$Node) $r2;

        virtualinvoke r0.<android.animation.AnimatorSet$Node: void addParent(android.animation.AnimatorSet$Node)>($r3);

        i1 = i1 + 1;

        goto label2;

     label3:
        return;
    }

    public void addSibling(android.animation.AnimatorSet$Node)
    {
        android.animation.AnimatorSet$Node r0, r1;
        java.util.ArrayList $r2, $r3, $r4, $r5;
        boolean $z0;

        r0 := @this: android.animation.AnimatorSet$Node;

        r1 := @parameter0: android.animation.AnimatorSet$Node;

        $r2 = r0.<android.animation.AnimatorSet$Node: java.util.ArrayList mSiblings>;

        if $r2 != null goto label1;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<android.animation.AnimatorSet$Node: java.util.ArrayList mSiblings> = $r5;

     label1:
        $r3 = r0.<android.animation.AnimatorSet$Node: java.util.ArrayList mSiblings>;

        $z0 = virtualinvoke $r3.<java.util.ArrayList: boolean contains(java.lang.Object)>(r1);

        if $z0 != 0 goto label2;

        $r4 = r0.<android.animation.AnimatorSet$Node: java.util.ArrayList mSiblings>;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        virtualinvoke r1.<android.animation.AnimatorSet$Node: void addSibling(android.animation.AnimatorSet$Node)>(r0);

     label2:
        return;
    }

    public android.animation.AnimatorSet$Node clone()
    {
        android.animation.AnimatorSet$Node r0, r12;
        java.lang.Object $r1;
        android.animation.Animator $r2, $r3;
        java.util.ArrayList $r4, $r5, $r6, $r7, $r8, $r9, r13, r14, r15;
        java.lang.Throwable $r10;
        java.lang.AssertionError $r11;

        r0 := @this: android.animation.AnimatorSet$Node;

     label1:
        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        r12 = (android.animation.AnimatorSet$Node) $r1;

        $r2 = r0.<android.animation.AnimatorSet$Node: android.animation.Animator mAnimation>;

        $r3 = virtualinvoke $r2.<android.animation.Animator: android.animation.Animator clone()>();

        r12.<android.animation.AnimatorSet$Node: android.animation.Animator mAnimation> = $r3;

        $r4 = r0.<android.animation.AnimatorSet$Node: java.util.ArrayList mChildNodes>;

        if $r4 == null goto label2;

        r13 = new java.util.ArrayList;

        $r9 = r0.<android.animation.AnimatorSet$Node: java.util.ArrayList mChildNodes>;

        specialinvoke r13.<java.util.ArrayList: void <init>(java.util.Collection)>($r9);

        r12.<android.animation.AnimatorSet$Node: java.util.ArrayList mChildNodes> = r13;

     label2:
        $r5 = r0.<android.animation.AnimatorSet$Node: java.util.ArrayList mSiblings>;

        if $r5 == null goto label3;

        r14 = new java.util.ArrayList;

        $r8 = r0.<android.animation.AnimatorSet$Node: java.util.ArrayList mSiblings>;

        specialinvoke r14.<java.util.ArrayList: void <init>(java.util.Collection)>($r8);

        r12.<android.animation.AnimatorSet$Node: java.util.ArrayList mSiblings> = r14;

     label3:
        $r6 = r0.<android.animation.AnimatorSet$Node: java.util.ArrayList mParents>;

        if $r6 == null goto label4;

        r15 = new java.util.ArrayList;

        $r7 = r0.<android.animation.AnimatorSet$Node: java.util.ArrayList mParents>;

        specialinvoke r15.<java.util.ArrayList: void <init>(java.util.Collection)>($r7);

        r12.<android.animation.AnimatorSet$Node: java.util.ArrayList mParents> = r15;

     label4:
        r12.<android.animation.AnimatorSet$Node: boolean mEnded> = 0;

     label5:
        return r12;

     label6:
        $r10 := @caughtexception;

        $r11 = new java.lang.AssertionError;

        specialinvoke $r11.<java.lang.AssertionError: void <init>()>();

        throw $r11;

        catch java.lang.CloneNotSupportedException from label1 to label2 with label6;
        catch java.lang.CloneNotSupportedException from label2 to label3 with label6;
        catch java.lang.CloneNotSupportedException from label3 to label4 with label6;
        catch java.lang.CloneNotSupportedException from label4 to label5 with label6;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        android.animation.AnimatorSet$Node r0, $r1;

        r0 := @this: android.animation.AnimatorSet$Node;

        $r1 = virtualinvoke r0.<android.animation.AnimatorSet$Node: android.animation.AnimatorSet$Node clone()>();

        return $r1;
    }
}
