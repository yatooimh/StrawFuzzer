public final class android.animation.AnimatorSet extends android.animation.Animator implements android.animation.AnimationHandler$AnimationFrameCallback
{
    private static final java.lang.String TAG;
    private boolean mChildrenInitialized;
    private android.animation.ValueAnimator mDelayAnim;
    private boolean mDependencyDirty;
    private android.animation.AnimatorListenerAdapter mDummyListener;
    private long mDuration;
    private final boolean mEndCanBeCalled;
    private java.util.ArrayList mEvents;
    private long mFirstFrame;
    private android.animation.TimeInterpolator mInterpolator;
    private int mLastEventId;
    private long mLastFrameTime;
    private android.util.ArrayMap mNodeMap;
    private java.util.ArrayList mNodes;
    private long mPauseTime;
    private java.util.ArrayList mPlayingSet;
    private boolean mReversing;
    private android.animation.AnimatorSet$Node mRootNode;
    private android.animation.AnimatorSet$SeekState mSeekState;
    private boolean mSelfPulse;
    private final boolean mShouldIgnoreEndWithoutStart;
    private final boolean mShouldResetValuesAtStart;
    private long mStartDelay;
    private boolean mStarted;
    private long mTotalDuration;

    public void <init>()
    {
        android.animation.AnimatorSet r0;
        java.util.ArrayList $r1, $r3, $r4, $r15;
        android.util.ArrayMap $r2, $r12;
        float[] $r5;
        android.animation.ValueAnimator $r6, $r11, r19;
        android.animation.AnimatorSet$Node $r7, $r10, $r14;
        android.animation.AnimatorSet$SeekState $r8;
        android.animation.AnimatorSet$1 $r9;
        android.content.pm.ApplicationInfo $r16, $r17, $r18;
        int $i0, $i1;
        android.app.Application r20;
        boolean z2, z3, z4;

        r0 := @this: android.animation.AnimatorSet;

        specialinvoke r0.<android.animation.Animator: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<android.animation.AnimatorSet: java.util.ArrayList mPlayingSet> = $r1;

        $r2 = new android.util.ArrayMap;

        specialinvoke $r2.<android.util.ArrayMap: void <init>()>();

        r0.<android.animation.AnimatorSet: android.util.ArrayMap mNodeMap> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<android.animation.AnimatorSet: java.util.ArrayList mEvents> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<android.animation.AnimatorSet: java.util.ArrayList mNodes> = $r4;

        r0.<android.animation.AnimatorSet: boolean mDependencyDirty> = 0;

        r0.<android.animation.AnimatorSet: boolean mStarted> = 0;

        r0.<android.animation.AnimatorSet: long mStartDelay> = 0L;

        $r5 = newarray (float)[2];

        $r5[0] = 0.0F;

        $r5[1] = 1.0F;

        $r6 = staticinvoke <android.animation.ValueAnimator: android.animation.ValueAnimator ofFloat(float[])>($r5);

        r19 = virtualinvoke $r6.<android.animation.ValueAnimator: android.animation.ValueAnimator setDuration(long)>(0L);

        r0.<android.animation.AnimatorSet: android.animation.ValueAnimator mDelayAnim> = r19;

        $r7 = new android.animation.AnimatorSet$Node;

        specialinvoke $r7.<android.animation.AnimatorSet$Node: void <init>(android.animation.Animator)>(r19);

        r0.<android.animation.AnimatorSet: android.animation.AnimatorSet$Node mRootNode> = $r7;

        r0.<android.animation.AnimatorSet: long mDuration> = -1L;

        r0.<android.animation.AnimatorSet: android.animation.TimeInterpolator mInterpolator> = null;

        r0.<android.animation.AnimatorSet: long mTotalDuration> = 0L;

        r0.<android.animation.AnimatorSet: long mLastFrameTime> = -1L;

        r0.<android.animation.AnimatorSet: long mFirstFrame> = -1L;

        r0.<android.animation.AnimatorSet: int mLastEventId> = -1;

        r0.<android.animation.AnimatorSet: boolean mReversing> = 0;

        r0.<android.animation.AnimatorSet: boolean mSelfPulse> = 1;

        $r8 = new android.animation.AnimatorSet$SeekState;

        specialinvoke $r8.<android.animation.AnimatorSet$SeekState: void <init>(android.animation.AnimatorSet,android.animation.AnimatorSet$1)>(r0, null);

        r0.<android.animation.AnimatorSet: android.animation.AnimatorSet$SeekState mSeekState> = $r8;

        r0.<android.animation.AnimatorSet: boolean mChildrenInitialized> = 0;

        r0.<android.animation.AnimatorSet: long mPauseTime> = -1L;

        $r9 = new android.animation.AnimatorSet$1;

        specialinvoke $r9.<android.animation.AnimatorSet$1: void <init>(android.animation.AnimatorSet)>(r0);

        r0.<android.animation.AnimatorSet: android.animation.AnimatorListenerAdapter mDummyListener> = $r9;

        $r12 = r0.<android.animation.AnimatorSet: android.util.ArrayMap mNodeMap>;

        $r11 = r0.<android.animation.AnimatorSet: android.animation.ValueAnimator mDelayAnim>;

        $r10 = r0.<android.animation.AnimatorSet: android.animation.AnimatorSet$Node mRootNode>;

        virtualinvoke $r12.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, $r10);

        $r15 = r0.<android.animation.AnimatorSet: java.util.ArrayList mNodes>;

        $r14 = r0.<android.animation.AnimatorSet: android.animation.AnimatorSet$Node mRootNode>;

        virtualinvoke $r15.<java.util.ArrayList: boolean add(java.lang.Object)>($r14);

        r20 = staticinvoke <android.app.ActivityThread: android.app.Application currentApplication()>();

        if r20 == null goto label06;

        $r16 = virtualinvoke r20.<android.app.Application: android.content.pm.ApplicationInfo getApplicationInfo()>();

        if $r16 != null goto label01;

        goto label06;

     label01:
        $r17 = virtualinvoke r20.<android.app.Application: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $i0 = $r17.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i0 >= 24 goto label02;

        r0.<android.animation.AnimatorSet: boolean mShouldIgnoreEndWithoutStart> = 1;

        goto label03;

     label02:
        r0.<android.animation.AnimatorSet: boolean mShouldIgnoreEndWithoutStart> = 0;

     label03:
        $r18 = virtualinvoke r20.<android.app.Application: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $i1 = $r18.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i1 >= 26 goto label04;

        z2 = 1;

        goto label05;

     label04:
        z2 = 0;

     label05:
        goto label07;

     label06:
        r0.<android.animation.AnimatorSet: boolean mShouldIgnoreEndWithoutStart> = 1;

        z2 = 1;

     label07:
        if z2 != 0 goto label08;

        z3 = 1;

        goto label09;

     label08:
        z3 = 0;

     label09:
        r0.<android.animation.AnimatorSet: boolean mShouldResetValuesAtStart> = z3;

        z4 = 0;

        if z2 != 0 goto label10;

        z4 = 1;

     label10:
        r0.<android.animation.AnimatorSet: boolean mEndCanBeCalled> = z4;

        return;
    }

    static android.util.ArrayMap access$100(android.animation.AnimatorSet)
    {
        android.animation.AnimatorSet r0;
        android.util.ArrayMap $r1;

        r0 := @parameter0: android.animation.AnimatorSet;

        $r1 = r0.<android.animation.AnimatorSet: android.util.ArrayMap mNodeMap>;

        return $r1;
    }

    static long access$200(android.animation.AnimatorSet)
    {
        android.animation.AnimatorSet r0;
        long $l0;

        r0 := @parameter0: android.animation.AnimatorSet;

        $l0 = r0.<android.animation.AnimatorSet: long mStartDelay>;

        return $l0;
    }

    static boolean access$300(android.animation.AnimatorSet)
    {
        android.animation.AnimatorSet r0;
        boolean $z0;

        r0 := @parameter0: android.animation.AnimatorSet;

        $z0 = r0.<android.animation.AnimatorSet: boolean mReversing>;

        return $z0;
    }

    static boolean access$402(android.animation.AnimatorSet, boolean)
    {
        android.animation.AnimatorSet r0;
        boolean z0;

        r0 := @parameter0: android.animation.AnimatorSet;

        z0 := @parameter1: boolean;

        r0.<android.animation.AnimatorSet: boolean mDependencyDirty> = z0;

        return z0;
    }

    static android.animation.AnimatorSet$Node access$500(android.animation.AnimatorSet, android.animation.Animator)
    {
        android.animation.AnimatorSet r0;
        android.animation.Animator r1;
        android.animation.AnimatorSet$Node $r2;

        r0 := @parameter0: android.animation.AnimatorSet;

        r1 := @parameter1: android.animation.Animator;

        $r2 = specialinvoke r0.<android.animation.AnimatorSet: android.animation.AnimatorSet$Node getNodeForAnimation(android.animation.Animator)>(r1);

        return $r2;
    }

    private void addAnimationCallback(long)
    {
        android.animation.AnimatorSet r0;
        long l0;
        boolean $z0;
        android.animation.AnimationHandler $r1;

        r0 := @this: android.animation.AnimatorSet;

        l0 := @parameter0: long;

        $z0 = r0.<android.animation.AnimatorSet: boolean mSelfPulse>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = staticinvoke <android.animation.AnimationHandler: android.animation.AnimationHandler getInstance()>();

        virtualinvoke $r1.<android.animation.AnimationHandler: void addAnimationFrameCallback(android.animation.AnimationHandler$AnimationFrameCallback,long)>(r0, l0);

        return;
    }

    private void addDummyListener()
    {
        android.animation.AnimatorSet r0;
        java.util.ArrayList $r1, $r2;
        int $i0, i1;
        java.lang.Object $r3;
        android.animation.AnimatorSet$Node $r4;
        android.animation.AnimatorListenerAdapter $r5;
        android.animation.Animator $r6;

        r0 := @this: android.animation.AnimatorSet;

        i1 = 1;

     label1:
        $r1 = r0.<android.animation.AnimatorSet: java.util.ArrayList mNodes>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if i1 >= $i0 goto label2;

        $r2 = r0.<android.animation.AnimatorSet: java.util.ArrayList mNodes>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r4 = (android.animation.AnimatorSet$Node) $r3;

        $r6 = $r4.<android.animation.AnimatorSet$Node: android.animation.Animator mAnimation>;

        $r5 = r0.<android.animation.AnimatorSet: android.animation.AnimatorListenerAdapter mDummyListener>;

        virtualinvoke $r6.<android.animation.Animator: void addListener(android.animation.Animator$AnimatorListener)>($r5);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    private void createDependencyGraph()
    {
        android.animation.AnimatorSet r0;
        int i0, $i1, $i3, $i4, $i6, i10, i11, i12, i13, i14, i15, i16;
        android.animation.AnimatorSet$Node r1, $r5, $r7, $r8, $r13, $r15, $r27, $r31, $r35, $r38, r40, r41;
        boolean $z0, $z1, z4;
        java.util.ArrayList $r2, $r3, $r4, $r11, $r14, $r16, $r18, $r19, $r20, $r21, $r22, $r24, $r25, $r28, $r29, $r32, $r33, $r36, r43;
        android.animation.ValueAnimator $r6;
        long $l2, $l5, $l7, $l8;
        java.lang.Object $r9, $r12, $r17, $r23, $r26, $r30, $r34, $r37;
        android.animation.AnimatorSet$AnimationEvent $r10;
        byte $b9;
        android.animation.Animator r39;

        r0 := @this: android.animation.AnimatorSet;

        $z0 = r0.<android.animation.AnimatorSet: boolean mDependencyDirty>;

        if $z0 != 0 goto label04;

        i10 = 0;

     label01:
        z4 = 0;

        $r32 = r0.<android.animation.AnimatorSet: java.util.ArrayList mNodes>;

        $i6 = virtualinvoke $r32.<java.util.ArrayList: int size()>();

        if i10 >= $i6 goto label03;

        $r33 = r0.<android.animation.AnimatorSet: java.util.ArrayList mNodes>;

        $r34 = virtualinvoke $r33.<java.util.ArrayList: java.lang.Object get(int)>(i10);

        $r35 = (android.animation.AnimatorSet$Node) $r34;

        r39 = $r35.<android.animation.AnimatorSet$Node: android.animation.Animator mAnimation>;

        $r36 = r0.<android.animation.AnimatorSet: java.util.ArrayList mNodes>;

        $r37 = virtualinvoke $r36.<java.util.ArrayList: java.lang.Object get(int)>(i10);

        $r38 = (android.animation.AnimatorSet$Node) $r37;

        $l7 = $r38.<android.animation.AnimatorSet$Node: long mTotalDuration>;

        $l8 = virtualinvoke r39.<android.animation.Animator: long getTotalDuration()>();

        $b9 = $l7 cmp $l8;

        if $b9 == 0 goto label02;

        z4 = 1;

        goto label03;

     label02:
        i10 = i10 + 1;

        goto label01;

     label03:
        if z4 != 0 goto label04;

        return;

     label04:
        r0.<android.animation.AnimatorSet: boolean mDependencyDirty> = 0;

        $r2 = r0.<android.animation.AnimatorSet: java.util.ArrayList mNodes>;

        i11 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i12 = 0;

     label05:
        if i12 >= i11 goto label06;

        $r29 = r0.<android.animation.AnimatorSet: java.util.ArrayList mNodes>;

        $r30 = virtualinvoke $r29.<java.util.ArrayList: java.lang.Object get(int)>(i12);

        $r31 = (android.animation.AnimatorSet$Node) $r30;

        $r31.<android.animation.AnimatorSet$Node: boolean mParentsAdded> = 0;

        i12 = i12 + 1;

        goto label05;

     label06:
        i13 = 0;

     label07:
        if i13 >= i11 goto label14;

        $r16 = r0.<android.animation.AnimatorSet: java.util.ArrayList mNodes>;

        $r17 = virtualinvoke $r16.<java.util.ArrayList: java.lang.Object get(int)>(i13);

        r40 = (android.animation.AnimatorSet$Node) $r17;

        $z1 = r40.<android.animation.AnimatorSet$Node: boolean mParentsAdded>;

        if $z1 == 0 goto label08;

        goto label13;

     label08:
        r40.<android.animation.AnimatorSet$Node: boolean mParentsAdded> = 1;

        $r18 = r40.<android.animation.AnimatorSet$Node: java.util.ArrayList mSiblings>;

        if $r18 != null goto label09;

        goto label13;

     label09:
        $r19 = r40.<android.animation.AnimatorSet$Node: java.util.ArrayList mSiblings>;

        specialinvoke r0.<android.animation.AnimatorSet: void findSiblings(android.animation.AnimatorSet$Node,java.util.ArrayList)>(r40, $r19);

        $r20 = r40.<android.animation.AnimatorSet$Node: java.util.ArrayList mSiblings>;

        virtualinvoke $r20.<java.util.ArrayList: boolean remove(java.lang.Object)>(r40);

        $r21 = r40.<android.animation.AnimatorSet$Node: java.util.ArrayList mSiblings>;

        i0 = virtualinvoke $r21.<java.util.ArrayList: int size()>();

        i14 = 0;

     label10:
        if i14 >= i0 goto label11;

        $r25 = r40.<android.animation.AnimatorSet$Node: java.util.ArrayList mSiblings>;

        $r26 = virtualinvoke $r25.<java.util.ArrayList: java.lang.Object get(int)>(i14);

        $r27 = (android.animation.AnimatorSet$Node) $r26;

        $r28 = $r27.<android.animation.AnimatorSet$Node: java.util.ArrayList mParents>;

        virtualinvoke r40.<android.animation.AnimatorSet$Node: void addParents(java.util.ArrayList)>($r28);

        i14 = i14 + 1;

        goto label10;

     label11:
        i15 = 0;

     label12:
        if i15 >= i0 goto label13;

        $r22 = r40.<android.animation.AnimatorSet$Node: java.util.ArrayList mSiblings>;

        $r23 = virtualinvoke $r22.<java.util.ArrayList: java.lang.Object get(int)>(i15);

        r1 = (android.animation.AnimatorSet$Node) $r23;

        $r24 = r40.<android.animation.AnimatorSet$Node: java.util.ArrayList mParents>;

        virtualinvoke r1.<android.animation.AnimatorSet$Node: void addParents(java.util.ArrayList)>($r24);

        r1.<android.animation.AnimatorSet$Node: boolean mParentsAdded> = 1;

        i15 = i15 + 1;

        goto label12;

     label13:
        i13 = i13 + 1;

        goto label07;

     label14:
        i16 = 0;

     label15:
        if i16 >= i11 goto label17;

        $r11 = r0.<android.animation.AnimatorSet: java.util.ArrayList mNodes>;

        $r12 = virtualinvoke $r11.<java.util.ArrayList: java.lang.Object get(int)>(i16);

        r41 = (android.animation.AnimatorSet$Node) $r12;

        $r13 = r0.<android.animation.AnimatorSet: android.animation.AnimatorSet$Node mRootNode>;

        if r41 == $r13 goto label16;

        $r14 = r41.<android.animation.AnimatorSet$Node: java.util.ArrayList mParents>;

        if $r14 != null goto label16;

        $r15 = r0.<android.animation.AnimatorSet: android.animation.AnimatorSet$Node mRootNode>;

        virtualinvoke r41.<android.animation.AnimatorSet$Node: void addParent(android.animation.AnimatorSet$Node)>($r15);

     label16:
        i16 = i16 + 1;

        goto label15;

     label17:
        $r3 = new java.util.ArrayList;

        $r4 = r0.<android.animation.AnimatorSet: java.util.ArrayList mNodes>;

        $i1 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        specialinvoke $r3.<java.util.ArrayList: void <init>(int)>($i1);

        $r5 = r0.<android.animation.AnimatorSet: android.animation.AnimatorSet$Node mRootNode>;

        $r5.<android.animation.AnimatorSet$Node: long mStartTime> = 0L;

        $r7 = r0.<android.animation.AnimatorSet: android.animation.AnimatorSet$Node mRootNode>;

        $r6 = r0.<android.animation.AnimatorSet: android.animation.ValueAnimator mDelayAnim>;

        $l2 = virtualinvoke $r6.<android.animation.ValueAnimator: long getDuration()>();

        $r7.<android.animation.AnimatorSet$Node: long mEndTime> = $l2;

        $r8 = r0.<android.animation.AnimatorSet: android.animation.AnimatorSet$Node mRootNode>;

        specialinvoke r0.<android.animation.AnimatorSet: void updatePlayTime(android.animation.AnimatorSet$Node,java.util.ArrayList)>($r8, $r3);

        specialinvoke r0.<android.animation.AnimatorSet: void sortAnimationEvents()>();

        r43 = r0.<android.animation.AnimatorSet: java.util.ArrayList mEvents>;

        $i3 = virtualinvoke r43.<java.util.ArrayList: int size()>();

        $i4 = $i3 - 1;

        $r9 = virtualinvoke r43.<java.util.ArrayList: java.lang.Object get(int)>($i4);

        $r10 = (android.animation.AnimatorSet$AnimationEvent) $r9;

        $l5 = virtualinvoke $r10.<android.animation.AnimatorSet$AnimationEvent: long getTime()>();

        r0.<android.animation.AnimatorSet: long mTotalDuration> = $l5;

        return;
    }

    private void endAnimation()
    {
        android.animation.AnimatorSet r0;
        java.util.ArrayList r1, $r3, $r4, $r5;
        int i0, i1;
        android.animation.AnimatorSet$SeekState $r2;
        java.lang.Object $r6, $r7;
        boolean $z0;
        android.animation.Animator$AnimatorListener $r8;

        r0 := @this: android.animation.AnimatorSet;

        r0.<android.animation.AnimatorSet: boolean mStarted> = 0;

        r0.<android.animation.AnimatorSet: long mLastFrameTime> = -1L;

        r0.<android.animation.AnimatorSet: long mFirstFrame> = -1L;

        r0.<android.animation.AnimatorSet: int mLastEventId> = -1;

        r0.<android.animation.AnimatorSet: boolean mPaused> = 0;

        r0.<android.animation.AnimatorSet: long mPauseTime> = -1L;

        $r2 = r0.<android.animation.AnimatorSet: android.animation.AnimatorSet$SeekState mSeekState>;

        virtualinvoke $r2.<android.animation.AnimatorSet$SeekState: void reset()>();

        $r3 = r0.<android.animation.AnimatorSet: java.util.ArrayList mPlayingSet>;

        virtualinvoke $r3.<java.util.ArrayList: void clear()>();

        specialinvoke r0.<android.animation.AnimatorSet: void removeAnimationCallback()>();

        $r4 = r0.<android.animation.AnimatorSet: java.util.ArrayList mListeners>;

        if $r4 == null goto label2;

        $r5 = r0.<android.animation.AnimatorSet: java.util.ArrayList mListeners>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object clone()>();

        r1 = (java.util.ArrayList) $r6;

        i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r7 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r8 = (android.animation.Animator$AnimatorListener) $r7;

        $z0 = r0.<android.animation.AnimatorSet: boolean mReversing>;

        interfaceinvoke $r8.<android.animation.Animator$AnimatorListener: void onAnimationEnd(android.animation.Animator,boolean)>(r0, $z0);

        i1 = i1 + 1;

        goto label1;

     label2:
        specialinvoke r0.<android.animation.AnimatorSet: void removeDummyListener()>();

        r0.<android.animation.AnimatorSet: boolean mSelfPulse> = 1;

        r0.<android.animation.AnimatorSet: boolean mReversing> = 0;

        return;
    }

    private int findLatestEventIdForTime(long)
    {
        android.animation.AnimatorSet r0;
        long l0, l2, $l4, $l6, $l8, $l9;
        int i1, $i3, i11, i12, i13, i14, i15, i16, i17;
        android.animation.AnimatorSet$AnimationEvent r1, $r7;
        java.util.ArrayList $r2, $r3, $r5;
        boolean $z0;
        java.lang.Object $r4, $r6;
        byte $b5, $b7, $b10;

        r0 := @this: android.animation.AnimatorSet;

        l0 := @parameter0: long;

        $r2 = r0.<android.animation.AnimatorSet: java.util.ArrayList mEvents>;

        i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i11 = r0.<android.animation.AnimatorSet: int mLastEventId>;

        $z0 = r0.<android.animation.AnimatorSet: boolean mReversing>;

        if $z0 == 0 goto label5;

        l2 = virtualinvoke r0.<android.animation.AnimatorSet: long getTotalDuration()>();

        i12 = r0.<android.animation.AnimatorSet: int mLastEventId>;

        i13 = i12;

        if i12 != -1 goto label1;

        i13 = i1;

     label1:
        r0.<android.animation.AnimatorSet: int mLastEventId> = i13;

        i14 = i13 + -1;

     label2:
        if i14 < 0 goto label4;

        $r5 = r0.<android.animation.AnimatorSet: java.util.ArrayList mEvents>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i14);

        $r7 = (android.animation.AnimatorSet$AnimationEvent) $r6;

        $l8 = virtualinvoke $r7.<android.animation.AnimatorSet$AnimationEvent: long getTime()>();

        $l9 = l2 - l0;

        $b10 = $l8 cmp $l9;

        if $b10 < 0 goto label3;

        i11 = i14;

     label3:
        i14 = i14 + -1;

        goto label2;

     label4:
        i15 = i11;

        goto label8;

     label5:
        $i3 = r0.<android.animation.AnimatorSet: int mLastEventId>;

        i16 = $i3 + 1;

     label6:
        i15 = i11;

        if i16 >= i1 goto label8;

        $r3 = r0.<android.animation.AnimatorSet: java.util.ArrayList mEvents>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i16);

        r1 = (android.animation.AnimatorSet$AnimationEvent) $r4;

        i17 = i11;

        $l4 = virtualinvoke r1.<android.animation.AnimatorSet$AnimationEvent: long getTime()>();

        $b5 = $l4 cmp -1L;

        if $b5 == 0 goto label7;

        i17 = i11;

        $l6 = virtualinvoke r1.<android.animation.AnimatorSet$AnimationEvent: long getTime()>();

        $b7 = $l6 cmp l0;

        if $b7 > 0 goto label7;

        i17 = i16;

     label7:
        i16 = i16 + 1;

        i11 = i17;

        goto label6;

     label8:
        return i15;
    }

    private void findSiblings(android.animation.AnimatorSet$Node, java.util.ArrayList)
    {
        android.animation.AnimatorSet r0;
        android.animation.AnimatorSet$Node r1, $r7;
        java.util.ArrayList r2, $r3, $r4, $r5;
        boolean $z0;
        int $i0, i1;
        java.lang.Object $r6;

        r0 := @this: android.animation.AnimatorSet;

        r1 := @parameter0: android.animation.AnimatorSet$Node;

        r2 := @parameter1: java.util.ArrayList;

        $z0 = virtualinvoke r2.<java.util.ArrayList: boolean contains(java.lang.Object)>(r1);

        if $z0 != 0 goto label3;

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        $r3 = r1.<android.animation.AnimatorSet$Node: java.util.ArrayList mSiblings>;

        if $r3 != null goto label1;

        return;

     label1:
        i1 = 0;

     label2:
        $r4 = r1.<android.animation.AnimatorSet$Node: java.util.ArrayList mSiblings>;

        $i0 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        if i1 >= $i0 goto label3;

        $r5 = r1.<android.animation.AnimatorSet$Node: java.util.ArrayList mSiblings>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r7 = (android.animation.AnimatorSet$Node) $r6;

        specialinvoke r0.<android.animation.AnimatorSet: void findSiblings(android.animation.AnimatorSet$Node,java.util.ArrayList)>($r7, r2);

        i1 = i1 + 1;

        goto label2;

     label3:
        return;
    }

    private void forceToEnd()
    {
        android.animation.AnimatorSet r0;
        long l0, $l6, l7;
        boolean $z0, $z1;
        byte $b1;
        java.util.ArrayList $r1, $r2;
        int $i2, $i3, $i4, $i5;

        r0 := @this: android.animation.AnimatorSet;

        $z0 = r0.<android.animation.AnimatorSet: boolean mEndCanBeCalled>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<android.animation.AnimatorSet: void end()>();

        return;

     label1:
        $z1 = r0.<android.animation.AnimatorSet: boolean mReversing>;

        if $z1 == 0 goto label2;

        $i5 = r0.<android.animation.AnimatorSet: int mLastEventId>;

        $l6 = virtualinvoke r0.<android.animation.AnimatorSet: long getTotalDuration()>();

        specialinvoke r0.<android.animation.AnimatorSet: void handleAnimationEvents(int,int,long)>($i5, 0, $l6);

        goto label4;

     label2:
        l0 = virtualinvoke r0.<android.animation.AnimatorSet: long getTotalDuration()>();

        l7 = l0;

        $b1 = l0 cmp -1L;

        if $b1 != 0 goto label3;

        l7 = 2147483647L;

     label3:
        $i2 = r0.<android.animation.AnimatorSet: int mLastEventId>;

        $r1 = r0.<android.animation.AnimatorSet: java.util.ArrayList mEvents>;

        $i3 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $i4 = $i3 - 1;

        specialinvoke r0.<android.animation.AnimatorSet: void handleAnimationEvents(int,int,long)>($i2, $i4, l7);

     label4:
        $r2 = r0.<android.animation.AnimatorSet: java.util.ArrayList mPlayingSet>;

        virtualinvoke $r2.<java.util.ArrayList: void clear()>();

        specialinvoke r0.<android.animation.AnimatorSet: void endAnimation()>();

        return;
    }

    private android.animation.AnimatorSet$Node getNodeForAnimation(android.animation.Animator)
    {
        android.animation.AnimatorSet r0;
        android.animation.Animator r1;
        android.animation.AnimatorSet$Node r2, $r5, r9;
        android.util.ArrayMap $r3, $r6;
        java.lang.Object $r4;
        java.util.ArrayList $r8;

        r0 := @this: android.animation.AnimatorSet;

        r1 := @parameter0: android.animation.Animator;

        $r3 = r0.<android.animation.AnimatorSet: android.util.ArrayMap mNodeMap>;

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (android.animation.AnimatorSet$Node) $r4;

        r9 = r2;

        if r2 != null goto label1;

        $r5 = new android.animation.AnimatorSet$Node;

        specialinvoke $r5.<android.animation.AnimatorSet$Node: void <init>(android.animation.Animator)>(r1);

        r9 = $r5;

        $r6 = r0.<android.animation.AnimatorSet: android.util.ArrayMap mNodeMap>;

        virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r5);

        $r8 = r0.<android.animation.AnimatorSet: java.util.ArrayList mNodes>;

        virtualinvoke $r8.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

     label1:
        return r9;
    }

    private long getPlayTimeForNode(long, android.animation.AnimatorSet$Node)
    {
        android.animation.AnimatorSet r0;
        long l0, $l1;
        android.animation.AnimatorSet$Node r1;
        boolean $z0;

        r0 := @this: android.animation.AnimatorSet;

        l0 := @parameter0: long;

        r1 := @parameter1: android.animation.AnimatorSet$Node;

        $z0 = r0.<android.animation.AnimatorSet: boolean mReversing>;

        $l1 = specialinvoke r0.<android.animation.AnimatorSet: long getPlayTimeForNode(long,android.animation.AnimatorSet$Node,boolean)>(l0, r1, $z0);

        return $l1;
    }

    private long getPlayTimeForNode(long, android.animation.AnimatorSet$Node, boolean)
    {
        android.animation.AnimatorSet r0;
        long l0, l1, $l2, $l3, $l4, $l5, $l6;
        android.animation.AnimatorSet$Node r1;
        boolean z0;

        r0 := @this: android.animation.AnimatorSet;

        l0 := @parameter0: long;

        r1 := @parameter1: android.animation.AnimatorSet$Node;

        z0 := @parameter2: boolean;

        if z0 == 0 goto label1;

        l1 = virtualinvoke r0.<android.animation.AnimatorSet: long getTotalDuration()>();

        $l5 = r1.<android.animation.AnimatorSet$Node: long mEndTime>;

        $l4 = l1 - l0;

        $l6 = $l5 - $l4;

        return $l6;

     label1:
        $l2 = r1.<android.animation.AnimatorSet$Node: long mStartTime>;

        $l3 = l0 - $l2;

        return $l3;
    }

    private void handleAnimationEvents(int, int, long)
    {
        android.animation.AnimatorSet r0;
        int i0, $i2, $i3, $i5, $i6, i8, i9, i10;
        long l1, $l4, $l7;
        boolean $z0, $z1, $z3, $z4, $z5;
        java.util.ArrayList $r1, $r4, $r8, $r12, $r15;
        java.lang.Object $r2, $r9;
        android.animation.AnimatorSet$Node $r3, $r11, r17, r19;
        android.animation.Animator $r5, $r6, $r7, $r10, $r13, $r14;
        android.animation.AnimatorSet$AnimationEvent r16, r18;

        r0 := @this: android.animation.AnimatorSet;

        i8 := @parameter0: int;

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        $z0 = r0.<android.animation.AnimatorSet: boolean mReversing>;

        if $z0 == 0 goto label07;

        if i8 != -1 goto label01;

        $r15 = r0.<android.animation.AnimatorSet: java.util.ArrayList mEvents>;

        i8 = virtualinvoke $r15.<java.util.ArrayList: int size()>();

        goto label01;

     label01:
        i9 = i8 + -1;

     label02:
        if i9 < i0 goto label06;

        $r8 = r0.<android.animation.AnimatorSet: java.util.ArrayList mEvents>;

        $r9 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>(i9);

        r16 = (android.animation.AnimatorSet$AnimationEvent) $r9;

        r17 = r16.<android.animation.AnimatorSet$AnimationEvent: android.animation.AnimatorSet$Node mNode>;

        $i5 = r16.<android.animation.AnimatorSet$AnimationEvent: int mEvent>;

        if $i5 != 2 goto label04;

        $r10 = r17.<android.animation.AnimatorSet$Node: android.animation.Animator mAnimation>;

        $z5 = virtualinvoke $r10.<android.animation.Animator: boolean isStarted()>();

        if $z5 == 0 goto label03;

        $r14 = r17.<android.animation.AnimatorSet$Node: android.animation.Animator mAnimation>;

        virtualinvoke $r14.<android.animation.Animator: void cancel()>();

     label03:
        r17.<android.animation.AnimatorSet$Node: boolean mEnded> = 0;

        $r12 = r0.<android.animation.AnimatorSet: java.util.ArrayList mPlayingSet>;

        $r11 = r16.<android.animation.AnimatorSet$AnimationEvent: android.animation.AnimatorSet$Node mNode>;

        virtualinvoke $r12.<java.util.ArrayList: boolean add(java.lang.Object)>($r11);

        $r13 = r17.<android.animation.AnimatorSet$Node: android.animation.Animator mAnimation>;

        virtualinvoke $r13.<android.animation.Animator: void startWithoutPulsing(boolean)>(1);

        specialinvoke r0.<android.animation.AnimatorSet: void pulseFrame(android.animation.AnimatorSet$Node,long)>(r17, 0L);

        goto label05;

     label04:
        $i6 = r16.<android.animation.AnimatorSet$AnimationEvent: int mEvent>;

        if $i6 != 1 goto label05;

        $z4 = r17.<android.animation.AnimatorSet$Node: boolean mEnded>;

        if $z4 != 0 goto label05;

        $l7 = specialinvoke r0.<android.animation.AnimatorSet: long getPlayTimeForNode(long,android.animation.AnimatorSet$Node)>(l1, r17);

        specialinvoke r0.<android.animation.AnimatorSet: void pulseFrame(android.animation.AnimatorSet$Node,long)>(r17, $l7);

     label05:
        i9 = i9 + -1;

        goto label02;

     label06:
        goto label12;

     label07:
        i10 = i8 + 1;

     label08:
        if i10 > i0 goto label12;

        $r1 = r0.<android.animation.AnimatorSet: java.util.ArrayList mEvents>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>(i10);

        r18 = (android.animation.AnimatorSet$AnimationEvent) $r2;

        r19 = r18.<android.animation.AnimatorSet$AnimationEvent: android.animation.AnimatorSet$Node mNode>;

        $i2 = r18.<android.animation.AnimatorSet$AnimationEvent: int mEvent>;

        if $i2 != 0 goto label10;

        $r4 = r0.<android.animation.AnimatorSet: java.util.ArrayList mPlayingSet>;

        $r3 = r18.<android.animation.AnimatorSet$AnimationEvent: android.animation.AnimatorSet$Node mNode>;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        $r5 = r19.<android.animation.AnimatorSet$Node: android.animation.Animator mAnimation>;

        $z3 = virtualinvoke $r5.<android.animation.Animator: boolean isStarted()>();

        if $z3 == 0 goto label09;

        $r7 = r19.<android.animation.AnimatorSet$Node: android.animation.Animator mAnimation>;

        virtualinvoke $r7.<android.animation.Animator: void cancel()>();

     label09:
        r19.<android.animation.AnimatorSet$Node: boolean mEnded> = 0;

        $r6 = r19.<android.animation.AnimatorSet$Node: android.animation.Animator mAnimation>;

        virtualinvoke $r6.<android.animation.Animator: void startWithoutPulsing(boolean)>(0);

        specialinvoke r0.<android.animation.AnimatorSet: void pulseFrame(android.animation.AnimatorSet$Node,long)>(r19, 0L);

        goto label11;

     label10:
        $i3 = r18.<android.animation.AnimatorSet$AnimationEvent: int mEvent>;

        if $i3 != 2 goto label11;

        $z1 = r19.<android.animation.AnimatorSet$Node: boolean mEnded>;

        if $z1 != 0 goto label11;

        $l4 = specialinvoke r0.<android.animation.AnimatorSet: long getPlayTimeForNode(long,android.animation.AnimatorSet$Node)>(l1, r19);

        specialinvoke r0.<android.animation.AnimatorSet: void pulseFrame(android.animation.AnimatorSet$Node,long)>(r19, $l4);

     label11:
        i10 = i10 + 1;

        goto label08;

     label12:
        return;
    }

    private void initAnimation()
    {
        android.animation.AnimatorSet r0;
        android.animation.TimeInterpolator $r1, $r6;
        java.util.ArrayList $r2, $r3;
        int $i0, i1;
        java.lang.Object $r4;
        android.animation.AnimatorSet$Node $r5;
        android.animation.Animator $r7;

        r0 := @this: android.animation.AnimatorSet;

        $r1 = r0.<android.animation.AnimatorSet: android.animation.TimeInterpolator mInterpolator>;

        if $r1 == null goto label2;

        i1 = 0;

     label1:
        $r2 = r0.<android.animation.AnimatorSet: java.util.ArrayList mNodes>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if i1 >= $i0 goto label2;

        $r3 = r0.<android.animation.AnimatorSet: java.util.ArrayList mNodes>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r5 = (android.animation.AnimatorSet$Node) $r4;

        $r7 = $r5.<android.animation.AnimatorSet$Node: android.animation.Animator mAnimation>;

        $r6 = r0.<android.animation.AnimatorSet: android.animation.TimeInterpolator mInterpolator>;

        virtualinvoke $r7.<android.animation.Animator: void setInterpolator(android.animation.TimeInterpolator)>($r6);

        i1 = i1 + 1;

        goto label1;

     label2:
        specialinvoke r0.<android.animation.AnimatorSet: void updateAnimatorsDuration()>();

        specialinvoke r0.<android.animation.AnimatorSet: void createDependencyGraph()>();

        return;
    }

    private void initChildren()
    {
        android.animation.AnimatorSet r0;
        boolean $z0;

        r0 := @this: android.animation.AnimatorSet;

        $z0 = virtualinvoke r0.<android.animation.AnimatorSet: boolean isInitialized()>();

        if $z0 != 0 goto label1;

        r0.<android.animation.AnimatorSet: boolean mChildrenInitialized> = 1;

        virtualinvoke r0.<android.animation.AnimatorSet: void skipToEndValue(boolean)>(0);

     label1:
        return;
    }

    private static boolean isEmptySet(android.animation.AnimatorSet)
    {
        android.animation.AnimatorSet r0, $r5;
        android.animation.Animator r1;
        long $l0;
        byte $b1;
        java.util.ArrayList $r2, $r3;
        int $i2, i3;
        java.lang.Object $r4;
        boolean $z0, $z1;

        r0 := @parameter0: android.animation.AnimatorSet;

        $l0 = virtualinvoke r0.<android.animation.AnimatorSet: long getStartDelay()>();

        $b1 = $l0 cmp 0L;

        if $b1 <= 0 goto label1;

        return 0;

     label1:
        i3 = 0;

     label2:
        $r2 = virtualinvoke r0.<android.animation.AnimatorSet: java.util.ArrayList getChildAnimations()>();

        $i2 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if i3 >= $i2 goto label5;

        $r3 = virtualinvoke r0.<android.animation.AnimatorSet: java.util.ArrayList getChildAnimations()>();

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r1 = (android.animation.Animator) $r4;

        $z0 = r1 instanceof android.animation.AnimatorSet;

        if $z0 != 0 goto label3;

        return 0;

     label3:
        $r5 = (android.animation.AnimatorSet) r1;

        $z1 = staticinvoke <android.animation.AnimatorSet: boolean isEmptySet(android.animation.AnimatorSet)>($r5);

        if $z1 != 0 goto label4;

        return 0;

     label4:
        i3 = i3 + 1;

        goto label2;

     label5:
        return 1;
    }

    private void printChildCount()
    {
        android.animation.AnimatorSet r0;
        int i0, $i1, $i3, $i5, i6, i7, i8, i9, i10;
        android.animation.AnimatorSet$Node r3, r4, $r7, $r17;
        java.util.ArrayList $r5, $r6, $r11, $r14, $r15;
        java.lang.StringBuilder $r8;
        java.lang.String $r9;
        java.lang.Object $r10, $r16;

        r0 := @this: android.animation.AnimatorSet;

        $r5 = new java.util.ArrayList;

        $r6 = r0.<android.animation.AnimatorSet: java.util.ArrayList mNodes>;

        $i1 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        specialinvoke $r5.<java.util.ArrayList: void <init>(int)>($i1);

        $r7 = r0.<android.animation.AnimatorSet: android.animation.AnimatorSet$Node mRootNode>;

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("AnimatorSet", "Current tree: ");

        i6 = 0;

     label1:
        $i3 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        if i6 >= $i3 goto label7;

        i0 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

     label2:
        if i6 >= i0 goto label6;

        $r10 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i6);

        r3 = (android.animation.AnimatorSet$Node) $r10;

        i7 = 0;

        i8 = 0;

        $r11 = r3.<android.animation.AnimatorSet$Node: java.util.ArrayList mChildNodes>;

        if $r11 == null goto label5;

        i9 = 0;

     label3:
        i7 = i8;

        $r14 = r3.<android.animation.AnimatorSet$Node: java.util.ArrayList mChildNodes>;

        $i5 = virtualinvoke $r14.<java.util.ArrayList: int size()>();

        if i9 >= $i5 goto label5;

        $r15 = r3.<android.animation.AnimatorSet$Node: java.util.ArrayList mChildNodes>;

        $r16 = virtualinvoke $r15.<java.util.ArrayList: java.lang.Object get(int)>(i9);

        r4 = (android.animation.AnimatorSet$Node) $r16;

        i10 = i8;

        $r17 = r4.<android.animation.AnimatorSet$Node: android.animation.AnimatorSet$Node mLatestParent>;

        if $r17 != r3 goto label4;

        i10 = i8 + 1;

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r4);

     label4:
        i9 = i9 + 1;

        i8 = i10;

        goto label3;

     label5:
        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i7);

        i6 = i6 + 1;

        goto label2;

     label6:
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("AnimatorSet", $r9);

        goto label1;

     label7:
        return;
    }

    private void pulseFrame(android.animation.AnimatorSet$Node, long)
    {
        android.animation.AnimatorSet r0;
        android.animation.AnimatorSet$Node r1;
        long l0, $l2;
        boolean $z0, $z1;
        byte $b1;
        float $f0, $f1, f2;
        android.animation.Animator $r2;

        r0 := @this: android.animation.AnimatorSet;

        r1 := @parameter0: android.animation.AnimatorSet$Node;

        l0 := @parameter1: long;

        $z0 = r1.<android.animation.AnimatorSet$Node: boolean mEnded>;

        if $z0 != 0 goto label2;

        f2 = staticinvoke <android.animation.ValueAnimator: float getDurationScale()>();

        $b1 = f2 cmpl 0.0F;

        if $b1 != 0 goto label1;

        f2 = 1.0F;

        goto label1;

     label1:
        $r2 = r1.<android.animation.AnimatorSet$Node: android.animation.Animator mAnimation>;

        $f0 = (float) l0;

        $f1 = $f0 * f2;

        $l2 = (long) $f1;

        $z1 = virtualinvoke $r2.<android.animation.Animator: boolean pulseAnimationFrame(long)>($l2);

        r1.<android.animation.AnimatorSet$Node: boolean mEnded> = $z1;

     label2:
        return;
    }

    private void removeAnimationCallback()
    {
        android.animation.AnimatorSet r0;
        boolean $z0;
        android.animation.AnimationHandler $r1;

        r0 := @this: android.animation.AnimatorSet;

        $z0 = r0.<android.animation.AnimatorSet: boolean mSelfPulse>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = staticinvoke <android.animation.AnimationHandler: android.animation.AnimationHandler getInstance()>();

        virtualinvoke $r1.<android.animation.AnimationHandler: void removeCallback(android.animation.AnimationHandler$AnimationFrameCallback)>(r0);

        return;
    }

    private void removeDummyListener()
    {
        android.animation.AnimatorSet r0;
        java.util.ArrayList $r1, $r2;
        int $i0, i1;
        java.lang.Object $r3;
        android.animation.AnimatorSet$Node $r4;
        android.animation.AnimatorListenerAdapter $r5;
        android.animation.Animator $r6;

        r0 := @this: android.animation.AnimatorSet;

        i1 = 1;

     label1:
        $r1 = r0.<android.animation.AnimatorSet: java.util.ArrayList mNodes>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if i1 >= $i0 goto label2;

        $r2 = r0.<android.animation.AnimatorSet: java.util.ArrayList mNodes>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r4 = (android.animation.AnimatorSet$Node) $r3;

        $r6 = $r4.<android.animation.AnimatorSet$Node: android.animation.Animator mAnimation>;

        $r5 = r0.<android.animation.AnimatorSet: android.animation.AnimatorListenerAdapter mDummyListener>;

        virtualinvoke $r6.<android.animation.Animator: void removeListener(android.animation.Animator$AnimatorListener)>($r5);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    private void skipToStartValue(boolean)
    {
        android.animation.AnimatorSet r0;
        boolean z0, $z1;

        r0 := @this: android.animation.AnimatorSet;

        z0 := @parameter0: boolean;

        $z1 = z0 ^ 1;

        virtualinvoke r0.<android.animation.AnimatorSet: void skipToEndValue(boolean)>($z1);

        return;
    }

    private void sortAnimationEvents()
    {
        android.animation.AnimatorSet r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i18, $i19, $i20, $i21, i22, i23, i24, i25, i26, i27, i28, i29;
        java.util.ArrayList $r1, $r2, $r4, $r5, $r6, $r9, $r12, $r15, $r21, $r25, $r33, $r35, $r37, $r38, $r40, $r41, $r43, $r48, $r51, $r54, $r57, $r59, $r61, r66, r67;
        android.animation.AnimatorSet$3 $r3;
        boolean $z0, z4;
        android.animation.AnimatorSet$AnimationEvent $r7, $r10, $r13, $r17, $r20, $r23, $r45, $r50, $r53, $r56, $r58, $r60, r63, r64, r65;
        android.animation.AnimatorSet$Node $r8, $r11, $r14, $r27, $r28, $r29, $r30, $r31, $r46, $r47, r62;
        java.lang.Object $r16, $r19, $r22, $r26, $r36, $r39, $r44, $r49, $r52, $r55;
        java.lang.UnsupportedOperationException $r18, $r24, $r34, $r42;
        long $l10, $l11, $l13, $l14, $l15, $l16;
        byte $b12, $b17;
        android.animation.Animator $r32;

        r0 := @this: android.animation.AnimatorSet;

        $r1 = r0.<android.animation.AnimatorSet: java.util.ArrayList mEvents>;

        virtualinvoke $r1.<java.util.ArrayList: void clear()>();

        i22 = 1;

     label01:
        $r2 = r0.<android.animation.AnimatorSet: java.util.ArrayList mNodes>;

        $i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if i22 >= $i1 goto label02;

        $r54 = r0.<android.animation.AnimatorSet: java.util.ArrayList mNodes>;

        $r55 = virtualinvoke $r54.<java.util.ArrayList: java.lang.Object get(int)>(i22);

        r62 = (android.animation.AnimatorSet$Node) $r55;

        $r57 = r0.<android.animation.AnimatorSet: java.util.ArrayList mEvents>;

        $r56 = new android.animation.AnimatorSet$AnimationEvent;

        specialinvoke $r56.<android.animation.AnimatorSet$AnimationEvent: void <init>(android.animation.AnimatorSet$Node,int)>(r62, 0);

        virtualinvoke $r57.<java.util.ArrayList: boolean add(java.lang.Object)>($r56);

        $r59 = r0.<android.animation.AnimatorSet: java.util.ArrayList mEvents>;

        $r58 = new android.animation.AnimatorSet$AnimationEvent;

        specialinvoke $r58.<android.animation.AnimatorSet$AnimationEvent: void <init>(android.animation.AnimatorSet$Node,int)>(r62, 1);

        virtualinvoke $r59.<java.util.ArrayList: boolean add(java.lang.Object)>($r58);

        $r61 = r0.<android.animation.AnimatorSet: java.util.ArrayList mEvents>;

        $r60 = new android.animation.AnimatorSet$AnimationEvent;

        specialinvoke $r60.<android.animation.AnimatorSet$AnimationEvent: void <init>(android.animation.AnimatorSet$Node,int)>(r62, 2);

        virtualinvoke $r61.<java.util.ArrayList: boolean add(java.lang.Object)>($r60);

        i22 = i22 + 1;

        goto label01;

     label02:
        $r4 = r0.<android.animation.AnimatorSet: java.util.ArrayList mEvents>;

        $r3 = new android.animation.AnimatorSet$3;

        specialinvoke $r3.<android.animation.AnimatorSet$3: void <init>(android.animation.AnimatorSet)>(r0);

        virtualinvoke $r4.<java.util.ArrayList: void sort(java.util.Comparator)>($r3);

        $r5 = r0.<android.animation.AnimatorSet: java.util.ArrayList mEvents>;

        i0 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        i23 = 0;

     label03:
        if i23 >= i0 goto label18;

        $r25 = r0.<android.animation.AnimatorSet: java.util.ArrayList mEvents>;

        $r26 = virtualinvoke $r25.<java.util.ArrayList: java.lang.Object get(int)>(i23);

        r63 = (android.animation.AnimatorSet$AnimationEvent) $r26;

        $i9 = r63.<android.animation.AnimatorSet$AnimationEvent: int mEvent>;

        if $i9 != 2 goto label16;

        $r27 = r63.<android.animation.AnimatorSet$AnimationEvent: android.animation.AnimatorSet$Node mNode>;

        $l11 = $r27.<android.animation.AnimatorSet$Node: long mStartTime>;

        $r28 = r63.<android.animation.AnimatorSet$AnimationEvent: android.animation.AnimatorSet$Node mNode>;

        $l10 = $r28.<android.animation.AnimatorSet$Node: long mEndTime>;

        $b12 = $l11 cmp $l10;

        if $b12 != 0 goto label04;

        z4 = 1;

        goto label05;

     label04:
        $r29 = r63.<android.animation.AnimatorSet$AnimationEvent: android.animation.AnimatorSet$Node mNode>;

        $l13 = $r29.<android.animation.AnimatorSet$Node: long mEndTime>;

        $r30 = r63.<android.animation.AnimatorSet$AnimationEvent: android.animation.AnimatorSet$Node mNode>;

        $l14 = $r30.<android.animation.AnimatorSet$Node: long mStartTime>;

        $r31 = r63.<android.animation.AnimatorSet$AnimationEvent: android.animation.AnimatorSet$Node mNode>;

        $r32 = $r31.<android.animation.AnimatorSet$Node: android.animation.Animator mAnimation>;

        $l15 = virtualinvoke $r32.<android.animation.Animator: long getStartDelay()>();

        $l16 = $l14 + $l15;

        $b17 = $l13 cmp $l16;

        if $b17 != 0 goto label15;

        z4 = 0;

     label05:
        i24 = i0;

        i25 = i0;

        i26 = i23 + 1;

     label06:
        if i26 >= i0 goto label10;

        if i24 >= i0 goto label07;

        if i25 >= i0 goto label07;

        goto label10;

     label07:
        i27 = i24;

        i28 = i25;

        $r43 = r0.<android.animation.AnimatorSet: java.util.ArrayList mEvents>;

        $r44 = virtualinvoke $r43.<java.util.ArrayList: java.lang.Object get(int)>(i26);

        $r45 = (android.animation.AnimatorSet$AnimationEvent) $r44;

        $r47 = $r45.<android.animation.AnimatorSet$AnimationEvent: android.animation.AnimatorSet$Node mNode>;

        $r46 = r63.<android.animation.AnimatorSet$AnimationEvent: android.animation.AnimatorSet$Node mNode>;

        if $r47 != $r46 goto label09;

        $r48 = r0.<android.animation.AnimatorSet: java.util.ArrayList mEvents>;

        $r49 = virtualinvoke $r48.<java.util.ArrayList: java.lang.Object get(int)>(i26);

        $r50 = (android.animation.AnimatorSet$AnimationEvent) $r49;

        $i20 = $r50.<android.animation.AnimatorSet$AnimationEvent: int mEvent>;

        if $i20 != 0 goto label08;

        i27 = i26;

        i28 = i25;

        goto label09;

     label08:
        i27 = i24;

        i28 = i25;

        $r51 = r0.<android.animation.AnimatorSet: java.util.ArrayList mEvents>;

        $r52 = virtualinvoke $r51.<java.util.ArrayList: java.lang.Object get(int)>(i26);

        $r53 = (android.animation.AnimatorSet$AnimationEvent) $r52;

        $i21 = $r53.<android.animation.AnimatorSet$AnimationEvent: int mEvent>;

        if $i21 != 1 goto label09;

        i28 = i26;

        i27 = i24;

     label09:
        i26 = i26 + 1;

        i24 = i27;

        i25 = i28;

        goto label06;

     label10:
        if z4 == 0 goto label12;

        $r41 = r0.<android.animation.AnimatorSet: java.util.ArrayList mEvents>;

        $i19 = virtualinvoke $r41.<java.util.ArrayList: int size()>();

        if i24 == $i19 goto label11;

        goto label12;

     label11:
        $r42 = new java.lang.UnsupportedOperationException;

        specialinvoke $r42.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Something went wrong, no start isfound after stop for an animation that has the same start and endtime.");

        throw $r42;

     label12:
        $r33 = r0.<android.animation.AnimatorSet: java.util.ArrayList mEvents>;

        $i18 = virtualinvoke $r33.<java.util.ArrayList: int size()>();

        if i25 == $i18 goto label14;

        i29 = i23;

        if z4 == 0 goto label13;

        $r38 = r0.<android.animation.AnimatorSet: java.util.ArrayList mEvents>;

        $r39 = virtualinvoke $r38.<java.util.ArrayList: java.lang.Object remove(int)>(i24);

        r64 = (android.animation.AnimatorSet$AnimationEvent) $r39;

        $r40 = r0.<android.animation.AnimatorSet: java.util.ArrayList mEvents>;

        virtualinvoke $r40.<java.util.ArrayList: void add(int,java.lang.Object)>(i23, r64);

        i29 = i23 + 1;

     label13:
        $r35 = r0.<android.animation.AnimatorSet: java.util.ArrayList mEvents>;

        $r36 = virtualinvoke $r35.<java.util.ArrayList: java.lang.Object remove(int)>(i25);

        r65 = (android.animation.AnimatorSet$AnimationEvent) $r36;

        $r37 = r0.<android.animation.AnimatorSet: java.util.ArrayList mEvents>;

        virtualinvoke $r37.<java.util.ArrayList: void add(int,java.lang.Object)>(i29, r65);

        i23 = i29 + 2;

        goto label17;

     label14:
        $r34 = new java.lang.UnsupportedOperationException;

        specialinvoke $r34.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Something went wrong, no startdelay end is found after stop for an animation");

        throw $r34;

     label15:
        i23 = i23 + 1;

        goto label03;

     label16:
        i23 = i23 + 1;

     label17:
        goto label03;

     label18:
        $r6 = r0.<android.animation.AnimatorSet: java.util.ArrayList mEvents>;

        $z0 = virtualinvoke $r6.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 != 0 goto label20;

        $r21 = r0.<android.animation.AnimatorSet: java.util.ArrayList mEvents>;

        $r22 = virtualinvoke $r21.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r23 = (android.animation.AnimatorSet$AnimationEvent) $r22;

        $i8 = $r23.<android.animation.AnimatorSet$AnimationEvent: int mEvent>;

        if $i8 != 0 goto label19;

        goto label20;

     label19:
        $r24 = new java.lang.UnsupportedOperationException;

        specialinvoke $r24.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Sorting went bad, the start event should always be at index 0");

        throw $r24;

     label20:
        $r9 = r0.<android.animation.AnimatorSet: java.util.ArrayList mEvents>;

        $r7 = new android.animation.AnimatorSet$AnimationEvent;

        $r8 = r0.<android.animation.AnimatorSet: android.animation.AnimatorSet$Node mRootNode>;

        specialinvoke $r7.<android.animation.AnimatorSet$AnimationEvent: void <init>(android.animation.AnimatorSet$Node,int)>($r8, 0);

        virtualinvoke $r9.<java.util.ArrayList: void add(int,java.lang.Object)>(0, $r7);

        $r12 = r0.<android.animation.AnimatorSet: java.util.ArrayList mEvents>;

        $r10 = new android.animation.AnimatorSet$AnimationEvent;

        $r11 = r0.<android.animation.AnimatorSet: android.animation.AnimatorSet$Node mRootNode>;

        specialinvoke $r10.<android.animation.AnimatorSet$AnimationEvent: void <init>(android.animation.AnimatorSet$Node,int)>($r11, 1);

        virtualinvoke $r12.<java.util.ArrayList: void add(int,java.lang.Object)>(1, $r10);

        $r15 = r0.<android.animation.AnimatorSet: java.util.ArrayList mEvents>;

        $r13 = new android.animation.AnimatorSet$AnimationEvent;

        $r14 = r0.<android.animation.AnimatorSet: android.animation.AnimatorSet$Node mRootNode>;

        specialinvoke $r13.<android.animation.AnimatorSet$AnimationEvent: void <init>(android.animation.AnimatorSet$Node,int)>($r14, 2);

        virtualinvoke $r15.<java.util.ArrayList: void add(int,java.lang.Object)>(2, $r13);

        r66 = r0.<android.animation.AnimatorSet: java.util.ArrayList mEvents>;

        $i2 = virtualinvoke r66.<java.util.ArrayList: int size()>();

        $i3 = $i2 - 1;

        $r16 = virtualinvoke r66.<java.util.ArrayList: java.lang.Object get(int)>($i3);

        $r17 = (android.animation.AnimatorSet$AnimationEvent) $r16;

        $i4 = $r17.<android.animation.AnimatorSet$AnimationEvent: int mEvent>;

        if $i4 == 0 goto label21;

        r67 = r0.<android.animation.AnimatorSet: java.util.ArrayList mEvents>;

        $i5 = virtualinvoke r67.<java.util.ArrayList: int size()>();

        $i6 = $i5 - 1;

        $r19 = virtualinvoke r67.<java.util.ArrayList: java.lang.Object get(int)>($i6);

        $r20 = (android.animation.AnimatorSet$AnimationEvent) $r19;

        $i7 = $r20.<android.animation.AnimatorSet$AnimationEvent: int mEvent>;

        if $i7 == 1 goto label21;

        return;

     label21:
        $r18 = new java.lang.UnsupportedOperationException;

        specialinvoke $r18.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Something went wrong, the last event is not an end event");

        throw $r18;
    }

    private void start(boolean, boolean)
    {
        android.animation.AnimatorSet r0;
        boolean z0, $z1, z2, z3;
        android.os.Looper $r1;
        android.util.AndroidRuntimeException $r2;
        java.util.ArrayList $r3, $r4, $r5, $r10, r14;
        java.lang.Object $r6, $r7, $r11;
        android.animation.Animator$AnimatorListener $r8;
        java.lang.UnsupportedOperationException $r9;
        android.animation.Animator $r12;
        int i0, i1, i2, i3;
        android.animation.AnimatorSet$Node r13;

        r0 := @this: android.animation.AnimatorSet;

        z0 := @parameter0: boolean;

        z2 := @parameter1: boolean;

        $r1 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        if $r1 == null goto label9;

        r0.<android.animation.AnimatorSet: boolean mStarted> = 1;

        r0.<android.animation.AnimatorSet: boolean mSelfPulse> = z2;

        r0.<android.animation.AnimatorSet: boolean mPaused> = 0;

        r0.<android.animation.AnimatorSet: long mPauseTime> = -1L;

        $r3 = r0.<android.animation.AnimatorSet: java.util.ArrayList mNodes>;

        i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r10 = r0.<android.animation.AnimatorSet: java.util.ArrayList mNodes>;

        $r11 = virtualinvoke $r10.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r13 = (android.animation.AnimatorSet$Node) $r11;

        r13.<android.animation.AnimatorSet$Node: boolean mEnded> = 0;

        $r12 = r13.<android.animation.AnimatorSet$Node: android.animation.Animator mAnimation>;

        virtualinvoke $r12.<android.animation.Animator: void setAllowRunningAsynchronously(boolean)>(0);

        i1 = i1 + 1;

        goto label1;

     label2:
        specialinvoke r0.<android.animation.AnimatorSet: void initAnimation()>();

        if z0 == 0 goto label4;

        $z1 = virtualinvoke r0.<android.animation.AnimatorSet: boolean canReverse()>();

        if $z1 == 0 goto label3;

        goto label4;

     label3:
        $r9 = new java.lang.UnsupportedOperationException;

        specialinvoke $r9.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Cannot reverse infinite AnimatorSet");

        throw $r9;

     label4:
        r0.<android.animation.AnimatorSet: boolean mReversing> = z0;

        z3 = staticinvoke <android.animation.AnimatorSet: boolean isEmptySet(android.animation.AnimatorSet)>(r0);

        if z3 != 0 goto label5;

        specialinvoke r0.<android.animation.AnimatorSet: void startAnimation()>();

     label5:
        $r4 = r0.<android.animation.AnimatorSet: java.util.ArrayList mListeners>;

        if $r4 == null goto label7;

        $r5 = r0.<android.animation.AnimatorSet: java.util.ArrayList mListeners>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object clone()>();

        r14 = (java.util.ArrayList) $r6;

        i2 = virtualinvoke r14.<java.util.ArrayList: int size()>();

        i3 = 0;

     label6:
        if i3 >= i2 goto label7;

        $r7 = virtualinvoke r14.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        $r8 = (android.animation.Animator$AnimatorListener) $r7;

        interfaceinvoke $r8.<android.animation.Animator$AnimatorListener: void onAnimationStart(android.animation.Animator,boolean)>(r0, z0);

        i3 = i3 + 1;

        goto label6;

     label7:
        if z3 == 0 goto label8;

        virtualinvoke r0.<android.animation.AnimatorSet: void end()>();

     label8:
        return;

     label9:
        $r2 = new android.util.AndroidRuntimeException;

        specialinvoke $r2.<android.util.AndroidRuntimeException: void <init>(java.lang.String)>("Animators may only be run on Looper threads");

        throw $r2;
    }

    private void startAnimation()
    {
        android.animation.AnimatorSet r0;
        android.animation.Animator r1;
        int i0, $i3, $i6, $i7, i8, i10;
        android.animation.AnimatorSet$SeekState $r2, $r9, $r10, $r11, $r20, $r21;
        long $l1, $l4, l9;
        byte $b2, $b5;
        java.util.ArrayList $r3, $r4, $r7, $r12, $r13, $r16;
        java.lang.Object $r5, $r14, $r17;
        android.animation.AnimatorSet$Node $r6, $r19;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13;
        android.animation.AnimatorSet$AnimationEvent $r15, $r18;

        r0 := @this: android.animation.AnimatorSet;

        specialinvoke r0.<android.animation.AnimatorSet: void addDummyListener()>();

        specialinvoke r0.<android.animation.AnimatorSet: void addAnimationCallback(long)>(0L);

        $r2 = r0.<android.animation.AnimatorSet: android.animation.AnimatorSet$SeekState mSeekState>;

        $l1 = virtualinvoke $r2.<android.animation.AnimatorSet$SeekState: long getPlayTimeNormalized()>();

        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label01;

        $z10 = r0.<android.animation.AnimatorSet: boolean mReversing>;

        if $z10 == 0 goto label01;

        $r20 = r0.<android.animation.AnimatorSet: android.animation.AnimatorSet$SeekState mSeekState>;

        virtualinvoke $r20.<android.animation.AnimatorSet$SeekState: void reset()>();

     label01:
        $z11 = r0.<android.animation.AnimatorSet: boolean mShouldResetValuesAtStart>;

        if $z11 == 0 goto label06;

        $z3 = virtualinvoke r0.<android.animation.AnimatorSet: boolean isInitialized()>();

        if $z3 == 0 goto label02;

        $z8 = r0.<android.animation.AnimatorSet: boolean mReversing>;

        $z9 = $z8 ^ 1;

        virtualinvoke r0.<android.animation.AnimatorSet: void skipToEndValue(boolean)>($z9);

        goto label06;

     label02:
        $z4 = r0.<android.animation.AnimatorSet: boolean mReversing>;

        if $z4 == 0 goto label03;

        specialinvoke r0.<android.animation.AnimatorSet: void initChildren()>();

        $z6 = r0.<android.animation.AnimatorSet: boolean mReversing>;

        $z7 = $z6 ^ 1;

        virtualinvoke r0.<android.animation.AnimatorSet: void skipToEndValue(boolean)>($z7);

        goto label06;

     label03:
        $r12 = r0.<android.animation.AnimatorSet: java.util.ArrayList mEvents>;

        $i6 = virtualinvoke $r12.<java.util.ArrayList: int size()>();

        i8 = $i6 - 1;

     label04:
        if i8 < 0 goto label06;

        $r13 = r0.<android.animation.AnimatorSet: java.util.ArrayList mEvents>;

        $r14 = virtualinvoke $r13.<java.util.ArrayList: java.lang.Object get(int)>(i8);

        $r15 = (android.animation.AnimatorSet$AnimationEvent) $r14;

        $i7 = $r15.<android.animation.AnimatorSet$AnimationEvent: int mEvent>;

        if $i7 != 1 goto label05;

        $r16 = r0.<android.animation.AnimatorSet: java.util.ArrayList mEvents>;

        $r17 = virtualinvoke $r16.<java.util.ArrayList: java.lang.Object get(int)>(i8);

        $r18 = (android.animation.AnimatorSet$AnimationEvent) $r17;

        $r19 = $r18.<android.animation.AnimatorSet$AnimationEvent: android.animation.AnimatorSet$Node mNode>;

        r1 = $r19.<android.animation.AnimatorSet$Node: android.animation.Animator mAnimation>;

        $z5 = virtualinvoke r1.<android.animation.Animator: boolean isInitialized()>();

        if $z5 == 0 goto label05;

        virtualinvoke r1.<android.animation.Animator: void skipToEndValue(boolean)>(1);

     label05:
        i8 = i8 + -1;

        goto label04;

     label06:
        $z12 = r0.<android.animation.AnimatorSet: boolean mReversing>;

        if $z12 != 0 goto label07;

        $l4 = r0.<android.animation.AnimatorSet: long mStartDelay>;

        $b5 = $l4 cmp 0L;

        if $b5 == 0 goto label07;

        $r11 = r0.<android.animation.AnimatorSet: android.animation.AnimatorSet$SeekState mSeekState>;

        $z2 = virtualinvoke $r11.<android.animation.AnimatorSet$SeekState: boolean isActive()>();

        if $z2 == 0 goto label13;

     label07:
        $r21 = r0.<android.animation.AnimatorSet: android.animation.AnimatorSet$SeekState mSeekState>;

        $z13 = virtualinvoke $r21.<android.animation.AnimatorSet$SeekState: boolean isActive()>();

        if $z13 == 0 goto label08;

        $r9 = r0.<android.animation.AnimatorSet: android.animation.AnimatorSet$SeekState mSeekState>;

        $z1 = r0.<android.animation.AnimatorSet: boolean mReversing>;

        virtualinvoke $r9.<android.animation.AnimatorSet$SeekState: void updateSeekDirection(boolean)>($z1);

        $r10 = r0.<android.animation.AnimatorSet: android.animation.AnimatorSet$SeekState mSeekState>;

        l9 = virtualinvoke $r10.<android.animation.AnimatorSet$SeekState: long getPlayTime()>();

        goto label09;

     label08:
        l9 = 0L;

     label09:
        i0 = specialinvoke r0.<android.animation.AnimatorSet: int findLatestEventIdForTime(long)>(l9);

        specialinvoke r0.<android.animation.AnimatorSet: void handleAnimationEvents(int,int,long)>(-1, i0, l9);

        $r3 = r0.<android.animation.AnimatorSet: java.util.ArrayList mPlayingSet>;

        $i3 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i10 = $i3 - 1;

     label10:
        if i10 < 0 goto label12;

        $r4 = r0.<android.animation.AnimatorSet: java.util.ArrayList mPlayingSet>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i10);

        $r6 = (android.animation.AnimatorSet$Node) $r5;

        $z0 = $r6.<android.animation.AnimatorSet$Node: boolean mEnded>;

        if $z0 == 0 goto label11;

        $r7 = r0.<android.animation.AnimatorSet: java.util.ArrayList mPlayingSet>;

        virtualinvoke $r7.<java.util.ArrayList: java.lang.Object remove(int)>(i10);

     label11:
        i10 = i10 + -1;

        goto label10;

     label12:
        r0.<android.animation.AnimatorSet: int mLastEventId> = i0;

     label13:
        return;
    }

    private void updateAnimatorsDuration()
    {
        android.animation.AnimatorSet r0;
        int i0, i5;
        long $l1, $l3, $l4;
        byte $b2;
        android.animation.ValueAnimator $r1;
        java.util.ArrayList $r3, $r4;
        java.lang.Object $r5;
        android.animation.AnimatorSet$Node $r6;
        android.animation.Animator $r7;

        r0 := @this: android.animation.AnimatorSet;

        $l1 = r0.<android.animation.AnimatorSet: long mDuration>;

        $b2 = $l1 cmp 0L;

        if $b2 < 0 goto label2;

        $r3 = r0.<android.animation.AnimatorSet: java.util.ArrayList mNodes>;

        i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i5 = 0;

     label1:
        if i5 >= i0 goto label2;

        $r4 = r0.<android.animation.AnimatorSet: java.util.ArrayList mNodes>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        $r6 = (android.animation.AnimatorSet$Node) $r5;

        $r7 = $r6.<android.animation.AnimatorSet$Node: android.animation.Animator mAnimation>;

        $l4 = r0.<android.animation.AnimatorSet: long mDuration>;

        virtualinvoke $r7.<android.animation.Animator: android.animation.Animator setDuration(long)>($l4);

        i5 = i5 + 1;

        goto label1;

     label2:
        $r1 = r0.<android.animation.AnimatorSet: android.animation.ValueAnimator mDelayAnim>;

        $l3 = r0.<android.animation.AnimatorSet: long mStartDelay>;

        virtualinvoke $r1.<android.animation.ValueAnimator: android.animation.ValueAnimator setDuration(long)>($l3);

        return;
    }

    private void updatePlayTime(android.animation.AnimatorSet$Node, java.util.ArrayList)
    {
        android.animation.AnimatorSet r0;
        java.util.ArrayList r1, $r2, $r3, $r4, $r18, $r19;
        int i0, $i14, $i16, i17, i18, i19;
        java.lang.Object $r5, $r11, $r13, $r15, $r20;
        android.animation.Animator $r6;
        long $l1, $l2, $l4, $l6, $l7, $l9, $l11, $l12, $l13, l20;
        byte $b3, $b5, $b8, $b10;
        java.lang.StringBuilder $r7;
        java.lang.String $r10;
        android.animation.AnimatorSet$Node $r12, $r14, $r16, $r17, $r21, r22, r23, r24;

        r0 := @this: android.animation.AnimatorSet;

        r22 := @parameter0: android.animation.AnimatorSet$Node;

        r1 := @parameter1: java.util.ArrayList;

        $r2 = r22.<android.animation.AnimatorSet$Node: java.util.ArrayList mChildNodes>;

        if $r2 != null goto label04;

        $r17 = r0.<android.animation.AnimatorSet: android.animation.AnimatorSet$Node mRootNode>;

        if r22 != $r17 goto label03;

        i17 = 0;

     label01:
        $r18 = r0.<android.animation.AnimatorSet: java.util.ArrayList mNodes>;

        $i16 = virtualinvoke $r18.<java.util.ArrayList: int size()>();

        if i17 >= $i16 goto label03;

        $r19 = r0.<android.animation.AnimatorSet: java.util.ArrayList mNodes>;

        $r20 = virtualinvoke $r19.<java.util.ArrayList: java.lang.Object get(int)>(i17);

        r23 = (android.animation.AnimatorSet$Node) $r20;

        $r21 = r0.<android.animation.AnimatorSet: android.animation.AnimatorSet$Node mRootNode>;

        if r23 == $r21 goto label02;

        r23.<android.animation.AnimatorSet$Node: long mStartTime> = -1L;

        r23.<android.animation.AnimatorSet$Node: long mEndTime> = -1L;

     label02:
        i17 = i17 + 1;

        goto label01;

     label03:
        return;

     label04:
        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r22);

        $r3 = r22.<android.animation.AnimatorSet$Node: java.util.ArrayList mChildNodes>;

        i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i18 = 0;

     label05:
        if i18 >= i0 goto label15;

        $r4 = r22.<android.animation.AnimatorSet$Node: java.util.ArrayList mChildNodes>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i18);

        r24 = (android.animation.AnimatorSet$Node) $r5;

        $r6 = r24.<android.animation.AnimatorSet$Node: android.animation.Animator mAnimation>;

        $l1 = virtualinvoke $r6.<android.animation.Animator: long getTotalDuration()>();

        r24.<android.animation.AnimatorSet$Node: long mTotalDuration> = $l1;

        i19 = virtualinvoke r1.<java.util.ArrayList: int indexOf(java.lang.Object)>(r24);

        if i19 < 0 goto label08;

     label06:
        $i14 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if i19 >= $i14 goto label07;

        $r11 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i19);

        $r12 = (android.animation.AnimatorSet$Node) $r11;

        $r12.<android.animation.AnimatorSet$Node: android.animation.AnimatorSet$Node mLatestParent> = null;

        $r13 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i19);

        $r14 = (android.animation.AnimatorSet$Node) $r13;

        $r14.<android.animation.AnimatorSet$Node: long mStartTime> = -1L;

        $r15 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i19);

        $r16 = (android.animation.AnimatorSet$Node) $r15;

        $r16.<android.animation.AnimatorSet$Node: long mEndTime> = -1L;

        i19 = i19 + 1;

        goto label06;

     label07:
        r24.<android.animation.AnimatorSet$Node: long mStartTime> = -1L;

        r24.<android.animation.AnimatorSet$Node: long mEndTime> = -1L;

        r24.<android.animation.AnimatorSet$Node: android.animation.AnimatorSet$Node mLatestParent> = null;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cycle found in AnimatorSet: ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("AnimatorSet", $r10);

        goto label14;

     label08:
        $l2 = r24.<android.animation.AnimatorSet$Node: long mStartTime>;

        $b3 = $l2 cmp -1L;

        if $b3 == 0 goto label13;

        $l4 = r22.<android.animation.AnimatorSet$Node: long mEndTime>;

        $b5 = $l4 cmp -1L;

        if $b5 != 0 goto label09;

        r24.<android.animation.AnimatorSet$Node: android.animation.AnimatorSet$Node mLatestParent> = r22;

        r24.<android.animation.AnimatorSet$Node: long mStartTime> = -1L;

        r24.<android.animation.AnimatorSet$Node: long mEndTime> = -1L;

        goto label13;

     label09:
        $l7 = r22.<android.animation.AnimatorSet$Node: long mEndTime>;

        $l6 = r24.<android.animation.AnimatorSet$Node: long mStartTime>;

        $b8 = $l7 cmp $l6;

        if $b8 < 0 goto label10;

        r24.<android.animation.AnimatorSet$Node: android.animation.AnimatorSet$Node mLatestParent> = r22;

        $l13 = r22.<android.animation.AnimatorSet$Node: long mEndTime>;

        r24.<android.animation.AnimatorSet$Node: long mStartTime> = $l13;

     label10:
        $l9 = r24.<android.animation.AnimatorSet$Node: long mTotalDuration>;

        $b10 = $l9 cmp -1L;

        if $b10 != 0 goto label11;

        l20 = -1L;

        goto label12;

     label11:
        $l12 = r24.<android.animation.AnimatorSet$Node: long mStartTime>;

        $l11 = r24.<android.animation.AnimatorSet$Node: long mTotalDuration>;

        l20 = $l12 + $l11;

     label12:
        r24.<android.animation.AnimatorSet$Node: long mEndTime> = l20;

     label13:
        specialinvoke r0.<android.animation.AnimatorSet: void updatePlayTime(android.animation.AnimatorSet$Node,java.util.ArrayList)>(r24, r1);

     label14:
        i18 = i18 + 1;

        goto label05;

     label15:
        virtualinvoke r1.<java.util.ArrayList: boolean remove(java.lang.Object)>(r22);

        return;
    }

    void animateBasedOnPlayTime(long, long, boolean)
    {
        android.animation.AnimatorSet r0;
        byte $b0, $b1, $b4, $b8, $b10, $b13, $b15, $b17;
        java.lang.UnsupportedOperationException $r1, $r18;
        java.util.ArrayList $r2, $r3, $r4, $r11, $r20;
        int $i2, $i5, $i11, i24, $i25, $i26, i27, $i28, i30;
        java.lang.Object $r5, $r8, $r12;
        long $l3, $l6, $l7, $l9, $l12, $l14, $l16, $l18, $l19, $l20, l21, l22, l23, l29;
        android.animation.AnimatorSet$Node $r6, $r13, $r15, $r16, $r17, r22;
        android.animation.Animator $r7, $r9, $r10, $r14;
        boolean z1;
        android.animation.AnimatorSet$AnimationEvent r21, r23;

        r0 := @this: android.animation.AnimatorSet;

        l21 := @parameter0: long;

        l22 := @parameter1: long;

        z1 := @parameter2: boolean;

        $b0 = l21 cmp 0L;

        if $b0 < 0 goto label15;

        $b1 = l22 cmp 0L;

        if $b1 < 0 goto label15;

        if z1 == 0 goto label02;

        $l16 = virtualinvoke r0.<android.animation.AnimatorSet: long getTotalDuration()>();

        $b17 = $l16 cmp -1L;

        if $b17 == 0 goto label01;

        $l18 = virtualinvoke r0.<android.animation.AnimatorSet: long getTotalDuration()>();

        $l19 = r0.<android.animation.AnimatorSet: long mStartDelay>;

        l23 = $l18 - $l19;

        $l20 = staticinvoke <java.lang.Math: long min(long,long)>(l21, l23);

        l21 = l23 - $l20;

        l22 = l23 - l22;

        z1 = 0;

        goto label02;

     label01:
        $r18 = new java.lang.UnsupportedOperationException;

        specialinvoke $r18.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Cannot reverse AnimatorSet with infinite duration");

        throw $r18;

     label02:
        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        i24 = 0;

     label03:
        $r20 = r0.<android.animation.AnimatorSet: java.util.ArrayList mEvents>;

        $i25 = virtualinvoke $r20.<java.util.ArrayList: int size()>();

        if i24 >= $i25 goto label08;

        $r11 = r0.<android.animation.AnimatorSet: java.util.ArrayList mEvents>;

        $r12 = virtualinvoke $r11.<java.util.ArrayList: java.lang.Object get(int)>(i24);

        r21 = (android.animation.AnimatorSet$AnimationEvent) $r12;

        $l7 = virtualinvoke r21.<android.animation.AnimatorSet$AnimationEvent: long getTime()>();

        $b8 = $l7 cmp l21;

        if $b8 > 0 goto label08;

        $l9 = virtualinvoke r21.<android.animation.AnimatorSet$AnimationEvent: long getTime()>();

        $b10 = $l9 cmp -1L;

        if $b10 != 0 goto label04;

        goto label08;

     label04:
        $i11 = r21.<android.animation.AnimatorSet$AnimationEvent: int mEvent>;

        if $i11 != 1 goto label06;

        $r15 = r21.<android.animation.AnimatorSet$AnimationEvent: android.animation.AnimatorSet$Node mNode>;

        $l12 = $r15.<android.animation.AnimatorSet$Node: long mEndTime>;

        $b13 = $l12 cmp -1L;

        if $b13 == 0 goto label05;

        $r17 = r21.<android.animation.AnimatorSet$AnimationEvent: android.animation.AnimatorSet$Node mNode>;

        $l14 = $r17.<android.animation.AnimatorSet$Node: long mEndTime>;

        $b15 = $l14 cmp l21;

        if $b15 <= 0 goto label06;

     label05:
        $r16 = r21.<android.animation.AnimatorSet$AnimationEvent: android.animation.AnimatorSet$Node mNode>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r16);

     label06:
        $i26 = r21.<android.animation.AnimatorSet$AnimationEvent: int mEvent>;

        if $i26 != 2 goto label07;

        $r13 = r21.<android.animation.AnimatorSet$AnimationEvent: android.animation.AnimatorSet$Node mNode>;

        $r14 = $r13.<android.animation.AnimatorSet$Node: android.animation.Animator mAnimation>;

        virtualinvoke $r14.<android.animation.Animator: void skipToEndValue(boolean)>(0);

     label07:
        i24 = i24 + 1;

        goto label03;

     label08:
        i27 = 0;

     label09:
        $i28 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if i27 >= $i28 goto label11;

        $r8 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i27);

        r22 = (android.animation.AnimatorSet$Node) $r8;

        l29 = specialinvoke r0.<android.animation.AnimatorSet: long getPlayTimeForNode(long,android.animation.AnimatorSet$Node,boolean)>(l21, r22, z1);

        if z1 != 0 goto label10;

        $r10 = r22.<android.animation.AnimatorSet$Node: android.animation.Animator mAnimation>;

        $l6 = virtualinvoke $r10.<android.animation.Animator: long getStartDelay()>();

        l29 = l29 - $l6;

        goto label10;

     label10:
        $r9 = r22.<android.animation.AnimatorSet$Node: android.animation.Animator mAnimation>;

        virtualinvoke $r9.<android.animation.Animator: void animateBasedOnPlayTime(long,long,boolean)>(l29, l22, z1);

        i27 = i27 + 1;

        goto label09;

     label11:
        i30 = 0;

     label12:
        $r3 = r0.<android.animation.AnimatorSet: java.util.ArrayList mEvents>;

        $i2 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if i30 >= $i2 goto label14;

        $r4 = r0.<android.animation.AnimatorSet: java.util.ArrayList mEvents>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i30);

        r23 = (android.animation.AnimatorSet$AnimationEvent) $r5;

        $l3 = virtualinvoke r23.<android.animation.AnimatorSet$AnimationEvent: long getTime()>();

        $b4 = $l3 cmp l21;

        if $b4 <= 0 goto label13;

        $i5 = r23.<android.animation.AnimatorSet$AnimationEvent: int mEvent>;

        if $i5 != 1 goto label13;

        $r6 = r23.<android.animation.AnimatorSet$AnimationEvent: android.animation.AnimatorSet$Node mNode>;

        $r7 = $r6.<android.animation.AnimatorSet$Node: android.animation.Animator mAnimation>;

        virtualinvoke $r7.<android.animation.Animator: void skipToEndValue(boolean)>(1);

     label13:
        i30 = i30 + 1;

        goto label12;

     label14:
        return;

     label15:
        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Error: Play time should never be negative.");

        throw $r1;
    }

    public boolean canReverse()
    {
        android.animation.AnimatorSet r0;
        long $l0;
        byte $b1;
        boolean z0;

        r0 := @this: android.animation.AnimatorSet;

        $l0 = virtualinvoke r0.<android.animation.AnimatorSet: long getTotalDuration()>();

        $b1 = $l0 cmp -1L;

        if $b1 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public void cancel()
    {
        android.animation.AnimatorSet r0;
        android.os.Looper $r1;
        android.util.AndroidRuntimeException $r2;
        boolean $z0;
        java.util.ArrayList $r3, $r4, $r5, $r6, $r10, r14;
        java.lang.Object $r7, $r11, $r12;
        android.animation.AnimatorSet$Node $r8;
        android.animation.Animator $r9;
        android.animation.Animator$AnimatorListener $r13;
        int i0, i1, i2, i3;

        r0 := @this: android.animation.AnimatorSet;

        $r1 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        if $r1 == null goto label6;

        $z0 = virtualinvoke r0.<android.animation.AnimatorSet: boolean isStarted()>();

        if $z0 == 0 goto label5;

        $r3 = r0.<android.animation.AnimatorSet: java.util.ArrayList mListeners>;

        if $r3 == null goto label2;

        $r10 = r0.<android.animation.AnimatorSet: java.util.ArrayList mListeners>;

        $r11 = virtualinvoke $r10.<java.util.ArrayList: java.lang.Object clone()>();

        r14 = (java.util.ArrayList) $r11;

        i0 = virtualinvoke r14.<java.util.ArrayList: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r12 = virtualinvoke r14.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r13 = (android.animation.Animator$AnimatorListener) $r12;

        interfaceinvoke $r13.<android.animation.Animator$AnimatorListener: void onAnimationCancel(android.animation.Animator)>(r0);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r4 = new java.util.ArrayList;

        $r5 = r0.<android.animation.AnimatorSet: java.util.ArrayList mPlayingSet>;

        specialinvoke $r4.<java.util.ArrayList: void <init>(java.util.Collection)>($r5);

        i2 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        i3 = 0;

     label3:
        if i3 >= i2 goto label4;

        $r7 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        $r8 = (android.animation.AnimatorSet$Node) $r7;

        $r9 = $r8.<android.animation.AnimatorSet$Node: android.animation.Animator mAnimation>;

        virtualinvoke $r9.<android.animation.Animator: void cancel()>();

        i3 = i3 + 1;

        goto label3;

     label4:
        $r6 = r0.<android.animation.AnimatorSet: java.util.ArrayList mPlayingSet>;

        virtualinvoke $r6.<java.util.ArrayList: void clear()>();

        specialinvoke r0.<android.animation.AnimatorSet: void endAnimation()>();

     label5:
        return;

     label6:
        $r2 = new android.util.AndroidRuntimeException;

        specialinvoke $r2.<android.util.AndroidRuntimeException: void <init>(java.lang.String)>("Animators may only be run on Looper threads");

        throw $r2;
    }

    public volatile android.animation.Animator clone()
    {
        android.animation.AnimatorSet r0, $r1;

        r0 := @this: android.animation.AnimatorSet;

        $r1 = virtualinvoke r0.<android.animation.AnimatorSet: android.animation.AnimatorSet clone()>();

        return $r1;
    }

    public android.animation.AnimatorSet clone()
    {
        android.animation.AnimatorSet r0, r1;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8;
        android.animation.AnimatorSet$Node r3, $r13, $r20, $r21, $r33, $r39, $r45, r56, r57, r58, r59, r60;
        android.animation.Animator $r4, $r15, $r50, $r53;
        java.util.ArrayList $r5, $r7, $r9, $r10, $r17, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r35, $r36, $r41, $r42, $r47, $r52;
        android.animation.AnimatorSet$SeekState $r6;
        android.util.ArrayMap $r8, $r54;
        android.animation.AnimatorSet$2 $r11;
        java.util.HashMap $r12;
        java.lang.Object $r14, $r18, $r19, $r22, $r31, $r32, $r37, $r38, $r43, $r44, $r48;
        android.animation.ValueAnimator $r16;
        android.animation.AnimatorListenerAdapter $r49;

        r0 := @this: android.animation.AnimatorSet;

        $r4 = specialinvoke r0.<android.animation.Animator: android.animation.Animator clone()>();

        r1 = (android.animation.AnimatorSet) $r4;

        $r5 = r0.<android.animation.AnimatorSet: java.util.ArrayList mNodes>;

        i0 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        r1.<android.animation.AnimatorSet: boolean mStarted> = 0;

        r1.<android.animation.AnimatorSet: long mLastFrameTime> = -1L;

        r1.<android.animation.AnimatorSet: long mFirstFrame> = -1L;

        r1.<android.animation.AnimatorSet: int mLastEventId> = -1;

        r1.<android.animation.AnimatorSet: boolean mPaused> = 0;

        r1.<android.animation.AnimatorSet: long mPauseTime> = -1L;

        $r6 = new android.animation.AnimatorSet$SeekState;

        specialinvoke $r6.<android.animation.AnimatorSet$SeekState: void <init>(android.animation.AnimatorSet,android.animation.AnimatorSet$1)>(r0, null);

        r1.<android.animation.AnimatorSet: android.animation.AnimatorSet$SeekState mSeekState> = $r6;

        r1.<android.animation.AnimatorSet: boolean mSelfPulse> = 1;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r1.<android.animation.AnimatorSet: java.util.ArrayList mPlayingSet> = $r7;

        $r8 = new android.util.ArrayMap;

        specialinvoke $r8.<android.util.ArrayMap: void <init>()>();

        r1.<android.animation.AnimatorSet: android.util.ArrayMap mNodeMap> = $r8;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>(int)>(i0);

        r1.<android.animation.AnimatorSet: java.util.ArrayList mNodes> = $r9;

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        r1.<android.animation.AnimatorSet: java.util.ArrayList mEvents> = $r10;

        $r11 = new android.animation.AnimatorSet$2;

        specialinvoke $r11.<android.animation.AnimatorSet$2: void <init>(android.animation.AnimatorSet,android.animation.AnimatorSet)>(r0, r1);

        r1.<android.animation.AnimatorSet: android.animation.AnimatorListenerAdapter mDummyListener> = $r11;

        r1.<android.animation.AnimatorSet: boolean mReversing> = 0;

        r1.<android.animation.AnimatorSet: boolean mDependencyDirty> = 1;

        $r12 = new java.util.HashMap;

        specialinvoke $r12.<java.util.HashMap: void <init>(int)>(i0);

        i1 = 0;

     label01:
        if i1 >= i0 goto label02;

        $r47 = r0.<android.animation.AnimatorSet: java.util.ArrayList mNodes>;

        $r48 = virtualinvoke $r47.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r56 = (android.animation.AnimatorSet$Node) $r48;

        r57 = virtualinvoke r56.<android.animation.AnimatorSet$Node: android.animation.AnimatorSet$Node clone()>();

        $r50 = r57.<android.animation.AnimatorSet$Node: android.animation.Animator mAnimation>;

        $r49 = r0.<android.animation.AnimatorSet: android.animation.AnimatorListenerAdapter mDummyListener>;

        virtualinvoke $r50.<android.animation.Animator: void removeListener(android.animation.Animator$AnimatorListener)>($r49);

        virtualinvoke $r12.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r56, r57);

        $r52 = r1.<android.animation.AnimatorSet: java.util.ArrayList mNodes>;

        virtualinvoke $r52.<java.util.ArrayList: boolean add(java.lang.Object)>(r57);

        $r54 = r1.<android.animation.AnimatorSet: android.util.ArrayMap mNodeMap>;

        $r53 = r57.<android.animation.AnimatorSet$Node: android.animation.Animator mAnimation>;

        virtualinvoke $r54.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r53, r57);

        i1 = i1 + 1;

        goto label01;

     label02:
        $r13 = r0.<android.animation.AnimatorSet: android.animation.AnimatorSet$Node mRootNode>;

        $r14 = virtualinvoke $r12.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r13);

        r58 = (android.animation.AnimatorSet$Node) $r14;

        r1.<android.animation.AnimatorSet: android.animation.AnimatorSet$Node mRootNode> = r58;

        $r15 = r58.<android.animation.AnimatorSet$Node: android.animation.Animator mAnimation>;

        $r16 = (android.animation.ValueAnimator) $r15;

        r1.<android.animation.AnimatorSet: android.animation.ValueAnimator mDelayAnim> = $r16;

        i2 = 0;

     label03:
        if i2 >= i0 goto label18;

        $r17 = r0.<android.animation.AnimatorSet: java.util.ArrayList mNodes>;

        $r18 = virtualinvoke $r17.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r3 = (android.animation.AnimatorSet$Node) $r18;

        $r19 = virtualinvoke $r12.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r3);

        r59 = (android.animation.AnimatorSet$Node) $r19;

        $r20 = r3.<android.animation.AnimatorSet$Node: android.animation.AnimatorSet$Node mLatestParent>;

        if $r20 != null goto label04;

        r60 = null;

        goto label05;

     label04:
        $r21 = r3.<android.animation.AnimatorSet$Node: android.animation.AnimatorSet$Node mLatestParent>;

        $r22 = virtualinvoke $r12.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r21);

        r60 = (android.animation.AnimatorSet$Node) $r22;

     label05:
        r59.<android.animation.AnimatorSet$Node: android.animation.AnimatorSet$Node mLatestParent> = r60;

        $r23 = r3.<android.animation.AnimatorSet$Node: java.util.ArrayList mChildNodes>;

        if $r23 != null goto label06;

        i3 = 0;

        goto label07;

     label06:
        $r24 = r3.<android.animation.AnimatorSet$Node: java.util.ArrayList mChildNodes>;

        i3 = virtualinvoke $r24.<java.util.ArrayList: int size()>();

     label07:
        i4 = 0;

     label08:
        if i4 >= i3 goto label09;

        $r42 = r59.<android.animation.AnimatorSet$Node: java.util.ArrayList mChildNodes>;

        $r41 = r3.<android.animation.AnimatorSet$Node: java.util.ArrayList mChildNodes>;

        $r43 = virtualinvoke $r41.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        $r44 = virtualinvoke $r12.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r43);

        $r45 = (android.animation.AnimatorSet$Node) $r44;

        virtualinvoke $r42.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>(i4, $r45);

        i4 = i4 + 1;

        goto label08;

     label09:
        $r25 = r3.<android.animation.AnimatorSet$Node: java.util.ArrayList mSiblings>;

        if $r25 != null goto label10;

        i5 = 0;

        goto label11;

     label10:
        $r26 = r3.<android.animation.AnimatorSet$Node: java.util.ArrayList mSiblings>;

        i5 = virtualinvoke $r26.<java.util.ArrayList: int size()>();

     label11:
        i6 = 0;

     label12:
        if i6 >= i5 goto label13;

        $r36 = r59.<android.animation.AnimatorSet$Node: java.util.ArrayList mSiblings>;

        $r35 = r3.<android.animation.AnimatorSet$Node: java.util.ArrayList mSiblings>;

        $r37 = virtualinvoke $r35.<java.util.ArrayList: java.lang.Object get(int)>(i6);

        $r38 = virtualinvoke $r12.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r37);

        $r39 = (android.animation.AnimatorSet$Node) $r38;

        virtualinvoke $r36.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>(i6, $r39);

        i6 = i6 + 1;

        goto label12;

     label13:
        $r27 = r3.<android.animation.AnimatorSet$Node: java.util.ArrayList mParents>;

        if $r27 != null goto label14;

        i7 = 0;

        goto label15;

     label14:
        $r28 = r3.<android.animation.AnimatorSet$Node: java.util.ArrayList mParents>;

        i7 = virtualinvoke $r28.<java.util.ArrayList: int size()>();

     label15:
        i8 = 0;

     label16:
        if i8 >= i7 goto label17;

        $r30 = r59.<android.animation.AnimatorSet$Node: java.util.ArrayList mParents>;

        $r29 = r3.<android.animation.AnimatorSet$Node: java.util.ArrayList mParents>;

        $r31 = virtualinvoke $r29.<java.util.ArrayList: java.lang.Object get(int)>(i8);

        $r32 = virtualinvoke $r12.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r31);

        $r33 = (android.animation.AnimatorSet$Node) $r32;

        virtualinvoke $r30.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>(i8, $r33);

        i8 = i8 + 1;

        goto label16;

     label17:
        i2 = i2 + 1;

        goto label03;

     label18:
        return r1;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        android.animation.AnimatorSet r0, $r1;

        r0 := @this: android.animation.AnimatorSet;

        $r1 = virtualinvoke r0.<android.animation.AnimatorSet: android.animation.AnimatorSet clone()>();

        return $r1;
    }

    public void commitAnimationFrame(long)
    {
        android.animation.AnimatorSet r0;
        long l0;

        r0 := @this: android.animation.AnimatorSet;

        l0 := @parameter0: long;

        return;
    }

    public boolean doAnimationFrame(long)
    {
        android.animation.AnimatorSet r0;
        long l0, $l2, $l5, $l6, $l14, $l15, $l16, $l18, $l19, $l20, $l21, $l22, $l23, $l24, $l25, $l26, l27, l28;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15;
        android.animation.AnimatorSet$Node r1, $r10, $r13;
        byte $b1, $b3, $b4, $b17;
        boolean $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, z11;
        android.animation.AnimatorSet$SeekState $r2, $r18, $r19, $r20, $r21;
        int $i7, $i8, $i9, $i10, $i11, $i12, $i13, i29, i30, $i31, i32;
        java.util.ArrayList $r3, $r4, $r5, $r6, $r7, $r8, $r11, $r14, $r16, $r22;
        java.lang.Object $r9, $r12, $r17;

        r0 := @this: android.animation.AnimatorSet;

        l0 := @parameter0: long;

        f0 = staticinvoke <android.animation.ValueAnimator: float getDurationScale()>();

        $b1 = f0 cmpl 0.0F;

        if $b1 != 0 goto label01;

        specialinvoke r0.<android.animation.AnimatorSet: void forceToEnd()>();

        return 1;

     label01:
        $l2 = r0.<android.animation.AnimatorSet: long mFirstFrame>;

        $b3 = $l2 cmp 0L;

        if $b3 >= 0 goto label02;

        r0.<android.animation.AnimatorSet: long mFirstFrame> = l0;

     label02:
        $z1 = r0.<android.animation.AnimatorSet: boolean mPaused>;

        if $z1 == 0 goto label03;

        r0.<android.animation.AnimatorSet: long mPauseTime> = l0;

        specialinvoke r0.<android.animation.AnimatorSet: void removeAnimationCallback()>();

        return 0;

     label03:
        l27 = r0.<android.animation.AnimatorSet: long mPauseTime>;

        $b4 = l27 cmp 0L;

        if $b4 <= 0 goto label04;

        $l25 = r0.<android.animation.AnimatorSet: long mFirstFrame>;

        $l24 = l0 - l27;

        $l26 = $l25 + $l24;

        r0.<android.animation.AnimatorSet: long mFirstFrame> = $l26;

        r0.<android.animation.AnimatorSet: long mPauseTime> = -1L;

     label04:
        $r2 = r0.<android.animation.AnimatorSet: android.animation.AnimatorSet$SeekState mSeekState>;

        $z2 = virtualinvoke $r2.<android.animation.AnimatorSet$SeekState: boolean isActive()>();

        if $z2 == 0 goto label07;

        $r18 = r0.<android.animation.AnimatorSet: android.animation.AnimatorSet$SeekState mSeekState>;

        $z8 = r0.<android.animation.AnimatorSet: boolean mReversing>;

        virtualinvoke $r18.<android.animation.AnimatorSet$SeekState: void updateSeekDirection(boolean)>($z8);

        $z9 = r0.<android.animation.AnimatorSet: boolean mReversing>;

        if $z9 == 0 goto label05;

        $f12 = (float) l0;

        $r21 = r0.<android.animation.AnimatorSet: android.animation.AnimatorSet$SeekState mSeekState>;

        $l22 = virtualinvoke $r21.<android.animation.AnimatorSet$SeekState: long getPlayTime()>();

        $f13 = (float) $l22;

        $f14 = $f13 * f0;

        $f15 = $f12 - $f14;

        $l23 = (long) $f15;

        r0.<android.animation.AnimatorSet: long mFirstFrame> = $l23;

        goto label06;

     label05:
        $f8 = (float) l0;

        $r19 = r0.<android.animation.AnimatorSet: android.animation.AnimatorSet$SeekState mSeekState>;

        $l18 = virtualinvoke $r19.<android.animation.AnimatorSet$SeekState: long getPlayTime()>();

        $l19 = r0.<android.animation.AnimatorSet: long mStartDelay>;

        $l20 = $l18 + $l19;

        $f9 = (float) $l20;

        $f10 = $f9 * f0;

        $f11 = $f8 - $f10;

        $l21 = (long) $f11;

        r0.<android.animation.AnimatorSet: long mFirstFrame> = $l21;

     label06:
        $r20 = r0.<android.animation.AnimatorSet: android.animation.AnimatorSet$SeekState mSeekState>;

        virtualinvoke $r20.<android.animation.AnimatorSet$SeekState: void reset()>();

     label07:
        $z10 = r0.<android.animation.AnimatorSet: boolean mReversing>;

        if $z10 != 0 goto label08;

        $f7 = (float) l0;

        $l15 = r0.<android.animation.AnimatorSet: long mFirstFrame>;

        $f5 = (float) $l15;

        $l16 = r0.<android.animation.AnimatorSet: long mStartDelay>;

        $f3 = (float) $l16;

        $f4 = $f3 * f0;

        $f6 = $f5 + $f4;

        $b17 = $f7 cmpg $f6;

        if $b17 >= 0 goto label08;

        return 0;

     label08:
        $l5 = r0.<android.animation.AnimatorSet: long mFirstFrame>;

        $l6 = l0 - $l5;

        $f1 = (float) $l6;

        $f2 = $f1 / f0;

        l28 = (long) $f2;

        r0.<android.animation.AnimatorSet: long mLastFrameTime> = l0;

        i29 = specialinvoke r0.<android.animation.AnimatorSet: int findLatestEventIdForTime(long)>(l28);

        $i7 = r0.<android.animation.AnimatorSet: int mLastEventId>;

        specialinvoke r0.<android.animation.AnimatorSet: void handleAnimationEvents(int,int,long)>($i7, i29, l28);

        r0.<android.animation.AnimatorSet: int mLastEventId> = i29;

        i30 = 0;

     label09:
        $r22 = r0.<android.animation.AnimatorSet: java.util.ArrayList mPlayingSet>;

        $i31 = virtualinvoke $r22.<java.util.ArrayList: int size()>();

        if i30 >= $i31 goto label11;

        $r16 = r0.<android.animation.AnimatorSet: java.util.ArrayList mPlayingSet>;

        $r17 = virtualinvoke $r16.<java.util.ArrayList: java.lang.Object get(int)>(i30);

        r1 = (android.animation.AnimatorSet$Node) $r17;

        $z7 = r1.<android.animation.AnimatorSet$Node: boolean mEnded>;

        if $z7 != 0 goto label10;

        $l14 = specialinvoke r0.<android.animation.AnimatorSet: long getPlayTimeForNode(long,android.animation.AnimatorSet$Node)>(l28, r1);

        specialinvoke r0.<android.animation.AnimatorSet: void pulseFrame(android.animation.AnimatorSet$Node,long)>(r1, $l14);

     label10:
        i30 = i30 + 1;

        goto label09;

     label11:
        $r3 = r0.<android.animation.AnimatorSet: java.util.ArrayList mPlayingSet>;

        $i8 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i32 = $i8 - 1;

     label12:
        if i32 < 0 goto label14;

        $r11 = r0.<android.animation.AnimatorSet: java.util.ArrayList mPlayingSet>;

        $r12 = virtualinvoke $r11.<java.util.ArrayList: java.lang.Object get(int)>(i32);

        $r13 = (android.animation.AnimatorSet$Node) $r12;

        $z6 = $r13.<android.animation.AnimatorSet$Node: boolean mEnded>;

        if $z6 == 0 goto label13;

        $r14 = r0.<android.animation.AnimatorSet: java.util.ArrayList mPlayingSet>;

        virtualinvoke $r14.<java.util.ArrayList: java.lang.Object remove(int)>(i32);

     label13:
        i32 = i32 + -1;

        goto label12;

     label14:
        $z3 = r0.<android.animation.AnimatorSet: boolean mReversing>;

        if $z3 == 0 goto label16;

        $r6 = r0.<android.animation.AnimatorSet: java.util.ArrayList mPlayingSet>;

        $i12 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        if $i12 != 1 goto label15;

        $r8 = r0.<android.animation.AnimatorSet: java.util.ArrayList mPlayingSet>;

        $r9 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r10 = r0.<android.animation.AnimatorSet: android.animation.AnimatorSet$Node mRootNode>;

        if $r9 != $r10 goto label15;

        z11 = 1;

        goto label18;

     label15:
        z11 = 0;

        $r7 = r0.<android.animation.AnimatorSet: java.util.ArrayList mPlayingSet>;

        $z5 = virtualinvoke $r7.<java.util.ArrayList: boolean isEmpty()>();

        if $z5 == 0 goto label18;

        z11 = 0;

        $i13 = r0.<android.animation.AnimatorSet: int mLastEventId>;

        if $i13 >= 3 goto label18;

        z11 = 1;

        goto label18;

     label16:
        $r4 = r0.<android.animation.AnimatorSet: java.util.ArrayList mPlayingSet>;

        $z4 = virtualinvoke $r4.<java.util.ArrayList: boolean isEmpty()>();

        if $z4 == 0 goto label17;

        $i9 = r0.<android.animation.AnimatorSet: int mLastEventId>;

        $r5 = r0.<android.animation.AnimatorSet: java.util.ArrayList mEvents>;

        $i10 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        $i11 = $i10 - 1;

        if $i9 != $i11 goto label17;

        z11 = 1;

        goto label18;

     label17:
        z11 = 0;

     label18:
        if z11 == 0 goto label19;

        specialinvoke r0.<android.animation.AnimatorSet: void endAnimation()>();

        return 1;

     label19:
        return 0;
    }

    public void end()
    {
        android.animation.AnimatorSet r0;
        int i0, $i1, $i2, $i3, $i4, $i5, i6, i7, i8, $i9, $i10, $i11, i12;
        android.os.Looper $r1;
        android.util.AndroidRuntimeException $r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.util.ArrayList $r3, $r4, $r10, $r16, $r19;
        java.lang.Object $r5, $r8, $r11, $r14;
        android.animation.AnimatorSet$Node $r6, $r9, $r12, $r15;
        android.util.ArrayMap $r7, $r13;
        android.animation.AnimatorSet$AnimationEvent r17, r20;
        android.animation.Animator r18, r21;

        r0 := @this: android.animation.AnimatorSet;

        $r1 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        if $r1 == null goto label13;

        $z0 = r0.<android.animation.AnimatorSet: boolean mShouldIgnoreEndWithoutStart>;

        if $z0 == 0 goto label01;

        $z7 = virtualinvoke r0.<android.animation.AnimatorSet: boolean isStarted()>();

        if $z7 != 0 goto label01;

        return;

     label01:
        $z1 = virtualinvoke r0.<android.animation.AnimatorSet: boolean isStarted()>();

        if $z1 == 0 goto label12;

        $z2 = r0.<android.animation.AnimatorSet: boolean mReversing>;

        if $z2 == 0 goto label07;

        i0 = r0.<android.animation.AnimatorSet: int mLastEventId>;

        i6 = i0;

        if i0 != -1 goto label02;

        $r16 = r0.<android.animation.AnimatorSet: java.util.ArrayList mEvents>;

        i6 = virtualinvoke $r16.<java.util.ArrayList: int size()>();

     label02:
        r0.<android.animation.AnimatorSet: int mLastEventId> = i6;

     label03:
        i7 = r0.<android.animation.AnimatorSet: int mLastEventId>;

        if i7 <= 0 goto label11;

        i8 = i7 + -1;

        r0.<android.animation.AnimatorSet: int mLastEventId> = i8;

        $r10 = r0.<android.animation.AnimatorSet: java.util.ArrayList mEvents>;

        $r11 = virtualinvoke $r10.<java.util.ArrayList: java.lang.Object get(int)>(i8);

        r17 = (android.animation.AnimatorSet$AnimationEvent) $r11;

        $r12 = r17.<android.animation.AnimatorSet$AnimationEvent: android.animation.AnimatorSet$Node mNode>;

        r18 = $r12.<android.animation.AnimatorSet$Node: android.animation.Animator mAnimation>;

        $r13 = r0.<android.animation.AnimatorSet: android.util.ArrayMap mNodeMap>;

        $r14 = virtualinvoke $r13.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r18);

        $r15 = (android.animation.AnimatorSet$Node) $r14;

        $z5 = $r15.<android.animation.AnimatorSet$Node: boolean mEnded>;

        if $z5 == 0 goto label04;

        goto label03;

     label04:
        $i4 = r17.<android.animation.AnimatorSet$AnimationEvent: int mEvent>;

        if $i4 != 2 goto label05;

        virtualinvoke r18.<android.animation.Animator: void reverse()>();

        goto label06;

     label05:
        $i5 = r17.<android.animation.AnimatorSet$AnimationEvent: int mEvent>;

        if $i5 != 1 goto label06;

        $z6 = virtualinvoke r18.<android.animation.Animator: boolean isStarted()>();

        if $z6 == 0 goto label06;

        virtualinvoke r18.<android.animation.Animator: void end()>();

     label06:
        goto label03;

     label07:
        $i9 = r0.<android.animation.AnimatorSet: int mLastEventId>;

        $r19 = r0.<android.animation.AnimatorSet: java.util.ArrayList mEvents>;

        $i10 = virtualinvoke $r19.<java.util.ArrayList: int size()>();

        $i11 = $i10 - 1;

        if $i9 >= $i11 goto label11;

        $i1 = r0.<android.animation.AnimatorSet: int mLastEventId>;

        i12 = $i1 + 1;

        r0.<android.animation.AnimatorSet: int mLastEventId> = i12;

        $r4 = r0.<android.animation.AnimatorSet: java.util.ArrayList mEvents>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i12);

        r20 = (android.animation.AnimatorSet$AnimationEvent) $r5;

        $r6 = r20.<android.animation.AnimatorSet$AnimationEvent: android.animation.AnimatorSet$Node mNode>;

        r21 = $r6.<android.animation.AnimatorSet$Node: android.animation.Animator mAnimation>;

        $r7 = r0.<android.animation.AnimatorSet: android.util.ArrayMap mNodeMap>;

        $r8 = virtualinvoke $r7.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r21);

        $r9 = (android.animation.AnimatorSet$Node) $r8;

        $z3 = $r9.<android.animation.AnimatorSet$Node: boolean mEnded>;

        if $z3 == 0 goto label08;

        goto label07;

     label08:
        $i2 = r20.<android.animation.AnimatorSet$AnimationEvent: int mEvent>;

        if $i2 != 0 goto label09;

        virtualinvoke r21.<android.animation.Animator: void start()>();

        goto label10;

     label09:
        $i3 = r20.<android.animation.AnimatorSet$AnimationEvent: int mEvent>;

        if $i3 != 2 goto label10;

        $z4 = virtualinvoke r21.<android.animation.Animator: boolean isStarted()>();

        if $z4 == 0 goto label10;

        virtualinvoke r21.<android.animation.Animator: void end()>();

     label10:
        goto label07;

     label11:
        $r3 = r0.<android.animation.AnimatorSet: java.util.ArrayList mPlayingSet>;

        virtualinvoke $r3.<java.util.ArrayList: void clear()>();

     label12:
        specialinvoke r0.<android.animation.AnimatorSet: void endAnimation()>();

        return;

     label13:
        $r2 = new android.util.AndroidRuntimeException;

        specialinvoke $r2.<android.util.AndroidRuntimeException: void <init>(java.lang.String)>("Animators may only be run on Looper threads");

        throw $r2;
    }

    public int getChangingConfigurations()
    {
        android.animation.AnimatorSet r0;
        int i0, $i1, i2, i3;
        java.util.ArrayList $r1, $r2;
        java.lang.Object $r3;
        android.animation.AnimatorSet$Node $r4;
        android.animation.Animator $r5;

        r0 := @this: android.animation.AnimatorSet;

        i2 = specialinvoke r0.<android.animation.Animator: int getChangingConfigurations()>();

        $r1 = r0.<android.animation.AnimatorSet: java.util.ArrayList mNodes>;

        i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        i3 = 0;

     label1:
        if i3 >= i0 goto label2;

        $r2 = r0.<android.animation.AnimatorSet: java.util.ArrayList mNodes>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        $r4 = (android.animation.AnimatorSet$Node) $r3;

        $r5 = $r4.<android.animation.AnimatorSet$Node: android.animation.Animator mAnimation>;

        $i1 = virtualinvoke $r5.<android.animation.Animator: int getChangingConfigurations()>();

        i2 = i2 | $i1;

        i3 = i3 + 1;

        goto label1;

     label2:
        return i2;
    }

    public java.util.ArrayList getChildAnimations()
    {
        android.animation.AnimatorSet r0;
        int i0, i1;
        android.animation.AnimatorSet$Node r2, $r7;
        java.util.ArrayList $r3, $r4, $r5;
        java.lang.Object $r6;
        android.animation.Animator $r8;

        r0 := @this: android.animation.AnimatorSet;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r4 = r0.<android.animation.AnimatorSet: java.util.ArrayList mNodes>;

        i0 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r5 = r0.<android.animation.AnimatorSet: java.util.ArrayList mNodes>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r2 = (android.animation.AnimatorSet$Node) $r6;

        $r7 = r0.<android.animation.AnimatorSet: android.animation.AnimatorSet$Node mRootNode>;

        if r2 == $r7 goto label2;

        $r8 = r2.<android.animation.AnimatorSet$Node: android.animation.Animator mAnimation>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r8);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return $r3;
    }

    public long getCurrentPlayTime()
    {
        android.animation.AnimatorSet r0;
        android.animation.AnimatorSet$SeekState $r1, $r2;
        boolean $z0, $z1;
        long $l0, $l3, $l4, $l5, $l6, $l7, $l8, $l9, $l10, $l11, $l12, $l13;
        byte $b1, $b2;
        float $f0, $f1, $f2, $f3, f4;

        r0 := @this: android.animation.AnimatorSet;

        $r1 = r0.<android.animation.AnimatorSet: android.animation.AnimatorSet$SeekState mSeekState>;

        $z0 = virtualinvoke $r1.<android.animation.AnimatorSet$SeekState: boolean isActive()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<android.animation.AnimatorSet: android.animation.AnimatorSet$SeekState mSeekState>;

        $l13 = virtualinvoke $r2.<android.animation.AnimatorSet$SeekState: long getPlayTime()>();

        return $l13;

     label1:
        $l0 = r0.<android.animation.AnimatorSet: long mLastFrameTime>;

        $b1 = $l0 cmp -1L;

        if $b1 != 0 goto label2;

        return 0L;

     label2:
        f4 = staticinvoke <android.animation.ValueAnimator: float getDurationScale()>();

        $b2 = f4 cmpl 0.0F;

        if $b2 != 0 goto label3;

        f4 = 1.0F;

        goto label3;

     label3:
        $z1 = r0.<android.animation.AnimatorSet: boolean mReversing>;

        if $z1 == 0 goto label4;

        $l10 = r0.<android.animation.AnimatorSet: long mLastFrameTime>;

        $l9 = r0.<android.animation.AnimatorSet: long mFirstFrame>;

        $l11 = $l10 - $l9;

        $f2 = (float) $l11;

        $f3 = $f2 / f4;

        $l12 = (long) $f3;

        return $l12;

     label4:
        $l4 = r0.<android.animation.AnimatorSet: long mLastFrameTime>;

        $l3 = r0.<android.animation.AnimatorSet: long mFirstFrame>;

        $l6 = $l4 - $l3;

        $l5 = r0.<android.animation.AnimatorSet: long mStartDelay>;

        $l7 = $l6 - $l5;

        $f0 = (float) $l7;

        $f1 = $f0 / f4;

        $l8 = (long) $f1;

        return $l8;
    }

    public long getDuration()
    {
        android.animation.AnimatorSet r0;
        long $l0;

        r0 := @this: android.animation.AnimatorSet;

        $l0 = r0.<android.animation.AnimatorSet: long mDuration>;

        return $l0;
    }

    public android.animation.TimeInterpolator getInterpolator()
    {
        android.animation.AnimatorSet r0;
        android.animation.TimeInterpolator $r1;

        r0 := @this: android.animation.AnimatorSet;

        $r1 = r0.<android.animation.AnimatorSet: android.animation.TimeInterpolator mInterpolator>;

        return $r1;
    }

    public long getStartDelay()
    {
        android.animation.AnimatorSet r0;
        long $l0;

        r0 := @this: android.animation.AnimatorSet;

        $l0 = r0.<android.animation.AnimatorSet: long mStartDelay>;

        return $l0;
    }

    public long getTotalDuration()
    {
        android.animation.AnimatorSet r0;
        long $l0;

        r0 := @this: android.animation.AnimatorSet;

        specialinvoke r0.<android.animation.AnimatorSet: void updateAnimatorsDuration()>();

        specialinvoke r0.<android.animation.AnimatorSet: void createDependencyGraph()>();

        $l0 = r0.<android.animation.AnimatorSet: long mTotalDuration>;

        return $l0;
    }

    boolean isInitialized()
    {
        android.animation.AnimatorSet r0;
        boolean $z1, $z2, z3;
        java.util.ArrayList $r1, $r2;
        int $i0, i1;
        java.lang.Object $r3;
        android.animation.AnimatorSet$Node $r4;
        android.animation.Animator $r5;

        r0 := @this: android.animation.AnimatorSet;

        $z1 = r0.<android.animation.AnimatorSet: boolean mChildrenInitialized>;

        if $z1 == 0 goto label1;

        return 1;

     label1:
        i1 = 0;

     label2:
        z3 = 1;

        $r1 = r0.<android.animation.AnimatorSet: java.util.ArrayList mNodes>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if i1 >= $i0 goto label4;

        $r2 = r0.<android.animation.AnimatorSet: java.util.ArrayList mNodes>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r4 = (android.animation.AnimatorSet$Node) $r3;

        $r5 = $r4.<android.animation.AnimatorSet$Node: android.animation.Animator mAnimation>;

        $z2 = virtualinvoke $r5.<android.animation.Animator: boolean isInitialized()>();

        if $z2 != 0 goto label3;

        z3 = 0;

        goto label4;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        r0.<android.animation.AnimatorSet: boolean mChildrenInitialized> = z3;

        return z3;
    }

    public boolean isRunning()
    {
        android.animation.AnimatorSet r0;
        long $l0, $l2;
        byte $b1, $b3;
        boolean $z0, z1;

        r0 := @this: android.animation.AnimatorSet;

        $l0 = r0.<android.animation.AnimatorSet: long mStartDelay>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label1;

        $z0 = r0.<android.animation.AnimatorSet: boolean mStarted>;

        return $z0;

     label1:
        $l2 = r0.<android.animation.AnimatorSet: long mLastFrameTime>;

        $b3 = $l2 cmp 0L;

        if $b3 <= 0 goto label2;

        z1 = 1;

        goto label3;

     label2:
        z1 = 0;

     label3:
        return z1;
    }

    public boolean isStarted()
    {
        android.animation.AnimatorSet r0;
        boolean $z0;

        r0 := @this: android.animation.AnimatorSet;

        $z0 = r0.<android.animation.AnimatorSet: boolean mStarted>;

        return $z0;
    }

    public void pause()
    {
        android.animation.AnimatorSet r0;
        boolean z0, $z1;
        android.os.Looper $r1;
        android.util.AndroidRuntimeException $r2;

        r0 := @this: android.animation.AnimatorSet;

        $r1 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        if $r1 == null goto label2;

        z0 = r0.<android.animation.AnimatorSet: boolean mPaused>;

        specialinvoke r0.<android.animation.Animator: void pause()>();

        if z0 != 0 goto label1;

        $z1 = r0.<android.animation.AnimatorSet: boolean mPaused>;

        if $z1 == 0 goto label1;

        r0.<android.animation.AnimatorSet: long mPauseTime> = -1L;

     label1:
        return;

     label2:
        $r2 = new android.util.AndroidRuntimeException;

        specialinvoke $r2.<android.util.AndroidRuntimeException: void <init>(java.lang.String)>("Animators may only be run on Looper threads");

        throw $r2;
    }

    public android.animation.AnimatorSet$Builder play(android.animation.Animator)
    {
        android.animation.AnimatorSet r0;
        android.animation.Animator r1;
        android.animation.AnimatorSet$Builder $r2;

        r0 := @this: android.animation.AnimatorSet;

        r1 := @parameter0: android.animation.Animator;

        if r1 == null goto label1;

        $r2 = new android.animation.AnimatorSet$Builder;

        specialinvoke $r2.<android.animation.AnimatorSet$Builder: void <init>(android.animation.AnimatorSet,android.animation.Animator)>(r0, r1);

        return $r2;

     label1:
        return null;
    }

    public void playSequentially(java.util.List)
    {
        android.animation.AnimatorSet r0;
        java.util.List r1;
        int $i0, $i1, $i2, $i3, $i4, i5;
        java.lang.Object $r2, $r5, $r8;
        android.animation.Animator $r3, $r6, $r9;
        android.animation.AnimatorSet$Builder $r4;

        r0 := @this: android.animation.AnimatorSet;

        r1 := @parameter0: java.util.List;

        if r1 == null goto label3;

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i0 <= 0 goto label3;

        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i1 != 1 goto label1;

        $r8 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0);

        $r9 = (android.animation.Animator) $r8;

        virtualinvoke r0.<android.animation.AnimatorSet: android.animation.AnimatorSet$Builder play(android.animation.Animator)>($r9);

        goto label3;

     label1:
        i5 = 0;

     label2:
        $i2 = interfaceinvoke r1.<java.util.List: int size()>();

        $i3 = $i2 - 1;

        if i5 >= $i3 goto label3;

        $r2 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i5);

        $r3 = (android.animation.Animator) $r2;

        $r4 = virtualinvoke r0.<android.animation.AnimatorSet: android.animation.AnimatorSet$Builder play(android.animation.Animator)>($r3);

        $i4 = i5 + 1;

        $r5 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>($i4);

        $r6 = (android.animation.Animator) $r5;

        virtualinvoke $r4.<android.animation.AnimatorSet$Builder: android.animation.AnimatorSet$Builder before(android.animation.Animator)>($r6);

        i5 = i5 + 1;

        goto label2;

     label3:
        return;
    }

    public transient void playSequentially(android.animation.Animator[])
    {
        android.animation.AnimatorSet r0;
        android.animation.Animator[] r1;
        int $i0, $i1, $i2, $i3, i4;
        android.animation.Animator $r2, $r4, $r6;
        android.animation.AnimatorSet$Builder $r3;

        r0 := @this: android.animation.AnimatorSet;

        r1 := @parameter0: android.animation.Animator[];

        if r1 == null goto label3;

        $i0 = lengthof r1;

        if $i0 != 1 goto label1;

        $r6 = r1[0];

        virtualinvoke r0.<android.animation.AnimatorSet: android.animation.AnimatorSet$Builder play(android.animation.Animator)>($r6);

        goto label3;

     label1:
        i4 = 0;

     label2:
        $i1 = lengthof r1;

        $i2 = $i1 - 1;

        if i4 >= $i2 goto label3;

        $r2 = r1[i4];

        $r3 = virtualinvoke r0.<android.animation.AnimatorSet: android.animation.AnimatorSet$Builder play(android.animation.Animator)>($r2);

        $i3 = i4 + 1;

        $r4 = r1[$i3];

        virtualinvoke $r3.<android.animation.AnimatorSet$Builder: android.animation.AnimatorSet$Builder before(android.animation.Animator)>($r4);

        i4 = i4 + 1;

        goto label2;

     label3:
        return;
    }

    public void playTogether(java.util.Collection)
    {
        android.animation.AnimatorSet r0;
        java.util.Iterator r1;
        int $i0;
        boolean $z0;
        java.lang.Object $r2;
        java.util.Collection r3;
        android.animation.AnimatorSet$Builder r4;
        android.animation.Animator r5;

        r0 := @this: android.animation.AnimatorSet;

        r3 := @parameter0: java.util.Collection;

        if r3 == null goto label4;

        $i0 = interfaceinvoke r3.<java.util.Collection: int size()>();

        if $i0 <= 0 goto label4;

        r1 = interfaceinvoke r3.<java.util.Collection: java.util.Iterator iterator()>();

        r4 = null;

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r2 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r5 = (android.animation.Animator) $r2;

        if r4 != null goto label2;

        r4 = virtualinvoke r0.<android.animation.AnimatorSet: android.animation.AnimatorSet$Builder play(android.animation.Animator)>(r5);

        goto label3;

     label2:
        virtualinvoke r4.<android.animation.AnimatorSet$Builder: android.animation.AnimatorSet$Builder 'with'(android.animation.Animator)>(r5);

     label3:
        goto label1;

     label4:
        return;
    }

    public transient void playTogether(android.animation.Animator[])
    {
        android.animation.AnimatorSet r0;
        android.animation.Animator[] r1;
        android.animation.AnimatorSet$Builder r2;
        android.animation.Animator $r3, $r4;
        int $i0, i1;

        r0 := @this: android.animation.AnimatorSet;

        r1 := @parameter0: android.animation.Animator[];

        if r1 == null goto label2;

        $r3 = r1[0];

        r2 = virtualinvoke r0.<android.animation.AnimatorSet: android.animation.AnimatorSet$Builder play(android.animation.Animator)>($r3);

        i1 = 1;

     label1:
        $i0 = lengthof r1;

        if i1 >= $i0 goto label2;

        $r4 = r1[i1];

        virtualinvoke r2.<android.animation.AnimatorSet$Builder: android.animation.AnimatorSet$Builder 'with'(android.animation.Animator)>($r4);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    boolean pulseAnimationFrame(long)
    {
        android.animation.AnimatorSet r0;
        long l0;
        boolean $z0;

        r0 := @this: android.animation.AnimatorSet;

        l0 := @parameter0: long;

        $z0 = virtualinvoke r0.<android.animation.AnimatorSet: boolean doAnimationFrame(long)>(l0);

        return $z0;
    }

    public void resume()
    {
        android.animation.AnimatorSet r0;
        boolean z0, $z1;
        android.os.Looper $r1;
        android.util.AndroidRuntimeException $r2;
        long $l0;
        byte $b1;

        r0 := @this: android.animation.AnimatorSet;

        $r1 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        if $r1 == null goto label2;

        z0 = r0.<android.animation.AnimatorSet: boolean mPaused>;

        specialinvoke r0.<android.animation.Animator: void resume()>();

        if z0 == 0 goto label1;

        $z1 = r0.<android.animation.AnimatorSet: boolean mPaused>;

        if $z1 != 0 goto label1;

        $l0 = r0.<android.animation.AnimatorSet: long mPauseTime>;

        $b1 = $l0 cmp 0L;

        if $b1 < 0 goto label1;

        specialinvoke r0.<android.animation.AnimatorSet: void addAnimationCallback(long)>(0L);

     label1:
        return;

     label2:
        $r2 = new android.util.AndroidRuntimeException;

        specialinvoke $r2.<android.util.AndroidRuntimeException: void <init>(java.lang.String)>("Animators may only be run on Looper threads");

        throw $r2;
    }

    public void reverse()
    {
        android.animation.AnimatorSet r0;

        r0 := @this: android.animation.AnimatorSet;

        specialinvoke r0.<android.animation.AnimatorSet: void start(boolean,boolean)>(1, 1);

        return;
    }

    public void setCurrentPlayTime(long)
    {
        android.animation.AnimatorSet r0;
        long l0, $l1, $l5, $l6, $l7, $l9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        byte $b2, $b3, $b8, $b10;
        java.lang.UnsupportedOperationException $r1, $r2, $r7;
        android.animation.AnimatorSet$SeekState $r3, $r4, $r5, $r6;

        r0 := @this: android.animation.AnimatorSet;

        l0 := @parameter0: long;

        $z0 = r0.<android.animation.AnimatorSet: boolean mReversing>;

        if $z0 == 0 goto label2;

        $l9 = virtualinvoke r0.<android.animation.AnimatorSet: long getTotalDuration()>();

        $b10 = $l9 cmp -1L;

        if $b10 == 0 goto label1;

        goto label2;

     label1:
        $r7 = new java.lang.UnsupportedOperationException;

        specialinvoke $r7.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Error: Cannot seek in reverse in an infinite AnimatorSet");

        throw $r7;

     label2:
        $l1 = virtualinvoke r0.<android.animation.AnimatorSet: long getTotalDuration()>();

        $b2 = $l1 cmp -1L;

        if $b2 == 0 goto label3;

        $l5 = virtualinvoke r0.<android.animation.AnimatorSet: long getTotalDuration()>();

        $l6 = r0.<android.animation.AnimatorSet: long mStartDelay>;

        $l7 = $l5 - $l6;

        $b8 = l0 cmp $l7;

        if $b8 > 0 goto label9;

     label3:
        $b3 = l0 cmp 0L;

        if $b3 < 0 goto label9;

        specialinvoke r0.<android.animation.AnimatorSet: void initAnimation()>();

        $z1 = virtualinvoke r0.<android.animation.AnimatorSet: boolean isStarted()>();

        if $z1 == 0 goto label5;

        $z7 = virtualinvoke r0.<android.animation.AnimatorSet: boolean isPaused()>();

        if $z7 == 0 goto label4;

        goto label5;

     label4:
        $r6 = r0.<android.animation.AnimatorSet: android.animation.AnimatorSet$SeekState mSeekState>;

        $z8 = r0.<android.animation.AnimatorSet: boolean mReversing>;

        virtualinvoke $r6.<android.animation.AnimatorSet$SeekState: void setPlayTime(long,boolean)>(l0, $z8);

        goto label7;

     label5:
        $z2 = r0.<android.animation.AnimatorSet: boolean mReversing>;

        if $z2 != 0 goto label8;

        $r3 = r0.<android.animation.AnimatorSet: android.animation.AnimatorSet$SeekState mSeekState>;

        $z3 = virtualinvoke $r3.<android.animation.AnimatorSet$SeekState: boolean isActive()>();

        if $z3 != 0 goto label6;

        specialinvoke r0.<android.animation.AnimatorSet: int findLatestEventIdForTime(long)>(0L);

        specialinvoke r0.<android.animation.AnimatorSet: void initChildren()>();

        $r5 = r0.<android.animation.AnimatorSet: android.animation.AnimatorSet$SeekState mSeekState>;

        $z6 = r0.<android.animation.AnimatorSet: boolean mReversing>;

        virtualinvoke $r5.<android.animation.AnimatorSet$SeekState: void setPlayTime(long,boolean)>(0L, $z6);

     label6:
        $z4 = r0.<android.animation.AnimatorSet: boolean mReversing>;

        virtualinvoke r0.<android.animation.AnimatorSet: void animateBasedOnPlayTime(long,long,boolean)>(l0, 0L, $z4);

        $r4 = r0.<android.animation.AnimatorSet: android.animation.AnimatorSet$SeekState mSeekState>;

        $z5 = r0.<android.animation.AnimatorSet: boolean mReversing>;

        virtualinvoke $r4.<android.animation.AnimatorSet$SeekState: void setPlayTime(long,boolean)>(l0, $z5);

     label7:
        return;

     label8:
        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Error: Something went wrong. mReversing should not be set when AnimatorSet is not started.");

        throw $r2;

     label9:
        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Error: Play time should always be in between0 and duration.");

        throw $r1;
    }

    public volatile android.animation.Animator setDuration(long)
    {
        android.animation.AnimatorSet r0, $r1;
        long l0;

        r0 := @this: android.animation.AnimatorSet;

        l0 := @parameter0: long;

        $r1 = virtualinvoke r0.<android.animation.AnimatorSet: android.animation.AnimatorSet setDuration(long)>(l0);

        return $r1;
    }

    public android.animation.AnimatorSet setDuration(long)
    {
        android.animation.AnimatorSet r0;
        long l0;
        byte $b1;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: android.animation.AnimatorSet;

        l0 := @parameter0: long;

        $b1 = l0 cmp 0L;

        if $b1 < 0 goto label1;

        r0.<android.animation.AnimatorSet: boolean mDependencyDirty> = 1;

        r0.<android.animation.AnimatorSet: long mDuration> = l0;

        return r0;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("duration must be a value of zero or greater");

        throw $r1;
    }

    public void setInterpolator(android.animation.TimeInterpolator)
    {
        android.animation.AnimatorSet r0;
        android.animation.TimeInterpolator r1;

        r0 := @this: android.animation.AnimatorSet;

        r1 := @parameter0: android.animation.TimeInterpolator;

        r0.<android.animation.AnimatorSet: android.animation.TimeInterpolator mInterpolator> = r1;

        return;
    }

    public void setStartDelay(long)
    {
        android.animation.AnimatorSet r0;
        long l0, $l3, $l6, $l7, $l9, $l10, $l12, $l13, l15, l16, l19, l20, l21;
        int i1, i17;
        android.animation.AnimatorSet$Node r1, $r5;
        byte $b2, $b4, $b5, $b8, $b11;
        boolean $z0;
        java.util.ArrayList $r2, $r3;
        java.lang.Object $r4;

        r0 := @this: android.animation.AnimatorSet;

        l15 := @parameter0: long;

        l16 = l15;

        $b2 = l15 cmp 0L;

        if $b2 >= 0 goto label01;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("AnimatorSet", "Start delay should always be non-negative");

        l16 = 0L;

     label01:
        $l3 = r0.<android.animation.AnimatorSet: long mStartDelay>;

        l0 = l16 - $l3;

        $b4 = l0 cmp 0L;

        if $b4 != 0 goto label02;

        return;

     label02:
        r0.<android.animation.AnimatorSet: long mStartDelay> = l16;

        $z0 = r0.<android.animation.AnimatorSet: boolean mDependencyDirty>;

        if $z0 != 0 goto label11;

        $r2 = r0.<android.animation.AnimatorSet: java.util.ArrayList mNodes>;

        i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i17 = 0;

     label03:
        if i17 >= i1 goto label10;

        $r3 = r0.<android.animation.AnimatorSet: java.util.ArrayList mNodes>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i17);

        r1 = (android.animation.AnimatorSet$Node) $r4;

        $r5 = r0.<android.animation.AnimatorSet: android.animation.AnimatorSet$Node mRootNode>;

        if r1 != $r5 goto label04;

        $l13 = r0.<android.animation.AnimatorSet: long mStartDelay>;

        r1.<android.animation.AnimatorSet$Node: long mEndTime> = $l13;

        goto label09;

     label04:
        $l7 = r1.<android.animation.AnimatorSet$Node: long mStartTime>;

        $b8 = $l7 cmp -1L;

        if $b8 != 0 goto label05;

        l19 = -1L;

        goto label06;

     label05:
        $l9 = r1.<android.animation.AnimatorSet$Node: long mStartTime>;

        l19 = $l9 + l0;

     label06:
        r1.<android.animation.AnimatorSet$Node: long mStartTime> = l19;

        $l10 = r1.<android.animation.AnimatorSet$Node: long mEndTime>;

        $b11 = $l10 cmp -1L;

        if $b11 != 0 goto label07;

        l20 = -1L;

        goto label08;

     label07:
        $l12 = r1.<android.animation.AnimatorSet$Node: long mEndTime>;

        l20 = $l12 + l0;

     label08:
        r1.<android.animation.AnimatorSet$Node: long mEndTime> = l20;

     label09:
        i17 = i17 + 1;

        goto label03;

     label10:
        l21 = r0.<android.animation.AnimatorSet: long mTotalDuration>;

        $b5 = l21 cmp -1L;

        if $b5 == 0 goto label11;

        $l6 = l21 + l0;

        r0.<android.animation.AnimatorSet: long mTotalDuration> = $l6;

     label11:
        return;
    }

    public void setTarget(java.lang.Object)
    {
        android.animation.AnimatorSet r0, $r8;
        java.lang.Object r1, $r5;
        int i0, i1;
        android.animation.Animator r2;
        java.util.ArrayList $r3, $r4;
        android.animation.AnimatorSet$Node $r6;
        boolean $z0, $z1;
        android.animation.ObjectAnimator $r7;

        r0 := @this: android.animation.AnimatorSet;

        r1 := @parameter0: java.lang.Object;

        $r3 = r0.<android.animation.AnimatorSet: java.util.ArrayList mNodes>;

        i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label4;

        $r4 = r0.<android.animation.AnimatorSet: java.util.ArrayList mNodes>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r6 = (android.animation.AnimatorSet$Node) $r5;

        r2 = $r6.<android.animation.AnimatorSet$Node: android.animation.Animator mAnimation>;

        $z0 = r2 instanceof android.animation.AnimatorSet;

        if $z0 == 0 goto label2;

        $r8 = (android.animation.AnimatorSet) r2;

        virtualinvoke $r8.<android.animation.AnimatorSet: void setTarget(java.lang.Object)>(r1);

        goto label3;

     label2:
        $z1 = r2 instanceof android.animation.ObjectAnimator;

        if $z1 == 0 goto label3;

        $r7 = (android.animation.ObjectAnimator) r2;

        virtualinvoke $r7.<android.animation.ObjectAnimator: void setTarget(java.lang.Object)>(r1);

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        return;
    }

    public void setupEndValues()
    {
        android.animation.AnimatorSet r0;
        int i0, i1;
        android.animation.AnimatorSet$Node r1, $r5;
        java.util.ArrayList $r2, $r3;
        java.lang.Object $r4;
        android.animation.Animator $r6;

        r0 := @this: android.animation.AnimatorSet;

        $r2 = r0.<android.animation.AnimatorSet: java.util.ArrayList mNodes>;

        i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r3 = r0.<android.animation.AnimatorSet: java.util.ArrayList mNodes>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r1 = (android.animation.AnimatorSet$Node) $r4;

        $r5 = r0.<android.animation.AnimatorSet: android.animation.AnimatorSet$Node mRootNode>;

        if r1 == $r5 goto label2;

        $r6 = r1.<android.animation.AnimatorSet$Node: android.animation.Animator mAnimation>;

        virtualinvoke $r6.<android.animation.Animator: void setupEndValues()>();

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    public void setupStartValues()
    {
        android.animation.AnimatorSet r0;
        int i0, i1;
        android.animation.AnimatorSet$Node r1, $r5;
        java.util.ArrayList $r2, $r3;
        java.lang.Object $r4;
        android.animation.Animator $r6;

        r0 := @this: android.animation.AnimatorSet;

        $r2 = r0.<android.animation.AnimatorSet: java.util.ArrayList mNodes>;

        i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r3 = r0.<android.animation.AnimatorSet: java.util.ArrayList mNodes>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r1 = (android.animation.AnimatorSet$Node) $r4;

        $r5 = r0.<android.animation.AnimatorSet: android.animation.AnimatorSet$Node mRootNode>;

        if r1 == $r5 goto label2;

        $r6 = r1.<android.animation.AnimatorSet$Node: android.animation.Animator mAnimation>;

        virtualinvoke $r6.<android.animation.Animator: void setupStartValues()>();

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    public boolean shouldPlayTogether()
    {
        android.animation.AnimatorSet r0;
        java.util.ArrayList r1, $r4, $r5;
        android.animation.AnimatorSet$Node $r2, $r3;
        int $i0, $i1, $i2;
        boolean z1;

        r0 := @this: android.animation.AnimatorSet;

        specialinvoke r0.<android.animation.AnimatorSet: void updateAnimatorsDuration()>();

        specialinvoke r0.<android.animation.AnimatorSet: void createDependencyGraph()>();

        $r2 = r0.<android.animation.AnimatorSet: android.animation.AnimatorSet$Node mRootNode>;

        r1 = $r2.<android.animation.AnimatorSet$Node: java.util.ArrayList mChildNodes>;

        z1 = 1;

        if r1 == null goto label2;

        $r3 = r0.<android.animation.AnimatorSet: android.animation.AnimatorSet$Node mRootNode>;

        $r4 = $r3.<android.animation.AnimatorSet$Node: java.util.ArrayList mChildNodes>;

        $i0 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        $r5 = r0.<android.animation.AnimatorSet: java.util.ArrayList mNodes>;

        $i1 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        $i2 = $i1 - 1;

        if $i0 != $i2 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    void skipToEndValue(boolean)
    {
        android.animation.AnimatorSet r0;
        boolean z0, $z1;
        java.lang.UnsupportedOperationException $r1;
        java.util.ArrayList $r2, $r3, $r6, $r11, $r12, $r15;
        int $i0, $i1, $i2, $i3, i4, i5;
        java.lang.Object $r4, $r7, $r13, $r16;
        android.animation.AnimatorSet$AnimationEvent $r5, $r8, $r14, $r17;
        android.animation.AnimatorSet$Node $r9, $r18;
        android.animation.Animator $r10, $r19;

        r0 := @this: android.animation.AnimatorSet;

        z0 := @parameter0: boolean;

        $z1 = virtualinvoke r0.<android.animation.AnimatorSet: boolean isInitialized()>();

        if $z1 == 0 goto label8;

        specialinvoke r0.<android.animation.AnimatorSet: void initAnimation()>();

        if z0 == 0 goto label4;

        $r11 = r0.<android.animation.AnimatorSet: java.util.ArrayList mEvents>;

        $i2 = virtualinvoke $r11.<java.util.ArrayList: int size()>();

        i4 = $i2 - 1;

     label1:
        if i4 < 0 goto label3;

        $r12 = r0.<android.animation.AnimatorSet: java.util.ArrayList mEvents>;

        $r13 = virtualinvoke $r12.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        $r14 = (android.animation.AnimatorSet$AnimationEvent) $r13;

        $i3 = $r14.<android.animation.AnimatorSet$AnimationEvent: int mEvent>;

        if $i3 != 1 goto label2;

        $r15 = r0.<android.animation.AnimatorSet: java.util.ArrayList mEvents>;

        $r16 = virtualinvoke $r15.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        $r17 = (android.animation.AnimatorSet$AnimationEvent) $r16;

        $r18 = $r17.<android.animation.AnimatorSet$AnimationEvent: android.animation.AnimatorSet$Node mNode>;

        $r19 = $r18.<android.animation.AnimatorSet$Node: android.animation.Animator mAnimation>;

        virtualinvoke $r19.<android.animation.Animator: void skipToEndValue(boolean)>(1);

     label2:
        i4 = i4 + -1;

        goto label1;

     label3:
        goto label7;

     label4:
        i5 = 0;

     label5:
        $r2 = r0.<android.animation.AnimatorSet: java.util.ArrayList mEvents>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if i5 >= $i0 goto label7;

        $r3 = r0.<android.animation.AnimatorSet: java.util.ArrayList mEvents>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        $r5 = (android.animation.AnimatorSet$AnimationEvent) $r4;

        $i1 = $r5.<android.animation.AnimatorSet$AnimationEvent: int mEvent>;

        if $i1 != 2 goto label6;

        $r6 = r0.<android.animation.AnimatorSet: java.util.ArrayList mEvents>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        $r8 = (android.animation.AnimatorSet$AnimationEvent) $r7;

        $r9 = $r8.<android.animation.AnimatorSet$AnimationEvent: android.animation.AnimatorSet$Node mNode>;

        $r10 = $r9.<android.animation.AnimatorSet$Node: android.animation.Animator mAnimation>;

        virtualinvoke $r10.<android.animation.Animator: void skipToEndValue(boolean)>(0);

     label6:
        i5 = i5 + 1;

        goto label5;

     label7:
        return;

     label8:
        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Children must be initialized.");

        throw $r1;
    }

    public void start()
    {
        android.animation.AnimatorSet r0;

        r0 := @this: android.animation.AnimatorSet;

        specialinvoke r0.<android.animation.AnimatorSet: void start(boolean,boolean)>(0, 1);

        return;
    }

    void startWithoutPulsing(boolean)
    {
        android.animation.AnimatorSet r0;
        boolean z0;

        r0 := @this: android.animation.AnimatorSet;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.animation.AnimatorSet: void start(boolean,boolean)>(z0, 0);

        return;
    }

    public java.lang.String toString()
    {
        android.animation.AnimatorSet r0;
        int i0, $i1, i2;
        java.lang.StringBuilder $r2, $r8, $r14;
        java.lang.String $r4, $r11, $r18, r21;
        java.util.ArrayList $r7, $r12;
        java.lang.Object $r13;
        android.animation.Animator $r17;
        android.animation.AnimatorSet$Node r22;

        r0 := @this: android.animation.AnimatorSet;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AnimatorSet@");

        $i1 = virtualinvoke r0.<java.lang.Object: int hashCode()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{");

        r21 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = r0.<android.animation.AnimatorSet: java.util.ArrayList mNodes>;

        i0 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        i2 = 0;

     label1:
        if i2 >= i0 goto label2;

        $r12 = r0.<android.animation.AnimatorSet: java.util.ArrayList mNodes>;

        $r13 = virtualinvoke $r12.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r22 = (android.animation.AnimatorSet$Node) $r13;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r21);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n    ");

        $r17 = r22.<android.animation.AnimatorSet$Node: android.animation.Animator mAnimation>;

        $r18 = virtualinvoke $r17.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        r21 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        i2 = i2 + 1;

        goto label1;

     label2:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r21);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n}");

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;
    }

    public static void <clinit>()
    {
        <android.animation.AnimatorSet: java.lang.String TAG> = "AnimatorSet";

        return;
    }
}
