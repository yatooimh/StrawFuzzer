public class android.animation.FloatArrayEvaluator extends java.lang.Object implements android.animation.TypeEvaluator
{
    private float[] mArray;

    public void <init>()
    {
        android.animation.FloatArrayEvaluator r0;

        r0 := @this: android.animation.FloatArrayEvaluator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(float[])
    {
        android.animation.FloatArrayEvaluator r0;
        float[] r1;

        r0 := @this: android.animation.FloatArrayEvaluator;

        r1 := @parameter0: float[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.animation.FloatArrayEvaluator: float[] mArray> = r1;

        return;
    }

    public volatile java.lang.Object evaluate(float, java.lang.Object, java.lang.Object)
    {
        android.animation.FloatArrayEvaluator r0;
        float f0;
        java.lang.Object r1, r2;
        float[] $r3, $r4, $r5;

        r0 := @this: android.animation.FloatArrayEvaluator;

        f0 := @parameter0: float;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        $r4 = (float[]) r1;

        $r3 = (float[]) r2;

        $r5 = virtualinvoke r0.<android.animation.FloatArrayEvaluator: float[] evaluate(float,float[],float[])>(f0, $r4, $r3);

        return $r5;
    }

    public float[] evaluate(float, float[], float[])
    {
        android.animation.FloatArrayEvaluator r0;
        float f0, f1, $f2, $f3, $f4, $f5;
        float[] r1, r2, r3, r4;
        int $i0, i1, $i2;

        r0 := @this: android.animation.FloatArrayEvaluator;

        f0 := @parameter0: float;

        r1 := @parameter1: float[];

        r2 := @parameter2: float[];

        r3 = r0.<android.animation.FloatArrayEvaluator: float[] mArray>;

        r4 = r3;

        if r3 != null goto label1;

        $i0 = lengthof r1;

        r4 = newarray (float)[$i0];

     label1:
        i1 = 0;

     label2:
        $i2 = lengthof r4;

        if i1 >= $i2 goto label3;

        f1 = r1[i1];

        $f2 = r2[i1];

        $f3 = $f2 - f1;

        $f4 = $f3 * f0;

        $f5 = $f4 + f1;

        r4[i1] = $f5;

        i1 = i1 + 1;

        goto label2;

     label3:
        return r4;
    }
}
