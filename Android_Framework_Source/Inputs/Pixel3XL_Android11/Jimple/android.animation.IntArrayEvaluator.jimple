public class android.animation.IntArrayEvaluator extends java.lang.Object implements android.animation.TypeEvaluator
{
    private int[] mArray;

    public void <init>()
    {
        android.animation.IntArrayEvaluator r0;

        r0 := @this: android.animation.IntArrayEvaluator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(int[])
    {
        android.animation.IntArrayEvaluator r0;
        int[] r1;

        r0 := @this: android.animation.IntArrayEvaluator;

        r1 := @parameter0: int[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.animation.IntArrayEvaluator: int[] mArray> = r1;

        return;
    }

    public volatile java.lang.Object evaluate(float, java.lang.Object, java.lang.Object)
    {
        android.animation.IntArrayEvaluator r0;
        float f0;
        java.lang.Object r1, r2;
        int[] $r3, $r4, $r5;

        r0 := @this: android.animation.IntArrayEvaluator;

        f0 := @parameter0: float;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        $r4 = (int[]) r1;

        $r3 = (int[]) r2;

        $r5 = virtualinvoke r0.<android.animation.IntArrayEvaluator: int[] evaluate(float,int[],int[])>(f0, $r4, $r3);

        return $r5;
    }

    public int[] evaluate(float, int[], int[])
    {
        android.animation.IntArrayEvaluator r0;
        float f0, $f1, $f2, $f3, $f4;
        int[] r1, r2, r3, r4;
        int i0, i1, $i2, $i3, $i4, i5, $i6;

        r0 := @this: android.animation.IntArrayEvaluator;

        f0 := @parameter0: float;

        r1 := @parameter1: int[];

        r2 := @parameter2: int[];

        r3 = r0.<android.animation.IntArrayEvaluator: int[] mArray>;

        r4 = r3;

        if r3 != null goto label1;

        $i4 = lengthof r1;

        r4 = newarray (int)[$i4];

     label1:
        i5 = 0;

     label2:
        $i6 = lengthof r4;

        if i5 >= $i6 goto label3;

        i0 = r1[i5];

        i1 = r2[i5];

        $f3 = (float) i0;

        $i2 = i1 - i0;

        $f1 = (float) $i2;

        $f2 = $f1 * f0;

        $f4 = $f3 + $f2;

        $i3 = (int) $f4;

        r4[i5] = $i3;

        i5 = i5 + 1;

        goto label2;

     label3:
        return r4;
    }
}
