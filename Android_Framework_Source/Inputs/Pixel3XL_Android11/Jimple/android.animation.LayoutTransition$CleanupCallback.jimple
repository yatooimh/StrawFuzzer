final class android.animation.LayoutTransition$CleanupCallback extends java.lang.Object implements android.view.ViewTreeObserver$OnPreDrawListener, android.view.View$OnAttachStateChangeListener
{
    final java.util.Map layoutChangeListenerMap;
    final android.view.ViewGroup parent;

    void <init>(java.util.Map, android.view.ViewGroup)
    {
        android.animation.LayoutTransition$CleanupCallback r0;
        java.util.Map r1;
        android.view.ViewGroup r2;

        r0 := @this: android.animation.LayoutTransition$CleanupCallback;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: android.view.ViewGroup;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.animation.LayoutTransition$CleanupCallback: java.util.Map layoutChangeListenerMap> = r1;

        r0.<android.animation.LayoutTransition$CleanupCallback: android.view.ViewGroup parent> = r2;

        return;
    }

    private void cleanup()
    {
        android.animation.LayoutTransition$CleanupCallback r0;
        java.util.Iterator r1;
        android.view.View r2;
        android.view.ViewGroup $r3, $r5;
        android.view.ViewTreeObserver $r4;
        java.util.Map $r6, $r7, $r9, $r11;
        int $i0;
        java.util.Set $r8;
        boolean $z0;
        java.lang.Object $r10, $r12;
        android.view.View$OnLayoutChangeListener $r13;

        r0 := @this: android.animation.LayoutTransition$CleanupCallback;

        $r3 = r0.<android.animation.LayoutTransition$CleanupCallback: android.view.ViewGroup parent>;

        $r4 = virtualinvoke $r3.<android.view.ViewGroup: android.view.ViewTreeObserver getViewTreeObserver()>();

        virtualinvoke $r4.<android.view.ViewTreeObserver: void removeOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener)>(r0);

        $r5 = r0.<android.animation.LayoutTransition$CleanupCallback: android.view.ViewGroup parent>;

        virtualinvoke $r5.<android.view.ViewGroup: void removeOnAttachStateChangeListener(android.view.View$OnAttachStateChangeListener)>(r0);

        $r6 = r0.<android.animation.LayoutTransition$CleanupCallback: java.util.Map layoutChangeListenerMap>;

        $i0 = interfaceinvoke $r6.<java.util.Map: int size()>();

        if $i0 <= 0 goto label3;

        $r7 = r0.<android.animation.LayoutTransition$CleanupCallback: java.util.Map layoutChangeListenerMap>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.util.Set keySet()>();

        r1 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r10 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.view.View) $r10;

        $r11 = r0.<android.animation.LayoutTransition$CleanupCallback: java.util.Map layoutChangeListenerMap>;

        $r12 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        $r13 = (android.view.View$OnLayoutChangeListener) $r12;

        virtualinvoke r2.<android.view.View: void removeOnLayoutChangeListener(android.view.View$OnLayoutChangeListener)>($r13);

        goto label1;

     label2:
        $r9 = r0.<android.animation.LayoutTransition$CleanupCallback: java.util.Map layoutChangeListenerMap>;

        interfaceinvoke $r9.<java.util.Map: void clear()>();

     label3:
        return;
    }

    public boolean onPreDraw()
    {
        android.animation.LayoutTransition$CleanupCallback r0;

        r0 := @this: android.animation.LayoutTransition$CleanupCallback;

        specialinvoke r0.<android.animation.LayoutTransition$CleanupCallback: void cleanup()>();

        return 1;
    }

    public void onViewAttachedToWindow(android.view.View)
    {
        android.animation.LayoutTransition$CleanupCallback r0;
        android.view.View r1;

        r0 := @this: android.animation.LayoutTransition$CleanupCallback;

        r1 := @parameter0: android.view.View;

        return;
    }

    public void onViewDetachedFromWindow(android.view.View)
    {
        android.animation.LayoutTransition$CleanupCallback r0;
        android.view.View r1;

        r0 := @this: android.animation.LayoutTransition$CleanupCallback;

        r1 := @parameter0: android.view.View;

        specialinvoke r0.<android.animation.LayoutTransition$CleanupCallback: void cleanup()>();

        return;
    }
}
