public class android.animation.PropertyValuesHolder extends java.lang.Object implements java.lang.Cloneable
{
    private static java.lang.Class[] DOUBLE_VARIANTS;
    private static java.lang.Class[] FLOAT_VARIANTS;
    private static java.lang.Class[] INTEGER_VARIANTS;
    private static final android.animation.TypeEvaluator sFloatEvaluator;
    private static final java.util.HashMap sGetterPropertyMap;
    private static final android.animation.TypeEvaluator sIntEvaluator;
    private static final java.util.HashMap sSetterPropertyMap;
    private java.lang.Object mAnimatedValue;
    private android.animation.TypeConverter mConverter;
    private android.animation.TypeEvaluator mEvaluator;
    private java.lang.reflect.Method mGetter;
    android.animation.Keyframes mKeyframes;
    protected android.util.Property mProperty;
    java.lang.String mPropertyName;
    java.lang.reflect.Method mSetter;
    final java.lang.Object[] mTmpValueArray;
    java.lang.Class mValueType;

    static void <clinit>()
    {
        android.animation.IntEvaluator $r0;
        android.animation.FloatEvaluator $r1;
        java.lang.Class[] $r2, $r6, $r10;
        java.lang.Class $r3, $r4, $r5, $r7, $r8, $r9, $r11, $r12, $r13;
        java.util.HashMap $r14, $r15;

        $r0 = new android.animation.IntEvaluator;

        specialinvoke $r0.<android.animation.IntEvaluator: void <init>()>();

        <android.animation.PropertyValuesHolder: android.animation.TypeEvaluator sIntEvaluator> = $r0;

        $r1 = new android.animation.FloatEvaluator;

        specialinvoke $r1.<android.animation.FloatEvaluator: void <init>()>();

        <android.animation.PropertyValuesHolder: android.animation.TypeEvaluator sFloatEvaluator> = $r1;

        $r2 = newarray (java.lang.Class)[6];

        $r3 = <java.lang.Float: java.lang.Class TYPE>;

        $r2[0] = $r3;

        $r2[1] = class "Ljava/lang/Float;";

        $r4 = <java.lang.Double: java.lang.Class TYPE>;

        $r2[2] = $r4;

        $r5 = <java.lang.Integer: java.lang.Class TYPE>;

        $r2[3] = $r5;

        $r2[4] = class "Ljava/lang/Double;";

        $r2[5] = class "Ljava/lang/Integer;";

        <android.animation.PropertyValuesHolder: java.lang.Class[] FLOAT_VARIANTS> = $r2;

        $r6 = newarray (java.lang.Class)[6];

        $r7 = <java.lang.Integer: java.lang.Class TYPE>;

        $r6[0] = $r7;

        $r6[1] = class "Ljava/lang/Integer;";

        $r8 = <java.lang.Float: java.lang.Class TYPE>;

        $r6[2] = $r8;

        $r9 = <java.lang.Double: java.lang.Class TYPE>;

        $r6[3] = $r9;

        $r6[4] = class "Ljava/lang/Float;";

        $r6[5] = class "Ljava/lang/Double;";

        <android.animation.PropertyValuesHolder: java.lang.Class[] INTEGER_VARIANTS> = $r6;

        $r10 = newarray (java.lang.Class)[6];

        $r11 = <java.lang.Double: java.lang.Class TYPE>;

        $r10[0] = $r11;

        $r10[1] = class "Ljava/lang/Double;";

        $r12 = <java.lang.Float: java.lang.Class TYPE>;

        $r10[2] = $r12;

        $r13 = <java.lang.Integer: java.lang.Class TYPE>;

        $r10[3] = $r13;

        $r10[4] = class "Ljava/lang/Float;";

        $r10[5] = class "Ljava/lang/Integer;";

        <android.animation.PropertyValuesHolder: java.lang.Class[] DOUBLE_VARIANTS> = $r10;

        $r14 = new java.util.HashMap;

        specialinvoke $r14.<java.util.HashMap: void <init>()>();

        <android.animation.PropertyValuesHolder: java.util.HashMap sSetterPropertyMap> = $r14;

        $r15 = new java.util.HashMap;

        specialinvoke $r15.<java.util.HashMap: void <init>()>();

        <android.animation.PropertyValuesHolder: java.util.HashMap sGetterPropertyMap> = $r15;

        return;
    }

    private void <init>(android.util.Property)
    {
        android.animation.PropertyValuesHolder r0;
        android.util.Property r1;
        java.lang.Object[] $r2;
        java.lang.String $r3;

        r0 := @this: android.animation.PropertyValuesHolder;

        r1 := @parameter0: android.util.Property;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.animation.PropertyValuesHolder: java.lang.reflect.Method mSetter> = null;

        r0.<android.animation.PropertyValuesHolder: java.lang.reflect.Method mGetter> = null;

        r0.<android.animation.PropertyValuesHolder: android.animation.Keyframes mKeyframes> = null;

        $r2 = newarray (java.lang.Object)[1];

        r0.<android.animation.PropertyValuesHolder: java.lang.Object[] mTmpValueArray> = $r2;

        r0.<android.animation.PropertyValuesHolder: android.util.Property mProperty> = r1;

        if r1 == null goto label1;

        $r3 = virtualinvoke r1.<android.util.Property: java.lang.String getName()>();

        r0.<android.animation.PropertyValuesHolder: java.lang.String mPropertyName> = $r3;

     label1:
        return;
    }

    void <init>(android.util.Property, android.animation.PropertyValuesHolder$1)
    {
        android.animation.PropertyValuesHolder r0;
        android.util.Property r1;
        android.animation.PropertyValuesHolder$1 r2;

        r0 := @this: android.animation.PropertyValuesHolder;

        r1 := @parameter0: android.util.Property;

        r2 := @parameter1: android.animation.PropertyValuesHolder$1;

        specialinvoke r0.<android.animation.PropertyValuesHolder: void <init>(android.util.Property)>(r1);

        return;
    }

    private void <init>(java.lang.String)
    {
        android.animation.PropertyValuesHolder r0;
        java.lang.String r1;
        java.lang.Object[] $r2;

        r0 := @this: android.animation.PropertyValuesHolder;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.animation.PropertyValuesHolder: java.lang.reflect.Method mSetter> = null;

        r0.<android.animation.PropertyValuesHolder: java.lang.reflect.Method mGetter> = null;

        r0.<android.animation.PropertyValuesHolder: android.animation.Keyframes mKeyframes> = null;

        $r2 = newarray (java.lang.Object)[1];

        r0.<android.animation.PropertyValuesHolder: java.lang.Object[] mTmpValueArray> = $r2;

        r0.<android.animation.PropertyValuesHolder: java.lang.String mPropertyName> = r1;

        return;
    }

    void <init>(java.lang.String, android.animation.PropertyValuesHolder$1)
    {
        android.animation.PropertyValuesHolder r0;
        java.lang.String r1;
        android.animation.PropertyValuesHolder$1 r2;

        r0 := @this: android.animation.PropertyValuesHolder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.animation.PropertyValuesHolder$1;

        specialinvoke r0.<android.animation.PropertyValuesHolder: void <init>(java.lang.String)>(r1);

        return;
    }

    static void access$1000(java.lang.Object, long, int, int)
    {
        java.lang.Object r0;
        long l0;
        int i1, i2;

        r0 := @parameter0: java.lang.Object;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        staticinvoke <android.animation.PropertyValuesHolder: void nCallTwoIntMethod(java.lang.Object,long,int,int)>(r0, l0, i1, i2);

        return;
    }

    static void access$1100(java.lang.Object, long, int, int, int, int)
    {
        java.lang.Object r0;
        long l0;
        int i1, i2, i3, i4;

        r0 := @parameter0: java.lang.Object;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        staticinvoke <android.animation.PropertyValuesHolder: void nCallFourIntMethod(java.lang.Object,long,int,int,int,int)>(r0, l0, i1, i2, i3, i4);

        return;
    }

    static void access$1200(java.lang.Object, long, int[])
    {
        java.lang.Object r0;
        long l0;
        int[] r1;

        r0 := @parameter0: java.lang.Object;

        l0 := @parameter1: long;

        r1 := @parameter2: int[];

        staticinvoke <android.animation.PropertyValuesHolder: void nCallMultipleIntMethod(java.lang.Object,long,int[])>(r0, l0, r1);

        return;
    }

    static long access$1300(java.lang.Class, java.lang.String, int)
    {
        java.lang.Class r0;
        java.lang.String r1;
        int i0;
        long $l1;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $l1 = staticinvoke <android.animation.PropertyValuesHolder: long nGetMultipleIntMethod(java.lang.Class,java.lang.String,int)>(r0, r1, i0);

        return $l1;
    }

    static void access$200(java.lang.Object, long, int)
    {
        java.lang.Object r0;
        long l0;
        int i1;

        r0 := @parameter0: java.lang.Object;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        staticinvoke <android.animation.PropertyValuesHolder: void nCallIntMethod(java.lang.Object,long,int)>(r0, l0, i1);

        return;
    }

    static long access$300(java.lang.Class, java.lang.String)
    {
        java.lang.Class r0;
        java.lang.String r1;
        long $l0;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.String;

        $l0 = staticinvoke <android.animation.PropertyValuesHolder: long nGetIntMethod(java.lang.Class,java.lang.String)>(r0, r1);

        return $l0;
    }

    static void access$400(java.lang.Object, long, float)
    {
        java.lang.Object r0;
        long l0;
        float f0;

        r0 := @parameter0: java.lang.Object;

        l0 := @parameter1: long;

        f0 := @parameter2: float;

        staticinvoke <android.animation.PropertyValuesHolder: void nCallFloatMethod(java.lang.Object,long,float)>(r0, l0, f0);

        return;
    }

    static long access$500(java.lang.Class, java.lang.String)
    {
        java.lang.Class r0;
        java.lang.String r1;
        long $l0;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.String;

        $l0 = staticinvoke <android.animation.PropertyValuesHolder: long nGetFloatMethod(java.lang.Class,java.lang.String)>(r0, r1);

        return $l0;
    }

    static void access$600(java.lang.Object, long, float, float)
    {
        java.lang.Object r0;
        long l0;
        float f0, f1;

        r0 := @parameter0: java.lang.Object;

        l0 := @parameter1: long;

        f0 := @parameter2: float;

        f1 := @parameter3: float;

        staticinvoke <android.animation.PropertyValuesHolder: void nCallTwoFloatMethod(java.lang.Object,long,float,float)>(r0, l0, f0, f1);

        return;
    }

    static void access$700(java.lang.Object, long, float, float, float, float)
    {
        java.lang.Object r0;
        long l0;
        float f0, f1, f2, f3;

        r0 := @parameter0: java.lang.Object;

        l0 := @parameter1: long;

        f0 := @parameter2: float;

        f1 := @parameter3: float;

        f2 := @parameter4: float;

        f3 := @parameter5: float;

        staticinvoke <android.animation.PropertyValuesHolder: void nCallFourFloatMethod(java.lang.Object,long,float,float,float,float)>(r0, l0, f0, f1, f2, f3);

        return;
    }

    static void access$800(java.lang.Object, long, float[])
    {
        java.lang.Object r0;
        long l0;
        float[] r1;

        r0 := @parameter0: java.lang.Object;

        l0 := @parameter1: long;

        r1 := @parameter2: float[];

        staticinvoke <android.animation.PropertyValuesHolder: void nCallMultipleFloatMethod(java.lang.Object,long,float[])>(r0, l0, r1);

        return;
    }

    static long access$900(java.lang.Class, java.lang.String, int)
    {
        java.lang.Class r0;
        java.lang.String r1;
        int i0;
        long $l1;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $l1 = staticinvoke <android.animation.PropertyValuesHolder: long nGetMultipleFloatMethod(java.lang.Class,java.lang.String,int)>(r0, r1, i0);

        return $l1;
    }

    private java.lang.Object convertBack(java.lang.Object)
    {
        android.animation.PropertyValuesHolder r0;
        android.animation.TypeConverter r1, $r4;
        boolean $z0;
        java.lang.StringBuilder $r2;
        java.lang.Class $r5;
        java.lang.String $r6, $r10;
        java.lang.IllegalArgumentException $r9;
        android.animation.BidirectionalTypeConverter $r11;
        java.lang.Object r12, r13;

        r0 := @this: android.animation.PropertyValuesHolder;

        r12 := @parameter0: java.lang.Object;

        r1 = r0.<android.animation.PropertyValuesHolder: android.animation.TypeConverter mConverter>;

        r13 = r12;

        if r1 == null goto label2;

        $z0 = r1 instanceof android.animation.BidirectionalTypeConverter;

        if $z0 == 0 goto label1;

        $r11 = (android.animation.BidirectionalTypeConverter) r1;

        r13 = virtualinvoke $r11.<android.animation.BidirectionalTypeConverter: java.lang.Object convertBack(java.lang.Object)>(r12);

        goto label2;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Converter ");

        $r4 = r0.<android.animation.PropertyValuesHolder: android.animation.TypeConverter mConverter>;

        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" must be a BidirectionalTypeConverter");

        $r9 = new java.lang.IllegalArgumentException;

        $r10 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r9;

     label2:
        return r13;
    }

    static java.lang.String getMethodName(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, $r6, r7;
        char c0, $c2;
        int $i1;
        java.lang.StringBuilder $r2;

        r0 := @parameter0: java.lang.String;

        r7 := @parameter1: java.lang.String;

        if r7 == null goto label2;

        $i1 = virtualinvoke r7.<java.lang.String: int length()>();

        if $i1 != 0 goto label1;

        goto label2;

     label1:
        $c2 = virtualinvoke r7.<java.lang.String: char charAt(int)>(0);

        c0 = staticinvoke <java.lang.Character: char toUpperCase(char)>($c2);

        r1 = virtualinvoke r7.<java.lang.String: java.lang.String substring(int)>(1);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;

     label2:
        return r0;
    }

    private java.lang.reflect.Method getPropertyFunction(java.lang.Class, java.lang.String, java.lang.Class)
    {
        android.animation.PropertyValuesHolder r0;
        java.lang.Class r1, r3, r6;
        java.lang.String r2, r4, $r7, $r10, $r11, $r17;
        java.lang.Class[] r5, r26;
        int i0, i2;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r8;
        android.animation.TypeConverter $r18;
        java.lang.Throwable $r19, $r20;
        java.lang.reflect.Method r21, r22, r23, r24, r27;

        r0 := @this: android.animation.PropertyValuesHolder;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Class;

        r21 = null;

        r22 = null;

        $r7 = r0.<android.animation.PropertyValuesHolder: java.lang.String mPropertyName>;

        r4 = staticinvoke <android.animation.PropertyValuesHolder: java.lang.String getMethodName(java.lang.String,java.lang.String)>(r2, $r7);

        if r3 != null goto label05;

     label01:
        r23 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r4, null);

     label02:
        r22 = r23;

     label03:
        r24 = r22;

        goto label18;

     label04:
        $r20 := @caughtexception;

        goto label03;

     label05:
        r5 = newarray (java.lang.Class)[1];

        $z0 = virtualinvoke r3.<java.lang.Object: boolean equals(java.lang.Object)>(class "Ljava/lang/Float;");

        if $z0 == 0 goto label06;

        r26 = <android.animation.PropertyValuesHolder: java.lang.Class[] FLOAT_VARIANTS>;

        goto label09;

     label06:
        $z1 = virtualinvoke r3.<java.lang.Object: boolean equals(java.lang.Object)>(class "Ljava/lang/Integer;");

        if $z1 == 0 goto label07;

        r26 = <android.animation.PropertyValuesHolder: java.lang.Class[] INTEGER_VARIANTS>;

        goto label09;

     label07:
        $z2 = virtualinvoke r3.<java.lang.Object: boolean equals(java.lang.Object)>(class "Ljava/lang/Double;");

        if $z2 == 0 goto label08;

        r26 = <android.animation.PropertyValuesHolder: java.lang.Class[] DOUBLE_VARIANTS>;

        goto label09;

     label08:
        r26 = newarray (java.lang.Class)[1];

        r26[0] = r3;

     label09:
        i0 = lengthof r26;

        i2 = 0;

     label10:
        r24 = r21;

        if i2 >= i0 goto label18;

        r6 = r26[i2];

        r5[0] = r6;

     label11:
        r27 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r4, r5);

     label12:
        r21 = r27;

     label13:
        $r18 = r0.<android.animation.PropertyValuesHolder: android.animation.TypeConverter mConverter>;

        if $r18 != null goto label16;

     label14:
        r21 = r27;

     label15:
        r0.<android.animation.PropertyValuesHolder: java.lang.Class mValueType> = r6;

     label16:
        return r27;

     label17:
        $r19 := @caughtexception;

        i2 = i2 + 1;

        goto label10;

     label18:
        if r24 != null goto label19;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Method ");

        $r10 = r0.<android.animation.PropertyValuesHolder: java.lang.String mPropertyName>;

        $r11 = staticinvoke <android.animation.PropertyValuesHolder: java.lang.String getMethodName(java.lang.String,java.lang.String)>(r2, $r10);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("() with type ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not found on target class ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r17 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PropertyValuesHolder", $r17);

     label19:
        return r24;

        catch java.lang.NoSuchMethodException from label01 to label02 with label04;
        catch java.lang.NoSuchMethodException from label11 to label12 with label17;
        catch java.lang.NoSuchMethodException from label13 to label14 with label17;
        catch java.lang.NoSuchMethodException from label15 to label16 with label17;
    }

    private static native void nCallFloatMethod(java.lang.Object, long, float);

    private static native void nCallFourFloatMethod(java.lang.Object, long, float, float, float, float);

    private static native void nCallFourIntMethod(java.lang.Object, long, int, int, int, int);

    private static native void nCallIntMethod(java.lang.Object, long, int);

    private static native void nCallMultipleFloatMethod(java.lang.Object, long, float[]);

    private static native void nCallMultipleIntMethod(java.lang.Object, long, int[]);

    private static native void nCallTwoFloatMethod(java.lang.Object, long, float, float);

    private static native void nCallTwoIntMethod(java.lang.Object, long, int, int);

    private static native long nGetFloatMethod(java.lang.Class, java.lang.String);

    private static native long nGetIntMethod(java.lang.Class, java.lang.String);

    private static native long nGetMultipleFloatMethod(java.lang.Class, java.lang.String, int);

    private static native long nGetMultipleIntMethod(java.lang.Class, java.lang.String, int);

    public static transient android.animation.PropertyValuesHolder ofFloat(android.util.Property, float[])
    {
        android.util.Property r0;
        float[] r1;
        android.animation.PropertyValuesHolder$FloatPropertyValuesHolder $r2;

        r0 := @parameter0: android.util.Property;

        r1 := @parameter1: float[];

        $r2 = new android.animation.PropertyValuesHolder$FloatPropertyValuesHolder;

        specialinvoke $r2.<android.animation.PropertyValuesHolder$FloatPropertyValuesHolder: void <init>(android.util.Property,float[])>(r0, r1);

        return $r2;
    }

    public static transient android.animation.PropertyValuesHolder ofFloat(java.lang.String, float[])
    {
        java.lang.String r0;
        float[] r1;
        android.animation.PropertyValuesHolder$FloatPropertyValuesHolder $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: float[];

        $r2 = new android.animation.PropertyValuesHolder$FloatPropertyValuesHolder;

        specialinvoke $r2.<android.animation.PropertyValuesHolder$FloatPropertyValuesHolder: void <init>(java.lang.String,float[])>(r0, r1);

        return $r2;
    }

    public static transient android.animation.PropertyValuesHolder ofInt(android.util.Property, int[])
    {
        android.util.Property r0;
        int[] r1;
        android.animation.PropertyValuesHolder$IntPropertyValuesHolder $r2;

        r0 := @parameter0: android.util.Property;

        r1 := @parameter1: int[];

        $r2 = new android.animation.PropertyValuesHolder$IntPropertyValuesHolder;

        specialinvoke $r2.<android.animation.PropertyValuesHolder$IntPropertyValuesHolder: void <init>(android.util.Property,int[])>(r0, r1);

        return $r2;
    }

    public static transient android.animation.PropertyValuesHolder ofInt(java.lang.String, int[])
    {
        java.lang.String r0;
        int[] r1;
        android.animation.PropertyValuesHolder$IntPropertyValuesHolder $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: int[];

        $r2 = new android.animation.PropertyValuesHolder$IntPropertyValuesHolder;

        specialinvoke $r2.<android.animation.PropertyValuesHolder$IntPropertyValuesHolder: void <init>(java.lang.String,int[])>(r0, r1);

        return $r2;
    }

    public static transient android.animation.PropertyValuesHolder ofKeyframe(android.util.Property, android.animation.Keyframe[])
    {
        android.util.Property r0;
        android.animation.Keyframe[] r1;
        android.animation.KeyframeSet $r2;
        android.animation.PropertyValuesHolder $r3;

        r0 := @parameter0: android.util.Property;

        r1 := @parameter1: android.animation.Keyframe[];

        $r2 = staticinvoke <android.animation.KeyframeSet: android.animation.KeyframeSet ofKeyframe(android.animation.Keyframe[])>(r1);

        $r3 = staticinvoke <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofKeyframes(android.util.Property,android.animation.Keyframes)>(r0, $r2);

        return $r3;
    }

    public static transient android.animation.PropertyValuesHolder ofKeyframe(java.lang.String, android.animation.Keyframe[])
    {
        java.lang.String r0;
        android.animation.Keyframe[] r1;
        android.animation.KeyframeSet $r2;
        android.animation.PropertyValuesHolder $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: android.animation.Keyframe[];

        $r2 = staticinvoke <android.animation.KeyframeSet: android.animation.KeyframeSet ofKeyframe(android.animation.Keyframe[])>(r1);

        $r3 = staticinvoke <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofKeyframes(java.lang.String,android.animation.Keyframes)>(r0, $r2);

        return $r3;
    }

    static android.animation.PropertyValuesHolder ofKeyframes(android.util.Property, android.animation.Keyframes)
    {
        android.animation.Keyframes r0;
        boolean $z0, $z1;
        android.animation.PropertyValuesHolder $r1;
        java.lang.Class $r2;
        android.animation.PropertyValuesHolder$FloatPropertyValuesHolder $r3;
        android.animation.Keyframes$FloatKeyframes $r4;
        android.animation.PropertyValuesHolder$IntPropertyValuesHolder $r5;
        android.animation.Keyframes$IntKeyframes $r6;
        android.util.Property r7;

        r7 := @parameter0: android.util.Property;

        r0 := @parameter1: android.animation.Keyframes;

        $z0 = r0 instanceof android.animation.Keyframes$IntKeyframes;

        if $z0 == 0 goto label1;

        $r5 = new android.animation.PropertyValuesHolder$IntPropertyValuesHolder;

        $r6 = (android.animation.Keyframes$IntKeyframes) r0;

        specialinvoke $r5.<android.animation.PropertyValuesHolder$IntPropertyValuesHolder: void <init>(android.util.Property,android.animation.Keyframes$IntKeyframes)>(r7, $r6);

        return $r5;

     label1:
        $z1 = r0 instanceof android.animation.Keyframes$FloatKeyframes;

        if $z1 == 0 goto label2;

        $r3 = new android.animation.PropertyValuesHolder$FloatPropertyValuesHolder;

        $r4 = (android.animation.Keyframes$FloatKeyframes) r0;

        specialinvoke $r3.<android.animation.PropertyValuesHolder$FloatPropertyValuesHolder: void <init>(android.util.Property,android.animation.Keyframes$FloatKeyframes)>(r7, $r4);

        return $r3;

     label2:
        $r1 = new android.animation.PropertyValuesHolder;

        specialinvoke $r1.<android.animation.PropertyValuesHolder: void <init>(android.util.Property)>(r7);

        $r1.<android.animation.PropertyValuesHolder: android.animation.Keyframes mKeyframes> = r0;

        $r2 = interfaceinvoke r0.<android.animation.Keyframes: java.lang.Class getType()>();

        $r1.<android.animation.PropertyValuesHolder: java.lang.Class mValueType> = $r2;

        return $r1;
    }

    static android.animation.PropertyValuesHolder ofKeyframes(java.lang.String, android.animation.Keyframes)
    {
        android.animation.Keyframes r0;
        boolean $z0, $z1;
        android.animation.PropertyValuesHolder $r1;
        java.lang.Class $r2;
        android.animation.PropertyValuesHolder$FloatPropertyValuesHolder $r3;
        android.animation.Keyframes$FloatKeyframes $r4;
        android.animation.PropertyValuesHolder$IntPropertyValuesHolder $r5;
        android.animation.Keyframes$IntKeyframes $r6;
        java.lang.String r7;

        r7 := @parameter0: java.lang.String;

        r0 := @parameter1: android.animation.Keyframes;

        $z0 = r0 instanceof android.animation.Keyframes$IntKeyframes;

        if $z0 == 0 goto label1;

        $r5 = new android.animation.PropertyValuesHolder$IntPropertyValuesHolder;

        $r6 = (android.animation.Keyframes$IntKeyframes) r0;

        specialinvoke $r5.<android.animation.PropertyValuesHolder$IntPropertyValuesHolder: void <init>(java.lang.String,android.animation.Keyframes$IntKeyframes)>(r7, $r6);

        return $r5;

     label1:
        $z1 = r0 instanceof android.animation.Keyframes$FloatKeyframes;

        if $z1 == 0 goto label2;

        $r3 = new android.animation.PropertyValuesHolder$FloatPropertyValuesHolder;

        $r4 = (android.animation.Keyframes$FloatKeyframes) r0;

        specialinvoke $r3.<android.animation.PropertyValuesHolder$FloatPropertyValuesHolder: void <init>(java.lang.String,android.animation.Keyframes$FloatKeyframes)>(r7, $r4);

        return $r3;

     label2:
        $r1 = new android.animation.PropertyValuesHolder;

        specialinvoke $r1.<android.animation.PropertyValuesHolder: void <init>(java.lang.String)>(r7);

        $r1.<android.animation.PropertyValuesHolder: android.animation.Keyframes mKeyframes> = r0;

        $r2 = interfaceinvoke r0.<android.animation.Keyframes: java.lang.Class getType()>();

        $r1.<android.animation.PropertyValuesHolder: java.lang.Class mValueType> = $r2;

        return $r1;
    }

    public static transient android.animation.PropertyValuesHolder ofMultiFloat(java.lang.String, android.animation.TypeConverter, android.animation.TypeEvaluator, android.animation.Keyframe[])
    {
        java.lang.String r0;
        android.animation.TypeConverter r1;
        android.animation.TypeEvaluator r2;
        android.animation.Keyframe[] r3;
        android.animation.PropertyValuesHolder$MultiFloatValuesHolder $r4;
        android.animation.KeyframeSet $r5;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: android.animation.TypeConverter;

        r2 := @parameter2: android.animation.TypeEvaluator;

        r3 := @parameter3: android.animation.Keyframe[];

        $r4 = new android.animation.PropertyValuesHolder$MultiFloatValuesHolder;

        $r5 = staticinvoke <android.animation.KeyframeSet: android.animation.KeyframeSet ofKeyframe(android.animation.Keyframe[])>(r3);

        specialinvoke $r4.<android.animation.PropertyValuesHolder$MultiFloatValuesHolder: void <init>(java.lang.String,android.animation.TypeConverter,android.animation.TypeEvaluator,android.animation.Keyframes)>(r0, r1, r2, $r5);

        return $r4;
    }

    public static transient android.animation.PropertyValuesHolder ofMultiFloat(java.lang.String, android.animation.TypeConverter, android.animation.TypeEvaluator, java.lang.Object[])
    {
        java.lang.String r0;
        android.animation.TypeConverter r1;
        android.animation.TypeEvaluator r2;
        java.lang.Object[] r3;
        android.animation.PropertyValuesHolder$MultiFloatValuesHolder $r4;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: android.animation.TypeConverter;

        r2 := @parameter2: android.animation.TypeEvaluator;

        r3 := @parameter3: java.lang.Object[];

        $r4 = new android.animation.PropertyValuesHolder$MultiFloatValuesHolder;

        specialinvoke $r4.<android.animation.PropertyValuesHolder$MultiFloatValuesHolder: void <init>(java.lang.String,android.animation.TypeConverter,android.animation.TypeEvaluator,java.lang.Object[])>(r0, r1, r2, r3);

        return $r4;
    }

    public static android.animation.PropertyValuesHolder ofMultiFloat(java.lang.String, android.graphics.Path)
    {
        java.lang.String r0;
        android.animation.PropertyValuesHolder$MultiFloatValuesHolder $r1;
        android.animation.PropertyValuesHolder$PointFToFloatArray $r2;
        android.graphics.Path r3;
        android.animation.PathKeyframes r4;

        r0 := @parameter0: java.lang.String;

        r3 := @parameter1: android.graphics.Path;

        r4 = staticinvoke <android.animation.KeyframeSet: android.animation.PathKeyframes ofPath(android.graphics.Path)>(r3);

        $r1 = new android.animation.PropertyValuesHolder$MultiFloatValuesHolder;

        $r2 = new android.animation.PropertyValuesHolder$PointFToFloatArray;

        specialinvoke $r2.<android.animation.PropertyValuesHolder$PointFToFloatArray: void <init>()>();

        specialinvoke $r1.<android.animation.PropertyValuesHolder$MultiFloatValuesHolder: void <init>(java.lang.String,android.animation.TypeConverter,android.animation.TypeEvaluator,android.animation.Keyframes)>(r0, $r2, null, r4);

        return $r1;
    }

    public static android.animation.PropertyValuesHolder ofMultiFloat(java.lang.String, float[][])
    {
        java.lang.String r0;
        float[][] r1;
        int i0, $i1, $i2, i3, i4;
        java.lang.IllegalArgumentException $r2, $r8, $r10;
        android.animation.PropertyValuesHolder$MultiFloatValuesHolder $r3;
        android.animation.FloatArrayEvaluator $r4;
        float[] $r5, $r7, $r9;
        java.lang.Object[] $r6;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: float[][];

        $i1 = lengthof r1;

        if $i1 < 2 goto label7;

        i3 = 0;

        i4 = 0;

     label1:
        $i2 = lengthof r1;

        if i4 >= $i2 goto label6;

        $r7 = r1[i4];

        if $r7 == null goto label5;

        $r9 = r1[i4];

        i0 = lengthof $r9;

        if i4 != 0 goto label2;

        i3 = i0;

        goto label3;

     label2:
        if i0 != i3 goto label4;

     label3:
        i4 = i4 + 1;

        goto label1;

     label4:
        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Values must all have the same length");

        throw $r10;

     label5:
        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("values must not be null");

        throw $r8;

     label6:
        $r3 = new android.animation.PropertyValuesHolder$MultiFloatValuesHolder;

        $r4 = new android.animation.FloatArrayEvaluator;

        $r5 = newarray (float)[i3];

        specialinvoke $r4.<android.animation.FloatArrayEvaluator: void <init>(float[])>($r5);

        $r6 = (java.lang.Object[]) r1;

        specialinvoke $r3.<android.animation.PropertyValuesHolder$MultiFloatValuesHolder: void <init>(java.lang.String,android.animation.TypeConverter,android.animation.TypeEvaluator,java.lang.Object[])>(r0, null, $r4, $r6);

        return $r3;

     label7:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("At least 2 values must be supplied");

        throw $r2;
    }

    public static transient android.animation.PropertyValuesHolder ofMultiInt(java.lang.String, android.animation.TypeConverter, android.animation.TypeEvaluator, android.animation.Keyframe[])
    {
        java.lang.String r0;
        android.animation.TypeConverter r1;
        android.animation.TypeEvaluator r2;
        android.animation.Keyframe[] r3;
        android.animation.PropertyValuesHolder$MultiIntValuesHolder $r4;
        android.animation.KeyframeSet $r5;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: android.animation.TypeConverter;

        r2 := @parameter2: android.animation.TypeEvaluator;

        r3 := @parameter3: android.animation.Keyframe[];

        $r4 = new android.animation.PropertyValuesHolder$MultiIntValuesHolder;

        $r5 = staticinvoke <android.animation.KeyframeSet: android.animation.KeyframeSet ofKeyframe(android.animation.Keyframe[])>(r3);

        specialinvoke $r4.<android.animation.PropertyValuesHolder$MultiIntValuesHolder: void <init>(java.lang.String,android.animation.TypeConverter,android.animation.TypeEvaluator,android.animation.Keyframes)>(r0, r1, r2, $r5);

        return $r4;
    }

    public static transient android.animation.PropertyValuesHolder ofMultiInt(java.lang.String, android.animation.TypeConverter, android.animation.TypeEvaluator, java.lang.Object[])
    {
        java.lang.String r0;
        android.animation.TypeConverter r1;
        android.animation.TypeEvaluator r2;
        java.lang.Object[] r3;
        android.animation.PropertyValuesHolder$MultiIntValuesHolder $r4;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: android.animation.TypeConverter;

        r2 := @parameter2: android.animation.TypeEvaluator;

        r3 := @parameter3: java.lang.Object[];

        $r4 = new android.animation.PropertyValuesHolder$MultiIntValuesHolder;

        specialinvoke $r4.<android.animation.PropertyValuesHolder$MultiIntValuesHolder: void <init>(java.lang.String,android.animation.TypeConverter,android.animation.TypeEvaluator,java.lang.Object[])>(r0, r1, r2, r3);

        return $r4;
    }

    public static android.animation.PropertyValuesHolder ofMultiInt(java.lang.String, android.graphics.Path)
    {
        java.lang.String r0;
        android.animation.PropertyValuesHolder$MultiIntValuesHolder $r1;
        android.animation.PropertyValuesHolder$PointFToIntArray $r2;
        android.graphics.Path r3;
        android.animation.PathKeyframes r4;

        r0 := @parameter0: java.lang.String;

        r3 := @parameter1: android.graphics.Path;

        r4 = staticinvoke <android.animation.KeyframeSet: android.animation.PathKeyframes ofPath(android.graphics.Path)>(r3);

        $r1 = new android.animation.PropertyValuesHolder$MultiIntValuesHolder;

        $r2 = new android.animation.PropertyValuesHolder$PointFToIntArray;

        specialinvoke $r2.<android.animation.PropertyValuesHolder$PointFToIntArray: void <init>()>();

        specialinvoke $r1.<android.animation.PropertyValuesHolder$MultiIntValuesHolder: void <init>(java.lang.String,android.animation.TypeConverter,android.animation.TypeEvaluator,android.animation.Keyframes)>(r0, $r2, null, r4);

        return $r1;
    }

    public static android.animation.PropertyValuesHolder ofMultiInt(java.lang.String, int[][])
    {
        java.lang.String r0;
        int[][] r1;
        int i0, $i1, $i2, i3, i4;
        java.lang.IllegalArgumentException $r2, $r8, $r10;
        android.animation.PropertyValuesHolder$MultiIntValuesHolder $r3;
        android.animation.IntArrayEvaluator $r4;
        int[] $r5, $r7, $r9;
        java.lang.Object[] $r6;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: int[][];

        $i1 = lengthof r1;

        if $i1 < 2 goto label7;

        i3 = 0;

        i4 = 0;

     label1:
        $i2 = lengthof r1;

        if i4 >= $i2 goto label6;

        $r7 = r1[i4];

        if $r7 == null goto label5;

        $r9 = r1[i4];

        i0 = lengthof $r9;

        if i4 != 0 goto label2;

        i3 = i0;

        goto label3;

     label2:
        if i0 != i3 goto label4;

     label3:
        i4 = i4 + 1;

        goto label1;

     label4:
        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Values must all have the same length");

        throw $r10;

     label5:
        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("values must not be null");

        throw $r8;

     label6:
        $r3 = new android.animation.PropertyValuesHolder$MultiIntValuesHolder;

        $r4 = new android.animation.IntArrayEvaluator;

        $r5 = newarray (int)[i3];

        specialinvoke $r4.<android.animation.IntArrayEvaluator: void <init>(int[])>($r5);

        $r6 = (java.lang.Object[]) r1;

        specialinvoke $r3.<android.animation.PropertyValuesHolder$MultiIntValuesHolder: void <init>(java.lang.String,android.animation.TypeConverter,android.animation.TypeEvaluator,java.lang.Object[])>(r0, null, $r4, $r6);

        return $r3;

     label7:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("At least 2 values must be supplied");

        throw $r2;
    }

    public static transient android.animation.PropertyValuesHolder ofObject(android.util.Property, android.animation.TypeConverter, android.animation.TypeEvaluator, java.lang.Object[])
    {
        android.animation.TypeConverter r0;
        android.animation.TypeEvaluator r1;
        java.lang.Object[] r2;
        android.animation.PropertyValuesHolder $r3;
        android.util.Property r4;

        r4 := @parameter0: android.util.Property;

        r0 := @parameter1: android.animation.TypeConverter;

        r1 := @parameter2: android.animation.TypeEvaluator;

        r2 := @parameter3: java.lang.Object[];

        $r3 = new android.animation.PropertyValuesHolder;

        specialinvoke $r3.<android.animation.PropertyValuesHolder: void <init>(android.util.Property)>(r4);

        virtualinvoke $r3.<android.animation.PropertyValuesHolder: void setConverter(android.animation.TypeConverter)>(r0);

        virtualinvoke $r3.<android.animation.PropertyValuesHolder: void setObjectValues(java.lang.Object[])>(r2);

        virtualinvoke $r3.<android.animation.PropertyValuesHolder: void setEvaluator(android.animation.TypeEvaluator)>(r1);

        return $r3;
    }

    public static android.animation.PropertyValuesHolder ofObject(android.util.Property, android.animation.TypeConverter, android.graphics.Path)
    {
        android.animation.TypeConverter r0;
        android.graphics.Path r1;
        android.animation.PropertyValuesHolder $r2;
        android.animation.PathKeyframes $r3;
        android.util.Property r4;

        r4 := @parameter0: android.util.Property;

        r0 := @parameter1: android.animation.TypeConverter;

        r1 := @parameter2: android.graphics.Path;

        $r2 = new android.animation.PropertyValuesHolder;

        specialinvoke $r2.<android.animation.PropertyValuesHolder: void <init>(android.util.Property)>(r4);

        $r3 = staticinvoke <android.animation.KeyframeSet: android.animation.PathKeyframes ofPath(android.graphics.Path)>(r1);

        $r2.<android.animation.PropertyValuesHolder: android.animation.Keyframes mKeyframes> = $r3;

        $r2.<android.animation.PropertyValuesHolder: java.lang.Class mValueType> = class "Landroid/graphics/PointF;";

        virtualinvoke $r2.<android.animation.PropertyValuesHolder: void setConverter(android.animation.TypeConverter)>(r0);

        return $r2;
    }

    public static transient android.animation.PropertyValuesHolder ofObject(android.util.Property, android.animation.TypeEvaluator, java.lang.Object[])
    {
        android.animation.TypeEvaluator r0;
        java.lang.Object[] r1;
        android.animation.PropertyValuesHolder $r2;
        android.util.Property r3;

        r3 := @parameter0: android.util.Property;

        r0 := @parameter1: android.animation.TypeEvaluator;

        r1 := @parameter2: java.lang.Object[];

        $r2 = new android.animation.PropertyValuesHolder;

        specialinvoke $r2.<android.animation.PropertyValuesHolder: void <init>(android.util.Property)>(r3);

        virtualinvoke $r2.<android.animation.PropertyValuesHolder: void setObjectValues(java.lang.Object[])>(r1);

        virtualinvoke $r2.<android.animation.PropertyValuesHolder: void setEvaluator(android.animation.TypeEvaluator)>(r0);

        return $r2;
    }

    public static android.animation.PropertyValuesHolder ofObject(java.lang.String, android.animation.TypeConverter, android.graphics.Path)
    {
        android.animation.TypeConverter r0;
        android.graphics.Path r1;
        android.animation.PropertyValuesHolder $r2;
        android.animation.PathKeyframes $r3;
        java.lang.String r4;

        r4 := @parameter0: java.lang.String;

        r0 := @parameter1: android.animation.TypeConverter;

        r1 := @parameter2: android.graphics.Path;

        $r2 = new android.animation.PropertyValuesHolder;

        specialinvoke $r2.<android.animation.PropertyValuesHolder: void <init>(java.lang.String)>(r4);

        $r3 = staticinvoke <android.animation.KeyframeSet: android.animation.PathKeyframes ofPath(android.graphics.Path)>(r1);

        $r2.<android.animation.PropertyValuesHolder: android.animation.Keyframes mKeyframes> = $r3;

        $r2.<android.animation.PropertyValuesHolder: java.lang.Class mValueType> = class "Landroid/graphics/PointF;";

        virtualinvoke $r2.<android.animation.PropertyValuesHolder: void setConverter(android.animation.TypeConverter)>(r0);

        return $r2;
    }

    public static transient android.animation.PropertyValuesHolder ofObject(java.lang.String, android.animation.TypeEvaluator, java.lang.Object[])
    {
        android.animation.TypeEvaluator r0;
        java.lang.Object[] r1;
        android.animation.PropertyValuesHolder $r2;
        java.lang.String r3;

        r3 := @parameter0: java.lang.String;

        r0 := @parameter1: android.animation.TypeEvaluator;

        r1 := @parameter2: java.lang.Object[];

        $r2 = new android.animation.PropertyValuesHolder;

        specialinvoke $r2.<android.animation.PropertyValuesHolder: void <init>(java.lang.String)>(r3);

        virtualinvoke $r2.<android.animation.PropertyValuesHolder: void setObjectValues(java.lang.Object[])>(r1);

        virtualinvoke $r2.<android.animation.PropertyValuesHolder: void setEvaluator(android.animation.TypeEvaluator)>(r0);

        return $r2;
    }

    private void setupGetter(java.lang.Class)
    {
        android.animation.PropertyValuesHolder r0;
        java.lang.Class r1;
        java.util.HashMap $r2;
        java.lang.reflect.Method $r3;

        r0 := @this: android.animation.PropertyValuesHolder;

        r1 := @parameter0: java.lang.Class;

        $r2 = <android.animation.PropertyValuesHolder: java.util.HashMap sGetterPropertyMap>;

        $r3 = specialinvoke r0.<android.animation.PropertyValuesHolder: java.lang.reflect.Method setupSetterOrGetter(java.lang.Class,java.util.HashMap,java.lang.String,java.lang.Class)>(r1, $r2, "get", null);

        r0.<android.animation.PropertyValuesHolder: java.lang.reflect.Method mGetter> = $r3;

        return;
    }

    private java.lang.reflect.Method setupSetterOrGetter(java.lang.Class, java.util.HashMap, java.lang.String, java.lang.Class)
    {
        android.animation.PropertyValuesHolder r0;
        java.util.HashMap r1, r3, r13;
        java.lang.Class r2, r10;
        boolean z0, z1;
        java.lang.Object $r4, $r8;
        java.lang.String $r5, $r6, $r7, r11;
        java.lang.Throwable $r9;
        java.lang.reflect.Method r12;

        r0 := @this: android.animation.PropertyValuesHolder;

        r10 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.util.HashMap;

        r11 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.Class;

        entermonitor r1;

     label01:
        $r4 = virtualinvoke r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r10);

        r3 = (java.util.HashMap) $r4;

     label02:
        z1 = 0;

        r12 = null;

        if r3 == null goto label07;

     label03:
        $r6 = r0.<android.animation.PropertyValuesHolder: java.lang.String mPropertyName>;

        z0 = virtualinvoke r3.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r6);

     label04:
        r12 = null;

        z1 = z0;

        if z0 == 0 goto label07;

     label05:
        $r7 = r0.<android.animation.PropertyValuesHolder: java.lang.String mPropertyName>;

        $r8 = virtualinvoke r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r7);

        r12 = (java.lang.reflect.Method) $r8;

     label06:
        z1 = z0;

     label07:
        if z1 != 0 goto label13;

     label08:
        r12 = specialinvoke r0.<android.animation.PropertyValuesHolder: java.lang.reflect.Method getPropertyFunction(java.lang.Class,java.lang.String,java.lang.Class)>(r10, r11, r2);

     label09:
        r13 = r3;

        if r3 != null goto label12;

     label10:
        r13 = new java.util.HashMap;

        specialinvoke r13.<java.util.HashMap: void <init>()>();

     label11:
        virtualinvoke r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r10, r13);

     label12:
        $r5 = r0.<android.animation.PropertyValuesHolder: java.lang.String mPropertyName>;

        virtualinvoke r13.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, r12);

     label13:
        exitmonitor r1;

     label14:
        return r12;

     label15:
        $r9 := @caughtexception;

     label16:
        exitmonitor r1;

     label17:
        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label05 to label06 with label15;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.lang.Throwable from label11 to label12 with label15;
        catch java.lang.Throwable from label12 to label13 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label16 to label17 with label15;
    }

    private void setupValue(java.lang.Object, android.animation.Keyframe)
    {
        android.animation.PropertyValuesHolder r0;
        android.animation.Keyframe r1;
        android.util.Property r2;
        java.lang.reflect.Method $r3, $r5, $r9;
        java.lang.Object[] $r4;
        java.lang.Object $r6, $r7, $r10, $r11, r16;
        java.lang.Class $r8;
        java.lang.Throwable $r12, $r14;
        java.lang.String $r13, $r15;
        java.lang.IllegalAccessException r19;
        java.lang.reflect.InvocationTargetException r20;

        r0 := @this: android.animation.PropertyValuesHolder;

        r16 := @parameter0: java.lang.Object;

        r1 := @parameter1: android.animation.Keyframe;

        r2 = r0.<android.animation.PropertyValuesHolder: android.util.Property mProperty>;

        if r2 == null goto label1;

        $r10 = virtualinvoke r2.<android.util.Property: java.lang.Object get(java.lang.Object)>(r16);

        $r11 = specialinvoke r0.<android.animation.PropertyValuesHolder: java.lang.Object convertBack(java.lang.Object)>($r10);

        virtualinvoke r1.<android.animation.Keyframe: void setValue(java.lang.Object)>($r11);

        goto label7;

     label1:
        $r3 = r0.<android.animation.PropertyValuesHolder: java.lang.reflect.Method mGetter>;

        if $r3 != null goto label3;

        $r8 = virtualinvoke r16.<java.lang.Object: java.lang.Class getClass()>();

        specialinvoke r0.<android.animation.PropertyValuesHolder: void setupGetter(java.lang.Class)>($r8);

        $r9 = r0.<android.animation.PropertyValuesHolder: java.lang.reflect.Method mGetter>;

        if $r9 != null goto label3;

     label2:
        return;

     label3:
        $r5 = r0.<android.animation.PropertyValuesHolder: java.lang.reflect.Method mGetter>;

        $r4 = newarray (java.lang.Object)[0];

        $r6 = virtualinvoke $r5.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r16, $r4);

        $r7 = specialinvoke r0.<android.animation.PropertyValuesHolder: java.lang.Object convertBack(java.lang.Object)>($r6);

        virtualinvoke r1.<android.animation.Keyframe: void setValue(java.lang.Object)>($r7);

     label4:
        goto label7;

     label5:
        $r12 := @caughtexception;

        r19 = (java.lang.IllegalAccessException) $r12;

        $r13 = virtualinvoke r19.<java.lang.IllegalAccessException: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("PropertyValuesHolder", $r13);

        goto label7;

     label6:
        $r14 := @caughtexception;

        r20 = (java.lang.reflect.InvocationTargetException) $r14;

        $r15 = virtualinvoke r20.<java.lang.reflect.InvocationTargetException: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("PropertyValuesHolder", $r15);

     label7:
        return;

        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label6;
        catch java.lang.IllegalAccessException from label1 to label2 with label5;
        catch java.lang.reflect.InvocationTargetException from label3 to label4 with label6;
        catch java.lang.IllegalAccessException from label3 to label4 with label5;
    }

    void calculateValue(float)
    {
        android.animation.PropertyValuesHolder r0;
        float f0;
        android.animation.TypeConverter r1;
        android.animation.Keyframes $r2;
        java.lang.Object r3;

        r0 := @this: android.animation.PropertyValuesHolder;

        f0 := @parameter0: float;

        $r2 = r0.<android.animation.PropertyValuesHolder: android.animation.Keyframes mKeyframes>;

        r3 = interfaceinvoke $r2.<android.animation.Keyframes: java.lang.Object getValue(float)>(f0);

        r1 = r0.<android.animation.PropertyValuesHolder: android.animation.TypeConverter mConverter>;

        if r1 != null goto label1;

        goto label2;

     label1:
        r3 = virtualinvoke r1.<android.animation.TypeConverter: java.lang.Object convert(java.lang.Object)>(r3);

     label2:
        r0.<android.animation.PropertyValuesHolder: java.lang.Object mAnimatedValue> = r3;

        return;
    }

    public android.animation.PropertyValuesHolder clone()
    {
        android.animation.PropertyValuesHolder r0, r8;
        java.lang.Object $r1;
        java.lang.String $r2;
        android.util.Property $r3;
        android.animation.Keyframes $r4, $r5;
        android.animation.TypeEvaluator $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.animation.PropertyValuesHolder;

     label1:
        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        r8 = (android.animation.PropertyValuesHolder) $r1;

        $r2 = r0.<android.animation.PropertyValuesHolder: java.lang.String mPropertyName>;

        r8.<android.animation.PropertyValuesHolder: java.lang.String mPropertyName> = $r2;

        $r3 = r0.<android.animation.PropertyValuesHolder: android.util.Property mProperty>;

        r8.<android.animation.PropertyValuesHolder: android.util.Property mProperty> = $r3;

        $r4 = r0.<android.animation.PropertyValuesHolder: android.animation.Keyframes mKeyframes>;

        $r5 = interfaceinvoke $r4.<android.animation.Keyframes: android.animation.Keyframes clone()>();

        r8.<android.animation.PropertyValuesHolder: android.animation.Keyframes mKeyframes> = $r5;

        $r6 = r0.<android.animation.PropertyValuesHolder: android.animation.TypeEvaluator mEvaluator>;

        r8.<android.animation.PropertyValuesHolder: android.animation.TypeEvaluator mEvaluator> = $r6;

     label2:
        return r8;

     label3:
        $r7 := @caughtexception;

        return null;

        catch java.lang.CloneNotSupportedException from label1 to label2 with label3;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        android.animation.PropertyValuesHolder r0, $r1;

        r0 := @this: android.animation.PropertyValuesHolder;

        $r1 = virtualinvoke r0.<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder clone()>();

        return $r1;
    }

    java.lang.Object getAnimatedValue()
    {
        android.animation.PropertyValuesHolder r0;
        java.lang.Object $r1;

        r0 := @this: android.animation.PropertyValuesHolder;

        $r1 = r0.<android.animation.PropertyValuesHolder: java.lang.Object mAnimatedValue>;

        return $r1;
    }

    public java.lang.String getPropertyName()
    {
        android.animation.PropertyValuesHolder r0;
        java.lang.String $r1;

        r0 := @this: android.animation.PropertyValuesHolder;

        $r1 = r0.<android.animation.PropertyValuesHolder: java.lang.String mPropertyName>;

        return $r1;
    }

    public void getPropertyValues(android.animation.PropertyValuesHolder$PropertyValues)
    {
        android.animation.PropertyValuesHolder r0;
        android.animation.PropertyValuesHolder$PropertyValues r1;
        android.animation.Keyframes r2, $r5, $r8, $r12;
        java.lang.String $r3;
        java.lang.Class $r4;
        java.lang.Object $r6, $r7, $r9, $r10, $r15, $r18;
        boolean $z0, $z1, $z2, $z3;
        java.util.List $r11, $r13;
        int $i0;
        android.util.PathParser$PathData $r14, $r16, $r17, $r19;
        android.animation.PropertyValuesHolder$1 $r20;

        r0 := @this: android.animation.PropertyValuesHolder;

        r1 := @parameter0: android.animation.PropertyValuesHolder$PropertyValues;

        virtualinvoke r0.<android.animation.PropertyValuesHolder: void init()>();

        $r3 = r0.<android.animation.PropertyValuesHolder: java.lang.String mPropertyName>;

        r1.<android.animation.PropertyValuesHolder$PropertyValues: java.lang.String propertyName> = $r3;

        $r4 = r0.<android.animation.PropertyValuesHolder: java.lang.Class mValueType>;

        r1.<android.animation.PropertyValuesHolder$PropertyValues: java.lang.Class type> = $r4;

        $r5 = r0.<android.animation.PropertyValuesHolder: android.animation.Keyframes mKeyframes>;

        $r6 = interfaceinvoke $r5.<android.animation.Keyframes: java.lang.Object getValue(float)>(0.0F);

        r1.<android.animation.PropertyValuesHolder$PropertyValues: java.lang.Object startValue> = $r6;

        $r7 = r1.<android.animation.PropertyValuesHolder$PropertyValues: java.lang.Object startValue>;

        $z0 = $r7 instanceof android.util.PathParser$PathData;

        if $z0 == 0 goto label1;

        $r17 = new android.util.PathParser$PathData;

        $r18 = r1.<android.animation.PropertyValuesHolder$PropertyValues: java.lang.Object startValue>;

        $r19 = (android.util.PathParser$PathData) $r18;

        specialinvoke $r17.<android.util.PathParser$PathData: void <init>(android.util.PathParser$PathData)>($r19);

        r1.<android.animation.PropertyValuesHolder$PropertyValues: java.lang.Object startValue> = $r17;

     label1:
        $r8 = r0.<android.animation.PropertyValuesHolder: android.animation.Keyframes mKeyframes>;

        $r9 = interfaceinvoke $r8.<android.animation.Keyframes: java.lang.Object getValue(float)>(1.0F);

        r1.<android.animation.PropertyValuesHolder$PropertyValues: java.lang.Object endValue> = $r9;

        $r10 = r1.<android.animation.PropertyValuesHolder$PropertyValues: java.lang.Object endValue>;

        $z1 = $r10 instanceof android.util.PathParser$PathData;

        if $z1 == 0 goto label2;

        $r14 = new android.util.PathParser$PathData;

        $r15 = r1.<android.animation.PropertyValuesHolder$PropertyValues: java.lang.Object endValue>;

        $r16 = (android.util.PathParser$PathData) $r15;

        specialinvoke $r14.<android.util.PathParser$PathData: void <init>(android.util.PathParser$PathData)>($r16);

        r1.<android.animation.PropertyValuesHolder$PropertyValues: java.lang.Object endValue> = $r14;

     label2:
        r2 = r0.<android.animation.PropertyValuesHolder: android.animation.Keyframes mKeyframes>;

        $z2 = r2 instanceof android.animation.PathKeyframes$FloatKeyframesBase;

        if $z2 != 0 goto label4;

        $z3 = r2 instanceof android.animation.PathKeyframes$IntKeyframesBase;

        if $z3 != 0 goto label4;

        $r11 = interfaceinvoke r2.<android.animation.Keyframes: java.util.List getKeyframes()>();

        if $r11 == null goto label3;

        $r12 = r0.<android.animation.PropertyValuesHolder: android.animation.Keyframes mKeyframes>;

        $r13 = interfaceinvoke $r12.<android.animation.Keyframes: java.util.List getKeyframes()>();

        $i0 = interfaceinvoke $r13.<java.util.List: int size()>();

        if $i0 <= 2 goto label3;

        goto label4;

     label3:
        r1.<android.animation.PropertyValuesHolder$PropertyValues: android.animation.PropertyValuesHolder$PropertyValues$DataSource dataSource> = null;

        goto label5;

     label4:
        $r20 = new android.animation.PropertyValuesHolder$1;

        specialinvoke $r20.<android.animation.PropertyValuesHolder$1: void <init>(android.animation.PropertyValuesHolder)>(r0);

        r1.<android.animation.PropertyValuesHolder$PropertyValues: android.animation.PropertyValuesHolder$PropertyValues$DataSource dataSource> = $r20;

     label5:
        return;
    }

    public java.lang.Class getValueType()
    {
        android.animation.PropertyValuesHolder r0;
        java.lang.Class $r1;

        r0 := @this: android.animation.PropertyValuesHolder;

        $r1 = r0.<android.animation.PropertyValuesHolder: java.lang.Class mValueType>;

        return $r1;
    }

    void init()
    {
        android.animation.PropertyValuesHolder r0;
        android.animation.TypeEvaluator $r1, r4, r5;
        android.animation.Keyframes $r2;
        java.lang.Class r3;

        r0 := @this: android.animation.PropertyValuesHolder;

        $r1 = r0.<android.animation.PropertyValuesHolder: android.animation.TypeEvaluator mEvaluator>;

        if $r1 != null goto label4;

        r3 = r0.<android.animation.PropertyValuesHolder: java.lang.Class mValueType>;

        if r3 != class "Ljava/lang/Integer;" goto label1;

        r4 = <android.animation.PropertyValuesHolder: android.animation.TypeEvaluator sIntEvaluator>;

        goto label3;

     label1:
        if r3 != class "Ljava/lang/Float;" goto label2;

        r4 = <android.animation.PropertyValuesHolder: android.animation.TypeEvaluator sFloatEvaluator>;

        goto label3;

     label2:
        r4 = null;

     label3:
        r0.<android.animation.PropertyValuesHolder: android.animation.TypeEvaluator mEvaluator> = r4;

     label4:
        r5 = r0.<android.animation.PropertyValuesHolder: android.animation.TypeEvaluator mEvaluator>;

        if r5 == null goto label5;

        $r2 = r0.<android.animation.PropertyValuesHolder: android.animation.Keyframes mKeyframes>;

        interfaceinvoke $r2.<android.animation.Keyframes: void setEvaluator(android.animation.TypeEvaluator)>(r5);

     label5:
        return;
    }

    void setAnimatedValue(java.lang.Object)
    {
        android.animation.PropertyValuesHolder r0;
        android.util.Property r1;
        java.lang.reflect.Method $r2, $r6;
        java.lang.Object[] $r3, $r5;
        java.lang.Object $r4, $r8, r13;
        java.lang.Throwable $r9, $r11;
        java.lang.String $r10, $r12;
        java.lang.IllegalAccessException r16;
        java.lang.reflect.InvocationTargetException r17;

        r0 := @this: android.animation.PropertyValuesHolder;

        r13 := @parameter0: java.lang.Object;

        r1 = r0.<android.animation.PropertyValuesHolder: android.util.Property mProperty>;

        if r1 == null goto label1;

        $r8 = virtualinvoke r0.<android.animation.PropertyValuesHolder: java.lang.Object getAnimatedValue()>();

        virtualinvoke r1.<android.util.Property: void set(java.lang.Object,java.lang.Object)>(r13, $r8);

     label1:
        $r2 = r0.<android.animation.PropertyValuesHolder: java.lang.reflect.Method mSetter>;

        if $r2 == null goto label6;

     label2:
        $r3 = r0.<android.animation.PropertyValuesHolder: java.lang.Object[] mTmpValueArray>;

        $r4 = virtualinvoke r0.<android.animation.PropertyValuesHolder: java.lang.Object getAnimatedValue()>();

        $r3[0] = $r4;

        $r6 = r0.<android.animation.PropertyValuesHolder: java.lang.reflect.Method mSetter>;

        $r5 = r0.<android.animation.PropertyValuesHolder: java.lang.Object[] mTmpValueArray>;

        virtualinvoke $r6.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r13, $r5);

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        r16 = (java.lang.IllegalAccessException) $r9;

        $r10 = virtualinvoke r16.<java.lang.IllegalAccessException: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("PropertyValuesHolder", $r10);

        goto label6;

     label5:
        $r11 := @caughtexception;

        r17 = (java.lang.reflect.InvocationTargetException) $r11;

        $r12 = virtualinvoke r17.<java.lang.reflect.InvocationTargetException: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("PropertyValuesHolder", $r12);

     label6:
        return;

        catch java.lang.reflect.InvocationTargetException from label2 to label3 with label5;
        catch java.lang.IllegalAccessException from label2 to label3 with label4;
    }

    public void setConverter(android.animation.TypeConverter)
    {
        android.animation.PropertyValuesHolder r0;
        android.animation.TypeConverter r1;

        r0 := @this: android.animation.PropertyValuesHolder;

        r1 := @parameter0: android.animation.TypeConverter;

        r0.<android.animation.PropertyValuesHolder: android.animation.TypeConverter mConverter> = r1;

        return;
    }

    public void setEvaluator(android.animation.TypeEvaluator)
    {
        android.animation.PropertyValuesHolder r0;
        android.animation.TypeEvaluator r1;
        android.animation.Keyframes $r2;

        r0 := @this: android.animation.PropertyValuesHolder;

        r1 := @parameter0: android.animation.TypeEvaluator;

        r0.<android.animation.PropertyValuesHolder: android.animation.TypeEvaluator mEvaluator> = r1;

        $r2 = r0.<android.animation.PropertyValuesHolder: android.animation.Keyframes mKeyframes>;

        interfaceinvoke $r2.<android.animation.Keyframes: void setEvaluator(android.animation.TypeEvaluator)>(r1);

        return;
    }

    public transient void setFloatValues(float[])
    {
        android.animation.PropertyValuesHolder r0;
        float[] r1;
        java.lang.Class $r2;
        android.animation.KeyframeSet $r3;

        r0 := @this: android.animation.PropertyValuesHolder;

        r1 := @parameter0: float[];

        $r2 = <java.lang.Float: java.lang.Class TYPE>;

        r0.<android.animation.PropertyValuesHolder: java.lang.Class mValueType> = $r2;

        $r3 = staticinvoke <android.animation.KeyframeSet: android.animation.KeyframeSet ofFloat(float[])>(r1);

        r0.<android.animation.PropertyValuesHolder: android.animation.Keyframes mKeyframes> = $r3;

        return;
    }

    public transient void setIntValues(int[])
    {
        android.animation.PropertyValuesHolder r0;
        int[] r1;
        java.lang.Class $r2;
        android.animation.KeyframeSet $r3;

        r0 := @this: android.animation.PropertyValuesHolder;

        r1 := @parameter0: int[];

        $r2 = <java.lang.Integer: java.lang.Class TYPE>;

        r0.<android.animation.PropertyValuesHolder: java.lang.Class mValueType> = $r2;

        $r3 = staticinvoke <android.animation.KeyframeSet: android.animation.KeyframeSet ofInt(int[])>(r1);

        r0.<android.animation.PropertyValuesHolder: android.animation.Keyframes mKeyframes> = $r3;

        return;
    }

    public transient void setKeyframes(android.animation.Keyframe[])
    {
        android.animation.PropertyValuesHolder r0;
        android.animation.Keyframe[] r1, r2;
        int i0, $i1, i2;
        android.animation.Keyframe $r3, $r6;
        java.lang.Class $r4;
        android.animation.KeyframeSet $r5;

        r0 := @this: android.animation.PropertyValuesHolder;

        r1 := @parameter0: android.animation.Keyframe[];

        i0 = lengthof r1;

        $i1 = staticinvoke <java.lang.Math: int max(int,int)>(i0, 2);

        r2 = newarray (android.animation.Keyframe)[$i1];

        $r3 = r1[0];

        $r4 = virtualinvoke $r3.<android.animation.Keyframe: java.lang.Class getType()>();

        r0.<android.animation.PropertyValuesHolder: java.lang.Class mValueType> = $r4;

        i2 = 0;

     label1:
        if i2 >= i0 goto label2;

        $r6 = r1[i2];

        r2[i2] = $r6;

        i2 = i2 + 1;

        goto label1;

     label2:
        $r5 = new android.animation.KeyframeSet;

        specialinvoke $r5.<android.animation.KeyframeSet: void <init>(android.animation.Keyframe[])>(r2);

        r0.<android.animation.PropertyValuesHolder: android.animation.Keyframes mKeyframes> = $r5;

        return;
    }

    public transient void setObjectValues(java.lang.Object[])
    {
        android.animation.PropertyValuesHolder r0;
        android.animation.TypeEvaluator r1;
        java.lang.Object $r2;
        java.lang.Class $r3;
        java.lang.Object[] r4;
        android.animation.KeyframeSet r5;

        r0 := @this: android.animation.PropertyValuesHolder;

        r4 := @parameter0: java.lang.Object[];

        $r2 = r4[0];

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        r0.<android.animation.PropertyValuesHolder: java.lang.Class mValueType> = $r3;

        r5 = staticinvoke <android.animation.KeyframeSet: android.animation.KeyframeSet ofObject(java.lang.Object[])>(r4);

        r0.<android.animation.PropertyValuesHolder: android.animation.Keyframes mKeyframes> = r5;

        r1 = r0.<android.animation.PropertyValuesHolder: android.animation.TypeEvaluator mEvaluator>;

        if r1 == null goto label1;

        interfaceinvoke r5.<android.animation.Keyframes: void setEvaluator(android.animation.TypeEvaluator)>(r1);

     label1:
        return;
    }

    public void setProperty(android.util.Property)
    {
        android.animation.PropertyValuesHolder r0;
        android.util.Property r1;

        r0 := @this: android.animation.PropertyValuesHolder;

        r1 := @parameter0: android.util.Property;

        r0.<android.animation.PropertyValuesHolder: android.util.Property mProperty> = r1;

        return;
    }

    public void setPropertyName(java.lang.String)
    {
        android.animation.PropertyValuesHolder r0;
        java.lang.String r1;

        r0 := @this: android.animation.PropertyValuesHolder;

        r1 := @parameter0: java.lang.String;

        r0.<android.animation.PropertyValuesHolder: java.lang.String mPropertyName> = r1;

        return;
    }

    void setupEndValue(java.lang.Object)
    {
        android.animation.PropertyValuesHolder r0;
        java.lang.Object r1, $r4;
        java.util.List r2;
        android.animation.Keyframes $r3;
        boolean $z0;
        int $i0, $i1;
        android.animation.Keyframe $r5;

        r0 := @this: android.animation.PropertyValuesHolder;

        r1 := @parameter0: java.lang.Object;

        $r3 = r0.<android.animation.PropertyValuesHolder: android.animation.Keyframes mKeyframes>;

        r2 = interfaceinvoke $r3.<android.animation.Keyframes: java.util.List getKeyframes()>();

        $z0 = interfaceinvoke r2.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $i0 = interfaceinvoke r2.<java.util.List: int size()>();

        $i1 = $i0 - 1;

        $r4 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>($i1);

        $r5 = (android.animation.Keyframe) $r4;

        specialinvoke r0.<android.animation.PropertyValuesHolder: void setupValue(java.lang.Object,android.animation.Keyframe)>(r1, $r5);

     label1:
        return;
    }

    void setupSetter(java.lang.Class)
    {
        android.animation.PropertyValuesHolder r0;
        java.lang.Class r1, r5;
        java.util.HashMap $r2;
        java.lang.reflect.Method $r3;
        android.animation.TypeConverter r4;

        r0 := @this: android.animation.PropertyValuesHolder;

        r1 := @parameter0: java.lang.Class;

        r4 = r0.<android.animation.PropertyValuesHolder: android.animation.TypeConverter mConverter>;

        if r4 != null goto label1;

        r5 = r0.<android.animation.PropertyValuesHolder: java.lang.Class mValueType>;

        goto label2;

     label1:
        r5 = virtualinvoke r4.<android.animation.TypeConverter: java.lang.Class getTargetType()>();

     label2:
        $r2 = <android.animation.PropertyValuesHolder: java.util.HashMap sSetterPropertyMap>;

        $r3 = specialinvoke r0.<android.animation.PropertyValuesHolder: java.lang.reflect.Method setupSetterOrGetter(java.lang.Class,java.util.HashMap,java.lang.String,java.lang.Class)>(r1, $r2, "set", r5);

        r0.<android.animation.PropertyValuesHolder: java.lang.reflect.Method mSetter> = $r3;

        return;
    }

    void setupSetterAndGetter(java.lang.Object)
    {
        android.animation.PropertyValuesHolder r0;
        java.lang.Object r1, $r7, $r11, $r12, $r15, $r17, r32, r34;
        android.animation.Keyframe r2, r39;
        android.util.Property $r3, $r4, $r16, $r21;
        java.lang.reflect.Method $r5, $r8, $r10, $r13;
        android.animation.Keyframes $r6, $r14;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object[] $r9;
        java.lang.ClassCastException $r18;
        java.lang.String $r22, $r27, $r29, $r31;
        java.lang.Throwable $r28, $r30;
        java.util.List r33, r38;
        int i3, i4, i5, i6;
        java.lang.Class r37;
        java.lang.StringBuilder r42;
        java.lang.IllegalAccessException r43;
        java.lang.reflect.InvocationTargetException r44;

        r0 := @this: android.animation.PropertyValuesHolder;

        r1 := @parameter0: java.lang.Object;

        $r3 = r0.<android.animation.PropertyValuesHolder: android.util.Property mProperty>;

        if $r3 == null goto label15;

        r32 = null;

     label01:
        $r14 = r0.<android.animation.PropertyValuesHolder: android.animation.Keyframes mKeyframes>;

        r33 = interfaceinvoke $r14.<android.animation.Keyframes: java.util.List getKeyframes()>();

     label02:
        if r33 != null goto label03;

        i3 = 0;

        goto label04;

     label03:
        i3 = interfaceinvoke r33.<java.util.List: int size()>();

     label04:
        i4 = 0;

     label05:
        if i4 >= i3 goto label13;

     label06:
        $r15 = interfaceinvoke r33.<java.util.List: java.lang.Object get(int)>(i4);

        r2 = (android.animation.Keyframe) $r15;

        $z2 = virtualinvoke r2.<android.animation.Keyframe: boolean hasValue()>();

        if $z2 == 0 goto label09;

     label07:
        r34 = r32;

     label08:
        $z3 = virtualinvoke r2.<android.animation.Keyframe: boolean valueWasSetOnStart()>();

        if $z3 == 0 goto label12;

     label09:
        r34 = r32;

        if r32 != null goto label11;

     label10:
        $r16 = r0.<android.animation.PropertyValuesHolder: android.util.Property mProperty>;

        $r17 = virtualinvoke $r16.<android.util.Property: java.lang.Object get(java.lang.Object)>(r1);

        r34 = specialinvoke r0.<android.animation.PropertyValuesHolder: java.lang.Object convertBack(java.lang.Object)>($r17);

     label11:
        virtualinvoke r2.<android.animation.Keyframe: void setValue(java.lang.Object)>(r34);

        virtualinvoke r2.<android.animation.Keyframe: void setValueWasSetOnStart(boolean)>(1);

     label12:
        i4 = i4 + 1;

        r32 = r34;

        goto label05;

     label13:
        return;

     label14:
        $r18 := @caughtexception;

        r42 = new java.lang.StringBuilder;

        specialinvoke r42.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No such property (");

        $r21 = r0.<android.animation.PropertyValuesHolder: android.util.Property mProperty>;

        $r22 = virtualinvoke $r21.<android.util.Property: java.lang.String getName()>();

        virtualinvoke r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        virtualinvoke r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") on target object ");

        virtualinvoke r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Trying reflection instead");

        $r27 = virtualinvoke r42.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PropertyValuesHolder", $r27);

        r0.<android.animation.PropertyValuesHolder: android.util.Property mProperty> = null;

     label15:
        $r4 = r0.<android.animation.PropertyValuesHolder: android.util.Property mProperty>;

        if $r4 != null goto label26;

        r37 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = r0.<android.animation.PropertyValuesHolder: java.lang.reflect.Method mSetter>;

        if $r5 != null goto label16;

        virtualinvoke r0.<android.animation.PropertyValuesHolder: void setupSetter(java.lang.Class)>(r37);

     label16:
        $r6 = r0.<android.animation.PropertyValuesHolder: android.animation.Keyframes mKeyframes>;

        r38 = interfaceinvoke $r6.<android.animation.Keyframes: java.util.List getKeyframes()>();

        if r38 != null goto label17;

        i5 = 0;

        goto label18;

     label17:
        i5 = interfaceinvoke r38.<java.util.List: int size()>();

     label18:
        i6 = 0;

     label19:
        if i6 >= i5 goto label26;

        $r7 = interfaceinvoke r38.<java.util.List: java.lang.Object get(int)>(i6);

        r39 = (android.animation.Keyframe) $r7;

        $z0 = virtualinvoke r39.<android.animation.Keyframe: boolean hasValue()>();

        if $z0 == 0 goto label20;

        $z1 = virtualinvoke r39.<android.animation.Keyframe: boolean valueWasSetOnStart()>();

        if $z1 == 0 goto label25;

     label20:
        $r8 = r0.<android.animation.PropertyValuesHolder: java.lang.reflect.Method mGetter>;

        if $r8 != null goto label21;

        specialinvoke r0.<android.animation.PropertyValuesHolder: void setupGetter(java.lang.Class)>(r37);

        $r13 = r0.<android.animation.PropertyValuesHolder: java.lang.reflect.Method mGetter>;

        if $r13 != null goto label21;

        return;

     label21:
        $r10 = r0.<android.animation.PropertyValuesHolder: java.lang.reflect.Method mGetter>;

        $r9 = newarray (java.lang.Object)[0];

        $r11 = virtualinvoke $r10.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r1, $r9);

        $r12 = specialinvoke r0.<android.animation.PropertyValuesHolder: java.lang.Object convertBack(java.lang.Object)>($r11);

        virtualinvoke r39.<android.animation.Keyframe: void setValue(java.lang.Object)>($r12);

        virtualinvoke r39.<android.animation.Keyframe: void setValueWasSetOnStart(boolean)>(1);

     label22:
        goto label25;

     label23:
        $r28 := @caughtexception;

        r43 = (java.lang.IllegalAccessException) $r28;

        $r29 = virtualinvoke r43.<java.lang.IllegalAccessException: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("PropertyValuesHolder", $r29);

        goto label25;

     label24:
        $r30 := @caughtexception;

        r44 = (java.lang.reflect.InvocationTargetException) $r30;

        $r31 = virtualinvoke r44.<java.lang.reflect.InvocationTargetException: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("PropertyValuesHolder", $r31);

     label25:
        i6 = i6 + 1;

        goto label19;

     label26:
        return;

        catch java.lang.ClassCastException from label01 to label02 with label14;
        catch java.lang.ClassCastException from label03 to label04 with label14;
        catch java.lang.ClassCastException from label06 to label07 with label14;
        catch java.lang.ClassCastException from label08 to label09 with label14;
        catch java.lang.ClassCastException from label10 to label11 with label14;
        catch java.lang.ClassCastException from label11 to label12 with label14;
        catch java.lang.reflect.InvocationTargetException from label21 to label22 with label24;
        catch java.lang.IllegalAccessException from label21 to label22 with label23;
    }

    void setupStartValue(java.lang.Object)
    {
        android.animation.PropertyValuesHolder r0;
        java.lang.Object r1, $r4;
        java.util.List r2;
        android.animation.Keyframes $r3;
        boolean $z0;
        android.animation.Keyframe $r5;

        r0 := @this: android.animation.PropertyValuesHolder;

        r1 := @parameter0: java.lang.Object;

        $r3 = r0.<android.animation.PropertyValuesHolder: android.animation.Keyframes mKeyframes>;

        r2 = interfaceinvoke $r3.<android.animation.Keyframes: java.util.List getKeyframes()>();

        $z0 = interfaceinvoke r2.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r4 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(0);

        $r5 = (android.animation.Keyframe) $r4;

        specialinvoke r0.<android.animation.PropertyValuesHolder: void setupValue(java.lang.Object,android.animation.Keyframe)>(r1, $r5);

     label1:
        return;
    }

    public java.lang.String toString()
    {
        android.animation.PropertyValuesHolder r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r3, $r7, $r9;
        android.animation.Keyframes $r6;

        r0 := @this: android.animation.PropertyValuesHolder;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = r0.<android.animation.PropertyValuesHolder: java.lang.String mPropertyName>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r6 = r0.<android.animation.PropertyValuesHolder: android.animation.Keyframes mKeyframes>;

        $r7 = virtualinvoke $r6.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }
}
