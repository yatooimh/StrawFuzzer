public class android.animation.TimeAnimator extends android.animation.ValueAnimator
{
    private android.animation.TimeAnimator$TimeListener mListener;
    private long mPreviousTime;

    public void <init>()
    {
        android.animation.TimeAnimator r0;

        r0 := @this: android.animation.TimeAnimator;

        specialinvoke r0.<android.animation.ValueAnimator: void <init>()>();

        r0.<android.animation.TimeAnimator: long mPreviousTime> = -1L;

        return;
    }

    boolean animateBasedOnTime(long)
    {
        android.animation.TimeAnimator r0;
        long l0, l1, $l3, l4, l5;
        android.animation.TimeAnimator$TimeListener $r1, $r2;
        byte $b2;

        r0 := @this: android.animation.TimeAnimator;

        l0 := @parameter0: long;

        $r1 = r0.<android.animation.TimeAnimator: android.animation.TimeAnimator$TimeListener mListener>;

        if $r1 == null goto label3;

        l1 = r0.<android.animation.TimeAnimator: long mStartTime>;

        l4 = r0.<android.animation.TimeAnimator: long mPreviousTime>;

        $b2 = l4 cmp 0L;

        if $b2 >= 0 goto label1;

        l5 = 0L;

        goto label2;

     label1:
        l5 = l0 - l4;

     label2:
        r0.<android.animation.TimeAnimator: long mPreviousTime> = l0;

        $r2 = r0.<android.animation.TimeAnimator: android.animation.TimeAnimator$TimeListener mListener>;

        $l3 = l0 - l1;

        interfaceinvoke $r2.<android.animation.TimeAnimator$TimeListener: void onTimeUpdate(android.animation.TimeAnimator,long,long)>(r0, $l3, l5);

     label3:
        return 0;
    }

    void animateValue(float)
    {
        android.animation.TimeAnimator r0;
        float f0;

        r0 := @this: android.animation.TimeAnimator;

        f0 := @parameter0: float;

        return;
    }

    void initAnimation()
    {
        android.animation.TimeAnimator r0;

        r0 := @this: android.animation.TimeAnimator;

        return;
    }

    public void setCurrentPlayTime(long)
    {
        android.animation.TimeAnimator r0;
        long l0, l1, $l2, $l3, $l4;

        r0 := @this: android.animation.TimeAnimator;

        l0 := @parameter0: long;

        l1 = staticinvoke <android.view.animation.AnimationUtils: long currentAnimationTimeMillis()>();

        $l3 = r0.<android.animation.TimeAnimator: long mStartTime>;

        $l2 = l1 - l0;

        $l4 = staticinvoke <java.lang.Math: long max(long,long)>($l3, $l2);

        r0.<android.animation.TimeAnimator: long mStartTime> = $l4;

        r0.<android.animation.TimeAnimator: boolean mStartTimeCommitted> = 1;

        virtualinvoke r0.<android.animation.TimeAnimator: boolean animateBasedOnTime(long)>(l1);

        return;
    }

    public void setTimeListener(android.animation.TimeAnimator$TimeListener)
    {
        android.animation.TimeAnimator r0;
        android.animation.TimeAnimator$TimeListener r1;

        r0 := @this: android.animation.TimeAnimator;

        r1 := @parameter0: android.animation.TimeAnimator$TimeListener;

        r0.<android.animation.TimeAnimator: android.animation.TimeAnimator$TimeListener mListener> = r1;

        return;
    }

    public void start()
    {
        android.animation.TimeAnimator r0;

        r0 := @this: android.animation.TimeAnimator;

        r0.<android.animation.TimeAnimator: long mPreviousTime> = -1L;

        specialinvoke r0.<android.animation.ValueAnimator: void start()>();

        return;
    }
}
