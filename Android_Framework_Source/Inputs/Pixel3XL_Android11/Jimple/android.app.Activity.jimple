public class android.app.Activity extends android.view.ContextThemeWrapper implements android.view.LayoutInflater$Factory2, android.view.Window$Callback, android.view.KeyEvent$Callback, android.view.View$OnCreateContextMenuListener, android.content.ComponentCallbacks2, android.view.Window$OnWindowDismissedCallback, android.view.autofill.AutofillManager$AutofillClient, android.view.contentcapture.ContentCaptureManager$ContentCaptureClient
{
    private static final java.lang.String AUTOFILL_RESET_NEEDED;
    private static final java.lang.String AUTO_FILL_AUTH_WHO_PREFIX;
    private static final int CONTENT_CAPTURE_PAUSE;
    private static final int CONTENT_CAPTURE_RESUME;
    private static final int CONTENT_CAPTURE_START;
    private static final int CONTENT_CAPTURE_STOP;
    private static final boolean DEBUG_LIFECYCLE;
    public static final int DEFAULT_KEYS_DIALER;
    public static final int DEFAULT_KEYS_DISABLE;
    public static final int DEFAULT_KEYS_SEARCH_GLOBAL;
    public static final int DEFAULT_KEYS_SEARCH_LOCAL;
    public static final int DEFAULT_KEYS_SHORTCUT;
    public static final int DONT_FINISH_TASK_WITH_ACTIVITY;
    public static final int FINISH_TASK_WITH_ACTIVITY;
    public static final int FINISH_TASK_WITH_ROOT_ACTIVITY;
    protected static final int[] FOCUSED_STATE_SET;
    static final java.lang.String FRAGMENTS_TAG;
    private static final java.lang.String HAS_CURENT_PERMISSIONS_REQUEST_KEY;
    private static final java.lang.String KEYBOARD_SHORTCUTS_RECEIVER_PKG_NAME;
    private static final java.lang.String LAST_AUTOFILL_ID;
    private static final int LOG_AM_ON_ACTIVITY_RESULT_CALLED;
    private static final int LOG_AM_ON_CREATE_CALLED;
    private static final int LOG_AM_ON_DESTROY_CALLED;
    private static final int LOG_AM_ON_PAUSE_CALLED;
    private static final int LOG_AM_ON_RESTART_CALLED;
    private static final int LOG_AM_ON_RESUME_CALLED;
    private static final int LOG_AM_ON_START_CALLED;
    private static final int LOG_AM_ON_STOP_CALLED;
    private static final int LOG_AM_ON_TOP_RESUMED_GAINED_CALLED;
    private static final int LOG_AM_ON_TOP_RESUMED_LOST_CALLED;
    private static final java.lang.String REQUEST_PERMISSIONS_WHO_PREFIX;
    public static final int RESULT_CANCELED;
    public static final int RESULT_FIRST_USER;
    public static final int RESULT_OK;
    private static final java.lang.String SAVED_DIALOGS_TAG;
    private static final java.lang.String SAVED_DIALOG_ARGS_KEY_PREFIX;
    private static final java.lang.String SAVED_DIALOG_IDS_KEY;
    private static final java.lang.String SAVED_DIALOG_KEY_PREFIX;
    private static final java.lang.String TAG;
    private static final java.lang.String WINDOW_HIERARCHY_TAG;
    android.app.ActionBar mActionBar;
    private int mActionModeTypeStarting;
    android.content.pm.ActivityInfo mActivityInfo;
    private final java.util.ArrayList mActivityLifecycleCallbacks;
    android.app.ActivityTransitionState mActivityTransitionState;
    private android.app.Application mApplication;
    private android.os.IBinder mAssistToken;
    private boolean mAutoFillIgnoreFirstResumePause;
    private boolean mAutoFillResetNeeded;
    private android.view.autofill.AutofillManager mAutofillManager;
    private android.view.autofill.AutofillPopupWindow mAutofillPopupWindow;
    boolean mCalled;
    private boolean mCanEnterPictureInPicture;
    private boolean mChangeCanvasToTranslucent;
    boolean mChangingConfigurations;
    private android.content.ComponentName mComponent;
    int mConfigChangeFlags;
    private android.view.contentcapture.ContentCaptureManager mContentCaptureManager;
    android.content.res.Configuration mCurrentConfig;
    android.view.View mDecor;
    private int mDefaultKeyMode;
    private android.text.SpannableStringBuilder mDefaultKeySsb;
    private boolean mDestroyed;
    private boolean mDoReportFullyDrawn;
    java.lang.String mEmbeddedID;
    private boolean mEnableDefaultActionBarUp;
    boolean mEnterAnimationComplete;
    android.app.SharedElementCallback mEnterTransitionListener;
    android.app.SharedElementCallback mExitTransitionListener;
    boolean mFinished;
    final android.app.FragmentController mFragments;
    final android.os.Handler mHandler;
    private boolean mHasCurrentPermissionsRequest;
    private int mIdent;
    private final java.lang.Object mInstanceTracker;
    private android.app.Instrumentation mInstrumentation;
    android.content.Intent mIntent;
    private boolean mIsInMultiWindowMode;
    private boolean mIsInPictureInPictureMode;
    private int mLastAutofillId;
    android.app.Activity$NonConfigurationInstances mLastNonConfigurationInstances;
    android.app.ActivityThread mMainThread;
    private final java.util.ArrayList mManagedCursors;
    private android.util.SparseArray mManagedDialogs;
    private android.view.MenuInflater mMenuInflater;
    android.app.Activity mParent;
    java.lang.String mReferrer;
    private boolean mRestoredFromBundle;
    int mResultCode;
    android.content.Intent mResultData;
    boolean mResumed;
    private android.view.SearchEvent mSearchEvent;
    private android.app.SearchManager mSearchManager;
    boolean mStartedActivity;
    boolean mStopped;
    private android.app.ActivityManager$TaskDescription mTaskDescription;
    private java.lang.CharSequence mTitle;
    private int mTitleColor;
    private boolean mTitleReady;
    private android.os.IBinder mToken;
    private android.app.Activity$TranslucentConversionListener mTranslucentCallback;
    private java.lang.Thread mUiThread;
    boolean mVisibleFromClient;
    boolean mVisibleFromServer;
    android.app.VoiceInteractor mVoiceInteractor;
    private android.view.Window mWindow;
    boolean mWindowAdded;
    private final android.view.Window$WindowControllerCallback mWindowControllerCallback;
    private android.view.WindowManager mWindowManager;

    static void <clinit>()
    {
        int[] $r0;

        <android.app.Activity: java.lang.String WINDOW_HIERARCHY_TAG> = "android:viewHierarchyState";

        <android.app.Activity: java.lang.String TAG> = "Activity";

        <android.app.Activity: java.lang.String SAVED_DIALOG_KEY_PREFIX> = "android:dialog_";

        <android.app.Activity: java.lang.String SAVED_DIALOG_IDS_KEY> = "android:savedDialogIds";

        <android.app.Activity: java.lang.String SAVED_DIALOG_ARGS_KEY_PREFIX> = "android:dialog_args_";

        <android.app.Activity: java.lang.String SAVED_DIALOGS_TAG> = "android:savedDialogs";

        <android.app.Activity: int RESULT_OK> = -1;

        <android.app.Activity: int RESULT_FIRST_USER> = 1;

        <android.app.Activity: int RESULT_CANCELED> = 0;

        <android.app.Activity: java.lang.String REQUEST_PERMISSIONS_WHO_PREFIX> = "@android:requestPermissions:";

        <android.app.Activity: int LOG_AM_ON_TOP_RESUMED_LOST_CALLED> = 30065;

        <android.app.Activity: int LOG_AM_ON_TOP_RESUMED_GAINED_CALLED> = 30064;

        <android.app.Activity: int LOG_AM_ON_STOP_CALLED> = 30049;

        <android.app.Activity: int LOG_AM_ON_START_CALLED> = 30059;

        <android.app.Activity: int LOG_AM_ON_RESUME_CALLED> = 30022;

        <android.app.Activity: int LOG_AM_ON_RESTART_CALLED> = 30058;

        <android.app.Activity: int LOG_AM_ON_PAUSE_CALLED> = 30021;

        <android.app.Activity: int LOG_AM_ON_DESTROY_CALLED> = 30060;

        <android.app.Activity: int LOG_AM_ON_CREATE_CALLED> = 30057;

        <android.app.Activity: int LOG_AM_ON_ACTIVITY_RESULT_CALLED> = 30062;

        <android.app.Activity: java.lang.String LAST_AUTOFILL_ID> = "android:lastAutofillId";

        <android.app.Activity: java.lang.String KEYBOARD_SHORTCUTS_RECEIVER_PKG_NAME> = "com.android.systemui";

        <android.app.Activity: java.lang.String HAS_CURENT_PERMISSIONS_REQUEST_KEY> = "android:hasCurrentPermissionsRequest";

        <android.app.Activity: java.lang.String FRAGMENTS_TAG> = "android:fragments";

        <android.app.Activity: int FINISH_TASK_WITH_ROOT_ACTIVITY> = 1;

        <android.app.Activity: int FINISH_TASK_WITH_ACTIVITY> = 2;

        <android.app.Activity: int DONT_FINISH_TASK_WITH_ACTIVITY> = 0;

        <android.app.Activity: int DEFAULT_KEYS_SHORTCUT> = 2;

        <android.app.Activity: int DEFAULT_KEYS_SEARCH_LOCAL> = 3;

        <android.app.Activity: int DEFAULT_KEYS_SEARCH_GLOBAL> = 4;

        <android.app.Activity: int DEFAULT_KEYS_DISABLE> = 0;

        <android.app.Activity: int DEFAULT_KEYS_DIALER> = 1;

        <android.app.Activity: boolean DEBUG_LIFECYCLE> = 0;

        <android.app.Activity: int CONTENT_CAPTURE_STOP> = 4;

        <android.app.Activity: int CONTENT_CAPTURE_START> = 1;

        <android.app.Activity: int CONTENT_CAPTURE_RESUME> = 2;

        <android.app.Activity: int CONTENT_CAPTURE_PAUSE> = 3;

        <android.app.Activity: java.lang.String AUTO_FILL_AUTH_WHO_PREFIX> = "@android:autoFillAuth:";

        <android.app.Activity: java.lang.String AUTOFILL_RESET_NEEDED> = "@android:autofillResetNeeded";

        $r0 = newarray (int)[1];

        $r0[0] = 16842908;

        <android.app.Activity: int[] FOCUSED_STATE_SET> = $r0;

        return;
    }

    public void <init>()
    {
        android.app.Activity r0;
        java.util.ArrayList $r1, $r5;
        android.os.Handler $r2;
        android.app.Activity$HostCallbacks $r3;
        android.app.FragmentController $r4;
        android.app.ActivityManager$TaskDescription $r6;
        java.lang.Object $r7;
        android.app.ActivityTransitionState $r8;
        android.app.SharedElementCallback $r9, $r10;
        android.app.Activity$1 $r11;

        r0 := @this: android.app.Activity;

        specialinvoke r0.<android.view.ContextThemeWrapper: void <init>()>();

        r0.<android.app.Activity: boolean mDoReportFullyDrawn> = 1;

        r0.<android.app.Activity: boolean mCanEnterPictureInPicture> = 0;

        r0.<android.app.Activity: boolean mChangingConfigurations> = 0;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<android.app.Activity: java.util.ArrayList mActivityLifecycleCallbacks> = $r1;

        r0.<android.app.Activity: android.view.View mDecor> = null;

        r0.<android.app.Activity: boolean mWindowAdded> = 0;

        r0.<android.app.Activity: boolean mVisibleFromServer> = 0;

        r0.<android.app.Activity: boolean mVisibleFromClient> = 1;

        r0.<android.app.Activity: android.app.ActionBar mActionBar> = null;

        r0.<android.app.Activity: int mTitleColor> = 0;

        $r2 = new android.os.Handler;

        specialinvoke $r2.<android.os.Handler: void <init>()>();

        r0.<android.app.Activity: android.os.Handler mHandler> = $r2;

        $r3 = new android.app.Activity$HostCallbacks;

        specialinvoke $r3.<android.app.Activity$HostCallbacks: void <init>(android.app.Activity)>(r0);

        $r4 = staticinvoke <android.app.FragmentController: android.app.FragmentController createController(android.app.FragmentHostCallback)>($r3);

        r0.<android.app.Activity: android.app.FragmentController mFragments> = $r4;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<android.app.Activity: java.util.ArrayList mManagedCursors> = $r5;

        r0.<android.app.Activity: int mResultCode> = 0;

        r0.<android.app.Activity: android.content.Intent mResultData> = null;

        r0.<android.app.Activity: boolean mTitleReady> = 0;

        r0.<android.app.Activity: int mActionModeTypeStarting> = 0;

        r0.<android.app.Activity: int mDefaultKeyMode> = 0;

        r0.<android.app.Activity: android.text.SpannableStringBuilder mDefaultKeySsb> = null;

        $r6 = new android.app.ActivityManager$TaskDescription;

        specialinvoke $r6.<android.app.ActivityManager$TaskDescription: void <init>()>();

        r0.<android.app.Activity: android.app.ActivityManager$TaskDescription mTaskDescription> = $r6;

        $r7 = staticinvoke <android.os.StrictMode: java.lang.Object trackActivity(java.lang.Object)>(r0);

        r0.<android.app.Activity: java.lang.Object mInstanceTracker> = $r7;

        $r8 = new android.app.ActivityTransitionState;

        specialinvoke $r8.<android.app.ActivityTransitionState: void <init>()>();

        r0.<android.app.Activity: android.app.ActivityTransitionState mActivityTransitionState> = $r8;

        $r9 = <android.app.SharedElementCallback: android.app.SharedElementCallback NULL_CALLBACK>;

        r0.<android.app.Activity: android.app.SharedElementCallback mEnterTransitionListener> = $r9;

        $r10 = <android.app.SharedElementCallback: android.app.SharedElementCallback NULL_CALLBACK>;

        r0.<android.app.Activity: android.app.SharedElementCallback mExitTransitionListener> = $r10;

        r0.<android.app.Activity: int mLastAutofillId> = 1073741823;

        $r11 = new android.app.Activity$1;

        specialinvoke $r11.<android.app.Activity$1: void <init>(android.app.Activity)>(r0);

        r0.<android.app.Activity: android.view.Window$WindowControllerCallback mWindowControllerCallback> = $r11;

        return;
    }

    static android.os.IBinder access$000(android.app.Activity)
    {
        android.app.Activity r0;
        android.os.IBinder $r1;

        r0 := @parameter0: android.app.Activity;

        $r1 = r0.<android.app.Activity: android.os.IBinder mToken>;

        return $r1;
    }

    static android.app.ActivityManager$TaskDescription access$100(android.app.Activity)
    {
        android.app.Activity r0;
        android.app.ActivityManager$TaskDescription $r1;

        r0 := @parameter0: android.app.Activity;

        $r1 = r0.<android.app.Activity: android.app.ActivityManager$TaskDescription mTaskDescription>;

        return $r1;
    }

    static void access$600(android.app.Activity, android.app.Fragment, android.content.Intent, int, android.os.Bundle, android.os.UserHandle)
    {
        android.app.Activity r0;
        android.app.Fragment r1;
        android.content.Intent r2;
        int i0;
        android.os.Bundle r3;
        android.os.UserHandle r4;

        r0 := @parameter0: android.app.Activity;

        r1 := @parameter1: android.app.Fragment;

        r2 := @parameter2: android.content.Intent;

        i0 := @parameter3: int;

        r3 := @parameter4: android.os.Bundle;

        r4 := @parameter5: android.os.UserHandle;

        specialinvoke r0.<android.app.Activity: void startActivityAsUserFromFragment(android.app.Fragment,android.content.Intent,int,android.os.Bundle,android.os.UserHandle)>(r1, r2, i0, r3, r4);

        return;
    }

    static void access$700(android.app.Activity, android.content.IntentSender, java.lang.String, int, android.content.Intent, int, int, android.os.Bundle) throws android.content.IntentSender$SendIntentException
    {
        android.app.Activity r0;
        android.content.IntentSender r1;
        java.lang.String r2;
        int i0, i1, i2;
        android.content.Intent r3;
        android.os.Bundle r4;

        r0 := @parameter0: android.app.Activity;

        r1 := @parameter1: android.content.IntentSender;

        r2 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        r3 := @parameter4: android.content.Intent;

        i1 := @parameter5: int;

        i2 := @parameter6: int;

        r4 := @parameter7: android.os.Bundle;

        specialinvoke r0.<android.app.Activity: void startIntentSenderForResultInner(android.content.IntentSender,java.lang.String,int,android.content.Intent,int,int,android.os.Bundle)>(r1, r2, i0, r3, i1, i2, r4);

        return;
    }

    static void access$800(android.app.Activity, android.app.Fragment, android.content.IntentSender, int, android.content.Intent, int, int, android.os.Bundle) throws android.content.IntentSender$SendIntentException
    {
        android.app.Activity r0;
        android.app.Fragment r1;
        android.content.IntentSender r2;
        int i0, i1, i2;
        android.content.Intent r3;
        android.os.Bundle r4;

        r0 := @parameter0: android.app.Activity;

        r1 := @parameter1: android.app.Fragment;

        r2 := @parameter2: android.content.IntentSender;

        i0 := @parameter3: int;

        r3 := @parameter4: android.content.Intent;

        i1 := @parameter5: int;

        i2 := @parameter6: int;

        r4 := @parameter7: android.os.Bundle;

        specialinvoke r0.<android.app.Activity: void startIntentSenderFromFragment(android.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,android.os.Bundle)>(r1, r2, i0, r3, i1, i2, r4);

        return;
    }

    private void cancelInputsAndStartExitTransition(android.os.Bundle)
    {
        android.app.Activity r0;
        android.os.Bundle r1;
        android.app.ActivityTransitionState $r2;
        android.view.Window r3;
        android.view.View r4;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.os.Bundle;

        r3 = r0.<android.app.Activity: android.view.Window mWindow>;

        if r3 == null goto label1;

        r4 = virtualinvoke r3.<android.view.Window: android.view.View peekDecorView()>();

        goto label2;

     label1:
        r4 = null;

     label2:
        if r4 == null goto label3;

        virtualinvoke r4.<android.view.View: void cancelPendingInputEvents()>();

     label3:
        if r1 == null goto label4;

        $r2 = r0.<android.app.Activity: android.app.ActivityTransitionState mActivityTransitionState>;

        virtualinvoke $r2.<android.app.ActivityTransitionState: void startExitOutTransition(android.app.Activity,android.os.Bundle)>(r0, r1);

     label4:
        return;
    }

    private java.lang.Object[] collectActivityLifecycleCallbacks()
    {
        android.app.Activity r0;
        java.util.ArrayList r1, $r2, $r3;
        int $i0;
        java.lang.Throwable $r4;
        java.lang.Object[] r5;

        r0 := @this: android.app.Activity;

        r5 = null;

        r1 = r0.<android.app.Activity: java.util.ArrayList mActivityLifecycleCallbacks>;

        entermonitor r1;

     label1:
        $r2 = r0.<android.app.Activity: java.util.ArrayList mActivityLifecycleCallbacks>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if $i0 <= 0 goto label2;

        $r3 = r0.<android.app.Activity: java.util.ArrayList mActivityLifecycleCallbacks>;

        r5 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object[] toArray()>();

     label2:
        exitmonitor r1;

     label3:
        return r5;

     label4:
        $r4 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    private boolean convertFromTranslucentInternal()
    {
        android.app.Activity r0;
        android.app.IActivityTaskManager $r2;
        android.os.IBinder $r3, $r5;
        boolean $z0;
        android.view.WindowManagerGlobal $r4;
        android.os.RemoteException $r6;

        r0 := @this: android.app.Activity;

     label1:
        r0.<android.app.Activity: android.app.Activity$TranslucentConversionListener mTranslucentCallback> = null;

        $r2 = staticinvoke <android.app.ActivityTaskManager: android.app.IActivityTaskManager getService()>();

        $r3 = r0.<android.app.Activity: android.os.IBinder mToken>;

        $z0 = interfaceinvoke $r2.<android.app.IActivityTaskManager: boolean convertFromTranslucent(android.os.IBinder)>($r3);

        if $z0 == 0 goto label3;

        $r4 = staticinvoke <android.view.WindowManagerGlobal: android.view.WindowManagerGlobal getInstance()>();

        $r5 = r0.<android.app.Activity: android.os.IBinder mToken>;

        virtualinvoke $r4.<android.view.WindowManagerGlobal: void changeCanvasOpacity(android.os.IBinder,boolean)>($r5, 1);

     label2:
        return 1;

     label3:
        goto label5;

     label4:
        $r6 := @caughtexception;

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    private android.app.Dialog createDialog(java.lang.Integer, android.os.Bundle, android.os.Bundle)
    {
        android.app.Activity r0;
        android.os.Bundle r1, r2;
        int $i0;
        java.lang.Integer r3;
        android.app.Dialog r4;

        r0 := @this: android.app.Activity;

        r3 := @parameter0: java.lang.Integer;

        r1 := @parameter1: android.os.Bundle;

        r2 := @parameter2: android.os.Bundle;

        $i0 = virtualinvoke r3.<java.lang.Integer: int intValue()>();

        r4 = virtualinvoke r0.<android.app.Activity: android.app.Dialog onCreateDialog(int,android.os.Bundle)>($i0, r2);

        if r4 != null goto label1;

        return null;

     label1:
        virtualinvoke r4.<android.app.Dialog: void dispatchOnCreate(android.os.Bundle)>(r1);

        return r4;
    }

    private boolean deviceSupportsPictureInPictureMode()
    {
        android.app.Activity r0;
        android.content.pm.PackageManager $r1;
        boolean $z0;

        r0 := @this: android.app.Activity;

        $r1 = virtualinvoke r0.<android.app.Activity: android.content.pm.PackageManager getPackageManager()>();

        $z0 = virtualinvoke $r1.<android.content.pm.PackageManager: boolean hasSystemFeature(java.lang.String)>("android.software.picture_in_picture");

        return $z0;
    }

    private void dispatchActivityCreated(android.os.Bundle)
    {
        android.app.Activity r0;
        android.os.Bundle r1;
        java.lang.Object[] r2;
        android.app.Application $r3;
        int $i0, i1;
        java.lang.Object $r4;
        android.app.Application$ActivityLifecycleCallbacks $r5;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.os.Bundle;

        $r3 = virtualinvoke r0.<android.app.Activity: android.app.Application getApplication()>();

        virtualinvoke $r3.<android.app.Application: void dispatchActivityCreated(android.app.Activity,android.os.Bundle)>(r0, r1);

        r2 = specialinvoke r0.<android.app.Activity: java.lang.Object[] collectActivityLifecycleCallbacks()>();

        if r2 == null goto label2;

        i1 = 0;

     label1:
        $i0 = lengthof r2;

        if i1 >= $i0 goto label2;

        $r4 = r2[i1];

        $r5 = (android.app.Application$ActivityLifecycleCallbacks) $r4;

        interfaceinvoke $r5.<android.app.Application$ActivityLifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)>(r0, r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    private void dispatchActivityDestroyed()
    {
        android.app.Activity r0;
        java.lang.Object[] r1;
        android.app.Application $r2;
        int $i0, i1;
        java.lang.Object $r3;
        android.app.Application$ActivityLifecycleCallbacks $r4;

        r0 := @this: android.app.Activity;

        r1 = specialinvoke r0.<android.app.Activity: java.lang.Object[] collectActivityLifecycleCallbacks()>();

        if r1 == null goto label2;

        $i0 = lengthof r1;

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label2;

        $r3 = r1[i1];

        $r4 = (android.app.Application$ActivityLifecycleCallbacks) $r3;

        interfaceinvoke $r4.<android.app.Application$ActivityLifecycleCallbacks: void onActivityDestroyed(android.app.Activity)>(r0);

        i1 = i1 + -1;

        goto label1;

     label2:
        $r2 = virtualinvoke r0.<android.app.Activity: android.app.Application getApplication()>();

        virtualinvoke $r2.<android.app.Application: void dispatchActivityDestroyed(android.app.Activity)>(r0);

        return;
    }

    private void dispatchActivityPaused()
    {
        android.app.Activity r0;
        java.lang.Object[] r1;
        android.app.Application $r2;
        int $i0, i1;
        java.lang.Object $r3;
        android.app.Application$ActivityLifecycleCallbacks $r4;

        r0 := @this: android.app.Activity;

        r1 = specialinvoke r0.<android.app.Activity: java.lang.Object[] collectActivityLifecycleCallbacks()>();

        if r1 == null goto label2;

        $i0 = lengthof r1;

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label2;

        $r3 = r1[i1];

        $r4 = (android.app.Application$ActivityLifecycleCallbacks) $r3;

        interfaceinvoke $r4.<android.app.Application$ActivityLifecycleCallbacks: void onActivityPaused(android.app.Activity)>(r0);

        i1 = i1 + -1;

        goto label1;

     label2:
        $r2 = virtualinvoke r0.<android.app.Activity: android.app.Application getApplication()>();

        virtualinvoke $r2.<android.app.Application: void dispatchActivityPaused(android.app.Activity)>(r0);

        return;
    }

    private void dispatchActivityPostCreated(android.os.Bundle)
    {
        android.app.Activity r0;
        android.os.Bundle r1;
        java.lang.Object[] r2;
        android.app.Application $r3;
        int $i0, i1;
        java.lang.Object $r4;
        android.app.Application$ActivityLifecycleCallbacks $r5;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.os.Bundle;

        r2 = specialinvoke r0.<android.app.Activity: java.lang.Object[] collectActivityLifecycleCallbacks()>();

        if r2 == null goto label2;

        i1 = 0;

     label1:
        $i0 = lengthof r2;

        if i1 >= $i0 goto label2;

        $r4 = r2[i1];

        $r5 = (android.app.Application$ActivityLifecycleCallbacks) $r4;

        interfaceinvoke $r5.<android.app.Application$ActivityLifecycleCallbacks: void onActivityPostCreated(android.app.Activity,android.os.Bundle)>(r0, r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r3 = virtualinvoke r0.<android.app.Activity: android.app.Application getApplication()>();

        virtualinvoke $r3.<android.app.Application: void dispatchActivityPostCreated(android.app.Activity,android.os.Bundle)>(r0, r1);

        return;
    }

    private void dispatchActivityPostDestroyed()
    {
        android.app.Activity r0;
        java.lang.Object[] r1;
        android.app.Application $r2;
        int $i0, i1;
        java.lang.Object $r3;
        android.app.Application$ActivityLifecycleCallbacks $r4;

        r0 := @this: android.app.Activity;

        r1 = specialinvoke r0.<android.app.Activity: java.lang.Object[] collectActivityLifecycleCallbacks()>();

        if r1 == null goto label2;

        $i0 = lengthof r1;

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label2;

        $r3 = r1[i1];

        $r4 = (android.app.Application$ActivityLifecycleCallbacks) $r3;

        interfaceinvoke $r4.<android.app.Application$ActivityLifecycleCallbacks: void onActivityPostDestroyed(android.app.Activity)>(r0);

        i1 = i1 + -1;

        goto label1;

     label2:
        $r2 = virtualinvoke r0.<android.app.Activity: android.app.Application getApplication()>();

        virtualinvoke $r2.<android.app.Application: void dispatchActivityPostDestroyed(android.app.Activity)>(r0);

        return;
    }

    private void dispatchActivityPostPaused()
    {
        android.app.Activity r0;
        java.lang.Object[] r1;
        android.app.Application $r2;
        int $i0, i1;
        java.lang.Object $r3;
        android.app.Application$ActivityLifecycleCallbacks $r4;

        r0 := @this: android.app.Activity;

        r1 = specialinvoke r0.<android.app.Activity: java.lang.Object[] collectActivityLifecycleCallbacks()>();

        if r1 == null goto label2;

        $i0 = lengthof r1;

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label2;

        $r3 = r1[i1];

        $r4 = (android.app.Application$ActivityLifecycleCallbacks) $r3;

        interfaceinvoke $r4.<android.app.Application$ActivityLifecycleCallbacks: void onActivityPostPaused(android.app.Activity)>(r0);

        i1 = i1 + -1;

        goto label1;

     label2:
        $r2 = virtualinvoke r0.<android.app.Activity: android.app.Application getApplication()>();

        virtualinvoke $r2.<android.app.Application: void dispatchActivityPostPaused(android.app.Activity)>(r0);

        return;
    }

    private void dispatchActivityPostResumed()
    {
        android.app.Activity r0;
        java.lang.Object[] r1;
        android.app.Application $r2;
        int $i0, i1;
        java.lang.Object $r3;
        android.app.Application$ActivityLifecycleCallbacks $r4;

        r0 := @this: android.app.Activity;

        r1 = specialinvoke r0.<android.app.Activity: java.lang.Object[] collectActivityLifecycleCallbacks()>();

        if r1 == null goto label2;

        i1 = 0;

     label1:
        $i0 = lengthof r1;

        if i1 >= $i0 goto label2;

        $r3 = r1[i1];

        $r4 = (android.app.Application$ActivityLifecycleCallbacks) $r3;

        interfaceinvoke $r4.<android.app.Application$ActivityLifecycleCallbacks: void onActivityPostResumed(android.app.Activity)>(r0);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r2 = virtualinvoke r0.<android.app.Activity: android.app.Application getApplication()>();

        virtualinvoke $r2.<android.app.Application: void dispatchActivityPostResumed(android.app.Activity)>(r0);

        return;
    }

    private void dispatchActivityPostSaveInstanceState(android.os.Bundle)
    {
        android.app.Activity r0;
        android.os.Bundle r1;
        java.lang.Object[] r2;
        android.app.Application $r3;
        int $i0, i1;
        java.lang.Object $r4;
        android.app.Application$ActivityLifecycleCallbacks $r5;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.os.Bundle;

        r2 = specialinvoke r0.<android.app.Activity: java.lang.Object[] collectActivityLifecycleCallbacks()>();

        if r2 == null goto label2;

        $i0 = lengthof r2;

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label2;

        $r4 = r2[i1];

        $r5 = (android.app.Application$ActivityLifecycleCallbacks) $r4;

        interfaceinvoke $r5.<android.app.Application$ActivityLifecycleCallbacks: void onActivityPostSaveInstanceState(android.app.Activity,android.os.Bundle)>(r0, r1);

        i1 = i1 + -1;

        goto label1;

     label2:
        $r3 = virtualinvoke r0.<android.app.Activity: android.app.Application getApplication()>();

        virtualinvoke $r3.<android.app.Application: void dispatchActivityPostSaveInstanceState(android.app.Activity,android.os.Bundle)>(r0, r1);

        return;
    }

    private void dispatchActivityPostStarted()
    {
        android.app.Activity r0;
        java.lang.Object[] r1;
        android.app.Application $r2;
        int $i0, i1;
        java.lang.Object $r3;
        android.app.Application$ActivityLifecycleCallbacks $r4;

        r0 := @this: android.app.Activity;

        r1 = specialinvoke r0.<android.app.Activity: java.lang.Object[] collectActivityLifecycleCallbacks()>();

        if r1 == null goto label2;

        i1 = 0;

     label1:
        $i0 = lengthof r1;

        if i1 >= $i0 goto label2;

        $r3 = r1[i1];

        $r4 = (android.app.Application$ActivityLifecycleCallbacks) $r3;

        interfaceinvoke $r4.<android.app.Application$ActivityLifecycleCallbacks: void onActivityPostStarted(android.app.Activity)>(r0);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r2 = virtualinvoke r0.<android.app.Activity: android.app.Application getApplication()>();

        virtualinvoke $r2.<android.app.Application: void dispatchActivityPostStarted(android.app.Activity)>(r0);

        return;
    }

    private void dispatchActivityPostStopped()
    {
        android.app.Activity r0;
        java.lang.Object[] r1;
        android.app.Application $r2;
        int $i0, i1;
        java.lang.Object $r3;
        android.app.Application$ActivityLifecycleCallbacks $r4;

        r0 := @this: android.app.Activity;

        r1 = specialinvoke r0.<android.app.Activity: java.lang.Object[] collectActivityLifecycleCallbacks()>();

        if r1 == null goto label2;

        $i0 = lengthof r1;

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label2;

        $r3 = r1[i1];

        $r4 = (android.app.Application$ActivityLifecycleCallbacks) $r3;

        interfaceinvoke $r4.<android.app.Application$ActivityLifecycleCallbacks: void onActivityPostStopped(android.app.Activity)>(r0);

        i1 = i1 + -1;

        goto label1;

     label2:
        $r2 = virtualinvoke r0.<android.app.Activity: android.app.Application getApplication()>();

        virtualinvoke $r2.<android.app.Application: void dispatchActivityPostStopped(android.app.Activity)>(r0);

        return;
    }

    private void dispatchActivityPreCreated(android.os.Bundle)
    {
        android.app.Activity r0;
        android.os.Bundle r1;
        java.lang.Object[] r2;
        android.app.Application $r3;
        int $i0, i1;
        java.lang.Object $r4;
        android.app.Application$ActivityLifecycleCallbacks $r5;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.os.Bundle;

        $r3 = virtualinvoke r0.<android.app.Activity: android.app.Application getApplication()>();

        virtualinvoke $r3.<android.app.Application: void dispatchActivityPreCreated(android.app.Activity,android.os.Bundle)>(r0, r1);

        r2 = specialinvoke r0.<android.app.Activity: java.lang.Object[] collectActivityLifecycleCallbacks()>();

        if r2 == null goto label2;

        i1 = 0;

     label1:
        $i0 = lengthof r2;

        if i1 >= $i0 goto label2;

        $r4 = r2[i1];

        $r5 = (android.app.Application$ActivityLifecycleCallbacks) $r4;

        interfaceinvoke $r5.<android.app.Application$ActivityLifecycleCallbacks: void onActivityPreCreated(android.app.Activity,android.os.Bundle)>(r0, r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    private void dispatchActivityPreDestroyed()
    {
        android.app.Activity r0;
        java.lang.Object[] r1;
        android.app.Application $r2;
        int $i0, i1;
        java.lang.Object $r3;
        android.app.Application$ActivityLifecycleCallbacks $r4;

        r0 := @this: android.app.Activity;

        $r2 = virtualinvoke r0.<android.app.Activity: android.app.Application getApplication()>();

        virtualinvoke $r2.<android.app.Application: void dispatchActivityPreDestroyed(android.app.Activity)>(r0);

        r1 = specialinvoke r0.<android.app.Activity: java.lang.Object[] collectActivityLifecycleCallbacks()>();

        if r1 == null goto label2;

        $i0 = lengthof r1;

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label2;

        $r3 = r1[i1];

        $r4 = (android.app.Application$ActivityLifecycleCallbacks) $r3;

        interfaceinvoke $r4.<android.app.Application$ActivityLifecycleCallbacks: void onActivityPreDestroyed(android.app.Activity)>(r0);

        i1 = i1 + -1;

        goto label1;

     label2:
        return;
    }

    private void dispatchActivityPrePaused()
    {
        android.app.Activity r0;
        java.lang.Object[] r1;
        android.app.Application $r2;
        int $i0, i1;
        java.lang.Object $r3;
        android.app.Application$ActivityLifecycleCallbacks $r4;

        r0 := @this: android.app.Activity;

        $r2 = virtualinvoke r0.<android.app.Activity: android.app.Application getApplication()>();

        virtualinvoke $r2.<android.app.Application: void dispatchActivityPrePaused(android.app.Activity)>(r0);

        r1 = specialinvoke r0.<android.app.Activity: java.lang.Object[] collectActivityLifecycleCallbacks()>();

        if r1 == null goto label2;

        $i0 = lengthof r1;

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label2;

        $r3 = r1[i1];

        $r4 = (android.app.Application$ActivityLifecycleCallbacks) $r3;

        interfaceinvoke $r4.<android.app.Application$ActivityLifecycleCallbacks: void onActivityPrePaused(android.app.Activity)>(r0);

        i1 = i1 + -1;

        goto label1;

     label2:
        return;
    }

    private void dispatchActivityPreResumed()
    {
        android.app.Activity r0;
        java.lang.Object[] r1;
        android.app.Application $r2;
        int $i0, i1;
        java.lang.Object $r3;
        android.app.Application$ActivityLifecycleCallbacks $r4;

        r0 := @this: android.app.Activity;

        $r2 = virtualinvoke r0.<android.app.Activity: android.app.Application getApplication()>();

        virtualinvoke $r2.<android.app.Application: void dispatchActivityPreResumed(android.app.Activity)>(r0);

        r1 = specialinvoke r0.<android.app.Activity: java.lang.Object[] collectActivityLifecycleCallbacks()>();

        if r1 == null goto label2;

        i1 = 0;

     label1:
        $i0 = lengthof r1;

        if i1 >= $i0 goto label2;

        $r3 = r1[i1];

        $r4 = (android.app.Application$ActivityLifecycleCallbacks) $r3;

        interfaceinvoke $r4.<android.app.Application$ActivityLifecycleCallbacks: void onActivityPreResumed(android.app.Activity)>(r0);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    private void dispatchActivityPreSaveInstanceState(android.os.Bundle)
    {
        android.app.Activity r0;
        android.os.Bundle r1;
        java.lang.Object[] r2;
        android.app.Application $r3;
        int $i0, i1;
        java.lang.Object $r4;
        android.app.Application$ActivityLifecycleCallbacks $r5;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.os.Bundle;

        $r3 = virtualinvoke r0.<android.app.Activity: android.app.Application getApplication()>();

        virtualinvoke $r3.<android.app.Application: void dispatchActivityPreSaveInstanceState(android.app.Activity,android.os.Bundle)>(r0, r1);

        r2 = specialinvoke r0.<android.app.Activity: java.lang.Object[] collectActivityLifecycleCallbacks()>();

        if r2 == null goto label2;

        $i0 = lengthof r2;

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label2;

        $r4 = r2[i1];

        $r5 = (android.app.Application$ActivityLifecycleCallbacks) $r4;

        interfaceinvoke $r5.<android.app.Application$ActivityLifecycleCallbacks: void onActivityPreSaveInstanceState(android.app.Activity,android.os.Bundle)>(r0, r1);

        i1 = i1 + -1;

        goto label1;

     label2:
        return;
    }

    private void dispatchActivityPreStarted()
    {
        android.app.Activity r0;
        java.lang.Object[] r1;
        android.app.Application $r2;
        int $i0, i1;
        java.lang.Object $r3;
        android.app.Application$ActivityLifecycleCallbacks $r4;

        r0 := @this: android.app.Activity;

        $r2 = virtualinvoke r0.<android.app.Activity: android.app.Application getApplication()>();

        virtualinvoke $r2.<android.app.Application: void dispatchActivityPreStarted(android.app.Activity)>(r0);

        r1 = specialinvoke r0.<android.app.Activity: java.lang.Object[] collectActivityLifecycleCallbacks()>();

        if r1 == null goto label2;

        i1 = 0;

     label1:
        $i0 = lengthof r1;

        if i1 >= $i0 goto label2;

        $r3 = r1[i1];

        $r4 = (android.app.Application$ActivityLifecycleCallbacks) $r3;

        interfaceinvoke $r4.<android.app.Application$ActivityLifecycleCallbacks: void onActivityPreStarted(android.app.Activity)>(r0);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    private void dispatchActivityPreStopped()
    {
        android.app.Activity r0;
        java.lang.Object[] r1;
        android.app.Application $r2;
        int $i0, i1;
        java.lang.Object $r3;
        android.app.Application$ActivityLifecycleCallbacks $r4;

        r0 := @this: android.app.Activity;

        $r2 = virtualinvoke r0.<android.app.Activity: android.app.Application getApplication()>();

        virtualinvoke $r2.<android.app.Application: void dispatchActivityPreStopped(android.app.Activity)>(r0);

        r1 = specialinvoke r0.<android.app.Activity: java.lang.Object[] collectActivityLifecycleCallbacks()>();

        if r1 == null goto label2;

        $i0 = lengthof r1;

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label2;

        $r3 = r1[i1];

        $r4 = (android.app.Application$ActivityLifecycleCallbacks) $r3;

        interfaceinvoke $r4.<android.app.Application$ActivityLifecycleCallbacks: void onActivityPreStopped(android.app.Activity)>(r0);

        i1 = i1 + -1;

        goto label1;

     label2:
        return;
    }

    private void dispatchActivityResumed()
    {
        android.app.Activity r0;
        java.lang.Object[] r1;
        android.app.Application $r2;
        int $i0, i1;
        java.lang.Object $r3;
        android.app.Application$ActivityLifecycleCallbacks $r4;

        r0 := @this: android.app.Activity;

        $r2 = virtualinvoke r0.<android.app.Activity: android.app.Application getApplication()>();

        virtualinvoke $r2.<android.app.Application: void dispatchActivityResumed(android.app.Activity)>(r0);

        r1 = specialinvoke r0.<android.app.Activity: java.lang.Object[] collectActivityLifecycleCallbacks()>();

        if r1 == null goto label2;

        i1 = 0;

     label1:
        $i0 = lengthof r1;

        if i1 >= $i0 goto label2;

        $r3 = r1[i1];

        $r4 = (android.app.Application$ActivityLifecycleCallbacks) $r3;

        interfaceinvoke $r4.<android.app.Application$ActivityLifecycleCallbacks: void onActivityResumed(android.app.Activity)>(r0);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    private void dispatchActivitySaveInstanceState(android.os.Bundle)
    {
        android.app.Activity r0;
        android.os.Bundle r1;
        java.lang.Object[] r2;
        android.app.Application $r3;
        int $i0, i1;
        java.lang.Object $r4;
        android.app.Application$ActivityLifecycleCallbacks $r5;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.os.Bundle;

        r2 = specialinvoke r0.<android.app.Activity: java.lang.Object[] collectActivityLifecycleCallbacks()>();

        if r2 == null goto label2;

        $i0 = lengthof r2;

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label2;

        $r4 = r2[i1];

        $r5 = (android.app.Application$ActivityLifecycleCallbacks) $r4;

        interfaceinvoke $r5.<android.app.Application$ActivityLifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)>(r0, r1);

        i1 = i1 + -1;

        goto label1;

     label2:
        $r3 = virtualinvoke r0.<android.app.Activity: android.app.Application getApplication()>();

        virtualinvoke $r3.<android.app.Application: void dispatchActivitySaveInstanceState(android.app.Activity,android.os.Bundle)>(r0, r1);

        return;
    }

    private void dispatchActivityStarted()
    {
        android.app.Activity r0;
        java.lang.Object[] r1;
        android.app.Application $r2;
        int $i0, i1;
        java.lang.Object $r3;
        android.app.Application$ActivityLifecycleCallbacks $r4;

        r0 := @this: android.app.Activity;

        $r2 = virtualinvoke r0.<android.app.Activity: android.app.Application getApplication()>();

        virtualinvoke $r2.<android.app.Application: void dispatchActivityStarted(android.app.Activity)>(r0);

        r1 = specialinvoke r0.<android.app.Activity: java.lang.Object[] collectActivityLifecycleCallbacks()>();

        if r1 == null goto label2;

        i1 = 0;

     label1:
        $i0 = lengthof r1;

        if i1 >= $i0 goto label2;

        $r3 = r1[i1];

        $r4 = (android.app.Application$ActivityLifecycleCallbacks) $r3;

        interfaceinvoke $r4.<android.app.Application$ActivityLifecycleCallbacks: void onActivityStarted(android.app.Activity)>(r0);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    private void dispatchActivityStopped()
    {
        android.app.Activity r0;
        java.lang.Object[] r1;
        android.app.Application $r2;
        int $i0, i1;
        java.lang.Object $r3;
        android.app.Application$ActivityLifecycleCallbacks $r4;

        r0 := @this: android.app.Activity;

        r1 = specialinvoke r0.<android.app.Activity: java.lang.Object[] collectActivityLifecycleCallbacks()>();

        if r1 == null goto label2;

        $i0 = lengthof r1;

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label2;

        $r3 = r1[i1];

        $r4 = (android.app.Application$ActivityLifecycleCallbacks) $r3;

        interfaceinvoke $r4.<android.app.Application$ActivityLifecycleCallbacks: void onActivityStopped(android.app.Activity)>(r0);

        i1 = i1 + -1;

        goto label1;

     label2:
        $r2 = virtualinvoke r0.<android.app.Activity: android.app.Application getApplication()>();

        virtualinvoke $r2.<android.app.Application: void dispatchActivityStopped(android.app.Activity)>(r0);

        return;
    }

    private void dispatchRequestPermissionsResult(int, android.content.Intent)
    {
        android.app.Activity r0;
        int i0;
        android.content.Intent r1;
        java.lang.String[] r2;
        int[] r3;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.Intent;

        r0.<android.app.Activity: boolean mHasCurrentPermissionsRequest> = 0;

        if r1 == null goto label1;

        r2 = virtualinvoke r1.<android.content.Intent: java.lang.String[] getStringArrayExtra(java.lang.String)>("android.content.pm.extra.REQUEST_PERMISSIONS_NAMES");

        goto label2;

     label1:
        r2 = newarray (java.lang.String)[0];

     label2:
        if r1 == null goto label3;

        r3 = virtualinvoke r1.<android.content.Intent: int[] getIntArrayExtra(java.lang.String)>("android.content.pm.extra.REQUEST_PERMISSIONS_RESULTS");

        goto label4;

     label3:
        r3 = newarray (int)[0];

     label4:
        virtualinvoke r0.<android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>(i0, r2, r3);

        return;
    }

    private void dispatchRequestPermissionsResultToFragment(int, android.content.Intent, android.app.Fragment)
    {
        android.app.Activity r0;
        int i0;
        android.app.Fragment r1;
        android.content.Intent r2;
        java.lang.String[] r3;
        int[] r4;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        r2 := @parameter1: android.content.Intent;

        r1 := @parameter2: android.app.Fragment;

        if r2 == null goto label1;

        r3 = virtualinvoke r2.<android.content.Intent: java.lang.String[] getStringArrayExtra(java.lang.String)>("android.content.pm.extra.REQUEST_PERMISSIONS_NAMES");

        goto label2;

     label1:
        r3 = newarray (java.lang.String)[0];

     label2:
        if r2 == null goto label3;

        r4 = virtualinvoke r2.<android.content.Intent: int[] getIntArrayExtra(java.lang.String)>("android.content.pm.extra.REQUEST_PERMISSIONS_RESULTS");

        goto label4;

     label3:
        r4 = newarray (int)[0];

     label4:
        virtualinvoke r1.<android.app.Fragment: void onRequestPermissionsResult(int,java.lang.String[],int[])>(i0, r3, r4);

        return;
    }

    private void enableAutofillCompatibilityIfNeeded()
    {
        android.app.Activity r0;
        android.view.autofill.AutofillManager r1;
        boolean $z0;
        java.lang.Object $r2;

        r0 := @this: android.app.Activity;

        $z0 = virtualinvoke r0.<android.app.Activity: boolean isAutofillCompatibilityEnabled()>();

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<android.app.Activity: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/view/autofill/AutofillManager;");

        r1 = (android.view.autofill.AutofillManager) $r2;

        if r1 == null goto label1;

        virtualinvoke r1.<android.view.autofill.AutofillManager: void enableCompatibilityMode()>();

     label1:
        return;
    }

    private void ensureSearchManager()
    {
        android.app.Activity r0;
        android.app.SearchManager $r1, r4;
        android.os.ServiceManager$ServiceNotFoundException $r2;
        java.lang.IllegalStateException $r3;

        r0 := @this: android.app.Activity;

        $r1 = r0.<android.app.Activity: android.app.SearchManager mSearchManager>;

        if $r1 == null goto label1;

        return;

     label1:
        r4 = new android.app.SearchManager;

        specialinvoke r4.<android.app.SearchManager: void <init>(android.content.Context,android.os.Handler)>(r0, null);

        r0.<android.app.Activity: android.app.SearchManager mSearchManager> = r4;

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>($r2);

        throw $r3;

        catch android.os.ServiceManager$ServiceNotFoundException from label1 to label2 with label3;
    }

    private void finish(int)
    {
        android.app.Activity r0, r5;
        int i0, i1;
        boolean $z0, $z1;
        android.app.IActivityTaskManager $r1;
        android.os.IBinder $r2;
        java.lang.Throwable $r3;
        android.os.RemoteException $r4;
        android.content.Intent r6, r9;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        r5 = r0.<android.app.Activity: android.app.Activity mParent>;

        if r5 != null goto label11;

        entermonitor r0;

     label01:
        i1 = r0.<android.app.Activity: int mResultCode>;

        r6 = r0.<android.app.Activity: android.content.Intent mResultData>;

        exitmonitor r0;

     label02:
        if r6 == null goto label04;

     label03:
        virtualinvoke r6.<android.content.Intent: void prepareToLeaveProcess(android.content.Context)>(r0);

     label04:
        $r1 = staticinvoke <android.app.ActivityTaskManager: android.app.IActivityTaskManager getService()>();

        $r2 = r0.<android.app.Activity: android.os.IBinder mToken>;

        $z1 = interfaceinvoke $r1.<android.app.IActivityTaskManager: boolean finishActivity(android.os.IBinder,int,android.content.Intent,int)>($r2, i1, r6, i0);

        if $z1 == 0 goto label05;

        r0.<android.app.Activity: boolean mFinished> = 1;

     label05:
        goto label07;

     label06:
        $r4 := @caughtexception;

     label07:
        goto label12;

     label08:
        $r3 := @caughtexception;

     label09:
        exitmonitor r0;

     label10:
        throw $r3;

     label11:
        virtualinvoke r5.<android.app.Activity: void finishFromChild(android.app.Activity)>(r0);

     label12:
        r9 = r0.<android.app.Activity: android.content.Intent mIntent>;

        if r9 == null goto label13;

        $z0 = virtualinvoke r9.<android.content.Intent: boolean hasExtra(java.lang.String)>("android.view.autofill.extra.RESTORE_SESSION_TOKEN");

        if $z0 == 0 goto label13;

        specialinvoke r0.<android.app.Activity: void restoreAutofillSaveUi()>();

     label13:
        return;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch android.os.RemoteException from label03 to label04 with label06;
        catch android.os.RemoteException from label04 to label05 with label06;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    private android.view.autofill.AutofillManager getAutofillManager()
    {
        android.app.Activity r0;
        android.view.autofill.AutofillManager $r1, $r2, $r4;
        java.lang.Object $r3;

        r0 := @this: android.app.Activity;

        $r1 = r0.<android.app.Activity: android.view.autofill.AutofillManager mAutofillManager>;

        if $r1 != null goto label1;

        $r3 = virtualinvoke r0.<android.app.Activity: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/view/autofill/AutofillManager;");

        $r4 = (android.view.autofill.AutofillManager) $r3;

        r0.<android.app.Activity: android.view.autofill.AutofillManager mAutofillManager> = $r4;

     label1:
        $r2 = r0.<android.app.Activity: android.view.autofill.AutofillManager mAutofillManager>;

        return $r2;
    }

    private android.view.contentcapture.ContentCaptureManager getContentCaptureManager()
    {
        android.app.Activity r0;
        int $i0;
        boolean $z0;
        android.view.contentcapture.ContentCaptureManager $r1, $r2, $r4;
        java.lang.Object $r3;

        r0 := @this: android.app.Activity;

        $i0 = staticinvoke <android.os.Process: int myUid()>();

        $z0 = staticinvoke <android.os.UserHandle: boolean isApp(int)>($i0);

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r1 = r0.<android.app.Activity: android.view.contentcapture.ContentCaptureManager mContentCaptureManager>;

        if $r1 != null goto label2;

        $r3 = virtualinvoke r0.<android.app.Activity: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/view/contentcapture/ContentCaptureManager;");

        $r4 = (android.view.contentcapture.ContentCaptureManager) $r3;

        r0.<android.app.Activity: android.view.contentcapture.ContentCaptureManager mContentCaptureManager> = $r4;

     label2:
        $r2 = r0.<android.app.Activity: android.view.contentcapture.ContentCaptureManager mContentCaptureManager>;

        return $r2;
    }

    private java.lang.String getContentCaptureTypeAsString(int)
    {
        android.app.Activity r0;
        int i0;
        java.lang.StringBuilder $r2;
        java.lang.String $r5;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        if i0 == 1 goto label4;

        if i0 == 2 goto label3;

        if i0 == 3 goto label2;

        if i0 == 4 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UNKNOW-");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;

     label1:
        return "STOP";

     label2:
        return "PAUSE";

     label3:
        return "RESUME";

     label4:
        return "START";
    }

    private static native java.lang.String getDlWarning();

    private void initWindowDecorActionBar()
    {
        android.app.Activity r0;
        boolean $z0, $z1, $z2;
        android.app.ActionBar $r2;
        com.android.internal.app.WindowDecorActionBar $r3;
        android.content.pm.ActivityInfo $r4, $r6;
        android.view.Window $r5, $r7, r8;
        int $i0, $i1;

        r0 := @this: android.app.Activity;

        r8 = virtualinvoke r0.<android.app.Activity: android.view.Window getWindow()>();

        virtualinvoke r8.<android.view.Window: android.view.View getDecorView()>();

        $z0 = virtualinvoke r0.<android.app.Activity: boolean isChild()>();

        if $z0 != 0 goto label2;

        $z1 = virtualinvoke r8.<android.view.Window: boolean hasFeature(int)>(8);

        if $z1 == 0 goto label2;

        $r2 = r0.<android.app.Activity: android.app.ActionBar mActionBar>;

        if $r2 == null goto label1;

        goto label2;

     label1:
        $r3 = new com.android.internal.app.WindowDecorActionBar;

        specialinvoke $r3.<com.android.internal.app.WindowDecorActionBar: void <init>(android.app.Activity)>(r0);

        r0.<android.app.Activity: android.app.ActionBar mActionBar> = $r3;

        $z2 = r0.<android.app.Activity: boolean mEnableDefaultActionBarUp>;

        virtualinvoke $r3.<android.app.ActionBar: void setDefaultDisplayHomeAsUpEnabled(boolean)>($z2);

        $r5 = r0.<android.app.Activity: android.view.Window mWindow>;

        $r4 = r0.<android.app.Activity: android.content.pm.ActivityInfo mActivityInfo>;

        $i0 = virtualinvoke $r4.<android.content.pm.ActivityInfo: int getIconResource()>();

        virtualinvoke $r5.<android.view.Window: void setDefaultIcon(int)>($i0);

        $r7 = r0.<android.app.Activity: android.view.Window mWindow>;

        $r6 = r0.<android.app.Activity: android.content.pm.ActivityInfo mActivityInfo>;

        $i1 = virtualinvoke $r6.<android.content.pm.ActivityInfo: int getLogoResource()>();

        virtualinvoke $r7.<android.view.Window: void setDefaultLogo(int)>($i1);

        return;

     label2:
        return;
    }

    private java.lang.IllegalArgumentException missingDialog(int)
    {
        android.app.Activity r0;
        int i0;
        java.lang.StringBuilder $r2;
        java.lang.IllegalArgumentException $r6;
        java.lang.String $r7;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("no dialog with id ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" was ever shown via Activity#showDialog");

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        return $r6;
    }

    private void notifyContentCaptureManagerIfNeeded(int)
    {
        android.app.Activity r0;
        int i0;
        android.view.Window r1;
        boolean $z0;
        android.os.IBinder $r2;
        android.content.ComponentName $r3, $r13;
        android.view.WindowManager$LayoutParams $r4;
        java.lang.String $r7, $r10, $r14, $r16;
        java.lang.StringBuilder $r8, r20;
        java.lang.Throwable $r17;
        android.view.contentcapture.ContentCaptureManager r19;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        $z0 = staticinvoke <android.os.Trace: boolean isTagEnabled(long)>(64L);

        if $z0 == 0 goto label01;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("notifyContentCapture(");

        $r10 = specialinvoke r0.<android.app.Activity: java.lang.String getContentCaptureTypeAsString(int)>(i0);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") for ");

        $r13 = r0.<android.app.Activity: android.content.ComponentName mComponent>;

        $r14 = virtualinvoke $r13.<android.content.ComponentName: java.lang.String toShortString()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(64L, $r16);

     label01:
        r19 = specialinvoke r0.<android.app.Activity: android.view.contentcapture.ContentCaptureManager getContentCaptureManager()>();

     label02:
        if r19 != null goto label03;

        staticinvoke <android.os.Trace: void traceEnd(long)>(64L);

        return;

     label03:
        if i0 == 1 goto label12;

        if i0 == 2 goto label10;

        if i0 == 3 goto label08;

        if i0 == 4 goto label06;

     label04:
        r20 = new java.lang.StringBuilder;

        specialinvoke r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid @ContentCaptureNotificationType: ");

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String)>("Activity", $r7);

     label05:
        goto label16;

     label06:
        virtualinvoke r19.<android.view.contentcapture.ContentCaptureManager: void onActivityDestroyed()>();

     label07:
        goto label16;

     label08:
        virtualinvoke r19.<android.view.contentcapture.ContentCaptureManager: void onActivityPaused()>();

     label09:
        goto label16;

     label10:
        virtualinvoke r19.<android.view.contentcapture.ContentCaptureManager: void onActivityResumed()>();

     label11:
        goto label16;

     label12:
        r1 = virtualinvoke r0.<android.app.Activity: android.view.Window getWindow()>();

     label13:
        if r1 == null goto label15;

     label14:
        $r4 = virtualinvoke r1.<android.view.Window: android.view.WindowManager$LayoutParams getAttributes()>();

        virtualinvoke r19.<android.view.contentcapture.ContentCaptureManager: void updateWindowAttributes(android.view.WindowManager$LayoutParams)>($r4);

     label15:
        $r2 = r0.<android.app.Activity: android.os.IBinder mToken>;

        $r3 = virtualinvoke r0.<android.app.Activity: android.content.ComponentName getComponentName()>();

        virtualinvoke r19.<android.view.contentcapture.ContentCaptureManager: void onActivityCreated(android.os.IBinder,android.content.ComponentName)>($r2, $r3);

     label16:
        staticinvoke <android.os.Trace: void traceEnd(long)>(64L);

        return;

     label17:
        $r17 := @caughtexception;

        staticinvoke <android.os.Trace: void traceEnd(long)>(64L);

        throw $r17;

        catch java.lang.Throwable from label01 to label02 with label17;
        catch java.lang.Throwable from label04 to label05 with label17;
        catch java.lang.Throwable from label06 to label07 with label17;
        catch java.lang.Throwable from label08 to label09 with label17;
        catch java.lang.Throwable from label10 to label11 with label17;
        catch java.lang.Throwable from label12 to label13 with label17;
        catch java.lang.Throwable from label14 to label15 with label17;
        catch java.lang.Throwable from label15 to label16 with label17;
    }

    private void restoreAutofillSaveUi()
    {
        android.app.Activity r0;
        android.os.IBinder r1;
        android.content.Intent $r2, $r3, $r4;
        android.view.autofill.AutofillManager $r5;

        r0 := @this: android.app.Activity;

        $r2 = r0.<android.app.Activity: android.content.Intent mIntent>;

        r1 = virtualinvoke $r2.<android.content.Intent: android.os.IBinder getIBinderExtra(java.lang.String)>("android.view.autofill.extra.RESTORE_SESSION_TOKEN");

        $r3 = r0.<android.app.Activity: android.content.Intent mIntent>;

        virtualinvoke $r3.<android.content.Intent: void removeExtra(java.lang.String)>("android.view.autofill.extra.RESTORE_SESSION_TOKEN");

        $r4 = r0.<android.app.Activity: android.content.Intent mIntent>;

        virtualinvoke $r4.<android.content.Intent: void removeExtra(java.lang.String)>("android.view.autofill.extra.RESTORE_CROSS_ACTIVITY");

        $r5 = specialinvoke r0.<android.app.Activity: android.view.autofill.AutofillManager getAutofillManager()>();

        virtualinvoke $r5.<android.view.autofill.AutofillManager: void onPendingSaveUi(int,android.os.IBinder)>(2, r1);

        return;
    }

    private void restoreHasCurrentPermissionRequest(android.os.Bundle)
    {
        android.app.Activity r0;
        android.os.Bundle r1;
        boolean $z0;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.os.Bundle;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>("android:hasCurrentPermissionsRequest", 0);

        r0.<android.app.Activity: boolean mHasCurrentPermissionsRequest> = $z0;

     label1:
        return;
    }

    private void restoreManagedDialogs(android.os.Bundle)
    {
        android.app.Activity r0;
        android.os.Bundle r1, $r9, $r10, $r14, r17, r18;
        int[] r2;
        int i0, $i1, $i2, $i3, $i4, $i5, i6;
        java.lang.Integer r3;
        android.util.SparseArray $r5, $r13;
        java.lang.String $r6, $r8;
        android.app.Activity$ManagedDialog $r7;
        android.app.Dialog $r11, $r12, $r15, $r16;

        r0 := @this: android.app.Activity;

        r17 := @parameter0: android.os.Bundle;

        r1 = virtualinvoke r17.<android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>("android:savedDialogs");

        if r1 != null goto label1;

        return;

     label1:
        r2 = virtualinvoke r1.<android.os.Bundle: int[] getIntArray(java.lang.String)>("android:savedDialogIds");

        i0 = lengthof r2;

        $r5 = new android.util.SparseArray;

        specialinvoke $r5.<android.util.SparseArray: void <init>(int)>(i0);

        r0.<android.app.Activity: android.util.SparseArray mManagedDialogs> = $r5;

        i6 = 0;

     label2:
        if i6 >= i0 goto label4;

        $i1 = r2[i6];

        r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $i2 = virtualinvoke r3.<java.lang.Integer: int intValue()>();

        $r6 = staticinvoke <android.app.Activity: java.lang.String savedDialogKeyFor(int)>($i2);

        r18 = virtualinvoke r1.<android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>($r6);

        if r18 == null goto label3;

        $r7 = new android.app.Activity$ManagedDialog;

        specialinvoke $r7.<android.app.Activity$ManagedDialog: void <init>(android.app.Activity$1)>(null);

        $i3 = virtualinvoke r3.<java.lang.Integer: int intValue()>();

        $r8 = staticinvoke <android.app.Activity: java.lang.String savedDialogArgsKeyFor(int)>($i3);

        $r9 = virtualinvoke r1.<android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>($r8);

        $r7.<android.app.Activity$ManagedDialog: android.os.Bundle mArgs> = $r9;

        $r10 = $r7.<android.app.Activity$ManagedDialog: android.os.Bundle mArgs>;

        $r11 = specialinvoke r0.<android.app.Activity: android.app.Dialog createDialog(java.lang.Integer,android.os.Bundle,android.os.Bundle)>(r3, r18, $r10);

        $r7.<android.app.Activity$ManagedDialog: android.app.Dialog mDialog> = $r11;

        $r12 = $r7.<android.app.Activity$ManagedDialog: android.app.Dialog mDialog>;

        if $r12 == null goto label3;

        $r13 = r0.<android.app.Activity: android.util.SparseArray mManagedDialogs>;

        $i4 = virtualinvoke r3.<java.lang.Integer: int intValue()>();

        virtualinvoke $r13.<android.util.SparseArray: void put(int,java.lang.Object)>($i4, $r7);

        $i5 = virtualinvoke r3.<java.lang.Integer: int intValue()>();

        $r15 = $r7.<android.app.Activity$ManagedDialog: android.app.Dialog mDialog>;

        $r14 = $r7.<android.app.Activity$ManagedDialog: android.os.Bundle mArgs>;

        virtualinvoke r0.<android.app.Activity: void onPrepareDialog(int,android.app.Dialog,android.os.Bundle)>($i5, $r15, $r14);

        $r16 = $r7.<android.app.Activity$ManagedDialog: android.app.Dialog mDialog>;

        virtualinvoke $r16.<android.app.Dialog: void onRestoreInstanceState(android.os.Bundle)>(r18);

     label3:
        i6 = i6 + 1;

        goto label2;

     label4:
        return;
    }

    private void saveManagedDialogs(android.os.Bundle)
    {
        android.app.Activity r0;
        android.os.Bundle r1, $r4, $r11, $r12, $r14;
        int i0, i1, $i2, i3;
        int[] r2;
        android.app.Activity$ManagedDialog r3;
        android.util.SparseArray $r5, $r6, $r7, r15;
        java.lang.Object $r8;
        java.lang.String $r9, $r13;
        android.app.Dialog $r10;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.os.Bundle;

        r15 = r0.<android.app.Activity: android.util.SparseArray mManagedDialogs>;

        if r15 != null goto label1;

        return;

     label1:
        i0 = virtualinvoke r15.<android.util.SparseArray: int size()>();

        if i0 != 0 goto label2;

        return;

     label2:
        $r4 = new android.os.Bundle;

        specialinvoke $r4.<android.os.Bundle: void <init>()>();

        $r5 = r0.<android.app.Activity: android.util.SparseArray mManagedDialogs>;

        $i2 = virtualinvoke $r5.<android.util.SparseArray: int size()>();

        r2 = newarray (int)[$i2];

        i3 = 0;

     label3:
        if i3 >= i0 goto label5;

        $r6 = r0.<android.app.Activity: android.util.SparseArray mManagedDialogs>;

        i1 = virtualinvoke $r6.<android.util.SparseArray: int keyAt(int)>(i3);

        r2[i3] = i1;

        $r7 = r0.<android.app.Activity: android.util.SparseArray mManagedDialogs>;

        $r8 = virtualinvoke $r7.<android.util.SparseArray: java.lang.Object valueAt(int)>(i3);

        r3 = (android.app.Activity$ManagedDialog) $r8;

        $r9 = staticinvoke <android.app.Activity: java.lang.String savedDialogKeyFor(int)>(i1);

        $r10 = r3.<android.app.Activity$ManagedDialog: android.app.Dialog mDialog>;

        $r11 = virtualinvoke $r10.<android.app.Dialog: android.os.Bundle onSaveInstanceState()>();

        virtualinvoke $r4.<android.os.Bundle: void putBundle(java.lang.String,android.os.Bundle)>($r9, $r11);

        $r12 = r3.<android.app.Activity$ManagedDialog: android.os.Bundle mArgs>;

        if $r12 == null goto label4;

        $r13 = staticinvoke <android.app.Activity: java.lang.String savedDialogArgsKeyFor(int)>(i1);

        $r14 = r3.<android.app.Activity$ManagedDialog: android.os.Bundle mArgs>;

        virtualinvoke $r4.<android.os.Bundle: void putBundle(java.lang.String,android.os.Bundle)>($r13, $r14);

     label4:
        i3 = i3 + 1;

        goto label3;

     label5:
        virtualinvoke $r4.<android.os.Bundle: void putIntArray(java.lang.String,int[])>("android:savedDialogIds", r2);

        virtualinvoke r1.<android.os.Bundle: void putBundle(java.lang.String,android.os.Bundle)>("android:savedDialogs", $r4);

        return;
    }

    private static java.lang.String savedDialogArgsKeyFor(int)
    {
        int i0;
        java.lang.StringBuilder $r1;
        java.lang.String $r4;

        i0 := @parameter0: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android:dialog_args_");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    private static java.lang.String savedDialogKeyFor(int)
    {
        int i0;
        java.lang.StringBuilder $r1;
        java.lang.String $r4;

        i0 := @parameter0: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android:dialog_");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    private void setLocusContextToContentCapture(android.content.LocusId, android.os.Bundle)
    {
        android.app.Activity r0;
        android.os.Bundle r1;
        android.view.contentcapture.ContentCaptureManager r2;
        android.view.contentcapture.ContentCaptureContext$Builder $r3;
        android.view.contentcapture.MainContentCaptureSession $r4;
        android.view.contentcapture.ContentCaptureContext $r5;
        android.content.LocusId r7;

        r0 := @this: android.app.Activity;

        r7 := @parameter0: android.content.LocusId;

        r1 := @parameter1: android.os.Bundle;

        r2 = specialinvoke r0.<android.app.Activity: android.view.contentcapture.ContentCaptureManager getContentCaptureManager()>();

        if r2 != null goto label1;

        return;

     label1:
        $r3 = new android.view.contentcapture.ContentCaptureContext$Builder;

        specialinvoke $r3.<android.view.contentcapture.ContentCaptureContext$Builder: void <init>(android.content.LocusId)>(r7);

        if r1 == null goto label2;

        virtualinvoke $r3.<android.view.contentcapture.ContentCaptureContext$Builder: android.view.contentcapture.ContentCaptureContext$Builder setExtras(android.os.Bundle)>(r1);

     label2:
        $r4 = virtualinvoke r2.<android.view.contentcapture.ContentCaptureManager: android.view.contentcapture.MainContentCaptureSession getMainContentCaptureSession()>();

        $r5 = virtualinvoke $r3.<android.view.contentcapture.ContentCaptureContext$Builder: android.view.contentcapture.ContentCaptureContext build()>();

        virtualinvoke $r4.<android.view.contentcapture.MainContentCaptureSession: void setContentCaptureContext(android.view.contentcapture.ContentCaptureContext)>($r5);

        return;
    }

    private void startActivityAsUserFromFragment(android.app.Fragment, android.content.Intent, int, android.os.Bundle, android.os.UserHandle)
    {
        android.app.Activity r0;
        android.app.Fragment r1;
        android.content.Intent r2;
        int i0;
        android.os.Bundle r3;
        android.os.UserHandle r4;
        java.lang.String $r5;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.app.Fragment;

        r2 := @parameter1: android.content.Intent;

        i0 := @parameter2: int;

        r3 := @parameter3: android.os.Bundle;

        r4 := @parameter4: android.os.UserHandle;

        $r5 = r1.<android.app.Fragment: java.lang.String mWho>;

        virtualinvoke r0.<android.app.Activity: void startActivityForResultAsUser(android.content.Intent,java.lang.String,int,android.os.Bundle,android.os.UserHandle)>(r2, $r5, i0, r3, r4);

        return;
    }

    private void startIntentSenderForResultInner(android.content.IntentSender, java.lang.String, int, android.content.Intent, int, int, android.os.Bundle) throws android.content.IntentSender$SendIntentException
    {
        android.app.Activity r0;
        java.lang.String r1, r13;
        int i0, i1, i2, i3;
        android.content.Intent r2;
        android.os.Bundle r3, r12;
        android.app.IActivityTaskManager r4;
        android.app.ActivityThread$ApplicationThread r5;
        android.app.ActivityThread $r6;
        android.os.IBinder $r7, r15;
        android.content.ContentResolver $r8;
        android.os.RemoteException $r9, $r10;
        android.content.IntentSender r11;
        android.content.IIntentSender r14;
        android.content.IntentSender$SendIntentException r16;

        r0 := @this: android.app.Activity;

        r11 := @parameter0: android.content.IntentSender;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r2 := @parameter3: android.content.Intent;

        i2 := @parameter4: int;

        i1 := @parameter5: int;

        r12 := @parameter6: android.os.Bundle;

     label01:
        r3 = specialinvoke r0.<android.app.Activity: android.os.Bundle transferSpringboardActivityOptions(android.os.Bundle)>(r12);

     label02:
        r13 = null;

        if r2 == null goto label04;

     label03:
        virtualinvoke r2.<android.content.Intent: boolean migrateExtraStreamToClipData(android.content.Context)>(r0);

        virtualinvoke r2.<android.content.Intent: void prepareToLeaveProcess(android.content.Context)>(r0);

        $r8 = virtualinvoke r0.<android.app.Activity: android.content.ContentResolver getContentResolver()>();

        r13 = virtualinvoke r2.<android.content.Intent: java.lang.String resolveTypeIfNeeded(android.content.ContentResolver)>($r8);

     label04:
        r4 = staticinvoke <android.app.ActivityTaskManager: android.app.IActivityTaskManager getService()>();

        $r6 = r0.<android.app.Activity: android.app.ActivityThread mMainThread>;

        r5 = virtualinvoke $r6.<android.app.ActivityThread: android.app.ActivityThread$ApplicationThread getApplicationThread()>();

     label05:
        if r11 == null goto label08;

     label06:
        r14 = virtualinvoke r11.<android.content.IntentSender: android.content.IIntentSender getTarget()>();

     label07:
        goto label09;

     label08:
        r14 = null;

     label09:
        if r11 == null goto label12;

     label10:
        r15 = virtualinvoke r11.<android.content.IntentSender: android.os.IBinder getWhitelistToken()>();

     label11:
        goto label13;

     label12:
        r15 = null;

     label13:
        $r7 = r0.<android.app.Activity: android.os.IBinder mToken>;

        i3 = interfaceinvoke r4.<android.app.IActivityTaskManager: int startActivityIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,int,android.os.Bundle)>(r5, r14, r15, r2, r13, $r7, r1, i0, i2, i1, r3);

     label14:
        if i3 == -96 goto label19;

     label15:
        staticinvoke <android.app.Instrumentation: void checkStartActivityResult(int,java.lang.Object)>(i3, null);

     label16:
        if r3 == null goto label18;

     label17:
        specialinvoke r0.<android.app.Activity: void cancelInputsAndStartExitTransition(android.os.Bundle)>(r3);

     label18:
        goto label22;

     label19:
        r16 = new android.content.IntentSender$SendIntentException;

        specialinvoke r16.<android.content.IntentSender$SendIntentException: void <init>()>();

        throw r16;

     label20:
        $r10 := @caughtexception;

        goto label22;

     label21:
        $r9 := @caughtexception;

     label22:
        if i0 < 0 goto label23;

        r0.<android.app.Activity: boolean mStartedActivity> = 1;

     label23:
        return;

        catch android.os.RemoteException from label01 to label02 with label21;
        catch android.os.RemoteException from label03 to label04 with label20;
        catch android.os.RemoteException from label04 to label05 with label20;
        catch android.os.RemoteException from label06 to label07 with label20;
        catch android.os.RemoteException from label10 to label11 with label20;
        catch android.os.RemoteException from label13 to label14 with label20;
        catch android.os.RemoteException from label15 to label16 with label20;
        catch android.os.RemoteException from label17 to label18 with label20;
        catch android.os.RemoteException from label19 to label20 with label20;
    }

    private void startIntentSenderFromFragment(android.app.Fragment, android.content.IntentSender, int, android.content.Intent, int, int, android.os.Bundle) throws android.content.IntentSender$SendIntentException
    {
        android.app.Activity r0;
        android.app.Fragment r1;
        android.content.IntentSender r2;
        int i0, i1, i2;
        android.content.Intent r3;
        android.os.Bundle r4;
        java.lang.String $r5;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.app.Fragment;

        r2 := @parameter1: android.content.IntentSender;

        i0 := @parameter2: int;

        r3 := @parameter3: android.content.Intent;

        i1 := @parameter4: int;

        i2 := @parameter5: int;

        r4 := @parameter6: android.os.Bundle;

        $r5 = r1.<android.app.Fragment: java.lang.String mWho>;

        specialinvoke r0.<android.app.Activity: void startIntentSenderForResultInner(android.content.IntentSender,java.lang.String,int,android.content.Intent,int,int,android.os.Bundle)>(r2, $r5, i0, r3, i1, i2, r4);

        return;
    }

    private void storeHasCurrentPermissionRequest(android.os.Bundle)
    {
        android.app.Activity r0;
        android.os.Bundle r1;
        boolean $z0;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.os.Bundle;

        if r1 == null goto label1;

        $z0 = r0.<android.app.Activity: boolean mHasCurrentPermissionsRequest>;

        if $z0 == 0 goto label1;

        virtualinvoke r1.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("android:hasCurrentPermissionsRequest", 1);

     label1:
        return;
    }

    private android.os.Bundle transferSpringboardActivityOptions(android.os.Bundle)
    {
        android.app.Activity r0;
        android.os.Bundle r1, $r2;
        boolean $z0;
        int $i0;
        android.view.Window r3;
        android.app.ActivityOptions r4;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.os.Bundle;

        if r1 != null goto label1;

        r3 = r0.<android.app.Activity: android.view.Window mWindow>;

        if r3 == null goto label1;

        $z0 = virtualinvoke r3.<android.view.Window: boolean isActive()>();

        if $z0 != 0 goto label1;

        r4 = virtualinvoke r0.<android.app.Activity: android.app.ActivityOptions getActivityOptions()>();

        if r4 == null goto label1;

        $i0 = virtualinvoke r4.<android.app.ActivityOptions: int getAnimationType()>();

        if $i0 != 5 goto label1;

        $r2 = virtualinvoke r4.<android.app.ActivityOptions: android.os.Bundle toBundle()>();

        return $r2;

     label1:
        return r1;
    }

    public void addContentView(android.view.View, android.view.ViewGroup$LayoutParams)
    {
        android.app.Activity r0;
        android.view.View r1;
        android.view.ViewGroup$LayoutParams r2;
        android.view.Window $r3;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.ViewGroup$LayoutParams;

        $r3 = virtualinvoke r0.<android.app.Activity: android.view.Window getWindow()>();

        virtualinvoke $r3.<android.view.Window: void addContentView(android.view.View,android.view.ViewGroup$LayoutParams)>(r1, r2);

        specialinvoke r0.<android.app.Activity: void initWindowDecorActionBar()>();

        return;
    }

    final void attach(android.content.Context, android.app.ActivityThread, android.app.Instrumentation, android.os.IBinder, int, android.app.Application, android.content.Intent, android.content.pm.ActivityInfo, java.lang.CharSequence, android.app.Activity, java.lang.String, android.app.Activity$NonConfigurationInstances, android.content.res.Configuration, java.lang.String, com.android.internal.app.IVoiceInteractor, android.view.Window, android.view.ViewRootImpl$ActivityConfigCallback, android.os.IBinder)
    {
        android.app.Activity r0, r5, r46;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        android.app.Application r1;
        android.content.Intent r2;
        android.content.pm.ActivityInfo r3;
        java.lang.CharSequence r4;
        java.lang.String r6, r9, r45;
        android.app.Activity$NonConfigurationInstances r7;
        android.content.res.Configuration r8;
        com.android.internal.app.IVoiceInteractor r10;
        android.view.ViewRootImpl$ActivityConfigCallback r11;
        android.os.IBinder r12, r37, r43;
        android.app.FragmentController $r13;
        com.android.internal.policy.PhoneWindow $r14;
        android.view.Window$WindowControllerCallback $r15;
        android.view.Window $r16, $r17, $r18, $r22, $r24, $r27, $r28, $r32, $r33, r38, r40, r47;
        android.view.LayoutInflater $r19;
        java.lang.Thread $r20;
        android.content.ComponentName $r21, $r44;
        android.view.WindowManager $r23, r42;
        android.content.AutofillOptions $r25;
        android.content.ContentCaptureOptions $r26;
        android.app.VoiceInteractor $r29, $r31;
        android.os.Looper $r30;
        android.content.Context r34;
        android.app.ActivityThread r35;
        android.app.Instrumentation r36;
        java.lang.Object $r41;
        boolean z0, z1;

        r0 := @this: android.app.Activity;

        r34 := @parameter0: android.content.Context;

        r35 := @parameter1: android.app.ActivityThread;

        r36 := @parameter2: android.app.Instrumentation;

        r37 := @parameter3: android.os.IBinder;

        i0 := @parameter4: int;

        r1 := @parameter5: android.app.Application;

        r2 := @parameter6: android.content.Intent;

        r3 := @parameter7: android.content.pm.ActivityInfo;

        r4 := @parameter8: java.lang.CharSequence;

        r5 := @parameter9: android.app.Activity;

        r6 := @parameter10: java.lang.String;

        r7 := @parameter11: android.app.Activity$NonConfigurationInstances;

        r8 := @parameter12: android.content.res.Configuration;

        r9 := @parameter13: java.lang.String;

        r10 := @parameter14: com.android.internal.app.IVoiceInteractor;

        r38 := @parameter15: android.view.Window;

        r11 := @parameter16: android.view.ViewRootImpl$ActivityConfigCallback;

        r12 := @parameter17: android.os.IBinder;

        virtualinvoke r0.<android.app.Activity: void attachBaseContext(android.content.Context)>(r34);

        $r13 = r0.<android.app.Activity: android.app.FragmentController mFragments>;

        virtualinvoke $r13.<android.app.FragmentController: void attachHost(android.app.Fragment)>(null);

        $r14 = new com.android.internal.policy.PhoneWindow;

        specialinvoke $r14.<com.android.internal.policy.PhoneWindow: void <init>(android.content.Context,android.view.Window,android.view.ViewRootImpl$ActivityConfigCallback)>(r0, r38, r11);

        r0.<android.app.Activity: android.view.Window mWindow> = $r14;

        $r15 = r0.<android.app.Activity: android.view.Window$WindowControllerCallback mWindowControllerCallback>;

        virtualinvoke $r14.<android.view.Window: void setWindowControllerCallback(android.view.Window$WindowControllerCallback)>($r15);

        $r16 = r0.<android.app.Activity: android.view.Window mWindow>;

        virtualinvoke $r16.<android.view.Window: void setCallback(android.view.Window$Callback)>(r0);

        $r17 = r0.<android.app.Activity: android.view.Window mWindow>;

        virtualinvoke $r17.<android.view.Window: void setOnWindowDismissedCallback(android.view.Window$OnWindowDismissedCallback)>(r0);

        $r18 = r0.<android.app.Activity: android.view.Window mWindow>;

        $r19 = virtualinvoke $r18.<android.view.Window: android.view.LayoutInflater getLayoutInflater()>();

        virtualinvoke $r19.<android.view.LayoutInflater: void setPrivateFactory(android.view.LayoutInflater$Factory2)>(r0);

        $i1 = r3.<android.content.pm.ActivityInfo: int softInputMode>;

        if $i1 == 0 goto label1;

        $r33 = r0.<android.app.Activity: android.view.Window mWindow>;

        $i7 = r3.<android.content.pm.ActivityInfo: int softInputMode>;

        virtualinvoke $r33.<android.view.Window: void setSoftInputMode(int)>($i7);

     label1:
        $i2 = r3.<android.content.pm.ActivityInfo: int uiOptions>;

        if $i2 == 0 goto label2;

        $r32 = r0.<android.app.Activity: android.view.Window mWindow>;

        $i6 = r3.<android.content.pm.ActivityInfo: int uiOptions>;

        virtualinvoke $r32.<android.view.Window: void setUiOptions(int)>($i6);

     label2:
        $r20 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        r0.<android.app.Activity: java.lang.Thread mUiThread> = $r20;

        r0.<android.app.Activity: android.app.ActivityThread mMainThread> = r35;

        r0.<android.app.Activity: android.app.Instrumentation mInstrumentation> = r36;

        r0.<android.app.Activity: android.os.IBinder mToken> = r37;

        r0.<android.app.Activity: android.os.IBinder mAssistToken> = r12;

        r0.<android.app.Activity: int mIdent> = i0;

        r0.<android.app.Activity: android.app.Application mApplication> = r1;

        r0.<android.app.Activity: android.content.Intent mIntent> = r2;

        r0.<android.app.Activity: java.lang.String mReferrer> = r9;

        $r21 = virtualinvoke r2.<android.content.Intent: android.content.ComponentName getComponent()>();

        r0.<android.app.Activity: android.content.ComponentName mComponent> = $r21;

        r0.<android.app.Activity: android.content.pm.ActivityInfo mActivityInfo> = r3;

        r0.<android.app.Activity: java.lang.CharSequence mTitle> = r4;

        r0.<android.app.Activity: android.app.Activity mParent> = r5;

        r0.<android.app.Activity: java.lang.String mEmbeddedID> = r6;

        r0.<android.app.Activity: android.app.Activity$NonConfigurationInstances mLastNonConfigurationInstances> = r7;

        if r10 == null goto label4;

        if r7 == null goto label3;

        $r31 = r7.<android.app.Activity$NonConfigurationInstances: android.app.VoiceInteractor voiceInteractor>;

        r0.<android.app.Activity: android.app.VoiceInteractor mVoiceInteractor> = $r31;

        goto label4;

     label3:
        $r29 = new android.app.VoiceInteractor;

        $r30 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        specialinvoke $r29.<android.app.VoiceInteractor: void <init>(com.android.internal.app.IVoiceInteractor,android.content.Context,android.app.Activity,android.os.Looper)>(r10, r0, r0, $r30);

        r0.<android.app.Activity: android.app.VoiceInteractor mVoiceInteractor> = $r29;

     label4:
        r40 = r0.<android.app.Activity: android.view.Window mWindow>;

        $r41 = virtualinvoke r34.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("window");

        r42 = (android.view.WindowManager) $r41;

        r43 = r0.<android.app.Activity: android.os.IBinder mToken>;

        $r44 = r0.<android.app.Activity: android.content.ComponentName mComponent>;

        r45 = virtualinvoke $r44.<android.content.ComponentName: java.lang.String flattenToString()>();

        $i8 = r3.<android.content.pm.ActivityInfo: int flags>;

        $i9 = $i8 & 512;

        if $i9 == 0 goto label5;

        z0 = 1;

        goto label6;

     label5:
        z0 = 0;

     label6:
        virtualinvoke r40.<android.view.Window: void setWindowManager(android.view.WindowManager,android.os.IBinder,java.lang.String,boolean)>(r42, r43, r45, z0);

        r46 = r0.<android.app.Activity: android.app.Activity mParent>;

        if r46 == null goto label7;

        $r27 = r0.<android.app.Activity: android.view.Window mWindow>;

        $r28 = virtualinvoke r46.<android.app.Activity: android.view.Window getWindow()>();

        virtualinvoke $r27.<android.view.Window: void setContainer(android.view.Window)>($r28);

     label7:
        $r22 = r0.<android.app.Activity: android.view.Window mWindow>;

        $r23 = virtualinvoke $r22.<android.view.Window: android.view.WindowManager getWindowManager()>();

        r0.<android.app.Activity: android.view.WindowManager mWindowManager> = $r23;

        r0.<android.app.Activity: android.content.res.Configuration mCurrentConfig> = r8;

        $r24 = r0.<android.app.Activity: android.view.Window mWindow>;

        $i3 = r3.<android.content.pm.ActivityInfo: int colorMode>;

        virtualinvoke $r24.<android.view.Window: void setColorMode(int)>($i3);

        r47 = r0.<android.app.Activity: android.view.Window mWindow>;

        $i4 = r3.<android.content.pm.ActivityInfo: int flags>;

        $i5 = $i4 & 33554432;

        if $i5 == 0 goto label8;

        z1 = 1;

        goto label9;

     label8:
        z1 = 0;

     label9:
        virtualinvoke r47.<android.view.Window: void setPreferMinimalPostProcessing(boolean)>(z1);

        $r25 = virtualinvoke r1.<android.app.Application: android.content.AutofillOptions getAutofillOptions()>();

        virtualinvoke r0.<android.app.Activity: void setAutofillOptions(android.content.AutofillOptions)>($r25);

        $r26 = virtualinvoke r1.<android.app.Application: android.content.ContentCaptureOptions getContentCaptureOptions()>();

        virtualinvoke r0.<android.app.Activity: void setContentCaptureOptions(android.content.ContentCaptureOptions)>($r26);

        return;
    }

    protected void attachBaseContext(android.content.Context)
    {
        android.app.Activity r0;
        android.content.Context r1;
        android.content.ContentCaptureOptions $r2;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.view.ContextThemeWrapper: void attachBaseContext(android.content.Context)>(r1);

        if r1 == null goto label1;

        virtualinvoke r1.<android.content.Context: void setAutofillClient(android.view.autofill.AutofillManager$AutofillClient)>(r0);

        $r2 = virtualinvoke r0.<android.app.Activity: android.content.ContentCaptureOptions getContentCaptureOptions()>();

        virtualinvoke r1.<android.content.Context: void setContentCaptureOptions(android.content.ContentCaptureOptions)>($r2);

     label1:
        return;
    }

    public final void autofillClientAuthenticate(int, android.content.IntentSender, android.content.Intent, boolean)
    {
        android.app.Activity r0;
        int i0;
        android.content.IntentSender r1;
        boolean z0;
        android.content.IntentSender$SendIntentException $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r7;
        android.content.Intent r8;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.IntentSender;

        r8 := @parameter2: android.content.Intent;

        z0 := @parameter3: boolean;

     label1:
        specialinvoke r0.<android.app.Activity: void startIntentSenderForResultInner(android.content.IntentSender,java.lang.String,int,android.content.Intent,int,int,android.os.Bundle)>(r1, "@android:autoFillAuth:", i0, r8, 0, 0, null);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("authenticate() failed for intent:");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("Activity", $r7, $r3);

     label4:
        return;

        catch android.content.IntentSender$SendIntentException from label1 to label2 with label3;
    }

    public final void autofillClientDispatchUnhandledKey(android.view.View, android.view.KeyEvent)
    {
        android.app.Activity r0;
        android.view.KeyEvent r1;
        android.view.View r2;
        android.view.ViewRootImpl r3;

        r0 := @this: android.app.Activity;

        r2 := @parameter0: android.view.View;

        r1 := @parameter1: android.view.KeyEvent;

        r3 = virtualinvoke r2.<android.view.View: android.view.ViewRootImpl getViewRootImpl()>();

        if r3 == null goto label1;

        virtualinvoke r3.<android.view.ViewRootImpl: void dispatchKeyFromAutofill(android.view.KeyEvent)>(r1);

     label1:
        return;
    }

    public final android.view.View autofillClientFindViewByAccessibilityIdTraversal(int, int)
    {
        android.app.Activity r0;
        int i0, i1, $i2, $i3, i4;
        java.util.ArrayList r1;
        android.view.WindowManagerGlobal $r2;
        android.os.IBinder $r3;
        java.lang.Object $r4;
        android.view.ViewRootImpl $r5;
        android.view.View r6, r7;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = staticinvoke <android.view.WindowManagerGlobal: android.view.WindowManagerGlobal getInstance()>();

        $r3 = virtualinvoke r0.<android.app.Activity: android.os.IBinder getActivityToken()>();

        r1 = virtualinvoke $r2.<android.view.WindowManagerGlobal: java.util.ArrayList getRootViews(android.os.IBinder)>($r3);

        i4 = 0;

     label1:
        $i2 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if i4 >= $i2 goto label3;

        $r4 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        $r5 = (android.view.ViewRootImpl) $r4;

        r6 = virtualinvoke $r5.<android.view.ViewRootImpl: android.view.View getView()>();

        if r6 == null goto label2;

        $i3 = virtualinvoke r6.<android.view.View: int getAccessibilityWindowId()>();

        if $i3 != i1 goto label2;

        r7 = virtualinvoke r6.<android.view.View: android.view.View findViewByAccessibilityIdTraversal(int)>(i0);

        if r7 == null goto label2;

        return r7;

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        return null;
    }

    public final android.view.View autofillClientFindViewByAutofillIdTraversal(android.view.autofill.AutofillId)
    {
        android.app.Activity r0;
        android.view.autofill.AutofillId r1;
        java.util.ArrayList r2;
        android.view.WindowManagerGlobal $r3;
        android.os.IBinder $r4;
        int $i0, $i1, i2;
        java.lang.Object $r5;
        android.view.ViewRootImpl $r6;
        android.view.View r7, r8;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.view.autofill.AutofillId;

        $r3 = staticinvoke <android.view.WindowManagerGlobal: android.view.WindowManagerGlobal getInstance()>();

        $r4 = virtualinvoke r0.<android.app.Activity: android.os.IBinder getActivityToken()>();

        r2 = virtualinvoke $r3.<android.view.WindowManagerGlobal: java.util.ArrayList getRootViews(android.os.IBinder)>($r4);

        i2 = 0;

     label1:
        $i0 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        if i2 >= $i0 goto label3;

        $r5 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r6 = (android.view.ViewRootImpl) $r5;

        r7 = virtualinvoke $r6.<android.view.ViewRootImpl: android.view.View getView()>();

        if r7 == null goto label2;

        $i1 = virtualinvoke r1.<android.view.autofill.AutofillId: int getViewId()>();

        r8 = virtualinvoke r7.<android.view.View: android.view.View findViewByAutofillIdTraversal(int)>($i1);

        if r8 == null goto label2;

        return r8;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return null;
    }

    public final android.view.View[] autofillClientFindViewsByAutofillIdTraversal(android.view.autofill.AutofillId[])
    {
        android.app.Activity r0;
        android.view.autofill.AutofillId[] r1;
        android.view.View[] r2;
        java.util.ArrayList r3;
        android.view.View r4, $r9, $r11;
        int i0, $i1, $i2, $i3, i4, i5;
        android.view.WindowManagerGlobal $r5;
        android.os.IBinder $r6;
        java.lang.Object $r7;
        android.view.ViewRootImpl $r8;
        android.view.autofill.AutofillId $r10;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.view.autofill.AutofillId[];

        $i1 = lengthof r1;

        r2 = newarray (android.view.View)[$i1];

        $r5 = staticinvoke <android.view.WindowManagerGlobal: android.view.WindowManagerGlobal getInstance()>();

        $r6 = virtualinvoke r0.<android.app.Activity: android.os.IBinder getActivityToken()>();

        r3 = virtualinvoke $r5.<android.view.WindowManagerGlobal: java.util.ArrayList getRootViews(android.os.IBinder)>($r6);

        i4 = 0;

     label1:
        $i2 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        if i4 >= $i2 goto label5;

        $r7 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        $r8 = (android.view.ViewRootImpl) $r7;

        r4 = virtualinvoke $r8.<android.view.ViewRootImpl: android.view.View getView()>();

        if r4 == null goto label4;

        i0 = lengthof r1;

        i5 = 0;

     label2:
        if i5 >= i0 goto label4;

        $r9 = r2[i5];

        if $r9 != null goto label3;

        $r10 = r1[i5];

        $i3 = virtualinvoke $r10.<android.view.autofill.AutofillId: int getViewId()>();

        $r11 = virtualinvoke r4.<android.view.View: android.view.View findViewByAutofillIdTraversal(int)>($i3);

        r2[i5] = $r11;

     label3:
        i5 = i5 + 1;

        goto label2;

     label4:
        i4 = i4 + 1;

        goto label1;

     label5:
        return r2;
    }

    public final android.os.IBinder autofillClientGetActivityToken()
    {
        android.app.Activity r0;
        android.os.IBinder $r1;

        r0 := @this: android.app.Activity;

        $r1 = virtualinvoke r0.<android.app.Activity: android.os.IBinder getActivityToken()>();

        return $r1;
    }

    public final android.content.ComponentName autofillClientGetComponentName()
    {
        android.app.Activity r0;
        android.content.ComponentName $r1;

        r0 := @this: android.app.Activity;

        $r1 = virtualinvoke r0.<android.app.Activity: android.content.ComponentName getComponentName()>();

        return $r1;
    }

    public android.view.autofill.AutofillId autofillClientGetNextAutofillId()
    {
        android.app.Activity r0;
        android.view.autofill.AutofillId $r1;
        int $i0;

        r0 := @this: android.app.Activity;

        $r1 = new android.view.autofill.AutofillId;

        $i0 = virtualinvoke r0.<android.app.Activity: int getNextAutofillId()>();

        specialinvoke $r1.<android.view.autofill.AutofillId: void <init>(int)>($i0);

        return $r1;
    }

    public final boolean[] autofillClientGetViewVisibility(android.view.autofill.AutofillId[])
    {
        android.app.Activity r0;
        int i0, $i2, i3;
        boolean[] r1;
        android.view.autofill.AutofillId r2;
        android.view.View r3;
        boolean $z0, $z1, $z2, $z3;
        java.lang.StringBuilder $r4;
        java.lang.String $r6, $r8;
        android.view.autofill.AutofillId[] r9;

        r0 := @this: android.app.Activity;

        r9 := @parameter0: android.view.autofill.AutofillId[];

        i0 = lengthof r9;

        r1 = newarray (boolean)[i0];

        i3 = 0;

     label1:
        if i3 >= i0 goto label4;

        r2 = r9[i3];

        r3 = virtualinvoke r0.<android.app.Activity: android.view.View autofillClientFindViewByAutofillIdTraversal(android.view.autofill.AutofillId)>(r2);

        if r3 == null goto label3;

        $z1 = virtualinvoke r2.<android.view.autofill.AutofillId: boolean isVirtualInt()>();

        if $z1 != 0 goto label2;

        $z3 = virtualinvoke r3.<android.view.View: boolean isVisibleToUser()>();

        r1[i3] = $z3;

        goto label3;

     label2:
        $i2 = virtualinvoke r2.<android.view.autofill.AutofillId: int getVirtualChildIntId()>();

        $z2 = virtualinvoke r3.<android.view.View: boolean isVisibleToUserForAutofill(int)>($i2);

        r1[i3] = $z2;

     label3:
        i3 = i3 + 1;

        goto label1;

     label4:
        $z0 = <android.view.autofill.Helper: boolean sVerbose>;

        if $z0 == 0 goto label5;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("autofillClientGetViewVisibility(): ");

        $r6 = staticinvoke <java.util.Arrays: java.lang.String toString(boolean[])>(r1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("Activity", $r8);

     label5:
        return r1;
    }

    public final boolean autofillClientIsCompatibilityModeEnabled()
    {
        android.app.Activity r0;
        boolean $z0;

        r0 := @this: android.app.Activity;

        $z0 = virtualinvoke r0.<android.app.Activity: boolean isAutofillCompatibilityEnabled()>();

        return $z0;
    }

    public final boolean autofillClientIsFillUiShowing()
    {
        android.app.Activity r0;
        android.view.autofill.AutofillPopupWindow r1;
        boolean $z0, z1;

        r0 := @this: android.app.Activity;

        r1 = r0.<android.app.Activity: android.view.autofill.AutofillPopupWindow mAutofillPopupWindow>;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<android.view.autofill.AutofillPopupWindow: boolean isShowing()>();

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public final boolean autofillClientIsVisibleForAutofill()
    {
        android.app.Activity r0;
        boolean $z0, $z1;

        r0 := @this: android.app.Activity;

        $z0 = r0.<android.app.Activity: boolean mStopped>;

        $z1 = $z0 ^ 1;

        return $z1;
    }

    public final boolean autofillClientRequestHideFillUi()
    {
        android.app.Activity r0;
        android.view.autofill.AutofillPopupWindow r1;

        r0 := @this: android.app.Activity;

        r1 = r0.<android.app.Activity: android.view.autofill.AutofillPopupWindow mAutofillPopupWindow>;

        if r1 != null goto label1;

        return 0;

     label1:
        virtualinvoke r1.<android.view.autofill.AutofillPopupWindow: void dismiss()>();

        r0.<android.app.Activity: android.view.autofill.AutofillPopupWindow mAutofillPopupWindow> = null;

        return 1;
    }

    public final boolean autofillClientRequestShowFillUi(android.view.View, int, int, android.graphics.Rect, android.view.autofill.IAutofillWindowPresenter)
    {
        android.app.Activity r0;
        android.view.View r1;
        int i0, i1;
        android.graphics.Rect r2;
        android.view.autofill.IAutofillWindowPresenter r3;
        android.view.autofill.AutofillPopupWindow r4, $r5, $r6, $r7;
        boolean $z0, z1, z2;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: android.graphics.Rect;

        r3 := @parameter4: android.view.autofill.IAutofillWindowPresenter;

        r4 = r0.<android.app.Activity: android.view.autofill.AutofillPopupWindow mAutofillPopupWindow>;

        if r4 != null goto label1;

        z1 = 0;

        $r7 = new android.view.autofill.AutofillPopupWindow;

        specialinvoke $r7.<android.view.autofill.AutofillPopupWindow: void <init>(android.view.autofill.IAutofillWindowPresenter)>(r3);

        r0.<android.app.Activity: android.view.autofill.AutofillPopupWindow mAutofillPopupWindow> = $r7;

        goto label2;

     label1:
        z1 = virtualinvoke r4.<android.view.autofill.AutofillPopupWindow: boolean isShowing()>();

     label2:
        $r5 = r0.<android.app.Activity: android.view.autofill.AutofillPopupWindow mAutofillPopupWindow>;

        virtualinvoke $r5.<android.view.autofill.AutofillPopupWindow: void update(android.view.View,int,int,int,int,android.graphics.Rect)>(r1, 0, 0, i0, i1, r2);

        if z1 != 0 goto label3;

        $r6 = r0.<android.app.Activity: android.view.autofill.AutofillPopupWindow mAutofillPopupWindow>;

        $z0 = virtualinvoke $r6.<android.view.autofill.AutofillPopupWindow: boolean isShowing()>();

        if $z0 == 0 goto label3;

        z2 = 1;

        goto label4;

     label3:
        z2 = 0;

     label4:
        return z2;
    }

    public final void autofillClientResetableStateAvailable()
    {
        android.app.Activity r0;

        r0 := @this: android.app.Activity;

        r0.<android.app.Activity: boolean mAutoFillResetNeeded> = 1;

        return;
    }

    public final void autofillClientRunOnUiThread(java.lang.Runnable)
    {
        android.app.Activity r0;
        java.lang.Runnable r1;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: java.lang.Runnable;

        virtualinvoke r0.<android.app.Activity: void runOnUiThread(java.lang.Runnable)>(r1);

        return;
    }

    public boolean canStartActivityForResult()
    {
        android.app.Activity r0;

        r0 := @this: android.app.Activity;

        return 1;
    }

    public void closeContextMenu()
    {
        android.app.Activity r0;
        android.view.Window $r1, $r2;
        boolean $z0;

        r0 := @this: android.app.Activity;

        $r1 = r0.<android.app.Activity: android.view.Window mWindow>;

        $z0 = virtualinvoke $r1.<android.view.Window: boolean hasFeature(int)>(6);

        if $z0 == 0 goto label1;

        $r2 = r0.<android.app.Activity: android.view.Window mWindow>;

        virtualinvoke $r2.<android.view.Window: void closePanel(int)>(6);

     label1:
        return;
    }

    public void closeOptionsMenu()
    {
        android.app.Activity r0;
        android.app.ActionBar r1;
        android.view.Window $r2, $r3;
        boolean $z0, $z1;

        r0 := @this: android.app.Activity;

        $r2 = r0.<android.app.Activity: android.view.Window mWindow>;

        $z0 = virtualinvoke $r2.<android.view.Window: boolean hasFeature(int)>(0);

        if $z0 == 0 goto label2;

        r1 = r0.<android.app.Activity: android.app.ActionBar mActionBar>;

        if r1 == null goto label1;

        $z1 = virtualinvoke r1.<android.app.ActionBar: boolean closeOptionsMenu()>();

        if $z1 != 0 goto label2;

     label1:
        $r3 = r0.<android.app.Activity: android.view.Window mWindow>;

        virtualinvoke $r3.<android.view.Window: void closePanel(int)>(0);

     label2:
        return;
    }

    public final android.content.ComponentName contentCaptureClientGetComponentName()
    {
        android.app.Activity r0;
        android.content.ComponentName $r1;

        r0 := @this: android.app.Activity;

        $r1 = virtualinvoke r0.<android.app.Activity: android.content.ComponentName getComponentName()>();

        return $r1;
    }

    public void convertFromTranslucent()
    {
        android.app.Activity r0;

        r0 := @this: android.app.Activity;

        specialinvoke r0.<android.app.Activity: boolean convertFromTranslucentInternal()>();

        return;
    }

    public boolean convertToTranslucent(android.app.Activity$TranslucentConversionListener, android.app.ActivityOptions)
    {
        android.app.Activity r0;
        android.app.ActivityOptions r1;
        android.app.IActivityTaskManager r2;
        android.os.IBinder r3, $r5;
        boolean $z0, $z1, z2, $z3;
        android.view.WindowManagerGlobal $r4;
        android.os.RemoteException $r6;
        android.app.Activity$TranslucentConversionListener r7, r10;
        android.os.Bundle r8;

        r0 := @this: android.app.Activity;

        r7 := @parameter0: android.app.Activity$TranslucentConversionListener;

        r1 := @parameter1: android.app.ActivityOptions;

     label1:
        r0.<android.app.Activity: android.app.Activity$TranslucentConversionListener mTranslucentCallback> = r7;

        r2 = staticinvoke <android.app.ActivityTaskManager: android.app.IActivityTaskManager getService()>();

        r3 = r0.<android.app.Activity: android.os.IBinder mToken>;

     label2:
        if r1 != null goto label3;

        r8 = null;

        goto label4;

     label3:
        r8 = virtualinvoke r1.<android.app.ActivityOptions: android.os.Bundle toBundle()>();

     label4:
        $z0 = interfaceinvoke r2.<android.app.IActivityTaskManager: boolean convertToTranslucent(android.os.IBinder,android.os.Bundle)>(r3, r8);

        r0.<android.app.Activity: boolean mChangeCanvasToTranslucent> = $z0;

        $r4 = staticinvoke <android.view.WindowManagerGlobal: android.view.WindowManagerGlobal getInstance()>();

        $r5 = r0.<android.app.Activity: android.os.IBinder mToken>;

        virtualinvoke $r4.<android.view.WindowManagerGlobal: void changeCanvasOpacity(android.os.IBinder,boolean)>($r5, 0);

     label5:
        z2 = 1;

        goto label7;

     label6:
        $r6 := @caughtexception;

        r0.<android.app.Activity: boolean mChangeCanvasToTranslucent> = 0;

        z2 = 0;

     label7:
        $z1 = r0.<android.app.Activity: boolean mChangeCanvasToTranslucent>;

        if $z1 != 0 goto label8;

        r10 = r0.<android.app.Activity: android.app.Activity$TranslucentConversionListener mTranslucentCallback>;

        if r10 == null goto label8;

        interfaceinvoke r10.<android.app.Activity$TranslucentConversionListener: void onTranslucentConversionComplete(boolean)>(z2);

     label8:
        $z3 = r0.<android.app.Activity: boolean mChangeCanvasToTranslucent>;

        return $z3;

        catch android.os.RemoteException from label1 to label2 with label6;
        catch android.os.RemoteException from label3 to label4 with label6;
        catch android.os.RemoteException from label4 to label5 with label6;
    }

    public android.app.PendingIntent createPendingResult(int, android.content.Intent, int)
    {
        android.app.Activity r0, $r5, $r6;
        int i0, i1, i2;
        java.lang.String r1, r3, r4;
        android.app.IActivityManager r2;
        android.content.Intent[] $r7;
        android.app.PendingIntent $r8, r13;
        android.os.RemoteException $r9;
        android.content.Intent r10;
        android.os.IBinder r11;
        android.content.IIntentSender r12;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        r10 := @parameter1: android.content.Intent;

        i1 := @parameter2: int;

        r1 = virtualinvoke r0.<android.app.Activity: java.lang.String getPackageName()>();

     label1:
        virtualinvoke r10.<android.content.Intent: void prepareToLeaveProcess(android.content.Context)>(r0);

        r2 = staticinvoke <android.app.ActivityManager: android.app.IActivityManager getService()>();

        r3 = virtualinvoke r0.<android.app.Activity: java.lang.String getAttributionTag()>();

        $r5 = r0.<android.app.Activity: android.app.Activity mParent>;

        if $r5 != null goto label3;

        r11 = r0.<android.app.Activity: android.os.IBinder mToken>;

     label2:
        goto label4;

     label3:
        $r6 = r0.<android.app.Activity: android.app.Activity mParent>;

        r11 = $r6.<android.app.Activity: android.os.IBinder mToken>;

     label4:
        r4 = r0.<android.app.Activity: java.lang.String mEmbeddedID>;

        i2 = virtualinvoke r0.<android.app.Activity: int getUserId()>();

        $r7 = newarray (android.content.Intent)[1];

        $r7[0] = r10;

        r12 = interfaceinvoke r2.<android.app.IActivityManager: android.content.IIntentSender getIntentSenderWithFeature(int,java.lang.String,java.lang.String,android.os.IBinder,java.lang.String,int,android.content.Intent[],java.lang.String[],int,android.os.Bundle,int)>(3, r1, r3, r11, r4, i0, $r7, null, i1, null, i2);

     label5:
        r13 = null;

        if r12 == null goto label7;

     label6:
        $r8 = new android.app.PendingIntent;

        specialinvoke $r8.<android.app.PendingIntent: void <init>(android.content.IIntentSender)>(r12);

        r13 = $r8;

     label7:
        return r13;

     label8:
        $r9 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label8;
        catch android.os.RemoteException from label3 to label4 with label8;
        catch android.os.RemoteException from label4 to label5 with label8;
        catch android.os.RemoteException from label6 to label7 with label8;
    }

    public final void dismissDialog(int)
    {
        android.app.Activity r0;
        int i0;
        java.lang.IllegalArgumentException $r1, $r3;
        java.lang.Object $r2;
        android.app.Dialog $r4;
        android.util.SparseArray r5;
        android.app.Activity$ManagedDialog r6;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        r5 = r0.<android.app.Activity: android.util.SparseArray mManagedDialogs>;

        if r5 == null goto label2;

        $r2 = virtualinvoke r5.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r6 = (android.app.Activity$ManagedDialog) $r2;

        if r6 == null goto label1;

        $r4 = r6.<android.app.Activity$ManagedDialog: android.app.Dialog mDialog>;

        virtualinvoke $r4.<android.app.Dialog: void dismiss()>();

        return;

     label1:
        $r3 = specialinvoke r0.<android.app.Activity: java.lang.IllegalArgumentException missingDialog(int)>(i0);

        throw $r3;

     label2:
        $r1 = specialinvoke r0.<android.app.Activity: java.lang.IllegalArgumentException missingDialog(int)>(i0);

        throw $r1;
    }

    public final void dismissKeyboardShortcutsHelper()
    {
        android.app.Activity r0;
        android.content.ComponentName r1;
        android.content.res.Resources $r3;
        java.lang.String $r4, $r6;
        android.content.Intent $r5;
        android.os.UserHandle $r8;

        r0 := @this: android.app.Activity;

        $r3 = virtualinvoke r0.<android.app.Activity: android.content.res.Resources getResources()>();

        $r4 = virtualinvoke $r3.<android.content.res.Resources: java.lang.String getString(int)>(17039950);

        r1 = staticinvoke <android.content.ComponentName: android.content.ComponentName unflattenFromString(java.lang.String)>($r4);

        $r5 = new android.content.Intent;

        specialinvoke $r5.<android.content.Intent: void <init>(java.lang.String)>("com.android.intent.action.DISMISS_KEYBOARD_SHORTCUTS");

        $r6 = virtualinvoke r1.<android.content.ComponentName: java.lang.String getPackageName()>();

        virtualinvoke $r5.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>($r6);

        $r8 = staticinvoke <android.os.Process: android.os.UserHandle myUserHandle()>();

        virtualinvoke r0.<android.app.Activity: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>($r5, $r8);

        return;
    }

    void dispatchActivityResult(java.lang.String, int, int, android.content.Intent, java.lang.String)
    {
        android.app.Activity r0;
        int i0, i1, $i2, $i3;
        android.content.Intent r1, r20;
        java.lang.String r2, $r15, r17, r18, $r23;
        java.util.Iterator r3;
        android.view.ViewRootImpl r4;
        android.app.FragmentController $r5, $r6, $r16;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        android.view.autofill.AutofillManager $r7;
        android.view.View $r8, $r13, $r14;
        android.view.WindowManagerGlobal $r9;
        android.os.IBinder $r10;
        java.util.ArrayList $r11;
        java.lang.Object $r12;
        android.app.Fragment r19, r21;
        android.content.ComponentName $r22;

        r0 := @this: android.app.Activity;

        r17 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: android.content.Intent;

        r2 := @parameter4: java.lang.String;

        $r5 = r0.<android.app.Activity: android.app.FragmentController mFragments>;

        virtualinvoke $r5.<android.app.FragmentController: void noteStateNotSaved()>();

        if r17 != null goto label01;

        virtualinvoke r0.<android.app.Activity: void onActivityResult(int,int,android.content.Intent)>(i0, i1, r1);

        goto label12;

     label01:
        $z0 = virtualinvoke r17.<java.lang.String: boolean startsWith(java.lang.String)>("@android:requestPermissions:");

        if $z0 == 0 goto label04;

        $r15 = "@android:requestPermissions:";

        $i2 = virtualinvoke $r15.<java.lang.String: int length()>();

        r18 = virtualinvoke r17.<java.lang.String: java.lang.String substring(int)>($i2);

        $z5 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r18);

        if $z5 == 0 goto label02;

        specialinvoke r0.<android.app.Activity: void dispatchRequestPermissionsResult(int,android.content.Intent)>(i0, r1);

        goto label12;

     label02:
        $r16 = r0.<android.app.Activity: android.app.FragmentController mFragments>;

        r19 = virtualinvoke $r16.<android.app.FragmentController: android.app.Fragment findFragmentByWho(java.lang.String)>(r18);

        if r19 == null goto label03;

        specialinvoke r0.<android.app.Activity: void dispatchRequestPermissionsResultToFragment(int,android.content.Intent,android.app.Fragment)>(i0, r1, r19);

     label03:
        goto label12;

     label04:
        $z1 = virtualinvoke r17.<java.lang.String: boolean startsWith(java.lang.String)>("@android:view:");

        if $z1 == 0 goto label08;

        $r9 = staticinvoke <android.view.WindowManagerGlobal: android.view.WindowManagerGlobal getInstance()>();

        $r10 = virtualinvoke r0.<android.app.Activity: android.os.IBinder getActivityToken()>();

        $r11 = virtualinvoke $r9.<android.view.WindowManagerGlobal: java.util.ArrayList getRootViews(android.os.IBinder)>($r10);

        r3 = virtualinvoke $r11.<java.util.ArrayList: java.util.Iterator iterator()>();

     label05:
        $z3 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label07;

        $r12 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (android.view.ViewRootImpl) $r12;

        $r13 = virtualinvoke r4.<android.view.ViewRootImpl: android.view.View getView()>();

        if $r13 == null goto label06;

        $r14 = virtualinvoke r4.<android.view.ViewRootImpl: android.view.View getView()>();

        $z4 = virtualinvoke $r14.<android.view.View: boolean dispatchActivityResult(java.lang.String,int,int,android.content.Intent)>(r17, i0, i1, r1);

        if $z4 == 0 goto label06;

        return;

     label06:
        goto label05;

     label07:
        goto label12;

     label08:
        $z2 = virtualinvoke r17.<java.lang.String: boolean startsWith(java.lang.String)>("@android:autoFillAuth:");

        if $z2 == 0 goto label11;

        if i1 != -1 goto label09;

        r20 = r1;

        goto label10;

     label09:
        r20 = null;

     label10:
        $r7 = specialinvoke r0.<android.app.Activity: android.view.autofill.AutofillManager getAutofillManager()>();

        $r8 = virtualinvoke r0.<android.app.Activity: android.view.View getCurrentFocus()>();

        virtualinvoke $r7.<android.view.autofill.AutofillManager: void onAuthenticationResult(int,android.content.Intent,android.view.View)>(i0, r20, $r8);

        goto label12;

     label11:
        $r6 = r0.<android.app.Activity: android.app.FragmentController mFragments>;

        r21 = virtualinvoke $r6.<android.app.FragmentController: android.app.Fragment findFragmentByWho(java.lang.String)>(r17);

        if r21 == null goto label12;

        virtualinvoke r21.<android.app.Fragment: void onActivityResult(int,int,android.content.Intent)>(i0, i1, r1);

     label12:
        $i3 = r0.<android.app.Activity: int mIdent>;

        $r22 = virtualinvoke r0.<android.app.Activity: android.content.ComponentName getComponentName()>();

        $r23 = virtualinvoke $r22.<android.content.ComponentName: java.lang.String getClassName()>();

        staticinvoke <android.app.EventLogTags: void writeWmOnActivityResultCalled(int,java.lang.String,java.lang.String)>($i3, $r23, r2);

        return;
    }

    public void dispatchEnterAnimationComplete()
    {
        android.app.Activity r0;
        android.app.Instrumentation $r1;
        android.view.Window $r2, $r3, $r5;
        android.view.View $r4, $r6;
        android.view.ViewTreeObserver $r7;

        r0 := @this: android.app.Activity;

        r0.<android.app.Activity: boolean mEnterAnimationComplete> = 1;

        $r1 = r0.<android.app.Activity: android.app.Instrumentation mInstrumentation>;

        virtualinvoke $r1.<android.app.Instrumentation: void onEnterAnimationComplete()>();

        virtualinvoke r0.<android.app.Activity: void onEnterAnimationComplete()>();

        $r2 = virtualinvoke r0.<android.app.Activity: android.view.Window getWindow()>();

        if $r2 == null goto label1;

        $r3 = virtualinvoke r0.<android.app.Activity: android.view.Window getWindow()>();

        $r4 = virtualinvoke $r3.<android.view.Window: android.view.View getDecorView()>();

        if $r4 == null goto label1;

        $r5 = virtualinvoke r0.<android.app.Activity: android.view.Window getWindow()>();

        $r6 = virtualinvoke $r5.<android.view.Window: android.view.View getDecorView()>();

        $r7 = virtualinvoke $r6.<android.view.View: android.view.ViewTreeObserver getViewTreeObserver()>();

        virtualinvoke $r7.<android.view.ViewTreeObserver: void dispatchOnEnterAnimationComplete()>();

     label1:
        return;
    }

    public boolean dispatchGenericMotionEvent(android.view.MotionEvent)
    {
        android.app.Activity r0;
        android.view.MotionEvent r1;
        android.view.Window $r2;
        boolean $z0, $z1;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.view.MotionEvent;

        virtualinvoke r0.<android.app.Activity: void onUserInteraction()>();

        $r2 = virtualinvoke r0.<android.app.Activity: android.view.Window getWindow()>();

        $z0 = virtualinvoke $r2.<android.view.Window: boolean superDispatchGenericMotionEvent(android.view.MotionEvent)>(r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = virtualinvoke r0.<android.app.Activity: boolean onGenericMotionEvent(android.view.MotionEvent)>(r1);

        return $z1;
    }

    public boolean dispatchKeyEvent(android.view.KeyEvent)
    {
        android.app.Activity r0;
        android.view.KeyEvent r1;
        android.view.Window r2;
        android.view.View r3, r5;
        int $i0;
        boolean $z0, $z1, $z2;
        android.app.ActionBar r4;
        android.view.KeyEvent$DispatcherState r6;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.view.KeyEvent;

        virtualinvoke r0.<android.app.Activity: void onUserInteraction()>();

        $i0 = virtualinvoke r1.<android.view.KeyEvent: int getKeyCode()>();

        if $i0 != 82 goto label1;

        r4 = r0.<android.app.Activity: android.app.ActionBar mActionBar>;

        if r4 == null goto label1;

        $z1 = virtualinvoke r4.<android.app.ActionBar: boolean onMenuKeyEvent(android.view.KeyEvent)>(r1);

        if $z1 == 0 goto label1;

        return 1;

     label1:
        r2 = virtualinvoke r0.<android.app.Activity: android.view.Window getWindow()>();

        $z2 = virtualinvoke r2.<android.view.Window: boolean superDispatchKeyEvent(android.view.KeyEvent)>(r1);

        if $z2 == 0 goto label2;

        return 1;

     label2:
        r3 = r0.<android.app.Activity: android.view.View mDecor>;

        r5 = r3;

        if r3 != null goto label3;

        r5 = virtualinvoke r2.<android.view.Window: android.view.View getDecorView()>();

     label3:
        if r5 == null goto label4;

        r6 = virtualinvoke r5.<android.view.View: android.view.KeyEvent$DispatcherState getKeyDispatcherState()>();

        goto label5;

     label4:
        r6 = null;

     label5:
        $z0 = virtualinvoke r1.<android.view.KeyEvent: boolean dispatch(android.view.KeyEvent$Callback,android.view.KeyEvent$DispatcherState,java.lang.Object)>(r0, r6, r0);

        return $z0;
    }

    public boolean dispatchKeyShortcutEvent(android.view.KeyEvent)
    {
        android.app.Activity r0;
        android.view.KeyEvent r1;
        android.view.Window $r2;
        boolean $z0, $z1;
        int $i0;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.view.KeyEvent;

        virtualinvoke r0.<android.app.Activity: void onUserInteraction()>();

        $r2 = virtualinvoke r0.<android.app.Activity: android.view.Window getWindow()>();

        $z0 = virtualinvoke $r2.<android.view.Window: boolean superDispatchKeyShortcutEvent(android.view.KeyEvent)>(r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $i0 = virtualinvoke r1.<android.view.KeyEvent: int getKeyCode()>();

        $z1 = virtualinvoke r0.<android.app.Activity: boolean onKeyShortcut(int,android.view.KeyEvent)>($i0, r1);

        return $z1;
    }

    void dispatchMovedToDisplay(int, android.content.res.Configuration)
    {
        android.app.Activity r0;
        int i0;
        android.content.res.Configuration r1;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.res.Configuration;

        virtualinvoke r0.<android.app.Activity: void updateDisplay(int)>(i0);

        virtualinvoke r0.<android.app.Activity: void onMovedToDisplay(int,android.content.res.Configuration)>(i0, r1);

        return;
    }

    final void dispatchMultiWindowModeChanged(boolean, android.content.res.Configuration)
    {
        android.app.Activity r0;
        boolean z0;
        android.content.res.Configuration r1;
        android.view.Window r2;
        android.app.FragmentController $r3;

        r0 := @this: android.app.Activity;

        z0 := @parameter0: boolean;

        r1 := @parameter1: android.content.res.Configuration;

        $r3 = r0.<android.app.Activity: android.app.FragmentController mFragments>;

        virtualinvoke $r3.<android.app.FragmentController: void dispatchMultiWindowModeChanged(boolean,android.content.res.Configuration)>(z0, r1);

        r2 = r0.<android.app.Activity: android.view.Window mWindow>;

        if r2 == null goto label1;

        virtualinvoke r2.<android.view.Window: void onMultiWindowModeChanged()>();

     label1:
        r0.<android.app.Activity: boolean mIsInMultiWindowMode> = z0;

        virtualinvoke r0.<android.app.Activity: void onMultiWindowModeChanged(boolean,android.content.res.Configuration)>(z0, r1);

        return;
    }

    final void dispatchPictureInPictureModeChanged(boolean, android.content.res.Configuration)
    {
        android.app.Activity r0;
        boolean z0;
        android.content.res.Configuration r1;
        android.view.Window r2;
        android.app.FragmentController $r3;

        r0 := @this: android.app.Activity;

        z0 := @parameter0: boolean;

        r1 := @parameter1: android.content.res.Configuration;

        $r3 = r0.<android.app.Activity: android.app.FragmentController mFragments>;

        virtualinvoke $r3.<android.app.FragmentController: void dispatchPictureInPictureModeChanged(boolean,android.content.res.Configuration)>(z0, r1);

        r2 = r0.<android.app.Activity: android.view.Window mWindow>;

        if r2 == null goto label1;

        virtualinvoke r2.<android.view.Window: void onPictureInPictureModeChanged(boolean)>(z0);

     label1:
        r0.<android.app.Activity: boolean mIsInPictureInPictureMode> = z0;

        virtualinvoke r0.<android.app.Activity: void onPictureInPictureModeChanged(boolean,android.content.res.Configuration)>(z0, r1);

        return;
    }

    public boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        android.app.Activity r0;
        android.view.accessibility.AccessibilityEvent r1;
        java.lang.Class $r2;
        java.lang.String $r3, $r4;
        android.view.Window $r5;
        int $i0, $i1;
        java.util.List $r6;
        android.view.WindowManager$LayoutParams r7;
        boolean z1, $z2;
        java.lang.CharSequence r8;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setClassName(java.lang.CharSequence)>($r3);

        $r4 = virtualinvoke r0.<android.app.Activity: java.lang.String getPackageName()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setPackageName(java.lang.CharSequence)>($r4);

        $r5 = virtualinvoke r0.<android.app.Activity: android.view.Window getWindow()>();

        r7 = virtualinvoke $r5.<android.view.Window: android.view.WindowManager$LayoutParams getAttributes()>();

        $i0 = r7.<android.view.ViewGroup$LayoutParams: int width>;

        if $i0 != -1 goto label1;

        $i1 = r7.<android.view.ViewGroup$LayoutParams: int height>;

        if $i1 != -1 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setFullScreen(boolean)>(z1);

        r8 = virtualinvoke r0.<android.app.Activity: java.lang.CharSequence getTitle()>();

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r8);

        if $z2 != 0 goto label3;

        $r6 = virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: java.util.List getText()>();

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r8);

     label3:
        return 1;
    }

    public boolean dispatchTouchEvent(android.view.MotionEvent)
    {
        android.app.Activity r0;
        android.view.MotionEvent r1;
        int $i0;
        android.view.Window $r2;
        boolean $z0, $z1;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.view.MotionEvent;

        $i0 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();

        if $i0 != 0 goto label1;

        virtualinvoke r0.<android.app.Activity: void onUserInteraction()>();

     label1:
        $r2 = virtualinvoke r0.<android.app.Activity: android.view.Window getWindow()>();

        $z0 = virtualinvoke $r2.<android.view.Window: boolean superDispatchTouchEvent(android.view.MotionEvent)>(r1);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        $z1 = virtualinvoke r0.<android.app.Activity: boolean onTouchEvent(android.view.MotionEvent)>(r1);

        return $z1;
    }

    public boolean dispatchTrackballEvent(android.view.MotionEvent)
    {
        android.app.Activity r0;
        android.view.MotionEvent r1;
        android.view.Window $r2;
        boolean $z0, $z1;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.view.MotionEvent;

        virtualinvoke r0.<android.app.Activity: void onUserInteraction()>();

        $r2 = virtualinvoke r0.<android.app.Activity: android.view.Window getWindow()>();

        $z0 = virtualinvoke $r2.<android.view.Window: boolean superDispatchTrackballEvent(android.view.MotionEvent)>(r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = virtualinvoke r0.<android.app.Activity: boolean onTrackballEvent(android.view.MotionEvent)>(r1);

        return $z1;
    }

    public void dump(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        android.app.Activity r0;
        java.lang.String r1;
        java.io.FileDescriptor r2;
        java.io.PrintWriter r3;
        java.lang.String[] r4;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.io.FileDescriptor;

        r3 := @parameter2: java.io.PrintWriter;

        r4 := @parameter3: java.lang.String[];

        virtualinvoke r0.<android.app.Activity: void dumpInner(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r1, r2, r3, r4);

        return;
    }

    void dumpAutofillManager(java.lang.String, java.io.PrintWriter)
    {
        android.app.Activity r0;
        java.lang.String r1;
        java.io.PrintWriter r2;
        android.view.autofill.AutofillManager r3;
        boolean $z0;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.io.PrintWriter;

        r3 = specialinvoke r0.<android.app.Activity: android.view.autofill.AutofillManager getAutofillManager()>();

        if r3 == null goto label1;

        virtualinvoke r3.<android.view.autofill.AutofillManager: void dump(java.lang.String,java.io.PrintWriter)>(r1, r2);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("Autofill Compat Mode: ");

        $z0 = virtualinvoke r0.<android.app.Activity: boolean isAutofillCompatibilityEnabled()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(boolean)>($z0);

        goto label2;

     label1:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("No AutofillManager");

     label2:
        return;
    }

    void dumpContentCaptureManager(java.lang.String, java.io.PrintWriter)
    {
        android.app.Activity r0;
        java.lang.String r1;
        java.io.PrintWriter r2;
        android.view.contentcapture.ContentCaptureManager r3;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.io.PrintWriter;

        r3 = specialinvoke r0.<android.app.Activity: android.view.contentcapture.ContentCaptureManager getContentCaptureManager()>();

        if r3 == null goto label1;

        virtualinvoke r3.<android.view.contentcapture.ContentCaptureManager: void dump(java.lang.String,java.io.PrintWriter)>(r1, r2);

        goto label2;

     label1:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("No ContentCaptureManager");

     label2:
        return;
    }

    void dumpInner(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        android.app.Activity r0;
        java.lang.String r1, r5, r23, $r24;
        java.io.FileDescriptor r2;
        java.io.PrintWriter r3;
        java.lang.String[] r4;
        int i0, $i1, $i3;
        android.app.FragmentController $r8, $r9;
        android.app.FragmentManager $r10;
        android.view.Window $r11, $r12, $r14, $r17;
        android.view.View $r13, $r15, $r18;
        android.view.ViewRootImpl $r16, $r19;
        android.content.res.Resources $r20, $r28;
        android.view.DisplayAdjustments $r21;
        android.view.DisplayAdjustments$FixedRotationAdjustments $r22;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        byte b2;
        java.lang.StringBuilder $r25;
        android.content.res.Configuration $r27;
        android.app.VoiceInteractor r29;
        android.os.Handler $r30;
        android.os.Looper $r31;
        android.util.PrintWriterPrinter $r32;
        android.app.ResourcesManager $r33;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.io.FileDescriptor;

        r3 := @parameter2: java.io.PrintWriter;

        r4 := @parameter3: java.lang.String[];

        if r4 == null goto label08;

        $i1 = lengthof r4;

        if $i1 <= 0 goto label08;

        b2 = 0;

        r23 = r4[0];

        i0 = virtualinvoke r23.<java.lang.String: int hashCode()>();

        if i0 == 1159329357 goto label03;

        if i0 == 1455016274 goto label02;

     label01:
        goto label04;

     label02:
        $z1 = virtualinvoke r23.<java.lang.String: boolean equals(java.lang.Object)>("--autofill");

        if $z1 == 0 goto label01;

        goto label05;

     label03:
        $z0 = virtualinvoke r23.<java.lang.String: boolean equals(java.lang.Object)>("--contentcapture");

        if $z0 == 0 goto label01;

        b2 = 1;

        goto label05;

     label04:
        b2 = -1;

     label05:
        if b2 == 0 goto label07;

        if b2 == 1 goto label06;

        goto label08;

     label06:
        virtualinvoke r0.<android.app.Activity: void dumpContentCaptureManager(java.lang.String,java.io.PrintWriter)>(r1, r3);

        return;

     label07:
        virtualinvoke r0.<android.app.Activity: void dumpAutofillManager(java.lang.String,java.io.PrintWriter)>(r1, r3);

        return;

     label08:
        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>("Local Activity ");

        $i3 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        $r24 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i3);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>($r24);

        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.String)>(" State:");

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        r5 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(r5);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>("mResumed=");

        $z2 = r0.<android.app.Activity: boolean mResumed>;

        virtualinvoke r3.<java.io.PrintWriter: void print(boolean)>($z2);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(" mStopped=");

        $z3 = r0.<android.app.Activity: boolean mStopped>;

        virtualinvoke r3.<java.io.PrintWriter: void print(boolean)>($z3);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(" mFinished=");

        $z4 = r0.<android.app.Activity: boolean mFinished>;

        virtualinvoke r3.<java.io.PrintWriter: void println(boolean)>($z4);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(r5);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>("mIsInMultiWindowMode=");

        $z5 = r0.<android.app.Activity: boolean mIsInMultiWindowMode>;

        virtualinvoke r3.<java.io.PrintWriter: void print(boolean)>($z5);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(" mIsInPictureInPictureMode=");

        $z6 = r0.<android.app.Activity: boolean mIsInPictureInPictureMode>;

        virtualinvoke r3.<java.io.PrintWriter: void println(boolean)>($z6);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(r5);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>("mChangingConfigurations=");

        $z7 = r0.<android.app.Activity: boolean mChangingConfigurations>;

        virtualinvoke r3.<java.io.PrintWriter: void println(boolean)>($z7);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(r5);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>("mCurrentConfig=");

        $r27 = r0.<android.app.Activity: android.content.res.Configuration mCurrentConfig>;

        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.Object)>($r27);

        $r28 = virtualinvoke r0.<android.app.Activity: android.content.res.Resources getResources()>();

        $z8 = virtualinvoke $r28.<android.content.res.Resources: boolean hasOverrideDisplayAdjustments()>();

        if $z8 == 0 goto label09;

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(r5);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>("FixedRotationAdjustments=");

        $r20 = virtualinvoke r0.<android.app.Activity: android.content.res.Resources getResources()>();

        $r21 = virtualinvoke $r20.<android.content.res.Resources: android.view.DisplayAdjustments getDisplayAdjustments()>();

        $r22 = virtualinvoke $r21.<android.view.DisplayAdjustments: android.view.DisplayAdjustments$FixedRotationAdjustments getFixedRotationAdjustments()>();

        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.Object)>($r22);

     label09:
        $r8 = r0.<android.app.Activity: android.app.FragmentController mFragments>;

        virtualinvoke $r8.<android.app.FragmentController: void dumpLoaders(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r5, r2, r3, r4);

        $r9 = r0.<android.app.Activity: android.app.FragmentController mFragments>;

        $r10 = virtualinvoke $r9.<android.app.FragmentController: android.app.FragmentManager getFragmentManager()>();

        virtualinvoke $r10.<android.app.FragmentManager: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r5, r2, r3, r4);

        r29 = r0.<android.app.Activity: android.app.VoiceInteractor mVoiceInteractor>;

        if r29 == null goto label10;

        virtualinvoke r29.<android.app.VoiceInteractor: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r5, r2, r3, r4);

     label10:
        $r11 = virtualinvoke r0.<android.app.Activity: android.view.Window getWindow()>();

        if $r11 == null goto label11;

        $r12 = virtualinvoke r0.<android.app.Activity: android.view.Window getWindow()>();

        $r13 = virtualinvoke $r12.<android.view.Window: android.view.View peekDecorView()>();

        if $r13 == null goto label11;

        $r14 = virtualinvoke r0.<android.app.Activity: android.view.Window getWindow()>();

        $r15 = virtualinvoke $r14.<android.view.Window: android.view.View peekDecorView()>();

        $r16 = virtualinvoke $r15.<android.view.View: android.view.ViewRootImpl getViewRootImpl()>();

        if $r16 == null goto label11;

        $r17 = virtualinvoke r0.<android.app.Activity: android.view.Window getWindow()>();

        $r18 = virtualinvoke $r17.<android.view.Window: android.view.View peekDecorView()>();

        $r19 = virtualinvoke $r18.<android.view.View: android.view.ViewRootImpl getViewRootImpl()>();

        virtualinvoke $r19.<android.view.ViewRootImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r1, r2, r3, r4);

     label11:
        $r30 = r0.<android.app.Activity: android.os.Handler mHandler>;

        $r31 = virtualinvoke $r30.<android.os.Handler: android.os.Looper getLooper()>();

        $r32 = new android.util.PrintWriterPrinter;

        specialinvoke $r32.<android.util.PrintWriterPrinter: void <init>(java.io.PrintWriter)>(r3);

        virtualinvoke $r31.<android.os.Looper: void dump(android.util.Printer,java.lang.String)>($r32, r1);

        virtualinvoke r0.<android.app.Activity: void dumpAutofillManager(java.lang.String,java.io.PrintWriter)>(r1, r3);

        virtualinvoke r0.<android.app.Activity: void dumpContentCaptureManager(java.lang.String,java.io.PrintWriter)>(r1, r3);

        $r33 = staticinvoke <android.app.ResourcesManager: android.app.ResourcesManager getInstance()>();

        virtualinvoke $r33.<android.app.ResourcesManager: void dump(java.lang.String,java.io.PrintWriter)>(r1, r3);

        return;
    }

    public void enterPictureInPictureMode()
    {
        android.app.Activity r0;
        android.app.PictureInPictureParams$Builder $r1;
        android.app.PictureInPictureParams $r2;

        r0 := @this: android.app.Activity;

        $r1 = new android.app.PictureInPictureParams$Builder;

        specialinvoke $r1.<android.app.PictureInPictureParams$Builder: void <init>()>();

        $r2 = virtualinvoke $r1.<android.app.PictureInPictureParams$Builder: android.app.PictureInPictureParams build()>();

        virtualinvoke r0.<android.app.Activity: boolean enterPictureInPictureMode(android.app.PictureInPictureParams)>($r2);

        return;
    }

    public boolean enterPictureInPictureMode(android.app.PictureInPictureParams)
    {
        android.app.Activity r0;
        boolean z0, $z1, $z2;
        android.app.IActivityTaskManager $r1;
        android.os.IBinder $r2;
        android.os.RemoteException $r3;
        android.app.PictureInPictureParams r4;
        java.lang.IllegalStateException r5;
        java.lang.IllegalArgumentException r6;

        r0 := @this: android.app.Activity;

        r4 := @parameter0: android.app.PictureInPictureParams;

     label1:
        $z1 = specialinvoke r0.<android.app.Activity: boolean deviceSupportsPictureInPictureMode()>();

        if $z1 != 0 goto label3;

     label2:
        return 0;

     label3:
        if r4 == null goto label7;

     label4:
        $z2 = r0.<android.app.Activity: boolean mCanEnterPictureInPicture>;

        if $z2 == 0 goto label6;

        $r1 = staticinvoke <android.app.ActivityTaskManager: android.app.IActivityTaskManager getService()>();

        $r2 = r0.<android.app.Activity: android.os.IBinder mToken>;

        z0 = interfaceinvoke $r1.<android.app.IActivityTaskManager: boolean enterPictureInPictureMode(android.os.IBinder,android.app.PictureInPictureParams)>($r2, r4);

        r0.<android.app.Activity: boolean mIsInPictureInPictureMode> = z0;

     label5:
        return z0;

     label6:
        r5 = new java.lang.IllegalStateException;

        specialinvoke r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Activity must be resumed to enter picture-in-picture");

        throw r5;

     label7:
        r6 = new java.lang.IllegalArgumentException;

        specialinvoke r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Expected non-null picture-in-picture params");

        throw r6;

     label8:
        $r3 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label8;
        catch android.os.RemoteException from label4 to label5 with label8;
        catch android.os.RemoteException from label6 to label7 with label8;
        catch android.os.RemoteException from label7 to label8 with label8;
    }

    public android.view.View findViewById(int)
    {
        android.app.Activity r0;
        int i0;
        android.view.Window $r1;
        android.view.View $r2;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.app.Activity: android.view.Window getWindow()>();

        $r2 = virtualinvoke $r1.<android.view.Window: android.view.View findViewById(int)>(i0);

        return $r2;
    }

    public void finish()
    {
        android.app.Activity r0;

        r0 := @this: android.app.Activity;

        specialinvoke r0.<android.app.Activity: void finish(int)>(0);

        return;
    }

    public void finishActivity(int)
    {
        android.app.Activity r0, r5;
        int i0;
        android.app.IActivityTaskManager $r1;
        java.lang.String $r2;
        android.os.IBinder $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        r5 = r0.<android.app.Activity: android.app.Activity mParent>;

        if r5 != null goto label5;

     label1:
        $r1 = staticinvoke <android.app.ActivityTaskManager: android.app.IActivityTaskManager getService()>();

        $r3 = r0.<android.app.Activity: android.os.IBinder mToken>;

        $r2 = r0.<android.app.Activity: java.lang.String mEmbeddedID>;

        interfaceinvoke $r1.<android.app.IActivityTaskManager: void finishSubActivity(android.os.IBinder,java.lang.String,int)>($r3, $r2, i0);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        goto label6;

     label5:
        virtualinvoke r5.<android.app.Activity: void finishActivityFromChild(android.app.Activity,int)>(r0, i0);

     label6:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void finishActivityFromChild(android.app.Activity, int)
    {
        android.app.Activity r0, r5;
        int i0;
        android.app.IActivityTaskManager $r1;
        java.lang.String $r2;
        android.os.IBinder $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.app.Activity;

        r5 := @parameter0: android.app.Activity;

        i0 := @parameter1: int;

     label1:
        $r1 = staticinvoke <android.app.ActivityTaskManager: android.app.IActivityTaskManager getService()>();

        $r3 = r0.<android.app.Activity: android.os.IBinder mToken>;

        $r2 = r5.<android.app.Activity: java.lang.String mEmbeddedID>;

        interfaceinvoke $r1.<android.app.IActivityTaskManager: void finishSubActivity(android.os.IBinder,java.lang.String,int)>($r3, $r2, i0);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void finishAffinity()
    {
        android.app.Activity r0, $r2;
        java.lang.IllegalStateException $r3, $r4;
        int $i0;
        android.content.Intent $r5;
        android.app.IActivityTaskManager $r6;
        android.os.IBinder $r7;
        boolean $z0;
        android.os.RemoteException $r8;

        r0 := @this: android.app.Activity;

        $r2 = r0.<android.app.Activity: android.app.Activity mParent>;

        if $r2 != null goto label6;

        $i0 = r0.<android.app.Activity: int mResultCode>;

        if $i0 != 0 goto label5;

        $r5 = r0.<android.app.Activity: android.content.Intent mResultData>;

        if $r5 != null goto label5;

     label1:
        $r6 = staticinvoke <android.app.ActivityTaskManager: android.app.IActivityTaskManager getService()>();

        $r7 = r0.<android.app.Activity: android.os.IBinder mToken>;

        $z0 = interfaceinvoke $r6.<android.app.IActivityTaskManager: boolean finishActivityAffinity(android.os.IBinder)>($r7);

        if $z0 == 0 goto label2;

        r0.<android.app.Activity: boolean mFinished> = 1;

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

     label4:
        return;

     label5:
        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Can not be called to deliver a result");

        throw $r4;

     label6:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Can not be called from an embedded activity");

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void finishAfterTransition()
    {
        android.app.Activity r0;
        android.app.ActivityTransitionState $r1;
        boolean $z0;

        r0 := @this: android.app.Activity;

        $r1 = r0.<android.app.Activity: android.app.ActivityTransitionState mActivityTransitionState>;

        $z0 = virtualinvoke $r1.<android.app.ActivityTransitionState: boolean startExitBackTransition(android.app.Activity)>(r0);

        if $z0 != 0 goto label1;

        virtualinvoke r0.<android.app.Activity: void finish()>();

     label1:
        return;
    }

    public void finishAndRemoveTask()
    {
        android.app.Activity r0;

        r0 := @this: android.app.Activity;

        specialinvoke r0.<android.app.Activity: void finish(int)>(1);

        return;
    }

    public void finishFromChild(android.app.Activity)
    {
        android.app.Activity r0, r1;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.app.Activity;

        virtualinvoke r0.<android.app.Activity: void finish()>();

        return;
    }

    public android.app.ActionBar getActionBar()
    {
        android.app.Activity r0;
        android.app.ActionBar $r1;

        r0 := @this: android.app.Activity;

        specialinvoke r0.<android.app.Activity: void initWindowDecorActionBar()>();

        $r1 = r0.<android.app.Activity: android.app.ActionBar mActionBar>;

        return $r1;
    }

    android.app.ActivityOptions getActivityOptions()
    {
        android.app.Activity r0;
        android.app.IActivityTaskManager $r1;
        android.os.IBinder $r2;
        android.os.Bundle $r3;
        android.os.RemoteException $r4;
        android.app.ActivityOptions r5;

        r0 := @this: android.app.Activity;

     label1:
        $r1 = staticinvoke <android.app.ActivityTaskManager: android.app.IActivityTaskManager getService()>();

        $r2 = r0.<android.app.Activity: android.os.IBinder mToken>;

        $r3 = interfaceinvoke $r1.<android.app.IActivityTaskManager: android.os.Bundle getActivityOptions(android.os.IBinder)>($r2);

        r5 = staticinvoke <android.app.ActivityOptions: android.app.ActivityOptions fromBundle(android.os.Bundle)>($r3);

     label2:
        return r5;

     label3:
        $r4 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public final android.app.ActivityThread getActivityThread()
    {
        android.app.Activity r0;
        android.app.ActivityThread $r1;

        r0 := @this: android.app.Activity;

        $r1 = r0.<android.app.Activity: android.app.ActivityThread mMainThread>;

        return $r1;
    }

    public final android.os.IBinder getActivityToken()
    {
        android.app.Activity r0, r1;
        android.os.IBinder r2;

        r0 := @this: android.app.Activity;

        r1 = r0.<android.app.Activity: android.app.Activity mParent>;

        if r1 == null goto label1;

        r2 = virtualinvoke r1.<android.app.Activity: android.os.IBinder getActivityToken()>();

        goto label2;

     label1:
        r2 = r0.<android.app.Activity: android.os.IBinder mToken>;

     label2:
        return r2;
    }

    public final android.app.Application getApplication()
    {
        android.app.Activity r0;
        android.app.Application $r1;

        r0 := @this: android.app.Activity;

        $r1 = r0.<android.app.Activity: android.app.Application mApplication>;

        return $r1;
    }

    public final android.os.IBinder getAssistToken()
    {
        android.app.Activity r0, r1;
        android.os.IBinder r2;

        r0 := @this: android.app.Activity;

        r1 = r0.<android.app.Activity: android.app.Activity mParent>;

        if r1 == null goto label1;

        r2 = virtualinvoke r1.<android.app.Activity: android.os.IBinder getAssistToken()>();

        goto label2;

     label1:
        r2 = r0.<android.app.Activity: android.os.IBinder mAssistToken>;

     label2:
        return r2;
    }

    public final android.view.autofill.AutofillManager$AutofillClient getAutofillClient()
    {
        android.app.Activity r0;

        r0 := @this: android.app.Activity;

        return r0;
    }

    public android.content.ComponentName getCallingActivity()
    {
        android.app.Activity r0;
        android.app.IActivityTaskManager $r1;
        android.os.IBinder $r2;
        android.os.RemoteException $r3;
        android.content.ComponentName r4;

        r0 := @this: android.app.Activity;

     label1:
        $r1 = staticinvoke <android.app.ActivityTaskManager: android.app.IActivityTaskManager getService()>();

        $r2 = r0.<android.app.Activity: android.os.IBinder mToken>;

        r4 = interfaceinvoke $r1.<android.app.IActivityTaskManager: android.content.ComponentName getCallingActivity(android.os.IBinder)>($r2);

     label2:
        return r4;

     label3:
        $r3 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.lang.String getCallingPackage()
    {
        android.app.Activity r0;
        android.app.IActivityTaskManager $r1;
        android.os.IBinder $r2;
        android.os.RemoteException $r3;
        java.lang.String r4;

        r0 := @this: android.app.Activity;

     label1:
        $r1 = staticinvoke <android.app.ActivityTaskManager: android.app.IActivityTaskManager getService()>();

        $r2 = r0.<android.app.Activity: android.os.IBinder mToken>;

        r4 = interfaceinvoke $r1.<android.app.IActivityTaskManager: java.lang.String getCallingPackage(android.os.IBinder)>($r2);

     label2:
        return r4;

     label3:
        $r3 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int getChangingConfigurations()
    {
        android.app.Activity r0;
        int $i0;

        r0 := @this: android.app.Activity;

        $i0 = r0.<android.app.Activity: int mConfigChangeFlags>;

        return $i0;
    }

    public android.content.ComponentName getComponentName()
    {
        android.app.Activity r0;
        android.content.ComponentName $r1;

        r0 := @this: android.app.Activity;

        $r1 = r0.<android.app.Activity: android.content.ComponentName mComponent>;

        return $r1;
    }

    public final android.view.contentcapture.ContentCaptureManager$ContentCaptureClient getContentCaptureClient()
    {
        android.app.Activity r0;

        r0 := @this: android.app.Activity;

        return r0;
    }

    public android.transition.Scene getContentScene()
    {
        android.app.Activity r0;
        android.view.Window $r1;
        android.transition.Scene $r2;

        r0 := @this: android.app.Activity;

        $r1 = virtualinvoke r0.<android.app.Activity: android.view.Window getWindow()>();

        $r2 = virtualinvoke $r1.<android.view.Window: android.transition.Scene getContentScene()>();

        return $r2;
    }

    public android.transition.TransitionManager getContentTransitionManager()
    {
        android.app.Activity r0;
        android.view.Window $r1;
        android.transition.TransitionManager $r2;

        r0 := @this: android.app.Activity;

        $r1 = virtualinvoke r0.<android.app.Activity: android.view.Window getWindow()>();

        $r2 = virtualinvoke $r1.<android.view.Window: android.transition.TransitionManager getTransitionManager()>();

        return $r2;
    }

    public android.view.View getCurrentFocus()
    {
        android.app.Activity r0;
        android.view.Window r1;
        android.view.View r2;

        r0 := @this: android.app.Activity;

        r1 = r0.<android.app.Activity: android.view.Window mWindow>;

        if r1 == null goto label1;

        r2 = virtualinvoke r1.<android.view.Window: android.view.View getCurrentFocus()>();

        goto label2;

     label1:
        r2 = null;

     label2:
        return r2;
    }

    public android.app.FragmentManager getFragmentManager()
    {
        android.app.Activity r0;
        android.app.FragmentController $r1;
        android.app.FragmentManager $r2;

        r0 := @this: android.app.Activity;

        $r1 = r0.<android.app.Activity: android.app.FragmentController mFragments>;

        $r2 = virtualinvoke $r1.<android.app.FragmentController: android.app.FragmentManager getFragmentManager()>();

        return $r2;
    }

    public android.content.Intent getIntent()
    {
        android.app.Activity r0;
        android.content.Intent $r1;

        r0 := @this: android.app.Activity;

        $r1 = r0.<android.app.Activity: android.content.Intent mIntent>;

        return $r1;
    }

    java.util.HashMap getLastNonConfigurationChildInstances()
    {
        android.app.Activity r0;
        android.app.Activity$NonConfigurationInstances r1;
        java.util.HashMap r2;

        r0 := @this: android.app.Activity;

        r1 = r0.<android.app.Activity: android.app.Activity$NonConfigurationInstances mLastNonConfigurationInstances>;

        if r1 == null goto label1;

        r2 = r1.<android.app.Activity$NonConfigurationInstances: java.util.HashMap children>;

        goto label2;

     label1:
        r2 = null;

     label2:
        return r2;
    }

    public java.lang.Object getLastNonConfigurationInstance()
    {
        android.app.Activity r0;
        android.app.Activity$NonConfigurationInstances r1;
        java.lang.Object r2;

        r0 := @this: android.app.Activity;

        r1 = r0.<android.app.Activity: android.app.Activity$NonConfigurationInstances mLastNonConfigurationInstances>;

        if r1 == null goto label1;

        r2 = r1.<android.app.Activity$NonConfigurationInstances: java.lang.Object activity>;

        goto label2;

     label1:
        r2 = null;

     label2:
        return r2;
    }

    public android.view.LayoutInflater getLayoutInflater()
    {
        android.app.Activity r0;
        android.view.Window $r1;
        android.view.LayoutInflater $r2;

        r0 := @this: android.app.Activity;

        $r1 = virtualinvoke r0.<android.app.Activity: android.view.Window getWindow()>();

        $r2 = virtualinvoke $r1.<android.view.Window: android.view.LayoutInflater getLayoutInflater()>();

        return $r2;
    }

    public android.app.LoaderManager getLoaderManager()
    {
        android.app.Activity r0;
        android.app.FragmentController $r1;
        android.app.LoaderManager $r2;

        r0 := @this: android.app.Activity;

        $r1 = r0.<android.app.Activity: android.app.FragmentController mFragments>;

        $r2 = virtualinvoke $r1.<android.app.FragmentController: android.app.LoaderManager getLoaderManager()>();

        return $r2;
    }

    public java.lang.String getLocalClassName()
    {
        android.app.Activity r0;
        java.lang.String r1, r2, $r4;
        int i0, $i1, $i3;
        android.content.ComponentName $r3;
        boolean $z0;
        char $c2;

        r0 := @this: android.app.Activity;

        r1 = virtualinvoke r0.<android.app.Activity: java.lang.String getPackageName()>();

        $r3 = r0.<android.app.Activity: android.content.ComponentName mComponent>;

        r2 = virtualinvoke $r3.<android.content.ComponentName: java.lang.String getClassName()>();

        i0 = virtualinvoke r1.<java.lang.String: int length()>();

        $z0 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>(r1);

        if $z0 == 0 goto label2;

        $i1 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i1 <= i0 goto label2;

        $c2 = virtualinvoke r2.<java.lang.String: char charAt(int)>(i0);

        if $c2 == 46 goto label1;

        goto label2;

     label1:
        $i3 = i0 + 1;

        $r4 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i3);

        return $r4;

     label2:
        return r2;
    }

    public int getMaxNumPictureInPictureActions()
    {
        android.app.Activity r0;
        int i0;
        android.app.IActivityTaskManager $r2;
        android.os.IBinder $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.app.Activity;

     label1:
        $r2 = staticinvoke <android.app.ActivityTaskManager: android.app.IActivityTaskManager getService()>();

        $r3 = r0.<android.app.Activity: android.os.IBinder mToken>;

        i0 = interfaceinvoke $r2.<android.app.IActivityTaskManager: int getMaxNumPictureInPictureActions(android.os.IBinder)>($r3);

     label2:
        return i0;

     label3:
        $r4 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public final android.media.session.MediaController getMediaController()
    {
        android.app.Activity r0;
        android.view.Window $r1;
        android.media.session.MediaController $r2;

        r0 := @this: android.app.Activity;

        $r1 = virtualinvoke r0.<android.app.Activity: android.view.Window getWindow()>();

        $r2 = virtualinvoke $r1.<android.view.Window: android.media.session.MediaController getMediaController()>();

        return $r2;
    }

    public android.view.MenuInflater getMenuInflater()
    {
        android.app.Activity r0;
        android.view.MenuInflater $r1, $r3, $r4, $r7;
        android.app.ActionBar $r2, $r5;
        android.content.Context $r6;

        r0 := @this: android.app.Activity;

        $r1 = r0.<android.app.Activity: android.view.MenuInflater mMenuInflater>;

        if $r1 != null goto label2;

        specialinvoke r0.<android.app.Activity: void initWindowDecorActionBar()>();

        $r2 = r0.<android.app.Activity: android.app.ActionBar mActionBar>;

        if $r2 == null goto label1;

        $r4 = new android.view.MenuInflater;

        $r5 = r0.<android.app.Activity: android.app.ActionBar mActionBar>;

        $r6 = virtualinvoke $r5.<android.app.ActionBar: android.content.Context getThemedContext()>();

        specialinvoke $r4.<android.view.MenuInflater: void <init>(android.content.Context,java.lang.Object)>($r6, r0);

        r0.<android.app.Activity: android.view.MenuInflater mMenuInflater> = $r4;

        goto label2;

     label1:
        $r3 = new android.view.MenuInflater;

        specialinvoke $r3.<android.view.MenuInflater: void <init>(android.content.Context)>(r0);

        r0.<android.app.Activity: android.view.MenuInflater mMenuInflater> = $r3;

     label2:
        $r7 = r0.<android.app.Activity: android.view.MenuInflater mMenuInflater>;

        return $r7;
    }

    public int getNextAutofillId()
    {
        android.app.Activity r0;
        int i0, $i1, $i2;

        r0 := @this: android.app.Activity;

        $i1 = r0.<android.app.Activity: int mLastAutofillId>;

        if $i1 != 2147483646 goto label1;

        r0.<android.app.Activity: int mLastAutofillId> = 1073741823;

     label1:
        $i2 = r0.<android.app.Activity: int mLastAutofillId>;

        i0 = $i2 + 1;

        r0.<android.app.Activity: int mLastAutofillId> = i0;

        return i0;
    }

    public final android.app.Activity getParent()
    {
        android.app.Activity r0, $r1;

        r0 := @this: android.app.Activity;

        $r1 = r0.<android.app.Activity: android.app.Activity mParent>;

        return $r1;
    }

    public android.content.Intent getParentActivityIntent()
    {
        android.app.Activity r0;
        java.lang.String r1, $r7, $r13;
        android.content.pm.ActivityInfo $r3, $r6;
        boolean $z0;
        android.content.ComponentName $r4;
        android.content.pm.PackageManager $r5;
        android.content.pm.PackageManager$NameNotFoundException $r8;
        java.lang.StringBuilder $r9;
        android.content.Intent r14, r15;

        r0 := @this: android.app.Activity;

        $r3 = r0.<android.app.Activity: android.content.pm.ActivityInfo mActivityInfo>;

        r1 = $r3.<android.content.pm.ActivityInfo: java.lang.String parentActivityName>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r4 = new android.content.ComponentName;

        specialinvoke $r4.<android.content.ComponentName: void <init>(android.content.Context,java.lang.String)>(r0, r1);

     label2:
        $r5 = virtualinvoke r0.<android.app.Activity: android.content.pm.PackageManager getPackageManager()>();

        $r6 = virtualinvoke $r5.<android.content.pm.PackageManager: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int)>($r4, 0);

        $r7 = $r6.<android.content.pm.ActivityInfo: java.lang.String parentActivityName>;

        if $r7 != null goto label4;

        r14 = staticinvoke <android.content.Intent: android.content.Intent makeMainActivity(android.content.ComponentName)>($r4);

     label3:
        goto label5;

     label4:
        r15 = new android.content.Intent;

        specialinvoke r15.<android.content.Intent: void <init>()>();

        r14 = virtualinvoke r15.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>($r4);

     label5:
        return r14;

     label6:
        $r8 := @caughtexception;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getParentActivityIntent: bad parentActivityName \'");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' in manifest");

        $r13 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Activity", $r13);

        return null;

        catch android.content.pm.PackageManager$NameNotFoundException from label2 to label3 with label6;
        catch android.content.pm.PackageManager$NameNotFoundException from label4 to label5 with label6;
    }

    public android.content.SharedPreferences getPreferences(int)
    {
        android.app.Activity r0;
        int i0;
        java.lang.String $r1;
        android.content.SharedPreferences $r2;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.app.Activity: java.lang.String getLocalClassName()>();

        $r2 = virtualinvoke r0.<android.app.Activity: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>($r1, i0);

        return $r2;
    }

    public android.net.Uri getReferrer()
    {
        android.app.Activity r0;
        android.net.Uri r1, $r8, r12;
        android.os.Parcelable $r2;
        java.lang.String $r3, $r6, r11;
        android.net.Uri$Builder $r4, $r5, $r7;
        android.os.BadParcelableException $r9;
        android.content.Intent r10;

        r0 := @this: android.app.Activity;

        r10 = virtualinvoke r0.<android.app.Activity: android.content.Intent getIntent()>();

     label01:
        $r2 = virtualinvoke r10.<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>("android.intent.extra.REFERRER");

        r1 = (android.net.Uri) $r2;

     label02:
        if r1 == null goto label03;

        return r1;

     label03:
        r11 = virtualinvoke r10.<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>("android.intent.extra.REFERRER_NAME");

     label04:
        if r11 == null goto label07;

     label05:
        r12 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>(r11);

     label06:
        return r12;

     label07:
        goto label09;

     label08:
        $r9 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Activity", "Cannot read referrer from intent; intent extras contain unknown custom Parcelable objects");

     label09:
        $r3 = r0.<android.app.Activity: java.lang.String mReferrer>;

        if $r3 == null goto label10;

        $r4 = new android.net.Uri$Builder;

        specialinvoke $r4.<android.net.Uri$Builder: void <init>()>();

        $r5 = virtualinvoke $r4.<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>("android-app");

        $r6 = r0.<android.app.Activity: java.lang.String mReferrer>;

        $r7 = virtualinvoke $r5.<android.net.Uri$Builder: android.net.Uri$Builder authority(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<android.net.Uri$Builder: android.net.Uri build()>();

        return $r8;

     label10:
        return null;

        catch android.os.BadParcelableException from label01 to label02 with label08;
        catch android.os.BadParcelableException from label03 to label04 with label08;
        catch android.os.BadParcelableException from label05 to label06 with label08;
    }

    public int getRequestedOrientation()
    {
        android.app.Activity r0, r4;
        int i0, $i1;
        android.app.IActivityTaskManager $r1;
        android.os.IBinder $r2;
        android.os.RemoteException $r3;

        r0 := @this: android.app.Activity;

        r4 = r0.<android.app.Activity: android.app.Activity mParent>;

        if r4 != null goto label4;

     label1:
        $r1 = staticinvoke <android.app.ActivityTaskManager: android.app.IActivityTaskManager getService()>();

        $r2 = r0.<android.app.Activity: android.os.IBinder mToken>;

        i0 = interfaceinvoke $r1.<android.app.IActivityTaskManager: int getRequestedOrientation(android.os.IBinder)>($r2);

     label2:
        return i0;

     label3:
        $r3 := @caughtexception;

        return -1;

     label4:
        $i1 = virtualinvoke r4.<android.app.Activity: int getRequestedOrientation()>();

        return $i1;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public final android.view.SearchEvent getSearchEvent()
    {
        android.app.Activity r0;
        android.view.SearchEvent $r1;

        r0 := @this: android.app.Activity;

        $r1 = r0.<android.app.Activity: android.view.SearchEvent mSearchEvent>;

        return $r1;
    }

    public java.lang.Object getSystemService(java.lang.String)
    {
        android.app.Activity r0;
        java.lang.String r1, $r4, $r5;
        android.content.Context $r2;
        java.lang.IllegalStateException $r3;
        boolean $z0, $z1;
        java.lang.Object $r6;
        android.app.SearchManager $r7;
        android.view.WindowManager $r8;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<android.app.Activity: android.content.Context getBaseContext()>();

        if $r2 == null goto label3;

        $r4 = "window";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r8 = r0.<android.app.Activity: android.view.WindowManager mWindowManager>;

        return $r8;

     label1:
        $r5 = "search";

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label2;

        specialinvoke r0.<android.app.Activity: void ensureSearchManager()>();

        $r7 = r0.<android.app.Activity: android.app.SearchManager mSearchManager>;

        return $r7;

     label2:
        $r6 = specialinvoke r0.<android.view.ContextThemeWrapper: java.lang.Object getSystemService(java.lang.String)>(r1);

        return $r6;

     label3:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("System services not available to Activities before onCreate()");

        throw $r3;
    }

    public int getTaskId()
    {
        android.app.Activity r0;
        int i0;
        android.app.IActivityTaskManager $r2;
        android.os.IBinder $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.app.Activity;

     label1:
        $r2 = staticinvoke <android.app.ActivityTaskManager: android.app.IActivityTaskManager getService()>();

        $r3 = r0.<android.app.Activity: android.os.IBinder mToken>;

        i0 = interfaceinvoke $r2.<android.app.IActivityTaskManager: int getTaskForActivity(android.os.IBinder,boolean)>($r3, 0);

     label2:
        return i0;

     label3:
        $r4 := @caughtexception;

        return -1;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public final java.lang.CharSequence getTitle()
    {
        android.app.Activity r0;
        java.lang.CharSequence $r1;

        r0 := @this: android.app.Activity;

        $r1 = r0.<android.app.Activity: java.lang.CharSequence mTitle>;

        return $r1;
    }

    public final int getTitleColor()
    {
        android.app.Activity r0;
        int $i0;

        r0 := @this: android.app.Activity;

        $i0 = r0.<android.app.Activity: int mTitleColor>;

        return $i0;
    }

    public android.app.VoiceInteractor getVoiceInteractor()
    {
        android.app.Activity r0;
        android.app.VoiceInteractor $r1;

        r0 := @this: android.app.Activity;

        $r1 = r0.<android.app.Activity: android.app.VoiceInteractor mVoiceInteractor>;

        return $r1;
    }

    public final int getVolumeControlStream()
    {
        android.app.Activity r0;
        android.view.Window $r1;
        int $i0;

        r0 := @this: android.app.Activity;

        $r1 = virtualinvoke r0.<android.app.Activity: android.view.Window getWindow()>();

        $i0 = virtualinvoke $r1.<android.view.Window: int getVolumeControlStream()>();

        return $i0;
    }

    public android.view.Window getWindow()
    {
        android.app.Activity r0;
        android.view.Window $r1;

        r0 := @this: android.app.Activity;

        $r1 = r0.<android.app.Activity: android.view.Window mWindow>;

        return $r1;
    }

    public android.view.WindowManager getWindowManager()
    {
        android.app.Activity r0;
        android.view.WindowManager $r1;

        r0 := @this: android.app.Activity;

        $r1 = r0.<android.app.Activity: android.view.WindowManager mWindowManager>;

        return $r1;
    }

    public boolean hasWindowFocus()
    {
        android.app.Activity r0;
        boolean $z0;
        android.view.Window r1;
        android.view.View r2;

        r0 := @this: android.app.Activity;

        r1 = virtualinvoke r0.<android.app.Activity: android.view.Window getWindow()>();

        if r1 == null goto label1;

        r2 = virtualinvoke r1.<android.view.Window: android.view.View getDecorView()>();

        if r2 == null goto label1;

        $z0 = virtualinvoke r2.<android.view.View: boolean hasWindowFocus()>();

        return $z0;

     label1:
        return 0;
    }

    public void invalidateOptionsMenu()
    {
        android.app.Activity r0;
        android.app.ActionBar r1;
        android.view.Window $r2, $r3;
        boolean $z0, $z1;

        r0 := @this: android.app.Activity;

        $r2 = r0.<android.app.Activity: android.view.Window mWindow>;

        $z0 = virtualinvoke $r2.<android.view.Window: boolean hasFeature(int)>(0);

        if $z0 == 0 goto label2;

        r1 = r0.<android.app.Activity: android.app.ActionBar mActionBar>;

        if r1 == null goto label1;

        $z1 = virtualinvoke r1.<android.app.ActionBar: boolean invalidateOptionsMenu()>();

        if $z1 != 0 goto label2;

     label1:
        $r3 = r0.<android.app.Activity: android.view.Window mWindow>;

        virtualinvoke $r3.<android.view.Window: void invalidatePanelMenu(int)>(0);

     label2:
        return;
    }

    public boolean isActivityTransitionRunning()
    {
        android.app.Activity r0;
        android.app.ActivityTransitionState $r1;
        boolean $z0;

        r0 := @this: android.app.Activity;

        $r1 = r0.<android.app.Activity: android.app.ActivityTransitionState mActivityTransitionState>;

        $z0 = virtualinvoke $r1.<android.app.ActivityTransitionState: boolean isTransitionRunning()>();

        return $z0;
    }

    public boolean isBackgroundVisibleBehind()
    {
        android.app.Activity r0;

        r0 := @this: android.app.Activity;

        return 0;
    }

    public boolean isChangingConfigurations()
    {
        android.app.Activity r0;
        boolean $z0;

        r0 := @this: android.app.Activity;

        $z0 = r0.<android.app.Activity: boolean mChangingConfigurations>;

        return $z0;
    }

    public final boolean isChild()
    {
        android.app.Activity r0, $r1;
        boolean z0;

        r0 := @this: android.app.Activity;

        $r1 = r0.<android.app.Activity: android.app.Activity mParent>;

        if $r1 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isDestroyed()
    {
        android.app.Activity r0;
        boolean $z0;

        r0 := @this: android.app.Activity;

        $z0 = r0.<android.app.Activity: boolean mDestroyed>;

        return $z0;
    }

    public final boolean isDisablingEnterExitEventForAutofill()
    {
        android.app.Activity r0;
        boolean $z0, $z1, z2;

        r0 := @this: android.app.Activity;

        $z0 = r0.<android.app.Activity: boolean mAutoFillIgnoreFirstResumePause>;

        if $z0 != 0 goto label2;

        $z1 = r0.<android.app.Activity: boolean mResumed>;

        if $z1 != 0 goto label1;

        goto label2;

     label1:
        z2 = 0;

        goto label3;

     label2:
        z2 = 1;

     label3:
        return z2;
    }

    public boolean isFinishing()
    {
        android.app.Activity r0;
        boolean $z0;

        r0 := @this: android.app.Activity;

        $z0 = r0.<android.app.Activity: boolean mFinished>;

        return $z0;
    }

    public boolean isImmersive()
    {
        android.app.Activity r0;
        boolean z0;
        android.app.IActivityTaskManager $r2;
        android.os.IBinder $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.app.Activity;

     label1:
        $r2 = staticinvoke <android.app.ActivityTaskManager: android.app.IActivityTaskManager getService()>();

        $r3 = r0.<android.app.Activity: android.os.IBinder mToken>;

        z0 = interfaceinvoke $r2.<android.app.IActivityTaskManager: boolean isImmersive(android.os.IBinder)>($r3);

     label2:
        return z0;

     label3:
        $r4 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isInMultiWindowMode()
    {
        android.app.Activity r0;
        boolean $z0;

        r0 := @this: android.app.Activity;

        $z0 = r0.<android.app.Activity: boolean mIsInMultiWindowMode>;

        return $z0;
    }

    public boolean isInPictureInPictureMode()
    {
        android.app.Activity r0;
        boolean $z0;

        r0 := @this: android.app.Activity;

        $z0 = r0.<android.app.Activity: boolean mIsInPictureInPictureMode>;

        return $z0;
    }

    public boolean isLocalVoiceInteractionSupported()
    {
        android.app.Activity r0;
        boolean z0;
        android.app.IActivityTaskManager $r2;
        android.os.RemoteException $r3;

        r0 := @this: android.app.Activity;

     label1:
        $r2 = staticinvoke <android.app.ActivityTaskManager: android.app.IActivityTaskManager getService()>();

        z0 = interfaceinvoke $r2.<android.app.IActivityTaskManager: boolean supportsLocalVoiceInteraction()>();

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isOverlayWithDecorCaptionEnabled()
    {
        android.app.Activity r0;
        android.view.Window $r1;
        boolean $z0;

        r0 := @this: android.app.Activity;

        $r1 = r0.<android.app.Activity: android.view.Window mWindow>;

        $z0 = virtualinvoke $r1.<android.view.Window: boolean isOverlayWithDecorCaptionEnabled()>();

        return $z0;
    }

    public final boolean isResumed()
    {
        android.app.Activity r0;
        boolean $z0;

        r0 := @this: android.app.Activity;

        $z0 = r0.<android.app.Activity: boolean mResumed>;

        return $z0;
    }

    public boolean isTaskRoot()
    {
        android.app.Activity r0;
        android.view.Window$WindowControllerCallback $r1;
        boolean $z0;

        r0 := @this: android.app.Activity;

        $r1 = r0.<android.app.Activity: android.view.Window$WindowControllerCallback mWindowControllerCallback>;

        $z0 = interfaceinvoke $r1.<android.view.Window$WindowControllerCallback: boolean isTaskRoot()>();

        return $z0;
    }

    final boolean isTopOfTask()
    {
        android.app.Activity r0;
        boolean z0;
        android.os.IBinder $r2, $r5;
        android.view.Window $r3;
        android.app.IActivityTaskManager $r4;
        android.os.RemoteException $r6;

        r0 := @this: android.app.Activity;

        $r2 = r0.<android.app.Activity: android.os.IBinder mToken>;

        if $r2 == null goto label4;

        $r3 = r0.<android.app.Activity: android.view.Window mWindow>;

        if $r3 != null goto label1;

        goto label4;

     label1:
        $r4 = staticinvoke <android.app.ActivityTaskManager: android.app.IActivityTaskManager getService()>();

        $r5 = virtualinvoke r0.<android.app.Activity: android.os.IBinder getActivityToken()>();

        z0 = interfaceinvoke $r4.<android.app.IActivityTaskManager: boolean isTopOfTask(android.os.IBinder)>($r5);

     label2:
        return z0;

     label3:
        $r6 := @caughtexception;

        return 0;

     label4:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isVoiceInteraction()
    {
        android.app.Activity r0;
        android.app.VoiceInteractor $r1;
        boolean z0;

        r0 := @this: android.app.Activity;

        $r1 = r0.<android.app.Activity: android.app.VoiceInteractor mVoiceInteractor>;

        if $r1 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isVoiceInteractionRoot()
    {
        android.app.Activity r0;
        boolean z0, z1;
        android.app.VoiceInteractor $r2;
        android.app.IActivityTaskManager $r3;
        android.os.IBinder $r4;
        android.os.RemoteException $r5;

        r0 := @this: android.app.Activity;

        z1 = 0;

     label1:
        $r2 = r0.<android.app.Activity: android.app.VoiceInteractor mVoiceInteractor>;

        if $r2 == null goto label3;

        $r3 = staticinvoke <android.app.ActivityTaskManager: android.app.IActivityTaskManager getService()>();

        $r4 = r0.<android.app.Activity: android.os.IBinder mToken>;

        z0 = interfaceinvoke $r3.<android.app.IActivityTaskManager: boolean isRootVoiceInteraction(android.os.IBinder)>($r4);

     label2:
        if z0 == 0 goto label3;

        z1 = 1;

        goto label3;

     label3:
        return z1;

     label4:
        $r5 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    void makeVisible()
    {
        android.app.Activity r0;
        boolean $z0;
        android.view.View $r1, $r3;
        android.view.WindowManager $r2;
        android.view.Window $r4;
        android.view.WindowManager$LayoutParams $r5;

        r0 := @this: android.app.Activity;

        $z0 = r0.<android.app.Activity: boolean mWindowAdded>;

        if $z0 != 0 goto label1;

        $r2 = virtualinvoke r0.<android.app.Activity: android.view.WindowManager getWindowManager()>();

        $r3 = r0.<android.app.Activity: android.view.View mDecor>;

        $r4 = virtualinvoke r0.<android.app.Activity: android.view.Window getWindow()>();

        $r5 = virtualinvoke $r4.<android.view.Window: android.view.WindowManager$LayoutParams getAttributes()>();

        interfaceinvoke $r2.<android.view.ViewManager: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>($r3, $r5);

        r0.<android.app.Activity: boolean mWindowAdded> = 1;

     label1:
        $r1 = r0.<android.app.Activity: android.view.View mDecor>;

        virtualinvoke $r1.<android.view.View: void setVisibility(int)>(0);

        return;
    }

    public final android.database.Cursor managedQuery(android.net.Uri, java.lang.String[], java.lang.String, java.lang.String)
    {
        android.app.Activity r0;
        java.lang.String[] r1;
        java.lang.String r2, r3;
        android.content.ContentResolver $r4;
        android.net.Uri r5;
        android.database.Cursor r6;

        r0 := @this: android.app.Activity;

        r5 := @parameter0: android.net.Uri;

        r1 := @parameter1: java.lang.String[];

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        $r4 = virtualinvoke r0.<android.app.Activity: android.content.ContentResolver getContentResolver()>();

        r6 = virtualinvoke $r4.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r5, r1, r2, null, r3);

        if r6 == null goto label1;

        virtualinvoke r0.<android.app.Activity: void startManagingCursor(android.database.Cursor)>(r6);

     label1:
        return r6;
    }

    public final android.database.Cursor managedQuery(android.net.Uri, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String)
    {
        android.app.Activity r0;
        java.lang.String[] r1, r3;
        java.lang.String r2, r4;
        android.content.ContentResolver $r5;
        android.net.Uri r6;
        android.database.Cursor r7;

        r0 := @this: android.app.Activity;

        r6 := @parameter0: android.net.Uri;

        r1 := @parameter1: java.lang.String[];

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String[];

        r4 := @parameter4: java.lang.String;

        $r5 = virtualinvoke r0.<android.app.Activity: android.content.ContentResolver getContentResolver()>();

        r7 = virtualinvoke $r5.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r6, r1, r2, r3, r4);

        if r7 == null goto label1;

        virtualinvoke r0.<android.app.Activity: void startManagingCursor(android.database.Cursor)>(r7);

     label1:
        return r7;
    }

    public boolean moveTaskToBack(boolean)
    {
        android.app.Activity r0;
        android.app.IActivityTaskManager $r2;
        android.os.IBinder $r3;
        android.os.RemoteException $r4;
        boolean z0, z1;

        r0 := @this: android.app.Activity;

        z0 := @parameter0: boolean;

     label1:
        $r2 = staticinvoke <android.app.ActivityTaskManager: android.app.IActivityTaskManager getService()>();

        $r3 = r0.<android.app.Activity: android.os.IBinder mToken>;

        z1 = interfaceinvoke $r2.<android.app.IActivityTaskManager: boolean moveActivityTaskToBack(android.os.IBinder,boolean)>($r3, z0);

     label2:
        return z1;

     label3:
        $r4 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean navigateUpTo(android.content.Intent)
    {
        android.app.Activity r0, r10;
        int i0;
        boolean z0, $z1;
        android.content.ComponentName $r1, r11;
        android.app.IActivityTaskManager $r2;
        android.os.IBinder $r3;
        android.content.pm.PackageManager $r4;
        android.content.Intent $r5, r9, r12;
        java.lang.Throwable $r7;
        android.os.RemoteException $r8;

        r0 := @this: android.app.Activity;

        r9 := @parameter0: android.content.Intent;

        r10 = r0.<android.app.Activity: android.app.Activity mParent>;

        if r10 != null goto label11;

        $r1 = virtualinvoke r9.<android.content.Intent: android.content.ComponentName getComponent()>();

        if $r1 != null goto label02;

        $r4 = virtualinvoke r0.<android.app.Activity: android.content.pm.PackageManager getPackageManager()>();

        r11 = virtualinvoke r9.<android.content.Intent: android.content.ComponentName resolveActivity(android.content.pm.PackageManager)>($r4);

        if r11 != null goto label01;

        return 0;

     label01:
        $r5 = new android.content.Intent;

        specialinvoke $r5.<android.content.Intent: void <init>(android.content.Intent)>(r9);

        r9 = $r5;

        virtualinvoke $r5.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>(r11);

        goto label02;

     label02:
        entermonitor r0;

     label03:
        i0 = r0.<android.app.Activity: int mResultCode>;

        r12 = r0.<android.app.Activity: android.content.Intent mResultData>;

        exitmonitor r0;

     label04:
        if r12 == null goto label05;

        virtualinvoke r12.<android.content.Intent: void prepareToLeaveProcess(android.content.Context)>(r0);

     label05:
        virtualinvoke r9.<android.content.Intent: void prepareToLeaveProcess(android.content.Context)>(r0);

        $r2 = staticinvoke <android.app.ActivityTaskManager: android.app.IActivityTaskManager getService()>();

        $r3 = r0.<android.app.Activity: android.os.IBinder mToken>;

        z0 = interfaceinvoke $r2.<android.app.IActivityTaskManager: boolean navigateUpTo(android.os.IBinder,android.content.Intent,int,android.content.Intent)>($r3, r9, i0, r12);

     label06:
        return z0;

     label07:
        $r8 := @caughtexception;

        return 0;

     label08:
        $r7 := @caughtexception;

     label09:
        exitmonitor r0;

     label10:
        throw $r7;

     label11:
        $z1 = virtualinvoke r10.<android.app.Activity: boolean navigateUpToFromChild(android.app.Activity,android.content.Intent)>(r0, r9);

        return $z1;

        catch java.lang.Throwable from label03 to label04 with label08;
        catch android.os.RemoteException from label05 to label06 with label07;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public boolean navigateUpToFromChild(android.app.Activity, android.content.Intent)
    {
        android.app.Activity r0, r1;
        android.content.Intent r2;
        boolean $z0;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.app.Activity;

        r2 := @parameter1: android.content.Intent;

        $z0 = virtualinvoke r0.<android.app.Activity: boolean navigateUpTo(android.content.Intent)>(r2);

        return $z0;
    }

    public void onActionModeFinished(android.view.ActionMode)
    {
        android.app.Activity r0;
        android.view.ActionMode r1;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.view.ActionMode;

        return;
    }

    public void onActionModeStarted(android.view.ActionMode)
    {
        android.app.Activity r0;
        android.view.ActionMode r1;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.view.ActionMode;

        return;
    }

    public void onActivityReenter(int, android.content.Intent)
    {
        android.app.Activity r0;
        int i0;
        android.content.Intent r1;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.Intent;

        return;
    }

    protected void onActivityResult(int, int, android.content.Intent)
    {
        android.app.Activity r0;
        int i0, i1;
        android.content.Intent r1;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.content.Intent;

        return;
    }

    protected void onApplyThemeResource(android.content.res.Resources$Theme, int, boolean)
    {
        android.app.Activity r0, r12;
        boolean z0, $z1, $z2, z3;
        android.content.res.Resources$Theme $r1, r11;
        android.content.pm.ApplicationInfo $r2;
        int $i0, $i1, $i2, i3, $i4, i5, i6, i7, i8;
        android.app.ActivityManager$TaskDescription $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r16;
        java.lang.Exception $r10;
        int[] $r14;
        android.content.res.TypedArray r15;

        r0 := @this: android.app.Activity;

        r11 := @parameter0: android.content.res.Resources$Theme;

        i3 := @parameter1: int;

        z0 := @parameter2: boolean;

        r12 = r0.<android.app.Activity: android.app.Activity mParent>;

        if r12 != null goto label01;

        specialinvoke r0.<android.view.ContextThemeWrapper: void onApplyThemeResource(android.content.res.Resources$Theme,int,boolean)>(r11, i3, z0);

        goto label05;

     label01:
        $r1 = virtualinvoke r12.<android.app.Activity: android.content.res.Resources$Theme getTheme()>();

        virtualinvoke r11.<android.content.res.Resources$Theme: void setTo(android.content.res.Resources$Theme)>($r1);

     label02:
        goto label04;

     label03:
        $r10 := @caughtexception;

     label04:
        virtualinvoke r11.<android.content.res.Resources$Theme: void applyStyle(int,boolean)>(i3, 0);

     label05:
        $r14 = <com.android.internal.R$styleable: int[] ActivityTaskDescription>;

        r15 = virtualinvoke r11.<android.content.res.Resources$Theme: android.content.res.TypedArray obtainStyledAttributes(int[])>($r14);

        $r16 = r0.<android.app.Activity: android.app.ActivityManager$TaskDescription mTaskDescription>;

        $i4 = virtualinvoke $r16.<android.app.ActivityManager$TaskDescription: int getPrimaryColor()>();

        if $i4 != 0 goto label06;

        i5 = virtualinvoke r15.<android.content.res.TypedArray: int getColor(int,int)>(1, 0);

        if i5 == 0 goto label06;

        $i2 = staticinvoke <android.graphics.Color: int alpha(int)>(i5);

        if $i2 != 255 goto label06;

        $r9 = r0.<android.app.Activity: android.app.ActivityManager$TaskDescription mTaskDescription>;

        virtualinvoke $r9.<android.app.ActivityManager$TaskDescription: void setPrimaryColor(int)>(i5);

     label06:
        i6 = virtualinvoke r15.<android.content.res.TypedArray: int getColor(int,int)>(0, 0);

        if i6 == 0 goto label07;

        $i1 = staticinvoke <android.graphics.Color: int alpha(int)>(i6);

        if $i1 != 255 goto label07;

        $r8 = r0.<android.app.Activity: android.app.ActivityManager$TaskDescription mTaskDescription>;

        virtualinvoke $r8.<android.app.ActivityManager$TaskDescription: void setBackgroundColor(int)>(i6);

     label07:
        i7 = virtualinvoke r15.<android.content.res.TypedArray: int getColor(int,int)>(2, 0);

        if i7 == 0 goto label08;

        $r7 = r0.<android.app.Activity: android.app.ActivityManager$TaskDescription mTaskDescription>;

        virtualinvoke $r7.<android.app.ActivityManager$TaskDescription: void setStatusBarColor(int)>(i7);

     label08:
        i8 = virtualinvoke r15.<android.content.res.TypedArray: int getColor(int,int)>(3, 0);

        if i8 == 0 goto label09;

        $r6 = r0.<android.app.Activity: android.app.ActivityManager$TaskDescription mTaskDescription>;

        virtualinvoke $r6.<android.app.ActivityManager$TaskDescription: void setNavigationBarColor(int)>(i8);

     label09:
        $r2 = virtualinvoke r0.<android.app.Activity: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $i0 = $r2.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i0 >= 29 goto label10;

        z3 = 1;

        goto label11;

     label10:
        z3 = 0;

     label11:
        if z3 != 0 goto label12;

        $r4 = r0.<android.app.Activity: android.app.ActivityManager$TaskDescription mTaskDescription>;

        $z1 = virtualinvoke r15.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(4, 0);

        virtualinvoke $r4.<android.app.ActivityManager$TaskDescription: void setEnsureStatusBarContrastWhenTransparent(boolean)>($z1);

        $r5 = r0.<android.app.Activity: android.app.ActivityManager$TaskDescription mTaskDescription>;

        $z2 = virtualinvoke r15.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(5, 1);

        virtualinvoke $r5.<android.app.ActivityManager$TaskDescription: void setEnsureNavigationBarContrastWhenTransparent(boolean)>($z2);

     label12:
        virtualinvoke r15.<android.content.res.TypedArray: void recycle()>();

        $r3 = r0.<android.app.Activity: android.app.ActivityManager$TaskDescription mTaskDescription>;

        virtualinvoke r0.<android.app.Activity: void setTaskDescription(android.app.ActivityManager$TaskDescription)>($r3);

        return;

        catch java.lang.Exception from label01 to label02 with label03;
    }

    public void onAttachFragment(android.app.Fragment)
    {
        android.app.Activity r0;
        android.app.Fragment r1;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.app.Fragment;

        return;
    }

    public void onAttachedToWindow()
    {
        android.app.Activity r0;

        r0 := @this: android.app.Activity;

        return;
    }

    public void onBackPressed()
    {
        android.app.Activity r0;
        android.app.IActivityTaskManager r1;
        android.app.Activity$RequestFinishCallback r2;
        java.lang.ref.WeakReference r3;
        android.app.FragmentController $r4;
        boolean $z0, $z1, $z2, $z3;
        android.os.RemoteException $r5;
        android.app.ActionBar r6;
        android.app.FragmentManager r7;
        android.os.IBinder r8;

        r0 := @this: android.app.Activity;

        r6 = r0.<android.app.Activity: android.app.ActionBar mActionBar>;

        if r6 == null goto label1;

        $z3 = virtualinvoke r6.<android.app.ActionBar: boolean collapseActionView()>();

        if $z3 == 0 goto label1;

        return;

     label1:
        $r4 = r0.<android.app.Activity: android.app.FragmentController mFragments>;

        r7 = virtualinvoke $r4.<android.app.FragmentController: android.app.FragmentManager getFragmentManager()>();

        $z0 = virtualinvoke r7.<android.app.FragmentManager: boolean isStateSaved()>();

        if $z0 != 0 goto label2;

        $z2 = virtualinvoke r7.<android.app.FragmentManager: boolean popBackStackImmediate()>();

        if $z2 == 0 goto label2;

        return;

     label2:
        $z1 = virtualinvoke r0.<android.app.Activity: boolean isTaskRoot()>();

        if $z1 != 0 goto label3;

        virtualinvoke r0.<android.app.Activity: void finishAfterTransition()>();

        return;

     label3:
        r1 = staticinvoke <android.app.ActivityTaskManager: android.app.IActivityTaskManager getService()>();

        r8 = r0.<android.app.Activity: android.os.IBinder mToken>;

        r2 = new android.app.Activity$RequestFinishCallback;

        r3 = new java.lang.ref.WeakReference;

        specialinvoke r3.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r0);

        specialinvoke r2.<android.app.Activity$RequestFinishCallback: void <init>(java.lang.ref.WeakReference)>(r3);

        interfaceinvoke r1.<android.app.IActivityTaskManager: void onBackPressedOnTaskRoot(android.os.IBinder,android.app.IRequestFinishCallback)>(r8, r2);

     label4:
        goto label6;

     label5:
        $r5 := @caughtexception;

        virtualinvoke r0.<android.app.Activity: void finishAfterTransition()>();

     label6:
        return;

        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public void onBackgroundVisibleBehindChanged(boolean)
    {
        android.app.Activity r0;
        boolean z0;

        r0 := @this: android.app.Activity;

        z0 := @parameter0: boolean;

        return;
    }

    protected void onChildTitleChanged(android.app.Activity, java.lang.CharSequence)
    {
        android.app.Activity r0, r1;
        java.lang.CharSequence r2;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.app.Activity;

        r2 := @parameter1: java.lang.CharSequence;

        return;
    }

    public void onConfigurationChanged(android.content.res.Configuration)
    {
        android.app.Activity r0;
        android.content.res.Configuration r1;
        android.app.FragmentController $r2;
        android.view.Window r3;
        android.app.ActionBar r4;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.content.res.Configuration;

        r0.<android.app.Activity: boolean mCalled> = 1;

        $r2 = r0.<android.app.Activity: android.app.FragmentController mFragments>;

        virtualinvoke $r2.<android.app.FragmentController: void dispatchConfigurationChanged(android.content.res.Configuration)>(r1);

        r3 = r0.<android.app.Activity: android.view.Window mWindow>;

        if r3 == null goto label1;

        virtualinvoke r3.<android.view.Window: void onConfigurationChanged(android.content.res.Configuration)>(r1);

     label1:
        r4 = r0.<android.app.Activity: android.app.ActionBar mActionBar>;

        if r4 == null goto label2;

        virtualinvoke r4.<android.app.ActionBar: void onConfigurationChanged(android.content.res.Configuration)>(r1);

     label2:
        return;
    }

    public void onContentChanged()
    {
        android.app.Activity r0;

        r0 := @this: android.app.Activity;

        return;
    }

    public boolean onContextItemSelected(android.view.MenuItem)
    {
        android.app.Activity r0, r2;
        android.view.MenuItem r1;
        boolean $z0;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.view.MenuItem;

        r2 = r0.<android.app.Activity: android.app.Activity mParent>;

        if r2 == null goto label1;

        $z0 = virtualinvoke r2.<android.app.Activity: boolean onContextItemSelected(android.view.MenuItem)>(r1);

        return $z0;

     label1:
        return 0;
    }

    public void onContextMenuClosed(android.view.Menu)
    {
        android.app.Activity r0, r2;
        android.view.Menu r1;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.view.Menu;

        r2 = r0.<android.app.Activity: android.app.Activity mParent>;

        if r2 == null goto label1;

        virtualinvoke r2.<android.app.Activity: void onContextMenuClosed(android.view.Menu)>(r1);

     label1:
        return;
    }

    protected void onCreate(android.os.Bundle)
    {
        android.app.Activity r0;
        android.os.Bundle r1;
        android.os.Parcelable r2;
        android.app.FragmentController r3, $r8, $r13;
        android.content.pm.ActivityInfo $r4;
        java.lang.String $r5;
        boolean $z0, $z1, z2;
        int $i0;
        android.view.autofill.AutofillManager $r6;
        android.util.ArrayMap $r7;
        android.app.Activity$NonConfigurationInstances r9, r11;
        android.app.ActionBar r10;
        android.app.FragmentManagerNonConfig r12;
        android.app.VoiceInteractor r14;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.os.Bundle;

        r9 = r0.<android.app.Activity: android.app.Activity$NonConfigurationInstances mLastNonConfigurationInstances>;

        if r9 == null goto label1;

        $r8 = r0.<android.app.Activity: android.app.FragmentController mFragments>;

        $r7 = r9.<android.app.Activity$NonConfigurationInstances: android.util.ArrayMap loaders>;

        virtualinvoke $r8.<android.app.FragmentController: void restoreLoaderNonConfig(android.util.ArrayMap)>($r7);

     label1:
        $r4 = r0.<android.app.Activity: android.content.pm.ActivityInfo mActivityInfo>;

        $r5 = $r4.<android.content.pm.ActivityInfo: java.lang.String parentActivityName>;

        if $r5 == null goto label3;

        r10 = r0.<android.app.Activity: android.app.ActionBar mActionBar>;

        if r10 != null goto label2;

        r0.<android.app.Activity: boolean mEnableDefaultActionBarUp> = 1;

        goto label3;

     label2:
        virtualinvoke r10.<android.app.ActionBar: void setDefaultDisplayHomeAsUpEnabled(boolean)>(1);

     label3:
        z2 = 0;

        if r1 == null goto label7;

        $z0 = virtualinvoke r1.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>("@android:autofillResetNeeded", 0);

        r0.<android.app.Activity: boolean mAutoFillResetNeeded> = $z0;

        $i0 = virtualinvoke r1.<android.os.Bundle: int getInt(java.lang.String,int)>("android:lastAutofillId", 1073741823);

        r0.<android.app.Activity: int mLastAutofillId> = $i0;

        $z1 = r0.<android.app.Activity: boolean mAutoFillResetNeeded>;

        if $z1 == 0 goto label4;

        $r6 = specialinvoke r0.<android.app.Activity: android.view.autofill.AutofillManager getAutofillManager()>();

        virtualinvoke $r6.<android.view.autofill.AutofillManager: void onCreate(android.os.Bundle)>(r1);

     label4:
        r2 = virtualinvoke r1.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>("android:fragments");

        r3 = r0.<android.app.Activity: android.app.FragmentController mFragments>;

        r11 = r0.<android.app.Activity: android.app.Activity$NonConfigurationInstances mLastNonConfigurationInstances>;

        if r11 == null goto label5;

        r12 = r11.<android.app.Activity$NonConfigurationInstances: android.app.FragmentManagerNonConfig fragments>;

        goto label6;

     label5:
        r12 = null;

     label6:
        virtualinvoke r3.<android.app.FragmentController: void restoreAllState(android.os.Parcelable,android.app.FragmentManagerNonConfig)>(r2, r12);

     label7:
        $r13 = r0.<android.app.Activity: android.app.FragmentController mFragments>;

        virtualinvoke $r13.<android.app.FragmentController: void dispatchCreate()>();

        specialinvoke r0.<android.app.Activity: void dispatchActivityCreated(android.os.Bundle)>(r1);

        r14 = r0.<android.app.Activity: android.app.VoiceInteractor mVoiceInteractor>;

        if r14 == null goto label8;

        virtualinvoke r14.<android.app.VoiceInteractor: void attachActivity(android.app.Activity)>(r0);

     label8:
        if r1 == null goto label9;

        z2 = 1;

     label9:
        r0.<android.app.Activity: boolean mRestoredFromBundle> = z2;

        r0.<android.app.Activity: boolean mCalled> = 1;

        return;
    }

    public void onCreate(android.os.Bundle, android.os.PersistableBundle)
    {
        android.app.Activity r0;
        android.os.Bundle r1;
        android.os.PersistableBundle r2;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.os.Bundle;

        r2 := @parameter1: android.os.PersistableBundle;

        virtualinvoke r0.<android.app.Activity: void onCreate(android.os.Bundle)>(r1);

        return;
    }

    public void onCreateContextMenu(android.view.ContextMenu, android.view.View, android.view.ContextMenu$ContextMenuInfo)
    {
        android.app.Activity r0;
        android.view.ContextMenu r1;
        android.view.View r2;
        android.view.ContextMenu$ContextMenuInfo r3;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.view.ContextMenu;

        r2 := @parameter1: android.view.View;

        r3 := @parameter2: android.view.ContextMenu$ContextMenuInfo;

        return;
    }

    public java.lang.CharSequence onCreateDescription()
    {
        android.app.Activity r0;

        r0 := @this: android.app.Activity;

        return null;
    }

    protected android.app.Dialog onCreateDialog(int)
    {
        android.app.Activity r0;
        int i0;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        return null;
    }

    protected android.app.Dialog onCreateDialog(int, android.os.Bundle)
    {
        android.app.Activity r0;
        int i0;
        android.os.Bundle r1;
        android.app.Dialog $r2;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Bundle;

        $r2 = virtualinvoke r0.<android.app.Activity: android.app.Dialog onCreateDialog(int)>(i0);

        return $r2;
    }

    public void onCreateNavigateUpTaskStack(android.app.TaskStackBuilder)
    {
        android.app.Activity r0;
        android.app.TaskStackBuilder r1;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.app.TaskStackBuilder;

        virtualinvoke r1.<android.app.TaskStackBuilder: android.app.TaskStackBuilder addParentStack(android.app.Activity)>(r0);

        return;
    }

    public boolean onCreateOptionsMenu(android.view.Menu)
    {
        android.app.Activity r0, r2;
        android.view.Menu r1;
        boolean $z0;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.view.Menu;

        r2 = r0.<android.app.Activity: android.app.Activity mParent>;

        if r2 == null goto label1;

        $z0 = virtualinvoke r2.<android.app.Activity: boolean onCreateOptionsMenu(android.view.Menu)>(r1);

        return $z0;

     label1:
        return 1;
    }

    public boolean onCreatePanelMenu(int, android.view.Menu)
    {
        android.app.Activity r0;
        int i0;
        android.view.Menu r1;
        boolean $z0, $z1, $z2;
        android.app.FragmentController $r2;
        android.view.MenuInflater $r3;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.Menu;

        if i0 != 0 goto label1;

        $z0 = virtualinvoke r0.<android.app.Activity: boolean onCreateOptionsMenu(android.view.Menu)>(r1);

        $r2 = r0.<android.app.Activity: android.app.FragmentController mFragments>;

        $r3 = virtualinvoke r0.<android.app.Activity: android.view.MenuInflater getMenuInflater()>();

        $z1 = virtualinvoke $r2.<android.app.FragmentController: boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>(r1, $r3);

        $z2 = $z0 | $z1;

        return $z2;

     label1:
        return 0;
    }

    public android.view.View onCreatePanelView(int)
    {
        android.app.Activity r0;
        int i0;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        return null;
    }

    public boolean onCreateThumbnail(android.graphics.Bitmap, android.graphics.Canvas)
    {
        android.app.Activity r0;
        android.graphics.Bitmap r1;
        android.graphics.Canvas r2;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.graphics.Bitmap;

        r2 := @parameter1: android.graphics.Canvas;

        return 0;
    }

    public android.view.View onCreateView(android.view.View, java.lang.String, android.content.Context, android.util.AttributeSet)
    {
        android.app.Activity r0;
        android.view.View r1, $r7, $r8;
        java.lang.String r2, $r5;
        android.content.Context r3;
        android.util.AttributeSet r4;
        boolean $z0;
        android.app.FragmentController $r6;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.content.Context;

        r4 := @parameter3: android.util.AttributeSet;

        $r5 = "fragment";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z0 != 0 goto label1;

        $r8 = virtualinvoke r0.<android.app.Activity: android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)>(r2, r3, r4);

        return $r8;

     label1:
        $r6 = r0.<android.app.Activity: android.app.FragmentController mFragments>;

        $r7 = virtualinvoke $r6.<android.app.FragmentController: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)>(r1, r2, r3, r4);

        return $r7;
    }

    public android.view.View onCreateView(java.lang.String, android.content.Context, android.util.AttributeSet)
    {
        android.app.Activity r0;
        java.lang.String r1;
        android.content.Context r2;
        android.util.AttributeSet r3;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.content.Context;

        r3 := @parameter2: android.util.AttributeSet;

        return null;
    }

    protected void onDestroy()
    {
        android.app.Activity r0;
        boolean $z0, $z1, $z2;
        java.util.ArrayList $r1, $r2, $r3, r14;
        java.lang.Object $r4, $r7;
        android.database.Cursor $r5;
        android.util.SparseArray $r6, r12;
        android.app.Dialog $r8, $r9;
        android.view.autofill.AutofillManager $r10;
        java.lang.Throwable $r11;
        int i0, i1, i2, i3;
        android.app.Activity$ManagedDialog r13;
        android.app.Activity$ManagedCursor r15;
        android.app.SearchManager r16;
        android.app.ActionBar r17;

        r0 := @this: android.app.Activity;

        r0.<android.app.Activity: boolean mCalled> = 1;

        $z0 = virtualinvoke r0.<android.app.Activity: boolean isFinishing()>();

        if $z0 == 0 goto label01;

        $z2 = r0.<android.app.Activity: boolean mAutoFillResetNeeded>;

        if $z2 == 0 goto label01;

        $r10 = specialinvoke r0.<android.app.Activity: android.view.autofill.AutofillManager getAutofillManager()>();

        virtualinvoke $r10.<android.view.autofill.AutofillManager: void onActivityFinishing()>();

     label01:
        r12 = r0.<android.app.Activity: android.util.SparseArray mManagedDialogs>;

        if r12 == null goto label05;

        i0 = virtualinvoke r12.<android.util.SparseArray: int size()>();

        i1 = 0;

     label02:
        if i1 >= i0 goto label04;

        $r6 = r0.<android.app.Activity: android.util.SparseArray mManagedDialogs>;

        $r7 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        r13 = (android.app.Activity$ManagedDialog) $r7;

        $r8 = r13.<android.app.Activity$ManagedDialog: android.app.Dialog mDialog>;

        $z1 = virtualinvoke $r8.<android.app.Dialog: boolean isShowing()>();

        if $z1 == 0 goto label03;

        $r9 = r13.<android.app.Activity$ManagedDialog: android.app.Dialog mDialog>;

        virtualinvoke $r9.<android.app.Dialog: void dismiss()>();

     label03:
        i1 = i1 + 1;

        goto label02;

     label04:
        r0.<android.app.Activity: android.util.SparseArray mManagedDialogs> = null;

     label05:
        r14 = r0.<android.app.Activity: java.util.ArrayList mManagedCursors>;

        entermonitor r14;

     label06:
        $r1 = r0.<android.app.Activity: java.util.ArrayList mManagedCursors>;

        i2 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

     label07:
        i3 = 0;

     label08:
        if i3 >= i2 goto label13;

     label09:
        $r3 = r0.<android.app.Activity: java.util.ArrayList mManagedCursors>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r15 = (android.app.Activity$ManagedCursor) $r4;

     label10:
        if r15 == null goto label12;

     label11:
        $r5 = staticinvoke <android.app.Activity$ManagedCursor: android.database.Cursor access$300(android.app.Activity$ManagedCursor)>(r15);

        interfaceinvoke $r5.<android.database.Cursor: void close()>();

     label12:
        i3 = i3 + 1;

        goto label08;

     label13:
        $r2 = r0.<android.app.Activity: java.util.ArrayList mManagedCursors>;

        virtualinvoke $r2.<java.util.ArrayList: void clear()>();

        exitmonitor r14;

     label14:
        r16 = r0.<android.app.Activity: android.app.SearchManager mSearchManager>;

        if r16 == null goto label15;

        virtualinvoke r16.<android.app.SearchManager: void stopSearch()>();

     label15:
        r17 = r0.<android.app.Activity: android.app.ActionBar mActionBar>;

        if r17 == null goto label16;

        virtualinvoke r17.<android.app.ActionBar: void onDestroy()>();

     label16:
        specialinvoke r0.<android.app.Activity: void dispatchActivityDestroyed()>();

        specialinvoke r0.<android.app.Activity: void notifyContentCaptureManagerIfNeeded(int)>(4);

        return;

     label17:
        $r11 := @caughtexception;

     label18:
        exitmonitor r14;

     label19:
        throw $r11;

        catch java.lang.Throwable from label06 to label07 with label17;
        catch java.lang.Throwable from label09 to label10 with label17;
        catch java.lang.Throwable from label11 to label12 with label17;
        catch java.lang.Throwable from label13 to label14 with label17;
        catch java.lang.Throwable from label18 to label19 with label17;
    }

    public void onDetachedFromWindow()
    {
        android.app.Activity r0;

        r0 := @this: android.app.Activity;

        return;
    }

    public void onEnterAnimationComplete()
    {
        android.app.Activity r0;

        r0 := @this: android.app.Activity;

        return;
    }

    public boolean onGenericMotionEvent(android.view.MotionEvent)
    {
        android.app.Activity r0;
        android.view.MotionEvent r1;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.view.MotionEvent;

        return 0;
    }

    public void onGetDirectActions(android.os.CancellationSignal, java.util.function.Consumer)
    {
        android.app.Activity r0;
        android.os.CancellationSignal r1;
        java.util.function.Consumer r2;
        java.util.List $r3;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.os.CancellationSignal;

        r2 := @parameter1: java.util.function.Consumer;

        $r3 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        interfaceinvoke r2.<java.util.function.Consumer: void accept(java.lang.Object)>($r3);

        return;
    }

    public boolean onKeyDown(int, android.view.KeyEvent)
    {
        android.app.Activity r0;
        boolean z0, $z1, $z2, $z3, z5, z6;
        int $i0, $i1, $i2, i3, i4, i5;
        android.text.SpannableStringBuilder $r1, $r2, $r3, $r5, $r6, $r7;
        android.text.method.TextKeyListener $r4;
        java.lang.StringBuilder $r8;
        android.content.Intent $r11;
        java.lang.String $r12, r18;
        android.net.Uri $r13;
        android.content.pm.ApplicationInfo $r15;
        android.view.KeyEvent r16;
        android.view.Window r17;

        r0 := @this: android.app.Activity;

        i3 := @parameter0: int;

        r16 := @parameter1: android.view.KeyEvent;

        if i3 != 4 goto label03;

        $r15 = virtualinvoke r0.<android.app.Activity: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $i2 = $r15.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i2 < 5 goto label01;

        virtualinvoke r16.<android.view.KeyEvent: void startTracking()>();

        goto label02;

     label01:
        virtualinvoke r0.<android.app.Activity: void onBackPressed()>();

     label02:
        return 1;

     label03:
        i4 = r0.<android.app.Activity: int mDefaultKeyMode>;

        if i4 != 0 goto label04;

        return 0;

     label04:
        if i4 != 2 goto label06;

        r17 = virtualinvoke r0.<android.app.Activity: android.view.Window getWindow()>();

        $z2 = virtualinvoke r17.<android.view.Window: boolean hasFeature(int)>(0);

        if $z2 == 0 goto label05;

        $z3 = virtualinvoke r17.<android.view.Window: boolean performPanelShortcut(int,int,android.view.KeyEvent,int)>(0, i3, r16, 2);

        if $z3 == 0 goto label05;

        return 1;

     label05:
        return 0;

     label06:
        if i3 != 61 goto label07;

        return 0;

     label07:
        $i0 = virtualinvoke r16.<android.view.KeyEvent: int getRepeatCount()>();

        if $i0 != 0 goto label12;

        $z1 = virtualinvoke r16.<android.view.KeyEvent: boolean isSystem()>();

        if $z1 == 0 goto label08;

        goto label12;

     label08:
        $r4 = staticinvoke <android.text.method.TextKeyListener: android.text.method.TextKeyListener getInstance()>();

        $r5 = r0.<android.app.Activity: android.text.SpannableStringBuilder mDefaultKeySsb>;

        z0 = virtualinvoke $r4.<android.text.method.TextKeyListener: boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent)>(null, $r5, i3, r16);

        z5 = 0;

        z6 = z0;

        if z0 == 0 goto label13;

        z5 = 0;

        z6 = z0;

        $r6 = r0.<android.app.Activity: android.text.SpannableStringBuilder mDefaultKeySsb>;

        $i1 = virtualinvoke $r6.<android.text.SpannableStringBuilder: int length()>();

        if $i1 <= 0 goto label13;

        $r7 = r0.<android.app.Activity: android.text.SpannableStringBuilder mDefaultKeySsb>;

        r18 = virtualinvoke $r7.<android.text.SpannableStringBuilder: java.lang.String toString()>();

        z5 = 1;

        i5 = r0.<android.app.Activity: int mDefaultKeyMode>;

        if i5 == 1 goto label11;

        if i5 == 3 goto label10;

        if i5 == 4 goto label09;

        z6 = z0;

        goto label13;

     label09:
        virtualinvoke r0.<android.app.Activity: void startSearch(java.lang.String,boolean,android.os.Bundle,boolean)>(r18, 0, null, 1);

        z6 = z0;

        goto label13;

     label10:
        virtualinvoke r0.<android.app.Activity: void startSearch(java.lang.String,boolean,android.os.Bundle,boolean)>(r18, 0, null, 0);

        z6 = z0;

        goto label13;

     label11:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("tel:");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);

        $r11 = new android.content.Intent;

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r12);

        specialinvoke $r11.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>("android.intent.action.DIAL", $r13);

        virtualinvoke $r11.<android.content.Intent: android.content.Intent addFlags(int)>(268435456);

        virtualinvoke r0.<android.app.Activity: void startActivity(android.content.Intent)>($r11);

        z6 = z0;

        goto label13;

     label12:
        z5 = 1;

        z6 = 0;

     label13:
        if z5 == 0 goto label14;

        $r1 = r0.<android.app.Activity: android.text.SpannableStringBuilder mDefaultKeySsb>;

        virtualinvoke $r1.<android.text.SpannableStringBuilder: void clear()>();

        $r2 = r0.<android.app.Activity: android.text.SpannableStringBuilder mDefaultKeySsb>;

        virtualinvoke $r2.<android.text.SpannableStringBuilder: void clearSpans()>();

        $r3 = r0.<android.app.Activity: android.text.SpannableStringBuilder mDefaultKeySsb>;

        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int)>($r3, 0);

     label14:
        return z6;
    }

    public boolean onKeyLongPress(int, android.view.KeyEvent)
    {
        android.app.Activity r0;
        int i0;
        android.view.KeyEvent r1;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.KeyEvent;

        return 0;
    }

    public boolean onKeyMultiple(int, int, android.view.KeyEvent)
    {
        android.app.Activity r0;
        int i0, i1;
        android.view.KeyEvent r1;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.view.KeyEvent;

        return 0;
    }

    public boolean onKeyShortcut(int, android.view.KeyEvent)
    {
        android.app.Activity r0;
        int i0;
        android.view.KeyEvent r1;
        android.app.ActionBar r2;
        boolean $z0, z1;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.KeyEvent;

        r2 = virtualinvoke r0.<android.app.Activity: android.app.ActionBar getActionBar()>();

        if r2 == null goto label1;

        $z0 = virtualinvoke r2.<android.app.ActionBar: boolean onKeyShortcut(int,android.view.KeyEvent)>(i0, r1);

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public boolean onKeyUp(int, android.view.KeyEvent)
    {
        android.app.Activity r0;
        int i0, $i1;
        android.view.KeyEvent r1;
        android.content.pm.ApplicationInfo $r2;
        boolean $z0, $z1;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.KeyEvent;

        $r2 = virtualinvoke r0.<android.app.Activity: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $i1 = $r2.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i1 < 5 goto label1;

        if i0 != 4 goto label1;

        $z0 = virtualinvoke r1.<android.view.KeyEvent: boolean isTracking()>();

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r1.<android.view.KeyEvent: boolean isCanceled()>();

        if $z1 != 0 goto label1;

        virtualinvoke r0.<android.app.Activity: void onBackPressed()>();

        return 1;

     label1:
        return 0;
    }

    public void onLocalVoiceInteractionStarted()
    {
        android.app.Activity r0;

        r0 := @this: android.app.Activity;

        return;
    }

    public void onLocalVoiceInteractionStopped()
    {
        android.app.Activity r0;

        r0 := @this: android.app.Activity;

        return;
    }

    public void onLowMemory()
    {
        android.app.Activity r0;
        android.app.FragmentController $r1;

        r0 := @this: android.app.Activity;

        r0.<android.app.Activity: boolean mCalled> = 1;

        $r1 = r0.<android.app.Activity: android.app.FragmentController mFragments>;

        virtualinvoke $r1.<android.app.FragmentController: void dispatchLowMemory()>();

        return;
    }

    public boolean onMenuItemSelected(int, android.view.MenuItem)
    {
        android.app.Activity r0, r12;
        int i0, $i1, $i2, $i3;
        java.lang.CharSequence r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        android.app.FragmentController $r2, $r6;
        java.lang.Object[] $r3, $r7;
        java.lang.Integer $r4, $r8;
        java.lang.String $r5, $r9;
        android.view.MenuItem r10;
        android.app.ActionBar r11;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        r10 := @parameter1: android.view.MenuItem;

        r1 = interfaceinvoke r10.<android.view.MenuItem: java.lang.CharSequence getTitleCondensed()>();

        if i0 == 0 goto label4;

        if i0 == 6 goto label1;

        return 0;

     label1:
        if r1 == null goto label2;

        $r7 = newarray (java.lang.Object)[2];

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r7[0] = $r8;

        $r9 = interfaceinvoke r1.<java.lang.CharSequence: java.lang.String toString()>();

        $r7[1] = $r9;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(50000, $r7);

     label2:
        $z4 = virtualinvoke r0.<android.app.Activity: boolean onContextItemSelected(android.view.MenuItem)>(r10);

        if $z4 == 0 goto label3;

        return 1;

     label3:
        $r6 = r0.<android.app.Activity: android.app.FragmentController mFragments>;

        $z5 = virtualinvoke $r6.<android.app.FragmentController: boolean dispatchContextItemSelected(android.view.MenuItem)>(r10);

        return $z5;

     label4:
        if r1 == null goto label5;

        $r3 = newarray (java.lang.Object)[2];

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r3[0] = $r4;

        $r5 = interfaceinvoke r1.<java.lang.CharSequence: java.lang.String toString()>();

        $r3[1] = $r5;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(50000, $r3);

     label5:
        $z0 = virtualinvoke r0.<android.app.Activity: boolean onOptionsItemSelected(android.view.MenuItem)>(r10);

        if $z0 == 0 goto label6;

        return 1;

     label6:
        $r2 = r0.<android.app.Activity: android.app.FragmentController mFragments>;

        $z1 = virtualinvoke $r2.<android.app.FragmentController: boolean dispatchOptionsItemSelected(android.view.MenuItem)>(r10);

        if $z1 == 0 goto label7;

        return 1;

     label7:
        $i1 = interfaceinvoke r10.<android.view.MenuItem: int getItemId()>();

        if $i1 != 16908332 goto label9;

        r11 = r0.<android.app.Activity: android.app.ActionBar mActionBar>;

        if r11 == null goto label9;

        $i2 = virtualinvoke r11.<android.app.ActionBar: int getDisplayOptions()>();

        $i3 = $i2 & 4;

        if $i3 == 0 goto label9;

        r12 = r0.<android.app.Activity: android.app.Activity mParent>;

        if r12 != null goto label8;

        $z3 = virtualinvoke r0.<android.app.Activity: boolean onNavigateUp()>();

        return $z3;

     label8:
        $z2 = virtualinvoke r12.<android.app.Activity: boolean onNavigateUpFromChild(android.app.Activity)>(r0);

        return $z2;

     label9:
        return 0;
    }

    public boolean onMenuOpened(int, android.view.Menu)
    {
        android.app.Activity r0;
        int i0;
        android.view.Menu r1;
        android.app.ActionBar r2;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.Menu;

        if i0 != 8 goto label2;

        specialinvoke r0.<android.app.Activity: void initWindowDecorActionBar()>();

        r2 = r0.<android.app.Activity: android.app.ActionBar mActionBar>;

        if r2 == null goto label1;

        virtualinvoke r2.<android.app.ActionBar: void dispatchMenuVisibilityChanged(boolean)>(1);

        goto label2;

     label1:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Activity", "Tried to open action bar menu with no action bar");

     label2:
        return 1;
    }

    public void onMovedToDisplay(int, android.content.res.Configuration)
    {
        android.app.Activity r0;
        int i0;
        android.content.res.Configuration r1;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.res.Configuration;

        return;
    }

    public void onMultiWindowModeChanged(boolean)
    {
        android.app.Activity r0;
        boolean z0;

        r0 := @this: android.app.Activity;

        z0 := @parameter0: boolean;

        return;
    }

    public void onMultiWindowModeChanged(boolean, android.content.res.Configuration)
    {
        android.app.Activity r0;
        boolean z0;
        android.content.res.Configuration r1;

        r0 := @this: android.app.Activity;

        z0 := @parameter0: boolean;

        r1 := @parameter1: android.content.res.Configuration;

        virtualinvoke r0.<android.app.Activity: void onMultiWindowModeChanged(boolean)>(z0);

        return;
    }

    public boolean onNavigateUp()
    {
        android.app.Activity r0;
        android.content.pm.ActivityInfo $r1;
        java.lang.String $r2;
        boolean $z0;
        int $i0;
        android.content.Intent $r3, r4;
        android.app.TaskStackBuilder r5;

        r0 := @this: android.app.Activity;

        r4 = virtualinvoke r0.<android.app.Activity: android.content.Intent getParentActivityIntent()>();

        if r4 == null goto label7;

        $r1 = r0.<android.app.Activity: android.content.pm.ActivityInfo mActivityInfo>;

        $r2 = $r1.<android.content.pm.ActivityInfo: java.lang.String taskAffinity>;

        if $r2 != null goto label1;

        virtualinvoke r0.<android.app.Activity: void finish()>();

        goto label6;

     label1:
        $z0 = virtualinvoke r0.<android.app.Activity: boolean shouldUpRecreateTask(android.content.Intent)>(r4);

        if $z0 == 0 goto label5;

        r5 = staticinvoke <android.app.TaskStackBuilder: android.app.TaskStackBuilder create(android.content.Context)>(r0);

        virtualinvoke r0.<android.app.Activity: void onCreateNavigateUpTaskStack(android.app.TaskStackBuilder)>(r5);

        virtualinvoke r0.<android.app.Activity: void onPrepareNavigateUpTaskStack(android.app.TaskStackBuilder)>(r5);

        virtualinvoke r5.<android.app.TaskStackBuilder: void startActivities()>();

        $i0 = r0.<android.app.Activity: int mResultCode>;

        if $i0 != 0 goto label3;

        $r3 = r0.<android.app.Activity: android.content.Intent mResultData>;

        if $r3 == null goto label2;

        goto label3;

     label2:
        virtualinvoke r0.<android.app.Activity: void finishAffinity()>();

        goto label4;

     label3:
        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("Activity", "onNavigateUp only finishing topmost activity to return a result");

        virtualinvoke r0.<android.app.Activity: void finish()>();

     label4:
        goto label6;

     label5:
        virtualinvoke r0.<android.app.Activity: boolean navigateUpTo(android.content.Intent)>(r4);

     label6:
        return 1;

     label7:
        return 0;
    }

    public boolean onNavigateUpFromChild(android.app.Activity)
    {
        android.app.Activity r0, r1;
        boolean $z0;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.app.Activity;

        $z0 = virtualinvoke r0.<android.app.Activity: boolean onNavigateUp()>();

        return $z0;
    }

    public void onNewActivityOptions(android.app.ActivityOptions)
    {
        android.app.Activity r0;
        android.app.ActivityOptions r1;
        android.app.ActivityTransitionState $r2, $r3;
        boolean $z0;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.app.ActivityOptions;

        $r2 = r0.<android.app.Activity: android.app.ActivityTransitionState mActivityTransitionState>;

        virtualinvoke $r2.<android.app.ActivityTransitionState: void setEnterActivityOptions(android.app.Activity,android.app.ActivityOptions)>(r0, r1);

        $z0 = r0.<android.app.Activity: boolean mStopped>;

        if $z0 != 0 goto label1;

        $r3 = r0.<android.app.Activity: android.app.ActivityTransitionState mActivityTransitionState>;

        virtualinvoke $r3.<android.app.ActivityTransitionState: void enterReady(android.app.Activity)>(r0);

     label1:
        return;
    }

    protected void onNewIntent(android.content.Intent)
    {
        android.app.Activity r0;
        android.content.Intent r1;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.content.Intent;

        return;
    }

    public boolean onOptionsItemSelected(android.view.MenuItem)
    {
        android.app.Activity r0, r2;
        android.view.MenuItem r1;
        boolean $z0;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.view.MenuItem;

        r2 = r0.<android.app.Activity: android.app.Activity mParent>;

        if r2 == null goto label1;

        $z0 = virtualinvoke r2.<android.app.Activity: boolean onOptionsItemSelected(android.view.MenuItem)>(r1);

        return $z0;

     label1:
        return 0;
    }

    public void onOptionsMenuClosed(android.view.Menu)
    {
        android.app.Activity r0, r2;
        android.view.Menu r1;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.view.Menu;

        r2 = r0.<android.app.Activity: android.app.Activity mParent>;

        if r2 == null goto label1;

        virtualinvoke r2.<android.app.Activity: void onOptionsMenuClosed(android.view.Menu)>(r1);

     label1:
        return;
    }

    public void onPanelClosed(int, android.view.Menu)
    {
        android.app.Activity r0;
        int i0;
        android.view.Menu r1;
        android.app.FragmentController $r2;
        android.app.ActionBar $r3;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.Menu;

        if i0 == 0 goto label3;

        if i0 == 6 goto label2;

        if i0 == 8 goto label1;

        goto label4;

     label1:
        specialinvoke r0.<android.app.Activity: void initWindowDecorActionBar()>();

        $r3 = r0.<android.app.Activity: android.app.ActionBar mActionBar>;

        virtualinvoke $r3.<android.app.ActionBar: void dispatchMenuVisibilityChanged(boolean)>(0);

        goto label4;

     label2:
        virtualinvoke r0.<android.app.Activity: void onContextMenuClosed(android.view.Menu)>(r1);

        goto label4;

     label3:
        $r2 = r0.<android.app.Activity: android.app.FragmentController mFragments>;

        virtualinvoke $r2.<android.app.FragmentController: void dispatchOptionsMenuClosed(android.view.Menu)>(r1);

        virtualinvoke r0.<android.app.Activity: void onOptionsMenuClosed(android.view.Menu)>(r1);

     label4:
        return;
    }

    protected void onPause()
    {
        android.app.Activity r0;
        android.view.View r1;
        boolean $z0, $z1, $z2;
        android.view.autofill.AutofillManager $r2;

        r0 := @this: android.app.Activity;

        specialinvoke r0.<android.app.Activity: void dispatchActivityPaused()>();

        $z0 = r0.<android.app.Activity: boolean mAutoFillResetNeeded>;

        if $z0 == 0 goto label3;

        $z1 = r0.<android.app.Activity: boolean mAutoFillIgnoreFirstResumePause>;

        if $z1 != 0 goto label2;

        r1 = virtualinvoke r0.<android.app.Activity: android.view.View getCurrentFocus()>();

        if r1 == null goto label1;

        $z2 = virtualinvoke r1.<android.view.View: boolean canNotifyAutofillEnterExitEvent()>();

        if $z2 == 0 goto label1;

        $r2 = specialinvoke r0.<android.app.Activity: android.view.autofill.AutofillManager getAutofillManager()>();

        virtualinvoke $r2.<android.view.autofill.AutofillManager: void notifyViewExited(android.view.View)>(r1);

     label1:
        goto label3;

     label2:
        r0.<android.app.Activity: boolean mAutoFillIgnoreFirstResumePause> = 0;

     label3:
        specialinvoke r0.<android.app.Activity: void notifyContentCaptureManagerIfNeeded(int)>(3);

        r0.<android.app.Activity: boolean mCalled> = 1;

        return;
    }

    public void onPerformDirectAction(java.lang.String, android.os.Bundle, android.os.CancellationSignal, java.util.function.Consumer)
    {
        android.app.Activity r0;
        java.lang.String r1;
        android.os.Bundle r2;
        android.os.CancellationSignal r3;
        java.util.function.Consumer r4;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        r3 := @parameter2: android.os.CancellationSignal;

        r4 := @parameter3: java.util.function.Consumer;

        return;
    }

    public void onPictureInPictureModeChanged(boolean)
    {
        android.app.Activity r0;
        boolean z0;

        r0 := @this: android.app.Activity;

        z0 := @parameter0: boolean;

        return;
    }

    public void onPictureInPictureModeChanged(boolean, android.content.res.Configuration)
    {
        android.app.Activity r0;
        boolean z0;
        android.content.res.Configuration r1;

        r0 := @this: android.app.Activity;

        z0 := @parameter0: boolean;

        r1 := @parameter1: android.content.res.Configuration;

        virtualinvoke r0.<android.app.Activity: void onPictureInPictureModeChanged(boolean)>(z0);

        return;
    }

    public boolean onPictureInPictureRequested()
    {
        android.app.Activity r0;

        r0 := @this: android.app.Activity;

        return 0;
    }

    protected void onPostCreate(android.os.Bundle)
    {
        android.app.Activity r0;
        android.os.Bundle r1;
        boolean $z0;
        java.lang.CharSequence $r2;
        int $i0;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.os.Bundle;

        $z0 = virtualinvoke r0.<android.app.Activity: boolean isChild()>();

        if $z0 != 0 goto label1;

        r0.<android.app.Activity: boolean mTitleReady> = 1;

        $r2 = virtualinvoke r0.<android.app.Activity: java.lang.CharSequence getTitle()>();

        $i0 = virtualinvoke r0.<android.app.Activity: int getTitleColor()>();

        virtualinvoke r0.<android.app.Activity: void onTitleChanged(java.lang.CharSequence,int)>($r2, $i0);

     label1:
        r0.<android.app.Activity: boolean mCalled> = 1;

        specialinvoke r0.<android.app.Activity: void notifyContentCaptureManagerIfNeeded(int)>(1);

        return;
    }

    public void onPostCreate(android.os.Bundle, android.os.PersistableBundle)
    {
        android.app.Activity r0;
        android.os.Bundle r1;
        android.os.PersistableBundle r2;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.os.Bundle;

        r2 := @parameter1: android.os.PersistableBundle;

        virtualinvoke r0.<android.app.Activity: void onPostCreate(android.os.Bundle)>(r1);

        return;
    }

    protected void onPostResume()
    {
        android.app.Activity r0;
        android.view.Window r1;
        android.app.ActionBar r2;

        r0 := @this: android.app.Activity;

        r1 = virtualinvoke r0.<android.app.Activity: android.view.Window getWindow()>();

        if r1 == null goto label1;

        virtualinvoke r1.<android.view.Window: void makeActive()>();

     label1:
        r2 = r0.<android.app.Activity: android.app.ActionBar mActionBar>;

        if r2 == null goto label2;

        virtualinvoke r2.<android.app.ActionBar: void setShowHideAnimationEnabled(boolean)>(1);

     label2:
        r0.<android.app.Activity: boolean mCalled> = 1;

        return;
    }

    protected void onPrepareDialog(int, android.app.Dialog)
    {
        android.app.Activity r0;
        int i0;
        android.app.Dialog r1;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        r1 := @parameter1: android.app.Dialog;

        virtualinvoke r1.<android.app.Dialog: void setOwnerActivity(android.app.Activity)>(r0);

        return;
    }

    protected void onPrepareDialog(int, android.app.Dialog, android.os.Bundle)
    {
        android.app.Activity r0;
        int i0;
        android.app.Dialog r1;
        android.os.Bundle r2;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        r1 := @parameter1: android.app.Dialog;

        r2 := @parameter2: android.os.Bundle;

        virtualinvoke r0.<android.app.Activity: void onPrepareDialog(int,android.app.Dialog)>(i0, r1);

        return;
    }

    public void onPrepareNavigateUpTaskStack(android.app.TaskStackBuilder)
    {
        android.app.Activity r0;
        android.app.TaskStackBuilder r1;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.app.TaskStackBuilder;

        return;
    }

    public boolean onPrepareOptionsMenu(android.view.Menu)
    {
        android.app.Activity r0, r2;
        android.view.Menu r1;
        boolean $z0;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.view.Menu;

        r2 = r0.<android.app.Activity: android.app.Activity mParent>;

        if r2 == null goto label1;

        $z0 = virtualinvoke r2.<android.app.Activity: boolean onPrepareOptionsMenu(android.view.Menu)>(r1);

        return $z0;

     label1:
        return 1;
    }

    public boolean onPreparePanel(int, android.view.View, android.view.Menu)
    {
        android.app.Activity r0;
        int i0;
        android.view.View r1;
        android.view.Menu r2;
        boolean $z0, $z1, $z2;
        android.app.FragmentController $r3;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.View;

        r2 := @parameter2: android.view.Menu;

        if i0 != 0 goto label1;

        $z0 = virtualinvoke r0.<android.app.Activity: boolean onPrepareOptionsMenu(android.view.Menu)>(r2);

        $r3 = r0.<android.app.Activity: android.app.FragmentController mFragments>;

        $z1 = virtualinvoke $r3.<android.app.FragmentController: boolean dispatchPrepareOptionsMenu(android.view.Menu)>(r2);

        $z2 = $z0 | $z1;

        return $z2;

     label1:
        return 1;
    }

    public void onProvideAssistContent(android.app.assist.AssistContent)
    {
        android.app.Activity r0;
        android.app.assist.AssistContent r1;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.app.assist.AssistContent;

        return;
    }

    public void onProvideAssistData(android.os.Bundle)
    {
        android.app.Activity r0;
        android.os.Bundle r1;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.os.Bundle;

        return;
    }

    public void onProvideKeyboardShortcuts(java.util.List, android.view.Menu, int)
    {
        android.app.Activity r0;
        java.util.List r1;
        android.view.Menu r2;
        int i0, i2, i3, i4, i5;
        java.lang.CharSequence r3;
        char c1;
        android.app.Application $r4;
        android.content.pm.ApplicationInfo $r5;
        android.view.KeyboardShortcutGroup $r6, r7, r9;
        android.view.MenuItem r8;
        java.lang.String r10;
        android.view.KeyboardShortcutInfo $r11;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: android.view.Menu;

        i4 := @parameter2: int;

        if r2 != null goto label1;

        return;

     label1:
        r7 = null;

        i0 = interfaceinvoke r2.<android.view.Menu: int size()>();

        i5 = 0;

     label2:
        if i5 >= i0 goto label7;

        r8 = interfaceinvoke r2.<android.view.Menu: android.view.MenuItem getItem(int)>(i5);

        r3 = interfaceinvoke r8.<android.view.MenuItem: java.lang.CharSequence getTitle()>();

        c1 = interfaceinvoke r8.<android.view.MenuItem: char getAlphabeticShortcut()>();

        i2 = interfaceinvoke r8.<android.view.MenuItem: int getAlphabeticModifiers()>();

        r9 = r7;

        if r3 == null goto label6;

        r9 = r7;

        if c1 == 0 goto label6;

        r9 = r7;

        if r7 != null goto label5;

        $r4 = r0.<android.app.Activity: android.app.Application mApplication>;

        $r5 = virtualinvoke $r4.<android.app.Application: android.content.pm.ApplicationInfo getApplicationInfo()>();

        i3 = $r5.<android.content.pm.ApplicationInfo: int labelRes>;

        if i3 == 0 goto label3;

        r10 = virtualinvoke r0.<android.app.Activity: java.lang.String getString(int)>(i3);

        goto label4;

     label3:
        r10 = null;

     label4:
        $r6 = new android.view.KeyboardShortcutGroup;

        specialinvoke $r6.<android.view.KeyboardShortcutGroup: void <init>(java.lang.CharSequence)>(r10);

        r9 = $r6;

     label5:
        $r11 = new android.view.KeyboardShortcutInfo;

        specialinvoke $r11.<android.view.KeyboardShortcutInfo: void <init>(java.lang.CharSequence,char,int)>(r3, c1, i2);

        virtualinvoke r9.<android.view.KeyboardShortcutGroup: void addItem(android.view.KeyboardShortcutInfo)>($r11);

     label6:
        i5 = i5 + 1;

        r7 = r9;

        goto label2;

     label7:
        if r7 == null goto label8;

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r7);

     label8:
        return;
    }

    public android.net.Uri onProvideReferrer()
    {
        android.app.Activity r0;

        r0 := @this: android.app.Activity;

        return null;
    }

    public void onRequestPermissionsResult(int, java.lang.String[], int[])
    {
        android.app.Activity r0;
        int i0;
        java.lang.String[] r1;
        int[] r2;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String[];

        r2 := @parameter2: int[];

        return;
    }

    protected void onRestart()
    {
        android.app.Activity r0;

        r0 := @this: android.app.Activity;

        r0.<android.app.Activity: boolean mCalled> = 1;

        return;
    }

    protected void onRestoreInstanceState(android.os.Bundle)
    {
        android.app.Activity r0;
        android.view.Window $r1, $r2;
        android.os.Bundle r3, r4;

        r0 := @this: android.app.Activity;

        r3 := @parameter0: android.os.Bundle;

        $r1 = r0.<android.app.Activity: android.view.Window mWindow>;

        if $r1 == null goto label1;

        r4 = virtualinvoke r3.<android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>("android:viewHierarchyState");

        if r4 == null goto label1;

        $r2 = r0.<android.app.Activity: android.view.Window mWindow>;

        virtualinvoke $r2.<android.view.Window: void restoreHierarchyState(android.os.Bundle)>(r4);

     label1:
        return;
    }

    public void onRestoreInstanceState(android.os.Bundle, android.os.PersistableBundle)
    {
        android.app.Activity r0;
        android.os.Bundle r1;
        android.os.PersistableBundle r2;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.os.Bundle;

        r2 := @parameter1: android.os.PersistableBundle;

        if r1 == null goto label1;

        virtualinvoke r0.<android.app.Activity: void onRestoreInstanceState(android.os.Bundle)>(r1);

     label1:
        return;
    }

    protected void onResume()
    {
        android.app.Activity r0;
        android.view.View r1;
        android.app.ActivityTransitionState $r2;
        boolean $z0, $z1, $z2;
        android.view.autofill.AutofillManager $r3;

        r0 := @this: android.app.Activity;

        specialinvoke r0.<android.app.Activity: void dispatchActivityResumed()>();

        $r2 = r0.<android.app.Activity: android.app.ActivityTransitionState mActivityTransitionState>;

        virtualinvoke $r2.<android.app.ActivityTransitionState: void onResume(android.app.Activity)>(r0);

        specialinvoke r0.<android.app.Activity: void enableAutofillCompatibilityIfNeeded()>();

        $z0 = r0.<android.app.Activity: boolean mAutoFillResetNeeded>;

        if $z0 == 0 goto label1;

        $z1 = r0.<android.app.Activity: boolean mAutoFillIgnoreFirstResumePause>;

        if $z1 != 0 goto label1;

        r1 = virtualinvoke r0.<android.app.Activity: android.view.View getCurrentFocus()>();

        if r1 == null goto label1;

        $z2 = virtualinvoke r1.<android.view.View: boolean canNotifyAutofillEnterExitEvent()>();

        if $z2 == 0 goto label1;

        $r3 = specialinvoke r0.<android.app.Activity: android.view.autofill.AutofillManager getAutofillManager()>();

        virtualinvoke $r3.<android.view.autofill.AutofillManager: void notifyViewEntered(android.view.View)>(r1);

     label1:
        specialinvoke r0.<android.app.Activity: void notifyContentCaptureManagerIfNeeded(int)>(2);

        r0.<android.app.Activity: boolean mCalled> = 1;

        return;
    }

    java.util.HashMap onRetainNonConfigurationChildInstances()
    {
        android.app.Activity r0;

        r0 := @this: android.app.Activity;

        return null;
    }

    public java.lang.Object onRetainNonConfigurationInstance()
    {
        android.app.Activity r0;

        r0 := @this: android.app.Activity;

        return null;
    }

    protected void onSaveInstanceState(android.os.Bundle)
    {
        android.app.Activity r0;
        android.os.Bundle r1, $r4;
        android.os.Parcelable r2;
        android.view.Window $r3;
        int $i0;
        android.app.FragmentController $r5;
        boolean $z0;
        android.view.autofill.AutofillManager $r6;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.os.Bundle;

        $r3 = r0.<android.app.Activity: android.view.Window mWindow>;

        $r4 = virtualinvoke $r3.<android.view.Window: android.os.Bundle saveHierarchyState()>();

        virtualinvoke r1.<android.os.Bundle: void putBundle(java.lang.String,android.os.Bundle)>("android:viewHierarchyState", $r4);

        $i0 = r0.<android.app.Activity: int mLastAutofillId>;

        virtualinvoke r1.<android.os.Bundle: void putInt(java.lang.String,int)>("android:lastAutofillId", $i0);

        $r5 = r0.<android.app.Activity: android.app.FragmentController mFragments>;

        r2 = virtualinvoke $r5.<android.app.FragmentController: android.os.Parcelable saveAllState()>();

        if r2 == null goto label1;

        virtualinvoke r1.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("android:fragments", r2);

     label1:
        $z0 = r0.<android.app.Activity: boolean mAutoFillResetNeeded>;

        if $z0 == 0 goto label2;

        virtualinvoke r1.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("@android:autofillResetNeeded", 1);

        $r6 = specialinvoke r0.<android.app.Activity: android.view.autofill.AutofillManager getAutofillManager()>();

        virtualinvoke $r6.<android.view.autofill.AutofillManager: void onSaveInstanceState(android.os.Bundle)>(r1);

     label2:
        specialinvoke r0.<android.app.Activity: void dispatchActivitySaveInstanceState(android.os.Bundle)>(r1);

        return;
    }

    public void onSaveInstanceState(android.os.Bundle, android.os.PersistableBundle)
    {
        android.app.Activity r0;
        android.os.Bundle r1;
        android.os.PersistableBundle r2;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.os.Bundle;

        r2 := @parameter1: android.os.PersistableBundle;

        virtualinvoke r0.<android.app.Activity: void onSaveInstanceState(android.os.Bundle)>(r1);

        return;
    }

    public boolean onSearchRequested()
    {
        android.app.Activity r0;
        int i0, $i1;
        android.content.res.Resources $r1;
        android.content.res.Configuration $r2;

        r0 := @this: android.app.Activity;

        $r1 = virtualinvoke r0.<android.app.Activity: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke $r1.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $i1 = $r2.<android.content.res.Configuration: int uiMode>;

        i0 = $i1 & 15;

        if i0 == 4 goto label1;

        if i0 == 6 goto label1;

        virtualinvoke r0.<android.app.Activity: void startSearch(java.lang.String,boolean,android.os.Bundle,boolean)>(null, 0, null, 0);

        return 1;

     label1:
        return 0;
    }

    public boolean onSearchRequested(android.view.SearchEvent)
    {
        android.app.Activity r0;
        android.view.SearchEvent r1;
        boolean z0;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.view.SearchEvent;

        r0.<android.app.Activity: android.view.SearchEvent mSearchEvent> = r1;

        z0 = virtualinvoke r0.<android.app.Activity: boolean onSearchRequested()>();

        r0.<android.app.Activity: android.view.SearchEvent mSearchEvent> = null;

        return z0;
    }

    protected void onStart()
    {
        android.app.Activity r0;
        android.app.FragmentController $r1;
        boolean $z0;
        android.view.autofill.AutofillManager $r2;

        r0 := @this: android.app.Activity;

        r0.<android.app.Activity: boolean mCalled> = 1;

        $r1 = r0.<android.app.Activity: android.app.FragmentController mFragments>;

        virtualinvoke $r1.<android.app.FragmentController: void doLoaderStart()>();

        specialinvoke r0.<android.app.Activity: void dispatchActivityStarted()>();

        $z0 = r0.<android.app.Activity: boolean mAutoFillResetNeeded>;

        if $z0 == 0 goto label1;

        $r2 = specialinvoke r0.<android.app.Activity: android.view.autofill.AutofillManager getAutofillManager()>();

        virtualinvoke $r2.<android.view.autofill.AutofillManager: void onVisibleForAutofill()>();

     label1:
        return;
    }

    public void onStateNotSaved()
    {
        android.app.Activity r0;

        r0 := @this: android.app.Activity;

        return;
    }

    protected void onStop()
    {
        android.app.Activity r0;
        android.app.ActivityTransitionState $r1;
        boolean $z0, $z1, $z2, $z3, $z4;
        android.content.Intent $r2, r5;
        android.view.autofill.AutofillManager $r3;
        android.app.ActionBar r4;

        r0 := @this: android.app.Activity;

        r4 = r0.<android.app.Activity: android.app.ActionBar mActionBar>;

        if r4 == null goto label1;

        virtualinvoke r4.<android.app.ActionBar: void setShowHideAnimationEnabled(boolean)>(0);

     label1:
        $r1 = r0.<android.app.Activity: android.app.ActivityTransitionState mActivityTransitionState>;

        virtualinvoke $r1.<android.app.ActivityTransitionState: void onStop()>();

        specialinvoke r0.<android.app.Activity: void dispatchActivityStopped()>();

        r0.<android.app.Activity: android.app.Activity$TranslucentConversionListener mTranslucentCallback> = null;

        r0.<android.app.Activity: boolean mCalled> = 1;

        $z0 = r0.<android.app.Activity: boolean mAutoFillResetNeeded>;

        if $z0 == 0 goto label2;

        $r3 = specialinvoke r0.<android.app.Activity: android.view.autofill.AutofillManager getAutofillManager()>();

        $z3 = r0.<android.app.Activity: boolean mChangingConfigurations>;

        $z4 = 1 ^ $z3;

        virtualinvoke $r3.<android.view.autofill.AutofillManager: void onInvisibleForAutofill(boolean)>($z4);

        goto label3;

     label2:
        r5 = r0.<android.app.Activity: android.content.Intent mIntent>;

        if r5 == null goto label3;

        $z1 = virtualinvoke r5.<android.content.Intent: boolean hasExtra(java.lang.String)>("android.view.autofill.extra.RESTORE_SESSION_TOKEN");

        if $z1 == 0 goto label3;

        $r2 = r0.<android.app.Activity: android.content.Intent mIntent>;

        $z2 = virtualinvoke $r2.<android.content.Intent: boolean hasExtra(java.lang.String)>("android.view.autofill.extra.RESTORE_CROSS_ACTIVITY");

        if $z2 == 0 goto label3;

        specialinvoke r0.<android.app.Activity: void restoreAutofillSaveUi()>();

     label3:
        r0.<android.app.Activity: boolean mEnterAnimationComplete> = 0;

        return;
    }

    protected void onTitleChanged(java.lang.CharSequence, int)
    {
        android.app.Activity r0;
        java.lang.CharSequence r1;
        int i0;
        boolean $z0;
        android.view.Window r2;
        android.app.ActionBar r3;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        $z0 = r0.<android.app.Activity: boolean mTitleReady>;

        if $z0 == 0 goto label2;

        r2 = virtualinvoke r0.<android.app.Activity: android.view.Window getWindow()>();

        if r2 == null goto label1;

        virtualinvoke r2.<android.view.Window: void setTitle(java.lang.CharSequence)>(r1);

        if i0 == 0 goto label1;

        virtualinvoke r2.<android.view.Window: void setTitleColor(int)>(i0);

     label1:
        r3 = r0.<android.app.Activity: android.app.ActionBar mActionBar>;

        if r3 == null goto label2;

        virtualinvoke r3.<android.app.ActionBar: void setWindowTitle(java.lang.CharSequence)>(r1);

     label2:
        return;
    }

    public void onTopResumedActivityChanged(boolean)
    {
        android.app.Activity r0;
        boolean z0;

        r0 := @this: android.app.Activity;

        z0 := @parameter0: boolean;

        return;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        android.app.Activity r0;
        android.view.MotionEvent r1;
        android.view.Window $r2;
        boolean $z0;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.view.MotionEvent;

        $r2 = r0.<android.app.Activity: android.view.Window mWindow>;

        $z0 = virtualinvoke $r2.<android.view.Window: boolean shouldCloseOnTouch(android.content.Context,android.view.MotionEvent)>(r0, r1);

        if $z0 == 0 goto label1;

        virtualinvoke r0.<android.app.Activity: void finish()>();

        return 1;

     label1:
        return 0;
    }

    public boolean onTrackballEvent(android.view.MotionEvent)
    {
        android.app.Activity r0;
        android.view.MotionEvent r1;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.view.MotionEvent;

        return 0;
    }

    void onTranslucentConversionComplete(boolean)
    {
        android.app.Activity r0;
        boolean z0, $z1;
        android.app.Activity$TranslucentConversionListener r1;
        android.view.WindowManagerGlobal $r2;
        android.os.IBinder $r3;

        r0 := @this: android.app.Activity;

        z0 := @parameter0: boolean;

        r1 = r0.<android.app.Activity: android.app.Activity$TranslucentConversionListener mTranslucentCallback>;

        if r1 == null goto label1;

        interfaceinvoke r1.<android.app.Activity$TranslucentConversionListener: void onTranslucentConversionComplete(boolean)>(z0);

        r0.<android.app.Activity: android.app.Activity$TranslucentConversionListener mTranslucentCallback> = null;

     label1:
        $z1 = r0.<android.app.Activity: boolean mChangeCanvasToTranslucent>;

        if $z1 == 0 goto label2;

        $r2 = staticinvoke <android.view.WindowManagerGlobal: android.view.WindowManagerGlobal getInstance()>();

        $r3 = r0.<android.app.Activity: android.os.IBinder mToken>;

        virtualinvoke $r2.<android.view.WindowManagerGlobal: void changeCanvasOpacity(android.os.IBinder,boolean)>($r3, 0);

     label2:
        return;
    }

    public void onTrimMemory(int)
    {
        android.app.Activity r0;
        int i0;
        android.app.FragmentController $r1;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        r0.<android.app.Activity: boolean mCalled> = 1;

        $r1 = r0.<android.app.Activity: android.app.FragmentController mFragments>;

        virtualinvoke $r1.<android.app.FragmentController: void dispatchTrimMemory(int)>(i0);

        return;
    }

    public void onUserInteraction()
    {
        android.app.Activity r0;

        r0 := @this: android.app.Activity;

        return;
    }

    protected void onUserLeaveHint()
    {
        android.app.Activity r0;

        r0 := @this: android.app.Activity;

        return;
    }

    public void onVisibleBehindCanceled()
    {
        android.app.Activity r0;

        r0 := @this: android.app.Activity;

        r0.<android.app.Activity: boolean mCalled> = 1;

        return;
    }

    public void onWindowAttributesChanged(android.view.WindowManager$LayoutParams)
    {
        android.app.Activity r0, $r2;
        android.view.WindowManager$LayoutParams r1;
        android.view.ViewParent $r3;
        android.view.WindowManager $r4;
        android.view.View r5;
        android.view.contentcapture.ContentCaptureManager r6;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.view.WindowManager$LayoutParams;

        $r2 = r0.<android.app.Activity: android.app.Activity mParent>;

        if $r2 != null goto label1;

        r5 = r0.<android.app.Activity: android.view.View mDecor>;

        if r5 == null goto label1;

        $r3 = virtualinvoke r5.<android.view.View: android.view.ViewParent getParent()>();

        if $r3 == null goto label1;

        $r4 = virtualinvoke r0.<android.app.Activity: android.view.WindowManager getWindowManager()>();

        interfaceinvoke $r4.<android.view.WindowManager: void updateViewLayout(android.view.View,android.view.ViewGroup$LayoutParams)>(r5, r1);

        r6 = r0.<android.app.Activity: android.view.contentcapture.ContentCaptureManager mContentCaptureManager>;

        if r6 == null goto label1;

        virtualinvoke r6.<android.view.contentcapture.ContentCaptureManager: void updateWindowAttributes(android.view.WindowManager$LayoutParams)>(r1);

     label1:
        return;
    }

    public void onWindowDismissed(boolean, boolean)
    {
        android.app.Activity r0;
        boolean z0, z1;
        byte b0;

        r0 := @this: android.app.Activity;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        if z0 == 0 goto label1;

        b0 = 2;

        goto label2;

     label1:
        b0 = 0;

     label2:
        specialinvoke r0.<android.app.Activity: void finish(int)>(b0);

        if z1 == 0 goto label3;

        virtualinvoke r0.<android.app.Activity: void overridePendingTransition(int,int)>(0, 0);

     label3:
        return;
    }

    public void onWindowFocusChanged(boolean)
    {
        android.app.Activity r0;
        boolean z0;

        r0 := @this: android.app.Activity;

        z0 := @parameter0: boolean;

        return;
    }

    public android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback)
    {
        android.app.Activity r0;
        android.view.ActionMode$Callback r1;
        android.app.ActionBar r2;
        int $i0;
        android.view.ActionMode $r3;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.view.ActionMode$Callback;

        $i0 = r0.<android.app.Activity: int mActionModeTypeStarting>;

        if $i0 != 0 goto label1;

        specialinvoke r0.<android.app.Activity: void initWindowDecorActionBar()>();

        r2 = r0.<android.app.Activity: android.app.ActionBar mActionBar>;

        if r2 == null goto label1;

        $r3 = virtualinvoke r2.<android.app.ActionBar: android.view.ActionMode startActionMode(android.view.ActionMode$Callback)>(r1);

        return $r3;

     label1:
        return null;
    }

    public android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback, int)
    {
        android.app.Activity r0;
        int i0;
        java.lang.Throwable $r1;
        android.view.ActionMode$Callback r2;
        android.view.ActionMode r3;

        r0 := @this: android.app.Activity;

        r2 := @parameter0: android.view.ActionMode$Callback;

        i0 := @parameter1: int;

     label1:
        r0.<android.app.Activity: int mActionModeTypeStarting> = i0;

        r3 = virtualinvoke r0.<android.app.Activity: android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback)>(r2);

     label2:
        r0.<android.app.Activity: int mActionModeTypeStarting> = 0;

        return r3;

     label3:
        $r1 := @caughtexception;

        r0.<android.app.Activity: int mActionModeTypeStarting> = 0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void openContextMenu(android.view.View)
    {
        android.app.Activity r0;
        android.view.View r1;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.view.View;

        virtualinvoke r1.<android.view.View: boolean showContextMenu()>();

        return;
    }

    public void openOptionsMenu()
    {
        android.app.Activity r0;
        android.app.ActionBar r1;
        android.view.Window $r2, $r3;
        boolean $z0, $z1;

        r0 := @this: android.app.Activity;

        $r2 = r0.<android.app.Activity: android.view.Window mWindow>;

        $z0 = virtualinvoke $r2.<android.view.Window: boolean hasFeature(int)>(0);

        if $z0 == 0 goto label2;

        r1 = r0.<android.app.Activity: android.app.ActionBar mActionBar>;

        if r1 == null goto label1;

        $z1 = virtualinvoke r1.<android.app.ActionBar: boolean openOptionsMenu()>();

        if $z1 != 0 goto label2;

     label1:
        $r3 = r0.<android.app.Activity: android.view.Window mWindow>;

        virtualinvoke $r3.<android.view.Window: void openPanel(int,android.view.KeyEvent)>(0, null);

     label2:
        return;
    }

    public void overridePendingTransition(int, int)
    {
        android.app.Activity r0;
        int i0, i1;
        android.app.IActivityTaskManager $r2;
        android.os.IBinder $r3;
        java.lang.String $r4;
        android.os.RemoteException $r5;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

     label1:
        $r2 = staticinvoke <android.app.ActivityTaskManager: android.app.IActivityTaskManager getService()>();

        $r3 = r0.<android.app.Activity: android.os.IBinder mToken>;

        $r4 = virtualinvoke r0.<android.app.Activity: java.lang.String getPackageName()>();

        interfaceinvoke $r2.<android.app.IActivityTaskManager: void overridePendingTransition(android.os.IBinder,java.lang.String,int,int)>($r3, $r4, i0, i1);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    final void performCreate(android.os.Bundle)
    {
        android.app.Activity r0;
        android.os.Bundle r1;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.os.Bundle;

        virtualinvoke r0.<android.app.Activity: void performCreate(android.os.Bundle,android.os.PersistableBundle)>(r1, null);

        return;
    }

    final void performCreate(android.os.Bundle, android.os.PersistableBundle)
    {
        android.app.Activity r0;
        android.os.Bundle r1;
        android.os.PersistableBundle r2;
        int i0, $i1;
        android.content.res.Resources $r3;
        android.content.res.Configuration $r4;
        android.app.WindowConfiguration $r5;
        boolean $z0, $z1, $z2, z3;
        android.content.ComponentName $r6;
        java.lang.String $r7;
        android.app.ActivityTransitionState $r8, $r12;
        android.view.Window $r9;
        android.content.res.TypedArray $r10;
        android.app.FragmentController $r11;
        android.app.ActivityOptions $r13;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.os.Bundle;

        r2 := @parameter1: android.os.PersistableBundle;

        specialinvoke r0.<android.app.Activity: void dispatchActivityPreCreated(android.os.Bundle)>(r1);

        r0.<android.app.Activity: boolean mCanEnterPictureInPicture> = 1;

        $r3 = virtualinvoke r0.<android.app.Activity: android.content.res.Resources getResources()>();

        $r4 = virtualinvoke $r3.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $r5 = $r4.<android.content.res.Configuration: android.app.WindowConfiguration windowConfiguration>;

        i0 = virtualinvoke $r5.<android.app.WindowConfiguration: int getWindowingMode()>();

        $z0 = staticinvoke <android.app.WindowConfiguration: boolean inMultiWindowMode(int)>(i0);

        r0.<android.app.Activity: boolean mIsInMultiWindowMode> = $z0;

        if i0 != 2 goto label1;

        z3 = 1;

        goto label2;

     label1:
        z3 = 0;

     label2:
        r0.<android.app.Activity: boolean mIsInPictureInPictureMode> = z3;

        specialinvoke r0.<android.app.Activity: void restoreHasCurrentPermissionRequest(android.os.Bundle)>(r1);

        if r2 == null goto label3;

        virtualinvoke r0.<android.app.Activity: void onCreate(android.os.Bundle,android.os.PersistableBundle)>(r1, r2);

        goto label4;

     label3:
        virtualinvoke r0.<android.app.Activity: void onCreate(android.os.Bundle)>(r1);

     label4:
        $i1 = r0.<android.app.Activity: int mIdent>;

        $r6 = virtualinvoke r0.<android.app.Activity: android.content.ComponentName getComponentName()>();

        $r7 = virtualinvoke $r6.<android.content.ComponentName: java.lang.String getClassName()>();

        staticinvoke <android.app.EventLogTags: void writeWmOnCreateCalled(int,java.lang.String,java.lang.String)>($i1, $r7, "performCreate");

        $r8 = r0.<android.app.Activity: android.app.ActivityTransitionState mActivityTransitionState>;

        virtualinvoke $r8.<android.app.ActivityTransitionState: void readState(android.os.Bundle)>(r1);

        $r9 = r0.<android.app.Activity: android.view.Window mWindow>;

        $r10 = virtualinvoke $r9.<android.view.Window: android.content.res.TypedArray getWindowStyle()>();

        $z1 = virtualinvoke $r10.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(10, 0);

        $z2 = 1 ^ $z1;

        r0.<android.app.Activity: boolean mVisibleFromClient> = $z2;

        $r11 = r0.<android.app.Activity: android.app.FragmentController mFragments>;

        virtualinvoke $r11.<android.app.FragmentController: void dispatchActivityCreated()>();

        $r12 = r0.<android.app.Activity: android.app.ActivityTransitionState mActivityTransitionState>;

        $r13 = virtualinvoke r0.<android.app.Activity: android.app.ActivityOptions getActivityOptions()>();

        virtualinvoke $r12.<android.app.ActivityTransitionState: void setEnterActivityOptions(android.app.Activity,android.app.ActivityOptions)>(r0, $r13);

        specialinvoke r0.<android.app.Activity: void dispatchActivityPostCreated(android.os.Bundle)>(r1);

        return;
    }

    final void performDestroy()
    {
        android.app.Activity r0;
        android.app.VoiceInteractor r1;
        android.view.Window $r2;
        android.app.FragmentController $r3, $r6;
        int $i0;
        android.content.ComponentName $r4;
        java.lang.String $r5;

        r0 := @this: android.app.Activity;

        specialinvoke r0.<android.app.Activity: void dispatchActivityPreDestroyed()>();

        r0.<android.app.Activity: boolean mDestroyed> = 1;

        $r2 = r0.<android.app.Activity: android.view.Window mWindow>;

        virtualinvoke $r2.<android.view.Window: void destroy()>();

        $r3 = r0.<android.app.Activity: android.app.FragmentController mFragments>;

        virtualinvoke $r3.<android.app.FragmentController: void dispatchDestroy()>();

        virtualinvoke r0.<android.app.Activity: void onDestroy()>();

        $i0 = r0.<android.app.Activity: int mIdent>;

        $r4 = virtualinvoke r0.<android.app.Activity: android.content.ComponentName getComponentName()>();

        $r5 = virtualinvoke $r4.<android.content.ComponentName: java.lang.String getClassName()>();

        staticinvoke <android.app.EventLogTags: void writeWmOnDestroyCalled(int,java.lang.String,java.lang.String)>($i0, $r5, "performDestroy");

        $r6 = r0.<android.app.Activity: android.app.FragmentController mFragments>;

        virtualinvoke $r6.<android.app.FragmentController: void doLoaderDestroy()>();

        r1 = r0.<android.app.Activity: android.app.VoiceInteractor mVoiceInteractor>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.app.VoiceInteractor: void detachActivity()>();

     label1:
        specialinvoke r0.<android.app.Activity: void dispatchActivityPostDestroyed()>();

        return;
    }

    final void performNewIntent(android.content.Intent)
    {
        android.app.Activity r0;
        android.content.Intent r1;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.content.Intent;

        r0.<android.app.Activity: boolean mCanEnterPictureInPicture> = 1;

        virtualinvoke r0.<android.app.Activity: void onNewIntent(android.content.Intent)>(r1);

        return;
    }

    final void performPause()
    {
        android.app.Activity r0;
        android.app.FragmentController $r2;
        int $i0, $i1;
        android.content.ComponentName $r3, $r8;
        java.lang.String $r4, $r9, $r13;
        boolean $z0;
        android.content.pm.ApplicationInfo $r5;
        java.lang.StringBuilder $r6;
        android.util.SuperNotCalledException $r12;

        r0 := @this: android.app.Activity;

        specialinvoke r0.<android.app.Activity: void dispatchActivityPrePaused()>();

        r0.<android.app.Activity: boolean mDoReportFullyDrawn> = 0;

        $r2 = r0.<android.app.Activity: android.app.FragmentController mFragments>;

        virtualinvoke $r2.<android.app.FragmentController: void dispatchPause()>();

        r0.<android.app.Activity: boolean mCalled> = 0;

        virtualinvoke r0.<android.app.Activity: void onPause()>();

        $i0 = r0.<android.app.Activity: int mIdent>;

        $r3 = virtualinvoke r0.<android.app.Activity: android.content.ComponentName getComponentName()>();

        $r4 = virtualinvoke $r3.<android.content.ComponentName: java.lang.String getClassName()>();

        staticinvoke <android.app.EventLogTags: void writeWmOnPausedCalled(int,java.lang.String,java.lang.String)>($i0, $r4, "performPause");

        r0.<android.app.Activity: boolean mResumed> = 0;

        $z0 = r0.<android.app.Activity: boolean mCalled>;

        if $z0 != 0 goto label2;

        $r5 = virtualinvoke r0.<android.app.Activity: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $i1 = $r5.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i1 >= 9 goto label1;

        goto label2;

     label1:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Activity ");

        $r8 = r0.<android.app.Activity: android.content.ComponentName mComponent>;

        $r9 = virtualinvoke $r8.<android.content.ComponentName: java.lang.String toShortString()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" did not call through to super.onPause()");

        $r12 = new android.util.SuperNotCalledException;

        $r13 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<android.util.SuperNotCalledException: void <init>(java.lang.String)>($r13);

        throw $r12;

     label2:
        specialinvoke r0.<android.app.Activity: void dispatchActivityPostPaused()>();

        return;
    }

    final void performRestart(boolean, java.lang.String)
    {
        android.app.Activity r0, $r26;
        boolean z0, $z1, $z2, $z3, $z6, $z7;
        java.util.ArrayList r1, $r6, $r18;
        int i0, $i1, $i2, i3;
        android.app.Activity$ManagedCursor r2;
        java.lang.StringBuilder r3, $r10;
        android.app.FragmentController $r4;
        android.os.IBinder $r5, $r28;
        android.app.Instrumentation $r7;
        android.content.ComponentName $r8, $r12;
        java.lang.String $r9, $r13, $r17, $r25, r30;
        android.util.SuperNotCalledException $r16;
        java.lang.Object $r19;
        android.database.Cursor $r20, $r23;
        android.content.pm.ApplicationInfo $r21;
        android.view.WindowManagerGlobal $r27;
        java.lang.Throwable $r29;
        java.lang.IllegalStateException r31;

        r0 := @this: android.app.Activity;

        z0 := @parameter0: boolean;

        r30 := @parameter1: java.lang.String;

        r0.<android.app.Activity: boolean mCanEnterPictureInPicture> = 1;

        $r4 = r0.<android.app.Activity: android.app.FragmentController mFragments>;

        virtualinvoke $r4.<android.app.FragmentController: void noteStateNotSaved()>();

        $r5 = r0.<android.app.Activity: android.os.IBinder mToken>;

        if $r5 == null goto label01;

        $r26 = r0.<android.app.Activity: android.app.Activity mParent>;

        if $r26 != null goto label01;

        $r27 = staticinvoke <android.view.WindowManagerGlobal: android.view.WindowManagerGlobal getInstance()>();

        $r28 = r0.<android.app.Activity: android.os.IBinder mToken>;

        virtualinvoke $r27.<android.view.WindowManagerGlobal: void setStoppedState(android.os.IBinder,boolean)>($r28, 0);

     label01:
        $z7 = r0.<android.app.Activity: boolean mStopped>;

        if $z7 == 0 goto label17;

        r0.<android.app.Activity: boolean mStopped> = 0;

        r1 = r0.<android.app.Activity: java.util.ArrayList mManagedCursors>;

        entermonitor r1;

     label02:
        $r6 = r0.<android.app.Activity: java.util.ArrayList mManagedCursors>;

        i0 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

     label03:
        i3 = 0;

     label04:
        if i3 >= i0 goto label11;

     label05:
        $r18 = r0.<android.app.Activity: java.util.ArrayList mManagedCursors>;

        $r19 = virtualinvoke $r18.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r2 = (android.app.Activity$ManagedCursor) $r19;

        $z2 = staticinvoke <android.app.Activity$ManagedCursor: boolean access$400(android.app.Activity$ManagedCursor)>(r2);

        if $z2 != 0 goto label06;

        $z6 = staticinvoke <android.app.Activity$ManagedCursor: boolean access$500(android.app.Activity$ManagedCursor)>(r2);

        if $z6 == 0 goto label10;

     label06:
        $r20 = staticinvoke <android.app.Activity$ManagedCursor: android.database.Cursor access$300(android.app.Activity$ManagedCursor)>(r2);

        $z3 = interfaceinvoke $r20.<android.database.Cursor: boolean requery()>();

        if $z3 != 0 goto label09;

        $r21 = virtualinvoke r0.<android.app.Activity: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $i2 = $r21.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i2 >= 14 goto label08;

     label07:
        goto label09;

     label08:
        r31 = new java.lang.IllegalStateException;

        r3 = new java.lang.StringBuilder;

        specialinvoke r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("trying to requery an already closed cursor  ");

        $r23 = staticinvoke <android.app.Activity$ManagedCursor: android.database.Cursor access$300(android.app.Activity$ManagedCursor)>(r2);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r23);

        $r25 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r31.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r25);

        throw r31;

     label09:
        staticinvoke <android.app.Activity$ManagedCursor: boolean access$402(android.app.Activity$ManagedCursor,boolean)>(r2, 0);

        staticinvoke <android.app.Activity$ManagedCursor: boolean access$502(android.app.Activity$ManagedCursor,boolean)>(r2, 0);

     label10:
        i3 = i3 + 1;

        goto label04;

     label11:
        exitmonitor r1;

     label12:
        r0.<android.app.Activity: boolean mCalled> = 0;

        $r7 = r0.<android.app.Activity: android.app.Instrumentation mInstrumentation>;

        virtualinvoke $r7.<android.app.Instrumentation: void callActivityOnRestart(android.app.Activity)>(r0);

        $i1 = r0.<android.app.Activity: int mIdent>;

        $r8 = virtualinvoke r0.<android.app.Activity: android.content.ComponentName getComponentName()>();

        $r9 = virtualinvoke $r8.<android.content.ComponentName: java.lang.String getClassName()>();

        staticinvoke <android.app.EventLogTags: void writeWmOnRestartCalled(int,java.lang.String,java.lang.String)>($i1, $r9, r30);

        $z1 = r0.<android.app.Activity: boolean mCalled>;

        if $z1 == 0 goto label13;

        if z0 == 0 goto label17;

        virtualinvoke r0.<android.app.Activity: void performStart(java.lang.String)>(r30);

        goto label17;

     label13:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Activity ");

        $r12 = r0.<android.app.Activity: android.content.ComponentName mComponent>;

        $r13 = virtualinvoke $r12.<android.content.ComponentName: java.lang.String toShortString()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" did not call through to super.onRestart()");

        $r16 = new android.util.SuperNotCalledException;

        $r17 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<android.util.SuperNotCalledException: void <init>(java.lang.String)>($r17);

        throw $r16;

     label14:
        $r29 := @caughtexception;

     label15:
        exitmonitor r1;

     label16:
        throw $r29;

     label17:
        return;

        catch java.lang.Throwable from label02 to label03 with label14;
        catch java.lang.Throwable from label05 to label06 with label14;
        catch java.lang.Throwable from label06 to label07 with label14;
        catch java.lang.Throwable from label08 to label09 with label14;
        catch java.lang.Throwable from label09 to label10 with label14;
        catch java.lang.Throwable from label11 to label12 with label14;
        catch java.lang.Throwable from label15 to label16 with label14;
    }

    final void performRestoreInstanceState(android.os.Bundle)
    {
        android.app.Activity r0;
        android.os.Bundle r1;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.os.Bundle;

        virtualinvoke r0.<android.app.Activity: void onRestoreInstanceState(android.os.Bundle)>(r1);

        specialinvoke r0.<android.app.Activity: void restoreManagedDialogs(android.os.Bundle)>(r1);

        return;
    }

    final void performRestoreInstanceState(android.os.Bundle, android.os.PersistableBundle)
    {
        android.app.Activity r0;
        android.os.Bundle r1;
        android.os.PersistableBundle r2;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.os.Bundle;

        r2 := @parameter1: android.os.PersistableBundle;

        virtualinvoke r0.<android.app.Activity: void onRestoreInstanceState(android.os.Bundle,android.os.PersistableBundle)>(r1, r2);

        if r1 == null goto label1;

        specialinvoke r0.<android.app.Activity: void restoreManagedDialogs(android.os.Bundle)>(r1);

     label1:
        return;
    }

    final void performResume(boolean, java.lang.String)
    {
        android.app.Activity r0;
        boolean z0, $z2, $z3, $z4, $z6, $z7;
        android.app.FragmentController $r1, $r32, $r33;
        android.app.Instrumentation $r2;
        int $i0, $i2;
        android.content.ComponentName $r3, $r7, $r15, $r24;
        java.lang.String $r4, $r8, $r12, $r16, $r20, $r25, $r29, r30;
        java.lang.StringBuilder $r5, $r13, $r22;
        android.util.SuperNotCalledException $r11, $r19;
        android.content.pm.ApplicationInfo $r21;
        java.lang.IllegalStateException $r28;

        r0 := @this: android.app.Activity;

        z0 := @parameter0: boolean;

        r30 := @parameter1: java.lang.String;

        specialinvoke r0.<android.app.Activity: void dispatchActivityPreResumed()>();

        virtualinvoke r0.<android.app.Activity: void performRestart(boolean,java.lang.String)>(1, r30);

        $r1 = r0.<android.app.Activity: android.app.FragmentController mFragments>;

        virtualinvoke $r1.<android.app.FragmentController: boolean execPendingActions()>();

        r0.<android.app.Activity: android.app.Activity$NonConfigurationInstances mLastNonConfigurationInstances> = null;

        $z2 = r0.<android.app.Activity: boolean mAutoFillResetNeeded>;

        if $z2 == 0 goto label1;

        r0.<android.app.Activity: boolean mAutoFillIgnoreFirstResumePause> = z0;

     label1:
        r0.<android.app.Activity: boolean mCalled> = 0;

        $r2 = r0.<android.app.Activity: android.app.Instrumentation mInstrumentation>;

        virtualinvoke $r2.<android.app.Instrumentation: void callActivityOnResume(android.app.Activity)>(r0);

        $i0 = r0.<android.app.Activity: int mIdent>;

        $r3 = virtualinvoke r0.<android.app.Activity: android.content.ComponentName getComponentName()>();

        $r4 = virtualinvoke $r3.<android.content.ComponentName: java.lang.String getClassName()>();

        staticinvoke <android.app.EventLogTags: void writeWmOnResumeCalled(int,java.lang.String,java.lang.String)>($i0, $r4, r30);

        $z3 = r0.<android.app.Activity: boolean mCalled>;

        if $z3 == 0 goto label5;

        $z4 = r0.<android.app.Activity: boolean mVisibleFromClient>;

        if $z4 != 0 goto label3;

        $z6 = r0.<android.app.Activity: boolean mFinished>;

        if $z6 != 0 goto label3;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Activity", "An activity without a UI must call finish() before onResume() completes");

        $r21 = virtualinvoke r0.<android.app.Activity: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $i2 = $r21.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i2 > 22 goto label2;

        goto label3;

     label2:
        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Activity ");

        $r24 = r0.<android.app.Activity: android.content.ComponentName mComponent>;

        $r25 = virtualinvoke $r24.<android.content.ComponentName: java.lang.String toShortString()>();

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" did not call finish() prior to onResume() completing");

        $r28 = new java.lang.IllegalStateException;

        $r29 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r28.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r29);

        throw $r28;

     label3:
        r0.<android.app.Activity: boolean mCalled> = 0;

        $r32 = r0.<android.app.Activity: android.app.FragmentController mFragments>;

        virtualinvoke $r32.<android.app.FragmentController: void dispatchResume()>();

        $r33 = r0.<android.app.Activity: android.app.FragmentController mFragments>;

        virtualinvoke $r33.<android.app.FragmentController: boolean execPendingActions()>();

        virtualinvoke r0.<android.app.Activity: void onPostResume()>();

        $z7 = r0.<android.app.Activity: boolean mCalled>;

        if $z7 == 0 goto label4;

        specialinvoke r0.<android.app.Activity: void dispatchActivityPostResumed()>();

        return;

     label4:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Activity ");

        $r15 = r0.<android.app.Activity: android.content.ComponentName mComponent>;

        $r16 = virtualinvoke $r15.<android.content.ComponentName: java.lang.String toShortString()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" did not call through to super.onPostResume()");

        $r19 = new android.util.SuperNotCalledException;

        $r20 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<android.util.SuperNotCalledException: void <init>(java.lang.String)>($r20);

        throw $r19;

     label5:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Activity ");

        $r7 = r0.<android.app.Activity: android.content.ComponentName mComponent>;

        $r8 = virtualinvoke $r7.<android.content.ComponentName: java.lang.String toShortString()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" did not call through to super.onResume()");

        $r11 = new android.util.SuperNotCalledException;

        $r12 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<android.util.SuperNotCalledException: void <init>(java.lang.String)>($r12);

        throw $r11;
    }

    final void performSaveInstanceState(android.os.Bundle)
    {
        android.app.Activity r0;
        android.os.Bundle r1;
        android.app.ActivityTransitionState $r2;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<android.app.Activity: void dispatchActivityPreSaveInstanceState(android.os.Bundle)>(r1);

        virtualinvoke r0.<android.app.Activity: void onSaveInstanceState(android.os.Bundle)>(r1);

        specialinvoke r0.<android.app.Activity: void saveManagedDialogs(android.os.Bundle)>(r1);

        $r2 = r0.<android.app.Activity: android.app.ActivityTransitionState mActivityTransitionState>;

        virtualinvoke $r2.<android.app.ActivityTransitionState: void saveState(android.os.Bundle)>(r1);

        specialinvoke r0.<android.app.Activity: void storeHasCurrentPermissionRequest(android.os.Bundle)>(r1);

        specialinvoke r0.<android.app.Activity: void dispatchActivityPostSaveInstanceState(android.os.Bundle)>(r1);

        return;
    }

    final void performSaveInstanceState(android.os.Bundle, android.os.PersistableBundle)
    {
        android.app.Activity r0;
        android.os.Bundle r1;
        android.os.PersistableBundle r2;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.os.Bundle;

        r2 := @parameter1: android.os.PersistableBundle;

        specialinvoke r0.<android.app.Activity: void dispatchActivityPreSaveInstanceState(android.os.Bundle)>(r1);

        virtualinvoke r0.<android.app.Activity: void onSaveInstanceState(android.os.Bundle,android.os.PersistableBundle)>(r1, r2);

        specialinvoke r0.<android.app.Activity: void saveManagedDialogs(android.os.Bundle)>(r1);

        specialinvoke r0.<android.app.Activity: void storeHasCurrentPermissionRequest(android.os.Bundle)>(r1);

        specialinvoke r0.<android.app.Activity: void dispatchActivityPostSaveInstanceState(android.os.Bundle)>(r1);

        return;
    }

    final void performStart(java.lang.String)
    {
        android.app.Activity r0;
        android.app.ActivityTransitionState $r1, $r45;
        android.app.ActivityOptions $r2;
        android.app.FragmentController $r3, $r4, $r16, $r17;
        android.app.Instrumentation $r5;
        int $i0, $i1, $i2;
        android.content.ComponentName $r6, $r10;
        java.lang.String $r7, $r11, $r15, $r30, r38, r39, r40, r42;
        boolean $z1, z2;
        java.lang.StringBuilder $r8, $r23, $r26;
        android.util.SuperNotCalledException $r14;
        android.app.Application $r18;
        android.content.pm.ApplicationInfo $r19, $r20;
        android.content.pm.PackageManager $r21;
        java.lang.CharSequence $r22;
        android.widget.Toast $r31;
        android.app.AlertDialog$Builder $r32, $r33, $r34, $r35, $r36;
        android.os.GraphicsEnvironment $r44;

        r0 := @this: android.app.Activity;

        r38 := @parameter0: java.lang.String;

        specialinvoke r0.<android.app.Activity: void dispatchActivityPreStarted()>();

        $r1 = r0.<android.app.Activity: android.app.ActivityTransitionState mActivityTransitionState>;

        $r2 = virtualinvoke r0.<android.app.Activity: android.app.ActivityOptions getActivityOptions()>();

        virtualinvoke $r1.<android.app.ActivityTransitionState: void setEnterActivityOptions(android.app.Activity,android.app.ActivityOptions)>(r0, $r2);

        $r3 = r0.<android.app.Activity: android.app.FragmentController mFragments>;

        virtualinvoke $r3.<android.app.FragmentController: void noteStateNotSaved()>();

        r0.<android.app.Activity: boolean mCalled> = 0;

        $r4 = r0.<android.app.Activity: android.app.FragmentController mFragments>;

        virtualinvoke $r4.<android.app.FragmentController: boolean execPendingActions()>();

        $r5 = r0.<android.app.Activity: android.app.Instrumentation mInstrumentation>;

        virtualinvoke $r5.<android.app.Instrumentation: void callActivityOnStart(android.app.Activity)>(r0);

        $i0 = r0.<android.app.Activity: int mIdent>;

        $r6 = virtualinvoke r0.<android.app.Activity: android.content.ComponentName getComponentName()>();

        $r7 = virtualinvoke $r6.<android.content.ComponentName: java.lang.String getClassName()>();

        staticinvoke <android.app.EventLogTags: void writeWmOnStartCalled(int,java.lang.String,java.lang.String)>($i0, $r7, r38);

        $z1 = r0.<android.app.Activity: boolean mCalled>;

        if $z1 == 0 goto label5;

        $r16 = r0.<android.app.Activity: android.app.FragmentController mFragments>;

        virtualinvoke $r16.<android.app.FragmentController: void dispatchStart()>();

        $r17 = r0.<android.app.Activity: android.app.FragmentController mFragments>;

        virtualinvoke $r17.<android.app.FragmentController: void reportLoaderStart()>();

        $r18 = r0.<android.app.Activity: android.app.Application mApplication>;

        $r19 = virtualinvoke $r18.<android.app.Application: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $i1 = $r19.<android.content.pm.ApplicationInfo: int flags>;

        $i2 = $i1 & 2;

        if $i2 == 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        if z2 == 0 goto label4;

        r39 = staticinvoke <android.app.Activity: java.lang.String getDlWarning()>();

        if r39 == null goto label4;

        $r20 = virtualinvoke r0.<android.app.Activity: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $r21 = virtualinvoke r0.<android.app.Activity: android.content.pm.PackageManager getPackageManager()>();

        $r22 = virtualinvoke $r20.<android.content.pm.ApplicationInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>($r21);

        r40 = interfaceinvoke $r22.<java.lang.CharSequence: java.lang.String toString()>();

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Detected problems with app native libraries\n(please consult log for detail):\n");

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r39);

        r42 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        if z2 == 0 goto label3;

        $r32 = new android.app.AlertDialog$Builder;

        specialinvoke $r32.<android.app.AlertDialog$Builder: void <init>(android.content.Context)>(r0);

        $r33 = virtualinvoke $r32.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>(r40);

        $r34 = virtualinvoke $r33.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>(r42);

        $r35 = virtualinvoke $r34.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener)>(17039370, null);

        $r36 = virtualinvoke $r35.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setCancelable(boolean)>(0);

        virtualinvoke $r36.<android.app.AlertDialog$Builder: android.app.AlertDialog show()>();

        goto label4;

     label3:
        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r40);

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r42);

        $r30 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        $r31 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>(r0, $r30, 1);

        virtualinvoke $r31.<android.widget.Toast: void show()>();

     label4:
        $r44 = staticinvoke <android.os.GraphicsEnvironment: android.os.GraphicsEnvironment getInstance()>();

        virtualinvoke $r44.<android.os.GraphicsEnvironment: void showAngleInUseDialogBox(android.content.Context)>(r0);

        $r45 = r0.<android.app.Activity: android.app.ActivityTransitionState mActivityTransitionState>;

        virtualinvoke $r45.<android.app.ActivityTransitionState: void enterReady(android.app.Activity)>(r0);

        specialinvoke r0.<android.app.Activity: void dispatchActivityPostStarted()>();

        return;

     label5:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Activity ");

        $r10 = r0.<android.app.Activity: android.content.ComponentName mComponent>;

        $r11 = virtualinvoke $r10.<android.content.ComponentName: java.lang.String toShortString()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" did not call through to super.onStart()");

        $r14 = new android.util.SuperNotCalledException;

        $r15 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<android.util.SuperNotCalledException: void <init>(java.lang.String)>($r15);

        throw $r14;
    }

    final void performStop(boolean, java.lang.String)
    {
        android.app.Activity r0, $r15;
        boolean z0, $z1, $z2, $z3, $z5;
        int i0, $i1, i2;
        android.app.FragmentController $r1, $r21;
        java.lang.StringBuilder $r2;
        android.content.ComponentName $r4, $r23;
        java.lang.String $r5, $r9, r19, $r24;
        android.util.SuperNotCalledException $r8;
        java.util.ArrayList $r10, $r11, r25;
        java.lang.Object $r12;
        android.database.Cursor $r13;
        android.os.IBinder $r14, $r17;
        android.view.WindowManagerGlobal $r16;
        java.lang.Throwable $r18;
        android.view.Window r20;
        android.app.Instrumentation $r22;
        android.app.Activity$ManagedCursor r26;

        r0 := @this: android.app.Activity;

        z0 := @parameter0: boolean;

        r19 := @parameter1: java.lang.String;

        r0.<android.app.Activity: boolean mDoReportFullyDrawn> = 0;

        $r1 = r0.<android.app.Activity: android.app.FragmentController mFragments>;

        $z1 = r0.<android.app.Activity: boolean mChangingConfigurations>;

        virtualinvoke $r1.<android.app.FragmentController: void doLoaderStop(boolean)>($z1);

        r0.<android.app.Activity: boolean mCanEnterPictureInPicture> = 0;

        $z2 = r0.<android.app.Activity: boolean mStopped>;

        if $z2 != 0 goto label14;

        specialinvoke r0.<android.app.Activity: void dispatchActivityPreStopped()>();

        r20 = r0.<android.app.Activity: android.view.Window mWindow>;

        if r20 == null goto label01;

        virtualinvoke r20.<android.view.Window: void closeAllPanels()>();

     label01:
        if z0 != 0 goto label02;

        $r14 = r0.<android.app.Activity: android.os.IBinder mToken>;

        if $r14 == null goto label02;

        $r15 = r0.<android.app.Activity: android.app.Activity mParent>;

        if $r15 != null goto label02;

        $r16 = staticinvoke <android.view.WindowManagerGlobal: android.view.WindowManagerGlobal getInstance()>();

        $r17 = r0.<android.app.Activity: android.os.IBinder mToken>;

        virtualinvoke $r16.<android.view.WindowManagerGlobal: void setStoppedState(android.os.IBinder,boolean)>($r17, 1);

     label02:
        $r21 = r0.<android.app.Activity: android.app.FragmentController mFragments>;

        virtualinvoke $r21.<android.app.FragmentController: void dispatchStop()>();

        r0.<android.app.Activity: boolean mCalled> = 0;

        $r22 = r0.<android.app.Activity: android.app.Instrumentation mInstrumentation>;

        virtualinvoke $r22.<android.app.Instrumentation: void callActivityOnStop(android.app.Activity)>(r0);

        $i1 = r0.<android.app.Activity: int mIdent>;

        $r23 = virtualinvoke r0.<android.app.Activity: android.content.ComponentName getComponentName()>();

        $r24 = virtualinvoke $r23.<android.content.ComponentName: java.lang.String getClassName()>();

        staticinvoke <android.app.EventLogTags: void writeWmOnStopCalled(int,java.lang.String,java.lang.String)>($i1, $r24, r19);

        $z5 = r0.<android.app.Activity: boolean mCalled>;

        if $z5 == 0 goto label13;

        r25 = r0.<android.app.Activity: java.util.ArrayList mManagedCursors>;

        entermonitor r25;

     label03:
        $r10 = r0.<android.app.Activity: java.util.ArrayList mManagedCursors>;

        i0 = virtualinvoke $r10.<java.util.ArrayList: int size()>();

     label04:
        i2 = 0;

     label05:
        if i2 >= i0 goto label08;

     label06:
        $r11 = r0.<android.app.Activity: java.util.ArrayList mManagedCursors>;

        $r12 = virtualinvoke $r11.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r26 = (android.app.Activity$ManagedCursor) $r12;

        $z3 = staticinvoke <android.app.Activity$ManagedCursor: boolean access$400(android.app.Activity$ManagedCursor)>(r26);

        if $z3 != 0 goto label07;

        $r13 = staticinvoke <android.app.Activity$ManagedCursor: android.database.Cursor access$300(android.app.Activity$ManagedCursor)>(r26);

        interfaceinvoke $r13.<android.database.Cursor: void deactivate()>();

        staticinvoke <android.app.Activity$ManagedCursor: boolean access$402(android.app.Activity$ManagedCursor,boolean)>(r26, 1);

     label07:
        i2 = i2 + 1;

        goto label05;

     label08:
        exitmonitor r25;

     label09:
        r0.<android.app.Activity: boolean mStopped> = 1;

        specialinvoke r0.<android.app.Activity: void dispatchActivityPostStopped()>();

        goto label14;

     label10:
        $r18 := @caughtexception;

     label11:
        exitmonitor r25;

     label12:
        throw $r18;

     label13:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Activity ");

        $r4 = r0.<android.app.Activity: android.content.ComponentName mComponent>;

        $r5 = virtualinvoke $r4.<android.content.ComponentName: java.lang.String toShortString()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" did not call through to super.onStop()");

        $r8 = new android.util.SuperNotCalledException;

        $r9 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<android.util.SuperNotCalledException: void <init>(java.lang.String)>($r9);

        throw $r8;

     label14:
        r0.<android.app.Activity: boolean mResumed> = 0;

        return;

        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    final void performTopResumedActivityChanged(boolean, java.lang.String)
    {
        android.app.Activity r0;
        boolean z0;
        java.lang.String r1, $r3, $r5;
        int $i0, $i1;
        android.content.ComponentName $r2, $r4;

        r0 := @this: android.app.Activity;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.lang.String;

        virtualinvoke r0.<android.app.Activity: void onTopResumedActivityChanged(boolean)>(z0);

        if z0 == 0 goto label1;

        $i1 = r0.<android.app.Activity: int mIdent>;

        $r4 = virtualinvoke r0.<android.app.Activity: android.content.ComponentName getComponentName()>();

        $r5 = virtualinvoke $r4.<android.content.ComponentName: java.lang.String getClassName()>();

        staticinvoke <android.app.EventLogTags: void writeWmOnTopResumedGainedCalled(int,java.lang.String,java.lang.String)>($i1, $r5, r1);

        goto label2;

     label1:
        $i0 = r0.<android.app.Activity: int mIdent>;

        $r2 = virtualinvoke r0.<android.app.Activity: android.content.ComponentName getComponentName()>();

        $r3 = virtualinvoke $r2.<android.content.ComponentName: java.lang.String getClassName()>();

        staticinvoke <android.app.EventLogTags: void writeWmOnTopResumedLostCalled(int,java.lang.String,java.lang.String)>($i0, $r3, r1);

     label2:
        return;
    }

    final void performUserLeaving()
    {
        android.app.Activity r0;

        r0 := @this: android.app.Activity;

        virtualinvoke r0.<android.app.Activity: void onUserInteraction()>();

        virtualinvoke r0.<android.app.Activity: void onUserLeaveHint()>();

        return;
    }

    public void postponeEnterTransition()
    {
        android.app.Activity r0;
        android.app.ActivityTransitionState $r1;

        r0 := @this: android.app.Activity;

        $r1 = r0.<android.app.Activity: android.app.ActivityTransitionState mActivityTransitionState>;

        virtualinvoke $r1.<android.app.ActivityTransitionState: void postponeEnterTransition()>();

        return;
    }

    public void recreate()
    {
        android.app.Activity r0, $r1;
        java.lang.IllegalStateException $r2, $r6;
        android.os.Looper $r3, $r5;
        android.app.ActivityThread $r4, $r8;
        android.os.IBinder $r7;

        r0 := @this: android.app.Activity;

        $r1 = r0.<android.app.Activity: android.app.Activity mParent>;

        if $r1 != null goto label2;

        $r3 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        $r4 = r0.<android.app.Activity: android.app.ActivityThread mMainThread>;

        $r5 = virtualinvoke $r4.<android.app.ActivityThread: android.os.Looper getLooper()>();

        if $r3 != $r5 goto label1;

        $r8 = r0.<android.app.Activity: android.app.ActivityThread mMainThread>;

        $r7 = r0.<android.app.Activity: android.os.IBinder mToken>;

        virtualinvoke $r8.<android.app.ActivityThread: void scheduleRelaunchActivity(android.os.IBinder)>($r7);

        return;

     label1:
        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Must be called from main thread");

        throw $r6;

     label2:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Can only be called on top-level activity");

        throw $r2;
    }

    public void registerActivityLifecycleCallbacks(android.app.Application$ActivityLifecycleCallbacks)
    {
        android.app.Activity r0;
        java.util.ArrayList r1, $r2;
        java.lang.Throwable $r3;
        android.app.Application$ActivityLifecycleCallbacks r4;

        r0 := @this: android.app.Activity;

        r4 := @parameter0: android.app.Application$ActivityLifecycleCallbacks;

        r1 = r0.<android.app.Activity: java.util.ArrayList mActivityLifecycleCallbacks>;

        entermonitor r1;

     label1:
        $r2 = r0.<android.app.Activity: java.util.ArrayList mActivityLifecycleCallbacks>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r4);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void registerForContextMenu(android.view.View)
    {
        android.app.Activity r0;
        android.view.View r1;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.view.View;

        virtualinvoke r1.<android.view.View: void setOnCreateContextMenuListener(android.view.View$OnCreateContextMenuListener)>(r0);

        return;
    }

    public void registerRemoteAnimations(android.view.RemoteAnimationDefinition)
    {
        android.app.Activity r0;
        android.app.IActivityTaskManager $r1;
        android.os.IBinder $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;
        android.view.RemoteAnimationDefinition r5;

        r0 := @this: android.app.Activity;

        r5 := @parameter0: android.view.RemoteAnimationDefinition;

     label1:
        $r1 = staticinvoke <android.app.ActivityTaskManager: android.app.IActivityTaskManager getService()>();

        $r2 = r0.<android.app.Activity: android.os.IBinder mToken>;

        interfaceinvoke $r1.<android.app.IActivityTaskManager: void registerRemoteAnimations(android.os.IBinder,android.view.RemoteAnimationDefinition)>($r2, r5);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean releaseInstance()
    {
        android.app.Activity r0;
        boolean z0;
        android.app.IActivityTaskManager $r2;
        android.os.IBinder $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.app.Activity;

     label1:
        $r2 = staticinvoke <android.app.ActivityTaskManager: android.app.IActivityTaskManager getService()>();

        $r3 = r0.<android.app.Activity: android.os.IBinder mToken>;

        z0 = interfaceinvoke $r2.<android.app.IActivityTaskManager: boolean releaseActivityInstance(android.os.IBinder)>($r3);

     label2:
        return z0;

     label3:
        $r4 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public final void removeDialog(int)
    {
        android.app.Activity r0;
        int i0;
        java.lang.Object $r1;
        android.app.Dialog $r2;
        android.util.SparseArray $r3, r4;
        android.app.Activity$ManagedDialog r5;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        r4 = r0.<android.app.Activity: android.util.SparseArray mManagedDialogs>;

        if r4 == null goto label1;

        $r1 = virtualinvoke r4.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r5 = (android.app.Activity$ManagedDialog) $r1;

        if r5 == null goto label1;

        $r2 = r5.<android.app.Activity$ManagedDialog: android.app.Dialog mDialog>;

        virtualinvoke $r2.<android.app.Dialog: void dismiss()>();

        $r3 = r0.<android.app.Activity: android.util.SparseArray mManagedDialogs>;

        virtualinvoke $r3.<android.util.SparseArray: void remove(int)>(i0);

     label1:
        return;
    }

    public void reportFullyDrawn()
    {
        android.app.Activity r0;
        boolean $z0, $z1;
        android.app.IActivityTaskManager $r2;
        android.os.IBinder $r3;
        dalvik.system.VMRuntime $r4;
        android.os.RemoteException $r5;

        r0 := @this: android.app.Activity;

        $z0 = r0.<android.app.Activity: boolean mDoReportFullyDrawn>;

        if $z0 == 0 goto label4;

        r0.<android.app.Activity: boolean mDoReportFullyDrawn> = 0;

     label1:
        $r2 = staticinvoke <android.app.ActivityTaskManager: android.app.IActivityTaskManager getService()>();

        $r3 = r0.<android.app.Activity: android.os.IBinder mToken>;

        $z1 = r0.<android.app.Activity: boolean mRestoredFromBundle>;

        interfaceinvoke $r2.<android.app.IActivityTaskManager: void reportActivityFullyDrawn(android.os.IBinder,boolean)>($r3, $z1);

        $r4 = staticinvoke <dalvik.system.VMRuntime: dalvik.system.VMRuntime getRuntime()>();

        virtualinvoke $r4.<dalvik.system.VMRuntime: void notifyStartupCompleted()>();

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.view.DragAndDropPermissions requestDragAndDropPermissions(android.view.DragEvent)
    {
        android.app.Activity r0;
        android.os.IBinder $r1;
        boolean $z0;
        android.view.DragEvent r2;
        android.view.DragAndDropPermissions r3;

        r0 := @this: android.app.Activity;

        r2 := @parameter0: android.view.DragEvent;

        r3 = staticinvoke <android.view.DragAndDropPermissions: android.view.DragAndDropPermissions obtain(android.view.DragEvent)>(r2);

        if r3 == null goto label1;

        $r1 = virtualinvoke r0.<android.app.Activity: android.os.IBinder getActivityToken()>();

        $z0 = virtualinvoke r3.<android.view.DragAndDropPermissions: boolean take(android.os.IBinder)>($r1);

        if $z0 == 0 goto label1;

        return r3;

     label1:
        return null;
    }

    public final void requestPermissions(java.lang.String[], int)
    {
        android.app.Activity r0;
        java.lang.String[] r1, $r6;
        int i0;
        java.lang.IllegalArgumentException $r2;
        boolean $z0;
        android.content.pm.PackageManager $r3;
        android.content.Intent $r4;
        int[] $r5;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: java.lang.String[];

        i0 := @parameter1: int;

        if i0 < 0 goto label2;

        $z0 = r0.<android.app.Activity: boolean mHasCurrentPermissionsRequest>;

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Activity", "Can request only one set of permissions at a time");

        $r6 = newarray (java.lang.String)[0];

        $r5 = newarray (int)[0];

        virtualinvoke r0.<android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>(i0, $r6, $r5);

        return;

     label1:
        $r3 = virtualinvoke r0.<android.app.Activity: android.content.pm.PackageManager getPackageManager()>();

        $r4 = virtualinvoke $r3.<android.content.pm.PackageManager: android.content.Intent buildRequestPermissionsIntent(java.lang.String[])>(r1);

        virtualinvoke r0.<android.app.Activity: void startActivityForResult(java.lang.String,android.content.Intent,int,android.os.Bundle)>("@android:requestPermissions:", $r4, i0, null);

        r0.<android.app.Activity: boolean mHasCurrentPermissionsRequest> = 1;

        return;

     label2:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("requestCode should be >= 0");

        throw $r2;
    }

    public final void requestShowKeyboardShortcuts()
    {
        android.app.Activity r0;
        android.content.ComponentName r1;
        android.content.res.Resources $r3;
        java.lang.String $r4, $r6;
        android.content.Intent $r5;
        android.os.UserHandle $r8;

        r0 := @this: android.app.Activity;

        $r3 = virtualinvoke r0.<android.app.Activity: android.content.res.Resources getResources()>();

        $r4 = virtualinvoke $r3.<android.content.res.Resources: java.lang.String getString(int)>(17039950);

        r1 = staticinvoke <android.content.ComponentName: android.content.ComponentName unflattenFromString(java.lang.String)>($r4);

        $r5 = new android.content.Intent;

        specialinvoke $r5.<android.content.Intent: void <init>(java.lang.String)>("com.android.intent.action.SHOW_KEYBOARD_SHORTCUTS");

        $r6 = virtualinvoke r1.<android.content.ComponentName: java.lang.String getPackageName()>();

        virtualinvoke $r5.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>($r6);

        $r8 = staticinvoke <android.os.Process: android.os.UserHandle myUserHandle()>();

        virtualinvoke r0.<android.app.Activity: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>($r5, $r8);

        return;
    }

    public boolean requestVisibleBehind(boolean)
    {
        android.app.Activity r0;
        boolean z0;

        r0 := @this: android.app.Activity;

        z0 := @parameter0: boolean;

        return 0;
    }

    public final boolean requestWindowFeature(int)
    {
        android.app.Activity r0;
        int i0;
        android.view.Window $r1;
        boolean $z0;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.app.Activity: android.view.Window getWindow()>();

        $z0 = virtualinvoke $r1.<android.view.Window: boolean requestFeature(int)>(i0);

        return $z0;
    }

    public final android.view.View requireViewById(int)
    {
        android.app.Activity r0;
        int i0;
        android.view.View r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        r1 = virtualinvoke r0.<android.app.Activity: android.view.View findViewById(int)>(i0);

        if r1 == null goto label1;

        return r1;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("ID does not reference a View inside this Activity");

        throw $r2;
    }

    android.app.Activity$NonConfigurationInstances retainNonConfigurationInstances()
    {
        android.app.Activity r0;
        java.lang.Object r1;
        java.util.HashMap r2;
        android.util.ArrayMap r3;
        android.app.FragmentController $r5, $r6, $r7, $r8;
        android.app.VoiceInteractor $r9, $r10, r13;
        android.app.FragmentManagerNonConfig r11;
        android.app.Activity$NonConfigurationInstances $r12;

        r0 := @this: android.app.Activity;

        r1 = virtualinvoke r0.<android.app.Activity: java.lang.Object onRetainNonConfigurationInstance()>();

        r2 = virtualinvoke r0.<android.app.Activity: java.util.HashMap onRetainNonConfigurationChildInstances()>();

        $r5 = r0.<android.app.Activity: android.app.FragmentController mFragments>;

        r11 = virtualinvoke $r5.<android.app.FragmentController: android.app.FragmentManagerNonConfig retainNestedNonConfig()>();

        $r6 = r0.<android.app.Activity: android.app.FragmentController mFragments>;

        virtualinvoke $r6.<android.app.FragmentController: void doLoaderStart()>();

        $r7 = r0.<android.app.Activity: android.app.FragmentController mFragments>;

        virtualinvoke $r7.<android.app.FragmentController: void doLoaderStop(boolean)>(1);

        $r8 = r0.<android.app.Activity: android.app.FragmentController mFragments>;

        r3 = virtualinvoke $r8.<android.app.FragmentController: android.util.ArrayMap retainLoaderNonConfig()>();

        if r1 != null goto label1;

        if r2 != null goto label1;

        if r11 != null goto label1;

        if r3 != null goto label1;

        $r10 = r0.<android.app.Activity: android.app.VoiceInteractor mVoiceInteractor>;

        if $r10 != null goto label1;

        return null;

     label1:
        $r12 = new android.app.Activity$NonConfigurationInstances;

        specialinvoke $r12.<android.app.Activity$NonConfigurationInstances: void <init>()>();

        $r12.<android.app.Activity$NonConfigurationInstances: java.lang.Object activity> = r1;

        $r12.<android.app.Activity$NonConfigurationInstances: java.util.HashMap children> = r2;

        $r12.<android.app.Activity$NonConfigurationInstances: android.app.FragmentManagerNonConfig fragments> = r11;

        $r12.<android.app.Activity$NonConfigurationInstances: android.util.ArrayMap loaders> = r3;

        r13 = r0.<android.app.Activity: android.app.VoiceInteractor mVoiceInteractor>;

        if r13 == null goto label2;

        virtualinvoke r13.<android.app.VoiceInteractor: void retainInstance()>();

        $r9 = r0.<android.app.Activity: android.app.VoiceInteractor mVoiceInteractor>;

        $r12.<android.app.Activity$NonConfigurationInstances: android.app.VoiceInteractor voiceInteractor> = $r9;

     label2:
        return $r12;
    }

    public final void runOnUiThread(java.lang.Runnable)
    {
        android.app.Activity r0;
        java.lang.Runnable r1;
        java.lang.Thread $r2, $r3;
        android.os.Handler $r4;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: java.lang.Runnable;

        $r2 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r3 = r0.<android.app.Activity: java.lang.Thread mUiThread>;

        if $r2 == $r3 goto label1;

        $r4 = r0.<android.app.Activity: android.os.Handler mHandler>;

        virtualinvoke $r4.<android.os.Handler: boolean post(java.lang.Runnable)>(r1);

        goto label2;

     label1:
        interfaceinvoke r1.<java.lang.Runnable: void run()>();

     label2:
        return;
    }

    public void setActionBar(android.widget.Toolbar)
    {
        android.app.Activity r0;
        android.app.ActionBar r1;
        boolean $z0;
        java.lang.IllegalStateException $r2;
        android.view.Window $r3, $r6;
        com.android.internal.app.ToolbarActionBar $r4;
        java.lang.CharSequence $r5;
        android.view.Window$Callback $r7;
        android.widget.Toolbar r8;

        r0 := @this: android.app.Activity;

        r8 := @parameter0: android.widget.Toolbar;

        r1 = virtualinvoke r0.<android.app.Activity: android.app.ActionBar getActionBar()>();

        $z0 = r1 instanceof com.android.internal.app.WindowDecorActionBar;

        if $z0 != 0 goto label4;

        r0.<android.app.Activity: android.view.MenuInflater mMenuInflater> = null;

        if r1 == null goto label1;

        virtualinvoke r1.<android.app.ActionBar: void onDestroy()>();

     label1:
        if r8 == null goto label2;

        $r4 = new com.android.internal.app.ToolbarActionBar;

        $r5 = virtualinvoke r0.<android.app.Activity: java.lang.CharSequence getTitle()>();

        specialinvoke $r4.<com.android.internal.app.ToolbarActionBar: void <init>(android.widget.Toolbar,java.lang.CharSequence,android.view.Window$Callback)>(r8, $r5, r0);

        r0.<android.app.Activity: android.app.ActionBar mActionBar> = $r4;

        $r6 = r0.<android.app.Activity: android.view.Window mWindow>;

        $r7 = virtualinvoke $r4.<com.android.internal.app.ToolbarActionBar: android.view.Window$Callback getWrappedWindowCallback()>();

        virtualinvoke $r6.<android.view.Window: void setCallback(android.view.Window$Callback)>($r7);

        goto label3;

     label2:
        r0.<android.app.Activity: android.app.ActionBar mActionBar> = null;

        $r3 = r0.<android.app.Activity: android.view.Window mWindow>;

        virtualinvoke $r3.<android.view.Window: void setCallback(android.view.Window$Callback)>(r0);

     label3:
        virtualinvoke r0.<android.app.Activity: void invalidateOptionsMenu()>();

        return;

     label4:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This Activity already has an action bar supplied by the window decor. Do not request Window.FEATURE_ACTION_BAR and set android:windowActionBar to false in your theme to use a Toolbar instead.");

        throw $r2;
    }

    public void setContentTransitionManager(android.transition.TransitionManager)
    {
        android.app.Activity r0;
        android.transition.TransitionManager r1;
        android.view.Window $r2;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.transition.TransitionManager;

        $r2 = virtualinvoke r0.<android.app.Activity: android.view.Window getWindow()>();

        virtualinvoke $r2.<android.view.Window: void setTransitionManager(android.transition.TransitionManager)>(r1);

        return;
    }

    public void setContentView(int)
    {
        android.app.Activity r0;
        int i0;
        android.view.Window $r1;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.app.Activity: android.view.Window getWindow()>();

        virtualinvoke $r1.<android.view.Window: void setContentView(int)>(i0);

        specialinvoke r0.<android.app.Activity: void initWindowDecorActionBar()>();

        return;
    }

    public void setContentView(android.view.View)
    {
        android.app.Activity r0;
        android.view.View r1;
        android.view.Window $r2;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.view.View;

        $r2 = virtualinvoke r0.<android.app.Activity: android.view.Window getWindow()>();

        virtualinvoke $r2.<android.view.Window: void setContentView(android.view.View)>(r1);

        specialinvoke r0.<android.app.Activity: void initWindowDecorActionBar()>();

        return;
    }

    public void setContentView(android.view.View, android.view.ViewGroup$LayoutParams)
    {
        android.app.Activity r0;
        android.view.View r1;
        android.view.ViewGroup$LayoutParams r2;
        android.view.Window $r3;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.ViewGroup$LayoutParams;

        $r3 = virtualinvoke r0.<android.app.Activity: android.view.Window getWindow()>();

        virtualinvoke $r3.<android.view.Window: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)>(r1, r2);

        specialinvoke r0.<android.app.Activity: void initWindowDecorActionBar()>();

        return;
    }

    public final void setDefaultKeyMode(int)
    {
        android.app.Activity r0;
        int i0;
        java.lang.IllegalArgumentException $r2;
        android.text.SpannableStringBuilder $r3;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        r0.<android.app.Activity: int mDefaultKeyMode> = i0;

        if i0 == 0 goto label3;

        if i0 == 1 goto label2;

        if i0 == 2 goto label3;

        if i0 == 3 goto label2;

        if i0 != 4 goto label1;

        goto label2;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r2;

     label2:
        $r3 = new android.text.SpannableStringBuilder;

        specialinvoke $r3.<android.text.SpannableStringBuilder: void <init>()>();

        r0.<android.app.Activity: android.text.SpannableStringBuilder mDefaultKeySsb> = $r3;

        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int)>($r3, 0);

        goto label4;

     label3:
        r0.<android.app.Activity: android.text.SpannableStringBuilder mDefaultKeySsb> = null;

     label4:
        return;
    }

    public void setDisablePreviewScreenshots(boolean)
    {
        android.app.Activity r0;
        boolean z0;
        android.app.IActivityTaskManager $r2;
        android.os.IBinder $r3;
        android.os.RemoteException $r4;
        java.lang.RuntimeException $r5;

        r0 := @this: android.app.Activity;

        z0 := @parameter0: boolean;

     label1:
        $r2 = staticinvoke <android.app.ActivityTaskManager: android.app.IActivityTaskManager getService()>();

        $r3 = r0.<android.app.Activity: android.os.IBinder mToken>;

        interfaceinvoke $r2.<android.app.IActivityTaskManager: void setDisablePreviewScreenshots(android.os.IBinder,boolean)>($r3, z0);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        $r5 = virtualinvoke $r4.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setEnterSharedElementCallback(android.app.SharedElementCallback)
    {
        android.app.Activity r0;
        android.app.SharedElementCallback r1, r2;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.app.SharedElementCallback;

        r2 = r1;

        if r1 != null goto label1;

        r2 = <android.app.SharedElementCallback: android.app.SharedElementCallback NULL_CALLBACK>;

     label1:
        r0.<android.app.Activity: android.app.SharedElementCallback mEnterTransitionListener> = r2;

        return;
    }

    public void setExitSharedElementCallback(android.app.SharedElementCallback)
    {
        android.app.Activity r0;
        android.app.SharedElementCallback r1, r2;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.app.SharedElementCallback;

        r2 = r1;

        if r1 != null goto label1;

        r2 = <android.app.SharedElementCallback: android.app.SharedElementCallback NULL_CALLBACK>;

     label1:
        r0.<android.app.Activity: android.app.SharedElementCallback mExitTransitionListener> = r2;

        return;
    }

    public final void setFeatureDrawable(int, android.graphics.drawable.Drawable)
    {
        android.app.Activity r0;
        int i0;
        android.graphics.drawable.Drawable r1;
        android.view.Window $r2;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        r1 := @parameter1: android.graphics.drawable.Drawable;

        $r2 = virtualinvoke r0.<android.app.Activity: android.view.Window getWindow()>();

        virtualinvoke $r2.<android.view.Window: void setFeatureDrawable(int,android.graphics.drawable.Drawable)>(i0, r1);

        return;
    }

    public final void setFeatureDrawableAlpha(int, int)
    {
        android.app.Activity r0;
        int i0, i1;
        android.view.Window $r1;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<android.app.Activity: android.view.Window getWindow()>();

        virtualinvoke $r1.<android.view.Window: void setFeatureDrawableAlpha(int,int)>(i0, i1);

        return;
    }

    public final void setFeatureDrawableResource(int, int)
    {
        android.app.Activity r0;
        int i0, i1;
        android.view.Window $r1;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<android.app.Activity: android.view.Window getWindow()>();

        virtualinvoke $r1.<android.view.Window: void setFeatureDrawableResource(int,int)>(i0, i1);

        return;
    }

    public final void setFeatureDrawableUri(int, android.net.Uri)
    {
        android.app.Activity r0;
        int i0;
        android.net.Uri r1;
        android.view.Window $r2;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        r1 := @parameter1: android.net.Uri;

        $r2 = virtualinvoke r0.<android.app.Activity: android.view.Window getWindow()>();

        virtualinvoke $r2.<android.view.Window: void setFeatureDrawableUri(int,android.net.Uri)>(i0, r1);

        return;
    }

    public void setFinishOnTouchOutside(boolean)
    {
        android.app.Activity r0;
        boolean z0;
        android.view.Window $r1;

        r0 := @this: android.app.Activity;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.app.Activity: android.view.Window mWindow>;

        virtualinvoke $r1.<android.view.Window: void setCloseOnTouchOutside(boolean)>(z0);

        return;
    }

    public void setImmersive(boolean)
    {
        android.app.Activity r0;
        boolean z0;
        android.app.IActivityTaskManager $r2;
        android.os.IBinder $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.app.Activity;

        z0 := @parameter0: boolean;

     label1:
        $r2 = staticinvoke <android.app.ActivityTaskManager: android.app.IActivityTaskManager getService()>();

        $r3 = r0.<android.app.Activity: android.os.IBinder mToken>;

        interfaceinvoke $r2.<android.app.IActivityTaskManager: void setImmersive(android.os.IBinder,boolean)>($r3, z0);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setInheritShowWhenLocked(boolean)
    {
        android.app.Activity r0;
        boolean z0;
        android.app.IActivityTaskManager $r2;
        android.os.IBinder $r3;
        android.os.RemoteException $r4;
        java.lang.RuntimeException $r5;

        r0 := @this: android.app.Activity;

        z0 := @parameter0: boolean;

     label1:
        $r2 = staticinvoke <android.app.ActivityTaskManager: android.app.IActivityTaskManager getService()>();

        $r3 = r0.<android.app.Activity: android.os.IBinder mToken>;

        interfaceinvoke $r2.<android.app.IActivityTaskManager: void setInheritShowWhenLocked(android.os.IBinder,boolean)>($r3, z0);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        $r5 = virtualinvoke $r4.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setIntent(android.content.Intent)
    {
        android.app.Activity r0;
        android.content.Intent r1;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.content.Intent;

        r0.<android.app.Activity: android.content.Intent mIntent> = r1;

        return;
    }

    public void setLocusContext(android.content.LocusId, android.os.Bundle)
    {
        android.app.Activity r0;
        android.content.LocusId r1;
        android.os.Bundle r2;
        android.app.IActivityManager $r4;
        android.os.IBinder $r5;
        android.content.ComponentName $r6;
        android.os.RemoteException $r7;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.content.LocusId;

        r2 := @parameter1: android.os.Bundle;

     label1:
        $r4 = staticinvoke <android.app.ActivityManager: android.app.IActivityManager getService()>();

        $r6 = r0.<android.app.Activity: android.content.ComponentName mComponent>;

        $r5 = r0.<android.app.Activity: android.os.IBinder mToken>;

        interfaceinvoke $r4.<android.app.IActivityManager: void setActivityLocusContext(android.content.ComponentName,android.content.LocusId,android.os.IBinder)>($r6, r1, $r5);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        virtualinvoke $r7.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

     label4:
        if r1 == null goto label5;

        specialinvoke r0.<android.app.Activity: void setLocusContextToContentCapture(android.content.LocusId,android.os.Bundle)>(r1, r2);

     label5:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public final void setMediaController(android.media.session.MediaController)
    {
        android.app.Activity r0;
        android.media.session.MediaController r1;
        android.view.Window $r2;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.media.session.MediaController;

        $r2 = virtualinvoke r0.<android.app.Activity: android.view.Window getWindow()>();

        virtualinvoke $r2.<android.view.Window: void setMediaController(android.media.session.MediaController)>(r1);

        return;
    }

    public void setOverlayWithDecorCaptionEnabled(boolean)
    {
        android.app.Activity r0;
        boolean z0;
        android.view.Window $r1;

        r0 := @this: android.app.Activity;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.app.Activity: android.view.Window mWindow>;

        virtualinvoke $r1.<android.view.Window: void setOverlayWithDecorCaptionEnabled(boolean)>(z0);

        return;
    }

    final void setParent(android.app.Activity)
    {
        android.app.Activity r0, r1;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.app.Activity;

        r0.<android.app.Activity: android.app.Activity mParent> = r1;

        return;
    }

    public void setPersistent(boolean)
    {
        android.app.Activity r0;
        boolean z0;

        r0 := @this: android.app.Activity;

        z0 := @parameter0: boolean;

        return;
    }

    public void setPictureInPictureParams(android.app.PictureInPictureParams)
    {
        android.app.Activity r0;
        boolean $z0;
        android.app.IActivityTaskManager $r1;
        android.os.IBinder $r2;
        android.os.RemoteException $r3;
        android.app.PictureInPictureParams r4;
        java.lang.IllegalArgumentException r5;

        r0 := @this: android.app.Activity;

        r4 := @parameter0: android.app.PictureInPictureParams;

     label1:
        $z0 = specialinvoke r0.<android.app.Activity: boolean deviceSupportsPictureInPictureMode()>();

        if $z0 != 0 goto label3;

     label2:
        return;

     label3:
        if r4 == null goto label6;

     label4:
        $r1 = staticinvoke <android.app.ActivityTaskManager: android.app.IActivityTaskManager getService()>();

        $r2 = r0.<android.app.Activity: android.os.IBinder mToken>;

        interfaceinvoke $r1.<android.app.IActivityTaskManager: void setPictureInPictureParams(android.os.IBinder,android.app.PictureInPictureParams)>($r2, r4);

     label5:
        goto label8;

     label6:
        r5 = new java.lang.IllegalArgumentException;

        specialinvoke r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Expected non-null picture-in-picture params");

        throw r5;

     label7:
        $r3 := @caughtexception;

     label8:
        return;

        catch android.os.RemoteException from label1 to label2 with label7;
        catch android.os.RemoteException from label4 to label5 with label7;
        catch android.os.RemoteException from label6 to label7 with label7;
    }

    public final void setProgress(int)
    {
        android.app.Activity r0;
        int i0, $i1;
        android.view.Window $r1;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.app.Activity: android.view.Window getWindow()>();

        $i1 = i0 + 0;

        virtualinvoke $r1.<android.view.Window: void setFeatureInt(int,int)>(2, $i1);

        return;
    }

    public final void setProgressBarIndeterminate(boolean)
    {
        android.app.Activity r0;
        boolean z0;
        android.view.Window r1;
        byte b0;

        r0 := @this: android.app.Activity;

        z0 := @parameter0: boolean;

        r1 = virtualinvoke r0.<android.app.Activity: android.view.Window getWindow()>();

        if z0 == 0 goto label1;

        b0 = -3;

        goto label2;

     label1:
        b0 = -4;

     label2:
        virtualinvoke r1.<android.view.Window: void setFeatureInt(int,int)>(2, b0);

        return;
    }

    public final void setProgressBarIndeterminateVisibility(boolean)
    {
        android.app.Activity r0;
        boolean z0;
        android.view.Window r1;
        byte b0;

        r0 := @this: android.app.Activity;

        z0 := @parameter0: boolean;

        r1 = virtualinvoke r0.<android.app.Activity: android.view.Window getWindow()>();

        if z0 == 0 goto label1;

        b0 = -1;

        goto label2;

     label1:
        b0 = -2;

     label2:
        virtualinvoke r1.<android.view.Window: void setFeatureInt(int,int)>(5, b0);

        return;
    }

    public final void setProgressBarVisibility(boolean)
    {
        android.app.Activity r0;
        boolean z0;
        android.view.Window r1;
        byte b0;

        r0 := @this: android.app.Activity;

        z0 := @parameter0: boolean;

        r1 = virtualinvoke r0.<android.app.Activity: android.view.Window getWindow()>();

        if z0 == 0 goto label1;

        b0 = -1;

        goto label2;

     label1:
        b0 = -2;

     label2:
        virtualinvoke r1.<android.view.Window: void setFeatureInt(int,int)>(2, b0);

        return;
    }

    public void setRequestedOrientation(int)
    {
        android.app.Activity r0, r4;
        int i0;
        android.app.IActivityTaskManager $r1;
        android.os.IBinder $r2;
        android.os.RemoteException $r3;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        r4 = r0.<android.app.Activity: android.app.Activity mParent>;

        if r4 != null goto label5;

     label1:
        $r1 = staticinvoke <android.app.ActivityTaskManager: android.app.IActivityTaskManager getService()>();

        $r2 = r0.<android.app.Activity: android.os.IBinder mToken>;

        interfaceinvoke $r1.<android.app.IActivityTaskManager: void setRequestedOrientation(android.os.IBinder,int)>($r2, i0);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

     label4:
        goto label6;

     label5:
        virtualinvoke r4.<android.app.Activity: void setRequestedOrientation(int)>(i0);

     label6:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public final void setResult(int)
    {
        android.app.Activity r0;
        int i0;
        java.lang.Throwable $r2;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        entermonitor r0;

     label1:
        r0.<android.app.Activity: int mResultCode> = i0;

        r0.<android.app.Activity: android.content.Intent mResultData> = null;

        exitmonitor r0;

     label2:
        return;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public final void setResult(int, android.content.Intent)
    {
        android.app.Activity r0;
        int i0;
        java.lang.Throwable $r1;
        android.content.Intent r2;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        r2 := @parameter1: android.content.Intent;

        entermonitor r0;

     label1:
        r0.<android.app.Activity: int mResultCode> = i0;

        r0.<android.app.Activity: android.content.Intent mResultData> = r2;

        exitmonitor r0;

     label2:
        return;

     label3:
        $r1 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public final void setSecondaryProgress(int)
    {
        android.app.Activity r0;
        int i0, $i1;
        android.view.Window $r1;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.app.Activity: android.view.Window getWindow()>();

        $i1 = i0 + 20000;

        virtualinvoke $r1.<android.view.Window: void setFeatureInt(int,int)>(2, $i1);

        return;
    }

    public void setShowWhenLocked(boolean)
    {
        android.app.Activity r0;
        boolean z0;
        android.app.IActivityTaskManager $r2;
        android.os.IBinder $r3;
        android.os.RemoteException $r4;
        java.lang.RuntimeException $r5;

        r0 := @this: android.app.Activity;

        z0 := @parameter0: boolean;

     label1:
        $r2 = staticinvoke <android.app.ActivityTaskManager: android.app.IActivityTaskManager getService()>();

        $r3 = r0.<android.app.Activity: android.os.IBinder mToken>;

        interfaceinvoke $r2.<android.app.IActivityTaskManager: void setShowWhenLocked(android.os.IBinder,boolean)>($r3, z0);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        $r5 = virtualinvoke $r4.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setTaskDescription(android.app.ActivityManager$TaskDescription)
    {
        android.app.Activity r0;
        android.app.ActivityManager$TaskDescription r1, $r5, r8, $r12;
        int i0;
        java.lang.String $r2;
        android.graphics.Bitmap $r3, $r4, r9;
        android.graphics.drawable.Icon $r6;
        android.os.RemoteException $r7;
        android.app.IActivityTaskManager $r10;
        android.os.IBinder $r11;

        r0 := @this: android.app.Activity;

        r8 := @parameter0: android.app.ActivityManager$TaskDescription;

        r1 = r0.<android.app.Activity: android.app.ActivityManager$TaskDescription mTaskDescription>;

        if r1 == r8 goto label1;

        virtualinvoke r1.<android.app.ActivityManager$TaskDescription: void copyFromPreserveHiddenFields(android.app.ActivityManager$TaskDescription)>(r8);

        $r2 = virtualinvoke r8.<android.app.ActivityManager$TaskDescription: java.lang.String getIconFilename()>();

        if $r2 != null goto label1;

        $r3 = virtualinvoke r8.<android.app.ActivityManager$TaskDescription: android.graphics.Bitmap getIcon()>();

        if $r3 == null goto label1;

        i0 = staticinvoke <android.app.ActivityManager: int getLauncherLargeIconSizeInner(android.content.Context)>(r0);

        $r4 = virtualinvoke r8.<android.app.ActivityManager$TaskDescription: android.graphics.Bitmap getIcon()>();

        r9 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>($r4, i0, i0, 1);

        $r5 = r0.<android.app.Activity: android.app.ActivityManager$TaskDescription mTaskDescription>;

        $r6 = staticinvoke <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithBitmap(android.graphics.Bitmap)>(r9);

        virtualinvoke $r5.<android.app.ActivityManager$TaskDescription: void setIcon(android.graphics.drawable.Icon)>($r6);

     label1:
        $r10 = staticinvoke <android.app.ActivityTaskManager: android.app.IActivityTaskManager getService()>();

        $r11 = r0.<android.app.Activity: android.os.IBinder mToken>;

        $r12 = r0.<android.app.Activity: android.app.ActivityManager$TaskDescription mTaskDescription>;

        interfaceinvoke $r10.<android.app.IActivityTaskManager: void setTaskDescription(android.os.IBinder,android.app.ActivityManager$TaskDescription)>($r11, $r12);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setTheme(int)
    {
        android.app.Activity r0;
        int i0;
        android.view.Window $r1;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        specialinvoke r0.<android.view.ContextThemeWrapper: void setTheme(int)>(i0);

        $r1 = r0.<android.app.Activity: android.view.Window mWindow>;

        virtualinvoke $r1.<android.view.Window: void setTheme(int)>(i0);

        return;
    }

    public void setTitle(int)
    {
        android.app.Activity r0;
        int i0;
        java.lang.CharSequence $r1;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.app.Activity: java.lang.CharSequence getText(int)>(i0);

        virtualinvoke r0.<android.app.Activity: void setTitle(java.lang.CharSequence)>($r1);

        return;
    }

    public void setTitle(java.lang.CharSequence)
    {
        android.app.Activity r0, r2;
        java.lang.CharSequence r1;
        int $i0;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: java.lang.CharSequence;

        r0.<android.app.Activity: java.lang.CharSequence mTitle> = r1;

        $i0 = r0.<android.app.Activity: int mTitleColor>;

        virtualinvoke r0.<android.app.Activity: void onTitleChanged(java.lang.CharSequence,int)>(r1, $i0);

        r2 = r0.<android.app.Activity: android.app.Activity mParent>;

        if r2 == null goto label1;

        virtualinvoke r2.<android.app.Activity: void onChildTitleChanged(android.app.Activity,java.lang.CharSequence)>(r0, r1);

     label1:
        return;
    }

    public void setTitleColor(int)
    {
        android.app.Activity r0;
        int i0;
        java.lang.CharSequence $r1;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        r0.<android.app.Activity: int mTitleColor> = i0;

        $r1 = r0.<android.app.Activity: java.lang.CharSequence mTitle>;

        virtualinvoke r0.<android.app.Activity: void onTitleChanged(java.lang.CharSequence,int)>($r1, i0);

        return;
    }

    public boolean setTranslucent(boolean)
    {
        android.app.Activity r0;
        boolean z0, $z1, $z2;

        r0 := @this: android.app.Activity;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $z2 = virtualinvoke r0.<android.app.Activity: boolean convertToTranslucent(android.app.Activity$TranslucentConversionListener,android.app.ActivityOptions)>(null, null);

        return $z2;

     label1:
        $z1 = specialinvoke r0.<android.app.Activity: boolean convertFromTranslucentInternal()>();

        return $z1;
    }

    public void setTurnScreenOn(boolean)
    {
        android.app.Activity r0;
        boolean z0;
        android.app.IActivityTaskManager $r2;
        android.os.IBinder $r3;
        android.os.RemoteException $r4;
        java.lang.RuntimeException $r5;

        r0 := @this: android.app.Activity;

        z0 := @parameter0: boolean;

     label1:
        $r2 = staticinvoke <android.app.ActivityTaskManager: android.app.IActivityTaskManager getService()>();

        $r3 = r0.<android.app.Activity: android.os.IBinder mToken>;

        interfaceinvoke $r2.<android.app.IActivityTaskManager: void setTurnScreenOn(android.os.IBinder,boolean)>($r3, z0);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        $r5 = virtualinvoke $r4.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setVisible(boolean)
    {
        android.app.Activity r0;
        boolean z0, $z1, $z2;
        android.view.View $r1;

        r0 := @this: android.app.Activity;

        z0 := @parameter0: boolean;

        $z1 = r0.<android.app.Activity: boolean mVisibleFromClient>;

        if $z1 == z0 goto label2;

        r0.<android.app.Activity: boolean mVisibleFromClient> = z0;

        $z2 = r0.<android.app.Activity: boolean mVisibleFromServer>;

        if $z2 == 0 goto label2;

        if z0 == 0 goto label1;

        virtualinvoke r0.<android.app.Activity: void makeVisible()>();

        goto label2;

     label1:
        $r1 = r0.<android.app.Activity: android.view.View mDecor>;

        virtualinvoke $r1.<android.view.View: void setVisibility(int)>(4);

     label2:
        return;
    }

    void setVoiceInteractor(com.android.internal.app.IVoiceInteractor)
    {
        android.app.Activity r0;
        com.android.internal.app.IVoiceInteractor r1;
        android.app.VoiceInteractor$Request[] r2, $r5;
        int i0, i1;
        android.app.VoiceInteractor $r3, $r6, r7;
        android.os.Looper $r4;
        android.app.VoiceInteractor$Request r8;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: com.android.internal.app.IVoiceInteractor;

        r7 = r0.<android.app.Activity: android.app.VoiceInteractor mVoiceInteractor>;

        if r7 == null goto label2;

        $r5 = virtualinvoke r7.<android.app.VoiceInteractor: android.app.VoiceInteractor$Request[] getActiveRequests()>();

        if $r5 == null goto label2;

        $r6 = r0.<android.app.Activity: android.app.VoiceInteractor mVoiceInteractor>;

        r2 = virtualinvoke $r6.<android.app.VoiceInteractor: android.app.VoiceInteractor$Request[] getActiveRequests()>();

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r8 = r2[i1];

        virtualinvoke r8.<android.app.VoiceInteractor$Request: void cancel()>();

        virtualinvoke r8.<android.app.VoiceInteractor$Request: void clear()>();

        i1 = i1 + 1;

        goto label1;

     label2:
        if r1 != null goto label3;

        r0.<android.app.Activity: android.app.VoiceInteractor mVoiceInteractor> = null;

        goto label4;

     label3:
        $r3 = new android.app.VoiceInteractor;

        $r4 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        specialinvoke $r3.<android.app.VoiceInteractor: void <init>(com.android.internal.app.IVoiceInteractor,android.content.Context,android.app.Activity,android.os.Looper)>(r1, r0, r0, $r4);

        r0.<android.app.Activity: android.app.VoiceInteractor mVoiceInteractor> = $r3;

     label4:
        return;
    }

    public final void setVolumeControlStream(int)
    {
        android.app.Activity r0;
        int i0;
        android.view.Window $r1;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.app.Activity: android.view.Window getWindow()>();

        virtualinvoke $r1.<android.view.Window: void setVolumeControlStream(int)>(i0);

        return;
    }

    public void setVrModeEnabled(boolean, android.content.ComponentName) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.app.Activity r0;
        boolean z0;
        android.content.pm.PackageManager$NameNotFoundException r1;
        android.app.IActivityTaskManager $r2;
        android.os.IBinder $r3;
        int $i0;
        java.lang.String $r4;
        android.os.RemoteException $r5;
        android.content.ComponentName r6;

        r0 := @this: android.app.Activity;

        z0 := @parameter0: boolean;

        r6 := @parameter1: android.content.ComponentName;

     label1:
        $r2 = staticinvoke <android.app.ActivityTaskManager: android.app.IActivityTaskManager getService()>();

        $r3 = r0.<android.app.Activity: android.os.IBinder mToken>;

        $i0 = interfaceinvoke $r2.<android.app.IActivityTaskManager: int setVrMode(android.os.IBinder,boolean,android.content.ComponentName)>($r3, z0, r6);

        if $i0 != 0 goto label3;

     label2:
        goto label5;

     label3:
        r1 = new android.content.pm.PackageManager$NameNotFoundException;

        $r4 = virtualinvoke r6.<android.content.ComponentName: java.lang.String flattenToString()>();

        specialinvoke r1.<android.content.pm.PackageManager$NameNotFoundException: void <init>(java.lang.String)>($r4);

        throw r1;

     label4:
        $r5 := @caughtexception;

     label5:
        return;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch android.os.RemoteException from label3 to label4 with label4;
    }

    public boolean shouldShowRequestPermissionRationale(java.lang.String)
    {
        android.app.Activity r0;
        java.lang.String r1;
        android.content.pm.PackageManager $r2;
        boolean $z0;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<android.app.Activity: android.content.pm.PackageManager getPackageManager()>();

        $z0 = virtualinvoke $r2.<android.content.pm.PackageManager: boolean shouldShowRequestPermissionRationale(java.lang.String)>(r1);

        return $z0;
    }

    public boolean shouldUpRecreateTask(android.content.Intent)
    {
        android.app.Activity r0;
        android.content.pm.PackageManager r1;
        android.content.ComponentName r2, r10;
        boolean z0;
        java.lang.String $r3, $r5;
        android.app.IActivityTaskManager $r4;
        android.os.IBinder $r6;
        android.content.pm.PackageManager$NameNotFoundException $r7;
        android.os.RemoteException $r8;
        android.content.Intent r9;
        android.content.pm.ActivityInfo r11;

        r0 := @this: android.app.Activity;

        r9 := @parameter0: android.content.Intent;

     label1:
        r1 = virtualinvoke r0.<android.app.Activity: android.content.pm.PackageManager getPackageManager()>();

        r2 = virtualinvoke r9.<android.content.Intent: android.content.ComponentName getComponent()>();

     label2:
        r10 = r2;

        if r2 != null goto label4;

     label3:
        r10 = virtualinvoke r9.<android.content.Intent: android.content.ComponentName resolveActivity(android.content.pm.PackageManager)>(r1);

     label4:
        r11 = virtualinvoke r1.<android.content.pm.PackageManager: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int)>(r10, 0);

        $r3 = r11.<android.content.pm.ActivityInfo: java.lang.String taskAffinity>;

        if $r3 != null goto label6;

     label5:
        return 0;

     label6:
        $r4 = staticinvoke <android.app.ActivityTaskManager: android.app.IActivityTaskManager getService()>();

        $r6 = r0.<android.app.Activity: android.os.IBinder mToken>;

        $r5 = r11.<android.content.pm.ActivityInfo: java.lang.String taskAffinity>;

        z0 = interfaceinvoke $r4.<android.app.IActivityTaskManager: boolean shouldUpRecreateTask(android.os.IBinder,java.lang.String)>($r6, $r5);

     label7:
        return z0;

     label8:
        $r7 := @caughtexception;

        return 0;

     label9:
        $r8 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label9;
        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label8;
        catch android.os.RemoteException from label3 to label4 with label9;
        catch android.content.pm.PackageManager$NameNotFoundException from label3 to label4 with label8;
        catch android.os.RemoteException from label4 to label5 with label9;
        catch android.content.pm.PackageManager$NameNotFoundException from label4 to label5 with label8;
        catch android.os.RemoteException from label6 to label7 with label9;
        catch android.content.pm.PackageManager$NameNotFoundException from label6 to label7 with label8;
    }

    public boolean showAssist(android.os.Bundle)
    {
        android.app.Activity r0;
        boolean z0;
        android.app.IActivityTaskManager $r1;
        android.os.IBinder $r2;
        android.os.RemoteException $r3;
        android.os.Bundle r4;

        r0 := @this: android.app.Activity;

        r4 := @parameter0: android.os.Bundle;

     label1:
        $r1 = staticinvoke <android.app.ActivityTaskManager: android.app.IActivityTaskManager getService()>();

        $r2 = r0.<android.app.Activity: android.os.IBinder mToken>;

        z0 = interfaceinvoke $r1.<android.app.IActivityTaskManager: boolean showAssistFromActivity(android.os.IBinder,android.os.Bundle)>($r2, r4);

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public final void showDialog(int)
    {
        android.app.Activity r0;
        int i0;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        virtualinvoke r0.<android.app.Activity: boolean showDialog(int,android.os.Bundle)>(i0, null);

        return;
    }

    public final boolean showDialog(int, android.os.Bundle)
    {
        android.app.Activity r0;
        int i0;
        android.os.Bundle r1;
        android.app.Activity$ManagedDialog r2, $r8, r14;
        android.util.SparseArray $r3, $r4, $r12, $r13;
        java.lang.Object $r5;
        android.app.Dialog $r6, $r7, $r10, $r11;
        java.lang.Integer $r9;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Bundle;

        $r3 = r0.<android.app.Activity: android.util.SparseArray mManagedDialogs>;

        if $r3 != null goto label1;

        $r13 = new android.util.SparseArray;

        specialinvoke $r13.<android.util.SparseArray: void <init>()>();

        r0.<android.app.Activity: android.util.SparseArray mManagedDialogs> = $r13;

     label1:
        $r4 = r0.<android.app.Activity: android.util.SparseArray mManagedDialogs>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (android.app.Activity$ManagedDialog) $r5;

        r14 = r2;

        if r2 != null goto label3;

        $r8 = new android.app.Activity$ManagedDialog;

        specialinvoke $r8.<android.app.Activity$ManagedDialog: void <init>(android.app.Activity$1)>(null);

        r14 = $r8;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r10 = specialinvoke r0.<android.app.Activity: android.app.Dialog createDialog(java.lang.Integer,android.os.Bundle,android.os.Bundle)>($r9, null, r1);

        $r8.<android.app.Activity$ManagedDialog: android.app.Dialog mDialog> = $r10;

        $r11 = $r8.<android.app.Activity$ManagedDialog: android.app.Dialog mDialog>;

        if $r11 != null goto label2;

        return 0;

     label2:
        $r12 = r0.<android.app.Activity: android.util.SparseArray mManagedDialogs>;

        virtualinvoke $r12.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, $r8);

     label3:
        r14.<android.app.Activity$ManagedDialog: android.os.Bundle mArgs> = r1;

        $r6 = r14.<android.app.Activity$ManagedDialog: android.app.Dialog mDialog>;

        virtualinvoke r0.<android.app.Activity: void onPrepareDialog(int,android.app.Dialog,android.os.Bundle)>(i0, $r6, r1);

        $r7 = r14.<android.app.Activity$ManagedDialog: android.app.Dialog mDialog>;

        virtualinvoke $r7.<android.app.Dialog: void show()>();

        return 1;
    }

    public void showLockTaskEscapeMessage()
    {
        android.app.Activity r0;
        android.app.IActivityTaskManager $r2;
        android.os.IBinder $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.app.Activity;

     label1:
        $r2 = staticinvoke <android.app.ActivityTaskManager: android.app.IActivityTaskManager getService()>();

        $r3 = r0.<android.app.Activity: android.os.IBinder mToken>;

        interfaceinvoke $r2.<android.app.IActivityTaskManager: void showLockTaskEscapeMessage(android.os.IBinder)>($r3);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.view.ActionMode startActionMode(android.view.ActionMode$Callback)
    {
        android.app.Activity r0;
        android.view.ActionMode$Callback r1;
        android.view.Window $r2;
        android.view.View $r3;
        android.view.ActionMode $r4;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.view.ActionMode$Callback;

        $r2 = r0.<android.app.Activity: android.view.Window mWindow>;

        $r3 = virtualinvoke $r2.<android.view.Window: android.view.View getDecorView()>();

        $r4 = virtualinvoke $r3.<android.view.View: android.view.ActionMode startActionMode(android.view.ActionMode$Callback)>(r1);

        return $r4;
    }

    public android.view.ActionMode startActionMode(android.view.ActionMode$Callback, int)
    {
        android.app.Activity r0;
        android.view.ActionMode$Callback r1;
        int i0;
        android.view.Window $r2;
        android.view.View $r3;
        android.view.ActionMode $r4;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.view.ActionMode$Callback;

        i0 := @parameter1: int;

        $r2 = r0.<android.app.Activity: android.view.Window mWindow>;

        $r3 = virtualinvoke $r2.<android.view.Window: android.view.View getDecorView()>();

        $r4 = virtualinvoke $r3.<android.view.View: android.view.ActionMode startActionMode(android.view.ActionMode$Callback,int)>(r1, i0);

        return $r4;
    }

    public void startActivities(android.content.Intent[])
    {
        android.app.Activity r0;
        android.content.Intent[] r1;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.content.Intent[];

        virtualinvoke r0.<android.app.Activity: void startActivities(android.content.Intent[],android.os.Bundle)>(r1, null);

        return;
    }

    public void startActivities(android.content.Intent[], android.os.Bundle)
    {
        android.app.Activity r0;
        android.content.Intent[] r1;
        android.os.Bundle r2;
        android.app.ActivityThread $r3;
        android.app.Instrumentation $r4;
        android.app.ActivityThread$ApplicationThread $r5;
        android.os.IBinder $r6;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.content.Intent[];

        r2 := @parameter1: android.os.Bundle;

        $r4 = r0.<android.app.Activity: android.app.Instrumentation mInstrumentation>;

        $r3 = r0.<android.app.Activity: android.app.ActivityThread mMainThread>;

        $r5 = virtualinvoke $r3.<android.app.ActivityThread: android.app.ActivityThread$ApplicationThread getApplicationThread()>();

        $r6 = r0.<android.app.Activity: android.os.IBinder mToken>;

        virtualinvoke $r4.<android.app.Instrumentation: void execStartActivities(android.content.Context,android.os.IBinder,android.os.IBinder,android.app.Activity,android.content.Intent[],android.os.Bundle)>(r0, $r5, $r6, r0, r1, r2);

        return;
    }

    public void startActivity(android.content.Intent)
    {
        android.app.Activity r0;
        android.content.Intent r1;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.content.Intent;

        virtualinvoke r0.<android.app.Activity: void startActivity(android.content.Intent,android.os.Bundle)>(r1, null);

        return;
    }

    public void startActivity(android.content.Intent, android.os.Bundle)
    {
        android.app.Activity r0;
        android.content.Intent r1, $r3, $r8, $r9, $r10, r13;
        android.os.Bundle r2;
        boolean $z0, $z1, $z2;
        java.lang.String $r4, $r7;
        android.content.pm.PackageManager $r5;
        android.content.ComponentName $r6;
        android.os.IBinder r14;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: android.os.Bundle;

        r13 = r0.<android.app.Activity: android.content.Intent mIntent>;

        if r13 == null goto label1;

        $z0 = virtualinvoke r13.<android.content.Intent: boolean hasExtra(java.lang.String)>("android.view.autofill.extra.RESTORE_SESSION_TOKEN");

        if $z0 == 0 goto label1;

        $r3 = r0.<android.app.Activity: android.content.Intent mIntent>;

        $z1 = virtualinvoke $r3.<android.content.Intent: boolean hasExtra(java.lang.String)>("android.view.autofill.extra.RESTORE_CROSS_ACTIVITY");

        if $z1 == 0 goto label1;

        $r4 = virtualinvoke r0.<android.app.Activity: java.lang.String getPackageName()>();

        $r5 = virtualinvoke r0.<android.app.Activity: android.content.pm.PackageManager getPackageManager()>();

        $r6 = virtualinvoke r1.<android.content.Intent: android.content.ComponentName resolveActivity(android.content.pm.PackageManager)>($r5);

        $r7 = virtualinvoke $r6.<android.content.ComponentName: java.lang.String getPackageName()>();

        $z2 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r4, $r7);

        if $z2 == 0 goto label1;

        $r8 = r0.<android.app.Activity: android.content.Intent mIntent>;

        r14 = virtualinvoke $r8.<android.content.Intent: android.os.IBinder getIBinderExtra(java.lang.String)>("android.view.autofill.extra.RESTORE_SESSION_TOKEN");

        $r9 = r0.<android.app.Activity: android.content.Intent mIntent>;

        virtualinvoke $r9.<android.content.Intent: void removeExtra(java.lang.String)>("android.view.autofill.extra.RESTORE_SESSION_TOKEN");

        $r10 = r0.<android.app.Activity: android.content.Intent mIntent>;

        virtualinvoke $r10.<android.content.Intent: void removeExtra(java.lang.String)>("android.view.autofill.extra.RESTORE_CROSS_ACTIVITY");

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.IBinder)>("android.view.autofill.extra.RESTORE_SESSION_TOKEN", r14);

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("android.view.autofill.extra.RESTORE_CROSS_ACTIVITY", 1);

     label1:
        if r2 == null goto label2;

        virtualinvoke r0.<android.app.Activity: void startActivityForResult(android.content.Intent,int,android.os.Bundle)>(r1, -1, r2);

        goto label3;

     label2:
        virtualinvoke r0.<android.app.Activity: void startActivityForResult(android.content.Intent,int)>(r1, -1);

     label3:
        return;
    }

    public void startActivityAsCaller(android.content.Intent, android.os.Bundle, android.os.IBinder, boolean, int)
    {
        android.app.Activity r0, $r2;
        android.os.IBinder r1, $r7, $r9;
        boolean z0;
        int i0, $i1;
        java.lang.RuntimeException $r3;
        android.app.ActivityThread $r4, $r8;
        android.app.Instrumentation $r5;
        android.app.ActivityThread$ApplicationThread $r6;
        java.lang.String $r10;
        android.content.Intent $r11, r12;
        android.os.Bundle r13, r14;
        android.app.Instrumentation$ActivityResult r15;

        r0 := @this: android.app.Activity;

        r12 := @parameter0: android.content.Intent;

        r13 := @parameter1: android.os.Bundle;

        r1 := @parameter2: android.os.IBinder;

        z0 := @parameter3: boolean;

        i0 := @parameter4: int;

        $r2 = r0.<android.app.Activity: android.app.Activity mParent>;

        if $r2 != null goto label2;

        r14 = specialinvoke r0.<android.app.Activity: android.os.Bundle transferSpringboardActivityOptions(android.os.Bundle)>(r13);

        $r5 = r0.<android.app.Activity: android.app.Instrumentation mInstrumentation>;

        $r4 = r0.<android.app.Activity: android.app.ActivityThread mMainThread>;

        $r6 = virtualinvoke $r4.<android.app.ActivityThread: android.app.ActivityThread$ApplicationThread getApplicationThread()>();

        $r7 = r0.<android.app.Activity: android.os.IBinder mToken>;

        r15 = virtualinvoke $r5.<android.app.Instrumentation: android.app.Instrumentation$ActivityResult execStartActivityAsCaller(android.content.Context,android.os.IBinder,android.os.IBinder,android.app.Activity,android.content.Intent,int,android.os.Bundle,android.os.IBinder,boolean,int)>(r0, $r6, $r7, r0, r12, -1, r14, r1, z0, i0);

        if r15 == null goto label1;

        $r8 = r0.<android.app.Activity: android.app.ActivityThread mMainThread>;

        $r9 = r0.<android.app.Activity: android.os.IBinder mToken>;

        $r10 = r0.<android.app.Activity: java.lang.String mEmbeddedID>;

        $i1 = virtualinvoke r15.<android.app.Instrumentation$ActivityResult: int getResultCode()>();

        $r11 = virtualinvoke r15.<android.app.Instrumentation$ActivityResult: android.content.Intent getResultData()>();

        virtualinvoke $r8.<android.app.ActivityThread: void sendActivityResult(android.os.IBinder,java.lang.String,int,int,android.content.Intent)>($r9, $r10, -1, $i1, $r11);

     label1:
        specialinvoke r0.<android.app.Activity: void cancelInputsAndStartExitTransition(android.os.Bundle)>(r14);

        return;

     label2:
        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Can\'t be called from a child");

        throw $r3;
    }

    public void startActivityAsUser(android.content.Intent, android.os.Bundle, android.os.UserHandle)
    {
        android.app.Activity r0, $r2;
        android.os.UserHandle r1;
        java.lang.RuntimeException $r3;
        android.app.ActivityThread $r4, $r9;
        android.app.Instrumentation $r5;
        android.app.ActivityThread$ApplicationThread $r6;
        java.lang.String $r7, $r11;
        android.os.IBinder $r8, $r10;
        int $i0;
        android.content.Intent $r12, r13;
        android.os.Bundle r14, r15;
        android.app.Instrumentation$ActivityResult r16;

        r0 := @this: android.app.Activity;

        r13 := @parameter0: android.content.Intent;

        r14 := @parameter1: android.os.Bundle;

        r1 := @parameter2: android.os.UserHandle;

        $r2 = r0.<android.app.Activity: android.app.Activity mParent>;

        if $r2 != null goto label2;

        r15 = specialinvoke r0.<android.app.Activity: android.os.Bundle transferSpringboardActivityOptions(android.os.Bundle)>(r14);

        $r5 = r0.<android.app.Activity: android.app.Instrumentation mInstrumentation>;

        $r4 = r0.<android.app.Activity: android.app.ActivityThread mMainThread>;

        $r6 = virtualinvoke $r4.<android.app.ActivityThread: android.app.ActivityThread$ApplicationThread getApplicationThread()>();

        $r8 = r0.<android.app.Activity: android.os.IBinder mToken>;

        $r7 = r0.<android.app.Activity: java.lang.String mEmbeddedID>;

        r16 = virtualinvoke $r5.<android.app.Instrumentation: android.app.Instrumentation$ActivityResult execStartActivity(android.content.Context,android.os.IBinder,android.os.IBinder,java.lang.String,android.content.Intent,int,android.os.Bundle,android.os.UserHandle)>(r0, $r6, $r8, $r7, r13, -1, r15, r1);

        if r16 == null goto label1;

        $r9 = r0.<android.app.Activity: android.app.ActivityThread mMainThread>;

        $r10 = r0.<android.app.Activity: android.os.IBinder mToken>;

        $r11 = r0.<android.app.Activity: java.lang.String mEmbeddedID>;

        $i0 = virtualinvoke r16.<android.app.Instrumentation$ActivityResult: int getResultCode()>();

        $r12 = virtualinvoke r16.<android.app.Instrumentation$ActivityResult: android.content.Intent getResultData()>();

        virtualinvoke $r9.<android.app.ActivityThread: void sendActivityResult(android.os.IBinder,java.lang.String,int,int,android.content.Intent)>($r10, $r11, -1, $i0, $r12);

     label1:
        specialinvoke r0.<android.app.Activity: void cancelInputsAndStartExitTransition(android.os.Bundle)>(r15);

        return;

     label2:
        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Can\'t be called from a child");

        throw $r3;
    }

    public void startActivityAsUser(android.content.Intent, android.os.UserHandle)
    {
        android.app.Activity r0;
        android.content.Intent r1;
        android.os.UserHandle r2;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: android.os.UserHandle;

        virtualinvoke r0.<android.app.Activity: void startActivityAsUser(android.content.Intent,android.os.Bundle,android.os.UserHandle)>(r1, null, r2);

        return;
    }

    public void startActivityForResult(android.content.Intent, int)
    {
        android.app.Activity r0;
        android.content.Intent r1;
        int i0;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.content.Intent;

        i0 := @parameter1: int;

        virtualinvoke r0.<android.app.Activity: void startActivityForResult(android.content.Intent,int,android.os.Bundle)>(r1, i0, null);

        return;
    }

    public void startActivityForResult(android.content.Intent, int, android.os.Bundle)
    {
        android.app.Activity r0, r1;
        int i0, $i1;
        android.app.ActivityThread $r2, $r6;
        android.app.Instrumentation $r3;
        android.app.ActivityThread$ApplicationThread $r4;
        android.os.IBinder $r5, $r7;
        java.lang.String $r8;
        android.content.Intent $r9, r10;
        android.os.Bundle r11, r12;
        android.app.Instrumentation$ActivityResult r13;

        r0 := @this: android.app.Activity;

        r10 := @parameter0: android.content.Intent;

        i0 := @parameter1: int;

        r11 := @parameter2: android.os.Bundle;

        r1 = r0.<android.app.Activity: android.app.Activity mParent>;

        if r1 != null goto label3;

        r12 = specialinvoke r0.<android.app.Activity: android.os.Bundle transferSpringboardActivityOptions(android.os.Bundle)>(r11);

        $r3 = r0.<android.app.Activity: android.app.Instrumentation mInstrumentation>;

        $r2 = r0.<android.app.Activity: android.app.ActivityThread mMainThread>;

        $r4 = virtualinvoke $r2.<android.app.ActivityThread: android.app.ActivityThread$ApplicationThread getApplicationThread()>();

        $r5 = r0.<android.app.Activity: android.os.IBinder mToken>;

        r13 = virtualinvoke $r3.<android.app.Instrumentation: android.app.Instrumentation$ActivityResult execStartActivity(android.content.Context,android.os.IBinder,android.os.IBinder,android.app.Activity,android.content.Intent,int,android.os.Bundle)>(r0, $r4, $r5, r0, r10, i0, r12);

        if r13 == null goto label1;

        $r6 = r0.<android.app.Activity: android.app.ActivityThread mMainThread>;

        $r7 = r0.<android.app.Activity: android.os.IBinder mToken>;

        $r8 = r0.<android.app.Activity: java.lang.String mEmbeddedID>;

        $i1 = virtualinvoke r13.<android.app.Instrumentation$ActivityResult: int getResultCode()>();

        $r9 = virtualinvoke r13.<android.app.Instrumentation$ActivityResult: android.content.Intent getResultData()>();

        virtualinvoke $r6.<android.app.ActivityThread: void sendActivityResult(android.os.IBinder,java.lang.String,int,int,android.content.Intent)>($r7, $r8, i0, $i1, $r9);

     label1:
        if i0 < 0 goto label2;

        r0.<android.app.Activity: boolean mStartedActivity> = 1;

     label2:
        specialinvoke r0.<android.app.Activity: void cancelInputsAndStartExitTransition(android.os.Bundle)>(r12);

        goto label5;

     label3:
        if r11 == null goto label4;

        virtualinvoke r1.<android.app.Activity: void startActivityFromChild(android.app.Activity,android.content.Intent,int,android.os.Bundle)>(r0, r10, i0, r11);

        goto label5;

     label4:
        virtualinvoke r1.<android.app.Activity: void startActivityFromChild(android.app.Activity,android.content.Intent,int)>(r0, r10, i0);

     label5:
        return;
    }

    public void startActivityForResult(java.lang.String, android.content.Intent, int, android.os.Bundle)
    {
        android.app.Activity r0;
        java.lang.String r1;
        int i0, $i1;
        android.net.Uri r2;
        android.app.ActivityThread $r3, $r7;
        android.app.Instrumentation $r4;
        android.app.ActivityThread$ApplicationThread $r5;
        android.os.IBinder $r6, $r8;
        android.content.Intent $r9, r11;
        android.os.Bundle r12, r13;
        android.app.Instrumentation$ActivityResult r14;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: java.lang.String;

        r11 := @parameter1: android.content.Intent;

        i0 := @parameter2: int;

        r12 := @parameter3: android.os.Bundle;

        r2 = virtualinvoke r0.<android.app.Activity: android.net.Uri onProvideReferrer()>();

        if r2 == null goto label1;

        virtualinvoke r11.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("android.intent.extra.REFERRER", r2);

     label1:
        r13 = specialinvoke r0.<android.app.Activity: android.os.Bundle transferSpringboardActivityOptions(android.os.Bundle)>(r12);

        $r4 = r0.<android.app.Activity: android.app.Instrumentation mInstrumentation>;

        $r3 = r0.<android.app.Activity: android.app.ActivityThread mMainThread>;

        $r5 = virtualinvoke $r3.<android.app.ActivityThread: android.app.ActivityThread$ApplicationThread getApplicationThread()>();

        $r6 = r0.<android.app.Activity: android.os.IBinder mToken>;

        r14 = virtualinvoke $r4.<android.app.Instrumentation: android.app.Instrumentation$ActivityResult execStartActivity(android.content.Context,android.os.IBinder,android.os.IBinder,java.lang.String,android.content.Intent,int,android.os.Bundle)>(r0, $r5, $r6, r1, r11, i0, r13);

        if r14 == null goto label2;

        $r7 = r0.<android.app.Activity: android.app.ActivityThread mMainThread>;

        $r8 = r0.<android.app.Activity: android.os.IBinder mToken>;

        $i1 = virtualinvoke r14.<android.app.Instrumentation$ActivityResult: int getResultCode()>();

        $r9 = virtualinvoke r14.<android.app.Instrumentation$ActivityResult: android.content.Intent getResultData()>();

        virtualinvoke $r7.<android.app.ActivityThread: void sendActivityResult(android.os.IBinder,java.lang.String,int,int,android.content.Intent)>($r8, r1, i0, $i1, $r9);

     label2:
        specialinvoke r0.<android.app.Activity: void cancelInputsAndStartExitTransition(android.os.Bundle)>(r13);

        return;
    }

    public void startActivityForResultAsUser(android.content.Intent, int, android.os.Bundle, android.os.UserHandle)
    {
        android.app.Activity r0;
        android.content.Intent r1;
        int i0;
        android.os.Bundle r2;
        android.os.UserHandle r3;
        java.lang.String $r4;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.content.Intent;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.Bundle;

        r3 := @parameter3: android.os.UserHandle;

        $r4 = r0.<android.app.Activity: java.lang.String mEmbeddedID>;

        virtualinvoke r0.<android.app.Activity: void startActivityForResultAsUser(android.content.Intent,java.lang.String,int,android.os.Bundle,android.os.UserHandle)>(r1, $r4, i0, r2, r3);

        return;
    }

    public void startActivityForResultAsUser(android.content.Intent, int, android.os.UserHandle)
    {
        android.app.Activity r0;
        android.content.Intent r1;
        int i0;
        android.os.UserHandle r2;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.content.Intent;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.UserHandle;

        virtualinvoke r0.<android.app.Activity: void startActivityForResultAsUser(android.content.Intent,int,android.os.Bundle,android.os.UserHandle)>(r1, i0, null, r2);

        return;
    }

    public void startActivityForResultAsUser(android.content.Intent, java.lang.String, int, android.os.Bundle, android.os.UserHandle)
    {
        android.app.Activity r0, $r3;
        java.lang.String r1, $r11;
        int i0, $i1;
        android.os.UserHandle r2;
        java.lang.RuntimeException $r4;
        android.app.ActivityThread $r5, $r9;
        android.app.Instrumentation $r6;
        android.app.ActivityThread$ApplicationThread $r7;
        android.os.IBinder $r8, $r10;
        android.content.Intent $r12, r13;
        android.os.Bundle r14, r15;
        android.app.Instrumentation$ActivityResult r16;

        r0 := @this: android.app.Activity;

        r13 := @parameter0: android.content.Intent;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r14 := @parameter3: android.os.Bundle;

        r2 := @parameter4: android.os.UserHandle;

        $r3 = r0.<android.app.Activity: android.app.Activity mParent>;

        if $r3 != null goto label3;

        r15 = specialinvoke r0.<android.app.Activity: android.os.Bundle transferSpringboardActivityOptions(android.os.Bundle)>(r14);

        $r6 = r0.<android.app.Activity: android.app.Instrumentation mInstrumentation>;

        $r5 = r0.<android.app.Activity: android.app.ActivityThread mMainThread>;

        $r7 = virtualinvoke $r5.<android.app.ActivityThread: android.app.ActivityThread$ApplicationThread getApplicationThread()>();

        $r8 = r0.<android.app.Activity: android.os.IBinder mToken>;

        r16 = virtualinvoke $r6.<android.app.Instrumentation: android.app.Instrumentation$ActivityResult execStartActivity(android.content.Context,android.os.IBinder,android.os.IBinder,java.lang.String,android.content.Intent,int,android.os.Bundle,android.os.UserHandle)>(r0, $r7, $r8, r1, r13, i0, r15, r2);

        if r16 == null goto label1;

        $r9 = r0.<android.app.Activity: android.app.ActivityThread mMainThread>;

        $r10 = r0.<android.app.Activity: android.os.IBinder mToken>;

        $r11 = r0.<android.app.Activity: java.lang.String mEmbeddedID>;

        $i1 = virtualinvoke r16.<android.app.Instrumentation$ActivityResult: int getResultCode()>();

        $r12 = virtualinvoke r16.<android.app.Instrumentation$ActivityResult: android.content.Intent getResultData()>();

        virtualinvoke $r9.<android.app.ActivityThread: void sendActivityResult(android.os.IBinder,java.lang.String,int,int,android.content.Intent)>($r10, $r11, i0, $i1, $r12);

     label1:
        if i0 < 0 goto label2;

        r0.<android.app.Activity: boolean mStartedActivity> = 1;

     label2:
        specialinvoke r0.<android.app.Activity: void cancelInputsAndStartExitTransition(android.os.Bundle)>(r15);

        return;

     label3:
        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("Can\'t be called from a child");

        throw $r4;
    }

    public void startActivityFromChild(android.app.Activity, android.content.Intent, int)
    {
        android.app.Activity r0, r1;
        android.content.Intent r2;
        int i0;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.app.Activity;

        r2 := @parameter1: android.content.Intent;

        i0 := @parameter2: int;

        virtualinvoke r0.<android.app.Activity: void startActivityFromChild(android.app.Activity,android.content.Intent,int,android.os.Bundle)>(r1, r2, i0, null);

        return;
    }

    public void startActivityFromChild(android.app.Activity, android.content.Intent, int, android.os.Bundle)
    {
        android.app.Activity r0, r1;
        int i0, $i1;
        android.app.ActivityThread $r2, $r6;
        android.app.Instrumentation $r3;
        android.app.ActivityThread$ApplicationThread $r4;
        android.os.IBinder $r5, $r7;
        java.lang.String $r8;
        android.content.Intent $r9, r10;
        android.os.Bundle r11, r12;
        android.app.Instrumentation$ActivityResult r13;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.app.Activity;

        r10 := @parameter1: android.content.Intent;

        i0 := @parameter2: int;

        r11 := @parameter3: android.os.Bundle;

        r12 = specialinvoke r0.<android.app.Activity: android.os.Bundle transferSpringboardActivityOptions(android.os.Bundle)>(r11);

        $r3 = r0.<android.app.Activity: android.app.Instrumentation mInstrumentation>;

        $r2 = r0.<android.app.Activity: android.app.ActivityThread mMainThread>;

        $r4 = virtualinvoke $r2.<android.app.ActivityThread: android.app.ActivityThread$ApplicationThread getApplicationThread()>();

        $r5 = r0.<android.app.Activity: android.os.IBinder mToken>;

        r13 = virtualinvoke $r3.<android.app.Instrumentation: android.app.Instrumentation$ActivityResult execStartActivity(android.content.Context,android.os.IBinder,android.os.IBinder,android.app.Activity,android.content.Intent,int,android.os.Bundle)>(r0, $r4, $r5, r1, r10, i0, r12);

        if r13 == null goto label1;

        $r6 = r0.<android.app.Activity: android.app.ActivityThread mMainThread>;

        $r7 = r0.<android.app.Activity: android.os.IBinder mToken>;

        $r8 = r1.<android.app.Activity: java.lang.String mEmbeddedID>;

        $i1 = virtualinvoke r13.<android.app.Instrumentation$ActivityResult: int getResultCode()>();

        $r9 = virtualinvoke r13.<android.app.Instrumentation$ActivityResult: android.content.Intent getResultData()>();

        virtualinvoke $r6.<android.app.ActivityThread: void sendActivityResult(android.os.IBinder,java.lang.String,int,int,android.content.Intent)>($r7, $r8, i0, $i1, $r9);

     label1:
        specialinvoke r0.<android.app.Activity: void cancelInputsAndStartExitTransition(android.os.Bundle)>(r12);

        return;
    }

    public void startActivityFromFragment(android.app.Fragment, android.content.Intent, int)
    {
        android.app.Activity r0;
        android.app.Fragment r1;
        android.content.Intent r2;
        int i0;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.app.Fragment;

        r2 := @parameter1: android.content.Intent;

        i0 := @parameter2: int;

        virtualinvoke r0.<android.app.Activity: void startActivityFromFragment(android.app.Fragment,android.content.Intent,int,android.os.Bundle)>(r1, r2, i0, null);

        return;
    }

    public void startActivityFromFragment(android.app.Fragment, android.content.Intent, int, android.os.Bundle)
    {
        android.app.Activity r0;
        android.app.Fragment r1;
        android.content.Intent r2;
        int i0;
        android.os.Bundle r3;
        java.lang.String $r4;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.app.Fragment;

        r2 := @parameter1: android.content.Intent;

        i0 := @parameter2: int;

        r3 := @parameter3: android.os.Bundle;

        $r4 = r1.<android.app.Fragment: java.lang.String mWho>;

        virtualinvoke r0.<android.app.Activity: void startActivityForResult(java.lang.String,android.content.Intent,int,android.os.Bundle)>($r4, r2, i0, r3);

        return;
    }

    public boolean startActivityIfNeeded(android.content.Intent, int)
    {
        android.app.Activity r0;
        android.content.Intent r1;
        int i0;
        boolean $z0;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.content.Intent;

        i0 := @parameter1: int;

        $z0 = virtualinvoke r0.<android.app.Activity: boolean startActivityIfNeeded(android.content.Intent,int,android.os.Bundle)>(r1, i0, null);

        return $z0;
    }

    public boolean startActivityIfNeeded(android.content.Intent, int, android.os.Bundle)
    {
        android.app.Activity r0, $r3;
        android.content.Intent r1;
        int i0, i1, i2;
        android.net.Uri r2;
        java.lang.UnsupportedOperationException $r4;
        android.app.IActivityTaskManager $r5;
        android.app.ActivityThread $r6;
        android.app.ActivityThread$ApplicationThread $r7;
        java.lang.String $r8, $r9, $r11, $r12;
        android.content.ContentResolver $r10;
        android.os.IBinder $r13;
        android.os.RemoteException $r15;
        android.os.Bundle r16;
        boolean z1;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.content.Intent;

        i0 := @parameter1: int;

        r16 := @parameter2: android.os.Bundle;

        $r3 = r0.<android.app.Activity: android.app.Activity mParent>;

        if $r3 != null goto label11;

        i2 = 1;

     label01:
        r2 = virtualinvoke r0.<android.app.Activity: android.net.Uri onProvideReferrer()>();

     label02:
        if r2 == null goto label04;

     label03:
        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("android.intent.extra.REFERRER", r2);

     label04:
        virtualinvoke r1.<android.content.Intent: boolean migrateExtraStreamToClipData(android.content.Context)>(r0);

        virtualinvoke r1.<android.content.Intent: void prepareToLeaveProcess(android.content.Context)>(r0);

        $r5 = staticinvoke <android.app.ActivityTaskManager: android.app.IActivityTaskManager getService()>();

        $r6 = r0.<android.app.Activity: android.app.ActivityThread mMainThread>;

        $r7 = virtualinvoke $r6.<android.app.ActivityThread: android.app.ActivityThread$ApplicationThread getApplicationThread()>();

        $r8 = virtualinvoke r0.<android.app.Activity: java.lang.String getBasePackageName()>();

        $r9 = virtualinvoke r0.<android.app.Activity: java.lang.String getAttributionTag()>();

        $r10 = virtualinvoke r0.<android.app.Activity: android.content.ContentResolver getContentResolver()>();

        $r11 = virtualinvoke r1.<android.content.Intent: java.lang.String resolveTypeIfNeeded(android.content.ContentResolver)>($r10);

        $r13 = r0.<android.app.Activity: android.os.IBinder mToken>;

        $r12 = r0.<android.app.Activity: java.lang.String mEmbeddedID>;

        i1 = interfaceinvoke $r5.<android.app.IActivityTaskManager: int startActivity(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle)>($r7, $r8, $r9, r1, $r11, $r13, $r12, i0, 1, null, r16);

     label05:
        i2 = i1;

        goto label07;

     label06:
        $r15 := @caughtexception;

     label07:
        staticinvoke <android.app.Instrumentation: void checkStartActivityResult(int,java.lang.Object)>(i2, r1);

        z1 = 1;

        if i0 < 0 goto label08;

        r0.<android.app.Activity: boolean mStartedActivity> = 1;

     label08:
        if i2 == 1 goto label09;

        goto label10;

     label09:
        z1 = 0;

     label10:
        return z1;

     label11:
        $r4 = new java.lang.UnsupportedOperationException;

        specialinvoke $r4.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("startActivityIfNeeded can only be called from a top-level activity");

        throw $r4;

        catch android.os.RemoteException from label01 to label02 with label06;
        catch android.os.RemoteException from label03 to label04 with label06;
        catch android.os.RemoteException from label04 to label05 with label06;
    }

    public void startIntentSender(android.content.IntentSender, android.content.Intent, int, int, int) throws android.content.IntentSender$SendIntentException
    {
        android.app.Activity r0;
        android.content.IntentSender r1;
        android.content.Intent r2;
        int i0, i1, i2;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.content.IntentSender;

        r2 := @parameter1: android.content.Intent;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        virtualinvoke r0.<android.app.Activity: void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int,android.os.Bundle)>(r1, r2, i0, i1, i2, null);

        return;
    }

    public void startIntentSender(android.content.IntentSender, android.content.Intent, int, int, int, android.os.Bundle) throws android.content.IntentSender$SendIntentException
    {
        android.app.Activity r0;
        android.content.IntentSender r1;
        android.content.Intent r2;
        int i0, i1, i2;
        android.os.Bundle r3;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.content.IntentSender;

        r2 := @parameter1: android.content.Intent;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        r3 := @parameter5: android.os.Bundle;

        if r3 == null goto label1;

        virtualinvoke r0.<android.app.Activity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)>(r1, -1, r2, i0, i1, i2, r3);

        goto label2;

     label1:
        virtualinvoke r0.<android.app.Activity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)>(r1, -1, r2, i0, i1, i2);

     label2:
        return;
    }

    public void startIntentSenderForResult(android.content.IntentSender, int, android.content.Intent, int, int, int) throws android.content.IntentSender$SendIntentException
    {
        android.app.Activity r0;
        android.content.IntentSender r1;
        int i0, i1, i2, i3;
        android.content.Intent r2;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.content.IntentSender;

        i0 := @parameter1: int;

        r2 := @parameter2: android.content.Intent;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        virtualinvoke r0.<android.app.Activity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)>(r1, i0, r2, i1, i2, i3, null);

        return;
    }

    public void startIntentSenderForResult(android.content.IntentSender, int, android.content.Intent, int, int, int, android.os.Bundle) throws android.content.IntentSender$SendIntentException
    {
        android.app.Activity r0, r4;
        android.content.IntentSender r1;
        int i0, i1, i2, i3;
        android.content.Intent r2;
        android.os.Bundle r3;
        java.lang.String $r5;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.content.IntentSender;

        i0 := @parameter1: int;

        r2 := @parameter2: android.content.Intent;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        r3 := @parameter6: android.os.Bundle;

        r4 = r0.<android.app.Activity: android.app.Activity mParent>;

        if r4 != null goto label1;

        $r5 = r0.<android.app.Activity: java.lang.String mEmbeddedID>;

        specialinvoke r0.<android.app.Activity: void startIntentSenderForResultInner(android.content.IntentSender,java.lang.String,int,android.content.Intent,int,int,android.os.Bundle)>(r1, $r5, i0, r2, i1, i2, r3);

        goto label3;

     label1:
        if r3 == null goto label2;

        virtualinvoke r4.<android.app.Activity: void startIntentSenderFromChild(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)>(r0, r1, i0, r2, i1, i2, i3, r3);

        goto label3;

     label2:
        virtualinvoke r4.<android.app.Activity: void startIntentSenderFromChild(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int)>(r0, r1, i0, r2, i1, i2, i3);

     label3:
        return;
    }

    public void startIntentSenderFromChild(android.app.Activity, android.content.IntentSender, int, android.content.Intent, int, int, int) throws android.content.IntentSender$SendIntentException
    {
        android.app.Activity r0, r1;
        android.content.IntentSender r2;
        int i0, i1, i2, i3;
        android.content.Intent r3;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.app.Activity;

        r2 := @parameter1: android.content.IntentSender;

        i0 := @parameter2: int;

        r3 := @parameter3: android.content.Intent;

        i1 := @parameter4: int;

        i2 := @parameter5: int;

        i3 := @parameter6: int;

        virtualinvoke r0.<android.app.Activity: void startIntentSenderFromChild(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)>(r1, r2, i0, r3, i1, i2, i3, null);

        return;
    }

    public void startIntentSenderFromChild(android.app.Activity, android.content.IntentSender, int, android.content.Intent, int, int, int, android.os.Bundle) throws android.content.IntentSender$SendIntentException
    {
        android.app.Activity r0, r1;
        android.content.IntentSender r2;
        int i0, i1, i2, i3;
        android.content.Intent r3;
        android.os.Bundle r4;
        java.lang.String $r5;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.app.Activity;

        r2 := @parameter1: android.content.IntentSender;

        i0 := @parameter2: int;

        r3 := @parameter3: android.content.Intent;

        i1 := @parameter4: int;

        i2 := @parameter5: int;

        i3 := @parameter6: int;

        r4 := @parameter7: android.os.Bundle;

        $r5 = r1.<android.app.Activity: java.lang.String mEmbeddedID>;

        specialinvoke r0.<android.app.Activity: void startIntentSenderForResultInner(android.content.IntentSender,java.lang.String,int,android.content.Intent,int,int,android.os.Bundle)>(r2, $r5, i0, r3, i1, i2, r4);

        return;
    }

    public void startLocalVoiceInteraction(android.os.Bundle)
    {
        android.app.Activity r0;
        android.app.IActivityTaskManager $r1;
        android.os.IBinder $r2;
        android.os.RemoteException $r3;
        android.os.Bundle r4;

        r0 := @this: android.app.Activity;

        r4 := @parameter0: android.os.Bundle;

     label1:
        $r1 = staticinvoke <android.app.ActivityTaskManager: android.app.IActivityTaskManager getService()>();

        $r2 = r0.<android.app.Activity: android.os.IBinder mToken>;

        interfaceinvoke $r1.<android.app.IActivityTaskManager: void startLocalVoiceInteraction(android.os.IBinder,android.os.Bundle)>($r2, r4);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void startLockTask()
    {
        android.app.Activity r0;
        android.app.IActivityTaskManager $r2;
        android.os.IBinder $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.app.Activity;

     label1:
        $r2 = staticinvoke <android.app.ActivityTaskManager: android.app.IActivityTaskManager getService()>();

        $r3 = r0.<android.app.Activity: android.os.IBinder mToken>;

        interfaceinvoke $r2.<android.app.IActivityTaskManager: void startLockTaskModeByToken(android.os.IBinder)>($r3);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void startManagingCursor(android.database.Cursor)
    {
        android.app.Activity r0;
        java.util.ArrayList r1, r2;
        android.app.Activity$ManagedCursor r3;
        java.lang.Throwable $r4;
        android.database.Cursor r5;

        r0 := @this: android.app.Activity;

        r5 := @parameter0: android.database.Cursor;

        r1 = r0.<android.app.Activity: java.util.ArrayList mManagedCursors>;

        entermonitor r1;

     label1:
        r2 = r0.<android.app.Activity: java.util.ArrayList mManagedCursors>;

        r3 = new android.app.Activity$ManagedCursor;

        specialinvoke r3.<android.app.Activity$ManagedCursor: void <init>(android.database.Cursor)>(r5);

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean startNextMatchingActivity(android.content.Intent)
    {
        android.app.Activity r0;
        android.content.Intent r1;
        boolean $z0;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.content.Intent;

        $z0 = virtualinvoke r0.<android.app.Activity: boolean startNextMatchingActivity(android.content.Intent,android.os.Bundle)>(r1, null);

        return $z0;
    }

    public boolean startNextMatchingActivity(android.content.Intent, android.os.Bundle)
    {
        android.app.Activity r0, $r2;
        android.os.Bundle r1;
        boolean z0;
        java.lang.UnsupportedOperationException $r3;
        android.app.IActivityTaskManager $r4;
        android.os.IBinder $r5;
        android.os.RemoteException $r6;
        android.content.Intent r7;

        r0 := @this: android.app.Activity;

        r7 := @parameter0: android.content.Intent;

        r1 := @parameter1: android.os.Bundle;

        $r2 = r0.<android.app.Activity: android.app.Activity mParent>;

        if $r2 != null goto label4;

     label1:
        virtualinvoke r7.<android.content.Intent: boolean migrateExtraStreamToClipData(android.content.Context)>(r0);

        virtualinvoke r7.<android.content.Intent: void prepareToLeaveProcess(android.content.Context)>(r0);

        $r4 = staticinvoke <android.app.ActivityTaskManager: android.app.IActivityTaskManager getService()>();

        $r5 = r0.<android.app.Activity: android.os.IBinder mToken>;

        z0 = interfaceinvoke $r4.<android.app.IActivityTaskManager: boolean startNextMatchingActivity(android.os.IBinder,android.content.Intent,android.os.Bundle)>($r5, r7, r1);

     label2:
        return z0;

     label3:
        $r6 := @caughtexception;

        return 0;

     label4:
        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("startNextMatchingActivity can only be called from a top-level activity");

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void startPostponedEnterTransition()
    {
        android.app.Activity r0;
        android.app.ActivityTransitionState $r1;

        r0 := @this: android.app.Activity;

        $r1 = r0.<android.app.Activity: android.app.ActivityTransitionState mActivityTransitionState>;

        virtualinvoke $r1.<android.app.ActivityTransitionState: void startPostponedEnterTransition()>();

        return;
    }

    public void startSearch(java.lang.String, boolean, android.os.Bundle, boolean)
    {
        android.app.Activity r0;
        java.lang.String r1;
        boolean z0, z1;
        android.os.Bundle r2;
        android.app.SearchManager $r3;
        android.content.ComponentName $r4;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r2 := @parameter2: android.os.Bundle;

        z1 := @parameter3: boolean;

        specialinvoke r0.<android.app.Activity: void ensureSearchManager()>();

        $r3 = r0.<android.app.Activity: android.app.SearchManager mSearchManager>;

        $r4 = virtualinvoke r0.<android.app.Activity: android.content.ComponentName getComponentName()>();

        virtualinvoke $r3.<android.app.SearchManager: void startSearch(java.lang.String,boolean,android.content.ComponentName,android.os.Bundle,boolean)>(r1, z0, $r4, r2, z1);

        return;
    }

    public void stopLocalVoiceInteraction()
    {
        android.app.Activity r0;
        android.app.IActivityTaskManager $r2;
        android.os.IBinder $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.app.Activity;

     label1:
        $r2 = staticinvoke <android.app.ActivityTaskManager: android.app.IActivityTaskManager getService()>();

        $r3 = r0.<android.app.Activity: android.os.IBinder mToken>;

        interfaceinvoke $r2.<android.app.IActivityTaskManager: void stopLocalVoiceInteraction(android.os.IBinder)>($r3);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void stopLockTask()
    {
        android.app.Activity r0;
        android.app.IActivityTaskManager $r2;
        android.os.IBinder $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.app.Activity;

     label1:
        $r2 = staticinvoke <android.app.ActivityTaskManager: android.app.IActivityTaskManager getService()>();

        $r3 = r0.<android.app.Activity: android.os.IBinder mToken>;

        interfaceinvoke $r2.<android.app.IActivityTaskManager: void stopLockTaskModeByToken(android.os.IBinder)>($r3);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void stopManagingCursor(android.database.Cursor)
    {
        android.app.Activity r0;
        java.util.ArrayList r1, $r2, $r3, $r7;
        int i0, i1;
        java.lang.Object $r4;
        android.app.Activity$ManagedCursor $r5;
        android.database.Cursor $r6, r10;
        java.lang.Throwable $r9;

        r0 := @this: android.app.Activity;

        r10 := @parameter0: android.database.Cursor;

        r1 = r0.<android.app.Activity: java.util.ArrayList mManagedCursors>;

        entermonitor r1;

     label01:
        $r2 = r0.<android.app.Activity: java.util.ArrayList mManagedCursors>;

        i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

     label02:
        i1 = 0;

     label03:
        if i1 >= i0 goto label07;

     label04:
        $r3 = r0.<android.app.Activity: java.util.ArrayList mManagedCursors>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r5 = (android.app.Activity$ManagedCursor) $r4;

        $r6 = staticinvoke <android.app.Activity$ManagedCursor: android.database.Cursor access$300(android.app.Activity$ManagedCursor)>($r5);

        if $r6 != r10 goto label06;

        $r7 = r0.<android.app.Activity: java.util.ArrayList mManagedCursors>;

        virtualinvoke $r7.<java.util.ArrayList: java.lang.Object remove(int)>(i1);

     label05:
        goto label07;

     label06:
        i1 = i1 + 1;

        goto label03;

     label07:
        exitmonitor r1;

     label08:
        return;

     label09:
        $r9 := @caughtexception;

     label10:
        exitmonitor r1;

     label11:
        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public void takeKeyEvents(boolean)
    {
        android.app.Activity r0;
        boolean z0;
        android.view.Window $r1;

        r0 := @this: android.app.Activity;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<android.app.Activity: android.view.Window getWindow()>();

        virtualinvoke $r1.<android.view.Window: void takeKeyEvents(boolean)>(z0);

        return;
    }

    public void triggerSearch(java.lang.String, android.os.Bundle)
    {
        android.app.Activity r0;
        java.lang.String r1;
        android.os.Bundle r2;
        android.app.SearchManager $r3;
        android.content.ComponentName $r4;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        specialinvoke r0.<android.app.Activity: void ensureSearchManager()>();

        $r3 = r0.<android.app.Activity: android.app.SearchManager mSearchManager>;

        $r4 = virtualinvoke r0.<android.app.Activity: android.content.ComponentName getComponentName()>();

        virtualinvoke $r3.<android.app.SearchManager: void triggerSearch(java.lang.String,android.content.ComponentName,android.os.Bundle)>(r1, $r4, r2);

        return;
    }

    public void unregisterActivityLifecycleCallbacks(android.app.Application$ActivityLifecycleCallbacks)
    {
        android.app.Activity r0;
        java.util.ArrayList r1, $r2;
        java.lang.Throwable $r3;
        android.app.Application$ActivityLifecycleCallbacks r4;

        r0 := @this: android.app.Activity;

        r4 := @parameter0: android.app.Application$ActivityLifecycleCallbacks;

        r1 = r0.<android.app.Activity: java.util.ArrayList mActivityLifecycleCallbacks>;

        entermonitor r1;

     label1:
        $r2 = r0.<android.app.Activity: java.util.ArrayList mActivityLifecycleCallbacks>;

        virtualinvoke $r2.<java.util.ArrayList: boolean remove(java.lang.Object)>(r4);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void unregisterForContextMenu(android.view.View)
    {
        android.app.Activity r0;
        android.view.View r1;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.view.View;

        virtualinvoke r1.<android.view.View: void setOnCreateContextMenuListener(android.view.View$OnCreateContextMenuListener)>(null);

        return;
    }

    public void unregisterRemoteAnimations()
    {
        android.app.Activity r0;
        android.app.IActivityTaskManager $r2;
        android.os.IBinder $r3;
        android.os.RemoteException $r4;
        java.lang.RuntimeException $r5;

        r0 := @this: android.app.Activity;

     label1:
        $r2 = staticinvoke <android.app.ActivityTaskManager: android.app.IActivityTaskManager getService()>();

        $r3 = r0.<android.app.Activity: android.os.IBinder mToken>;

        interfaceinvoke $r2.<android.app.IActivityTaskManager: void unregisterRemoteAnimations(android.os.IBinder)>($r3);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        $r5 = virtualinvoke $r4.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }
}
