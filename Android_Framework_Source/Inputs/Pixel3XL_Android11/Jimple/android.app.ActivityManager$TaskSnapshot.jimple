public class android.app.ActivityManager$TaskSnapshot extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    private final android.graphics.ColorSpace mColorSpace;
    private final android.graphics.Rect mContentInsets;
    private final long mId;
    private final boolean mIsLowResolution;
    private final boolean mIsRealSnapshot;
    private final boolean mIsTranslucent;
    private final int mOrientation;
    private int mRotation;
    private final android.graphics.GraphicBuffer mSnapshot;
    private final int mSystemUiVisibility;
    private final android.graphics.Point mTaskSize;
    private final android.content.ComponentName mTopActivityComponent;
    private final int mWindowingMode;

    static void <clinit>()
    {
        android.app.ActivityManager$TaskSnapshot$1 $r0;

        $r0 = new android.app.ActivityManager$TaskSnapshot$1;

        specialinvoke $r0.<android.app.ActivityManager$TaskSnapshot$1: void <init>()>();

        <android.app.ActivityManager$TaskSnapshot: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    public void <init>(long, android.content.ComponentName, android.graphics.GraphicBuffer, android.graphics.ColorSpace, int, int, android.graphics.Point, android.graphics.Rect, boolean, boolean, int, int, boolean)
    {
        android.app.ActivityManager$TaskSnapshot r0;
        long l0;
        android.content.ComponentName r1;
        android.graphics.GraphicBuffer r2;
        int i1, i2, i3, i4, $i5;
        android.graphics.Point r3, $r5;
        android.graphics.Rect r4, $r6;
        boolean z0, z1, z2;
        android.graphics.ColorSpace$Named $r7;
        android.graphics.ColorSpace r8;

        r0 := @this: android.app.ActivityManager$TaskSnapshot;

        l0 := @parameter0: long;

        r1 := @parameter1: android.content.ComponentName;

        r2 := @parameter2: android.graphics.GraphicBuffer;

        r8 := @parameter3: android.graphics.ColorSpace;

        i1 := @parameter4: int;

        i2 := @parameter5: int;

        r3 := @parameter6: android.graphics.Point;

        r4 := @parameter7: android.graphics.Rect;

        z0 := @parameter8: boolean;

        z1 := @parameter9: boolean;

        i3 := @parameter10: int;

        i4 := @parameter11: int;

        z2 := @parameter12: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.app.ActivityManager$TaskSnapshot: long mId> = l0;

        r0.<android.app.ActivityManager$TaskSnapshot: android.content.ComponentName mTopActivityComponent> = r1;

        r0.<android.app.ActivityManager$TaskSnapshot: android.graphics.GraphicBuffer mSnapshot> = r2;

        $i5 = virtualinvoke r8.<android.graphics.ColorSpace: int getId()>();

        if $i5 >= 0 goto label1;

        $r7 = <android.graphics.ColorSpace$Named: android.graphics.ColorSpace$Named SRGB>;

        r8 = staticinvoke <android.graphics.ColorSpace: android.graphics.ColorSpace get(android.graphics.ColorSpace$Named)>($r7);

        goto label1;

     label1:
        r0.<android.app.ActivityManager$TaskSnapshot: android.graphics.ColorSpace mColorSpace> = r8;

        r0.<android.app.ActivityManager$TaskSnapshot: int mOrientation> = i1;

        r0.<android.app.ActivityManager$TaskSnapshot: int mRotation> = i2;

        $r5 = new android.graphics.Point;

        specialinvoke $r5.<android.graphics.Point: void <init>(android.graphics.Point)>(r3);

        r0.<android.app.ActivityManager$TaskSnapshot: android.graphics.Point mTaskSize> = $r5;

        $r6 = new android.graphics.Rect;

        specialinvoke $r6.<android.graphics.Rect: void <init>(android.graphics.Rect)>(r4);

        r0.<android.app.ActivityManager$TaskSnapshot: android.graphics.Rect mContentInsets> = $r6;

        r0.<android.app.ActivityManager$TaskSnapshot: boolean mIsLowResolution> = z0;

        r0.<android.app.ActivityManager$TaskSnapshot: boolean mIsRealSnapshot> = z1;

        r0.<android.app.ActivityManager$TaskSnapshot: int mWindowingMode> = i3;

        r0.<android.app.ActivityManager$TaskSnapshot: int mSystemUiVisibility> = i4;

        r0.<android.app.ActivityManager$TaskSnapshot: boolean mIsTranslucent> = z2;

        return;
    }

    private void <init>(android.os.Parcel)
    {
        android.app.ActivityManager$TaskSnapshot r0;
        android.os.Parcel r1;
        int i0, $i2, $i3, $i4, $i5, $i6;
        long $l1;
        android.content.ComponentName $r2;
        android.os.Parcelable $r3, $r10, $r12;
        android.graphics.GraphicBuffer $r4;
        android.graphics.ColorSpace$Named $r5, $r8;
        android.graphics.ColorSpace$Named[] $r6, $r7;
        android.graphics.ColorSpace r9;
        android.graphics.Point $r11;
        android.graphics.Rect $r13;
        boolean $z0, $z1, $z2;

        r0 := @this: android.app.ActivityManager$TaskSnapshot;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $l1 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<android.app.ActivityManager$TaskSnapshot: long mId> = $l1;

        $r2 = staticinvoke <android.content.ComponentName: android.content.ComponentName readFromParcel(android.os.Parcel)>(r1);

        r0.<android.app.ActivityManager$TaskSnapshot: android.content.ComponentName mTopActivityComponent> = $r2;

        $r3 = virtualinvoke r1.<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)>(null);

        $r4 = (android.graphics.GraphicBuffer) $r3;

        r0.<android.app.ActivityManager$TaskSnapshot: android.graphics.GraphicBuffer mSnapshot> = $r4;

        i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if i0 < 0 goto label1;

        $r6 = staticinvoke <android.graphics.ColorSpace$Named: android.graphics.ColorSpace$Named[] values()>();

        $i2 = lengthof $r6;

        if i0 >= $i2 goto label1;

        $r7 = staticinvoke <android.graphics.ColorSpace$Named: android.graphics.ColorSpace$Named[] values()>();

        $r8 = $r7[i0];

        r9 = staticinvoke <android.graphics.ColorSpace: android.graphics.ColorSpace get(android.graphics.ColorSpace$Named)>($r8);

        goto label2;

     label1:
        $r5 = <android.graphics.ColorSpace$Named: android.graphics.ColorSpace$Named SRGB>;

        r9 = staticinvoke <android.graphics.ColorSpace: android.graphics.ColorSpace get(android.graphics.ColorSpace$Named)>($r5);

     label2:
        r0.<android.app.ActivityManager$TaskSnapshot: android.graphics.ColorSpace mColorSpace> = r9;

        $i3 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.app.ActivityManager$TaskSnapshot: int mOrientation> = $i3;

        $i4 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.app.ActivityManager$TaskSnapshot: int mRotation> = $i4;

        $r10 = virtualinvoke r1.<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)>(null);

        $r11 = (android.graphics.Point) $r10;

        r0.<android.app.ActivityManager$TaskSnapshot: android.graphics.Point mTaskSize> = $r11;

        $r12 = virtualinvoke r1.<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)>(null);

        $r13 = (android.graphics.Rect) $r12;

        r0.<android.app.ActivityManager$TaskSnapshot: android.graphics.Rect mContentInsets> = $r13;

        $z0 = virtualinvoke r1.<android.os.Parcel: boolean readBoolean()>();

        r0.<android.app.ActivityManager$TaskSnapshot: boolean mIsLowResolution> = $z0;

        $z1 = virtualinvoke r1.<android.os.Parcel: boolean readBoolean()>();

        r0.<android.app.ActivityManager$TaskSnapshot: boolean mIsRealSnapshot> = $z1;

        $i5 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.app.ActivityManager$TaskSnapshot: int mWindowingMode> = $i5;

        $i6 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.app.ActivityManager$TaskSnapshot: int mSystemUiVisibility> = $i6;

        $z2 = virtualinvoke r1.<android.os.Parcel: boolean readBoolean()>();

        r0.<android.app.ActivityManager$TaskSnapshot: boolean mIsTranslucent> = $z2;

        return;
    }

    void <init>(android.os.Parcel, android.app.ActivityManager$1)
    {
        android.app.ActivityManager$TaskSnapshot r0;
        android.os.Parcel r1;
        android.app.ActivityManager$1 r2;

        r0 := @this: android.app.ActivityManager$TaskSnapshot;

        r1 := @parameter0: android.os.Parcel;

        r2 := @parameter1: android.app.ActivityManager$1;

        specialinvoke r0.<android.app.ActivityManager$TaskSnapshot: void <init>(android.os.Parcel)>(r1);

        return;
    }

    public int describeContents()
    {
        android.app.ActivityManager$TaskSnapshot r0;

        r0 := @this: android.app.ActivityManager$TaskSnapshot;

        return 0;
    }

    public android.graphics.ColorSpace getColorSpace()
    {
        android.app.ActivityManager$TaskSnapshot r0;
        android.graphics.ColorSpace $r1;

        r0 := @this: android.app.ActivityManager$TaskSnapshot;

        $r1 = r0.<android.app.ActivityManager$TaskSnapshot: android.graphics.ColorSpace mColorSpace>;

        return $r1;
    }

    public android.graphics.Rect getContentInsets()
    {
        android.app.ActivityManager$TaskSnapshot r0;
        android.graphics.Rect $r1;

        r0 := @this: android.app.ActivityManager$TaskSnapshot;

        $r1 = r0.<android.app.ActivityManager$TaskSnapshot: android.graphics.Rect mContentInsets>;

        return $r1;
    }

    public long getId()
    {
        android.app.ActivityManager$TaskSnapshot r0;
        long $l0;

        r0 := @this: android.app.ActivityManager$TaskSnapshot;

        $l0 = r0.<android.app.ActivityManager$TaskSnapshot: long mId>;

        return $l0;
    }

    public int getOrientation()
    {
        android.app.ActivityManager$TaskSnapshot r0;
        int $i0;

        r0 := @this: android.app.ActivityManager$TaskSnapshot;

        $i0 = r0.<android.app.ActivityManager$TaskSnapshot: int mOrientation>;

        return $i0;
    }

    public int getRotation()
    {
        android.app.ActivityManager$TaskSnapshot r0;
        int $i0;

        r0 := @this: android.app.ActivityManager$TaskSnapshot;

        $i0 = r0.<android.app.ActivityManager$TaskSnapshot: int mRotation>;

        return $i0;
    }

    public android.graphics.GraphicBuffer getSnapshot()
    {
        android.app.ActivityManager$TaskSnapshot r0;
        android.graphics.GraphicBuffer $r1;

        r0 := @this: android.app.ActivityManager$TaskSnapshot;

        $r1 = r0.<android.app.ActivityManager$TaskSnapshot: android.graphics.GraphicBuffer mSnapshot>;

        return $r1;
    }

    public int getSystemUiVisibility()
    {
        android.app.ActivityManager$TaskSnapshot r0;
        int $i0;

        r0 := @this: android.app.ActivityManager$TaskSnapshot;

        $i0 = r0.<android.app.ActivityManager$TaskSnapshot: int mSystemUiVisibility>;

        return $i0;
    }

    public android.graphics.Point getTaskSize()
    {
        android.app.ActivityManager$TaskSnapshot r0;
        android.graphics.Point $r1;

        r0 := @this: android.app.ActivityManager$TaskSnapshot;

        $r1 = r0.<android.app.ActivityManager$TaskSnapshot: android.graphics.Point mTaskSize>;

        return $r1;
    }

    public android.content.ComponentName getTopActivityComponent()
    {
        android.app.ActivityManager$TaskSnapshot r0;
        android.content.ComponentName $r1;

        r0 := @this: android.app.ActivityManager$TaskSnapshot;

        $r1 = r0.<android.app.ActivityManager$TaskSnapshot: android.content.ComponentName mTopActivityComponent>;

        return $r1;
    }

    public int getWindowingMode()
    {
        android.app.ActivityManager$TaskSnapshot r0;
        int $i0;

        r0 := @this: android.app.ActivityManager$TaskSnapshot;

        $i0 = r0.<android.app.ActivityManager$TaskSnapshot: int mWindowingMode>;

        return $i0;
    }

    public boolean isLowResolution()
    {
        android.app.ActivityManager$TaskSnapshot r0;
        boolean $z0;

        r0 := @this: android.app.ActivityManager$TaskSnapshot;

        $z0 = r0.<android.app.ActivityManager$TaskSnapshot: boolean mIsLowResolution>;

        return $z0;
    }

    public boolean isRealSnapshot()
    {
        android.app.ActivityManager$TaskSnapshot r0;
        boolean $z0;

        r0 := @this: android.app.ActivityManager$TaskSnapshot;

        $z0 = r0.<android.app.ActivityManager$TaskSnapshot: boolean mIsRealSnapshot>;

        return $z0;
    }

    public boolean isTranslucent()
    {
        android.app.ActivityManager$TaskSnapshot r0;
        boolean $z0;

        r0 := @this: android.app.ActivityManager$TaskSnapshot;

        $z0 = r0.<android.app.ActivityManager$TaskSnapshot: boolean mIsTranslucent>;

        return $z0;
    }

    public java.lang.String toString()
    {
        android.app.ActivityManager$TaskSnapshot r0;
        java.lang.StringBuilder $r1;
        long $l0;
        android.content.ComponentName $r5;
        java.lang.String $r6, $r17, $r25, $r29, $r41;
        android.graphics.GraphicBuffer $r9, r42, r43;
        android.graphics.ColorSpace $r16;
        int $i1, $i2, $i3, $i4, i5, i6;
        android.graphics.Point $r24;
        android.graphics.Rect $r28;
        boolean $z0, $z1, $z2;

        r0 := @this: android.app.ActivityManager$TaskSnapshot;

        r42 = r0.<android.app.ActivityManager$TaskSnapshot: android.graphics.GraphicBuffer mSnapshot>;

        i5 = 0;

        if r42 == null goto label1;

        i6 = virtualinvoke r42.<android.graphics.GraphicBuffer: int getWidth()>();

        goto label2;

     label1:
        i6 = 0;

     label2:
        r43 = r0.<android.app.ActivityManager$TaskSnapshot: android.graphics.GraphicBuffer mSnapshot>;

        if r43 == null goto label3;

        i5 = virtualinvoke r43.<android.graphics.GraphicBuffer: int getHeight()>();

     label3:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TaskSnapshot{ mId=");

        $l0 = r0.<android.app.ActivityManager$TaskSnapshot: long mId>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mTopActivityComponent=");

        $r5 = r0.<android.app.ActivityManager$TaskSnapshot: android.content.ComponentName mTopActivityComponent>;

        $r6 = virtualinvoke $r5.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mSnapshot=");

        $r9 = r0.<android.app.ActivityManager$TaskSnapshot: android.graphics.GraphicBuffer mSnapshot>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("x");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") mColorSpace=");

        $r16 = r0.<android.app.ActivityManager$TaskSnapshot: android.graphics.ColorSpace mColorSpace>;

        $r17 = virtualinvoke $r16.<android.graphics.ColorSpace: java.lang.String toString()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mOrientation=");

        $i1 = r0.<android.app.ActivityManager$TaskSnapshot: int mOrientation>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mRotation=");

        $i2 = r0.<android.app.ActivityManager$TaskSnapshot: int mRotation>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mTaskSize=");

        $r24 = r0.<android.app.ActivityManager$TaskSnapshot: android.graphics.Point mTaskSize>;

        $r25 = virtualinvoke $r24.<android.graphics.Point: java.lang.String toString()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mContentInsets=");

        $r28 = r0.<android.app.ActivityManager$TaskSnapshot: android.graphics.Rect mContentInsets>;

        $r29 = virtualinvoke $r28.<android.graphics.Rect: java.lang.String toShortString()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mIsLowResolution=");

        $z0 = r0.<android.app.ActivityManager$TaskSnapshot: boolean mIsLowResolution>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mIsRealSnapshot=");

        $z1 = r0.<android.app.ActivityManager$TaskSnapshot: boolean mIsRealSnapshot>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mWindowingMode=");

        $i3 = r0.<android.app.ActivityManager$TaskSnapshot: int mWindowingMode>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mSystemUiVisibility=");

        $i4 = r0.<android.app.ActivityManager$TaskSnapshot: int mSystemUiVisibility>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mIsTranslucent=");

        $z2 = r0.<android.app.ActivityManager$TaskSnapshot: boolean mIsTranslucent>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        $r41 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r41;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.app.ActivityManager$TaskSnapshot r0;
        android.os.Parcel r1;
        int i0, $i2, $i3, $i4, $i5, $i6;
        long $l1;
        android.content.ComponentName $r2;
        boolean $z0, $z1, $z2, $z3;
        android.graphics.GraphicBuffer r3, r4;
        android.graphics.ColorSpace $r5;
        android.graphics.Point $r6;
        android.graphics.Rect $r7;

        r0 := @this: android.app.ActivityManager$TaskSnapshot;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $l1 = r0.<android.app.ActivityManager$TaskSnapshot: long mId>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l1);

        $r2 = r0.<android.app.ActivityManager$TaskSnapshot: android.content.ComponentName mTopActivityComponent>;

        staticinvoke <android.content.ComponentName: void writeToParcel(android.content.ComponentName,android.os.Parcel)>($r2, r1);

        r3 = r0.<android.app.ActivityManager$TaskSnapshot: android.graphics.GraphicBuffer mSnapshot>;

        if r3 == null goto label1;

        $z0 = virtualinvoke r3.<android.graphics.GraphicBuffer: boolean isDestroyed()>();

        if $z0 != 0 goto label1;

        r4 = r0.<android.app.ActivityManager$TaskSnapshot: android.graphics.GraphicBuffer mSnapshot>;

        goto label2;

     label1:
        r4 = null;

     label2:
        virtualinvoke r1.<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>(r4, 0);

        $r5 = r0.<android.app.ActivityManager$TaskSnapshot: android.graphics.ColorSpace mColorSpace>;

        $i2 = virtualinvoke $r5.<android.graphics.ColorSpace: int getId()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i2);

        $i3 = r0.<android.app.ActivityManager$TaskSnapshot: int mOrientation>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i3);

        $i4 = r0.<android.app.ActivityManager$TaskSnapshot: int mRotation>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i4);

        $r6 = r0.<android.app.ActivityManager$TaskSnapshot: android.graphics.Point mTaskSize>;

        virtualinvoke r1.<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>($r6, 0);

        $r7 = r0.<android.app.ActivityManager$TaskSnapshot: android.graphics.Rect mContentInsets>;

        virtualinvoke r1.<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>($r7, 0);

        $z1 = r0.<android.app.ActivityManager$TaskSnapshot: boolean mIsLowResolution>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z1);

        $z2 = r0.<android.app.ActivityManager$TaskSnapshot: boolean mIsRealSnapshot>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z2);

        $i5 = r0.<android.app.ActivityManager$TaskSnapshot: int mWindowingMode>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i5);

        $i6 = r0.<android.app.ActivityManager$TaskSnapshot: int mSystemUiVisibility>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i6);

        $z3 = r0.<android.app.ActivityManager$TaskSnapshot: boolean mIsTranslucent>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z3);

        return;
    }
}
