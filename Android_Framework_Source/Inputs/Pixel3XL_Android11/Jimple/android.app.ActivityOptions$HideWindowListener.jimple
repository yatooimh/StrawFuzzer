class android.app.ActivityOptions$HideWindowListener extends android.transition.TransitionListenerAdapter implements android.app.ExitTransitionCoordinator$HideSharedElementsCallback
{
    private final android.app.ExitTransitionCoordinator mExit;
    private boolean mSharedElementHidden;
    private java.util.ArrayList mSharedElements;
    private boolean mTransitionEnded;
    private final boolean mWaitingForTransition;
    private final android.view.Window mWindow;

    public void <init>(android.view.Window, android.app.ExitTransitionCoordinator)
    {
        android.app.ActivityOptions$HideWindowListener r0;
        android.app.ExitTransitionCoordinator r1;
        java.util.ArrayList $r2, $r3;
        android.view.Window $r4, $r5, r9;
        java.lang.Object $r6;
        java.lang.IllegalStateException $r7;
        android.transition.Transition r10;
        android.view.View r11;

        r0 := @this: android.app.ActivityOptions$HideWindowListener;

        r9 := @parameter0: android.view.Window;

        r1 := @parameter1: android.app.ExitTransitionCoordinator;

        specialinvoke r0.<android.transition.TransitionListenerAdapter: void <init>()>();

        r0.<android.app.ActivityOptions$HideWindowListener: android.view.Window mWindow> = r9;

        r0.<android.app.ActivityOptions$HideWindowListener: android.app.ExitTransitionCoordinator mExit> = r1;

        $r2 = new java.util.ArrayList;

        $r3 = r1.<android.app.ExitTransitionCoordinator: java.util.ArrayList mSharedElements>;

        specialinvoke $r2.<java.util.ArrayList: void <init>(java.util.Collection)>($r3);

        r0.<android.app.ActivityOptions$HideWindowListener: java.util.ArrayList mSharedElements> = $r2;

        $r4 = r0.<android.app.ActivityOptions$HideWindowListener: android.view.Window mWindow>;

        r10 = virtualinvoke $r4.<android.view.Window: android.transition.Transition getExitTransition()>();

        if r10 == null goto label1;

        virtualinvoke r10.<android.transition.Transition: android.transition.Transition addListener(android.transition.Transition$TransitionListener)>(r0);

        r0.<android.app.ActivityOptions$HideWindowListener: boolean mWaitingForTransition> = 1;

        goto label2;

     label1:
        r0.<android.app.ActivityOptions$HideWindowListener: boolean mWaitingForTransition> = 0;

     label2:
        $r5 = r0.<android.app.ActivityOptions$HideWindowListener: android.view.Window mWindow>;

        r11 = virtualinvoke $r5.<android.view.Window: android.view.View getDecorView()>();

        if r11 == null goto label4;

        $r6 = virtualinvoke r11.<android.view.View: java.lang.Object getTag(int)>(16908897);

        if $r6 != null goto label3;

        virtualinvoke r11.<android.view.View: void setTagInternal(int,java.lang.Object)>(16908897, r1);

        goto label4;

     label3:
        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot start a transition while one is running");

        throw $r7;

     label4:
        return;
    }

    private void hideWhenDone()
    {
        android.app.ActivityOptions$HideWindowListener r0;
        int i0, i1;
        android.view.View r1, $r7;
        boolean $z0, $z1, $z2;
        android.app.ExitTransitionCoordinator $r2;
        java.util.ArrayList $r3, $r5;
        android.view.Window $r4;
        java.lang.Object $r6;

        r0 := @this: android.app.ActivityOptions$HideWindowListener;

        $z0 = r0.<android.app.ActivityOptions$HideWindowListener: boolean mSharedElementHidden>;

        if $z0 == 0 goto label4;

        $z1 = r0.<android.app.ActivityOptions$HideWindowListener: boolean mWaitingForTransition>;

        if $z1 == 0 goto label1;

        $z2 = r0.<android.app.ActivityOptions$HideWindowListener: boolean mTransitionEnded>;

        if $z2 == 0 goto label4;

     label1:
        $r2 = r0.<android.app.ActivityOptions$HideWindowListener: android.app.ExitTransitionCoordinator mExit>;

        virtualinvoke $r2.<android.app.ExitTransitionCoordinator: void resetViews()>();

        $r3 = r0.<android.app.ActivityOptions$HideWindowListener: java.util.ArrayList mSharedElements>;

        i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i1 = 0;

     label2:
        if i1 >= i0 goto label3;

        $r5 = r0.<android.app.ActivityOptions$HideWindowListener: java.util.ArrayList mSharedElements>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r7 = (android.view.View) $r6;

        virtualinvoke $r7.<android.view.View: void requestLayout()>();

        i1 = i1 + 1;

        goto label2;

     label3:
        $r4 = r0.<android.app.ActivityOptions$HideWindowListener: android.view.Window mWindow>;

        r1 = virtualinvoke $r4.<android.view.Window: android.view.View getDecorView()>();

        if r1 == null goto label4;

        virtualinvoke r1.<android.view.View: void setTagInternal(int,java.lang.Object)>(16908897, null);

        virtualinvoke r1.<android.view.View: void setVisibility(int)>(8);

     label4:
        return;
    }

    public void hideSharedElements()
    {
        android.app.ActivityOptions$HideWindowListener r0;

        r0 := @this: android.app.ActivityOptions$HideWindowListener;

        r0.<android.app.ActivityOptions$HideWindowListener: boolean mSharedElementHidden> = 1;

        specialinvoke r0.<android.app.ActivityOptions$HideWindowListener: void hideWhenDone()>();

        return;
    }

    public void onTransitionEnd(android.transition.Transition)
    {
        android.app.ActivityOptions$HideWindowListener r0;
        android.transition.Transition r1;

        r0 := @this: android.app.ActivityOptions$HideWindowListener;

        r1 := @parameter0: android.transition.Transition;

        r0.<android.app.ActivityOptions$HideWindowListener: boolean mTransitionEnded> = 1;

        specialinvoke r0.<android.app.ActivityOptions$HideWindowListener: void hideWhenDone()>();

        virtualinvoke r1.<android.transition.Transition: android.transition.Transition removeListener(android.transition.Transition$TransitionListener)>(r0);

        return;
    }
}
