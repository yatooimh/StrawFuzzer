class android.app.ActivityThread$AndroidOs extends libcore.io.ForwardingOs
{

    private void <init>(libcore.io.Os)
    {
        android.app.ActivityThread$AndroidOs r0;
        libcore.io.Os r1;

        r0 := @this: android.app.ActivityThread$AndroidOs;

        r1 := @parameter0: libcore.io.Os;

        specialinvoke r0.<libcore.io.ForwardingOs: void <init>(libcore.io.Os)>(r1);

        return;
    }

    private void deleteDeprecatedDataPath(java.lang.String) throws android.system.ErrnoException
    {
        android.app.ActivityThread$AndroidOs r0;
        android.net.Uri r1;
        java.lang.String $r8, $r13, $r16, r17;
        android.app.ActivityThread $r9;
        android.app.Application $r10;
        int $i1, $i2, $i3;
        java.lang.Throwable $r11, $r14, r27, r29;
        android.content.ContentResolver r18;
        java.lang.StringBuilder r22;
        java.io.FileNotFoundException r23, r26;
        android.system.ErrnoException r24, r25;
        java.lang.SecurityException r28;

        r0 := @this: android.app.ActivityThread$AndroidOs;

        r17 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.content.ContentResolver: android.net.Uri translateDeprecatedDataPath(java.lang.String)>(r17);

        r22 = new java.lang.StringBuilder;

        specialinvoke r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Redirecting ");

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r17);

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r8 = virtualinvoke r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("ActivityThread", $r8);

        $r9 = staticinvoke <android.app.ActivityThread: android.app.ActivityThread currentActivityThread()>();

        $r10 = virtualinvoke $r9.<android.app.ActivityThread: android.app.Application getApplication()>();

        r18 = virtualinvoke $r10.<android.app.Application: android.content.ContentResolver getContentResolver()>();

     label1:
        $i1 = virtualinvoke r18.<android.content.ContentResolver: int delete(android.net.Uri,java.lang.String,java.lang.String[])>(r1, null, null);

        if $i1 == 0 goto label3;

     label2:
        return;

     label3:
        r23 = new java.io.FileNotFoundException;

        specialinvoke r23.<java.io.FileNotFoundException: void <init>()>();

        throw r23;

     label4:
        $r11 := @caughtexception;

        r24 = new android.system.ErrnoException;

        r26 = (java.io.FileNotFoundException) $r11;

        $r13 = virtualinvoke r26.<java.io.FileNotFoundException: java.lang.String getMessage()>();

        $i2 = <android.system.OsConstants: int ENOENT>;

        specialinvoke r24.<android.system.ErrnoException: void <init>(java.lang.String,int)>($r13, $i2);

        r27 = (java.lang.Throwable) r24;

        throw r27;

     label5:
        $r14 := @caughtexception;

        r25 = new android.system.ErrnoException;

        r28 = (java.lang.SecurityException) $r14;

        $r16 = virtualinvoke r28.<java.lang.SecurityException: java.lang.String getMessage()>();

        $i3 = <android.system.OsConstants: int EACCES>;

        specialinvoke r25.<android.system.ErrnoException: void <init>(java.lang.String,int)>($r16, $i3);

        r29 = (java.lang.Throwable) r25;

        throw r29;

        catch java.lang.SecurityException from label1 to label2 with label5;
        catch java.io.FileNotFoundException from label1 to label2 with label4;
        catch java.lang.SecurityException from label3 to label4 with label5;
        catch java.io.FileNotFoundException from label3 to label4 with label4;
    }

    public static void install()
    {
        libcore.io.Os r0, r3;
        boolean $z0, $z1;
        android.app.ActivityThread$AndroidOs r2;

        $z0 = <android.content.ContentResolver: boolean DEPRECATE_DATA_COLUMNS>;

        if $z0 != 0 goto label1;

        return;

     label1:
        r0 = staticinvoke <libcore.io.Os: libcore.io.Os getDefault()>();

        r2 = new android.app.ActivityThread$AndroidOs;

        specialinvoke r2.<android.app.ActivityThread$AndroidOs: void <init>(libcore.io.Os)>(r0);

        r3 = (libcore.io.Os) r2;

        $z1 = staticinvoke <libcore.io.Os: boolean compareAndSetDefault(libcore.io.Os,libcore.io.Os)>(r0, r3);

        if $z1 == 0 goto label2;

        return;

     label2:
        goto label1;
    }

    private java.io.FileDescriptor openDeprecatedDataPath(java.lang.String, int) throws android.system.ErrnoException
    {
        android.app.ActivityThread$AndroidOs r0;
        int i0, $i2, $i3, $i4;
        android.net.Uri r1;
        java.lang.String $r7, $r10, $r14, $r17, r18;
        android.app.ActivityThread $r8;
        android.app.Application $r9;
        android.os.ParcelFileDescriptor $r11;
        java.lang.Throwable $r12, $r15, r29, r31;
        android.content.ContentResolver r20;
        java.lang.StringBuilder r24;
        java.io.FileDescriptor r25;
        android.system.ErrnoException r26, r27;
        java.io.FileNotFoundException r28;
        java.lang.SecurityException r30;

        r0 := @this: android.app.ActivityThread$AndroidOs;

        r18 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.content.ContentResolver: android.net.Uri translateDeprecatedDataPath(java.lang.String)>(r18);

        r24 = new java.lang.StringBuilder;

        specialinvoke r24.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Redirecting ");

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = virtualinvoke r24.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("ActivityThread", $r7);

        $r8 = staticinvoke <android.app.ActivityThread: android.app.ActivityThread currentActivityThread()>();

        $r9 = virtualinvoke $r8.<android.app.ActivityThread: android.app.Application getApplication()>();

        r20 = virtualinvoke $r9.<android.app.Application: android.content.ContentResolver getContentResolver()>();

     label1:
        r25 = new java.io.FileDescriptor;

        specialinvoke r25.<java.io.FileDescriptor: void <init>()>();

     label2:
        $r10 = staticinvoke <android.os.FileUtils: java.lang.String translateModePosixToString(int)>(i0);

        $r11 = virtualinvoke r20.<android.content.ContentResolver: android.os.ParcelFileDescriptor openFileDescriptor(android.net.Uri,java.lang.String)>(r1, $r10);

        $i2 = virtualinvoke $r11.<android.os.ParcelFileDescriptor: int detachFd()>();

        virtualinvoke r25.<java.io.FileDescriptor: void setInt$(int)>($i2);

     label3:
        return r25;

     label4:
        $r15 := @caughtexception;

        r26 = new android.system.ErrnoException;

        r28 = (java.io.FileNotFoundException) $r15;

        $r17 = virtualinvoke r28.<java.io.FileNotFoundException: java.lang.String getMessage()>();

        $i4 = <android.system.OsConstants: int ENOENT>;

        specialinvoke r26.<android.system.ErrnoException: void <init>(java.lang.String,int)>($r17, $i4);

        r29 = (java.lang.Throwable) r26;

        throw r29;

     label5:
        $r12 := @caughtexception;

        r27 = new android.system.ErrnoException;

        r30 = (java.lang.SecurityException) $r12;

        $r14 = virtualinvoke r30.<java.lang.SecurityException: java.lang.String getMessage()>();

        $i3 = <android.system.OsConstants: int EACCES>;

        specialinvoke r27.<android.system.ErrnoException: void <init>(java.lang.String,int)>($r14, $i3);

        r31 = (java.lang.Throwable) r27;

        throw r31;

        catch java.lang.SecurityException from label1 to label2 with label5;
        catch java.io.FileNotFoundException from label1 to label2 with label4;
        catch java.lang.SecurityException from label2 to label3 with label5;
        catch java.io.FileNotFoundException from label2 to label3 with label4;
    }

    public boolean access(java.lang.String, int) throws android.system.ErrnoException
    {
        android.app.ActivityThread$AndroidOs r0;
        java.lang.String r1;
        int i0, $i1;
        boolean $z0, $z1;
        java.io.FileDescriptor $r2;

        r0 := @this: android.app.ActivityThread$AndroidOs;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        if r1 == null goto label1;

        $z1 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("/mnt/content/");

        if $z1 == 0 goto label1;

        $i1 = staticinvoke <android.os.FileUtils: int translateModeAccessToPosix(int)>(i0);

        $r2 = specialinvoke r0.<android.app.ActivityThread$AndroidOs: java.io.FileDescriptor openDeprecatedDataPath(java.lang.String,int)>(r1, $i1);

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.io.FileDescriptor)>($r2);

        return 1;

     label1:
        $z0 = specialinvoke r0.<libcore.io.ForwardingOs: boolean access(java.lang.String,int)>(r1, i0);

        return $z0;
    }

    public java.io.FileDescriptor open(java.lang.String, int, int) throws android.system.ErrnoException
    {
        android.app.ActivityThread$AndroidOs r0;
        java.lang.String r1;
        int i0, i1;
        java.io.FileDescriptor $r2, $r3;
        boolean $z0;

        r0 := @this: android.app.ActivityThread$AndroidOs;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("/mnt/content/");

        if $z0 == 0 goto label1;

        $r3 = specialinvoke r0.<android.app.ActivityThread$AndroidOs: java.io.FileDescriptor openDeprecatedDataPath(java.lang.String,int)>(r1, i1);

        return $r3;

     label1:
        $r2 = specialinvoke r0.<libcore.io.ForwardingOs: java.io.FileDescriptor open(java.lang.String,int,int)>(r1, i0, i1);

        return $r2;
    }

    public void remove(java.lang.String) throws android.system.ErrnoException
    {
        android.app.ActivityThread$AndroidOs r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: android.app.ActivityThread$AndroidOs;

        r1 := @parameter0: java.lang.String;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("/mnt/content/");

        if $z0 == 0 goto label1;

        specialinvoke r0.<android.app.ActivityThread$AndroidOs: void deleteDeprecatedDataPath(java.lang.String)>(r1);

        goto label2;

     label1:
        specialinvoke r0.<libcore.io.ForwardingOs: void remove(java.lang.String)>(r1);

     label2:
        return;
    }

    public void rename(java.lang.String, java.lang.String) throws android.system.ErrnoException
    {
        android.app.ActivityThread$AndroidOs r0;
        java.lang.String r1, $r10, r15;
        java.lang.Throwable $r3, $r4;
        int $i1, $i2;
        boolean $z0, $z1;
        java.nio.file.Path $r11, r18;
        java.lang.Object[] $r12;
        java.nio.file.StandardCopyOption $r13;
        java.lang.StringBuilder r21;
        java.io.File r22, r23;
        android.system.ErrnoException r24;
        java.nio.file.CopyOption[] r25;

        r0 := @this: android.app.ActivityThread$AndroidOs;

        r15 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

     label1:
        specialinvoke r0.<libcore.io.ForwardingOs: void rename(java.lang.String,java.lang.String)>(r15, r1);

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        r24 = (android.system.ErrnoException) $r4;

        $i2 = r24.<android.system.ErrnoException: int errno>;

        $i1 = <android.system.OsConstants: int EXDEV>;

        if $i2 != $i1 goto label7;

        $z0 = virtualinvoke r15.<java.lang.String: boolean startsWith(java.lang.String)>("/storage/emulated");

        if $z0 == 0 goto label7;

        $z1 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("/storage/emulated");

        if $z1 == 0 goto label7;

        r21 = new java.lang.StringBuilder;

        specialinvoke r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Recovering failed rename ");

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("ActivityThread", $r10);

     label4:
        r22 = new java.io.File;

        specialinvoke r22.<java.io.File: void <init>(java.lang.String)>(r15);

        r18 = virtualinvoke r22.<java.io.File: java.nio.file.Path toPath()>();

        r23 = new java.io.File;

        specialinvoke r23.<java.io.File: void <init>(java.lang.String)>(r1);

        $r11 = virtualinvoke r23.<java.io.File: java.nio.file.Path toPath()>();

        $r12 = newarray (java.nio.file.CopyOption)[1];

        $r13 = <java.nio.file.StandardCopyOption: java.nio.file.StandardCopyOption REPLACE_EXISTING>;

        $r12[0] = $r13;

        r25 = (java.nio.file.CopyOption[]) $r12;

        staticinvoke <java.nio.file.Files: java.nio.file.Path move(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])>(r18, $r11, r25);

     label5:
        return;

     label6:
        $r3 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityThread", "Rename recovery failed ", $r4);

        throw $r4;

     label7:
        throw $r4;

        catch android.system.ErrnoException from label1 to label2 with label3;
        catch java.io.IOException from label4 to label5 with label6;
    }

    public android.system.StructStat stat(java.lang.String) throws android.system.ErrnoException
    {
        android.app.ActivityThread$AndroidOs r0;
        android.system.StructStat $r1, r5;
        boolean $z0;
        int $i0;
        java.lang.Throwable $r2;
        java.lang.String r3;
        java.io.FileDescriptor r4;

        r0 := @this: android.app.ActivityThread$AndroidOs;

        r3 := @parameter0: java.lang.String;

        if r3 == null goto label4;

        $z0 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("/mnt/content/");

        if $z0 == 0 goto label4;

        $i0 = <android.system.OsConstants: int O_RDONLY>;

        r4 = specialinvoke r0.<android.app.ActivityThread$AndroidOs: java.io.FileDescriptor openDeprecatedDataPath(java.lang.String,int)>(r3, $i0);

     label1:
        r5 = staticinvoke <android.system.Os: android.system.StructStat fstat(java.io.FileDescriptor)>(r4);

     label2:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.io.FileDescriptor)>(r4);

        return r5;

     label3:
        $r2 := @caughtexception;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.io.FileDescriptor)>(r4);

        throw $r2;

     label4:
        $r1 = specialinvoke r0.<libcore.io.ForwardingOs: android.system.StructStat stat(java.lang.String)>(r3);

        return $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void unlink(java.lang.String) throws android.system.ErrnoException
    {
        android.app.ActivityThread$AndroidOs r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: android.app.ActivityThread$AndroidOs;

        r1 := @parameter0: java.lang.String;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("/mnt/content/");

        if $z0 == 0 goto label1;

        specialinvoke r0.<android.app.ActivityThread$AndroidOs: void deleteDeprecatedDataPath(java.lang.String)>(r1);

        goto label2;

     label1:
        specialinvoke r0.<libcore.io.ForwardingOs: void unlink(java.lang.String)>(r1);

     label2:
        return;
    }
}
