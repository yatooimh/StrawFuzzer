public final class android.app.ActivityThread extends android.app.ClientTransactionHandler
{
    private static final int ACTIVITY_THREAD_CHECKIN_VERSION;
    private static final long CONTENT_PROVIDER_RETAIN_TIME;
    private static final boolean DEBUG_BACKUP;
    public static final boolean DEBUG_BROADCAST;
    public static final boolean DEBUG_CONFIGURATION;
    public static final boolean DEBUG_MEMORY_TRIM;
    static final boolean DEBUG_MESSAGES;
    public static final boolean DEBUG_ORDER;
    private static final boolean DEBUG_PROVIDER;
    private static final boolean DEBUG_RESULTS;
    private static final boolean DEBUG_SERVICE;
    private static final java.lang.String HEAP_COLUMN;
    private static final java.lang.String HEAP_FULL_COLUMN;
    public static final long INVALID_PROC_STATE_SEQ;
    private static final long MIN_TIME_BETWEEN_GCS;
    private static final java.lang.String ONE_ALT_COUNT_COLUMN;
    private static final java.lang.String ONE_COUNT_COLUMN;
    private static final long PENDING_TOP_PROCESS_STATE_TIMEOUT;
    public static final java.lang.String PROC_START_SEQ_IDENT;
    private static final boolean REPORT_TO_ACTIVITY;
    public static final int SERVICE_DONE_EXECUTING_ANON;
    public static final int SERVICE_DONE_EXECUTING_START;
    public static final int SERVICE_DONE_EXECUTING_STOP;
    private static final int SQLITE_MEM_RELEASED_EVENT_LOG_TAG;
    public static final java.lang.String TAG;
    private static final java.lang.String THREE_COUNT_COLUMNS;
    private static final android.graphics.Bitmap$Config THUMBNAIL_FORMAT;
    private static final java.lang.String TWO_COUNT_COLUMNS;
    private static final java.lang.String TWO_COUNT_COLUMN_HEADER;
    private static final int VM_PROCESS_STATE_JANK_IMPERCEPTIBLE;
    private static final int VM_PROCESS_STATE_JANK_PERCEPTIBLE;
    static final boolean localLOGV;
    private static volatile android.app.ActivityThread sCurrentActivityThread;
    private static final java.lang.ThreadLocal sCurrentBroadcastIntent;
    static volatile android.os.Handler sMainThreadHandler;
    static volatile android.content.pm.IPackageManager sPackageManager;
    private static volatile android.permission.IPermissionManager sPermissionManager;
    private java.util.ArrayList mActiveRotationAdjustments;
    final android.util.ArrayMap mActivities;
    final java.util.Map mActivitiesToBeDestroyed;
    final java.util.ArrayList mAllApplications;
    final android.app.ActivityThread$ApplicationThread mAppThread;
    private final android.util.SparseArray mBackupAgentsByUser;
    android.app.ActivityThread$AppBindData mBoundApplication;
    android.content.res.Configuration mCompatConfiguration;
    android.content.res.Configuration mConfiguration;
    android.os.Bundle mCoreSettings;
    int mCurDefaultDisplayDpi;
    boolean mDensityCompatMode;
    final java.util.concurrent.Executor mExecutor;
    final android.app.ActivityThread$GcIdler mGcIdler;
    boolean mGcIdlerScheduled;
    final android.util.ArrayMap mGetProviderLocks;
    final android.app.ActivityThread$H mH;
    boolean mHasImeComponent;
    boolean mHiddenApiWarningShown;
    android.app.Application mInitialApplication;
    android.app.Instrumentation mInstrumentation;
    java.lang.String mInstrumentationAppDir;
    java.lang.String mInstrumentationLibDir;
    java.lang.String mInstrumentationPackageName;
    java.lang.String[] mInstrumentationSplitAppDirs;
    java.lang.String mInstrumentedAppDir;
    java.lang.String mInstrumentedLibDir;
    java.lang.String[] mInstrumentedSplitAppDirs;
    java.util.ArrayList mLastAssistStructures;
    private int mLastProcessState;
    private final java.util.Map mLastReportedWindowingMode;
    private int mLastSessionId;
    final android.util.ArrayMap mLocalProviders;
    final android.util.ArrayMap mLocalProvidersByName;
    final android.os.Looper mLooper;
    private android.content.res.Configuration mMainThreadConfig;
    private long mNetworkBlockSeq;
    private final java.lang.Object mNetworkPolicyLock;
    android.app.ActivityThread$ActivityClientRecord mNewActivities;
    private final java.util.concurrent.atomic.AtomicInteger mNumLaunchingActivities;
    int mNumVisibleActivities;
    final android.util.ArrayMap mOnPauseListeners;
    final android.util.ArrayMap mPackages;
    android.content.res.Configuration mPendingConfiguration;
    private int mPendingProcessState;
    android.app.ActivityThread$Profiler mProfiler;
    final android.util.ArrayMap mProviderMap;
    final android.util.ArrayMap mProviderRefCountMap;
    final android.app.ActivityThread$PurgeIdler mPurgeIdler;
    boolean mPurgeIdlerScheduled;
    final java.util.ArrayList mRelaunchingActivities;
    private java.util.Map mRemoteCancellations;
    final android.util.ArrayMap mResourcePackages;
    private final android.app.ResourcesManager mResourcesManager;
    final android.util.ArrayMap mServices;
    boolean mSomeActivitiesChanged;
    private android.app.ContextImpl mSystemContext;
    boolean mSystemThread;
    private android.app.ContextImpl mSystemUiContext;
    private final android.app.servertransaction.TransactionExecutor mTransactionExecutor;

    static void <clinit>()
    {
        android.graphics.Bitmap$Config $r0;
        java.lang.ThreadLocal $r1;

        <android.app.ActivityThread: boolean localLOGV> = 0;

        <android.app.ActivityThread: int VM_PROCESS_STATE_JANK_PERCEPTIBLE> = 0;

        <android.app.ActivityThread: int VM_PROCESS_STATE_JANK_IMPERCEPTIBLE> = 1;

        <android.app.ActivityThread: java.lang.String TWO_COUNT_COLUMN_HEADER> = "%21s %8s %21s %8s";

        <android.app.ActivityThread: java.lang.String TWO_COUNT_COLUMNS> = "%21s %8d %21s %8d";

        <android.app.ActivityThread: java.lang.String THREE_COUNT_COLUMNS> = "%21s %8d %21s %8s %21s %8d";

        <android.app.ActivityThread: java.lang.String TAG> = "ActivityThread";

        <android.app.ActivityThread: int SQLITE_MEM_RELEASED_EVENT_LOG_TAG> = 75003;

        <android.app.ActivityThread: int SERVICE_DONE_EXECUTING_STOP> = 2;

        <android.app.ActivityThread: int SERVICE_DONE_EXECUTING_START> = 1;

        <android.app.ActivityThread: int SERVICE_DONE_EXECUTING_ANON> = 0;

        <android.app.ActivityThread: boolean REPORT_TO_ACTIVITY> = 1;

        <android.app.ActivityThread: java.lang.String PROC_START_SEQ_IDENT> = "seq=";

        <android.app.ActivityThread: long PENDING_TOP_PROCESS_STATE_TIMEOUT> = 1000L;

        <android.app.ActivityThread: java.lang.String ONE_COUNT_COLUMN> = "%21s %8d";

        <android.app.ActivityThread: java.lang.String ONE_ALT_COUNT_COLUMN> = "%21s %8s %21s %8d";

        <android.app.ActivityThread: long MIN_TIME_BETWEEN_GCS> = 5000L;

        <android.app.ActivityThread: long INVALID_PROC_STATE_SEQ> = -1L;

        <android.app.ActivityThread: java.lang.String HEAP_FULL_COLUMN> = "%13s %8s %8s %8s %8s %8s %8s %8s %8s %8s %8s %8s";

        <android.app.ActivityThread: java.lang.String HEAP_COLUMN> = "%13s %8s %8s %8s %8s %8s %8s %8s %8s";

        <android.app.ActivityThread: boolean DEBUG_SERVICE> = 0;

        <android.app.ActivityThread: boolean DEBUG_RESULTS> = 0;

        <android.app.ActivityThread: boolean DEBUG_PROVIDER> = 0;

        <android.app.ActivityThread: boolean DEBUG_ORDER> = 0;

        <android.app.ActivityThread: boolean DEBUG_MESSAGES> = 0;

        <android.app.ActivityThread: boolean DEBUG_MEMORY_TRIM> = 0;

        <android.app.ActivityThread: boolean DEBUG_CONFIGURATION> = 0;

        <android.app.ActivityThread: boolean DEBUG_BROADCAST> = 0;

        <android.app.ActivityThread: boolean DEBUG_BACKUP> = 0;

        <android.app.ActivityThread: long CONTENT_PROVIDER_RETAIN_TIME> = 1000L;

        <android.app.ActivityThread: int ACTIVITY_THREAD_CHECKIN_VERSION> = 4;

        $r0 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config RGB_565>;

        <android.app.ActivityThread: android.graphics.Bitmap$Config THUMBNAIL_FORMAT> = $r0;

        $r1 = new java.lang.ThreadLocal;

        specialinvoke $r1.<java.lang.ThreadLocal: void <init>()>();

        <android.app.ActivityThread: java.lang.ThreadLocal sCurrentBroadcastIntent> = $r1;

        return;
    }

    void <init>()
    {
        android.app.ActivityThread r0;
        java.lang.Object $r2;
        android.app.ActivityThread$ApplicationThread $r3;
        android.os.Looper $r4;
        android.app.ActivityThread$H $r5;
        android.os.HandlerExecutor $r6;
        android.util.ArrayMap $r7, $r8, $r12, $r15, $r16, $r19, $r21, $r22, $r23, $r24, $r25, $r26;
        java.util.Map $r9, $r20;
        java.util.concurrent.atomic.AtomicInteger $r10;
        java.util.ArrayList $r11, $r13, $r17;
        android.util.SparseArray $r14;
        android.app.servertransaction.TransactionExecutor $r18;
        android.app.ActivityThread$GcIdler $r27;
        android.app.ActivityThread$PurgeIdler $r28;
        android.content.res.Configuration $r29;
        android.app.ResourcesManager $r30;

        r0 := @this: android.app.ActivityThread;

        specialinvoke r0.<android.app.ClientTransactionHandler: void <init>()>();

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<android.app.ActivityThread: java.lang.Object mNetworkPolicyLock> = $r2;

        r0.<android.app.ActivityThread: long mNetworkBlockSeq> = -1L;

        $r3 = new android.app.ActivityThread$ApplicationThread;

        specialinvoke $r3.<android.app.ActivityThread$ApplicationThread: void <init>(android.app.ActivityThread,android.app.ActivityThread$1)>(r0, null);

        r0.<android.app.ActivityThread: android.app.ActivityThread$ApplicationThread mAppThread> = $r3;

        $r4 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        r0.<android.app.ActivityThread: android.os.Looper mLooper> = $r4;

        $r5 = new android.app.ActivityThread$H;

        specialinvoke $r5.<android.app.ActivityThread$H: void <init>(android.app.ActivityThread)>(r0);

        r0.<android.app.ActivityThread: android.app.ActivityThread$H mH> = $r5;

        $r6 = new android.os.HandlerExecutor;

        specialinvoke $r6.<android.os.HandlerExecutor: void <init>(android.os.Handler)>($r5);

        r0.<android.app.ActivityThread: java.util.concurrent.Executor mExecutor> = $r6;

        $r7 = new android.util.ArrayMap;

        specialinvoke $r7.<android.util.ArrayMap: void <init>()>();

        r0.<android.app.ActivityThread: android.util.ArrayMap mActivities> = $r7;

        $r8 = new android.util.ArrayMap;

        specialinvoke $r8.<android.util.ArrayMap: void <init>()>();

        $r9 = staticinvoke <java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>($r8);

        r0.<android.app.ActivityThread: java.util.Map mActivitiesToBeDestroyed> = $r9;

        r0.<android.app.ActivityThread: android.app.ActivityThread$ActivityClientRecord mNewActivities> = null;

        r0.<android.app.ActivityThread: int mNumVisibleActivities> = 0;

        $r10 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r10.<java.util.concurrent.atomic.AtomicInteger: void <init>()>();

        r0.<android.app.ActivityThread: java.util.concurrent.atomic.AtomicInteger mNumLaunchingActivities> = $r10;

        r0.<android.app.ActivityThread: int mLastProcessState> = -1;

        r0.<android.app.ActivityThread: int mPendingProcessState> = -1;

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        r0.<android.app.ActivityThread: java.util.ArrayList mLastAssistStructures> = $r11;

        $r12 = new android.util.ArrayMap;

        specialinvoke $r12.<android.util.ArrayMap: void <init>()>();

        r0.<android.app.ActivityThread: android.util.ArrayMap mServices> = $r12;

        $r13 = new java.util.ArrayList;

        specialinvoke $r13.<java.util.ArrayList: void <init>()>();

        r0.<android.app.ActivityThread: java.util.ArrayList mAllApplications> = $r13;

        $r14 = new android.util.SparseArray;

        specialinvoke $r14.<android.util.SparseArray: void <init>()>();

        r0.<android.app.ActivityThread: android.util.SparseArray mBackupAgentsByUser> = $r14;

        r0.<android.app.ActivityThread: java.lang.String mInstrumentationPackageName> = null;

        r0.<android.app.ActivityThread: java.lang.String mInstrumentationAppDir> = null;

        r0.<android.app.ActivityThread: java.lang.String[] mInstrumentationSplitAppDirs> = null;

        r0.<android.app.ActivityThread: java.lang.String mInstrumentationLibDir> = null;

        r0.<android.app.ActivityThread: java.lang.String mInstrumentedAppDir> = null;

        r0.<android.app.ActivityThread: java.lang.String[] mInstrumentedSplitAppDirs> = null;

        r0.<android.app.ActivityThread: java.lang.String mInstrumentedLibDir> = null;

        r0.<android.app.ActivityThread: boolean mSystemThread> = 0;

        r0.<android.app.ActivityThread: boolean mSomeActivitiesChanged> = 0;

        r0.<android.app.ActivityThread: boolean mHiddenApiWarningShown> = 0;

        $r15 = new android.util.ArrayMap;

        specialinvoke $r15.<android.util.ArrayMap: void <init>()>();

        r0.<android.app.ActivityThread: android.util.ArrayMap mPackages> = $r15;

        $r16 = new android.util.ArrayMap;

        specialinvoke $r16.<android.util.ArrayMap: void <init>()>();

        r0.<android.app.ActivityThread: android.util.ArrayMap mResourcePackages> = $r16;

        $r17 = new java.util.ArrayList;

        specialinvoke $r17.<java.util.ArrayList: void <init>()>();

        r0.<android.app.ActivityThread: java.util.ArrayList mRelaunchingActivities> = $r17;

        r0.<android.app.ActivityThread: android.content.res.Configuration mPendingConfiguration> = null;

        $r18 = new android.app.servertransaction.TransactionExecutor;

        specialinvoke $r18.<android.app.servertransaction.TransactionExecutor: void <init>(android.app.ClientTransactionHandler)>(r0);

        r0.<android.app.ActivityThread: android.app.servertransaction.TransactionExecutor mTransactionExecutor> = $r18;

        $r19 = new android.util.ArrayMap;

        specialinvoke $r19.<android.util.ArrayMap: void <init>()>();

        $r20 = staticinvoke <java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>($r19);

        r0.<android.app.ActivityThread: java.util.Map mLastReportedWindowingMode> = $r20;

        $r21 = new android.util.ArrayMap;

        specialinvoke $r21.<android.util.ArrayMap: void <init>()>();

        r0.<android.app.ActivityThread: android.util.ArrayMap mProviderMap> = $r21;

        $r22 = new android.util.ArrayMap;

        specialinvoke $r22.<android.util.ArrayMap: void <init>()>();

        r0.<android.app.ActivityThread: android.util.ArrayMap mProviderRefCountMap> = $r22;

        $r23 = new android.util.ArrayMap;

        specialinvoke $r23.<android.util.ArrayMap: void <init>()>();

        r0.<android.app.ActivityThread: android.util.ArrayMap mLocalProviders> = $r23;

        $r24 = new android.util.ArrayMap;

        specialinvoke $r24.<android.util.ArrayMap: void <init>()>();

        r0.<android.app.ActivityThread: android.util.ArrayMap mLocalProvidersByName> = $r24;

        $r25 = new android.util.ArrayMap;

        specialinvoke $r25.<android.util.ArrayMap: void <init>()>();

        r0.<android.app.ActivityThread: android.util.ArrayMap mGetProviderLocks> = $r25;

        $r26 = new android.util.ArrayMap;

        specialinvoke $r26.<android.util.ArrayMap: void <init>()>();

        r0.<android.app.ActivityThread: android.util.ArrayMap mOnPauseListeners> = $r26;

        $r27 = new android.app.ActivityThread$GcIdler;

        specialinvoke $r27.<android.app.ActivityThread$GcIdler: void <init>(android.app.ActivityThread)>(r0);

        r0.<android.app.ActivityThread: android.app.ActivityThread$GcIdler mGcIdler> = $r27;

        $r28 = new android.app.ActivityThread$PurgeIdler;

        specialinvoke $r28.<android.app.ActivityThread$PurgeIdler: void <init>(android.app.ActivityThread)>(r0);

        r0.<android.app.ActivityThread: android.app.ActivityThread$PurgeIdler mPurgeIdler> = $r28;

        r0.<android.app.ActivityThread: boolean mPurgeIdlerScheduled> = 0;

        r0.<android.app.ActivityThread: boolean mGcIdlerScheduled> = 0;

        r0.<android.app.ActivityThread: android.os.Bundle mCoreSettings> = null;

        r0.<android.app.ActivityThread: boolean mHasImeComponent> = 0;

        $r29 = new android.content.res.Configuration;

        specialinvoke $r29.<android.content.res.Configuration: void <init>()>();

        r0.<android.app.ActivityThread: android.content.res.Configuration mMainThreadConfig> = $r29;

        $r30 = staticinvoke <android.app.ResourcesManager: android.app.ResourcesManager getInstance()>();

        r0.<android.app.ActivityThread: android.app.ResourcesManager mResourcesManager> = $r30;

        return;
    }

    static void access$100(android.app.ActivityThread, int, java.lang.Object, int, int, boolean)
    {
        android.app.ActivityThread r0;
        int i0, i1, i2;
        java.lang.Object r1;
        boolean z0;

        r0 := @parameter0: android.app.ActivityThread;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        z0 := @parameter5: boolean;

        specialinvoke r0.<android.app.ActivityThread: void sendMessage(int,java.lang.Object,int,int,boolean)>(i0, r1, i1, i2, z0);

        return;
    }

    static void access$1000(android.app.ActivityThread, android.os.IBinder, com.android.internal.app.IVoiceInteractor, android.os.CancellationSignal, android.os.RemoteCallback)
    {
        android.app.ActivityThread r0;
        android.os.IBinder r1;
        com.android.internal.app.IVoiceInteractor r2;
        android.os.CancellationSignal r3;
        android.os.RemoteCallback r4;

        r0 := @parameter0: android.app.ActivityThread;

        r1 := @parameter1: android.os.IBinder;

        r2 := @parameter2: com.android.internal.app.IVoiceInteractor;

        r3 := @parameter3: android.os.CancellationSignal;

        r4 := @parameter4: android.os.RemoteCallback;

        specialinvoke r0.<android.app.ActivityThread: void handleRequestDirectActions(android.os.IBinder,com.android.internal.app.IVoiceInteractor,android.os.CancellationSignal,android.os.RemoteCallback)>(r1, r2, r3, r4);

        return;
    }

    static void access$1100(android.app.ActivityThread, int)
    {
        android.app.ActivityThread r0;
        int i0;

        r0 := @parameter0: android.app.ActivityThread;

        i0 := @parameter1: int;

        specialinvoke r0.<android.app.ActivityThread: void handleTrimMemory(int)>(i0);

        return;
    }

    static android.os.CancellationSignal access$1200(android.app.ActivityThread, android.app.ActivityThread$SafeCancellationTransport)
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$SafeCancellationTransport r1;
        android.os.CancellationSignal $r2;

        r0 := @parameter0: android.app.ActivityThread;

        r1 := @parameter1: android.app.ActivityThread$SafeCancellationTransport;

        $r2 = specialinvoke r0.<android.app.ActivityThread: android.os.CancellationSignal removeSafeCancellationTransport(android.app.ActivityThread$SafeCancellationTransport)>(r1);

        return $r2;
    }

    static void access$1300(android.app.ActivityThread, android.app.ActivityThread$AppBindData)
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$AppBindData r1;

        r0 := @parameter0: android.app.ActivityThread;

        r1 := @parameter1: android.app.ActivityThread$AppBindData;

        specialinvoke r0.<android.app.ActivityThread: void handleBindApplication(android.app.ActivityThread$AppBindData)>(r1);

        return;
    }

    static void access$1400(android.app.ActivityThread, android.app.ActivityThread$ReceiverData)
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$ReceiverData r1;

        r0 := @parameter0: android.app.ActivityThread;

        r1 := @parameter1: android.app.ActivityThread$ReceiverData;

        specialinvoke r0.<android.app.ActivityThread: void handleReceiver(android.app.ActivityThread$ReceiverData)>(r1);

        return;
    }

    static void access$1500(android.app.ActivityThread, android.app.ActivityThread$CreateServiceData)
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$CreateServiceData r1;

        r0 := @parameter0: android.app.ActivityThread;

        r1 := @parameter1: android.app.ActivityThread$CreateServiceData;

        specialinvoke r0.<android.app.ActivityThread: void handleCreateService(android.app.ActivityThread$CreateServiceData)>(r1);

        return;
    }

    static void access$1600(android.app.ActivityThread, android.app.ActivityThread$BindServiceData)
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$BindServiceData r1;

        r0 := @parameter0: android.app.ActivityThread;

        r1 := @parameter1: android.app.ActivityThread$BindServiceData;

        specialinvoke r0.<android.app.ActivityThread: void handleBindService(android.app.ActivityThread$BindServiceData)>(r1);

        return;
    }

    static void access$1700(android.app.ActivityThread, android.app.ActivityThread$BindServiceData)
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$BindServiceData r1;

        r0 := @parameter0: android.app.ActivityThread;

        r1 := @parameter1: android.app.ActivityThread$BindServiceData;

        specialinvoke r0.<android.app.ActivityThread: void handleUnbindService(android.app.ActivityThread$BindServiceData)>(r1);

        return;
    }

    static void access$1800(android.app.ActivityThread, android.app.ActivityThread$ServiceArgsData)
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$ServiceArgsData r1;

        r0 := @parameter0: android.app.ActivityThread;

        r1 := @parameter1: android.app.ActivityThread$ServiceArgsData;

        specialinvoke r0.<android.app.ActivityThread: void handleServiceArgs(android.app.ActivityThread$ServiceArgsData)>(r1);

        return;
    }

    static void access$1900(android.app.ActivityThread, android.os.IBinder)
    {
        android.app.ActivityThread r0;
        android.os.IBinder r1;

        r0 := @parameter0: android.app.ActivityThread;

        r1 := @parameter1: android.os.IBinder;

        specialinvoke r0.<android.app.ActivityThread: void handleStopService(android.os.IBinder)>(r1);

        return;
    }

    static void access$200(android.app.ActivityThread, int, java.lang.Object, int, int)
    {
        android.app.ActivityThread r0;
        int i0, i1, i2;
        java.lang.Object r1;

        r0 := @parameter0: android.app.ActivityThread;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        specialinvoke r0.<android.app.ActivityThread: void sendMessage(int,java.lang.Object,int,int)>(i0, r1, i1, i2);

        return;
    }

    static void access$2000(android.app.ActivityThread, android.app.ActivityThread$DumpComponentInfo)
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$DumpComponentInfo r1;

        r0 := @parameter0: android.app.ActivityThread;

        r1 := @parameter1: android.app.ActivityThread$DumpComponentInfo;

        specialinvoke r0.<android.app.ActivityThread: void handleDumpService(android.app.ActivityThread$DumpComponentInfo)>(r1);

        return;
    }

    static void access$2100(android.app.ActivityThread, android.app.ActivityThread$CreateBackupAgentData)
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$CreateBackupAgentData r1;

        r0 := @parameter0: android.app.ActivityThread;

        r1 := @parameter1: android.app.ActivityThread$CreateBackupAgentData;

        specialinvoke r0.<android.app.ActivityThread: void handleCreateBackupAgent(android.app.ActivityThread$CreateBackupAgentData)>(r1);

        return;
    }

    static void access$2200(android.app.ActivityThread, android.app.ActivityThread$CreateBackupAgentData)
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$CreateBackupAgentData r1;

        r0 := @parameter0: android.app.ActivityThread;

        r1 := @parameter1: android.app.ActivityThread$CreateBackupAgentData;

        specialinvoke r0.<android.app.ActivityThread: void handleDestroyBackupAgent(android.app.ActivityThread$CreateBackupAgentData)>(r1);

        return;
    }

    static void access$2300(android.app.ActivityThread, android.app.ActivityThread$DumpComponentInfo)
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$DumpComponentInfo r1;

        r0 := @parameter0: android.app.ActivityThread;

        r1 := @parameter1: android.app.ActivityThread$DumpComponentInfo;

        specialinvoke r0.<android.app.ActivityThread: void handleDumpActivity(android.app.ActivityThread$DumpComponentInfo)>(r1);

        return;
    }

    static void access$2400(android.app.ActivityThread, android.app.ActivityThread$DumpComponentInfo)
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$DumpComponentInfo r1;

        r0 := @parameter0: android.app.ActivityThread;

        r1 := @parameter1: android.app.ActivityThread$DumpComponentInfo;

        specialinvoke r0.<android.app.ActivityThread: void handleDumpProvider(android.app.ActivityThread$DumpComponentInfo)>(r1);

        return;
    }

    static void access$2500(android.app.ActivityThread, android.os.Bundle)
    {
        android.app.ActivityThread r0;
        android.os.Bundle r1;

        r0 := @parameter0: android.app.ActivityThread;

        r1 := @parameter1: android.os.Bundle;

        specialinvoke r0.<android.app.ActivityThread: void handleSetCoreSettings(android.os.Bundle)>(r1);

        return;
    }

    static void access$2600(android.app.ActivityThread, android.app.ActivityThread$UpdateCompatibilityData)
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$UpdateCompatibilityData r1;

        r0 := @parameter0: android.app.ActivityThread;

        r1 := @parameter1: android.app.ActivityThread$UpdateCompatibilityData;

        specialinvoke r0.<android.app.ActivityThread: void handleUpdatePackageCompatibilityInfo(android.app.ActivityThread$UpdateCompatibilityData)>(r1);

        return;
    }

    static void access$2700(android.app.ActivityThread, android.os.IBinder)
    {
        android.app.ActivityThread r0;
        android.os.IBinder r1;

        r0 := @parameter0: android.app.ActivityThread;

        r1 := @parameter1: android.os.IBinder;

        specialinvoke r0.<android.app.ActivityThread: void handleEnterAnimationComplete(android.os.IBinder)>(r1);

        return;
    }

    static void access$2800(android.app.ActivityThread)
    {
        android.app.ActivityThread r0;

        r0 := @parameter0: android.app.ActivityThread;

        specialinvoke r0.<android.app.ActivityThread: void handleStartBinderTracking()>();

        return;
    }

    static void access$2900(android.app.ActivityThread, android.os.ParcelFileDescriptor)
    {
        android.app.ActivityThread r0;
        android.os.ParcelFileDescriptor r1;

        r0 := @parameter0: android.app.ActivityThread;

        r1 := @parameter1: android.os.ParcelFileDescriptor;

        specialinvoke r0.<android.app.ActivityThread: void handleStopBinderTrackingAndDump(android.os.ParcelFileDescriptor)>(r1);

        return;
    }

    static void access$300(android.app.ActivityThread, int, java.lang.Object, int)
    {
        android.app.ActivityThread r0;
        int i0, i1;
        java.lang.Object r1;

        r0 := @parameter0: android.app.ActivityThread;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        i1 := @parameter3: int;

        specialinvoke r0.<android.app.ActivityThread: void sendMessage(int,java.lang.Object,int)>(i0, r1, i1);

        return;
    }

    static void access$3000(android.app.ActivityThread, android.os.IBinder, com.android.internal.app.IVoiceInteractor)
    {
        android.app.ActivityThread r0;
        android.os.IBinder r1;
        com.android.internal.app.IVoiceInteractor r2;

        r0 := @parameter0: android.app.ActivityThread;

        r1 := @parameter1: android.os.IBinder;

        r2 := @parameter2: com.android.internal.app.IVoiceInteractor;

        specialinvoke r0.<android.app.ActivityThread: void handleLocalVoiceInteractionStarted(android.os.IBinder,com.android.internal.app.IVoiceInteractor)>(r1, r2);

        return;
    }

    static void access$3100(android.app.ActivityThread, java.lang.String, java.lang.String[])
    {
        android.app.ActivityThread r0;
        java.lang.String r1;
        java.lang.String[] r2;

        r0 := @parameter0: android.app.ActivityThread;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String[];

        specialinvoke r0.<android.app.ActivityThread: void handleRunIsolatedEntryPoint(java.lang.String,java.lang.String[])>(r1, r2);

        return;
    }

    static android.app.servertransaction.TransactionExecutor access$3200(android.app.ActivityThread)
    {
        android.app.ActivityThread r0;
        android.app.servertransaction.TransactionExecutor $r1;

        r0 := @parameter0: android.app.ActivityThread;

        $r1 = r0.<android.app.ActivityThread: android.app.servertransaction.TransactionExecutor mTransactionExecutor>;

        return $r1;
    }

    static void access$3300(android.app.ActivityThread, android.os.IBinder)
    {
        android.app.ActivityThread r0;
        android.os.IBinder r1;

        r0 := @parameter0: android.app.ActivityThread;

        r1 := @parameter1: android.os.IBinder;

        specialinvoke r0.<android.app.ActivityThread: void handleRelaunchActivityLocally(android.os.IBinder)>(r1);

        return;
    }

    static void access$3400(android.app.ActivityThread)
    {
        android.app.ActivityThread r0;

        r0 := @parameter0: android.app.ActivityThread;

        specialinvoke r0.<android.app.ActivityThread: void applyPendingProcessState()>();

        return;
    }

    static void access$3500(android.app.ActivityThread)
    {
        android.app.ActivityThread r0;

        r0 := @parameter0: android.app.ActivityThread;

        specialinvoke r0.<android.app.ActivityThread: void purgePendingResources()>();

        return;
    }

    static void access$400(android.app.ActivityThread, java.io.FileDescriptor)
    {
        android.app.ActivityThread r0;
        java.io.FileDescriptor r1;

        r0 := @parameter0: android.app.ActivityThread;

        r1 := @parameter1: java.io.FileDescriptor;

        specialinvoke r0.<android.app.ActivityThread: void nDumpGraphicsInfo(java.io.FileDescriptor)>(r1);

        return;
    }

    static java.lang.Object access$600(android.app.ActivityThread)
    {
        android.app.ActivityThread r0;
        java.lang.Object $r1;

        r0 := @parameter0: android.app.ActivityThread;

        $r1 = r0.<android.app.ActivityThread: java.lang.Object mNetworkPolicyLock>;

        return $r1;
    }

    static long access$702(android.app.ActivityThread, long)
    {
        android.app.ActivityThread r0;
        long l0;

        r0 := @parameter0: android.app.ActivityThread;

        l0 := @parameter1: long;

        r0.<android.app.ActivityThread: long mNetworkBlockSeq> = l0;

        return l0;
    }

    static android.app.ActivityThread$SafeCancellationTransport access$800(android.app.ActivityThread, android.os.CancellationSignal)
    {
        android.app.ActivityThread r0;
        android.os.CancellationSignal r1;
        android.app.ActivityThread$SafeCancellationTransport $r2;

        r0 := @parameter0: android.app.ActivityThread;

        r1 := @parameter1: android.os.CancellationSignal;

        $r2 = specialinvoke r0.<android.app.ActivityThread: android.app.ActivityThread$SafeCancellationTransport createSafeCancellationTransport(android.os.CancellationSignal)>(r1);

        return $r2;
    }

    static void access$900(android.app.ActivityThread, android.os.IBinder, java.lang.String, android.os.Bundle, android.os.CancellationSignal, android.os.RemoteCallback)
    {
        android.app.ActivityThread r0;
        android.os.IBinder r1;
        java.lang.String r2;
        android.os.Bundle r3;
        android.os.CancellationSignal r4;
        android.os.RemoteCallback r5;

        r0 := @parameter0: android.app.ActivityThread;

        r1 := @parameter1: android.os.IBinder;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: android.os.Bundle;

        r4 := @parameter4: android.os.CancellationSignal;

        r5 := @parameter5: android.os.RemoteCallback;

        specialinvoke r0.<android.app.ActivityThread: void handlePerformDirectAction(android.os.IBinder,java.lang.String,android.os.Bundle,android.os.CancellationSignal,android.os.RemoteCallback)>(r1, r2, r3, r4, r5);

        return;
    }

    private void applyPendingProcessState()
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$ApplicationThread r1;
        int i0, $i1, $i2;
        java.lang.Throwable $r3;

        r0 := @this: android.app.ActivityThread;

        r1 = r0.<android.app.ActivityThread: android.app.ActivityThread$ApplicationThread mAppThread>;

        entermonitor r1;

     label1:
        $i1 = r0.<android.app.ActivityThread: int mPendingProcessState>;

        if $i1 != -1 goto label3;

        exitmonitor r1;

     label2:
        return;

     label3:
        i0 = r0.<android.app.ActivityThread: int mPendingProcessState>;

        r0.<android.app.ActivityThread: int mPendingProcessState> = -1;

        $i2 = r0.<android.app.ActivityThread: int mLastProcessState>;

        if i0 != $i2 goto label4;

        specialinvoke r0.<android.app.ActivityThread: void updateVmProcessState(int)>(i0);

     label4:
        exitmonitor r1;

     label5:
        return;

     label6:
        $r3 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    private void attach(boolean, long)
    {
        android.app.ActivityThread r0;
        boolean z0;
        long l0;
        int $i1, $i2;
        android.app.ContextImpl $r2, $r4;
        android.app.LoadedApk $r3, $r5;
        android.app._$$Lambda$ActivityThread$7yWwCvhfDgOc1FXQL9FUcwCTz5Y $r6;
        android.app.ActivityThread$ApplicationThread $r7, $r9;
        android.os.IBinder $r8;
        android.app.ActivityThread$1 $r10;
        android.os.RemoteException $r11;
        java.lang.RuntimeException $r12, $r18;
        java.lang.Exception $r13;
        java.lang.StringBuilder $r14;
        java.lang.String $r16, $r19;
        android.app.IActivityManager r20;
        android.app.Instrumentation r22;
        android.app.Application r23;

        r0 := @this: android.app.ActivityThread;

        z0 := @parameter0: boolean;

        l0 := @parameter1: long;

        <android.app.ActivityThread: android.app.ActivityThread sCurrentActivityThread> = r0;

        r0.<android.app.ActivityThread: boolean mSystemThread> = z0;

        if z0 != 0 goto label4;

        $i2 = staticinvoke <android.os.UserHandle: int myUserId()>();

        staticinvoke <android.ddm.DdmHandleAppName: void setAppName(java.lang.String,int)>("<pre-initialized>", $i2);

        $r7 = r0.<android.app.ActivityThread: android.app.ActivityThread$ApplicationThread mAppThread>;

        $r8 = virtualinvoke $r7.<android.app.ActivityThread$ApplicationThread: android.os.IBinder asBinder()>();

        staticinvoke <com.android.internal.os.RuntimeInit: void setApplicationObject(android.os.IBinder)>($r8);

        r20 = staticinvoke <android.app.ActivityManager: android.app.IActivityManager getService()>();

     label1:
        $r9 = r0.<android.app.ActivityThread: android.app.ActivityThread$ApplicationThread mAppThread>;

        interfaceinvoke r20.<android.app.IActivityManager: void attachApplication(android.app.IApplicationThread,long)>($r9, l0);

     label2:
        $r10 = new android.app.ActivityThread$1;

        specialinvoke $r10.<android.app.ActivityThread$1: void <init>(android.app.ActivityThread)>(r0);

        staticinvoke <com.android.internal.os.BinderInternal: void addGcWatcher(java.lang.Runnable)>($r10);

        goto label7;

     label3:
        $r11 := @caughtexception;

        $r12 = virtualinvoke $r11.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r12;

     label4:
        $i1 = staticinvoke <android.os.UserHandle: int myUserId()>();

        staticinvoke <android.ddm.DdmHandleAppName: void setAppName(java.lang.String,int)>("system_process", $i1);

     label5:
        r22 = new android.app.Instrumentation;

        specialinvoke r22.<android.app.Instrumentation: void <init>()>();

        r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation> = r22;

        virtualinvoke r22.<android.app.Instrumentation: void basicInit(android.app.ActivityThread)>(r0);

     label6:
        $r2 = virtualinvoke r0.<android.app.ActivityThread: android.app.ContextImpl getSystemContext()>();

        $r3 = $r2.<android.app.ContextImpl: android.app.LoadedApk mPackageInfo>;

        $r4 = staticinvoke <android.app.ContextImpl: android.app.ContextImpl createAppContext(android.app.ActivityThread,android.app.LoadedApk)>(r0, $r3);

        $r5 = $r4.<android.app.ContextImpl: android.app.LoadedApk mPackageInfo>;

        r23 = virtualinvoke $r5.<android.app.LoadedApk: android.app.Application makeApplication(boolean,android.app.Instrumentation)>(1, null);

        r0.<android.app.ActivityThread: android.app.Application mInitialApplication> = r23;

        virtualinvoke r23.<android.app.Application: void onCreate()>();

     label7:
        $r6 = new android.app._$$Lambda$ActivityThread$7yWwCvhfDgOc1FXQL9FUcwCTz5Y;

        specialinvoke $r6.<android.app._$$Lambda$ActivityThread$7yWwCvhfDgOc1FXQL9FUcwCTz5Y: void <init>(android.app.ActivityThread)>(r0);

        staticinvoke <android.view.ViewRootImpl: void addConfigCallback(android.view.ViewRootImpl$ConfigChangedCallback)>($r6);

        return;

     label8:
        $r13 := @caughtexception;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to instantiate Application():");

        $r16 = virtualinvoke $r13.<java.lang.Exception: java.lang.String toString()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = new java.lang.RuntimeException;

        $r19 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r19, $r13);

        throw $r18;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.Exception from label5 to label6 with label8;
        catch java.lang.Exception from label6 to label7 with label8;
    }

    private static boolean attemptAttachAgent(java.lang.String, java.lang.ClassLoader)
    {
        java.lang.String r0, $r8;
        java.lang.ClassLoader r1;
        java.lang.Throwable $r2;
        java.lang.StringBuilder $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.ClassLoader;

     label1:
        staticinvoke <dalvik.system.VMDebug: void attachAgent(java.lang.String,java.lang.ClassLoader)>(r0, r1);

     label2:
        return 1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attaching agent with ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" failed: ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ActivityThread", $r8);

        return 0;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private void callActivityOnSaveInstanceState(android.app.ActivityThread$ActivityClientRecord)
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$ActivityClientRecord r1;
        android.os.Bundle $r2, $r3, $r4, $r9;
        boolean $z1;
        android.app.Activity $r5, $r10;
        android.app.Instrumentation $r6, $r11;
        android.os.PersistableBundle $r7, $r8;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.app.ActivityThread$ActivityClientRecord;

        $r2 = new android.os.Bundle;

        specialinvoke $r2.<android.os.Bundle: void <init>()>();

        r1.<android.app.ActivityThread$ActivityClientRecord: android.os.Bundle state> = $r2;

        $r3 = r1.<android.app.ActivityThread$ActivityClientRecord: android.os.Bundle state>;

        virtualinvoke $r3.<android.os.Bundle: boolean setAllowFds(boolean)>(0);

        $z1 = virtualinvoke r1.<android.app.ActivityThread$ActivityClientRecord: boolean isPersistable()>();

        if $z1 == 0 goto label1;

        $r7 = new android.os.PersistableBundle;

        specialinvoke $r7.<android.os.PersistableBundle: void <init>()>();

        r1.<android.app.ActivityThread$ActivityClientRecord: android.os.PersistableBundle persistentState> = $r7;

        $r11 = r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        $r10 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r9 = r1.<android.app.ActivityThread$ActivityClientRecord: android.os.Bundle state>;

        $r8 = r1.<android.app.ActivityThread$ActivityClientRecord: android.os.PersistableBundle persistentState>;

        virtualinvoke $r11.<android.app.Instrumentation: void callActivityOnSaveInstanceState(android.app.Activity,android.os.Bundle,android.os.PersistableBundle)>($r10, $r9, $r8);

        goto label2;

     label1:
        $r6 = r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        $r5 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r4 = r1.<android.app.ActivityThread$ActivityClientRecord: android.os.Bundle state>;

        virtualinvoke $r6.<android.app.Instrumentation: void callActivityOnSaveInstanceState(android.app.Activity,android.os.Bundle)>($r5, $r4);

     label2:
        return;
    }

    private void callActivityOnStop(android.app.ActivityThread$ActivityClientRecord, boolean, java.lang.String)
    {
        android.app.ActivityThread r0;
        android.app.Activity $r2, $r5, $r21;
        boolean $z0, $z1, $z2, z3, z4, z5, $z6;
        android.os.Bundle $r3;
        java.lang.Exception $r4;
        android.app.Instrumentation $r6;
        java.lang.StringBuilder $r7;
        android.content.Intent $r9;
        android.content.ComponentName $r10;
        java.lang.String $r11, $r14, $r17, r20;
        java.lang.RuntimeException $r16;
        android.util.SuperNotCalledException $r18;
        android.app.ActivityThread$ActivityClientRecord r19;

        r0 := @this: android.app.ActivityThread;

        r19 := @parameter0: android.app.ActivityThread$ActivityClientRecord;

        z3 := @parameter1: boolean;

        r20 := @parameter2: java.lang.String;

        if z3 == 0 goto label1;

        $r2 = r19.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $z0 = $r2.<android.app.Activity: boolean mFinished>;

        if $z0 != 0 goto label1;

        $r3 = r19.<android.app.ActivityThread$ActivityClientRecord: android.os.Bundle state>;

        if $r3 != null goto label1;

        $z1 = staticinvoke <android.app.ActivityThread$ActivityClientRecord: boolean access$3700(android.app.ActivityThread$ActivityClientRecord)>(r19);

        if $z1 != 0 goto label1;

        z4 = 1;

        goto label2;

     label1:
        z4 = 0;

     label2:
        z5 = staticinvoke <android.app.ActivityThread$ActivityClientRecord: boolean access$3800(android.app.ActivityThread$ActivityClientRecord)>(r19);

        if z4 == 0 goto label3;

        if z5 == 0 goto label3;

        specialinvoke r0.<android.app.ActivityThread: void callActivityOnSaveInstanceState(android.app.ActivityThread$ActivityClientRecord)>(r19);

     label3:
        $r21 = r19.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $z6 = r19.<android.app.ActivityThread$ActivityClientRecord: boolean mPreserveWindow>;

        virtualinvoke $r21.<android.app.Activity: void performStop(boolean,java.lang.String)>($z6, r20);

     label4:
        goto label6;

     label5:
        $r4 := @caughtexception;

        $r6 = r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        $r5 = r19.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $z2 = virtualinvoke $r6.<android.app.Instrumentation: boolean onException(java.lang.Object,java.lang.Throwable)>($r5, $r4);

        if $z2 == 0 goto label8;

     label6:
        virtualinvoke r19.<android.app.ActivityThread$ActivityClientRecord: void setState(int)>(5);

        if z4 == 0 goto label7;

        if z5 != 0 goto label7;

        specialinvoke r0.<android.app.ActivityThread: void callActivityOnSaveInstanceState(android.app.ActivityThread$ActivityClientRecord)>(r19);

     label7:
        return;

     label8:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to stop activity ");

        $r9 = r19.<android.app.ActivityThread$ActivityClientRecord: android.content.Intent intent>;

        $r10 = virtualinvoke $r9.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r11 = virtualinvoke $r10.<android.content.ComponentName: java.lang.String toShortString()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r14 = virtualinvoke $r4.<java.lang.Exception: java.lang.String toString()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = new java.lang.RuntimeException;

        $r17 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r17, $r4);

        throw $r16;

     label9:
        $r18 := @caughtexception;

        throw $r18;

        catch android.util.SuperNotCalledException from label3 to label4 with label9;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    private void checkAndBlockForNetworkAccess()
    {
        android.app.ActivityThread r0;
        java.lang.Object r1;
        long l0, $l2;
        byte $b1;
        android.app.IActivityManager $r2;
        java.lang.Throwable $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.app.ActivityThread;

        r1 = r0.<android.app.ActivityThread: java.lang.Object mNetworkPolicyLock>;

        entermonitor r1;

     label01:
        l0 = r0.<android.app.ActivityThread: long mNetworkBlockSeq>;

     label02:
        $b1 = l0 cmp -1L;

        if $b1 == 0 goto label06;

     label03:
        $r2 = staticinvoke <android.app.ActivityManager: android.app.IActivityManager getService()>();

        $l2 = r0.<android.app.ActivityThread: long mNetworkBlockSeq>;

        interfaceinvoke $r2.<android.app.IActivityManager: void waitForNetworkStateUpdate(long)>($l2);

        r0.<android.app.ActivityThread: long mNetworkBlockSeq> = -1L;

     label04:
        goto label06;

     label05:
        $r4 := @caughtexception;

     label06:
        exitmonitor r1;

     label07:
        return;

     label08:
        $r3 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r3;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch android.os.RemoteException from label03 to label04 with label05;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    static final void cleanUpPendingRemoveWindows(android.app.ActivityThread$ActivityClientRecord, boolean)
    {
        android.app.ActivityThread$ActivityClientRecord r0;
        boolean z0, $z1;
        android.os.IBinder r1;
        android.view.Window $r2, $r3, $r6;
        android.view.WindowManager $r4;
        android.view.View $r5, $r7;
        android.view.WindowManagerGlobal $r8;
        android.app.Activity $r9;
        java.lang.Class $r10;
        java.lang.String $r11;

        r0 := @parameter0: android.app.ActivityThread$ActivityClientRecord;

        z0 := @parameter1: boolean;

        $z1 = r0.<android.app.ActivityThread$ActivityClientRecord: boolean mPreserveWindow>;

        if $z1 == 0 goto label1;

        if z0 != 0 goto label1;

        return;

     label1:
        $r2 = r0.<android.app.ActivityThread$ActivityClientRecord: android.view.Window mPendingRemoveWindow>;

        if $r2 == null goto label2;

        $r4 = r0.<android.app.ActivityThread$ActivityClientRecord: android.view.WindowManager mPendingRemoveWindowManager>;

        $r3 = r0.<android.app.ActivityThread$ActivityClientRecord: android.view.Window mPendingRemoveWindow>;

        $r5 = virtualinvoke $r3.<android.view.Window: android.view.View getDecorView()>();

        interfaceinvoke $r4.<android.view.WindowManager: void removeViewImmediate(android.view.View)>($r5);

        $r6 = r0.<android.app.ActivityThread$ActivityClientRecord: android.view.Window mPendingRemoveWindow>;

        $r7 = virtualinvoke $r6.<android.view.Window: android.view.View getDecorView()>();

        r1 = virtualinvoke $r7.<android.view.View: android.os.IBinder getWindowToken()>();

        if r1 == null goto label2;

        $r8 = staticinvoke <android.view.WindowManagerGlobal: android.view.WindowManagerGlobal getInstance()>();

        $r9 = r0.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r10 = virtualinvoke $r9.<java.lang.Object: java.lang.Class getClass()>();

        $r11 = virtualinvoke $r10.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r8.<android.view.WindowManagerGlobal: void closeAll(android.os.IBinder,java.lang.String,java.lang.String)>(r1, $r11, "Activity");

     label2:
        r0.<android.app.ActivityThread$ActivityClientRecord: android.view.Window mPendingRemoveWindow> = null;

        r0.<android.app.ActivityThread$ActivityClientRecord: android.view.WindowManager mPendingRemoveWindowManager> = null;

        return;
    }

    private android.app.ContextImpl createBaseContextForActivity(android.app.ActivityThread$ActivityClientRecord)
    {
        android.app.ActivityThread r0;
        android.app.ContextImpl r1, r22;
        android.hardware.display.DisplayManagerGlobal r2;
        java.lang.String r3, $r12;
        int i0, i1, i2, i3;
        android.app.IActivityTaskManager $r4;
        android.os.IBinder $r5, $r7, $r18;
        android.content.res.Configuration $r6, $r16;
        android.content.pm.ActivityInfo $r8;
        android.app.LoadedApk $r9, $r11;
        android.view.DisplayAdjustments$FixedRotationAdjustments $r10, $r17;
        boolean $z0, $z1;
        android.content.res.Resources $r13;
        android.view.Display $r14;
        android.content.Context $r15;
        android.os.RemoteException $r19;
        java.lang.RuntimeException $r20;
        android.app.ActivityThread$ActivityClientRecord r21;
        int[] r23;

        r0 := @this: android.app.ActivityThread;

        r21 := @parameter0: android.app.ActivityThread$ActivityClientRecord;

     label1:
        $r4 = staticinvoke <android.app.ActivityTaskManager: android.app.IActivityTaskManager getService()>();

        $r5 = r21.<android.app.ActivityThread$ActivityClientRecord: android.os.IBinder token>;

        i2 = interfaceinvoke $r4.<android.app.IActivityTaskManager: int getDisplayId(android.os.IBinder)>($r5);

     label2:
        $r9 = r21.<android.app.ActivityThread$ActivityClientRecord: android.app.LoadedApk packageInfo>;

        $r8 = r21.<android.app.ActivityThread$ActivityClientRecord: android.content.pm.ActivityInfo activityInfo>;

        $r7 = r21.<android.app.ActivityThread$ActivityClientRecord: android.os.IBinder token>;

        $r6 = r21.<android.app.ActivityThread$ActivityClientRecord: android.content.res.Configuration overrideConfig>;

        r1 = staticinvoke <android.app.ContextImpl: android.app.ContextImpl createActivityContext(android.app.ActivityThread,android.app.LoadedApk,android.content.pm.ActivityInfo,android.os.IBinder,int,android.content.res.Configuration)>(r0, $r9, $r8, $r7, i2, $r6);

        $r10 = r21.<android.app.ActivityThread$ActivityClientRecord: android.view.DisplayAdjustments$FixedRotationAdjustments mPendingFixedRotationAdjustments>;

        if $r10 == null goto label3;

        $r18 = r21.<android.app.ActivityThread$ActivityClientRecord: android.os.IBinder token>;

        $r17 = r21.<android.app.ActivityThread$ActivityClientRecord: android.view.DisplayAdjustments$FixedRotationAdjustments mPendingFixedRotationAdjustments>;

        $r16 = r21.<android.app.ActivityThread$ActivityClientRecord: android.content.res.Configuration overrideConfig>;

        specialinvoke r0.<android.app.ActivityThread: void handleFixedRotationAdjustments(android.os.IBinder,android.view.DisplayAdjustments$FixedRotationAdjustments,android.content.res.Configuration)>($r18, $r17, $r16);

        r21.<android.app.ActivityThread$ActivityClientRecord: android.view.DisplayAdjustments$FixedRotationAdjustments mPendingFixedRotationAdjustments> = null;

     label3:
        r2 = staticinvoke <android.hardware.display.DisplayManagerGlobal: android.hardware.display.DisplayManagerGlobal getInstance()>();

        r3 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("debug.second-display.pkg");

        r22 = r1;

        if r3 == null goto label6;

        r22 = r1;

        $z0 = virtualinvoke r3.<java.lang.String: boolean isEmpty()>();

        if $z0 != 0 goto label6;

        r22 = r1;

        $r11 = r21.<android.app.ActivityThread$ActivityClientRecord: android.app.LoadedApk packageInfo>;

        $r12 = $r11.<android.app.LoadedApk: java.lang.String mPackageName>;

        $z1 = virtualinvoke $r12.<java.lang.String: boolean contains(java.lang.CharSequence)>(r3);

        if $z1 == 0 goto label6;

        r23 = virtualinvoke r2.<android.hardware.display.DisplayManagerGlobal: int[] getDisplayIds()>();

        i0 = lengthof r23;

        i3 = 0;

     label4:
        r22 = r1;

        if i3 >= i0 goto label6;

        i1 = r23[i3];

        if i1 == 0 goto label5;

        $r13 = virtualinvoke r1.<android.app.ContextImpl: android.content.res.Resources getResources()>();

        $r14 = virtualinvoke r2.<android.hardware.display.DisplayManagerGlobal: android.view.Display getCompatibleDisplay(int,android.content.res.Resources)>(i1, $r13);

        $r15 = virtualinvoke r1.<android.app.ContextImpl: android.content.Context createDisplayContext(android.view.Display)>($r14);

        r22 = (android.app.ContextImpl) $r15;

        goto label6;

     label5:
        i3 = i3 + 1;

        goto label4;

     label6:
        return r22;

     label7:
        $r19 := @caughtexception;

        $r20 = virtualinvoke $r19.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r20;

        catch android.os.RemoteException from label1 to label2 with label7;
    }

    private static android.content.res.Configuration createNewConfigAndUpdateIfNotNull(android.content.res.Configuration, android.content.res.Configuration)
    {
        android.content.res.Configuration r0, $r1, r2;

        r2 := @parameter0: android.content.res.Configuration;

        r0 := @parameter1: android.content.res.Configuration;

        if r0 != null goto label1;

        return r2;

     label1:
        $r1 = new android.content.res.Configuration;

        specialinvoke $r1.<android.content.res.Configuration: void <init>(android.content.res.Configuration)>(r2);

        virtualinvoke $r1.<android.content.res.Configuration: int updateFrom(android.content.res.Configuration)>(r0);

        return $r1;
    }

    private android.app.ActivityThread$SafeCancellationTransport createSafeCancellationTransport(android.os.CancellationSignal)
    {
        android.app.ActivityThread r0;
        java.util.Map $r1, $r2;
        java.lang.Throwable $r4;
        android.os.CancellationSignal r5;
        android.util.ArrayMap r6;
        android.app.ActivityThread$SafeCancellationTransport r7;

        r0 := @this: android.app.ActivityThread;

        r5 := @parameter0: android.os.CancellationSignal;

        entermonitor r0;

     label1:
        $r1 = r0.<android.app.ActivityThread: java.util.Map mRemoteCancellations>;

        if $r1 != null goto label2;

        r6 = new android.util.ArrayMap;

        specialinvoke r6.<android.util.ArrayMap: void <init>()>();

        r0.<android.app.ActivityThread: java.util.Map mRemoteCancellations> = r6;

     label2:
        r7 = new android.app.ActivityThread$SafeCancellationTransport;

        specialinvoke r7.<android.app.ActivityThread$SafeCancellationTransport: void <init>(android.app.ActivityThread,android.os.CancellationSignal)>(r0, r5);

        $r2 = r0.<android.app.ActivityThread: java.util.Map mRemoteCancellations>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, r5);

        exitmonitor r0;

     label3:
        return r7;

     label4:
        $r4 := @caughtexception;

     label5:
        exitmonitor r0;

     label6:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public static android.app.ActivityThread currentActivityThread()
    {
        android.app.ActivityThread $r0;

        $r0 = <android.app.ActivityThread: android.app.ActivityThread sCurrentActivityThread>;

        return $r0;
    }

    public static android.app.Application currentApplication()
    {
        android.app.ActivityThread r0;
        android.app.Application r1;

        r0 = staticinvoke <android.app.ActivityThread: android.app.ActivityThread currentActivityThread()>();

        if r0 == null goto label1;

        r1 = r0.<android.app.ActivityThread: android.app.Application mInitialApplication>;

        goto label2;

     label1:
        r1 = null;

     label2:
        return r1;
    }

    public static java.lang.String currentOpPackageName()
    {
        android.app.Application $r0, $r1;
        android.app.ActivityThread r2;
        java.lang.String r3;

        r2 = staticinvoke <android.app.ActivityThread: android.app.ActivityThread currentActivityThread()>();

        if r2 == null goto label1;

        $r0 = virtualinvoke r2.<android.app.ActivityThread: android.app.Application getApplication()>();

        if $r0 == null goto label1;

        $r1 = virtualinvoke r2.<android.app.ActivityThread: android.app.Application getApplication()>();

        r3 = virtualinvoke $r1.<android.app.Application: java.lang.String getOpPackageName()>();

        goto label2;

     label1:
        r3 = null;

     label2:
        return r3;
    }

    public static java.lang.String currentPackageName()
    {
        android.content.pm.ApplicationInfo $r0;
        android.app.ActivityThread r1;
        android.app.ActivityThread$AppBindData r2;
        java.lang.String r3;

        r1 = staticinvoke <android.app.ActivityThread: android.app.ActivityThread currentActivityThread()>();

        if r1 == null goto label1;

        r2 = r1.<android.app.ActivityThread: android.app.ActivityThread$AppBindData mBoundApplication>;

        if r2 == null goto label1;

        $r0 = r2.<android.app.ActivityThread$AppBindData: android.content.pm.ApplicationInfo appInfo>;

        r3 = $r0.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        goto label2;

     label1:
        r3 = null;

     label2:
        return r3;
    }

    public static java.lang.String currentProcessName()
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$AppBindData r1;
        java.lang.String r2;

        r0 = staticinvoke <android.app.ActivityThread: android.app.ActivityThread currentActivityThread()>();

        if r0 == null goto label1;

        r1 = r0.<android.app.ActivityThread: android.app.ActivityThread$AppBindData mBoundApplication>;

        if r1 == null goto label1;

        r2 = r1.<android.app.ActivityThread$AppBindData: java.lang.String processName>;

        goto label2;

     label1:
        r2 = null;

     label2:
        return r2;
    }

    private void deliverNewIntents(android.app.ActivityThread$ActivityClientRecord, java.util.List)
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$ActivityClientRecord r1;
        java.util.List r2;
        int i0, i1;
        com.android.internal.content.ReferrerIntent r3;
        java.lang.Object $r4;
        android.app.Activity $r5, $r7, $r9;
        java.lang.ClassLoader $r6;
        android.app.FragmentController $r8;
        android.app.Instrumentation $r10;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.app.ActivityThread$ActivityClientRecord;

        r2 := @parameter1: java.util.List;

        i0 = interfaceinvoke r2.<java.util.List: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r4 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i1);

        r3 = (com.android.internal.content.ReferrerIntent) $r4;

        $r5 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r6 = virtualinvoke $r5.<android.app.Activity: java.lang.ClassLoader getClassLoader()>();

        virtualinvoke r3.<com.android.internal.content.ReferrerIntent: void setExtrasClassLoader(java.lang.ClassLoader)>($r6);

        virtualinvoke r3.<com.android.internal.content.ReferrerIntent: void prepareToEnterProcess()>();

        $r7 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r8 = $r7.<android.app.Activity: android.app.FragmentController mFragments>;

        virtualinvoke $r8.<android.app.FragmentController: void noteStateNotSaved()>();

        $r10 = r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        $r9 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        virtualinvoke $r10.<android.app.Instrumentation: void callActivityOnNewIntent(android.app.Activity,com.android.internal.content.ReferrerIntent)>($r9, r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    private void deliverResults(android.app.ActivityThread$ActivityClientRecord, java.util.List, java.lang.String)
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$ActivityClientRecord r1;
        java.lang.String r2, $r8, $r23, $r26, $r29;
        int i0, $i1, $i2, i3;
        android.app.ResultInfo r3;
        java.lang.Object $r5;
        android.content.Intent $r6, $r7, $r11, $r13, $r21;
        android.app.Activity $r9, $r10, $r15;
        java.lang.ClassLoader $r12;
        java.lang.Exception $r14;
        android.app.Instrumentation $r16;
        boolean $z0;
        java.lang.StringBuilder $r17;
        android.content.ComponentName $r22;
        java.lang.RuntimeException $r28;
        java.util.List r30;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.app.ActivityThread$ActivityClientRecord;

        r30 := @parameter1: java.util.List;

        r2 := @parameter2: java.lang.String;

        i0 = interfaceinvoke r30.<java.util.List: int size()>();

        i3 = 0;

     label1:
        if i3 >= i0 goto label8;

        $r5 = interfaceinvoke r30.<java.util.List: java.lang.Object get(int)>(i3);

        r3 = (android.app.ResultInfo) $r5;

     label2:
        $r6 = r3.<android.app.ResultInfo: android.content.Intent mData>;

        if $r6 == null goto label3;

        $r11 = r3.<android.app.ResultInfo: android.content.Intent mData>;

        $r10 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r12 = virtualinvoke $r10.<android.app.Activity: java.lang.ClassLoader getClassLoader()>();

        virtualinvoke $r11.<android.content.Intent: void setExtrasClassLoader(java.lang.ClassLoader)>($r12);

        $r13 = r3.<android.app.ResultInfo: android.content.Intent mData>;

        virtualinvoke $r13.<android.content.Intent: void prepareToEnterProcess()>();

     label3:
        $r9 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r8 = r3.<android.app.ResultInfo: java.lang.String mResultWho>;

        $i2 = r3.<android.app.ResultInfo: int mRequestCode>;

        $i1 = r3.<android.app.ResultInfo: int mResultCode>;

        $r7 = r3.<android.app.ResultInfo: android.content.Intent mData>;

        virtualinvoke $r9.<android.app.Activity: void dispatchActivityResult(java.lang.String,int,int,android.content.Intent,java.lang.String)>($r8, $i2, $i1, $r7, r2);

     label4:
        goto label6;

     label5:
        $r14 := @caughtexception;

        $r16 = r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        $r15 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $z0 = virtualinvoke $r16.<android.app.Instrumentation: boolean onException(java.lang.Object,java.lang.Throwable)>($r15, $r14);

        if $z0 == 0 goto label7;

     label6:
        i3 = i3 + 1;

        goto label1;

     label7:
        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure delivering result ");

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to activity ");

        $r21 = r1.<android.app.ActivityThread$ActivityClientRecord: android.content.Intent intent>;

        $r22 = virtualinvoke $r21.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r23 = virtualinvoke $r22.<android.content.ComponentName: java.lang.String toShortString()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r26 = virtualinvoke $r14.<java.lang.Exception: java.lang.String toString()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r28 = new java.lang.RuntimeException;

        $r29 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r28.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r29, $r14);

        throw $r28;

     label8:
        return;

        catch java.lang.Exception from label2 to label3 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    public static void dumpMemInfoTable(android.util.proto.ProtoOutputStream, android.os.Debug$MemoryInfo, boolean, boolean, long, long, long, long, long, long)
    {
        android.util.proto.ProtoOutputStream r0;
        android.os.Debug$MemoryInfo r1;
        boolean z0, $z1, $z2, $z3, $z4, $z5, z6, z7, $z8, $z9, $z10;
        long l0, l1, l2, l3, l4, $l40, $l41, $l42, l43, l44, l45, l66, l79;
        int i5, i6, i7, i8, i9, i10, i11, i12, i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, i46, i47, i48, i49, i50, i51, i52, i53, i54, i55, i56, i57, i58, i59, i60, i61, i62, i63, i64, i65, i68, i69, i70, i71, i72, i73, i74, i75, i76, i77, i78, $i80, $i81, $i82, $i83, $i84, $i85, $i86;
        java.lang.String $r5, $r6;

        r0 := @parameter0: android.util.proto.ProtoOutputStream;

        r1 := @parameter1: android.os.Debug$MemoryInfo;

        z0 := @parameter2: boolean;

        z6 := @parameter3: boolean;

        l43 := @parameter4: long;

        l0 := @parameter5: long;

        l1 := @parameter6: long;

        l2 := @parameter7: long;

        l3 := @parameter8: long;

        l4 := @parameter9: long;

        if z6 != 0 goto label15;

        l44 = virtualinvoke r0.<android.util.proto.ProtoOutputStream: long start(long)>(1146756268035L);

        $i30 = r1.<android.os.Debug$MemoryInfo: int nativePss>;

        $i29 = r1.<android.os.Debug$MemoryInfo: int nativeSwappablePss>;

        $i28 = r1.<android.os.Debug$MemoryInfo: int nativeSharedDirty>;

        $i27 = r1.<android.os.Debug$MemoryInfo: int nativePrivateDirty>;

        $i26 = r1.<android.os.Debug$MemoryInfo: int nativeSharedClean>;

        $i25 = r1.<android.os.Debug$MemoryInfo: int nativePrivateClean>;

        $z1 = r1.<android.os.Debug$MemoryInfo: boolean hasSwappedOutPss>;

        $i24 = r1.<android.os.Debug$MemoryInfo: int nativeSwappedOut>;

        $i23 = r1.<android.os.Debug$MemoryInfo: int nativeSwappedOutPss>;

        $i22 = r1.<android.os.Debug$MemoryInfo: int nativeRss>;

        staticinvoke <android.app.ActivityThread: void dumpMemoryInfo(android.util.proto.ProtoOutputStream,long,java.lang.String,int,int,int,int,int,int,boolean,int,int,int)>(r0, 1146756268033L, "Native Heap", $i30, $i29, $i28, $i27, $i26, $i25, $z1, $i24, $i23, $i22);

        virtualinvoke r0.<android.util.proto.ProtoOutputStream: void write(long,long)>(1120986464258L, l43);

        virtualinvoke r0.<android.util.proto.ProtoOutputStream: void write(long,long)>(1120986464259L, l0);

        virtualinvoke r0.<android.util.proto.ProtoOutputStream: void write(long,long)>(1120986464260L, l1);

        virtualinvoke r0.<android.util.proto.ProtoOutputStream: void end(long)>(l44);

        l45 = virtualinvoke r0.<android.util.proto.ProtoOutputStream: long start(long)>(1146756268036L);

        i46 = r1.<android.os.Debug$MemoryInfo: int dalvikPss>;

        i47 = r1.<android.os.Debug$MemoryInfo: int dalvikSwappablePss>;

        i48 = r1.<android.os.Debug$MemoryInfo: int dalvikSharedDirty>;

        i49 = r1.<android.os.Debug$MemoryInfo: int dalvikPrivateDirty>;

        i50 = r1.<android.os.Debug$MemoryInfo: int dalvikSharedClean>;

        i51 = r1.<android.os.Debug$MemoryInfo: int dalvikPrivateClean>;

        z7 = r1.<android.os.Debug$MemoryInfo: boolean hasSwappedOutPss>;

        i52 = r1.<android.os.Debug$MemoryInfo: int dalvikSwappedOut>;

        i53 = r1.<android.os.Debug$MemoryInfo: int dalvikSwappedOutPss>;

        i54 = r1.<android.os.Debug$MemoryInfo: int dalvikRss>;

        staticinvoke <android.app.ActivityThread: void dumpMemoryInfo(android.util.proto.ProtoOutputStream,long,java.lang.String,int,int,int,int,int,int,boolean,int,int,int)>(r0, 1146756268033L, "Dalvik Heap", i46, i47, i48, i49, i50, i51, z7, i52, i53, i54);

        virtualinvoke r0.<android.util.proto.ProtoOutputStream: void write(long,long)>(1120986464258L, l2);

        virtualinvoke r0.<android.util.proto.ProtoOutputStream: void write(long,long)>(1120986464259L, l3);

        virtualinvoke r0.<android.util.proto.ProtoOutputStream: void write(long,long)>(1120986464260L, l4);

        virtualinvoke r0.<android.util.proto.ProtoOutputStream: void end(long)>(l45);

        i55 = r1.<android.os.Debug$MemoryInfo: int otherPss>;

        i56 = r1.<android.os.Debug$MemoryInfo: int otherSwappablePss>;

        i57 = r1.<android.os.Debug$MemoryInfo: int otherSharedDirty>;

        i58 = r1.<android.os.Debug$MemoryInfo: int otherPrivateDirty>;

        i59 = r1.<android.os.Debug$MemoryInfo: int otherSharedClean>;

        i60 = r1.<android.os.Debug$MemoryInfo: int otherPrivateClean>;

        i61 = r1.<android.os.Debug$MemoryInfo: int otherSwappedOut>;

        i62 = r1.<android.os.Debug$MemoryInfo: int otherSwappedOutPss>;

        i63 = r1.<android.os.Debug$MemoryInfo: int otherRss>;

        i64 = 0;

     label01:
        if i64 >= 17 goto label07;

        i5 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getOtherPss(int)>(i64);

        i6 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getOtherSwappablePss(int)>(i64);

        i7 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getOtherSharedDirty(int)>(i64);

        i8 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getOtherPrivateDirty(int)>(i64);

        i9 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getOtherSharedClean(int)>(i64);

        i10 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getOtherPrivateClean(int)>(i64);

        i11 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getOtherSwappedOut(int)>(i64);

        i12 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getOtherSwappedOutPss(int)>(i64);

        i13 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getOtherRss(int)>(i64);

        if i5 != 0 goto label05;

        if i7 != 0 goto label05;

        if i8 != 0 goto label05;

        if i9 != 0 goto label05;

        if i10 != 0 goto label05;

        if i13 != 0 goto label05;

        $z5 = r1.<android.os.Debug$MemoryInfo: boolean hasSwappedOutPss>;

        if $z5 == 0 goto label02;

        i65 = i12;

        goto label03;

     label02:
        i65 = i11;

     label03:
        if i65 == 0 goto label04;

        goto label05;

     label04:
        goto label06;

     label05:
        $r5 = staticinvoke <android.os.Debug$MemoryInfo: java.lang.String getOtherLabel(int)>(i64);

        $z8 = r1.<android.os.Debug$MemoryInfo: boolean hasSwappedOutPss>;

        staticinvoke <android.app.ActivityThread: void dumpMemoryInfo(android.util.proto.ProtoOutputStream,long,java.lang.String,int,int,int,int,int,int,boolean,int,int,int)>(r0, 2246267895813L, $r5, i5, i6, i7, i8, i9, i10, $z8, i11, i12, i13);

        i55 = i55 - i5;

        i56 = i56 - i6;

        i57 = i57 - i7;

        i58 = i58 - i8;

        i59 = i59 - i9;

        i60 = i60 - i10;

        i61 = i61 - i11;

        i62 = i62 - i12;

        i63 = i63 - i13;

     label06:
        i64 = i64 + 1;

        goto label01;

     label07:
        $z2 = r1.<android.os.Debug$MemoryInfo: boolean hasSwappedOutPss>;

        staticinvoke <android.app.ActivityThread: void dumpMemoryInfo(android.util.proto.ProtoOutputStream,long,java.lang.String,int,int,int,int,int,int,boolean,int,int,int)>(r0, 1146756268038L, "Unknown", i55, i56, i57, i58, i59, i60, $z2, i61, i62, i63);

        l66 = virtualinvoke r0.<android.util.proto.ProtoOutputStream: long start(long)>(1146756268039L);

        $i31 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getTotalPss()>();

        $i32 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getTotalSwappablePss()>();

        $i33 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getTotalSharedDirty()>();

        $i34 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getTotalPrivateDirty()>();

        $i35 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getTotalSharedClean()>();

        $i36 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getTotalPrivateClean()>();

        $z3 = r1.<android.os.Debug$MemoryInfo: boolean hasSwappedOutPss>;

        $i37 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getTotalSwappedOut()>();

        $i38 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getTotalSwappedOutPss()>();

        $i39 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getTotalRss()>();

        staticinvoke <android.app.ActivityThread: void dumpMemoryInfo(android.util.proto.ProtoOutputStream,long,java.lang.String,int,int,int,int,int,int,boolean,int,int,int)>(r0, 1146756268033L, "TOTAL", $i31, $i32, $i33, $i34, $i35, $i36, $z3, $i37, $i38, $i39);

        $l40 = l43 + l2;

        virtualinvoke r0.<android.util.proto.ProtoOutputStream: void write(long,long)>(1120986464258L, $l40);

        $l41 = l0 + l3;

        virtualinvoke r0.<android.util.proto.ProtoOutputStream: void write(long,long)>(1120986464259L, $l41);

        $l42 = l1 + l4;

        virtualinvoke r0.<android.util.proto.ProtoOutputStream: void write(long,long)>(1120986464260L, $l42);

        virtualinvoke r0.<android.util.proto.ProtoOutputStream: void end(long)>(l66);

        if z0 == 0 goto label15;

        i68 = 17;

     label08:
        if i68 >= 32 goto label14;

        i69 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getOtherPss(int)>(i68);

        i70 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getOtherSwappablePss(int)>(i68);

        i71 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getOtherSharedDirty(int)>(i68);

        i72 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getOtherPrivateDirty(int)>(i68);

        i73 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getOtherSharedClean(int)>(i68);

        i74 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getOtherPrivateClean(int)>(i68);

        i75 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getOtherSwappedOut(int)>(i68);

        i76 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getOtherSwappedOutPss(int)>(i68);

        i77 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getOtherRss(int)>(i68);

        if i69 != 0 goto label12;

        if i71 != 0 goto label12;

        if i72 != 0 goto label12;

        if i73 != 0 goto label12;

        if i74 != 0 goto label12;

        $z4 = r1.<android.os.Debug$MemoryInfo: boolean hasSwappedOutPss>;

        if $z4 == 0 goto label09;

        i78 = i76;

        goto label10;

     label09:
        i78 = i75;

     label10:
        if i78 == 0 goto label11;

        goto label12;

     label11:
        goto label13;

     label12:
        $r6 = staticinvoke <android.os.Debug$MemoryInfo: java.lang.String getOtherLabel(int)>(i68);

        $z9 = r1.<android.os.Debug$MemoryInfo: boolean hasSwappedOutPss>;

        staticinvoke <android.app.ActivityThread: void dumpMemoryInfo(android.util.proto.ProtoOutputStream,long,java.lang.String,int,int,int,int,int,int,boolean,int,int,int)>(r0, 2246267895816L, $r6, i69, i70, i71, i72, i73, i74, $z9, i75, i76, i77);

     label13:
        i68 = i68 + 1;

        goto label08;

     label14:
        goto label15;

     label15:
        l79 = virtualinvoke r0.<android.util.proto.ProtoOutputStream: long start(long)>(1146756268041L);

        $i80 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getSummaryJavaHeap()>();

        virtualinvoke r0.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464257L, $i80);

        $i81 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getSummaryNativeHeap()>();

        virtualinvoke r0.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464258L, $i81);

        $i82 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getSummaryCode()>();

        virtualinvoke r0.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464259L, $i82);

        $i83 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getSummaryStack()>();

        virtualinvoke r0.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464260L, $i83);

        $i84 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getSummaryGraphics()>();

        virtualinvoke r0.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464261L, $i84);

        $i85 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getSummaryPrivateOther()>();

        virtualinvoke r0.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464262L, $i85);

        $i86 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getSummarySystem()>();

        virtualinvoke r0.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464263L, $i86);

        $z10 = r1.<android.os.Debug$MemoryInfo: boolean hasSwappedOutPss>;

        if $z10 == 0 goto label16;

        $i21 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getSummaryTotalSwapPss()>();

        virtualinvoke r0.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464264L, $i21);

        goto label17;

     label16:
        $i14 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getSummaryTotalSwap()>();

        virtualinvoke r0.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464264L, $i14);

     label17:
        $i15 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getSummaryJavaHeapRss()>();

        virtualinvoke r0.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464266L, $i15);

        $i16 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getSummaryNativeHeapRss()>();

        virtualinvoke r0.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464267L, $i16);

        $i17 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getSummaryCodeRss()>();

        virtualinvoke r0.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464268L, $i17);

        $i18 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getSummaryStackRss()>();

        virtualinvoke r0.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464269L, $i18);

        $i19 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getSummaryGraphicsRss()>();

        virtualinvoke r0.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464270L, $i19);

        $i20 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getSummaryUnknownRss()>();

        virtualinvoke r0.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464271L, $i20);

        virtualinvoke r0.<android.util.proto.ProtoOutputStream: void end(long)>(l79);

        return;
    }

    public static void dumpMemInfoTable(java.io.PrintWriter, android.os.Debug$MemoryInfo, boolean, boolean, boolean, boolean, int, java.lang.String, long, long, long, long, long, long)
    {
        java.io.PrintWriter r0;
        android.os.Debug$MemoryInfo r1;
        boolean z0, z1, z2, z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22;
        long l0, l1, l2, l3, l4, l5, $l22, $l23, $l24, $l26, $l27, $l28, $l31, $l32, $l33;
        int i6, i7, i8, i9, i10, i11, i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i25, $i29, $i30, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, i74, i75, i76, i77, i78, i79, i80, i81, i82, i83, i84, i85, i86, i87, i88, i89, i90, i91, i92, i93, i94, i95, i96, i97, i98, i99, i100, i101, i102, i103, i104, i105, i106, i107, i108, i109, i110, i111, i112, i113, i114, i115, i116, i117, i118, i119, i120, i121, i122, i123, i124, i125, i126, i127, i128, i129, i130, i131, i132, i133, i134, i135, i136, i137, i138, i139, i140, i141, i142, i143, $i144, $i145, $i146, $i147, $i148, $i149, $i150, $i151, $i152, $i153, $i154, $i155, $i156;
        java.lang.Object[] $r2, $r6, $r10, $r11, $r12, $r13, $r22, $r31, $r37, $r46, $r52, $r61, $r70, $r82, $r88, $r97, $r98, $r99, $r100, $r112, $r132, $r133, $r134, $r137, $r140, $r143, $r146, $r149, $r151, $r153;
        java.lang.Integer $r3, $r4, $r5, $r7, $r8, $r9, $r14, $r15, $r16, $r17, $r18, $r23, $r24, $r25, $r26, $r27, $r32, $r33, $r34, $r35, $r36, $r38, $r39, $r40, $r41, $r42, $r47, $r48, $r49, $r50, $r51, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r60, $r62, $r63, $r64, $r65, $r66, $r67, $r68, $r69, $r71, $r72, $r73, $r74, $r75, $r76, $r77, $r78, $r83, $r84, $r85, $r86, $r87, $r89, $r90, $r91, $r92, $r93, $r94, $r95, $r96, $r101, $r102, $r103, $r104, $r105, $r106, $r107, $r108, $r113, $r114, $r115, $r116, $r117, $r118, $r119, $r120, $r135, $r136, $r138, $r139, $r141, $r142, $r144, $r145, $r147, $r148, $r150, $r152, $r154;
        java.lang.Long $r19, $r20, $r21, $r28, $r29, $r30, $r43, $r44, $r45, $r79, $r80, $r81, $r109, $r110, $r111, $r121, $r122, $r123;
        java.lang.String $r124, r125, r126, r127, r128, r129, r130, r131;

        r0 := @parameter0: java.io.PrintWriter;

        r1 := @parameter1: android.os.Debug$MemoryInfo;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        z2 := @parameter4: boolean;

        z3 := @parameter5: boolean;

        i74 := @parameter6: int;

        r125 := @parameter7: java.lang.String;

        l0 := @parameter8: long;

        l1 := @parameter9: long;

        l2 := @parameter10: long;

        l3 := @parameter11: long;

        l4 := @parameter12: long;

        l5 := @parameter13: long;

        if z0 == 0 goto label07;

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>(4);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>(i74);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r125);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        virtualinvoke r0.<java.io.PrintWriter: void print(long)>(l0);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        virtualinvoke r0.<java.io.PrintWriter: void print(long)>(l3);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("N/A,");

        $l31 = l0 + l3;

        virtualinvoke r0.<java.io.PrintWriter: void print(long)>($l31);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        virtualinvoke r0.<java.io.PrintWriter: void print(long)>(l1);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        virtualinvoke r0.<java.io.PrintWriter: void print(long)>(l4);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("N/A,");

        $l32 = l1 + l4;

        virtualinvoke r0.<java.io.PrintWriter: void print(long)>($l32);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        virtualinvoke r0.<java.io.PrintWriter: void print(long)>(l2);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        virtualinvoke r0.<java.io.PrintWriter: void print(long)>(l5);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("N/A,");

        $l33 = l2 + l5;

        virtualinvoke r0.<java.io.PrintWriter: void print(long)>($l33);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        $i34 = r1.<android.os.Debug$MemoryInfo: int nativePss>;

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i34);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        $i35 = r1.<android.os.Debug$MemoryInfo: int dalvikPss>;

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i35);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        $i36 = r1.<android.os.Debug$MemoryInfo: int otherPss>;

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i36);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        $i37 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getTotalPss()>();

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i37);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        $i38 = r1.<android.os.Debug$MemoryInfo: int nativeSwappablePss>;

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i38);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        $i39 = r1.<android.os.Debug$MemoryInfo: int dalvikSwappablePss>;

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i39);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        $i40 = r1.<android.os.Debug$MemoryInfo: int otherSwappablePss>;

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i40);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        $i41 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getTotalSwappablePss()>();

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i41);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        $i42 = r1.<android.os.Debug$MemoryInfo: int nativeSharedDirty>;

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i42);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        $i43 = r1.<android.os.Debug$MemoryInfo: int dalvikSharedDirty>;

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i43);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        $i44 = r1.<android.os.Debug$MemoryInfo: int otherSharedDirty>;

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i44);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        $i45 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getTotalSharedDirty()>();

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i45);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        $i46 = r1.<android.os.Debug$MemoryInfo: int nativeSharedClean>;

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i46);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        $i47 = r1.<android.os.Debug$MemoryInfo: int dalvikSharedClean>;

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i47);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        $i48 = r1.<android.os.Debug$MemoryInfo: int otherSharedClean>;

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i48);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        $i49 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getTotalSharedClean()>();

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i49);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        $i50 = r1.<android.os.Debug$MemoryInfo: int nativePrivateDirty>;

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i50);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        $i51 = r1.<android.os.Debug$MemoryInfo: int dalvikPrivateDirty>;

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i51);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        $i52 = r1.<android.os.Debug$MemoryInfo: int otherPrivateDirty>;

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i52);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        $i53 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getTotalPrivateDirty()>();

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i53);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        $i54 = r1.<android.os.Debug$MemoryInfo: int nativePrivateClean>;

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i54);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        $i55 = r1.<android.os.Debug$MemoryInfo: int dalvikPrivateClean>;

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i55);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        $i56 = r1.<android.os.Debug$MemoryInfo: int otherPrivateClean>;

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i56);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        $i57 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getTotalPrivateClean()>();

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i57);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        $i58 = r1.<android.os.Debug$MemoryInfo: int nativeSwappedOut>;

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i58);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        $i59 = r1.<android.os.Debug$MemoryInfo: int dalvikSwappedOut>;

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i59);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        $i60 = r1.<android.os.Debug$MemoryInfo: int otherSwappedOut>;

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i60);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        $i61 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getTotalSwappedOut()>();

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i61);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        $z20 = r1.<android.os.Debug$MemoryInfo: boolean hasSwappedOutPss>;

        if $z20 == 0 goto label01;

        $i70 = r1.<android.os.Debug$MemoryInfo: int nativeSwappedOutPss>;

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i70);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        $i71 = r1.<android.os.Debug$MemoryInfo: int dalvikSwappedOutPss>;

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i71);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        $i72 = r1.<android.os.Debug$MemoryInfo: int otherSwappedOutPss>;

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i72);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        $i73 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getTotalSwappedOutPss()>();

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i73);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        goto label02;

     label01:
        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("N/A,");

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("N/A,");

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("N/A,");

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("N/A,");

     label02:
        i75 = 0;

     label03:
        if i75 >= 17 goto label06;

        $r124 = staticinvoke <android.os.Debug$MemoryInfo: java.lang.String getOtherLabel(int)>(i75);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>($r124);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        $i62 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getOtherPss(int)>(i75);

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i62);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        $i63 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getOtherSwappablePss(int)>(i75);

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i63);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        $i64 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getOtherSharedDirty(int)>(i75);

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i64);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        $i65 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getOtherSharedClean(int)>(i75);

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i65);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        $i66 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getOtherPrivateDirty(int)>(i75);

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i66);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        $i67 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getOtherPrivateClean(int)>(i75);

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i67);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        $i68 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getOtherSwappedOut(int)>(i75);

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i68);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        $z21 = r1.<android.os.Debug$MemoryInfo: boolean hasSwappedOutPss>;

        if $z21 == 0 goto label04;

        $i69 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getOtherSwappedOutPss(int)>(i75);

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i69);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        goto label05;

     label04:
        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("N/A,");

     label05:
        i75 = i75 + 1;

        goto label03;

     label06:
        return;

     label07:
        if z3 != 0 goto label55;

        if z1 == 0 goto label14;

        $z17 = r1.<android.os.Debug$MemoryInfo: boolean hasSwappedOutPss>;

        if $z17 == 0 goto label08;

        r126 = "SwapPss";

        goto label09;

     label08:
        r126 = "Swap";

     label09:
        $r97 = newarray (java.lang.Object)[12];

        $r97[0] = "";

        $r97[1] = "Pss";

        $r97[2] = "Pss";

        $r97[3] = "Shared";

        $r97[4] = "Private";

        $r97[5] = "Shared";

        $r97[6] = "Private";

        $r97[7] = r126;

        $r97[8] = "Rss";

        $r97[9] = "Heap";

        $r97[10] = "Heap";

        $r97[11] = "Heap";

        staticinvoke <android.app.ActivityThread: void printRow(java.io.PrintWriter,java.lang.String,java.lang.Object[])>(r0, "%13s %8s %8s %8s %8s %8s %8s %8s %8s %8s %8s %8s", $r97);

        $r98 = newarray (java.lang.Object)[12];

        $r98[0] = "";

        $r98[1] = "Total";

        $r98[2] = "Clean";

        $r98[3] = "Dirty";

        $r98[4] = "Dirty";

        $r98[5] = "Clean";

        $r98[6] = "Clean";

        $r98[7] = "Dirty";

        $r98[8] = "Total";

        $r98[9] = "Size";

        $r98[10] = "Alloc";

        $r98[11] = "Free";

        staticinvoke <android.app.ActivityThread: void printRow(java.io.PrintWriter,java.lang.String,java.lang.Object[])>(r0, "%13s %8s %8s %8s %8s %8s %8s %8s %8s %8s %8s %8s", $r98);

        $r99 = newarray (java.lang.Object)[12];

        $r99[0] = "";

        $r99[1] = "------";

        $r99[2] = "------";

        $r99[3] = "------";

        $r99[4] = "------";

        $r99[5] = "------";

        $r99[6] = "------";

        $r99[7] = "------";

        $r99[8] = "------";

        $r99[9] = "------";

        $r99[10] = "------";

        $r99[11] = "------";

        staticinvoke <android.app.ActivityThread: void printRow(java.io.PrintWriter,java.lang.String,java.lang.Object[])>(r0, "%13s %8s %8s %8s %8s %8s %8s %8s %8s %8s %8s %8s", $r99);

        i76 = r1.<android.os.Debug$MemoryInfo: int nativePss>;

        i77 = r1.<android.os.Debug$MemoryInfo: int nativeSwappablePss>;

        i78 = r1.<android.os.Debug$MemoryInfo: int nativeSharedDirty>;

        i79 = r1.<android.os.Debug$MemoryInfo: int nativePrivateDirty>;

        i80 = r1.<android.os.Debug$MemoryInfo: int nativeSharedClean>;

        i81 = r1.<android.os.Debug$MemoryInfo: int nativePrivateClean>;

        $z18 = r1.<android.os.Debug$MemoryInfo: boolean hasSwappedOutPss>;

        if $z18 == 0 goto label10;

        i82 = r1.<android.os.Debug$MemoryInfo: int nativeSwappedOutPss>;

        goto label11;

     label10:
        i82 = r1.<android.os.Debug$MemoryInfo: int nativeSwappedOut>;

     label11:
        $r100 = newarray (java.lang.Object)[12];

        $r100[0] = "Native Heap";

        $r101 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i76);

        $r100[1] = $r101;

        $r102 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i77);

        $r100[2] = $r102;

        $r103 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i78);

        $r100[3] = $r103;

        $r104 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i79);

        $r100[4] = $r104;

        $r105 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i80);

        $r100[5] = $r105;

        $r106 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i81);

        $r100[6] = $r106;

        $r107 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i82);

        $r100[7] = $r107;

        $i29 = r1.<android.os.Debug$MemoryInfo: int nativeRss>;

        $r108 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i29);

        $r100[8] = $r108;

        $r109 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r100[9] = $r109;

        $r110 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);

        $r100[10] = $r110;

        $r111 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l2);

        $r100[11] = $r111;

        staticinvoke <android.app.ActivityThread: void printRow(java.io.PrintWriter,java.lang.String,java.lang.Object[])>(r0, "%13s %8s %8s %8s %8s %8s %8s %8s %8s %8s %8s %8s", $r100);

        i83 = r1.<android.os.Debug$MemoryInfo: int dalvikPss>;

        i84 = r1.<android.os.Debug$MemoryInfo: int dalvikSwappablePss>;

        i85 = r1.<android.os.Debug$MemoryInfo: int dalvikSharedDirty>;

        i86 = r1.<android.os.Debug$MemoryInfo: int dalvikPrivateDirty>;

        i87 = r1.<android.os.Debug$MemoryInfo: int dalvikSharedClean>;

        i88 = r1.<android.os.Debug$MemoryInfo: int dalvikPrivateClean>;

        $z19 = r1.<android.os.Debug$MemoryInfo: boolean hasSwappedOutPss>;

        if $z19 == 0 goto label12;

        i89 = r1.<android.os.Debug$MemoryInfo: int dalvikSwappedOutPss>;

        goto label13;

     label12:
        i89 = r1.<android.os.Debug$MemoryInfo: int dalvikSwappedOut>;

     label13:
        $r112 = newarray (java.lang.Object)[12];

        $r112[0] = "Dalvik Heap";

        $r113 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i83);

        $r112[1] = $r113;

        $r114 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i84);

        $r112[2] = $r114;

        $r115 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i85);

        $r112[3] = $r115;

        $r116 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i86);

        $r112[4] = $r116;

        $r117 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i87);

        $r112[5] = $r117;

        $r118 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i88);

        $r112[6] = $r118;

        $r119 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i89);

        $r112[7] = $r119;

        $i30 = r1.<android.os.Debug$MemoryInfo: int dalvikRss>;

        $r120 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i30);

        $r112[8] = $r120;

        $r121 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l3);

        $r112[9] = $r121;

        $r122 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l4);

        $r112[10] = $r122;

        $r123 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l5);

        $r112[11] = $r123;

        staticinvoke <android.app.ActivityThread: void printRow(java.io.PrintWriter,java.lang.String,java.lang.Object[])>(r0, "%13s %8s %8s %8s %8s %8s %8s %8s %8s %8s %8s %8s", $r112);

        goto label21;

     label14:
        $z4 = r1.<android.os.Debug$MemoryInfo: boolean hasSwappedOutPss>;

        if $z4 == 0 goto label15;

        r127 = "SwapPss";

        goto label16;

     label15:
        r127 = "Swap";

     label16:
        $r10 = newarray (java.lang.Object)[9];

        $r10[0] = "";

        $r10[1] = "Pss";

        $r10[2] = "Private";

        $r10[3] = "Private";

        $r10[4] = r127;

        $r10[5] = "Rss";

        $r10[6] = "Heap";

        $r10[7] = "Heap";

        $r10[8] = "Heap";

        staticinvoke <android.app.ActivityThread: void printRow(java.io.PrintWriter,java.lang.String,java.lang.Object[])>(r0, "%13s %8s %8s %8s %8s %8s %8s %8s %8s", $r10);

        $r11 = newarray (java.lang.Object)[9];

        $r11[0] = "";

        $r11[1] = "Total";

        $r11[2] = "Dirty";

        $r11[3] = "Clean";

        $r11[4] = "Dirty";

        $r11[5] = "Total";

        $r11[6] = "Size";

        $r11[7] = "Alloc";

        $r11[8] = "Free";

        staticinvoke <android.app.ActivityThread: void printRow(java.io.PrintWriter,java.lang.String,java.lang.Object[])>(r0, "%13s %8s %8s %8s %8s %8s %8s %8s %8s", $r11);

        $r12 = newarray (java.lang.Object)[10];

        $r12[0] = "";

        $r12[1] = "------";

        $r12[2] = "------";

        $r12[3] = "------";

        $r12[4] = "------";

        $r12[5] = "------";

        $r12[6] = "------";

        $r12[7] = "------";

        $r12[8] = "------";

        $r12[9] = "------";

        staticinvoke <android.app.ActivityThread: void printRow(java.io.PrintWriter,java.lang.String,java.lang.Object[])>(r0, "%13s %8s %8s %8s %8s %8s %8s %8s %8s", $r12);

        i90 = r1.<android.os.Debug$MemoryInfo: int nativePss>;

        i91 = r1.<android.os.Debug$MemoryInfo: int nativePrivateDirty>;

        i92 = r1.<android.os.Debug$MemoryInfo: int nativePrivateClean>;

        $z5 = r1.<android.os.Debug$MemoryInfo: boolean hasSwappedOutPss>;

        if $z5 == 0 goto label17;

        i93 = r1.<android.os.Debug$MemoryInfo: int nativeSwappedOutPss>;

        goto label18;

     label17:
        i93 = r1.<android.os.Debug$MemoryInfo: int nativeSwappedOut>;

     label18:
        $r13 = newarray (java.lang.Object)[9];

        $r13[0] = "Native Heap";

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i90);

        $r13[1] = $r14;

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i91);

        $r13[2] = $r15;

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i92);

        $r13[3] = $r16;

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i93);

        $r13[4] = $r17;

        $i19 = r1.<android.os.Debug$MemoryInfo: int nativeRss>;

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i19);

        $r13[5] = $r18;

        $r19 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r13[6] = $r19;

        $r20 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);

        $r13[7] = $r20;

        $r21 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l2);

        $r13[8] = $r21;

        staticinvoke <android.app.ActivityThread: void printRow(java.io.PrintWriter,java.lang.String,java.lang.Object[])>(r0, "%13s %8s %8s %8s %8s %8s %8s %8s %8s", $r13);

        i94 = r1.<android.os.Debug$MemoryInfo: int dalvikPss>;

        i95 = r1.<android.os.Debug$MemoryInfo: int dalvikPrivateDirty>;

        i96 = r1.<android.os.Debug$MemoryInfo: int dalvikPrivateClean>;

        $z6 = r1.<android.os.Debug$MemoryInfo: boolean hasSwappedOutPss>;

        if $z6 == 0 goto label19;

        i97 = r1.<android.os.Debug$MemoryInfo: int dalvikSwappedOutPss>;

        goto label20;

     label19:
        i97 = r1.<android.os.Debug$MemoryInfo: int dalvikSwappedOut>;

     label20:
        $r22 = newarray (java.lang.Object)[9];

        $r22[0] = "Dalvik Heap";

        $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i94);

        $r22[1] = $r23;

        $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i95);

        $r22[2] = $r24;

        $r25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i96);

        $r22[3] = $r25;

        $r26 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i97);

        $r22[4] = $r26;

        $i20 = r1.<android.os.Debug$MemoryInfo: int dalvikRss>;

        $r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i20);

        $r22[5] = $r27;

        $r28 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l3);

        $r22[6] = $r28;

        $r29 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l4);

        $r22[7] = $r29;

        $r30 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l5);

        $r22[8] = $r30;

        staticinvoke <android.app.ActivityThread: void printRow(java.io.PrintWriter,java.lang.String,java.lang.Object[])>(r0, "%13s %8s %8s %8s %8s %8s %8s %8s %8s", $r22);

     label21:
        i98 = r1.<android.os.Debug$MemoryInfo: int otherPss>;

        i99 = r1.<android.os.Debug$MemoryInfo: int otherSwappablePss>;

        i100 = r1.<android.os.Debug$MemoryInfo: int otherSharedDirty>;

        i101 = r1.<android.os.Debug$MemoryInfo: int otherPrivateDirty>;

        i102 = r1.<android.os.Debug$MemoryInfo: int otherSharedClean>;

        i103 = r1.<android.os.Debug$MemoryInfo: int otherPrivateClean>;

        i104 = r1.<android.os.Debug$MemoryInfo: int otherSwappedOut>;

        i105 = r1.<android.os.Debug$MemoryInfo: int otherSwappedOutPss>;

        i106 = r1.<android.os.Debug$MemoryInfo: int otherRss>;

        i107 = 0;

     label22:
        if i107 >= 17 goto label33;

        i6 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getOtherPss(int)>(i107);

        i7 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getOtherSwappablePss(int)>(i107);

        i8 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getOtherSharedDirty(int)>(i107);

        i9 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getOtherPrivateDirty(int)>(i107);

        i10 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getOtherSharedClean(int)>(i107);

        i11 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getOtherPrivateClean(int)>(i107);

        i108 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getOtherSwappedOut(int)>(i107);

        i109 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getOtherSwappedOutPss(int)>(i107);

        i12 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getOtherRss(int)>(i107);

        if i6 != 0 goto label25;

        if i8 != 0 goto label25;

        if i9 != 0 goto label25;

        if i10 != 0 goto label25;

        if i11 != 0 goto label25;

        if i12 != 0 goto label25;

        $z16 = r1.<android.os.Debug$MemoryInfo: boolean hasSwappedOutPss>;

        if $z16 == 0 goto label23;

        i110 = i109;

        goto label24;

     label23:
        i110 = i108;

     label24:
        i111 = i98;

        i112 = i106;

        i113 = i99;

        i114 = i100;

        i115 = i101;

        i116 = i102;

        i117 = i103;

        i118 = i104;

        i119 = i105;

        if i110 == 0 goto label32;

     label25:
        if z1 == 0 goto label28;

        r128 = staticinvoke <android.os.Debug$MemoryInfo: java.lang.String getOtherLabel(int)>(i107);

        $z15 = r1.<android.os.Debug$MemoryInfo: boolean hasSwappedOutPss>;

        if $z15 == 0 goto label26;

        i120 = i109;

        goto label27;

     label26:
        i120 = i108;

     label27:
        $r88 = newarray (java.lang.Object)[12];

        $r88[0] = r128;

        $r89 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6);

        $r88[1] = $r89;

        $r90 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i7);

        $r88[2] = $r90;

        $r91 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i8);

        $r88[3] = $r91;

        $r92 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i9);

        $r88[4] = $r92;

        $r93 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i10);

        $r88[5] = $r93;

        $r94 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i11);

        $r88[6] = $r94;

        $r95 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i120);

        $r88[7] = $r95;

        $r96 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i12);

        $r88[8] = $r96;

        $r88[9] = "";

        $r88[10] = "";

        $r88[11] = "";

        staticinvoke <android.app.ActivityThread: void printRow(java.io.PrintWriter,java.lang.String,java.lang.Object[])>(r0, "%13s %8s %8s %8s %8s %8s %8s %8s %8s %8s %8s %8s", $r88);

        goto label31;

     label28:
        r129 = staticinvoke <android.os.Debug$MemoryInfo: java.lang.String getOtherLabel(int)>(i107);

        $z14 = r1.<android.os.Debug$MemoryInfo: boolean hasSwappedOutPss>;

        if $z14 == 0 goto label29;

        i121 = i109;

        goto label30;

     label29:
        i121 = i108;

     label30:
        $r82 = newarray (java.lang.Object)[9];

        $r82[0] = r129;

        $r83 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6);

        $r82[1] = $r83;

        $r84 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i9);

        $r82[2] = $r84;

        $r85 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i11);

        $r82[3] = $r85;

        $r86 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i121);

        $r82[4] = $r86;

        $r87 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i12);

        $r82[5] = $r87;

        $r82[6] = "";

        $r82[7] = "";

        $r82[8] = "";

        staticinvoke <android.app.ActivityThread: void printRow(java.io.PrintWriter,java.lang.String,java.lang.Object[])>(r0, "%13s %8s %8s %8s %8s %8s %8s %8s %8s", $r82);

     label31:
        i111 = i98 - i6;

        i113 = i99 - i7;

        i114 = i100 - i8;

        i115 = i101 - i9;

        i116 = i102 - i10;

        i117 = i103 - i11;

        i118 = i104 - i108;

        i119 = i105 - i109;

        i112 = i106 - i12;

     label32:
        i107 = i107 + 1;

        i98 = i111;

        i106 = i112;

        i99 = i113;

        i100 = i114;

        i101 = i115;

        i102 = i116;

        i103 = i117;

        i104 = i118;

        i105 = i119;

        goto label22;

     label33:
        if z1 == 0 goto label38;

        $z12 = r1.<android.os.Debug$MemoryInfo: boolean hasSwappedOutPss>;

        if $z12 == 0 goto label34;

        goto label35;

     label34:
        i105 = i104;

     label35:
        $r61 = newarray (java.lang.Object)[12];

        $r61[0] = "Unknown";

        $r62 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i98);

        $r61[1] = $r62;

        $r63 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i99);

        $r61[2] = $r63;

        $r64 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i100);

        $r61[3] = $r64;

        $r65 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i101);

        $r61[4] = $r65;

        $r66 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i102);

        $r61[5] = $r66;

        $r67 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i103);

        $r61[6] = $r67;

        $r68 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i105);

        $r61[7] = $r68;

        $r69 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i106);

        $r61[8] = $r69;

        $r61[9] = "";

        $r61[10] = "";

        $r61[11] = "";

        staticinvoke <android.app.ActivityThread: void printRow(java.io.PrintWriter,java.lang.String,java.lang.Object[])>(r0, "%13s %8s %8s %8s %8s %8s %8s %8s %8s %8s %8s %8s", $r61);

        i122 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getTotalPss()>();

        i123 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getTotalSwappablePss()>();

        i124 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getTotalSharedDirty()>();

        i125 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getTotalPrivateDirty()>();

        i126 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getTotalSharedClean()>();

        i127 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getTotalPrivateClean()>();

        $z13 = r1.<android.os.Debug$MemoryInfo: boolean hasSwappedOutPss>;

        if $z13 == 0 goto label36;

        i128 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getTotalSwappedOutPss()>();

        goto label37;

     label36:
        i128 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getTotalSwappedOut()>();

     label37:
        $r70 = newarray (java.lang.Object)[12];

        $r70[0] = "TOTAL";

        $r71 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i122);

        $r70[1] = $r71;

        $r72 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i123);

        $r70[2] = $r72;

        $r73 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i124);

        $r70[3] = $r73;

        $r74 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i125);

        $r70[4] = $r74;

        $r75 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i126);

        $r70[5] = $r75;

        $r76 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i127);

        $r70[6] = $r76;

        $r77 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i128);

        $r70[7] = $r77;

        $i25 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getTotalRss()>();

        $r78 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i25);

        $r70[8] = $r78;

        $l26 = l0 + l3;

        $r79 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l26);

        $r70[9] = $r79;

        $l27 = l1 + l4;

        $r80 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l27);

        $r70[10] = $r80;

        $l28 = l2 + l5;

        $r81 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l28);

        $r70[11] = $r81;

        staticinvoke <android.app.ActivityThread: void printRow(java.io.PrintWriter,java.lang.String,java.lang.Object[])>(r0, "%13s %8s %8s %8s %8s %8s %8s %8s %8s %8s %8s %8s", $r70);

        goto label43;

     label38:
        $z7 = r1.<android.os.Debug$MemoryInfo: boolean hasSwappedOutPss>;

        if $z7 == 0 goto label39;

        goto label40;

     label39:
        i105 = i104;

     label40:
        $r31 = newarray (java.lang.Object)[9];

        $r31[0] = "Unknown";

        $r32 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i98);

        $r31[1] = $r32;

        $r33 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i101);

        $r31[2] = $r33;

        $r34 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i103);

        $r31[3] = $r34;

        $r35 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i105);

        $r31[4] = $r35;

        $r36 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i106);

        $r31[5] = $r36;

        $r31[6] = "";

        $r31[7] = "";

        $r31[8] = "";

        staticinvoke <android.app.ActivityThread: void printRow(java.io.PrintWriter,java.lang.String,java.lang.Object[])>(r0, "%13s %8s %8s %8s %8s %8s %8s %8s %8s", $r31);

        i129 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getTotalPss()>();

        i130 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getTotalPrivateDirty()>();

        i131 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getTotalPrivateClean()>();

        $z8 = r1.<android.os.Debug$MemoryInfo: boolean hasSwappedOutPss>;

        if $z8 == 0 goto label41;

        i132 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getTotalSwappedOutPss()>();

        goto label42;

     label41:
        i132 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getTotalSwappedOut()>();

     label42:
        $r37 = newarray (java.lang.Object)[9];

        $r37[0] = "TOTAL";

        $r38 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i129);

        $r37[1] = $r38;

        $r39 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i130);

        $r37[2] = $r39;

        $r40 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i131);

        $r37[3] = $r40;

        $r41 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i132);

        $r37[4] = $r41;

        $i21 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getTotalPss()>();

        $r42 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i21);

        $r37[5] = $r42;

        $l22 = l0 + l3;

        $r43 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l22);

        $r37[6] = $r43;

        $l23 = l1 + l4;

        $r44 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l23);

        $r37[7] = $r44;

        $l24 = l2 + l5;

        $r45 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l24);

        $r37[8] = $r45;

        staticinvoke <android.app.ActivityThread: void printRow(java.io.PrintWriter,java.lang.String,java.lang.Object[])>(r0, "%13s %8s %8s %8s %8s %8s %8s %8s %8s", $r37);

     label43:
        if z2 == 0 goto label54;

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>(" ");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>(" Dalvik Details");

        i133 = 17;

     label44:
        if i133 >= 32 goto label53;

        i134 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getOtherPss(int)>(i133);

        i135 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getOtherSwappablePss(int)>(i133);

        i136 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getOtherSharedDirty(int)>(i133);

        i137 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getOtherPrivateDirty(int)>(i133);

        i138 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getOtherSharedClean(int)>(i133);

        i139 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getOtherPrivateClean(int)>(i133);

        i140 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getOtherSwappedOut(int)>(i133);

        i141 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getOtherSwappedOutPss(int)>(i133);

        i142 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getOtherRss(int)>(i133);

        if i134 != 0 goto label48;

        if i136 != 0 goto label48;

        if i137 != 0 goto label48;

        if i138 != 0 goto label48;

        if i139 != 0 goto label48;

        $z11 = r1.<android.os.Debug$MemoryInfo: boolean hasSwappedOutPss>;

        if $z11 == 0 goto label45;

        i143 = i141;

        goto label46;

     label45:
        i143 = i140;

     label46:
        if i143 == 0 goto label47;

        goto label48;

     label47:
        goto label52;

     label48:
        if z1 == 0 goto label50;

        r130 = staticinvoke <android.os.Debug$MemoryInfo: java.lang.String getOtherLabel(int)>(i133);

        $z10 = r1.<android.os.Debug$MemoryInfo: boolean hasSwappedOutPss>;

        if $z10 == 0 goto label49;

        i140 = i141;

        goto label49;

     label49:
        $r52 = newarray (java.lang.Object)[12];

        $r52[0] = r130;

        $r53 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i134);

        $r52[1] = $r53;

        $r54 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i135);

        $r52[2] = $r54;

        $r55 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i136);

        $r52[3] = $r55;

        $r56 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i137);

        $r52[4] = $r56;

        $r57 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i138);

        $r52[5] = $r57;

        $r58 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i139);

        $r52[6] = $r58;

        $r59 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i140);

        $r52[7] = $r59;

        $r60 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i142);

        $r52[8] = $r60;

        $r52[9] = "";

        $r52[10] = "";

        $r52[11] = "";

        staticinvoke <android.app.ActivityThread: void printRow(java.io.PrintWriter,java.lang.String,java.lang.Object[])>(r0, "%13s %8s %8s %8s %8s %8s %8s %8s %8s %8s %8s %8s", $r52);

        goto label52;

     label50:
        r131 = staticinvoke <android.os.Debug$MemoryInfo: java.lang.String getOtherLabel(int)>(i133);

        $z9 = r1.<android.os.Debug$MemoryInfo: boolean hasSwappedOutPss>;

        if $z9 == 0 goto label51;

        i140 = i141;

        goto label51;

     label51:
        $r46 = newarray (java.lang.Object)[9];

        $r46[0] = r131;

        $r47 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i134);

        $r46[1] = $r47;

        $r48 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i137);

        $r46[2] = $r48;

        $r49 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i139);

        $r46[3] = $r49;

        $r50 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i140);

        $r46[4] = $r50;

        $r51 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i142);

        $r46[5] = $r51;

        $r46[6] = "";

        $r46[7] = "";

        $r46[8] = "";

        staticinvoke <android.app.ActivityThread: void printRow(java.io.PrintWriter,java.lang.String,java.lang.Object[])>(r0, "%13s %8s %8s %8s %8s %8s %8s %8s %8s", $r46);

     label52:
        i133 = i133 + 1;

        goto label44;

     label53:
        goto label55;

     label54:
        goto label55;

     label55:
        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>(" ");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>(" App Summary");

        $r132 = newarray (java.lang.Object)[4];

        $r132[0] = "";

        $r132[1] = "Pss(KB)";

        $r132[2] = "";

        $r132[3] = "Rss(KB)";

        staticinvoke <android.app.ActivityThread: void printRow(java.io.PrintWriter,java.lang.String,java.lang.Object[])>(r0, "%21s %8s %21s %8s", $r132);

        $r133 = newarray (java.lang.Object)[4];

        $r133[0] = "";

        $r133[1] = "------";

        $r133[2] = "";

        $r133[3] = "------";

        staticinvoke <android.app.ActivityThread: void printRow(java.io.PrintWriter,java.lang.String,java.lang.Object[])>(r0, "%21s %8s %21s %8s", $r133);

        $r134 = newarray (java.lang.Object)[4];

        $r134[0] = "Java Heap:";

        $i144 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getSummaryJavaHeap()>();

        $r135 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i144);

        $r134[1] = $r135;

        $r134[2] = "";

        $i145 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getSummaryJavaHeapRss()>();

        $r136 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i145);

        $r134[3] = $r136;

        staticinvoke <android.app.ActivityThread: void printRow(java.io.PrintWriter,java.lang.String,java.lang.Object[])>(r0, "%21s %8d %21s %8d", $r134);

        $r137 = newarray (java.lang.Object)[4];

        $r137[0] = "Native Heap:";

        $i146 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getSummaryNativeHeap()>();

        $r138 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i146);

        $r137[1] = $r138;

        $r137[2] = "";

        $i147 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getSummaryNativeHeapRss()>();

        $r139 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i147);

        $r137[3] = $r139;

        staticinvoke <android.app.ActivityThread: void printRow(java.io.PrintWriter,java.lang.String,java.lang.Object[])>(r0, "%21s %8d %21s %8d", $r137);

        $r140 = newarray (java.lang.Object)[4];

        $r140[0] = "Code:";

        $i148 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getSummaryCode()>();

        $r141 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i148);

        $r140[1] = $r141;

        $r140[2] = "";

        $i149 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getSummaryCodeRss()>();

        $r142 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i149);

        $r140[3] = $r142;

        staticinvoke <android.app.ActivityThread: void printRow(java.io.PrintWriter,java.lang.String,java.lang.Object[])>(r0, "%21s %8d %21s %8d", $r140);

        $r143 = newarray (java.lang.Object)[4];

        $r143[0] = "Stack:";

        $i150 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getSummaryStack()>();

        $r144 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i150);

        $r143[1] = $r144;

        $r143[2] = "";

        $i151 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getSummaryStackRss()>();

        $r145 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i151);

        $r143[3] = $r145;

        staticinvoke <android.app.ActivityThread: void printRow(java.io.PrintWriter,java.lang.String,java.lang.Object[])>(r0, "%21s %8d %21s %8d", $r143);

        $r146 = newarray (java.lang.Object)[4];

        $r146[0] = "Graphics:";

        $i152 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getSummaryGraphics()>();

        $r147 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i152);

        $r146[1] = $r147;

        $r146[2] = "";

        $i153 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getSummaryGraphicsRss()>();

        $r148 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i153);

        $r146[3] = $r148;

        staticinvoke <android.app.ActivityThread: void printRow(java.io.PrintWriter,java.lang.String,java.lang.Object[])>(r0, "%21s %8d %21s %8d", $r146);

        $r149 = newarray (java.lang.Object)[2];

        $r149[0] = "Private Other:";

        $i154 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getSummaryPrivateOther()>();

        $r150 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i154);

        $r149[1] = $r150;

        staticinvoke <android.app.ActivityThread: void printRow(java.io.PrintWriter,java.lang.String,java.lang.Object[])>(r0, "%21s %8d", $r149);

        $r151 = newarray (java.lang.Object)[2];

        $r151[0] = "System:";

        $i155 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getSummarySystem()>();

        $r152 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i155);

        $r151[1] = $r152;

        staticinvoke <android.app.ActivityThread: void printRow(java.io.PrintWriter,java.lang.String,java.lang.Object[])>(r0, "%21s %8d", $r151);

        $r153 = newarray (java.lang.Object)[4];

        $r153[0] = "Unknown:";

        $r153[1] = "";

        $r153[2] = "";

        $i156 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getSummaryUnknownRss()>();

        $r154 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i156);

        $r153[3] = $r154;

        staticinvoke <android.app.ActivityThread: void printRow(java.io.PrintWriter,java.lang.String,java.lang.Object[])>(r0, "%21s %8s %21s %8d", $r153);

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>(" ");

        $z22 = r1.<android.os.Debug$MemoryInfo: boolean hasSwappedOutPss>;

        if $z22 == 0 goto label56;

        $r6 = newarray (java.lang.Object)[6];

        $r6[0] = "TOTAL PSS:";

        $i16 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getSummaryTotalPss()>();

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i16);

        $r6[1] = $r7;

        $r6[2] = "TOTAL RSS:";

        $i17 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getTotalRss()>();

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i17);

        $r6[3] = $r8;

        $r6[4] = "TOTAL SWAP PSS:";

        $i18 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getSummaryTotalSwapPss()>();

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i18);

        $r6[5] = $r9;

        staticinvoke <android.app.ActivityThread: void printRow(java.io.PrintWriter,java.lang.String,java.lang.Object[])>(r0, "%21s %8d %21s %8s %21s %8d", $r6);

        goto label57;

     label56:
        $r2 = newarray (java.lang.Object)[6];

        $r2[0] = "TOTAL PSS:";

        $i13 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getSummaryTotalPss()>();

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i13);

        $r2[1] = $r3;

        $r2[2] = "TOTAL RSS:";

        $i14 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getTotalRss()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i14);

        $r2[3] = $r4;

        $r2[4] = "TOTAL SWAP (KB):";

        $i15 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getSummaryTotalSwap()>();

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i15);

        $r2[5] = $r5;

        staticinvoke <android.app.ActivityThread: void printRow(java.io.PrintWriter,java.lang.String,java.lang.Object[])>(r0, "%21s %8d %21s %8s %21s %8d", $r2);

     label57:
        return;
    }

    private static void dumpMemoryInfo(android.util.proto.ProtoOutputStream, long, java.lang.String, int, int, int, int, int, int, boolean, int, int, int)
    {
        android.util.proto.ProtoOutputStream r0;
        java.lang.String r1;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8;
        boolean z0;
        long l9, l10;

        r0 := @parameter0: android.util.proto.ProtoOutputStream;

        l9 := @parameter1: long;

        r1 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        i2 := @parameter5: int;

        i3 := @parameter6: int;

        i4 := @parameter7: int;

        i5 := @parameter8: int;

        z0 := @parameter9: boolean;

        i6 := @parameter10: int;

        i7 := @parameter11: int;

        i8 := @parameter12: int;

        l10 = virtualinvoke r0.<android.util.proto.ProtoOutputStream: long start(long)>(l9);

        virtualinvoke r0.<android.util.proto.ProtoOutputStream: void write(long,java.lang.String)>(1138166333441L, r1);

        virtualinvoke r0.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464258L, i0);

        virtualinvoke r0.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464259L, i1);

        virtualinvoke r0.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464260L, i2);

        virtualinvoke r0.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464261L, i3);

        virtualinvoke r0.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464262L, i4);

        virtualinvoke r0.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464263L, i5);

        if z0 == 0 goto label1;

        virtualinvoke r0.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464265L, i7);

        goto label2;

     label1:
        virtualinvoke r0.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464264L, i6);

     label2:
        virtualinvoke r0.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464266L, i8);

        virtualinvoke r0.<android.util.proto.ProtoOutputStream: void end(long)>(l10);

        return;
    }

    static void freeTextLayoutCachesIfNeeded(int)
    {
        int $i0, i1;
        boolean z0;

        i1 := @parameter0: int;

        if i1 == 0 goto label3;

        $i0 = i1 & 4;

        if $i0 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        if z0 == 0 goto label3;

        staticinvoke <android.graphics.Canvas: void freeTextLayoutCaches()>();

     label3:
        return;
    }

    private android.util.ArrayMap getBackupAgentsForUser(int)
    {
        android.app.ActivityThread r0;
        int i0;
        android.util.ArrayMap r1, $r4, r6;
        android.util.SparseArray $r2, $r5;
        java.lang.Object $r3;

        r0 := @this: android.app.ActivityThread;

        i0 := @parameter0: int;

        $r2 = r0.<android.app.ActivityThread: android.util.SparseArray mBackupAgentsByUser>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (android.util.ArrayMap) $r3;

        r6 = r1;

        if r1 != null goto label1;

        $r4 = new android.util.ArrayMap;

        specialinvoke $r4.<android.util.ArrayMap: void <init>()>();

        r6 = $r4;

        $r5 = r0.<android.app.ActivityThread: android.util.SparseArray mBackupAgentsByUser>;

        virtualinvoke $r5.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, $r4);

     label1:
        return r6;
    }

    private java.lang.Object getGetProviderLock(java.lang.String, int)
    {
        android.app.ActivityThread r0;
        int i0;
        android.util.ArrayMap r2, $r5, $r6;
        java.lang.Object r3, r10;
        android.app.ActivityThread$ProviderKey $r4;
        java.lang.Throwable $r8;
        java.lang.String r9;

        r0 := @this: android.app.ActivityThread;

        r9 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r4 = new android.app.ActivityThread$ProviderKey;

        specialinvoke $r4.<android.app.ActivityThread$ProviderKey: void <init>(java.lang.String,int)>(r9, i0);

        r2 = r0.<android.app.ActivityThread: android.util.ArrayMap mGetProviderLocks>;

        entermonitor r2;

     label1:
        $r5 = r0.<android.app.ActivityThread: android.util.ArrayMap mGetProviderLocks>;

        r3 = virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r4);

     label2:
        r10 = r3;

        if r3 != null goto label4;

        r10 = $r4;

     label3:
        $r6 = r0.<android.app.ActivityThread: android.util.ArrayMap mGetProviderLocks>;

        virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r4);

     label4:
        exitmonitor r2;

     label5:
        return r10;

     label6:
        $r8 := @caughtexception;

     label7:
        exitmonitor r2;

     label8:
        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    private java.lang.String getInstrumentationLibrary(android.content.pm.ApplicationInfo, android.content.pm.InstrumentationInfo)
    {
        android.app.ActivityThread r0;
        android.content.pm.InstrumentationInfo r1;
        java.lang.String $r2, $r3, $r4, $r5, $r6, $r10, $r12, $r13, r15, r17, $r18;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r7;
        dalvik.system.VMRuntime $r11;
        android.content.pm.ApplicationInfo r14;

        r0 := @this: android.app.ActivityThread;

        r14 := @parameter0: android.content.pm.ApplicationInfo;

        r1 := @parameter1: android.content.pm.InstrumentationInfo;

        $r2 = r14.<android.content.pm.ApplicationInfo: java.lang.String primaryCpuAbi>;

        if $r2 == null goto label3;

        $r3 = r14.<android.content.pm.ApplicationInfo: java.lang.String secondaryCpuAbi>;

        if $r3 == null goto label3;

        $r5 = r14.<android.content.pm.ApplicationInfo: java.lang.String secondaryCpuAbi>;

        $r4 = r1.<android.content.pm.InstrumentationInfo: java.lang.String secondaryCpuAbi>;

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label3;

        $r6 = r14.<android.content.pm.ApplicationInfo: java.lang.String secondaryCpuAbi>;

        r15 = staticinvoke <dalvik.system.VMRuntime: java.lang.String getInstructionSet(java.lang.String)>($r6);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ro.dalvik.vm.isa.");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        r17 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>($r10);

        $z1 = virtualinvoke r17.<java.lang.String: boolean isEmpty()>();

        if $z1 == 0 goto label1;

        goto label2;

     label1:
        r15 = r17;

     label2:
        $r11 = staticinvoke <dalvik.system.VMRuntime: dalvik.system.VMRuntime getRuntime()>();

        $r12 = virtualinvoke $r11.<dalvik.system.VMRuntime: java.lang.String vmInstructionSet()>();

        $z2 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r15);

        if $z2 == 0 goto label3;

        $r13 = r1.<android.content.pm.InstrumentationInfo: java.lang.String secondaryNativeLibraryDir>;

        return $r13;

     label3:
        $r18 = r1.<android.content.pm.InstrumentationInfo: java.lang.String nativeLibraryDir>;

        return $r18;
    }

    public static android.content.Intent getIntentBeingBroadcast()
    {
        java.lang.ThreadLocal $r0;
        java.lang.Object $r1;
        android.content.Intent $r2;

        $r0 = <android.app.ActivityThread: java.lang.ThreadLocal sCurrentBroadcastIntent>;

        $r1 = virtualinvoke $r0.<java.lang.ThreadLocal: java.lang.Object get()>();

        $r2 = (android.content.Intent) $r1;

        return $r2;
    }

    private android.app.LoadedApk getPackageInfo(android.content.pm.ApplicationInfo, android.content.res.CompatibilityInfo, java.lang.ClassLoader, boolean, boolean, boolean)
    {
        android.app.ActivityThread r0;
        boolean z0, z1, z2, $z3, $z4, z5, z6, $z7;
        android.app.ResourcesManager r1;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String $r2, $r7, $r8, $r13, r25, r28;
        android.util.ArrayMap $r3, $r14, r24, r27;
        java.lang.Object $r4, $r12, $r15;
        android.app.ContextImpl $r9;
        android.app.LoadedApk $r10, r21, r23;
        java.lang.ClassLoader $r11, r19;
        java.lang.Throwable $r16;
        android.content.pm.ApplicationInfo r17;
        android.content.res.CompatibilityInfo r18;
        java.lang.ref.WeakReference r20, r26, r29;
        java.util.ArrayList r22;

        r0 := @this: android.app.ActivityThread;

        r17 := @parameter0: android.content.pm.ApplicationInfo;

        r18 := @parameter1: android.content.res.CompatibilityInfo;

        r19 := @parameter2: java.lang.ClassLoader;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        z2 := @parameter5: boolean;

        $i0 = staticinvoke <android.os.UserHandle: int myUserId()>();

        $i1 = r17.<android.content.pm.ApplicationInfo: int uid>;

        $i2 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i1);

        if $i0 == $i2 goto label01;

        z5 = 1;

        goto label02;

     label01:
        z5 = 0;

     label02:
        r1 = r0.<android.app.ActivityThread: android.app.ResourcesManager mResourcesManager>;

        entermonitor r1;

        if z5 == 0 goto label03;

        r20 = null;

        goto label07;

     label03:
        if z1 == 0 goto label06;

     label04:
        $r14 = r0.<android.app.ActivityThread: android.util.ArrayMap mPackages>;

        $r13 = r17.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r15 = virtualinvoke $r14.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r13);

        r20 = (java.lang.ref.WeakReference) $r15;

     label05:
        goto label07;

     label06:
        $r3 = r0.<android.app.ActivityThread: android.util.ArrayMap mResourcePackages>;

        $r2 = r17.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r2);

        r20 = (java.lang.ref.WeakReference) $r4;

     label07:
        if r20 == null goto label10;

     label08:
        $r12 = virtualinvoke r20.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r21 = (android.app.LoadedApk) $r12;

     label09:
        goto label11;

     label10:
        r21 = null;

     label11:
        if r21 == null goto label15;

     label12:
        $z4 = staticinvoke <android.app.ActivityThread: boolean isLoadedApkResourceDirsUpToDate(android.app.LoadedApk,android.content.pm.ApplicationInfo)>(r21, r17);

        if $z4 != 0 goto label13;

        r22 = new java.util.ArrayList;

        specialinvoke r22.<java.util.ArrayList: void <init>()>();

        staticinvoke <android.app.LoadedApk: void makePaths(android.app.ActivityThread,android.content.pm.ApplicationInfo,java.util.List)>(r0, r17, r22);

        virtualinvoke r21.<android.app.LoadedApk: void updateApplicationInfo(android.content.pm.ApplicationInfo,java.util.List)>(r17, r22);

     label13:
        exitmonitor r1;

     label14:
        return r21;

     label15:
        r23 = new android.app.LoadedApk;

     label16:
        if z1 == 0 goto label19;

     label17:
        $i3 = r17.<android.content.pm.ApplicationInfo: int flags>;

        $i4 = $i3 & 4;

        if $i4 == 0 goto label19;

     label18:
        z6 = 1;

        goto label20;

     label19:
        z6 = 0;

     label20:
        specialinvoke r23.<android.app.LoadedApk: void <init>(android.app.ActivityThread,android.content.pm.ApplicationInfo,android.content.res.CompatibilityInfo,java.lang.ClassLoader,boolean,boolean,boolean)>(r0, r17, r18, r19, z0, z6, z2);

        $z7 = r0.<android.app.ActivityThread: boolean mSystemThread>;

        if $z7 == 0 goto label22;

        $r8 = "android";

        $r7 = r17.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $z3 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z3 == 0 goto label22;

     label21:
        $r9 = virtualinvoke r0.<android.app.ActivityThread: android.app.ContextImpl getSystemContext()>();

        $r10 = $r9.<android.app.ContextImpl: android.app.LoadedApk mPackageInfo>;

        $r11 = virtualinvoke $r10.<android.app.LoadedApk: java.lang.ClassLoader getClassLoader()>();

        virtualinvoke r23.<android.app.LoadedApk: void installSystemApplicationInfo(android.content.pm.ApplicationInfo,java.lang.ClassLoader)>(r17, $r11);

     label22:
        if z5 == 0 goto label23;

        goto label27;

     label23:
        if z1 == 0 goto label26;

     label24:
        r24 = r0.<android.app.ActivityThread: android.util.ArrayMap mPackages>;

        r25 = r17.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        r26 = new java.lang.ref.WeakReference;

        specialinvoke r26.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r23);

        virtualinvoke r24.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r25, r26);

     label25:
        goto label27;

     label26:
        r27 = r0.<android.app.ActivityThread: android.util.ArrayMap mResourcePackages>;

        r28 = r17.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        r29 = new java.lang.ref.WeakReference;

        specialinvoke r29.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r23);

        virtualinvoke r27.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r28, r29);

     label27:
        exitmonitor r1;

     label28:
        return r23;

     label29:
        $r16 := @caughtexception;

     label30:
        exitmonitor r1;

     label31:
        throw $r16;

        catch java.lang.Throwable from label04 to label05 with label29;
        catch java.lang.Throwable from label06 to label07 with label29;
        catch java.lang.Throwable from label08 to label09 with label29;
        catch java.lang.Throwable from label12 to label13 with label29;
        catch java.lang.Throwable from label13 to label14 with label29;
        catch java.lang.Throwable from label15 to label16 with label29;
        catch java.lang.Throwable from label17 to label18 with label29;
        catch java.lang.Throwable from label20 to label21 with label29;
        catch java.lang.Throwable from label21 to label22 with label29;
        catch java.lang.Throwable from label24 to label25 with label29;
        catch java.lang.Throwable from label26 to label27 with label29;
        catch java.lang.Throwable from label27 to label28 with label29;
        catch java.lang.Throwable from label30 to label31 with label29;
    }

    public static android.content.pm.IPackageManager getPackageManager()
    {
        android.content.pm.IPackageManager $r0, $r2, $r3, $r4;
        android.os.IBinder $r1;

        $r0 = <android.app.ActivityThread: android.content.pm.IPackageManager sPackageManager>;

        if $r0 == null goto label1;

        $r4 = <android.app.ActivityThread: android.content.pm.IPackageManager sPackageManager>;

        return $r4;

     label1:
        $r1 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("package");

        $r2 = staticinvoke <android.content.pm.IPackageManager$Stub: android.content.pm.IPackageManager asInterface(android.os.IBinder)>($r1);

        <android.app.ActivityThread: android.content.pm.IPackageManager sPackageManager> = $r2;

        $r3 = <android.app.ActivityThread: android.content.pm.IPackageManager sPackageManager>;

        return $r3;
    }

    public static android.permission.IPermissionManager getPermissionManager()
    {
        android.permission.IPermissionManager $r0, $r2, $r3, $r4;
        android.os.IBinder $r1;

        $r0 = <android.app.ActivityThread: android.permission.IPermissionManager sPermissionManager>;

        if $r0 == null goto label1;

        $r4 = <android.app.ActivityThread: android.permission.IPermissionManager sPermissionManager>;

        return $r4;

     label1:
        $r1 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("permissionmgr");

        $r2 = staticinvoke <android.permission.IPermissionManager$Stub: android.permission.IPermissionManager asInterface(android.os.IBinder)>($r1);

        <android.app.ActivityThread: android.permission.IPermissionManager sPermissionManager> = $r2;

        $r3 = <android.app.ActivityThread: android.permission.IPermissionManager sPermissionManager>;

        return $r3;
    }

    static void handleAttachAgent(java.lang.String, android.app.LoadedApk)
    {
        java.lang.String r0;
        boolean $z0;
        android.app.LoadedApk r1;
        java.lang.ClassLoader r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: android.app.LoadedApk;

        if r1 == null goto label1;

        r2 = virtualinvoke r1.<android.app.LoadedApk: java.lang.ClassLoader getClassLoader()>();

        goto label2;

     label1:
        r2 = null;

     label2:
        $z0 = staticinvoke <android.app.ActivityThread: boolean attemptAttachAgent(java.lang.String,java.lang.ClassLoader)>(r0, r2);

        if $z0 == 0 goto label3;

        return;

     label3:
        if r2 == null goto label4;

        staticinvoke <android.app.ActivityThread: boolean attemptAttachAgent(java.lang.String,java.lang.ClassLoader)>(r0, null);

     label4:
        return;
    }

    static void handleAttachStartupAgents(java.lang.String)
    {
        java.nio.file.Path r0, $r7, r16, r17;
        java.lang.StringBuilder r1;
        java.io.File $r2, r15;
        java.nio.file.LinkOption[] $r3, $r4;
        boolean $z0, $z1, $z2;
        java.nio.file.DirectoryStream $r5;
        java.lang.Object $r6;
        java.lang.String $r8, $r12, r14;
        java.lang.Exception $r13;
        java.util.Iterator r18;

        r14 := @parameter0: java.lang.String;

     label1:
        r15 = new java.io.File;

        specialinvoke r15.<java.io.File: void <init>(java.lang.String)>(r14);

        $r2 = staticinvoke <android.app.ContextImpl: java.io.File getCodeCacheDirBeforeBind(java.io.File)>(r15);

        r16 = virtualinvoke $r2.<java.io.File: java.nio.file.Path toPath()>();

        $r3 = newarray (java.nio.file.LinkOption)[0];

        $z0 = staticinvoke <java.nio.file.Files: boolean exists(java.nio.file.Path,java.nio.file.LinkOption[])>(r16, $r3);

        if $z0 != 0 goto label3;

     label2:
        return;

     label3:
        r17 = interfaceinvoke r16.<java.nio.file.Path: java.nio.file.Path resolve(java.lang.String)>("startup_agents");

        $r4 = newarray (java.nio.file.LinkOption)[0];

        $z1 = staticinvoke <java.nio.file.Files: boolean exists(java.nio.file.Path,java.nio.file.LinkOption[])>(r17, $r4);

        if $z1 == 0 goto label6;

        $r5 = staticinvoke <java.nio.file.Files: java.nio.file.DirectoryStream newDirectoryStream(java.nio.file.Path)>(r17);

        r18 = interfaceinvoke $r5.<java.nio.file.DirectoryStream: java.util.Iterator iterator()>();

     label4:
        $z2 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label6;

        $r6 = interfaceinvoke r18.<java.util.Iterator: java.lang.Object next()>();

        r0 = (java.nio.file.Path) $r6;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        $r7 = interfaceinvoke r0.<java.nio.file.Path: java.nio.file.Path toAbsolutePath()>();

        $r8 = interfaceinvoke $r7.<java.nio.file.Path: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r14);

        $r12 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.app.ActivityThread: void handleAttachAgent(java.lang.String,android.app.LoadedApk)>($r12, null);

     label5:
        goto label4;

     label6:
        goto label8;

     label7:
        $r13 := @caughtexception;

     label8:
        return;

        catch java.lang.Exception from label1 to label2 with label7;
        catch java.lang.Exception from label3 to label4 with label7;
        catch java.lang.Exception from label4 to label5 with label7;
    }

    private void handleBindApplication(android.app.ActivityThread$AppBindData)
    {
        android.app.ActivityThread r0;
        int $i0, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i17, $i20, $i21, $i22, $i23, i24, $i25, $i26, i27, i28;
        boolean $z0, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, z21, z22, z23, z24, z25, $z26;
        long $l1, $l2;
        long[] $r1;
        android.content.res.Configuration $r2, $r3, $r4, $r5, $r12, $r15, $r17, $r29;
        android.app.ActivityThread$Profiler $r6, $r64, $r66, $r68, $r70, $r127, $r130, $r133, $r135, $r137, $r139, $r202;
        android.app.ProfilerInfo $r7, $r128, $r131, $r134, $r136, $r138, $r140, $r141;
        android.content.pm.ApplicationInfo $r8, $r9, $r10, $r11, $r20, $r22, $r24, $r25, $r32, $r37, $r39, $r74, $r78, $r83, $r87, $r91, $r104, $r156, $r196, $r198, $r200, $r212, $r213, $r214, $r225, r237, r256;
        android.os.LocaleList $r13, $r30;
        android.content.res.CompatibilityInfo $r14, $r19, r239;
        android.app.ResourcesManager $r16, $r28, r204;
        android.app.LoadedApk $r21, $r27, $r34, $r43, $r110, $r117, $r125, $r227, $r229, $r231, r242;
        android.os.Bundle $r23, $r41, $r42, $r253;
        android.content.ComponentName $r26, $r53, $r58, $r77, $r150, $r160, $r171;
        android.app.Instrumentation $r31, $r57, $r63, $r182, $r252, $r254;
        dalvik.system.VMRuntime $r33, $r48;
        android.content.AutofillOptions $r35;
        android.content.ContentCaptureOptions $r36;
        android.content.pm.IPackageManager $r38, $r49, $r75;
        java.lang.String $r40, $r50, $r51, $r54, $r59, $r60, $r65, $r71, $r73, $r79, $r80, $r84, $r88, $r92, $r95, $r98, $r101, $r103, $r105, $r106, $r111, $r114, $r118, $r121, $r124, $r129, $r153, $r163, $r165, $r174, $r177, $r185, $r188, $r190, r192, r193, $r194, $r195, $r197, $r199, $r201, r205, $r215, $r222, $r223, $r226, $r228, $r232;
        android.content.res.Resources $r44;
        android.os.StrictMode$ThreadPolicy $r45, $r157, r249, r250;
        java.util.List $r46, $r47;
        java.lang.ClassLoader $r52, r240;
        java.lang.Class $r55, $r184;
        java.lang.Object $r56;
        android.app.IUiAutomationConnection $r61;
        android.app.IInstrumentationWatcher $r62;
        android.os.ParcelFileDescriptor $r67, $r132, $r203;
        java.io.File $r69, $r72;
        android.permission.IPermissionManager $r76;
        java.lang.StringBuilder $r81, $r108, $r115, $r148, $r169, r259, r262;
        android.net.ProxyInfo $r107;
        android.app.ActivityThread$ApplicationThread $r122, $r123;
        java.util.concurrent.Executor $r126;
        java.lang.Throwable $r142, $r154, $r155;
        android.os.RemoteException $r143, $r145, $r166, $r178, $r180;
        java.lang.RuntimeException $r144, $r146, $r152, $r167, $r176, $r179, r258, r261;
        android.content.pm.PackageManager$NameNotFoundException $r147;
        java.lang.Exception $r158, $r168, $r181;
        android.app.ActivityThread$AppBindData r191;
        java.lang.Boolean r206;
        android.app.IActivityManager r208;
        android.os.IBinder r216;
        android.net.IConnectivityManager r217;
        android.app.ApplicationPackageManager r219;
        android.content.pm.InstrumentationInfo r220;
        java.lang.String[] $r224, $r230;
        android.app.ContextImpl r235, r243;
        android.app.Application r251;

        r0 := @this: android.app.ActivityThread;

        r191 := @parameter0: android.app.ActivityThread$AppBindData;

        staticinvoke <dalvik.system.VMRuntime: void registerSensitiveThread()>();

        r192 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("debug.allocTracker.stackDepth");

        $i0 = virtualinvoke r192.<java.lang.String: int length()>();

        if $i0 == 0 goto label01;

        $i21 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r192);

        staticinvoke <dalvik.system.VMDebug: void setAllocTrackerStackDepth(int)>($i21);

     label01:
        $z0 = r191.<android.app.ActivityThread$AppBindData: boolean trackAllocation>;

        if $z0 == 0 goto label02;

        staticinvoke <org.apache.harmony.dalvik.ddmc.DdmVmInternal: void enableRecentAllocations(boolean)>(1);

     label02:
        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        staticinvoke <android.os.Process: void setStartTimes(long,long)>($l1, $l2);

        $r1 = r191.<android.app.ActivityThread$AppBindData: long[] disabledCompatChanges>;

        staticinvoke <android.app.AppCompatCallbacks: void install(long[])>($r1);

        r0.<android.app.ActivityThread: android.app.ActivityThread$AppBindData mBoundApplication> = r191;

        $r2 = new android.content.res.Configuration;

        $r3 = r191.<android.app.ActivityThread$AppBindData: android.content.res.Configuration config>;

        specialinvoke $r2.<android.content.res.Configuration: void <init>(android.content.res.Configuration)>($r3);

        r0.<android.app.ActivityThread: android.content.res.Configuration mConfiguration> = $r2;

        $r4 = new android.content.res.Configuration;

        $r5 = r191.<android.app.ActivityThread$AppBindData: android.content.res.Configuration config>;

        specialinvoke $r4.<android.content.res.Configuration: void <init>(android.content.res.Configuration)>($r5);

        r0.<android.app.ActivityThread: android.content.res.Configuration mCompatConfiguration> = $r4;

        $r6 = new android.app.ActivityThread$Profiler;

        specialinvoke $r6.<android.app.ActivityThread$Profiler: void <init>()>();

        r0.<android.app.ActivityThread: android.app.ActivityThread$Profiler mProfiler> = $r6;

        $r7 = r191.<android.app.ActivityThread$AppBindData: android.app.ProfilerInfo initProfilerInfo>;

        if $r7 == null goto label03;

        $r130 = r0.<android.app.ActivityThread: android.app.ActivityThread$Profiler mProfiler>;

        $r128 = r191.<android.app.ActivityThread$AppBindData: android.app.ProfilerInfo initProfilerInfo>;

        $r129 = $r128.<android.app.ProfilerInfo: java.lang.String profileFile>;

        $r130.<android.app.ActivityThread$Profiler: java.lang.String profileFile> = $r129;

        $r133 = r0.<android.app.ActivityThread: android.app.ActivityThread$Profiler mProfiler>;

        $r131 = r191.<android.app.ActivityThread$AppBindData: android.app.ProfilerInfo initProfilerInfo>;

        $r132 = $r131.<android.app.ProfilerInfo: android.os.ParcelFileDescriptor profileFd>;

        $r133.<android.app.ActivityThread$Profiler: android.os.ParcelFileDescriptor profileFd> = $r132;

        $r135 = r0.<android.app.ActivityThread: android.app.ActivityThread$Profiler mProfiler>;

        $r134 = r191.<android.app.ActivityThread$AppBindData: android.app.ProfilerInfo initProfilerInfo>;

        $i20 = $r134.<android.app.ProfilerInfo: int samplingInterval>;

        $r135.<android.app.ActivityThread$Profiler: int samplingInterval> = $i20;

        $r137 = r0.<android.app.ActivityThread: android.app.ActivityThread$Profiler mProfiler>;

        $r136 = r191.<android.app.ActivityThread$AppBindData: android.app.ProfilerInfo initProfilerInfo>;

        $z17 = $r136.<android.app.ProfilerInfo: boolean autoStopProfiler>;

        $r137.<android.app.ActivityThread$Profiler: boolean autoStopProfiler> = $z17;

        $r139 = r0.<android.app.ActivityThread: android.app.ActivityThread$Profiler mProfiler>;

        $r138 = r191.<android.app.ActivityThread$AppBindData: android.app.ProfilerInfo initProfilerInfo>;

        $z18 = $r138.<android.app.ProfilerInfo: boolean streamingOutput>;

        $r139.<android.app.ActivityThread$Profiler: boolean streamingOutput> = $z18;

        $r140 = r191.<android.app.ActivityThread$AppBindData: android.app.ProfilerInfo initProfilerInfo>;

        $z19 = $r140.<android.app.ProfilerInfo: boolean attachAgentDuringBind>;

        if $z19 == 0 goto label03;

        $r141 = r191.<android.app.ActivityThread$AppBindData: android.app.ProfilerInfo initProfilerInfo>;

        r193 = $r141.<android.app.ProfilerInfo: java.lang.String agent>;

        goto label04;

     label03:
        r193 = null;

     label04:
        $r194 = r191.<android.app.ActivityThread$AppBindData: java.lang.String processName>;

        staticinvoke <android.os.Process: void setArgV0(java.lang.String)>($r194);

        $r195 = r191.<android.app.ActivityThread$AppBindData: java.lang.String processName>;

        $r196 = r191.<android.app.ActivityThread$AppBindData: android.content.pm.ApplicationInfo appInfo>;

        $r197 = $r196.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $i23 = staticinvoke <android.os.UserHandle: int myUserId()>();

        staticinvoke <android.ddm.DdmHandleAppName: void setAppName(java.lang.String,java.lang.String,int)>($r195, $r197, $i23);

        $r198 = r191.<android.app.ActivityThread$AppBindData: android.content.pm.ApplicationInfo appInfo>;

        $r199 = $r198.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        staticinvoke <dalvik.system.VMRuntime: void setProcessPackageName(java.lang.String)>($r199);

        $r200 = r191.<android.app.ActivityThread$AppBindData: android.content.pm.ApplicationInfo appInfo>;

        $r201 = $r200.<android.content.pm.ApplicationInfo: java.lang.String dataDir>;

        staticinvoke <dalvik.system.VMRuntime: void setProcessDataDirectory(java.lang.String)>($r201);

        $r202 = r0.<android.app.ActivityThread: android.app.ActivityThread$Profiler mProfiler>;

        $r203 = $r202.<android.app.ActivityThread$Profiler: android.os.ParcelFileDescriptor profileFd>;

        if $r203 == null goto label05;

        $r127 = r0.<android.app.ActivityThread: android.app.ActivityThread$Profiler mProfiler>;

        virtualinvoke $r127.<android.app.ActivityThread$Profiler: void startProfiling()>();

     label05:
        $r8 = r191.<android.app.ActivityThread$AppBindData: android.content.pm.ApplicationInfo appInfo>;

        $i3 = $r8.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i3 > 12 goto label06;

        $r126 = <android.os.AsyncTask: java.util.concurrent.Executor THREAD_POOL_EXECUTOR>;

        staticinvoke <android.os.AsyncTask: void setDefaultExecutor(java.util.concurrent.Executor)>($r126);

     label06:
        $r9 = r191.<android.app.ActivityThread$AppBindData: android.content.pm.ApplicationInfo appInfo>;

        $i4 = $r9.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i4 < 29 goto label07;

        z21 = 1;

        goto label08;

     label07:
        z21 = 0;

     label08:
        staticinvoke <android.util.UtilConfig: void setThrowExceptionForUpperArrayOutOfBounds(boolean)>(z21);

        $r10 = r191.<android.app.ActivityThread$AppBindData: android.content.pm.ApplicationInfo appInfo>;

        $i5 = $r10.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        staticinvoke <android.os.Message: void updateCheckRecycle(int)>($i5);

        $r11 = r191.<android.app.ActivityThread$AppBindData: android.content.pm.ApplicationInfo appInfo>;

        $i6 = $r11.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        <android.graphics.ImageDecoder: int sApiLevel> = $i6;

        staticinvoke <java.util.TimeZone: void setDefault(java.util.TimeZone)>(null);

        $r12 = r191.<android.app.ActivityThread$AppBindData: android.content.res.Configuration config>;

        $r13 = virtualinvoke $r12.<android.content.res.Configuration: android.os.LocaleList getLocales()>();

        staticinvoke <android.os.LocaleList: void setDefault(android.os.LocaleList)>($r13);

        r204 = r0.<android.app.ActivityThread: android.app.ResourcesManager mResourcesManager>;

        entermonitor r204;

     label09:
        $r16 = r0.<android.app.ActivityThread: android.app.ResourcesManager mResourcesManager>;

        $r15 = r191.<android.app.ActivityThread$AppBindData: android.content.res.Configuration config>;

        $r14 = r191.<android.app.ActivityThread$AppBindData: android.content.res.CompatibilityInfo compatInfo>;

        virtualinvoke $r16.<android.app.ResourcesManager: boolean applyConfigurationToResourcesLocked(android.content.res.Configuration,android.content.res.CompatibilityInfo)>($r15, $r14);

        $r17 = r191.<android.app.ActivityThread$AppBindData: android.content.res.Configuration config>;

        i24 = $r17.<android.content.res.Configuration: int densityDpi>;

        r0.<android.app.ActivityThread: int mCurDefaultDisplayDpi> = i24;

        virtualinvoke r0.<android.app.ActivityThread: android.content.res.Configuration applyCompatConfiguration(int)>(i24);

        exitmonitor r204;

     label10:
        $r20 = r191.<android.app.ActivityThread$AppBindData: android.content.pm.ApplicationInfo appInfo>;

        $r19 = r191.<android.app.ActivityThread$AppBindData: android.content.res.CompatibilityInfo compatInfo>;

        $r21 = virtualinvoke r0.<android.app.ActivityThread: android.app.LoadedApk getPackageInfoNoCheck(android.content.pm.ApplicationInfo,android.content.res.CompatibilityInfo)>($r20, $r19);

        r191.<android.app.ActivityThread$AppBindData: android.app.LoadedApk info> = $r21;

        if r193 == null goto label11;

        $r125 = r191.<android.app.ActivityThread$AppBindData: android.app.LoadedApk info>;

        staticinvoke <android.app.ActivityThread: void handleAttachAgent(java.lang.String,android.app.LoadedApk)>(r193, $r125);

     label11:
        $r22 = r191.<android.app.ActivityThread$AppBindData: android.content.pm.ApplicationInfo appInfo>;

        $i7 = $r22.<android.content.pm.ApplicationInfo: int flags>;

        $i8 = $i7 & 8192;

        if $i8 != 0 goto label12;

        r0.<android.app.ActivityThread: boolean mDensityCompatMode> = 1;

        staticinvoke <android.graphics.Bitmap: void setDefaultDensity(int)>(160);

     label12:
        specialinvoke r0.<android.app.ActivityThread: void updateDefaultDensity()>();

        $r23 = r0.<android.app.ActivityThread: android.os.Bundle mCoreSettings>;

        r205 = virtualinvoke $r23.<android.os.Bundle: java.lang.String getString(java.lang.String)>("time_12_24");

        if r205 == null goto label15;

        $r124 = "24";

        $z16 = virtualinvoke $r124.<java.lang.String: boolean equals(java.lang.Object)>(r205);

        if $z16 == 0 goto label13;

        r206 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label14;

     label13:
        r206 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label14:
        goto label16;

     label15:
        r206 = null;

     label16:
        staticinvoke <java.text.DateFormat: void set24HourTimePref(java.lang.Boolean)>(r206);

        specialinvoke r0.<android.app.ActivityThread: boolean updateDebugViewAttributeState()>();

        $r24 = r191.<android.app.ActivityThread$AppBindData: android.content.pm.ApplicationInfo appInfo>;

        staticinvoke <android.os.StrictMode: void initThreadDefaults(android.content.pm.ApplicationInfo)>($r24);

        $r25 = r191.<android.app.ActivityThread$AppBindData: android.content.pm.ApplicationInfo appInfo>;

        staticinvoke <android.os.StrictMode: void initVmDefaults(android.content.pm.ApplicationInfo)>($r25);

        $i9 = r191.<android.app.ActivityThread$AppBindData: int debugMode>;

        if $i9 == 0 goto label24;

        staticinvoke <android.os.Debug: void changeDebugPort(int)>(8100);

        $i17 = r191.<android.app.ActivityThread$AppBindData: int debugMode>;

        if $i17 != 2 goto label23;

        $r115 = new java.lang.StringBuilder;

        specialinvoke $r115.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r115.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Application ");

        $r117 = r191.<android.app.ActivityThread$AppBindData: android.app.LoadedApk info>;

        $r118 = virtualinvoke $r117.<android.app.LoadedApk: java.lang.String getPackageName()>();

        virtualinvoke $r115.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r118);

        virtualinvoke $r115.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is waiting for the debugger on port 8100...");

        $r121 = virtualinvoke $r115.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityThread", $r121);

        r208 = staticinvoke <android.app.ActivityManager: android.app.IActivityManager getService()>();

     label17:
        $r122 = r0.<android.app.ActivityThread: android.app.ActivityThread$ApplicationThread mAppThread>;

        interfaceinvoke r208.<android.app.IActivityManager: void showWaitingForDebugger(android.app.IApplicationThread,boolean)>($r122, 1);

     label18:
        staticinvoke <android.os.Debug: void waitForDebugger()>();

     label19:
        $r123 = r0.<android.app.ActivityThread: android.app.ActivityThread$ApplicationThread mAppThread>;

        interfaceinvoke r208.<android.app.IActivityManager: void showWaitingForDebugger(android.app.IApplicationThread,boolean)>($r123, 0);

     label20:
        goto label24;

     label21:
        $r166 := @caughtexception;

        $r167 = virtualinvoke $r166.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r167;

     label22:
        $r145 := @caughtexception;

        $r146 = virtualinvoke $r145.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r146;

     label23:
        $r108 = new java.lang.StringBuilder;

        specialinvoke $r108.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r108.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Application ");

        $r110 = r191.<android.app.ActivityThread$AppBindData: android.app.LoadedApk info>;

        $r111 = virtualinvoke $r110.<android.app.LoadedApk: java.lang.String getPackageName()>();

        virtualinvoke $r108.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r111);

        virtualinvoke $r108.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" can be debugged on port 8100...");

        $r114 = virtualinvoke $r108.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityThread", $r114);

     label24:
        $r212 = r191.<android.app.ActivityThread$AppBindData: android.content.pm.ApplicationInfo appInfo>;

        z22 = virtualinvoke $r212.<android.content.pm.ApplicationInfo: boolean isProfileableByShell()>();

        staticinvoke <android.os.Trace: void setAppTracingAllowed(boolean)>(z22);

        if z22 != 0 goto label25;

        $z15 = <android.os.Build: boolean IS_DEBUGGABLE>;

        if $z15 == 0 goto label26;

     label25:
        $z3 = r191.<android.app.ActivityThread$AppBindData: boolean enableBinderTracking>;

        if $z3 == 0 goto label26;

        staticinvoke <android.os.Binder: void enableTracing()>();

     label26:
        if z22 != 0 goto label27;

        $z14 = <android.os.Build: boolean IS_DEBUGGABLE>;

        if $z14 == 0 goto label28;

     label27:
        specialinvoke r0.<android.app.ActivityThread: void nInitZygoteChildHeapProfiling()>();

     label28:
        $r213 = r191.<android.app.ActivityThread$AppBindData: android.content.pm.ApplicationInfo appInfo>;

        $i25 = $r213.<android.content.pm.ApplicationInfo: int flags>;

        $i26 = $i25 & 2;

        if $i26 == 0 goto label29;

        z23 = 1;

        goto label30;

     label29:
        z23 = 0;

     label30:
        if z23 != 0 goto label32;

        $z13 = <android.os.Build: boolean IS_DEBUGGABLE>;

        if $z13 == 0 goto label31;

        goto label32;

     label31:
        z24 = 0;

        goto label33;

     label32:
        z24 = 1;

     label33:
        staticinvoke <android.graphics.HardwareRenderer: void setDebuggingEnabled(boolean)>(z24);

        $r214 = r191.<android.app.ActivityThread$AppBindData: android.content.pm.ApplicationInfo appInfo>;

        $r215 = $r214.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        staticinvoke <android.graphics.HardwareRenderer: void setPackageName(java.lang.String)>($r215);

        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(64L, "Setup proxies");

        r216 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("connectivity");

        if r216 == null goto label37;

        r217 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager asInterface(android.os.IBinder)>(r216);

     label34:
        $r107 = interfaceinvoke r217.<android.net.IConnectivityManager: android.net.ProxyInfo getProxyForNetwork(android.net.Network)>(null);

        staticinvoke <android.net.Proxy: void setHttpProxySystemProperty(android.net.ProxyInfo)>($r107);

     label35:
        goto label37;

     label36:
        $r178 := @caughtexception;

        staticinvoke <android.os.Trace: void traceEnd(long)>(64L);

        $r179 = virtualinvoke $r178.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r179;

     label37:
        staticinvoke <android.os.Trace: void traceEnd(long)>(64L);

        $r26 = r191.<android.app.ActivityThread$AppBindData: android.content.ComponentName instrumentationName>;

        if $r26 == null goto label43;

     label38:
        r219 = new android.app.ApplicationPackageManager;

        $r75 = staticinvoke <android.app.ActivityThread: android.content.pm.IPackageManager getPackageManager()>();

        $r76 = staticinvoke <android.app.ActivityThread: android.permission.IPermissionManager getPermissionManager()>();

        specialinvoke r219.<android.app.ApplicationPackageManager: void <init>(android.app.ContextImpl,android.content.pm.IPackageManager,android.permission.IPermissionManager)>(null, $r75, $r76);

        $r77 = r191.<android.app.ActivityThread$AppBindData: android.content.ComponentName instrumentationName>;

        r220 = virtualinvoke r219.<android.app.ApplicationPackageManager: android.content.pm.InstrumentationInfo getInstrumentationInfo(android.content.ComponentName,int)>($r77, 0);

     label39:
        $r78 = r191.<android.app.ActivityThread$AppBindData: android.content.pm.ApplicationInfo appInfo>;

        $r80 = $r78.<android.content.pm.ApplicationInfo: java.lang.String primaryCpuAbi>;

        $r79 = r220.<android.content.pm.InstrumentationInfo: java.lang.String primaryCpuAbi>;

        $z11 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r80, $r79);

        if $z11 == 0 goto label40;

        $r104 = r191.<android.app.ActivityThread$AppBindData: android.content.pm.ApplicationInfo appInfo>;

        $r106 = $r104.<android.content.pm.ApplicationInfo: java.lang.String secondaryCpuAbi>;

        $r105 = r220.<android.content.pm.InstrumentationInfo: java.lang.String secondaryCpuAbi>;

        $z12 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r106, $r105);

        if $z12 != 0 goto label41;

     label40:
        $r81 = new java.lang.StringBuilder;

        specialinvoke $r81.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package uses different ABI(s) than its instrumentation: package[");

        $r83 = r191.<android.app.ActivityThread$AppBindData: android.content.pm.ApplicationInfo appInfo>;

        $r84 = $r83.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r84);

        virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]: ");

        $r87 = r191.<android.app.ActivityThread$AppBindData: android.content.pm.ApplicationInfo appInfo>;

        $r88 = $r87.<android.content.pm.ApplicationInfo: java.lang.String primaryCpuAbi>;

        virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r88);

        virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r91 = r191.<android.app.ActivityThread$AppBindData: android.content.pm.ApplicationInfo appInfo>;

        $r92 = $r91.<android.content.pm.ApplicationInfo: java.lang.String secondaryCpuAbi>;

        virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r92);

        virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" instrumentation[");

        $r95 = r220.<android.content.pm.InstrumentationInfo: java.lang.String packageName>;

        virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r95);

        virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]: ");

        $r98 = r220.<android.content.pm.InstrumentationInfo: java.lang.String primaryCpuAbi>;

        virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r98);

        virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r101 = r220.<android.content.pm.InstrumentationInfo: java.lang.String secondaryCpuAbi>;

        virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r101);

        $r103 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityThread", $r103);

     label41:
        $r222 = r220.<android.content.pm.InstrumentationInfo: java.lang.String packageName>;

        r0.<android.app.ActivityThread: java.lang.String mInstrumentationPackageName> = $r222;

        $r223 = r220.<android.content.pm.InstrumentationInfo: java.lang.String sourceDir>;

        r0.<android.app.ActivityThread: java.lang.String mInstrumentationAppDir> = $r223;

        $r224 = r220.<android.content.pm.InstrumentationInfo: java.lang.String[] splitSourceDirs>;

        r0.<android.app.ActivityThread: java.lang.String[] mInstrumentationSplitAppDirs> = $r224;

        $r225 = r191.<android.app.ActivityThread$AppBindData: android.content.pm.ApplicationInfo appInfo>;

        $r226 = specialinvoke r0.<android.app.ActivityThread: java.lang.String getInstrumentationLibrary(android.content.pm.ApplicationInfo,android.content.pm.InstrumentationInfo)>($r225, r220);

        r0.<android.app.ActivityThread: java.lang.String mInstrumentationLibDir> = $r226;

        $r227 = r191.<android.app.ActivityThread$AppBindData: android.app.LoadedApk info>;

        $r228 = virtualinvoke $r227.<android.app.LoadedApk: java.lang.String getAppDir()>();

        r0.<android.app.ActivityThread: java.lang.String mInstrumentedAppDir> = $r228;

        $r229 = r191.<android.app.ActivityThread$AppBindData: android.app.LoadedApk info>;

        $r230 = virtualinvoke $r229.<android.app.LoadedApk: java.lang.String[] getSplitAppDirs()>();

        r0.<android.app.ActivityThread: java.lang.String[] mInstrumentedSplitAppDirs> = $r230;

        $r231 = r191.<android.app.ActivityThread$AppBindData: android.app.LoadedApk info>;

        $r232 = virtualinvoke $r231.<android.app.LoadedApk: java.lang.String getLibDir()>();

        r0.<android.app.ActivityThread: java.lang.String mInstrumentedLibDir> = $r232;

        goto label44;

     label42:
        $r147 := @caughtexception;

        $r148 = new java.lang.StringBuilder;

        specialinvoke $r148.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r148.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to find instrumentation info for: ");

        $r150 = r191.<android.app.ActivityThread$AppBindData: android.content.ComponentName instrumentationName>;

        virtualinvoke $r148.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r150);

        $r152 = new java.lang.RuntimeException;

        $r153 = virtualinvoke $r148.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r152.<java.lang.RuntimeException: void <init>(java.lang.String)>($r153);

        throw $r152;

     label43:
        r220 = null;

     label44:
        $r27 = r191.<android.app.ActivityThread$AppBindData: android.app.LoadedApk info>;

        r235 = staticinvoke <android.app.ContextImpl: android.app.ContextImpl createAppContext(android.app.ActivityThread,android.app.LoadedApk)>(r0, $r27);

        $r28 = r0.<android.app.ActivityThread: android.app.ResourcesManager mResourcesManager>;

        $r29 = virtualinvoke $r28.<android.app.ResourcesManager: android.content.res.Configuration getConfiguration()>();

        $r30 = virtualinvoke $r29.<android.content.res.Configuration: android.os.LocaleList getLocales()>();

        specialinvoke r0.<android.app.ActivityThread: void updateLocaleListFromAppContext(android.content.Context,android.os.LocaleList)>(r235, $r30);

        $z4 = staticinvoke <android.os.Process: boolean isIsolated()>();

        if $z4 != 0 goto label48;

        i27 = staticinvoke <android.os.StrictMode: int allowThreadDiskWritesMask()>();

     label45:
        specialinvoke r0.<android.app.ActivityThread: void setupGraphicsSupport(android.content.Context)>(r235);

     label46:
        staticinvoke <android.os.StrictMode: void setThreadPolicyMask(int)>(i27);

        goto label49;

     label47:
        $r142 := @caughtexception;

        staticinvoke <android.os.StrictMode: void setThreadPolicyMask(int)>(i27);

        throw $r142;

     label48:
        staticinvoke <android.graphics.HardwareRenderer: void setIsolatedProcess(boolean)>(1);

     label49:
        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(64L, "NetworkSecurityConfigProvider.install");

        staticinvoke <android.security.net.config.NetworkSecurityConfigProvider: void install(android.content.Context)>(r235);

        staticinvoke <android.os.Trace: void traceEnd(long)>(64L);

        if r220 == null goto label59;

     label50:
        $r49 = staticinvoke <android.app.ActivityThread: android.content.pm.IPackageManager getPackageManager()>();

        $r50 = r220.<android.content.pm.InstrumentationInfo: java.lang.String packageName>;

        $i14 = staticinvoke <android.os.UserHandle: int myUserId()>();

        r237 = interfaceinvoke $r49.<android.content.pm.IPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int,int)>($r50, 0, $i14);

     label51:
        goto label53;

     label52:
        $r180 := @caughtexception;

        r237 = null;

     label53:
        if r237 != null goto label54;

        $r74 = new android.content.pm.ApplicationInfo;

        specialinvoke $r74.<android.content.pm.ApplicationInfo: void <init>()>();

        r237 = $r74;

        goto label54;

     label54:
        virtualinvoke r220.<android.content.pm.InstrumentationInfo: void copyTo(android.content.pm.ApplicationInfo)>(r237);

        $i15 = staticinvoke <android.os.UserHandle: int myUserId()>();

        virtualinvoke r237.<android.content.pm.ApplicationInfo: void initForUser(int)>($i15);

        r239 = r191.<android.app.ActivityThread$AppBindData: android.content.res.CompatibilityInfo compatInfo>;

        r240 = virtualinvoke r235.<android.app.ContextImpl: java.lang.ClassLoader getClassLoader()>();

        r242 = specialinvoke r0.<android.app.ActivityThread: android.app.LoadedApk getPackageInfo(android.content.pm.ApplicationInfo,android.content.res.CompatibilityInfo,java.lang.ClassLoader,boolean,boolean,boolean)>(r237, r239, r240, 0, 1, 0);

        $r51 = virtualinvoke r235.<android.app.ContextImpl: java.lang.String getOpPackageName()>();

        r243 = staticinvoke <android.app.ContextImpl: android.app.ContextImpl createAppContext(android.app.ActivityThread,android.app.LoadedApk,java.lang.String)>(r0, r242, $r51);

     label55:
        $r52 = virtualinvoke r243.<android.app.ContextImpl: java.lang.ClassLoader getClassLoader()>();

        $r53 = r191.<android.app.ActivityThread$AppBindData: android.content.ComponentName instrumentationName>;

        $r54 = virtualinvoke $r53.<android.content.ComponentName: java.lang.String getClassName()>();

        $r55 = virtualinvoke $r52.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>($r54);

        $r56 = virtualinvoke $r55.<java.lang.Class: java.lang.Object newInstance()>();

        $r57 = (android.app.Instrumentation) $r56;

        r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation> = $r57;

     label56:
        $r58 = new android.content.ComponentName;

        $r60 = r220.<android.content.pm.InstrumentationInfo: java.lang.String packageName>;

        $r59 = r220.<android.content.pm.InstrumentationInfo: java.lang.String name>;

        specialinvoke $r58.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r60, $r59);

        $r63 = r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        $r62 = r191.<android.app.ActivityThread$AppBindData: android.app.IInstrumentationWatcher instrumentationWatcher>;

        $r61 = r191.<android.app.ActivityThread$AppBindData: android.app.IUiAutomationConnection instrumentationUiAutomationConnection>;

        virtualinvoke $r63.<android.app.Instrumentation: void init(android.app.ActivityThread,android.content.Context,android.content.Context,android.content.ComponentName,android.app.IInstrumentationWatcher,android.app.IUiAutomationConnection)>(r0, r243, r235, $r58, $r62, $r61);

        $r64 = r0.<android.app.ActivityThread: android.app.ActivityThread$Profiler mProfiler>;

        $r65 = $r64.<android.app.ActivityThread$Profiler: java.lang.String profileFile>;

        if $r65 == null goto label57;

        $z9 = r220.<android.content.pm.InstrumentationInfo: boolean handleProfiling>;

        if $z9 != 0 goto label57;

        $r66 = r0.<android.app.ActivityThread: android.app.ActivityThread$Profiler mProfiler>;

        $r67 = $r66.<android.app.ActivityThread$Profiler: android.os.ParcelFileDescriptor profileFd>;

        if $r67 != null goto label57;

        $r68 = r0.<android.app.ActivityThread: android.app.ActivityThread$Profiler mProfiler>;

        $r68.<android.app.ActivityThread$Profiler: boolean handlingProfiling> = 1;

        $r69 = new java.io.File;

        $r70 = r0.<android.app.ActivityThread: android.app.ActivityThread$Profiler mProfiler>;

        $r71 = $r70.<android.app.ActivityThread$Profiler: java.lang.String profileFile>;

        specialinvoke $r69.<java.io.File: void <init>(java.lang.String)>($r71);

        $r72 = virtualinvoke $r69.<java.io.File: java.io.File getParentFile()>();

        virtualinvoke $r72.<java.io.File: boolean mkdirs()>();

        $r73 = virtualinvoke $r69.<java.io.File: java.lang.String toString()>();

        staticinvoke <android.os.Debug: void startMethodTracing(java.lang.String,int)>($r73, 8388608);

     label57:
        goto label60;

     label58:
        $r168 := @caughtexception;

        $r169 = new java.lang.StringBuilder;

        specialinvoke $r169.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r169.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to instantiate instrumentation ");

        $r171 = r191.<android.app.ActivityThread$AppBindData: android.content.ComponentName instrumentationName>;

        virtualinvoke $r169.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r171);

        virtualinvoke $r169.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r174 = virtualinvoke $r168.<java.lang.Exception: java.lang.String toString()>();

        virtualinvoke $r169.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r174);

        $r176 = new java.lang.RuntimeException;

        $r177 = virtualinvoke $r169.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r176.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r177, $r168);

        throw $r176;

     label59:
        $r31 = new android.app.Instrumentation;

        specialinvoke $r31.<android.app.Instrumentation: void <init>()>();

        r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation> = $r31;

        virtualinvoke $r31.<android.app.Instrumentation: void basicInit(android.app.ActivityThread)>(r0);

     label60:
        $r32 = r191.<android.app.ActivityThread$AppBindData: android.content.pm.ApplicationInfo appInfo>;

        $i10 = $r32.<android.content.pm.ApplicationInfo: int flags>;

        $i11 = $i10 & 1048576;

        if $i11 == 0 goto label61;

        $r48 = staticinvoke <dalvik.system.VMRuntime: dalvik.system.VMRuntime getRuntime()>();

        virtualinvoke $r48.<dalvik.system.VMRuntime: void clearGrowthLimit()>();

        goto label62;

     label61:
        $r33 = staticinvoke <dalvik.system.VMRuntime: dalvik.system.VMRuntime getRuntime()>();

        virtualinvoke $r33.<dalvik.system.VMRuntime: void clampGrowthLimit()>();

     label62:
        r249 = staticinvoke <android.os.StrictMode: android.os.StrictMode$ThreadPolicy allowThreadDiskWrites()>();

        r250 = staticinvoke <android.os.StrictMode: android.os.StrictMode$ThreadPolicy getThreadPolicy()>();

     label63:
        $r34 = r191.<android.app.ActivityThread$AppBindData: android.app.LoadedApk info>;

        $z5 = r191.<android.app.ActivityThread$AppBindData: boolean restrictedBackupMode>;

        r251 = virtualinvoke $r34.<android.app.LoadedApk: android.app.Application makeApplication(boolean,android.app.Instrumentation)>($z5, null);

        $r35 = r191.<android.app.ActivityThread$AppBindData: android.content.AutofillOptions autofillOptions>;

        virtualinvoke r251.<android.app.Application: void setAutofillOptions(android.content.AutofillOptions)>($r35);

        $r36 = r191.<android.app.ActivityThread$AppBindData: android.content.ContentCaptureOptions contentCaptureOptions>;

        virtualinvoke r251.<android.app.Application: void setContentCaptureOptions(android.content.ContentCaptureOptions)>($r36);

        r0.<android.app.ActivityThread: android.app.Application mInitialApplication> = r251;

        $z6 = r191.<android.app.ActivityThread$AppBindData: boolean restrictedBackupMode>;

        if $z6 != 0 goto label64;

        $r46 = r191.<android.app.ActivityThread$AppBindData: java.util.List providers>;

        $z8 = staticinvoke <com.android.internal.util.ArrayUtils: boolean isEmpty(java.util.Collection)>($r46);

        if $z8 != 0 goto label64;

        $r47 = r191.<android.app.ActivityThread$AppBindData: java.util.List providers>;

        specialinvoke r0.<android.app.ActivityThread: void installContentProviders(android.content.Context,java.util.List)>(r251, $r47);

     label64:
        $r252 = r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        $r253 = r191.<android.app.ActivityThread$AppBindData: android.os.Bundle instrumentationArgs>;

        virtualinvoke $r252.<android.app.Instrumentation: void onCreate(android.os.Bundle)>($r253);

     label65:
        $r254 = r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        virtualinvoke $r254.<android.app.Instrumentation: void callApplicationOnCreate(android.app.Application)>(r251);

     label66:
        goto label70;

     label67:
        $r181 := @caughtexception;

     label68:
        $r182 = r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        z25 = virtualinvoke $r182.<android.app.Instrumentation: boolean onException(java.lang.Object,java.lang.Throwable)>(r251, $r181);

     label69:
        if z25 == 0 goto label79;

     label70:
        $r37 = r191.<android.app.ActivityThread$AppBindData: android.content.pm.ApplicationInfo appInfo>;

        $i12 = $r37.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i12 < 27 goto label71;

        $r45 = staticinvoke <android.os.StrictMode: android.os.StrictMode$ThreadPolicy getThreadPolicy()>();

        $z7 = virtualinvoke $r45.<java.lang.Object: boolean equals(java.lang.Object)>(r250);

        if $z7 == 0 goto label72;

     label71:
        staticinvoke <android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>(r249);

     label72:
        staticinvoke <android.provider.FontsContract: void setApplicationContextForResources(android.content.Context)>(r235);

        $z26 = staticinvoke <android.os.Process: boolean isIsolated()>();

        if $z26 != 0 goto label78;

     label73:
        $r38 = staticinvoke <android.app.ActivityThread: android.content.pm.IPackageManager getPackageManager()>();

        $r39 = r191.<android.app.ActivityThread$AppBindData: android.content.pm.ApplicationInfo appInfo>;

        $r40 = $r39.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $i13 = staticinvoke <android.os.UserHandle: int myUserId()>();

        r256 = interfaceinvoke $r38.<android.content.pm.IPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int,int)>($r40, 128, $i13);

        $r41 = r256.<android.content.pm.ApplicationInfo: android.os.Bundle metaData>;

        if $r41 == null goto label76;

        $r42 = r256.<android.content.pm.ApplicationInfo: android.os.Bundle metaData>;

        i28 = virtualinvoke $r42.<android.os.Bundle: int getInt(java.lang.String,int)>("preloaded_fonts", 0);

     label74:
        if i28 == 0 goto label76;

     label75:
        $r43 = r191.<android.app.ActivityThread$AppBindData: android.app.LoadedApk info>;

        $r44 = virtualinvoke $r43.<android.app.LoadedApk: android.content.res.Resources getResources()>();

        virtualinvoke $r44.<android.content.res.Resources: void preloadFonts(int)>(i28);

     label76:
        goto label78;

     label77:
        $r143 := @caughtexception;

        $r144 = virtualinvoke $r143.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r144;

     label78:
        return;

     label79:
        r258 = new java.lang.RuntimeException;

        r259 = new java.lang.StringBuilder;

        specialinvoke r259.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r259.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to create application ");

        $r184 = virtualinvoke r251.<java.lang.Object: java.lang.Class getClass()>();

        $r185 = virtualinvoke $r184.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r259.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r185);

        virtualinvoke r259.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r188 = virtualinvoke $r181.<java.lang.Exception: java.lang.String toString()>();

        virtualinvoke r259.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r188);

        $r190 = virtualinvoke r259.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r258.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r190, $r181);

        throw r258;

     label80:
        $r158 := @caughtexception;

     label81:
        r261 = new java.lang.RuntimeException;

        r262 = new java.lang.StringBuilder;

        specialinvoke r262.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r262.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception thrown in onCreate() of ");

        $r160 = r191.<android.app.ActivityThread$AppBindData: android.content.ComponentName instrumentationName>;

        virtualinvoke r262.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r160);

        virtualinvoke r262.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r163 = virtualinvoke $r158.<java.lang.Exception: java.lang.String toString()>();

        virtualinvoke r262.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r163);

        $r165 = virtualinvoke r262.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r261.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r165, $r158);

        throw r261;

     label82:
        $r155 := @caughtexception;

        $r156 = r191.<android.app.ActivityThread$AppBindData: android.content.pm.ApplicationInfo appInfo>;

        $i22 = $r156.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i22 < 27 goto label83;

        $r157 = staticinvoke <android.os.StrictMode: android.os.StrictMode$ThreadPolicy getThreadPolicy()>();

        $z20 = virtualinvoke $r157.<java.lang.Object: boolean equals(java.lang.Object)>(r250);

        if $z20 == 0 goto label84;

     label83:
        staticinvoke <android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>(r249);

     label84:
        throw $r155;

     label85:
        $r154 := @caughtexception;

     label86:
        exitmonitor r204;

     label87:
        throw $r154;

        catch java.lang.Throwable from label09 to label10 with label85;
        catch android.os.RemoteException from label17 to label18 with label22;
        catch android.os.RemoteException from label19 to label20 with label21;
        catch android.os.RemoteException from label34 to label35 with label36;
        catch android.content.pm.PackageManager$NameNotFoundException from label38 to label39 with label42;
        catch java.lang.Throwable from label45 to label46 with label47;
        catch android.os.RemoteException from label50 to label51 with label52;
        catch java.lang.Exception from label55 to label56 with label58;
        catch java.lang.Throwable from label63 to label64 with label82;
        catch java.lang.Exception from label64 to label65 with label80;
        catch java.lang.Throwable from label64 to label65 with label82;
        catch java.lang.Exception from label65 to label66 with label67;
        catch java.lang.Throwable from label65 to label66 with label82;
        catch java.lang.Throwable from label68 to label69 with label82;
        catch android.os.RemoteException from label73 to label74 with label77;
        catch android.os.RemoteException from label75 to label76 with label77;
        catch java.lang.Throwable from label79 to label80 with label82;
        catch java.lang.Throwable from label81 to label82 with label82;
        catch java.lang.Throwable from label86 to label87 with label85;
    }

    private void handleBindService(android.app.ActivityThread$BindServiceData)
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$BindServiceData r1;
        android.app.Service r2;
        android.os.IBinder $r4, $r12, $r16, r32;
        android.util.ArrayMap $r5;
        java.lang.Object $r6;
        android.content.Intent $r7, $r9, $r10, $r13, $r15, $r25;
        java.lang.ClassLoader $r8;
        boolean $z0, $z1;
        android.app.IActivityManager $r11, $r14;
        android.os.RemoteException $r17;
        java.lang.RuntimeException $r18, $r30;
        java.lang.Exception $r19;
        android.app.Instrumentation $r20;
        java.lang.StringBuilder $r21;
        java.lang.String $r28, $r31;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.app.ActivityThread$BindServiceData;

        $r5 = r0.<android.app.ActivityThread: android.util.ArrayMap mServices>;

        $r4 = r1.<android.app.ActivityThread$BindServiceData: android.os.IBinder token>;

        $r6 = virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r4);

        r2 = (android.app.Service) $r6;

        if r2 == null goto label10;

     label01:
        $r7 = r1.<android.app.ActivityThread$BindServiceData: android.content.Intent intent>;

        $r8 = virtualinvoke r2.<android.app.Service: java.lang.ClassLoader getClassLoader()>();

        virtualinvoke $r7.<android.content.Intent: void setExtrasClassLoader(java.lang.ClassLoader)>($r8);

        $r9 = r1.<android.app.ActivityThread$BindServiceData: android.content.Intent intent>;

        virtualinvoke $r9.<android.content.Intent: void prepareToEnterProcess()>();

     label02:
        $z0 = r1.<android.app.ActivityThread$BindServiceData: boolean rebind>;

        if $z0 != 0 goto label04;

        $r13 = r1.<android.app.ActivityThread$BindServiceData: android.content.Intent intent>;

        r32 = virtualinvoke r2.<android.app.Service: android.os.IBinder onBind(android.content.Intent)>($r13);

        $r14 = staticinvoke <android.app.ActivityManager: android.app.IActivityManager getService()>();

        $r16 = r1.<android.app.ActivityThread$BindServiceData: android.os.IBinder token>;

        $r15 = r1.<android.app.ActivityThread$BindServiceData: android.content.Intent intent>;

        interfaceinvoke $r14.<android.app.IActivityManager: void publishService(android.os.IBinder,android.content.Intent,android.os.IBinder)>($r16, $r15, r32);

     label03:
        goto label05;

     label04:
        $r10 = r1.<android.app.ActivityThread$BindServiceData: android.content.Intent intent>;

        virtualinvoke r2.<android.app.Service: void onRebind(android.content.Intent)>($r10);

        $r11 = staticinvoke <android.app.ActivityManager: android.app.IActivityManager getService()>();

        $r12 = r1.<android.app.ActivityThread$BindServiceData: android.os.IBinder token>;

        interfaceinvoke $r11.<android.app.IActivityManager: void serviceDoneExecuting(android.os.IBinder,int,int,int)>($r12, 0, 0, 0);

     label05:
        goto label10;

     label06:
        $r17 := @caughtexception;

     label07:
        $r18 = virtualinvoke $r17.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r18;

     label08:
        $r19 := @caughtexception;

        $r20 = r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        $z1 = virtualinvoke $r20.<android.app.Instrumentation: boolean onException(java.lang.Object,java.lang.Throwable)>(r2, $r19);

        if $z1 == 0 goto label09;

        goto label10;

     label09:
        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to bind to service ");

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with ");

        $r25 = r1.<android.app.ActivityThread$BindServiceData: android.content.Intent intent>;

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r25);

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r28 = virtualinvoke $r19.<java.lang.Exception: java.lang.String toString()>();

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r30 = new java.lang.RuntimeException;

        $r31 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r30.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r31, $r19);

        throw $r30;

     label10:
        return;

        catch java.lang.Exception from label01 to label02 with label08;
        catch android.os.RemoteException from label02 to label03 with label06;
        catch java.lang.Exception from label02 to label03 with label08;
        catch android.os.RemoteException from label04 to label05 with label06;
        catch java.lang.Exception from label04 to label05 with label08;
        catch java.lang.Exception from label07 to label08 with label08;
    }

    private void handleConfigurationChanged(android.content.res.Configuration, android.content.res.CompatibilityInfo)
    {
        android.app.ActivityThread r0;
        android.content.res.Resources$Theme r1, r2;
        android.app.ResourcesManager r3, $r34, $r37;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i9, $i11, i12;
        android.app.ContextImpl $r4, $r5;
        android.content.res.Configuration $r6, $r7, $r8, $r9, $r15, $r25, $r28, $r29, r31, r33, $r38, $r40, r41, r43;
        boolean $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, z10;
        java.lang.Object $r10, $r20;
        java.lang.StringBuilder $r11, r42;
        java.lang.String $r17, $r27;
        android.util.ArrayMap $r18;
        android.os.IBinder $r19;
        android.app.ActivityThread$ActivityClientRecord $r21;
        java.lang.Throwable $r30;
        android.content.res.CompatibilityInfo r32;
        android.app.Application $r35;
        android.content.Context $r36;
        android.os.LocaleList $r39;
        java.util.ArrayList r44;
        android.content.ComponentCallbacks2 r45;
        android.app.Activity r46;

        r0 := @this: android.app.ActivityThread;

        r31 := @parameter0: android.content.res.Configuration;

        r32 := @parameter1: android.content.res.CompatibilityInfo;

        $r4 = virtualinvoke r0.<android.app.ActivityThread: android.app.ContextImpl getSystemContext()>();

        r1 = virtualinvoke $r4.<android.app.ContextImpl: android.content.res.Resources$Theme getTheme()>();

        $r5 = virtualinvoke r0.<android.app.ActivityThread: android.app.ContextImpl getSystemUiContext()>();

        r2 = virtualinvoke $r5.<android.app.ContextImpl: android.content.res.Resources$Theme getTheme()>();

        r3 = r0.<android.app.ActivityThread: android.app.ResourcesManager mResourcesManager>;

        entermonitor r3;

        r33 = r31;

     label01:
        $r6 = r0.<android.app.ActivityThread: android.content.res.Configuration mPendingConfiguration>;

        if $r6 == null goto label05;

     label02:
        r33 = r31;

     label03:
        $r29 = r0.<android.app.ActivityThread: android.content.res.Configuration mPendingConfiguration>;

        $z9 = virtualinvoke $r29.<android.content.res.Configuration: boolean isOtherSeqNewer(android.content.res.Configuration)>(r31);

        if $z9 != 0 goto label04;

        r33 = r0.<android.app.ActivityThread: android.content.res.Configuration mPendingConfiguration>;

        $i11 = r33.<android.content.res.Configuration: int densityDpi>;

        r0.<android.app.ActivityThread: int mCurDefaultDisplayDpi> = $i11;

        specialinvoke r0.<android.app.ActivityThread: void updateDefaultDensity()>();

     label04:
        r0.<android.app.ActivityThread: android.content.res.Configuration mPendingConfiguration> = null;

     label05:
        if r33 != null goto label09;

     label06:
        $z7 = <android.os.Build: boolean IS_DEBUGGABLE>;

        if $z7 == 0 goto label07;

        $z8 = r0.<android.app.ActivityThread: boolean mHasImeComponent>;

        if $z8 == 0 goto label07;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityThread", "handleConfigurationChanged for IME app but config is null");

     label07:
        exitmonitor r3;

     label08:
        return;

     label09:
        $r7 = r0.<android.app.ActivityThread: android.content.res.Configuration mConfiguration>;

        if $r7 == null goto label11;

        $r28 = r0.<android.app.ActivityThread: android.content.res.Configuration mConfiguration>;

        $i9 = virtualinvoke $r28.<android.content.res.Configuration: int diffPublicOnly(android.content.res.Configuration)>(r33);

        if $i9 != 0 goto label11;

     label10:
        z10 = 1;

        goto label12;

     label11:
        z10 = 0;

     label12:
        $r34 = r0.<android.app.ActivityThread: android.app.ResourcesManager mResourcesManager>;

        virtualinvoke $r34.<android.app.ResourcesManager: boolean applyConfigurationToResourcesLocked(android.content.res.Configuration,android.content.res.CompatibilityInfo)>(r33, r32);

        $r35 = r0.<android.app.ActivityThread: android.app.Application mInitialApplication>;

        $r36 = virtualinvoke $r35.<android.app.Application: android.content.Context getApplicationContext()>();

        $r37 = r0.<android.app.ActivityThread: android.app.ResourcesManager mResourcesManager>;

        $r38 = virtualinvoke $r37.<android.app.ResourcesManager: android.content.res.Configuration getConfiguration()>();

        $r39 = virtualinvoke $r38.<android.content.res.Configuration: android.os.LocaleList getLocales()>();

        specialinvoke r0.<android.app.ActivityThread: void updateLocaleListFromAppContext(android.content.Context,android.os.LocaleList)>($r36, $r39);

        $r40 = r0.<android.app.ActivityThread: android.content.res.Configuration mConfiguration>;

        if $r40 != null goto label13;

        r41 = new android.content.res.Configuration;

        specialinvoke r41.<android.content.res.Configuration: void <init>()>();

        r0.<android.app.ActivityThread: android.content.res.Configuration mConfiguration> = r41;

     label13:
        $r8 = r0.<android.app.ActivityThread: android.content.res.Configuration mConfiguration>;

        $z1 = virtualinvoke $r8.<android.content.res.Configuration: boolean isOtherSeqNewer(android.content.res.Configuration)>(r33);

        if $z1 != 0 goto label18;

     label14:
        if r32 != null goto label18;

     label15:
        $z5 = <android.os.Build: boolean IS_DEBUGGABLE>;

        if $z5 == 0 goto label16;

        $z6 = r0.<android.app.ActivityThread: boolean mHasImeComponent>;

        if $z6 == 0 goto label16;

        r42 = new java.lang.StringBuilder;

        specialinvoke r42.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handleConfigurationChanged for IME app but config seq is obsolete , config=");

        virtualinvoke r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r33);

        virtualinvoke r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mConfiguration=");

        $r25 = r0.<android.app.ActivityThread: android.content.res.Configuration mConfiguration>;

        virtualinvoke r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r25);

        $r27 = virtualinvoke r42.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityThread", $r27);

     label16:
        exitmonitor r3;

     label17:
        return;

     label18:
        $r9 = r0.<android.app.ActivityThread: android.content.res.Configuration mConfiguration>;

        i0 = virtualinvoke $r9.<android.content.res.Configuration: int updateFrom(android.content.res.Configuration)>(r33);

        $i2 = r0.<android.app.ActivityThread: int mCurDefaultDisplayDpi>;

        r43 = virtualinvoke r0.<android.app.ActivityThread: android.content.res.Configuration applyCompatConfiguration(int)>($i2);

        $i3 = virtualinvoke r1.<android.content.res.Resources$Theme: int getChangingConfigurations()>();

        $i4 = $i3 & i0;

        if $i4 == 0 goto label19;

        virtualinvoke r1.<android.content.res.Resources$Theme: void rebase()>();

     label19:
        $i5 = virtualinvoke r2.<android.content.res.Resources$Theme: int getChangingConfigurations()>();

        $i6 = $i5 & i0;

        if $i6 == 0 goto label20;

        virtualinvoke r2.<android.content.res.Resources$Theme: void rebase()>();

     label20:
        exitmonitor r3;

     label21:
        r44 = virtualinvoke r0.<android.app.ActivityThread: java.util.ArrayList collectComponentCallbacks(boolean,android.content.res.Configuration)>(0, r43);

        staticinvoke <android.app.ActivityThread: void freeTextLayoutCachesIfNeeded(int)>(i0);

        if r44 == null goto label26;

        i1 = virtualinvoke r44.<java.util.ArrayList: int size()>();

        i12 = 0;

     label22:
        if i12 >= i1 goto label26;

        $r10 = virtualinvoke r44.<java.util.ArrayList: java.lang.Object get(int)>(i12);

        r45 = (android.content.ComponentCallbacks2) $r10;

        $z2 = r45 instanceof android.app.Activity;

        if $z2 == 0 goto label23;

        r46 = (android.app.Activity) r45;

        $r18 = r0.<android.app.ActivityThread: android.util.ArrayMap mActivities>;

        $r19 = virtualinvoke r46.<android.app.Activity: android.os.IBinder getActivityToken()>();

        $r20 = virtualinvoke $r18.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r19);

        $r21 = (android.app.ActivityThread$ActivityClientRecord) $r20;

        specialinvoke r0.<android.app.ActivityThread: void performConfigurationChangedForActivity(android.app.ActivityThread$ActivityClientRecord,android.content.res.Configuration)>($r21, r43);

        goto label25;

     label23:
        if z10 != 0 goto label24;

        specialinvoke r0.<android.app.ActivityThread: void performConfigurationChanged(android.content.ComponentCallbacks2,android.content.res.Configuration)>(r45, r43);

        goto label25;

     label24:
        $z3 = <android.os.Build: boolean IS_DEBUGGABLE>;

        if $z3 == 0 goto label25;

        $z4 = r45 instanceof android.inputmethodservice.InputMethodService;

        if $z4 == 0 goto label25;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("performConfigurationChanged didn\'t callback to IME , configDiff=");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mConfiguration=");

        $r15 = r0.<android.app.ActivityThread: android.content.res.Configuration mConfiguration>;

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15);

        $r17 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityThread", $r17);

     label25:
        i12 = i12 + 1;

        goto label22;

     label26:
        return;

     label27:
        $r30 := @caughtexception;

     label28:
        exitmonitor r3;

     label29:
        throw $r30;

        catch java.lang.Throwable from label01 to label02 with label27;
        catch java.lang.Throwable from label03 to label04 with label27;
        catch java.lang.Throwable from label04 to label05 with label27;
        catch java.lang.Throwable from label06 to label07 with label27;
        catch java.lang.Throwable from label07 to label08 with label27;
        catch java.lang.Throwable from label09 to label10 with label27;
        catch java.lang.Throwable from label12 to label13 with label27;
        catch java.lang.Throwable from label13 to label14 with label27;
        catch java.lang.Throwable from label15 to label16 with label27;
        catch java.lang.Throwable from label16 to label17 with label27;
        catch java.lang.Throwable from label18 to label19 with label27;
        catch java.lang.Throwable from label19 to label20 with label27;
        catch java.lang.Throwable from label20 to label21 with label27;
        catch java.lang.Throwable from label28 to label29 with label27;
    }

    private void handleCreateBackupAgent(android.app.ActivityThread$CreateBackupAgentData)
    {
        android.app.ActivityThread r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.String r1, $r5, $r16, $r17, $r19, $r22, $r24, r32, r33;
        android.app.backup.BackupAgent r2, r36;
        android.content.pm.IPackageManager $r3;
        android.content.pm.ApplicationInfo $r4, $r7, $r9, $r10, $r15;
        android.content.pm.PackageInfo $r6;
        android.content.res.CompatibilityInfo $r8;
        java.lang.ClassLoader $r11;
        java.lang.Class $r12;
        java.lang.Object $r13, $r35;
        android.os.UserHandle $r14;
        java.lang.Exception $r18, $r20;
        java.lang.StringBuilder $r21, r30, r41;
        java.lang.RuntimeException $r23, $r26, $r28;
        android.os.RemoteException $r25, $r27;
        android.app.ActivityThread$CreateBackupAgentData r29;
        android.app.LoadedApk r31;
        android.util.ArrayMap r34;
        android.os.IBinder r37, r39;
        android.app.ContextImpl r38;
        android.app.IActivityManager $r42;

        r0 := @this: android.app.ActivityThread;

        r29 := @parameter0: android.app.ActivityThread$CreateBackupAgentData;

     label01:
        $r3 = staticinvoke <android.app.ActivityThread: android.content.pm.IPackageManager getPackageManager()>();

        $r4 = r29.<android.app.ActivityThread$CreateBackupAgentData: android.content.pm.ApplicationInfo appInfo>;

        $r5 = $r4.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $i2 = staticinvoke <android.os.UserHandle: int myUserId()>();

        $r6 = interfaceinvoke $r3.<android.content.pm.IPackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int,int)>($r5, 0, $i2);

        $r7 = $r6.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        i0 = $r7.<android.content.pm.ApplicationInfo: int uid>;

        i1 = staticinvoke <android.os.Process: int myUid()>();

     label02:
        if i0 == i1 goto label05;

     label03:
        r30 = new java.lang.StringBuilder;

        specialinvoke r30.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Asked to instantiate non-matching package ");

        $r15 = r29.<android.app.ActivityThread$CreateBackupAgentData: android.content.pm.ApplicationInfo appInfo>;

        $r16 = $r15.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r17 = virtualinvoke r30.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityThread", $r17);

     label04:
        return;

     label05:
        virtualinvoke r0.<android.app.ActivityThread: void unscheduleGcIdler()>();

        $r9 = r29.<android.app.ActivityThread$CreateBackupAgentData: android.content.pm.ApplicationInfo appInfo>;

        $r8 = r29.<android.app.ActivityThread$CreateBackupAgentData: android.content.res.CompatibilityInfo compatInfo>;

        r31 = virtualinvoke r0.<android.app.ActivityThread: android.app.LoadedApk getPackageInfoNoCheck(android.content.pm.ApplicationInfo,android.content.res.CompatibilityInfo)>($r9, $r8);

        r1 = r31.<android.app.LoadedApk: java.lang.String mPackageName>;

        if r1 != null goto label06;

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("ActivityThread", "Asked to create backup agent for nonexistent package");

        return;

     label06:
        $r10 = r29.<android.app.ActivityThread$CreateBackupAgentData: android.content.pm.ApplicationInfo appInfo>;

        r32 = $r10.<android.content.pm.ApplicationInfo: java.lang.String backupAgentName>;

        r33 = r32;

        if r32 != null goto label08;

        $i4 = r29.<android.app.ActivityThread$CreateBackupAgentData: int backupMode>;

        if $i4 == 1 goto label07;

        r33 = r32;

        $i5 = r29.<android.app.ActivityThread$CreateBackupAgentData: int backupMode>;

        if $i5 != 3 goto label08;

     label07:
        r33 = "android.app.backup.FullBackupAgent";

     label08:
        $i8 = r29.<android.app.ActivityThread$CreateBackupAgentData: int userId>;

        r34 = specialinvoke r0.<android.app.ActivityThread: android.util.ArrayMap getBackupAgentsForUser(int)>($i8);

        $r35 = virtualinvoke r34.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r36 = (android.app.backup.BackupAgent) $r35;

     label09:
        if r36 == null goto label12;

     label10:
        r37 = virtualinvoke r36.<android.app.backup.BackupAgent: android.os.IBinder onBind()>();

     label11:
        goto label31;

     label12:
        r37 = null;

     label13:
        $r11 = virtualinvoke r31.<android.app.LoadedApk: java.lang.ClassLoader getClassLoader()>();

        $r12 = virtualinvoke $r11.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(r33);

        $r13 = virtualinvoke $r12.<java.lang.Class: java.lang.Object newInstance()>();

        r2 = (android.app.backup.BackupAgent) $r13;

     label14:
        r37 = null;

     label15:
        r38 = staticinvoke <android.app.ContextImpl: android.app.ContextImpl createAppContext(android.app.ActivityThread,android.app.LoadedApk)>(r0, r31);

     label16:
        r37 = null;

     label17:
        virtualinvoke r38.<android.app.ContextImpl: void setOuterContext(android.content.Context)>(r2);

     label18:
        r37 = null;

     label19:
        virtualinvoke r2.<android.app.backup.BackupAgent: void attach(android.content.Context)>(r38);

     label20:
        r37 = null;

     label21:
        $i3 = r29.<android.app.ActivityThread$CreateBackupAgentData: int userId>;

        $r14 = staticinvoke <android.os.UserHandle: android.os.UserHandle of(int)>($i3);

        virtualinvoke r2.<android.app.backup.BackupAgent: void onCreate(android.os.UserHandle)>($r14);

     label22:
        r37 = null;

     label23:
        r39 = virtualinvoke r2.<android.app.backup.BackupAgent: android.os.IBinder onBind()>();

     label24:
        r37 = r39;

     label25:
        virtualinvoke r34.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

     label26:
        r37 = r39;

        goto label31;

     label27:
        $r18 := @caughtexception;

     label28:
        r41 = new java.lang.StringBuilder;

        specialinvoke r41.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Agent threw during creation: ");

        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18);

        $r19 = virtualinvoke r41.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ActivityThread", $r19);

        $i6 = r29.<android.app.ActivityThread$CreateBackupAgentData: int backupMode>;

        if $i6 == 2 goto label31;

        $i7 = r29.<android.app.ActivityThread$CreateBackupAgentData: int backupMode>;

        if $i7 != 3 goto label30;

     label29:
        goto label31;

     label30:
        throw $r18;

     label31:
        $r42 = staticinvoke <android.app.ActivityManager: android.app.IActivityManager getService()>();

        $i9 = r29.<android.app.ActivityThread$CreateBackupAgentData: int userId>;

        interfaceinvoke $r42.<android.app.IActivityManager: void backupAgentCreated(java.lang.String,android.os.IBinder,int)>(r1, r37, $i9);

     label32:
        return;

     label33:
        $r27 := @caughtexception;

     label34:
        $r28 = virtualinvoke $r27.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r28;

     label35:
        $r20 := @caughtexception;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to create BackupAgent ");

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r33);

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r22 = virtualinvoke $r20.<java.lang.Exception: java.lang.String toString()>();

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r23 = new java.lang.RuntimeException;

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r23.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r24, $r20);

        throw $r23;

     label36:
        $r25 := @caughtexception;

        $r26 = virtualinvoke $r25.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r26;

        catch android.os.RemoteException from label01 to label02 with label36;
        catch android.os.RemoteException from label03 to label04 with label36;
        catch java.lang.Exception from label08 to label09 with label35;
        catch java.lang.Exception from label10 to label11 with label35;
        catch java.lang.Exception from label13 to label14 with label27;
        catch java.lang.Exception from label15 to label16 with label27;
        catch java.lang.Exception from label17 to label18 with label27;
        catch java.lang.Exception from label19 to label20 with label27;
        catch java.lang.Exception from label21 to label22 with label27;
        catch java.lang.Exception from label23 to label24 with label27;
        catch java.lang.Exception from label25 to label26 with label27;
        catch java.lang.Exception from label28 to label29 with label35;
        catch java.lang.Exception from label30 to label31 with label35;
        catch android.os.RemoteException from label31 to label32 with label33;
        catch java.lang.Exception from label31 to label32 with label35;
        catch java.lang.Exception from label34 to label35 with label35;
    }

    private void handleCreateService(android.app.ActivityThread$CreateServiceData)
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$CreateServiceData r1;
        android.app.LoadedApk r2;
        android.app.ContextImpl r3;
        java.lang.ClassLoader r4;
        android.content.pm.ServiceInfo $r5, $r10, $r19, $r30;
        android.content.res.CompatibilityInfo $r6;
        android.content.pm.ApplicationInfo $r7;
        android.app.Instrumentation $r8, $r28;
        android.app.AppComponentFactory $r9;
        android.content.Intent $r11;
        java.lang.String $r12, $r20, $r31, $r32, $r34;
        android.content.res.Resources $r13, $r14;
        java.util.List $r15;
        android.content.res.loader.ResourcesLoader[] $r16, $r18;
        java.lang.Object[] $r17;
        android.os.IBinder $r21, $r23, $r26;
        android.app.IActivityManager $r22, $r25;
        android.util.ArrayMap $r24;
        java.lang.Exception $r27;
        boolean $z0;
        java.lang.StringBuilder $r29;
        java.lang.RuntimeException $r33, $r36;
        android.os.RemoteException $r35;
        android.app.Service r37, r39;
        android.app.Application r38;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.app.ActivityThread$CreateServiceData;

        virtualinvoke r0.<android.app.ActivityThread: void unscheduleGcIdler()>();

        $r5 = r1.<android.app.ActivityThread$CreateServiceData: android.content.pm.ServiceInfo info>;

        $r7 = $r5.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r6 = r1.<android.app.ActivityThread$CreateServiceData: android.content.res.CompatibilityInfo compatInfo>;

        r2 = virtualinvoke r0.<android.app.ActivityThread: android.app.LoadedApk getPackageInfoNoCheck(android.content.pm.ApplicationInfo,android.content.res.CompatibilityInfo)>($r7, $r6);

        r37 = null;

     label01:
        r3 = staticinvoke <android.app.ContextImpl: android.app.ContextImpl createAppContext(android.app.ActivityThread,android.app.LoadedApk)>(r0, r2);

     label02:
        r37 = null;

     label03:
        $r8 = r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        r38 = virtualinvoke r2.<android.app.LoadedApk: android.app.Application makeApplication(boolean,android.app.Instrumentation)>(0, $r8);

     label04:
        r37 = null;

     label05:
        r4 = virtualinvoke r2.<android.app.LoadedApk: java.lang.ClassLoader getClassLoader()>();

     label06:
        r37 = null;

     label07:
        $r9 = virtualinvoke r2.<android.app.LoadedApk: android.app.AppComponentFactory getAppFactory()>();

        $r10 = r1.<android.app.ActivityThread$CreateServiceData: android.content.pm.ServiceInfo info>;

        $r12 = $r10.<android.content.pm.ServiceInfo: java.lang.String name>;

        $r11 = r1.<android.app.ActivityThread$CreateServiceData: android.content.Intent intent>;

        r39 = virtualinvoke $r9.<android.app.AppComponentFactory: android.app.Service instantiateService(java.lang.ClassLoader,java.lang.String,android.content.Intent)>(r4, $r12, $r11);

     label08:
        r37 = r39;

     label09:
        $r13 = virtualinvoke r3.<android.app.ContextImpl: android.content.res.Resources getResources()>();

        $r14 = virtualinvoke r38.<android.app.Application: android.content.res.Resources getResources()>();

        $r15 = virtualinvoke $r14.<android.content.res.Resources: java.util.List getLoaders()>();

        $r16 = newarray (android.content.res.loader.ResourcesLoader)[0];

        $r17 = interfaceinvoke $r15.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r16);

        $r18 = (android.content.res.loader.ResourcesLoader[]) $r17;

        virtualinvoke $r13.<android.content.res.Resources: void addLoaders(android.content.res.loader.ResourcesLoader[])>($r18);

     label10:
        r37 = r39;

     label11:
        virtualinvoke r3.<android.app.ContextImpl: void setOuterContext(android.content.Context)>(r39);

     label12:
        r37 = r39;

     label13:
        $r19 = r1.<android.app.ActivityThread$CreateServiceData: android.content.pm.ServiceInfo info>;

        $r20 = $r19.<android.content.pm.ServiceInfo: java.lang.String name>;

        $r21 = r1.<android.app.ActivityThread$CreateServiceData: android.os.IBinder token>;

        $r22 = staticinvoke <android.app.ActivityManager: android.app.IActivityManager getService()>();

        virtualinvoke r39.<android.app.Service: void attach(android.content.Context,android.app.ActivityThread,java.lang.String,android.os.IBinder,android.app.Application,java.lang.Object)>(r3, r0, $r20, $r21, r38, $r22);

     label14:
        r37 = r39;

     label15:
        virtualinvoke r39.<android.app.Service: void onCreate()>();

     label16:
        r37 = r39;

     label17:
        $r24 = r0.<android.app.ActivityThread: android.util.ArrayMap mServices>;

        $r23 = r1.<android.app.ActivityThread$CreateServiceData: android.os.IBinder token>;

        virtualinvoke $r24.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r23, r39);

     label18:
        r37 = r39;

     label19:
        $r25 = staticinvoke <android.app.ActivityManager: android.app.IActivityManager getService()>();

        $r26 = r1.<android.app.ActivityThread$CreateServiceData: android.os.IBinder token>;

        interfaceinvoke $r25.<android.app.IActivityManager: void serviceDoneExecuting(android.os.IBinder,int,int,int)>($r26, 0, 0, 0);

     label20:
        goto label24;

     label21:
        $r35 := @caughtexception;

        r37 = r39;

     label22:
        $r36 = virtualinvoke $r35.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r36;

     label23:
        $r27 := @caughtexception;

        $r28 = r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        $z0 = virtualinvoke $r28.<android.app.Instrumentation: boolean onException(java.lang.Object,java.lang.Throwable)>(r37, $r27);

        if $z0 == 0 goto label25;

     label24:
        return;

     label25:
        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to create service ");

        $r30 = r1.<android.app.ActivityThread$CreateServiceData: android.content.pm.ServiceInfo info>;

        $r31 = $r30.<android.content.pm.ServiceInfo: java.lang.String name>;

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r32 = virtualinvoke $r27.<java.lang.Exception: java.lang.String toString()>();

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        $r33 = new java.lang.RuntimeException;

        $r34 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r33.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r34, $r27);

        throw $r33;

        catch java.lang.Exception from label01 to label02 with label23;
        catch java.lang.Exception from label03 to label04 with label23;
        catch java.lang.Exception from label05 to label06 with label23;
        catch java.lang.Exception from label07 to label08 with label23;
        catch java.lang.Exception from label09 to label10 with label23;
        catch java.lang.Exception from label11 to label12 with label23;
        catch java.lang.Exception from label13 to label14 with label23;
        catch java.lang.Exception from label15 to label16 with label23;
        catch java.lang.Exception from label17 to label18 with label23;
        catch android.os.RemoteException from label19 to label20 with label21;
        catch java.lang.Exception from label19 to label20 with label23;
        catch java.lang.Exception from label22 to label23 with label23;
    }

    private void handleDestroyBackupAgent(android.app.ActivityThread$CreateBackupAgentData)
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$CreateBackupAgentData r1;
        android.util.ArrayMap r2;
        android.content.res.CompatibilityInfo $r4;
        android.content.pm.ApplicationInfo $r5, $r16;
        android.app.LoadedApk $r6;
        int $i0;
        java.lang.Object $r7;
        java.lang.StringBuilder $r8, $r14;
        java.lang.String $r11, $r18, r19;
        java.lang.Exception $r13;
        android.app.backup.BackupAgent r20;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.app.ActivityThread$CreateBackupAgentData;

        $r5 = r1.<android.app.ActivityThread$CreateBackupAgentData: android.content.pm.ApplicationInfo appInfo>;

        $r4 = r1.<android.app.ActivityThread$CreateBackupAgentData: android.content.res.CompatibilityInfo compatInfo>;

        $r6 = virtualinvoke r0.<android.app.ActivityThread: android.app.LoadedApk getPackageInfoNoCheck(android.content.pm.ApplicationInfo,android.content.res.CompatibilityInfo)>($r5, $r4);

        r19 = $r6.<android.app.LoadedApk: java.lang.String mPackageName>;

        $i0 = r1.<android.app.ActivityThread$CreateBackupAgentData: int userId>;

        r2 = specialinvoke r0.<android.app.ActivityThread: android.util.ArrayMap getBackupAgentsForUser(int)>($i0);

        $r7 = virtualinvoke r2.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r19);

        r20 = (android.app.backup.BackupAgent) $r7;

        if r20 == null goto label5;

     label1:
        virtualinvoke r20.<android.app.backup.BackupAgent: void onDestroy()>();

     label2:
        goto label4;

     label3:
        $r13 := @caughtexception;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception thrown in onDestroy by backup agent of ");

        $r16 = r1.<android.app.ActivityThread$CreateBackupAgentData: android.content.pm.ApplicationInfo appInfo>;

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        $r18 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityThread", $r18);

        virtualinvoke $r13.<java.lang.Exception: void printStackTrace()>();

     label4:
        virtualinvoke r2.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r19);

        goto label6;

     label5:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempt to destroy unknown backup agent ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityThread", $r11);

     label6:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private void handleDumpActivity(android.app.ActivityThread$DumpComponentInfo)
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$DumpComponentInfo r1;
        android.os.StrictMode$ThreadPolicy r2;
        android.app.ActivityThread$ActivityClientRecord r3;
        com.android.internal.util.FastPrintWriter r4;
        android.os.IBinder $r5;
        android.util.ArrayMap $r6;
        java.lang.Object $r7;
        android.app.Activity $r8, $r12;
        android.os.ParcelFileDescriptor $r9, $r11, $r17, $r19;
        java.io.FileDescriptor $r10, $r14;
        java.lang.String $r13;
        java.lang.String[] $r15;
        java.lang.Throwable $r16;
        java.io.FileOutputStream r18;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.app.ActivityThread$DumpComponentInfo;

        r2 = staticinvoke <android.os.StrictMode: android.os.StrictMode$ThreadPolicy allowThreadDiskWrites()>();

     label1:
        $r6 = r0.<android.app.ActivityThread: android.util.ArrayMap mActivities>;

        $r5 = r1.<android.app.ActivityThread$DumpComponentInfo: android.os.IBinder token>;

        $r7 = virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r5);

        r3 = (android.app.ActivityThread$ActivityClientRecord) $r7;

     label2:
        if r3 == null goto label4;

     label3:
        $r8 = r3.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        if $r8 == null goto label4;

        r4 = new com.android.internal.util.FastPrintWriter;

        r18 = new java.io.FileOutputStream;

        $r9 = r1.<android.app.ActivityThread$DumpComponentInfo: android.os.ParcelFileDescriptor fd>;

        $r10 = virtualinvoke $r9.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        specialinvoke r18.<java.io.FileOutputStream: void <init>(java.io.FileDescriptor)>($r10);

        specialinvoke r4.<com.android.internal.util.FastPrintWriter: void <init>(java.io.OutputStream)>(r18);

        $r12 = r3.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r13 = r1.<android.app.ActivityThread$DumpComponentInfo: java.lang.String prefix>;

        $r11 = r1.<android.app.ActivityThread$DumpComponentInfo: android.os.ParcelFileDescriptor fd>;

        $r14 = virtualinvoke $r11.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        $r15 = r1.<android.app.ActivityThread$DumpComponentInfo: java.lang.String[] args>;

        virtualinvoke $r12.<android.app.Activity: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>($r13, $r14, r4, $r15);

        virtualinvoke r4.<java.io.PrintWriter: void flush()>();

     label4:
        $r19 = r1.<android.app.ActivityThread$DumpComponentInfo: android.os.ParcelFileDescriptor fd>;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>($r19);

        staticinvoke <android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>(r2);

        return;

     label5:
        $r16 := @caughtexception;

        $r17 = r1.<android.app.ActivityThread$DumpComponentInfo: android.os.ParcelFileDescriptor fd>;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>($r17);

        staticinvoke <android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>(r2);

        throw $r16;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    static void handleDumpHeap(android.app.ActivityThread$DumpHeapData)
    {
        boolean $z0, $z1, $z2, $z3;
        java.io.FileDescriptor $r0, $r2, $r4;
        android.os.RemoteCallback $r1, $r26;
        java.lang.String $r3, $r12, $r15, $r25;
        android.os.RemoteException $r5;
        java.lang.RuntimeException $r6, $r7;
        java.lang.Throwable $r8, $r9, $r16;
        java.lang.StringBuilder $r10;
        android.app.ActivityThread$DumpHeapData r17;
        android.os.ParcelFileDescriptor r18;
        android.app.IActivityManager $r24;

        r17 := @parameter0: android.app.ActivityThread$DumpHeapData;

        $z0 = r17.<android.app.ActivityThread$DumpHeapData: boolean runGc>;

        if $z0 == 0 goto label01;

        staticinvoke <java.lang.System: void gc()>();

        staticinvoke <java.lang.System: void runFinalization()>();

        staticinvoke <java.lang.System: void gc()>();

     label01:
        r18 = r17.<android.app.ActivityThread$DumpHeapData: android.os.ParcelFileDescriptor fd>;

     label02:
        $z1 = r17.<android.app.ActivityThread$DumpHeapData: boolean managed>;

        if $z1 == 0 goto label04;

        $r3 = r17.<android.app.ActivityThread$DumpHeapData: java.lang.String path>;

        $r4 = virtualinvoke r18.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        staticinvoke <android.os.Debug: void dumpHprofData(java.lang.String,java.io.FileDescriptor)>($r3, $r4);

     label03:
        goto label07;

     label04:
        $z2 = r17.<android.app.ActivityThread$DumpHeapData: boolean mallocInfo>;

        if $z2 == 0 goto label06;

        $r2 = virtualinvoke r18.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        staticinvoke <android.os.Debug: void dumpNativeMallocInfo(java.io.FileDescriptor)>($r2);

     label05:
        goto label07;

     label06:
        $r0 = virtualinvoke r18.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        staticinvoke <android.os.Debug: void dumpNativeHeap(java.io.FileDescriptor)>($r0);

     label07:
        if r18 == null goto label19;

     label08:
        virtualinvoke r18.<android.os.ParcelFileDescriptor: void close()>();

     label09:
        goto label19;

     label10:
        $r8 := @caughtexception;

        if r18 == null goto label15;

     label11:
        virtualinvoke r18.<android.os.ParcelFileDescriptor: void close()>();

     label12:
        goto label15;

     label13:
        $r16 := @caughtexception;

     label14:
        virtualinvoke $r8.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r16);

     label15:
        throw $r8;

     label16:
        $r7 := @caughtexception;

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityThread", "Heap dumper threw a runtime exception", $r7);

        goto label19;

     label17:
        $r9 := @caughtexception;

        $z3 = r17.<android.app.ActivityThread$DumpHeapData: boolean managed>;

        if $z3 == 0 goto label18;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Managed heap dump failed on path ");

        $r12 = r17.<android.app.ActivityThread$DumpHeapData: java.lang.String path>;

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -- can the process access this path?");

        $r15 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityThread", $r15, $r9);

        goto label19;

     label18:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityThread", "Failed to dump heap", $r9);

     label19:
        $r24 = staticinvoke <android.app.ActivityManager: android.app.IActivityManager getService()>();

        $r25 = r17.<android.app.ActivityThread$DumpHeapData: java.lang.String path>;

        interfaceinvoke $r24.<android.app.IActivityManager: void dumpHeapFinished(java.lang.String)>($r25);

     label20:
        $r26 = r17.<android.app.ActivityThread$DumpHeapData: android.os.RemoteCallback finishCallback>;

        if $r26 == null goto label21;

        $r1 = r17.<android.app.ActivityThread$DumpHeapData: android.os.RemoteCallback finishCallback>;

        virtualinvoke $r1.<android.os.RemoteCallback: void sendResult(android.os.Bundle)>(null);

     label21:
        return;

     label22:
        $r5 := @caughtexception;

        $r6 = virtualinvoke $r5.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r6;

        catch java.io.IOException from label01 to label02 with label17;
        catch java.lang.RuntimeException from label01 to label02 with label16;
        catch java.lang.Throwable from label02 to label03 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.io.IOException from label08 to label09 with label17;
        catch java.lang.RuntimeException from label08 to label09 with label16;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.io.IOException from label14 to label15 with label17;
        catch java.lang.RuntimeException from label14 to label15 with label16;
        catch java.io.IOException from label15 to label16 with label17;
        catch java.lang.RuntimeException from label15 to label16 with label16;
        catch android.os.RemoteException from label19 to label20 with label22;
    }

    private void handleDumpProvider(android.app.ActivityThread$DumpComponentInfo)
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$DumpComponentInfo r1;
        android.os.StrictMode$ThreadPolicy r2;
        android.app.ActivityThread$ProviderClientRecord r3;
        com.android.internal.util.FastPrintWriter r4;
        android.os.IBinder $r5;
        android.util.ArrayMap $r6;
        java.lang.Object $r7;
        android.content.ContentProvider $r8, $r12;
        android.os.ParcelFileDescriptor $r9, $r11, $r16, $r18;
        java.io.FileDescriptor $r10, $r13;
        java.lang.String[] $r14;
        java.lang.Throwable $r15;
        java.io.FileOutputStream r17;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.app.ActivityThread$DumpComponentInfo;

        r2 = staticinvoke <android.os.StrictMode: android.os.StrictMode$ThreadPolicy allowThreadDiskWrites()>();

     label1:
        $r6 = r0.<android.app.ActivityThread: android.util.ArrayMap mLocalProviders>;

        $r5 = r1.<android.app.ActivityThread$DumpComponentInfo: android.os.IBinder token>;

        $r7 = virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r5);

        r3 = (android.app.ActivityThread$ProviderClientRecord) $r7;

     label2:
        if r3 == null goto label4;

     label3:
        $r8 = r3.<android.app.ActivityThread$ProviderClientRecord: android.content.ContentProvider mLocalProvider>;

        if $r8 == null goto label4;

        r4 = new com.android.internal.util.FastPrintWriter;

        r17 = new java.io.FileOutputStream;

        $r9 = r1.<android.app.ActivityThread$DumpComponentInfo: android.os.ParcelFileDescriptor fd>;

        $r10 = virtualinvoke $r9.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        specialinvoke r17.<java.io.FileOutputStream: void <init>(java.io.FileDescriptor)>($r10);

        specialinvoke r4.<com.android.internal.util.FastPrintWriter: void <init>(java.io.OutputStream)>(r17);

        $r12 = r3.<android.app.ActivityThread$ProviderClientRecord: android.content.ContentProvider mLocalProvider>;

        $r11 = r1.<android.app.ActivityThread$DumpComponentInfo: android.os.ParcelFileDescriptor fd>;

        $r13 = virtualinvoke $r11.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        $r14 = r1.<android.app.ActivityThread$DumpComponentInfo: java.lang.String[] args>;

        virtualinvoke $r12.<android.content.ContentProvider: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>($r13, r4, $r14);

        virtualinvoke r4.<java.io.PrintWriter: void flush()>();

     label4:
        $r18 = r1.<android.app.ActivityThread$DumpComponentInfo: android.os.ParcelFileDescriptor fd>;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>($r18);

        staticinvoke <android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>(r2);

        return;

     label5:
        $r15 := @caughtexception;

        $r16 = r1.<android.app.ActivityThread$DumpComponentInfo: android.os.ParcelFileDescriptor fd>;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>($r16);

        staticinvoke <android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>(r2);

        throw $r15;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    private void handleDumpService(android.app.ActivityThread$DumpComponentInfo)
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$DumpComponentInfo r1;
        android.os.StrictMode$ThreadPolicy r2;
        android.app.Service r3;
        com.android.internal.util.FastPrintWriter r4;
        android.os.IBinder $r5;
        android.util.ArrayMap $r6;
        java.lang.Object $r7;
        android.os.ParcelFileDescriptor $r8, $r9, $r11, $r15;
        java.io.FileDescriptor $r10, $r12;
        java.lang.String[] $r13;
        java.lang.Throwable $r14;
        java.io.FileOutputStream r16;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.app.ActivityThread$DumpComponentInfo;

        r2 = staticinvoke <android.os.StrictMode: android.os.StrictMode$ThreadPolicy allowThreadDiskWrites()>();

     label1:
        $r6 = r0.<android.app.ActivityThread: android.util.ArrayMap mServices>;

        $r5 = r1.<android.app.ActivityThread$DumpComponentInfo: android.os.IBinder token>;

        $r7 = virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r5);

        r3 = (android.app.Service) $r7;

     label2:
        if r3 == null goto label4;

     label3:
        r4 = new com.android.internal.util.FastPrintWriter;

        r16 = new java.io.FileOutputStream;

        $r9 = r1.<android.app.ActivityThread$DumpComponentInfo: android.os.ParcelFileDescriptor fd>;

        $r10 = virtualinvoke $r9.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        specialinvoke r16.<java.io.FileOutputStream: void <init>(java.io.FileDescriptor)>($r10);

        specialinvoke r4.<com.android.internal.util.FastPrintWriter: void <init>(java.io.OutputStream)>(r16);

        $r11 = r1.<android.app.ActivityThread$DumpComponentInfo: android.os.ParcelFileDescriptor fd>;

        $r12 = virtualinvoke $r11.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        $r13 = r1.<android.app.ActivityThread$DumpComponentInfo: java.lang.String[] args>;

        virtualinvoke r3.<android.app.Service: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>($r12, r4, $r13);

        virtualinvoke r4.<java.io.PrintWriter: void flush()>();

     label4:
        $r8 = r1.<android.app.ActivityThread$DumpComponentInfo: android.os.ParcelFileDescriptor fd>;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>($r8);

        staticinvoke <android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>(r2);

        return;

     label5:
        $r14 := @caughtexception;

        $r15 = r1.<android.app.ActivityThread$DumpComponentInfo: android.os.ParcelFileDescriptor fd>;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>($r15);

        staticinvoke <android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>(r2);

        throw $r14;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    private void handleEnterAnimationComplete(android.os.IBinder)
    {
        android.app.ActivityThread r0;
        android.util.ArrayMap $r1;
        java.lang.Object $r2;
        android.app.Activity $r3;
        android.os.IBinder r4;
        android.app.ActivityThread$ActivityClientRecord r5;

        r0 := @this: android.app.ActivityThread;

        r4 := @parameter0: android.os.IBinder;

        $r1 = r0.<android.app.ActivityThread: android.util.ArrayMap mActivities>;

        $r2 = virtualinvoke $r1.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r4);

        r5 = (android.app.ActivityThread$ActivityClientRecord) $r2;

        if r5 == null goto label1;

        $r3 = r5.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        virtualinvoke $r3.<android.app.Activity: void dispatchEnterAnimationComplete()>();

     label1:
        return;
    }

    private void handleFixedRotationAdjustments(android.os.IBinder, android.view.DisplayAdjustments$FixedRotationAdjustments, android.content.res.Configuration)
    {
        android.app.ActivityThread r0;
        android.app.ResourcesManager $r1;
        boolean $z0, $z2;
        java.util.ArrayList $r2, $r4, $r5, $r9, r23, r27;
        int $i0, $i1;
        java.lang.Object $r6, $r8, $r13, r22;
        android.util.Pair $r7, $r10;
        android.util.ArrayMap $r12;
        android.os.IBinder r15;
        android.view.DisplayAdjustments$FixedRotationAdjustments r16;
        android.content.res.Configuration r17, r20;
        android.content.res.Configuration[] r18;
        android.app._$$Lambda$ActivityThread$vMpYFfxK9ah9pM_OyK4G3WmpR2s r19, r26;
        android.app.ActivityThread$ActivityClientRecord r21;
        android.app.Application $r24;
        android.content.res.Resources $r25;
        android.app._$$Lambda$ActivityThread$1aRbI_i_3uur4gKmyI8A0r9vN6o r28;
        java.util.function.Consumer r29;

        r0 := @this: android.app.ActivityThread;

        r15 := @parameter0: android.os.IBinder;

        r16 := @parameter1: android.view.DisplayAdjustments$FixedRotationAdjustments;

        r17 := @parameter2: android.content.res.Configuration;

        if r16 == null goto label01;

        r18 = newarray (android.content.res.Configuration)[1];

        r26 = new android.app._$$Lambda$ActivityThread$vMpYFfxK9ah9pM_OyK4G3WmpR2s;

        specialinvoke r26.<android.app._$$Lambda$ActivityThread$vMpYFfxK9ah9pM_OyK4G3WmpR2s: void <init>(android.view.DisplayAdjustments$FixedRotationAdjustments,android.content.res.Configuration[])>(r16, r18);

        r19 = r26;

        goto label02;

     label01:
        r18 = null;

        r19 = null;

     label02:
        $r1 = r0.<android.app.ActivityThread: android.app.ResourcesManager mResourcesManager>;

        $z0 = virtualinvoke $r1.<android.app.ResourcesManager: boolean overrideTokenDisplayAdjustments(android.os.IBinder,java.util.function.Consumer)>(r15, r19);

        if $z0 != 0 goto label03;

        return;

     label03:
        r20 = r17;

        if r17 != null goto label05;

        $r12 = r0.<android.app.ActivityThread: android.util.ArrayMap mActivities>;

        $r13 = virtualinvoke $r12.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r15);

        r21 = (android.app.ActivityThread$ActivityClientRecord) $r13;

        if r21 != null goto label04;

        return;

     label04:
        r20 = r21.<android.app.ActivityThread$ActivityClientRecord: android.content.res.Configuration overrideConfig>;

     label05:
        if r18 == null goto label06;

        r18[0] = r20;

     label06:
        $r2 = r0.<android.app.ActivityThread: java.util.ArrayList mActiveRotationAdjustments>;

        if $r2 != null goto label07;

        r27 = new java.util.ArrayList;

        specialinvoke r27.<java.util.ArrayList: void <init>(int)>(2);

        r0.<android.app.ActivityThread: java.util.ArrayList mActiveRotationAdjustments> = r27;

     label07:
        if r19 == null goto label08;

        $r9 = r0.<android.app.ActivityThread: java.util.ArrayList mActiveRotationAdjustments>;

        $r10 = staticinvoke <android.util.Pair: android.util.Pair create(java.lang.Object,java.lang.Object)>(r15, r19);

        virtualinvoke $r9.<java.util.ArrayList: boolean add(java.lang.Object)>($r10);

        r22 = r19;

        goto label10;

     label08:
        $r4 = r0.<android.app.ActivityThread: java.util.ArrayList mActiveRotationAdjustments>;

        r28 = new android.app._$$Lambda$ActivityThread$1aRbI_i_3uur4gKmyI8A0r9vN6o;

        specialinvoke r28.<android.app._$$Lambda$ActivityThread$1aRbI_i_3uur4gKmyI8A0r9vN6o: void <init>(android.os.IBinder)>(r15);

        virtualinvoke $r4.<java.util.ArrayList: boolean removeIf(java.util.function.Predicate)>(r28);

        $r5 = r0.<android.app.ActivityThread: java.util.ArrayList mActiveRotationAdjustments>;

        $z2 = virtualinvoke $r5.<java.util.ArrayList: boolean isEmpty()>();

        if $z2 == 0 goto label09;

        r22 = null;

        goto label10;

     label09:
        r23 = r0.<android.app.ActivityThread: java.util.ArrayList mActiveRotationAdjustments>;

        $i0 = virtualinvoke r23.<java.util.ArrayList: int size()>();

        $i1 = $i0 - 1;

        $r6 = virtualinvoke r23.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r7 = (android.util.Pair) $r6;

        $r8 = $r7.<android.util.Pair: java.lang.Object second>;

        r22 = (java.util.function.Consumer) $r8;

     label10:
        $r24 = r0.<android.app.ActivityThread: android.app.Application mInitialApplication>;

        $r25 = virtualinvoke $r24.<android.app.Application: android.content.res.Resources getResources()>();

        r29 = (java.util.function.Consumer) r22;

        virtualinvoke $r25.<android.content.res.Resources: void overrideDisplayAdjustments(java.util.function.Consumer)>(r29);

        return;
    }

    private void handleLocalVoiceInteractionStarted(android.os.IBinder, com.android.internal.app.IVoiceInteractor)
    {
        android.app.ActivityThread r0;
        com.android.internal.app.IVoiceInteractor r1;
        android.util.ArrayMap $r2;
        java.lang.Object $r3;
        android.app.Activity $r4, $r5, $r6;
        android.os.IBinder r7;
        android.app.ActivityThread$ActivityClientRecord r8;

        r0 := @this: android.app.ActivityThread;

        r7 := @parameter0: android.os.IBinder;

        r1 := @parameter1: com.android.internal.app.IVoiceInteractor;

        $r2 = r0.<android.app.ActivityThread: android.util.ArrayMap mActivities>;

        $r3 = virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r7);

        r8 = (android.app.ActivityThread$ActivityClientRecord) $r3;

        if r8 == null goto label2;

        r8.<android.app.ActivityThread$ActivityClientRecord: com.android.internal.app.IVoiceInteractor voiceInteractor> = r1;

        $r4 = r8.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        virtualinvoke $r4.<android.app.Activity: void setVoiceInteractor(com.android.internal.app.IVoiceInteractor)>(r1);

        if r1 != null goto label1;

        $r6 = r8.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        virtualinvoke $r6.<android.app.Activity: void onLocalVoiceInteractionStopped()>();

        goto label2;

     label1:
        $r5 = r8.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        virtualinvoke $r5.<android.app.Activity: void onLocalVoiceInteractionStarted()>();

     label2:
        return;
    }

    private void handlePerformDirectAction(android.os.IBinder, java.lang.String, android.os.Bundle, android.os.CancellationSignal, android.os.RemoteCallback)
    {
        android.app.ActivityThread r0;
        java.lang.String r1;
        android.os.CancellationSignal r2;
        android.os.RemoteCallback r3;
        android.app.ActivityThread$ActivityClientRecord r4;
        int i0;
        android.util.ArrayMap $r5;
        java.lang.Object $r6;
        android.app._$$Lambda$ZsFzoG2loyqNOR2cNbo_thrNK5c $r8;
        android.os.IBinder r9;
        android.os.Bundle r10, r11;
        android.app.Activity r12;

        r0 := @this: android.app.ActivityThread;

        r9 := @parameter0: android.os.IBinder;

        r1 := @parameter1: java.lang.String;

        r10 := @parameter2: android.os.Bundle;

        r2 := @parameter3: android.os.CancellationSignal;

        r3 := @parameter4: android.os.RemoteCallback;

        $r5 = r0.<android.app.ActivityThread: android.util.ArrayMap mActivities>;

        $r6 = virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r9);

        r4 = (android.app.ActivityThread$ActivityClientRecord) $r6;

        if r4 == null goto label5;

        i0 = virtualinvoke r4.<android.app.ActivityThread$ActivityClientRecord: int getLifecycleState()>();

        if i0 < 2 goto label4;

        if i0 < 5 goto label1;

        goto label4;

     label1:
        if r10 == null goto label2;

        r11 = r10;

        goto label3;

     label2:
        r11 = <android.os.Bundle: android.os.Bundle EMPTY>;

     label3:
        r12 = r4.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r3);

        $r8 = new android.app._$$Lambda$ZsFzoG2loyqNOR2cNbo_thrNK5c;

        specialinvoke $r8.<android.app._$$Lambda$ZsFzoG2loyqNOR2cNbo_thrNK5c: void <init>(android.os.RemoteCallback)>(r3);

        virtualinvoke r12.<android.app.Activity: void onPerformDirectAction(java.lang.String,android.os.Bundle,android.os.CancellationSignal,java.util.function.Consumer)>(r1, r11, r2, $r8);

        goto label6;

     label4:
        virtualinvoke r3.<android.os.RemoteCallback: void sendResult(android.os.Bundle)>(null);

        return;

     label5:
        virtualinvoke r3.<android.os.RemoteCallback: void sendResult(android.os.Bundle)>(null);

     label6:
        return;
    }

    private void handleReceiver(android.app.ActivityThread$ReceiverData)
    {
        android.app.ActivityThread r0;
        java.lang.String r1, $r13, $r19, $r27, $r34, $r37, $r45, $r47;
        android.app.LoadedApk r2;
        android.app.IActivityManager r3;
        boolean z0;
        android.content.Intent $r4, $r14, $r15, $r18, $r20, $r23;
        android.content.ComponentName $r5;
        android.content.pm.ActivityInfo $r6, $r12, $r17, $r26;
        android.content.res.CompatibilityInfo $r7;
        android.content.pm.ApplicationInfo $r8;
        android.app.Instrumentation $r9, $r41;
        android.app.Application $r10;
        android.content.Context $r11, $r22, $r28;
        android.app.AppComponentFactory $r16;
        java.lang.ThreadLocal $r21, $r24, $r39;
        android.content.BroadcastReceiver$PendingResult $r25;
        java.lang.Exception $r29, $r40;
        java.lang.StringBuilder $r30, r56;
        java.lang.RuntimeException $r36, r55;
        java.lang.Throwable $r38;
        android.app.ActivityThread$ReceiverData r48;
        android.app.ContextImpl r49, r50;
        java.lang.ClassLoader r51;
        android.content.BroadcastReceiver r52;

        r0 := @this: android.app.ActivityThread;

        r48 := @parameter0: android.app.ActivityThread$ReceiverData;

        virtualinvoke r0.<android.app.ActivityThread: void unscheduleGcIdler()>();

        $r4 = r48.<android.app.ActivityThread$ReceiverData: android.content.Intent intent>;

        $r5 = virtualinvoke $r4.<android.content.Intent: android.content.ComponentName getComponent()>();

        r1 = virtualinvoke $r5.<android.content.ComponentName: java.lang.String getClassName()>();

        $r6 = r48.<android.app.ActivityThread$ReceiverData: android.content.pm.ActivityInfo info>;

        $r8 = $r6.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r7 = r48.<android.app.ActivityThread$ReceiverData: android.content.res.CompatibilityInfo compatInfo>;

        r2 = virtualinvoke r0.<android.app.ActivityThread: android.app.LoadedApk getPackageInfoNoCheck(android.content.pm.ApplicationInfo,android.content.res.CompatibilityInfo)>($r8, $r7);

        r3 = staticinvoke <android.app.ActivityManager: android.app.IActivityManager getService()>();

     label01:
        $r9 = r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        $r10 = virtualinvoke r2.<android.app.LoadedApk: android.app.Application makeApplication(boolean,android.app.Instrumentation)>(0, $r9);

        $r11 = virtualinvoke $r10.<android.app.Application: android.content.Context getBaseContext()>();

        r49 = (android.app.ContextImpl) $r11;

     label02:
        r50 = r49;

     label03:
        $r12 = r48.<android.app.ActivityThread$ReceiverData: android.content.pm.ActivityInfo info>;

        $r13 = $r12.<android.content.pm.ActivityInfo: java.lang.String splitName>;

        if $r13 == null goto label04;

        $r26 = r48.<android.app.ActivityThread$ReceiverData: android.content.pm.ActivityInfo info>;

        $r27 = $r26.<android.content.pm.ActivityInfo: java.lang.String splitName>;

        $r28 = virtualinvoke r49.<android.app.ContextImpl: android.content.Context createContextForSplit(java.lang.String)>($r27);

        r50 = (android.app.ContextImpl) $r28;

     label04:
        r51 = virtualinvoke r50.<android.app.ContextImpl: java.lang.ClassLoader getClassLoader()>();

        $r14 = r48.<android.app.ActivityThread$ReceiverData: android.content.Intent intent>;

        virtualinvoke $r14.<android.content.Intent: void setExtrasClassLoader(java.lang.ClassLoader)>(r51);

        $r15 = r48.<android.app.ActivityThread$ReceiverData: android.content.Intent intent>;

        virtualinvoke $r15.<android.content.Intent: void prepareToEnterProcess()>();

        virtualinvoke r48.<android.app.ActivityThread$ReceiverData: void setExtrasClassLoader(java.lang.ClassLoader)>(r51);

        $r16 = virtualinvoke r2.<android.app.LoadedApk: android.app.AppComponentFactory getAppFactory()>();

        $r17 = r48.<android.app.ActivityThread$ReceiverData: android.content.pm.ActivityInfo info>;

        $r19 = $r17.<android.content.pm.ActivityInfo: java.lang.String name>;

        $r18 = r48.<android.app.ActivityThread$ReceiverData: android.content.Intent intent>;

        r52 = virtualinvoke $r16.<android.app.AppComponentFactory: android.content.BroadcastReceiver instantiateReceiver(java.lang.ClassLoader,java.lang.String,android.content.Intent)>(r51, $r19, $r18);

     label05:
        $r21 = <android.app.ActivityThread: java.lang.ThreadLocal sCurrentBroadcastIntent>;

        $r20 = r48.<android.app.ActivityThread$ReceiverData: android.content.Intent intent>;

        virtualinvoke $r21.<java.lang.ThreadLocal: void set(java.lang.Object)>($r20);

        virtualinvoke r52.<android.content.BroadcastReceiver: void setPendingResult(android.content.BroadcastReceiver$PendingResult)>(r48);

        $r22 = virtualinvoke r50.<android.app.ContextImpl: android.content.Context getReceiverRestrictedContext()>();

        $r23 = r48.<android.app.ActivityThread$ReceiverData: android.content.Intent intent>;

        virtualinvoke r52.<android.content.BroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>($r22, $r23);

     label06:
        goto label11;

     label07:
        $r38 := @caughtexception;

        goto label14;

     label08:
        $r40 := @caughtexception;

     label09:
        virtualinvoke r48.<android.app.ActivityThread$ReceiverData: void sendFinished(android.app.IActivityManager)>(r3);

        $r41 = r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        z0 = virtualinvoke $r41.<android.app.Instrumentation: boolean onException(java.lang.Object,java.lang.Throwable)>(r52, $r40);

     label10:
        if z0 == 0 goto label13;

     label11:
        $r24 = <android.app.ActivityThread: java.lang.ThreadLocal sCurrentBroadcastIntent>;

        virtualinvoke $r24.<java.lang.ThreadLocal: void set(java.lang.Object)>(null);

        $r25 = virtualinvoke r52.<android.content.BroadcastReceiver: android.content.BroadcastReceiver$PendingResult getPendingResult()>();

        if $r25 == null goto label12;

        virtualinvoke r48.<android.app.ActivityThread$ReceiverData: void finish()>();

     label12:
        return;

     label13:
        r55 = new java.lang.RuntimeException;

        r56 = new java.lang.StringBuilder;

        specialinvoke r56.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to start receiver ");

        virtualinvoke r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r45 = virtualinvoke $r40.<java.lang.Exception: java.lang.String toString()>();

        virtualinvoke r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45);

        $r47 = virtualinvoke r56.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r55.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r47, $r40);

        throw r55;

     label14:
        $r39 = <android.app.ActivityThread: java.lang.ThreadLocal sCurrentBroadcastIntent>;

        virtualinvoke $r39.<java.lang.ThreadLocal: void set(java.lang.Object)>(null);

        throw $r38;

     label15:
        $r29 := @caughtexception;

        virtualinvoke r48.<android.app.ActivityThread$ReceiverData: void sendFinished(android.app.IActivityManager)>(r3);

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to instantiate receiver ");

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r34 = virtualinvoke $r29.<java.lang.Exception: java.lang.String toString()>();

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        $r36 = new java.lang.RuntimeException;

        $r37 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r36.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r37, $r29);

        throw $r36;

        catch java.lang.Exception from label01 to label02 with label15;
        catch java.lang.Exception from label03 to label04 with label15;
        catch java.lang.Exception from label04 to label05 with label15;
        catch java.lang.Exception from label05 to label06 with label08;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label09 to label10 with label07;
        catch java.lang.Throwable from label13 to label14 with label07;
    }

    private void handleRelaunchActivityInner(android.app.ActivityThread$ActivityClientRecord, int, java.util.List, java.util.List, android.app.servertransaction.PendingTransactionActions, boolean, android.content.res.Configuration, java.lang.String)
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$ActivityClientRecord r1;
        int i0;
        java.util.List r2, r3, $r11, $r12, $r13, $r14;
        android.app.servertransaction.PendingTransactionActions r4;
        boolean z0, $z1, $z2;
        android.content.res.Configuration r5;
        java.lang.String r6;
        android.content.Intent r7;
        android.app.Activity $r8;
        android.os.IBinder $r9;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.app.ActivityThread$ActivityClientRecord;

        i0 := @parameter1: int;

        r2 := @parameter2: java.util.List;

        r3 := @parameter3: java.util.List;

        r4 := @parameter4: android.app.servertransaction.PendingTransactionActions;

        z0 := @parameter5: boolean;

        r5 := @parameter6: android.content.res.Configuration;

        r6 := @parameter7: java.lang.String;

        $r8 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        r7 = $r8.<android.app.Activity: android.content.Intent mIntent>;

        $z1 = r1.<android.app.ActivityThread$ActivityClientRecord: boolean paused>;

        if $z1 != 0 goto label1;

        specialinvoke r0.<android.app.ActivityThread: android.os.Bundle performPauseActivity(android.app.ActivityThread$ActivityClientRecord,boolean,java.lang.String,android.app.servertransaction.PendingTransactionActions)>(r1, 0, r6, null);

     label1:
        $z2 = r1.<android.app.ActivityThread$ActivityClientRecord: boolean stopped>;

        if $z2 != 0 goto label2;

        specialinvoke r0.<android.app.ActivityThread: void callActivityOnStop(android.app.ActivityThread$ActivityClientRecord,boolean,java.lang.String)>(r1, 1, r6);

     label2:
        $r9 = r1.<android.app.ActivityThread$ActivityClientRecord: android.os.IBinder token>;

        virtualinvoke r0.<android.app.ActivityThread: void handleDestroyActivity(android.os.IBinder,boolean,int,boolean,java.lang.String)>($r9, 0, i0, 1, r6);

        r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity> = null;

        r1.<android.app.ActivityThread$ActivityClientRecord: android.view.Window window> = null;

        r1.<android.app.ActivityThread$ActivityClientRecord: boolean hideForNow> = 0;

        r1.<android.app.ActivityThread$ActivityClientRecord: android.app.ActivityThread$ActivityClientRecord nextIdle> = null;

        if r2 == null goto label4;

        $r13 = r1.<android.app.ActivityThread$ActivityClientRecord: java.util.List pendingResults>;

        if $r13 != null goto label3;

        r1.<android.app.ActivityThread$ActivityClientRecord: java.util.List pendingResults> = r2;

        goto label4;

     label3:
        $r14 = r1.<android.app.ActivityThread$ActivityClientRecord: java.util.List pendingResults>;

        interfaceinvoke $r14.<java.util.List: boolean addAll(java.util.Collection)>(r2);

     label4:
        if r3 == null goto label6;

        $r11 = r1.<android.app.ActivityThread$ActivityClientRecord: java.util.List pendingIntents>;

        if $r11 != null goto label5;

        r1.<android.app.ActivityThread$ActivityClientRecord: java.util.List pendingIntents> = r3;

        goto label6;

     label5:
        $r12 = r1.<android.app.ActivityThread$ActivityClientRecord: java.util.List pendingIntents>;

        interfaceinvoke $r12.<java.util.List: boolean addAll(java.util.Collection)>(r3);

     label6:
        r1.<android.app.ActivityThread$ActivityClientRecord: boolean startsNotResumed> = z0;

        r1.<android.app.ActivityThread$ActivityClientRecord: android.content.res.Configuration overrideConfig> = r5;

        virtualinvoke r0.<android.app.ActivityThread: android.app.Activity handleLaunchActivity(android.app.ActivityThread$ActivityClientRecord,android.app.servertransaction.PendingTransactionActions,android.content.Intent)>(r1, r4, r7);

        return;
    }

    private void handleRelaunchActivityLocally(android.os.IBinder)
    {
        android.app.ActivityThread r0;
        int i0;
        android.app.servertransaction.ActivityRelaunchItem r1;
        android.util.ArrayMap $r2;
        java.lang.Object $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r7;
        android.content.res.Configuration $r8, $r10, r15;
        android.util.MergedConfiguration $r9;
        boolean $z0;
        android.os.IBinder $r11, r13;
        android.app.ActivityThread$ApplicationThread $r12;
        android.app.ActivityThread$ActivityClientRecord r14;
        android.app.servertransaction.ActivityLifecycleItem r16;
        android.app.servertransaction.ClientTransaction r17;

        r0 := @this: android.app.ActivityThread;

        r13 := @parameter0: android.os.IBinder;

        $r2 = r0.<android.app.ActivityThread: android.util.ArrayMap mActivities>;

        $r3 = virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r13);

        r14 = (android.app.ActivityThread$ActivityClientRecord) $r3;

        if r14 != null goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityThread", "Activity to relaunch no longer exists");

        return;

     label1:
        i0 = virtualinvoke r14.<android.app.ActivityThread$ActivityClientRecord: int getLifecycleState()>();

        if i0 < 3 goto label5;

        if i0 <= 5 goto label2;

        goto label5;

     label2:
        $r8 = r14.<android.app.ActivityThread$ActivityClientRecord: android.content.res.Configuration createdConfig>;

        if $r8 == null goto label3;

        r15 = r14.<android.app.ActivityThread$ActivityClientRecord: android.content.res.Configuration createdConfig>;

        goto label4;

     label3:
        r15 = r0.<android.app.ActivityThread: android.content.res.Configuration mConfiguration>;

     label4:
        $r9 = new android.util.MergedConfiguration;

        $r10 = r14.<android.app.ActivityThread$ActivityClientRecord: android.content.res.Configuration overrideConfig>;

        specialinvoke $r9.<android.util.MergedConfiguration: void <init>(android.content.res.Configuration,android.content.res.Configuration)>(r15, $r10);

        $z0 = r14.<android.app.ActivityThread$ActivityClientRecord: boolean mPreserveWindow>;

        r1 = staticinvoke <android.app.servertransaction.ActivityRelaunchItem: android.app.servertransaction.ActivityRelaunchItem obtain(java.util.List,java.util.List,int,android.util.MergedConfiguration,boolean)>(null, null, 0, $r9, $z0);

        r16 = staticinvoke <android.app.servertransaction.TransactionExecutorHelper: android.app.servertransaction.ActivityLifecycleItem getLifecycleRequestForCurrentState(android.app.ActivityThread$ActivityClientRecord)>(r14);

        $r12 = r0.<android.app.ActivityThread: android.app.ActivityThread$ApplicationThread mAppThread>;

        $r11 = r14.<android.app.ActivityThread$ActivityClientRecord: android.os.IBinder token>;

        r17 = staticinvoke <android.app.servertransaction.ClientTransaction: android.app.servertransaction.ClientTransaction obtain(android.app.IApplicationThread,android.os.IBinder)>($r12, $r11);

        virtualinvoke r17.<android.app.servertransaction.ClientTransaction: void addCallback(android.app.servertransaction.ClientTransactionItem)>(r1);

        virtualinvoke r17.<android.app.servertransaction.ClientTransaction: void setLifecycleStateRequest(android.app.servertransaction.ActivityLifecycleItem)>(r16);

        virtualinvoke r0.<android.app.ActivityThread: void executeTransaction(android.app.servertransaction.ClientTransaction)>(r17);

        return;

     label5:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Activity state must be in [ON_RESUME..ON_STOP] in order to be relaunched,current state is ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityThread", $r7);

        return;
    }

    private void handleRequestDirectActions(android.os.IBinder, com.android.internal.app.IVoiceInteractor, android.os.CancellationSignal, android.os.RemoteCallback)
    {
        android.app.ActivityThread r0;
        android.os.CancellationSignal r1;
        android.os.RemoteCallback r2;
        android.app.ActivityThread$ActivityClientRecord r3;
        int i0;
        android.util.ArrayMap $r4;
        java.lang.Object $r5;
        java.lang.StringBuilder $r6, $r28;
        java.lang.String $r11, $r31;
        android.app.Activity $r12, $r14, $r17, $r18, $r19, $r21, $r23, $r35;
        android.app.VoiceInteractor $r13, $r15, $r16, $r22, $r24;
        android.os.Looper $r20;
        com.android.internal.app.IVoiceInteractor $r25, r33;
        android.os.IBinder $r26, $r27, r32;
        android.app._$$Lambda$ActivityThread$kkRvsxdnIt_I5ztBPFaOyHFgais $r36;

        r0 := @this: android.app.ActivityThread;

        r32 := @parameter0: android.os.IBinder;

        r33 := @parameter1: com.android.internal.app.IVoiceInteractor;

        r1 := @parameter2: android.os.CancellationSignal;

        r2 := @parameter3: android.os.RemoteCallback;

        $r4 = r0.<android.app.ActivityThread: android.util.ArrayMap mActivities>;

        $r5 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r32);

        r3 = (android.app.ActivityThread$ActivityClientRecord) $r5;

        if r3 != null goto label1;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("requestDirectActions(): no activity for ");

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r32);

        $r31 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityThread", $r31);

        virtualinvoke r2.<android.os.RemoteCallback: void sendResult(android.os.Bundle)>(null);

        return;

     label1:
        i0 = virtualinvoke r3.<android.app.ActivityThread$ActivityClientRecord: int getLifecycleState()>();

        if i0 < 2 goto label6;

        if i0 < 5 goto label2;

        goto label6;

     label2:
        $r12 = r3.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r13 = $r12.<android.app.Activity: android.app.VoiceInteractor mVoiceInteractor>;

        if $r13 == null goto label3;

        $r23 = r3.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r24 = $r23.<android.app.Activity: android.app.VoiceInteractor mVoiceInteractor>;

        $r25 = $r24.<android.app.VoiceInteractor: com.android.internal.app.IVoiceInteractor mInteractor>;

        $r26 = interfaceinvoke $r25.<com.android.internal.app.IVoiceInteractor: android.os.IBinder asBinder()>();

        $r27 = interfaceinvoke r33.<com.android.internal.app.IVoiceInteractor: android.os.IBinder asBinder()>();

        if $r26 == $r27 goto label5;

     label3:
        $r14 = r3.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r15 = $r14.<android.app.Activity: android.app.VoiceInteractor mVoiceInteractor>;

        if $r15 == null goto label4;

        $r21 = r3.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r22 = $r21.<android.app.Activity: android.app.VoiceInteractor mVoiceInteractor>;

        virtualinvoke $r22.<android.app.VoiceInteractor: void destroy()>();

     label4:
        $r17 = r3.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r16 = new android.app.VoiceInteractor;

        $r18 = r3.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r19 = r3.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r20 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        specialinvoke $r16.<android.app.VoiceInteractor: void <init>(com.android.internal.app.IVoiceInteractor,android.content.Context,android.app.Activity,android.os.Looper)>(r33, $r18, $r19, $r20);

        $r17.<android.app.Activity: android.app.VoiceInteractor mVoiceInteractor> = $r16;

     label5:
        $r35 = r3.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r36 = new android.app._$$Lambda$ActivityThread$kkRvsxdnIt_I5ztBPFaOyHFgais;

        specialinvoke $r36.<android.app._$$Lambda$ActivityThread$kkRvsxdnIt_I5ztBPFaOyHFgais: void <init>(android.app.ActivityThread$ActivityClientRecord,android.os.RemoteCallback)>(r3, r2);

        virtualinvoke $r35.<android.app.Activity: void onGetDirectActions(android.os.CancellationSignal,java.util.function.Consumer)>(r1, $r36);

        return;

     label6:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("requestDirectActions(");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("): wrong lifecycle: ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityThread", $r11);

        virtualinvoke r2.<android.os.RemoteCallback: void sendResult(android.os.Bundle)>(null);

        return;
    }

    private void handleRunIsolatedEntryPoint(java.lang.String, java.lang.String[])
    {
        android.app.ActivityThread r0;
        java.lang.String[] r1;
        java.lang.Class $r2;
        java.lang.Class[] $r3;
        java.lang.reflect.Method $r4;
        java.lang.Object[] $r5;
        java.lang.Throwable $r7;
        android.util.AndroidRuntimeException $r8;
        java.lang.String r9;

        r0 := @this: android.app.ActivityThread;

        r9 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String[];

     label1:
        $r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r9);

        $r3 = newarray (java.lang.Class)[1];

        $r3[0] = class "[Ljava/lang/String;";

        $r4 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("main", $r3);

        $r5 = newarray (java.lang.Object)[1];

        $r5[0] = r1;

        virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r5);

     label2:
        staticinvoke <java.lang.System: void exit(int)>(0);

        return;

     label3:
        $r7 := @caughtexception;

        $r8 = new android.util.AndroidRuntimeException;

        specialinvoke $r8.<android.util.AndroidRuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("runIsolatedEntryPoint failed", $r7);

        throw $r8;

        catch java.lang.ReflectiveOperationException from label1 to label2 with label3;
    }

    private void handleServiceArgs(android.app.ActivityThread$ServiceArgsData)
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$ServiceArgsData r1;
        android.app.Service r2;
        android.os.IBinder $r4, $r10;
        android.util.ArrayMap $r5;
        java.lang.Object $r6;
        android.content.Intent $r7, $r8, $r11, $r12, $r14, $r23;
        boolean $z0, $z1;
        android.app.IActivityManager $r9;
        int $i0, $i1, $i2, i3;
        java.lang.ClassLoader $r13;
        android.os.RemoteException $r15;
        java.lang.RuntimeException $r16, $r28;
        java.lang.Exception $r17;
        android.app.Instrumentation $r18;
        java.lang.StringBuilder $r19;
        java.lang.String $r26, $r29;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.app.ActivityThread$ServiceArgsData;

        $r5 = r0.<android.app.ActivityThread: android.util.ArrayMap mServices>;

        $r4 = r1.<android.app.ActivityThread$ServiceArgsData: android.os.IBinder token>;

        $r6 = virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r4);

        r2 = (android.app.Service) $r6;

        if r2 == null goto label13;

     label01:
        $r7 = r1.<android.app.ActivityThread$ServiceArgsData: android.content.Intent args>;

        if $r7 == null goto label02;

        $r12 = r1.<android.app.ActivityThread$ServiceArgsData: android.content.Intent args>;

        $r13 = virtualinvoke r2.<android.app.Service: java.lang.ClassLoader getClassLoader()>();

        virtualinvoke $r12.<android.content.Intent: void setExtrasClassLoader(java.lang.ClassLoader)>($r13);

        $r14 = r1.<android.app.ActivityThread$ServiceArgsData: android.content.Intent args>;

        virtualinvoke $r14.<android.content.Intent: void prepareToEnterProcess()>();

     label02:
        $z0 = r1.<android.app.ActivityThread$ServiceArgsData: boolean taskRemoved>;

        if $z0 != 0 goto label04;

        $r11 = r1.<android.app.ActivityThread$ServiceArgsData: android.content.Intent args>;

        $i2 = r1.<android.app.ActivityThread$ServiceArgsData: int flags>;

        $i1 = r1.<android.app.ActivityThread$ServiceArgsData: int startId>;

        i3 = virtualinvoke r2.<android.app.Service: int onStartCommand(android.content.Intent,int,int)>($r11, $i2, $i1);

     label03:
        goto label06;

     label04:
        $r8 = r1.<android.app.ActivityThread$ServiceArgsData: android.content.Intent args>;

        virtualinvoke r2.<android.app.Service: void onTaskRemoved(android.content.Intent)>($r8);

     label05:
        i3 = 1000;

     label06:
        staticinvoke <android.app.QueuedWork: void waitToFinish()>();

     label07:
        $r9 = staticinvoke <android.app.ActivityManager: android.app.IActivityManager getService()>();

        $r10 = r1.<android.app.ActivityThread$ServiceArgsData: android.os.IBinder token>;

        $i0 = r1.<android.app.ActivityThread$ServiceArgsData: int startId>;

        interfaceinvoke $r9.<android.app.IActivityManager: void serviceDoneExecuting(android.os.IBinder,int,int,int)>($r10, 1, $i0, i3);

     label08:
        goto label13;

     label09:
        $r15 := @caughtexception;

     label10:
        $r16 = virtualinvoke $r15.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r16;

     label11:
        $r17 := @caughtexception;

        $r18 = r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        $z1 = virtualinvoke $r18.<android.app.Instrumentation: boolean onException(java.lang.Object,java.lang.Throwable)>(r2, $r17);

        if $z1 == 0 goto label12;

        goto label13;

     label12:
        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to start service ");

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with ");

        $r23 = r1.<android.app.ActivityThread$ServiceArgsData: android.content.Intent args>;

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r23);

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r26 = virtualinvoke $r17.<java.lang.Exception: java.lang.String toString()>();

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r28 = new java.lang.RuntimeException;

        $r29 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r28.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r29, $r17);

        throw $r28;

     label13:
        return;

        catch java.lang.Exception from label01 to label02 with label11;
        catch java.lang.Exception from label02 to label03 with label11;
        catch java.lang.Exception from label04 to label05 with label11;
        catch java.lang.Exception from label06 to label07 with label11;
        catch android.os.RemoteException from label07 to label08 with label09;
        catch java.lang.Exception from label07 to label08 with label11;
        catch java.lang.Exception from label10 to label11 with label11;
    }

    private void handleSetCoreSettings(android.os.Bundle)
    {
        android.app.ActivityThread r0;
        android.app.ResourcesManager r1;
        java.lang.Throwable $r2;
        android.os.Bundle r3;

        r0 := @this: android.app.ActivityThread;

        r3 := @parameter0: android.os.Bundle;

        r1 = r0.<android.app.ActivityThread: android.app.ResourcesManager mResourcesManager>;

        entermonitor r1;

     label1:
        r0.<android.app.ActivityThread: android.os.Bundle mCoreSettings> = r3;

        exitmonitor r1;

     label2:
        specialinvoke r0.<android.app.ActivityThread: void onCoreSettingsChange()>();

        return;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private void handleStartBinderTracking()
    {
        android.app.ActivityThread r0;

        r0 := @this: android.app.ActivityThread;

        staticinvoke <android.os.Binder: void enableTracing()>();

        return;
    }

    private void handleStopBinderTrackingAndDump(android.os.ParcelFileDescriptor)
    {
        android.app.ActivityThread r0;
        android.os.ParcelFileDescriptor r1;
        android.os.TransactionTracker $r3, $r4, $r6;
        java.lang.Throwable $r5;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.os.ParcelFileDescriptor;

     label1:
        staticinvoke <android.os.Binder: void disableTracing()>();

        $r3 = staticinvoke <android.os.Binder: android.os.TransactionTracker getTransactionTracker()>();

        virtualinvoke $r3.<android.os.TransactionTracker: void writeTracesToFile(android.os.ParcelFileDescriptor)>(r1);

     label2:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r1);

        $r4 = staticinvoke <android.os.Binder: android.os.TransactionTracker getTransactionTracker()>();

        virtualinvoke $r4.<android.os.TransactionTracker: void clearTraces()>();

        return;

     label3:
        $r5 := @caughtexception;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r1);

        $r6 = staticinvoke <android.os.Binder: android.os.TransactionTracker getTransactionTracker()>();

        virtualinvoke $r6.<android.os.TransactionTracker: void clearTraces()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private void handleStopService(android.os.IBinder)
    {
        android.app.ActivityThread r0;
        android.content.Context r1;
        android.util.ArrayMap $r2;
        java.lang.Object $r3;
        java.lang.StringBuilder $r4, $r15, $r23;
        java.lang.String $r8, $r19, $r22, $r26, r29;
        boolean $z0, $z1;
        android.app.IActivityManager $r9;
        android.app.ContextImpl $r10;
        android.os.RemoteException $r11;
        java.lang.RuntimeException $r12, $r21;
        java.lang.Exception $r13;
        android.app.Instrumentation $r14;
        android.os.IBinder r27;
        android.app.Service r28;

        r0 := @this: android.app.ActivityThread;

        r27 := @parameter0: android.os.IBinder;

        $r2 = r0.<android.app.ActivityThread: android.util.ArrayMap mServices>;

        $r3 = virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r27);

        r28 = (android.app.Service) $r3;

        if r28 == null goto label10;

     label01:
        virtualinvoke r28.<android.app.Service: void onDestroy()>();

        virtualinvoke r28.<android.app.Service: void detachAndCleanUp()>();

        r1 = virtualinvoke r28.<android.app.Service: android.content.Context getBaseContext()>();

        $z0 = r1 instanceof android.app.ContextImpl;

        if $z0 == 0 goto label02;

        r29 = virtualinvoke r28.<android.app.Service: java.lang.String getClassName()>();

        $r10 = (android.app.ContextImpl) r1;

        virtualinvoke $r10.<android.app.ContextImpl: void scheduleFinalCleanup(java.lang.String,java.lang.String)>(r29, "Service");

     label02:
        staticinvoke <android.app.QueuedWork: void waitToFinish()>();

     label03:
        $r9 = staticinvoke <android.app.ActivityManager: android.app.IActivityManager getService()>();

        interfaceinvoke $r9.<android.app.IActivityManager: void serviceDoneExecuting(android.os.IBinder,int,int,int)>(r27, 2, 0, 0);

     label04:
        goto label08;

     label05:
        $r11 := @caughtexception;

     label06:
        $r12 = virtualinvoke $r11.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r12;

     label07:
        $r13 := @caughtexception;

        $r14 = r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        $z1 = virtualinvoke $r14.<android.app.Instrumentation: boolean onException(java.lang.Object,java.lang.Throwable)>(r28, $r13);

        if $z1 == 0 goto label09;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handleStopService: exception for ");

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r27);

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityThread", $r26, $r13);

     label08:
        goto label11;

     label09:
        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to stop service ");

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r28);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r19 = virtualinvoke $r13.<java.lang.Exception: java.lang.String toString()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = new java.lang.RuntimeException;

        $r22 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r21.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r22, $r13);

        throw $r21;

     label10:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handleStopService: token=");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r27);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not found.");

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityThread", $r8);

     label11:
        return;

        catch java.lang.Exception from label01 to label02 with label07;
        catch java.lang.Exception from label02 to label03 with label07;
        catch android.os.RemoteException from label03 to label04 with label05;
        catch java.lang.Exception from label03 to label04 with label07;
        catch java.lang.Exception from label06 to label07 with label07;
    }

    private void handleTrimMemory(int)
    {
        android.app.ActivityThread r0;
        int i0, i1, $i2, $i3, i4;
        android.view.WindowManagerGlobal $r1;
        java.lang.Object $r2, $r5;
        android.content.ComponentCallbacks2 $r3;
        java.util.ArrayList $r4, r8;
        boolean $z0;
        android.app.PropertyInvalidatedCache $r6;
        java.util.Iterator r7;

        r0 := @this: android.app.ActivityThread;

        i0 := @parameter0: int;

        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(64L, "trimMemory");

        if i0 < 80 goto label2;

        $r4 = staticinvoke <android.app.PropertyInvalidatedCache: java.util.ArrayList getActiveCaches()>();

        r7 = virtualinvoke $r4.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (android.app.PropertyInvalidatedCache) $r5;

        virtualinvoke $r6.<android.app.PropertyInvalidatedCache: void clear()>();

        goto label1;

     label2:
        r8 = virtualinvoke r0.<android.app.ActivityThread: java.util.ArrayList collectComponentCallbacks(boolean,android.content.res.Configuration)>(1, null);

        i1 = virtualinvoke r8.<java.util.ArrayList: int size()>();

        i4 = 0;

     label3:
        if i4 >= i1 goto label4;

        $r2 = virtualinvoke r8.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        $r3 = (android.content.ComponentCallbacks2) $r2;

        interfaceinvoke $r3.<android.content.ComponentCallbacks2: void onTrimMemory(int)>(i0);

        i4 = i4 + 1;

        goto label3;

     label4:
        $r1 = staticinvoke <android.view.WindowManagerGlobal: android.view.WindowManagerGlobal getInstance()>();

        virtualinvoke $r1.<android.view.WindowManagerGlobal: void trimMemory(int)>(i0);

        staticinvoke <android.os.Trace: void traceEnd(long)>(64L);

        $i2 = staticinvoke <android.os.SystemProperties: int getInt(java.lang.String,int)>("debug.am.run_gc_trim_level", 2147483647);

        if $i2 > i0 goto label5;

        virtualinvoke r0.<android.app.ActivityThread: void unscheduleGcIdler()>();

        virtualinvoke r0.<android.app.ActivityThread: void doGcIfNeeded(java.lang.String)>("tm");

     label5:
        $i3 = staticinvoke <android.os.SystemProperties: int getInt(java.lang.String,int)>("debug.am.run_mallopt_trim_level", 2147483647);

        if $i3 > i0 goto label6;

        virtualinvoke r0.<android.app.ActivityThread: void unschedulePurgeIdler()>();

        specialinvoke r0.<android.app.ActivityThread: void purgePendingResources()>();

     label6:
        return;
    }

    private void handleUnbindService(android.app.ActivityThread$BindServiceData)
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$BindServiceData r1;
        android.app.Service r2;
        boolean z0, $z1;
        android.os.IBinder $r4, $r12, $r15;
        android.util.ArrayMap $r5;
        java.lang.Object $r6;
        android.content.Intent $r7, $r9, $r10, $r14, $r22;
        java.lang.ClassLoader $r8;
        android.app.IActivityManager $r11, $r13;
        java.lang.Exception $r16;
        android.app.Instrumentation $r17;
        java.lang.StringBuilder $r18;
        java.lang.String $r25, $r28;
        java.lang.RuntimeException $r27, $r30;
        android.os.RemoteException $r29;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.app.ActivityThread$BindServiceData;

        $r5 = r0.<android.app.ActivityThread: android.util.ArrayMap mServices>;

        $r4 = r1.<android.app.ActivityThread$BindServiceData: android.os.IBinder token>;

        $r6 = virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r4);

        r2 = (android.app.Service) $r6;

        if r2 == null goto label11;

     label01:
        $r7 = r1.<android.app.ActivityThread$BindServiceData: android.content.Intent intent>;

        $r8 = virtualinvoke r2.<android.app.Service: java.lang.ClassLoader getClassLoader()>();

        virtualinvoke $r7.<android.content.Intent: void setExtrasClassLoader(java.lang.ClassLoader)>($r8);

        $r9 = r1.<android.app.ActivityThread$BindServiceData: android.content.Intent intent>;

        virtualinvoke $r9.<android.content.Intent: void prepareToEnterProcess()>();

        $r10 = r1.<android.app.ActivityThread$BindServiceData: android.content.Intent intent>;

        z0 = virtualinvoke r2.<android.app.Service: boolean onUnbind(android.content.Intent)>($r10);

     label02:
        if z0 == 0 goto label05;

     label03:
        $r13 = staticinvoke <android.app.ActivityManager: android.app.IActivityManager getService()>();

        $r15 = r1.<android.app.ActivityThread$BindServiceData: android.os.IBinder token>;

        $r14 = r1.<android.app.ActivityThread$BindServiceData: android.content.Intent intent>;

        interfaceinvoke $r13.<android.app.IActivityManager: void unbindFinished(android.os.IBinder,android.content.Intent,boolean)>($r15, $r14, z0);

     label04:
        goto label06;

     label05:
        $r11 = staticinvoke <android.app.ActivityManager: android.app.IActivityManager getService()>();

        $r12 = r1.<android.app.ActivityThread$BindServiceData: android.os.IBinder token>;

        interfaceinvoke $r11.<android.app.IActivityManager: void serviceDoneExecuting(android.os.IBinder,int,int,int)>($r12, 0, 0, 0);

     label06:
        goto label11;

     label07:
        $r29 := @caughtexception;

     label08:
        $r30 = virtualinvoke $r29.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r30;

     label09:
        $r16 := @caughtexception;

        $r17 = r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        $z1 = virtualinvoke $r17.<android.app.Instrumentation: boolean onException(java.lang.Object,java.lang.Throwable)>(r2, $r16);

        if $z1 == 0 goto label10;

        goto label11;

     label10:
        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to unbind to service ");

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with ");

        $r22 = r1.<android.app.ActivityThread$BindServiceData: android.content.Intent intent>;

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r22);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r25 = virtualinvoke $r16.<java.lang.Exception: java.lang.String toString()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r27 = new java.lang.RuntimeException;

        $r28 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r27.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r28, $r16);

        throw $r27;

     label11:
        return;

        catch java.lang.Exception from label01 to label02 with label09;
        catch android.os.RemoteException from label03 to label04 with label07;
        catch java.lang.Exception from label03 to label04 with label09;
        catch android.os.RemoteException from label05 to label06 with label07;
        catch java.lang.Exception from label05 to label06 with label09;
        catch java.lang.Exception from label08 to label09 with label09;
    }

    private void handleUpdatePackageCompatibilityInfo(android.app.ActivityThread$UpdateCompatibilityData)
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$UpdateCompatibilityData r1;
        java.lang.String $r2, $r3;
        android.content.res.CompatibilityInfo $r4, $r8, $r9;
        android.content.res.Configuration $r5, $r7;
        android.view.WindowManagerGlobal $r6;
        android.app.LoadedApk r10, r11;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.app.ActivityThread$UpdateCompatibilityData;

        $r2 = r1.<android.app.ActivityThread$UpdateCompatibilityData: java.lang.String pkg>;

        r10 = virtualinvoke r0.<android.app.ActivityThread: android.app.LoadedApk peekPackageInfo(java.lang.String,boolean)>($r2, 0);

        if r10 == null goto label1;

        $r9 = r1.<android.app.ActivityThread$UpdateCompatibilityData: android.content.res.CompatibilityInfo info>;

        virtualinvoke r10.<android.app.LoadedApk: void setCompatibilityInfo(android.content.res.CompatibilityInfo)>($r9);

     label1:
        $r3 = r1.<android.app.ActivityThread$UpdateCompatibilityData: java.lang.String pkg>;

        r11 = virtualinvoke r0.<android.app.ActivityThread: android.app.LoadedApk peekPackageInfo(java.lang.String,boolean)>($r3, 1);

        if r11 == null goto label2;

        $r8 = r1.<android.app.ActivityThread$UpdateCompatibilityData: android.content.res.CompatibilityInfo info>;

        virtualinvoke r11.<android.app.LoadedApk: void setCompatibilityInfo(android.content.res.CompatibilityInfo)>($r8);

     label2:
        $r5 = r0.<android.app.ActivityThread: android.content.res.Configuration mConfiguration>;

        $r4 = r1.<android.app.ActivityThread$UpdateCompatibilityData: android.content.res.CompatibilityInfo info>;

        specialinvoke r0.<android.app.ActivityThread: void handleConfigurationChanged(android.content.res.Configuration,android.content.res.CompatibilityInfo)>($r5, $r4);

        $r6 = staticinvoke <android.view.WindowManagerGlobal: android.view.WindowManagerGlobal getInstance()>();

        $r7 = r0.<android.app.ActivityThread: android.content.res.Configuration mConfiguration>;

        virtualinvoke $r6.<android.view.WindowManagerGlobal: void reportNewConfiguration(android.content.res.Configuration)>($r7);

        return;
    }

    private void handleWindowingModeChangeIfNeeded(android.app.Activity, android.content.res.Configuration)
    {
        android.app.ActivityThread r0;
        android.app.Activity r1;
        android.content.res.Configuration r2;
        int i0, i1;
        android.os.IBinder r3;
        boolean z0, z1;
        android.app.WindowConfiguration $r4;
        java.util.Map $r5, $r9;
        java.lang.Integer $r6, $r8, $r10;
        java.lang.Object $r7;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.app.Activity;

        r2 := @parameter1: android.content.res.Configuration;

        $r4 = r2.<android.content.res.Configuration: android.app.WindowConfiguration windowConfiguration>;

        i0 = virtualinvoke $r4.<android.app.WindowConfiguration: int getWindowingMode()>();

        r3 = virtualinvoke r1.<android.app.Activity: android.os.IBinder getActivityToken()>();

        $r5 = r0.<android.app.ActivityThread: java.util.Map mLastReportedWindowingMode>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r7 = interfaceinvoke $r5.<java.util.Map: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)>(r3, $r6);

        $r8 = (java.lang.Integer) $r7;

        i1 = virtualinvoke $r8.<java.lang.Integer: int intValue()>();

        if i1 != i0 goto label1;

        return;

     label1:
        if i0 != 2 goto label2;

        virtualinvoke r1.<android.app.Activity: void dispatchPictureInPictureModeChanged(boolean,android.content.res.Configuration)>(1, r2);

        goto label3;

     label2:
        if i1 != 2 goto label3;

        virtualinvoke r1.<android.app.Activity: void dispatchPictureInPictureModeChanged(boolean,android.content.res.Configuration)>(0, r2);

     label3:
        z0 = staticinvoke <android.app.WindowConfiguration: boolean inMultiWindowMode(int)>(i1);

        z1 = staticinvoke <android.app.WindowConfiguration: boolean inMultiWindowMode(int)>(i0);

        if z0 == z1 goto label4;

        virtualinvoke r1.<android.app.Activity: void dispatchMultiWindowModeChanged(boolean,android.content.res.Configuration)>(z1, r2);

     label4:
        $r9 = r0.<android.app.ActivityThread: java.util.Map mLastReportedWindowingMode>;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, $r10);

        return;
    }

    private final void incProviderRefLocked(android.app.ActivityThread$ProviderRefCount, boolean)
    {
        android.app.ActivityThread r0;
        boolean z0, $z1, $z3;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.app.IActivityManager $r1, $r5;
        android.app.ContentProviderHolder $r2, $r6;
        android.os.IBinder $r3, $r7;
        android.app.ActivityThread$H $r4, $r8;
        android.os.RemoteException $r9, $r10;
        android.app.ActivityThread$ProviderRefCount r11;
        byte b6;

        r0 := @this: android.app.ActivityThread;

        r11 := @parameter0: android.app.ActivityThread$ProviderRefCount;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label06;

        $i3 = r11.<android.app.ActivityThread$ProviderRefCount: int stableCount>;

        $i4 = $i3 + 1;

        r11.<android.app.ActivityThread$ProviderRefCount: int stableCount> = $i4;

        $i5 = r11.<android.app.ActivityThread$ProviderRefCount: int stableCount>;

        if $i5 != 1 goto label10;

        $z3 = r11.<android.app.ActivityThread$ProviderRefCount: boolean removePending>;

        if $z3 == 0 goto label01;

        b6 = -1;

        r11.<android.app.ActivityThread$ProviderRefCount: boolean removePending> = 0;

        $r8 = r0.<android.app.ActivityThread: android.app.ActivityThread$H mH>;

        virtualinvoke $r8.<android.app.ActivityThread$H: void removeMessages(int,java.lang.Object)>(131, r11);

        goto label02;

     label01:
        b6 = 0;

     label02:
        $r5 = staticinvoke <android.app.ActivityManager: android.app.IActivityManager getService()>();

        $r6 = r11.<android.app.ActivityThread$ProviderRefCount: android.app.ContentProviderHolder holder>;

        $r7 = $r6.<android.app.ContentProviderHolder: android.os.IBinder connection>;

        interfaceinvoke $r5.<android.app.IActivityManager: boolean refContentProvider(android.os.IBinder,int,int)>($r7, 1, b6);

     label03:
        goto label05;

     label04:
        $r9 := @caughtexception;

     label05:
        goto label10;

     label06:
        $i0 = r11.<android.app.ActivityThread$ProviderRefCount: int unstableCount>;

        $i1 = $i0 + 1;

        r11.<android.app.ActivityThread$ProviderRefCount: int unstableCount> = $i1;

        $i2 = r11.<android.app.ActivityThread$ProviderRefCount: int unstableCount>;

        if $i2 != 1 goto label10;

        $z1 = r11.<android.app.ActivityThread$ProviderRefCount: boolean removePending>;

        if $z1 == 0 goto label07;

        r11.<android.app.ActivityThread$ProviderRefCount: boolean removePending> = 0;

        $r4 = r0.<android.app.ActivityThread: android.app.ActivityThread$H mH>;

        virtualinvoke $r4.<android.app.ActivityThread$H: void removeMessages(int,java.lang.Object)>(131, r11);

        goto label10;

     label07:
        $r1 = staticinvoke <android.app.ActivityManager: android.app.IActivityManager getService()>();

        $r2 = r11.<android.app.ActivityThread$ProviderRefCount: android.app.ContentProviderHolder holder>;

        $r3 = $r2.<android.app.ContentProviderHolder: android.os.IBinder connection>;

        interfaceinvoke $r1.<android.app.IActivityManager: boolean refContentProvider(android.os.IBinder,int,int)>($r3, 0, 1);

     label08:
        goto label10;

     label09:
        $r10 := @caughtexception;

     label10:
        return;

        catch android.os.RemoteException from label02 to label03 with label04;
        catch android.os.RemoteException from label07 to label08 with label09;
    }

    public static void initializeMainlineModules()
    {
        android.os.TelephonyServiceManager $r0;
        android.os.StatsServiceManager $r1;

        $r0 = new android.os.TelephonyServiceManager;

        specialinvoke $r0.<android.os.TelephonyServiceManager: void <init>()>();

        staticinvoke <android.telephony.TelephonyFrameworkInitializer: void setTelephonyServiceManager(android.os.TelephonyServiceManager)>($r0);

        $r1 = new android.os.StatsServiceManager;

        specialinvoke $r1.<android.os.StatsServiceManager: void <init>()>();

        staticinvoke <android.os.StatsFrameworkInitializer: void setStatsServiceManager(android.os.StatsServiceManager)>($r1);

        return;
    }

    private void installContentProviders(android.content.Context, java.util.List)
    {
        android.app.ActivityThread r0;
        java.util.Iterator r2;
        java.util.ArrayList $r3;
        boolean $z0;
        android.app.IActivityManager $r4;
        android.app.ActivityThread$ApplicationThread $r5;
        java.lang.Object $r6;
        android.content.pm.ProviderInfo $r7;
        android.os.RemoteException $r8;
        java.lang.RuntimeException $r9;
        android.content.Context r10;
        java.util.List r11;
        android.app.ContentProviderHolder r12;

        r0 := @this: android.app.ActivityThread;

        r10 := @parameter0: android.content.Context;

        r11 := @parameter1: java.util.List;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r2 = interfaceinvoke r11.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (android.content.pm.ProviderInfo) $r6;

        r12 = specialinvoke r0.<android.app.ActivityThread: android.app.ContentProviderHolder installProvider(android.content.Context,android.app.ContentProviderHolder,android.content.pm.ProviderInfo,boolean,boolean,boolean)>(r10, null, $r7, 0, 1, 1);

        if r12 == null goto label2;

        r12.<android.app.ContentProviderHolder: boolean noReleaseNeeded> = 1;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r12);

     label2:
        goto label1;

     label3:
        $r4 = staticinvoke <android.app.ActivityManager: android.app.IActivityManager getService()>();

        $r5 = virtualinvoke r0.<android.app.ActivityThread: android.app.ActivityThread$ApplicationThread getApplicationThread()>();

        interfaceinvoke $r4.<android.app.IActivityManager: void publishContentProviders(android.app.IApplicationThread,java.util.List)>($r5, $r3);

     label4:
        return;

     label5:
        $r8 := @caughtexception;

        $r9 = virtualinvoke $r8.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r9;

        catch android.os.RemoteException from label3 to label4 with label5;
    }

    private android.app.ContentProviderHolder installProvider(android.content.Context, android.app.ContentProviderHolder, android.content.pm.ProviderInfo, boolean, boolean, boolean)
    {
        android.app.ActivityThread r0;
        boolean z0, z1, z2, $z3, $z4, $z5;
        android.content.ComponentName r1;
        java.lang.String $r2, $r3, $r4, $r5, $r7, $r14, $r15, $r21, $r23, $r24, $r26, $r28, $r29, $r30, $r31, $r32, $r34, $r35, $r36, $r43, $r44, $r46, r60;
        android.app.AppComponentFactory $r6;
        android.util.ArrayMap $r8, $r16, $r19, $r20, r69, $r79;
        java.lang.Object $r9, $r17;
        android.app.ActivityThread$ProviderRefCount $r10, $r11, r76, r77;
        android.app.IActivityManager $r12;
        android.os.IBinder $r13, r70;
        android.app.ContentProviderHolder $r18, r53, r75;
        android.content.pm.ApplicationInfo $r22, r58;
        android.app.ContextImpl $r25;
        java.lang.StringBuilder $r27, $r33, $r42, r68;
        android.content.IContentProvider $r37, r55, r67, r72;
        android.content.pm.PackageManager$NameNotFoundException $r38, $r47, $r49;
        android.os.RemoteException $r39;
        java.lang.Exception $r40;
        android.app.Instrumentation $r41;
        java.lang.RuntimeException $r45, $r48;
        java.lang.Throwable $r50, $r51, r80;
        android.content.Context r52, r62;
        android.content.pm.ProviderInfo r54;
        android.content.ContentProvider r56;
        android.app.Application r59;
        java.lang.ClassLoader r64;
        android.app.LoadedApk r65, r66;
        android.app.ActivityThread$ProviderClientRecord r71, r73, r78;

        r0 := @this: android.app.ActivityThread;

        r52 := @parameter0: android.content.Context;

        r53 := @parameter1: android.app.ContentProviderHolder;

        r54 := @parameter2: android.content.pm.ProviderInfo;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        z2 := @parameter5: boolean;

        if r53 == null goto label02;

        $r37 = r53.<android.app.ContentProviderHolder: android.content.IContentProvider provider>;

        if $r37 != null goto label01;

        goto label02;

     label01:
        r55 = r53.<android.app.ContentProviderHolder: android.content.IContentProvider provider>;

        r56 = null;

        goto label24;

     label02:
        if z0 == 0 goto label03;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Loading provider ");

        $r34 = r54.<android.content.pm.ProviderInfo: java.lang.String authority>;

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r35 = r54.<android.content.pm.ProviderInfo: java.lang.String name>;

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r36 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("ActivityThread", $r36);

     label03:
        r58 = r54.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r2 = virtualinvoke r52.<android.content.Context: java.lang.String getPackageName()>();

        $r3 = r58.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $z3 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z3 == 0 goto label04;

        goto label10;

     label04:
        r59 = r0.<android.app.ActivityThread: android.app.Application mInitialApplication>;

        if r59 == null goto label05;

        $r31 = virtualinvoke r59.<android.app.Application: java.lang.String getPackageName()>();

        $r32 = r58.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $z4 = virtualinvoke $r31.<java.lang.String: boolean equals(java.lang.Object)>($r32);

        if $z4 == 0 goto label05;

        r52 = r0.<android.app.ActivityThread: android.app.Application mInitialApplication>;

        goto label10;

     label05:
        r60 = r58.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

     label06:
        r52 = virtualinvoke r52.<android.content.Context: android.content.Context createPackageContext(java.lang.String,int)>(r60, 1);

     label07:
        goto label10;

     label08:
        $r49 := @caughtexception;

        r52 = null;

        goto label10;

     label09:
        $r38 := @caughtexception;

        r52 = null;

     label10:
        if r52 != null goto label11;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to get context for package ");

        $r28 = r58.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" while loading content provider ");

        $r29 = r54.<android.content.pm.ProviderInfo: java.lang.String name>;

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r30 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityThread", $r30);

        return null;

     label11:
        r62 = r52;

        $r4 = r54.<android.content.pm.ProviderInfo: java.lang.String splitName>;

        if $r4 == null goto label15;

     label12:
        $r26 = r54.<android.content.pm.ProviderInfo: java.lang.String splitName>;

        r62 = virtualinvoke r52.<android.content.Context: android.content.Context createContextForSplit(java.lang.String)>($r26);

     label13:
        goto label15;

     label14:
        $r47 := @caughtexception;

        $r48 = new java.lang.RuntimeException;

        specialinvoke $r48.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r47);

        throw $r48;

     label15:
        r64 = virtualinvoke r62.<android.content.Context: java.lang.ClassLoader getClassLoader()>();

        $r5 = r58.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        r65 = virtualinvoke r0.<android.app.ActivityThread: android.app.LoadedApk peekPackageInfo(java.lang.String,boolean)>($r5, 1);

     label16:
        r66 = r65;

        if r65 != null goto label18;

     label17:
        $r25 = virtualinvoke r0.<android.app.ActivityThread: android.app.ContextImpl getSystemContext()>();

        r66 = $r25.<android.app.ContextImpl: android.app.LoadedApk mPackageInfo>;

     label18:
        $r6 = virtualinvoke r66.<android.app.LoadedApk: android.app.AppComponentFactory getAppFactory()>();

        $r7 = r54.<android.content.pm.ProviderInfo: java.lang.String name>;

        r56 = virtualinvoke $r6.<android.app.AppComponentFactory: android.content.ContentProvider instantiateProvider(java.lang.ClassLoader,java.lang.String)>(r64, $r7);

        r67 = virtualinvoke r56.<android.content.ContentProvider: android.content.IContentProvider getIContentProvider()>();

     label19:
        if r67 != null goto label22;

     label20:
        r68 = new java.lang.StringBuilder;

        specialinvoke r68.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to instantiate class ");

        $r21 = r54.<android.content.pm.ProviderInfo: java.lang.String name>;

        virtualinvoke r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        virtualinvoke r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from sourceDir ");

        $r22 = r54.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r23 = $r22.<android.content.pm.ApplicationInfo: java.lang.String sourceDir>;

        virtualinvoke r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r24 = virtualinvoke r68.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ActivityThread", $r24);

     label21:
        return null;

     label22:
        virtualinvoke r56.<android.content.ContentProvider: void attachInfo(android.content.Context,android.content.pm.ProviderInfo)>(r62, r54);

     label23:
        r55 = r67;

     label24:
        r69 = r0.<android.app.ActivityThread: android.util.ArrayMap mProviderMap>;

        entermonitor r69;

     label25:
        r70 = interfaceinvoke r55.<android.content.IContentProvider: android.os.IBinder asBinder()>();

     label26:
        if r56 == null goto label35;

     label27:
        r1 = new android.content.ComponentName;

        $r15 = r54.<android.content.pm.ProviderInfo: java.lang.String packageName>;

        $r14 = r54.<android.content.pm.ProviderInfo: java.lang.String name>;

        specialinvoke r1.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r15, $r14);

        $r16 = r0.<android.app.ActivityThread: android.util.ArrayMap mLocalProvidersByName>;

        $r17 = virtualinvoke $r16.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r71 = (android.app.ActivityThread$ProviderClientRecord) $r17;

     label28:
        if r71 == null goto label31;

     label29:
        r72 = r71.<android.app.ActivityThread$ProviderClientRecord: android.content.IContentProvider mProvider>;

     label30:
        r73 = r71;

        goto label33;

     label31:
        $r18 = new android.app.ContentProviderHolder;

        specialinvoke $r18.<android.app.ContentProviderHolder: void <init>(android.content.pm.ProviderInfo)>(r54);

     label32:
        $r18.<android.app.ContentProviderHolder: android.content.IContentProvider provider> = r55;

        $r18.<android.app.ContentProviderHolder: boolean noReleaseNeeded> = 1;

        r73 = specialinvoke r0.<android.app.ActivityThread: android.app.ActivityThread$ProviderClientRecord installProviderAuthoritiesLocked(android.content.IContentProvider,android.content.ContentProvider,android.app.ContentProviderHolder)>(r55, r56, $r18);

        $r19 = r0.<android.app.ActivityThread: android.util.ArrayMap mLocalProviders>;

        virtualinvoke $r19.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r70, r73);

        $r20 = r0.<android.app.ActivityThread: android.util.ArrayMap mLocalProvidersByName>;

        virtualinvoke $r20.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r73);

     label33:
        r75 = r73.<android.app.ActivityThread$ProviderClientRecord: android.app.ContentProviderHolder mHolder>;

     label34:
        goto label52;

     label35:
        $r8 = r0.<android.app.ActivityThread: android.util.ArrayMap mProviderRefCountMap>;

        $r9 = virtualinvoke $r8.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r70);

        r76 = (android.app.ActivityThread$ProviderRefCount) $r9;

     label36:
        if r76 == null goto label42;

        r77 = r76;

        if z1 != 0 goto label51;

     label37:
        specialinvoke r0.<android.app.ActivityThread: void incProviderRefLocked(android.app.ActivityThread$ProviderRefCount,boolean)>(r76, z2);

     label38:
        $r12 = staticinvoke <android.app.ActivityManager: android.app.IActivityManager getService()>();

        $r13 = r53.<android.app.ContentProviderHolder: android.os.IBinder connection>;

        interfaceinvoke $r12.<android.app.IActivityManager: void removeContentProvider(android.os.IBinder,boolean)>($r13, z2);

     label39:
        goto label41;

     label40:
        $r39 := @caughtexception;

     label41:
        r77 = r76;

        goto label51;

     label42:
        r78 = specialinvoke r0.<android.app.ActivityThread: android.app.ActivityThread$ProviderClientRecord installProviderAuthoritiesLocked(android.content.IContentProvider,android.content.ContentProvider,android.app.ContentProviderHolder)>(r55, r56, r53);

     label43:
        if z1 == 0 goto label46;

     label44:
        r77 = new android.app.ActivityThread$ProviderRefCount;

        specialinvoke r77.<android.app.ActivityThread$ProviderRefCount: void <init>(android.app.ContentProviderHolder,android.app.ActivityThread$ProviderClientRecord,int,int)>(r53, r78, 1000, 1000);

     label45:
        goto label50;

     label46:
        if z2 == 0 goto label49;

     label47:
        $r11 = new android.app.ActivityThread$ProviderRefCount;

        specialinvoke $r11.<android.app.ActivityThread$ProviderRefCount: void <init>(android.app.ContentProviderHolder,android.app.ActivityThread$ProviderClientRecord,int,int)>(r53, r78, 1, 0);

        r77 = $r11;

     label48:
        goto label50;

     label49:
        $r10 = new android.app.ActivityThread$ProviderRefCount;

        specialinvoke $r10.<android.app.ActivityThread$ProviderRefCount: void <init>(android.app.ContentProviderHolder,android.app.ActivityThread$ProviderClientRecord,int,int)>(r53, r78, 0, 1);

        r77 = $r10;

     label50:
        $r79 = r0.<android.app.ActivityThread: android.util.ArrayMap mProviderRefCountMap>;

        virtualinvoke $r79.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r70, r77);

     label51:
        r75 = r77.<android.app.ActivityThread$ProviderRefCount: android.app.ContentProviderHolder holder>;

     label52:
        exitmonitor r69;

     label53:
        return r75;

     label54:
        $r51 := @caughtexception;

        r80 = $r51;

     label55:
        exitmonitor r69;

     label56:
        throw r80;

     label57:
        $r50 := @caughtexception;

        r80 = $r50;

        goto label55;

     label58:
        $r40 := @caughtexception;

        $r41 = r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        $z5 = virtualinvoke $r41.<android.app.Instrumentation: boolean onException(java.lang.Object,java.lang.Throwable)>(null, $r40);

        if $z5 == 0 goto label59;

        return null;

     label59:
        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to get provider ");

        $r43 = r54.<android.content.pm.ProviderInfo: java.lang.String name>;

        virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);

        virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r44 = virtualinvoke $r40.<java.lang.Exception: java.lang.String toString()>();

        virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44);

        $r45 = new java.lang.RuntimeException;

        $r46 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r45.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r46, $r40);

        throw $r45;

        catch android.content.pm.PackageManager$NameNotFoundException from label05 to label06 with label09;
        catch android.content.pm.PackageManager$NameNotFoundException from label06 to label07 with label08;
        catch android.content.pm.PackageManager$NameNotFoundException from label12 to label13 with label14;
        catch java.lang.Exception from label15 to label16 with label58;
        catch java.lang.Exception from label17 to label18 with label58;
        catch java.lang.Exception from label18 to label19 with label58;
        catch java.lang.Exception from label20 to label21 with label58;
        catch java.lang.Exception from label22 to label23 with label58;
        catch java.lang.Throwable from label25 to label26 with label54;
        catch java.lang.Throwable from label27 to label28 with label54;
        catch java.lang.Throwable from label29 to label30 with label54;
        catch java.lang.Throwable from label31 to label32 with label54;
        catch java.lang.Throwable from label32 to label33 with label57;
        catch java.lang.Throwable from label33 to label34 with label57;
        catch java.lang.Throwable from label35 to label36 with label54;
        catch java.lang.Throwable from label37 to label38 with label54;
        catch android.os.RemoteException from label38 to label39 with label40;
        catch java.lang.Throwable from label38 to label39 with label54;
        catch java.lang.Throwable from label42 to label43 with label54;
        catch java.lang.Throwable from label44 to label45 with label54;
        catch java.lang.Throwable from label47 to label48 with label54;
        catch java.lang.Throwable from label49 to label50 with label54;
        catch java.lang.Throwable from label50 to label51 with label54;
        catch java.lang.Throwable from label51 to label52 with label54;
        catch java.lang.Throwable from label52 to label53 with label57;
        catch java.lang.Throwable from label55 to label56 with label57;
    }

    private android.app.ActivityThread$ProviderClientRecord installProviderAuthoritiesLocked(android.content.IContentProvider, android.content.ContentProvider, android.app.ContentProviderHolder)
    {
        android.app.ActivityThread r0;
        java.lang.String[] r1;
        int i0, i2, $i3, $i5, i6, i8, i9;
        java.lang.String r2, $r4, $r18, $r22, r29;
        android.content.pm.ProviderInfo $r3, $r5, $r17;
        android.content.pm.ApplicationInfo $r6;
        android.app.ActivityThread$ProviderClientRecord $r7, $r11;
        android.app.ActivityThread$ProviderKey $r8;
        android.util.ArrayMap $r9, $r12;
        java.lang.Object $r10;
        java.lang.StringBuilder $r14;
        android.app.ContentProviderHolder $r16, r27;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        android.os.IBinder $r23;
        android.content.IContentProvider r25;
        android.content.ContentProvider r26;
        byte b7;

        r0 := @this: android.app.ActivityThread;

        r25 := @parameter0: android.content.IContentProvider;

        r26 := @parameter1: android.content.ContentProvider;

        r27 := @parameter2: android.app.ContentProviderHolder;

        $r3 = r27.<android.app.ContentProviderHolder: android.content.pm.ProviderInfo info>;

        $r4 = $r3.<android.content.pm.ProviderInfo: java.lang.String authority>;

        r1 = virtualinvoke $r4.<java.lang.String: java.lang.String[] split(java.lang.String)>(";");

        $r5 = r27.<android.app.ContentProviderHolder: android.content.pm.ProviderInfo info>;

        $r6 = $r5.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i3 = $r6.<android.content.pm.ApplicationInfo: int uid>;

        i0 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i3);

        if r25 == null goto label14;

        i2 = lengthof r1;

        i6 = 0;

     label01:
        if i6 >= i2 goto label14;

        r2 = r1[i6];

        b7 = -1;

        $i5 = virtualinvoke r2.<java.lang.String: int hashCode()>();

        lookupswitch($i5)
        {
            case -845193793: goto label09;
            case -456066902: goto label08;
            case -172298781: goto label07;
            case 63943420: goto label06;
            case 783201304: goto label05;
            case 1312704747: goto label04;
            case 1995645513: goto label03;
            default: goto label02;
        };

     label02:
        goto label10;

     label03:
        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("com.android.blockednumber");

        if $z0 == 0 goto label02;

        b7 = 3;

        goto label10;

     label04:
        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("downloads");

        if $z1 == 0 goto label02;

        b7 = 5;

        goto label10;

     label05:
        $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("telephony");

        if $z2 == 0 goto label02;

        b7 = 6;

        goto label10;

     label06:
        $z3 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("call_log_shadow");

        if $z3 == 0 goto label02;

        b7 = 2;

        goto label10;

     label07:
        $z4 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("call_log");

        if $z4 == 0 goto label02;

        b7 = 1;

        goto label10;

     label08:
        $z5 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("com.android.calendar");

        if $z5 == 0 goto label02;

        b7 = 4;

        goto label10;

     label09:
        $z6 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("com.android.contacts");

        if $z6 == 0 goto label02;

        b7 = 0;

     label10:
        tableswitch(b7)
        {
            case 0: goto label12;
            case 1: goto label12;
            case 2: goto label12;
            case 3: goto label12;
            case 4: goto label12;
            case 5: goto label12;
            case 6: goto label12;
            default: goto label11;
        };

     label11:
        goto label13;

     label12:
        $r23 = interfaceinvoke r25.<android.content.IContentProvider: android.os.IBinder asBinder()>();

        staticinvoke <android.os.Binder: android.os.IBinder allowBlocking(android.os.IBinder)>($r23);

     label13:
        i6 = i6 + 1;

        goto label01;

     label14:
        $r7 = new android.app.ActivityThread$ProviderClientRecord;

        specialinvoke $r7.<android.app.ActivityThread$ProviderClientRecord: void <init>(android.app.ActivityThread,java.lang.String[],android.content.IContentProvider,android.content.ContentProvider,android.app.ContentProviderHolder)>(r0, r1, r25, r26, r27);

        i8 = lengthof r1;

        i9 = 0;

     label15:
        if i9 >= i8 goto label18;

        r29 = r1[i9];

        $r8 = new android.app.ActivityThread$ProviderKey;

        specialinvoke $r8.<android.app.ActivityThread$ProviderKey: void <init>(java.lang.String,int)>(r29, i0);

        $r9 = r0.<android.app.ActivityThread: android.util.ArrayMap mProviderMap>;

        $r10 = virtualinvoke $r9.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r8);

        $r11 = (android.app.ActivityThread$ProviderClientRecord) $r10;

        if $r11 == null goto label16;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Content provider ");

        $r16 = $r7.<android.app.ActivityThread$ProviderClientRecord: android.app.ContentProviderHolder mHolder>;

        $r17 = $r16.<android.app.ContentProviderHolder: android.content.pm.ProviderInfo info>;

        $r18 = $r17.<android.content.pm.ProviderInfo: java.lang.String name>;

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" already published as ");

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r29);

        $r22 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityThread", $r22);

        goto label17;

     label16:
        $r12 = r0.<android.app.ActivityThread: android.util.ArrayMap mProviderMap>;

        virtualinvoke $r12.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r7);

     label17:
        i9 = i9 + 1;

        goto label15;

     label18:
        return $r7;
    }

    private static boolean isLoadedApkResourceDirsUpToDate(android.app.LoadedApk, android.content.pm.ApplicationInfo)
    {
        android.content.res.Resources r0;
        java.lang.String[] $r1, $r2, r6, r7;
        int $i0, $i1;
        boolean $z0, $z1, z2;
        android.content.res.AssetManager $r3;
        android.app.LoadedApk r4;
        android.content.pm.ApplicationInfo r5;

        r4 := @parameter0: android.app.LoadedApk;

        r5 := @parameter1: android.content.pm.ApplicationInfo;

        r0 = r4.<android.app.LoadedApk: android.content.res.Resources mResources>;

        $r1 = virtualinvoke r4.<android.app.LoadedApk: java.lang.String[] getOverlayDirs()>();

        r6 = staticinvoke <com.android.internal.util.ArrayUtils: java.lang.String[] defeatNullable(java.lang.String[])>($r1);

        $r2 = r5.<android.content.pm.ApplicationInfo: java.lang.String[] resourceDirs>;

        r7 = staticinvoke <com.android.internal.util.ArrayUtils: java.lang.String[] defeatNullable(java.lang.String[])>($r2);

        if r0 == null goto label1;

        $r3 = virtualinvoke r0.<android.content.res.Resources: android.content.res.AssetManager getAssets()>();

        $z1 = virtualinvoke $r3.<android.content.res.AssetManager: boolean isUpToDate()>();

        if $z1 == 0 goto label2;

     label1:
        $i1 = lengthof r6;

        $i0 = lengthof r7;

        if $i1 != $i0 goto label2;

        $z0 = staticinvoke <com.android.internal.util.ArrayUtils: boolean containsAll(java.lang.Object[],java.lang.Object[])>(r6, r7);

        if $z0 == 0 goto label2;

        z2 = 1;

        goto label3;

     label2:
        z2 = 0;

     label3:
        return z2;
    }

    public static boolean isSystem()
    {
        android.app.ActivityThread $r0, $r1;
        boolean z0;

        $r0 = <android.app.ActivityThread: android.app.ActivityThread sCurrentActivityThread>;

        if $r0 == null goto label1;

        $r1 = <android.app.ActivityThread: android.app.ActivityThread sCurrentActivityThread>;

        z0 = $r1.<android.app.ActivityThread: boolean mSystemThread>;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public static void lambda$A4ykhsPb8qV3ffTqpQDklHSMDJ0(android.app.ActivityThread)
    {
        android.app.ActivityThread r0;

        r0 := @parameter0: android.app.ActivityThread;

        specialinvoke r0.<android.app.ActivityThread: void applyPendingProcessState()>();

        return;
    }

    static void lambda$handleFixedRotationAdjustments$0(android.view.DisplayAdjustments$FixedRotationAdjustments, android.content.res.Configuration[], android.view.DisplayAdjustments)
    {
        android.view.DisplayAdjustments$FixedRotationAdjustments r0;
        android.content.res.Configuration[] r1;
        android.view.DisplayAdjustments r2;
        android.content.res.Configuration $r3, $r4, $r5;

        r0 := @parameter0: android.view.DisplayAdjustments$FixedRotationAdjustments;

        r1 := @parameter1: android.content.res.Configuration[];

        r2 := @parameter2: android.view.DisplayAdjustments;

        virtualinvoke r2.<android.view.DisplayAdjustments: void setFixedRotationAdjustments(android.view.DisplayAdjustments$FixedRotationAdjustments)>(r0);

        $r3 = r1[0];

        if $r3 == null goto label1;

        $r4 = virtualinvoke r2.<android.view.DisplayAdjustments: android.content.res.Configuration getConfiguration()>();

        $r5 = r1[0];

        virtualinvoke $r4.<android.content.res.Configuration: int updateFrom(android.content.res.Configuration)>($r5);

     label1:
        return;
    }

    static boolean lambda$handleFixedRotationAdjustments$1(android.os.IBinder, android.util.Pair)
    {
        android.os.IBinder r0;
        android.util.Pair r1;
        java.lang.Object $r2;
        boolean z0;

        r0 := @parameter0: android.os.IBinder;

        r1 := @parameter1: android.util.Pair;

        $r2 = r1.<android.util.Pair: java.lang.Object first>;

        if $r2 != r0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    static void lambda$handleRequestDirectActions$2(android.app.ActivityThread$ActivityClientRecord, android.os.RemoteCallback, java.util.List)
    {
        android.os.RemoteCallback r0;
        java.util.List r1;
        int i0, $i1, i2;
        boolean $z0;
        android.os.Bundle $r4;
        android.content.pm.ParceledListSlice $r5;
        java.lang.Object $r6;
        android.app.Activity $r7, $r9;
        android.app.DirectAction $r8;
        android.os.IBinder $r10;
        android.app.ActivityThread$ActivityClientRecord r11;

        r11 := @parameter0: android.app.ActivityThread$ActivityClientRecord;

        r0 := @parameter1: android.os.RemoteCallback;

        r1 := @parameter2: java.util.List;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        staticinvoke <com.android.internal.util.Preconditions: java.util.Collection checkCollectionElementsNotNull(java.util.Collection,java.lang.String)>(r1, "actions");

        $z0 = interfaceinvoke r1.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label3;

        i0 = interfaceinvoke r1.<java.util.List: int size()>();

        i2 = 0;

     label1:
        if i2 >= i0 goto label2;

        $r6 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i2);

        $r8 = (android.app.DirectAction) $r6;

        $r7 = r11.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $i1 = virtualinvoke $r7.<android.app.Activity: int getTaskId()>();

        $r9 = r11.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r10 = virtualinvoke $r9.<android.app.Activity: android.os.IBinder getAssistToken()>();

        virtualinvoke $r8.<android.app.DirectAction: void setSource(int,android.os.IBinder)>($i1, $r10);

        i2 = i2 + 1;

        goto label1;

     label2:
        $r4 = new android.os.Bundle;

        specialinvoke $r4.<android.os.Bundle: void <init>()>();

        $r5 = new android.content.pm.ParceledListSlice;

        specialinvoke $r5.<android.content.pm.ParceledListSlice: void <init>(java.util.List)>(r1);

        virtualinvoke $r4.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("actions_list", $r5);

        virtualinvoke r0.<android.os.RemoteCallback: void sendResult(android.os.Bundle)>($r4);

        goto label4;

     label3:
        virtualinvoke r0.<android.os.RemoteCallback: void sendResult(android.os.Bundle)>(null);

     label4:
        return;
    }

    public static void main(java.lang.String[])
    {
        int $i0, $i1, $i2, i5;
        java.io.File $r0;
        android.app.ActivityThread $r1;
        android.os.Handler $r2, $r4;
        java.lang.RuntimeException $r3;
        java.lang.String $r5, $r6, $r7, $r8, $r9;
        boolean $z0;
        java.lang.String[] r10;
        long l3, l4, l6;

        r10 := @parameter0: java.lang.String[];

        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(64L, "ActivityThreadMain");

        staticinvoke <android.app.ActivityThread$AndroidOs: void install()>();

        staticinvoke <dalvik.system.CloseGuard: void setEnabled(boolean)>(0);

        staticinvoke <android.os.Environment: void initForCurrentUser()>();

        $i0 = staticinvoke <android.os.UserHandle: int myUserId()>();

        $r0 = staticinvoke <android.os.Environment: java.io.File getUserConfigDirectory(int)>($i0);

        staticinvoke <com.android.org.conscrypt.TrustedCertificateStore: void setDefaultUserDirectory(java.io.File)>($r0);

        staticinvoke <android.app.ActivityThread: void initializeMainlineModules()>();

        staticinvoke <android.os.Process: void setArgV0(java.lang.String)>("<pre-initialized>");

        staticinvoke <android.os.Looper: void prepareMainLooper()>();

        l3 = 0L;

        l4 = 0L;

        if r10 == null goto label3;

        $i1 = lengthof r10;

        i5 = $i1 - 1;

     label1:
        l4 = l3;

        if i5 < 0 goto label3;

        l6 = l3;

        $r5 = r10[i5];

        if $r5 == null goto label2;

        l6 = l3;

        $r6 = r10[i5];

        $z0 = virtualinvoke $r6.<java.lang.String: boolean startsWith(java.lang.String)>("seq=");

        if $z0 == 0 goto label2;

        $r8 = r10[i5];

        $r7 = "seq=";

        $i2 = virtualinvoke $r7.<java.lang.String: int length()>();

        $r9 = virtualinvoke $r8.<java.lang.String: java.lang.String substring(int)>($i2);

        l6 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r9);

     label2:
        i5 = i5 + -1;

        l3 = l6;

        goto label1;

     label3:
        $r1 = new android.app.ActivityThread;

        specialinvoke $r1.<android.app.ActivityThread: void <init>()>();

        specialinvoke $r1.<android.app.ActivityThread: void attach(boolean,long)>(0, l4);

        $r2 = <android.app.ActivityThread: android.os.Handler sMainThreadHandler>;

        if $r2 != null goto label4;

        $r4 = virtualinvoke $r1.<android.app.ActivityThread: android.os.Handler getHandler()>();

        <android.app.ActivityThread: android.os.Handler sMainThreadHandler> = $r4;

     label4:
        staticinvoke <android.os.Trace: void traceEnd(long)>(64L);

        staticinvoke <android.os.Looper: void loop()>();

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Main thread loop unexpectedly exited");

        throw $r3;
    }

    private native void nDumpGraphicsInfo(java.io.FileDescriptor);

    private native void nInitZygoteChildHeapProfiling();

    private native void nPurgePendingResources();

    private void onCoreSettingsChange()
    {
        android.app.ActivityThread r0;
        boolean $z0;

        r0 := @this: android.app.ActivityThread;

        $z0 = specialinvoke r0.<android.app.ActivityThread: boolean updateDebugViewAttributeState()>();

        if $z0 == 0 goto label1;

        specialinvoke r0.<android.app.ActivityThread: void relaunchAllActivities(boolean)>(0);

     label1:
        return;
    }

    private android.content.res.Configuration performActivityConfigurationChanged(android.app.Activity, android.content.res.Configuration, android.content.res.Configuration, int, boolean)
    {
        android.app.ActivityThread r0;
        android.app.Activity r1;
        int i0, i1, $i2, $i3;
        boolean z0, $z1, $z2, z3;
        android.os.IBinder r2;
        android.content.res.Configuration r3, $r6, $r7, r16, r17, r19, $r21, r22;
        java.lang.IllegalArgumentException $r4, $r5;
        java.lang.StringBuilder $r8;
        java.lang.String $r10, $r14;
        android.util.SuperNotCalledException $r13;
        android.app.ResourcesManager $r15, $r20;
        android.content.pm.ActivityInfo $r18;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.app.Activity;

        r16 := @parameter1: android.content.res.Configuration;

        r17 := @parameter2: android.content.res.Configuration;

        i0 := @parameter3: int;

        z0 := @parameter4: boolean;

        if r1 == null goto label9;

        r2 = virtualinvoke r1.<android.app.Activity: android.os.IBinder getActivityToken()>();

        if r2 == null goto label8;

        specialinvoke r0.<android.app.ActivityThread: void handleWindowingModeChangeIfNeeded(android.app.Activity,android.content.res.Configuration)>(r1, r16);

        z3 = 0;

        $r6 = r1.<android.app.Activity: android.content.res.Configuration mCurrentConfig>;

        if $r6 != null goto label1;

        z3 = 1;

        goto label4;

     label1:
        $r7 = r1.<android.app.Activity: android.content.res.Configuration mCurrentConfig>;

        i1 = virtualinvoke $r7.<android.content.res.Configuration: int diffPublicOnly(android.content.res.Configuration)>(r16);

        if i1 != 0 goto label2;

        if z0 != 0 goto label2;

        $r15 = r0.<android.app.ActivityThread: android.app.ResourcesManager mResourcesManager>;

        $z2 = virtualinvoke $r15.<android.app.ResourcesManager: boolean isSameResourcesOverrideConfig(android.os.IBinder,android.content.res.Configuration)>(r2, r17);

        if $z2 == 0 goto label2;

        return null;

     label2:
        $r18 = r1.<android.app.Activity: android.content.pm.ActivityInfo mActivityInfo>;

        $i2 = virtualinvoke $r18.<android.content.pm.ActivityInfo: int getRealConfigChanged()>();

        $i3 = $i2 & i1;

        if $i3 == 0 goto label3;

        goto label4;

     label3:
        z3 = 1;

     label4:
        r3 = virtualinvoke r1.<android.app.Activity: android.content.res.Configuration getOverrideConfiguration()>();

        r19 = staticinvoke <android.app.ActivityThread: android.content.res.Configuration createNewConfigAndUpdateIfNotNull(android.content.res.Configuration,android.content.res.Configuration)>(r17, r3);

        $r20 = r0.<android.app.ActivityThread: android.app.ResourcesManager mResourcesManager>;

        virtualinvoke $r20.<android.app.ResourcesManager: void updateResourcesForActivity(android.os.IBinder,android.content.res.Configuration,int,boolean)>(r2, r19, i0, z0);

        r1.<android.app.Activity: int mConfigChangeFlags> = 0;

        $r21 = new android.content.res.Configuration;

        specialinvoke $r21.<android.content.res.Configuration: void <init>(android.content.res.Configuration)>(r16);

        r1.<android.app.Activity: android.content.res.Configuration mCurrentConfig> = $r21;

        r22 = staticinvoke <android.app.ActivityThread: android.content.res.Configuration createNewConfigAndUpdateIfNotNull(android.content.res.Configuration,android.content.res.Configuration)>(r16, r3);

        if z0 == 0 goto label5;

        virtualinvoke r1.<android.app.Activity: void dispatchMovedToDisplay(int,android.content.res.Configuration)>(i0, r22);

     label5:
        if z3 == 0 goto label7;

        r1.<android.app.Activity: boolean mCalled> = 0;

        virtualinvoke r1.<android.app.Activity: void onConfigurationChanged(android.content.res.Configuration)>(r22);

        $z1 = r1.<android.app.Activity: boolean mCalled>;

        if $z1 == 0 goto label6;

        goto label7;

     label6:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Activity ");

        $r10 = virtualinvoke r1.<android.app.Activity: java.lang.String getLocalClassName()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" did not call through to super.onConfigurationChanged()");

        $r13 = new android.util.SuperNotCalledException;

        $r14 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<android.util.SuperNotCalledException: void <init>(java.lang.String)>($r14);

        throw $r13;

     label7:
        return r22;

     label8:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Activity token not set. Is the activity attached?");

        throw $r5;

     label9:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("No activity provided.");

        throw $r4;
    }

    private void performConfigurationChanged(android.content.ComponentCallbacks2, android.content.res.Configuration)
    {
        android.app.ActivityThread r0;
        android.content.ComponentCallbacks2 r1;
        android.content.res.Configuration r2, $r3, r5;
        boolean $z0;
        android.view.ContextThemeWrapper $r4;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.content.ComponentCallbacks2;

        r2 := @parameter1: android.content.res.Configuration;

        r5 = null;

        $z0 = r1 instanceof android.view.ContextThemeWrapper;

        if $z0 == 0 goto label1;

        $r4 = (android.view.ContextThemeWrapper) r1;

        r5 = virtualinvoke $r4.<android.view.ContextThemeWrapper: android.content.res.Configuration getOverrideConfiguration()>();

     label1:
        $r3 = staticinvoke <android.app.ActivityThread: android.content.res.Configuration createNewConfigAndUpdateIfNotNull(android.content.res.Configuration,android.content.res.Configuration)>(r2, r5);

        interfaceinvoke r1.<android.content.ComponentCallbacks2: void onConfigurationChanged(android.content.res.Configuration)>($r3);

        return;
    }

    private android.content.res.Configuration performConfigurationChangedForActivity(android.app.ActivityThread$ActivityClientRecord, android.content.res.Configuration, int, boolean)
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$ActivityClientRecord r1;
        int i0, $i1;
        boolean z0;
        android.content.res.Configuration $r2, $r3, $r5, $r6, $r8, $r9, $r10, $r11, r12, r13;
        android.app.Activity $r4, $r7;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.app.ActivityThread$ActivityClientRecord;

        r12 := @parameter1: android.content.res.Configuration;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        $r2 = staticinvoke <android.app.ActivityThread$ActivityClientRecord: android.content.res.Configuration access$3900(android.app.ActivityThread$ActivityClientRecord)>(r1);

        virtualinvoke $r2.<android.content.res.Configuration: void setTo(android.content.res.Configuration)>(r12);

        $r3 = r1.<android.app.ActivityThread$ActivityClientRecord: android.content.res.Configuration overrideConfig>;

        if $r3 == null goto label1;

        $r10 = staticinvoke <android.app.ActivityThread$ActivityClientRecord: android.content.res.Configuration access$3900(android.app.ActivityThread$ActivityClientRecord)>(r1);

        $r11 = r1.<android.app.ActivityThread$ActivityClientRecord: android.content.res.Configuration overrideConfig>;

        virtualinvoke $r10.<android.content.res.Configuration: int updateFrom(android.content.res.Configuration)>($r11);

     label1:
        $r4 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r5 = staticinvoke <android.app.ActivityThread$ActivityClientRecord: android.content.res.Configuration access$3900(android.app.ActivityThread$ActivityClientRecord)>(r1);

        $r6 = r1.<android.app.ActivityThread$ActivityClientRecord: android.content.res.Configuration overrideConfig>;

        r13 = specialinvoke r0.<android.app.ActivityThread: android.content.res.Configuration performActivityConfigurationChanged(android.app.Activity,android.content.res.Configuration,android.content.res.Configuration,int,boolean)>($r4, $r5, $r6, i0, z0);

        $r7 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r8 = $r7.<android.app.Activity: android.content.res.Configuration mCurrentConfig>;

        $r9 = staticinvoke <android.app.ActivityThread$ActivityClientRecord: android.content.res.Configuration access$3900(android.app.ActivityThread$ActivityClientRecord)>(r1);

        $i1 = virtualinvoke $r8.<android.content.res.Configuration: int diff(android.content.res.Configuration)>($r9);

        staticinvoke <android.app.ActivityThread: void freeTextLayoutCachesIfNeeded(int)>($i1);

        return r13;
    }

    private void performConfigurationChangedForActivity(android.app.ActivityThread$ActivityClientRecord, android.content.res.Configuration)
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$ActivityClientRecord r1;
        android.content.res.Configuration r2;
        android.app.Activity $r3;
        int $i0;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.app.ActivityThread$ActivityClientRecord;

        r2 := @parameter1: android.content.res.Configuration;

        $r3 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $i0 = virtualinvoke $r3.<android.app.Activity: int getDisplayId()>();

        specialinvoke r0.<android.app.ActivityThread: android.content.res.Configuration performConfigurationChangedForActivity(android.app.ActivityThread$ActivityClientRecord,android.content.res.Configuration,int,boolean)>(r1, r2, $i0, 0);

        return;
    }

    private android.app.Activity performLaunchActivity(android.app.ActivityThread$ActivityClientRecord, android.content.Intent)
    {
        android.app.ActivityThread r0;
        android.app.ContextImpl r1;
        android.app.Application r2, $r53;
        java.lang.CharSequence r3;
        android.app.Instrumentation r4, $r19, $r26, $r34, $r45, $r83, $r120;
        android.os.IBinder r5, r14, $r27, $r40;
        android.content.Intent r6, $r16, $r21, $r23, $r24, $r35, $r54, $r56, r91;
        android.content.pm.ActivityInfo r7, $r17, $r29, $r32, $r49, $r50, r92;
        android.app.Activity r8, r96, r98, r113;
        java.lang.String r9, r11, $r18, $r20, $r37, $r38, $r51, $r52, $r62, $r64, $r85, $r87;
        android.app.Activity$NonConfigurationInstances r10;
        com.android.internal.app.IVoiceInteractor r12;
        android.view.ViewRootImpl$ActivityConfigCallback r13;
        boolean z0, $z1, $z2, $z3, $z4;
        android.app.LoadedApk $r15, $r59, r100;
        java.lang.Class $r22;
        android.os.Bundle $r25, $r33, $r44, $r47;
        android.util.ArrayMap $r28;
        android.content.pm.PackageManager $r30, $r55;
        android.content.res.Configuration $r31, $r46, r101, r102;
        android.content.ComponentName $r36, $r48, r93, r94, r95;
        java.util.Map $r39;
        android.app.WindowConfiguration $r41;
        int $i0, i1, i2;
        java.lang.Integer $r42;
        android.os.PersistableBundle $r43;
        android.content.res.CompatibilityInfo $r57;
        android.content.pm.ApplicationInfo $r58;
        java.lang.Exception $r60, $r66, $r70, $r74, $r75, $r76, $r80, $r82, $r88, $r89, r103;
        java.lang.StringBuilder $r61, $r84, r116;
        java.lang.RuntimeException $r63, $r86;
        android.util.SuperNotCalledException $r65, $r68, $r69, $r71, $r72, $r73, $r77, $r78, $r79, $r81, r104, r115;
        java.lang.Throwable $r67;
        android.app.ActivityThread$ActivityClientRecord r90;
        java.lang.ClassLoader r97;
        android.view.Window r105, r106;
        android.content.res.Resources $r107, $r108;
        java.util.List $r109;
        android.content.res.loader.ResourcesLoader[] $r110, $r112;
        java.lang.Object[] $r111;
        android.app.ResourcesManager r118;

        r0 := @this: android.app.ActivityThread;

        r90 := @parameter0: android.app.ActivityThread$ActivityClientRecord;

        r91 := @parameter1: android.content.Intent;

        r92 = r90.<android.app.ActivityThread$ActivityClientRecord: android.content.pm.ActivityInfo activityInfo>;

        $r15 = r90.<android.app.ActivityThread$ActivityClientRecord: android.app.LoadedApk packageInfo>;

        if $r15 != null goto label01;

        $r58 = r92.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r57 = r90.<android.app.ActivityThread$ActivityClientRecord: android.content.res.CompatibilityInfo compatInfo>;

        $r59 = virtualinvoke r0.<android.app.ActivityThread: android.app.LoadedApk getPackageInfo(android.content.pm.ApplicationInfo,android.content.res.CompatibilityInfo,int)>($r58, $r57, 1);

        r90.<android.app.ActivityThread$ActivityClientRecord: android.app.LoadedApk packageInfo> = $r59;

     label01:
        $r16 = r90.<android.app.ActivityThread$ActivityClientRecord: android.content.Intent intent>;

        r93 = virtualinvoke $r16.<android.content.Intent: android.content.ComponentName getComponent()>();

        r94 = r93;

        if r93 != null goto label02;

        $r54 = r90.<android.app.ActivityThread$ActivityClientRecord: android.content.Intent intent>;

        $r53 = r0.<android.app.ActivityThread: android.app.Application mInitialApplication>;

        $r55 = virtualinvoke $r53.<android.app.Application: android.content.pm.PackageManager getPackageManager()>();

        r94 = virtualinvoke $r54.<android.content.Intent: android.content.ComponentName resolveActivity(android.content.pm.PackageManager)>($r55);

        $r56 = r90.<android.app.ActivityThread$ActivityClientRecord: android.content.Intent intent>;

        virtualinvoke $r56.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>(r94);

     label02:
        $r17 = r90.<android.app.ActivityThread$ActivityClientRecord: android.content.pm.ActivityInfo activityInfo>;

        $r18 = $r17.<android.content.pm.ActivityInfo: java.lang.String targetActivity>;

        if $r18 == null goto label03;

        $r48 = new android.content.ComponentName;

        $r49 = r90.<android.app.ActivityThread$ActivityClientRecord: android.content.pm.ActivityInfo activityInfo>;

        $r52 = $r49.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $r50 = r90.<android.app.ActivityThread$ActivityClientRecord: android.content.pm.ActivityInfo activityInfo>;

        $r51 = $r50.<android.content.pm.ActivityInfo: java.lang.String targetActivity>;

        specialinvoke $r48.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r52, $r51);

        r95 = $r48;

        goto label04;

     label03:
        r95 = r94;

     label04:
        r1 = specialinvoke r0.<android.app.ActivityThread: android.app.ContextImpl createBaseContextForActivity(android.app.ActivityThread$ActivityClientRecord)>(r90);

        r96 = null;

     label05:
        r97 = virtualinvoke r1.<android.app.ContextImpl: java.lang.ClassLoader getClassLoader()>();

     label06:
        r96 = null;

     label07:
        $r19 = r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        $r20 = virtualinvoke r95.<android.content.ComponentName: java.lang.String getClassName()>();

        $r21 = r90.<android.app.ActivityThread$ActivityClientRecord: android.content.Intent intent>;

        r98 = virtualinvoke $r19.<android.app.Instrumentation: android.app.Activity newActivity(java.lang.ClassLoader,java.lang.String,android.content.Intent)>(r97, $r20, $r21);

     label08:
        r96 = r98;

     label09:
        $r22 = virtualinvoke r98.<java.lang.Object: java.lang.Class getClass()>();

        staticinvoke <android.os.StrictMode: void incrementExpectedActivityCount(java.lang.Class)>($r22);

     label10:
        r96 = r98;

     label11:
        $r23 = r90.<android.app.ActivityThread$ActivityClientRecord: android.content.Intent intent>;

        virtualinvoke $r23.<android.content.Intent: void setExtrasClassLoader(java.lang.ClassLoader)>(r97);

     label12:
        r96 = r98;

     label13:
        $r24 = r90.<android.app.ActivityThread$ActivityClientRecord: android.content.Intent intent>;

        virtualinvoke $r24.<android.content.Intent: void prepareToEnterProcess()>();

     label14:
        r96 = r98;

     label15:
        $r25 = r90.<android.app.ActivityThread$ActivityClientRecord: android.os.Bundle state>;

        if $r25 == null goto label18;

     label16:
        r96 = r98;

     label17:
        $r47 = r90.<android.app.ActivityThread$ActivityClientRecord: android.os.Bundle state>;

        virtualinvoke $r47.<android.os.Bundle: void setClassLoader(java.lang.ClassLoader)>(r97);

     label18:
        r96 = r98;

        goto label20;

     label19:
        $r82 := @caughtexception;

        $r83 = r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        $z3 = virtualinvoke $r83.<android.app.Instrumentation: boolean onException(java.lang.Object,java.lang.Throwable)>(r96, $r82);

        if $z3 == 0 goto label84;

     label20:
        r100 = r90.<android.app.ActivityThread$ActivityClientRecord: android.app.LoadedApk packageInfo>;

     label21:
        $r26 = r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        r2 = virtualinvoke r100.<android.app.LoadedApk: android.app.Application makeApplication(boolean,android.app.Instrumentation)>(0, $r26);

     label22:
        if r96 == null goto label68;

     label23:
        $r29 = r90.<android.app.ActivityThread$ActivityClientRecord: android.content.pm.ActivityInfo activityInfo>;

        $r30 = virtualinvoke r1.<android.app.ContextImpl: android.content.pm.PackageManager getPackageManager()>();

        r3 = virtualinvoke $r29.<android.content.pm.ActivityInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>($r30);

        r101 = new android.content.res.Configuration;

        $r31 = r0.<android.app.ActivityThread: android.content.res.Configuration mCompatConfiguration>;

        specialinvoke r101.<android.content.res.Configuration: void <init>(android.content.res.Configuration)>($r31);

        r102 = r90.<android.app.ActivityThread$ActivityClientRecord: android.content.res.Configuration overrideConfig>;

     label24:
        if r102 == null goto label29;

     label25:
        $r46 = r90.<android.app.ActivityThread$ActivityClientRecord: android.content.res.Configuration overrideConfig>;

        virtualinvoke r101.<android.content.res.Configuration: int updateFrom(android.content.res.Configuration)>($r46);

     label26:
        goto label29;

     label27:
        $r88 := @caughtexception;

        r103 = $r88;

        goto label79;

     label28:
        $r77 := @caughtexception;

        r104 = $r77;

        goto label83;

     label29:
        r105 = r90.<android.app.ActivityThread$ActivityClientRecord: android.view.Window mPendingRemoveWindow>;

     label30:
        if r105 == null goto label33;

     label31:
        $z2 = r90.<android.app.ActivityThread$ActivityClientRecord: boolean mPreserveWindow>;

        if $z2 == 0 goto label33;

        r106 = r90.<android.app.ActivityThread$ActivityClientRecord: android.view.Window mPendingRemoveWindow>;

        r90.<android.app.ActivityThread$ActivityClientRecord: android.view.Window mPendingRemoveWindow> = null;

        r90.<android.app.ActivityThread$ActivityClientRecord: android.view.WindowManager mPendingRemoveWindowManager> = null;

     label32:
        goto label34;

     label33:
        r106 = null;

     label34:
        $r107 = virtualinvoke r1.<android.app.ContextImpl: android.content.res.Resources getResources()>();

        $r108 = virtualinvoke r2.<android.app.Application: android.content.res.Resources getResources()>();

        $r109 = virtualinvoke $r108.<android.content.res.Resources: java.util.List getLoaders()>();

        $r110 = newarray (android.content.res.loader.ResourcesLoader)[0];

        $r111 = interfaceinvoke $r109.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r110);

        $r112 = (android.content.res.loader.ResourcesLoader[]) $r111;

        virtualinvoke $r107.<android.content.res.Resources: void addLoaders(android.content.res.loader.ResourcesLoader[])>($r112);

        virtualinvoke r1.<android.app.ContextImpl: void setOuterContext(android.content.Context)>(r96);

        r4 = virtualinvoke r0.<android.app.ActivityThread: android.app.Instrumentation getInstrumentation()>();

        r5 = r90.<android.app.ActivityThread$ActivityClientRecord: android.os.IBinder token>;

        i1 = r90.<android.app.ActivityThread$ActivityClientRecord: int ident>;

        r6 = r90.<android.app.ActivityThread$ActivityClientRecord: android.content.Intent intent>;

        r7 = r90.<android.app.ActivityThread$ActivityClientRecord: android.content.pm.ActivityInfo activityInfo>;

     label35:
        r8 = r90.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity parent>;

     label36:
        r9 = r90.<android.app.ActivityThread$ActivityClientRecord: java.lang.String embeddedID>;

     label37:
        r10 = r90.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity$NonConfigurationInstances lastNonConfigurationInstances>;

        r11 = r90.<android.app.ActivityThread$ActivityClientRecord: java.lang.String referrer>;

        r12 = r90.<android.app.ActivityThread$ActivityClientRecord: com.android.internal.app.IVoiceInteractor voiceInteractor>;

        r13 = r90.<android.app.ActivityThread$ActivityClientRecord: android.view.ViewRootImpl$ActivityConfigCallback configCallback>;

        r14 = r90.<android.app.ActivityThread$ActivityClientRecord: android.os.IBinder assistToken>;

     label38:
        virtualinvoke r96.<android.app.Activity: void attach(android.content.Context,android.app.ActivityThread,android.app.Instrumentation,android.os.IBinder,int,android.app.Application,android.content.Intent,android.content.pm.ActivityInfo,java.lang.CharSequence,android.app.Activity,java.lang.String,android.app.Activity$NonConfigurationInstances,android.content.res.Configuration,java.lang.String,com.android.internal.app.IVoiceInteractor,android.view.Window,android.view.ViewRootImpl$ActivityConfigCallback,android.os.IBinder)>(r1, r0, r4, r5, i1, r2, r6, r7, r3, r8, r9, r10, r101, r11, r12, r106, r13, r14);

     label39:
        if r91 == null goto label44;

     label40:
        r96.<android.app.Activity: android.content.Intent mIntent> = r91;

     label41:
        goto label44;

     label42:
        $r60 := @caughtexception;

        r103 = $r60;

        goto label79;

     label43:
        $r73 := @caughtexception;

        r104 = $r73;

        goto label76;

     label44:
        r113 = r96;

     label45:
        r90.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity$NonConfigurationInstances lastNonConfigurationInstances> = null;

        specialinvoke r0.<android.app.ActivityThread: void checkAndBlockForNetworkAccess()>();

        r96.<android.app.Activity: boolean mStartedActivity> = 0;

        $r32 = r90.<android.app.ActivityThread$ActivityClientRecord: android.content.pm.ActivityInfo activityInfo>;

        i2 = virtualinvoke $r32.<android.content.pm.ActivityInfo: int getThemeResource()>();

     label46:
        if i2 == 0 goto label48;

     label47:
        virtualinvoke r96.<android.app.Activity: void setTheme(int)>(i2);

     label48:
        r113.<android.app.Activity: boolean mCalled> = 0;

        z0 = virtualinvoke r90.<android.app.ActivityThread$ActivityClientRecord: boolean isPersistable()>();

     label49:
        if z0 == 0 goto label52;

     label50:
        $r45 = r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        $r44 = r90.<android.app.ActivityThread$ActivityClientRecord: android.os.Bundle state>;

        $r43 = r90.<android.app.ActivityThread$ActivityClientRecord: android.os.PersistableBundle persistentState>;

        virtualinvoke $r45.<android.app.Instrumentation: void callActivityOnCreate(android.app.Activity,android.os.Bundle,android.os.PersistableBundle)>(r113, $r44, $r43);

     label51:
        goto label53;

     label52:
        $r34 = r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        $r33 = r90.<android.app.ActivityThread$ActivityClientRecord: android.os.Bundle state>;

        virtualinvoke $r34.<android.app.Instrumentation: void callActivityOnCreate(android.app.Activity,android.os.Bundle)>(r113, $r33);

     label53:
        $z1 = r113.<android.app.Activity: boolean mCalled>;

        if $z1 == 0 goto label55;

        r90.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity> = r113;

        $r39 = r0.<android.app.ActivityThread: java.util.Map mLastReportedWindowingMode>;

        $r40 = virtualinvoke r113.<android.app.Activity: android.os.IBinder getActivityToken()>();

        $r41 = r101.<android.content.res.Configuration: android.app.WindowConfiguration windowConfiguration>;

        $i0 = virtualinvoke $r41.<android.app.WindowConfiguration: int getWindowingMode()>();

        $r42 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke $r39.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r40, $r42);

     label54:
        goto label68;

     label55:
        r115 = new android.util.SuperNotCalledException;

        r116 = new java.lang.StringBuilder;

        specialinvoke r116.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r116.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Activity ");

        $r35 = r90.<android.app.ActivityThread$ActivityClientRecord: android.content.Intent intent>;

        $r36 = virtualinvoke $r35.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r37 = virtualinvoke $r36.<android.content.ComponentName: java.lang.String toShortString()>();

        virtualinvoke r116.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        virtualinvoke r116.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" did not call through to super.onCreate()");

        $r38 = virtualinvoke r116.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r115.<android.util.SuperNotCalledException: void <init>(java.lang.String)>($r38);

        throw r115;

     label56:
        $r80 := @caughtexception;

        r103 = $r80;

        goto label79;

     label57:
        $r71 := @caughtexception;

        r104 = $r71;

        goto label76;

     label58:
        $r89 := @caughtexception;

        r103 = $r89;

        goto label79;

     label59:
        $r68 := @caughtexception;

        r104 = $r68;

        goto label83;

     label60:
        $r74 := @caughtexception;

        r103 = $r74;

        goto label65;

     label61:
        $r78 := @caughtexception;

        r104 = $r78;

        goto label67;

     label62:
        $r70 := @caughtexception;

        r103 = $r70;

        goto label65;

     label63:
        $r69 := @caughtexception;

        r104 = $r69;

        goto label67;

     label64:
        $r76 := @caughtexception;

        r103 = $r76;

     label65:
        goto label79;

     label66:
        $r65 := @caughtexception;

        r104 = $r65;

     label67:
        goto label83;

     label68:
        virtualinvoke r90.<android.app.ActivityThread$ActivityClientRecord: void setState(int)>(1);

        r118 = r0.<android.app.ActivityThread: android.app.ResourcesManager mResourcesManager>;

        entermonitor r118;

     label69:
        $r28 = r0.<android.app.ActivityThread: android.util.ArrayMap mActivities>;

        $r27 = r90.<android.app.ActivityThread$ActivityClientRecord: android.os.IBinder token>;

        virtualinvoke $r28.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r27, r90);

        exitmonitor r118;

     label70:
        goto label80;

     label71:
        $r67 := @caughtexception;

     label72:
        exitmonitor r118;

     label73:
        throw $r67;

     label74:
        $r66 := @caughtexception;

        r103 = $r66;

        goto label79;

     label75:
        $r79 := @caughtexception;

        r104 = $r79;

     label76:
        goto label83;

     label77:
        $r72 := @caughtexception;

        r104 = $r72;

        goto label83;

     label78:
        $r75 := @caughtexception;

        r103 = $r75;

     label79:
        $r120 = r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        $z4 = virtualinvoke $r120.<android.app.Instrumentation: boolean onException(java.lang.Object,java.lang.Throwable)>(r96, r103);

        if $z4 == 0 goto label81;

     label80:
        return r96;

     label81:
        $r61 = new java.lang.StringBuilder;

        specialinvoke $r61.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to start activity ");

        virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r95);

        virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r62 = virtualinvoke r103.<java.lang.Exception: java.lang.String toString()>();

        virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r62);

        $r63 = new java.lang.RuntimeException;

        $r64 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r63.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r64, r103);

        throw $r63;

     label82:
        $r81 := @caughtexception;

        r104 = $r81;

     label83:
        throw r104;

     label84:
        $r84 = new java.lang.StringBuilder;

        specialinvoke $r84.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to instantiate activity ");

        virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r95);

        virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r85 = virtualinvoke $r82.<java.lang.Exception: java.lang.String toString()>();

        virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r85);

        $r86 = new java.lang.RuntimeException;

        $r87 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r86.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r87, $r82);

        throw $r86;

        catch java.lang.Exception from label05 to label06 with label19;
        catch java.lang.Exception from label07 to label08 with label19;
        catch java.lang.Exception from label09 to label10 with label19;
        catch java.lang.Exception from label11 to label12 with label19;
        catch java.lang.Exception from label13 to label14 with label19;
        catch java.lang.Exception from label15 to label16 with label19;
        catch java.lang.Exception from label17 to label18 with label19;
        catch android.util.SuperNotCalledException from label20 to label21 with label82;
        catch java.lang.Exception from label20 to label21 with label78;
        catch android.util.SuperNotCalledException from label21 to label22 with label77;
        catch java.lang.Exception from label21 to label22 with label78;
        catch android.util.SuperNotCalledException from label23 to label24 with label77;
        catch java.lang.Exception from label23 to label24 with label78;
        catch android.util.SuperNotCalledException from label25 to label26 with label28;
        catch java.lang.Exception from label25 to label26 with label27;
        catch android.util.SuperNotCalledException from label29 to label30 with label77;
        catch java.lang.Exception from label29 to label30 with label78;
        catch android.util.SuperNotCalledException from label31 to label32 with label28;
        catch java.lang.Exception from label31 to label32 with label27;
        catch android.util.SuperNotCalledException from label34 to label35 with label77;
        catch java.lang.Exception from label34 to label35 with label78;
        catch android.util.SuperNotCalledException from label35 to label36 with label66;
        catch java.lang.Exception from label35 to label36 with label64;
        catch android.util.SuperNotCalledException from label36 to label37 with label63;
        catch java.lang.Exception from label36 to label37 with label62;
        catch android.util.SuperNotCalledException from label37 to label38 with label61;
        catch java.lang.Exception from label37 to label38 with label60;
        catch android.util.SuperNotCalledException from label38 to label39 with label59;
        catch java.lang.Exception from label38 to label39 with label58;
        catch android.util.SuperNotCalledException from label40 to label41 with label43;
        catch java.lang.Exception from label40 to label41 with label42;
        catch android.util.SuperNotCalledException from label45 to label46 with label57;
        catch java.lang.Exception from label45 to label46 with label56;
        catch android.util.SuperNotCalledException from label47 to label48 with label57;
        catch java.lang.Exception from label47 to label48 with label56;
        catch android.util.SuperNotCalledException from label48 to label49 with label57;
        catch java.lang.Exception from label48 to label49 with label56;
        catch android.util.SuperNotCalledException from label50 to label51 with label75;
        catch java.lang.Exception from label50 to label51 with label74;
        catch android.util.SuperNotCalledException from label52 to label53 with label75;
        catch java.lang.Exception from label52 to label53 with label74;
        catch android.util.SuperNotCalledException from label53 to label54 with label75;
        catch java.lang.Exception from label53 to label54 with label74;
        catch android.util.SuperNotCalledException from label55 to label56 with label75;
        catch java.lang.Exception from label55 to label56 with label74;
        catch android.util.SuperNotCalledException from label68 to label69 with label75;
        catch java.lang.Exception from label68 to label69 with label74;
        catch java.lang.Throwable from label69 to label70 with label71;
        catch java.lang.Throwable from label72 to label73 with label71;
        catch android.util.SuperNotCalledException from label73 to label74 with label75;
        catch java.lang.Exception from label73 to label74 with label74;
    }

    private android.os.Bundle performPauseActivity(android.app.ActivityThread$ActivityClientRecord, boolean, java.lang.String, android.app.servertransaction.PendingTransactionActions)
    {
        android.app.ActivityThread r0;
        android.app.servertransaction.PendingTransactionActions r1;
        boolean z0, $z1, $z2, $z3, z4, z5, z6;
        android.app.Activity $r2, $r3, $r7, $r9, $r10;
        android.util.ArrayMap $r4, r23;
        java.lang.Object $r5, $r6;
        android.app.OnActivityPausedListener $r8;
        java.lang.StringBuilder $r11;
        android.content.Intent $r12;
        android.content.ComponentName $r13;
        java.lang.String $r14, $r16, $r17, r20;
        java.lang.RuntimeException $r15;
        java.lang.Throwable $r18;
        android.app.ActivityThread$ActivityClientRecord r19;
        int i0, i1;
        java.util.ArrayList r24;
        android.os.Bundle r25, r26;

        r0 := @this: android.app.ActivityThread;

        r19 := @parameter0: android.app.ActivityThread$ActivityClientRecord;

        z4 := @parameter1: boolean;

        r20 := @parameter2: java.lang.String;

        r1 := @parameter3: android.app.servertransaction.PendingTransactionActions;

        z0 = r19.<android.app.ActivityThread$ActivityClientRecord: boolean paused>;

        if z0 == 0 goto label02;

        $r10 = r19.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $z3 = $r10.<android.app.Activity: boolean mFinished>;

        if $z3 == 0 goto label01;

        return null;

     label01:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Performing pause of activity that is not resumed: ");

        $r12 = r19.<android.app.ActivityThread$ActivityClientRecord: android.content.Intent intent>;

        $r13 = virtualinvoke $r12.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r14 = virtualinvoke $r13.<android.content.ComponentName: java.lang.String toShortString()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r15 = new java.lang.RuntimeException;

        $r16 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.RuntimeException: void <init>(java.lang.String)>($r16);

        $r17 = virtualinvoke $r15.<java.lang.RuntimeException: java.lang.String getMessage()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityThread", $r17, $r15);

     label02:
        z5 = 1;

        if z4 == 0 goto label03;

        $r9 = r19.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r9.<android.app.Activity: boolean mFinished> = 1;

     label03:
        $r2 = r19.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        z6 = $r2.<android.app.Activity: boolean mFinished>;

        i0 = 0;

        if z6 != 0 goto label04;

        $z2 = staticinvoke <android.app.ActivityThread$ActivityClientRecord: boolean access$3700(android.app.ActivityThread$ActivityClientRecord)>(r19);

        if $z2 == 0 goto label04;

        goto label05;

     label04:
        z5 = 0;

     label05:
        if z5 == 0 goto label06;

        specialinvoke r0.<android.app.ActivityThread: void callActivityOnSaveInstanceState(android.app.ActivityThread$ActivityClientRecord)>(r19);

     label06:
        specialinvoke r0.<android.app.ActivityThread: void performPauseActivityIfNeeded(android.app.ActivityThread$ActivityClientRecord,java.lang.String)>(r19, r20);

        r23 = r0.<android.app.ActivityThread: android.util.ArrayMap mOnPauseListeners>;

        entermonitor r23;

     label07:
        $r4 = r0.<android.app.ActivityThread: android.util.ArrayMap mOnPauseListeners>;

        $r3 = r19.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r5 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>($r3);

        r24 = (java.util.ArrayList) $r5;

        exitmonitor r23;

     label08:
        if r24 == null goto label09;

        i0 = virtualinvoke r24.<java.util.ArrayList: int size()>();

     label09:
        i1 = 0;

     label10:
        if i1 >= i0 goto label11;

        $r6 = virtualinvoke r24.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r8 = (android.app.OnActivityPausedListener) $r6;

        $r7 = r19.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        interfaceinvoke $r8.<android.app.OnActivityPausedListener: void onPaused(android.app.Activity)>($r7);

        i1 = i1 + 1;

        goto label10;

     label11:
        if r1 == null goto label12;

        r25 = virtualinvoke r1.<android.app.servertransaction.PendingTransactionActions: android.os.Bundle getOldState()>();

        goto label13;

     label12:
        r25 = null;

     label13:
        if r25 == null goto label14;

        $z1 = staticinvoke <android.app.ActivityThread$ActivityClientRecord: boolean access$3700(android.app.ActivityThread$ActivityClientRecord)>(r19);

        if $z1 == 0 goto label14;

        r19.<android.app.ActivityThread$ActivityClientRecord: android.os.Bundle state> = r25;

     label14:
        r26 = null;

        if z5 == 0 goto label15;

        r26 = r19.<android.app.ActivityThread$ActivityClientRecord: android.os.Bundle state>;

     label15:
        return r26;

     label16:
        $r18 := @caughtexception;

     label17:
        exitmonitor r23;

     label18:
        throw $r18;

        catch java.lang.Throwable from label07 to label08 with label16;
        catch java.lang.Throwable from label17 to label18 with label16;
    }

    private void performPauseActivityIfNeeded(android.app.ActivityThread$ActivityClientRecord, java.lang.String)
    {
        android.app.ActivityThread r0;
        boolean $z0, $z1, $z2;
        android.app.Activity $r1, $r2, $r4, $r13;
        android.app.Instrumentation $r3, $r14;
        android.content.Intent $r6, $r17;
        java.lang.String $r7, $r10, $r18, $r21, $r24, r26;
        android.util.SuperNotCalledException $r11, r27;
        java.lang.Exception $r12;
        java.lang.StringBuilder $r15, r28;
        java.lang.RuntimeException $r23;
        android.app.ActivityThread$ActivityClientRecord r25;

        r0 := @this: android.app.ActivityThread;

        r25 := @parameter0: android.app.ActivityThread$ActivityClientRecord;

        r26 := @parameter1: java.lang.String;

        $z0 = r25.<android.app.ActivityThread$ActivityClientRecord: boolean paused>;

        if $z0 == 0 goto label1;

        return;

     label1:
        specialinvoke r0.<android.app.ActivityThread: void reportTopResumedActivityChanged(android.app.ActivityThread$ActivityClientRecord,boolean,java.lang.String)>(r25, 0, "pausing");

     label2:
        $r1 = r25.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r1.<android.app.Activity: boolean mCalled> = 0;

        $r3 = r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        $r2 = r25.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        virtualinvoke $r3.<android.app.Instrumentation: void callActivityOnPause(android.app.Activity)>($r2);

        $r4 = r25.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $z1 = $r4.<android.app.Activity: boolean mCalled>;

        if $z1 == 0 goto label4;

     label3:
        goto label6;

     label4:
        r27 = new android.util.SuperNotCalledException;

        r28 = new java.lang.StringBuilder;

        specialinvoke r28.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Activity ");

        $r6 = r25.<android.app.ActivityThread$ActivityClientRecord: android.content.Intent intent>;

        $r7 = staticinvoke <android.app.ActivityThread: java.lang.String safeToComponentShortString(android.content.Intent)>($r6);

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" did not call through to super.onPause()");

        $r10 = virtualinvoke r28.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r27.<android.util.SuperNotCalledException: void <init>(java.lang.String)>($r10);

        throw r27;

     label5:
        $r12 := @caughtexception;

        $r14 = r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        $r13 = r25.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $z2 = virtualinvoke $r14.<android.app.Instrumentation: boolean onException(java.lang.Object,java.lang.Throwable)>($r13, $r12);

        if $z2 == 0 goto label7;

     label6:
        virtualinvoke r25.<android.app.ActivityThread$ActivityClientRecord: void setState(int)>(4);

        return;

     label7:
        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to pause activity ");

        $r17 = r25.<android.app.ActivityThread$ActivityClientRecord: android.content.Intent intent>;

        $r18 = staticinvoke <android.app.ActivityThread: java.lang.String safeToComponentShortString(android.content.Intent)>($r17);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r21 = virtualinvoke $r12.<java.lang.Exception: java.lang.String toString()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = new java.lang.RuntimeException;

        $r24 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r23.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r24, $r12);

        throw $r23;

     label8:
        $r11 := @caughtexception;

        throw $r11;

        catch android.util.SuperNotCalledException from label2 to label3 with label8;
        catch java.lang.Exception from label2 to label3 with label5;
        catch android.util.SuperNotCalledException from label4 to label5 with label8;
        catch java.lang.Exception from label4 to label5 with label5;
    }

    private void performStopActivityInner(android.app.ActivityThread$ActivityClientRecord, android.app.servertransaction.PendingTransactionActions$StopInfo, boolean, boolean, java.lang.String)
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$ActivityClientRecord r1;
        boolean z0, z1, $z2, $z3, $z4;
        android.app.Activity $r2, $r4, $r16;
        java.lang.CharSequence $r3;
        java.lang.StringBuilder $r5, $r18;
        android.content.Intent $r7, $r20;
        android.content.ComponentName $r8, $r21;
        java.lang.String $r9, $r12, $r13, $r14, $r22, $r25, $r28, r30;
        java.lang.RuntimeException $r11, $r27;
        java.lang.Exception $r15;
        android.app.Instrumentation $r17;
        android.app.servertransaction.PendingTransactionActions$StopInfo r29;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.app.ActivityThread$ActivityClientRecord;

        r29 := @parameter1: android.app.servertransaction.PendingTransactionActions$StopInfo;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        r30 := @parameter4: java.lang.String;

        if r1 == null goto label8;

        $z2 = r1.<android.app.ActivityThread$ActivityClientRecord: boolean stopped>;

        if $z2 == 0 goto label2;

        $r4 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $z3 = $r4.<android.app.Activity: boolean mFinished>;

        if $z3 == 0 goto label1;

        return;

     label1:
        if z1 != 0 goto label2;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Performing stop of activity that is already stopped: ");

        $r7 = r1.<android.app.ActivityThread$ActivityClientRecord: android.content.Intent intent>;

        $r8 = virtualinvoke $r7.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r9 = virtualinvoke $r8.<android.content.ComponentName: java.lang.String toShortString()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = new java.lang.RuntimeException;

        $r12 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.String)>($r12);

        $r13 = virtualinvoke $r11.<java.lang.RuntimeException: java.lang.String getMessage()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityThread", $r13, $r11);

        $r14 = virtualinvoke r1.<android.app.ActivityThread$ActivityClientRecord: java.lang.String getStateString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ActivityThread", $r14);

     label2:
        specialinvoke r0.<android.app.ActivityThread: void performPauseActivityIfNeeded(android.app.ActivityThread$ActivityClientRecord,java.lang.String)>(r1, r30);

        if r29 == null goto label7;

     label3:
        $r2 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r3 = virtualinvoke $r2.<android.app.Activity: java.lang.CharSequence onCreateDescription()>();

        virtualinvoke r29.<android.app.servertransaction.PendingTransactionActions$StopInfo: void setDescription(java.lang.CharSequence)>($r3);

     label4:
        goto label7;

     label5:
        $r15 := @caughtexception;

        $r17 = r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        $r16 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $z4 = virtualinvoke $r17.<android.app.Instrumentation: boolean onException(java.lang.Object,java.lang.Throwable)>($r16, $r15);

        if $z4 == 0 goto label6;

        goto label7;

     label6:
        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to save state of activity ");

        $r20 = r1.<android.app.ActivityThread$ActivityClientRecord: android.content.Intent intent>;

        $r21 = virtualinvoke $r20.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r22 = virtualinvoke $r21.<android.content.ComponentName: java.lang.String toShortString()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r25 = virtualinvoke $r15.<java.lang.Exception: java.lang.String toString()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r27 = new java.lang.RuntimeException;

        $r28 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r27.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r28, $r15);

        throw $r27;

     label7:
        specialinvoke r0.<android.app.ActivityThread: void callActivityOnStop(android.app.ActivityThread$ActivityClientRecord,boolean,java.lang.String)>(r1, z0, r30);

     label8:
        return;

        catch java.lang.Exception from label3 to label4 with label5;
    }

    static transient void printRow(java.io.PrintWriter, java.lang.String, java.lang.Object[])
    {
        java.io.PrintWriter r0;
        java.lang.String r1, $r3;
        java.lang.Object[] r2;

        r0 := @parameter0: java.io.PrintWriter;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Object[];

        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r1, r2);

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r3);

        return;
    }

    private void purgePendingResources()
    {
        android.app.ActivityThread r0;

        r0 := @this: android.app.ActivityThread;

        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(64L, "purgePendingResources");

        specialinvoke r0.<android.app.ActivityThread: void nPurgePendingResources()>();

        staticinvoke <android.os.Trace: void traceEnd(long)>(64L);

        return;
    }

    private void relaunchAllActivities(boolean)
    {
        android.app.ActivityThread r0;
        boolean z0, $z1, $z2;
        java.util.Iterator r1;
        java.util.Map$Entry r2;
        android.app.ActivityThread$ActivityClientRecord r3;
        android.util.ArrayMap $r4;
        java.util.Set $r5;
        java.lang.Object $r6, $r7, $r10;
        android.app.Activity $r8;
        android.view.Window $r9;
        android.os.IBinder $r11;

        r0 := @this: android.app.ActivityThread;

        z0 := @parameter0: boolean;

        $r4 = r0.<android.app.ActivityThread: android.util.ArrayMap mActivities>;

        $r5 = virtualinvoke $r4.<android.util.ArrayMap: java.util.Set entrySet()>();

        r1 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r6 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (java.util.Map$Entry) $r6;

        $r7 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        r3 = (android.app.ActivityThread$ActivityClientRecord) $r7;

        $r8 = r3.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $z2 = $r8.<android.app.Activity: boolean mFinished>;

        if $z2 != 0 goto label3;

        if z0 == 0 goto label2;

        $r9 = r3.<android.app.ActivityThread$ActivityClientRecord: android.view.Window window>;

        if $r9 == null goto label2;

        r3.<android.app.ActivityThread$ActivityClientRecord: boolean mPreserveWindow> = 1;

     label2:
        $r10 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r11 = (android.os.IBinder) $r10;

        virtualinvoke r0.<android.app.ActivityThread: void scheduleRelaunchActivity(android.os.IBinder)>($r11);

     label3:
        goto label1;

     label4:
        return;
    }

    private android.os.CancellationSignal removeSafeCancellationTransport(android.app.ActivityThread$SafeCancellationTransport)
    {
        android.app.ActivityThread r0;
        java.util.Map $r1, $r3;
        java.lang.Object $r2;
        boolean $z0;
        java.lang.Throwable $r4;
        android.app.ActivityThread$SafeCancellationTransport r5;
        android.os.CancellationSignal r6;

        r0 := @this: android.app.ActivityThread;

        r5 := @parameter0: android.app.ActivityThread$SafeCancellationTransport;

        entermonitor r0;

     label1:
        $r1 = r0.<android.app.ActivityThread: java.util.Map mRemoteCancellations>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r5);

        r6 = (android.os.CancellationSignal) $r2;

        $r3 = r0.<android.app.ActivityThread: java.util.Map mRemoteCancellations>;

        $z0 = interfaceinvoke $r3.<java.util.Map: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        r0.<android.app.ActivityThread: java.util.Map mRemoteCancellations> = null;

     label2:
        exitmonitor r0;

     label3:
        return r6;

     label4:
        $r4 := @caughtexception;

     label5:
        exitmonitor r0;

     label6:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    private void reportSizeConfigurations(android.app.ActivityThread$ActivityClientRecord)
    {
        android.app.ActivityThread r0;
        android.content.res.Configuration[] r1;
        android.content.res.Configuration r5;
        android.os.IBinder $r6, $r14;
        java.util.Map $r7;
        boolean $z0;
        android.app.Activity $r8;
        android.content.res.Resources $r9;
        android.util.SparseIntArray $r10, $r11, $r12;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7;
        android.app.IActivityTaskManager $r13;
        int[] $r15, $r16, $r17;
        android.os.RemoteException $r18;
        java.lang.RuntimeException $r19;
        android.app.ActivityThread$ActivityClientRecord r20;

        r0 := @this: android.app.ActivityThread;

        r20 := @parameter0: android.app.ActivityThread$ActivityClientRecord;

        $r7 = r0.<android.app.ActivityThread: java.util.Map mActivitiesToBeDestroyed>;

        $r6 = r20.<android.app.ActivityThread$ActivityClientRecord: android.os.IBinder token>;

        $z0 = interfaceinvoke $r7.<java.util.Map: boolean containsKey(java.lang.Object)>($r6);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r8 = r20.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r9 = virtualinvoke $r8.<android.app.Activity: android.content.res.Resources getResources()>();

        r1 = virtualinvoke $r9.<android.content.res.Resources: android.content.res.Configuration[] getSizeConfigurations()>();

        if r1 != null goto label2;

        return;

     label2:
        $r10 = new android.util.SparseIntArray;

        specialinvoke $r10.<android.util.SparseIntArray: void <init>()>();

        $r11 = new android.util.SparseIntArray;

        specialinvoke $r11.<android.util.SparseIntArray: void <init>()>();

        $r12 = new android.util.SparseIntArray;

        specialinvoke $r12.<android.util.SparseIntArray: void <init>()>();

        $i0 = lengthof r1;

        i7 = $i0 - 1;

     label3:
        if i7 < 0 goto label7;

        r5 = r1[i7];

        $i1 = r5.<android.content.res.Configuration: int screenHeightDp>;

        if $i1 == 0 goto label4;

        $i6 = r5.<android.content.res.Configuration: int screenHeightDp>;

        virtualinvoke $r11.<android.util.SparseIntArray: void put(int,int)>($i6, 0);

     label4:
        $i2 = r5.<android.content.res.Configuration: int screenWidthDp>;

        if $i2 == 0 goto label5;

        $i5 = r5.<android.content.res.Configuration: int screenWidthDp>;

        virtualinvoke $r10.<android.util.SparseIntArray: void put(int,int)>($i5, 0);

     label5:
        $i3 = r5.<android.content.res.Configuration: int smallestScreenWidthDp>;

        if $i3 == 0 goto label6;

        $i4 = r5.<android.content.res.Configuration: int smallestScreenWidthDp>;

        virtualinvoke $r12.<android.util.SparseIntArray: void put(int,int)>($i4, 0);

     label6:
        i7 = i7 + -1;

        goto label3;

     label7:
        $r13 = staticinvoke <android.app.ActivityTaskManager: android.app.IActivityTaskManager getService()>();

        $r14 = r20.<android.app.ActivityThread$ActivityClientRecord: android.os.IBinder token>;

        $r15 = virtualinvoke $r10.<android.util.SparseIntArray: int[] copyKeys()>();

        $r16 = virtualinvoke $r11.<android.util.SparseIntArray: int[] copyKeys()>();

        $r17 = virtualinvoke $r12.<android.util.SparseIntArray: int[] copyKeys()>();

        interfaceinvoke $r13.<android.app.IActivityTaskManager: void reportSizeConfigurations(android.os.IBinder,int[],int[],int[])>($r14, $r15, $r16, $r17);

     label8:
        return;

     label9:
        $r18 := @caughtexception;

        $r19 = virtualinvoke $r18.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r19;

        catch android.os.RemoteException from label7 to label8 with label9;
    }

    private void reportTopResumedActivityChanged(android.app.ActivityThread$ActivityClientRecord, boolean, java.lang.String)
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$ActivityClientRecord r1;
        boolean z0, $z1;
        java.lang.String r2;
        android.app.Activity $r3;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.app.ActivityThread$ActivityClientRecord;

        z0 := @parameter1: boolean;

        r2 := @parameter2: java.lang.String;

        $z1 = r1.<android.app.ActivityThread$ActivityClientRecord: boolean lastReportedTopResumedState>;

        if $z1 == z0 goto label1;

        r1.<android.app.ActivityThread$ActivityClientRecord: boolean lastReportedTopResumedState> = z0;

        $r3 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        virtualinvoke $r3.<android.app.Activity: void performTopResumedActivityChanged(boolean,java.lang.String)>(z0, r2);

     label1:
        return;
    }

    private static java.lang.String safeToComponentShortString(android.content.Intent)
    {
        android.content.Intent r0;
        android.content.ComponentName r1;
        java.lang.String r2;

        r0 := @parameter0: android.content.Intent;

        r1 = virtualinvoke r0.<android.content.Intent: android.content.ComponentName getComponent()>();

        if r1 != null goto label1;

        r2 = "[Unknown]";

        goto label2;

     label1:
        r2 = virtualinvoke r1.<android.content.ComponentName: java.lang.String toShortString()>();

     label2:
        return r2;
    }

    private void schedulePauseWithUserLeaveHintAndReturnToCurrentState(android.app.ActivityThread$ActivityClientRecord)
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$ActivityClientRecord r1;
        int i0;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.app.ActivityThread$ActivityClientRecord;

        i0 = virtualinvoke r1.<android.app.ActivityThread$ActivityClientRecord: int getLifecycleState()>();

        if i0 == 3 goto label1;

        if i0 == 4 goto label1;

        return;

     label1:
        if i0 == 3 goto label3;

        if i0 == 4 goto label2;

        goto label4;

     label2:
        specialinvoke r0.<android.app.ActivityThread: void scheduleResume(android.app.ActivityThread$ActivityClientRecord)>(r1);

        specialinvoke r0.<android.app.ActivityThread: void schedulePauseWithUserLeavingHint(android.app.ActivityThread$ActivityClientRecord)>(r1);

        goto label4;

     label3:
        specialinvoke r0.<android.app.ActivityThread: void schedulePauseWithUserLeavingHint(android.app.ActivityThread$ActivityClientRecord)>(r1);

        specialinvoke r0.<android.app.ActivityThread: void scheduleResume(android.app.ActivityThread$ActivityClientRecord)>(r1);

     label4:
        return;
    }

    private void schedulePauseWithUserLeavingHint(android.app.ActivityThread$ActivityClientRecord)
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$ActivityClientRecord r1;
        android.app.servertransaction.ClientTransaction r2;
        android.os.IBinder $r3;
        android.app.ActivityThread$ApplicationThread $r4;
        android.app.Activity $r5, $r6;
        boolean $z0;
        int $i0;
        android.app.servertransaction.PauseActivityItem $r7;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.app.ActivityThread$ActivityClientRecord;

        $r4 = r0.<android.app.ActivityThread: android.app.ActivityThread$ApplicationThread mAppThread>;

        $r3 = r1.<android.app.ActivityThread$ActivityClientRecord: android.os.IBinder token>;

        r2 = staticinvoke <android.app.servertransaction.ClientTransaction: android.app.servertransaction.ClientTransaction obtain(android.app.IApplicationThread,android.os.IBinder)>($r4, $r3);

        $r5 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $z0 = virtualinvoke $r5.<android.app.Activity: boolean isFinishing()>();

        $r6 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $i0 = $r6.<android.app.Activity: int mConfigChangeFlags>;

        $r7 = staticinvoke <android.app.servertransaction.PauseActivityItem: android.app.servertransaction.PauseActivityItem obtain(boolean,boolean,int,boolean)>($z0, 1, $i0, 0);

        virtualinvoke r2.<android.app.servertransaction.ClientTransaction: void setLifecycleStateRequest(android.app.servertransaction.ActivityLifecycleItem)>($r7);

        virtualinvoke r0.<android.app.ActivityThread: void executeTransaction(android.app.servertransaction.ClientTransaction)>(r2);

        return;
    }

    private void scheduleResume(android.app.ActivityThread$ActivityClientRecord)
    {
        android.app.ActivityThread r0;
        android.os.IBinder $r1;
        android.app.ActivityThread$ApplicationThread $r2;
        android.app.servertransaction.ResumeActivityItem $r3;
        android.app.ActivityThread$ActivityClientRecord r4;
        android.app.servertransaction.ClientTransaction r5;

        r0 := @this: android.app.ActivityThread;

        r4 := @parameter0: android.app.ActivityThread$ActivityClientRecord;

        $r2 = r0.<android.app.ActivityThread: android.app.ActivityThread$ApplicationThread mAppThread>;

        $r1 = r4.<android.app.ActivityThread$ActivityClientRecord: android.os.IBinder token>;

        r5 = staticinvoke <android.app.servertransaction.ClientTransaction: android.app.servertransaction.ClientTransaction obtain(android.app.IApplicationThread,android.os.IBinder)>($r2, $r1);

        $r3 = staticinvoke <android.app.servertransaction.ResumeActivityItem: android.app.servertransaction.ResumeActivityItem obtain(boolean)>(0);

        virtualinvoke r5.<android.app.servertransaction.ClientTransaction: void setLifecycleStateRequest(android.app.servertransaction.ActivityLifecycleItem)>($r3);

        virtualinvoke r0.<android.app.ActivityThread: void executeTransaction(android.app.servertransaction.ClientTransaction)>(r5);

        return;
    }

    private void sendMessage(int, java.lang.Object, int)
    {
        android.app.ActivityThread r0;
        int i0, i1;
        java.lang.Object r1;

        r0 := @this: android.app.ActivityThread;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        i1 := @parameter2: int;

        specialinvoke r0.<android.app.ActivityThread: void sendMessage(int,java.lang.Object,int,int,boolean)>(i0, r1, i1, 0, 0);

        return;
    }

    private void sendMessage(int, java.lang.Object, int, int)
    {
        android.app.ActivityThread r0;
        int i0, i1, i2;
        java.lang.Object r1;

        r0 := @this: android.app.ActivityThread;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        specialinvoke r0.<android.app.ActivityThread: void sendMessage(int,java.lang.Object,int,int,boolean)>(i0, r1, i1, i2, 0);

        return;
    }

    private void sendMessage(int, java.lang.Object, int, int, int)
    {
        android.app.ActivityThread r0;
        int i0, i1, i2, i3;
        java.lang.Object r1;
        android.os.Message r2;
        com.android.internal.os.SomeArgs r3;
        android.app.ActivityThread$H $r4;

        r0 := @this: android.app.ActivityThread;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        r2 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        r2.<android.os.Message: int what> = i0;

        r3 = staticinvoke <com.android.internal.os.SomeArgs: com.android.internal.os.SomeArgs obtain()>();

        r3.<com.android.internal.os.SomeArgs: java.lang.Object arg1> = r1;

        r3.<com.android.internal.os.SomeArgs: int argi1> = i1;

        r3.<com.android.internal.os.SomeArgs: int argi2> = i2;

        r3.<com.android.internal.os.SomeArgs: int argi3> = i3;

        r2.<android.os.Message: java.lang.Object obj> = r3;

        $r4 = r0.<android.app.ActivityThread: android.app.ActivityThread$H mH>;

        virtualinvoke $r4.<android.app.ActivityThread$H: boolean sendMessage(android.os.Message)>(r2);

        return;
    }

    private void sendMessage(int, java.lang.Object, int, int, boolean)
    {
        android.app.ActivityThread r0;
        int i0, i1, i2;
        java.lang.Object r1;
        boolean z0;
        android.os.Message r2;
        android.app.ActivityThread$H $r3;

        r0 := @this: android.app.ActivityThread;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        z0 := @parameter4: boolean;

        r2 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        r2.<android.os.Message: int what> = i0;

        r2.<android.os.Message: java.lang.Object obj> = r1;

        r2.<android.os.Message: int arg1> = i1;

        r2.<android.os.Message: int arg2> = i2;

        if z0 == 0 goto label1;

        virtualinvoke r2.<android.os.Message: void setAsynchronous(boolean)>(1);

     label1:
        $r3 = r0.<android.app.ActivityThread: android.app.ActivityThread$H mH>;

        virtualinvoke $r3.<android.app.ActivityThread$H: boolean sendMessage(android.os.Message)>(r2);

        return;
    }

    private void setupGraphicsSupport(android.content.Context)
    {
        android.app.ActivityThread r0;
        int i0;
        java.lang.String $r1, $r2, $r6;
        boolean $z0;
        android.content.Context $r3, r10;
        android.content.pm.IPackageManager $r4;
        java.lang.String[] $r5;
        android.os.RemoteException $r8;
        java.lang.RuntimeException $r9;
        java.io.File r11, r12;
        android.os.GraphicsEnvironment $r14;
        android.os.Bundle $r15;

        r0 := @this: android.app.ActivityThread;

        r10 := @parameter0: android.content.Context;

        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(64L, "setupGraphicsSupport");

        $r1 = "android";

        $r2 = virtualinvoke r10.<android.content.Context: java.lang.String getPackageName()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label7;

        r11 = virtualinvoke r10.<android.content.Context: java.io.File getCacheDir()>();

        if r11 == null goto label1;

        $r6 = virtualinvoke r11.<java.io.File: java.lang.String getAbsolutePath()>();

        staticinvoke <java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)>("java.io.tmpdir", $r6);

        goto label2;

     label1:
        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("ActivityThread", "Unable to initialize \"java.io.tmpdir\" property due to missing cache directory");

     label2:
        $r3 = virtualinvoke r10.<android.content.Context: android.content.Context createDeviceProtectedStorageContext()>();

        r12 = virtualinvoke $r3.<android.content.Context: java.io.File getCodeCacheDir()>();

        if r12 == null goto label6;

     label3:
        i0 = staticinvoke <android.os.Process: int myUid()>();

        $r4 = staticinvoke <android.app.ActivityThread: android.content.pm.IPackageManager getPackageManager()>();

        $r5 = interfaceinvoke $r4.<android.content.pm.IPackageManager: java.lang.String[] getPackagesForUid(int)>(i0);

        if $r5 == null goto label4;

        staticinvoke <android.graphics.HardwareRenderer: void setupDiskCache(java.io.File)>(r12);

        staticinvoke <android.renderscript.RenderScriptCacheDir: void setupDiskCache(java.io.File)>(r12);

     label4:
        goto label7;

     label5:
        $r8 := @caughtexception;

        staticinvoke <android.os.Trace: void traceEnd(long)>(64L);

        $r9 = virtualinvoke $r8.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r9;

     label6:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityThread", "Unable to use shader/script cache: missing code-cache directory");

     label7:
        $r14 = staticinvoke <android.os.GraphicsEnvironment: android.os.GraphicsEnvironment getInstance()>();

        $r15 = r0.<android.app.ActivityThread: android.os.Bundle mCoreSettings>;

        virtualinvoke $r14.<android.os.GraphicsEnvironment: void setup(android.content.Context,android.os.Bundle)>(r10, $r15);

        staticinvoke <android.os.Trace: void traceEnd(long)>(64L);

        return;

        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public static android.app.ActivityThread systemMain()
    {
        boolean $z0;
        android.app.ActivityThread $r1;

        $z0 = staticinvoke <android.app.ActivityManager: boolean isHighEndGfx()>();

        if $z0 != 0 goto label1;

        staticinvoke <android.view.ThreadedRenderer: void disable(boolean)>(1);

        goto label2;

     label1:
        staticinvoke <android.view.ThreadedRenderer: void enableForegroundTrimming()>();

     label2:
        $r1 = new android.app.ActivityThread;

        specialinvoke $r1.<android.app.ActivityThread: void <init>()>();

        specialinvoke $r1.<android.app.ActivityThread: void attach(boolean,long)>(1, 0L);

        return $r1;
    }

    private boolean updateDebugViewAttributeState()
    {
        android.app.ActivityThread r0;
        boolean z0, $z2, z3, z4, $z5;
        android.os.Bundle r1, $r2;
        java.lang.String $r3, $r4, r9;
        android.content.pm.ApplicationInfo $r5, $r7;
        android.app.ActivityThread$AppBindData $r6, r8;
        int $i0;

        r0 := @this: android.app.ActivityThread;

        z0 = <android.view.View: boolean sDebugViewAttributes>;

        $r2 = r0.<android.app.ActivityThread: android.os.Bundle mCoreSettings>;

        $r3 = virtualinvoke $r2.<android.os.Bundle: java.lang.String getString(java.lang.String,java.lang.String)>("debug_view_attributes_application_package", "");

        <android.view.View: java.lang.String sDebugViewAttributesApplicationPackage> = $r3;

        r8 = r0.<android.app.ActivityThread: android.app.ActivityThread$AppBindData mBoundApplication>;

        if r8 == null goto label1;

        $r5 = r8.<android.app.ActivityThread$AppBindData: android.content.pm.ApplicationInfo appInfo>;

        if $r5 == null goto label1;

        $r6 = r0.<android.app.ActivityThread: android.app.ActivityThread$AppBindData mBoundApplication>;

        $r7 = $r6.<android.app.ActivityThread$AppBindData: android.content.pm.ApplicationInfo appInfo>;

        r9 = $r7.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        goto label2;

     label1:
        r9 = "<unknown-app>";

     label2:
        r1 = r0.<android.app.ActivityThread: android.os.Bundle mCoreSettings>;

        $i0 = virtualinvoke r1.<android.os.Bundle: int getInt(java.lang.String,int)>("debug_view_attributes", 0);

        if $i0 != 0 goto label4;

        $r4 = <android.view.View: java.lang.String sDebugViewAttributesApplicationPackage>;

        $z2 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r9);

        if $z2 == 0 goto label3;

        goto label4;

     label3:
        z3 = 0;

        goto label5;

     label4:
        z3 = 1;

     label5:
        <android.view.View: boolean sDebugViewAttributes> = z3;

        z4 = 0;

        $z5 = <android.view.View: boolean sDebugViewAttributes>;

        if z0 == $z5 goto label6;

        z4 = 1;

     label6:
        return z4;
    }

    private void updateDefaultDensity()
    {
        android.app.ActivityThread r0;
        int i0, $i1;
        boolean $z0;

        r0 := @this: android.app.ActivityThread;

        i0 = r0.<android.app.ActivityThread: int mCurDefaultDisplayDpi>;

        $z0 = r0.<android.app.ActivityThread: boolean mDensityCompatMode>;

        if $z0 != 0 goto label1;

        if i0 == 0 goto label1;

        $i1 = <android.util.DisplayMetrics: int DENSITY_DEVICE>;

        if i0 == $i1 goto label1;

        <android.util.DisplayMetrics: int DENSITY_DEVICE> = i0;

        staticinvoke <android.graphics.Bitmap: void setDefaultDensity(int)>(i0);

     label1:
        return;
    }

    public static void updateHttpProxy(android.content.Context)
    {
        android.content.Context r0;
        android.net.ConnectivityManager $r1;
        android.net.ProxyInfo $r2;

        r0 := @parameter0: android.content.Context;

        $r1 = staticinvoke <android.net.ConnectivityManager: android.net.ConnectivityManager 'from'(android.content.Context)>(r0);

        $r2 = virtualinvoke $r1.<android.net.ConnectivityManager: android.net.ProxyInfo getDefaultProxy()>();

        staticinvoke <android.net.Proxy: void setHttpProxySystemProperty(android.net.ProxyInfo)>($r2);

        return;
    }

    private void updateLocaleListFromAppContext(android.content.Context, android.os.LocaleList)
    {
        android.app.ActivityThread r0;
        android.os.LocaleList r1, $r4, $r5;
        int i0, i1;
        android.content.res.Resources $r2;
        android.content.res.Configuration $r3;
        java.util.Locale $r6, r8;
        boolean $z0;
        android.content.Context r7;

        r0 := @this: android.app.ActivityThread;

        r7 := @parameter0: android.content.Context;

        r1 := @parameter1: android.os.LocaleList;

        $r2 = virtualinvoke r7.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $r4 = virtualinvoke $r3.<android.content.res.Configuration: android.os.LocaleList getLocales()>();

        r8 = virtualinvoke $r4.<android.os.LocaleList: java.util.Locale get(int)>(0);

        i0 = virtualinvoke r1.<android.os.LocaleList: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r6 = virtualinvoke r1.<android.os.LocaleList: java.util.Locale get(int)>(i1);

        $z0 = virtualinvoke r8.<java.util.Locale: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label2;

        staticinvoke <android.os.LocaleList: void setDefault(android.os.LocaleList,int)>(r1, i1);

        return;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r5 = new android.os.LocaleList;

        specialinvoke $r5.<android.os.LocaleList: void <init>(java.util.Locale,android.os.LocaleList)>(r8, r1);

        staticinvoke <android.os.LocaleList: void setDefault(android.os.LocaleList)>($r5);

        return;
    }

    private void updateVisibility(android.app.ActivityThread$ActivityClientRecord, boolean)
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$ActivityClientRecord r1;
        boolean z0, $z1, $z2, $z3;
        android.view.View r2;
        android.app.Activity $r3, $r4, $r5, $r6, $r8, $r9, $r10;
        int $i0, $i1, $i2, $i3;
        android.content.res.Configuration $r7, $r11;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.app.ActivityThread$ActivityClientRecord;

        z0 := @parameter1: boolean;

        $r3 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        r2 = $r3.<android.app.Activity: android.view.View mDecor>;

        if r2 == null goto label3;

        if z0 == 0 goto label2;

        $r6 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $z2 = $r6.<android.app.Activity: boolean mVisibleFromServer>;

        if $z2 != 0 goto label1;

        $r8 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r8.<android.app.Activity: boolean mVisibleFromServer> = 1;

        $i2 = r0.<android.app.ActivityThread: int mNumVisibleActivities>;

        $i3 = $i2 + 1;

        r0.<android.app.ActivityThread: int mNumVisibleActivities> = $i3;

        $r9 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $z3 = $r9.<android.app.Activity: boolean mVisibleFromClient>;

        if $z3 == 0 goto label1;

        $r10 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        virtualinvoke $r10.<android.app.Activity: void makeVisible()>();

     label1:
        $r11 = r1.<android.app.ActivityThread$ActivityClientRecord: android.content.res.Configuration newConfig>;

        if $r11 == null goto label3;

        $r7 = r1.<android.app.ActivityThread$ActivityClientRecord: android.content.res.Configuration newConfig>;

        specialinvoke r0.<android.app.ActivityThread: void performConfigurationChangedForActivity(android.app.ActivityThread$ActivityClientRecord,android.content.res.Configuration)>(r1, $r7);

        r1.<android.app.ActivityThread$ActivityClientRecord: android.content.res.Configuration newConfig> = null;

        goto label3;

     label2:
        $r4 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $z1 = $r4.<android.app.Activity: boolean mVisibleFromServer>;

        if $z1 == 0 goto label3;

        $r5 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r5.<android.app.Activity: boolean mVisibleFromServer> = 0;

        $i0 = r0.<android.app.ActivityThread: int mNumVisibleActivities>;

        $i1 = $i0 - 1;

        r0.<android.app.ActivityThread: int mNumVisibleActivities> = $i1;

        virtualinvoke r2.<android.view.View: void setVisibility(int)>(4);

     label3:
        return;
    }

    private void updateVmProcessState(int)
    {
        android.app.ActivityThread r0;
        dalvik.system.VMRuntime $r1;
        int i0;
        byte b1;

        r0 := @this: android.app.ActivityThread;

        i0 := @parameter0: int;

        if i0 > 6 goto label1;

        b1 = 0;

        goto label2;

     label1:
        b1 = 1;

     label2:
        $r1 = staticinvoke <dalvik.system.VMRuntime: dalvik.system.VMRuntime getRuntime()>();

        virtualinvoke $r1.<dalvik.system.VMRuntime: void updateProcessState(int)>(b1);

        return;
    }

    public final android.content.IContentProvider acquireExistingProvider(android.content.Context, java.lang.String, int, boolean)
    {
        android.app.ActivityThread r0;
        int i0;
        boolean z0, $z1;
        android.util.ArrayMap $r1, $r3, r14;
        java.lang.Object $r2, $r4;
        java.lang.String $r10, r13;
        java.lang.Throwable $r11;
        android.content.Context r12;
        android.app.ActivityThread$ProviderKey r15;
        android.app.ActivityThread$ProviderClientRecord r16;
        android.content.IContentProvider r17;
        android.os.IBinder r18;
        java.lang.StringBuilder r19;
        android.app.ActivityThread$ProviderRefCount r20;

        r0 := @this: android.app.ActivityThread;

        r12 := @parameter0: android.content.Context;

        r13 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        r14 = r0.<android.app.ActivityThread: android.util.ArrayMap mProviderMap>;

        entermonitor r14;

     label01:
        r15 = new android.app.ActivityThread$ProviderKey;

        specialinvoke r15.<android.app.ActivityThread$ProviderKey: void <init>(java.lang.String,int)>(r13, i0);

        $r1 = r0.<android.app.ActivityThread: android.util.ArrayMap mProviderMap>;

        $r2 = virtualinvoke $r1.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r15);

        r16 = (android.app.ActivityThread$ProviderClientRecord) $r2;

     label02:
        if r16 != null goto label05;

     label03:
        exitmonitor r14;

     label04:
        return null;

     label05:
        r17 = r16.<android.app.ActivityThread$ProviderClientRecord: android.content.IContentProvider mProvider>;

        r18 = interfaceinvoke r17.<android.content.IContentProvider: android.os.IBinder asBinder()>();

        $z1 = interfaceinvoke r18.<android.os.IBinder: boolean isBinderAlive()>();

        if $z1 != 0 goto label07;

        r19 = new java.lang.StringBuilder;

        specialinvoke r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Acquiring provider ");

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for user ");

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": existing object\'s process dead");

        $r10 = virtualinvoke r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ActivityThread", $r10);

        virtualinvoke r0.<android.app.ActivityThread: void handleUnstableProviderDiedLocked(android.os.IBinder,boolean)>(r18, 1);

        exitmonitor r14;

     label06:
        return null;

     label07:
        $r3 = r0.<android.app.ActivityThread: android.util.ArrayMap mProviderRefCountMap>;

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r18);

        r20 = (android.app.ActivityThread$ProviderRefCount) $r4;

     label08:
        if r20 == null goto label10;

     label09:
        specialinvoke r0.<android.app.ActivityThread: void incProviderRefLocked(android.app.ActivityThread$ProviderRefCount,boolean)>(r20, z0);

     label10:
        exitmonitor r14;

     label11:
        return r17;

     label12:
        $r11 := @caughtexception;

     label13:
        exitmonitor r14;

     label14:
        throw $r11;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label07 to label08 with label12;
        catch java.lang.Throwable from label09 to label10 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public final android.content.IContentProvider acquireProvider(android.content.Context, java.lang.String, int, boolean)
    {
        android.app.ActivityThread r0;
        java.lang.String r1, $r5, $r14, $r18;
        int i0;
        boolean z0, $z1, $z2;
        android.app.ContentProviderHolder r2, $r7;
        android.app.IActivityManager $r3;
        android.app.ActivityThread$ApplicationThread $r4;
        android.content.pm.ProviderInfo $r6;
        android.content.IContentProvider $r8, r23;
        android.os.UserManager $r9;
        java.lang.StringBuilder $r10, $r15;
        java.lang.Throwable $r19;
        android.os.RemoteException $r20;
        java.lang.RuntimeException $r21;
        android.content.Context r22;
        java.lang.Object r24;

        r0 := @this: android.app.ActivityThread;

        r22 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        r23 = virtualinvoke r0.<android.app.ActivityThread: android.content.IContentProvider acquireExistingProvider(android.content.Context,java.lang.String,int,boolean)>(r22, r1, i0, z0);

        if r23 == null goto label01;

        return r23;

     label01:
        r24 = specialinvoke r0.<android.app.ActivityThread: java.lang.Object getGetProviderLock(java.lang.String,int)>(r1, i0);

        entermonitor r24;

     label02:
        $r3 = staticinvoke <android.app.ActivityManager: android.app.IActivityManager getService()>();

        $r4 = virtualinvoke r0.<android.app.ActivityThread: android.app.ActivityThread$ApplicationThread getApplicationThread()>();

        $r5 = virtualinvoke r22.<android.content.Context: java.lang.String getOpPackageName()>();

        r2 = interfaceinvoke $r3.<android.app.IActivityManager: android.app.ContentProviderHolder getContentProvider(android.app.IApplicationThread,java.lang.String,java.lang.String,int,boolean)>($r4, $r5, r1, i0, z0);

        exitmonitor r24;

     label03:
        if r2 != null goto label06;

        $r9 = staticinvoke <android.os.UserManager: android.os.UserManager get(android.content.Context)>(r22);

        $z2 = virtualinvoke $r9.<android.os.UserManager: boolean isUserUnlocked(int)>(i0);

        if $z2 == 0 goto label04;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to find provider info for ");

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ActivityThread", $r18);

        goto label05;

     label04:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to find provider info for ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (user not unlocked)");

        $r14 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityThread", $r14);

     label05:
        return null;

     label06:
        $r6 = r2.<android.app.ContentProviderHolder: android.content.pm.ProviderInfo info>;

        $z1 = r2.<android.app.ContentProviderHolder: boolean noReleaseNeeded>;

        $r7 = specialinvoke r0.<android.app.ActivityThread: android.app.ContentProviderHolder installProvider(android.content.Context,android.app.ContentProviderHolder,android.content.pm.ProviderInfo,boolean,boolean,boolean)>(r22, r2, $r6, 1, $z1, z0);

        $r8 = $r7.<android.app.ContentProviderHolder: android.content.IContentProvider provider>;

        return $r8;

     label07:
        $r19 := @caughtexception;

     label08:
        exitmonitor r24;

     label09:
        throw $r19;

     label10:
        $r20 := @caughtexception;

        $r21 = virtualinvoke $r20.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r21;

        catch android.os.RemoteException from label01 to label02 with label10;
        catch java.lang.Throwable from label02 to label03 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
        catch android.os.RemoteException from label09 to label10 with label10;
    }

    final void appNotRespondingViaProvider(android.os.IBinder)
    {
        android.app.ActivityThread r0;
        android.util.ArrayMap r1, $r2;
        java.lang.Object $r3;
        android.app.IActivityManager $r4;
        android.app.ContentProviderHolder $r5;
        android.os.IBinder $r6, r10;
        android.os.RemoteException $r7;
        java.lang.RuntimeException $r8;
        java.lang.Throwable $r9;
        android.app.ActivityThread$ProviderRefCount r11;

        r0 := @this: android.app.ActivityThread;

        r10 := @parameter0: android.os.IBinder;

        r1 = r0.<android.app.ActivityThread: android.util.ArrayMap mProviderMap>;

        entermonitor r1;

     label01:
        $r2 = r0.<android.app.ActivityThread: android.util.ArrayMap mProviderRefCountMap>;

        $r3 = virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r10);

        r11 = (android.app.ActivityThread$ProviderRefCount) $r3;

     label02:
        if r11 == null goto label07;

     label03:
        $r4 = staticinvoke <android.app.ActivityManager: android.app.IActivityManager getService()>();

        $r5 = r11.<android.app.ActivityThread$ProviderRefCount: android.app.ContentProviderHolder holder>;

        $r6 = $r5.<android.app.ContentProviderHolder: android.os.IBinder connection>;

        interfaceinvoke $r4.<android.app.IActivityManager: void appNotRespondingViaProvider(android.os.IBinder)>($r6);

     label04:
        goto label07;

     label05:
        $r7 := @caughtexception;

     label06:
        $r8 = virtualinvoke $r7.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r8;

     label07:
        exitmonitor r1;

     label08:
        return;

     label09:
        $r9 := @caughtexception;

     label10:
        exitmonitor r1;

     label11:
        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch android.os.RemoteException from label03 to label04 with label05;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    final android.content.res.Configuration applyCompatConfiguration(int)
    {
        android.app.ActivityThread r0;
        int i0;
        android.content.res.Configuration $r1, $r2, $r3, $r4, $r6, r7;
        android.app.ResourcesManager $r5;
        boolean $z0;

        r0 := @this: android.app.ActivityThread;

        i0 := @parameter0: int;

        r7 = r0.<android.app.ActivityThread: android.content.res.Configuration mConfiguration>;

        $r1 = r0.<android.app.ActivityThread: android.content.res.Configuration mCompatConfiguration>;

        if $r1 != null goto label1;

        $r6 = new android.content.res.Configuration;

        specialinvoke $r6.<android.content.res.Configuration: void <init>()>();

        r0.<android.app.ActivityThread: android.content.res.Configuration mCompatConfiguration> = $r6;

     label1:
        $r3 = r0.<android.app.ActivityThread: android.content.res.Configuration mCompatConfiguration>;

        $r2 = r0.<android.app.ActivityThread: android.content.res.Configuration mConfiguration>;

        virtualinvoke $r3.<android.content.res.Configuration: void setTo(android.content.res.Configuration)>($r2);

        $r5 = r0.<android.app.ActivityThread: android.app.ResourcesManager mResourcesManager>;

        $r4 = r0.<android.app.ActivityThread: android.content.res.Configuration mCompatConfiguration>;

        $z0 = virtualinvoke $r5.<android.app.ResourcesManager: boolean applyCompatConfigurationLocked(int,android.content.res.Configuration)>(i0, $r4);

        if $z0 == 0 goto label2;

        r7 = r0.<android.app.ActivityThread: android.content.res.Configuration mCompatConfiguration>;

     label2:
        return r7;
    }

    android.content.res.Configuration applyConfigCompatMainThread(int, android.content.res.Configuration, android.content.res.CompatibilityInfo)
    {
        android.app.ActivityThread r0;
        int i0;
        android.content.res.Configuration r1, $r3, r4;
        android.content.res.CompatibilityInfo r2;
        boolean $z0;

        r0 := @this: android.app.ActivityThread;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.res.Configuration;

        r2 := @parameter2: android.content.res.CompatibilityInfo;

        if r1 != null goto label1;

        return null;

     label1:
        r4 = r1;

        $z0 = virtualinvoke r2.<android.content.res.CompatibilityInfo: boolean supportsScreen()>();

        if $z0 != 0 goto label2;

        $r3 = r0.<android.app.ActivityThread: android.content.res.Configuration mMainThreadConfig>;

        virtualinvoke $r3.<android.content.res.Configuration: void setTo(android.content.res.Configuration)>(r1);

        r4 = r0.<android.app.ActivityThread: android.content.res.Configuration mMainThreadConfig>;

        virtualinvoke r2.<android.content.res.CompatibilityInfo: void applyToConfiguration(int,android.content.res.Configuration)>(i0, r4);

     label2:
        return r4;
    }

    public final void applyConfigurationToResources(android.content.res.Configuration)
    {
        android.app.ActivityThread r0;
        android.app.ResourcesManager r1, $r2;
        java.lang.Throwable $r3;
        android.content.res.Configuration r4;

        r0 := @this: android.app.ActivityThread;

        r4 := @parameter0: android.content.res.Configuration;

        r1 = r0.<android.app.ActivityThread: android.app.ResourcesManager mResourcesManager>;

        entermonitor r1;

     label1:
        $r2 = r0.<android.app.ActivityThread: android.app.ResourcesManager mResourcesManager>;

        virtualinvoke $r2.<android.app.ResourcesManager: boolean applyConfigurationToResourcesLocked(android.content.res.Configuration,android.content.res.CompatibilityInfo)>(r4, null);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    java.util.ArrayList collectComponentCallbacks(boolean, android.content.res.Configuration)
    {
        android.app.ActivityThread r0;
        boolean z0, $z2, $z4, $z6;
        android.app.ActivityThread$ActivityClientRecord r2;
        android.app.Activity r3, $r20;
        android.content.res.Configuration r4, r26;
        java.util.ArrayList $r5, $r6, $r21;
        android.util.ArrayMap $r7, $r8, $r9, $r10, $r14, $r16, r29;
        java.lang.Object $r11, $r15, $r17, $r22;
        android.app.ActivityThread$ProviderClientRecord $r12;
        android.content.ContentProvider $r13;
        android.app.LoadedApk $r18;
        int $i0, i1, i2, i3, i4, i5, i6, i7, i8;
        android.content.res.CompatibilityInfo $r19;
        android.content.ComponentCallbacks2 $r23, r28;
        java.lang.Throwable $r24, $r25;
        android.app.ResourcesManager r27;

        r0 := @this: android.app.ActivityThread;

        z0 := @parameter0: boolean;

        r26 := @parameter1: android.content.res.Configuration;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r27 = r0.<android.app.ActivityThread: android.app.ResourcesManager mResourcesManager>;

        entermonitor r27;

     label01:
        $r6 = r0.<android.app.ActivityThread: java.util.ArrayList mAllApplications>;

        i1 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

     label02:
        i2 = 0;

     label03:
        if i2 >= i1 goto label06;

     label04:
        $r21 = r0.<android.app.ActivityThread: java.util.ArrayList mAllApplications>;

        $r22 = virtualinvoke $r21.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r23 = (android.content.ComponentCallbacks2) $r22;

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r23);

     label05:
        i2 = i2 + 1;

        goto label03;

     label06:
        $r7 = r0.<android.app.ActivityThread: android.util.ArrayMap mActivities>;

        i3 = virtualinvoke $r7.<android.util.ArrayMap: int size()>();

     label07:
        i4 = 0;

     label08:
        if i4 >= i3 goto label19;

     label09:
        $r16 = r0.<android.app.ActivityThread: android.util.ArrayMap mActivities>;

        $r17 = virtualinvoke $r16.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i4);

        r2 = (android.app.ActivityThread$ActivityClientRecord) $r17;

        r3 = r2.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

     label10:
        if r3 == null goto label18;

     label11:
        $i0 = r0.<android.app.ActivityThread: int mCurDefaultDisplayDpi>;

        $r18 = r2.<android.app.ActivityThread$ActivityClientRecord: android.app.LoadedApk packageInfo>;

        $r19 = virtualinvoke $r18.<android.app.LoadedApk: android.content.res.CompatibilityInfo getCompatibilityInfo()>();

        r4 = virtualinvoke r0.<android.app.ActivityThread: android.content.res.Configuration applyConfigCompatMainThread(int,android.content.res.Configuration,android.content.res.CompatibilityInfo)>($i0, r26, $r19);

        $r20 = r2.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $z4 = $r20.<android.app.Activity: boolean mFinished>;

        if $z4 != 0 goto label16;

     label12:
        if z0 != 0 goto label14;

     label13:
        $z6 = r2.<android.app.ActivityThread$ActivityClientRecord: boolean paused>;

        if $z6 != 0 goto label16;

     label14:
        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);

     label15:
        goto label18;

     label16:
        if r4 == null goto label18;

     label17:
        r2.<android.app.ActivityThread$ActivityClientRecord: android.content.res.Configuration newConfig> = r4;

     label18:
        i4 = i4 + 1;

        goto label08;

     label19:
        $r8 = r0.<android.app.ActivityThread: android.util.ArrayMap mServices>;

        i5 = virtualinvoke $r8.<android.util.ArrayMap: int size()>();

     label20:
        i6 = 0;

     label21:
        if i6 >= i5 goto label25;

     label22:
        $r14 = r0.<android.app.ActivityThread: android.util.ArrayMap mServices>;

        $r15 = virtualinvoke $r14.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i6);

        r28 = (android.content.ComponentCallbacks2) $r15;

        $z2 = r28 instanceof android.inputmethodservice.InputMethodService;

        if $z2 == 0 goto label23;

        r0.<android.app.ActivityThread: boolean mHasImeComponent> = 1;

     label23:
        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r28);

     label24:
        i6 = i6 + 1;

        goto label21;

     label25:
        exitmonitor r27;

     label26:
        r29 = r0.<android.app.ActivityThread: android.util.ArrayMap mProviderMap>;

        entermonitor r29;

     label27:
        $r9 = r0.<android.app.ActivityThread: android.util.ArrayMap mLocalProviders>;

        i7 = virtualinvoke $r9.<android.util.ArrayMap: int size()>();

     label28:
        i8 = 0;

     label29:
        if i8 >= i7 goto label32;

     label30:
        $r10 = r0.<android.app.ActivityThread: android.util.ArrayMap mLocalProviders>;

        $r11 = virtualinvoke $r10.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i8);

        $r12 = (android.app.ActivityThread$ProviderClientRecord) $r11;

        $r13 = $r12.<android.app.ActivityThread$ProviderClientRecord: android.content.ContentProvider mLocalProvider>;

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r13);

     label31:
        i8 = i8 + 1;

        goto label29;

     label32:
        exitmonitor r29;

     label33:
        return $r5;

     label34:
        $r24 := @caughtexception;

     label35:
        exitmonitor r29;

     label36:
        throw $r24;

     label37:
        $r25 := @caughtexception;

     label38:
        exitmonitor r27;

     label39:
        throw $r25;

        catch java.lang.Throwable from label01 to label02 with label37;
        catch java.lang.Throwable from label04 to label05 with label37;
        catch java.lang.Throwable from label06 to label07 with label37;
        catch java.lang.Throwable from label09 to label10 with label37;
        catch java.lang.Throwable from label11 to label12 with label37;
        catch java.lang.Throwable from label13 to label14 with label37;
        catch java.lang.Throwable from label14 to label15 with label37;
        catch java.lang.Throwable from label17 to label18 with label37;
        catch java.lang.Throwable from label19 to label20 with label37;
        catch java.lang.Throwable from label22 to label23 with label37;
        catch java.lang.Throwable from label23 to label24 with label37;
        catch java.lang.Throwable from label25 to label26 with label37;
        catch java.lang.Throwable from label27 to label28 with label34;
        catch java.lang.Throwable from label30 to label31 with label34;
        catch java.lang.Throwable from label32 to label33 with label34;
        catch java.lang.Throwable from label35 to label36 with label34;
        catch java.lang.Throwable from label38 to label39 with label37;
    }

    final void completeRemoveProvider(android.app.ActivityThread$ProviderRefCount)
    {
        android.app.ActivityThread r0;
        android.util.ArrayMap r1, $r5, $r8, $r12, $r17, $r19;
        android.os.IBinder r2, $r11, $r16;
        boolean $z0;
        android.app.ContentProviderHolder $r3, $r10;
        android.content.IContentProvider $r4, $r15;
        java.lang.Object $r6, $r13;
        android.app.ActivityThread$ProviderRefCount $r7, r23;
        int $i0, i1;
        android.app.IActivityManager $r9;
        android.app.ActivityThread$ProviderClientRecord $r14;
        android.os.RemoteException $r21;
        java.lang.Throwable $r22;

        r0 := @this: android.app.ActivityThread;

        r23 := @parameter0: android.app.ActivityThread$ProviderRefCount;

        r1 = r0.<android.app.ActivityThread: android.util.ArrayMap mProviderMap>;

        entermonitor r1;

     label01:
        $z0 = r23.<android.app.ActivityThread$ProviderRefCount: boolean removePending>;

        if $z0 != 0 goto label03;

        exitmonitor r1;

     label02:
        return;

     label03:
        r23.<android.app.ActivityThread$ProviderRefCount: boolean removePending> = 0;

        $r3 = r23.<android.app.ActivityThread$ProviderRefCount: android.app.ContentProviderHolder holder>;

        $r4 = $r3.<android.app.ContentProviderHolder: android.content.IContentProvider provider>;

        r2 = interfaceinvoke $r4.<android.content.IContentProvider: android.os.IBinder asBinder()>();

        $r5 = r0.<android.app.ActivityThread: android.util.ArrayMap mProviderRefCountMap>;

        $r6 = virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r2);

        $r7 = (android.app.ActivityThread$ProviderRefCount) $r6;

        if $r7 != r23 goto label04;

        $r19 = r0.<android.app.ActivityThread: android.util.ArrayMap mProviderRefCountMap>;

        virtualinvoke $r19.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r2);

     label04:
        $r8 = r0.<android.app.ActivityThread: android.util.ArrayMap mProviderMap>;

        $i0 = virtualinvoke $r8.<android.util.ArrayMap: int size()>();

        i1 = $i0 - 1;

     label05:
        if i1 < 0 goto label08;

     label06:
        $r12 = r0.<android.app.ActivityThread: android.util.ArrayMap mProviderMap>;

        $r13 = virtualinvoke $r12.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i1);

        $r14 = (android.app.ActivityThread$ProviderClientRecord) $r13;

        $r15 = $r14.<android.app.ActivityThread$ProviderClientRecord: android.content.IContentProvider mProvider>;

        $r16 = interfaceinvoke $r15.<android.content.IContentProvider: android.os.IBinder asBinder()>();

        if $r16 != r2 goto label07;

        $r17 = r0.<android.app.ActivityThread: android.util.ArrayMap mProviderMap>;

        virtualinvoke $r17.<android.util.ArrayMap: java.lang.Object removeAt(int)>(i1);

     label07:
        i1 = i1 + -1;

        goto label05;

     label08:
        exitmonitor r1;

     label09:
        $r9 = staticinvoke <android.app.ActivityManager: android.app.IActivityManager getService()>();

        $r10 = r23.<android.app.ActivityThread$ProviderRefCount: android.app.ContentProviderHolder holder>;

        $r11 = $r10.<android.app.ContentProviderHolder: android.os.IBinder connection>;

        interfaceinvoke $r9.<android.app.IActivityManager: void removeContentProvider(android.os.IBinder,boolean)>($r11, 0);

     label10:
        goto label12;

     label11:
        $r21 := @caughtexception;

     label12:
        return;

     label13:
        $r22 := @caughtexception;

     label14:
        exitmonitor r1;

     label15:
        throw $r22;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label04 to label05 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch android.os.RemoteException from label09 to label10 with label11;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    public void countLaunchingActivities(int)
    {
        android.app.ActivityThread r0;
        int i0;
        java.util.concurrent.atomic.AtomicInteger $r1;

        r0 := @this: android.app.ActivityThread;

        i0 := @parameter0: int;

        $r1 = r0.<android.app.ActivityThread: java.util.concurrent.atomic.AtomicInteger mNumLaunchingActivities>;

        virtualinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: int getAndAdd(int)>(i0);

        return;
    }

    public android.app.ContextImpl createSystemUiContext(int)
    {
        android.app.ActivityThread r0;
        int i0;
        android.app.ContextImpl $r1, $r2;

        r0 := @this: android.app.ActivityThread;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.app.ActivityThread: android.app.ContextImpl getSystemUiContext()>();

        $r2 = staticinvoke <android.app.ContextImpl: android.app.ContextImpl createSystemUiContext(android.app.ContextImpl,int)>($r1, i0);

        return $r2;
    }

    void doGcIfNeeded()
    {
        android.app.ActivityThread r0;

        r0 := @this: android.app.ActivityThread;

        virtualinvoke r0.<android.app.ActivityThread: void doGcIfNeeded(java.lang.String)>("bg");

        return;
    }

    void doGcIfNeeded(java.lang.String)
    {
        android.app.ActivityThread r0;
        java.lang.String r1;
        long l0, $l1, $l2;
        byte $b3;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: java.lang.String;

        r0.<android.app.ActivityThread: boolean mGcIdlerScheduled> = 0;

        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l1 = staticinvoke <com.android.internal.os.BinderInternal: long getLastGcTime()>();

        $l2 = $l1 + 5000L;

        $b3 = $l2 cmp l0;

        if $b3 >= 0 goto label1;

        staticinvoke <com.android.internal.os.BinderInternal: void forceGc(java.lang.String)>(r1);

     label1:
        return;
    }

    final void finishInstrumentation(int, android.os.Bundle)
    {
        android.app.ActivityThread r0;
        int i0;
        android.app.IActivityManager r1;
        android.app.ActivityThread$Profiler $r2, $r4, $r5;
        java.lang.String $r3;
        boolean $z0;
        android.os.ParcelFileDescriptor $r6;
        android.os.RemoteException $r7;
        java.lang.RuntimeException $r8;
        android.os.Bundle r9;
        android.app.ActivityThread$ApplicationThread $r10;

        r0 := @this: android.app.ActivityThread;

        i0 := @parameter0: int;

        r9 := @parameter1: android.os.Bundle;

        r1 = staticinvoke <android.app.ActivityManager: android.app.IActivityManager getService()>();

        $r2 = r0.<android.app.ActivityThread: android.app.ActivityThread$Profiler mProfiler>;

        $r3 = $r2.<android.app.ActivityThread$Profiler: java.lang.String profileFile>;

        if $r3 == null goto label1;

        $r4 = r0.<android.app.ActivityThread: android.app.ActivityThread$Profiler mProfiler>;

        $z0 = $r4.<android.app.ActivityThread$Profiler: boolean handlingProfiling>;

        if $z0 == 0 goto label1;

        $r5 = r0.<android.app.ActivityThread: android.app.ActivityThread$Profiler mProfiler>;

        $r6 = $r5.<android.app.ActivityThread$Profiler: android.os.ParcelFileDescriptor profileFd>;

        if $r6 != null goto label1;

        staticinvoke <android.os.Debug: void stopMethodTracing()>();

     label1:
        $r10 = r0.<android.app.ActivityThread: android.app.ActivityThread$ApplicationThread mAppThread>;

        interfaceinvoke r1.<android.app.IActivityManager: void finishInstrumentation(android.app.IApplicationThread,int,android.os.Bundle)>($r10, i0, r9);

     label2:
        return;

     label3:
        $r7 := @caughtexception;

        $r8 = virtualinvoke $r7.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r8;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.Map getActivitiesToBeDestroyed()
    {
        android.app.ActivityThread r0;
        java.util.Map $r1;

        r0 := @this: android.app.ActivityThread;

        $r1 = r0.<android.app.ActivityThread: java.util.Map mActivitiesToBeDestroyed>;

        return $r1;
    }

    public final android.app.Activity getActivity(android.os.IBinder)
    {
        android.app.ActivityThread r0;
        android.util.ArrayMap $r1;
        java.lang.Object $r2;
        android.os.IBinder r3;
        android.app.ActivityThread$ActivityClientRecord r4;
        android.app.Activity r5;

        r0 := @this: android.app.ActivityThread;

        r3 := @parameter0: android.os.IBinder;

        $r1 = r0.<android.app.ActivityThread: android.util.ArrayMap mActivities>;

        $r2 = virtualinvoke $r1.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r3);

        r4 = (android.app.ActivityThread$ActivityClientRecord) $r2;

        if r4 == null goto label1;

        r5 = r4.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        goto label2;

     label1:
        r5 = null;

     label2:
        return r5;
    }

    public android.app.ActivityThread$ActivityClientRecord getActivityClient(android.os.IBinder)
    {
        android.app.ActivityThread r0;
        android.os.IBinder r1;
        android.util.ArrayMap $r2;
        java.lang.Object $r3;
        android.app.ActivityThread$ActivityClientRecord $r4;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.os.IBinder;

        $r2 = r0.<android.app.ActivityThread: android.util.ArrayMap mActivities>;

        $r3 = virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (android.app.ActivityThread$ActivityClientRecord) $r3;

        return $r4;
    }

    public android.app.Application getApplication()
    {
        android.app.ActivityThread r0;
        android.app.Application $r1;

        r0 := @this: android.app.ActivityThread;

        $r1 = r0.<android.app.ActivityThread: android.app.Application mInitialApplication>;

        return $r1;
    }

    public android.app.ActivityThread$ApplicationThread getApplicationThread()
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$ApplicationThread $r1;

        r0 := @this: android.app.ActivityThread;

        $r1 = r0.<android.app.ActivityThread: android.app.ActivityThread$ApplicationThread mAppThread>;

        return $r1;
    }

    public android.content.res.Configuration getConfiguration()
    {
        android.app.ActivityThread r0;
        android.content.res.Configuration $r1;

        r0 := @this: android.app.ActivityThread;

        $r1 = r0.<android.app.ActivityThread: android.content.res.Configuration mConfiguration>;

        return $r1;
    }

    public android.os.Bundle getCoreSettings()
    {
        android.app.ActivityThread r0;
        android.os.Bundle $r1;

        r0 := @this: android.app.ActivityThread;

        $r1 = r0.<android.app.ActivityThread: android.os.Bundle mCoreSettings>;

        return $r1;
    }

    public java.util.concurrent.Executor getExecutor()
    {
        android.app.ActivityThread r0;
        java.util.concurrent.Executor $r1;

        r0 := @this: android.app.ActivityThread;

        $r1 = r0.<android.app.ActivityThread: java.util.concurrent.Executor mExecutor>;

        return $r1;
    }

    float getFloatCoreSetting(java.lang.String, float)
    {
        android.app.ActivityThread r0;
        android.app.ResourcesManager r1;
        android.os.Bundle $r2, $r3;
        java.lang.Throwable $r4;
        java.lang.String r5;
        float f0, f1;

        r0 := @this: android.app.ActivityThread;

        r5 := @parameter0: java.lang.String;

        f0 := @parameter1: float;

        r1 = r0.<android.app.ActivityThread: android.app.ResourcesManager mResourcesManager>;

        entermonitor r1;

     label1:
        $r2 = r0.<android.app.ActivityThread: android.os.Bundle mCoreSettings>;

        if $r2 == null goto label3;

        $r3 = r0.<android.app.ActivityThread: android.os.Bundle mCoreSettings>;

        f1 = virtualinvoke $r3.<android.os.Bundle: float getFloat(java.lang.String,float)>(r5, f0);

        exitmonitor r1;

     label2:
        return f1;

     label3:
        exitmonitor r1;

     label4:
        return f0;

     label5:
        $r4 := @caughtexception;

     label6:
        exitmonitor r1;

     label7:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    final android.os.Handler getHandler()
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$H $r1;

        r0 := @this: android.app.ActivityThread;

        $r1 = r0.<android.app.ActivityThread: android.app.ActivityThread$H mH>;

        return $r1;
    }

    public android.app.Instrumentation getInstrumentation()
    {
        android.app.ActivityThread r0;
        android.app.Instrumentation $r1;

        r0 := @this: android.app.ActivityThread;

        $r1 = r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        return $r1;
    }

    public int getIntCoreSetting(java.lang.String, int)
    {
        android.app.ActivityThread r0;
        android.app.ResourcesManager r1;
        android.os.Bundle $r2, $r3;
        java.lang.Throwable $r4;
        java.lang.String r5;
        int i0, i1;

        r0 := @this: android.app.ActivityThread;

        r5 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 = r0.<android.app.ActivityThread: android.app.ResourcesManager mResourcesManager>;

        entermonitor r1;

     label1:
        $r2 = r0.<android.app.ActivityThread: android.os.Bundle mCoreSettings>;

        if $r2 == null goto label3;

        $r3 = r0.<android.app.ActivityThread: android.os.Bundle mCoreSettings>;

        i1 = virtualinvoke $r3.<android.os.Bundle: int getInt(java.lang.String,int)>(r5, i0);

        exitmonitor r1;

     label2:
        return i1;

     label3:
        exitmonitor r1;

     label4:
        return i0;

     label5:
        $r4 := @caughtexception;

     label6:
        exitmonitor r1;

     label7:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public android.os.Looper getLooper()
    {
        android.app.ActivityThread r0;
        android.os.Looper $r1;

        r0 := @this: android.app.ActivityThread;

        $r1 = r0.<android.app.ActivityThread: android.os.Looper mLooper>;

        return $r1;
    }

    public final android.app.LoadedApk getPackageInfo(android.content.pm.ApplicationInfo, android.content.res.CompatibilityInfo, int)
    {
        android.app.ActivityThread r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        android.app.LoadedApk $r1;
        java.lang.StringBuilder $r2, $r11;
        java.lang.String $r4, $r15, r28, r29;
        android.app.ActivityThread$AppBindData $r9, $r14, $r18, $r22, $r23;
        java.lang.SecurityException $r10;
        android.content.pm.ApplicationInfo $r19, $r24, r25;
        boolean $z0, z1, z2, z3;
        android.content.res.CompatibilityInfo r26;

        r0 := @this: android.app.ActivityThread;

        r25 := @parameter0: android.content.pm.ApplicationInfo;

        r26 := @parameter1: android.content.res.CompatibilityInfo;

        i0 := @parameter2: int;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        if z1 == 0 goto label4;

        $i5 = r25.<android.content.pm.ApplicationInfo: int uid>;

        if $i5 == 0 goto label4;

        $i6 = r25.<android.content.pm.ApplicationInfo: int uid>;

        if $i6 == 1000 goto label4;

        $r22 = r0.<android.app.ActivityThread: android.app.ActivityThread$AppBindData mBoundApplication>;

        if $r22 == null goto label3;

        $i8 = r25.<android.content.pm.ApplicationInfo: int uid>;

        $r23 = r0.<android.app.ActivityThread: android.app.ActivityThread$AppBindData mBoundApplication>;

        $r24 = $r23.<android.app.ActivityThread$AppBindData: android.content.pm.ApplicationInfo appInfo>;

        $i7 = $r24.<android.content.pm.ApplicationInfo: int uid>;

        $z0 = staticinvoke <android.os.UserHandle: boolean isSameApp(int,int)>($i8, $i7);

        if $z0 != 0 goto label4;

     label3:
        z2 = 1;

        goto label5;

     label4:
        z2 = 0;

     label5:
        if z1 == 0 goto label6;

        $i4 = 1073741824 & i0;

        if $i4 == 0 goto label6;

        z3 = 1;

        goto label7;

     label6:
        z3 = 0;

     label7:
        $i9 = i0 & 3;

        if $i9 != 1 goto label9;

        if z2 == 0 goto label9;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requesting code from ");

        $r4 = r25.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (with uid ");

        $i2 = r25.<android.content.pm.ApplicationInfo: int uid>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        r28 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        r29 = r28;

        $r9 = r0.<android.app.ActivityThread: android.app.ActivityThread$AppBindData mBoundApplication>;

        if $r9 == null goto label8;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r28);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to be run in process ");

        $r14 = r0.<android.app.ActivityThread: android.app.ActivityThread$AppBindData mBoundApplication>;

        $r15 = $r14.<android.app.ActivityThread$AppBindData: java.lang.String processName>;

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (with uid ");

        $r18 = r0.<android.app.ActivityThread: android.app.ActivityThread$AppBindData mBoundApplication>;

        $r19 = $r18.<android.app.ActivityThread$AppBindData: android.content.pm.ApplicationInfo appInfo>;

        $i3 = $r19.<android.content.pm.ApplicationInfo: int uid>;

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        r29 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

     label8:
        $r10 = new java.lang.SecurityException;

        specialinvoke $r10.<java.lang.SecurityException: void <init>(java.lang.String)>(r29);

        throw $r10;

     label9:
        $r1 = specialinvoke r0.<android.app.ActivityThread: android.app.LoadedApk getPackageInfo(android.content.pm.ApplicationInfo,android.content.res.CompatibilityInfo,java.lang.ClassLoader,boolean,boolean,boolean)>(r25, r26, null, z2, z1, z3);

        return $r1;
    }

    public final android.app.LoadedApk getPackageInfo(java.lang.String, android.content.res.CompatibilityInfo, int)
    {
        android.app.ActivityThread r0;
        java.lang.String r1;
        android.content.res.CompatibilityInfo r2;
        int i0, $i1;
        android.app.LoadedApk $r3;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.content.res.CompatibilityInfo;

        i0 := @parameter2: int;

        $i1 = staticinvoke <android.os.UserHandle: int myUserId()>();

        $r3 = virtualinvoke r0.<android.app.ActivityThread: android.app.LoadedApk getPackageInfo(java.lang.String,android.content.res.CompatibilityInfo,int,int)>(r1, r2, i0, $i1);

        return $r3;
    }

    public final android.app.LoadedApk getPackageInfo(java.lang.String, android.content.res.CompatibilityInfo, int, int)
    {
        android.app.ActivityThread r0;
        int i0, $i1, $i2, $i3, $i4, i5;
        android.content.pm.ApplicationInfo r1, $r14;
        android.app.ResourcesManager r2;
        android.util.ArrayMap $r3, $r18;
        java.lang.Object $r4, $r17, $r19;
        android.app.LoadedApk $r5, r24;
        boolean $z0, $z1, z2;
        android.app.ActivityThread$AppBindData $r9, $r13;
        java.lang.String $r10, $r16, r21;
        java.lang.Throwable $r20;
        android.content.res.CompatibilityInfo r22;
        java.lang.ref.WeakReference r23;
        java.util.ArrayList r25;
        java.lang.SecurityException r26;
        java.lang.StringBuilder r27;

        r0 := @this: android.app.ActivityThread;

        r21 := @parameter0: java.lang.String;

        r22 := @parameter1: android.content.res.CompatibilityInfo;

        i0 := @parameter2: int;

        i5 := @parameter3: int;

        $i1 = staticinvoke <android.os.UserHandle: int myUserId()>();

        if $i1 == i5 goto label01;

        z2 = 1;

        goto label02;

     label01:
        z2 = 0;

     label02:
        if i5 >= 0 goto label03;

        i5 = staticinvoke <android.os.UserHandle: int myUserId()>();

        goto label03;

     label03:
        r1 = staticinvoke <android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfoAsUserCached(java.lang.String,int,int)>(r21, 268436480, i5);

        r2 = r0.<android.app.ActivityThread: android.app.ResourcesManager mResourcesManager>;

        entermonitor r2;

        if z2 == 0 goto label04;

        r23 = null;

        goto label08;

     label04:
        $i2 = i0 & 1;

        if $i2 == 0 goto label07;

     label05:
        $r18 = r0.<android.app.ActivityThread: android.util.ArrayMap mPackages>;

        $r19 = virtualinvoke $r18.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r21);

        r23 = (java.lang.ref.WeakReference) $r19;

     label06:
        goto label08;

     label07:
        $r3 = r0.<android.app.ActivityThread: android.util.ArrayMap mResourcePackages>;

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r21);

        r23 = (java.lang.ref.WeakReference) $r4;

     label08:
        if r23 == null goto label11;

     label09:
        $r17 = virtualinvoke r23.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r24 = (android.app.LoadedApk) $r17;

     label10:
        goto label12;

     label11:
        r24 = null;

     label12:
        if r1 == null goto label19;

        if r24 == null goto label19;

     label13:
        $z0 = staticinvoke <android.app.ActivityThread: boolean isLoadedApkResourceDirsUpToDate(android.app.LoadedApk,android.content.pm.ApplicationInfo)>(r24, r1);

        if $z0 != 0 goto label14;

        r25 = new java.util.ArrayList;

        specialinvoke r25.<java.util.ArrayList: void <init>()>();

        staticinvoke <android.app.LoadedApk: void makePaths(android.app.ActivityThread,android.content.pm.ApplicationInfo,java.util.List)>(r0, r1, r25);

        virtualinvoke r24.<android.app.LoadedApk: void updateApplicationInfo(android.content.pm.ApplicationInfo,java.util.List)>(r1, r25);

     label14:
        $z1 = virtualinvoke r24.<android.app.LoadedApk: boolean isSecurityViolation()>();

        if $z1 == 0 goto label17;

     label15:
        $i3 = i0 & 2;

        if $i3 == 0 goto label16;

        goto label17;

     label16:
        r26 = new java.lang.SecurityException;

        r27 = new java.lang.StringBuilder;

        specialinvoke r27.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requesting code from ");

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r21);

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to be run in process ");

        $r9 = r0.<android.app.ActivityThread: android.app.ActivityThread$AppBindData mBoundApplication>;

        $r10 = $r9.<android.app.ActivityThread$AppBindData: java.lang.String processName>;

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r13 = r0.<android.app.ActivityThread: android.app.ActivityThread$AppBindData mBoundApplication>;

        $r14 = $r13.<android.app.ActivityThread$AppBindData: android.content.pm.ApplicationInfo appInfo>;

        $i4 = $r14.<android.content.pm.ApplicationInfo: int uid>;

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r16 = virtualinvoke r27.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r26.<java.lang.SecurityException: void <init>(java.lang.String)>($r16);

        throw r26;

     label17:
        exitmonitor r2;

     label18:
        return r24;

     label19:
        exitmonitor r2;

     label20:
        if r1 == null goto label21;

        $r5 = virtualinvoke r0.<android.app.ActivityThread: android.app.LoadedApk getPackageInfo(android.content.pm.ApplicationInfo,android.content.res.CompatibilityInfo,int)>(r1, r22, i0);

        return $r5;

     label21:
        return null;

     label22:
        $r20 := @caughtexception;

     label23:
        exitmonitor r2;

     label24:
        throw $r20;

        catch java.lang.Throwable from label05 to label06 with label22;
        catch java.lang.Throwable from label07 to label08 with label22;
        catch java.lang.Throwable from label09 to label10 with label22;
        catch java.lang.Throwable from label13 to label14 with label22;
        catch java.lang.Throwable from label14 to label15 with label22;
        catch java.lang.Throwable from label16 to label17 with label22;
        catch java.lang.Throwable from label17 to label18 with label22;
        catch java.lang.Throwable from label19 to label20 with label22;
        catch java.lang.Throwable from label23 to label24 with label22;
    }

    public final android.app.LoadedApk getPackageInfoNoCheck(android.content.pm.ApplicationInfo, android.content.res.CompatibilityInfo)
    {
        android.app.ActivityThread r0;
        android.content.pm.ApplicationInfo r1;
        android.content.res.CompatibilityInfo r2;
        android.app.LoadedApk $r3;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.content.pm.ApplicationInfo;

        r2 := @parameter1: android.content.res.CompatibilityInfo;

        $r3 = specialinvoke r0.<android.app.ActivityThread: android.app.LoadedApk getPackageInfo(android.content.pm.ApplicationInfo,android.content.res.CompatibilityInfo,java.lang.ClassLoader,boolean,boolean,boolean)>(r1, r2, null, 0, 1, 0);

        return $r3;
    }

    public java.lang.String getProcessName()
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$AppBindData $r1;
        java.lang.String $r2;

        r0 := @this: android.app.ActivityThread;

        $r1 = r0.<android.app.ActivityThread: android.app.ActivityThread$AppBindData mBoundApplication>;

        $r2 = $r1.<android.app.ActivityThread$AppBindData: java.lang.String processName>;

        return $r2;
    }

    public java.lang.String getProfileFilePath()
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$Profiler $r1;
        java.lang.String $r2;

        r0 := @this: android.app.ActivityThread;

        $r1 = r0.<android.app.ActivityThread: android.app.ActivityThread$Profiler mProfiler>;

        $r2 = $r1.<android.app.ActivityThread$Profiler: java.lang.String profileFile>;

        return $r2;
    }

    public java.lang.String getStringCoreSetting(java.lang.String, java.lang.String)
    {
        android.app.ActivityThread r0;
        java.lang.String r1, r6, r7;
        android.app.ResourcesManager r2;
        android.os.Bundle $r3, $r4;
        java.lang.Throwable $r5;

        r0 := @this: android.app.ActivityThread;

        r6 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 = r0.<android.app.ActivityThread: android.app.ResourcesManager mResourcesManager>;

        entermonitor r2;

     label1:
        $r3 = r0.<android.app.ActivityThread: android.os.Bundle mCoreSettings>;

        if $r3 == null goto label3;

        $r4 = r0.<android.app.ActivityThread: android.os.Bundle mCoreSettings>;

        r7 = virtualinvoke $r4.<android.os.Bundle: java.lang.String getString(java.lang.String,java.lang.String)>(r6, r1);

        exitmonitor r2;

     label2:
        return r7;

     label3:
        exitmonitor r2;

     label4:
        return r1;

     label5:
        $r5 := @caughtexception;

     label6:
        exitmonitor r2;

     label7:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public android.app.ContextImpl getSystemContext()
    {
        android.app.ActivityThread r0;
        android.app.ContextImpl $r1, $r2, r4;
        java.lang.Throwable $r3;

        r0 := @this: android.app.ActivityThread;

        entermonitor r0;

     label1:
        $r1 = r0.<android.app.ActivityThread: android.app.ContextImpl mSystemContext>;

        if $r1 != null goto label2;

        $r2 = staticinvoke <android.app.ContextImpl: android.app.ContextImpl createSystemContext(android.app.ActivityThread)>(r0);

        r0.<android.app.ActivityThread: android.app.ContextImpl mSystemContext> = $r2;

     label2:
        r4 = r0.<android.app.ActivityThread: android.app.ContextImpl mSystemContext>;

        exitmonitor r0;

     label3:
        return r4;

     label4:
        $r3 := @caughtexception;

     label5:
        exitmonitor r0;

     label6:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public android.app.ContextImpl getSystemUiContext()
    {
        android.app.ActivityThread r0;
        android.app.ContextImpl $r1, $r2, $r3, r5;
        java.lang.Throwable $r4;

        r0 := @this: android.app.ActivityThread;

        entermonitor r0;

     label1:
        $r1 = r0.<android.app.ActivityThread: android.app.ContextImpl mSystemUiContext>;

        if $r1 != null goto label2;

        $r2 = virtualinvoke r0.<android.app.ActivityThread: android.app.ContextImpl getSystemContext()>();

        $r3 = staticinvoke <android.app.ContextImpl: android.app.ContextImpl createSystemUiContext(android.app.ContextImpl)>($r2);

        r0.<android.app.ActivityThread: android.app.ContextImpl mSystemUiContext> = $r3;

     label2:
        r5 = r0.<android.app.ActivityThread: android.app.ContextImpl mSystemUiContext>;

        exitmonitor r0;

     label3:
        return r5;

     label4:
        $r4 := @caughtexception;

     label5:
        exitmonitor r0;

     label6:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    android.content.res.Resources getTopLevelResources(java.lang.String, java.lang.String[], java.lang.String[], java.lang.String[], int, android.app.LoadedApk)
    {
        android.app.ActivityThread r0;
        java.lang.String r1;
        java.lang.String[] r2, r3, r4;
        int i0;
        android.app.LoadedApk r5;
        android.app.ResourcesManager $r6;
        android.content.res.CompatibilityInfo $r7;
        java.lang.ClassLoader $r8;
        android.content.res.Resources $r9;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String[];

        r3 := @parameter2: java.lang.String[];

        r4 := @parameter3: java.lang.String[];

        i0 := @parameter4: int;

        r5 := @parameter5: android.app.LoadedApk;

        $r6 = r0.<android.app.ActivityThread: android.app.ResourcesManager mResourcesManager>;

        $r7 = virtualinvoke r5.<android.app.LoadedApk: android.content.res.CompatibilityInfo getCompatibilityInfo()>();

        $r8 = virtualinvoke r5.<android.app.LoadedApk: java.lang.ClassLoader getClassLoader()>();

        $r9 = virtualinvoke $r6.<android.app.ResourcesManager: android.content.res.Resources getResources(android.os.IBinder,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],int,android.content.res.Configuration,android.content.res.CompatibilityInfo,java.lang.ClassLoader,java.util.List)>(null, r1, r2, r3, r4, i0, null, $r7, $r8, null);

        return $r9;
    }

    android.app.servertransaction.TransactionExecutor getTransactionExecutor()
    {
        android.app.ActivityThread r0;
        android.app.servertransaction.TransactionExecutor $r1;

        r0 := @this: android.app.ActivityThread;

        $r1 = r0.<android.app.ActivityThread: android.app.servertransaction.TransactionExecutor mTransactionExecutor>;

        return $r1;
    }

    public void handleActivityConfigurationChanged(android.os.IBinder, android.content.res.Configuration, int)
    {
        android.app.ActivityThread r0;
        int i0, $i1;
        android.app.ActivityThread$ActivityClientRecord r1;
        android.util.ArrayMap $r2;
        java.lang.Object $r3;
        android.app.Activity $r4, $r9, $r12, $r18;
        android.content.res.Configuration $r6, $r7, $r8, $r11, r15, $r16, r20;
        android.view.View $r10, $r19;
        boolean $z0, z1, $z2;
        java.lang.Throwable $r13;
        android.os.IBinder r14;
        android.view.ViewRootImpl r17;

        r0 := @this: android.app.ActivityThread;

        r14 := @parameter0: android.os.IBinder;

        r15 := @parameter1: android.content.res.Configuration;

        i0 := @parameter2: int;

        $r2 = r0.<android.app.ActivityThread: android.util.ArrayMap mActivities>;

        $r3 = virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r14);

        r1 = (android.app.ActivityThread$ActivityClientRecord) $r3;

        if r1 == null goto label18;

        $r4 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        if $r4 != null goto label01;

        goto label18;

     label01:
        if i0 == -1 goto label02;

        $r12 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $i1 = virtualinvoke $r12.<android.app.Activity: int getDisplayId()>();

        if i0 == $i1 goto label02;

        z1 = 1;

        goto label03;

     label02:
        z1 = 0;

     label03:
        entermonitor r1;

     label04:
        $r16 = staticinvoke <android.app.ActivityThread$ActivityClientRecord: android.content.res.Configuration access$4000(android.app.ActivityThread$ActivityClientRecord)>(r1);

        $z2 = virtualinvoke r15.<android.content.res.Configuration: boolean isOtherSeqNewer(android.content.res.Configuration)>($r16);

        if $z2 == 0 goto label06;

        exitmonitor r1;

     label05:
        return;

     label06:
        r17 = null;

     label07:
        staticinvoke <android.app.ActivityThread$ActivityClientRecord: android.content.res.Configuration access$4002(android.app.ActivityThread$ActivityClientRecord,android.content.res.Configuration)>(r1, null);

        exitmonitor r1;

     label08:
        $r6 = r1.<android.app.ActivityThread$ActivityClientRecord: android.content.res.Configuration overrideConfig>;

        if $r6 == null goto label09;

        $r11 = r1.<android.app.ActivityThread$ActivityClientRecord: android.content.res.Configuration overrideConfig>;

        $z0 = virtualinvoke $r11.<android.content.res.Configuration: boolean isOtherSeqNewer(android.content.res.Configuration)>(r15);

        if $z0 != 0 goto label09;

        if z1 != 0 goto label09;

        return;

     label09:
        r1.<android.app.ActivityThread$ActivityClientRecord: android.content.res.Configuration overrideConfig> = r15;

        $r18 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r19 = $r18.<android.app.Activity: android.view.View mDecor>;

        if $r19 == null goto label10;

        $r9 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r10 = $r9.<android.app.Activity: android.view.View mDecor>;

        r17 = virtualinvoke $r10.<android.view.View: android.view.ViewRootImpl getViewRootImpl()>();

        goto label10;

     label10:
        if z1 == 0 goto label12;

        $r8 = r0.<android.app.ActivityThread: android.content.res.Configuration mCompatConfiguration>;

        r20 = specialinvoke r0.<android.app.ActivityThread: android.content.res.Configuration performConfigurationChangedForActivity(android.app.ActivityThread$ActivityClientRecord,android.content.res.Configuration,int,boolean)>(r1, $r8, i0, 1);

        if r17 == null goto label11;

        virtualinvoke r17.<android.view.ViewRootImpl: void onMovedToDisplay(int,android.content.res.Configuration)>(i0, r20);

     label11:
        goto label13;

     label12:
        $r7 = r0.<android.app.ActivityThread: android.content.res.Configuration mCompatConfiguration>;

        specialinvoke r0.<android.app.ActivityThread: void performConfigurationChangedForActivity(android.app.ActivityThread$ActivityClientRecord,android.content.res.Configuration)>(r1, $r7);

     label13:
        if r17 == null goto label14;

        virtualinvoke r17.<android.view.ViewRootImpl: void updateConfiguration(int)>(i0);

     label14:
        r0.<android.app.ActivityThread: boolean mSomeActivitiesChanged> = 1;

        return;

     label15:
        $r13 := @caughtexception;

     label16:
        exitmonitor r1;

     label17:
        throw $r13;

     label18:
        return;

        catch java.lang.Throwable from label04 to label05 with label15;
        catch java.lang.Throwable from label07 to label08 with label15;
        catch java.lang.Throwable from label16 to label17 with label15;
    }

    public void handleApplicationInfoChanged(android.content.pm.ApplicationInfo)
    {
        android.app.ActivityThread r0;
        java.lang.String $r2, $r5, $r10, $r13;
        android.util.ArrayMap $r3, $r6;
        java.lang.Object $r4, $r7, $r16, $r17;
        android.app.ResourcesManager $r8, r21, r28;
        android.content.res.Configuration $r9, r30;
        int $i0, i1;
        java.util.ArrayList $r11, $r14;
        android.content.pm.ApplicationInfo $r12, $r15, r20;
        java.lang.Throwable $r18, $r19;
        java.lang.ref.WeakReference r22, r24;
        android.app.LoadedApk r23, r25;
        java.lang.String[] r26;

        r0 := @this: android.app.ActivityThread;

        r20 := @parameter0: android.content.pm.ApplicationInfo;

        r21 = r0.<android.app.ActivityThread: android.app.ResourcesManager mResourcesManager>;

        entermonitor r21;

     label01:
        $r3 = r0.<android.app.ActivityThread: android.util.ArrayMap mPackages>;

        $r2 = r20.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r2);

        r22 = (java.lang.ref.WeakReference) $r4;

     label02:
        if r22 == null goto label05;

     label03:
        $r17 = virtualinvoke r22.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r23 = (android.app.LoadedApk) $r17;

     label04:
        goto label06;

     label05:
        r23 = null;

     label06:
        $r6 = r0.<android.app.ActivityThread: android.util.ArrayMap mResourcePackages>;

        $r5 = r20.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r7 = virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r5);

        r24 = (java.lang.ref.WeakReference) $r7;

     label07:
        if r24 == null goto label10;

     label08:
        $r16 = virtualinvoke r24.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r25 = (android.app.LoadedApk) $r16;

     label09:
        goto label11;

     label10:
        r25 = null;

     label11:
        exitmonitor r21;

     label12:
        r26 = newarray (java.lang.String)[2];

        i1 = 0;

        if r23 == null goto label13;

        $r13 = virtualinvoke r23.<android.app.LoadedApk: java.lang.String getResDir()>();

        r26[0] = $r13;

        $r14 = new java.util.ArrayList;

        specialinvoke $r14.<java.util.ArrayList: void <init>()>();

        $r15 = virtualinvoke r23.<android.app.LoadedApk: android.content.pm.ApplicationInfo getApplicationInfo()>();

        staticinvoke <android.app.LoadedApk: void makePaths(android.app.ActivityThread,android.content.pm.ApplicationInfo,java.util.List)>(r0, $r15, $r14);

        virtualinvoke r23.<android.app.LoadedApk: void updateApplicationInfo(android.content.pm.ApplicationInfo,java.util.List)>(r20, $r14);

     label13:
        if r25 == null goto label14;

        $r10 = virtualinvoke r25.<android.app.LoadedApk: java.lang.String getResDir()>();

        r26[1] = $r10;

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        $r12 = virtualinvoke r25.<android.app.LoadedApk: android.content.pm.ApplicationInfo getApplicationInfo()>();

        staticinvoke <android.app.LoadedApk: void makePaths(android.app.ActivityThread,android.content.pm.ApplicationInfo,java.util.List)>(r0, $r12, $r11);

        virtualinvoke r25.<android.app.LoadedApk: void updateApplicationInfo(android.content.pm.ApplicationInfo,java.util.List)>(r20, $r11);

     label14:
        r28 = r0.<android.app.ActivityThread: android.app.ResourcesManager mResourcesManager>;

        entermonitor r28;

     label15:
        $r8 = r0.<android.app.ActivityThread: android.app.ResourcesManager mResourcesManager>;

        virtualinvoke $r8.<android.app.ResourcesManager: void applyNewResourceDirsLocked(android.content.pm.ApplicationInfo,java.lang.String[])>(r20, r26);

        exitmonitor r28;

     label16:
        staticinvoke <android.app.ApplicationPackageManager: void configurationChanged()>();

        $r9 = new android.content.res.Configuration;

        specialinvoke $r9.<android.content.res.Configuration: void <init>()>();

        r30 = r0.<android.app.ActivityThread: android.content.res.Configuration mConfiguration>;

        if r30 == null goto label17;

        i1 = r30.<android.content.res.Configuration: int assetsSeq>;

     label17:
        $i0 = i1 + 1;

        $r9.<android.content.res.Configuration: int assetsSeq> = $i0;

        specialinvoke r0.<android.app.ActivityThread: void handleConfigurationChanged(android.content.res.Configuration,android.content.res.CompatibilityInfo)>($r9, null);

        specialinvoke r0.<android.app.ActivityThread: void relaunchAllActivities(boolean)>(1);

        return;

     label18:
        $r19 := @caughtexception;

     label19:
        exitmonitor r28;

     label20:
        throw $r19;

     label21:
        $r18 := @caughtexception;

     label22:
        exitmonitor r21;

     label23:
        throw $r18;

        catch java.lang.Throwable from label01 to label02 with label21;
        catch java.lang.Throwable from label03 to label04 with label21;
        catch java.lang.Throwable from label06 to label07 with label21;
        catch java.lang.Throwable from label08 to label09 with label21;
        catch java.lang.Throwable from label11 to label12 with label21;
        catch java.lang.Throwable from label15 to label16 with label18;
        catch java.lang.Throwable from label19 to label20 with label18;
        catch java.lang.Throwable from label22 to label23 with label21;
    }

    public void handleConfigurationChanged(android.content.res.Configuration)
    {
        android.app.ActivityThread r0;
        android.content.res.Configuration r1;
        int $i0;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.content.res.Configuration;

        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(64L, "configChanged");

        $i0 = r1.<android.content.res.Configuration: int densityDpi>;

        r0.<android.app.ActivityThread: int mCurDefaultDisplayDpi> = $i0;

        specialinvoke r0.<android.app.ActivityThread: void handleConfigurationChanged(android.content.res.Configuration,android.content.res.CompatibilityInfo)>(r1, null);

        staticinvoke <android.os.Trace: void traceEnd(long)>(64L);

        return;
    }

    public void handleDestroyActivity(android.os.IBinder, boolean, int, boolean, java.lang.String)
    {
        android.app.ActivityThread r0;
        boolean z0, z1, $z2, $z3, $z4, $z5;
        int i0, $i1, $i2;
        android.view.View r1;
        android.os.IBinder r2, r31;
        android.app.IActivityTaskManager $r3;
        android.app.Activity $r4, $r5, $r6, $r7, $r12, $r15, $r16, $r19, $r24, $r35;
        android.app.ContextImpl $r8;
        java.lang.Class $r9, $r13, $r20, $r25;
        java.lang.String $r10, $r14, $r21, $r26, r32;
        android.view.WindowManagerGlobal $r11, $r18, $r23;
        android.view.Window $r17, $r22, $r27, $r28, $r36;
        android.os.RemoteException $r29;
        java.lang.RuntimeException $r30;
        android.app.ActivityThread$ActivityClientRecord r33;
        android.view.WindowManager r34;
        android.content.Context r37;

        r0 := @this: android.app.ActivityThread;

        r31 := @parameter0: android.os.IBinder;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        z1 := @parameter3: boolean;

        r32 := @parameter4: java.lang.String;

        r33 = virtualinvoke r0.<android.app.ActivityThread: android.app.ActivityThread$ActivityClientRecord performDestroyActivity(android.os.IBinder,boolean,int,boolean,java.lang.String)>(r31, z0, i0, z1, r32);

        if r33 == null goto label08;

        staticinvoke <android.app.ActivityThread: void cleanUpPendingRemoveWindows(android.app.ActivityThread$ActivityClientRecord,boolean)>(r33, z0);

        $r4 = r33.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        r34 = virtualinvoke $r4.<android.app.Activity: android.view.WindowManager getWindowManager()>();

        $r5 = r33.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        r1 = $r5.<android.app.Activity: android.view.View mDecor>;

        if r1 == null goto label06;

        $r15 = r33.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $z3 = $r15.<android.app.Activity: boolean mVisibleFromServer>;

        if $z3 == 0 goto label01;

        $i1 = r0.<android.app.ActivityThread: int mNumVisibleActivities>;

        $i2 = $i1 - 1;

        r0.<android.app.ActivityThread: int mNumVisibleActivities> = $i2;

     label01:
        r2 = virtualinvoke r1.<android.view.View: android.os.IBinder getWindowToken()>();

        $r16 = r33.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $z4 = $r16.<android.app.Activity: boolean mWindowAdded>;

        if $z4 == 0 goto label03;

        $z5 = r33.<android.app.ActivityThread$ActivityClientRecord: boolean mPreserveWindow>;

        if $z5 == 0 goto label02;

        $r27 = r33.<android.app.ActivityThread$ActivityClientRecord: android.view.Window window>;

        r33.<android.app.ActivityThread$ActivityClientRecord: android.view.Window mPendingRemoveWindow> = $r27;

        r33.<android.app.ActivityThread$ActivityClientRecord: android.view.WindowManager mPendingRemoveWindowManager> = r34;

        $r28 = r33.<android.app.ActivityThread$ActivityClientRecord: android.view.Window window>;

        virtualinvoke $r28.<android.view.Window: void clearContentView()>();

        goto label03;

     label02:
        interfaceinvoke r34.<android.view.WindowManager: void removeViewImmediate(android.view.View)>(r1);

     label03:
        if r2 == null goto label04;

        $r22 = r33.<android.app.ActivityThread$ActivityClientRecord: android.view.Window mPendingRemoveWindow>;

        if $r22 != null goto label04;

        $r23 = staticinvoke <android.view.WindowManagerGlobal: android.view.WindowManagerGlobal getInstance()>();

        $r24 = r33.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r25 = virtualinvoke $r24.<java.lang.Object: java.lang.Class getClass()>();

        $r26 = virtualinvoke $r25.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r23.<android.view.WindowManagerGlobal: void closeAll(android.os.IBinder,java.lang.String,java.lang.String)>(r2, $r26, "Activity");

        goto label05;

     label04:
        $r17 = r33.<android.app.ActivityThread$ActivityClientRecord: android.view.Window mPendingRemoveWindow>;

        if $r17 == null goto label05;

        $r18 = staticinvoke <android.view.WindowManagerGlobal: android.view.WindowManagerGlobal getInstance()>();

        $r19 = r33.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r20 = virtualinvoke $r19.<java.lang.Object: java.lang.Class getClass()>();

        $r21 = virtualinvoke $r20.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r18.<android.view.WindowManagerGlobal: void closeAllExceptView(android.os.IBinder,android.view.View,java.lang.String,java.lang.String)>(r31, r1, $r21, "Activity");

     label05:
        $r35 = r33.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r35.<android.app.Activity: android.view.View mDecor> = null;

     label06:
        $r36 = r33.<android.app.ActivityThread$ActivityClientRecord: android.view.Window mPendingRemoveWindow>;

        if $r36 != null goto label07;

        $r11 = staticinvoke <android.view.WindowManagerGlobal: android.view.WindowManagerGlobal getInstance()>();

        $r12 = r33.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r13 = virtualinvoke $r12.<java.lang.Object: java.lang.Class getClass()>();

        $r14 = virtualinvoke $r13.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r11.<android.view.WindowManagerGlobal: void closeAll(android.os.IBinder,java.lang.String,java.lang.String)>(r31, $r14, "Activity");

     label07:
        $r6 = r33.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        r37 = virtualinvoke $r6.<android.app.Activity: android.content.Context getBaseContext()>();

        $z2 = r37 instanceof android.app.ContextImpl;

        if $z2 == 0 goto label08;

        $r8 = (android.app.ContextImpl) r37;

        $r7 = r33.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r9 = virtualinvoke $r7.<java.lang.Object: java.lang.Class getClass()>();

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r8.<android.app.ContextImpl: void scheduleFinalCleanup(java.lang.String,java.lang.String)>($r10, "Activity");

     label08:
        if z0 == 0 goto label12;

     label09:
        $r3 = staticinvoke <android.app.ActivityTaskManager: android.app.IActivityTaskManager getService()>();

        interfaceinvoke $r3.<android.app.IActivityTaskManager: void activityDestroyed(android.os.IBinder)>(r31);

     label10:
        goto label12;

     label11:
        $r29 := @caughtexception;

        $r30 = virtualinvoke $r29.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r30;

     label12:
        r0.<android.app.ActivityThread: boolean mSomeActivitiesChanged> = 1;

        return;

        catch android.os.RemoteException from label09 to label10 with label11;
    }

    final void handleDispatchPackageBroadcast(int, java.lang.String[])
    {
        android.app.ActivityThread r0;
        int i0, $i1, $i2, $i3, i4, i5, i6;
        android.app.ResourcesManager r2, $r29, r55, r58;
        android.app.ActivityThread$ActivityClientRecord r3;
        java.lang.String $r4, $r6, $r8, $r11, $r35, r47, r53;
        android.util.ArrayMap $r5, $r7, $r9, $r12, $r21, $r23, $r26, $r30;
        java.lang.Object $r10, $r13, $r14, $r15, $r22, $r24, $r32, $r37, $r38;
        java.util.ArrayList $r16, r54;
        android.content.pm.IPackageManager $r17, $r25;
        java.lang.String[] $r18, $r20, $r28, r46;
        java.lang.Object[] $r19;
        android.content.pm.ApplicationInfo $r27, $r34, r51;
        java.util.Collection $r31;
        boolean $z0, $z1, z2, z3, z4;
        android.content.pm.ActivityInfo $r33, $r36;
        java.lang.Throwable $r39, $r41, $r42, $r43, $r45, r57;
        android.os.RemoteException $r40, $r44;
        java.lang.ref.WeakReference r48, r50, r59, r60;
        android.app.LoadedApk r49;
        java.util.Iterator r52;

        r0 := @this: android.app.ActivityThread;

        i0 := @parameter0: int;

        r46 := @parameter1: java.lang.String[];

        z2 = 0;

        z3 = 0;

        if i0 == 0 goto label39;

        if i0 == 2 goto label39;

        if i0 == 3 goto label01;

        z2 = 0;

        goto label56;

     label01:
        if r46 != null goto label02;

        z2 = 0;

        goto label56;

     label02:
        $r16 = new java.util.ArrayList;

        specialinvoke $r16.<java.util.ArrayList: void <init>()>();

        r2 = r0.<android.app.ActivityThread: android.app.ResourcesManager mResourcesManager>;

        entermonitor r2;

     label03:
        i4 = lengthof r46;

     label04:
        z2 = 0;

        i5 = i4 + -1;

     label05:
        if i5 < 0 goto label30;

        r47 = r46[i5];

     label06:
        $r21 = r0.<android.app.ActivityThread: android.util.ArrayMap mPackages>;

        $r22 = virtualinvoke $r21.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r47);

        r48 = (java.lang.ref.WeakReference) $r22;

     label07:
        if r48 == null goto label10;

     label08:
        $r38 = virtualinvoke r48.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r49 = (android.app.LoadedApk) $r38;

     label09:
        goto label11;

     label10:
        r49 = null;

     label11:
        if r49 == null goto label12;

        z2 = 1;

        goto label16;

     label12:
        $r23 = r0.<android.app.ActivityThread: android.util.ArrayMap mResourcePackages>;

        $r24 = virtualinvoke $r23.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r47);

        r50 = (java.lang.ref.WeakReference) $r24;

     label13:
        r49 = null;

        if r50 == null goto label15;

     label14:
        $r37 = virtualinvoke r50.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r49 = (android.app.LoadedApk) $r37;

     label15:
        if r49 == null goto label16;

        z2 = 1;

        goto label16;

     label16:
        if r49 == null goto label29;

     label17:
        interfaceinvoke $r16.<java.util.List: boolean add(java.lang.Object)>(r47);

     label18:
        $r25 = <android.app.ActivityThread: android.content.pm.IPackageManager sPackageManager>;

        $i2 = staticinvoke <android.os.UserHandle: int myUserId()>();

        r51 = interfaceinvoke $r25.<android.content.pm.IPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int,int)>(r47, 1024, $i2);

        $r26 = r0.<android.app.ActivityThread: android.util.ArrayMap mActivities>;

        $i3 = virtualinvoke $r26.<android.util.ArrayMap: int size()>();

        if $i3 <= 0 goto label21;

        $r30 = r0.<android.app.ActivityThread: android.util.ArrayMap mActivities>;

        $r31 = virtualinvoke $r30.<android.util.ArrayMap: java.util.Collection values()>();

        r52 = interfaceinvoke $r31.<java.util.Collection: java.util.Iterator iterator()>();

     label19:
        $z0 = interfaceinvoke r52.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label21;

        $r32 = interfaceinvoke r52.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.app.ActivityThread$ActivityClientRecord) $r32;

        $r33 = r3.<android.app.ActivityThread$ActivityClientRecord: android.content.pm.ActivityInfo activityInfo>;

        $r34 = $r33.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r35 = $r34.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $z1 = virtualinvoke $r35.<java.lang.String: boolean equals(java.lang.Object)>(r47);

        if $z1 == 0 goto label20;

        $r36 = r3.<android.app.ActivityThread$ActivityClientRecord: android.content.pm.ActivityInfo activityInfo>;

        $r36.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo> = r51;

        r3.<android.app.ActivityThread$ActivityClientRecord: android.app.LoadedApk packageInfo> = r49;

     label20:
        goto label19;

     label21:
        r53 = virtualinvoke r49.<android.app.LoadedApk: java.lang.String getResDir()>();

        r54 = new java.util.ArrayList;

        specialinvoke r54.<java.util.ArrayList: void <init>()>();

        $r27 = virtualinvoke r49.<android.app.LoadedApk: android.content.pm.ApplicationInfo getApplicationInfo()>();

        staticinvoke <android.app.LoadedApk: void makePaths(android.app.ActivityThread,android.content.pm.ApplicationInfo,java.util.List)>(r0, $r27, r54);

        virtualinvoke r49.<android.app.LoadedApk: void updateApplicationInfo(android.content.pm.ApplicationInfo,java.util.List)>(r51, r54);

        r55 = r0.<android.app.ActivityThread: android.app.ResourcesManager mResourcesManager>;

        entermonitor r55;

     label22:
        $r29 = r0.<android.app.ActivityThread: android.app.ResourcesManager mResourcesManager>;

        $r28 = newarray (java.lang.String)[1];

        $r28[0] = r53;

        virtualinvoke $r29.<android.app.ResourcesManager: void applyNewResourceDirsLocked(android.content.pm.ApplicationInfo,java.lang.String[])>(r51, $r28);

        exitmonitor r55;

     label23:
        goto label29;

     label24:
        $r42 := @caughtexception;

     label25:
        exitmonitor r55;

     label26:
        throw $r42;

     label27:
        $r44 := @caughtexception;

        goto label29;

     label28:
        $r45 := @caughtexception;

        r57 = $r45;

        goto label37;

     label29:
        i5 = i5 + -1;

        goto label05;

     label30:
        exitmonitor r2;

     label31:
        $r17 = staticinvoke <android.app.ActivityThread: android.content.pm.IPackageManager getPackageManager()>();

        $r18 = newarray (java.lang.String)[0];

        $r19 = interfaceinvoke $r16.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r18);

        $r20 = (java.lang.String[]) $r19;

        interfaceinvoke $r17.<android.content.pm.IPackageManager: void notifyPackagesReplacedReceived(java.lang.String[])>($r20);

     label32:
        goto label34;

     label33:
        $r40 := @caughtexception;

     label34:
        goto label56;

     label35:
        $r41 := @caughtexception;

        r57 = $r41;

        goto label37;

     label36:
        $r43 := @caughtexception;

        r57 = $r43;

     label37:
        exitmonitor r2;

     label38:
        throw r57;

     label39:
        if i0 != 0 goto label40;

        z3 = 1;

     label40:
        if r46 != null goto label41;

        z2 = 0;

        goto label56;

     label41:
        r58 = r0.<android.app.ActivityThread: android.app.ResourcesManager mResourcesManager>;

        entermonitor r58;

     label42:
        $i1 = lengthof r46;

        i6 = $i1 - 1;

     label43:
        if i6 < 0 goto label55;

        z4 = z2;

        if z2 != 0 goto label52;

     label44:
        $r9 = r0.<android.app.ActivityThread: android.util.ArrayMap mPackages>;

        $r8 = r46[i6];

        $r10 = virtualinvoke $r9.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r8);

        r59 = (java.lang.ref.WeakReference) $r10;

     label45:
        if r59 == null goto label48;

     label46:
        $r15 = virtualinvoke r59.<java.lang.ref.WeakReference: java.lang.Object get()>();

        if $r15 == null goto label48;

     label47:
        z4 = 1;

        goto label52;

     label48:
        $r12 = r0.<android.app.ActivityThread: android.util.ArrayMap mResourcePackages>;

        $r11 = r46[i6];

        $r13 = virtualinvoke $r12.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r11);

        r60 = (java.lang.ref.WeakReference) $r13;

     label49:
        z4 = z2;

        if r60 == null goto label52;

        z4 = z2;

     label50:
        $r14 = virtualinvoke r60.<java.lang.ref.WeakReference: java.lang.Object get()>();

        if $r14 == null goto label52;

     label51:
        z4 = 1;

     label52:
        if z3 == 0 goto label54;

     label53:
        $r5 = r0.<android.app.ActivityThread: android.util.ArrayMap mPackages>;

        $r4 = r46[i6];

        virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>($r4);

        $r7 = r0.<android.app.ActivityThread: android.util.ArrayMap mResourcePackages>;

        $r6 = r46[i6];

        virtualinvoke $r7.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>($r6);

     label54:
        i6 = i6 + -1;

        z2 = z4;

        goto label43;

     label55:
        exitmonitor r58;

     label56:
        staticinvoke <android.app.ApplicationPackageManager: void handlePackageBroadcast(int,java.lang.String[],boolean)>(i0, r46, z2);

        return;

     label57:
        $r39 := @caughtexception;

     label58:
        exitmonitor r58;

     label59:
        throw $r39;

        catch java.lang.Throwable from label03 to label04 with label36;
        catch java.lang.Throwable from label06 to label07 with label35;
        catch java.lang.Throwable from label08 to label09 with label35;
        catch java.lang.Throwable from label12 to label13 with label35;
        catch java.lang.Throwable from label14 to label15 with label35;
        catch java.lang.Throwable from label17 to label18 with label28;
        catch android.os.RemoteException from label18 to label19 with label27;
        catch java.lang.Throwable from label18 to label19 with label28;
        catch android.os.RemoteException from label19 to label20 with label27;
        catch java.lang.Throwable from label19 to label20 with label28;
        catch android.os.RemoteException from label21 to label22 with label27;
        catch java.lang.Throwable from label21 to label22 with label28;
        catch java.lang.Throwable from label22 to label23 with label24;
        catch java.lang.Throwable from label25 to label26 with label24;
        catch android.os.RemoteException from label26 to label27 with label27;
        catch java.lang.Throwable from label26 to label27 with label28;
        catch java.lang.Throwable from label30 to label31 with label35;
        catch android.os.RemoteException from label31 to label32 with label33;
        catch java.lang.Throwable from label37 to label38 with label36;
        catch java.lang.Throwable from label42 to label43 with label57;
        catch java.lang.Throwable from label44 to label45 with label57;
        catch java.lang.Throwable from label46 to label47 with label57;
        catch java.lang.Throwable from label48 to label49 with label57;
        catch java.lang.Throwable from label50 to label51 with label57;
        catch java.lang.Throwable from label53 to label54 with label57;
        catch java.lang.Throwable from label55 to label56 with label57;
        catch java.lang.Throwable from label58 to label59 with label57;
    }

    public void handleFixedRotationAdjustments(android.os.IBinder, android.view.DisplayAdjustments$FixedRotationAdjustments)
    {
        android.app.ActivityThread r0;
        android.os.IBinder r1;
        android.view.DisplayAdjustments$FixedRotationAdjustments r2;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: android.view.DisplayAdjustments$FixedRotationAdjustments;

        specialinvoke r0.<android.app.ActivityThread: void handleFixedRotationAdjustments(android.os.IBinder,android.view.DisplayAdjustments$FixedRotationAdjustments,android.content.res.Configuration)>(r1, r2, null);

        return;
    }

    public void handleInstallProvider(android.content.pm.ProviderInfo)
    {
        android.app.ActivityThread r0;
        android.os.StrictMode$ThreadPolicy r1;
        android.content.pm.ProviderInfo[] $r2;
        android.app.Application $r3;
        java.util.List $r4;
        java.lang.Throwable $r5;
        android.content.pm.ProviderInfo r6;

        r0 := @this: android.app.ActivityThread;

        r6 := @parameter0: android.content.pm.ProviderInfo;

        r1 = staticinvoke <android.os.StrictMode: android.os.StrictMode$ThreadPolicy allowThreadDiskWrites()>();

     label1:
        $r3 = r0.<android.app.ActivityThread: android.app.Application mInitialApplication>;

        $r2 = newarray (android.content.pm.ProviderInfo)[1];

        $r2[0] = r6;

        $r4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2);

        specialinvoke r0.<android.app.ActivityThread: void installContentProviders(android.content.Context,java.util.List)>($r3, $r4);

     label2:
        staticinvoke <android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>(r1);

        return;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>(r1);

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public android.app.Activity handleLaunchActivity(android.app.ActivityThread$ActivityClientRecord, android.app.servertransaction.PendingTransactionActions, android.content.Intent)
    {
        android.app.ActivityThread r0;
        android.app.servertransaction.PendingTransactionActions r1;
        android.app.ProfilerInfo $r2, $r10;
        boolean $z0, $z2;
        android.app.IActivityTaskManager $r3;
        android.os.IBinder $r4;
        android.content.res.Configuration $r5, $r6;
        android.app.Activity $r7, r17;
        android.os.Bundle $r8;
        android.content.pm.ActivityInfo $r9;
        int $i0, $i1;
        android.app.ActivityThread$Profiler $r11, $r12;
        android.os.RemoteException $r13;
        java.lang.RuntimeException $r14;
        android.app.ActivityThread$ActivityClientRecord r15;
        android.content.Intent r16;

        r0 := @this: android.app.ActivityThread;

        r15 := @parameter0: android.app.ActivityThread$ActivityClientRecord;

        r1 := @parameter1: android.app.servertransaction.PendingTransactionActions;

        r16 := @parameter2: android.content.Intent;

        virtualinvoke r0.<android.app.ActivityThread: void unscheduleGcIdler()>();

        r0.<android.app.ActivityThread: boolean mSomeActivitiesChanged> = 1;

        $r2 = r15.<android.app.ActivityThread$ActivityClientRecord: android.app.ProfilerInfo profilerInfo>;

        if $r2 == null goto label1;

        $r11 = r0.<android.app.ActivityThread: android.app.ActivityThread$Profiler mProfiler>;

        $r10 = r15.<android.app.ActivityThread$ActivityClientRecord: android.app.ProfilerInfo profilerInfo>;

        virtualinvoke $r11.<android.app.ActivityThread$Profiler: void setProfiler(android.app.ProfilerInfo)>($r10);

        $r12 = r0.<android.app.ActivityThread: android.app.ActivityThread$Profiler mProfiler>;

        virtualinvoke $r12.<android.app.ActivityThread$Profiler: void startProfiling()>();

     label1:
        specialinvoke r0.<android.app.ActivityThread: void handleConfigurationChanged(android.content.res.Configuration,android.content.res.CompatibilityInfo)>(null, null);

        $z0 = <android.view.ThreadedRenderer: boolean sRendererDisabled>;

        if $z0 != 0 goto label2;

        $r9 = r15.<android.app.ActivityThread$ActivityClientRecord: android.content.pm.ActivityInfo activityInfo>;

        $i0 = $r9.<android.content.pm.ActivityInfo: int flags>;

        $i1 = $i0 & 512;

        if $i1 == 0 goto label2;

        staticinvoke <android.graphics.HardwareRenderer: void preload()>();

     label2:
        staticinvoke <android.view.WindowManagerGlobal: void initialize()>();

        staticinvoke <android.os.GraphicsEnvironment: void hintActivityLaunch()>();

        r17 = specialinvoke r0.<android.app.ActivityThread: android.app.Activity performLaunchActivity(android.app.ActivityThread$ActivityClientRecord,android.content.Intent)>(r15, r16);

        if r17 == null goto label3;

        $r5 = new android.content.res.Configuration;

        $r6 = r0.<android.app.ActivityThread: android.content.res.Configuration mConfiguration>;

        specialinvoke $r5.<android.content.res.Configuration: void <init>(android.content.res.Configuration)>($r6);

        r15.<android.app.ActivityThread$ActivityClientRecord: android.content.res.Configuration createdConfig> = $r5;

        specialinvoke r0.<android.app.ActivityThread: void reportSizeConfigurations(android.app.ActivityThread$ActivityClientRecord)>(r15);

        $r7 = r15.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $z2 = $r7.<android.app.Activity: boolean mFinished>;

        if $z2 != 0 goto label4;

        if r1 == null goto label4;

        $r8 = r15.<android.app.ActivityThread$ActivityClientRecord: android.os.Bundle state>;

        virtualinvoke r1.<android.app.servertransaction.PendingTransactionActions: void setOldState(android.os.Bundle)>($r8);

        virtualinvoke r1.<android.app.servertransaction.PendingTransactionActions: void setRestoreInstanceState(boolean)>(1);

        virtualinvoke r1.<android.app.servertransaction.PendingTransactionActions: void setCallOnPostCreate(boolean)>(1);

        goto label4;

     label3:
        $r3 = staticinvoke <android.app.ActivityTaskManager: android.app.IActivityTaskManager getService()>();

        $r4 = r15.<android.app.ActivityThread$ActivityClientRecord: android.os.IBinder token>;

        interfaceinvoke $r3.<android.app.IActivityTaskManager: boolean finishActivity(android.os.IBinder,int,android.content.Intent,int)>($r4, 0, null, 0);

     label4:
        return r17;

     label5:
        $r13 := @caughtexception;

        $r14 = virtualinvoke $r13.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r14;

        catch android.os.RemoteException from label3 to label4 with label5;
    }

    final void handleLowMemory()
    {
        android.app.ActivityThread r0;
        java.util.ArrayList r1;
        int i0, $i1, $i2, i4;
        java.lang.Object $r2;
        android.content.ComponentCallbacks2 $r3;

        r0 := @this: android.app.ActivityThread;

        r1 = virtualinvoke r0.<android.app.ActivityThread: java.util.ArrayList collectComponentCallbacks(boolean,android.content.res.Configuration)>(1, null);

        i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        i4 = 0;

     label1:
        if i4 >= i0 goto label2;

        $r2 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        $r3 = (android.content.ComponentCallbacks2) $r2;

        interfaceinvoke $r3.<android.content.ComponentCallbacks2: void onLowMemory()>();

        i4 = i4 + 1;

        goto label1;

     label2:
        $i1 = staticinvoke <android.os.Process: int myUid()>();

        if $i1 == 1000 goto label3;

        $i2 = staticinvoke <android.database.sqlite.SQLiteDatabase: int releaseMemory()>();

        staticinvoke <android.util.EventLog: int writeEvent(int,int)>(75003, $i2);

     label3:
        staticinvoke <android.graphics.Canvas: void freeCaches()>();

        staticinvoke <android.graphics.Canvas: void freeTextLayoutCaches()>();

        staticinvoke <com.android.internal.os.BinderInternal: void forceGc(java.lang.String)>("mem");

        return;
    }

    public void handleNewIntent(android.os.IBinder, java.util.List)
    {
        android.app.ActivityThread r0;
        java.util.List r1;
        android.util.ArrayMap $r2;
        java.lang.Object $r3;
        android.os.IBinder r4;
        android.app.ActivityThread$ActivityClientRecord r5;

        r0 := @this: android.app.ActivityThread;

        r4 := @parameter0: android.os.IBinder;

        r1 := @parameter1: java.util.List;

        $r2 = r0.<android.app.ActivityThread: android.util.ArrayMap mActivities>;

        $r3 = virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r4);

        r5 = (android.app.ActivityThread$ActivityClientRecord) $r3;

        if r5 != null goto label1;

        return;

     label1:
        specialinvoke r0.<android.app.ActivityThread: void checkAndBlockForNetworkAccess()>();

        specialinvoke r0.<android.app.ActivityThread: void deliverNewIntents(android.app.ActivityThread$ActivityClientRecord,java.util.List)>(r5, r1);

        return;
    }

    public void handlePauseActivity(android.os.IBinder, boolean, boolean, int, android.app.servertransaction.PendingTransactionActions, java.lang.String)
    {
        android.app.ActivityThread r0;
        boolean z0, z1, $z2;
        int i0, $i1, $i2;
        android.app.servertransaction.PendingTransactionActions r1;
        java.lang.String r2;
        android.app.Activity r3;
        android.util.ArrayMap $r4;
        java.lang.Object $r5;
        android.os.IBinder r7;
        android.app.ActivityThread$ActivityClientRecord r8;

        r0 := @this: android.app.ActivityThread;

        r7 := @parameter0: android.os.IBinder;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        i0 := @parameter3: int;

        r1 := @parameter4: android.app.servertransaction.PendingTransactionActions;

        r2 := @parameter5: java.lang.String;

        $r4 = r0.<android.app.ActivityThread: android.util.ArrayMap mActivities>;

        $r5 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r7);

        r8 = (android.app.ActivityThread$ActivityClientRecord) $r5;

        if r8 == null goto label3;

        if z1 == 0 goto label1;

        virtualinvoke r0.<android.app.ActivityThread: void performUserLeavingActivity(android.app.ActivityThread$ActivityClientRecord)>(r8);

     label1:
        r3 = r8.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $i1 = r3.<android.app.Activity: int mConfigChangeFlags>;

        $i2 = $i1 | i0;

        r3.<android.app.Activity: int mConfigChangeFlags> = $i2;

        specialinvoke r0.<android.app.ActivityThread: android.os.Bundle performPauseActivity(android.app.ActivityThread$ActivityClientRecord,boolean,java.lang.String,android.app.servertransaction.PendingTransactionActions)>(r8, z0, r2, r1);

        $z2 = staticinvoke <android.app.ActivityThread$ActivityClientRecord: boolean access$3700(android.app.ActivityThread$ActivityClientRecord)>(r8);

        if $z2 == 0 goto label2;

        staticinvoke <android.app.QueuedWork: void waitToFinish()>();

     label2:
        r0.<android.app.ActivityThread: boolean mSomeActivitiesChanged> = 1;

     label3:
        return;
    }

    public void handlePictureInPictureRequested(android.os.IBinder)
    {
        android.app.ActivityThread r0;
        android.util.ArrayMap $r1;
        java.lang.Object $r2;
        android.app.Activity $r3;
        boolean $z0;
        android.os.IBinder r4;
        android.app.ActivityThread$ActivityClientRecord r5;

        r0 := @this: android.app.ActivityThread;

        r4 := @parameter0: android.os.IBinder;

        $r1 = r0.<android.app.ActivityThread: android.util.ArrayMap mActivities>;

        $r2 = virtualinvoke $r1.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r4);

        r5 = (android.app.ActivityThread$ActivityClientRecord) $r2;

        if r5 != null goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityThread", "Activity to request PIP to no longer exists");

        return;

     label1:
        $r3 = r5.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $z0 = virtualinvoke $r3.<android.app.Activity: boolean onPictureInPictureRequested()>();

        if $z0 != 0 goto label2;

        specialinvoke r0.<android.app.ActivityThread: void schedulePauseWithUserLeaveHintAndReturnToCurrentState(android.app.ActivityThread$ActivityClientRecord)>(r5);

     label2:
        return;
    }

    final void handleProfilerControl(boolean, android.app.ProfilerInfo, int)
    {
        android.app.ActivityThread r0;
        boolean z0;
        android.app.ProfilerInfo r1;
        int i0;
        android.app.ActivityThread$Profiler $r2, $r3, $r4;
        java.lang.RuntimeException $r5;
        java.lang.String $r7, $r10;
        java.lang.Throwable $r11;
        java.lang.StringBuilder r14;

        r0 := @this: android.app.ActivityThread;

        z0 := @parameter0: boolean;

        r1 := @parameter1: android.app.ProfilerInfo;

        i0 := @parameter2: int;

        if z0 == 0 goto label8;

     label1:
        $r3 = r0.<android.app.ActivityThread: android.app.ActivityThread$Profiler mProfiler>;

        virtualinvoke $r3.<android.app.ActivityThread$Profiler: void setProfiler(android.app.ProfilerInfo)>(r1);

        $r4 = r0.<android.app.ActivityThread: android.app.ActivityThread$Profiler mProfiler>;

        virtualinvoke $r4.<android.app.ActivityThread$Profiler: void startProfiling()>();

     label2:
        virtualinvoke r1.<android.app.ProfilerInfo: void closeFd()>();

        goto label9;

     label3:
        $r11 := @caughtexception;

        goto label7;

     label4:
        $r5 := @caughtexception;

     label5:
        r14 = new java.lang.StringBuilder;

        specialinvoke r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Profiling failed on path ");

        $r7 = r1.<android.app.ProfilerInfo: java.lang.String profileFile>;

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -- can the process access this path?");

        $r10 = virtualinvoke r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityThread", $r10);

     label6:
        goto label2;

     label7:
        virtualinvoke r1.<android.app.ProfilerInfo: void closeFd()>();

        throw $r11;

     label8:
        $r2 = r0.<android.app.ActivityThread: android.app.ActivityThread$Profiler mProfiler>;

        virtualinvoke $r2.<android.app.ActivityThread$Profiler: void stopProfiling()>();

     label9:
        return;

        catch java.lang.RuntimeException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label5 to label6 with label3;
    }

    public void handleRelaunchActivity(android.app.ActivityThread$ActivityClientRecord, android.app.servertransaction.PendingTransactionActions)
    {
        android.app.ActivityThread r0;
        android.app.servertransaction.PendingTransactionActions r1;
        android.app.ResourcesManager r2;
        android.os.IBinder r3, r4, $r8, $r14, $r23, $r29;
        java.util.ArrayList $r5, $r36, $r38;
        android.content.res.Configuration $r6, $r7, $r18, $r26, $r30, $r31, $r32, $r33, $r34, $r35, r51;
        android.util.ArrayMap $r9;
        java.lang.Object $r10, $r16, $r37;
        int $i0, $i1, $i2, $i3, i4, i5, i6, i7, i8, i9, i10, i11;
        boolean $z0, $z1, $z2, $z3, $z4;
        android.app.Activity $r11, $r12, $r21, $r25, $r27, r53;
        java.util.Map $r13, $r22;
        java.lang.Integer $r15, $r17, $r24;
        java.util.List $r19, $r20;
        android.view.IWindowSession $r28;
        java.lang.Throwable $r39, $r40, $r41, $r42, $r45, $r46, r50;
        android.os.RemoteException $r43;
        java.lang.RuntimeException $r44;
        android.app.ActivityThread$ActivityClientRecord r47, r48, r49, r52;

        r0 := @this: android.app.ActivityThread;

        r47 := @parameter0: android.app.ActivityThread$ActivityClientRecord;

        r1 := @parameter1: android.app.servertransaction.PendingTransactionActions;

        virtualinvoke r0.<android.app.ActivityThread: void unscheduleGcIdler()>();

        r0.<android.app.ActivityThread: boolean mSomeActivitiesChanged> = 1;

        r2 = r0.<android.app.ActivityThread: android.app.ResourcesManager mResourcesManager>;

        entermonitor r2;

     label01:
        $r5 = r0.<android.app.ActivityThread: java.util.ArrayList mRelaunchingActivities>;

        i4 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

     label02:
        r3 = r47.<android.app.ActivityThread$ActivityClientRecord: android.os.IBinder token>;

     label03:
        i5 = 0;

        i6 = 0;

        r48 = null;

     label04:
        if i5 >= i4 goto label14;

     label05:
        $r36 = r0.<android.app.ActivityThread: java.util.ArrayList mRelaunchingActivities>;

        $r37 = virtualinvoke $r36.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        r49 = (android.app.ActivityThread$ActivityClientRecord) $r37;

        r4 = r49.<android.app.ActivityThread$ActivityClientRecord: android.os.IBinder token>;

     label06:
        i7 = i4;

        i8 = i5;

        i9 = i6;

        if r4 != r3 goto label12;

     label07:
        i10 = r49.<android.app.ActivityThread$ActivityClientRecord: int pendingConfigChanges>;

     label08:
        $r38 = r0.<android.app.ActivityThread: java.util.ArrayList mRelaunchingActivities>;

        virtualinvoke $r38.<java.util.ArrayList: java.lang.Object remove(int)>(i5);

     label09:
        i8 = i5 - 1;

        i7 = i4 - 1;

        r48 = r49;

        i9 = i10 | i6;

        goto label12;

     label10:
        $r45 := @caughtexception;

        r50 = $r45;

        goto label32;

     label11:
        $r46 := @caughtexception;

        r50 = $r46;

        goto label32;

     label12:
        i5 = i8 + 1;

        i4 = i7;

        i6 = i9;

        goto label04;

     label13:
        $r41 := @caughtexception;

        r50 = $r41;

        goto label32;

     label14:
        if r48 != null goto label17;

     label15:
        exitmonitor r2;

     label16:
        return;

     label17:
        r51 = null;

     label18:
        $r6 = r0.<android.app.ActivityThread: android.content.res.Configuration mPendingConfiguration>;

        if $r6 == null goto label19;

        r51 = r0.<android.app.ActivityThread: android.content.res.Configuration mPendingConfiguration>;

        r0.<android.app.ActivityThread: android.content.res.Configuration mPendingConfiguration> = null;

     label19:
        exitmonitor r2;

     label20:
        $r7 = r48.<android.app.ActivityThread$ActivityClientRecord: android.content.res.Configuration createdConfig>;

        if $r7 == null goto label23;

        $r30 = r0.<android.app.ActivityThread: android.content.res.Configuration mConfiguration>;

        if $r30 == null goto label21;

        $r33 = r48.<android.app.ActivityThread$ActivityClientRecord: android.content.res.Configuration createdConfig>;

        $r32 = r0.<android.app.ActivityThread: android.content.res.Configuration mConfiguration>;

        $z4 = virtualinvoke $r33.<android.content.res.Configuration: boolean isOtherSeqNewer(android.content.res.Configuration)>($r32);

        if $z4 == 0 goto label23;

        $r35 = r0.<android.app.ActivityThread: android.content.res.Configuration mConfiguration>;

        $r34 = r48.<android.app.ActivityThread$ActivityClientRecord: android.content.res.Configuration createdConfig>;

        $i3 = virtualinvoke $r35.<android.content.res.Configuration: int diff(android.content.res.Configuration)>($r34);

        if $i3 == 0 goto label23;

     label21:
        if r51 == null goto label22;

        $r31 = r48.<android.app.ActivityThread$ActivityClientRecord: android.content.res.Configuration createdConfig>;

        $z3 = virtualinvoke $r31.<android.content.res.Configuration: boolean isOtherSeqNewer(android.content.res.Configuration)>(r51);

        if $z3 == 0 goto label23;

     label22:
        r51 = r48.<android.app.ActivityThread$ActivityClientRecord: android.content.res.Configuration createdConfig>;

        goto label23;

     label23:
        if r51 == null goto label24;

        $i2 = r51.<android.content.res.Configuration: int densityDpi>;

        r0.<android.app.ActivityThread: int mCurDefaultDisplayDpi> = $i2;

        specialinvoke r0.<android.app.ActivityThread: void updateDefaultDensity()>();

        specialinvoke r0.<android.app.ActivityThread: void handleConfigurationChanged(android.content.res.Configuration,android.content.res.CompatibilityInfo)>(r51, null);

     label24:
        $r9 = r0.<android.app.ActivityThread: android.util.ArrayMap mActivities>;

        $r8 = r48.<android.app.ActivityThread$ActivityClientRecord: android.os.IBinder token>;

        $r10 = virtualinvoke $r9.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r8);

        r52 = (android.app.ActivityThread$ActivityClientRecord) $r10;

        if r52 != null goto label25;

        return;

     label25:
        r53 = r52.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $i0 = r53.<android.app.Activity: int mConfigChangeFlags>;

        $i1 = $i0 | i6;

        r53.<android.app.Activity: int mConfigChangeFlags> = $i1;

        $z0 = r48.<android.app.ActivityThread$ActivityClientRecord: boolean mPreserveWindow>;

        r52.<android.app.ActivityThread$ActivityClientRecord: boolean mPreserveWindow> = $z0;

        $r11 = r52.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r11.<android.app.Activity: boolean mChangingConfigurations> = 1;

     label26:
        $z1 = r52.<android.app.ActivityThread$ActivityClientRecord: boolean mPreserveWindow>;

        if $z1 == 0 goto label27;

        $r28 = staticinvoke <android.view.WindowManagerGlobal: android.view.IWindowSession getWindowSession()>();

        $r29 = r52.<android.app.ActivityThread$ActivityClientRecord: android.os.IBinder token>;

        interfaceinvoke $r28.<android.view.IWindowSession: void prepareToReplaceWindows(android.os.IBinder,boolean)>($r29, 1);

     label27:
        $r13 = r0.<android.app.ActivityThread: java.util.Map mLastReportedWindowingMode>;

        $r12 = r52.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r14 = virtualinvoke $r12.<android.app.Activity: android.os.IBinder getActivityToken()>();

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r16 = interfaceinvoke $r13.<java.util.Map: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)>($r14, $r15);

        $r17 = (java.lang.Integer) $r16;

        i11 = virtualinvoke $r17.<java.lang.Integer: int intValue()>();

        $r20 = r48.<android.app.ActivityThread$ActivityClientRecord: java.util.List pendingResults>;

        $r19 = r48.<android.app.ActivityThread$ActivityClientRecord: java.util.List pendingIntents>;

        $z2 = r48.<android.app.ActivityThread$ActivityClientRecord: boolean startsNotResumed>;

        $r18 = r48.<android.app.ActivityThread$ActivityClientRecord: android.content.res.Configuration overrideConfig>;

        specialinvoke r0.<android.app.ActivityThread: void handleRelaunchActivityInner(android.app.ActivityThread$ActivityClientRecord,int,java.util.List,java.util.List,android.app.servertransaction.PendingTransactionActions,boolean,android.content.res.Configuration,java.lang.String)>(r52, i6, $r20, $r19, r1, $z2, $r18, "handleRelaunchActivity");

        $r22 = r0.<android.app.ActivityThread: java.util.Map mLastReportedWindowingMode>;

        $r21 = r52.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r23 = virtualinvoke $r21.<android.app.Activity: android.os.IBinder getActivityToken()>();

        $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i11);

        interfaceinvoke $r22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r23, $r24);

        $r27 = r52.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r25 = r52.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r26 = $r25.<android.app.Activity: android.content.res.Configuration mCurrentConfig>;

        specialinvoke r0.<android.app.ActivityThread: void handleWindowingModeChangeIfNeeded(android.app.Activity,android.content.res.Configuration)>($r27, $r26);

        if r1 == null goto label28;

        virtualinvoke r1.<android.app.servertransaction.PendingTransactionActions: void setReportRelaunchToWindowManager(boolean)>(1);

     label28:
        return;

     label29:
        $r43 := @caughtexception;

        $r44 = virtualinvoke $r43.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r44;

     label30:
        $r40 := @caughtexception;

        r50 = $r40;

        goto label32;

     label31:
        $r39 := @caughtexception;

        r50 = $r39;

     label32:
        exitmonitor r2;

     label33:
        throw r50;

     label34:
        $r42 := @caughtexception;

        r50 = $r42;

        goto label32;

        catch java.lang.Throwable from label01 to label02 with label31;
        catch java.lang.Throwable from label02 to label03 with label30;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label15 to label16 with label13;
        catch java.lang.Throwable from label18 to label19 with label13;
        catch java.lang.Throwable from label19 to label20 with label13;
        catch android.os.RemoteException from label26 to label27 with label29;
        catch java.lang.Throwable from label32 to label33 with label34;
    }

    public void handleRequestAssistContextExtras(android.app.ActivityThread$RequestAssistContextExtras)
    {
        android.app.ActivityThread r0;
        long l0, $l3;
        int $i1, $i2, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, i13;
        android.os.Bundle $r2;
        android.app.assist.AssistContent $r3, r38;
        android.os.IBinder $r4, r44;
        android.util.ArrayMap $r5;
        java.lang.Object $r6, $r27, $r29;
        java.lang.ref.WeakReference $r7, $r28;
        java.util.ArrayList $r8, $r25, $r26, $r30;
        android.app.assist.AssistStructure $r9, $r10, r36, r37;
        android.app.Activity $r11, $r12, $r14, $r20, $r22, $r23, $r24;
        android.view.Window $r13, $r18;
        android.content.Intent $r15, $r16, r41;
        android.view.WindowManager$LayoutParams $r19;
        android.app.Application $r21;
        android.os.RemoteException $r32, $r34, r45;
        java.lang.RuntimeException $r33;
        android.app.ActivityThread$RequestAssistContextExtras r35;
        boolean z2, z3;
        android.app.ActivityThread$ActivityClientRecord r39;
        android.net.Uri r40;
        android.app.IActivityTaskManager r43;

        r0 := @this: android.app.ActivityThread;

        r35 := @parameter0: android.app.ActivityThread$RequestAssistContextExtras;

        i12 = r35.<android.app.ActivityThread$RequestAssistContextExtras: int requestType>;

        if i12 != 2 goto label01;

        z2 = 1;

        goto label02;

     label01:
        z2 = 0;

     label02:
        $i2 = r0.<android.app.ActivityThread: int mLastSessionId>;

        $i1 = r35.<android.app.ActivityThread$RequestAssistContextExtras: int sessionId>;

        if $i2 == $i1 goto label05;

        $i10 = r35.<android.app.ActivityThread$RequestAssistContextExtras: int sessionId>;

        r0.<android.app.ActivityThread: int mLastSessionId> = $i10;

        $r25 = r0.<android.app.ActivityThread: java.util.ArrayList mLastAssistStructures>;

        $i11 = virtualinvoke $r25.<java.util.ArrayList: int size()>();

        i13 = $i11 - 1;

     label03:
        if i13 < 0 goto label05;

        $r26 = r0.<android.app.ActivityThread: java.util.ArrayList mLastAssistStructures>;

        $r27 = virtualinvoke $r26.<java.util.ArrayList: java.lang.Object get(int)>(i13);

        $r28 = (java.lang.ref.WeakReference) $r27;

        $r29 = virtualinvoke $r28.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r36 = (android.app.assist.AssistStructure) $r29;

        if r36 == null goto label04;

        virtualinvoke r36.<android.app.assist.AssistStructure: void clearSendChannel()>();

     label04:
        $r30 = r0.<android.app.ActivityThread: java.util.ArrayList mLastAssistStructures>;

        virtualinvoke $r30.<java.util.ArrayList: java.lang.Object remove(int)>(i13);

        i13 = i13 + -1;

        goto label03;

     label05:
        $r2 = new android.os.Bundle;

        specialinvoke $r2.<android.os.Bundle: void <init>()>();

        r37 = null;

        if z2 == 0 goto label06;

        r38 = null;

        goto label07;

     label06:
        $r3 = new android.app.assist.AssistContent;

        specialinvoke $r3.<android.app.assist.AssistContent: void <init>()>();

        r38 = $r3;

     label07:
        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r5 = r0.<android.app.ActivityThread: android.util.ArrayMap mActivities>;

        $r4 = r35.<android.app.ActivityThread$RequestAssistContextExtras: android.os.IBinder activityToken>;

        $r6 = virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r4);

        r39 = (android.app.ActivityThread$ActivityClientRecord) $r6;

        r40 = null;

        if r39 == null goto label16;

        if z2 != 0 goto label08;

        $r20 = r39.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r21 = virtualinvoke $r20.<android.app.Activity: android.app.Application getApplication()>();

        $r22 = r39.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        virtualinvoke $r21.<android.app.Application: void dispatchOnProvideAssistData(android.app.Activity,android.os.Bundle)>($r22, $r2);

        $r23 = r39.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        virtualinvoke $r23.<android.app.Activity: void onProvideAssistData(android.os.Bundle)>($r2);

        $r24 = r39.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        r40 = virtualinvoke $r24.<android.app.Activity: android.net.Uri onProvideReferrer()>();

     label08:
        $i4 = r35.<android.app.ActivityThread$RequestAssistContextExtras: int requestType>;

        if $i4 == 1 goto label10;

        if z2 == 0 goto label09;

        goto label10;

     label09:
        goto label17;

     label10:
        $r10 = new android.app.assist.AssistStructure;

        $r11 = r39.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $i5 = r35.<android.app.ActivityThread$RequestAssistContextExtras: int flags>;

        specialinvoke $r10.<android.app.assist.AssistStructure: void <init>(android.app.Activity,boolean,int)>($r11, z2, $i5);

        r37 = $r10;

        $r12 = r39.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        r41 = virtualinvoke $r12.<android.app.Activity: android.content.Intent getIntent()>();

        $r13 = r39.<android.app.ActivityThread$ActivityClientRecord: android.view.Window window>;

        if $r13 == null goto label11;

        z3 = 0;

        $r18 = r39.<android.app.ActivityThread$ActivityClientRecord: android.view.Window window>;

        $r19 = virtualinvoke $r18.<android.view.Window: android.view.WindowManager$LayoutParams getAttributes()>();

        $i8 = $r19.<android.view.WindowManager$LayoutParams: int flags>;

        $i9 = $i8 & 8192;

        if $i9 != 0 goto label12;

     label11:
        z3 = 1;

     label12:
        if r41 == null goto label13;

        if z3 == 0 goto label13;

        if z2 != 0 goto label14;

        $r16 = new android.content.Intent;

        specialinvoke $r16.<android.content.Intent: void <init>(android.content.Intent)>(r41);

        $i6 = virtualinvoke $r16.<android.content.Intent: int getFlags()>();

        $i7 = $i6 & -67;

        virtualinvoke $r16.<android.content.Intent: android.content.Intent setFlags(int)>($i7);

        virtualinvoke $r16.<android.content.Intent: void removeUnsafeExtras()>();

        virtualinvoke r38.<android.app.assist.AssistContent: void setDefaultIntent(android.content.Intent)>($r16);

        goto label14;

     label13:
        if z2 != 0 goto label14;

        $r15 = new android.content.Intent;

        specialinvoke $r15.<android.content.Intent: void <init>()>();

        virtualinvoke r38.<android.app.assist.AssistContent: void setDefaultIntent(android.content.Intent)>($r15);

     label14:
        if z2 != 0 goto label15;

        $r14 = r39.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        virtualinvoke $r14.<android.app.Activity: void onProvideAssistContent(android.app.assist.AssistContent)>(r38);

     label15:
        goto label17;

     label16:
        r40 = null;

     label17:
        if r37 != null goto label18;

        $r9 = new android.app.assist.AssistStructure;

        specialinvoke $r9.<android.app.assist.AssistStructure: void <init>()>();

        r37 = $r9;

        goto label18;

     label18:
        virtualinvoke r37.<android.app.assist.AssistStructure: void setAcquisitionStartTime(long)>(l0);

        $l3 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        virtualinvoke r37.<android.app.assist.AssistStructure: void setAcquisitionEndTime(long)>($l3);

        $r8 = r0.<android.app.ActivityThread: java.util.ArrayList mLastAssistStructures>;

        $r7 = new java.lang.ref.WeakReference;

        specialinvoke $r7.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r37);

        virtualinvoke $r8.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        r43 = staticinvoke <android.app.ActivityTaskManager: android.app.IActivityTaskManager getService()>();

     label19:
        r44 = r35.<android.app.ActivityThread$RequestAssistContextExtras: android.os.IBinder requestToken>;

     label20:
        interfaceinvoke r43.<android.app.IActivityTaskManager: void reportAssistContextExtras(android.os.IBinder,android.os.Bundle,android.app.assist.AssistStructure,android.app.assist.AssistContent,android.net.Uri)>(r44, $r2, r37, r38, r40);

     label21:
        return;

     label22:
        $r32 := @caughtexception;

        r45 = $r32;

        goto label24;

     label23:
        $r34 := @caughtexception;

        r45 = $r34;

     label24:
        $r33 = virtualinvoke r45.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r33;

        catch android.os.RemoteException from label19 to label20 with label23;
        catch android.os.RemoteException from label20 to label21 with label22;
    }

    public void handleResumeActivity(android.os.IBinder, boolean, boolean, java.lang.String)
    {
        android.app.ActivityThread r0;
        android.app.Activity r1, $r7, $r13, $r14, $r19, $r32, $r35, $r36;
        android.view.WindowManager r2, $r15;
        android.view.WindowManager$LayoutParams r3, r34;
        android.view.ViewRootImpl r4, r33;
        java.util.Map $r5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, z7, z8, z9, z10, $z11, $z12, $z13;
        android.view.Window $r6, $r10, $r12, $r16, $r20, $r21, $r22;
        android.view.View $r8, $r11, $r17, r31;
        android.content.res.Configuration $r9, $r18;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, $i8, $i9;
        android.app.IActivityTaskManager $r23;
        android.os.IBinder $r24, r27;
        android.os.RemoteException $r25;
        java.lang.RuntimeException $r26;
        java.lang.String r28;
        android.app.ActivityThread$ActivityClientRecord r29, $r37;
        android.os.MessageQueue $r38;
        android.app.ActivityThread$Idler $r39;

        r0 := @this: android.app.ActivityThread;

        r27 := @parameter0: android.os.IBinder;

        z7 := @parameter1: boolean;

        z8 := @parameter2: boolean;

        r28 := @parameter3: java.lang.String;

        virtualinvoke r0.<android.app.ActivityThread: void unscheduleGcIdler()>();

        r0.<android.app.ActivityThread: boolean mSomeActivitiesChanged> = 1;

        r29 = virtualinvoke r0.<android.app.ActivityThread: android.app.ActivityThread$ActivityClientRecord performResumeActivity(android.os.IBinder,boolean,java.lang.String)>(r27, z7, r28);

        if r29 != null goto label01;

        return;

     label01:
        $r5 = r0.<android.app.ActivityThread: java.util.Map mActivitiesToBeDestroyed>;

        $z0 = interfaceinvoke $r5.<java.util.Map: boolean containsKey(java.lang.Object)>(r27);

        if $z0 == 0 goto label02;

        return;

     label02:
        r1 = r29.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        if z8 == 0 goto label03;

        i7 = 256;

        goto label04;

     label03:
        i7 = 0;

     label04:
        $z1 = r1.<android.app.Activity: boolean mStartedActivity>;

        z9 = $z1 ^ 1;

        z10 = z9;

        if z9 != 0 goto label08;

     label05:
        $r23 = staticinvoke <android.app.ActivityTaskManager: android.app.IActivityTaskManager getService()>();

        $r24 = virtualinvoke r1.<android.app.Activity: android.os.IBinder getActivityToken()>();

        z10 = interfaceinvoke $r23.<android.app.IActivityTaskManager: boolean willActivityBeVisible(android.os.IBinder)>($r24);

     label06:
        goto label08;

     label07:
        $r25 := @caughtexception;

        $r26 = virtualinvoke $r25.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r26;

     label08:
        $r6 = r29.<android.app.ActivityThread$ActivityClientRecord: android.view.Window window>;

        if $r6 != null goto label11;

        $z4 = r1.<android.app.Activity: boolean mFinished>;

        if $z4 != 0 goto label11;

        if z10 == 0 goto label11;

        $r19 = r29.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r20 = virtualinvoke $r19.<android.app.Activity: android.view.Window getWindow()>();

        r29.<android.app.ActivityThread$ActivityClientRecord: android.view.Window window> = $r20;

        $r21 = r29.<android.app.ActivityThread$ActivityClientRecord: android.view.Window window>;

        r31 = virtualinvoke $r21.<android.view.Window: android.view.View getDecorView()>();

        virtualinvoke r31.<android.view.View: void setVisibility(int)>(4);

        r2 = virtualinvoke r1.<android.app.Activity: android.view.WindowManager getWindowManager()>();

        $r22 = r29.<android.app.ActivityThread$ActivityClientRecord: android.view.Window window>;

        r3 = virtualinvoke $r22.<android.view.Window: android.view.WindowManager$LayoutParams getAttributes()>();

        r1.<android.app.Activity: android.view.View mDecor> = r31;

        r3.<android.view.WindowManager$LayoutParams: int type> = 1;

        $i5 = r3.<android.view.WindowManager$LayoutParams: int softInputMode>;

        $i6 = $i5 | i7;

        r3.<android.view.WindowManager$LayoutParams: int softInputMode> = $i6;

        $z5 = r29.<android.app.ActivityThread$ActivityClientRecord: boolean mPreserveWindow>;

        if $z5 == 0 goto label09;

        r1.<android.app.Activity: boolean mWindowAdded> = 1;

        r29.<android.app.ActivityThread$ActivityClientRecord: boolean mPreserveWindow> = 0;

        r4 = virtualinvoke r31.<android.view.View: android.view.ViewRootImpl getViewRootImpl()>();

        if r4 == null goto label09;

        virtualinvoke r4.<android.view.ViewRootImpl: void notifyChildRebuilt()>();

     label09:
        $z11 = r1.<android.app.Activity: boolean mVisibleFromClient>;

        if $z11 == 0 goto label12;

        $z6 = r1.<android.app.Activity: boolean mWindowAdded>;

        if $z6 != 0 goto label10;

        r1.<android.app.Activity: boolean mWindowAdded> = 1;

        interfaceinvoke r2.<android.view.ViewManager: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>(r31, r3);

        goto label12;

     label10:
        virtualinvoke r1.<android.app.Activity: void onWindowAttributesChanged(android.view.WindowManager$LayoutParams)>(r3);

        goto label12;

     label11:
        if z10 != 0 goto label12;

        r29.<android.app.ActivityThread$ActivityClientRecord: boolean hideForNow> = 1;

        goto label12;

     label12:
        staticinvoke <android.app.ActivityThread: void cleanUpPendingRemoveWindows(android.app.ActivityThread$ActivityClientRecord,boolean)>(r29, 0);

        $r32 = r29.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $z12 = $r32.<android.app.Activity: boolean mFinished>;

        if $z12 != 0 goto label17;

        if z10 == 0 goto label17;

        $r7 = r29.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r8 = $r7.<android.app.Activity: android.view.View mDecor>;

        if $r8 == null goto label17;

        $z2 = r29.<android.app.ActivityThread$ActivityClientRecord: boolean hideForNow>;

        if $z2 != 0 goto label17;

        $r9 = r29.<android.app.ActivityThread$ActivityClientRecord: android.content.res.Configuration newConfig>;

        if $r9 == null goto label13;

        $r18 = r29.<android.app.ActivityThread$ActivityClientRecord: android.content.res.Configuration newConfig>;

        specialinvoke r0.<android.app.ActivityThread: void performConfigurationChangedForActivity(android.app.ActivityThread$ActivityClientRecord,android.content.res.Configuration)>(r29, $r18);

        r29.<android.app.ActivityThread$ActivityClientRecord: android.content.res.Configuration newConfig> = null;

     label13:
        $r10 = r29.<android.app.ActivityThread$ActivityClientRecord: android.view.Window window>;

        $r11 = virtualinvoke $r10.<android.view.Window: android.view.View getDecorView()>();

        r33 = virtualinvoke $r11.<android.view.View: android.view.ViewRootImpl getViewRootImpl()>();

        if r33 == null goto label14;

        r34 = r33.<android.view.ViewRootImpl: android.view.WindowManager$LayoutParams mWindowAttributes>;

        goto label15;

     label14:
        $r12 = r29.<android.app.ActivityThread$ActivityClientRecord: android.view.Window window>;

        r34 = virtualinvoke $r12.<android.view.Window: android.view.WindowManager$LayoutParams getAttributes()>();

     label15:
        $i0 = r34.<android.view.WindowManager$LayoutParams: int softInputMode>;

        $i1 = 256 & $i0;

        if $i1 == i7 goto label16;

        $i2 = r34.<android.view.WindowManager$LayoutParams: int softInputMode>;

        $i3 = $i2 & -257;

        $i4 = $i3 | i7;

        r34.<android.view.WindowManager$LayoutParams: int softInputMode> = $i4;

        $r14 = r29.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $z3 = $r14.<android.app.Activity: boolean mVisibleFromClient>;

        if $z3 == 0 goto label16;

        $r15 = virtualinvoke r1.<android.app.Activity: android.view.WindowManager getWindowManager()>();

        $r16 = r29.<android.app.ActivityThread$ActivityClientRecord: android.view.Window window>;

        $r17 = virtualinvoke $r16.<android.view.Window: android.view.View getDecorView()>();

        interfaceinvoke $r15.<android.view.ViewManager: void updateViewLayout(android.view.View,android.view.ViewGroup$LayoutParams)>($r17, r34);

     label16:
        $r35 = r29.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r35.<android.app.Activity: boolean mVisibleFromServer> = 1;

        $i8 = r0.<android.app.ActivityThread: int mNumVisibleActivities>;

        $i9 = $i8 + 1;

        r0.<android.app.ActivityThread: int mNumVisibleActivities> = $i9;

        $r36 = r29.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $z13 = $r36.<android.app.Activity: boolean mVisibleFromClient>;

        if $z13 == 0 goto label17;

        $r13 = r29.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        virtualinvoke $r13.<android.app.Activity: void makeVisible()>();

     label17:
        $r37 = r0.<android.app.ActivityThread: android.app.ActivityThread$ActivityClientRecord mNewActivities>;

        r29.<android.app.ActivityThread$ActivityClientRecord: android.app.ActivityThread$ActivityClientRecord nextIdle> = $r37;

        r0.<android.app.ActivityThread: android.app.ActivityThread$ActivityClientRecord mNewActivities> = r29;

        $r38 = staticinvoke <android.os.Looper: android.os.MessageQueue myQueue()>();

        $r39 = new android.app.ActivityThread$Idler;

        specialinvoke $r39.<android.app.ActivityThread$Idler: void <init>(android.app.ActivityThread,android.app.ActivityThread$1)>(r0, null);

        virtualinvoke $r38.<android.os.MessageQueue: void addIdleHandler(android.os.MessageQueue$IdleHandler)>($r39);

        return;

        catch android.os.RemoteException from label05 to label06 with label07;
    }

    public void handleSendResult(android.os.IBinder, java.util.List, java.lang.String)
    {
        android.app.ActivityThread r0;
        java.lang.String r1, $r14, $r17, $r27, $r30, $r33;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.StringBuilder r2, $r23;
        android.util.ArrayMap $r3;
        java.lang.Object $r4;
        android.app.Activity $r5, $r6, $r7, $r8, $r10, $r18, $r21;
        android.app.Instrumentation $r9, $r22;
        android.content.Intent $r12, $r25;
        android.content.ComponentName $r13, $r26;
        android.view.View $r19;
        java.lang.Exception $r20;
        java.lang.RuntimeException $r32;
        android.util.SuperNotCalledException $r34, r38;
        android.os.IBinder r35;
        java.util.List r36;
        android.app.ActivityThread$ActivityClientRecord r37;

        r0 := @this: android.app.ActivityThread;

        r35 := @parameter0: android.os.IBinder;

        r36 := @parameter1: java.util.List;

        r1 := @parameter2: java.lang.String;

        $r3 = r0.<android.app.ActivityThread: android.util.ArrayMap mActivities>;

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r35);

        r37 = (android.app.ActivityThread$ActivityClientRecord) $r4;

        if r37 == null goto label9;

        $z1 = r37.<android.app.ActivityThread$ActivityClientRecord: boolean paused>;

        z0 = $z1 ^ 1;

        $r5 = r37.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $z2 = $r5.<android.app.Activity: boolean mFinished>;

        if $z2 != 0 goto label1;

        $r18 = r37.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r19 = $r18.<android.app.Activity: android.view.View mDecor>;

        if $r19 == null goto label1;

        $z4 = r37.<android.app.ActivityThread$ActivityClientRecord: boolean hideForNow>;

        if $z4 == 0 goto label1;

        if z0 == 0 goto label1;

        specialinvoke r0.<android.app.ActivityThread: void updateVisibility(android.app.ActivityThread$ActivityClientRecord,boolean)>(r37, 1);

     label1:
        if z0 == 0 goto label8;

     label2:
        $r7 = r37.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r7.<android.app.Activity: boolean mCalled> = 0;

        $r9 = r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        $r8 = r37.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        virtualinvoke $r9.<android.app.Instrumentation: void callActivityOnPause(android.app.Activity)>($r8);

        $r10 = r37.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $z3 = $r10.<android.app.Activity: boolean mCalled>;

        if $z3 == 0 goto label4;

     label3:
        goto label8;

     label4:
        r38 = new android.util.SuperNotCalledException;

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Activity ");

        $r12 = r37.<android.app.ActivityThread$ActivityClientRecord: android.content.Intent intent>;

        $r13 = virtualinvoke $r12.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r14 = virtualinvoke $r13.<android.content.ComponentName: java.lang.String toShortString()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" did not call through to super.onPause()");

        $r17 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r38.<android.util.SuperNotCalledException: void <init>(java.lang.String)>($r17);

        throw r38;

     label5:
        $r20 := @caughtexception;

        $r22 = r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        $r21 = r37.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $z5 = virtualinvoke $r22.<android.app.Instrumentation: boolean onException(java.lang.Object,java.lang.Throwable)>($r21, $r20);

        if $z5 == 0 goto label6;

        goto label8;

     label6:
        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to pause activity ");

        $r25 = r37.<android.app.ActivityThread$ActivityClientRecord: android.content.Intent intent>;

        $r26 = virtualinvoke $r25.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r27 = virtualinvoke $r26.<android.content.ComponentName: java.lang.String toShortString()>();

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r30 = virtualinvoke $r20.<java.lang.Exception: java.lang.String toString()>();

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r32 = new java.lang.RuntimeException;

        $r33 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r32.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r33, $r20);

        throw $r32;

     label7:
        $r34 := @caughtexception;

        throw $r34;

     label8:
        specialinvoke r0.<android.app.ActivityThread: void checkAndBlockForNetworkAccess()>();

        specialinvoke r0.<android.app.ActivityThread: void deliverResults(android.app.ActivityThread$ActivityClientRecord,java.util.List,java.lang.String)>(r37, r36, r1);

        if z0 == 0 goto label9;

        $r6 = r37.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        virtualinvoke $r6.<android.app.Activity: void performResume(boolean,java.lang.String)>(0, r1);

     label9:
        return;

        catch android.util.SuperNotCalledException from label2 to label3 with label7;
        catch java.lang.Exception from label2 to label3 with label5;
        catch android.util.SuperNotCalledException from label4 to label5 with label7;
        catch java.lang.Exception from label4 to label5 with label5;
    }

    public void handleStartActivity(android.os.IBinder, android.app.servertransaction.PendingTransactionActions)
    {
        android.app.ActivityThread r0;
        android.app.Activity r1, $r4, $r6;
        android.util.ArrayMap $r2;
        java.lang.Object $r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.IllegalStateException $r5;
        android.os.Bundle $r7, $r19, $r21, $r22, $r24, $r26;
        android.app.Instrumentation $r8, $r20, $r23, $r27;
        java.lang.StringBuilder $r9;
        android.content.Intent $r11;
        android.content.ComponentName $r12;
        java.lang.String $r13, $r17;
        android.util.SuperNotCalledException $r16;
        android.os.PersistableBundle $r18, $r25, $r28;
        android.os.IBinder r29;
        android.app.servertransaction.PendingTransactionActions r30;
        android.app.ActivityThread$ActivityClientRecord r31;

        r0 := @this: android.app.ActivityThread;

        r29 := @parameter0: android.os.IBinder;

        r30 := @parameter1: android.app.servertransaction.PendingTransactionActions;

        $r2 = r0.<android.app.ActivityThread: android.util.ArrayMap mActivities>;

        $r3 = virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r29);

        r31 = (android.app.ActivityThread$ActivityClientRecord) $r3;

        r1 = r31.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r4 = r31.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        if $r4 != null goto label01;

        return;

     label01:
        $z0 = r31.<android.app.ActivityThread$ActivityClientRecord: boolean stopped>;

        if $z0 == 0 goto label11;

        $r6 = r31.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $z1 = $r6.<android.app.Activity: boolean mFinished>;

        if $z1 == 0 goto label02;

        return;

     label02:
        virtualinvoke r0.<android.app.ActivityThread: void unscheduleGcIdler()>();

        virtualinvoke r1.<android.app.Activity: void performStart(java.lang.String)>("handleStartActivity");

        virtualinvoke r31.<android.app.ActivityThread$ActivityClientRecord: void setState(int)>(2);

        if r30 != null goto label03;

        return;

     label03:
        $z2 = virtualinvoke r30.<android.app.servertransaction.PendingTransactionActions: boolean shouldRestoreInstanceState()>();

        if $z2 == 0 goto label06;

        $z5 = virtualinvoke r31.<android.app.ActivityThread$ActivityClientRecord: boolean isPersistable()>();

        if $z5 == 0 goto label05;

        $r24 = r31.<android.app.ActivityThread$ActivityClientRecord: android.os.Bundle state>;

        if $r24 != null goto label04;

        $r28 = r31.<android.app.ActivityThread$ActivityClientRecord: android.os.PersistableBundle persistentState>;

        if $r28 == null goto label06;

     label04:
        $r27 = r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        $r26 = r31.<android.app.ActivityThread$ActivityClientRecord: android.os.Bundle state>;

        $r25 = r31.<android.app.ActivityThread$ActivityClientRecord: android.os.PersistableBundle persistentState>;

        virtualinvoke $r27.<android.app.Instrumentation: void callActivityOnRestoreInstanceState(android.app.Activity,android.os.Bundle,android.os.PersistableBundle)>(r1, $r26, $r25);

        goto label06;

     label05:
        $r21 = r31.<android.app.ActivityThread$ActivityClientRecord: android.os.Bundle state>;

        if $r21 == null goto label06;

        $r23 = r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        $r22 = r31.<android.app.ActivityThread$ActivityClientRecord: android.os.Bundle state>;

        virtualinvoke $r23.<android.app.Instrumentation: void callActivityOnRestoreInstanceState(android.app.Activity,android.os.Bundle)>(r1, $r22);

     label06:
        $z6 = virtualinvoke r30.<android.app.servertransaction.PendingTransactionActions: boolean shouldCallOnPostCreate()>();

        if $z6 == 0 goto label10;

        r1.<android.app.Activity: boolean mCalled> = 0;

        $z3 = virtualinvoke r31.<android.app.ActivityThread$ActivityClientRecord: boolean isPersistable()>();

        if $z3 == 0 goto label07;

        $r20 = r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        $r19 = r31.<android.app.ActivityThread$ActivityClientRecord: android.os.Bundle state>;

        $r18 = r31.<android.app.ActivityThread$ActivityClientRecord: android.os.PersistableBundle persistentState>;

        virtualinvoke $r20.<android.app.Instrumentation: void callActivityOnPostCreate(android.app.Activity,android.os.Bundle,android.os.PersistableBundle)>(r1, $r19, $r18);

        goto label08;

     label07:
        $r8 = r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        $r7 = r31.<android.app.ActivityThread$ActivityClientRecord: android.os.Bundle state>;

        virtualinvoke $r8.<android.app.Instrumentation: void callActivityOnPostCreate(android.app.Activity,android.os.Bundle)>(r1, $r7);

     label08:
        $z4 = r1.<android.app.Activity: boolean mCalled>;

        if $z4 == 0 goto label09;

        goto label10;

     label09:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Activity ");

        $r11 = r31.<android.app.ActivityThread$ActivityClientRecord: android.content.Intent intent>;

        $r12 = virtualinvoke $r11.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r13 = virtualinvoke $r12.<android.content.ComponentName: java.lang.String toShortString()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" did not call through to super.onPostCreate()");

        $r16 = new android.util.SuperNotCalledException;

        $r17 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<android.util.SuperNotCalledException: void <init>(java.lang.String)>($r17);

        throw $r16;

     label10:
        specialinvoke r0.<android.app.ActivityThread: void updateVisibility(android.app.ActivityThread$ActivityClientRecord,boolean)>(r31, 1);

        r0.<android.app.ActivityThread: boolean mSomeActivitiesChanged> = 1;

        return;

     label11:
        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Can\'t start activity that is not stopped.");

        throw $r5;
    }

    public void handleStopActivity(android.os.IBinder, int, android.app.servertransaction.PendingTransactionActions, boolean, java.lang.String)
    {
        android.app.ActivityThread r0;
        int i0, $i1, $i2;
        android.app.servertransaction.PendingTransactionActions r1;
        boolean z0, $z1;
        java.lang.String r2;
        android.util.ArrayMap $r3;
        java.lang.Object $r4;
        android.app.servertransaction.PendingTransactionActions$StopInfo $r5;
        android.os.Bundle $r6;
        android.os.PersistableBundle $r7;
        android.os.IBinder r8;
        android.app.ActivityThread$ActivityClientRecord r9;
        android.app.Activity r10;

        r0 := @this: android.app.ActivityThread;

        r8 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        r1 := @parameter2: android.app.servertransaction.PendingTransactionActions;

        z0 := @parameter3: boolean;

        r2 := @parameter4: java.lang.String;

        $r3 = r0.<android.app.ActivityThread: android.util.ArrayMap mActivities>;

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r8);

        r9 = (android.app.ActivityThread$ActivityClientRecord) $r4;

        r10 = r9.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $i1 = r10.<android.app.Activity: int mConfigChangeFlags>;

        $i2 = $i1 | i0;

        r10.<android.app.Activity: int mConfigChangeFlags> = $i2;

        $r5 = new android.app.servertransaction.PendingTransactionActions$StopInfo;

        specialinvoke $r5.<android.app.servertransaction.PendingTransactionActions$StopInfo: void <init>()>();

        specialinvoke r0.<android.app.ActivityThread: void performStopActivityInner(android.app.ActivityThread$ActivityClientRecord,android.app.servertransaction.PendingTransactionActions$StopInfo,boolean,boolean,java.lang.String)>(r9, $r5, 1, z0, r2);

        specialinvoke r0.<android.app.ActivityThread: void updateVisibility(android.app.ActivityThread$ActivityClientRecord,boolean)>(r9, 0);

        $z1 = staticinvoke <android.app.ActivityThread$ActivityClientRecord: boolean access$3700(android.app.ActivityThread$ActivityClientRecord)>(r9);

        if $z1 != 0 goto label1;

        staticinvoke <android.app.QueuedWork: void waitToFinish()>();

     label1:
        virtualinvoke $r5.<android.app.servertransaction.PendingTransactionActions$StopInfo: void setActivity(android.app.ActivityThread$ActivityClientRecord)>(r9);

        $r6 = r9.<android.app.ActivityThread$ActivityClientRecord: android.os.Bundle state>;

        virtualinvoke $r5.<android.app.servertransaction.PendingTransactionActions$StopInfo: void setState(android.os.Bundle)>($r6);

        $r7 = r9.<android.app.ActivityThread$ActivityClientRecord: android.os.PersistableBundle persistentState>;

        virtualinvoke $r5.<android.app.servertransaction.PendingTransactionActions$StopInfo: void setPersistentState(android.os.PersistableBundle)>($r7);

        virtualinvoke r1.<android.app.servertransaction.PendingTransactionActions: void setStopInfo(android.app.servertransaction.PendingTransactionActions$StopInfo)>($r5);

        r0.<android.app.ActivityThread: boolean mSomeActivitiesChanged> = 1;

        return;
    }

    public void handleSystemApplicationInfoChanged(android.content.pm.ApplicationInfo)
    {
        android.app.ActivityThread r0;
        android.content.pm.ApplicationInfo r1;
        boolean $z0;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.content.pm.ApplicationInfo;

        $z0 = r0.<android.app.ActivityThread: boolean mSystemThread>;

        staticinvoke <com.android.internal.util.Preconditions: void checkState(boolean,java.lang.String)>($z0, "Must only be called in the system process");

        virtualinvoke r0.<android.app.ActivityThread: void handleApplicationInfoChanged(android.content.pm.ApplicationInfo)>(r1);

        return;
    }

    public void handleTopResumedActivityChanged(android.os.IBinder, boolean, java.lang.String)
    {
        android.app.ActivityThread r0;
        boolean z0, $z1;
        android.util.ArrayMap $r1;
        java.lang.Object $r2;
        java.lang.StringBuilder $r3, $r8;
        java.lang.String $r6, $r12, r14;
        android.app.Activity $r7;
        java.lang.IllegalStateException $r11;
        int $i1;
        android.os.IBinder r13;
        android.app.ActivityThread$ActivityClientRecord r15;

        r0 := @this: android.app.ActivityThread;

        r13 := @parameter0: android.os.IBinder;

        z0 := @parameter1: boolean;

        r14 := @parameter2: java.lang.String;

        $r1 = r0.<android.app.ActivityThread: android.util.ArrayMap mActivities>;

        $r2 = virtualinvoke $r1.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r13);

        r15 = (android.app.ActivityThread$ActivityClientRecord) $r2;

        if r15 == null goto label4;

        $r7 = r15.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        if $r7 != null goto label1;

        goto label4;

     label1:
        $z1 = r15.<android.app.ActivityThread$ActivityClientRecord: boolean isTopResumedActivity>;

        if $z1 == z0 goto label3;

        r15.<android.app.ActivityThread$ActivityClientRecord: boolean isTopResumedActivity> = z0;

        $i1 = virtualinvoke r15.<android.app.ActivityThread$ActivityClientRecord: int getLifecycleState()>();

        if $i1 != 3 goto label2;

        specialinvoke r0.<android.app.ActivityThread: void reportTopResumedActivityChanged(android.app.ActivityThread$ActivityClientRecord,boolean,java.lang.String)>(r15, z0, "topStateChangedWhenResumed");

     label2:
        return;

     label3:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Activity top position already set to onTop=");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r11 = new java.lang.IllegalStateException;

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r12);

        throw $r11;

     label4:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not found target activity to report position change for token: ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r13);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityThread", $r6);

        return;
    }

    public void handleTranslucentConversionComplete(android.os.IBinder, boolean)
    {
        android.app.ActivityThread r0;
        boolean z0;
        android.util.ArrayMap $r1;
        java.lang.Object $r2;
        android.app.Activity $r3;
        android.os.IBinder r4;
        android.app.ActivityThread$ActivityClientRecord r5;

        r0 := @this: android.app.ActivityThread;

        r4 := @parameter0: android.os.IBinder;

        z0 := @parameter1: boolean;

        $r1 = r0.<android.app.ActivityThread: android.util.ArrayMap mActivities>;

        $r2 = virtualinvoke $r1.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r4);

        r5 = (android.app.ActivityThread$ActivityClientRecord) $r2;

        if r5 == null goto label1;

        $r3 = r5.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        virtualinvoke $r3.<android.app.Activity: void onTranslucentConversionComplete(boolean)>(z0);

     label1:
        return;
    }

    final void handleUnstableProviderDied(android.os.IBinder, boolean)
    {
        android.app.ActivityThread r0;
        boolean z0;
        android.util.ArrayMap r1;
        java.lang.Throwable $r2;
        android.os.IBinder r3;

        r0 := @this: android.app.ActivityThread;

        r3 := @parameter0: android.os.IBinder;

        z0 := @parameter1: boolean;

        r1 = r0.<android.app.ActivityThread: android.util.ArrayMap mProviderMap>;

        entermonitor r1;

     label1:
        virtualinvoke r0.<android.app.ActivityThread: void handleUnstableProviderDiedLocked(android.os.IBinder,boolean)>(r3, z0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    final void handleUnstableProviderDiedLocked(android.os.IBinder, boolean)
    {
        android.app.ActivityThread r0;
        boolean z0;
        android.app.ActivityThread$ProviderRefCount r1;
        android.app.ActivityThread$ProviderClientRecord r2;
        android.util.ArrayMap $r4, $r6, $r8, $r12, $r22;
        java.lang.Object $r5, $r13;
        int $i0, i2;
        android.app.IActivityManager $r9;
        android.app.ContentProviderHolder $r10;
        android.os.IBinder $r11, $r15, r25;
        android.content.IContentProvider $r14, $r18;
        java.lang.StringBuilder $r16;
        java.lang.String $r19, $r21;
        android.os.RemoteException $r24;

        r0 := @this: android.app.ActivityThread;

        r25 := @parameter0: android.os.IBinder;

        z0 := @parameter1: boolean;

        $r4 = r0.<android.app.ActivityThread: android.util.ArrayMap mProviderRefCountMap>;

        $r5 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r25);

        r1 = (android.app.ActivityThread$ProviderRefCount) $r5;

        if r1 == null goto label7;

        $r6 = r0.<android.app.ActivityThread: android.util.ArrayMap mProviderRefCountMap>;

        virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r25);

        $r8 = r0.<android.app.ActivityThread: android.util.ArrayMap mProviderMap>;

        $i0 = virtualinvoke $r8.<android.util.ArrayMap: int size()>();

        i2 = $i0 - 1;

     label1:
        if i2 < 0 goto label3;

        $r12 = r0.<android.app.ActivityThread: android.util.ArrayMap mProviderMap>;

        $r13 = virtualinvoke $r12.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i2);

        r2 = (android.app.ActivityThread$ProviderClientRecord) $r13;

        if r2 == null goto label2;

        $r14 = r2.<android.app.ActivityThread$ProviderClientRecord: android.content.IContentProvider mProvider>;

        $r15 = interfaceinvoke $r14.<android.content.IContentProvider: android.os.IBinder asBinder()>();

        if $r15 != r25 goto label2;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removing dead content provider:");

        $r18 = r2.<android.app.ActivityThread$ProviderClientRecord: android.content.IContentProvider mProvider>;

        $r19 = virtualinvoke $r18.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityThread", $r21);

        $r22 = r0.<android.app.ActivityThread: android.util.ArrayMap mProviderMap>;

        virtualinvoke $r22.<android.util.ArrayMap: java.lang.Object removeAt(int)>(i2);

     label2:
        i2 = i2 + -1;

        goto label1;

     label3:
        if z0 == 0 goto label7;

     label4:
        $r9 = staticinvoke <android.app.ActivityManager: android.app.IActivityManager getService()>();

        $r10 = r1.<android.app.ActivityThread$ProviderRefCount: android.app.ContentProviderHolder holder>;

        $r11 = $r10.<android.app.ContentProviderHolder: android.os.IBinder connection>;

        interfaceinvoke $r9.<android.app.IActivityManager: void unstableProviderDied(android.os.IBinder)>($r11);

     label5:
        goto label7;

     label6:
        $r24 := @caughtexception;

     label7:
        return;

        catch android.os.RemoteException from label4 to label5 with label6;
    }

    public void installSystemApplicationInfo(android.content.pm.ApplicationInfo, java.lang.ClassLoader)
    {
        android.app.ActivityThread r0;
        java.lang.ClassLoader r1;
        android.app.ContextImpl $r2, $r3;
        java.lang.Throwable $r4;
        android.content.pm.ApplicationInfo r5;
        android.app.ActivityThread$Profiler r6;

        r0 := @this: android.app.ActivityThread;

        r5 := @parameter0: android.content.pm.ApplicationInfo;

        r1 := @parameter1: java.lang.ClassLoader;

        entermonitor r0;

     label1:
        $r2 = virtualinvoke r0.<android.app.ActivityThread: android.app.ContextImpl getSystemContext()>();

        virtualinvoke $r2.<android.app.ContextImpl: void installSystemApplicationInfo(android.content.pm.ApplicationInfo,java.lang.ClassLoader)>(r5, r1);

        $r3 = virtualinvoke r0.<android.app.ActivityThread: android.app.ContextImpl getSystemUiContext()>();

        virtualinvoke $r3.<android.app.ContextImpl: void installSystemApplicationInfo(android.content.pm.ApplicationInfo,java.lang.ClassLoader)>(r5, r1);

        r6 = new android.app.ActivityThread$Profiler;

        specialinvoke r6.<android.app.ActivityThread$Profiler: void <init>()>();

        r0.<android.app.ActivityThread: android.app.ActivityThread$Profiler mProfiler> = r6;

        exitmonitor r0;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public final void installSystemProviders(java.util.List)
    {
        android.app.ActivityThread r0;
        java.util.List r1;
        android.app.Application $r2;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: java.util.List;

        if r1 == null goto label1;

        $r2 = r0.<android.app.ActivityThread: android.app.Application mInitialApplication>;

        specialinvoke r0.<android.app.ActivityThread: void installContentProviders(android.content.Context,java.util.List)>($r2, r1);

     label1:
        return;
    }

    public boolean isProfiling()
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$Profiler r1, $r3;
        java.lang.String $r2;
        android.os.ParcelFileDescriptor $r4;
        boolean z0;

        r0 := @this: android.app.ActivityThread;

        r1 = r0.<android.app.ActivityThread: android.app.ActivityThread$Profiler mProfiler>;

        if r1 == null goto label1;

        $r2 = r1.<android.app.ActivityThread$Profiler: java.lang.String profileFile>;

        if $r2 == null goto label1;

        $r3 = r0.<android.app.ActivityThread: android.app.ActivityThread$Profiler mProfiler>;

        $r4 = $r3.<android.app.ActivityThread$Profiler: android.os.ParcelFileDescriptor profileFd>;

        if $r4 != null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public void lambda$attach$3$ActivityThread(android.content.res.Configuration)
    {
        android.app.ActivityThread r0;
        android.app.ResourcesManager r1, $r5, $r15;
        java.lang.StringBuilder r2;
        boolean $z0, $z1, $z2, $z3;
        android.app.Application $r3;
        android.content.Context $r4;
        android.content.res.Configuration $r6, $r8, $r9, r14;
        android.os.LocaleList $r7;
        java.lang.String $r12;
        java.lang.Throwable $r13;

        r0 := @this: android.app.ActivityThread;

        r14 := @parameter0: android.content.res.Configuration;

        r1 = r0.<android.app.ActivityThread: android.app.ResourcesManager mResourcesManager>;

        entermonitor r1;

     label1:
        $z0 = <android.os.Build: boolean IS_DEBUGGABLE>;

        if $z0 == 0 goto label2;

        $z2 = r0.<android.app.ActivityThread: boolean mHasImeComponent>;

        if $z2 == 0 goto label2;

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ViewRootImpl.ConfigChangedCallback for IME, config=");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r14);

        $r12 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ActivityThread", $r12);

     label2:
        $r15 = r0.<android.app.ActivityThread: android.app.ResourcesManager mResourcesManager>;

        $z3 = virtualinvoke $r15.<android.app.ResourcesManager: boolean applyConfigurationToResourcesLocked(android.content.res.Configuration,android.content.res.CompatibilityInfo)>(r14, null);

        if $z3 == 0 goto label4;

        $r3 = r0.<android.app.ActivityThread: android.app.Application mInitialApplication>;

        $r4 = virtualinvoke $r3.<android.app.Application: android.content.Context getApplicationContext()>();

        $r5 = r0.<android.app.ActivityThread: android.app.ResourcesManager mResourcesManager>;

        $r6 = virtualinvoke $r5.<android.app.ResourcesManager: android.content.res.Configuration getConfiguration()>();

        $r7 = virtualinvoke $r6.<android.content.res.Configuration: android.os.LocaleList getLocales()>();

        specialinvoke r0.<android.app.ActivityThread: void updateLocaleListFromAppContext(android.content.Context,android.os.LocaleList)>($r4, $r7);

        $r8 = r0.<android.app.ActivityThread: android.content.res.Configuration mPendingConfiguration>;

        if $r8 == null goto label3;

        $r9 = r0.<android.app.ActivityThread: android.content.res.Configuration mPendingConfiguration>;

        $z1 = virtualinvoke $r9.<android.content.res.Configuration: boolean isOtherSeqNewer(android.content.res.Configuration)>(r14);

        if $z1 == 0 goto label4;

     label3:
        r0.<android.app.ActivityThread: android.content.res.Configuration mPendingConfiguration> = r14;

        virtualinvoke r0.<android.app.ActivityThread: void sendMessage(int,java.lang.Object)>(118, r14);

     label4:
        exitmonitor r1;

     label5:
        return;

     label6:
        $r13 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r13;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public void onNewActivityOptions(android.os.IBinder, android.app.ActivityOptions)
    {
        android.app.ActivityThread r0;
        android.app.ActivityOptions r1;
        android.util.ArrayMap $r2;
        java.lang.Object $r3;
        android.app.Activity $r4;
        android.os.IBinder r5;
        android.app.ActivityThread$ActivityClientRecord r6;

        r0 := @this: android.app.ActivityThread;

        r5 := @parameter0: android.os.IBinder;

        r1 := @parameter1: android.app.ActivityOptions;

        $r2 = r0.<android.app.ActivityThread: android.util.ArrayMap mActivities>;

        $r3 = virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r5);

        r6 = (android.app.ActivityThread$ActivityClientRecord) $r3;

        if r6 == null goto label1;

        $r4 = r6.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        virtualinvoke $r4.<android.app.Activity: void onNewActivityOptions(android.app.ActivityOptions)>(r1);

     label1:
        return;
    }

    public final android.app.LoadedApk peekPackageInfo(java.lang.String, boolean)
    {
        android.app.ActivityThread r0;
        boolean z0;
        android.app.ResourcesManager r1;
        android.util.ArrayMap $r2, $r5;
        java.lang.Object $r3, $r4, $r6;
        java.lang.Throwable $r7;
        java.lang.String r8;
        java.lang.ref.WeakReference r9;
        android.app.LoadedApk r10;

        r0 := @this: android.app.ActivityThread;

        r8 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r1 = r0.<android.app.ActivityThread: android.app.ResourcesManager mResourcesManager>;

        entermonitor r1;

        if z0 == 0 goto label03;

     label01:
        $r5 = r0.<android.app.ActivityThread: android.util.ArrayMap mPackages>;

        $r6 = virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r8);

        r9 = (java.lang.ref.WeakReference) $r6;

     label02:
        goto label04;

     label03:
        $r2 = r0.<android.app.ActivityThread: android.util.ArrayMap mResourcePackages>;

        $r3 = virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r8);

        r9 = (java.lang.ref.WeakReference) $r3;

     label04:
        if r9 == null goto label07;

     label05:
        $r4 = virtualinvoke r9.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r10 = (android.app.LoadedApk) $r4;

     label06:
        goto label08;

     label07:
        r10 = null;

     label08:
        exitmonitor r1;

     label09:
        return r10;

     label10:
        $r7 := @caughtexception;

     label11:
        exitmonitor r1;

     label12:
        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    android.app.ActivityThread$ActivityClientRecord performDestroyActivity(android.os.IBinder, boolean, int, boolean, java.lang.String)
    {
        android.app.ActivityThread r0;
        boolean z0, z1, $z2, $z3, $z4, $z5;
        int i0, $i1, $i2;
        android.app.ActivityThread$ActivityClientRecord r1;
        android.util.SuperNotCalledException r2, $r32;
        android.util.ArrayMap $r3, $r5;
        java.lang.Object $r4;
        android.app.Activity $r7, $r16, $r18, $r20, $r34, r51, $r54, $r56, $r57;
        android.content.Intent $r9, $r24, $r38;
        java.lang.String $r10, $r13, $r25, $r28, $r31, $r40, $r43, $r46, r49;
        android.view.Window $r14, $r15;
        android.app.Activity$NonConfigurationInstances $r17;
        java.lang.Exception $r19, $r33;
        android.app.Instrumentation $r21, $r35, $r55;
        java.lang.StringBuilder $r22, $r36, r58;
        java.lang.RuntimeException $r30, $r45;
        android.content.ComponentName $r39;
        java.lang.Throwable $r47;
        android.os.IBinder r48;
        java.lang.Class r50;
        android.app.ResourcesManager r62;

        r0 := @this: android.app.ActivityThread;

        r48 := @parameter0: android.os.IBinder;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        z1 := @parameter3: boolean;

        r49 := @parameter4: java.lang.String;

        $r3 = r0.<android.app.ActivityThread: android.util.ArrayMap mActivities>;

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r48);

        r1 = (android.app.ActivityThread$ActivityClientRecord) $r4;

        r50 = null;

        if r1 == null goto label14;

        $r7 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        r50 = virtualinvoke $r7.<java.lang.Object: java.lang.Class getClass()>();

        r51 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $i1 = r51.<android.app.Activity: int mConfigChangeFlags>;

        $i2 = $i1 | i0;

        r51.<android.app.Activity: int mConfigChangeFlags> = $i2;

        if z0 == 0 goto label01;

        $r18 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r18.<android.app.Activity: boolean mFinished> = 1;

     label01:
        specialinvoke r0.<android.app.ActivityThread: void performPauseActivityIfNeeded(android.app.ActivityThread$ActivityClientRecord,java.lang.String)>(r1, "destroy");

        $z2 = r1.<android.app.ActivityThread$ActivityClientRecord: boolean stopped>;

        if $z2 != 0 goto label02;

        specialinvoke r0.<android.app.ActivityThread: void callActivityOnStop(android.app.ActivityThread$ActivityClientRecord,boolean,java.lang.String)>(r1, 0, "destroy");

     label02:
        if z1 == 0 goto label07;

     label03:
        $r16 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r17 = virtualinvoke $r16.<android.app.Activity: android.app.Activity$NonConfigurationInstances retainNonConfigurationInstances()>();

        r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity$NonConfigurationInstances lastNonConfigurationInstances> = $r17;

     label04:
        goto label07;

     label05:
        $r33 := @caughtexception;

        $r35 = r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        $r34 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $z4 = virtualinvoke $r35.<android.app.Instrumentation: boolean onException(java.lang.Object,java.lang.Throwable)>($r34, $r33);

        if $z4 == 0 goto label06;

        goto label07;

     label06:
        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to retain activity ");

        $r38 = r1.<android.app.ActivityThread$ActivityClientRecord: android.content.Intent intent>;

        $r39 = virtualinvoke $r38.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r40 = virtualinvoke $r39.<android.content.ComponentName: java.lang.String toShortString()>();

        virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r43 = virtualinvoke $r33.<java.lang.Exception: java.lang.String toString()>();

        virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);

        $r45 = new java.lang.RuntimeException;

        $r46 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r45.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r46, $r33);

        throw $r45;

     label07:
        $r54 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r54.<android.app.Activity: boolean mCalled> = 0;

        $r55 = r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        $r56 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        virtualinvoke $r55.<android.app.Instrumentation: void callActivityOnDestroy(android.app.Activity)>($r56);

        $r57 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $z5 = $r57.<android.app.Activity: boolean mCalled>;

        if $z5 == 0 goto label09;

        $r14 = r1.<android.app.ActivityThread$ActivityClientRecord: android.view.Window window>;

        if $r14 == null goto label08;

        $r15 = r1.<android.app.ActivityThread$ActivityClientRecord: android.view.Window window>;

        virtualinvoke $r15.<android.view.Window: void closeAllPanels()>();

     label08:
        goto label11;

     label09:
        r2 = new android.util.SuperNotCalledException;

        r58 = new java.lang.StringBuilder;

        specialinvoke r58.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Activity ");

        $r9 = r1.<android.app.ActivityThread$ActivityClientRecord: android.content.Intent intent>;

        $r10 = staticinvoke <android.app.ActivityThread: java.lang.String safeToComponentShortString(android.content.Intent)>($r9);

        virtualinvoke r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        virtualinvoke r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" did not call through to super.onDestroy()");

        $r13 = virtualinvoke r58.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r2.<android.util.SuperNotCalledException: void <init>(java.lang.String)>($r13);

        throw r2;

     label10:
        $r19 := @caughtexception;

        $r21 = r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        $r20 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $z3 = virtualinvoke $r21.<android.app.Instrumentation: boolean onException(java.lang.Object,java.lang.Throwable)>($r20, $r19);

        if $z3 == 0 goto label12;

     label11:
        virtualinvoke r1.<android.app.ActivityThread$ActivityClientRecord: void setState(int)>(6);

        goto label14;

     label12:
        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to destroy activity ");

        $r24 = r1.<android.app.ActivityThread$ActivityClientRecord: android.content.Intent intent>;

        $r25 = staticinvoke <android.app.ActivityThread: java.lang.String safeToComponentShortString(android.content.Intent)>($r24);

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r28 = virtualinvoke $r19.<java.lang.Exception: java.lang.String toString()>();

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r30 = new java.lang.RuntimeException;

        $r31 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r30.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r31, $r19);

        throw $r30;

     label13:
        $r32 := @caughtexception;

        throw $r32;

     label14:
        virtualinvoke r0.<android.app.ActivityThread: void schedulePurgeIdler()>();

        r62 = r0.<android.app.ActivityThread: android.app.ResourcesManager mResourcesManager>;

        entermonitor r62;

     label15:
        $r5 = r0.<android.app.ActivityThread: android.util.ArrayMap mActivities>;

        virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r48);

        exitmonitor r62;

     label16:
        staticinvoke <android.os.StrictMode: void decrementExpectedActivityCount(java.lang.Class)>(r50);

        return r1;

     label17:
        $r47 := @caughtexception;

     label18:
        exitmonitor r62;

     label19:
        throw $r47;

        catch java.lang.Exception from label03 to label04 with label05;
        catch android.util.SuperNotCalledException from label07 to label08 with label13;
        catch java.lang.Exception from label07 to label08 with label10;
        catch android.util.SuperNotCalledException from label09 to label10 with label13;
        catch java.lang.Exception from label09 to label10 with label10;
        catch java.lang.Throwable from label15 to label16 with label17;
        catch java.lang.Throwable from label18 to label19 with label17;
    }

    final android.os.Bundle performPauseActivity(android.os.IBinder, boolean, java.lang.String, android.app.servertransaction.PendingTransactionActions)
    {
        android.app.ActivityThread r0;
        boolean z0;
        java.lang.String r1;
        android.app.servertransaction.PendingTransactionActions r2;
        android.util.ArrayMap $r3;
        java.lang.Object $r4;
        android.os.IBinder r5;
        android.app.ActivityThread$ActivityClientRecord r6;
        android.os.Bundle r7;

        r0 := @this: android.app.ActivityThread;

        r5 := @parameter0: android.os.IBinder;

        z0 := @parameter1: boolean;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: android.app.servertransaction.PendingTransactionActions;

        $r3 = r0.<android.app.ActivityThread: android.util.ArrayMap mActivities>;

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r5);

        r6 = (android.app.ActivityThread$ActivityClientRecord) $r4;

        if r6 == null goto label1;

        r7 = specialinvoke r0.<android.app.ActivityThread: android.os.Bundle performPauseActivity(android.app.ActivityThread$ActivityClientRecord,boolean,java.lang.String,android.app.servertransaction.PendingTransactionActions)>(r6, z0, r1, r2);

        goto label2;

     label1:
        r7 = null;

     label2:
        return r7;
    }

    public void performRestartActivity(android.os.IBinder, boolean)
    {
        android.app.ActivityThread r0;
        boolean z0, $z1;
        android.util.ArrayMap $r1;
        java.lang.Object $r2;
        android.app.Activity $r3;
        android.os.IBinder r4;
        android.app.ActivityThread$ActivityClientRecord r5;

        r0 := @this: android.app.ActivityThread;

        r4 := @parameter0: android.os.IBinder;

        z0 := @parameter1: boolean;

        $r1 = r0.<android.app.ActivityThread: android.util.ArrayMap mActivities>;

        $r2 = virtualinvoke $r1.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r4);

        r5 = (android.app.ActivityThread$ActivityClientRecord) $r2;

        $z1 = r5.<android.app.ActivityThread$ActivityClientRecord: boolean stopped>;

        if $z1 == 0 goto label1;

        $r3 = r5.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        virtualinvoke $r3.<android.app.Activity: void performRestart(boolean,java.lang.String)>(z0, "performRestartActivity");

        if z0 == 0 goto label1;

        virtualinvoke r5.<android.app.ActivityThread$ActivityClientRecord: void setState(int)>(2);

     label1:
        return;
    }

    public android.app.ActivityThread$ActivityClientRecord performResumeActivity(android.os.IBinder, boolean, java.lang.String)
    {
        android.app.ActivityThread r0;
        boolean z0, $z1, $z2, $z3, $z4;
        android.util.ArrayMap $r2;
        java.lang.Object $r3;
        android.app.Activity $r4, $r5, $r6, $r10, $r13, $r18;
        int $i0;
        android.app.FragmentController $r7;
        java.util.List $r8, $r9, $r11, $r12;
        java.lang.IllegalStateException $r14;
        java.lang.String $r15, $r16, $r24, $r27, $r30, r32;
        java.lang.Exception $r17;
        android.app.Instrumentation $r19;
        java.lang.StringBuilder $r20;
        android.content.Intent $r22;
        android.content.ComponentName $r23;
        java.lang.RuntimeException $r29;
        android.os.IBinder r31;
        android.app.ActivityThread$ActivityClientRecord r33;

        r0 := @this: android.app.ActivityThread;

        r31 := @parameter0: android.os.IBinder;

        z0 := @parameter1: boolean;

        r32 := @parameter2: java.lang.String;

        $r2 = r0.<android.app.ActivityThread: android.util.ArrayMap mActivities>;

        $r3 = virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r31);

        r33 = (android.app.ActivityThread$ActivityClientRecord) $r3;

        if r33 == null goto label11;

        $r4 = r33.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $z1 = $r4.<android.app.Activity: boolean mFinished>;

        if $z1 == 0 goto label01;

        goto label11;

     label01:
        $i0 = virtualinvoke r33.<android.app.ActivityThread$ActivityClientRecord: int getLifecycleState()>();

        if $i0 != 3 goto label03;

        if z0 != 0 goto label02;

        $r14 = new java.lang.IllegalStateException;

        specialinvoke $r14.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Trying to resume activity which is already resumed");

        $r15 = virtualinvoke $r14.<java.lang.RuntimeException: java.lang.String getMessage()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityThread", $r15, $r14);

        $r16 = virtualinvoke r33.<android.app.ActivityThread$ActivityClientRecord: java.lang.String getStateString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ActivityThread", $r16);

     label02:
        return null;

     label03:
        if z0 == 0 goto label04;

        r33.<android.app.ActivityThread$ActivityClientRecord: boolean hideForNow> = 0;

        $r13 = r33.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r13.<android.app.Activity: boolean mStartedActivity> = 0;

     label04:
        $r5 = r33.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        virtualinvoke $r5.<android.app.Activity: void onStateNotSaved()>();

        $r6 = r33.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r7 = $r6.<android.app.Activity: android.app.FragmentController mFragments>;

        virtualinvoke $r7.<android.app.FragmentController: void noteStateNotSaved()>();

        specialinvoke r0.<android.app.ActivityThread: void checkAndBlockForNetworkAccess()>();

        $r8 = r33.<android.app.ActivityThread$ActivityClientRecord: java.util.List pendingIntents>;

        if $r8 == null goto label05;

        $r12 = r33.<android.app.ActivityThread$ActivityClientRecord: java.util.List pendingIntents>;

        specialinvoke r0.<android.app.ActivityThread: void deliverNewIntents(android.app.ActivityThread$ActivityClientRecord,java.util.List)>(r33, $r12);

        r33.<android.app.ActivityThread$ActivityClientRecord: java.util.List pendingIntents> = null;

     label05:
        $r9 = r33.<android.app.ActivityThread$ActivityClientRecord: java.util.List pendingResults>;

        if $r9 == null goto label06;

        $r11 = r33.<android.app.ActivityThread$ActivityClientRecord: java.util.List pendingResults>;

        specialinvoke r0.<android.app.ActivityThread: void deliverResults(android.app.ActivityThread$ActivityClientRecord,java.util.List,java.lang.String)>(r33, $r11, r32);

        r33.<android.app.ActivityThread$ActivityClientRecord: java.util.List pendingResults> = null;

     label06:
        $r10 = r33.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $z2 = r33.<android.app.ActivityThread$ActivityClientRecord: boolean startsNotResumed>;

        virtualinvoke $r10.<android.app.Activity: void performResume(boolean,java.lang.String)>($z2, r32);

        r33.<android.app.ActivityThread$ActivityClientRecord: android.os.Bundle state> = null;

        r33.<android.app.ActivityThread$ActivityClientRecord: android.os.PersistableBundle persistentState> = null;

        virtualinvoke r33.<android.app.ActivityThread$ActivityClientRecord: void setState(int)>(3);

        $z3 = r33.<android.app.ActivityThread$ActivityClientRecord: boolean isTopResumedActivity>;

        specialinvoke r0.<android.app.ActivityThread: void reportTopResumedActivityChanged(android.app.ActivityThread$ActivityClientRecord,boolean,java.lang.String)>(r33, $z3, "topWhenResuming");

     label07:
        goto label09;

     label08:
        $r17 := @caughtexception;

        $r19 = r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        $r18 = r33.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $z4 = virtualinvoke $r19.<android.app.Instrumentation: boolean onException(java.lang.Object,java.lang.Throwable)>($r18, $r17);

        if $z4 == 0 goto label10;

     label09:
        return r33;

     label10:
        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to resume activity ");

        $r22 = r33.<android.app.ActivityThread$ActivityClientRecord: android.content.Intent intent>;

        $r23 = virtualinvoke $r22.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r24 = virtualinvoke $r23.<android.content.ComponentName: java.lang.String toShortString()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r27 = virtualinvoke $r17.<java.lang.Exception: java.lang.String toString()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r29 = new java.lang.RuntimeException;

        $r30 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r29.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r30, $r17);

        throw $r29;

     label11:
        return null;

        catch java.lang.Exception from label04 to label05 with label08;
        catch java.lang.Exception from label05 to label06 with label08;
        catch java.lang.Exception from label06 to label07 with label08;
    }

    final void performStopActivity(android.os.IBinder, boolean, java.lang.String)
    {
        android.app.ActivityThread r0;
        android.os.IBinder r1;
        boolean z0;
        java.lang.String r2;
        android.util.ArrayMap $r3;
        java.lang.Object $r4;
        android.app.ActivityThread$ActivityClientRecord $r5;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.os.IBinder;

        z0 := @parameter1: boolean;

        r2 := @parameter2: java.lang.String;

        $r3 = r0.<android.app.ActivityThread: android.util.ArrayMap mActivities>;

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        $r5 = (android.app.ActivityThread$ActivityClientRecord) $r4;

        specialinvoke r0.<android.app.ActivityThread: void performStopActivityInner(android.app.ActivityThread$ActivityClientRecord,android.app.servertransaction.PendingTransactionActions$StopInfo,boolean,boolean,java.lang.String)>($r5, null, z0, 0, r2);

        return;
    }

    final void performUserLeavingActivity(android.app.ActivityThread$ActivityClientRecord)
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$ActivityClientRecord r1;
        android.app.Activity $r2, $r4;
        android.app.Instrumentation $r3, $r5;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.app.ActivityThread$ActivityClientRecord;

        $r3 = r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        $r2 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        virtualinvoke $r3.<android.app.Instrumentation: void callActivityOnPictureInPictureRequested(android.app.Activity)>($r2);

        $r5 = r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        $r4 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        virtualinvoke $r5.<android.app.Instrumentation: void callActivityOnUserLeaving(android.app.Activity)>($r4);

        return;
    }

    public android.app.ActivityThread$ActivityClientRecord prepareRelaunchActivity(android.os.IBinder, java.util.List, java.util.List, int, android.util.MergedConfiguration, boolean)
    {
        android.app.ActivityThread r0;
        java.util.List r1, r2, $r13, $r14, $r15, $r16;
        int i0, $i1, $i2, $i3, i4;
        android.util.MergedConfiguration r3;
        boolean z0, z1;
        android.app.ResourcesManager r4;
        android.app.ActivityThread$ActivityClientRecord r5, r19, r21;
        java.util.ArrayList $r6, $r9, $r10;
        android.content.res.Configuration $r7, $r8;
        java.lang.Object $r11;
        android.os.IBinder $r12, r18;
        java.lang.Throwable $r17;

        r0 := @this: android.app.ActivityThread;

        r18 := @parameter0: android.os.IBinder;

        r1 := @parameter1: java.util.List;

        r2 := @parameter2: java.util.List;

        i0 := @parameter3: int;

        r3 := @parameter4: android.util.MergedConfiguration;

        z0 := @parameter5: boolean;

        r4 = r0.<android.app.ActivityThread: android.app.ResourcesManager mResourcesManager>;

        entermonitor r4;

        i4 = 0;

     label01:
        r19 = null;

     label02:
        $r6 = r0.<android.app.ActivityThread: java.util.ArrayList mRelaunchingActivities>;

        $i1 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        if i4 >= $i1 goto label13;

        $r10 = r0.<android.app.ActivityThread: java.util.ArrayList mRelaunchingActivities>;

        $r11 = virtualinvoke $r10.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        r5 = (android.app.ActivityThread$ActivityClientRecord) $r11;

        $r12 = r5.<android.app.ActivityThread$ActivityClientRecord: android.os.IBinder token>;

        if $r12 != r18 goto label12;

     label03:
        if r1 == null goto label07;

     label04:
        $r15 = r5.<android.app.ActivityThread$ActivityClientRecord: java.util.List pendingResults>;

        if $r15 == null goto label06;

        $r16 = r5.<android.app.ActivityThread$ActivityClientRecord: java.util.List pendingResults>;

        interfaceinvoke $r16.<java.util.List: boolean addAll(java.util.Collection)>(r1);

     label05:
        goto label07;

     label06:
        r5.<android.app.ActivityThread$ActivityClientRecord: java.util.List pendingResults> = r1;

     label07:
        r19 = r5;

        if r2 == null goto label13;

     label08:
        $r13 = r5.<android.app.ActivityThread$ActivityClientRecord: java.util.List pendingIntents>;

        if $r13 == null goto label10;

        $r14 = r5.<android.app.ActivityThread$ActivityClientRecord: java.util.List pendingIntents>;

        interfaceinvoke $r14.<java.util.List: boolean addAll(java.util.Collection)>(r2);

     label09:
        r19 = r5;

        goto label13;

     label10:
        r5.<android.app.ActivityThread$ActivityClientRecord: java.util.List pendingIntents> = r2;

     label11:
        r19 = r5;

        goto label13;

     label12:
        i4 = i4 + 1;

        goto label01;

     label13:
        r21 = r19;

        z1 = 0;

        if r19 != null goto label17;

     label14:
        r21 = new android.app.ActivityThread$ActivityClientRecord;

        specialinvoke r21.<android.app.ActivityThread$ActivityClientRecord: void <init>()>();

     label15:
        r21.<android.app.ActivityThread$ActivityClientRecord: android.os.IBinder token> = r18;

        r21.<android.app.ActivityThread$ActivityClientRecord: java.util.List pendingResults> = r1;

        r21.<android.app.ActivityThread$ActivityClientRecord: java.util.List pendingIntents> = r2;

        r21.<android.app.ActivityThread$ActivityClientRecord: boolean mPreserveWindow> = z0;

        $r9 = r0.<android.app.ActivityThread: java.util.ArrayList mRelaunchingActivities>;

        virtualinvoke $r9.<java.util.ArrayList: boolean add(java.lang.Object)>(r21);

     label16:
        z1 = 1;

     label17:
        $r7 = virtualinvoke r3.<android.util.MergedConfiguration: android.content.res.Configuration getGlobalConfiguration()>();

        r21.<android.app.ActivityThread$ActivityClientRecord: android.content.res.Configuration createdConfig> = $r7;

        $r8 = virtualinvoke r3.<android.util.MergedConfiguration: android.content.res.Configuration getOverrideConfiguration()>();

        r21.<android.app.ActivityThread$ActivityClientRecord: android.content.res.Configuration overrideConfig> = $r8;

        $i2 = r21.<android.app.ActivityThread$ActivityClientRecord: int pendingConfigChanges>;

        $i3 = $i2 | i0;

        r21.<android.app.ActivityThread$ActivityClientRecord: int pendingConfigChanges> = $i3;

        exitmonitor r4;

     label18:
        if z1 == 0 goto label19;

        goto label20;

     label19:
        r21 = null;

     label20:
        return r21;

     label21:
        $r17 := @caughtexception;

     label22:
        exitmonitor r4;

     label23:
        throw $r17;

        catch java.lang.Throwable from label02 to label03 with label21;
        catch java.lang.Throwable from label04 to label05 with label21;
        catch java.lang.Throwable from label06 to label07 with label21;
        catch java.lang.Throwable from label08 to label09 with label21;
        catch java.lang.Throwable from label10 to label11 with label21;
        catch java.lang.Throwable from label14 to label15 with label21;
        catch java.lang.Throwable from label15 to label16 with label21;
        catch java.lang.Throwable from label17 to label18 with label21;
        catch java.lang.Throwable from label22 to label23 with label21;
    }

    public void registerOnActivityPausedListener(android.app.Activity, android.app.OnActivityPausedListener)
    {
        android.app.ActivityThread r0;
        android.app.OnActivityPausedListener r1;
        android.util.ArrayMap r2, $r4, $r6;
        java.util.ArrayList r3, r10;
        java.lang.Object $r5;
        java.lang.Throwable $r8;
        android.app.Activity r9;

        r0 := @this: android.app.ActivityThread;

        r9 := @parameter0: android.app.Activity;

        r1 := @parameter1: android.app.OnActivityPausedListener;

        r2 = r0.<android.app.ActivityThread: android.util.ArrayMap mOnPauseListeners>;

        entermonitor r2;

     label01:
        $r4 = r0.<android.app.ActivityThread: android.util.ArrayMap mOnPauseListeners>;

        $r5 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r9);

        r3 = (java.util.ArrayList) $r5;

     label02:
        r10 = r3;

        if r3 != null goto label05;

     label03:
        r10 = new java.util.ArrayList;

        specialinvoke r10.<java.util.ArrayList: void <init>()>();

     label04:
        $r6 = r0.<android.app.ActivityThread: android.util.ArrayMap mOnPauseListeners>;

        virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r9, r10);

     label05:
        virtualinvoke r10.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

     label06:
        exitmonitor r2;

     label07:
        return;

     label08:
        $r8 := @caughtexception;

     label09:
        exitmonitor r2;

     label10:
        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public final boolean releaseProvider(android.content.IContentProvider, boolean)
    {
        android.app.ActivityThread r0;
        boolean z0, $z1, z5, z6, z7;
        android.app.IActivityManager r1, $r12;
        android.util.ArrayMap $r2, r21;
        java.lang.Object $r3;
        int $i0, $i1, $i2, $i3, $i5, $i6, $i7, $i8, i10, i11;
        android.app.ContentProviderHolder $r5, $r13, $r15;
        android.content.pm.ProviderInfo $r6;
        java.lang.String $r7, $r9;
        android.app.ActivityThread$H $r10, $r11;
        android.os.IBinder $r14, r20, r23;
        java.lang.Throwable $r16;
        android.os.RemoteException $r17, $r18;
        android.content.IContentProvider r19;
        byte b9;
        android.app.ActivityThread$ProviderRefCount r22;
        android.os.Message r26;
        java.lang.StringBuilder r27;

        r0 := @this: android.app.ActivityThread;

        r19 := @parameter0: android.content.IContentProvider;

        z0 := @parameter1: boolean;

        b9 = 0;

        if r19 != null goto label01;

        return 0;

     label01:
        r20 = interfaceinvoke r19.<android.content.IContentProvider: android.os.IBinder asBinder()>();

        r21 = r0.<android.app.ActivityThread: android.util.ArrayMap mProviderMap>;

        entermonitor r21;

     label02:
        $r2 = r0.<android.app.ActivityThread: android.util.ArrayMap mProviderRefCountMap>;

        $r3 = virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r20);

        r22 = (android.app.ActivityThread$ProviderRefCount) $r3;

     label03:
        if r22 != null goto label06;

     label04:
        exitmonitor r21;

     label05:
        return 0;

     label06:
        z5 = 0;

        if z0 == 0 goto label19;

     label07:
        $i5 = r22.<android.app.ActivityThread$ProviderRefCount: int stableCount>;

        if $i5 != 0 goto label09;

        exitmonitor r21;

     label08:
        return 0;

     label09:
        $i6 = r22.<android.app.ActivityThread$ProviderRefCount: int stableCount>;

        $i7 = $i6 - 1;

        r22.<android.app.ActivityThread$ProviderRefCount: int stableCount> = $i7;

     label10:
        $i8 = r22.<android.app.ActivityThread$ProviderRefCount: int stableCount>;

        if $i8 != 0 goto label29;

        i10 = r22.<android.app.ActivityThread$ProviderRefCount: int unstableCount>;

     label11:
        if i10 != 0 goto label12;

        z5 = 1;

        goto label13;

     label12:
        z5 = 0;

     label13:
        r1 = staticinvoke <android.app.ActivityManager: android.app.IActivityManager getService()>();

        $r15 = r22.<android.app.ActivityThread$ProviderRefCount: android.app.ContentProviderHolder holder>;

        r23 = $r15.<android.app.ContentProviderHolder: android.os.IBinder connection>;

     label14:
        if z5 == 0 goto label15;

        b9 = 1;

     label15:
        interfaceinvoke r1.<android.app.IActivityManager: boolean refContentProvider(android.os.IBinder,int,int)>(r23, -1, b9);

     label16:
        goto label18;

     label17:
        $r18 := @caughtexception;

     label18:
        goto label29;

     label19:
        $i0 = r22.<android.app.ActivityThread$ProviderRefCount: int unstableCount>;

        if $i0 != 0 goto label21;

        exitmonitor r21;

     label20:
        return 0;

     label21:
        $i1 = r22.<android.app.ActivityThread$ProviderRefCount: int unstableCount>;

        $i2 = $i1 - 1;

        r22.<android.app.ActivityThread$ProviderRefCount: int unstableCount> = $i2;

     label22:
        $i3 = r22.<android.app.ActivityThread$ProviderRefCount: int unstableCount>;

        if $i3 != 0 goto label29;

        i11 = r22.<android.app.ActivityThread$ProviderRefCount: int stableCount>;

     label23:
        if i11 != 0 goto label24;

        z6 = 1;

        goto label25;

     label24:
        z6 = 0;

     label25:
        z7 = z6;

        z5 = z6;

        if z6 != 0 goto label29;

     label26:
        $r12 = staticinvoke <android.app.ActivityManager: android.app.IActivityManager getService()>();

        $r13 = r22.<android.app.ActivityThread$ProviderRefCount: android.app.ContentProviderHolder holder>;

        $r14 = $r13.<android.app.ContentProviderHolder: android.os.IBinder connection>;

        interfaceinvoke $r12.<android.app.IActivityManager: boolean refContentProvider(android.os.IBinder,int,int)>($r14, 0, -1);

     label27:
        z5 = z6;

        goto label29;

     label28:
        $r17 := @caughtexception;

        z5 = z7;

     label29:
        if z5 == 0 goto label33;

     label30:
        $z1 = r22.<android.app.ActivityThread$ProviderRefCount: boolean removePending>;

        if $z1 != 0 goto label32;

        r22.<android.app.ActivityThread$ProviderRefCount: boolean removePending> = 1;

        $r10 = r0.<android.app.ActivityThread: android.app.ActivityThread$H mH>;

        r26 = virtualinvoke $r10.<android.app.ActivityThread$H: android.os.Message obtainMessage(int,java.lang.Object)>(131, r22);

        $r11 = r0.<android.app.ActivityThread: android.app.ActivityThread$H mH>;

        virtualinvoke $r11.<android.app.ActivityThread$H: boolean sendMessageDelayed(android.os.Message,long)>(r26, 1000L);

     label31:
        goto label33;

     label32:
        r27 = new java.lang.StringBuilder;

        specialinvoke r27.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicate remove pending of provider ");

        $r5 = r22.<android.app.ActivityThread$ProviderRefCount: android.app.ContentProviderHolder holder>;

        $r6 = $r5.<android.app.ContentProviderHolder: android.content.pm.ProviderInfo info>;

        $r7 = $r6.<android.content.pm.ProviderInfo: java.lang.String name>;

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke r27.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityThread", $r9);

     label33:
        exitmonitor r21;

     label34:
        return 1;

     label35:
        $r16 := @caughtexception;

     label36:
        exitmonitor r21;

     label37:
        throw $r16;

        catch java.lang.Throwable from label02 to label03 with label35;
        catch java.lang.Throwable from label04 to label05 with label35;
        catch java.lang.Throwable from label07 to label08 with label35;
        catch java.lang.Throwable from label09 to label10 with label35;
        catch java.lang.Throwable from label10 to label11 with label35;
        catch android.os.RemoteException from label13 to label14 with label17;
        catch java.lang.Throwable from label13 to label14 with label35;
        catch android.os.RemoteException from label15 to label16 with label17;
        catch java.lang.Throwable from label15 to label16 with label35;
        catch java.lang.Throwable from label19 to label20 with label35;
        catch java.lang.Throwable from label21 to label22 with label35;
        catch java.lang.Throwable from label22 to label23 with label35;
        catch android.os.RemoteException from label26 to label27 with label28;
        catch java.lang.Throwable from label26 to label27 with label35;
        catch java.lang.Throwable from label30 to label31 with label35;
        catch java.lang.Throwable from label32 to label33 with label35;
        catch java.lang.Throwable from label33 to label34 with label35;
        catch java.lang.Throwable from label36 to label37 with label35;
    }

    public void reportRelaunch(android.os.IBinder, android.app.servertransaction.PendingTransactionActions)
    {
        android.app.ActivityThread r0;
        android.app.servertransaction.PendingTransactionActions r1;
        android.app.IActivityTaskManager $r2;
        android.util.ArrayMap $r3;
        java.lang.Object $r4;
        boolean $z0;
        android.view.Window $r5, $r6;
        android.os.RemoteException $r7;
        java.lang.RuntimeException $r8;
        android.os.IBinder r9;
        android.app.ActivityThread$ActivityClientRecord r10;

        r0 := @this: android.app.ActivityThread;

        r9 := @parameter0: android.os.IBinder;

        r1 := @parameter1: android.app.servertransaction.PendingTransactionActions;

     label1:
        $r2 = staticinvoke <android.app.ActivityTaskManager: android.app.IActivityTaskManager getService()>();

        interfaceinvoke $r2.<android.app.IActivityTaskManager: void activityRelaunched(android.os.IBinder)>(r9);

        $r3 = r0.<android.app.ActivityThread: android.util.ArrayMap mActivities>;

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r9);

        r10 = (android.app.ActivityThread$ActivityClientRecord) $r4;

        $z0 = virtualinvoke r1.<android.app.servertransaction.PendingTransactionActions: boolean shouldReportRelaunchToWindowManager()>();

        if $z0 == 0 goto label4;

     label2:
        if r10 == null goto label4;

     label3:
        $r5 = r10.<android.app.ActivityThread$ActivityClientRecord: android.view.Window window>;

        if $r5 == null goto label4;

        $r6 = r10.<android.app.ActivityThread$ActivityClientRecord: android.view.Window window>;

        virtualinvoke $r6.<android.view.Window: void reportActivityRelaunched()>();

     label4:
        return;

     label5:
        $r7 := @caughtexception;

        $r8 = virtualinvoke $r7.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r8;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public void reportStop(android.app.servertransaction.PendingTransactionActions)
    {
        android.app.ActivityThread r0;
        android.app.servertransaction.PendingTransactionActions r1;
        android.app.ActivityThread$H $r2;
        android.app.servertransaction.PendingTransactionActions$StopInfo $r3;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.app.servertransaction.PendingTransactionActions;

        $r2 = r0.<android.app.ActivityThread: android.app.ActivityThread$H mH>;

        $r3 = virtualinvoke r1.<android.app.servertransaction.PendingTransactionActions: android.app.servertransaction.PendingTransactionActions$StopInfo getStopInfo()>();

        virtualinvoke $r2.<android.app.ActivityThread$H: boolean post(java.lang.Runnable)>($r3);

        return;
    }

    public final android.content.pm.ActivityInfo resolveActivityInfo(android.content.Intent)
    {
        android.app.ActivityThread r0;
        android.content.Intent r1;
        android.content.pm.ActivityInfo r2;
        android.app.Application $r3;
        android.content.pm.PackageManager $r4;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.content.Intent;

        $r3 = r0.<android.app.ActivityThread: android.app.Application mInitialApplication>;

        $r4 = virtualinvoke $r3.<android.app.Application: android.content.pm.PackageManager getPackageManager()>();

        r2 = virtualinvoke r1.<android.content.Intent: android.content.pm.ActivityInfo resolveActivityInfo(android.content.pm.PackageManager,int)>($r4, 1024);

        if r2 != null goto label1;

        staticinvoke <android.app.Instrumentation: void checkStartActivityResult(int,java.lang.Object)>(-92, r1);

     label1:
        return r2;
    }

    final void scheduleContextCleanup(android.app.ContextImpl, java.lang.String, java.lang.String)
    {
        android.app.ActivityThread r0;
        android.app.ContextImpl r1;
        java.lang.String r2, r3;
        android.app.ActivityThread$ContextCleanupInfo $r5;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.app.ContextImpl;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r5 = new android.app.ActivityThread$ContextCleanupInfo;

        specialinvoke $r5.<android.app.ActivityThread$ContextCleanupInfo: void <init>()>();

        $r5.<android.app.ActivityThread$ContextCleanupInfo: android.app.ContextImpl context> = r1;

        $r5.<android.app.ActivityThread$ContextCleanupInfo: java.lang.String who> = r2;

        $r5.<android.app.ActivityThread$ContextCleanupInfo: java.lang.String what> = r3;

        virtualinvoke r0.<android.app.ActivityThread: void sendMessage(int,java.lang.Object)>(119, $r5);

        return;
    }

    void scheduleGcIdler()
    {
        android.app.ActivityThread r0;
        boolean $z0;
        android.app.ActivityThread$H $r1;
        android.os.MessageQueue $r2;
        android.app.ActivityThread$GcIdler $r3;

        r0 := @this: android.app.ActivityThread;

        $z0 = r0.<android.app.ActivityThread: boolean mGcIdlerScheduled>;

        if $z0 != 0 goto label1;

        r0.<android.app.ActivityThread: boolean mGcIdlerScheduled> = 1;

        $r2 = staticinvoke <android.os.Looper: android.os.MessageQueue myQueue()>();

        $r3 = r0.<android.app.ActivityThread: android.app.ActivityThread$GcIdler mGcIdler>;

        virtualinvoke $r2.<android.os.MessageQueue: void addIdleHandler(android.os.MessageQueue$IdleHandler)>($r3);

     label1:
        $r1 = r0.<android.app.ActivityThread: android.app.ActivityThread$H mH>;

        virtualinvoke $r1.<android.app.ActivityThread$H: void removeMessages(int)>(120);

        return;
    }

    void schedulePurgeIdler()
    {
        android.app.ActivityThread r0;
        boolean $z0;
        android.app.ActivityThread$H $r1;
        android.os.MessageQueue $r2;
        android.app.ActivityThread$PurgeIdler $r3;

        r0 := @this: android.app.ActivityThread;

        $z0 = r0.<android.app.ActivityThread: boolean mPurgeIdlerScheduled>;

        if $z0 != 0 goto label1;

        r0.<android.app.ActivityThread: boolean mPurgeIdlerScheduled> = 1;

        $r2 = staticinvoke <android.os.Looper: android.os.MessageQueue myQueue()>();

        $r3 = r0.<android.app.ActivityThread: android.app.ActivityThread$PurgeIdler mPurgeIdler>;

        virtualinvoke $r2.<android.os.MessageQueue: void addIdleHandler(android.os.MessageQueue$IdleHandler)>($r3);

     label1:
        $r1 = r0.<android.app.ActivityThread: android.app.ActivityThread$H mH>;

        virtualinvoke $r1.<android.app.ActivityThread$H: void removeMessages(int)>(161);

        return;
    }

    void scheduleRelaunchActivity(android.os.IBinder)
    {
        android.app.ActivityThread r0;
        android.os.IBinder r1;
        android.app.ActivityThread$H $r2;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.os.IBinder;

        $r2 = r0.<android.app.ActivityThread: android.app.ActivityThread$H mH>;

        virtualinvoke $r2.<android.app.ActivityThread$H: void removeMessages(int,java.lang.Object)>(160, r1);

        virtualinvoke r0.<android.app.ActivityThread: void sendMessage(int,java.lang.Object)>(160, r1);

        return;
    }

    public final void sendActivityResult(android.os.IBinder, java.lang.String, int, int, android.content.Intent)
    {
        android.app.ActivityThread r0;
        java.lang.String r1;
        int i0, i1;
        android.content.Intent r2;
        java.util.ArrayList $r4;
        android.app.ResultInfo $r5;
        android.app.ActivityThread$ApplicationThread $r6, $r8;
        android.app.servertransaction.ActivityResultItem $r7;
        android.os.RemoteException $r9;
        android.os.IBinder r10;
        android.app.servertransaction.ClientTransaction r11;

        r0 := @this: android.app.ActivityThread;

        r10 := @parameter0: android.os.IBinder;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r2 := @parameter4: android.content.Intent;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        $r5 = new android.app.ResultInfo;

        specialinvoke $r5.<android.app.ResultInfo: void <init>(java.lang.String,int,int,android.content.Intent)>(r1, i0, i1, r2);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        $r6 = r0.<android.app.ActivityThread: android.app.ActivityThread$ApplicationThread mAppThread>;

        r11 = staticinvoke <android.app.servertransaction.ClientTransaction: android.app.servertransaction.ClientTransaction obtain(android.app.IApplicationThread,android.os.IBinder)>($r6, r10);

        $r7 = staticinvoke <android.app.servertransaction.ActivityResultItem: android.app.servertransaction.ActivityResultItem obtain(java.util.List)>($r4);

        virtualinvoke r11.<android.app.servertransaction.ClientTransaction: void addCallback(android.app.servertransaction.ClientTransactionItem)>($r7);

     label1:
        $r8 = r0.<android.app.ActivityThread: android.app.ActivityThread$ApplicationThread mAppThread>;

        virtualinvoke $r8.<android.app.ActivityThread$ApplicationThread: void scheduleTransaction(android.app.servertransaction.ClientTransaction)>(r11);

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    void sendMessage(int, java.lang.Object)
    {
        android.app.ActivityThread r0;
        int i0;
        java.lang.Object r1;

        r0 := @this: android.app.ActivityThread;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        specialinvoke r0.<android.app.ActivityThread: void sendMessage(int,java.lang.Object,int,int,boolean)>(i0, r1, 0, 0, 0);

        return;
    }

    public final android.app.Activity startActivityNow(android.app.Activity, java.lang.String, android.content.Intent, android.content.pm.ActivityInfo, android.os.IBinder, android.os.Bundle, android.app.Activity$NonConfigurationInstances, android.os.IBinder)
    {
        android.app.ActivityThread r0;
        android.app.Activity r1, $r11;
        java.lang.String r2;
        android.content.Intent r3;
        android.content.pm.ActivityInfo r4;
        android.os.IBinder r5, r8;
        android.os.Bundle r6;
        android.app.Activity$NonConfigurationInstances r7;
        android.app.ActivityThread$ActivityClientRecord $r10;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.app.Activity;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.content.Intent;

        r4 := @parameter3: android.content.pm.ActivityInfo;

        r5 := @parameter4: android.os.IBinder;

        r6 := @parameter5: android.os.Bundle;

        r7 := @parameter6: android.app.Activity$NonConfigurationInstances;

        r8 := @parameter7: android.os.IBinder;

        $r10 = new android.app.ActivityThread$ActivityClientRecord;

        specialinvoke $r10.<android.app.ActivityThread$ActivityClientRecord: void <init>()>();

        $r10.<android.app.ActivityThread$ActivityClientRecord: android.os.IBinder token> = r5;

        $r10.<android.app.ActivityThread$ActivityClientRecord: android.os.IBinder assistToken> = r8;

        $r10.<android.app.ActivityThread$ActivityClientRecord: int ident> = 0;

        $r10.<android.app.ActivityThread$ActivityClientRecord: android.content.Intent intent> = r3;

        $r10.<android.app.ActivityThread$ActivityClientRecord: android.os.Bundle state> = r6;

        $r10.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity parent> = r1;

        $r10.<android.app.ActivityThread$ActivityClientRecord: java.lang.String embeddedID> = r2;

        $r10.<android.app.ActivityThread$ActivityClientRecord: android.content.pm.ActivityInfo activityInfo> = r4;

        $r10.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity$NonConfigurationInstances lastNonConfigurationInstances> = r7;

        $r11 = specialinvoke r0.<android.app.ActivityThread: android.app.Activity performLaunchActivity(android.app.ActivityThread$ActivityClientRecord,android.content.Intent)>($r10, null);

        return $r11;
    }

    public void stopProfiling()
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$Profiler r1;

        r0 := @this: android.app.ActivityThread;

        r1 = r0.<android.app.ActivityThread: android.app.ActivityThread$Profiler mProfiler>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.app.ActivityThread$Profiler: void stopProfiling()>();

     label1:
        return;
    }

    public void unregisterOnActivityPausedListener(android.app.Activity, android.app.OnActivityPausedListener)
    {
        android.app.ActivityThread r0;
        android.app.OnActivityPausedListener r1;
        android.util.ArrayMap r2, $r3;
        java.lang.Object $r4;
        java.lang.Throwable $r5;
        android.app.Activity r6;
        java.util.ArrayList r7;

        r0 := @this: android.app.ActivityThread;

        r6 := @parameter0: android.app.Activity;

        r1 := @parameter1: android.app.OnActivityPausedListener;

        r2 = r0.<android.app.ActivityThread: android.util.ArrayMap mOnPauseListeners>;

        entermonitor r2;

     label1:
        $r3 = r0.<android.app.ActivityThread: android.util.ArrayMap mOnPauseListeners>;

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r6);

        r7 = (java.util.ArrayList) $r4;

     label2:
        if r7 == null goto label4;

     label3:
        virtualinvoke r7.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

     label4:
        exitmonitor r2;

     label5:
        return;

     label6:
        $r5 := @caughtexception;

     label7:
        exitmonitor r2;

     label8:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    void unscheduleGcIdler()
    {
        android.app.ActivityThread r0;
        boolean $z0;
        android.app.ActivityThread$H $r1;
        android.os.MessageQueue $r2;
        android.app.ActivityThread$GcIdler $r3;

        r0 := @this: android.app.ActivityThread;

        $z0 = r0.<android.app.ActivityThread: boolean mGcIdlerScheduled>;

        if $z0 == 0 goto label1;

        r0.<android.app.ActivityThread: boolean mGcIdlerScheduled> = 0;

        $r2 = staticinvoke <android.os.Looper: android.os.MessageQueue myQueue()>();

        $r3 = r0.<android.app.ActivityThread: android.app.ActivityThread$GcIdler mGcIdler>;

        virtualinvoke $r2.<android.os.MessageQueue: void removeIdleHandler(android.os.MessageQueue$IdleHandler)>($r3);

     label1:
        $r1 = r0.<android.app.ActivityThread: android.app.ActivityThread$H mH>;

        virtualinvoke $r1.<android.app.ActivityThread$H: void removeMessages(int)>(120);

        return;
    }

    void unschedulePurgeIdler()
    {
        android.app.ActivityThread r0;
        boolean $z0;
        android.app.ActivityThread$H $r1;
        android.os.MessageQueue $r2;
        android.app.ActivityThread$PurgeIdler $r3;

        r0 := @this: android.app.ActivityThread;

        $z0 = r0.<android.app.ActivityThread: boolean mPurgeIdlerScheduled>;

        if $z0 == 0 goto label1;

        r0.<android.app.ActivityThread: boolean mPurgeIdlerScheduled> = 0;

        $r2 = staticinvoke <android.os.Looper: android.os.MessageQueue myQueue()>();

        $r3 = r0.<android.app.ActivityThread: android.app.ActivityThread$PurgeIdler mPurgeIdler>;

        virtualinvoke $r2.<android.os.MessageQueue: void removeIdleHandler(android.os.MessageQueue$IdleHandler)>($r3);

     label1:
        $r1 = r0.<android.app.ActivityThread: android.app.ActivityThread$H mH>;

        virtualinvoke $r1.<android.app.ActivityThread$H: void removeMessages(int)>(161);

        return;
    }

    public void updatePendingActivityConfiguration(android.os.IBinder, android.content.res.Configuration)
    {
        android.app.ActivityThread r0;
        android.app.ResourcesManager r1;
        android.util.ArrayMap $r2;
        java.lang.Object $r3;
        android.content.res.Configuration $r4, $r6, r10;
        boolean $z0;
        java.lang.Throwable $r7, $r8;
        android.os.IBinder r9;
        android.app.ActivityThread$ActivityClientRecord r11;

        r0 := @this: android.app.ActivityThread;

        r9 := @parameter0: android.os.IBinder;

        r10 := @parameter1: android.content.res.Configuration;

        r1 = r0.<android.app.ActivityThread: android.app.ResourcesManager mResourcesManager>;

        entermonitor r1;

     label01:
        $r2 = r0.<android.app.ActivityThread: android.util.ArrayMap mActivities>;

        $r3 = virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r9);

        r11 = (android.app.ActivityThread$ActivityClientRecord) $r3;

        exitmonitor r1;

     label02:
        if r11 != null goto label03;

        return;

     label03:
        entermonitor r11;

     label04:
        $r4 = staticinvoke <android.app.ActivityThread$ActivityClientRecord: android.content.res.Configuration access$4000(android.app.ActivityThread$ActivityClientRecord)>(r11);

        if $r4 == null goto label06;

        $r6 = staticinvoke <android.app.ActivityThread$ActivityClientRecord: android.content.res.Configuration access$4000(android.app.ActivityThread$ActivityClientRecord)>(r11);

        $z0 = virtualinvoke $r6.<android.content.res.Configuration: boolean isOtherSeqNewer(android.content.res.Configuration)>(r10);

        if $z0 != 0 goto label06;

        exitmonitor r11;

     label05:
        return;

     label06:
        staticinvoke <android.app.ActivityThread$ActivityClientRecord: android.content.res.Configuration access$4002(android.app.ActivityThread$ActivityClientRecord,android.content.res.Configuration)>(r11, r10);

        exitmonitor r11;

     label07:
        return;

     label08:
        $r7 := @caughtexception;

     label09:
        exitmonitor r11;

     label10:
        throw $r7;

     label11:
        $r8 := @caughtexception;

     label12:
        exitmonitor r1;

     label13:
        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    public void updatePendingConfiguration(android.content.res.Configuration)
    {
        android.app.ActivityThread r0;
        android.app.ResourcesManager r1;
        android.content.res.Configuration $r2, $r3, r5;
        boolean $z0;
        java.lang.Throwable $r4;

        r0 := @this: android.app.ActivityThread;

        r5 := @parameter0: android.content.res.Configuration;

        r1 = r0.<android.app.ActivityThread: android.app.ResourcesManager mResourcesManager>;

        entermonitor r1;

     label1:
        $r2 = r0.<android.app.ActivityThread: android.content.res.Configuration mPendingConfiguration>;

        if $r2 == null goto label2;

        $r3 = r0.<android.app.ActivityThread: android.content.res.Configuration mPendingConfiguration>;

        $z0 = virtualinvoke $r3.<android.content.res.Configuration: boolean isOtherSeqNewer(android.content.res.Configuration)>(r5);

        if $z0 == 0 goto label3;

     label2:
        r0.<android.app.ActivityThread: android.content.res.Configuration mPendingConfiguration> = r5;

     label3:
        exitmonitor r1;

     label4:
        return;

     label5:
        $r4 := @caughtexception;

     label6:
        exitmonitor r1;

     label7:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public void updateProcessState(int, boolean)
    {
        android.app.ActivityThread r0;
        int i0, $i1, $i2;
        boolean z0;
        android.app.ActivityThread$ApplicationThread r1;
        android.app._$$Lambda$ActivityThread$A4ykhsPb8qV3ffTqpQDklHSMDJ0 r2;
        java.util.concurrent.atomic.AtomicInteger $r3;
        java.lang.Throwable $r4;
        android.app.ActivityThread$H r5;

        r0 := @this: android.app.ActivityThread;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 = r0.<android.app.ActivityThread: android.app.ActivityThread$ApplicationThread mAppThread>;

        entermonitor r1;

     label01:
        $i1 = r0.<android.app.ActivityThread: int mLastProcessState>;

        if $i1 != i0 goto label03;

        exitmonitor r1;

     label02:
        return;

     label03:
        r0.<android.app.ActivityThread: int mLastProcessState> = i0;

     label04:
        if i0 != 2 goto label07;

     label05:
        $r3 = r0.<android.app.ActivityThread: java.util.concurrent.atomic.AtomicInteger mNumLaunchingActivities>;

        $i2 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        if $i2 <= 0 goto label07;

        r0.<android.app.ActivityThread: int mPendingProcessState> = i0;

        r5 = r0.<android.app.ActivityThread: android.app.ActivityThread$H mH>;

        r2 = new android.app._$$Lambda$ActivityThread$A4ykhsPb8qV3ffTqpQDklHSMDJ0;

        specialinvoke r2.<android.app._$$Lambda$ActivityThread$A4ykhsPb8qV3ffTqpQDklHSMDJ0: void <init>(android.app.ActivityThread)>(r0);

        virtualinvoke r5.<android.app.ActivityThread$H: boolean postDelayed(java.lang.Runnable,long)>(r2, 1000L);

     label06:
        goto label08;

     label07:
        r0.<android.app.ActivityThread: int mPendingProcessState> = -1;

        specialinvoke r0.<android.app.ActivityThread: void updateVmProcessState(int)>(i0);

     label08:
        exitmonitor r1;

     label09:
        return;

     label10:
        $r4 := @caughtexception;

     label11:
        exitmonitor r1;

     label12:
        throw $r4;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }
}
