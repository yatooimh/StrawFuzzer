abstract class android.app.ActivityTransitionCoordinator extends android.os.ResultReceiver
{
    protected static final java.lang.String KEY_ELEVATION;
    protected static final java.lang.String KEY_IMAGE_MATRIX;
    static final java.lang.String KEY_REMOTE_RECEIVER;
    protected static final java.lang.String KEY_SCALE_TYPE;
    protected static final java.lang.String KEY_SCREEN_BOTTOM;
    protected static final java.lang.String KEY_SCREEN_LEFT;
    protected static final java.lang.String KEY_SCREEN_RIGHT;
    protected static final java.lang.String KEY_SCREEN_TOP;
    protected static final java.lang.String KEY_SNAPSHOT;
    protected static final java.lang.String KEY_TRANSLATION_Z;
    public static final int MSG_ALLOW_RETURN_TRANSITION;
    public static final int MSG_CANCEL;
    public static final int MSG_EXIT_TRANSITION_COMPLETE;
    public static final int MSG_HIDE_SHARED_ELEMENTS;
    public static final int MSG_SET_REMOTE_RECEIVER;
    public static final int MSG_SHARED_ELEMENT_DESTINATION;
    public static final int MSG_START_EXIT_TRANSITION;
    public static final int MSG_TAKE_SHARED_ELEMENTS;
    protected static final android.widget.ImageView$ScaleType[] SCALE_TYPE_VALUES;
    private static final java.lang.String TAG;
    protected final java.util.ArrayList mAllSharedElementNames;
    private boolean mBackgroundAnimatorComplete;
    private final android.app.ActivityTransitionCoordinator$FixedEpicenterCallback mEpicenterCallback;
    private java.util.ArrayList mGhostViewListeners;
    protected final boolean mIsReturning;
    private boolean mIsStartingTransition;
    protected android.app.SharedElementCallback mListener;
    private android.util.ArrayMap mOriginalAlphas;
    private java.lang.Runnable mPendingTransition;
    protected android.os.ResultReceiver mResultReceiver;
    protected final java.util.ArrayList mSharedElementNames;
    private java.util.ArrayList mSharedElementParentMatrices;
    private boolean mSharedElementTransitionComplete;
    protected final java.util.ArrayList mSharedElements;
    private java.util.ArrayList mStrippedTransitioningViews;
    protected java.util.ArrayList mTransitioningViews;
    private boolean mViewsTransitionComplete;
    private android.view.Window mWindow;

    static void <clinit>()
    {
        android.widget.ImageView$ScaleType[] $r0;

        <android.app.ActivityTransitionCoordinator: java.lang.String TAG> = "ActivityTransitionCoordinator";

        <android.app.ActivityTransitionCoordinator: int MSG_TAKE_SHARED_ELEMENTS> = 103;

        <android.app.ActivityTransitionCoordinator: int MSG_START_EXIT_TRANSITION> = 105;

        <android.app.ActivityTransitionCoordinator: int MSG_SHARED_ELEMENT_DESTINATION> = 107;

        <android.app.ActivityTransitionCoordinator: int MSG_SET_REMOTE_RECEIVER> = 100;

        <android.app.ActivityTransitionCoordinator: int MSG_HIDE_SHARED_ELEMENTS> = 101;

        <android.app.ActivityTransitionCoordinator: int MSG_EXIT_TRANSITION_COMPLETE> = 104;

        <android.app.ActivityTransitionCoordinator: int MSG_CANCEL> = 106;

        <android.app.ActivityTransitionCoordinator: int MSG_ALLOW_RETURN_TRANSITION> = 108;

        <android.app.ActivityTransitionCoordinator: java.lang.String KEY_TRANSLATION_Z> = "shared_element:translationZ";

        <android.app.ActivityTransitionCoordinator: java.lang.String KEY_SNAPSHOT> = "shared_element:bitmap";

        <android.app.ActivityTransitionCoordinator: java.lang.String KEY_SCREEN_TOP> = "shared_element:screenTop";

        <android.app.ActivityTransitionCoordinator: java.lang.String KEY_SCREEN_RIGHT> = "shared_element:screenRight";

        <android.app.ActivityTransitionCoordinator: java.lang.String KEY_SCREEN_LEFT> = "shared_element:screenLeft";

        <android.app.ActivityTransitionCoordinator: java.lang.String KEY_SCREEN_BOTTOM> = "shared_element:screenBottom";

        <android.app.ActivityTransitionCoordinator: java.lang.String KEY_SCALE_TYPE> = "shared_element:scaleType";

        <android.app.ActivityTransitionCoordinator: java.lang.String KEY_REMOTE_RECEIVER> = "android:remoteReceiver";

        <android.app.ActivityTransitionCoordinator: java.lang.String KEY_IMAGE_MATRIX> = "shared_element:imageMatrix";

        <android.app.ActivityTransitionCoordinator: java.lang.String KEY_ELEVATION> = "shared_element:elevation";

        $r0 = staticinvoke <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType[] values()>();

        <android.app.ActivityTransitionCoordinator: android.widget.ImageView$ScaleType[] SCALE_TYPE_VALUES> = $r0;

        return;
    }

    public void <init>(android.view.Window, java.util.ArrayList, android.app.SharedElementCallback, boolean)
    {
        android.app.ActivityTransitionCoordinator r0;
        android.view.Window r1;
        java.util.ArrayList r2, $r5, $r6, $r7, $r9, $r11;
        android.app.SharedElementCallback r3;
        boolean z0;
        android.os.Handler $r4;
        android.app.ActivityTransitionCoordinator$FixedEpicenterCallback $r8;
        android.util.ArrayMap $r10;

        r0 := @this: android.app.ActivityTransitionCoordinator;

        r1 := @parameter0: android.view.Window;

        r2 := @parameter1: java.util.ArrayList;

        r3 := @parameter2: android.app.SharedElementCallback;

        z0 := @parameter3: boolean;

        $r4 = new android.os.Handler;

        specialinvoke $r4.<android.os.Handler: void <init>()>();

        specialinvoke r0.<android.os.ResultReceiver: void <init>(android.os.Handler)>($r4);

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<android.app.ActivityTransitionCoordinator: java.util.ArrayList mSharedElements> = $r5;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<android.app.ActivityTransitionCoordinator: java.util.ArrayList mSharedElementNames> = $r6;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r0.<android.app.ActivityTransitionCoordinator: java.util.ArrayList mTransitioningViews> = $r7;

        $r8 = new android.app.ActivityTransitionCoordinator$FixedEpicenterCallback;

        specialinvoke $r8.<android.app.ActivityTransitionCoordinator$FixedEpicenterCallback: void <init>(android.app.ActivityTransitionCoordinator$1)>(null);

        r0.<android.app.ActivityTransitionCoordinator: android.app.ActivityTransitionCoordinator$FixedEpicenterCallback mEpicenterCallback> = $r8;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r0.<android.app.ActivityTransitionCoordinator: java.util.ArrayList mGhostViewListeners> = $r9;

        $r10 = new android.util.ArrayMap;

        specialinvoke $r10.<android.util.ArrayMap: void <init>()>();

        r0.<android.app.ActivityTransitionCoordinator: android.util.ArrayMap mOriginalAlphas> = $r10;

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        r0.<android.app.ActivityTransitionCoordinator: java.util.ArrayList mStrippedTransitioningViews> = $r11;

        r0.<android.app.ActivityTransitionCoordinator: android.view.Window mWindow> = r1;

        r0.<android.app.ActivityTransitionCoordinator: android.app.SharedElementCallback mListener> = r3;

        r0.<android.app.ActivityTransitionCoordinator: java.util.ArrayList mAllSharedElementNames> = r2;

        r0.<android.app.ActivityTransitionCoordinator: boolean mIsReturning> = z0;

        return;
    }

    static boolean access$102(android.app.ActivityTransitionCoordinator, boolean)
    {
        android.app.ActivityTransitionCoordinator r0;
        boolean z0;

        r0 := @parameter0: android.app.ActivityTransitionCoordinator;

        z0 := @parameter1: boolean;

        r0.<android.app.ActivityTransitionCoordinator: boolean mIsStartingTransition> = z0;

        return z0;
    }

    static java.lang.Runnable access$200(android.app.ActivityTransitionCoordinator)
    {
        android.app.ActivityTransitionCoordinator r0;
        java.lang.Runnable $r1;

        r0 := @parameter0: android.app.ActivityTransitionCoordinator;

        $r1 = r0.<android.app.ActivityTransitionCoordinator: java.lang.Runnable mPendingTransition>;

        return $r1;
    }

    static java.lang.Runnable access$202(android.app.ActivityTransitionCoordinator, java.lang.Runnable)
    {
        android.app.ActivityTransitionCoordinator r0;
        java.lang.Runnable r1;

        r0 := @parameter0: android.app.ActivityTransitionCoordinator;

        r1 := @parameter1: java.lang.Runnable;

        r0.<android.app.ActivityTransitionCoordinator: java.lang.Runnable mPendingTransition> = r1;

        return r1;
    }

    private static void findIncludedViews(android.transition.Transition, java.util.ArrayList, android.util.ArraySet)
    {
        android.transition.Transition r0, $r7;
        java.util.ArrayList r1, $r6;
        android.util.ArraySet r2;
        android.transition.TransitionSet r3;
        android.view.View r4, r10;
        boolean $z0, $z1, $z3;
        java.lang.Object $r5, $r8;
        int i0, i1, i2, i3, i4, i5;

        r0 := @parameter0: android.transition.Transition;

        r1 := @parameter1: java.util.ArrayList;

        r2 := @parameter2: android.util.ArraySet;

        $z0 = r0 instanceof android.transition.TransitionSet;

        if $z0 == 0 goto label6;

        r3 = (android.transition.TransitionSet) r0;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r8 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r4 = (android.view.View) $r8;

        $z3 = virtualinvoke r0.<android.transition.Transition: boolean isValidTarget(android.view.View)>(r4);

        if $z3 == 0 goto label2;

        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>(r4);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        i2 = virtualinvoke r3.<android.transition.TransitionSet: int getTransitionCount()>();

        i3 = 0;

     label4:
        if i3 >= i2 goto label5;

        $r7 = virtualinvoke r3.<android.transition.TransitionSet: android.transition.Transition getTransitionAt(int)>(i3);

        staticinvoke <android.app.ActivityTransitionCoordinator: void findIncludedViews(android.transition.Transition,java.util.ArrayList,android.util.ArraySet)>($r7, $r6, r2);

        i3 = i3 + 1;

        goto label4;

     label5:
        goto label9;

     label6:
        i4 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        i5 = 0;

     label7:
        if i5 >= i4 goto label9;

        $r5 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        r10 = (android.view.View) $r5;

        $z1 = virtualinvoke r0.<android.transition.Transition: boolean isValidTarget(android.view.View)>(r10);

        if $z1 == 0 goto label8;

        virtualinvoke r2.<android.util.ArraySet: boolean add(java.lang.Object)>(r10);

     label8:
        i5 = i5 + 1;

        goto label7;

     label9:
        return;
    }

    private static android.app.ActivityTransitionCoordinator$SharedElementOriginalState getOldSharedElementState(android.view.View, java.lang.String, android.os.Bundle)
    {
        android.os.Bundle r0, r10;
        android.app.ActivityTransitionCoordinator$SharedElementOriginalState $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        float $f0, $f1;
        boolean $z0;
        android.widget.ImageView$ScaleType $r3, $r4, $r5;
        android.graphics.Matrix $r6, $r7;
        android.view.View r8;
        java.lang.String r9;
        android.widget.ImageView r11;

        r8 := @parameter0: android.view.View;

        r9 := @parameter1: java.lang.String;

        r0 := @parameter2: android.os.Bundle;

        $r2 = new android.app.ActivityTransitionCoordinator$SharedElementOriginalState;

        specialinvoke $r2.<android.app.ActivityTransitionCoordinator$SharedElementOriginalState: void <init>()>();

        $i0 = virtualinvoke r8.<android.view.View: int getLeft()>();

        $r2.<android.app.ActivityTransitionCoordinator$SharedElementOriginalState: int mLeft> = $i0;

        $i1 = virtualinvoke r8.<android.view.View: int getTop()>();

        $r2.<android.app.ActivityTransitionCoordinator$SharedElementOriginalState: int mTop> = $i1;

        $i2 = virtualinvoke r8.<android.view.View: int getRight()>();

        $r2.<android.app.ActivityTransitionCoordinator$SharedElementOriginalState: int mRight> = $i2;

        $i3 = virtualinvoke r8.<android.view.View: int getBottom()>();

        $r2.<android.app.ActivityTransitionCoordinator$SharedElementOriginalState: int mBottom> = $i3;

        $i4 = virtualinvoke r8.<android.view.View: int getMeasuredWidth()>();

        $r2.<android.app.ActivityTransitionCoordinator$SharedElementOriginalState: int mMeasuredWidth> = $i4;

        $i5 = virtualinvoke r8.<android.view.View: int getMeasuredHeight()>();

        $r2.<android.app.ActivityTransitionCoordinator$SharedElementOriginalState: int mMeasuredHeight> = $i5;

        $f0 = virtualinvoke r8.<android.view.View: float getTranslationZ()>();

        $r2.<android.app.ActivityTransitionCoordinator$SharedElementOriginalState: float mTranslationZ> = $f0;

        $f1 = virtualinvoke r8.<android.view.View: float getElevation()>();

        $r2.<android.app.ActivityTransitionCoordinator$SharedElementOriginalState: float mElevation> = $f1;

        $z0 = r8 instanceof android.widget.ImageView;

        if $z0 != 0 goto label1;

        return $r2;

     label1:
        r10 = virtualinvoke r0.<android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>(r9);

        if r10 != null goto label2;

        return $r2;

     label2:
        $i6 = virtualinvoke r10.<android.os.Bundle: int getInt(java.lang.String,int)>("shared_element:scaleType", -1);

        if $i6 >= 0 goto label3;

        return $r2;

     label3:
        r11 = (android.widget.ImageView) r8;

        $r3 = virtualinvoke r11.<android.widget.ImageView: android.widget.ImageView$ScaleType getScaleType()>();

        $r2.<android.app.ActivityTransitionCoordinator$SharedElementOriginalState: android.widget.ImageView$ScaleType mScaleType> = $r3;

        $r5 = $r2.<android.app.ActivityTransitionCoordinator$SharedElementOriginalState: android.widget.ImageView$ScaleType mScaleType>;

        $r4 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType MATRIX>;

        if $r5 != $r4 goto label4;

        $r6 = new android.graphics.Matrix;

        $r7 = virtualinvoke r11.<android.widget.ImageView: android.graphics.Matrix getImageMatrix()>();

        specialinvoke $r6.<android.graphics.Matrix: void <init>(android.graphics.Matrix)>($r7);

        $r2.<android.app.ActivityTransitionCoordinator$SharedElementOriginalState: android.graphics.Matrix mMatrix> = $r6;

     label4:
        return $r2;
    }

    private void getSharedElementParentMatrix(android.view.View, android.graphics.Matrix)
    {
        android.app.ActivityTransitionCoordinator r0;
        android.graphics.Matrix r1, $r6;
        java.util.ArrayList $r2, $r3, $r4;
        java.lang.Object $r5;
        boolean $z0;
        int $i0, $i1, i2;
        float $f0, $f1;
        android.view.View r7;
        android.view.ViewParent r8;
        android.view.ViewGroup r9;

        r0 := @this: android.app.ActivityTransitionCoordinator;

        r7 := @parameter0: android.view.View;

        r1 := @parameter1: android.graphics.Matrix;

        $r2 = r0.<android.app.ActivityTransitionCoordinator: java.util.ArrayList mSharedElementParentMatrices>;

        if $r2 != null goto label1;

        i2 = -1;

        goto label2;

     label1:
        $r3 = r0.<android.app.ActivityTransitionCoordinator: java.util.ArrayList mSharedElements>;

        i2 = virtualinvoke $r3.<java.util.ArrayList: int indexOf(java.lang.Object)>(r7);

     label2:
        if i2 >= 0 goto label4;

        virtualinvoke r1.<android.graphics.Matrix: void reset()>();

        r8 = virtualinvoke r7.<android.view.View: android.view.ViewParent getParent()>();

        $z0 = r8 instanceof android.view.ViewGroup;

        if $z0 == 0 goto label3;

        r9 = (android.view.ViewGroup) r8;

        virtualinvoke r9.<android.view.ViewGroup: void transformMatrixToLocal(android.graphics.Matrix)>(r1);

        $i0 = virtualinvoke r9.<android.view.ViewGroup: int getScrollX()>();

        $f0 = (float) $i0;

        $i1 = virtualinvoke r9.<android.view.ViewGroup: int getScrollY()>();

        $f1 = (float) $i1;

        virtualinvoke r1.<android.graphics.Matrix: boolean postTranslate(float,float)>($f0, $f1);

     label3:
        goto label5;

     label4:
        $r4 = r0.<android.app.ActivityTransitionCoordinator: java.util.ArrayList mSharedElementParentMatrices>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r6 = (android.graphics.Matrix) $r5;

        virtualinvoke r1.<android.graphics.Matrix: void set(android.graphics.Matrix)>($r6);

     label5:
        return;
    }

    public static boolean isInTransitionGroup(android.view.ViewParent, android.view.ViewGroup)
    {
        android.view.ViewGroup r0, r3;
        boolean $z0, $z1, $z2;
        android.view.ViewParent $r1, r2;

        r2 := @parameter0: android.view.ViewParent;

        r0 := @parameter1: android.view.ViewGroup;

        if r2 == r0 goto label3;

        $z0 = r2 instanceof android.view.ViewGroup;

        if $z0 != 0 goto label1;

        goto label3;

     label1:
        r3 = (android.view.ViewGroup) r2;

        $z1 = virtualinvoke r3.<android.view.ViewGroup: boolean isTransitionGroup()>();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        $r1 = virtualinvoke r3.<android.view.ViewGroup: android.view.ViewParent getParent()>();

        $z2 = staticinvoke <android.app.ActivityTransitionCoordinator: boolean isInTransitionGroup(android.view.ViewParent,android.view.ViewGroup)>($r1, r0);

        return $z2;

     label3:
        return 0;
    }

    private static boolean isNested(android.view.View, android.util.ArrayMap)
    {
        android.util.ArrayMap r0;
        boolean $z1, $z2, z3;
        android.view.View r1, r3;
        android.view.ViewParent r2;

        r1 := @parameter0: android.view.View;

        r0 := @parameter1: android.util.ArrayMap;

        r2 = virtualinvoke r1.<android.view.View: android.view.ViewParent getParent()>();

     label1:
        z3 = 0;

        $z1 = r2 instanceof android.view.View;

        if $z1 == 0 goto label3;

        r3 = (android.view.View) r2;

        $z2 = virtualinvoke r0.<android.util.ArrayMap: boolean containsValue(java.lang.Object)>(r3);

        if $z2 == 0 goto label2;

        z3 = 1;

        goto label3;

     label2:
        r2 = virtualinvoke r3.<android.view.View: android.view.ViewParent getParent()>();

        goto label1;

     label3:
        return z3;
    }

    protected static android.transition.Transition mergeTransitions(android.transition.Transition, android.transition.Transition)
    {
        android.transition.Transition r0, r1;
        android.transition.TransitionSet $r3;

        r0 := @parameter0: android.transition.Transition;

        r1 := @parameter1: android.transition.Transition;

        if r0 != null goto label1;

        return r1;

     label1:
        if r1 != null goto label2;

        return r0;

     label2:
        $r3 = new android.transition.TransitionSet;

        specialinvoke $r3.<android.transition.TransitionSet: void <init>()>();

        virtualinvoke $r3.<android.transition.TransitionSet: android.transition.TransitionSet addTransition(android.transition.Transition)>(r0);

        virtualinvoke $r3.<android.transition.TransitionSet: android.transition.TransitionSet addTransition(android.transition.Transition)>(r1);

        return $r3;
    }

    private static void noLayoutSuppressionForVisibilityTransitions(android.transition.Transition)
    {
        int i0, i1;
        boolean $z0, $z1;
        android.transition.Transition $r0, r2;
        android.transition.Visibility $r1;
        android.transition.TransitionSet r3;

        r2 := @parameter0: android.transition.Transition;

        $z0 = r2 instanceof android.transition.Visibility;

        if $z0 == 0 goto label1;

        $r1 = (android.transition.Visibility) r2;

        virtualinvoke $r1.<android.transition.Visibility: void setSuppressLayout(boolean)>(0);

        goto label3;

     label1:
        $z1 = r2 instanceof android.transition.TransitionSet;

        if $z1 == 0 goto label3;

        r3 = (android.transition.TransitionSet) r2;

        i0 = virtualinvoke r3.<android.transition.TransitionSet: int getTransitionCount()>();

        i1 = 0;

     label2:
        if i1 >= i0 goto label3;

        $r0 = virtualinvoke r3.<android.transition.TransitionSet: android.transition.Transition getTransitionAt(int)>(i1);

        staticinvoke <android.app.ActivityTransitionCoordinator: void noLayoutSuppressionForVisibilityTransitions(android.transition.Transition)>($r0);

        i1 = i1 + 1;

        goto label2;

     label3:
        return;
    }

    protected static void removeExcludedViews(android.transition.Transition, java.util.ArrayList)
    {
        android.transition.Transition r0;
        java.util.ArrayList r1;
        android.util.ArraySet $r3;

        r0 := @parameter0: android.transition.Transition;

        r1 := @parameter1: java.util.ArrayList;

        $r3 = new android.util.ArraySet;

        specialinvoke $r3.<android.util.ArraySet: void <init>()>();

        staticinvoke <android.app.ActivityTransitionCoordinator: void findIncludedViews(android.transition.Transition,java.util.ArrayList,android.util.ArraySet)>(r0, r1, $r3);

        virtualinvoke r1.<java.util.ArrayList: void clear()>();

        virtualinvoke r1.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r3);

        return;
    }

    private static int scaleTypeToInt(android.widget.ImageView$ScaleType)
    {
        android.widget.ImageView$ScaleType r0, $r2;
        android.widget.ImageView$ScaleType[] r1;
        int $i0, i1;

        r0 := @parameter0: android.widget.ImageView$ScaleType;

        i1 = 0;

     label1:
        r1 = <android.app.ActivityTransitionCoordinator: android.widget.ImageView$ScaleType[] SCALE_TYPE_VALUES>;

        $i0 = lengthof r1;

        if i1 >= $i0 goto label3;

        $r2 = r1[i1];

        if r0 != $r2 goto label2;

        return i1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return -1;
    }

    private void setEpicenter(android.view.View)
    {
        android.app.ActivityTransitionCoordinator r0;
        android.view.View r1;
        android.graphics.Rect $r3;
        android.app.ActivityTransitionCoordinator$FixedEpicenterCallback $r4, $r5;

        r0 := @this: android.app.ActivityTransitionCoordinator;

        r1 := @parameter0: android.view.View;

        if r1 != null goto label1;

        $r5 = r0.<android.app.ActivityTransitionCoordinator: android.app.ActivityTransitionCoordinator$FixedEpicenterCallback mEpicenterCallback>;

        virtualinvoke $r5.<android.app.ActivityTransitionCoordinator$FixedEpicenterCallback: void setEpicenter(android.graphics.Rect)>(null);

        goto label2;

     label1:
        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        virtualinvoke r1.<android.view.View: void getBoundsOnScreen(android.graphics.Rect)>($r3);

        $r4 = r0.<android.app.ActivityTransitionCoordinator: android.app.ActivityTransitionCoordinator$FixedEpicenterCallback mEpicenterCallback>;

        virtualinvoke $r4.<android.app.ActivityTransitionCoordinator$FixedEpicenterCallback: void setEpicenter(android.graphics.Rect)>($r3);

     label2:
        return;
    }

    protected static void setOriginalSharedElementState(java.util.ArrayList, java.util.ArrayList)
    {
        java.util.ArrayList r0, r1;
        android.view.View r2;
        android.app.ActivityTransitionCoordinator$SharedElementOriginalState r3;
        android.widget.ImageView r4;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.Object $r5, $r6;
        boolean $z0;
        android.widget.ImageView$ScaleType $r7, $r8, $r9, $r10;
        android.graphics.Matrix $r11;
        float $f0, $f1;

        r0 := @parameter0: java.util.ArrayList;

        r1 := @parameter1: java.util.ArrayList;

        i1 = 0;

     label1:
        $i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if i1 >= $i0 goto label3;

        $r5 = virtualinvoke r0.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r2 = (android.view.View) $r5;

        $r6 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r3 = (android.app.ActivityTransitionCoordinator$SharedElementOriginalState) $r6;

        $z0 = r2 instanceof android.widget.ImageView;

        if $z0 == 0 goto label2;

        $r7 = r3.<android.app.ActivityTransitionCoordinator$SharedElementOriginalState: android.widget.ImageView$ScaleType mScaleType>;

        if $r7 == null goto label2;

        r4 = (android.widget.ImageView) r2;

        $r8 = r3.<android.app.ActivityTransitionCoordinator$SharedElementOriginalState: android.widget.ImageView$ScaleType mScaleType>;

        virtualinvoke r4.<android.widget.ImageView: void setScaleType(android.widget.ImageView$ScaleType)>($r8);

        $r10 = r3.<android.app.ActivityTransitionCoordinator$SharedElementOriginalState: android.widget.ImageView$ScaleType mScaleType>;

        $r9 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType MATRIX>;

        if $r10 != $r9 goto label2;

        $r11 = r3.<android.app.ActivityTransitionCoordinator$SharedElementOriginalState: android.graphics.Matrix mMatrix>;

        virtualinvoke r4.<android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>($r11);

     label2:
        $f0 = r3.<android.app.ActivityTransitionCoordinator$SharedElementOriginalState: float mElevation>;

        virtualinvoke r2.<android.view.View: void setElevation(float)>($f0);

        $f1 = r3.<android.app.ActivityTransitionCoordinator$SharedElementOriginalState: float mTranslationZ>;

        virtualinvoke r2.<android.view.View: void setTranslationZ(float)>($f1);

        $i2 = r3.<android.app.ActivityTransitionCoordinator$SharedElementOriginalState: int mMeasuredWidth>;

        $i3 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i2, 1073741824);

        $i4 = r3.<android.app.ActivityTransitionCoordinator$SharedElementOriginalState: int mMeasuredHeight>;

        $i5 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i4, 1073741824);

        virtualinvoke r2.<android.view.View: void measure(int,int)>($i3, $i5);

        $i6 = r3.<android.app.ActivityTransitionCoordinator$SharedElementOriginalState: int mLeft>;

        $i7 = r3.<android.app.ActivityTransitionCoordinator$SharedElementOriginalState: int mTop>;

        $i8 = r3.<android.app.ActivityTransitionCoordinator$SharedElementOriginalState: int mRight>;

        $i9 = r3.<android.app.ActivityTransitionCoordinator$SharedElementOriginalState: int mBottom>;

        virtualinvoke r2.<android.view.View: void layout(int,int,int,int)>($i6, $i7, $i8, $i9);

        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    private void setSharedElementMatrices()
    {
        android.app.ActivityTransitionCoordinator r0;
        int i0, $i1, $i2, i3;
        android.view.ViewGroup r1;
        java.util.ArrayList $r3, $r4, $r9, $r10;
        java.lang.Object $r5;
        android.view.View $r6;
        android.view.ViewParent $r7;
        android.graphics.Matrix $r8;
        float $f0, $f1;

        r0 := @this: android.app.ActivityTransitionCoordinator;

        $r3 = r0.<android.app.ActivityTransitionCoordinator: java.util.ArrayList mSharedElements>;

        i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if i0 <= 0 goto label1;

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>(int)>(i0);

        r0.<android.app.ActivityTransitionCoordinator: java.util.ArrayList mSharedElementParentMatrices> = $r10;

     label1:
        i3 = 0;

     label2:
        if i3 >= i0 goto label4;

        $r4 = r0.<android.app.ActivityTransitionCoordinator: java.util.ArrayList mSharedElements>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        $r6 = (android.view.View) $r5;

        $r7 = virtualinvoke $r6.<android.view.View: android.view.ViewParent getParent()>();

        r1 = (android.view.ViewGroup) $r7;

        $r8 = new android.graphics.Matrix;

        specialinvoke $r8.<android.graphics.Matrix: void <init>()>();

        if r1 == null goto label3;

        virtualinvoke r1.<android.view.ViewGroup: void transformMatrixToLocal(android.graphics.Matrix)>($r8);

        $i1 = virtualinvoke r1.<android.view.ViewGroup: int getScrollX()>();

        $f0 = (float) $i1;

        $i2 = virtualinvoke r1.<android.view.ViewGroup: int getScrollY()>();

        $f1 = (float) $i2;

        virtualinvoke $r8.<android.graphics.Matrix: boolean postTranslate(float,float)>($f0, $f1);

     label3:
        $r9 = r0.<android.app.ActivityTransitionCoordinator: java.util.ArrayList mSharedElementParentMatrices>;

        virtualinvoke $r9.<java.util.ArrayList: boolean add(java.lang.Object)>($r8);

        i3 = i3 + 1;

        goto label2;

     label4:
        return;
    }

    private void setSharedElementState(android.view.View, java.lang.String, android.os.Bundle, android.graphics.Matrix, android.graphics.RectF, int[])
    {
        android.app.ActivityTransitionCoordinator r0;
        android.view.View r1;
        android.graphics.Matrix r2, $r6, $r7;
        android.graphics.RectF r3;
        int[] r4;
        android.widget.ImageView$ScaleType r5, $r9;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, i16;
        boolean $z0;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19;
        android.widget.ImageView$ScaleType[] $r8;
        float[] $r10;
        java.lang.String r11;
        android.os.Bundle r12, r13;
        android.widget.ImageView r14;

        r0 := @this: android.app.ActivityTransitionCoordinator;

        r1 := @parameter0: android.view.View;

        r11 := @parameter1: java.lang.String;

        r12 := @parameter2: android.os.Bundle;

        r2 := @parameter3: android.graphics.Matrix;

        r3 := @parameter4: android.graphics.RectF;

        r4 := @parameter5: int[];

        r13 = virtualinvoke r12.<android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>(r11);

        if r13 != null goto label1;

        return;

     label1:
        $z0 = r1 instanceof android.widget.ImageView;

        if $z0 == 0 goto label2;

        i15 = virtualinvoke r13.<android.os.Bundle: int getInt(java.lang.String,int)>("shared_element:scaleType", -1);

        if i15 < 0 goto label2;

        r14 = (android.widget.ImageView) r1;

        $r8 = <android.app.ActivityTransitionCoordinator: android.widget.ImageView$ScaleType[] SCALE_TYPE_VALUES>;

        r5 = $r8[i15];

        virtualinvoke r14.<android.widget.ImageView: void setScaleType(android.widget.ImageView$ScaleType)>(r5);

        $r9 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType MATRIX>;

        if r5 != $r9 goto label2;

        $r10 = virtualinvoke r13.<android.os.Bundle: float[] getFloatArray(java.lang.String)>("shared_element:imageMatrix");

        virtualinvoke r2.<android.graphics.Matrix: void setValues(float[])>($r10);

        virtualinvoke r14.<android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>(r2);

     label2:
        $f6 = virtualinvoke r13.<android.os.Bundle: float getFloat(java.lang.String)>("shared_element:translationZ");

        virtualinvoke r1.<android.view.View: void setTranslationZ(float)>($f6);

        $f7 = virtualinvoke r13.<android.os.Bundle: float getFloat(java.lang.String)>("shared_element:elevation");

        virtualinvoke r1.<android.view.View: void setElevation(float)>($f7);

        f8 = virtualinvoke r13.<android.os.Bundle: float getFloat(java.lang.String)>("shared_element:screenLeft");

        f9 = virtualinvoke r13.<android.os.Bundle: float getFloat(java.lang.String)>("shared_element:screenTop");

        f10 = virtualinvoke r13.<android.os.Bundle: float getFloat(java.lang.String)>("shared_element:screenRight");

        f11 = virtualinvoke r13.<android.os.Bundle: float getFloat(java.lang.String)>("shared_element:screenBottom");

        if r4 == null goto label3;

        $i11 = r4[0];

        $f2 = (float) $i11;

        f12 = f8 - $f2;

        $i12 = r4[1];

        $f3 = (float) $i12;

        f13 = f9 - $f3;

        $i13 = r4[0];

        $f4 = (float) $i13;

        f14 = f10 - $f4;

        $i14 = r4[1];

        $f5 = (float) $i14;

        f15 = f11 - $f5;

        goto label4;

     label3:
        specialinvoke r0.<android.app.ActivityTransitionCoordinator: void getSharedElementParentMatrix(android.view.View,android.graphics.Matrix)>(r1, r2);

        virtualinvoke r3.<android.graphics.RectF: void set(float,float,float,float)>(f8, f9, f10, f11);

        virtualinvoke r2.<android.graphics.Matrix: boolean mapRect(android.graphics.RectF)>(r3);

        f16 = r3.<android.graphics.RectF: float left>;

        f17 = r3.<android.graphics.RectF: float top>;

        $r6 = virtualinvoke r1.<android.view.View: android.graphics.Matrix getInverseMatrix()>();

        virtualinvoke $r6.<android.graphics.Matrix: boolean mapRect(android.graphics.RectF)>(r3);

        f18 = virtualinvoke r3.<android.graphics.RectF: float width()>();

        f19 = virtualinvoke r3.<android.graphics.RectF: float height()>();

        virtualinvoke r1.<android.view.View: void setLeft(int)>(0);

        virtualinvoke r1.<android.view.View: void setTop(int)>(0);

        $i3 = staticinvoke <java.lang.Math: int round(float)>(f18);

        virtualinvoke r1.<android.view.View: void setRight(int)>($i3);

        $i4 = staticinvoke <java.lang.Math: int round(float)>(f19);

        virtualinvoke r1.<android.view.View: void setBottom(int)>($i4);

        virtualinvoke r3.<android.graphics.RectF: void set(float,float,float,float)>(0.0F, 0.0F, f18, f19);

        $r7 = virtualinvoke r1.<android.view.View: android.graphics.Matrix getMatrix()>();

        virtualinvoke $r7.<android.graphics.Matrix: boolean mapRect(android.graphics.RectF)>(r3);

        $f0 = r3.<android.graphics.RectF: float left>;

        f12 = f16 - $f0;

        $f1 = r3.<android.graphics.RectF: float top>;

        f13 = f17 - $f1;

        f14 = f12 + f18;

        f15 = f13 + f19;

     label4:
        i0 = staticinvoke <java.lang.Math: int round(float)>(f12);

        i1 = staticinvoke <java.lang.Math: int round(float)>(f13);

        $i5 = staticinvoke <java.lang.Math: int round(float)>(f14);

        i16 = $i5 - i0;

        $i6 = staticinvoke <java.lang.Math: int round(float)>(f15);

        i2 = $i6 - i1;

        $i7 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i16, 1073741824);

        $i8 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i2, 1073741824);

        virtualinvoke r1.<android.view.View: void measure(int,int)>($i7, $i8);

        $i10 = i0 + i16;

        $i9 = i1 + i2;

        virtualinvoke r1.<android.view.View: void layout(int,int,int,int)>(i0, i1, $i10, $i9);

        return;
    }

    private void setSharedElements(android.util.ArrayMap)
    {
        android.app.ActivityTransitionCoordinator r0;
        android.util.ArrayMap r1;
        android.view.View r2;
        java.lang.String r3;
        boolean $z0, $z1, $z4, z5;
        int $i0, i1;
        java.lang.Object $r4, $r5;
        java.util.ArrayList $r6, $r7;

        r0 := @this: android.app.ActivityTransitionCoordinator;

        r1 := @parameter0: android.util.ArrayMap;

        z5 = 1;

     label1:
        $z0 = virtualinvoke r1.<android.util.ArrayMap: boolean isEmpty()>();

        if $z0 != 0 goto label7;

        $i0 = virtualinvoke r1.<android.util.ArrayMap: int size()>();

        i1 = $i0 - 1;

     label2:
        if i1 < 0 goto label6;

        $r4 = virtualinvoke r1.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i1);

        r2 = (android.view.View) $r4;

        $r5 = virtualinvoke r1.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i1);

        r3 = (java.lang.String) $r5;

        if z5 == 0 goto label4;

        if r2 == null goto label3;

        $z4 = virtualinvoke r2.<android.view.View: boolean isAttachedToWindow()>();

        if $z4 == 0 goto label3;

        if r3 != null goto label4;

     label3:
        virtualinvoke r1.<android.util.ArrayMap: java.lang.Object removeAt(int)>(i1);

        goto label5;

     label4:
        $z1 = staticinvoke <android.app.ActivityTransitionCoordinator: boolean isNested(android.view.View,android.util.ArrayMap)>(r2, r1);

        if $z1 != 0 goto label5;

        $r6 = r0.<android.app.ActivityTransitionCoordinator: java.util.ArrayList mSharedElementNames>;

        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);

        $r7 = r0.<android.app.ActivityTransitionCoordinator: java.util.ArrayList mSharedElements>;

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

        virtualinvoke r1.<android.util.ArrayMap: java.lang.Object removeAt(int)>(i1);

     label5:
        i1 = i1 + -1;

        goto label2;

     label6:
        z5 = 0;

        goto label1;

     label7:
        return;
    }

    private void showView(android.view.View, boolean)
    {
        android.app.ActivityTransitionCoordinator r0;
        android.view.View r1;
        boolean z0;
        java.lang.Float r2;
        android.util.ArrayMap $r3;
        java.lang.Object $r4;
        float $f0;

        r0 := @this: android.app.ActivityTransitionCoordinator;

        r1 := @parameter0: android.view.View;

        z0 := @parameter1: boolean;

        $r3 = r0.<android.app.ActivityTransitionCoordinator: android.util.ArrayMap mOriginalAlphas>;

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r1);

        r2 = (java.lang.Float) $r4;

        if r2 == null goto label1;

        $f0 = virtualinvoke r2.<java.lang.Float: float floatValue()>();

        virtualinvoke r1.<android.view.View: void setAlpha(float)>($f0);

     label1:
        if z0 == 0 goto label2;

        virtualinvoke r1.<android.view.View: void setTransitionAlpha(float)>(1.0F);

     label2:
        return;
    }

    private void startInputWhenTransitionsComplete()
    {
        android.app.ActivityTransitionCoordinator r0;
        boolean $z0, $z1;
        android.view.ViewGroup r1;
        android.view.ViewRootImpl r2;

        r0 := @this: android.app.ActivityTransitionCoordinator;

        $z0 = r0.<android.app.ActivityTransitionCoordinator: boolean mViewsTransitionComplete>;

        if $z0 == 0 goto label2;

        $z1 = r0.<android.app.ActivityTransitionCoordinator: boolean mSharedElementTransitionComplete>;

        if $z1 == 0 goto label2;

        r1 = virtualinvoke r0.<android.app.ActivityTransitionCoordinator: android.view.ViewGroup getDecor()>();

        if r1 == null goto label1;

        r2 = virtualinvoke r1.<android.view.View: android.view.ViewRootImpl getViewRootImpl()>();

        if r2 == null goto label1;

        virtualinvoke r2.<android.view.ViewRootImpl: void setPausedForTransition(boolean)>(0);

     label1:
        virtualinvoke r0.<android.app.ActivityTransitionCoordinator: void onTransitionsComplete()>();

     label2:
        return;
    }

    protected void backgroundAnimatorComplete()
    {
        android.app.ActivityTransitionCoordinator r0;

        r0 := @this: android.app.ActivityTransitionCoordinator;

        r0.<android.app.ActivityTransitionCoordinator: boolean mBackgroundAnimatorComplete> = 1;

        return;
    }

    protected boolean cancelPendingTransitions()
    {
        android.app.ActivityTransitionCoordinator r0;
        boolean $z0;

        r0 := @this: android.app.ActivityTransitionCoordinator;

        r0.<android.app.ActivityTransitionCoordinator: java.lang.Runnable mPendingTransition> = null;

        $z0 = r0.<android.app.ActivityTransitionCoordinator: boolean mIsStartingTransition>;

        return $z0;
    }

    protected android.os.Bundle captureSharedElementState()
    {
        android.app.ActivityTransitionCoordinator r0;
        android.os.Bundle $r4;
        android.graphics.RectF $r5;
        android.graphics.Matrix $r6;
        java.util.ArrayList $r7, $r8, $r10;
        int $i0, i1;
        java.lang.Object $r9, $r12;
        android.view.View $r11;
        java.lang.String $r13;

        r0 := @this: android.app.ActivityTransitionCoordinator;

        $r4 = new android.os.Bundle;

        specialinvoke $r4.<android.os.Bundle: void <init>()>();

        $r5 = new android.graphics.RectF;

        specialinvoke $r5.<android.graphics.RectF: void <init>()>();

        $r6 = new android.graphics.Matrix;

        specialinvoke $r6.<android.graphics.Matrix: void <init>()>();

        i1 = 0;

     label1:
        $r7 = r0.<android.app.ActivityTransitionCoordinator: java.util.ArrayList mSharedElements>;

        $i0 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        if i1 >= $i0 goto label2;

        $r8 = r0.<android.app.ActivityTransitionCoordinator: java.util.ArrayList mSharedElements>;

        $r9 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r11 = (android.view.View) $r9;

        $r10 = r0.<android.app.ActivityTransitionCoordinator: java.util.ArrayList mSharedElementNames>;

        $r12 = virtualinvoke $r10.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r13 = (java.lang.String) $r12;

        virtualinvoke r0.<android.app.ActivityTransitionCoordinator: void captureSharedElementState(android.view.View,java.lang.String,android.os.Bundle,android.graphics.Matrix,android.graphics.RectF)>($r11, $r13, $r4, $r6, $r5);

        i1 = i1 + 1;

        goto label1;

     label2:
        return $r4;
    }

    protected void captureSharedElementState(android.view.View, java.lang.String, android.os.Bundle, android.graphics.Matrix, android.graphics.RectF)
    {
        android.app.ActivityTransitionCoordinator r0;
        java.lang.String r1;
        android.os.Bundle r2, $r6;
        android.graphics.RectF r3;
        android.app.SharedElementCallback r5;
        int $i0, $i1, $i2;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;
        boolean $z1;
        android.widget.ImageView$ScaleType $r7, $r8, $r9;
        android.graphics.Matrix $r10, r12;
        android.view.View r11;
        android.os.Parcelable r13;
        android.widget.ImageView r14;
        float[] r15;

        r0 := @this: android.app.ActivityTransitionCoordinator;

        r11 := @parameter0: android.view.View;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.os.Bundle;

        r12 := @parameter3: android.graphics.Matrix;

        r3 := @parameter4: android.graphics.RectF;

        $r6 = new android.os.Bundle;

        specialinvoke $r6.<android.os.Bundle: void <init>()>();

        virtualinvoke r12.<android.graphics.Matrix: void reset()>();

        virtualinvoke r11.<android.view.View: void transformMatrixToGlobal(android.graphics.Matrix)>(r12);

        $i0 = virtualinvoke r11.<android.view.View: int getWidth()>();

        $f0 = (float) $i0;

        $i1 = virtualinvoke r11.<android.view.View: int getHeight()>();

        $f1 = (float) $i1;

        virtualinvoke r3.<android.graphics.RectF: void set(float,float,float,float)>(0.0F, 0.0F, $f0, $f1);

        virtualinvoke r12.<android.graphics.Matrix: boolean mapRect(android.graphics.RectF)>(r3);

        $f2 = r3.<android.graphics.RectF: float left>;

        virtualinvoke $r6.<android.os.Bundle: void putFloat(java.lang.String,float)>("shared_element:screenLeft", $f2);

        $f3 = r3.<android.graphics.RectF: float right>;

        virtualinvoke $r6.<android.os.Bundle: void putFloat(java.lang.String,float)>("shared_element:screenRight", $f3);

        $f4 = r3.<android.graphics.RectF: float top>;

        virtualinvoke $r6.<android.os.Bundle: void putFloat(java.lang.String,float)>("shared_element:screenTop", $f4);

        $f5 = r3.<android.graphics.RectF: float bottom>;

        virtualinvoke $r6.<android.os.Bundle: void putFloat(java.lang.String,float)>("shared_element:screenBottom", $f5);

        $f6 = virtualinvoke r11.<android.view.View: float getTranslationZ()>();

        virtualinvoke $r6.<android.os.Bundle: void putFloat(java.lang.String,float)>("shared_element:translationZ", $f6);

        $f7 = virtualinvoke r11.<android.view.View: float getElevation()>();

        virtualinvoke $r6.<android.os.Bundle: void putFloat(java.lang.String,float)>("shared_element:elevation", $f7);

        r13 = null;

        r5 = r0.<android.app.ActivityTransitionCoordinator: android.app.SharedElementCallback mListener>;

        if r5 == null goto label1;

        r13 = virtualinvoke r5.<android.app.SharedElementCallback: android.os.Parcelable onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF)>(r11, r12, r3);

     label1:
        if r13 == null goto label2;

        virtualinvoke $r6.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("shared_element:bitmap", r13);

     label2:
        $z1 = r11 instanceof android.widget.ImageView;

        if $z1 == 0 goto label3;

        r14 = (android.widget.ImageView) r11;

        $r7 = virtualinvoke r14.<android.widget.ImageView: android.widget.ImageView$ScaleType getScaleType()>();

        $i2 = staticinvoke <android.app.ActivityTransitionCoordinator: int scaleTypeToInt(android.widget.ImageView$ScaleType)>($r7);

        virtualinvoke $r6.<android.os.Bundle: void putInt(java.lang.String,int)>("shared_element:scaleType", $i2);

        $r8 = virtualinvoke r14.<android.widget.ImageView: android.widget.ImageView$ScaleType getScaleType()>();

        $r9 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType MATRIX>;

        if $r8 != $r9 goto label3;

        r15 = newarray (float)[9];

        $r10 = virtualinvoke r14.<android.widget.ImageView: android.graphics.Matrix getImageMatrix()>();

        virtualinvoke $r10.<android.graphics.Matrix: void getValues(float[])>(r15);

        virtualinvoke $r6.<android.os.Bundle: void putFloatArray(java.lang.String,float[])>("shared_element:imageMatrix", r15);

     label3:
        virtualinvoke r2.<android.os.Bundle: void putBundle(java.lang.String,android.os.Bundle)>(r1, $r6);

        return;
    }

    protected void clearState()
    {
        android.app.ActivityTransitionCoordinator r0;
        java.util.ArrayList $r1;
        android.util.ArrayMap $r2;

        r0 := @this: android.app.ActivityTransitionCoordinator;

        r0.<android.app.ActivityTransitionCoordinator: android.view.Window mWindow> = null;

        $r1 = r0.<android.app.ActivityTransitionCoordinator: java.util.ArrayList mSharedElements>;

        virtualinvoke $r1.<java.util.ArrayList: void clear()>();

        r0.<android.app.ActivityTransitionCoordinator: java.util.ArrayList mTransitioningViews> = null;

        r0.<android.app.ActivityTransitionCoordinator: java.util.ArrayList mStrippedTransitioningViews> = null;

        $r2 = r0.<android.app.ActivityTransitionCoordinator: android.util.ArrayMap mOriginalAlphas>;

        virtualinvoke $r2.<android.util.ArrayMap: void clear()>();

        r0.<android.app.ActivityTransitionCoordinator: android.os.ResultReceiver mResultReceiver> = null;

        r0.<android.app.ActivityTransitionCoordinator: java.lang.Runnable mPendingTransition> = null;

        r0.<android.app.ActivityTransitionCoordinator: android.app.SharedElementCallback mListener> = null;

        r0.<android.app.ActivityTransitionCoordinator: java.util.ArrayList mSharedElementParentMatrices> = null;

        return;
    }

    protected android.transition.Transition configureTransition(android.transition.Transition, boolean)
    {
        android.app.ActivityTransitionCoordinator r0;
        boolean z0;
        android.app.ActivityTransitionCoordinator$FixedEpicenterCallback $r1;
        android.transition.Transition r2, r3, r4;

        r0 := @this: android.app.ActivityTransitionCoordinator;

        r2 := @parameter0: android.transition.Transition;

        z0 := @parameter1: boolean;

        r3 = r2;

        if r2 == null goto label1;

        r4 = virtualinvoke r2.<android.transition.Transition: android.transition.Transition clone()>();

        $r1 = r0.<android.app.ActivityTransitionCoordinator: android.app.ActivityTransitionCoordinator$FixedEpicenterCallback mEpicenterCallback>;

        virtualinvoke r4.<android.transition.Transition: void setEpicenterCallback(android.transition.Transition$EpicenterCallback)>($r1);

        r3 = virtualinvoke r0.<android.app.ActivityTransitionCoordinator: android.transition.Transition setTargets(android.transition.Transition,boolean)>(r4, z0);

     label1:
        staticinvoke <android.app.ActivityTransitionCoordinator: void noLayoutSuppressionForVisibilityTransitions(android.transition.Transition)>(r3);

        return r3;
    }

    public java.util.ArrayList copyMappedViews()
    {
        android.app.ActivityTransitionCoordinator r0;
        java.util.ArrayList $r1, $r2;

        r0 := @this: android.app.ActivityTransitionCoordinator;

        $r1 = new java.util.ArrayList;

        $r2 = r0.<android.app.ActivityTransitionCoordinator: java.util.ArrayList mSharedElements>;

        specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>($r2);

        return $r1;
    }

    protected java.util.ArrayList createSnapshots(android.os.Bundle, java.util.Collection)
    {
        android.app.ActivityTransitionCoordinator r0;
        android.os.Bundle r1, r14;
        int i0;
        android.content.Context r3;
        int[] r4;
        java.util.Iterator r5;
        java.lang.String r6;
        java.util.ArrayList $r7;
        android.view.Window $r8;
        android.graphics.Matrix $r9;
        java.lang.Object $r10;
        java.util.Collection r11;
        android.view.ViewGroup r12;
        boolean $z1;
        android.view.View r15;
        android.os.Parcelable r16;
        android.app.SharedElementCallback r17;

        r0 := @this: android.app.ActivityTransitionCoordinator;

        r1 := @parameter0: android.os.Bundle;

        r11 := @parameter1: java.util.Collection;

        i0 = interfaceinvoke r11.<java.util.Collection: int size()>();

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>(int)>(i0);

        if i0 != 0 goto label1;

        return $r7;

     label1:
        $r8 = virtualinvoke r0.<android.app.ActivityTransitionCoordinator: android.view.Window getWindow()>();

        r3 = virtualinvoke $r8.<android.view.Window: android.content.Context getContext()>();

        r4 = newarray (int)[2];

        r12 = virtualinvoke r0.<android.app.ActivityTransitionCoordinator: android.view.ViewGroup getDecor()>();

        if r12 == null goto label2;

        virtualinvoke r12.<android.view.ViewGroup: void getLocationOnScreen(int[])>(r4);

     label2:
        $r9 = new android.graphics.Matrix;

        specialinvoke $r9.<android.graphics.Matrix: void <init>()>();

        r5 = interfaceinvoke r11.<java.util.Collection: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label7;

        $r10 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.lang.String) $r10;

        r14 = virtualinvoke r1.<android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>(r6);

        r15 = null;

        if r14 == null goto label6;

        r16 = virtualinvoke r14.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>("shared_element:bitmap");

        if r16 == null goto label4;

        r17 = r0.<android.app.ActivityTransitionCoordinator: android.app.SharedElementCallback mListener>;

        if r17 == null goto label4;

        r15 = virtualinvoke r17.<android.app.SharedElementCallback: android.view.View onCreateSnapshotView(android.content.Context,android.os.Parcelable)>(r3, r16);

        goto label5;

     label4:
        r15 = null;

     label5:
        if r15 == null goto label6;

        specialinvoke r0.<android.app.ActivityTransitionCoordinator: void setSharedElementState(android.view.View,java.lang.String,android.os.Bundle,android.graphics.Matrix,android.graphics.RectF,int[])>(r15, r6, r1, $r9, null, r4);

        goto label6;

     label6:
        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>(r15);

        goto label3;

     label7:
        return $r7;
    }

    public java.util.ArrayList getAcceptedNames()
    {
        android.app.ActivityTransitionCoordinator r0;
        java.util.ArrayList $r1;

        r0 := @this: android.app.ActivityTransitionCoordinator;

        $r1 = r0.<android.app.ActivityTransitionCoordinator: java.util.ArrayList mSharedElementNames>;

        return $r1;
    }

    public android.view.ViewGroup getDecor()
    {
        android.app.ActivityTransitionCoordinator r0;
        android.view.View $r1;
        android.view.Window r2;
        android.view.ViewGroup r3;

        r0 := @this: android.app.ActivityTransitionCoordinator;

        r2 = r0.<android.app.ActivityTransitionCoordinator: android.view.Window mWindow>;

        if r2 != null goto label1;

        r3 = null;

        goto label2;

     label1:
        $r1 = virtualinvoke r2.<android.view.Window: android.view.View getDecorView()>();

        r3 = (android.view.ViewGroup) $r1;

     label2:
        return r3;
    }

    protected long getFadeDuration()
    {
        android.app.ActivityTransitionCoordinator r0;
        android.view.Window $r1;
        long $l0;

        r0 := @this: android.app.ActivityTransitionCoordinator;

        $r1 = virtualinvoke r0.<android.app.ActivityTransitionCoordinator: android.view.Window getWindow()>();

        $l0 = virtualinvoke $r1.<android.view.Window: long getTransitionBackgroundFadeDuration()>();

        return $l0;
    }

    public java.util.ArrayList getMappedNames()
    {
        android.app.ActivityTransitionCoordinator r0;
        java.util.ArrayList $r2, $r3, $r4, $r5;
        int $i0, $i1, i2;
        java.lang.Object $r6;
        android.view.View $r7;
        java.lang.String $r8;

        r0 := @this: android.app.ActivityTransitionCoordinator;

        $r2 = new java.util.ArrayList;

        $r3 = r0.<android.app.ActivityTransitionCoordinator: java.util.ArrayList mSharedElements>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>($i0);

        i2 = 0;

     label1:
        $r4 = r0.<android.app.ActivityTransitionCoordinator: java.util.ArrayList mSharedElements>;

        $i1 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        if i2 >= $i1 goto label2;

        $r5 = r0.<android.app.ActivityTransitionCoordinator: java.util.ArrayList mSharedElements>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r7 = (android.view.View) $r6;

        $r8 = virtualinvoke $r7.<android.view.View: java.lang.String getTransitionName()>();

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r8);

        i2 = i2 + 1;

        goto label1;

     label2:
        return $r2;
    }

    protected abstract android.transition.Transition getViewsTransition();

    protected android.view.Window getWindow()
    {
        android.app.ActivityTransitionCoordinator r0;
        android.view.Window $r1;

        r0 := @this: android.app.ActivityTransitionCoordinator;

        $r1 = r0.<android.app.ActivityTransitionCoordinator: android.view.Window mWindow>;

        return $r1;
    }

    protected void hideViews(java.util.ArrayList)
    {
        android.app.ActivityTransitionCoordinator r0;
        java.util.ArrayList r1;
        int i0, i1;
        android.view.View r2;
        java.lang.Object $r3;
        android.util.ArrayMap $r4, $r5;
        boolean $z0;
        float $f0;
        java.lang.Float $r6;

        r0 := @this: android.app.ActivityTransitionCoordinator;

        r1 := @parameter0: java.util.ArrayList;

        i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r3 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r2 = (android.view.View) $r3;

        $r4 = r0.<android.app.ActivityTransitionCoordinator: android.util.ArrayMap mOriginalAlphas>;

        $z0 = virtualinvoke $r4.<android.util.ArrayMap: boolean containsKey(java.lang.Object)>(r2);

        if $z0 != 0 goto label2;

        $r5 = r0.<android.app.ActivityTransitionCoordinator: android.util.ArrayMap mOriginalAlphas>;

        $f0 = virtualinvoke r2.<android.view.View: float getAlpha()>();

        $r6 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r6);

     label2:
        virtualinvoke r2.<android.view.View: void setAlpha(float)>(0.0F);

        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    public boolean isTransitionRunning()
    {
        android.app.ActivityTransitionCoordinator r0;
        boolean $z0, $z1, $z2, z3;

        r0 := @this: android.app.ActivityTransitionCoordinator;

        $z0 = r0.<android.app.ActivityTransitionCoordinator: boolean mViewsTransitionComplete>;

        if $z0 == 0 goto label2;

        $z1 = r0.<android.app.ActivityTransitionCoordinator: boolean mSharedElementTransitionComplete>;

        if $z1 == 0 goto label2;

        $z2 = r0.<android.app.ActivityTransitionCoordinator: boolean mBackgroundAnimatorComplete>;

        if $z2 != 0 goto label1;

        goto label2;

     label1:
        z3 = 0;

        goto label3;

     label2:
        z3 = 1;

     label3:
        return z3;
    }

    protected boolean isViewsTransitionComplete()
    {
        android.app.ActivityTransitionCoordinator r0;
        boolean $z0;

        r0 := @this: android.app.ActivityTransitionCoordinator;

        $z0 = r0.<android.app.ActivityTransitionCoordinator: boolean mViewsTransitionComplete>;

        return $z0;
    }

    public void lambda$scheduleGhostVisibilityChange$1$ActivityTransitionCoordinator(int)
    {
        android.app.ActivityTransitionCoordinator r0;
        int i0;

        r0 := @this: android.app.ActivityTransitionCoordinator;

        i0 := @parameter0: int;

        virtualinvoke r0.<android.app.ActivityTransitionCoordinator: void setGhostVisibility(int)>(i0);

        return;
    }

    public void lambda$scheduleSetSharedElementEnd$0$ActivityTransitionCoordinator(java.util.ArrayList)
    {
        android.app.ActivityTransitionCoordinator r0;
        java.util.ArrayList r1;

        r0 := @this: android.app.ActivityTransitionCoordinator;

        r1 := @parameter0: java.util.ArrayList;

        virtualinvoke r0.<android.app.ActivityTransitionCoordinator: void notifySharedElementEnd(java.util.ArrayList)>(r1);

        return;
    }

    protected android.util.ArrayMap mapSharedElements(java.util.ArrayList, java.util.ArrayList)
    {
        android.app.ActivityTransitionCoordinator r0;
        java.util.ArrayList r1, r9;
        android.util.ArrayMap $r3;
        int $i0, i1;
        java.lang.Object $r4, $r6;
        java.lang.String $r5;
        android.view.View $r7;
        android.view.ViewGroup r10;

        r0 := @this: android.app.ActivityTransitionCoordinator;

        r9 := @parameter0: java.util.ArrayList;

        r1 := @parameter1: java.util.ArrayList;

        $r3 = new android.util.ArrayMap;

        specialinvoke $r3.<android.util.ArrayMap: void <init>()>();

        if r9 == null goto label3;

        i1 = 0;

     label1:
        $i0 = virtualinvoke r9.<java.util.ArrayList: int size()>();

        if i1 >= $i0 goto label2;

        $r4 = virtualinvoke r9.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r5 = (java.lang.String) $r4;

        $r6 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r7 = (android.view.View) $r6;

        virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r7);

        i1 = i1 + 1;

        goto label1;

     label2:
        goto label4;

     label3:
        r10 = virtualinvoke r0.<android.app.ActivityTransitionCoordinator: android.view.ViewGroup getDecor()>();

        if r10 == null goto label4;

        virtualinvoke r10.<android.view.ViewGroup: void findNamedViews(java.util.Map)>($r3);

     label4:
        return $r3;
    }

    protected boolean moveSharedElementWithParent()
    {
        android.app.ActivityTransitionCoordinator r0;

        r0 := @this: android.app.ActivityTransitionCoordinator;

        return 1;
    }

    protected void moveSharedElementsFromOverlay()
    {
        android.app.ActivityTransitionCoordinator r0;
        java.util.ArrayList $r1, $r2, $r4, $r5, $r8;
        boolean $z0;
        java.lang.Object $r6, $r9;
        android.view.View $r7;
        android.app.ActivityTransitionCoordinator$GhostViewListeners $r10;
        int i0, i1, i2, i3;
        android.view.Window r11;
        android.view.ViewGroup r12;

        r0 := @this: android.app.ActivityTransitionCoordinator;

        $r1 = r0.<android.app.ActivityTransitionCoordinator: java.util.ArrayList mGhostViewListeners>;

        i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r8 = r0.<android.app.ActivityTransitionCoordinator: java.util.ArrayList mGhostViewListeners>;

        $r9 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r10 = (android.app.ActivityTransitionCoordinator$GhostViewListeners) $r9;

        virtualinvoke $r10.<android.app.ActivityTransitionCoordinator$GhostViewListeners: void removeListener()>();

        i1 = i1 + 1;

        goto label1;

     label2:
        $r2 = r0.<android.app.ActivityTransitionCoordinator: java.util.ArrayList mGhostViewListeners>;

        virtualinvoke $r2.<java.util.ArrayList: void clear()>();

        r11 = r0.<android.app.ActivityTransitionCoordinator: android.view.Window mWindow>;

        if r11 == null goto label6;

        $z0 = virtualinvoke r11.<android.view.Window: boolean getSharedElementsUseOverlay()>();

        if $z0 != 0 goto label3;

        goto label6;

     label3:
        r12 = virtualinvoke r0.<android.app.ActivityTransitionCoordinator: android.view.ViewGroup getDecor()>();

        if r12 == null goto label5;

        virtualinvoke r12.<android.view.ViewGroup: android.view.ViewGroupOverlay getOverlay()>();

        $r4 = r0.<android.app.ActivityTransitionCoordinator: java.util.ArrayList mSharedElements>;

        i2 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        i3 = 0;

     label4:
        if i3 >= i2 goto label5;

        $r5 = r0.<android.app.ActivityTransitionCoordinator: java.util.ArrayList mSharedElements>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        $r7 = (android.view.View) $r6;

        staticinvoke <android.view.GhostView: void removeGhost(android.view.View)>($r7);

        i3 = i3 + 1;

        goto label4;

     label5:
        return;

     label6:
        return;
    }

    protected void moveSharedElementsToOverlay()
    {
        android.app.ActivityTransitionCoordinator r0;
        int i0, i1;
        android.view.ViewGroup r1, r17;
        boolean z0, $z1, $z2, $z4;
        java.util.ArrayList $r3, $r5, $r7, $r14;
        android.graphics.Matrix $r4, $r9;
        java.lang.Object $r6, $r8;
        android.view.ViewParent $r11;
        android.app.ActivityTransitionCoordinator$GhostViewListeners $r12;
        android.view.ViewTreeObserver $r13;
        android.view.Window r15;
        android.view.View r16;

        r0 := @this: android.app.ActivityTransitionCoordinator;

        r15 = r0.<android.app.ActivityTransitionCoordinator: android.view.Window mWindow>;

        if r15 == null goto label5;

        $z1 = virtualinvoke r15.<android.view.Window: boolean getSharedElementsUseOverlay()>();

        if $z1 != 0 goto label1;

        goto label5;

     label1:
        specialinvoke r0.<android.app.ActivityTransitionCoordinator: void setSharedElementMatrices()>();

        $r3 = r0.<android.app.ActivityTransitionCoordinator: java.util.ArrayList mSharedElements>;

        i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        r1 = virtualinvoke r0.<android.app.ActivityTransitionCoordinator: android.view.ViewGroup getDecor()>();

        if r1 == null goto label4;

        z0 = virtualinvoke r0.<android.app.ActivityTransitionCoordinator: boolean moveSharedElementWithParent()>();

        $r4 = new android.graphics.Matrix;

        specialinvoke $r4.<android.graphics.Matrix: void <init>()>();

        i1 = 0;

     label2:
        if i1 >= i0 goto label4;

        $r5 = r0.<android.app.ActivityTransitionCoordinator: java.util.ArrayList mSharedElements>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r16 = (android.view.View) $r6;

        $z2 = virtualinvoke r16.<android.view.View: boolean isAttachedToWindow()>();

        if $z2 == 0 goto label3;

        virtualinvoke $r4.<android.graphics.Matrix: void reset()>();

        $r7 = r0.<android.app.ActivityTransitionCoordinator: java.util.ArrayList mSharedElementParentMatrices>;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r9 = (android.graphics.Matrix) $r8;

        virtualinvoke $r9.<android.graphics.Matrix: boolean invert(android.graphics.Matrix)>($r4);

        staticinvoke <android.view.GhostView: android.view.GhostView addGhost(android.view.View,android.view.ViewGroup,android.graphics.Matrix)>(r16, r1, $r4);

        $r11 = virtualinvoke r16.<android.view.View: android.view.ViewParent getParent()>();

        r17 = (android.view.ViewGroup) $r11;

        if z0 == 0 goto label3;

        $z4 = staticinvoke <android.app.ActivityTransitionCoordinator: boolean isInTransitionGroup(android.view.ViewParent,android.view.ViewGroup)>(r17, r1);

        if $z4 != 0 goto label3;

        $r12 = new android.app.ActivityTransitionCoordinator$GhostViewListeners;

        specialinvoke $r12.<android.app.ActivityTransitionCoordinator$GhostViewListeners: void <init>(android.view.View,android.view.View,android.view.ViewGroup)>(r16, r17, r1);

        $r13 = virtualinvoke r17.<android.view.ViewGroup: android.view.ViewTreeObserver getViewTreeObserver()>();

        virtualinvoke $r13.<android.view.ViewTreeObserver: void addOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener)>($r12);

        virtualinvoke r17.<android.view.ViewGroup: void addOnAttachStateChangeListener(android.view.View$OnAttachStateChangeListener)>($r12);

        $r14 = r0.<android.app.ActivityTransitionCoordinator: java.util.ArrayList mGhostViewListeners>;

        virtualinvoke $r14.<java.util.ArrayList: boolean add(java.lang.Object)>($r12);

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        return;

     label5:
        return;
    }

    protected void notifySharedElementEnd(java.util.ArrayList)
    {
        android.app.ActivityTransitionCoordinator r0;
        java.util.ArrayList r1, $r3, $r4;
        android.app.SharedElementCallback r2;

        r0 := @this: android.app.ActivityTransitionCoordinator;

        r1 := @parameter0: java.util.ArrayList;

        r2 = r0.<android.app.ActivityTransitionCoordinator: android.app.SharedElementCallback mListener>;

        if r2 == null goto label1;

        $r4 = r0.<android.app.ActivityTransitionCoordinator: java.util.ArrayList mSharedElementNames>;

        $r3 = r0.<android.app.ActivityTransitionCoordinator: java.util.ArrayList mSharedElements>;

        virtualinvoke r2.<android.app.SharedElementCallback: void onSharedElementEnd(java.util.List,java.util.List,java.util.List)>($r4, $r3, r1);

     label1:
        return;
    }

    protected void onTransitionsComplete()
    {
        android.app.ActivityTransitionCoordinator r0;

        r0 := @this: android.app.ActivityTransitionCoordinator;

        return;
    }

    protected void pauseInput()
    {
        android.app.ActivityTransitionCoordinator r0;
        android.view.ViewGroup r1;
        android.view.ViewRootImpl r2;

        r0 := @this: android.app.ActivityTransitionCoordinator;

        r1 = virtualinvoke r0.<android.app.ActivityTransitionCoordinator: android.view.ViewGroup getDecor()>();

        if r1 != null goto label1;

        r2 = null;

        goto label2;

     label1:
        r2 = virtualinvoke r1.<android.view.View: android.view.ViewRootImpl getViewRootImpl()>();

     label2:
        if r2 == null goto label3;

        virtualinvoke r2.<android.view.ViewRootImpl: void setPausedForTransition(boolean)>(1);

     label3:
        return;
    }

    protected void scheduleGhostVisibilityChange(int)
    {
        android.app.ActivityTransitionCoordinator r0;
        int i0;
        android.view.ViewGroup r1;
        android.app._$$Lambda$ActivityTransitionCoordinator$_HMo0E_15AzCK9fwQ8WHzdz8ZIw $r2;

        r0 := @this: android.app.ActivityTransitionCoordinator;

        i0 := @parameter0: int;

        r1 = virtualinvoke r0.<android.app.ActivityTransitionCoordinator: android.view.ViewGroup getDecor()>();

        if r1 == null goto label1;

        $r2 = new android.app._$$Lambda$ActivityTransitionCoordinator$_HMo0E_15AzCK9fwQ8WHzdz8ZIw;

        specialinvoke $r2.<android.app._$$Lambda$ActivityTransitionCoordinator$_HMo0E_15AzCK9fwQ8WHzdz8ZIw: void <init>(android.app.ActivityTransitionCoordinator,int)>(r0, i0);

        staticinvoke <com.android.internal.view.OneShotPreDrawListener: com.android.internal.view.OneShotPreDrawListener add(android.view.View,java.lang.Runnable)>(r1, $r2);

     label1:
        return;
    }

    protected void scheduleSetSharedElementEnd(java.util.ArrayList)
    {
        android.app.ActivityTransitionCoordinator r0;
        java.util.ArrayList r1;
        android.view.ViewGroup r2;
        android.app._$$Lambda$ActivityTransitionCoordinator$fkaPvc8GCghP2GMwEgS_J5m_T_4 $r3;

        r0 := @this: android.app.ActivityTransitionCoordinator;

        r1 := @parameter0: java.util.ArrayList;

        r2 = virtualinvoke r0.<android.app.ActivityTransitionCoordinator: android.view.ViewGroup getDecor()>();

        if r2 == null goto label1;

        $r3 = new android.app._$$Lambda$ActivityTransitionCoordinator$fkaPvc8GCghP2GMwEgS_J5m_T_4;

        specialinvoke $r3.<android.app._$$Lambda$ActivityTransitionCoordinator$fkaPvc8GCghP2GMwEgS_J5m_T_4: void <init>(android.app.ActivityTransitionCoordinator,java.util.ArrayList)>(r0, r1);

        staticinvoke <com.android.internal.view.OneShotPreDrawListener: com.android.internal.view.OneShotPreDrawListener add(android.view.View,java.lang.Runnable)>(r2, $r3);

     label1:
        return;
    }

    protected void setEpicenter()
    {
        android.app.ActivityTransitionCoordinator r0;
        int i0;
        java.util.ArrayList $r1, $r2, $r3, $r4, $r6;
        boolean $z0, $z1;
        java.lang.Object $r5, $r7;
        android.view.View r8;

        r0 := @this: android.app.ActivityTransitionCoordinator;

        r8 = null;

        $r1 = r0.<android.app.ActivityTransitionCoordinator: java.util.ArrayList mAllSharedElementNames>;

        $z0 = virtualinvoke $r1.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        r8 = null;

        $r2 = r0.<android.app.ActivityTransitionCoordinator: java.util.ArrayList mSharedElementNames>;

        $z1 = virtualinvoke $r2.<java.util.ArrayList: boolean isEmpty()>();

        if $z1 != 0 goto label1;

        $r4 = r0.<android.app.ActivityTransitionCoordinator: java.util.ArrayList mSharedElementNames>;

        $r3 = r0.<android.app.ActivityTransitionCoordinator: java.util.ArrayList mAllSharedElementNames>;

        $r5 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(0);

        i0 = virtualinvoke $r4.<java.util.ArrayList: int indexOf(java.lang.Object)>($r5);

        r8 = null;

        if i0 < 0 goto label1;

        $r6 = r0.<android.app.ActivityTransitionCoordinator: java.util.ArrayList mSharedElements>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r8 = (android.view.View) $r7;

     label1:
        specialinvoke r0.<android.app.ActivityTransitionCoordinator: void setEpicenter(android.view.View)>(r8);

        return;
    }

    protected void setGhostVisibility(int)
    {
        android.app.ActivityTransitionCoordinator r0;
        int i0, i1, i2;
        android.view.GhostView r1;
        java.util.ArrayList $r2, $r3;
        java.lang.Object $r4;
        android.view.View $r5;

        r0 := @this: android.app.ActivityTransitionCoordinator;

        i0 := @parameter0: int;

        $r2 = r0.<android.app.ActivityTransitionCoordinator: java.util.ArrayList mSharedElements>;

        i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i2 = 0;

     label1:
        if i2 >= i1 goto label3;

        $r3 = r0.<android.app.ActivityTransitionCoordinator: java.util.ArrayList mSharedElements>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r5 = (android.view.View) $r4;

        r1 = staticinvoke <android.view.GhostView: android.view.GhostView getGhost(android.view.View)>($r5);

        if r1 == null goto label2;

        virtualinvoke r1.<android.view.GhostView: void setVisibility(int)>(i0);

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return;
    }

    protected void setResultReceiver(android.os.ResultReceiver)
    {
        android.app.ActivityTransitionCoordinator r0;
        android.os.ResultReceiver r1;

        r0 := @this: android.app.ActivityTransitionCoordinator;

        r1 := @parameter0: android.os.ResultReceiver;

        r0.<android.app.ActivityTransitionCoordinator: android.os.ResultReceiver mResultReceiver> = r1;

        return;
    }

    protected java.util.ArrayList setSharedElementState(android.os.Bundle, java.util.ArrayList)
    {
        android.app.ActivityTransitionCoordinator r0;
        java.util.ArrayList r1, $r7, $r8, $r9, $r12, $r13, $r15;
        int i0, i1;
        android.view.View r5;
        java.lang.String r6;
        android.graphics.Matrix $r10;
        android.graphics.RectF $r11;
        java.lang.Object $r14, $r16;
        android.app.ActivityTransitionCoordinator$SharedElementOriginalState $r17;
        android.os.Bundle r18;
        android.app.SharedElementCallback r19;

        r0 := @this: android.app.ActivityTransitionCoordinator;

        r18 := @parameter0: android.os.Bundle;

        r1 := @parameter1: java.util.ArrayList;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        if r18 == null goto label2;

        $r10 = new android.graphics.Matrix;

        specialinvoke $r10.<android.graphics.Matrix: void <init>()>();

        $r11 = new android.graphics.RectF;

        specialinvoke $r11.<android.graphics.RectF: void <init>()>();

        $r12 = r0.<android.app.ActivityTransitionCoordinator: java.util.ArrayList mSharedElements>;

        i0 = virtualinvoke $r12.<java.util.ArrayList: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r13 = r0.<android.app.ActivityTransitionCoordinator: java.util.ArrayList mSharedElements>;

        $r14 = virtualinvoke $r13.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r5 = (android.view.View) $r14;

        $r15 = r0.<android.app.ActivityTransitionCoordinator: java.util.ArrayList mSharedElementNames>;

        $r16 = virtualinvoke $r15.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r6 = (java.lang.String) $r16;

        $r17 = staticinvoke <android.app.ActivityTransitionCoordinator: android.app.ActivityTransitionCoordinator$SharedElementOriginalState getOldSharedElementState(android.view.View,java.lang.String,android.os.Bundle)>(r5, r6, r18);

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>($r17);

        specialinvoke r0.<android.app.ActivityTransitionCoordinator: void setSharedElementState(android.view.View,java.lang.String,android.os.Bundle,android.graphics.Matrix,android.graphics.RectF,int[])>(r5, r6, r18, $r10, $r11, null);

        i1 = i1 + 1;

        goto label1;

     label2:
        r19 = r0.<android.app.ActivityTransitionCoordinator: android.app.SharedElementCallback mListener>;

        if r19 == null goto label3;

        $r9 = r0.<android.app.ActivityTransitionCoordinator: java.util.ArrayList mSharedElementNames>;

        $r8 = r0.<android.app.ActivityTransitionCoordinator: java.util.ArrayList mSharedElements>;

        virtualinvoke r19.<android.app.SharedElementCallback: void onSharedElementStart(java.util.List,java.util.List,java.util.List)>($r9, $r8, r1);

     label3:
        return $r7;
    }

    protected android.transition.Transition setTargets(android.transition.Transition, boolean)
    {
        android.app.ActivityTransitionCoordinator r0;
        boolean z0, $z1, $z2;
        android.transition.TransitionSet $r1, $r3, r18;
        int $i0, $i1, i2, i3;
        java.util.ArrayList $r4, $r8, r13, r15, r17, r19;
        java.lang.Object $r5, $r9;
        android.view.View $r6, r16;
        android.transition.Transition r12;

        r0 := @this: android.app.ActivityTransitionCoordinator;

        r12 := @parameter0: android.transition.Transition;

        z0 := @parameter1: boolean;

        if r12 == null goto label9;

        if z0 == 0 goto label1;

        r13 = r0.<android.app.ActivityTransitionCoordinator: java.util.ArrayList mTransitioningViews>;

        if r13 == null goto label9;

        $z2 = virtualinvoke r13.<java.util.ArrayList: boolean isEmpty()>();

        if $z2 == 0 goto label1;

        goto label9;

     label1:
        $r1 = new android.transition.TransitionSet;

        specialinvoke $r1.<android.transition.TransitionSet: void <init>()>();

        r15 = r0.<android.app.ActivityTransitionCoordinator: java.util.ArrayList mTransitioningViews>;

        if r15 == null goto label5;

        $i1 = virtualinvoke r15.<java.util.ArrayList: int size()>();

        i2 = $i1 - 1;

     label2:
        if i2 < 0 goto label5;

        $r8 = r0.<android.app.ActivityTransitionCoordinator: java.util.ArrayList mTransitioningViews>;

        $r9 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r16 = (android.view.View) $r9;

        if z0 == 0 goto label3;

        virtualinvoke $r1.<android.transition.TransitionSet: android.transition.TransitionSet addTarget(android.view.View)>(r16);

        goto label4;

     label3:
        virtualinvoke $r1.<android.transition.TransitionSet: android.transition.Transition excludeTarget(android.view.View,boolean)>(r16, 1);

     label4:
        i2 = i2 + -1;

        goto label2;

     label5:
        r17 = r0.<android.app.ActivityTransitionCoordinator: java.util.ArrayList mStrippedTransitioningViews>;

        if r17 == null goto label7;

        $i0 = virtualinvoke r17.<java.util.ArrayList: int size()>();

        i3 = $i0 - 1;

     label6:
        if i3 < 0 goto label7;

        $r4 = r0.<android.app.ActivityTransitionCoordinator: java.util.ArrayList mStrippedTransitioningViews>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        $r6 = (android.view.View) $r5;

        virtualinvoke $r1.<android.transition.TransitionSet: android.transition.Transition excludeTarget(android.view.View,boolean)>($r6, 1);

        i3 = i3 + -1;

        goto label6;

     label7:
        virtualinvoke $r1.<android.transition.TransitionSet: android.transition.TransitionSet addTransition(android.transition.Transition)>(r12);

        r18 = $r1;

        if z0 != 0 goto label8;

        r19 = r0.<android.app.ActivityTransitionCoordinator: java.util.ArrayList mTransitioningViews>;

        r18 = $r1;

        if r19 == null goto label8;

        r18 = $r1;

        $z1 = virtualinvoke r19.<java.util.ArrayList: boolean isEmpty()>();

        if $z1 != 0 goto label8;

        $r3 = new android.transition.TransitionSet;

        specialinvoke $r3.<android.transition.TransitionSet: void <init>()>();

        r18 = virtualinvoke $r3.<android.transition.TransitionSet: android.transition.TransitionSet addTransition(android.transition.Transition)>($r1);

     label8:
        return r18;

     label9:
        return null;
    }

    protected void setTransitioningViewsVisiblity(int, boolean)
    {
        android.app.ActivityTransitionCoordinator r0;
        int i0, i1, i2;
        boolean z0;
        java.util.ArrayList $r1, r3;
        java.lang.Object $r2;
        android.view.View r4;

        r0 := @this: android.app.ActivityTransitionCoordinator;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r3 = r0.<android.app.ActivityTransitionCoordinator: java.util.ArrayList mTransitioningViews>;

        if r3 != null goto label1;

        i1 = 0;

        goto label2;

     label1:
        i1 = virtualinvoke r3.<java.util.ArrayList: int size()>();

     label2:
        i2 = 0;

     label3:
        if i2 >= i1 goto label6;

        $r1 = r0.<android.app.ActivityTransitionCoordinator: java.util.ArrayList mTransitioningViews>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r4 = (android.view.View) $r2;

        if z0 == 0 goto label4;

        virtualinvoke r4.<android.view.View: void setVisibility(int)>(i0);

        goto label5;

     label4:
        virtualinvoke r4.<android.view.View: void setTransitionVisibility(int)>(i0);

     label5:
        i2 = i2 + 1;

        goto label3;

     label6:
        return;
    }

    protected void sharedElementTransitionComplete()
    {
        android.app.ActivityTransitionCoordinator r0;

        r0 := @this: android.app.ActivityTransitionCoordinator;

        r0.<android.app.ActivityTransitionCoordinator: boolean mSharedElementTransitionComplete> = 1;

        specialinvoke r0.<android.app.ActivityTransitionCoordinator: void startInputWhenTransitionsComplete()>();

        return;
    }

    protected void showViews(java.util.ArrayList, boolean)
    {
        android.app.ActivityTransitionCoordinator r0;
        java.util.ArrayList r1;
        boolean z0;
        int i0, i1;
        java.lang.Object $r2;
        android.view.View $r3;

        r0 := @this: android.app.ActivityTransitionCoordinator;

        r1 := @parameter0: java.util.ArrayList;

        z0 := @parameter1: boolean;

        i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r2 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r3 = (android.view.View) $r2;

        specialinvoke r0.<android.app.ActivityTransitionCoordinator: void showView(android.view.View,boolean)>($r3, z0);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    protected void startTransition(java.lang.Runnable)
    {
        android.app.ActivityTransitionCoordinator r0;
        java.lang.Runnable r1;
        boolean $z0;

        r0 := @this: android.app.ActivityTransitionCoordinator;

        r1 := @parameter0: java.lang.Runnable;

        $z0 = r0.<android.app.ActivityTransitionCoordinator: boolean mIsStartingTransition>;

        if $z0 == 0 goto label1;

        r0.<android.app.ActivityTransitionCoordinator: java.lang.Runnable mPendingTransition> = r1;

        goto label2;

     label1:
        r0.<android.app.ActivityTransitionCoordinator: boolean mIsStartingTransition> = 1;

        interfaceinvoke r1.<java.lang.Runnable: void run()>();

     label2:
        return;
    }

    protected void stripOffscreenViews()
    {
        android.app.ActivityTransitionCoordinator r0;
        android.view.View r2;
        java.util.ArrayList $r3, $r5, $r6, $r8, $r10;
        android.graphics.Rect $r4;
        int $i0, i1;
        java.lang.Object $r7;
        boolean $z0;

        r0 := @this: android.app.ActivityTransitionCoordinator;

        $r3 = r0.<android.app.ActivityTransitionCoordinator: java.util.ArrayList mTransitioningViews>;

        if $r3 != null goto label1;

        return;

     label1:
        $r4 = new android.graphics.Rect;

        specialinvoke $r4.<android.graphics.Rect: void <init>()>();

        $r5 = r0.<android.app.ActivityTransitionCoordinator: java.util.ArrayList mTransitioningViews>;

        $i0 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        i1 = $i0 - 1;

     label2:
        if i1 < 0 goto label4;

        $r6 = r0.<android.app.ActivityTransitionCoordinator: java.util.ArrayList mTransitioningViews>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r2 = (android.view.View) $r7;

        $z0 = virtualinvoke r2.<android.view.View: boolean getGlobalVisibleRect(android.graphics.Rect)>($r4);

        if $z0 != 0 goto label3;

        $r8 = r0.<android.app.ActivityTransitionCoordinator: java.util.ArrayList mTransitioningViews>;

        virtualinvoke $r8.<java.util.ArrayList: java.lang.Object remove(int)>(i1);

        $r10 = r0.<android.app.ActivityTransitionCoordinator: java.util.ArrayList mStrippedTransitioningViews>;

        virtualinvoke $r10.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

     label3:
        i1 = i1 + -1;

        goto label2;

     label4:
        return;
    }

    protected void transitionStarted()
    {
        android.app.ActivityTransitionCoordinator r0;

        r0 := @this: android.app.ActivityTransitionCoordinator;

        r0.<android.app.ActivityTransitionCoordinator: boolean mIsStartingTransition> = 0;

        return;
    }

    protected void viewsReady(android.util.ArrayMap)
    {
        android.app.ActivityTransitionCoordinator r0;
        android.app.SharedElementCallback r1;
        java.util.ArrayList $r2, $r4, $r5, $r6, $r7, $r8;
        android.transition.Transition $r3;
        android.util.ArrayMap r9;
        android.view.ViewGroup r10;

        r0 := @this: android.app.ActivityTransitionCoordinator;

        r9 := @parameter0: android.util.ArrayMap;

        $r2 = r0.<android.app.ActivityTransitionCoordinator: java.util.ArrayList mAllSharedElementNames>;

        virtualinvoke r9.<android.util.ArrayMap: boolean retainAll(java.util.Collection)>($r2);

        r1 = r0.<android.app.ActivityTransitionCoordinator: android.app.SharedElementCallback mListener>;

        if r1 == null goto label1;

        $r8 = r0.<android.app.ActivityTransitionCoordinator: java.util.ArrayList mAllSharedElementNames>;

        virtualinvoke r1.<android.app.SharedElementCallback: void onMapSharedElements(java.util.List,java.util.Map)>($r8, r9);

     label1:
        specialinvoke r0.<android.app.ActivityTransitionCoordinator: void setSharedElements(android.util.ArrayMap)>(r9);

        $r3 = virtualinvoke r0.<android.app.ActivityTransitionCoordinator: android.transition.Transition getViewsTransition()>();

        if $r3 == null goto label3;

        $r4 = r0.<android.app.ActivityTransitionCoordinator: java.util.ArrayList mTransitioningViews>;

        if $r4 == null goto label3;

        r10 = virtualinvoke r0.<android.app.ActivityTransitionCoordinator: android.view.ViewGroup getDecor()>();

        if r10 == null goto label2;

        $r7 = r0.<android.app.ActivityTransitionCoordinator: java.util.ArrayList mTransitioningViews>;

        virtualinvoke r10.<android.view.ViewGroup: void captureTransitioningViews(java.util.List)>($r7);

     label2:
        $r6 = r0.<android.app.ActivityTransitionCoordinator: java.util.ArrayList mTransitioningViews>;

        $r5 = r0.<android.app.ActivityTransitionCoordinator: java.util.ArrayList mSharedElements>;

        virtualinvoke $r6.<java.util.ArrayList: boolean removeAll(java.util.Collection)>($r5);

     label3:
        virtualinvoke r0.<android.app.ActivityTransitionCoordinator: void setEpicenter()>();

        return;
    }

    protected void viewsTransitionComplete()
    {
        android.app.ActivityTransitionCoordinator r0;

        r0 := @this: android.app.ActivityTransitionCoordinator;

        r0.<android.app.ActivityTransitionCoordinator: boolean mViewsTransitionComplete> = 1;

        specialinvoke r0.<android.app.ActivityTransitionCoordinator: void startInputWhenTransitionsComplete()>();

        return;
    }
}
