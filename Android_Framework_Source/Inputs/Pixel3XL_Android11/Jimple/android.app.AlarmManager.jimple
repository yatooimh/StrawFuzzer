public class android.app.AlarmManager extends java.lang.Object
{
    public static final java.lang.String ACTION_NEXT_ALARM_CLOCK_CHANGED;
    public static final int ELAPSED_REALTIME;
    public static final int ELAPSED_REALTIME_WAKEUP;
    public static final int FLAG_ALLOW_WHILE_IDLE;
    public static final int FLAG_ALLOW_WHILE_IDLE_UNRESTRICTED;
    public static final int FLAG_IDLE_UNTIL;
    public static final int FLAG_STANDALONE;
    public static final int FLAG_WAKE_FROM_IDLE;
    public static final long INTERVAL_DAY;
    public static final long INTERVAL_FIFTEEN_MINUTES;
    public static final long INTERVAL_HALF_DAY;
    public static final long INTERVAL_HALF_HOUR;
    public static final long INTERVAL_HOUR;
    public static final int RTC;
    public static final int RTC_WAKEUP;
    private static final java.lang.String TAG;
    public static final long WINDOW_EXACT;
    public static final long WINDOW_HEURISTIC;
    private static java.util.WeakHashMap sWrappers;
    private final boolean mAlwaysExact;
    private final android.content.Context mContext;
    private final android.os.Handler mMainThreadHandler;
    private final java.lang.String mPackageName;
    private final android.app.IAlarmManager mService;
    private final int mTargetSdkVersion;

    void <init>(android.app.IAlarmManager, android.content.Context)
    {
        android.app.AlarmManager r0;
        android.app.IAlarmManager r1;
        android.content.Context r2;
        int i0;
        java.lang.String $r3;
        android.content.pm.ApplicationInfo $r4;
        android.os.Handler $r5;
        android.os.Looper $r6;
        boolean z0;

        r0 := @this: android.app.AlarmManager;

        r1 := @parameter0: android.app.IAlarmManager;

        r2 := @parameter1: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.app.AlarmManager: android.app.IAlarmManager mService> = r1;

        r0.<android.app.AlarmManager: android.content.Context mContext> = r2;

        $r3 = virtualinvoke r2.<android.content.Context: java.lang.String getPackageName()>();

        r0.<android.app.AlarmManager: java.lang.String mPackageName> = $r3;

        $r4 = virtualinvoke r2.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        i0 = $r4.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        r0.<android.app.AlarmManager: int mTargetSdkVersion> = i0;

        if i0 >= 19 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        r0.<android.app.AlarmManager: boolean mAlwaysExact> = z0;

        $r5 = new android.os.Handler;

        $r6 = virtualinvoke r2.<android.content.Context: android.os.Looper getMainLooper()>();

        specialinvoke $r5.<android.os.Handler: void <init>(android.os.Looper)>($r6);

        r0.<android.app.AlarmManager: android.os.Handler mMainThreadHandler> = $r5;

        return;
    }

    static android.app.IAlarmManager access$000(android.app.AlarmManager)
    {
        android.app.AlarmManager r0;
        android.app.IAlarmManager $r1;

        r0 := @parameter0: android.app.AlarmManager;

        $r1 = r0.<android.app.AlarmManager: android.app.IAlarmManager mService>;

        return $r1;
    }

    private long legacyExactLength()
    {
        android.app.AlarmManager r0;
        boolean $z0;
        long l0;

        r0 := @this: android.app.AlarmManager;

        $z0 = r0.<android.app.AlarmManager: boolean mAlwaysExact>;

        if $z0 == 0 goto label1;

        l0 = 0L;

        goto label2;

     label1:
        l0 = -1L;

     label2:
        return l0;
    }

    private void setImpl(int, long, long, long, int, android.app.PendingIntent, android.app.AlarmManager$OnAlarmListener, java.lang.String, android.os.Handler, android.os.WorkSource, android.app.AlarmManager$AlarmClockInfo)
    {
        android.app.AlarmManager r0;
        int i0, i3;
        long l1, l2, l5;
        android.app.AlarmManager$OnAlarmListener r1;
        java.lang.String r2, $r6;
        android.os.WorkSource r3;
        android.app.AlarmManager$AlarmClockInfo r4;
        java.util.WeakHashMap r5, $r8, $r9, r19;
        byte $b4;
        android.app.IAlarmManager $r7;
        java.lang.Object $r10, $r12;
        android.os.RemoteException $r13;
        java.lang.RuntimeException $r14;
        java.lang.Throwable $r15;
        android.app.PendingIntent r16;
        android.os.Handler r17;
        android.app.AlarmManager$ListenerWrapper r18, r21;
        java.lang.ref.WeakReference r20, r22;

        r0 := @this: android.app.AlarmManager;

        i0 := @parameter0: int;

        l5 := @parameter1: long;

        l1 := @parameter2: long;

        l2 := @parameter3: long;

        i3 := @parameter4: int;

        r16 := @parameter5: android.app.PendingIntent;

        r1 := @parameter6: android.app.AlarmManager$OnAlarmListener;

        r2 := @parameter7: java.lang.String;

        r17 := @parameter8: android.os.Handler;

        r3 := @parameter9: android.os.WorkSource;

        r4 := @parameter10: android.app.AlarmManager$AlarmClockInfo;

        $b4 = l5 cmp 0L;

        if $b4 >= 0 goto label01;

        l5 = 0L;

        goto label01;

     label01:
        r18 = null;

        if r1 == null goto label16;

        entermonitor class "Landroid/app/AlarmManager;";

     label02:
        $r8 = <android.app.AlarmManager: java.util.WeakHashMap sWrappers>;

        if $r8 != null goto label03;

        r19 = new java.util.WeakHashMap;

        specialinvoke r19.<java.util.WeakHashMap: void <init>()>();

        <android.app.AlarmManager: java.util.WeakHashMap sWrappers> = r19;

     label03:
        $r9 = <android.app.AlarmManager: java.util.WeakHashMap sWrappers>;

        $r10 = virtualinvoke $r9.<java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>(r1);

        r20 = (java.lang.ref.WeakReference) $r10;

     label04:
        if r20 == null goto label06;

     label05:
        $r12 = virtualinvoke r20.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r18 = (android.app.AlarmManager$ListenerWrapper) $r12;

     label06:
        r21 = r18;

        if r18 != null goto label09;

     label07:
        r21 = new android.app.AlarmManager$ListenerWrapper;

        specialinvoke r21.<android.app.AlarmManager$ListenerWrapper: void <init>(android.app.AlarmManager,android.app.AlarmManager$OnAlarmListener)>(r0, r1);

     label08:
        r5 = <android.app.AlarmManager: java.util.WeakHashMap sWrappers>;

        r22 = new java.lang.ref.WeakReference;

        specialinvoke r22.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r21);

        virtualinvoke r5.<java.util.WeakHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r22);

     label09:
        exitmonitor class "Landroid/app/AlarmManager;";

     label10:
        if r17 == null goto label11;

        goto label12;

     label11:
        r17 = r0.<android.app.AlarmManager: android.os.Handler mMainThreadHandler>;

     label12:
        virtualinvoke r21.<android.app.AlarmManager$ListenerWrapper: void setHandler(android.os.Handler)>(r17);

        goto label17;

     label13:
        $r15 := @caughtexception;

     label14:
        exitmonitor class "Landroid/app/AlarmManager;";

     label15:
        throw $r15;

     label16:
        r21 = null;

     label17:
        $r7 = r0.<android.app.AlarmManager: android.app.IAlarmManager mService>;

        $r6 = r0.<android.app.AlarmManager: java.lang.String mPackageName>;

        interfaceinvoke $r7.<android.app.IAlarmManager: void set(java.lang.String,int,long,long,long,int,android.app.PendingIntent,android.app.IAlarmListener,java.lang.String,android.os.WorkSource,android.app.AlarmManager$AlarmClockInfo)>($r6, i0, l5, l1, l2, i3, r16, r21, r2, r3, r4);

     label18:
        return;

     label19:
        $r13 := @caughtexception;

        $r14 = virtualinvoke $r13.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r14;

        catch java.lang.Throwable from label02 to label03 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
        catch android.os.RemoteException from label17 to label18 with label19;
    }

    public void cancel(android.app.AlarmManager$OnAlarmListener)
    {
        android.app.AlarmManager r0;
        java.lang.ref.WeakReference r1;
        java.lang.NullPointerException $r2;
        java.util.WeakHashMap $r3, $r6;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;
        java.lang.Object $r7, $r8;
        java.lang.Throwable $r9;
        android.app.AlarmManager$OnAlarmListener r10;
        android.app.AlarmManager$ListenerWrapper r11;

        r0 := @this: android.app.AlarmManager;

        r10 := @parameter0: android.app.AlarmManager$OnAlarmListener;

        if r10 == null goto label10;

        entermonitor class "Landroid/app/AlarmManager;";

        r11 = null;

     label01:
        $r3 = <android.app.AlarmManager: java.util.WeakHashMap sWrappers>;

        if $r3 == null goto label04;

        $r6 = <android.app.AlarmManager: java.util.WeakHashMap sWrappers>;

        $r7 = virtualinvoke $r6.<java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>(r10);

        r1 = (java.lang.ref.WeakReference) $r7;

     label02:
        r11 = null;

        if r1 == null goto label04;

     label03:
        $r8 = virtualinvoke r1.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r11 = (android.app.AlarmManager$ListenerWrapper) $r8;

     label04:
        exitmonitor class "Landroid/app/AlarmManager;";

     label05:
        if r11 != null goto label06;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unrecognized alarm listener ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r10);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("AlarmManager", $r5);

        return;

     label06:
        virtualinvoke r11.<android.app.AlarmManager$ListenerWrapper: void cancel()>();

        return;

     label07:
        $r9 := @caughtexception;

     label08:
        exitmonitor class "Landroid/app/AlarmManager;";

     label09:
        throw $r9;

     label10:
        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("cancel() called with a null OnAlarmListener");

        throw $r2;

        catch java.lang.Throwable from label01 to label02 with label07;
        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.Throwable from label04 to label05 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
    }

    public void cancel(android.app.PendingIntent)
    {
        android.app.AlarmManager r0;
        android.app.IAlarmManager $r1;
        int $i0;
        java.lang.NullPointerException $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;
        android.app.PendingIntent r5;

        r0 := @this: android.app.AlarmManager;

        r5 := @parameter0: android.app.PendingIntent;

        if r5 != null goto label2;

        $i0 = r0.<android.app.AlarmManager: int mTargetSdkVersion>;

        if $i0 >= 24 goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("AlarmManager", "cancel() called with a null PendingIntent");

        return;

     label1:
        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("cancel() called with a null PendingIntent");

        throw $r2;

     label2:
        $r1 = r0.<android.app.AlarmManager: android.app.IAlarmManager mService>;

        interfaceinvoke $r1.<android.app.IAlarmManager: void remove(android.app.PendingIntent,android.app.IAlarmListener)>(r5, null);

     label3:
        return;

     label4:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    public android.app.AlarmManager$AlarmClockInfo getNextAlarmClock()
    {
        android.app.AlarmManager r0;
        android.content.Context $r1;
        int $i0;
        android.app.AlarmManager$AlarmClockInfo $r2;

        r0 := @this: android.app.AlarmManager;

        $r1 = r0.<android.app.AlarmManager: android.content.Context mContext>;

        $i0 = virtualinvoke $r1.<android.content.Context: int getUserId()>();

        $r2 = virtualinvoke r0.<android.app.AlarmManager: android.app.AlarmManager$AlarmClockInfo getNextAlarmClock(int)>($i0);

        return $r2;
    }

    public android.app.AlarmManager$AlarmClockInfo getNextAlarmClock(int)
    {
        android.app.AlarmManager r0;
        int i0;
        android.app.IAlarmManager $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        android.app.AlarmManager$AlarmClockInfo r4;

        r0 := @this: android.app.AlarmManager;

        i0 := @parameter0: int;

     label1:
        $r1 = r0.<android.app.AlarmManager: android.app.IAlarmManager mService>;

        r4 = interfaceinvoke $r1.<android.app.IAlarmManager: android.app.AlarmManager$AlarmClockInfo getNextAlarmClock(int)>(i0);

     label2:
        return r4;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public long getNextWakeFromIdleTime()
    {
        android.app.AlarmManager r0;
        long l0;
        android.app.IAlarmManager $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;

        r0 := @this: android.app.AlarmManager;

     label1:
        $r2 = r0.<android.app.AlarmManager: android.app.IAlarmManager mService>;

        l0 = interfaceinvoke $r2.<android.app.IAlarmManager: long getNextWakeFromIdleTime()>();

     label2:
        return l0;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void set(int, long, long, long, android.app.AlarmManager$OnAlarmListener, android.os.Handler, android.os.WorkSource)
    {
        android.app.AlarmManager r0;
        int i0;
        long l1, l2, l3;
        android.app.AlarmManager$OnAlarmListener r1;
        android.os.Handler r2;
        android.os.WorkSource r3;

        r0 := @this: android.app.AlarmManager;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        l3 := @parameter3: long;

        r1 := @parameter4: android.app.AlarmManager$OnAlarmListener;

        r2 := @parameter5: android.os.Handler;

        r3 := @parameter6: android.os.WorkSource;

        specialinvoke r0.<android.app.AlarmManager: void setImpl(int,long,long,long,int,android.app.PendingIntent,android.app.AlarmManager$OnAlarmListener,java.lang.String,android.os.Handler,android.os.WorkSource,android.app.AlarmManager$AlarmClockInfo)>(i0, l1, l2, l3, 0, null, r1, null, r2, r3, null);

        return;
    }

    public void set(int, long, long, long, android.app.PendingIntent, android.os.WorkSource)
    {
        android.app.AlarmManager r0;
        int i0;
        long l1, l2, l3;
        android.app.PendingIntent r1;
        android.os.WorkSource r2;

        r0 := @this: android.app.AlarmManager;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        l3 := @parameter3: long;

        r1 := @parameter4: android.app.PendingIntent;

        r2 := @parameter5: android.os.WorkSource;

        specialinvoke r0.<android.app.AlarmManager: void setImpl(int,long,long,long,int,android.app.PendingIntent,android.app.AlarmManager$OnAlarmListener,java.lang.String,android.os.Handler,android.os.WorkSource,android.app.AlarmManager$AlarmClockInfo)>(i0, l1, l2, l3, 0, r1, null, null, null, r2, null);

        return;
    }

    public void set(int, long, long, long, java.lang.String, android.app.AlarmManager$OnAlarmListener, android.os.Handler, android.os.WorkSource)
    {
        android.app.AlarmManager r0;
        int i0;
        long l1, l2, l3;
        java.lang.String r1;
        android.app.AlarmManager$OnAlarmListener r2;
        android.os.Handler r3;
        android.os.WorkSource r4;

        r0 := @this: android.app.AlarmManager;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        l3 := @parameter3: long;

        r1 := @parameter4: java.lang.String;

        r2 := @parameter5: android.app.AlarmManager$OnAlarmListener;

        r3 := @parameter6: android.os.Handler;

        r4 := @parameter7: android.os.WorkSource;

        specialinvoke r0.<android.app.AlarmManager: void setImpl(int,long,long,long,int,android.app.PendingIntent,android.app.AlarmManager$OnAlarmListener,java.lang.String,android.os.Handler,android.os.WorkSource,android.app.AlarmManager$AlarmClockInfo)>(i0, l1, l2, l3, 0, null, r2, r1, r3, r4, null);

        return;
    }

    public void set(int, long, android.app.PendingIntent)
    {
        android.app.AlarmManager r0;
        int i0;
        long l1, $l2;
        android.app.PendingIntent r1;

        r0 := @this: android.app.AlarmManager;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        r1 := @parameter2: android.app.PendingIntent;

        $l2 = specialinvoke r0.<android.app.AlarmManager: long legacyExactLength()>();

        specialinvoke r0.<android.app.AlarmManager: void setImpl(int,long,long,long,int,android.app.PendingIntent,android.app.AlarmManager$OnAlarmListener,java.lang.String,android.os.Handler,android.os.WorkSource,android.app.AlarmManager$AlarmClockInfo)>(i0, l1, $l2, 0L, 0, r1, null, null, null, null, null);

        return;
    }

    public void set(int, long, java.lang.String, android.app.AlarmManager$OnAlarmListener, android.os.Handler)
    {
        android.app.AlarmManager r0;
        int i0;
        long l1, $l2;
        java.lang.String r1;
        android.app.AlarmManager$OnAlarmListener r2;
        android.os.Handler r3;

        r0 := @this: android.app.AlarmManager;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: android.app.AlarmManager$OnAlarmListener;

        r3 := @parameter4: android.os.Handler;

        $l2 = specialinvoke r0.<android.app.AlarmManager: long legacyExactLength()>();

        specialinvoke r0.<android.app.AlarmManager: void setImpl(int,long,long,long,int,android.app.PendingIntent,android.app.AlarmManager$OnAlarmListener,java.lang.String,android.os.Handler,android.os.WorkSource,android.app.AlarmManager$AlarmClockInfo)>(i0, l1, $l2, 0L, 0, null, r2, r1, r3, null, null);

        return;
    }

    public void setAlarmClock(android.app.AlarmManager$AlarmClockInfo, android.app.PendingIntent)
    {
        android.app.AlarmManager r0;
        android.app.AlarmManager$AlarmClockInfo r1;
        android.app.PendingIntent r2;
        long $l0;

        r0 := @this: android.app.AlarmManager;

        r1 := @parameter0: android.app.AlarmManager$AlarmClockInfo;

        r2 := @parameter1: android.app.PendingIntent;

        $l0 = virtualinvoke r1.<android.app.AlarmManager$AlarmClockInfo: long getTriggerTime()>();

        specialinvoke r0.<android.app.AlarmManager: void setImpl(int,long,long,long,int,android.app.PendingIntent,android.app.AlarmManager$OnAlarmListener,java.lang.String,android.os.Handler,android.os.WorkSource,android.app.AlarmManager$AlarmClockInfo)>(0, $l0, 0L, 0L, 0, r2, null, null, null, null, r1);

        return;
    }

    public void setAndAllowWhileIdle(int, long, android.app.PendingIntent)
    {
        android.app.AlarmManager r0;
        int i0;
        long l1;
        android.app.PendingIntent r1;

        r0 := @this: android.app.AlarmManager;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        r1 := @parameter2: android.app.PendingIntent;

        specialinvoke r0.<android.app.AlarmManager: void setImpl(int,long,long,long,int,android.app.PendingIntent,android.app.AlarmManager$OnAlarmListener,java.lang.String,android.os.Handler,android.os.WorkSource,android.app.AlarmManager$AlarmClockInfo)>(i0, l1, -1L, 0L, 4, r1, null, null, null, null, null);

        return;
    }

    public void setExact(int, long, android.app.PendingIntent)
    {
        android.app.AlarmManager r0;
        int i0;
        long l1;
        android.app.PendingIntent r1;

        r0 := @this: android.app.AlarmManager;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        r1 := @parameter2: android.app.PendingIntent;

        specialinvoke r0.<android.app.AlarmManager: void setImpl(int,long,long,long,int,android.app.PendingIntent,android.app.AlarmManager$OnAlarmListener,java.lang.String,android.os.Handler,android.os.WorkSource,android.app.AlarmManager$AlarmClockInfo)>(i0, l1, 0L, 0L, 0, r1, null, null, null, null, null);

        return;
    }

    public void setExact(int, long, java.lang.String, android.app.AlarmManager$OnAlarmListener, android.os.Handler)
    {
        android.app.AlarmManager r0;
        int i0;
        long l1;
        java.lang.String r1;
        android.app.AlarmManager$OnAlarmListener r2;
        android.os.Handler r3;

        r0 := @this: android.app.AlarmManager;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: android.app.AlarmManager$OnAlarmListener;

        r3 := @parameter4: android.os.Handler;

        specialinvoke r0.<android.app.AlarmManager: void setImpl(int,long,long,long,int,android.app.PendingIntent,android.app.AlarmManager$OnAlarmListener,java.lang.String,android.os.Handler,android.os.WorkSource,android.app.AlarmManager$AlarmClockInfo)>(i0, l1, 0L, 0L, 0, null, r2, r1, r3, null, null);

        return;
    }

    public void setExactAndAllowWhileIdle(int, long, android.app.PendingIntent)
    {
        android.app.AlarmManager r0;
        int i0;
        long l1;
        android.app.PendingIntent r1;

        r0 := @this: android.app.AlarmManager;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        r1 := @parameter2: android.app.PendingIntent;

        specialinvoke r0.<android.app.AlarmManager: void setImpl(int,long,long,long,int,android.app.PendingIntent,android.app.AlarmManager$OnAlarmListener,java.lang.String,android.os.Handler,android.os.WorkSource,android.app.AlarmManager$AlarmClockInfo)>(i0, l1, 0L, 0L, 4, r1, null, null, null, null, null);

        return;
    }

    public void setIdleUntil(int, long, java.lang.String, android.app.AlarmManager$OnAlarmListener, android.os.Handler)
    {
        android.app.AlarmManager r0;
        int i0;
        long l1;
        java.lang.String r1;
        android.app.AlarmManager$OnAlarmListener r2;
        android.os.Handler r3;

        r0 := @this: android.app.AlarmManager;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: android.app.AlarmManager$OnAlarmListener;

        r3 := @parameter4: android.os.Handler;

        specialinvoke r0.<android.app.AlarmManager: void setImpl(int,long,long,long,int,android.app.PendingIntent,android.app.AlarmManager$OnAlarmListener,java.lang.String,android.os.Handler,android.os.WorkSource,android.app.AlarmManager$AlarmClockInfo)>(i0, l1, 0L, 0L, 16, null, r2, r1, r3, null, null);

        return;
    }

    public void setInexactRepeating(int, long, long, android.app.PendingIntent)
    {
        android.app.AlarmManager r0;
        int i0;
        long l1, l2;
        android.app.PendingIntent r1;

        r0 := @this: android.app.AlarmManager;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        r1 := @parameter3: android.app.PendingIntent;

        specialinvoke r0.<android.app.AlarmManager: void setImpl(int,long,long,long,int,android.app.PendingIntent,android.app.AlarmManager$OnAlarmListener,java.lang.String,android.os.Handler,android.os.WorkSource,android.app.AlarmManager$AlarmClockInfo)>(i0, l1, -1L, l2, 0, r1, null, null, null, null, null);

        return;
    }

    public void setRepeating(int, long, long, android.app.PendingIntent)
    {
        android.app.AlarmManager r0;
        int i0;
        long l1, l2, $l3;
        android.app.PendingIntent r1;

        r0 := @this: android.app.AlarmManager;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        r1 := @parameter3: android.app.PendingIntent;

        $l3 = specialinvoke r0.<android.app.AlarmManager: long legacyExactLength()>();

        specialinvoke r0.<android.app.AlarmManager: void setImpl(int,long,long,long,int,android.app.PendingIntent,android.app.AlarmManager$OnAlarmListener,java.lang.String,android.os.Handler,android.os.WorkSource,android.app.AlarmManager$AlarmClockInfo)>(i0, l1, $l3, l2, 0, r1, null, null, null, null, null);

        return;
    }

    public void setTime(long)
    {
        android.app.AlarmManager r0;
        long l0;
        android.app.IAlarmManager $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;

        r0 := @this: android.app.AlarmManager;

        l0 := @parameter0: long;

     label1:
        $r2 = r0.<android.app.AlarmManager: android.app.IAlarmManager mService>;

        interfaceinvoke $r2.<android.app.IAlarmManager: boolean setTime(long)>(l0);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setTimeZone(java.lang.String)
    {
        android.app.AlarmManager r0;
        boolean z0, $z1, z2;
        int $i0;
        android.app.IAlarmManager $r1;
        libcore.timezone.ZoneInfoDb $r2;
        java.lang.StringBuilder $r3;
        java.lang.IllegalArgumentException $r7;
        java.lang.String $r8, r12;
        android.os.RemoteException $r9;
        java.lang.RuntimeException $r10;
        java.lang.Throwable $r11;

        r0 := @this: android.app.AlarmManager;

        r12 := @parameter0: java.lang.String;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r12);

        if $z1 == 0 goto label1;

        return;

     label1:
        $i0 = r0.<android.app.AlarmManager: int mTargetSdkVersion>;

        if $i0 < 23 goto label7;

        z2 = 0;

     label2:
        $r2 = staticinvoke <libcore.timezone.ZoneInfoDb: libcore.timezone.ZoneInfoDb getInstance()>();

        z0 = virtualinvoke $r2.<libcore.timezone.ZoneInfoDb: boolean hasTimeZone(java.lang.String)>(r12);

     label3:
        z2 = z0;

        goto label5;

     label4:
        $r11 := @caughtexception;

     label5:
        if z2 == 0 goto label6;

        goto label7;

     label6:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Timezone: ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not an Olson ID");

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r7;

     label7:
        $r1 = r0.<android.app.AlarmManager: android.app.IAlarmManager mService>;

        interfaceinvoke $r1.<android.app.IAlarmManager: void setTimeZone(java.lang.String)>(r12);

     label8:
        return;

     label9:
        $r9 := @caughtexception;

        $r10 = virtualinvoke $r9.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r10;

        catch java.io.IOException from label2 to label3 with label4;
        catch android.os.RemoteException from label7 to label8 with label9;
    }

    public void setWindow(int, long, long, android.app.PendingIntent)
    {
        android.app.AlarmManager r0;
        int i0;
        long l1, l2;
        android.app.PendingIntent r1;

        r0 := @this: android.app.AlarmManager;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        r1 := @parameter3: android.app.PendingIntent;

        specialinvoke r0.<android.app.AlarmManager: void setImpl(int,long,long,long,int,android.app.PendingIntent,android.app.AlarmManager$OnAlarmListener,java.lang.String,android.os.Handler,android.os.WorkSource,android.app.AlarmManager$AlarmClockInfo)>(i0, l1, l2, 0L, 0, r1, null, null, null, null, null);

        return;
    }

    public void setWindow(int, long, long, java.lang.String, android.app.AlarmManager$OnAlarmListener, android.os.Handler)
    {
        android.app.AlarmManager r0;
        int i0;
        long l1, l2;
        java.lang.String r1;
        android.app.AlarmManager$OnAlarmListener r2;
        android.os.Handler r3;

        r0 := @this: android.app.AlarmManager;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        r1 := @parameter3: java.lang.String;

        r2 := @parameter4: android.app.AlarmManager$OnAlarmListener;

        r3 := @parameter5: android.os.Handler;

        specialinvoke r0.<android.app.AlarmManager: void setImpl(int,long,long,long,int,android.app.PendingIntent,android.app.AlarmManager$OnAlarmListener,java.lang.String,android.os.Handler,android.os.WorkSource,android.app.AlarmManager$AlarmClockInfo)>(i0, l1, l2, 0L, 0, null, r2, r1, r3, null, null);

        return;
    }

    public static void <clinit>()
    {
        <android.app.AlarmManager: long WINDOW_HEURISTIC> = -1L;

        <android.app.AlarmManager: long WINDOW_EXACT> = 0L;

        <android.app.AlarmManager: java.lang.String TAG> = "AlarmManager";

        <android.app.AlarmManager: int RTC_WAKEUP> = 0;

        <android.app.AlarmManager: int RTC> = 1;

        <android.app.AlarmManager: long INTERVAL_HOUR> = 3600000L;

        <android.app.AlarmManager: long INTERVAL_HALF_HOUR> = 1800000L;

        <android.app.AlarmManager: long INTERVAL_HALF_DAY> = 43200000L;

        <android.app.AlarmManager: long INTERVAL_FIFTEEN_MINUTES> = 900000L;

        <android.app.AlarmManager: long INTERVAL_DAY> = 86400000L;

        <android.app.AlarmManager: int FLAG_WAKE_FROM_IDLE> = 2;

        <android.app.AlarmManager: int FLAG_STANDALONE> = 1;

        <android.app.AlarmManager: int FLAG_IDLE_UNTIL> = 16;

        <android.app.AlarmManager: int FLAG_ALLOW_WHILE_IDLE_UNRESTRICTED> = 8;

        <android.app.AlarmManager: int FLAG_ALLOW_WHILE_IDLE> = 4;

        <android.app.AlarmManager: int ELAPSED_REALTIME_WAKEUP> = 2;

        <android.app.AlarmManager: int ELAPSED_REALTIME> = 3;

        <android.app.AlarmManager: java.lang.String ACTION_NEXT_ALARM_CLOCK_CHANGED> = "android.app.action.NEXT_ALARM_CLOCK_CHANGED";

        return;
    }
}
