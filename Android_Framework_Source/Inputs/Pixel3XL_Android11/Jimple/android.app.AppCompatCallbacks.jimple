public final class android.app.AppCompatCallbacks extends android.compat.Compatibility$Callbacks
{
    private final com.android.internal.compat.ChangeReporter mChangeReporter;
    private final long[] mDisabledChanges;

    private void <init>(long[])
    {
        android.app.AppCompatCallbacks r0;
        int $i0;
        com.android.internal.compat.ChangeReporter $r1;
        long[] r2, r3;

        r0 := @this: android.app.AppCompatCallbacks;

        r2 := @parameter0: long[];

        specialinvoke r0.<android.compat.Compatibility$Callbacks: void <init>()>();

        $i0 = lengthof r2;

        r3 = staticinvoke <java.util.Arrays: long[] copyOf(long[],int)>(r2, $i0);

        r0.<android.app.AppCompatCallbacks: long[] mDisabledChanges> = r3;

        staticinvoke <java.util.Arrays: void sort(long[])>(r3);

        $r1 = new com.android.internal.compat.ChangeReporter;

        specialinvoke $r1.<com.android.internal.compat.ChangeReporter: void <init>(int)>(1);

        r0.<android.app.AppCompatCallbacks: com.android.internal.compat.ChangeReporter mChangeReporter> = $r1;

        return;
    }

    public static void install(long[])
    {
        long[] r0;
        android.app.AppCompatCallbacks $r1;

        r0 := @parameter0: long[];

        $r1 = new android.app.AppCompatCallbacks;

        specialinvoke $r1.<android.app.AppCompatCallbacks: void <init>(long[])>(r0);

        staticinvoke <android.compat.Compatibility: void setCallbacks(android.compat.Compatibility$Callbacks)>($r1);

        return;
    }

    private void reportChange(long, int)
    {
        android.app.AppCompatCallbacks r0;
        long l0;
        int i1, i2;
        com.android.internal.compat.ChangeReporter $r1;

        r0 := @this: android.app.AppCompatCallbacks;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        i2 = staticinvoke <android.os.Process: int myUid()>();

        $r1 = r0.<android.app.AppCompatCallbacks: com.android.internal.compat.ChangeReporter mChangeReporter>;

        virtualinvoke $r1.<com.android.internal.compat.ChangeReporter: void reportChange(int,long,int)>(i2, l0, i1);

        return;
    }

    protected boolean isChangeEnabled(long)
    {
        android.app.AppCompatCallbacks r0;
        long l0;
        long[] $r1;
        int $i1;

        r0 := @this: android.app.AppCompatCallbacks;

        l0 := @parameter0: long;

        $r1 = r0.<android.app.AppCompatCallbacks: long[] mDisabledChanges>;

        $i1 = staticinvoke <java.util.Arrays: int binarySearch(long[],long)>($r1, l0);

        if $i1 >= 0 goto label1;

        specialinvoke r0.<android.app.AppCompatCallbacks: void reportChange(long,int)>(l0, 1);

        return 1;

     label1:
        specialinvoke r0.<android.app.AppCompatCallbacks: void reportChange(long,int)>(l0, 2);

        return 0;
    }

    protected void reportChange(long)
    {
        android.app.AppCompatCallbacks r0;
        long l0;

        r0 := @this: android.app.AppCompatCallbacks;

        l0 := @parameter0: long;

        specialinvoke r0.<android.app.AppCompatCallbacks: void reportChange(long,int)>(l0, 3);

        return;
    }
}
