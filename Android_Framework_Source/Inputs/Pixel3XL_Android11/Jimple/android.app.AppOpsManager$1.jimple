class android.app.AppOpsManager$1 extends android.app.AppOpsManager$OnOpNotedCallback
{

    void <init>()
    {
        android.app.AppOpsManager$1 r0;

        r0 := @this: android.app.AppOpsManager$1;

        specialinvoke r0.<android.app.AppOpsManager$OnOpNotedCallback: void <init>()>();

        return;
    }

    private void reportStackTraceIfNeeded(android.app.SyncNotedAppOp)
    {
        android.app.AppOpsManager$1 r0;
        java.lang.String r1, $r3, r10;
        com.android.internal.app.IAppOpsService r2;
        boolean $z0;
        int $i0, $i1, $i2, $i3;
        com.android.internal.app.MessageSamplingConfig $r4, r9;
        long $l4, $l5;
        byte $b6;
        android.os.RemoteException $r6;
        android.app.SyncNotedAppOp r8;

        r0 := @this: android.app.AppOpsManager$1;

        r8 := @parameter0: android.app.SyncNotedAppOp;

        $z0 = staticinvoke <android.app.AppOpsManager: boolean access$000()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        r9 = staticinvoke <android.app.AppOpsManager: com.android.internal.app.MessageSamplingConfig access$100()>();

        $r3 = virtualinvoke r8.<android.app.SyncNotedAppOp: java.lang.String getOp()>();

        $i0 = staticinvoke <android.app.AppOpsManager: int strOpToOp(java.lang.String)>($r3);

        $i1 = virtualinvoke r9.<com.android.internal.app.MessageSamplingConfig: int getSampledOpCode()>();

        $i2 = staticinvoke <android.app.AppOpsManager: int leftCircularDistance(int,int,int)>($i0, $i1, 100);

        $i3 = virtualinvoke r9.<com.android.internal.app.MessageSamplingConfig: int getAcceptableLeftDistance()>();

        if $i2 <= $i3 goto label2;

        $l4 = virtualinvoke r9.<com.android.internal.app.MessageSamplingConfig: long getExpirationTimeSinceBootMillis()>();

        $l5 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $b6 = $l4 cmp $l5;

        if $b6 >= 0 goto label8;

     label2:
        r1 = staticinvoke <android.app.AppOpsManager: java.lang.String access$200()>();

     label3:
        r10 = staticinvoke <android.app.ActivityThread: java.lang.String currentOpPackageName()>();

        r2 = staticinvoke <android.app.AppOpsManager: com.android.internal.app.IAppOpsService access$300()>();

     label4:
        if r10 != null goto label5;

        r10 = "";

        goto label5;

     label5:
        $r4 = interfaceinvoke r2.<com.android.internal.app.IAppOpsService: com.android.internal.app.MessageSamplingConfig reportRuntimeAppOpAccessMessageAndGetConfig(java.lang.String,android.app.SyncNotedAppOp,java.lang.String)>(r10, r8, r1);

        staticinvoke <android.app.AppOpsManager: com.android.internal.app.MessageSamplingConfig access$102(com.android.internal.app.MessageSamplingConfig)>($r4);

     label6:
        goto label8;

     label7:
        $r6 := @caughtexception;

        virtualinvoke $r6.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

     label8:
        return;

        catch android.os.RemoteException from label3 to label4 with label7;
        catch android.os.RemoteException from label5 to label6 with label7;
    }

    public void onAsyncNoted(android.app.AsyncNotedAppOp)
    {
        android.app.AppOpsManager$1 r0;
        android.app.AsyncNotedAppOp r1;

        r0 := @this: android.app.AppOpsManager$1;

        r1 := @parameter0: android.app.AsyncNotedAppOp;

        return;
    }

    public void onNoted(android.app.SyncNotedAppOp)
    {
        android.app.AppOpsManager$1 r0;
        android.app.SyncNotedAppOp r1;

        r0 := @this: android.app.AppOpsManager$1;

        r1 := @parameter0: android.app.SyncNotedAppOp;

        specialinvoke r0.<android.app.AppOpsManager$1: void reportStackTraceIfNeeded(android.app.SyncNotedAppOp)>(r1);

        return;
    }

    public void onSelfNoted(android.app.SyncNotedAppOp)
    {
        android.app.AppOpsManager$1 r0;
        android.app.SyncNotedAppOp r1;

        r0 := @this: android.app.AppOpsManager$1;

        r1 := @parameter0: android.app.SyncNotedAppOp;

        specialinvoke r0.<android.app.AppOpsManager$1: void reportStackTraceIfNeeded(android.app.SyncNotedAppOp)>(r1);

        return;
    }
}
