public final class android.app.AppOpsManager$AttributedHistoricalOps extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    private android.util.ArrayMap mHistoricalOps;
    private final java.lang.String mTag;

    static void <clinit>()
    {
        android.app.AppOpsManager$AttributedHistoricalOps$1 $r0;

        $r0 = new android.app.AppOpsManager$AttributedHistoricalOps$1;

        specialinvoke $r0.<android.app.AppOpsManager$AttributedHistoricalOps$1: void <init>()>();

        <android.app.AppOpsManager$AttributedHistoricalOps: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    private void <init>(android.app.AppOpsManager$AttributedHistoricalOps)
    {
        android.app.AppOpsManager$AttributedHistoricalOps r0, r1;
        int i0, i1;
        java.lang.String $r3, $r8;
        android.app.AppOpsManager$HistoricalOp $r4, $r5;
        android.util.ArrayMap $r6, $r7, $r10;

        r0 := @this: android.app.AppOpsManager$AttributedHistoricalOps;

        r1 := @parameter0: android.app.AppOpsManager$AttributedHistoricalOps;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = r1.<android.app.AppOpsManager$AttributedHistoricalOps: java.lang.String mTag>;

        r0.<android.app.AppOpsManager$AttributedHistoricalOps: java.lang.String mTag> = $r3;

        i0 = virtualinvoke r1.<android.app.AppOpsManager$AttributedHistoricalOps: int getOpCount()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r4 = new android.app.AppOpsManager$HistoricalOp;

        $r5 = virtualinvoke r1.<android.app.AppOpsManager$AttributedHistoricalOps: android.app.AppOpsManager$HistoricalOp getOpAt(int)>(i1);

        specialinvoke $r4.<android.app.AppOpsManager$HistoricalOp: void <init>(android.app.AppOpsManager$HistoricalOp,android.app.AppOpsManager$1)>($r5, null);

        $r6 = r0.<android.app.AppOpsManager$AttributedHistoricalOps: android.util.ArrayMap mHistoricalOps>;

        if $r6 != null goto label2;

        $r10 = new android.util.ArrayMap;

        specialinvoke $r10.<android.util.ArrayMap: void <init>(int)>(i0);

        r0.<android.app.AppOpsManager$AttributedHistoricalOps: android.util.ArrayMap mHistoricalOps> = $r10;

     label2:
        $r7 = r0.<android.app.AppOpsManager$AttributedHistoricalOps: android.util.ArrayMap mHistoricalOps>;

        $r8 = virtualinvoke $r4.<android.app.AppOpsManager$HistoricalOp: java.lang.String getOpName()>();

        virtualinvoke $r7.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r4);

        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    void <init>(android.app.AppOpsManager$AttributedHistoricalOps, android.app.AppOpsManager$1)
    {
        android.app.AppOpsManager$AttributedHistoricalOps r0, r1;
        android.app.AppOpsManager$1 r2;

        r0 := @this: android.app.AppOpsManager$AttributedHistoricalOps;

        r1 := @parameter0: android.app.AppOpsManager$AttributedHistoricalOps;

        r2 := @parameter1: android.app.AppOpsManager$1;

        specialinvoke r0.<android.app.AppOpsManager$AttributedHistoricalOps: void <init>(android.app.AppOpsManager$AttributedHistoricalOps)>(r1);

        return;
    }

    void <init>(android.os.Parcel)
    {
        android.app.AppOpsManager$AttributedHistoricalOps r0;
        android.os.Parcel r1;
        byte b0, $b1, $b2;
        android.util.ArrayMap $r2, r6;
        java.lang.Class $r3;
        java.lang.ClassLoader $r4;
        java.lang.String r5;

        r0 := @this: android.app.AppOpsManager$AttributedHistoricalOps;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        b0 = virtualinvoke r1.<android.os.Parcel: byte readByte()>();

        $b1 = b0 & 1;

        if $b1 != 0 goto label1;

        r5 = null;

        goto label2;

     label1:
        r5 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

     label2:
        r6 = null;

        $b2 = b0 & 2;

        if $b2 == 0 goto label3;

        $r2 = new android.util.ArrayMap;

        specialinvoke $r2.<android.util.ArrayMap: void <init>()>();

        r6 = $r2;

        $r3 = class "Landroid/app/AppOpsManager$HistoricalOp;";

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        virtualinvoke r1.<android.os.Parcel: void readMap(java.util.Map,java.lang.ClassLoader)>($r2, $r4);

     label3:
        r0.<android.app.AppOpsManager$AttributedHistoricalOps: java.lang.String mTag> = r5;

        r0.<android.app.AppOpsManager$AttributedHistoricalOps: android.util.ArrayMap mHistoricalOps> = r6;

        return;
    }

    public void <init>(java.lang.String)
    {
        android.app.AppOpsManager$AttributedHistoricalOps r0;
        java.lang.String r1;

        r0 := @this: android.app.AppOpsManager$AttributedHistoricalOps;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.app.AppOpsManager$AttributedHistoricalOps: java.lang.String mTag> = r1;

        return;
    }

    public void <init>(java.lang.String, android.util.ArrayMap)
    {
        android.app.AppOpsManager$AttributedHistoricalOps r0;
        java.lang.String r1;
        android.util.ArrayMap r2;

        r0 := @this: android.app.AppOpsManager$AttributedHistoricalOps;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.util.ArrayMap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.app.AppOpsManager$AttributedHistoricalOps: java.lang.String mTag> = r1;

        r0.<android.app.AppOpsManager$AttributedHistoricalOps: android.util.ArrayMap mHistoricalOps> = r2;

        return;
    }

    private void accept(android.app.AppOpsManager$HistoricalOpsVisitor)
    {
        android.app.AppOpsManager$AttributedHistoricalOps r0;
        android.app.AppOpsManager$HistoricalOpsVisitor r1;
        int i0, i1;
        android.app.AppOpsManager$HistoricalOp $r2;

        r0 := @this: android.app.AppOpsManager$AttributedHistoricalOps;

        r1 := @parameter0: android.app.AppOpsManager$HistoricalOpsVisitor;

        interfaceinvoke r1.<android.app.AppOpsManager$HistoricalOpsVisitor: void visitHistoricalAttributionOps(android.app.AppOpsManager$AttributedHistoricalOps)>(r0);

        i0 = virtualinvoke r0.<android.app.AppOpsManager$AttributedHistoricalOps: int getOpCount()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r2 = virtualinvoke r0.<android.app.AppOpsManager$AttributedHistoricalOps: android.app.AppOpsManager$HistoricalOp getOpAt(int)>(i1);

        staticinvoke <android.app.AppOpsManager$HistoricalOp: void access$4900(android.app.AppOpsManager$HistoricalOp,android.app.AppOpsManager$HistoricalOpsVisitor)>($r2, r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    static android.app.AppOpsManager$AttributedHistoricalOps access$3200(android.app.AppOpsManager$AttributedHistoricalOps, double)
    {
        android.app.AppOpsManager$AttributedHistoricalOps r0, $r1;
        double d0;

        r0 := @parameter0: android.app.AppOpsManager$AttributedHistoricalOps;

        d0 := @parameter1: double;

        $r1 = specialinvoke r0.<android.app.AppOpsManager$AttributedHistoricalOps: android.app.AppOpsManager$AttributedHistoricalOps splice(double)>(d0);

        return $r1;
    }

    static void access$3300(android.app.AppOpsManager$AttributedHistoricalOps, android.app.AppOpsManager$AttributedHistoricalOps)
    {
        android.app.AppOpsManager$AttributedHistoricalOps r0, r1;

        r0 := @parameter0: android.app.AppOpsManager$AttributedHistoricalOps;

        r1 := @parameter1: android.app.AppOpsManager$AttributedHistoricalOps;

        specialinvoke r0.<android.app.AppOpsManager$AttributedHistoricalOps: void merge(android.app.AppOpsManager$AttributedHistoricalOps)>(r1);

        return;
    }

    static void access$3400(android.app.AppOpsManager$AttributedHistoricalOps, java.lang.String[], int, double)
    {
        android.app.AppOpsManager$AttributedHistoricalOps r0;
        java.lang.String[] r1;
        int i0;
        double d0;

        r0 := @parameter0: android.app.AppOpsManager$AttributedHistoricalOps;

        r1 := @parameter1: java.lang.String[];

        i0 := @parameter2: int;

        d0 := @parameter3: double;

        specialinvoke r0.<android.app.AppOpsManager$AttributedHistoricalOps: void filter(java.lang.String[],int,double)>(r1, i0, d0);

        return;
    }

    static void access$3500(android.app.AppOpsManager$AttributedHistoricalOps, android.app.AppOpsManager$HistoricalOpsVisitor)
    {
        android.app.AppOpsManager$AttributedHistoricalOps r0;
        android.app.AppOpsManager$HistoricalOpsVisitor r1;

        r0 := @parameter0: android.app.AppOpsManager$AttributedHistoricalOps;

        r1 := @parameter1: android.app.AppOpsManager$HistoricalOpsVisitor;

        specialinvoke r0.<android.app.AppOpsManager$AttributedHistoricalOps: void accept(android.app.AppOpsManager$HistoricalOpsVisitor)>(r1);

        return;
    }

    static boolean access$3600(android.app.AppOpsManager$AttributedHistoricalOps)
    {
        android.app.AppOpsManager$AttributedHistoricalOps r0;
        boolean $z0;

        r0 := @parameter0: android.app.AppOpsManager$AttributedHistoricalOps;

        $z0 = specialinvoke r0.<android.app.AppOpsManager$AttributedHistoricalOps: boolean isEmpty()>();

        return $z0;
    }

    static void access$3700(android.app.AppOpsManager$AttributedHistoricalOps, int, int, int, long)
    {
        android.app.AppOpsManager$AttributedHistoricalOps r0;
        int i0, i1, i2;
        long l3;

        r0 := @parameter0: android.app.AppOpsManager$AttributedHistoricalOps;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        l3 := @parameter4: long;

        specialinvoke r0.<android.app.AppOpsManager$AttributedHistoricalOps: void increaseAccessCount(int,int,int,long)>(i0, i1, i2, l3);

        return;
    }

    static void access$3800(android.app.AppOpsManager$AttributedHistoricalOps, int, int, int, long)
    {
        android.app.AppOpsManager$AttributedHistoricalOps r0;
        int i0, i1, i2;
        long l3;

        r0 := @parameter0: android.app.AppOpsManager$AttributedHistoricalOps;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        l3 := @parameter4: long;

        specialinvoke r0.<android.app.AppOpsManager$AttributedHistoricalOps: void increaseRejectCount(int,int,int,long)>(i0, i1, i2, l3);

        return;
    }

    static void access$3900(android.app.AppOpsManager$AttributedHistoricalOps, int, int, int, long)
    {
        android.app.AppOpsManager$AttributedHistoricalOps r0;
        int i0, i1, i2;
        long l3;

        r0 := @parameter0: android.app.AppOpsManager$AttributedHistoricalOps;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        l3 := @parameter4: long;

        specialinvoke r0.<android.app.AppOpsManager$AttributedHistoricalOps: void increaseAccessDuration(int,int,int,long)>(i0, i1, i2, l3);

        return;
    }

    private void filter(java.lang.String[], int, double)
    {
        android.app.AppOpsManager$AttributedHistoricalOps r0;
        java.lang.String[] r1;
        int i0, $i1, $i2, i3;
        double d0;
        android.app.AppOpsManager$HistoricalOp r2;
        android.util.ArrayMap $r3, $r6;
        java.lang.Object $r4;
        java.lang.String $r5;
        boolean $z0;

        r0 := @this: android.app.AppOpsManager$AttributedHistoricalOps;

        r1 := @parameter0: java.lang.String[];

        i0 := @parameter1: int;

        d0 := @parameter2: double;

        $i1 = virtualinvoke r0.<android.app.AppOpsManager$AttributedHistoricalOps: int getOpCount()>();

        i3 = $i1 - 1;

     label1:
        if i3 < 0 goto label4;

        $r3 = r0.<android.app.AppOpsManager$AttributedHistoricalOps: android.util.ArrayMap mHistoricalOps>;

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i3);

        r2 = (android.app.AppOpsManager$HistoricalOp) $r4;

        $i2 = i0 & 8;

        if $i2 == 0 goto label2;

        $r5 = virtualinvoke r2.<android.app.AppOpsManager$HistoricalOp: java.lang.String getOpName()>();

        $z0 = staticinvoke <com.android.internal.util.ArrayUtils: boolean contains(java.lang.Object[],java.lang.Object)>(r1, $r5);

        if $z0 != 0 goto label2;

        $r6 = r0.<android.app.AppOpsManager$AttributedHistoricalOps: android.util.ArrayMap mHistoricalOps>;

        virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object removeAt(int)>(i3);

        goto label3;

     label2:
        staticinvoke <android.app.AppOpsManager$HistoricalOp: void access$4400(android.app.AppOpsManager$HistoricalOp,double)>(r2, d0);

     label3:
        i3 = i3 + -1;

        goto label1;

     label4:
        return;
    }

    private android.app.AppOpsManager$HistoricalOp getOrCreateHistoricalOp(int)
    {
        android.app.AppOpsManager$AttributedHistoricalOps r0;
        int i0;
        java.lang.String r1;
        android.app.AppOpsManager$HistoricalOp r2, $r7, r11;
        android.util.ArrayMap $r3, $r5, $r8, $r10;
        java.lang.String[] $r4;
        java.lang.Object $r6;

        r0 := @this: android.app.AppOpsManager$AttributedHistoricalOps;

        i0 := @parameter0: int;

        $r3 = r0.<android.app.AppOpsManager$AttributedHistoricalOps: android.util.ArrayMap mHistoricalOps>;

        if $r3 != null goto label1;

        $r10 = new android.util.ArrayMap;

        specialinvoke $r10.<android.util.ArrayMap: void <init>()>();

        r0.<android.app.AppOpsManager$AttributedHistoricalOps: android.util.ArrayMap mHistoricalOps> = $r10;

     label1:
        $r4 = staticinvoke <android.app.AppOpsManager: java.lang.String[] access$600()>();

        r1 = $r4[i0];

        $r5 = r0.<android.app.AppOpsManager$AttributedHistoricalOps: android.util.ArrayMap mHistoricalOps>;

        $r6 = virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (android.app.AppOpsManager$HistoricalOp) $r6;

        r11 = r2;

        if r2 != null goto label2;

        $r7 = new android.app.AppOpsManager$HistoricalOp;

        specialinvoke $r7.<android.app.AppOpsManager$HistoricalOp: void <init>(int)>(i0);

        r11 = $r7;

        $r8 = r0.<android.app.AppOpsManager$AttributedHistoricalOps: android.util.ArrayMap mHistoricalOps>;

        virtualinvoke $r8.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r7);

     label2:
        return r11;
    }

    private void increaseAccessCount(int, int, int, long)
    {
        android.app.AppOpsManager$AttributedHistoricalOps r0;
        int i0, i1, i2;
        long l3;
        android.app.AppOpsManager$HistoricalOp $r1;

        r0 := @this: android.app.AppOpsManager$AttributedHistoricalOps;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        l3 := @parameter3: long;

        $r1 = specialinvoke r0.<android.app.AppOpsManager$AttributedHistoricalOps: android.app.AppOpsManager$HistoricalOp getOrCreateHistoricalOp(int)>(i0);

        staticinvoke <android.app.AppOpsManager$HistoricalOp: void access$4600(android.app.AppOpsManager$HistoricalOp,int,int,long)>($r1, i1, i2, l3);

        return;
    }

    private void increaseAccessDuration(int, int, int, long)
    {
        android.app.AppOpsManager$AttributedHistoricalOps r0;
        int i0, i1, i2;
        long l3;
        android.app.AppOpsManager$HistoricalOp $r1;

        r0 := @this: android.app.AppOpsManager$AttributedHistoricalOps;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        l3 := @parameter3: long;

        $r1 = specialinvoke r0.<android.app.AppOpsManager$AttributedHistoricalOps: android.app.AppOpsManager$HistoricalOp getOrCreateHistoricalOp(int)>(i0);

        staticinvoke <android.app.AppOpsManager$HistoricalOp: void access$4800(android.app.AppOpsManager$HistoricalOp,int,int,long)>($r1, i1, i2, l3);

        return;
    }

    private void increaseRejectCount(int, int, int, long)
    {
        android.app.AppOpsManager$AttributedHistoricalOps r0;
        int i0, i1, i2;
        long l3;
        android.app.AppOpsManager$HistoricalOp $r1;

        r0 := @this: android.app.AppOpsManager$AttributedHistoricalOps;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        l3 := @parameter3: long;

        $r1 = specialinvoke r0.<android.app.AppOpsManager$AttributedHistoricalOps: android.app.AppOpsManager$HistoricalOp getOrCreateHistoricalOp(int)>(i0);

        staticinvoke <android.app.AppOpsManager$HistoricalOp: void access$4700(android.app.AppOpsManager$HistoricalOp,int,int,long)>($r1, i1, i2, l3);

        return;
    }

    private boolean isEmpty()
    {
        android.app.AppOpsManager$AttributedHistoricalOps r0;
        int $i0, i1;
        android.util.ArrayMap $r1;
        java.lang.Object $r2;
        android.app.AppOpsManager$HistoricalOp $r3;
        boolean $z0;

        r0 := @this: android.app.AppOpsManager$AttributedHistoricalOps;

        $i0 = virtualinvoke r0.<android.app.AppOpsManager$AttributedHistoricalOps: int getOpCount()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label3;

        $r1 = r0.<android.app.AppOpsManager$AttributedHistoricalOps: android.util.ArrayMap mHistoricalOps>;

        $r2 = virtualinvoke $r1.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i1);

        $r3 = (android.app.AppOpsManager$HistoricalOp) $r2;

        $z0 = staticinvoke <android.app.AppOpsManager$HistoricalOp: boolean access$4500(android.app.AppOpsManager$HistoricalOp)>($r3);

        if $z0 != 0 goto label2;

        return 0;

     label2:
        i1 = i1 + -1;

        goto label1;

     label3:
        return 1;
    }

    private void merge(android.app.AppOpsManager$AttributedHistoricalOps)
    {
        android.app.AppOpsManager$AttributedHistoricalOps r0, r1;
        int i0, i1;
        android.app.AppOpsManager$HistoricalOp r2, r3;
        java.lang.String $r4, $r7;
        android.util.ArrayMap $r5, $r6, $r9;

        r0 := @this: android.app.AppOpsManager$AttributedHistoricalOps;

        r1 := @parameter0: android.app.AppOpsManager$AttributedHistoricalOps;

        i0 = virtualinvoke r1.<android.app.AppOpsManager$AttributedHistoricalOps: int getOpCount()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label5;

        r2 = virtualinvoke r1.<android.app.AppOpsManager$AttributedHistoricalOps: android.app.AppOpsManager$HistoricalOp getOpAt(int)>(i1);

        $r4 = virtualinvoke r2.<android.app.AppOpsManager$HistoricalOp: java.lang.String getOpName()>();

        r3 = virtualinvoke r0.<android.app.AppOpsManager$AttributedHistoricalOps: android.app.AppOpsManager$HistoricalOp getOp(java.lang.String)>($r4);

        if r3 == null goto label2;

        staticinvoke <android.app.AppOpsManager$HistoricalOp: void access$4100(android.app.AppOpsManager$HistoricalOp,android.app.AppOpsManager$HistoricalOp)>(r3, r2);

        goto label4;

     label2:
        $r5 = r0.<android.app.AppOpsManager$AttributedHistoricalOps: android.util.ArrayMap mHistoricalOps>;

        if $r5 != null goto label3;

        $r9 = new android.util.ArrayMap;

        specialinvoke $r9.<android.util.ArrayMap: void <init>()>();

        r0.<android.app.AppOpsManager$AttributedHistoricalOps: android.util.ArrayMap mHistoricalOps> = $r9;

     label3:
        $r6 = r0.<android.app.AppOpsManager$AttributedHistoricalOps: android.util.ArrayMap mHistoricalOps>;

        $r7 = virtualinvoke r2.<android.app.AppOpsManager$HistoricalOp: java.lang.String getOpName()>();

        virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, r2);

     label4:
        i1 = i1 + 1;

        goto label1;

     label5:
        return;
    }

    private android.app.AppOpsManager$AttributedHistoricalOps splice(double)
    {
        android.app.AppOpsManager$AttributedHistoricalOps r0, $r8, r10, r11;
        double d0;
        int i0, i1;
        android.app.AppOpsManager$HistoricalOp r1, $r2;
        android.util.ArrayMap $r3, $r4, $r7;
        java.lang.String $r5, $r9;

        r0 := @this: android.app.AppOpsManager$AttributedHistoricalOps;

        d0 := @parameter0: double;

        r10 = null;

        i0 = virtualinvoke r0.<android.app.AppOpsManager$AttributedHistoricalOps: int getOpCount()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label5;

        $r2 = virtualinvoke r0.<android.app.AppOpsManager$AttributedHistoricalOps: android.app.AppOpsManager$HistoricalOp getOpAt(int)>(i1);

        r1 = staticinvoke <android.app.AppOpsManager$HistoricalOp: android.app.AppOpsManager$HistoricalOp access$4300(android.app.AppOpsManager$HistoricalOp,double)>($r2, d0);

        r11 = r10;

        if r1 == null goto label4;

        r11 = r10;

        if r10 != null goto label2;

        $r8 = new android.app.AppOpsManager$AttributedHistoricalOps;

        $r9 = r0.<android.app.AppOpsManager$AttributedHistoricalOps: java.lang.String mTag>;

        specialinvoke $r8.<android.app.AppOpsManager$AttributedHistoricalOps: void <init>(java.lang.String,android.util.ArrayMap)>($r9, null);

        r11 = $r8;

     label2:
        $r3 = r11.<android.app.AppOpsManager$AttributedHistoricalOps: android.util.ArrayMap mHistoricalOps>;

        if $r3 != null goto label3;

        $r7 = new android.util.ArrayMap;

        specialinvoke $r7.<android.util.ArrayMap: void <init>()>();

        r11.<android.app.AppOpsManager$AttributedHistoricalOps: android.util.ArrayMap mHistoricalOps> = $r7;

     label3:
        $r4 = r11.<android.app.AppOpsManager$AttributedHistoricalOps: android.util.ArrayMap mHistoricalOps>;

        $r5 = virtualinvoke r1.<android.app.AppOpsManager$HistoricalOp: java.lang.String getOpName()>();

        virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, r1);

     label4:
        i1 = i1 + 1;

        r10 = r11;

        goto label1;

     label5:
        return r10;
    }

    public int describeContents()
    {
        android.app.AppOpsManager$AttributedHistoricalOps r0;

        r0 := @this: android.app.AppOpsManager$AttributedHistoricalOps;

        return 0;
    }

    public boolean equals(java.lang.Object)
    {
        android.app.AppOpsManager$AttributedHistoricalOps r0, r8;
        java.lang.Class $r1, $r2;
        java.lang.String $r3, $r4;
        boolean $z0, $z1, z2;
        android.util.ArrayMap $r5, $r6;
        java.lang.Object r7;

        r0 := @this: android.app.AppOpsManager$AttributedHistoricalOps;

        r7 := @parameter0: java.lang.Object;

        z2 = 1;

        if r0 != r7 goto label1;

        return 1;

     label1:
        if r7 == null goto label5;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke r7.<java.lang.Object: java.lang.Class getClass()>();

        if $r1 == $r2 goto label2;

        goto label5;

     label2:
        r8 = (android.app.AppOpsManager$AttributedHistoricalOps) r7;

        $r4 = r0.<android.app.AppOpsManager$AttributedHistoricalOps: java.lang.String mTag>;

        $r3 = r8.<android.app.AppOpsManager$AttributedHistoricalOps: java.lang.String mTag>;

        $z0 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r4, $r3);

        if $z0 == 0 goto label3;

        $r6 = r0.<android.app.AppOpsManager$AttributedHistoricalOps: android.util.ArrayMap mHistoricalOps>;

        $r5 = r8.<android.app.AppOpsManager$AttributedHistoricalOps: android.util.ArrayMap mHistoricalOps>;

        $z1 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r6, $r5);

        if $z1 == 0 goto label3;

        goto label4;

     label3:
        z2 = 0;

     label4:
        return z2;

     label5:
        return 0;
    }

    public android.app.AppOpsManager$HistoricalOp getOp(java.lang.String)
    {
        android.app.AppOpsManager$AttributedHistoricalOps r0;
        java.lang.String r1;
        android.util.ArrayMap r2;
        java.lang.Object $r3;
        android.app.AppOpsManager$HistoricalOp $r4;

        r0 := @this: android.app.AppOpsManager$AttributedHistoricalOps;

        r1 := @parameter0: java.lang.String;

        r2 = r0.<android.app.AppOpsManager$AttributedHistoricalOps: android.util.ArrayMap mHistoricalOps>;

        if r2 != null goto label1;

        return null;

     label1:
        $r3 = virtualinvoke r2.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (android.app.AppOpsManager$HistoricalOp) $r3;

        return $r4;
    }

    public android.app.AppOpsManager$HistoricalOp getOpAt(int)
    {
        android.app.AppOpsManager$AttributedHistoricalOps r0;
        int i0;
        android.util.ArrayMap r1;
        java.lang.IndexOutOfBoundsException $r2;
        java.lang.Object $r3;
        android.app.AppOpsManager$HistoricalOp $r4;

        r0 := @this: android.app.AppOpsManager$AttributedHistoricalOps;

        i0 := @parameter0: int;

        r1 = r0.<android.app.AppOpsManager$AttributedHistoricalOps: android.util.ArrayMap mHistoricalOps>;

        if r1 == null goto label1;

        $r3 = virtualinvoke r1.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i0);

        $r4 = (android.app.AppOpsManager$HistoricalOp) $r3;

        return $r4;

     label1:
        $r2 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r2;
    }

    public int getOpCount()
    {
        android.app.AppOpsManager$AttributedHistoricalOps r0;
        android.util.ArrayMap r1;
        int $i0;

        r0 := @this: android.app.AppOpsManager$AttributedHistoricalOps;

        r1 = r0.<android.app.AppOpsManager$AttributedHistoricalOps: android.util.ArrayMap mHistoricalOps>;

        if r1 != null goto label1;

        return 0;

     label1:
        $i0 = virtualinvoke r1.<android.util.ArrayMap: int size()>();

        return $i0;
    }

    public java.lang.String getTag()
    {
        android.app.AppOpsManager$AttributedHistoricalOps r0;
        java.lang.String $r1;

        r0 := @this: android.app.AppOpsManager$AttributedHistoricalOps;

        $r1 = r0.<android.app.AppOpsManager$AttributedHistoricalOps: java.lang.String mTag>;

        return $r1;
    }

    public int hashCode()
    {
        android.app.AppOpsManager$AttributedHistoricalOps r0;
        java.lang.String $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.util.ArrayMap $r2;

        r0 := @this: android.app.AppOpsManager$AttributedHistoricalOps;

        $i0 = 1 * 31;

        $r1 = r0.<android.app.AppOpsManager$AttributedHistoricalOps: java.lang.String mTag>;

        $i1 = staticinvoke <java.util.Objects: int hashCode(java.lang.Object)>($r1);

        $i2 = $i0 + $i1;

        $i3 = $i2 * 31;

        $r2 = r0.<android.app.AppOpsManager$AttributedHistoricalOps: android.util.ArrayMap mHistoricalOps>;

        $i4 = staticinvoke <java.util.Objects: int hashCode(java.lang.Object)>($r2);

        $i5 = $i3 + $i4;

        return $i5;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.app.AppOpsManager$AttributedHistoricalOps r0;
        android.os.Parcel r1;
        java.lang.String $r2, r4;
        android.util.ArrayMap $r3, r5;
        byte $b0, b2, b3, b4;
        boolean $z0;
        int i1;

        r0 := @this: android.app.AppOpsManager$AttributedHistoricalOps;

        r1 := @parameter0: android.os.Parcel;

        i1 := @parameter1: int;

        b2 = 0;

        $r2 = r0.<android.app.AppOpsManager$AttributedHistoricalOps: java.lang.String mTag>;

        if $r2 == null goto label1;

        $z0 = 0 | 1;

        b2 = (byte) $z0;

     label1:
        b3 = b2;

        $r3 = r0.<android.app.AppOpsManager$AttributedHistoricalOps: android.util.ArrayMap mHistoricalOps>;

        if $r3 == null goto label2;

        $b0 = b2 | 2;

        b4 = (byte) $b0;

        b3 = b4;

     label2:
        virtualinvoke r1.<android.os.Parcel: void writeByte(byte)>(b3);

        r4 = r0.<android.app.AppOpsManager$AttributedHistoricalOps: java.lang.String mTag>;

        if r4 == null goto label3;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r4);

     label3:
        r5 = r0.<android.app.AppOpsManager$AttributedHistoricalOps: android.util.ArrayMap mHistoricalOps>;

        if r5 == null goto label4;

        virtualinvoke r1.<android.os.Parcel: void writeMap(java.util.Map)>(r5);

     label4:
        return;
    }
}
