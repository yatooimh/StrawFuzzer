public final class android.app.AppOpsManager$HistoricalOps extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    private long mBeginTimeMillis;
    private long mEndTimeMillis;
    private android.util.SparseArray mHistoricalUidOps;

    static void <clinit>()
    {
        android.app.AppOpsManager$HistoricalOps$1 $r0;

        $r0 = new android.app.AppOpsManager$HistoricalOps$1;

        specialinvoke $r0.<android.app.AppOpsManager$HistoricalOps$1: void <init>()>();

        <android.app.AppOpsManager$HistoricalOps: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    public void <init>(long, long)
    {
        android.app.AppOpsManager$HistoricalOps r0;
        long l0, l1;
        byte $b2;
        boolean z0;

        r0 := @this: android.app.AppOpsManager$HistoricalOps;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $b2 = l0 cmp l1;

        if $b2 > 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        staticinvoke <com.android.internal.util.Preconditions: void checkState(boolean)>(z0);

        r0.<android.app.AppOpsManager$HistoricalOps: long mBeginTimeMillis> = l0;

        r0.<android.app.AppOpsManager$HistoricalOps: long mEndTimeMillis> = l1;

        return;
    }

    public void <init>(android.app.AppOpsManager$HistoricalOps)
    {
        android.app.AppOpsManager$HistoricalOps r0, r1;
        long l0, l1;
        int i2, $i4, i5;
        byte $b3;
        android.util.SparseArray $r3, $r6, $r7, $r8;
        android.app.AppOpsManager$HistoricalUidOps $r4, $r5;
        boolean z0;

        r0 := @this: android.app.AppOpsManager$HistoricalOps;

        r1 := @parameter0: android.app.AppOpsManager$HistoricalOps;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        l0 = r1.<android.app.AppOpsManager$HistoricalOps: long mBeginTimeMillis>;

        r0.<android.app.AppOpsManager$HistoricalOps: long mBeginTimeMillis> = l0;

        l1 = r1.<android.app.AppOpsManager$HistoricalOps: long mEndTimeMillis>;

        r0.<android.app.AppOpsManager$HistoricalOps: long mEndTimeMillis> = l1;

        $b3 = l0 cmp l1;

        if $b3 > 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        staticinvoke <com.android.internal.util.Preconditions: void checkState(boolean)>(z0);

        $r3 = r1.<android.app.AppOpsManager$HistoricalOps: android.util.SparseArray mHistoricalUidOps>;

        if $r3 == null goto label5;

        i2 = virtualinvoke r1.<android.app.AppOpsManager$HistoricalOps: int getUidCount()>();

        i5 = 0;

     label3:
        if i5 >= i2 goto label5;

        $r4 = new android.app.AppOpsManager$HistoricalUidOps;

        $r5 = virtualinvoke r1.<android.app.AppOpsManager$HistoricalOps: android.app.AppOpsManager$HistoricalUidOps getUidOpsAt(int)>(i5);

        specialinvoke $r4.<android.app.AppOpsManager$HistoricalUidOps: void <init>(android.app.AppOpsManager$HistoricalUidOps,android.app.AppOpsManager$1)>($r5, null);

        $r6 = r0.<android.app.AppOpsManager$HistoricalOps: android.util.SparseArray mHistoricalUidOps>;

        if $r6 != null goto label4;

        $r8 = new android.util.SparseArray;

        specialinvoke $r8.<android.util.SparseArray: void <init>(int)>(i2);

        r0.<android.app.AppOpsManager$HistoricalOps: android.util.SparseArray mHistoricalUidOps> = $r8;

     label4:
        $r7 = r0.<android.app.AppOpsManager$HistoricalOps: android.util.SparseArray mHistoricalUidOps>;

        $i4 = virtualinvoke $r4.<android.app.AppOpsManager$HistoricalUidOps: int getUid()>();

        virtualinvoke $r7.<android.util.SparseArray: void put(int,java.lang.Object)>($i4, $r4);

        i5 = i5 + 1;

        goto label3;

     label5:
        return;
    }

    private void <init>(android.os.Parcel)
    {
        android.app.AppOpsManager$HistoricalOps r0;
        int[] r1;
        long $l0, $l1;
        boolean $z0;
        java.lang.Class $r2;
        java.lang.ClassLoader $r3;
        android.os.Parcelable $r4;
        int $i2, $i3, i4;
        android.util.SparseArray $r5, $r6, $r9;
        java.lang.Object $r7;
        android.app.AppOpsManager$HistoricalUidOps $r8;
        android.os.Parcel r10;
        android.content.pm.ParceledListSlice r11;
        java.util.List r12;

        r0 := @this: android.app.AppOpsManager$HistoricalOps;

        r10 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $l0 = virtualinvoke r10.<android.os.Parcel: long readLong()>();

        r0.<android.app.AppOpsManager$HistoricalOps: long mBeginTimeMillis> = $l0;

        $l1 = virtualinvoke r10.<android.os.Parcel: long readLong()>();

        r0.<android.app.AppOpsManager$HistoricalOps: long mEndTimeMillis> = $l1;

        r1 = virtualinvoke r10.<android.os.Parcel: int[] createIntArray()>();

        $z0 = staticinvoke <com.android.internal.util.ArrayUtils: boolean isEmpty(int[])>(r1);

        if $z0 != 0 goto label6;

        $r2 = class "Landroid/app/AppOpsManager$HistoricalOps;";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r4 = virtualinvoke r10.<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)>($r3);

        r11 = (android.content.pm.ParceledListSlice) $r4;

        if r11 == null goto label1;

        r12 = virtualinvoke r11.<android.content.pm.ParceledListSlice: java.util.List getList()>();

        goto label2;

     label1:
        r12 = null;

     label2:
        if r12 != null goto label3;

        return;

     label3:
        i4 = 0;

     label4:
        $i2 = lengthof r1;

        if i4 >= $i2 goto label6;

        $r5 = r0.<android.app.AppOpsManager$HistoricalOps: android.util.SparseArray mHistoricalUidOps>;

        if $r5 != null goto label5;

        $r9 = new android.util.SparseArray;

        specialinvoke $r9.<android.util.SparseArray: void <init>()>();

        r0.<android.app.AppOpsManager$HistoricalOps: android.util.SparseArray mHistoricalUidOps> = $r9;

     label5:
        $r6 = r0.<android.app.AppOpsManager$HistoricalOps: android.util.SparseArray mHistoricalUidOps>;

        $i3 = r1[i4];

        $r7 = interfaceinvoke r12.<java.util.List: java.lang.Object get(int)>(i4);

        $r8 = (android.app.AppOpsManager$HistoricalUidOps) $r7;

        virtualinvoke $r6.<android.util.SparseArray: void put(int,java.lang.Object)>($i3, $r8);

        i4 = i4 + 1;

        goto label4;

     label6:
        return;
    }

    void <init>(android.os.Parcel, android.app.AppOpsManager$1)
    {
        android.app.AppOpsManager$HistoricalOps r0;
        android.os.Parcel r1;
        android.app.AppOpsManager$1 r2;

        r0 := @this: android.app.AppOpsManager$HistoricalOps;

        r1 := @parameter0: android.os.Parcel;

        r2 := @parameter1: android.app.AppOpsManager$1;

        specialinvoke r0.<android.app.AppOpsManager$HistoricalOps: void <init>(android.os.Parcel)>(r1);

        return;
    }

    private android.app.AppOpsManager$HistoricalUidOps getOrCreateHistoricalUidOps(int)
    {
        android.app.AppOpsManager$HistoricalOps r0;
        int i0;
        android.app.AppOpsManager$HistoricalUidOps r1, $r5, r8;
        android.util.SparseArray $r2, $r3, $r6, $r7;
        java.lang.Object $r4;

        r0 := @this: android.app.AppOpsManager$HistoricalOps;

        i0 := @parameter0: int;

        $r2 = r0.<android.app.AppOpsManager$HistoricalOps: android.util.SparseArray mHistoricalUidOps>;

        if $r2 != null goto label1;

        $r7 = new android.util.SparseArray;

        specialinvoke $r7.<android.util.SparseArray: void <init>()>();

        r0.<android.app.AppOpsManager$HistoricalOps: android.util.SparseArray mHistoricalUidOps> = $r7;

     label1:
        $r3 = r0.<android.app.AppOpsManager$HistoricalOps: android.util.SparseArray mHistoricalUidOps>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (android.app.AppOpsManager$HistoricalUidOps) $r4;

        r8 = r1;

        if r1 != null goto label2;

        $r5 = new android.app.AppOpsManager$HistoricalUidOps;

        specialinvoke $r5.<android.app.AppOpsManager$HistoricalUidOps: void <init>(int)>(i0);

        r8 = $r5;

        $r6 = r0.<android.app.AppOpsManager$HistoricalOps: android.util.SparseArray mHistoricalUidOps>;

        virtualinvoke $r6.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, $r5);

     label2:
        return r8;
    }

    public static double round(double)
    {
        double d0, $d1;
        java.math.BigDecimal $r0, $r2;
        java.math.RoundingMode $r1;

        d0 := @parameter0: double;

        $r0 = new java.math.BigDecimal;

        specialinvoke $r0.<java.math.BigDecimal: void <init>(double)>(d0);

        $r1 = <java.math.RoundingMode: java.math.RoundingMode HALF_UP>;

        $r2 = virtualinvoke $r0.<java.math.BigDecimal: java.math.BigDecimal setScale(int,java.math.RoundingMode)>(0, $r1);

        $d1 = virtualinvoke $r2.<java.math.BigDecimal: double doubleValue()>();

        return $d1;
    }

    private android.app.AppOpsManager$HistoricalOps splice(double, boolean)
    {
        android.app.AppOpsManager$HistoricalOps r0, $r6, r7, r8;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8;
        boolean z0;
        int i0, $i3, i8;
        android.app.AppOpsManager$HistoricalUidOps r1, $r2;
        long $l1, $l2, $l4, $l5, l6, l7;
        android.util.SparseArray $r3, $r4, $r5;

        r0 := @this: android.app.AppOpsManager$HistoricalOps;

        d0 := @parameter0: double;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        l6 = r0.<android.app.AppOpsManager$HistoricalOps: long mBeginTimeMillis>;

        $l4 = r0.<android.app.AppOpsManager$HistoricalOps: long mBeginTimeMillis>;

        $d5 = (double) $l4;

        $l5 = virtualinvoke r0.<android.app.AppOpsManager$HistoricalOps: long getDurationMillis()>();

        $d6 = (double) $l5;

        $d7 = $d6 * d0;

        $d8 = $d5 + $d7;

        l7 = (long) $d8;

        r0.<android.app.AppOpsManager$HistoricalOps: long mBeginTimeMillis> = l7;

        goto label2;

     label1:
        $l1 = r0.<android.app.AppOpsManager$HistoricalOps: long mEndTimeMillis>;

        $d1 = (double) $l1;

        $l2 = virtualinvoke r0.<android.app.AppOpsManager$HistoricalOps: long getDurationMillis()>();

        $d2 = (double) $l2;

        $d3 = $d2 * d0;

        $d4 = $d1 - $d3;

        l6 = (long) $d4;

        l7 = r0.<android.app.AppOpsManager$HistoricalOps: long mEndTimeMillis>;

        r0.<android.app.AppOpsManager$HistoricalOps: long mEndTimeMillis> = l6;

     label2:
        r7 = null;

        i0 = virtualinvoke r0.<android.app.AppOpsManager$HistoricalOps: int getUidCount()>();

        i8 = 0;

     label3:
        if i8 >= i0 goto label7;

        $r2 = virtualinvoke r0.<android.app.AppOpsManager$HistoricalOps: android.app.AppOpsManager$HistoricalUidOps getUidOpsAt(int)>(i8);

        r1 = staticinvoke <android.app.AppOpsManager$HistoricalUidOps: android.app.AppOpsManager$HistoricalUidOps access$1100(android.app.AppOpsManager$HistoricalUidOps,double)>($r2, d0);

        r8 = r7;

        if r1 == null goto label6;

        r8 = r7;

        if r7 != null goto label4;

        $r6 = new android.app.AppOpsManager$HistoricalOps;

        specialinvoke $r6.<android.app.AppOpsManager$HistoricalOps: void <init>(long,long)>(l6, l7);

        r8 = $r6;

     label4:
        $r3 = r8.<android.app.AppOpsManager$HistoricalOps: android.util.SparseArray mHistoricalUidOps>;

        if $r3 != null goto label5;

        $r5 = new android.util.SparseArray;

        specialinvoke $r5.<android.util.SparseArray: void <init>()>();

        r8.<android.app.AppOpsManager$HistoricalOps: android.util.SparseArray mHistoricalUidOps> = $r5;

     label5:
        $r4 = r8.<android.app.AppOpsManager$HistoricalOps: android.util.SparseArray mHistoricalUidOps>;

        $i3 = virtualinvoke r1.<android.app.AppOpsManager$HistoricalUidOps: int getUid()>();

        virtualinvoke $r4.<android.util.SparseArray: void put(int,java.lang.Object)>($i3, r1);

     label6:
        i8 = i8 + 1;

        r7 = r8;

        goto label3;

     label7:
        return r7;
    }

    public void accept(android.app.AppOpsManager$HistoricalOpsVisitor)
    {
        android.app.AppOpsManager$HistoricalOps r0;
        android.app.AppOpsManager$HistoricalOpsVisitor r1;
        int i0, i1;
        android.app.AppOpsManager$HistoricalUidOps $r2;

        r0 := @this: android.app.AppOpsManager$HistoricalOps;

        r1 := @parameter0: android.app.AppOpsManager$HistoricalOpsVisitor;

        interfaceinvoke r1.<android.app.AppOpsManager$HistoricalOpsVisitor: void visitHistoricalOps(android.app.AppOpsManager$HistoricalOps)>(r0);

        i0 = virtualinvoke r0.<android.app.AppOpsManager$HistoricalOps: int getUidCount()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r2 = virtualinvoke r0.<android.app.AppOpsManager$HistoricalOps: android.app.AppOpsManager$HistoricalUidOps getUidOpsAt(int)>(i1);

        staticinvoke <android.app.AppOpsManager$HistoricalUidOps: void access$1900(android.app.AppOpsManager$HistoricalUidOps,android.app.AppOpsManager$HistoricalOpsVisitor)>($r2, r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void clearHistory(int, java.lang.String)
    {
        android.app.AppOpsManager$HistoricalOps r0;
        int i0;
        java.lang.String r1;
        android.app.AppOpsManager$HistoricalUidOps r2;
        boolean $z0;
        android.util.SparseArray $r3;

        r0 := @this: android.app.AppOpsManager$HistoricalOps;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 = specialinvoke r0.<android.app.AppOpsManager$HistoricalOps: android.app.AppOpsManager$HistoricalUidOps getOrCreateHistoricalUidOps(int)>(i0);

        staticinvoke <android.app.AppOpsManager$HistoricalUidOps: void access$1800(android.app.AppOpsManager$HistoricalUidOps,java.lang.String)>(r2, r1);

        $z0 = staticinvoke <android.app.AppOpsManager$HistoricalUidOps: boolean access$1400(android.app.AppOpsManager$HistoricalUidOps)>(r2);

        if $z0 == 0 goto label1;

        $r3 = r0.<android.app.AppOpsManager$HistoricalOps: android.util.SparseArray mHistoricalUidOps>;

        virtualinvoke $r3.<android.util.SparseArray: void remove(int)>(i0);

     label1:
        return;
    }

    public int describeContents()
    {
        android.app.AppOpsManager$HistoricalOps r0;

        r0 := @this: android.app.AppOpsManager$HistoricalOps;

        return 0;
    }

    public boolean equals(java.lang.Object)
    {
        android.app.AppOpsManager$HistoricalOps r0, r1;
        java.lang.Class $r2, $r3;
        long $l0, $l1, $l3, $l4;
        byte $b2, $b5;
        android.util.SparseArray $r4, $r5, r7;
        boolean $z0;
        java.lang.Object r6;

        r0 := @this: android.app.AppOpsManager$HistoricalOps;

        r6 := @parameter0: java.lang.Object;

        if r0 != r6 goto label1;

        return 1;

     label1:
        if r6 == null goto label7;

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r6.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 == $r3 goto label2;

        goto label7;

     label2:
        r1 = (android.app.AppOpsManager$HistoricalOps) r6;

        $l1 = r0.<android.app.AppOpsManager$HistoricalOps: long mBeginTimeMillis>;

        $l0 = r1.<android.app.AppOpsManager$HistoricalOps: long mBeginTimeMillis>;

        $b2 = $l1 cmp $l0;

        if $b2 == 0 goto label3;

        return 0;

     label3:
        $l4 = r0.<android.app.AppOpsManager$HistoricalOps: long mEndTimeMillis>;

        $l3 = r1.<android.app.AppOpsManager$HistoricalOps: long mEndTimeMillis>;

        $b5 = $l4 cmp $l3;

        if $b5 == 0 goto label4;

        return 0;

     label4:
        r7 = r0.<android.app.AppOpsManager$HistoricalOps: android.util.SparseArray mHistoricalUidOps>;

        if r7 != null goto label5;

        $r5 = r1.<android.app.AppOpsManager$HistoricalOps: android.util.SparseArray mHistoricalUidOps>;

        if $r5 == null goto label6;

        return 0;

     label5:
        $r4 = r1.<android.app.AppOpsManager$HistoricalOps: android.util.SparseArray mHistoricalUidOps>;

        $z0 = virtualinvoke r7.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label6;

        return 0;

     label6:
        return 1;

     label7:
        return 0;
    }

    public void filter(int, java.lang.String, java.lang.String, java.lang.String[], int, long, long)
    {
        android.app.AppOpsManager$HistoricalOps r0;
        int i0, i1, $i10, $i11, $i12, $i13, i14;
        java.lang.String r1, r2;
        java.lang.String[] r3;
        long l2, l3, l4, $l5, $l6, $l7, $l8, $l9;
        double d0, $d1, $d2, $d3;
        android.app.AppOpsManager$HistoricalUidOps r4;
        android.util.SparseArray $r5, $r7, $r8;
        java.lang.Object $r6;

        r0 := @this: android.app.AppOpsManager$HistoricalOps;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String[];

        i1 := @parameter4: int;

        l2 := @parameter5: long;

        l3 := @parameter6: long;

        l4 = virtualinvoke r0.<android.app.AppOpsManager$HistoricalOps: long getDurationMillis()>();

        $l5 = r0.<android.app.AppOpsManager$HistoricalOps: long mBeginTimeMillis>;

        $l6 = staticinvoke <java.lang.Math: long max(long,long)>($l5, l2);

        r0.<android.app.AppOpsManager$HistoricalOps: long mBeginTimeMillis> = $l6;

        $l7 = r0.<android.app.AppOpsManager$HistoricalOps: long mEndTimeMillis>;

        $l8 = staticinvoke <java.lang.Math: long min(long,long)>($l7, l3);

        r0.<android.app.AppOpsManager$HistoricalOps: long mEndTimeMillis> = $l8;

        $l9 = l3 - l2;

        $d2 = (double) $l9;

        $d1 = (double) l4;

        $d3 = $d2 / $d1;

        d0 = staticinvoke <java.lang.Math: double min(double,double)>($d3, 1.0);

        $i10 = virtualinvoke r0.<android.app.AppOpsManager$HistoricalOps: int getUidCount()>();

        i14 = $i10 - 1;

     label1:
        if i14 < 0 goto label4;

        $r5 = r0.<android.app.AppOpsManager$HistoricalOps: android.util.SparseArray mHistoricalUidOps>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object valueAt(int)>(i14);

        r4 = (android.app.AppOpsManager$HistoricalUidOps) $r6;

        $i11 = i1 & 1;

        if $i11 == 0 goto label2;

        $i13 = virtualinvoke r4.<android.app.AppOpsManager$HistoricalUidOps: int getUid()>();

        if i0 == $i13 goto label2;

        $r8 = r0.<android.app.AppOpsManager$HistoricalOps: android.util.SparseArray mHistoricalUidOps>;

        virtualinvoke $r8.<android.util.SparseArray: void removeAt(int)>(i14);

        goto label3;

     label2:
        staticinvoke <android.app.AppOpsManager$HistoricalUidOps: void access$1300(android.app.AppOpsManager$HistoricalUidOps,java.lang.String,java.lang.String,java.lang.String[],int,double)>(r4, r1, r2, r3, i1, d0);

        $i12 = virtualinvoke r4.<android.app.AppOpsManager$HistoricalUidOps: int getPackageCount()>();

        if $i12 != 0 goto label3;

        $r7 = r0.<android.app.AppOpsManager$HistoricalOps: android.util.SparseArray mHistoricalUidOps>;

        virtualinvoke $r7.<android.util.SparseArray: void removeAt(int)>(i14);

     label3:
        i14 = i14 + -1;

        goto label1;

     label4:
        return;
    }

    public long getBeginTimeMillis()
    {
        android.app.AppOpsManager$HistoricalOps r0;
        long $l0;

        r0 := @this: android.app.AppOpsManager$HistoricalOps;

        $l0 = r0.<android.app.AppOpsManager$HistoricalOps: long mBeginTimeMillis>;

        return $l0;
    }

    public long getDurationMillis()
    {
        android.app.AppOpsManager$HistoricalOps r0;
        long $l0, $l1, $l2;

        r0 := @this: android.app.AppOpsManager$HistoricalOps;

        $l1 = r0.<android.app.AppOpsManager$HistoricalOps: long mEndTimeMillis>;

        $l0 = r0.<android.app.AppOpsManager$HistoricalOps: long mBeginTimeMillis>;

        $l2 = $l1 - $l0;

        return $l2;
    }

    public long getEndTimeMillis()
    {
        android.app.AppOpsManager$HistoricalOps r0;
        long $l0;

        r0 := @this: android.app.AppOpsManager$HistoricalOps;

        $l0 = r0.<android.app.AppOpsManager$HistoricalOps: long mEndTimeMillis>;

        return $l0;
    }

    public int getUidCount()
    {
        android.app.AppOpsManager$HistoricalOps r0;
        android.util.SparseArray r1;
        int $i0;

        r0 := @this: android.app.AppOpsManager$HistoricalOps;

        r1 = r0.<android.app.AppOpsManager$HistoricalOps: android.util.SparseArray mHistoricalUidOps>;

        if r1 != null goto label1;

        return 0;

     label1:
        $i0 = virtualinvoke r1.<android.util.SparseArray: int size()>();

        return $i0;
    }

    public android.app.AppOpsManager$HistoricalUidOps getUidOps(int)
    {
        android.app.AppOpsManager$HistoricalOps r0;
        int i0;
        android.util.SparseArray r1;
        java.lang.Object $r2;
        android.app.AppOpsManager$HistoricalUidOps $r3;

        r0 := @this: android.app.AppOpsManager$HistoricalOps;

        i0 := @parameter0: int;

        r1 = r0.<android.app.AppOpsManager$HistoricalOps: android.util.SparseArray mHistoricalUidOps>;

        if r1 != null goto label1;

        return null;

     label1:
        $r2 = virtualinvoke r1.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        $r3 = (android.app.AppOpsManager$HistoricalUidOps) $r2;

        return $r3;
    }

    public android.app.AppOpsManager$HistoricalUidOps getUidOpsAt(int)
    {
        android.app.AppOpsManager$HistoricalOps r0;
        int i0;
        android.util.SparseArray r1;
        java.lang.IndexOutOfBoundsException $r2;
        java.lang.Object $r3;
        android.app.AppOpsManager$HistoricalUidOps $r4;

        r0 := @this: android.app.AppOpsManager$HistoricalOps;

        i0 := @parameter0: int;

        r1 = r0.<android.app.AppOpsManager$HistoricalOps: android.util.SparseArray mHistoricalUidOps>;

        if r1 == null goto label1;

        $r3 = virtualinvoke r1.<android.util.SparseArray: java.lang.Object valueAt(int)>(i0);

        $r4 = (android.app.AppOpsManager$HistoricalUidOps) $r3;

        return $r4;

     label1:
        $r2 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r2;
    }

    public int hashCode()
    {
        android.app.AppOpsManager$HistoricalOps r0;
        long l0, $l1, $l2;
        int $i3, $i4, $i5, $i6;
        android.util.SparseArray $r1;

        r0 := @this: android.app.AppOpsManager$HistoricalOps;

        l0 = r0.<android.app.AppOpsManager$HistoricalOps: long mBeginTimeMillis>;

        $l1 = l0 >>> 32;

        $l2 = l0 ^ $l1;

        $i3 = (int) $l2;

        $i4 = $i3 * 31;

        $r1 = r0.<android.app.AppOpsManager$HistoricalOps: android.util.SparseArray mHistoricalUidOps>;

        $i5 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        $i6 = $i4 + $i5;

        return $i6;
    }

    public void increaseAccessCount(int, int, java.lang.String, java.lang.String, int, int, long)
    {
        android.app.AppOpsManager$HistoricalOps r0;
        int i0, i1, i2, i3;
        java.lang.String r1, r2;
        long l4;
        android.app.AppOpsManager$HistoricalUidOps $r3;

        r0 := @this: android.app.AppOpsManager$HistoricalOps;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        l4 := @parameter6: long;

        $r3 = specialinvoke r0.<android.app.AppOpsManager$HistoricalOps: android.app.AppOpsManager$HistoricalUidOps getOrCreateHistoricalUidOps(int)>(i1);

        staticinvoke <android.app.AppOpsManager$HistoricalUidOps: void access$1500(android.app.AppOpsManager$HistoricalUidOps,int,java.lang.String,java.lang.String,int,int,long)>($r3, i0, r1, r2, i2, i3, l4);

        return;
    }

    public void increaseAccessDuration(int, int, java.lang.String, java.lang.String, int, int, long)
    {
        android.app.AppOpsManager$HistoricalOps r0;
        int i0, i1, i2, i3;
        java.lang.String r1, r2;
        long l4;
        android.app.AppOpsManager$HistoricalUidOps $r3;

        r0 := @this: android.app.AppOpsManager$HistoricalOps;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        l4 := @parameter6: long;

        $r3 = specialinvoke r0.<android.app.AppOpsManager$HistoricalOps: android.app.AppOpsManager$HistoricalUidOps getOrCreateHistoricalUidOps(int)>(i1);

        staticinvoke <android.app.AppOpsManager$HistoricalUidOps: void access$1700(android.app.AppOpsManager$HistoricalUidOps,int,java.lang.String,java.lang.String,int,int,long)>($r3, i0, r1, r2, i2, i3, l4);

        return;
    }

    public void increaseRejectCount(int, int, java.lang.String, java.lang.String, int, int, long)
    {
        android.app.AppOpsManager$HistoricalOps r0;
        int i0, i1, i2, i3;
        java.lang.String r1, r2;
        long l4;
        android.app.AppOpsManager$HistoricalUidOps $r3;

        r0 := @this: android.app.AppOpsManager$HistoricalOps;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        l4 := @parameter6: long;

        $r3 = specialinvoke r0.<android.app.AppOpsManager$HistoricalOps: android.app.AppOpsManager$HistoricalUidOps getOrCreateHistoricalUidOps(int)>(i1);

        staticinvoke <android.app.AppOpsManager$HistoricalUidOps: void access$1600(android.app.AppOpsManager$HistoricalUidOps,int,java.lang.String,java.lang.String,int,int,long)>($r3, i0, r1, r2, i2, i3, l4);

        return;
    }

    public boolean isEmpty()
    {
        android.app.AppOpsManager$HistoricalOps r0;
        long $l0, $l1;
        byte $b2;
        int $i3, i4;
        android.util.SparseArray $r1;
        java.lang.Object $r2;
        android.app.AppOpsManager$HistoricalUidOps $r3;
        boolean $z0;

        r0 := @this: android.app.AppOpsManager$HistoricalOps;

        $l0 = virtualinvoke r0.<android.app.AppOpsManager$HistoricalOps: long getBeginTimeMillis()>();

        $l1 = virtualinvoke r0.<android.app.AppOpsManager$HistoricalOps: long getEndTimeMillis()>();

        $b2 = $l0 cmp $l1;

        if $b2 < 0 goto label1;

        return 1;

     label1:
        $i3 = virtualinvoke r0.<android.app.AppOpsManager$HistoricalOps: int getUidCount()>();

        i4 = $i3 - 1;

     label2:
        if i4 < 0 goto label4;

        $r1 = r0.<android.app.AppOpsManager$HistoricalOps: android.util.SparseArray mHistoricalUidOps>;

        $r2 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object valueAt(int)>(i4);

        $r3 = (android.app.AppOpsManager$HistoricalUidOps) $r2;

        $z0 = staticinvoke <android.app.AppOpsManager$HistoricalUidOps: boolean access$1400(android.app.AppOpsManager$HistoricalUidOps)>($r3);

        if $z0 != 0 goto label3;

        return 0;

     label3:
        i4 = i4 + -1;

        goto label2;

     label4:
        return 1;
    }

    public void merge(android.app.AppOpsManager$HistoricalOps)
    {
        android.app.AppOpsManager$HistoricalOps r0, r1;
        int i0, $i7, $i8, i9;
        android.app.AppOpsManager$HistoricalUidOps r2, r3;
        long $l1, $l2, $l3, $l4, $l5, $l6;
        android.util.SparseArray $r4, $r5, $r6;

        r0 := @this: android.app.AppOpsManager$HistoricalOps;

        r1 := @parameter0: android.app.AppOpsManager$HistoricalOps;

        $l2 = r0.<android.app.AppOpsManager$HistoricalOps: long mBeginTimeMillis>;

        $l1 = r1.<android.app.AppOpsManager$HistoricalOps: long mBeginTimeMillis>;

        $l3 = staticinvoke <java.lang.Math: long min(long,long)>($l2, $l1);

        r0.<android.app.AppOpsManager$HistoricalOps: long mBeginTimeMillis> = $l3;

        $l5 = r0.<android.app.AppOpsManager$HistoricalOps: long mEndTimeMillis>;

        $l4 = r1.<android.app.AppOpsManager$HistoricalOps: long mEndTimeMillis>;

        $l6 = staticinvoke <java.lang.Math: long max(long,long)>($l5, $l4);

        r0.<android.app.AppOpsManager$HistoricalOps: long mEndTimeMillis> = $l6;

        i0 = virtualinvoke r1.<android.app.AppOpsManager$HistoricalOps: int getUidCount()>();

        i9 = 0;

     label1:
        if i9 >= i0 goto label5;

        r2 = virtualinvoke r1.<android.app.AppOpsManager$HistoricalOps: android.app.AppOpsManager$HistoricalUidOps getUidOpsAt(int)>(i9);

        $i7 = virtualinvoke r2.<android.app.AppOpsManager$HistoricalUidOps: int getUid()>();

        r3 = virtualinvoke r0.<android.app.AppOpsManager$HistoricalOps: android.app.AppOpsManager$HistoricalUidOps getUidOps(int)>($i7);

        if r3 == null goto label2;

        staticinvoke <android.app.AppOpsManager$HistoricalUidOps: void access$1200(android.app.AppOpsManager$HistoricalUidOps,android.app.AppOpsManager$HistoricalUidOps)>(r3, r2);

        goto label4;

     label2:
        $r4 = r0.<android.app.AppOpsManager$HistoricalOps: android.util.SparseArray mHistoricalUidOps>;

        if $r4 != null goto label3;

        $r6 = new android.util.SparseArray;

        specialinvoke $r6.<android.util.SparseArray: void <init>()>();

        r0.<android.app.AppOpsManager$HistoricalOps: android.util.SparseArray mHistoricalUidOps> = $r6;

     label3:
        $r5 = r0.<android.app.AppOpsManager$HistoricalOps: android.util.SparseArray mHistoricalUidOps>;

        $i8 = virtualinvoke r2.<android.app.AppOpsManager$HistoricalUidOps: int getUid()>();

        virtualinvoke $r5.<android.util.SparseArray: void put(int,java.lang.Object)>($i8, r2);

     label4:
        i9 = i9 + 1;

        goto label1;

     label5:
        return;
    }

    public void offsetBeginAndEndTime(long)
    {
        android.app.AppOpsManager$HistoricalOps r0;
        long l0, $l1, $l2, $l3, $l4;

        r0 := @this: android.app.AppOpsManager$HistoricalOps;

        l0 := @parameter0: long;

        $l1 = r0.<android.app.AppOpsManager$HistoricalOps: long mBeginTimeMillis>;

        $l2 = $l1 + l0;

        r0.<android.app.AppOpsManager$HistoricalOps: long mBeginTimeMillis> = $l2;

        $l3 = r0.<android.app.AppOpsManager$HistoricalOps: long mEndTimeMillis>;

        $l4 = $l3 + l0;

        r0.<android.app.AppOpsManager$HistoricalOps: long mEndTimeMillis> = $l4;

        return;
    }

    public void setBeginAndEndTime(long, long)
    {
        android.app.AppOpsManager$HistoricalOps r0;
        long l0, l1;

        r0 := @this: android.app.AppOpsManager$HistoricalOps;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        r0.<android.app.AppOpsManager$HistoricalOps: long mBeginTimeMillis> = l0;

        r0.<android.app.AppOpsManager$HistoricalOps: long mEndTimeMillis> = l1;

        return;
    }

    public void setBeginTime(long)
    {
        android.app.AppOpsManager$HistoricalOps r0;
        long l0;

        r0 := @this: android.app.AppOpsManager$HistoricalOps;

        l0 := @parameter0: long;

        r0.<android.app.AppOpsManager$HistoricalOps: long mBeginTimeMillis> = l0;

        return;
    }

    public void setEndTime(long)
    {
        android.app.AppOpsManager$HistoricalOps r0;
        long l0;

        r0 := @this: android.app.AppOpsManager$HistoricalOps;

        l0 := @parameter0: long;

        r0.<android.app.AppOpsManager$HistoricalOps: long mEndTimeMillis> = l0;

        return;
    }

    public android.app.AppOpsManager$HistoricalOps spliceFromBeginning(double)
    {
        android.app.AppOpsManager$HistoricalOps r0, $r1;
        double d0;

        r0 := @this: android.app.AppOpsManager$HistoricalOps;

        d0 := @parameter0: double;

        $r1 = specialinvoke r0.<android.app.AppOpsManager$HistoricalOps: android.app.AppOpsManager$HistoricalOps splice(double,boolean)>(d0, 1);

        return $r1;
    }

    public android.app.AppOpsManager$HistoricalOps spliceFromEnd(double)
    {
        android.app.AppOpsManager$HistoricalOps r0, $r1;
        double d0;

        r0 := @this: android.app.AppOpsManager$HistoricalOps;

        d0 := @parameter0: double;

        $r1 = specialinvoke r0.<android.app.AppOpsManager$HistoricalOps: android.app.AppOpsManager$HistoricalOps splice(double,boolean)>(d0, 0);

        return $r1;
    }

    public java.lang.String toString()
    {
        android.app.AppOpsManager$HistoricalOps r0;
        java.lang.StringBuilder $r2;
        java.lang.Class $r3;
        java.lang.String $r4, $r11;
        long $l0, $l1;

        r0 := @this: android.app.AppOpsManager$HistoricalOps;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getSimpleName()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[from:");

        $l0 = r0.<android.app.AppOpsManager$HistoricalOps: long mBeginTimeMillis>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to:");

        $l1 = r0.<android.app.AppOpsManager$HistoricalOps: long mEndTimeMillis>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r11 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.app.AppOpsManager$HistoricalOps r0;
        android.os.Parcel r1;
        int i0, i1, $i4, i5, i6;
        long $l2, $l3;
        java.util.ArrayList $r2;
        android.content.pm.ParceledListSlice $r3;
        android.util.SparseArray $r4, $r7, r8;
        java.lang.Object $r5;
        android.app.AppOpsManager$HistoricalUidOps $r6;

        r0 := @this: android.app.AppOpsManager$HistoricalOps;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $l2 = r0.<android.app.AppOpsManager$HistoricalOps: long mBeginTimeMillis>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l2);

        $l3 = r0.<android.app.AppOpsManager$HistoricalOps: long mEndTimeMillis>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l3);

        r8 = r0.<android.app.AppOpsManager$HistoricalOps: android.util.SparseArray mHistoricalUidOps>;

        if r8 == null goto label5;

        i1 = virtualinvoke r8.<android.util.SparseArray: int size()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        i5 = 0;

     label1:
        if i5 >= i1 goto label2;

        $r7 = r0.<android.app.AppOpsManager$HistoricalOps: android.util.SparseArray mHistoricalUidOps>;

        $i4 = virtualinvoke $r7.<android.util.SparseArray: int keyAt(int)>(i5);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i4);

        i5 = i5 + 1;

        goto label1;

     label2:
        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>(i1);

        i6 = 0;

     label3:
        if i6 >= i1 goto label4;

        $r4 = r0.<android.app.AppOpsManager$HistoricalOps: android.util.SparseArray mHistoricalUidOps>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object valueAt(int)>(i6);

        $r6 = (android.app.AppOpsManager$HistoricalUidOps) $r5;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r6);

        i6 = i6 + 1;

        goto label3;

     label4:
        $r3 = new android.content.pm.ParceledListSlice;

        specialinvoke $r3.<android.content.pm.ParceledListSlice: void <init>(java.util.List)>($r2);

        virtualinvoke r1.<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>($r3, i0);

        goto label6;

     label5:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(-1);

     label6:
        return;
    }
}
