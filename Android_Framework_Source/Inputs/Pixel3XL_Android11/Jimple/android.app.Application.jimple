public class android.app.Application extends android.content.ContextWrapper implements android.content.ComponentCallbacks2
{
    private static final java.lang.String TAG;
    private java.util.ArrayList mActivityLifecycleCallbacks;
    private java.util.ArrayList mAssistCallbacks;
    private java.util.ArrayList mComponentCallbacks;
    public android.app.LoadedApk mLoadedApk;

    public void <init>()
    {
        android.app.Application r0;
        java.util.ArrayList $r1, $r2;

        r0 := @this: android.app.Application;

        specialinvoke r0.<android.content.ContextWrapper: void <init>(android.content.Context)>(null);

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<android.app.Application: java.util.ArrayList mComponentCallbacks> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<android.app.Application: java.util.ArrayList mActivityLifecycleCallbacks> = $r2;

        r0.<android.app.Application: java.util.ArrayList mAssistCallbacks> = null;

        return;
    }

    private java.lang.Object[] collectActivityLifecycleCallbacks()
    {
        android.app.Application r0;
        java.util.ArrayList r1, $r2, $r3;
        int $i0;
        java.lang.Throwable $r4;
        java.lang.Object[] r5;

        r0 := @this: android.app.Application;

        r5 = null;

        r1 = r0.<android.app.Application: java.util.ArrayList mActivityLifecycleCallbacks>;

        entermonitor r1;

     label1:
        $r2 = r0.<android.app.Application: java.util.ArrayList mActivityLifecycleCallbacks>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if $i0 <= 0 goto label2;

        $r3 = r0.<android.app.Application: java.util.ArrayList mActivityLifecycleCallbacks>;

        r5 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object[] toArray()>();

     label2:
        exitmonitor r1;

     label3:
        return r5;

     label4:
        $r4 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    private java.lang.Object[] collectComponentCallbacks()
    {
        android.app.Application r0;
        java.util.ArrayList r1, $r2, $r3;
        int $i0;
        java.lang.Throwable $r4;
        java.lang.Object[] r5;

        r0 := @this: android.app.Application;

        r5 = null;

        r1 = r0.<android.app.Application: java.util.ArrayList mComponentCallbacks>;

        entermonitor r1;

     label1:
        $r2 = r0.<android.app.Application: java.util.ArrayList mComponentCallbacks>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if $i0 <= 0 goto label2;

        $r3 = r0.<android.app.Application: java.util.ArrayList mComponentCallbacks>;

        r5 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object[] toArray()>();

     label2:
        exitmonitor r1;

     label3:
        return r5;

     label4:
        $r4 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public static java.lang.String getProcessName()
    {
        java.lang.String $r0;

        $r0 = staticinvoke <android.app.ActivityThread: java.lang.String currentProcessName()>();

        return $r0;
    }

    final void attach(android.content.Context)
    {
        android.app.Application r0;
        android.content.Context r1;
        android.app.ContextImpl $r2;
        android.app.LoadedApk $r3;

        r0 := @this: android.app.Application;

        r1 := @parameter0: android.content.Context;

        virtualinvoke r0.<android.app.Application: void attachBaseContext(android.content.Context)>(r1);

        $r2 = staticinvoke <android.app.ContextImpl: android.app.ContextImpl getImpl(android.content.Context)>(r1);

        $r3 = $r2.<android.app.ContextImpl: android.app.LoadedApk mPackageInfo>;

        r0.<android.app.Application: android.app.LoadedApk mLoadedApk> = $r3;

        return;
    }

    void dispatchActivityCreated(android.app.Activity, android.os.Bundle)
    {
        android.app.Application r0;
        android.app.Activity r1;
        android.os.Bundle r2;
        java.lang.Object[] r3;
        int $i0, i1;
        java.lang.Object $r4;
        android.app.Application$ActivityLifecycleCallbacks $r5;

        r0 := @this: android.app.Application;

        r1 := @parameter0: android.app.Activity;

        r2 := @parameter1: android.os.Bundle;

        r3 = specialinvoke r0.<android.app.Application: java.lang.Object[] collectActivityLifecycleCallbacks()>();

        if r3 == null goto label2;

        i1 = 0;

     label1:
        $i0 = lengthof r3;

        if i1 >= $i0 goto label2;

        $r4 = r3[i1];

        $r5 = (android.app.Application$ActivityLifecycleCallbacks) $r4;

        interfaceinvoke $r5.<android.app.Application$ActivityLifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)>(r1, r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    void dispatchActivityDestroyed(android.app.Activity)
    {
        android.app.Application r0;
        android.app.Activity r1;
        java.lang.Object[] r2;
        int $i0, i1;
        java.lang.Object $r3;
        android.app.Application$ActivityLifecycleCallbacks $r4;

        r0 := @this: android.app.Application;

        r1 := @parameter0: android.app.Activity;

        r2 = specialinvoke r0.<android.app.Application: java.lang.Object[] collectActivityLifecycleCallbacks()>();

        if r2 == null goto label2;

        i1 = 0;

     label1:
        $i0 = lengthof r2;

        if i1 >= $i0 goto label2;

        $r3 = r2[i1];

        $r4 = (android.app.Application$ActivityLifecycleCallbacks) $r3;

        interfaceinvoke $r4.<android.app.Application$ActivityLifecycleCallbacks: void onActivityDestroyed(android.app.Activity)>(r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    void dispatchActivityPaused(android.app.Activity)
    {
        android.app.Application r0;
        android.app.Activity r1;
        java.lang.Object[] r2;
        int $i0, i1;
        java.lang.Object $r3;
        android.app.Application$ActivityLifecycleCallbacks $r4;

        r0 := @this: android.app.Application;

        r1 := @parameter0: android.app.Activity;

        r2 = specialinvoke r0.<android.app.Application: java.lang.Object[] collectActivityLifecycleCallbacks()>();

        if r2 == null goto label2;

        i1 = 0;

     label1:
        $i0 = lengthof r2;

        if i1 >= $i0 goto label2;

        $r3 = r2[i1];

        $r4 = (android.app.Application$ActivityLifecycleCallbacks) $r3;

        interfaceinvoke $r4.<android.app.Application$ActivityLifecycleCallbacks: void onActivityPaused(android.app.Activity)>(r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    void dispatchActivityPostCreated(android.app.Activity, android.os.Bundle)
    {
        android.app.Application r0;
        android.app.Activity r1;
        android.os.Bundle r2;
        java.lang.Object[] r3;
        int $i0, i1;
        java.lang.Object $r4;
        android.app.Application$ActivityLifecycleCallbacks $r5;

        r0 := @this: android.app.Application;

        r1 := @parameter0: android.app.Activity;

        r2 := @parameter1: android.os.Bundle;

        r3 = specialinvoke r0.<android.app.Application: java.lang.Object[] collectActivityLifecycleCallbacks()>();

        if r3 == null goto label2;

        i1 = 0;

     label1:
        $i0 = lengthof r3;

        if i1 >= $i0 goto label2;

        $r4 = r3[i1];

        $r5 = (android.app.Application$ActivityLifecycleCallbacks) $r4;

        interfaceinvoke $r5.<android.app.Application$ActivityLifecycleCallbacks: void onActivityPostCreated(android.app.Activity,android.os.Bundle)>(r1, r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    void dispatchActivityPostDestroyed(android.app.Activity)
    {
        android.app.Application r0;
        android.app.Activity r1;
        java.lang.Object[] r2;
        int $i0, i1;
        java.lang.Object $r3;
        android.app.Application$ActivityLifecycleCallbacks $r4;

        r0 := @this: android.app.Application;

        r1 := @parameter0: android.app.Activity;

        r2 = specialinvoke r0.<android.app.Application: java.lang.Object[] collectActivityLifecycleCallbacks()>();

        if r2 == null goto label2;

        i1 = 0;

     label1:
        $i0 = lengthof r2;

        if i1 >= $i0 goto label2;

        $r3 = r2[i1];

        $r4 = (android.app.Application$ActivityLifecycleCallbacks) $r3;

        interfaceinvoke $r4.<android.app.Application$ActivityLifecycleCallbacks: void onActivityPostDestroyed(android.app.Activity)>(r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    void dispatchActivityPostPaused(android.app.Activity)
    {
        android.app.Application r0;
        android.app.Activity r1;
        java.lang.Object[] r2;
        int $i0, i1;
        java.lang.Object $r3;
        android.app.Application$ActivityLifecycleCallbacks $r4;

        r0 := @this: android.app.Application;

        r1 := @parameter0: android.app.Activity;

        r2 = specialinvoke r0.<android.app.Application: java.lang.Object[] collectActivityLifecycleCallbacks()>();

        if r2 == null goto label2;

        i1 = 0;

     label1:
        $i0 = lengthof r2;

        if i1 >= $i0 goto label2;

        $r3 = r2[i1];

        $r4 = (android.app.Application$ActivityLifecycleCallbacks) $r3;

        interfaceinvoke $r4.<android.app.Application$ActivityLifecycleCallbacks: void onActivityPostPaused(android.app.Activity)>(r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    void dispatchActivityPostResumed(android.app.Activity)
    {
        android.app.Application r0;
        android.app.Activity r1;
        java.lang.Object[] r2;
        int $i0, i1;
        java.lang.Object $r3;
        android.app.Application$ActivityLifecycleCallbacks $r4;

        r0 := @this: android.app.Application;

        r1 := @parameter0: android.app.Activity;

        r2 = specialinvoke r0.<android.app.Application: java.lang.Object[] collectActivityLifecycleCallbacks()>();

        if r2 == null goto label2;

        i1 = 0;

     label1:
        $i0 = lengthof r2;

        if i1 >= $i0 goto label2;

        $r3 = r2[i1];

        $r4 = (android.app.Application$ActivityLifecycleCallbacks) $r3;

        interfaceinvoke $r4.<android.app.Application$ActivityLifecycleCallbacks: void onActivityPostResumed(android.app.Activity)>(r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    void dispatchActivityPostSaveInstanceState(android.app.Activity, android.os.Bundle)
    {
        android.app.Application r0;
        android.app.Activity r1;
        android.os.Bundle r2;
        java.lang.Object[] r3;
        int $i0, i1;
        java.lang.Object $r4;
        android.app.Application$ActivityLifecycleCallbacks $r5;

        r0 := @this: android.app.Application;

        r1 := @parameter0: android.app.Activity;

        r2 := @parameter1: android.os.Bundle;

        r3 = specialinvoke r0.<android.app.Application: java.lang.Object[] collectActivityLifecycleCallbacks()>();

        if r3 == null goto label2;

        i1 = 0;

     label1:
        $i0 = lengthof r3;

        if i1 >= $i0 goto label2;

        $r4 = r3[i1];

        $r5 = (android.app.Application$ActivityLifecycleCallbacks) $r4;

        interfaceinvoke $r5.<android.app.Application$ActivityLifecycleCallbacks: void onActivityPostSaveInstanceState(android.app.Activity,android.os.Bundle)>(r1, r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    void dispatchActivityPostStarted(android.app.Activity)
    {
        android.app.Application r0;
        android.app.Activity r1;
        java.lang.Object[] r2;
        int $i0, i1;
        java.lang.Object $r3;
        android.app.Application$ActivityLifecycleCallbacks $r4;

        r0 := @this: android.app.Application;

        r1 := @parameter0: android.app.Activity;

        r2 = specialinvoke r0.<android.app.Application: java.lang.Object[] collectActivityLifecycleCallbacks()>();

        if r2 == null goto label2;

        i1 = 0;

     label1:
        $i0 = lengthof r2;

        if i1 >= $i0 goto label2;

        $r3 = r2[i1];

        $r4 = (android.app.Application$ActivityLifecycleCallbacks) $r3;

        interfaceinvoke $r4.<android.app.Application$ActivityLifecycleCallbacks: void onActivityPostStarted(android.app.Activity)>(r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    void dispatchActivityPostStopped(android.app.Activity)
    {
        android.app.Application r0;
        android.app.Activity r1;
        java.lang.Object[] r2;
        int $i0, i1;
        java.lang.Object $r3;
        android.app.Application$ActivityLifecycleCallbacks $r4;

        r0 := @this: android.app.Application;

        r1 := @parameter0: android.app.Activity;

        r2 = specialinvoke r0.<android.app.Application: java.lang.Object[] collectActivityLifecycleCallbacks()>();

        if r2 == null goto label2;

        i1 = 0;

     label1:
        $i0 = lengthof r2;

        if i1 >= $i0 goto label2;

        $r3 = r2[i1];

        $r4 = (android.app.Application$ActivityLifecycleCallbacks) $r3;

        interfaceinvoke $r4.<android.app.Application$ActivityLifecycleCallbacks: void onActivityPostStopped(android.app.Activity)>(r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    void dispatchActivityPreCreated(android.app.Activity, android.os.Bundle)
    {
        android.app.Application r0;
        android.app.Activity r1;
        android.os.Bundle r2;
        java.lang.Object[] r3;
        int $i0, i1;
        java.lang.Object $r4;
        android.app.Application$ActivityLifecycleCallbacks $r5;

        r0 := @this: android.app.Application;

        r1 := @parameter0: android.app.Activity;

        r2 := @parameter1: android.os.Bundle;

        r3 = specialinvoke r0.<android.app.Application: java.lang.Object[] collectActivityLifecycleCallbacks()>();

        if r3 == null goto label2;

        i1 = 0;

     label1:
        $i0 = lengthof r3;

        if i1 >= $i0 goto label2;

        $r4 = r3[i1];

        $r5 = (android.app.Application$ActivityLifecycleCallbacks) $r4;

        interfaceinvoke $r5.<android.app.Application$ActivityLifecycleCallbacks: void onActivityPreCreated(android.app.Activity,android.os.Bundle)>(r1, r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    void dispatchActivityPreDestroyed(android.app.Activity)
    {
        android.app.Application r0;
        android.app.Activity r1;
        java.lang.Object[] r2;
        int $i0, i1;
        java.lang.Object $r3;
        android.app.Application$ActivityLifecycleCallbacks $r4;

        r0 := @this: android.app.Application;

        r1 := @parameter0: android.app.Activity;

        r2 = specialinvoke r0.<android.app.Application: java.lang.Object[] collectActivityLifecycleCallbacks()>();

        if r2 == null goto label2;

        i1 = 0;

     label1:
        $i0 = lengthof r2;

        if i1 >= $i0 goto label2;

        $r3 = r2[i1];

        $r4 = (android.app.Application$ActivityLifecycleCallbacks) $r3;

        interfaceinvoke $r4.<android.app.Application$ActivityLifecycleCallbacks: void onActivityPreDestroyed(android.app.Activity)>(r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    void dispatchActivityPrePaused(android.app.Activity)
    {
        android.app.Application r0;
        android.app.Activity r1;
        java.lang.Object[] r2;
        int $i0, i1;
        java.lang.Object $r3;
        android.app.Application$ActivityLifecycleCallbacks $r4;

        r0 := @this: android.app.Application;

        r1 := @parameter0: android.app.Activity;

        r2 = specialinvoke r0.<android.app.Application: java.lang.Object[] collectActivityLifecycleCallbacks()>();

        if r2 == null goto label2;

        i1 = 0;

     label1:
        $i0 = lengthof r2;

        if i1 >= $i0 goto label2;

        $r3 = r2[i1];

        $r4 = (android.app.Application$ActivityLifecycleCallbacks) $r3;

        interfaceinvoke $r4.<android.app.Application$ActivityLifecycleCallbacks: void onActivityPrePaused(android.app.Activity)>(r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    void dispatchActivityPreResumed(android.app.Activity)
    {
        android.app.Application r0;
        android.app.Activity r1;
        java.lang.Object[] r2;
        int $i0, i1;
        java.lang.Object $r3;
        android.app.Application$ActivityLifecycleCallbacks $r4;

        r0 := @this: android.app.Application;

        r1 := @parameter0: android.app.Activity;

        r2 = specialinvoke r0.<android.app.Application: java.lang.Object[] collectActivityLifecycleCallbacks()>();

        if r2 == null goto label2;

        i1 = 0;

     label1:
        $i0 = lengthof r2;

        if i1 >= $i0 goto label2;

        $r3 = r2[i1];

        $r4 = (android.app.Application$ActivityLifecycleCallbacks) $r3;

        interfaceinvoke $r4.<android.app.Application$ActivityLifecycleCallbacks: void onActivityPreResumed(android.app.Activity)>(r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    void dispatchActivityPreSaveInstanceState(android.app.Activity, android.os.Bundle)
    {
        android.app.Application r0;
        android.app.Activity r1;
        android.os.Bundle r2;
        java.lang.Object[] r3;
        int $i0, i1;
        java.lang.Object $r4;
        android.app.Application$ActivityLifecycleCallbacks $r5;

        r0 := @this: android.app.Application;

        r1 := @parameter0: android.app.Activity;

        r2 := @parameter1: android.os.Bundle;

        r3 = specialinvoke r0.<android.app.Application: java.lang.Object[] collectActivityLifecycleCallbacks()>();

        if r3 == null goto label2;

        i1 = 0;

     label1:
        $i0 = lengthof r3;

        if i1 >= $i0 goto label2;

        $r4 = r3[i1];

        $r5 = (android.app.Application$ActivityLifecycleCallbacks) $r4;

        interfaceinvoke $r5.<android.app.Application$ActivityLifecycleCallbacks: void onActivityPreSaveInstanceState(android.app.Activity,android.os.Bundle)>(r1, r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    void dispatchActivityPreStarted(android.app.Activity)
    {
        android.app.Application r0;
        android.app.Activity r1;
        java.lang.Object[] r2;
        int $i0, i1;
        java.lang.Object $r3;
        android.app.Application$ActivityLifecycleCallbacks $r4;

        r0 := @this: android.app.Application;

        r1 := @parameter0: android.app.Activity;

        r2 = specialinvoke r0.<android.app.Application: java.lang.Object[] collectActivityLifecycleCallbacks()>();

        if r2 == null goto label2;

        i1 = 0;

     label1:
        $i0 = lengthof r2;

        if i1 >= $i0 goto label2;

        $r3 = r2[i1];

        $r4 = (android.app.Application$ActivityLifecycleCallbacks) $r3;

        interfaceinvoke $r4.<android.app.Application$ActivityLifecycleCallbacks: void onActivityPreStarted(android.app.Activity)>(r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    void dispatchActivityPreStopped(android.app.Activity)
    {
        android.app.Application r0;
        android.app.Activity r1;
        java.lang.Object[] r2;
        int $i0, i1;
        java.lang.Object $r3;
        android.app.Application$ActivityLifecycleCallbacks $r4;

        r0 := @this: android.app.Application;

        r1 := @parameter0: android.app.Activity;

        r2 = specialinvoke r0.<android.app.Application: java.lang.Object[] collectActivityLifecycleCallbacks()>();

        if r2 == null goto label2;

        i1 = 0;

     label1:
        $i0 = lengthof r2;

        if i1 >= $i0 goto label2;

        $r3 = r2[i1];

        $r4 = (android.app.Application$ActivityLifecycleCallbacks) $r3;

        interfaceinvoke $r4.<android.app.Application$ActivityLifecycleCallbacks: void onActivityPreStopped(android.app.Activity)>(r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    void dispatchActivityResumed(android.app.Activity)
    {
        android.app.Application r0;
        android.app.Activity r1;
        java.lang.Object[] r2;
        int $i0, i1;
        java.lang.Object $r3;
        android.app.Application$ActivityLifecycleCallbacks $r4;

        r0 := @this: android.app.Application;

        r1 := @parameter0: android.app.Activity;

        r2 = specialinvoke r0.<android.app.Application: java.lang.Object[] collectActivityLifecycleCallbacks()>();

        if r2 == null goto label2;

        i1 = 0;

     label1:
        $i0 = lengthof r2;

        if i1 >= $i0 goto label2;

        $r3 = r2[i1];

        $r4 = (android.app.Application$ActivityLifecycleCallbacks) $r3;

        interfaceinvoke $r4.<android.app.Application$ActivityLifecycleCallbacks: void onActivityResumed(android.app.Activity)>(r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    void dispatchActivitySaveInstanceState(android.app.Activity, android.os.Bundle)
    {
        android.app.Application r0;
        android.app.Activity r1;
        android.os.Bundle r2;
        java.lang.Object[] r3;
        int $i0, i1;
        java.lang.Object $r4;
        android.app.Application$ActivityLifecycleCallbacks $r5;

        r0 := @this: android.app.Application;

        r1 := @parameter0: android.app.Activity;

        r2 := @parameter1: android.os.Bundle;

        r3 = specialinvoke r0.<android.app.Application: java.lang.Object[] collectActivityLifecycleCallbacks()>();

        if r3 == null goto label2;

        i1 = 0;

     label1:
        $i0 = lengthof r3;

        if i1 >= $i0 goto label2;

        $r4 = r3[i1];

        $r5 = (android.app.Application$ActivityLifecycleCallbacks) $r4;

        interfaceinvoke $r5.<android.app.Application$ActivityLifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)>(r1, r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    void dispatchActivityStarted(android.app.Activity)
    {
        android.app.Application r0;
        android.app.Activity r1;
        java.lang.Object[] r2;
        int $i0, i1;
        java.lang.Object $r3;
        android.app.Application$ActivityLifecycleCallbacks $r4;

        r0 := @this: android.app.Application;

        r1 := @parameter0: android.app.Activity;

        r2 = specialinvoke r0.<android.app.Application: java.lang.Object[] collectActivityLifecycleCallbacks()>();

        if r2 == null goto label2;

        i1 = 0;

     label1:
        $i0 = lengthof r2;

        if i1 >= $i0 goto label2;

        $r3 = r2[i1];

        $r4 = (android.app.Application$ActivityLifecycleCallbacks) $r3;

        interfaceinvoke $r4.<android.app.Application$ActivityLifecycleCallbacks: void onActivityStarted(android.app.Activity)>(r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    void dispatchActivityStopped(android.app.Activity)
    {
        android.app.Application r0;
        android.app.Activity r1;
        java.lang.Object[] r2;
        int $i0, i1;
        java.lang.Object $r3;
        android.app.Application$ActivityLifecycleCallbacks $r4;

        r0 := @this: android.app.Application;

        r1 := @parameter0: android.app.Activity;

        r2 = specialinvoke r0.<android.app.Application: java.lang.Object[] collectActivityLifecycleCallbacks()>();

        if r2 == null goto label2;

        i1 = 0;

     label1:
        $i0 = lengthof r2;

        if i1 >= $i0 goto label2;

        $r3 = r2[i1];

        $r4 = (android.app.Application$ActivityLifecycleCallbacks) $r3;

        interfaceinvoke $r4.<android.app.Application$ActivityLifecycleCallbacks: void onActivityStopped(android.app.Activity)>(r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    void dispatchOnProvideAssistData(android.app.Activity, android.os.Bundle)
    {
        android.app.Application r0;
        android.os.Bundle r1;
        java.lang.Object[] r2;
        java.util.ArrayList $r3, $r4;
        int $i0, i1;
        java.lang.Object $r5;
        android.app.Application$OnProvideAssistDataListener $r6;
        java.lang.Throwable $r7;
        android.app.Activity r8;

        r0 := @this: android.app.Application;

        r8 := @parameter0: android.app.Activity;

        r1 := @parameter1: android.os.Bundle;

        entermonitor r0;

     label1:
        $r3 = r0.<android.app.Application: java.util.ArrayList mAssistCallbacks>;

        if $r3 != null goto label3;

        exitmonitor r0;

     label2:
        return;

     label3:
        $r4 = r0.<android.app.Application: java.util.ArrayList mAssistCallbacks>;

        r2 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object[] toArray()>();

        exitmonitor r0;

     label4:
        if r2 == null goto label6;

        i1 = 0;

     label5:
        $i0 = lengthof r2;

        if i1 >= $i0 goto label6;

        $r5 = r2[i1];

        $r6 = (android.app.Application$OnProvideAssistDataListener) $r5;

        interfaceinvoke $r6.<android.app.Application$OnProvideAssistDataListener: void onProvideAssistData(android.app.Activity,android.os.Bundle)>(r8, r1);

        i1 = i1 + 1;

        goto label5;

     label6:
        return;

     label7:
        $r7 := @caughtexception;

     label8:
        exitmonitor r0;

     label9:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public android.view.autofill.AutofillManager$AutofillClient getAutofillClient()
    {
        android.app.Application r0;
        int i0, i4;
        boolean $z0, $z1, $z2, $z3;
        android.util.ArrayMap $r1, $r9;
        java.lang.StringBuilder $r2, $r13;
        java.lang.String $r8, $r18;
        java.lang.Object $r10;
        android.view.Window $r11;
        android.view.View $r12;
        android.view.autofill.AutofillManager$AutofillClient r19;
        android.app.ActivityThread r20;
        android.app.ActivityThread$ActivityClientRecord r21;
        android.app.Activity r22;

        r0 := @this: android.app.Application;

        r19 = specialinvoke r0.<android.content.ContextWrapper: android.view.autofill.AutofillManager$AutofillClient getAutofillClient()>();

        if r19 == null goto label01;

        return r19;

     label01:
        $z0 = <android.view.autofill.Helper: boolean sVerbose>;

        if $z0 == 0 goto label02;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("Application", "getAutofillClient(): null on super, trying to find activity thread");

     label02:
        r20 = staticinvoke <android.app.ActivityThread: android.app.ActivityThread currentActivityThread()>();

        if r20 != null goto label03;

        return null;

     label03:
        $r1 = r20.<android.app.ActivityThread: android.util.ArrayMap mActivities>;

        i0 = virtualinvoke $r1.<android.util.ArrayMap: int size()>();

        i4 = 0;

     label04:
        if i4 >= i0 goto label09;

        $r9 = r20.<android.app.ActivityThread: android.util.ArrayMap mActivities>;

        $r10 = virtualinvoke $r9.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i4);

        r21 = (android.app.ActivityThread$ActivityClientRecord) $r10;

        if r21 != null goto label05;

        goto label08;

     label05:
        r22 = r21.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        if r22 != null goto label06;

        goto label08;

     label06:
        $r11 = virtualinvoke r22.<android.app.Activity: android.view.Window getWindow()>();

        $r12 = virtualinvoke $r11.<android.view.Window: android.view.View getDecorView()>();

        $z2 = virtualinvoke $r12.<android.view.View: boolean hasFocus()>();

        if $z2 == 0 goto label08;

        $z3 = <android.view.autofill.Helper: boolean sVerbose>;

        if $z3 == 0 goto label07;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getAutofillClient(): found activity for ");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r22);

        $r18 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("Application", $r18);

     label07:
        return r22;

     label08:
        i4 = i4 + 1;

        goto label04;

     label09:
        $z1 = <android.view.autofill.Helper: boolean sVerbose>;

        if $z1 == 0 goto label10;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getAutofillClient(): none of the ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" activities on ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" have focus");

        $r8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("Application", $r8);

     label10:
        return null;
    }

    public void onConfigurationChanged(android.content.res.Configuration)
    {
        android.app.Application r0;
        android.content.res.Configuration r1;
        java.lang.Object[] r2;
        int $i0, i1;
        java.lang.Object $r3;
        android.content.ComponentCallbacks $r4;

        r0 := @this: android.app.Application;

        r1 := @parameter0: android.content.res.Configuration;

        r2 = specialinvoke r0.<android.app.Application: java.lang.Object[] collectComponentCallbacks()>();

        if r2 == null goto label2;

        i1 = 0;

     label1:
        $i0 = lengthof r2;

        if i1 >= $i0 goto label2;

        $r3 = r2[i1];

        $r4 = (android.content.ComponentCallbacks) $r3;

        interfaceinvoke $r4.<android.content.ComponentCallbacks: void onConfigurationChanged(android.content.res.Configuration)>(r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void onCreate()
    {
        android.app.Application r0;

        r0 := @this: android.app.Application;

        return;
    }

    public void onLowMemory()
    {
        android.app.Application r0;
        java.lang.Object[] r1;
        int $i0, i1;
        java.lang.Object $r2;
        android.content.ComponentCallbacks $r3;

        r0 := @this: android.app.Application;

        r1 = specialinvoke r0.<android.app.Application: java.lang.Object[] collectComponentCallbacks()>();

        if r1 == null goto label2;

        i1 = 0;

     label1:
        $i0 = lengthof r1;

        if i1 >= $i0 goto label2;

        $r2 = r1[i1];

        $r3 = (android.content.ComponentCallbacks) $r2;

        interfaceinvoke $r3.<android.content.ComponentCallbacks: void onLowMemory()>();

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void onTerminate()
    {
        android.app.Application r0;

        r0 := @this: android.app.Application;

        return;
    }

    public void onTrimMemory(int)
    {
        android.app.Application r0;
        int i0, $i1, i2;
        java.lang.Object[] r1;
        java.lang.Object r2;
        boolean $z0;
        android.content.ComponentCallbacks2 $r3;

        r0 := @this: android.app.Application;

        i0 := @parameter0: int;

        r1 = specialinvoke r0.<android.app.Application: java.lang.Object[] collectComponentCallbacks()>();

        if r1 == null goto label3;

        i2 = 0;

     label1:
        $i1 = lengthof r1;

        if i2 >= $i1 goto label3;

        r2 = r1[i2];

        $z0 = r2 instanceof android.content.ComponentCallbacks2;

        if $z0 == 0 goto label2;

        $r3 = (android.content.ComponentCallbacks2) r2;

        interfaceinvoke $r3.<android.content.ComponentCallbacks2: void onTrimMemory(int)>(i0);

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return;
    }

    public void registerActivityLifecycleCallbacks(android.app.Application$ActivityLifecycleCallbacks)
    {
        android.app.Application r0;
        java.util.ArrayList r1, $r2;
        java.lang.Throwable $r3;
        android.app.Application$ActivityLifecycleCallbacks r4;

        r0 := @this: android.app.Application;

        r4 := @parameter0: android.app.Application$ActivityLifecycleCallbacks;

        r1 = r0.<android.app.Application: java.util.ArrayList mActivityLifecycleCallbacks>;

        entermonitor r1;

     label1:
        $r2 = r0.<android.app.Application: java.util.ArrayList mActivityLifecycleCallbacks>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r4);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void registerComponentCallbacks(android.content.ComponentCallbacks)
    {
        android.app.Application r0;
        java.util.ArrayList r1, $r2;
        java.lang.Throwable $r3;
        android.content.ComponentCallbacks r4;

        r0 := @this: android.app.Application;

        r4 := @parameter0: android.content.ComponentCallbacks;

        r1 = r0.<android.app.Application: java.util.ArrayList mComponentCallbacks>;

        entermonitor r1;

     label1:
        $r2 = r0.<android.app.Application: java.util.ArrayList mComponentCallbacks>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r4);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void registerOnProvideAssistDataListener(android.app.Application$OnProvideAssistDataListener)
    {
        android.app.Application r0;
        java.util.ArrayList r1, $r2, $r3;
        java.lang.Throwable $r4;
        android.app.Application$OnProvideAssistDataListener r5;

        r0 := @this: android.app.Application;

        r5 := @parameter0: android.app.Application$OnProvideAssistDataListener;

        entermonitor r0;

     label1:
        $r2 = r0.<android.app.Application: java.util.ArrayList mAssistCallbacks>;

        if $r2 != null goto label2;

        r1 = new java.util.ArrayList;

        specialinvoke r1.<java.util.ArrayList: void <init>()>();

        r0.<android.app.Application: java.util.ArrayList mAssistCallbacks> = r1;

     label2:
        $r3 = r0.<android.app.Application: java.util.ArrayList mAssistCallbacks>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);

        exitmonitor r0;

     label3:
        return;

     label4:
        $r4 := @caughtexception;

     label5:
        exitmonitor r0;

     label6:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void unregisterActivityLifecycleCallbacks(android.app.Application$ActivityLifecycleCallbacks)
    {
        android.app.Application r0;
        java.util.ArrayList r1, $r2;
        java.lang.Throwable $r3;
        android.app.Application$ActivityLifecycleCallbacks r4;

        r0 := @this: android.app.Application;

        r4 := @parameter0: android.app.Application$ActivityLifecycleCallbacks;

        r1 = r0.<android.app.Application: java.util.ArrayList mActivityLifecycleCallbacks>;

        entermonitor r1;

     label1:
        $r2 = r0.<android.app.Application: java.util.ArrayList mActivityLifecycleCallbacks>;

        virtualinvoke $r2.<java.util.ArrayList: boolean remove(java.lang.Object)>(r4);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void unregisterComponentCallbacks(android.content.ComponentCallbacks)
    {
        android.app.Application r0;
        java.util.ArrayList r1, $r2;
        java.lang.Throwable $r3;
        android.content.ComponentCallbacks r4;

        r0 := @this: android.app.Application;

        r4 := @parameter0: android.content.ComponentCallbacks;

        r1 = r0.<android.app.Application: java.util.ArrayList mComponentCallbacks>;

        entermonitor r1;

     label1:
        $r2 = r0.<android.app.Application: java.util.ArrayList mComponentCallbacks>;

        virtualinvoke $r2.<java.util.ArrayList: boolean remove(java.lang.Object)>(r4);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void unregisterOnProvideAssistDataListener(android.app.Application$OnProvideAssistDataListener)
    {
        android.app.Application r0;
        java.util.ArrayList $r1, $r2;
        java.lang.Throwable $r3;
        android.app.Application$OnProvideAssistDataListener r4;

        r0 := @this: android.app.Application;

        r4 := @parameter0: android.app.Application$OnProvideAssistDataListener;

        entermonitor r0;

     label1:
        $r1 = r0.<android.app.Application: java.util.ArrayList mAssistCallbacks>;

        if $r1 == null goto label2;

        $r2 = r0.<android.app.Application: java.util.ArrayList mAssistCallbacks>;

        virtualinvoke $r2.<java.util.ArrayList: boolean remove(java.lang.Object)>(r4);

     label2:
        exitmonitor r0;

     label3:
        return;

     label4:
        $r3 := @caughtexception;

     label5:
        exitmonitor r0;

     label6:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public static void <clinit>()
    {
        <android.app.Application: java.lang.String TAG> = "Application";

        return;
    }
}
