public class android.app.ApplicationLoaders extends java.lang.Object
{
    private static final java.lang.String TAG;
    private static final android.app.ApplicationLoaders gApplicationLoaders;
    private final android.util.ArrayMap mLoaders;
    private java.util.Map mSystemLibsCacheMap;

    static void <clinit>()
    {
        android.app.ApplicationLoaders $r0;

        <android.app.ApplicationLoaders: java.lang.String TAG> = "ApplicationLoaders";

        $r0 = new android.app.ApplicationLoaders;

        specialinvoke $r0.<android.app.ApplicationLoaders: void <init>()>();

        <android.app.ApplicationLoaders: android.app.ApplicationLoaders gApplicationLoaders> = $r0;

        return;
    }

    public void <init>()
    {
        android.app.ApplicationLoaders r0;
        android.util.ArrayMap $r1;

        r0 := @this: android.app.ApplicationLoaders;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new android.util.ArrayMap;

        specialinvoke $r1.<android.util.ArrayMap: void <init>()>();

        r0.<android.app.ApplicationLoaders: android.util.ArrayMap mLoaders> = $r1;

        r0.<android.app.ApplicationLoaders: java.util.Map mSystemLibsCacheMap> = null;

        return;
    }

    private void createAndCacheNonBootclasspathSystemClassLoader(android.content.pm.SharedLibraryInfo)
    {
        android.app.ApplicationLoaders r0;
        java.lang.String r1, $r7, $r12, $r26, r31;
        java.util.Iterator r2;
        int $i0, $i2;
        java.lang.StringBuilder $r3, $r9, $r20;
        java.lang.IllegalStateException $r6, $r25;
        android.app.ApplicationLoaders$CachedClassLoader $r8, r32;
        java.util.Map $r13, $r18;
        java.util.ArrayList $r15, r30;
        boolean $z0;
        java.lang.Object $r16, $r19;
        android.content.pm.SharedLibraryInfo $r17, r28;
        java.lang.ClassLoader $r27, r34;
        java.util.List r29;

        r0 := @this: android.app.ApplicationLoaders;

        r28 := @parameter0: android.content.pm.SharedLibraryInfo;

        r1 = virtualinvoke r28.<android.content.pm.SharedLibraryInfo: java.lang.String getPath()>();

        r29 = virtualinvoke r28.<android.content.pm.SharedLibraryInfo: java.util.List getDependencies()>();

        if r29 == null goto label4;

        $r15 = new java.util.ArrayList;

        $i2 = interfaceinvoke r29.<java.util.List: int size()>();

        specialinvoke $r15.<java.util.ArrayList: void <init>(int)>($i2);

        r30 = $r15;

        r2 = interfaceinvoke r29.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r16 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r17 = (android.content.pm.SharedLibraryInfo) $r16;

        r31 = virtualinvoke $r17.<android.content.pm.SharedLibraryInfo: java.lang.String getPath()>();

        $r18 = r0.<android.app.ApplicationLoaders: java.util.Map mSystemLibsCacheMap>;

        $r19 = interfaceinvoke $r18.<java.util.Map: java.lang.Object get(java.lang.Object)>(r31);

        r32 = (android.app.ApplicationLoaders$CachedClassLoader) $r19;

        if r32 == null goto label2;

        $r27 = r32.<android.app.ApplicationLoaders$CachedClassLoader: java.lang.ClassLoader loader>;

        virtualinvoke $r15.<java.util.ArrayList: boolean add(java.lang.Object)>($r27);

        goto label1;

     label2:
        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to find dependency ");

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r31);

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of cachedlibrary ");

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r25 = new java.lang.IllegalStateException;

        $r26 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r25.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r26);

        throw $r25;

     label3:
        goto label5;

     label4:
        r30 = null;

     label5:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        r34 = specialinvoke r0.<android.app.ApplicationLoaders: java.lang.ClassLoader getClassLoader(java.lang.String,int,boolean,java.lang.String,java.lang.String,java.lang.ClassLoader,java.lang.String,java.lang.String,java.util.List)>(r1, $i0, 1, null, null, null, null, null, r30);

        if r34 == null goto label6;

        $r8 = new android.app.ApplicationLoaders$CachedClassLoader;

        specialinvoke $r8.<android.app.ApplicationLoaders$CachedClassLoader: void <init>(android.app.ApplicationLoaders$1)>(null);

        $r8.<android.app.ApplicationLoaders$CachedClassLoader: java.lang.ClassLoader loader> = r34;

        $r8.<android.app.ApplicationLoaders$CachedClassLoader: java.util.List sharedLibraries> = r30;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Created zygote-cached class loader: ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ApplicationLoaders", $r12);

        $r13 = r0.<android.app.ApplicationLoaders: java.util.Map mSystemLibsCacheMap>;

        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r8);

        return;

     label6:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to cache ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = new java.lang.IllegalStateException;

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7);

        throw $r6;
    }

    private java.lang.ClassLoader getClassLoader(java.lang.String, int, boolean, java.lang.String, java.lang.String, java.lang.ClassLoader, java.lang.String, java.lang.String, java.util.List)
    {
        android.app.ApplicationLoaders r0;
        int i0;
        boolean z0;
        java.lang.String r1, r2, r3, r4, r15;
        java.util.List r5;
        android.util.ArrayMap r6, $r8, $r10;
        java.lang.ClassLoader $r7, r16, r17, r18, r19, r22;
        java.lang.Object $r9;
        java.lang.Throwable $r12, $r13, $r14, r21;
        android.os.GraphicsEnvironment r20;

        r0 := @this: android.app.ApplicationLoaders;

        r15 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        r1 := @parameter3: java.lang.String;

        r2 := @parameter4: java.lang.String;

        r16 := @parameter5: java.lang.ClassLoader;

        r3 := @parameter6: java.lang.String;

        r4 := @parameter7: java.lang.String;

        r5 := @parameter8: java.util.List;

        $r7 = staticinvoke <java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>();

        r17 = virtualinvoke $r7.<java.lang.ClassLoader: java.lang.ClassLoader getParent()>();

        r6 = r0.<android.app.ApplicationLoaders: android.util.ArrayMap mLoaders>;

        entermonitor r6;

        if r16 != null goto label01;

        r16 = r17;

        goto label01;

     label01:
        if r16 != r17 goto label13;

     label02:
        $r8 = r0.<android.app.ApplicationLoaders: android.util.ArrayMap mLoaders>;

        $r9 = virtualinvoke $r8.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r3);

        r18 = (java.lang.ClassLoader) $r9;

     label03:
        if r18 == null goto label06;

     label04:
        exitmonitor r6;

     label05:
        return r18;

     label06:
        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(64L, r15);

        r19 = staticinvoke <com.android.internal.os.ClassLoaderFactory: java.lang.ClassLoader createClassLoader(java.lang.String,java.lang.String,java.lang.String,java.lang.ClassLoader,int,boolean,java.lang.String,java.util.List)>(r15, r1, r2, r16, i0, z0, r4, r5);

        staticinvoke <android.os.Trace: void traceEnd(long)>(64L);

        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(64L, "setLayerPaths");

        r20 = staticinvoke <android.os.GraphicsEnvironment: android.os.GraphicsEnvironment getInstance()>();

     label07:
        virtualinvoke r20.<android.os.GraphicsEnvironment: void setLayerPaths(java.lang.ClassLoader,java.lang.String,java.lang.String)>(r19, r1, r2);

        staticinvoke <android.os.Trace: void traceEnd(long)>(64L);

     label08:
        if r3 == null goto label10;

     label09:
        $r10 = r0.<android.app.ApplicationLoaders: android.util.ArrayMap mLoaders>;

        virtualinvoke $r10.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r19);

     label10:
        exitmonitor r6;

     label11:
        return r19;

     label12:
        $r14 := @caughtexception;

        r21 = $r14;

        goto label18;

     label13:
        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(64L, r15);

     label14:
        r22 = staticinvoke <com.android.internal.os.ClassLoaderFactory: java.lang.ClassLoader createClassLoader(java.lang.String,java.lang.String,java.lang.ClassLoader,java.lang.String,java.util.List)>(r15, null, r16, r4, r5);

        staticinvoke <android.os.Trace: void traceEnd(long)>(64L);

        exitmonitor r6;

     label15:
        return r22;

     label16:
        $r13 := @caughtexception;

        r21 = $r13;

        goto label18;

     label17:
        $r12 := @caughtexception;

        r21 = $r12;

     label18:
        exitmonitor r6;

     label19:
        throw r21;

        catch java.lang.Throwable from label02 to label03 with label12;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label07 to label08 with label17;
        catch java.lang.Throwable from label09 to label10 with label17;
        catch java.lang.Throwable from label10 to label11 with label17;
        catch java.lang.Throwable from label13 to label14 with label17;
        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Throwable from label18 to label19 with label16;
    }

    public static android.app.ApplicationLoaders getDefault()
    {
        android.app.ApplicationLoaders $r0;

        $r0 = <android.app.ApplicationLoaders: android.app.ApplicationLoaders gApplicationLoaders>;

        return $r0;
    }

    private static boolean sharedLibrariesEquals(java.util.List, java.util.List)
    {
        java.util.List r0, r1;
        boolean $z0, z1;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.util.List;

        if r0 != null goto label3;

        if r1 != null goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;

     label3:
        $z0 = interfaceinvoke r0.<java.util.List: boolean equals(java.lang.Object)>(r1);

        return $z0;
    }

    void addNative(java.lang.ClassLoader, java.util.Collection)
    {
        android.app.ApplicationLoaders r0;
        java.lang.ClassLoader r1;
        java.util.Collection r2;
        boolean $z0;
        java.lang.IllegalStateException $r3;
        dalvik.system.PathClassLoader $r4;

        r0 := @this: android.app.ApplicationLoaders;

        r1 := @parameter0: java.lang.ClassLoader;

        r2 := @parameter1: java.util.Collection;

        $z0 = r1 instanceof dalvik.system.PathClassLoader;

        if $z0 == 0 goto label1;

        $r4 = (dalvik.system.PathClassLoader) r1;

        virtualinvoke $r4.<dalvik.system.PathClassLoader: void addNativePath(java.util.Collection)>(r2);

        return;

     label1:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("class loader is not a PathClassLoader");

        throw $r3;
    }

    void addPath(java.lang.ClassLoader, java.lang.String)
    {
        android.app.ApplicationLoaders r0;
        java.lang.ClassLoader r1;
        java.lang.String r2;
        boolean $z0;
        java.lang.IllegalStateException $r3;
        dalvik.system.PathClassLoader $r4;

        r0 := @this: android.app.ApplicationLoaders;

        r1 := @parameter0: java.lang.ClassLoader;

        r2 := @parameter1: java.lang.String;

        $z0 = r1 instanceof dalvik.system.PathClassLoader;

        if $z0 == 0 goto label1;

        $r4 = (dalvik.system.PathClassLoader) r1;

        virtualinvoke $r4.<dalvik.system.PathClassLoader: void addDexPath(java.lang.String)>(r2);

        return;

     label1:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("class loader is not a PathClassLoader");

        throw $r3;
    }

    public void createAndCacheNonBootclasspathSystemClassLoaders(android.content.pm.SharedLibraryInfo[])
    {
        android.app.ApplicationLoaders r0;
        android.content.pm.SharedLibraryInfo[] r1;
        int i0, i1;
        java.util.Map $r2;
        java.lang.IllegalStateException $r3;
        java.util.HashMap $r4;
        android.content.pm.SharedLibraryInfo $r5;

        r0 := @this: android.app.ApplicationLoaders;

        r1 := @parameter0: android.content.pm.SharedLibraryInfo[];

        $r2 = r0.<android.app.ApplicationLoaders: java.util.Map mSystemLibsCacheMap>;

        if $r2 != null goto label3;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r0.<android.app.ApplicationLoaders: java.util.Map mSystemLibsCacheMap> = $r4;

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r5 = r1[i1];

        specialinvoke r0.<android.app.ApplicationLoaders: void createAndCacheNonBootclasspathSystemClassLoader(android.content.pm.SharedLibraryInfo)>($r5);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;

     label3:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Already cached.");

        throw $r3;
    }

    public java.lang.ClassLoader createAndCacheWebViewClassLoader(java.lang.String, java.lang.String, java.lang.String)
    {
        android.app.ApplicationLoaders r0;
        java.lang.String r1, r2, r3;
        int $i0;
        java.lang.ClassLoader $r4;

        r0 := @this: android.app.ApplicationLoaders;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        $r4 = specialinvoke r0.<android.app.ApplicationLoaders: java.lang.ClassLoader getClassLoader(java.lang.String,int,boolean,java.lang.String,java.lang.String,java.lang.ClassLoader,java.lang.String,java.lang.String,java.util.List)>(r1, $i0, 0, r2, null, null, r3, null, null);

        return $r4;
    }

    public java.lang.ClassLoader getCachedNonBootclasspathSystemLib(java.lang.String, java.lang.ClassLoader, java.lang.String, java.util.List)
    {
        android.app.ApplicationLoaders r0;
        java.util.List r1, $r4, $r14;
        java.util.Map r2;
        java.lang.Object $r3;
        boolean $z0;
        java.lang.StringBuilder $r5, $r10;
        java.lang.String $r8, $r17, r18, r20;
        java.lang.ClassLoader $r9, r19;
        android.app.ApplicationLoaders$CachedClassLoader r21;

        r0 := @this: android.app.ApplicationLoaders;

        r18 := @parameter0: java.lang.String;

        r19 := @parameter1: java.lang.ClassLoader;

        r20 := @parameter2: java.lang.String;

        r1 := @parameter3: java.util.List;

        r2 = r0.<android.app.ApplicationLoaders: java.util.Map mSystemLibsCacheMap>;

        if r2 != null goto label1;

        return null;

     label1:
        if r19 != null goto label5;

        if r20 == null goto label2;

        goto label5;

     label2:
        $r3 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r18);

        r21 = (android.app.ApplicationLoaders$CachedClassLoader) $r3;

        if r21 != null goto label3;

        return null;

     label3:
        $r4 = r21.<android.app.ApplicationLoaders$CachedClassLoader: java.util.List sharedLibraries>;

        $z0 = staticinvoke <android.app.ApplicationLoaders: boolean sharedLibrariesEquals(java.util.List,java.util.List)>(r1, $r4);

        if $z0 != 0 goto label4;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected environment for cached library: (");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("|");

        $r14 = r21.<android.app.ApplicationLoaders$CachedClassLoader: java.util.List sharedLibraries>;

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r17 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ApplicationLoaders", $r17);

        return null;

     label4:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Returning zygote-cached class loader: ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ApplicationLoaders", $r8);

        $r9 = r21.<android.app.ApplicationLoaders$CachedClassLoader: java.lang.ClassLoader loader>;

        return $r9;

     label5:
        return null;
    }

    java.lang.ClassLoader getClassLoader(java.lang.String, int, boolean, java.lang.String, java.lang.String, java.lang.ClassLoader, java.lang.String)
    {
        android.app.ApplicationLoaders r0;
        java.lang.String r1, r2, r3, r5;
        int i0;
        boolean z0;
        java.lang.ClassLoader r4, $r6;

        r0 := @this: android.app.ApplicationLoaders;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: java.lang.String;

        r4 := @parameter5: java.lang.ClassLoader;

        r5 := @parameter6: java.lang.String;

        $r6 = virtualinvoke r0.<android.app.ApplicationLoaders: java.lang.ClassLoader getClassLoaderWithSharedLibraries(java.lang.String,int,boolean,java.lang.String,java.lang.String,java.lang.ClassLoader,java.lang.String,java.util.List)>(r1, i0, z0, r2, r3, r4, r5, null);

        return $r6;
    }

    java.lang.ClassLoader getClassLoaderWithSharedLibraries(java.lang.String, int, boolean, java.lang.String, java.lang.String, java.lang.ClassLoader, java.lang.String, java.util.List)
    {
        android.app.ApplicationLoaders r0;
        java.lang.String r1, r2, r3, r5;
        int i0;
        boolean z0;
        java.lang.ClassLoader r4, $r7;
        java.util.List r6;

        r0 := @this: android.app.ApplicationLoaders;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: java.lang.String;

        r4 := @parameter5: java.lang.ClassLoader;

        r5 := @parameter6: java.lang.String;

        r6 := @parameter7: java.util.List;

        $r7 = specialinvoke r0.<android.app.ApplicationLoaders: java.lang.ClassLoader getClassLoader(java.lang.String,int,boolean,java.lang.String,java.lang.String,java.lang.ClassLoader,java.lang.String,java.lang.String,java.util.List)>(r1, i0, z0, r2, r3, r4, r1, r5, r6);

        return $r7;
    }

    java.lang.ClassLoader getSharedLibraryClassLoaderWithSharedLibraries(java.lang.String, int, boolean, java.lang.String, java.lang.String, java.lang.ClassLoader, java.lang.String, java.util.List)
    {
        android.app.ApplicationLoaders r0;
        java.lang.String r1, r2, r3, r5;
        int i0;
        boolean z0;
        java.lang.ClassLoader r4, r7, $r8;
        java.util.List r6;

        r0 := @this: android.app.ApplicationLoaders;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: java.lang.String;

        r4 := @parameter5: java.lang.ClassLoader;

        r5 := @parameter6: java.lang.String;

        r6 := @parameter7: java.util.List;

        r7 = virtualinvoke r0.<android.app.ApplicationLoaders: java.lang.ClassLoader getCachedNonBootclasspathSystemLib(java.lang.String,java.lang.ClassLoader,java.lang.String,java.util.List)>(r1, r4, r5, r6);

        if r7 == null goto label1;

        return r7;

     label1:
        $r8 = virtualinvoke r0.<android.app.ApplicationLoaders: java.lang.ClassLoader getClassLoaderWithSharedLibraries(java.lang.String,int,boolean,java.lang.String,java.lang.String,java.lang.ClassLoader,java.lang.String,java.util.List)>(r1, i0, z0, r2, r3, r4, r5, r6);

        return $r8;
    }
}
