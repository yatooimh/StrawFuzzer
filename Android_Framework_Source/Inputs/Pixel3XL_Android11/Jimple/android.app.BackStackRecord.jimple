final class android.app.BackStackRecord extends android.app.FragmentTransaction implements android.app.FragmentManager$BackStackEntry, android.app.FragmentManagerImpl$OpGenerator
{
    static final int OP_ADD;
    static final int OP_ATTACH;
    static final int OP_DETACH;
    static final int OP_HIDE;
    static final int OP_NULL;
    static final int OP_REMOVE;
    static final int OP_REPLACE;
    static final int OP_SET_PRIMARY_NAV;
    static final int OP_SHOW;
    static final int OP_UNSET_PRIMARY_NAV;
    static final java.lang.String TAG;
    boolean mAddToBackStack;
    boolean mAllowAddToBackStack;
    int mBreadCrumbShortTitleRes;
    java.lang.CharSequence mBreadCrumbShortTitleText;
    int mBreadCrumbTitleRes;
    java.lang.CharSequence mBreadCrumbTitleText;
    java.util.ArrayList mCommitRunnables;
    boolean mCommitted;
    int mEnterAnim;
    int mExitAnim;
    int mIndex;
    final android.app.FragmentManagerImpl mManager;
    java.lang.String mName;
    java.util.ArrayList mOps;
    int mPopEnterAnim;
    int mPopExitAnim;
    boolean mReorderingAllowed;
    java.util.ArrayList mSharedElementSourceNames;
    java.util.ArrayList mSharedElementTargetNames;
    int mTransition;
    int mTransitionStyle;

    public void <init>(android.app.FragmentManagerImpl)
    {
        android.app.BackStackRecord r0;
        android.app.FragmentManagerImpl r1;
        java.util.ArrayList $r2;
        int $i0;
        boolean z0;

        r0 := @this: android.app.BackStackRecord;

        r1 := @parameter0: android.app.FragmentManagerImpl;

        specialinvoke r0.<android.app.FragmentTransaction: void <init>()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<android.app.BackStackRecord: java.util.ArrayList mOps> = $r2;

        z0 = 1;

        r0.<android.app.BackStackRecord: boolean mAllowAddToBackStack> = 1;

        r0.<android.app.BackStackRecord: int mIndex> = -1;

        r0.<android.app.BackStackRecord: android.app.FragmentManagerImpl mManager> = r1;

        $i0 = virtualinvoke r1.<android.app.FragmentManagerImpl: int getTargetSdk()>();

        if $i0 <= 25 goto label1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        r0.<android.app.BackStackRecord: boolean mReorderingAllowed> = z0;

        return;
    }

    private void doAddOp(int, android.app.Fragment, java.lang.String, int)
    {
        android.app.BackStackRecord r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6;
        android.app.FragmentManagerImpl $r1, $r43;
        android.app.BackStackRecord$Op $r2;
        java.lang.StringBuilder $r3, $r11, $r22, $r38;
        java.lang.IllegalArgumentException $r9;
        java.lang.String $r10, $r19, $r20, $r21, $r26, $r31, r36, $r40, $r42;
        java.lang.IllegalStateException $r18, $r30, $r41;
        boolean $z0, $z1, $z2, $z3, $z4;
        android.app.Fragment r35;
        java.lang.Class r37;

        r0 := @this: android.app.BackStackRecord;

        i0 := @parameter0: int;

        r35 := @parameter1: android.app.Fragment;

        r36 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

        $r1 = r0.<android.app.BackStackRecord: android.app.FragmentManagerImpl mManager>;

        $i3 = virtualinvoke $r1.<android.app.FragmentManagerImpl: int getTargetSdk()>();

        if $i3 <= 25 goto label2;

        r37 = virtualinvoke r35.<java.lang.Object: java.lang.Class getClass()>();

        i2 = virtualinvoke r37.<java.lang.Class: int getModifiers()>();

        $z1 = virtualinvoke r37.<java.lang.Class: boolean isAnonymousClass()>();

        if $z1 != 0 goto label1;

        $z2 = staticinvoke <java.lang.reflect.Modifier: boolean isPublic(int)>(i2);

        if $z2 == 0 goto label1;

        $z3 = virtualinvoke r37.<java.lang.Class: boolean isMemberClass()>();

        if $z3 == 0 goto label2;

        $z4 = staticinvoke <java.lang.reflect.Modifier: boolean isStatic(int)>(i2);

        if $z4 == 0 goto label1;

        goto label2;

     label1:
        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fragment ");

        $r40 = virtualinvoke r37.<java.lang.Class: java.lang.String getCanonicalName()>();

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" must be a public static class to be  properly recreated from instance state.");

        $r41 = new java.lang.IllegalStateException;

        $r42 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r41.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r42);

        throw $r41;

     label2:
        $r43 = r0.<android.app.BackStackRecord: android.app.FragmentManagerImpl mManager>;

        r35.<android.app.Fragment: android.app.FragmentManagerImpl mFragmentManager> = $r43;

        if r36 == null goto label5;

        $r20 = r35.<android.app.Fragment: java.lang.String mTag>;

        if $r20 == null goto label4;

        $r21 = r35.<android.app.Fragment: java.lang.String mTag>;

        $z0 = virtualinvoke r36.<java.lang.String: boolean equals(java.lang.Object)>($r21);

        if $z0 == 0 goto label3;

        goto label4;

     label3:
        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t change tag of fragment ");

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r35);

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": was ");

        $r26 = r35.<android.app.Fragment: java.lang.String mTag>;

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" now ");

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r36);

        $r30 = new java.lang.IllegalStateException;

        $r31 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r30.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r31);

        throw $r30;

     label4:
        r35.<android.app.Fragment: java.lang.String mTag> = r36;

     label5:
        if i0 == 0 goto label9;

        if i0 == -1 goto label8;

        $i4 = r35.<android.app.Fragment: int mFragmentId>;

        if $i4 == 0 goto label7;

        $i5 = r35.<android.app.Fragment: int mFragmentId>;

        if $i5 != i0 goto label6;

        goto label7;

     label6:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t change container ID of fragment ");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r35);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": was ");

        $i6 = r35.<android.app.Fragment: int mFragmentId>;

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" now ");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r18 = new java.lang.IllegalStateException;

        $r19 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r19);

        throw $r18;

     label7:
        r35.<android.app.Fragment: int mFragmentId> = i0;

        r35.<android.app.Fragment: int mContainerId> = i0;

        goto label9;

     label8:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t add fragment ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r35);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with tag ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r36);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to container view with no id");

        $r9 = new java.lang.IllegalArgumentException;

        $r10 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r9;

     label9:
        $r2 = new android.app.BackStackRecord$Op;

        specialinvoke $r2.<android.app.BackStackRecord$Op: void <init>(int,android.app.Fragment)>(i1, r35);

        virtualinvoke r0.<android.app.BackStackRecord: void addOp(android.app.BackStackRecord$Op)>($r2);

        return;
    }

    private static boolean isFragmentPostponed(android.app.BackStackRecord$Op)
    {
        boolean $z0, $z1, $z2, $z3, z4;
        android.view.View $r0;
        android.app.BackStackRecord$Op r1;
        android.app.Fragment r2;

        r1 := @parameter0: android.app.BackStackRecord$Op;

        r2 = r1.<android.app.BackStackRecord$Op: android.app.Fragment fragment>;

        if r2 == null goto label1;

        $z0 = r2.<android.app.Fragment: boolean mAdded>;

        if $z0 == 0 goto label1;

        $r0 = r2.<android.app.Fragment: android.view.View mView>;

        if $r0 == null goto label1;

        $z1 = r2.<android.app.Fragment: boolean mDetached>;

        if $z1 != 0 goto label1;

        $z2 = r2.<android.app.Fragment: boolean mHidden>;

        if $z2 != 0 goto label1;

        $z3 = virtualinvoke r2.<android.app.Fragment: boolean isPostponed()>();

        if $z3 == 0 goto label1;

        z4 = 1;

        goto label2;

     label1:
        z4 = 0;

     label2:
        return z4;
    }

    public android.app.FragmentTransaction add(int, android.app.Fragment)
    {
        android.app.BackStackRecord r0;
        int i0;
        android.app.Fragment r1;

        r0 := @this: android.app.BackStackRecord;

        i0 := @parameter0: int;

        r1 := @parameter1: android.app.Fragment;

        specialinvoke r0.<android.app.BackStackRecord: void doAddOp(int,android.app.Fragment,java.lang.String,int)>(i0, r1, null, 1);

        return r0;
    }

    public android.app.FragmentTransaction add(int, android.app.Fragment, java.lang.String)
    {
        android.app.BackStackRecord r0;
        int i0;
        android.app.Fragment r1;
        java.lang.String r2;

        r0 := @this: android.app.BackStackRecord;

        i0 := @parameter0: int;

        r1 := @parameter1: android.app.Fragment;

        r2 := @parameter2: java.lang.String;

        specialinvoke r0.<android.app.BackStackRecord: void doAddOp(int,android.app.Fragment,java.lang.String,int)>(i0, r1, r2, 1);

        return r0;
    }

    public android.app.FragmentTransaction add(android.app.Fragment, java.lang.String)
    {
        android.app.BackStackRecord r0;
        android.app.Fragment r1;
        java.lang.String r2;

        r0 := @this: android.app.BackStackRecord;

        r1 := @parameter0: android.app.Fragment;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<android.app.BackStackRecord: void doAddOp(int,android.app.Fragment,java.lang.String,int)>(0, r1, r2, 1);

        return r0;
    }

    void addOp(android.app.BackStackRecord$Op)
    {
        android.app.BackStackRecord r0;
        android.app.BackStackRecord$Op r1;
        java.util.ArrayList $r2;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.app.BackStackRecord;

        r1 := @parameter0: android.app.BackStackRecord$Op;

        $r2 = r0.<android.app.BackStackRecord: java.util.ArrayList mOps>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        $i0 = r0.<android.app.BackStackRecord: int mEnterAnim>;

        r1.<android.app.BackStackRecord$Op: int enterAnim> = $i0;

        $i1 = r0.<android.app.BackStackRecord: int mExitAnim>;

        r1.<android.app.BackStackRecord$Op: int exitAnim> = $i1;

        $i2 = r0.<android.app.BackStackRecord: int mPopEnterAnim>;

        r1.<android.app.BackStackRecord$Op: int popEnterAnim> = $i2;

        $i3 = r0.<android.app.BackStackRecord: int mPopExitAnim>;

        r1.<android.app.BackStackRecord$Op: int popExitAnim> = $i3;

        return;
    }

    public android.app.FragmentTransaction addSharedElement(android.view.View, java.lang.String)
    {
        android.app.BackStackRecord r0;
        java.lang.IllegalArgumentException $r1, $r8, $r15;
        java.util.ArrayList $r2, $r3, $r10, $r17, $r18, $r19, $r20;
        boolean $z0, $z1;
        java.lang.StringBuilder $r4, $r11;
        java.lang.String $r9, $r16, r22, r23;
        android.view.View r21;

        r0 := @this: android.app.BackStackRecord;

        r21 := @parameter0: android.view.View;

        r22 := @parameter1: java.lang.String;

        r23 = virtualinvoke r21.<android.view.View: java.lang.String getTransitionName()>();

        if r23 == null goto label5;

        $r2 = r0.<android.app.BackStackRecord: java.util.ArrayList mSharedElementSourceNames>;

        if $r2 != null goto label1;

        $r19 = new java.util.ArrayList;

        specialinvoke $r19.<java.util.ArrayList: void <init>()>();

        r0.<android.app.BackStackRecord: java.util.ArrayList mSharedElementSourceNames> = $r19;

        $r20 = new java.util.ArrayList;

        specialinvoke $r20.<java.util.ArrayList: void <init>()>();

        r0.<android.app.BackStackRecord: java.util.ArrayList mSharedElementTargetNames> = $r20;

        goto label2;

     label1:
        $r3 = r0.<android.app.BackStackRecord: java.util.ArrayList mSharedElementTargetNames>;

        $z0 = virtualinvoke $r3.<java.util.ArrayList: boolean contains(java.lang.Object)>(r22);

        if $z0 != 0 goto label4;

        $r10 = r0.<android.app.BackStackRecord: java.util.ArrayList mSharedElementSourceNames>;

        $z1 = virtualinvoke $r10.<java.util.ArrayList: boolean contains(java.lang.Object)>(r23);

        if $z1 != 0 goto label3;

     label2:
        $r17 = r0.<android.app.BackStackRecord: java.util.ArrayList mSharedElementSourceNames>;

        virtualinvoke $r17.<java.util.ArrayList: boolean add(java.lang.Object)>(r23);

        $r18 = r0.<android.app.BackStackRecord: java.util.ArrayList mSharedElementTargetNames>;

        virtualinvoke $r18.<java.util.ArrayList: boolean add(java.lang.Object)>(r22);

        return r0;

     label3:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("A shared element with the source name \'");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r23);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has already been added to the transaction.");

        $r15 = new java.lang.IllegalArgumentException;

        $r16 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r16);

        throw $r15;

     label4:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("A shared element with the target name \'");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r22);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' has already been added to the transaction.");

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r8;

     label5:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unique transitionNames are required for all sharedElements");

        throw $r1;
    }

    public android.app.FragmentTransaction addToBackStack(java.lang.String)
    {
        android.app.BackStackRecord r0;
        java.lang.String r1;
        boolean $z0;
        java.lang.IllegalStateException $r2;

        r0 := @this: android.app.BackStackRecord;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<android.app.BackStackRecord: boolean mAllowAddToBackStack>;

        if $z0 == 0 goto label1;

        r0.<android.app.BackStackRecord: boolean mAddToBackStack> = 1;

        r0.<android.app.BackStackRecord: java.lang.String mName> = r1;

        return r0;

     label1:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This FragmentTransaction is not allowed to be added to the back stack.");

        throw $r2;
    }

    public android.app.FragmentTransaction attach(android.app.Fragment)
    {
        android.app.BackStackRecord r0;
        android.app.Fragment r1;
        android.app.BackStackRecord$Op $r2;

        r0 := @this: android.app.BackStackRecord;

        r1 := @parameter0: android.app.Fragment;

        $r2 = new android.app.BackStackRecord$Op;

        specialinvoke $r2.<android.app.BackStackRecord$Op: void <init>(int,android.app.Fragment)>(7, r1);

        virtualinvoke r0.<android.app.BackStackRecord: void addOp(android.app.BackStackRecord$Op)>($r2);

        return r0;
    }

    void bumpBackStackNesting(int)
    {
        android.app.BackStackRecord r0;
        int i0, i1, $i2, $i3, $i4, i7;
        boolean $z0, $z1, $z2;
        java.util.ArrayList $r1, $r2;
        java.lang.Object $r3;
        android.app.Fragment $r4, $r7, $r10, r21;
        java.lang.StringBuilder $r5, $r13;
        java.lang.String $r12, $r18;
        android.app.BackStackRecord$Op r20;

        r0 := @this: android.app.BackStackRecord;

        i0 := @parameter0: int;

        $z0 = r0.<android.app.BackStackRecord: boolean mAddToBackStack>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $z1 = <android.app.FragmentManagerImpl: boolean DEBUG>;

        if $z1 == 0 goto label2;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bump nesting in ");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" by ");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r18 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r18);

     label2:
        $r1 = r0.<android.app.BackStackRecord: java.util.ArrayList mOps>;

        i1 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        i7 = 0;

     label3:
        if i7 >= i1 goto label5;

        $r2 = r0.<android.app.BackStackRecord: java.util.ArrayList mOps>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i7);

        r20 = (android.app.BackStackRecord$Op) $r3;

        $r4 = r20.<android.app.BackStackRecord$Op: android.app.Fragment fragment>;

        if $r4 == null goto label4;

        r21 = r20.<android.app.BackStackRecord$Op: android.app.Fragment fragment>;

        $i2 = r21.<android.app.Fragment: int mBackStackNesting>;

        $i3 = $i2 + i0;

        r21.<android.app.Fragment: int mBackStackNesting> = $i3;

        $z2 = <android.app.FragmentManagerImpl: boolean DEBUG>;

        if $z2 == 0 goto label4;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bump nesting of ");

        $r7 = r20.<android.app.BackStackRecord$Op: android.app.Fragment fragment>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r10 = r20.<android.app.BackStackRecord$Op: android.app.Fragment fragment>;

        $i4 = $r10.<android.app.Fragment: int mBackStackNesting>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r12 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r12);

     label4:
        i7 = i7 + 1;

        goto label3;

     label5:
        return;
    }

    public int commit()
    {
        android.app.BackStackRecord r0;
        int $i0;

        r0 := @this: android.app.BackStackRecord;

        $i0 = virtualinvoke r0.<android.app.BackStackRecord: int commitInternal(boolean)>(0);

        return $i0;
    }

    public int commitAllowingStateLoss()
    {
        android.app.BackStackRecord r0;
        int $i0;

        r0 := @this: android.app.BackStackRecord;

        $i0 = virtualinvoke r0.<android.app.BackStackRecord: int commitInternal(boolean)>(1);

        return $i0;
    }

    int commitInternal(boolean)
    {
        android.app.BackStackRecord r0;
        boolean z0, $z1, $z2, $z3;
        java.lang.IllegalStateException $r1;
        android.app.FragmentManagerImpl $r2, $r3;
        int $i0, $i1;
        java.lang.StringBuilder $r4;
        java.lang.String $r7;
        com.android.internal.util.FastPrintWriter $r8;
        android.util.LogWriter $r9;

        r0 := @this: android.app.BackStackRecord;

        z0 := @parameter0: boolean;

        $z1 = r0.<android.app.BackStackRecord: boolean mCommitted>;

        if $z1 != 0 goto label4;

        $z2 = <android.app.FragmentManagerImpl: boolean DEBUG>;

        if $z2 == 0 goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Commit: ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r7);

        $r8 = new com.android.internal.util.FastPrintWriter;

        $r9 = new android.util.LogWriter;

        specialinvoke $r9.<android.util.LogWriter: void <init>(int,java.lang.String)>(2, "FragmentManager");

        specialinvoke $r8.<com.android.internal.util.FastPrintWriter: void <init>(java.io.Writer,boolean,int)>($r9, 0, 1024);

        virtualinvoke r0.<android.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>("  ", null, $r8, null);

        virtualinvoke $r8.<java.io.PrintWriter: void flush()>();

     label1:
        r0.<android.app.BackStackRecord: boolean mCommitted> = 1;

        $z3 = r0.<android.app.BackStackRecord: boolean mAddToBackStack>;

        if $z3 == 0 goto label2;

        $r3 = r0.<android.app.BackStackRecord: android.app.FragmentManagerImpl mManager>;

        $i1 = virtualinvoke $r3.<android.app.FragmentManagerImpl: int allocBackStackIndex(android.app.BackStackRecord)>(r0);

        r0.<android.app.BackStackRecord: int mIndex> = $i1;

        goto label3;

     label2:
        r0.<android.app.BackStackRecord: int mIndex> = -1;

     label3:
        $r2 = r0.<android.app.BackStackRecord: android.app.FragmentManagerImpl mManager>;

        virtualinvoke $r2.<android.app.FragmentManagerImpl: void enqueueAction(android.app.FragmentManagerImpl$OpGenerator,boolean)>(r0, z0);

        $i0 = r0.<android.app.BackStackRecord: int mIndex>;

        return $i0;

     label4:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("commit already called");

        throw $r1;
    }

    public void commitNow()
    {
        android.app.BackStackRecord r0;
        android.app.FragmentManagerImpl $r2;

        r0 := @this: android.app.BackStackRecord;

        virtualinvoke r0.<android.app.BackStackRecord: android.app.FragmentTransaction disallowAddToBackStack()>();

        $r2 = r0.<android.app.BackStackRecord: android.app.FragmentManagerImpl mManager>;

        virtualinvoke $r2.<android.app.FragmentManagerImpl: void execSingleAction(android.app.FragmentManagerImpl$OpGenerator,boolean)>(r0, 0);

        return;
    }

    public void commitNowAllowingStateLoss()
    {
        android.app.BackStackRecord r0;
        android.app.FragmentManagerImpl $r2;

        r0 := @this: android.app.BackStackRecord;

        virtualinvoke r0.<android.app.BackStackRecord: android.app.FragmentTransaction disallowAddToBackStack()>();

        $r2 = r0.<android.app.BackStackRecord: android.app.FragmentManagerImpl mManager>;

        virtualinvoke $r2.<android.app.FragmentManagerImpl: void execSingleAction(android.app.FragmentManagerImpl$OpGenerator,boolean)>(r0, 1);

        return;
    }

    public android.app.FragmentTransaction detach(android.app.Fragment)
    {
        android.app.BackStackRecord r0;
        android.app.Fragment r1;
        android.app.BackStackRecord$Op $r2;

        r0 := @this: android.app.BackStackRecord;

        r1 := @parameter0: android.app.Fragment;

        $r2 = new android.app.BackStackRecord$Op;

        specialinvoke $r2.<android.app.BackStackRecord$Op: void <init>(int,android.app.Fragment)>(6, r1);

        virtualinvoke r0.<android.app.BackStackRecord: void addOp(android.app.BackStackRecord$Op)>($r2);

        return r0;
    }

    public android.app.FragmentTransaction disallowAddToBackStack()
    {
        android.app.BackStackRecord r0;
        boolean $z0;
        java.lang.IllegalStateException $r1;

        r0 := @this: android.app.BackStackRecord;

        $z0 = r0.<android.app.BackStackRecord: boolean mAddToBackStack>;

        if $z0 != 0 goto label1;

        r0.<android.app.BackStackRecord: boolean mAllowAddToBackStack> = 0;

        return r0;

     label1:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This transaction is already being added to the back stack");

        throw $r1;
    }

    public void dump(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        android.app.BackStackRecord r0;
        java.lang.String r1;
        java.io.FileDescriptor r2;
        java.io.PrintWriter r3;
        java.lang.String[] r4;

        r0 := @this: android.app.BackStackRecord;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.io.FileDescriptor;

        r3 := @parameter2: java.io.PrintWriter;

        r4 := @parameter3: java.lang.String[];

        virtualinvoke r0.<android.app.BackStackRecord: void dump(java.lang.String,java.io.PrintWriter,boolean)>(r1, r3, 1);

        return;
    }

    void dump(java.lang.String, java.io.PrintWriter, boolean)
    {
        android.app.BackStackRecord r0;
        java.lang.String r1, r3, $r11, $r12, $r13, $r14, $r18, $r19, $r20, $r21, $r22, $r23, $r25, $r29, $r30, r34;
        java.io.PrintWriter r2;
        boolean z0, $z1, $z2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, i26, $i27;
        android.app.BackStackRecord$Op r4;
        java.lang.StringBuilder $r5, $r15;
        java.util.ArrayList $r8, $r9, $r31;
        java.lang.Object $r10;
        java.lang.CharSequence $r24, $r26, $r27, $r28;
        android.app.Fragment $r35;

        r0 := @this: android.app.BackStackRecord;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.io.PrintWriter;

        z0 := @parameter2: boolean;

        if z0 == 0 goto label09;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("mName=");

        $r18 = r0.<android.app.BackStackRecord: java.lang.String mName>;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r18);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" mIndex=");

        $i10 = r0.<android.app.BackStackRecord: int mIndex>;

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>($i10);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" mCommitted=");

        $z1 = r0.<android.app.BackStackRecord: boolean mCommitted>;

        virtualinvoke r2.<java.io.PrintWriter: void println(boolean)>($z1);

        $i11 = r0.<android.app.BackStackRecord: int mTransition>;

        if $i11 == 0 goto label01;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("mTransition=#");

        $i21 = r0.<android.app.BackStackRecord: int mTransition>;

        $r29 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i21);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r29);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" mTransitionStyle=#");

        $i22 = r0.<android.app.BackStackRecord: int mTransitionStyle>;

        $r30 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i22);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r30);

     label01:
        $i12 = r0.<android.app.BackStackRecord: int mEnterAnim>;

        if $i12 != 0 goto label02;

        $i20 = r0.<android.app.BackStackRecord: int mExitAnim>;

        if $i20 == 0 goto label03;

     label02:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("mEnterAnim=#");

        $i13 = r0.<android.app.BackStackRecord: int mEnterAnim>;

        $r19 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i13);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r19);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" mExitAnim=#");

        $i14 = r0.<android.app.BackStackRecord: int mExitAnim>;

        $r20 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i14);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r20);

     label03:
        $i23 = r0.<android.app.BackStackRecord: int mPopEnterAnim>;

        if $i23 != 0 goto label04;

        $i19 = r0.<android.app.BackStackRecord: int mPopExitAnim>;

        if $i19 == 0 goto label05;

     label04:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("mPopEnterAnim=#");

        $i15 = r0.<android.app.BackStackRecord: int mPopEnterAnim>;

        $r21 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i15);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r21);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" mPopExitAnim=#");

        $i16 = r0.<android.app.BackStackRecord: int mPopExitAnim>;

        $r22 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i16);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r22);

     label05:
        $i24 = r0.<android.app.BackStackRecord: int mBreadCrumbTitleRes>;

        if $i24 != 0 goto label06;

        $r28 = r0.<android.app.BackStackRecord: java.lang.CharSequence mBreadCrumbTitleText>;

        if $r28 == null goto label07;

     label06:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("mBreadCrumbTitleRes=#");

        $i17 = r0.<android.app.BackStackRecord: int mBreadCrumbTitleRes>;

        $r23 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i17);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r23);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" mBreadCrumbTitleText=");

        $r24 = r0.<android.app.BackStackRecord: java.lang.CharSequence mBreadCrumbTitleText>;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>($r24);

     label07:
        $i25 = r0.<android.app.BackStackRecord: int mBreadCrumbShortTitleRes>;

        if $i25 != 0 goto label08;

        $r27 = r0.<android.app.BackStackRecord: java.lang.CharSequence mBreadCrumbShortTitleText>;

        if $r27 == null goto label09;

     label08:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("mBreadCrumbShortTitleRes=#");

        $i18 = r0.<android.app.BackStackRecord: int mBreadCrumbShortTitleRes>;

        $r25 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i18);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r25);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" mBreadCrumbShortTitleText=");

        $r26 = r0.<android.app.BackStackRecord: java.lang.CharSequence mBreadCrumbShortTitleText>;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>($r26);

     label09:
        $r31 = r0.<android.app.BackStackRecord: java.util.ArrayList mOps>;

        $z2 = virtualinvoke $r31.<java.util.ArrayList: boolean isEmpty()>();

        if $z2 != 0 goto label27;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("Operations:");

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = r0.<android.app.BackStackRecord: java.util.ArrayList mOps>;

        i0 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        i26 = 0;

     label10:
        if i26 >= i0 goto label27;

        $r9 = r0.<android.app.BackStackRecord: java.util.ArrayList mOps>;

        $r10 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object get(int)>(i26);

        r4 = (android.app.BackStackRecord$Op) $r10;

        $i1 = r4.<android.app.BackStackRecord$Op: int cmd>;

        tableswitch($i1)
        {
            case 0: goto label21;
            case 1: goto label20;
            case 2: goto label19;
            case 3: goto label18;
            case 4: goto label17;
            case 5: goto label16;
            case 6: goto label15;
            case 7: goto label14;
            case 8: goto label13;
            case 9: goto label12;
            default: goto label11;
        };

     label11:
        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cmd=");

        $i9 = r4.<android.app.BackStackRecord$Op: int cmd>;

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        r34 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label22;

     label12:
        r34 = "UNSET_PRIMARY_NAV";

        goto label22;

     label13:
        r34 = "SET_PRIMARY_NAV";

        goto label22;

     label14:
        r34 = "ATTACH";

        goto label22;

     label15:
        r34 = "DETACH";

        goto label22;

     label16:
        r34 = "SHOW";

        goto label22;

     label17:
        r34 = "HIDE";

        goto label22;

     label18:
        r34 = "REMOVE";

        goto label22;

     label19:
        r34 = "REPLACE";

        goto label22;

     label20:
        r34 = "ADD";

        goto label22;

     label21:
        r34 = "NULL";

     label22:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("  Op #");

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>(i26);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r34);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" ");

        $r35 = r4.<android.app.BackStackRecord$Op: android.app.Fragment fragment>;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>($r35);

        if z0 == 0 goto label26;

        $i2 = r4.<android.app.BackStackRecord$Op: int enterAnim>;

        if $i2 != 0 goto label23;

        $i8 = r4.<android.app.BackStackRecord$Op: int exitAnim>;

        if $i8 == 0 goto label24;

     label23:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r3);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("enterAnim=#");

        $i3 = r4.<android.app.BackStackRecord$Op: int enterAnim>;

        $r11 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i3);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r11);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" exitAnim=#");

        $i4 = r4.<android.app.BackStackRecord$Op: int exitAnim>;

        $r12 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i4);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r12);

     label24:
        $i27 = r4.<android.app.BackStackRecord$Op: int popEnterAnim>;

        if $i27 != 0 goto label25;

        $i7 = r4.<android.app.BackStackRecord$Op: int popExitAnim>;

        if $i7 == 0 goto label26;

     label25:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r3);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("popEnterAnim=#");

        $i5 = r4.<android.app.BackStackRecord$Op: int popEnterAnim>;

        $r13 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i5);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r13);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" popExitAnim=#");

        $i6 = r4.<android.app.BackStackRecord$Op: int popExitAnim>;

        $r14 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i6);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r14);

     label26:
        i26 = i26 + 1;

        goto label10;

     label27:
        return;
    }

    void executeOps()
    {
        android.app.BackStackRecord r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13;
        java.util.ArrayList $r1, $r2;
        boolean $z0, $z1;
        java.lang.Object $r3;
        android.app.FragmentManagerImpl $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, r21;
        java.lang.StringBuilder $r13;
        java.lang.IllegalArgumentException $r16;
        java.lang.String $r17;
        android.app.BackStackRecord$Op r18;
        android.app.Fragment r19;

        r0 := @this: android.app.BackStackRecord;

        $r1 = r0.<android.app.BackStackRecord: java.util.ArrayList mOps>;

        i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        i13 = 0;

     label01:
        if i13 >= i0 goto label14;

        $r2 = r0.<android.app.BackStackRecord: java.util.ArrayList mOps>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i13);

        r18 = (android.app.BackStackRecord$Op) $r3;

        r19 = r18.<android.app.BackStackRecord$Op: android.app.Fragment fragment>;

        if r19 == null goto label02;

        $i12 = r0.<android.app.BackStackRecord: int mTransition>;

        $i11 = r0.<android.app.BackStackRecord: int mTransitionStyle>;

        virtualinvoke r19.<android.app.Fragment: void setNextTransition(int,int)>($i12, $i11);

     label02:
        $i2 = r18.<android.app.BackStackRecord$Op: int cmd>;

        tableswitch($i2)
        {
            case 1: goto label11;
            case 2: goto label03;
            case 3: goto label10;
            case 4: goto label09;
            case 5: goto label08;
            case 6: goto label07;
            case 7: goto label06;
            case 8: goto label05;
            case 9: goto label04;
            default: goto label03;
        };

     label03:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown cmd: ");

        $i10 = r18.<android.app.BackStackRecord$Op: int cmd>;

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r16 = new java.lang.IllegalArgumentException;

        $r17 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r17);

        throw $r16;

     label04:
        $r4 = r0.<android.app.BackStackRecord: android.app.FragmentManagerImpl mManager>;

        virtualinvoke $r4.<android.app.FragmentManagerImpl: void setPrimaryNavigationFragment(android.app.Fragment)>(null);

        goto label12;

     label05:
        $r6 = r0.<android.app.BackStackRecord: android.app.FragmentManagerImpl mManager>;

        virtualinvoke $r6.<android.app.FragmentManagerImpl: void setPrimaryNavigationFragment(android.app.Fragment)>(r19);

        goto label12;

     label06:
        $i4 = r18.<android.app.BackStackRecord$Op: int enterAnim>;

        virtualinvoke r19.<android.app.Fragment: void setNextAnim(int)>($i4);

        $r7 = r0.<android.app.BackStackRecord: android.app.FragmentManagerImpl mManager>;

        virtualinvoke $r7.<android.app.FragmentManagerImpl: void attachFragment(android.app.Fragment)>(r19);

        goto label12;

     label07:
        $i5 = r18.<android.app.BackStackRecord$Op: int exitAnim>;

        virtualinvoke r19.<android.app.Fragment: void setNextAnim(int)>($i5);

        $r8 = r0.<android.app.BackStackRecord: android.app.FragmentManagerImpl mManager>;

        virtualinvoke $r8.<android.app.FragmentManagerImpl: void detachFragment(android.app.Fragment)>(r19);

        goto label12;

     label08:
        $i6 = r18.<android.app.BackStackRecord$Op: int enterAnim>;

        virtualinvoke r19.<android.app.Fragment: void setNextAnim(int)>($i6);

        $r9 = r0.<android.app.BackStackRecord: android.app.FragmentManagerImpl mManager>;

        virtualinvoke $r9.<android.app.FragmentManagerImpl: void showFragment(android.app.Fragment)>(r19);

        goto label12;

     label09:
        $i7 = r18.<android.app.BackStackRecord$Op: int exitAnim>;

        virtualinvoke r19.<android.app.Fragment: void setNextAnim(int)>($i7);

        $r10 = r0.<android.app.BackStackRecord: android.app.FragmentManagerImpl mManager>;

        virtualinvoke $r10.<android.app.FragmentManagerImpl: void hideFragment(android.app.Fragment)>(r19);

        goto label12;

     label10:
        $i8 = r18.<android.app.BackStackRecord$Op: int exitAnim>;

        virtualinvoke r19.<android.app.Fragment: void setNextAnim(int)>($i8);

        $r11 = r0.<android.app.BackStackRecord: android.app.FragmentManagerImpl mManager>;

        virtualinvoke $r11.<android.app.FragmentManagerImpl: void removeFragment(android.app.Fragment)>(r19);

        goto label12;

     label11:
        $i9 = r18.<android.app.BackStackRecord$Op: int enterAnim>;

        virtualinvoke r19.<android.app.Fragment: void setNextAnim(int)>($i9);

        $r12 = r0.<android.app.BackStackRecord: android.app.FragmentManagerImpl mManager>;

        virtualinvoke $r12.<android.app.FragmentManagerImpl: void addFragment(android.app.Fragment,boolean)>(r19, 0);

     label12:
        $z1 = r0.<android.app.BackStackRecord: boolean mReorderingAllowed>;

        if $z1 != 0 goto label13;

        $i3 = r18.<android.app.BackStackRecord$Op: int cmd>;

        if $i3 == 1 goto label13;

        if r19 == null goto label13;

        $r5 = r0.<android.app.BackStackRecord: android.app.FragmentManagerImpl mManager>;

        virtualinvoke $r5.<android.app.FragmentManagerImpl: void moveFragmentToExpectedState(android.app.Fragment)>(r19);

     label13:
        i13 = i13 + 1;

        goto label01;

     label14:
        $z0 = r0.<android.app.BackStackRecord: boolean mReorderingAllowed>;

        if $z0 != 0 goto label15;

        r21 = r0.<android.app.BackStackRecord: android.app.FragmentManagerImpl mManager>;

        $i1 = r21.<android.app.FragmentManagerImpl: int mCurState>;

        virtualinvoke r21.<android.app.FragmentManagerImpl: void moveToState(int,boolean)>($i1, 1);

     label15:
        return;
    }

    void executePopOps(boolean)
    {
        android.app.BackStackRecord r0;
        boolean z0, $z1, $z2;
        java.util.ArrayList $r1, $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14;
        java.lang.Object $r3;
        android.app.FragmentManagerImpl $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, r21;
        java.lang.StringBuilder $r13;
        java.lang.IllegalArgumentException $r16;
        java.lang.String $r17;
        android.app.BackStackRecord$Op r18;
        android.app.Fragment r19;

        r0 := @this: android.app.BackStackRecord;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.app.BackStackRecord: java.util.ArrayList mOps>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        i14 = $i0 - 1;

     label01:
        if i14 < 0 goto label14;

        $r2 = r0.<android.app.BackStackRecord: java.util.ArrayList mOps>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i14);

        r18 = (android.app.BackStackRecord$Op) $r3;

        r19 = r18.<android.app.BackStackRecord$Op: android.app.Fragment fragment>;

        if r19 == null goto label02;

        $i11 = r0.<android.app.BackStackRecord: int mTransition>;

        $i12 = staticinvoke <android.app.FragmentManagerImpl: int reverseTransit(int)>($i11);

        $i13 = r0.<android.app.BackStackRecord: int mTransitionStyle>;

        virtualinvoke r19.<android.app.Fragment: void setNextTransition(int,int)>($i12, $i13);

     label02:
        $i2 = r18.<android.app.BackStackRecord$Op: int cmd>;

        tableswitch($i2)
        {
            case 1: goto label11;
            case 2: goto label03;
            case 3: goto label10;
            case 4: goto label09;
            case 5: goto label08;
            case 6: goto label07;
            case 7: goto label06;
            case 8: goto label05;
            case 9: goto label04;
            default: goto label03;
        };

     label03:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown cmd: ");

        $i10 = r18.<android.app.BackStackRecord$Op: int cmd>;

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r16 = new java.lang.IllegalArgumentException;

        $r17 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r17);

        throw $r16;

     label04:
        $r4 = r0.<android.app.BackStackRecord: android.app.FragmentManagerImpl mManager>;

        virtualinvoke $r4.<android.app.FragmentManagerImpl: void setPrimaryNavigationFragment(android.app.Fragment)>(r19);

        goto label12;

     label05:
        $r6 = r0.<android.app.BackStackRecord: android.app.FragmentManagerImpl mManager>;

        virtualinvoke $r6.<android.app.FragmentManagerImpl: void setPrimaryNavigationFragment(android.app.Fragment)>(null);

        goto label12;

     label06:
        $i4 = r18.<android.app.BackStackRecord$Op: int popExitAnim>;

        virtualinvoke r19.<android.app.Fragment: void setNextAnim(int)>($i4);

        $r7 = r0.<android.app.BackStackRecord: android.app.FragmentManagerImpl mManager>;

        virtualinvoke $r7.<android.app.FragmentManagerImpl: void detachFragment(android.app.Fragment)>(r19);

        goto label12;

     label07:
        $i5 = r18.<android.app.BackStackRecord$Op: int popEnterAnim>;

        virtualinvoke r19.<android.app.Fragment: void setNextAnim(int)>($i5);

        $r8 = r0.<android.app.BackStackRecord: android.app.FragmentManagerImpl mManager>;

        virtualinvoke $r8.<android.app.FragmentManagerImpl: void attachFragment(android.app.Fragment)>(r19);

        goto label12;

     label08:
        $i6 = r18.<android.app.BackStackRecord$Op: int popExitAnim>;

        virtualinvoke r19.<android.app.Fragment: void setNextAnim(int)>($i6);

        $r9 = r0.<android.app.BackStackRecord: android.app.FragmentManagerImpl mManager>;

        virtualinvoke $r9.<android.app.FragmentManagerImpl: void hideFragment(android.app.Fragment)>(r19);

        goto label12;

     label09:
        $i7 = r18.<android.app.BackStackRecord$Op: int popEnterAnim>;

        virtualinvoke r19.<android.app.Fragment: void setNextAnim(int)>($i7);

        $r10 = r0.<android.app.BackStackRecord: android.app.FragmentManagerImpl mManager>;

        virtualinvoke $r10.<android.app.FragmentManagerImpl: void showFragment(android.app.Fragment)>(r19);

        goto label12;

     label10:
        $i8 = r18.<android.app.BackStackRecord$Op: int popEnterAnim>;

        virtualinvoke r19.<android.app.Fragment: void setNextAnim(int)>($i8);

        $r11 = r0.<android.app.BackStackRecord: android.app.FragmentManagerImpl mManager>;

        virtualinvoke $r11.<android.app.FragmentManagerImpl: void addFragment(android.app.Fragment,boolean)>(r19, 0);

        goto label12;

     label11:
        $i9 = r18.<android.app.BackStackRecord$Op: int popExitAnim>;

        virtualinvoke r19.<android.app.Fragment: void setNextAnim(int)>($i9);

        $r12 = r0.<android.app.BackStackRecord: android.app.FragmentManagerImpl mManager>;

        virtualinvoke $r12.<android.app.FragmentManagerImpl: void removeFragment(android.app.Fragment)>(r19);

     label12:
        $z2 = r0.<android.app.BackStackRecord: boolean mReorderingAllowed>;

        if $z2 != 0 goto label13;

        $i3 = r18.<android.app.BackStackRecord$Op: int cmd>;

        if $i3 == 3 goto label13;

        if r19 == null goto label13;

        $r5 = r0.<android.app.BackStackRecord: android.app.FragmentManagerImpl mManager>;

        virtualinvoke $r5.<android.app.FragmentManagerImpl: void moveFragmentToExpectedState(android.app.Fragment)>(r19);

     label13:
        i14 = i14 + -1;

        goto label01;

     label14:
        $z1 = r0.<android.app.BackStackRecord: boolean mReorderingAllowed>;

        if $z1 != 0 goto label15;

        if z0 == 0 goto label15;

        r21 = r0.<android.app.BackStackRecord: android.app.FragmentManagerImpl mManager>;

        $i1 = r21.<android.app.FragmentManagerImpl: int mCurState>;

        virtualinvoke r21.<android.app.FragmentManagerImpl: void moveToState(int,boolean)>($i1, 1);

     label15:
        return;
    }

    android.app.Fragment expandOps(java.util.ArrayList, android.app.Fragment)
    {
        android.app.BackStackRecord r0;
        java.util.ArrayList r1, $r5, $r6, $r9, $r13, $r15, $r20, $r22;
        android.app.BackStackRecord$Op r2, $r12, $r14, $r18, $r21;
        android.app.Fragment r3, r4, $r8, $r16, $r17, $r19, r23, r24, r25, r26;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9, i10, i11, i12, i13;
        java.lang.Object $r7, $r11;
        boolean z4, z5;

        r0 := @this: android.app.BackStackRecord;

        r1 := @parameter0: java.util.ArrayList;

        r23 := @parameter1: android.app.Fragment;

        i8 = 0;

        r24 = r23;

     label01:
        $r5 = r0.<android.app.BackStackRecord: java.util.ArrayList mOps>;

        $i1 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        if i8 >= $i1 goto label14;

        $r6 = r0.<android.app.BackStackRecord: java.util.ArrayList mOps>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(i8);

        r2 = (android.app.BackStackRecord$Op) $r7;

        i9 = r2.<android.app.BackStackRecord$Op: int cmd>;

        if i9 == 1 goto label12;

        if i9 == 2 goto label04;

        if i9 == 3 goto label03;

        if i9 == 6 goto label03;

        if i9 == 7 goto label12;

        if i9 == 8 goto label02;

        i10 = i8;

        r25 = r24;

        goto label13;

     label02:
        $r22 = r0.<android.app.BackStackRecord: java.util.ArrayList mOps>;

        $r21 = new android.app.BackStackRecord$Op;

        specialinvoke $r21.<android.app.BackStackRecord$Op: void <init>(int,android.app.Fragment)>(9, r24);

        virtualinvoke $r22.<java.util.ArrayList: void add(int,java.lang.Object)>(i8, $r21);

        i10 = i8 + 1;

        r25 = r2.<android.app.BackStackRecord$Op: android.app.Fragment fragment>;

        goto label13;

     label03:
        $r16 = r2.<android.app.BackStackRecord$Op: android.app.Fragment fragment>;

        virtualinvoke r1.<java.util.ArrayList: boolean remove(java.lang.Object)>($r16);

        i10 = i8;

        r25 = r24;

        $r17 = r2.<android.app.BackStackRecord$Op: android.app.Fragment fragment>;

        if $r17 != r24 goto label13;

        $r20 = r0.<android.app.BackStackRecord: java.util.ArrayList mOps>;

        $r18 = new android.app.BackStackRecord$Op;

        $r19 = r2.<android.app.BackStackRecord$Op: android.app.Fragment fragment>;

        specialinvoke $r18.<android.app.BackStackRecord$Op: void <init>(int,android.app.Fragment)>(9, $r19);

        virtualinvoke $r20.<java.util.ArrayList: void add(int,java.lang.Object)>(i8, $r18);

        i10 = i8 + 1;

        r25 = null;

        goto label13;

     label04:
        r3 = r2.<android.app.BackStackRecord$Op: android.app.Fragment fragment>;

        i0 = r3.<android.app.Fragment: int mContainerId>;

        z4 = 0;

        $i2 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        i11 = $i2 - 1;

        r25 = r24;

     label05:
        if i11 < 0 goto label09;

        $r11 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i11);

        r4 = (android.app.Fragment) $r11;

        i12 = i8;

        z5 = z4;

        r26 = r25;

        $i3 = r4.<android.app.Fragment: int mContainerId>;

        if $i3 != i0 goto label08;

        if r4 != r3 goto label06;

        z5 = 1;

        i12 = i8;

        r26 = r25;

        goto label08;

     label06:
        i13 = i8;

        r26 = r25;

        if r4 != r25 goto label07;

        $r15 = r0.<android.app.BackStackRecord: java.util.ArrayList mOps>;

        $r14 = new android.app.BackStackRecord$Op;

        specialinvoke $r14.<android.app.BackStackRecord$Op: void <init>(int,android.app.Fragment)>(9, r4);

        virtualinvoke $r15.<java.util.ArrayList: void add(int,java.lang.Object)>(i8, $r14);

        i13 = i8 + 1;

        r26 = null;

     label07:
        $r12 = new android.app.BackStackRecord$Op;

        specialinvoke $r12.<android.app.BackStackRecord$Op: void <init>(int,android.app.Fragment)>(3, r4);

        $i4 = r2.<android.app.BackStackRecord$Op: int enterAnim>;

        $r12.<android.app.BackStackRecord$Op: int enterAnim> = $i4;

        $i5 = r2.<android.app.BackStackRecord$Op: int popEnterAnim>;

        $r12.<android.app.BackStackRecord$Op: int popEnterAnim> = $i5;

        $i6 = r2.<android.app.BackStackRecord$Op: int exitAnim>;

        $r12.<android.app.BackStackRecord$Op: int exitAnim> = $i6;

        $i7 = r2.<android.app.BackStackRecord$Op: int popExitAnim>;

        $r12.<android.app.BackStackRecord$Op: int popExitAnim> = $i7;

        $r13 = r0.<android.app.BackStackRecord: java.util.ArrayList mOps>;

        virtualinvoke $r13.<java.util.ArrayList: void add(int,java.lang.Object)>(i13, $r12);

        virtualinvoke r1.<java.util.ArrayList: boolean remove(java.lang.Object)>(r4);

        i12 = i13 + 1;

        z5 = z4;

     label08:
        i11 = i11 + -1;

        i8 = i12;

        z4 = z5;

        r25 = r26;

        goto label05;

     label09:
        if z4 == 0 goto label10;

        $r9 = r0.<android.app.BackStackRecord: java.util.ArrayList mOps>;

        virtualinvoke $r9.<java.util.ArrayList: java.lang.Object remove(int)>(i8);

        i8 = i8 + -1;

        goto label11;

     label10:
        r2.<android.app.BackStackRecord$Op: int cmd> = 1;

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);

     label11:
        i10 = i8;

        goto label13;

     label12:
        $r8 = r2.<android.app.BackStackRecord$Op: android.app.Fragment fragment>;

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r8);

        r25 = r24;

        i10 = i8;

     label13:
        i8 = i10 + 1;

        r24 = r25;

        goto label01;

     label14:
        return r24;
    }

    public boolean generateOps(java.util.ArrayList, java.util.ArrayList)
    {
        android.app.BackStackRecord r0;
        java.util.ArrayList r1, r2;
        boolean $z0, $z3;
        java.lang.Boolean $r4;
        android.app.FragmentManagerImpl $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r9;

        r0 := @this: android.app.BackStackRecord;

        r1 := @parameter0: java.util.ArrayList;

        r2 := @parameter1: java.util.ArrayList;

        $z0 = <android.app.FragmentManagerImpl: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Run: ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r9);

     label1:
        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r0);

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        $z3 = r0.<android.app.BackStackRecord: boolean mAddToBackStack>;

        if $z3 == 0 goto label2;

        $r5 = r0.<android.app.BackStackRecord: android.app.FragmentManagerImpl mManager>;

        virtualinvoke $r5.<android.app.FragmentManagerImpl: void addBackStackState(android.app.BackStackRecord)>(r0);

     label2:
        return 1;
    }

    public java.lang.CharSequence getBreadCrumbShortTitle()
    {
        android.app.BackStackRecord r0;
        int $i0, $i1;
        java.lang.CharSequence $r1, $r7;
        android.app.FragmentManagerImpl $r2, $r4;
        android.app.FragmentHostCallback $r3, $r5;
        android.content.Context $r6;

        r0 := @this: android.app.BackStackRecord;

        $i0 = r0.<android.app.BackStackRecord: int mBreadCrumbShortTitleRes>;

        if $i0 == 0 goto label1;

        $r2 = r0.<android.app.BackStackRecord: android.app.FragmentManagerImpl mManager>;

        $r3 = $r2.<android.app.FragmentManagerImpl: android.app.FragmentHostCallback mHost>;

        if $r3 == null goto label1;

        $r4 = r0.<android.app.BackStackRecord: android.app.FragmentManagerImpl mManager>;

        $r5 = $r4.<android.app.FragmentManagerImpl: android.app.FragmentHostCallback mHost>;

        $r6 = virtualinvoke $r5.<android.app.FragmentHostCallback: android.content.Context getContext()>();

        $i1 = r0.<android.app.BackStackRecord: int mBreadCrumbShortTitleRes>;

        $r7 = virtualinvoke $r6.<android.content.Context: java.lang.CharSequence getText(int)>($i1);

        return $r7;

     label1:
        $r1 = r0.<android.app.BackStackRecord: java.lang.CharSequence mBreadCrumbShortTitleText>;

        return $r1;
    }

    public int getBreadCrumbShortTitleRes()
    {
        android.app.BackStackRecord r0;
        int $i0;

        r0 := @this: android.app.BackStackRecord;

        $i0 = r0.<android.app.BackStackRecord: int mBreadCrumbShortTitleRes>;

        return $i0;
    }

    public java.lang.CharSequence getBreadCrumbTitle()
    {
        android.app.BackStackRecord r0;
        int $i0, $i1;
        java.lang.CharSequence $r1, $r7;
        android.app.FragmentManagerImpl $r2, $r4;
        android.app.FragmentHostCallback $r3, $r5;
        android.content.Context $r6;

        r0 := @this: android.app.BackStackRecord;

        $i0 = r0.<android.app.BackStackRecord: int mBreadCrumbTitleRes>;

        if $i0 == 0 goto label1;

        $r2 = r0.<android.app.BackStackRecord: android.app.FragmentManagerImpl mManager>;

        $r3 = $r2.<android.app.FragmentManagerImpl: android.app.FragmentHostCallback mHost>;

        if $r3 == null goto label1;

        $r4 = r0.<android.app.BackStackRecord: android.app.FragmentManagerImpl mManager>;

        $r5 = $r4.<android.app.FragmentManagerImpl: android.app.FragmentHostCallback mHost>;

        $r6 = virtualinvoke $r5.<android.app.FragmentHostCallback: android.content.Context getContext()>();

        $i1 = r0.<android.app.BackStackRecord: int mBreadCrumbTitleRes>;

        $r7 = virtualinvoke $r6.<android.content.Context: java.lang.CharSequence getText(int)>($i1);

        return $r7;

     label1:
        $r1 = r0.<android.app.BackStackRecord: java.lang.CharSequence mBreadCrumbTitleText>;

        return $r1;
    }

    public int getBreadCrumbTitleRes()
    {
        android.app.BackStackRecord r0;
        int $i0;

        r0 := @this: android.app.BackStackRecord;

        $i0 = r0.<android.app.BackStackRecord: int mBreadCrumbTitleRes>;

        return $i0;
    }

    public int getId()
    {
        android.app.BackStackRecord r0;
        int $i0;

        r0 := @this: android.app.BackStackRecord;

        $i0 = r0.<android.app.BackStackRecord: int mIndex>;

        return $i0;
    }

    public java.lang.String getName()
    {
        android.app.BackStackRecord r0;
        java.lang.String $r1;

        r0 := @this: android.app.BackStackRecord;

        $r1 = r0.<android.app.BackStackRecord: java.lang.String mName>;

        return $r1;
    }

    public int getTransition()
    {
        android.app.BackStackRecord r0;
        int $i0;

        r0 := @this: android.app.BackStackRecord;

        $i0 = r0.<android.app.BackStackRecord: int mTransition>;

        return $i0;
    }

    public int getTransitionStyle()
    {
        android.app.BackStackRecord r0;
        int $i0;

        r0 := @this: android.app.BackStackRecord;

        $i0 = r0.<android.app.BackStackRecord: int mTransitionStyle>;

        return $i0;
    }

    public android.app.FragmentTransaction hide(android.app.Fragment)
    {
        android.app.BackStackRecord r0;
        android.app.Fragment r1;
        android.app.BackStackRecord$Op $r2;

        r0 := @this: android.app.BackStackRecord;

        r1 := @parameter0: android.app.Fragment;

        $r2 = new android.app.BackStackRecord$Op;

        specialinvoke $r2.<android.app.BackStackRecord$Op: void <init>(int,android.app.Fragment)>(4, r1);

        virtualinvoke r0.<android.app.BackStackRecord: void addOp(android.app.BackStackRecord$Op)>($r2);

        return r0;
    }

    boolean interactsWith(int)
    {
        android.app.BackStackRecord r0;
        int i0, i1, i2, i3;
        android.app.BackStackRecord$Op r1;
        java.util.ArrayList $r2, $r3;
        java.lang.Object $r4;
        android.app.Fragment $r5, $r6;

        r0 := @this: android.app.BackStackRecord;

        i0 := @parameter0: int;

        $r2 = r0.<android.app.BackStackRecord: java.util.ArrayList mOps>;

        i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i2 = 0;

     label1:
        i3 = 0;

        if i2 >= i1 goto label4;

        $r3 = r0.<android.app.BackStackRecord: java.util.ArrayList mOps>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r1 = (android.app.BackStackRecord$Op) $r4;

        $r5 = r1.<android.app.BackStackRecord$Op: android.app.Fragment fragment>;

        if $r5 == null goto label2;

        $r6 = r1.<android.app.BackStackRecord$Op: android.app.Fragment fragment>;

        i3 = $r6.<android.app.Fragment: int mContainerId>;

     label2:
        if i3 == 0 goto label3;

        if i3 != i0 goto label3;

        return 1;

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        return 0;
    }

    boolean interactsWith(java.util.ArrayList, int, int)
    {
        android.app.BackStackRecord r0, r2;
        java.util.ArrayList r1, $r3, $r4, $r8, $r9;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11;
        java.lang.Object $r5, $r7, $r10;
        android.app.Fragment $r6, $r11, $r12, $r13;
        android.app.BackStackRecord$Op r14, r15;

        r0 := @this: android.app.BackStackRecord;

        r1 := @parameter0: java.util.ArrayList;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if i1 != i0 goto label01;

        return 0;

     label01:
        $r3 = r0.<android.app.BackStackRecord: java.util.ArrayList mOps>;

        i2 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i4 = -1;

        i5 = 0;

     label02:
        if i5 >= i2 goto label12;

        $r4 = r0.<android.app.BackStackRecord: java.util.ArrayList mOps>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        r14 = (android.app.BackStackRecord$Op) $r5;

        $r6 = r14.<android.app.BackStackRecord$Op: android.app.Fragment fragment>;

        if $r6 == null goto label03;

        $r13 = r14.<android.app.BackStackRecord$Op: android.app.Fragment fragment>;

        i6 = $r13.<android.app.Fragment: int mContainerId>;

        goto label04;

     label03:
        i6 = 0;

     label04:
        i7 = i4;

        if i6 == 0 goto label11;

        i7 = i4;

        if i6 == i4 goto label11;

        i8 = i6;

        i9 = i0;

     label05:
        i7 = i8;

        if i9 >= i1 goto label11;

        $r7 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i9);

        r2 = (android.app.BackStackRecord) $r7;

        $r8 = r2.<android.app.BackStackRecord: java.util.ArrayList mOps>;

        i3 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        i10 = 0;

     label06:
        if i10 >= i3 goto label10;

        $r9 = r2.<android.app.BackStackRecord: java.util.ArrayList mOps>;

        $r10 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object get(int)>(i10);

        r15 = (android.app.BackStackRecord$Op) $r10;

        $r11 = r15.<android.app.BackStackRecord$Op: android.app.Fragment fragment>;

        if $r11 == null goto label07;

        $r12 = r15.<android.app.BackStackRecord$Op: android.app.Fragment fragment>;

        i11 = $r12.<android.app.Fragment: int mContainerId>;

        goto label08;

     label07:
        i11 = 0;

     label08:
        if i11 != i6 goto label09;

        return 1;

     label09:
        i10 = i10 + 1;

        goto label06;

     label10:
        i9 = i9 + 1;

        goto label05;

     label11:
        i5 = i5 + 1;

        i4 = i7;

        goto label02;

     label12:
        return 0;
    }

    public boolean isAddToBackStackAllowed()
    {
        android.app.BackStackRecord r0;
        boolean $z0;

        r0 := @this: android.app.BackStackRecord;

        $z0 = r0.<android.app.BackStackRecord: boolean mAllowAddToBackStack>;

        return $z0;
    }

    public boolean isEmpty()
    {
        android.app.BackStackRecord r0;
        java.util.ArrayList $r1;
        boolean $z0;

        r0 := @this: android.app.BackStackRecord;

        $r1 = r0.<android.app.BackStackRecord: java.util.ArrayList mOps>;

        $z0 = virtualinvoke $r1.<java.util.ArrayList: boolean isEmpty()>();

        return $z0;
    }

    boolean isPostponed()
    {
        android.app.BackStackRecord r0;
        java.util.ArrayList $r1, $r2;
        int $i0, i1;
        java.lang.Object $r3;
        android.app.BackStackRecord$Op $r4;
        boolean $z0;

        r0 := @this: android.app.BackStackRecord;

        i1 = 0;

     label1:
        $r1 = r0.<android.app.BackStackRecord: java.util.ArrayList mOps>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if i1 >= $i0 goto label3;

        $r2 = r0.<android.app.BackStackRecord: java.util.ArrayList mOps>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r4 = (android.app.BackStackRecord$Op) $r3;

        $z0 = staticinvoke <android.app.BackStackRecord: boolean isFragmentPostponed(android.app.BackStackRecord$Op)>($r4);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    public android.app.FragmentTransaction remove(android.app.Fragment)
    {
        android.app.BackStackRecord r0;
        android.app.Fragment r1;
        android.app.BackStackRecord$Op $r2;

        r0 := @this: android.app.BackStackRecord;

        r1 := @parameter0: android.app.Fragment;

        $r2 = new android.app.BackStackRecord$Op;

        specialinvoke $r2.<android.app.BackStackRecord$Op: void <init>(int,android.app.Fragment)>(3, r1);

        virtualinvoke r0.<android.app.BackStackRecord: void addOp(android.app.BackStackRecord$Op)>($r2);

        return r0;
    }

    public android.app.FragmentTransaction replace(int, android.app.Fragment)
    {
        android.app.BackStackRecord r0;
        int i0;
        android.app.Fragment r1;
        android.app.FragmentTransaction $r2;

        r0 := @this: android.app.BackStackRecord;

        i0 := @parameter0: int;

        r1 := @parameter1: android.app.Fragment;

        $r2 = virtualinvoke r0.<android.app.BackStackRecord: android.app.FragmentTransaction replace(int,android.app.Fragment,java.lang.String)>(i0, r1, null);

        return $r2;
    }

    public android.app.FragmentTransaction replace(int, android.app.Fragment, java.lang.String)
    {
        android.app.BackStackRecord r0;
        int i0;
        android.app.Fragment r1;
        java.lang.String r2;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: android.app.BackStackRecord;

        i0 := @parameter0: int;

        r1 := @parameter1: android.app.Fragment;

        r2 := @parameter2: java.lang.String;

        if i0 == 0 goto label1;

        specialinvoke r0.<android.app.BackStackRecord: void doAddOp(int,android.app.Fragment,java.lang.String,int)>(i0, r1, r2, 2);

        return r0;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Must use non-zero containerViewId");

        throw $r3;
    }

    public android.app.FragmentTransaction runOnCommit(java.lang.Runnable)
    {
        android.app.BackStackRecord r0;
        java.lang.Runnable r1;
        java.lang.IllegalArgumentException $r2;
        java.util.ArrayList $r4, $r5, $r6;

        r0 := @this: android.app.BackStackRecord;

        r1 := @parameter0: java.lang.Runnable;

        if r1 == null goto label2;

        virtualinvoke r0.<android.app.BackStackRecord: android.app.FragmentTransaction disallowAddToBackStack()>();

        $r4 = r0.<android.app.BackStackRecord: java.util.ArrayList mCommitRunnables>;

        if $r4 != null goto label1;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<android.app.BackStackRecord: java.util.ArrayList mCommitRunnables> = $r6;

     label1:
        $r5 = r0.<android.app.BackStackRecord: java.util.ArrayList mCommitRunnables>;

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        return r0;

     label2:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("runnable cannot be null");

        throw $r2;
    }

    public void runOnCommitRunnables()
    {
        android.app.BackStackRecord r0;
        java.util.ArrayList r1, $r2;
        int i0, i1;
        java.lang.Object $r3;
        java.lang.Runnable $r4;

        r0 := @this: android.app.BackStackRecord;

        r1 = r0.<android.app.BackStackRecord: java.util.ArrayList mCommitRunnables>;

        if r1 == null goto label3;

        i1 = 0;

        i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

     label1:
        if i1 >= i0 goto label2;

        $r2 = r0.<android.app.BackStackRecord: java.util.ArrayList mCommitRunnables>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r4 = (java.lang.Runnable) $r3;

        interfaceinvoke $r4.<java.lang.Runnable: void run()>();

        i1 = i1 + 1;

        goto label1;

     label2:
        r0.<android.app.BackStackRecord: java.util.ArrayList mCommitRunnables> = null;

     label3:
        return;
    }

    public android.app.FragmentTransaction setBreadCrumbShortTitle(int)
    {
        android.app.BackStackRecord r0;
        int i0;

        r0 := @this: android.app.BackStackRecord;

        i0 := @parameter0: int;

        r0.<android.app.BackStackRecord: int mBreadCrumbShortTitleRes> = i0;

        r0.<android.app.BackStackRecord: java.lang.CharSequence mBreadCrumbShortTitleText> = null;

        return r0;
    }

    public android.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence)
    {
        android.app.BackStackRecord r0;
        java.lang.CharSequence r1;

        r0 := @this: android.app.BackStackRecord;

        r1 := @parameter0: java.lang.CharSequence;

        r0.<android.app.BackStackRecord: int mBreadCrumbShortTitleRes> = 0;

        r0.<android.app.BackStackRecord: java.lang.CharSequence mBreadCrumbShortTitleText> = r1;

        return r0;
    }

    public android.app.FragmentTransaction setBreadCrumbTitle(int)
    {
        android.app.BackStackRecord r0;
        int i0;

        r0 := @this: android.app.BackStackRecord;

        i0 := @parameter0: int;

        r0.<android.app.BackStackRecord: int mBreadCrumbTitleRes> = i0;

        r0.<android.app.BackStackRecord: java.lang.CharSequence mBreadCrumbTitleText> = null;

        return r0;
    }

    public android.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence)
    {
        android.app.BackStackRecord r0;
        java.lang.CharSequence r1;

        r0 := @this: android.app.BackStackRecord;

        r1 := @parameter0: java.lang.CharSequence;

        r0.<android.app.BackStackRecord: int mBreadCrumbTitleRes> = 0;

        r0.<android.app.BackStackRecord: java.lang.CharSequence mBreadCrumbTitleText> = r1;

        return r0;
    }

    public android.app.FragmentTransaction setCustomAnimations(int, int)
    {
        android.app.BackStackRecord r0;
        int i0, i1;
        android.app.FragmentTransaction $r1;

        r0 := @this: android.app.BackStackRecord;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<android.app.BackStackRecord: android.app.FragmentTransaction setCustomAnimations(int,int,int,int)>(i0, i1, 0, 0);

        return $r1;
    }

    public android.app.FragmentTransaction setCustomAnimations(int, int, int, int)
    {
        android.app.BackStackRecord r0;
        int i0, i1, i2, i3;

        r0 := @this: android.app.BackStackRecord;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r0.<android.app.BackStackRecord: int mEnterAnim> = i0;

        r0.<android.app.BackStackRecord: int mExitAnim> = i1;

        r0.<android.app.BackStackRecord: int mPopEnterAnim> = i2;

        r0.<android.app.BackStackRecord: int mPopExitAnim> = i3;

        return r0;
    }

    void setOnStartPostponedListener(android.app.Fragment$OnStartEnterTransitionListener)
    {
        android.app.BackStackRecord r0;
        android.app.Fragment$OnStartEnterTransitionListener r1;
        android.app.BackStackRecord$Op r2;
        java.util.ArrayList $r3, $r4;
        int $i0, i1;
        java.lang.Object $r5;
        boolean $z0;
        android.app.Fragment $r6;

        r0 := @this: android.app.BackStackRecord;

        r1 := @parameter0: android.app.Fragment$OnStartEnterTransitionListener;

        i1 = 0;

     label1:
        $r3 = r0.<android.app.BackStackRecord: java.util.ArrayList mOps>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if i1 >= $i0 goto label3;

        $r4 = r0.<android.app.BackStackRecord: java.util.ArrayList mOps>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r2 = (android.app.BackStackRecord$Op) $r5;

        $z0 = staticinvoke <android.app.BackStackRecord: boolean isFragmentPostponed(android.app.BackStackRecord$Op)>(r2);

        if $z0 == 0 goto label2;

        $r6 = r2.<android.app.BackStackRecord$Op: android.app.Fragment fragment>;

        virtualinvoke $r6.<android.app.Fragment: void setOnStartEnterTransitionListener(android.app.Fragment$OnStartEnterTransitionListener)>(r1);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    public android.app.FragmentTransaction setPrimaryNavigationFragment(android.app.Fragment)
    {
        android.app.BackStackRecord r0;
        android.app.Fragment r1;
        android.app.BackStackRecord$Op $r2;

        r0 := @this: android.app.BackStackRecord;

        r1 := @parameter0: android.app.Fragment;

        $r2 = new android.app.BackStackRecord$Op;

        specialinvoke $r2.<android.app.BackStackRecord$Op: void <init>(int,android.app.Fragment)>(8, r1);

        virtualinvoke r0.<android.app.BackStackRecord: void addOp(android.app.BackStackRecord$Op)>($r2);

        return r0;
    }

    public android.app.FragmentTransaction setReorderingAllowed(boolean)
    {
        android.app.BackStackRecord r0;
        boolean z0;

        r0 := @this: android.app.BackStackRecord;

        z0 := @parameter0: boolean;

        r0.<android.app.BackStackRecord: boolean mReorderingAllowed> = z0;

        return r0;
    }

    public android.app.FragmentTransaction setTransition(int)
    {
        android.app.BackStackRecord r0;
        int i0;

        r0 := @this: android.app.BackStackRecord;

        i0 := @parameter0: int;

        r0.<android.app.BackStackRecord: int mTransition> = i0;

        return r0;
    }

    public android.app.FragmentTransaction setTransitionStyle(int)
    {
        android.app.BackStackRecord r0;
        int i0;

        r0 := @this: android.app.BackStackRecord;

        i0 := @parameter0: int;

        r0.<android.app.BackStackRecord: int mTransitionStyle> = i0;

        return r0;
    }

    public android.app.FragmentTransaction show(android.app.Fragment)
    {
        android.app.BackStackRecord r0;
        android.app.Fragment r1;
        android.app.BackStackRecord$Op $r2;

        r0 := @this: android.app.BackStackRecord;

        r1 := @parameter0: android.app.Fragment;

        $r2 = new android.app.BackStackRecord$Op;

        specialinvoke $r2.<android.app.BackStackRecord$Op: void <init>(int,android.app.Fragment)>(5, r1);

        virtualinvoke r0.<android.app.BackStackRecord: void addOp(android.app.BackStackRecord$Op)>($r2);

        return r0;
    }

    public java.lang.String toString()
    {
        android.app.BackStackRecord r0;
        java.lang.StringBuilder $r2;
        int $i0, $i1, $i2;
        java.lang.String $r4, $r6, $r8, $r10;

        r0 := @this: android.app.BackStackRecord;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>(128);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BackStackEntry{");

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $i1 = r0.<android.app.BackStackRecord: int mIndex>;

        if $i1 < 0 goto label1;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" #");

        $i2 = r0.<android.app.BackStackRecord: int mIndex>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

     label1:
        $r6 = r0.<android.app.BackStackRecord: java.lang.String mName>;

        if $r6 == null goto label2;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r10 = r0.<android.app.BackStackRecord: java.lang.String mName>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

     label2:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    void trackAddedFragmentsInPop(java.util.ArrayList)
    {
        android.app.BackStackRecord r0;
        java.util.ArrayList r1, $r3, $r4;
        android.app.BackStackRecord$Op r2;
        int i0, $i1, i2;
        java.lang.Object $r5;
        android.app.Fragment $r6, $r7;

        r0 := @this: android.app.BackStackRecord;

        r1 := @parameter0: java.util.ArrayList;

        i2 = 0;

     label1:
        $r3 = r0.<android.app.BackStackRecord: java.util.ArrayList mOps>;

        $i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if i2 >= $i1 goto label5;

        $r4 = r0.<android.app.BackStackRecord: java.util.ArrayList mOps>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r2 = (android.app.BackStackRecord$Op) $r5;

        i0 = r2.<android.app.BackStackRecord$Op: int cmd>;

        if i0 == 1 goto label3;

        if i0 == 3 goto label2;

        if i0 == 6 goto label2;

        if i0 == 7 goto label3;

        goto label4;

     label2:
        $r7 = r2.<android.app.BackStackRecord$Op: android.app.Fragment fragment>;

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        goto label4;

     label3:
        $r6 = r2.<android.app.BackStackRecord$Op: android.app.Fragment fragment>;

        virtualinvoke r1.<java.util.ArrayList: boolean remove(java.lang.Object)>($r6);

     label4:
        i2 = i2 + 1;

        goto label1;

     label5:
        return;
    }

    public static void <clinit>()
    {
        <android.app.BackStackRecord: java.lang.String TAG> = "FragmentManager";

        <android.app.BackStackRecord: int OP_UNSET_PRIMARY_NAV> = 9;

        <android.app.BackStackRecord: int OP_SHOW> = 5;

        <android.app.BackStackRecord: int OP_SET_PRIMARY_NAV> = 8;

        <android.app.BackStackRecord: int OP_REPLACE> = 2;

        <android.app.BackStackRecord: int OP_REMOVE> = 3;

        <android.app.BackStackRecord: int OP_NULL> = 0;

        <android.app.BackStackRecord: int OP_HIDE> = 4;

        <android.app.BackStackRecord: int OP_DETACH> = 6;

        <android.app.BackStackRecord: int OP_ATTACH> = 7;

        <android.app.BackStackRecord: int OP_ADD> = 1;

        return;
    }
}
