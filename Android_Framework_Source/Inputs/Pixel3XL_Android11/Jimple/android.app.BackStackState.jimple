final class android.app.BackStackState extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    final int mBreadCrumbShortTitleRes;
    final java.lang.CharSequence mBreadCrumbShortTitleText;
    final int mBreadCrumbTitleRes;
    final java.lang.CharSequence mBreadCrumbTitleText;
    final int mIndex;
    final java.lang.String mName;
    final int[] mOps;
    final boolean mReorderingAllowed;
    final java.util.ArrayList mSharedElementSourceNames;
    final java.util.ArrayList mSharedElementTargetNames;
    final int mTransition;
    final int mTransitionStyle;

    static void <clinit>()
    {
        android.app.BackStackState$1 $r0;

        $r0 = new android.app.BackStackState$1;

        specialinvoke $r0.<android.app.BackStackState$1: void <init>()>();

        <android.app.BackStackState: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    public void <init>(android.app.FragmentManagerImpl, android.app.BackStackRecord)
    {
        android.app.BackStackState r0;
        android.app.BackStackRecord r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, i14, i15, i16, i17, i18, i19;
        java.util.ArrayList $r2, $r8, $r9, $r10;
        int[] $r3, $r13, r17, r18, r19, r20, r21;
        boolean $z0, $z1;
        java.lang.IllegalStateException $r4;
        java.lang.String $r5;
        java.lang.CharSequence $r6, $r7;
        java.lang.Object $r11;
        android.app.Fragment $r12, $r14;
        android.app.FragmentManagerImpl r15;
        android.app.BackStackRecord$Op r16;

        r0 := @this: android.app.BackStackState;

        r15 := @parameter0: android.app.FragmentManagerImpl;

        r1 := @parameter1: android.app.BackStackRecord;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = r1.<android.app.BackStackRecord: java.util.ArrayList mOps>;

        i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        $i2 = i0 * 6;

        $r3 = newarray (int)[$i2];

        r0.<android.app.BackStackState: int[] mOps> = $r3;

        $z0 = r1.<android.app.BackStackRecord: boolean mAddToBackStack>;

        if $z0 == 0 goto label5;

        i13 = 0;

        i14 = 0;

     label1:
        if i14 >= i0 goto label4;

        $r10 = r1.<android.app.BackStackRecord: java.util.ArrayList mOps>;

        $r11 = virtualinvoke $r10.<java.util.ArrayList: java.lang.Object get(int)>(i14);

        r16 = (android.app.BackStackRecord$Op) $r11;

        r17 = r0.<android.app.BackStackState: int[] mOps>;

        i15 = i13 + 1;

        $i8 = r16.<android.app.BackStackRecord$Op: int cmd>;

        r17[i13] = $i8;

        r18 = r0.<android.app.BackStackState: int[] mOps>;

        i1 = i15 + 1;

        $r12 = r16.<android.app.BackStackRecord$Op: android.app.Fragment fragment>;

        if $r12 == null goto label2;

        $r14 = r16.<android.app.BackStackRecord$Op: android.app.Fragment fragment>;

        i16 = $r14.<android.app.Fragment: int mIndex>;

        goto label3;

     label2:
        i16 = -1;

     label3:
        r18[i15] = i16;

        r19 = r0.<android.app.BackStackState: int[] mOps>;

        i17 = i1 + 1;

        $i9 = r16.<android.app.BackStackRecord$Op: int enterAnim>;

        r19[i1] = $i9;

        r20 = r0.<android.app.BackStackState: int[] mOps>;

        i18 = i17 + 1;

        $i10 = r16.<android.app.BackStackRecord$Op: int exitAnim>;

        r20[i17] = $i10;

        r21 = r0.<android.app.BackStackState: int[] mOps>;

        i19 = i18 + 1;

        $i11 = r16.<android.app.BackStackRecord$Op: int popEnterAnim>;

        r21[i18] = $i11;

        $r13 = r0.<android.app.BackStackState: int[] mOps>;

        $i12 = r16.<android.app.BackStackRecord$Op: int popExitAnim>;

        $r13[i19] = $i12;

        i14 = i14 + 1;

        i13 = i19 + 1;

        goto label1;

     label4:
        $i3 = r1.<android.app.BackStackRecord: int mTransition>;

        r0.<android.app.BackStackState: int mTransition> = $i3;

        $i4 = r1.<android.app.BackStackRecord: int mTransitionStyle>;

        r0.<android.app.BackStackState: int mTransitionStyle> = $i4;

        $r5 = r1.<android.app.BackStackRecord: java.lang.String mName>;

        r0.<android.app.BackStackState: java.lang.String mName> = $r5;

        $i5 = r1.<android.app.BackStackRecord: int mIndex>;

        r0.<android.app.BackStackState: int mIndex> = $i5;

        $i6 = r1.<android.app.BackStackRecord: int mBreadCrumbTitleRes>;

        r0.<android.app.BackStackState: int mBreadCrumbTitleRes> = $i6;

        $r6 = r1.<android.app.BackStackRecord: java.lang.CharSequence mBreadCrumbTitleText>;

        r0.<android.app.BackStackState: java.lang.CharSequence mBreadCrumbTitleText> = $r6;

        $i7 = r1.<android.app.BackStackRecord: int mBreadCrumbShortTitleRes>;

        r0.<android.app.BackStackState: int mBreadCrumbShortTitleRes> = $i7;

        $r7 = r1.<android.app.BackStackRecord: java.lang.CharSequence mBreadCrumbShortTitleText>;

        r0.<android.app.BackStackState: java.lang.CharSequence mBreadCrumbShortTitleText> = $r7;

        $r8 = r1.<android.app.BackStackRecord: java.util.ArrayList mSharedElementSourceNames>;

        r0.<android.app.BackStackState: java.util.ArrayList mSharedElementSourceNames> = $r8;

        $r9 = r1.<android.app.BackStackRecord: java.util.ArrayList mSharedElementTargetNames>;

        r0.<android.app.BackStackState: java.util.ArrayList mSharedElementTargetNames> = $r9;

        $z1 = r1.<android.app.BackStackRecord: boolean mReorderingAllowed>;

        r0.<android.app.BackStackState: boolean mReorderingAllowed> = $z1;

        return;

     label5:
        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Not on back stack");

        throw $r4;
    }

    public void <init>(android.os.Parcel)
    {
        android.app.BackStackState r0;
        android.os.Parcel r1;
        int[] $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.String $r3;
        android.os.Parcelable$Creator $r4, $r7;
        java.lang.Object $r5, $r8;
        java.lang.CharSequence $r6, $r9;
        java.util.ArrayList $r10, $r11;
        boolean z0;

        r0 := @this: android.app.BackStackState;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = virtualinvoke r1.<android.os.Parcel: int[] createIntArray()>();

        r0.<android.app.BackStackState: int[] mOps> = $r2;

        $i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.app.BackStackState: int mTransition> = $i0;

        $i1 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.app.BackStackState: int mTransitionStyle> = $i1;

        $r3 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.app.BackStackState: java.lang.String mName> = $r3;

        $i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.app.BackStackState: int mIndex> = $i2;

        $i3 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.app.BackStackState: int mBreadCrumbTitleRes> = $i3;

        $r4 = <android.text.TextUtils: android.os.Parcelable$Creator CHAR_SEQUENCE_CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        $r6 = (java.lang.CharSequence) $r5;

        r0.<android.app.BackStackState: java.lang.CharSequence mBreadCrumbTitleText> = $r6;

        $i4 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.app.BackStackState: int mBreadCrumbShortTitleRes> = $i4;

        $r7 = <android.text.TextUtils: android.os.Parcelable$Creator CHAR_SEQUENCE_CREATOR>;

        $r8 = interfaceinvoke $r7.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        $r9 = (java.lang.CharSequence) $r8;

        r0.<android.app.BackStackState: java.lang.CharSequence mBreadCrumbShortTitleText> = $r9;

        $r10 = virtualinvoke r1.<android.os.Parcel: java.util.ArrayList createStringArrayList()>();

        r0.<android.app.BackStackState: java.util.ArrayList mSharedElementSourceNames> = $r10;

        $r11 = virtualinvoke r1.<android.os.Parcel: java.util.ArrayList createStringArrayList()>();

        r0.<android.app.BackStackState: java.util.ArrayList mSharedElementTargetNames> = $r11;

        $i5 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i5 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        r0.<android.app.BackStackState: boolean mReorderingAllowed> = z0;

        return;
    }

    public int describeContents()
    {
        android.app.BackStackState r0;

        r0 := @this: android.app.BackStackState;

        return 0;
    }

    public android.app.BackStackRecord instantiate(android.app.FragmentManagerImpl)
    {
        android.app.BackStackState r0;
        android.app.FragmentManagerImpl r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, i18, i19, i20, i21, i22, i23, i24;
        android.app.BackStackRecord $r4;
        int[] $r5, $r12, $r22, r25, r27, r28, r29, r30;
        java.lang.String $r6, $r24;
        java.lang.CharSequence $r7, $r8;
        java.util.ArrayList $r9, $r10;
        boolean $z0, $z1;
        android.app.BackStackRecord$Op $r11;
        android.util.SparseArray $r13;
        java.lang.Object $r14;
        android.app.Fragment $r15;
        java.lang.StringBuilder $r16;

        r0 := @this: android.app.BackStackState;

        r1 := @parameter0: android.app.FragmentManagerImpl;

        $r4 = new android.app.BackStackRecord;

        specialinvoke $r4.<android.app.BackStackRecord: void <init>(android.app.FragmentManagerImpl)>(r1);

        i18 = 0;

        i19 = 0;

     label1:
        $r5 = r0.<android.app.BackStackState: int[] mOps>;

        $i1 = lengthof $r5;

        if i18 >= $i1 goto label5;

        $r11 = new android.app.BackStackRecord$Op;

        specialinvoke $r11.<android.app.BackStackRecord$Op: void <init>()>();

        r25 = r0.<android.app.BackStackState: int[] mOps>;

        i20 = i18 + 1;

        $i7 = r25[i18];

        $r11.<android.app.BackStackRecord$Op: int cmd> = $i7;

        $z1 = <android.app.FragmentManagerImpl: boolean DEBUG>;

        if $z1 == 0 goto label2;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Instantiate ");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" op #");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i19);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" base fragment #");

        $r22 = r0.<android.app.BackStackState: int[] mOps>;

        $i16 = $r22[i20];

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i16);

        $r24 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r24);

     label2:
        r27 = r0.<android.app.BackStackState: int[] mOps>;

        i21 = i20 + 1;

        i22 = r27[i20];

        if i22 < 0 goto label3;

        $r13 = r1.<android.app.FragmentManagerImpl: android.util.SparseArray mActive>;

        $r14 = virtualinvoke $r13.<android.util.SparseArray: java.lang.Object get(int)>(i22);

        $r15 = (android.app.Fragment) $r14;

        $r11.<android.app.BackStackRecord$Op: android.app.Fragment fragment> = $r15;

        goto label4;

     label3:
        $r11.<android.app.BackStackRecord$Op: android.app.Fragment fragment> = null;

     label4:
        r28 = r0.<android.app.BackStackState: int[] mOps>;

        i0 = i21 + 1;

        $i8 = r28[i21];

        $r11.<android.app.BackStackRecord$Op: int enterAnim> = $i8;

        r29 = r0.<android.app.BackStackState: int[] mOps>;

        i23 = i0 + 1;

        $i9 = r29[i0];

        $r11.<android.app.BackStackRecord$Op: int exitAnim> = $i9;

        r30 = r0.<android.app.BackStackState: int[] mOps>;

        i24 = i23 + 1;

        $i10 = r30[i23];

        $r11.<android.app.BackStackRecord$Op: int popEnterAnim> = $i10;

        $r12 = r0.<android.app.BackStackState: int[] mOps>;

        $i11 = $r12[i24];

        $r11.<android.app.BackStackRecord$Op: int popExitAnim> = $i11;

        $i12 = $r11.<android.app.BackStackRecord$Op: int enterAnim>;

        $r4.<android.app.BackStackRecord: int mEnterAnim> = $i12;

        $i13 = $r11.<android.app.BackStackRecord$Op: int exitAnim>;

        $r4.<android.app.BackStackRecord: int mExitAnim> = $i13;

        $i14 = $r11.<android.app.BackStackRecord$Op: int popEnterAnim>;

        $r4.<android.app.BackStackRecord: int mPopEnterAnim> = $i14;

        $i15 = $r11.<android.app.BackStackRecord$Op: int popExitAnim>;

        $r4.<android.app.BackStackRecord: int mPopExitAnim> = $i15;

        virtualinvoke $r4.<android.app.BackStackRecord: void addOp(android.app.BackStackRecord$Op)>($r11);

        i19 = i19 + 1;

        i18 = i24 + 1;

        goto label1;

     label5:
        $i2 = r0.<android.app.BackStackState: int mTransition>;

        $r4.<android.app.BackStackRecord: int mTransition> = $i2;

        $i3 = r0.<android.app.BackStackState: int mTransitionStyle>;

        $r4.<android.app.BackStackRecord: int mTransitionStyle> = $i3;

        $r6 = r0.<android.app.BackStackState: java.lang.String mName>;

        $r4.<android.app.BackStackRecord: java.lang.String mName> = $r6;

        $i4 = r0.<android.app.BackStackState: int mIndex>;

        $r4.<android.app.BackStackRecord: int mIndex> = $i4;

        $r4.<android.app.BackStackRecord: boolean mAddToBackStack> = 1;

        $i5 = r0.<android.app.BackStackState: int mBreadCrumbTitleRes>;

        $r4.<android.app.BackStackRecord: int mBreadCrumbTitleRes> = $i5;

        $r7 = r0.<android.app.BackStackState: java.lang.CharSequence mBreadCrumbTitleText>;

        $r4.<android.app.BackStackRecord: java.lang.CharSequence mBreadCrumbTitleText> = $r7;

        $i6 = r0.<android.app.BackStackState: int mBreadCrumbShortTitleRes>;

        $r4.<android.app.BackStackRecord: int mBreadCrumbShortTitleRes> = $i6;

        $r8 = r0.<android.app.BackStackState: java.lang.CharSequence mBreadCrumbShortTitleText>;

        $r4.<android.app.BackStackRecord: java.lang.CharSequence mBreadCrumbShortTitleText> = $r8;

        $r9 = r0.<android.app.BackStackState: java.util.ArrayList mSharedElementSourceNames>;

        $r4.<android.app.BackStackRecord: java.util.ArrayList mSharedElementSourceNames> = $r9;

        $r10 = r0.<android.app.BackStackState: java.util.ArrayList mSharedElementTargetNames>;

        $r4.<android.app.BackStackRecord: java.util.ArrayList mSharedElementTargetNames> = $r10;

        $z0 = r0.<android.app.BackStackState: boolean mReorderingAllowed>;

        $r4.<android.app.BackStackRecord: boolean mReorderingAllowed> = $z0;

        virtualinvoke $r4.<android.app.BackStackRecord: void bumpBackStackNesting(int)>(1);

        return $r4;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.app.BackStackState r0;
        android.os.Parcel r1;
        int i0, $i1, $i2, $i3, $i4, $i5, i6;
        int[] $r2;
        java.lang.String $r3;
        java.lang.CharSequence $r4, $r5;
        java.util.ArrayList $r6, $r7;
        boolean $z0;

        r0 := @this: android.app.BackStackState;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $r2 = r0.<android.app.BackStackState: int[] mOps>;

        virtualinvoke r1.<android.os.Parcel: void writeIntArray(int[])>($r2);

        $i1 = r0.<android.app.BackStackState: int mTransition>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $i2 = r0.<android.app.BackStackState: int mTransitionStyle>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i2);

        $r3 = r0.<android.app.BackStackState: java.lang.String mName>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r3);

        $i3 = r0.<android.app.BackStackState: int mIndex>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i3);

        $i4 = r0.<android.app.BackStackState: int mBreadCrumbTitleRes>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i4);

        $r4 = r0.<android.app.BackStackState: java.lang.CharSequence mBreadCrumbTitleText>;

        staticinvoke <android.text.TextUtils: void writeToParcel(java.lang.CharSequence,android.os.Parcel,int)>($r4, r1, 0);

        $i5 = r0.<android.app.BackStackState: int mBreadCrumbShortTitleRes>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i5);

        $r5 = r0.<android.app.BackStackState: java.lang.CharSequence mBreadCrumbShortTitleText>;

        staticinvoke <android.text.TextUtils: void writeToParcel(java.lang.CharSequence,android.os.Parcel,int)>($r5, r1, 0);

        $r6 = r0.<android.app.BackStackState: java.util.ArrayList mSharedElementSourceNames>;

        virtualinvoke r1.<android.os.Parcel: void writeStringList(java.util.List)>($r6);

        $r7 = r0.<android.app.BackStackState: java.util.ArrayList mSharedElementTargetNames>;

        virtualinvoke r1.<android.os.Parcel: void writeStringList(java.util.List)>($r7);

        $z0 = r0.<android.app.BackStackState: boolean mReorderingAllowed>;

        i6 = (int) $z0;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i6);

        return;
    }
}
