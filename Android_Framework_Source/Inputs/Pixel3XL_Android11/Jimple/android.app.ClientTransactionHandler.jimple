public abstract class android.app.ClientTransactionHandler extends java.lang.Object
{

    public void <init>()
    {
        android.app.ClientTransactionHandler r0;

        r0 := @this: android.app.ClientTransactionHandler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public abstract void countLaunchingActivities(int);

    public void executeTransaction(android.app.servertransaction.ClientTransaction)
    {
        android.app.ClientTransactionHandler r0;
        android.app.servertransaction.ClientTransaction r1;
        android.app.servertransaction.TransactionExecutor $r2;

        r0 := @this: android.app.ClientTransactionHandler;

        r1 := @parameter0: android.app.servertransaction.ClientTransaction;

        virtualinvoke r1.<android.app.servertransaction.ClientTransaction: void preExecute(android.app.ClientTransactionHandler)>(r0);

        $r2 = virtualinvoke r0.<android.app.ClientTransactionHandler: android.app.servertransaction.TransactionExecutor getTransactionExecutor()>();

        virtualinvoke $r2.<android.app.servertransaction.TransactionExecutor: void execute(android.app.servertransaction.ClientTransaction)>(r1);

        virtualinvoke r1.<android.app.servertransaction.ClientTransaction: void recycle()>();

        return;
    }

    public abstract java.util.Map getActivitiesToBeDestroyed();

    public abstract android.app.Activity getActivity(android.os.IBinder);

    public abstract android.app.ActivityThread$ActivityClientRecord getActivityClient(android.os.IBinder);

    public abstract android.app.LoadedApk getPackageInfoNoCheck(android.content.pm.ApplicationInfo, android.content.res.CompatibilityInfo);

    abstract android.app.servertransaction.TransactionExecutor getTransactionExecutor();

    public abstract void handleActivityConfigurationChanged(android.os.IBinder, android.content.res.Configuration, int);

    public abstract void handleConfigurationChanged(android.content.res.Configuration);

    public abstract void handleDestroyActivity(android.os.IBinder, boolean, int, boolean, java.lang.String);

    public abstract void handleFixedRotationAdjustments(android.os.IBinder, android.view.DisplayAdjustments$FixedRotationAdjustments);

    public abstract android.app.Activity handleLaunchActivity(android.app.ActivityThread$ActivityClientRecord, android.app.servertransaction.PendingTransactionActions, android.content.Intent);

    public abstract void handleNewIntent(android.os.IBinder, java.util.List);

    public abstract void handlePauseActivity(android.os.IBinder, boolean, boolean, int, android.app.servertransaction.PendingTransactionActions, java.lang.String);

    public abstract void handlePictureInPictureRequested(android.os.IBinder);

    public abstract void handleRelaunchActivity(android.app.ActivityThread$ActivityClientRecord, android.app.servertransaction.PendingTransactionActions);

    public abstract void handleResumeActivity(android.os.IBinder, boolean, boolean, java.lang.String);

    public abstract void handleSendResult(android.os.IBinder, java.util.List, java.lang.String);

    public abstract void handleStartActivity(android.os.IBinder, android.app.servertransaction.PendingTransactionActions);

    public abstract void handleStopActivity(android.os.IBinder, int, android.app.servertransaction.PendingTransactionActions, boolean, java.lang.String);

    public abstract void handleTopResumedActivityChanged(android.os.IBinder, boolean, java.lang.String);

    public abstract void performRestartActivity(android.os.IBinder, boolean);

    public abstract android.app.ActivityThread$ActivityClientRecord prepareRelaunchActivity(android.os.IBinder, java.util.List, java.util.List, int, android.util.MergedConfiguration, boolean);

    public abstract void reportRelaunch(android.os.IBinder, android.app.servertransaction.PendingTransactionActions);

    public abstract void reportStop(android.app.servertransaction.PendingTransactionActions);

    void scheduleTransaction(android.app.servertransaction.ClientTransaction)
    {
        android.app.ClientTransactionHandler r0;
        android.app.servertransaction.ClientTransaction r1;

        r0 := @this: android.app.ClientTransactionHandler;

        r1 := @parameter0: android.app.servertransaction.ClientTransaction;

        virtualinvoke r1.<android.app.servertransaction.ClientTransaction: void preExecute(android.app.ClientTransactionHandler)>(r0);

        virtualinvoke r0.<android.app.ClientTransactionHandler: void sendMessage(int,java.lang.Object)>(159, r1);

        return;
    }

    abstract void sendMessage(int, java.lang.Object);

    public abstract void updatePendingActivityConfiguration(android.os.IBinder, android.content.res.Configuration);

    public abstract void updatePendingConfiguration(android.content.res.Configuration);

    public abstract void updateProcessState(int, boolean);
}
