public class android.app.DatePickerDialog extends android.app.AlertDialog implements android.content.DialogInterface$OnClickListener, android.widget.DatePicker$OnDateChangedListener
{
    private static final java.lang.String DAY;
    private static final java.lang.String MONTH;
    private static final java.lang.String YEAR;
    private final android.widget.DatePicker mDatePicker;
    private android.app.DatePickerDialog$OnDateSetListener mDateSetListener;
    private final android.widget.DatePicker$ValidationCallback mValidationCallback;

    public void <init>(android.content.Context)
    {
        android.app.DatePickerDialog r0;
        android.content.Context r1;
        java.util.Calendar $r2;

        r0 := @this: android.app.DatePickerDialog;

        r1 := @parameter0: android.content.Context;

        $r2 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        specialinvoke r0.<android.app.DatePickerDialog: void <init>(android.content.Context,int,android.app.DatePickerDialog$OnDateSetListener,java.util.Calendar,int,int,int)>(r1, 0, null, $r2, -1, -1, -1);

        return;
    }

    public void <init>(android.content.Context, int)
    {
        android.app.DatePickerDialog r0;
        android.content.Context r1;
        int i0;
        java.util.Calendar $r2;

        r0 := @this: android.app.DatePickerDialog;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        $r2 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        specialinvoke r0.<android.app.DatePickerDialog: void <init>(android.content.Context,int,android.app.DatePickerDialog$OnDateSetListener,java.util.Calendar,int,int,int)>(r1, i0, null, $r2, -1, -1, -1);

        return;
    }

    public void <init>(android.content.Context, int, android.app.DatePickerDialog$OnDateSetListener, int, int, int)
    {
        android.app.DatePickerDialog r0;
        android.content.Context r1;
        int i0, i1, i2, i3;
        android.app.DatePickerDialog$OnDateSetListener r2;

        r0 := @this: android.app.DatePickerDialog;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r2 := @parameter2: android.app.DatePickerDialog$OnDateSetListener;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        specialinvoke r0.<android.app.DatePickerDialog: void <init>(android.content.Context,int,android.app.DatePickerDialog$OnDateSetListener,java.util.Calendar,int,int,int)>(r1, i0, r2, null, i1, i2, i3);

        return;
    }

    private void <init>(android.content.Context, int, android.app.DatePickerDialog$OnDateSetListener, java.util.Calendar, int, int, int)
    {
        android.app.DatePickerDialog r0;
        int i0, $i1, i2, i3, i4;
        android.app.DatePickerDialog$OnDateSetListener r1;
        java.util.Calendar r2;
        android.content.Context r3, r11;
        android.app.DatePickerDialog$1 $r4;
        android.view.LayoutInflater $r5;
        java.lang.String $r6, $r7;
        android.view.View $r8, r12;
        android.widget.DatePicker$ValidationCallback $r9;
        android.widget.DatePicker $r10, r13;

        r0 := @this: android.app.DatePickerDialog;

        r11 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r1 := @parameter2: android.app.DatePickerDialog$OnDateSetListener;

        r2 := @parameter3: java.util.Calendar;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        i4 := @parameter6: int;

        $i1 = staticinvoke <android.app.DatePickerDialog: int resolveDialogTheme(android.content.Context,int)>(r11, i0);

        specialinvoke r0.<android.app.AlertDialog: void <init>(android.content.Context,int)>(r11, $i1);

        $r4 = new android.app.DatePickerDialog$1;

        specialinvoke $r4.<android.app.DatePickerDialog$1: void <init>(android.app.DatePickerDialog)>(r0);

        r0.<android.app.DatePickerDialog: android.widget.DatePicker$ValidationCallback mValidationCallback> = $r4;

        r3 = virtualinvoke r0.<android.app.DatePickerDialog: android.content.Context getContext()>();

        $r5 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>(r3);

        r12 = virtualinvoke $r5.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>(17367138, null);

        virtualinvoke r0.<android.app.DatePickerDialog: void setView(android.view.View)>(r12);

        $r6 = virtualinvoke r3.<android.content.Context: java.lang.String getString(int)>(17039370);

        virtualinvoke r0.<android.app.DatePickerDialog: void setButton(int,java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>(-1, $r6, r0);

        $r7 = virtualinvoke r3.<android.content.Context: java.lang.String getString(int)>(17039360);

        virtualinvoke r0.<android.app.DatePickerDialog: void setButton(int,java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>(-2, $r7, r0);

        virtualinvoke r0.<android.app.DatePickerDialog: void setButtonPanelLayoutHint(int)>(1);

        if r2 == null goto label1;

        i2 = virtualinvoke r2.<java.util.Calendar: int get(int)>(1);

        i3 = virtualinvoke r2.<java.util.Calendar: int get(int)>(2);

        i4 = virtualinvoke r2.<java.util.Calendar: int get(int)>(5);

     label1:
        $r8 = virtualinvoke r12.<android.view.View: android.view.View findViewById(int)>(16908906);

        r13 = (android.widget.DatePicker) $r8;

        r0.<android.app.DatePickerDialog: android.widget.DatePicker mDatePicker> = r13;

        virtualinvoke r13.<android.widget.DatePicker: void init(int,int,int,android.widget.DatePicker$OnDateChangedListener)>(i2, i3, i4, r0);

        $r10 = r0.<android.app.DatePickerDialog: android.widget.DatePicker mDatePicker>;

        $r9 = r0.<android.app.DatePickerDialog: android.widget.DatePicker$ValidationCallback mValidationCallback>;

        virtualinvoke $r10.<android.widget.DatePicker: void setValidationCallback(android.widget.DatePicker$ValidationCallback)>($r9);

        r0.<android.app.DatePickerDialog: android.app.DatePickerDialog$OnDateSetListener mDateSetListener> = r1;

        return;
    }

    public void <init>(android.content.Context, android.app.DatePickerDialog$OnDateSetListener, int, int, int)
    {
        android.app.DatePickerDialog r0;
        android.content.Context r1;
        android.app.DatePickerDialog$OnDateSetListener r2;
        int i0, i1, i2;

        r0 := @this: android.app.DatePickerDialog;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.app.DatePickerDialog$OnDateSetListener;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        specialinvoke r0.<android.app.DatePickerDialog: void <init>(android.content.Context,int,android.app.DatePickerDialog$OnDateSetListener,java.util.Calendar,int,int,int)>(r1, 0, r2, null, i0, i1, i2);

        return;
    }

    static int resolveDialogTheme(android.content.Context, int)
    {
        android.content.Context r0;
        int i0, $i1;
        android.util.TypedValue $r2;
        android.content.res.Resources$Theme $r3;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        if i0 != 0 goto label1;

        $r2 = new android.util.TypedValue;

        specialinvoke $r2.<android.util.TypedValue: void <init>()>();

        $r3 = virtualinvoke r0.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        virtualinvoke $r3.<android.content.res.Resources$Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>(16843948, $r2, 1);

        $i1 = $r2.<android.util.TypedValue: int resourceId>;

        return $i1;

     label1:
        return i0;
    }

    public android.widget.DatePicker getDatePicker()
    {
        android.app.DatePickerDialog r0;
        android.widget.DatePicker $r1;

        r0 := @this: android.app.DatePickerDialog;

        $r1 = r0.<android.app.DatePickerDialog: android.widget.DatePicker mDatePicker>;

        return $r1;
    }

    public void onClick(android.content.DialogInterface, int)
    {
        android.app.DatePickerDialog r0;
        int i0, $i1, $i2, $i3;
        android.app.DatePickerDialog$OnDateSetListener r1, $r2;
        android.widget.DatePicker $r3, $r4, $r5, r7;
        android.content.DialogInterface r6;

        r0 := @this: android.app.DatePickerDialog;

        r6 := @parameter0: android.content.DialogInterface;

        i0 := @parameter1: int;

        if i0 == -2 goto label2;

        if i0 == -1 goto label1;

        goto label3;

     label1:
        $r2 = r0.<android.app.DatePickerDialog: android.app.DatePickerDialog$OnDateSetListener mDateSetListener>;

        if $r2 == null goto label3;

        $r3 = r0.<android.app.DatePickerDialog: android.widget.DatePicker mDatePicker>;

        virtualinvoke $r3.<android.widget.DatePicker: void clearFocus()>();

        r1 = r0.<android.app.DatePickerDialog: android.app.DatePickerDialog$OnDateSetListener mDateSetListener>;

        r7 = r0.<android.app.DatePickerDialog: android.widget.DatePicker mDatePicker>;

        $i1 = virtualinvoke r7.<android.widget.DatePicker: int getYear()>();

        $r4 = r0.<android.app.DatePickerDialog: android.widget.DatePicker mDatePicker>;

        $i2 = virtualinvoke $r4.<android.widget.DatePicker: int getMonth()>();

        $r5 = r0.<android.app.DatePickerDialog: android.widget.DatePicker mDatePicker>;

        $i3 = virtualinvoke $r5.<android.widget.DatePicker: int getDayOfMonth()>();

        interfaceinvoke r1.<android.app.DatePickerDialog$OnDateSetListener: void onDateSet(android.widget.DatePicker,int,int,int)>(r7, $i1, $i2, $i3);

        goto label3;

     label2:
        virtualinvoke r0.<android.app.DatePickerDialog: void cancel()>();

     label3:
        return;
    }

    public void onDateChanged(android.widget.DatePicker, int, int, int)
    {
        android.app.DatePickerDialog r0;
        android.widget.DatePicker r1, $r2;
        int i0, i1, i2;

        r0 := @this: android.app.DatePickerDialog;

        r1 := @parameter0: android.widget.DatePicker;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r2 = r0.<android.app.DatePickerDialog: android.widget.DatePicker mDatePicker>;

        virtualinvoke $r2.<android.widget.DatePicker: void init(int,int,int,android.widget.DatePicker$OnDateChangedListener)>(i0, i1, i2, r0);

        return;
    }

    public void onRestoreInstanceState(android.os.Bundle)
    {
        android.app.DatePickerDialog r0;
        android.os.Bundle r1;
        int i0, i1, i2;
        android.widget.DatePicker $r2;

        r0 := @this: android.app.DatePickerDialog;

        r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<android.app.AlertDialog: void onRestoreInstanceState(android.os.Bundle)>(r1);

        i0 = virtualinvoke r1.<android.os.Bundle: int getInt(java.lang.String)>("year");

        i1 = virtualinvoke r1.<android.os.Bundle: int getInt(java.lang.String)>("month");

        i2 = virtualinvoke r1.<android.os.Bundle: int getInt(java.lang.String)>("day");

        $r2 = r0.<android.app.DatePickerDialog: android.widget.DatePicker mDatePicker>;

        virtualinvoke $r2.<android.widget.DatePicker: void init(int,int,int,android.widget.DatePicker$OnDateChangedListener)>(i0, i1, i2, r0);

        return;
    }

    public android.os.Bundle onSaveInstanceState()
    {
        android.app.DatePickerDialog r0;
        android.os.Bundle r1;
        android.widget.DatePicker $r2, $r3, $r4;
        int $i0, $i1, $i2;

        r0 := @this: android.app.DatePickerDialog;

        r1 = specialinvoke r0.<android.app.AlertDialog: android.os.Bundle onSaveInstanceState()>();

        $r2 = r0.<android.app.DatePickerDialog: android.widget.DatePicker mDatePicker>;

        $i0 = virtualinvoke $r2.<android.widget.DatePicker: int getYear()>();

        virtualinvoke r1.<android.os.Bundle: void putInt(java.lang.String,int)>("year", $i0);

        $r3 = r0.<android.app.DatePickerDialog: android.widget.DatePicker mDatePicker>;

        $i1 = virtualinvoke $r3.<android.widget.DatePicker: int getMonth()>();

        virtualinvoke r1.<android.os.Bundle: void putInt(java.lang.String,int)>("month", $i1);

        $r4 = r0.<android.app.DatePickerDialog: android.widget.DatePicker mDatePicker>;

        $i2 = virtualinvoke $r4.<android.widget.DatePicker: int getDayOfMonth()>();

        virtualinvoke r1.<android.os.Bundle: void putInt(java.lang.String,int)>("day", $i2);

        return r1;
    }

    public void setOnDateSetListener(android.app.DatePickerDialog$OnDateSetListener)
    {
        android.app.DatePickerDialog r0;
        android.app.DatePickerDialog$OnDateSetListener r1;

        r0 := @this: android.app.DatePickerDialog;

        r1 := @parameter0: android.app.DatePickerDialog$OnDateSetListener;

        r0.<android.app.DatePickerDialog: android.app.DatePickerDialog$OnDateSetListener mDateSetListener> = r1;

        return;
    }

    public void updateDate(int, int, int)
    {
        android.app.DatePickerDialog r0;
        int i0, i1, i2;
        android.widget.DatePicker $r1;

        r0 := @this: android.app.DatePickerDialog;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r1 = r0.<android.app.DatePickerDialog: android.widget.DatePicker mDatePicker>;

        virtualinvoke $r1.<android.widget.DatePicker: void updateDate(int,int,int)>(i0, i1, i2);

        return;
    }

    public static void <clinit>()
    {
        <android.app.DatePickerDialog: java.lang.String YEAR> = "year";

        <android.app.DatePickerDialog: java.lang.String MONTH> = "month";

        <android.app.DatePickerDialog: java.lang.String DAY> = "day";

        return;
    }
}
