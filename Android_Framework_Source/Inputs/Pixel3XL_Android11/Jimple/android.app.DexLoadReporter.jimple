class android.app.DexLoadReporter extends java.lang.Object implements dalvik.system.BaseDexClassLoader$Reporter
{
    private static final boolean DEBUG;
    private static final android.app.DexLoadReporter INSTANCE;
    private static final java.lang.String TAG;
    private final java.util.Set mDataDirs;

    static void <clinit>()
    {
        android.app.DexLoadReporter $r0;

        <android.app.DexLoadReporter: java.lang.String TAG> = "DexLoadReporter";

        <android.app.DexLoadReporter: boolean DEBUG> = 0;

        $r0 = new android.app.DexLoadReporter;

        specialinvoke $r0.<android.app.DexLoadReporter: void <init>()>();

        <android.app.DexLoadReporter: android.app.DexLoadReporter INSTANCE> = $r0;

        return;
    }

    private void <init>()
    {
        android.app.DexLoadReporter r0;
        java.util.HashSet $r1;

        r0 := @this: android.app.DexLoadReporter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        r0.<android.app.DexLoadReporter: java.util.Set mDataDirs> = $r1;

        return;
    }

    static android.app.DexLoadReporter getInstance()
    {
        android.app.DexLoadReporter $r0;

        $r0 = <android.app.DexLoadReporter: android.app.DexLoadReporter INSTANCE>;

        return $r0;
    }

    private boolean isSecondaryDexFile(java.lang.String, java.lang.String[])
    {
        android.app.DexLoadReporter r0;
        java.lang.String r1, $r3;
        java.lang.String[] r2;
        int i0, i1;
        boolean $z0;

        r0 := @this: android.app.DexLoadReporter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String[];

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r3 = r2[i1];

        $z0 = staticinvoke <android.os.FileUtils: boolean contains(java.lang.String,java.lang.String)>($r3, r1);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    private void notifyPackageManager(java.util.Map)
    {
        android.app.DexLoadReporter r0;
        java.lang.String r1, $r5, $r10;
        android.content.pm.IPackageManager $r3;
        dalvik.system.VMRuntime $r4;
        android.os.RemoteException $r6;
        java.lang.StringBuilder $r7;
        java.util.Map r11;

        r0 := @this: android.app.DexLoadReporter;

        r11 := @parameter0: java.util.Map;

        r1 = staticinvoke <android.app.ActivityThread: java.lang.String currentPackageName()>();

     label1:
        $r3 = staticinvoke <android.app.ActivityThread: android.content.pm.IPackageManager getPackageManager()>();

        $r4 = staticinvoke <dalvik.system.VMRuntime: dalvik.system.VMRuntime getRuntime()>();

        $r5 = virtualinvoke $r4.<dalvik.system.VMRuntime: java.lang.String vmInstructionSet()>();

        interfaceinvoke $r3.<android.content.pm.IPackageManager: void notifyDexLoad(java.lang.String,java.util.Map,java.lang.String)>(r1, r11, $r5);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to notify PM about dex load for package ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("DexLoadReporter", $r10, $r6);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private void registerSecondaryDexForProfiling(java.lang.String, java.lang.String[])
    {
        android.app.DexLoadReporter r0;
        boolean $z0, $z1, $z3;
        java.lang.String $r4, $r6, $r10, $r11, $r16, $r22, $r24, r25;
        java.lang.String[] $r12, r26;
        java.lang.Throwable $r17;
        java.io.File r33, r34, r36;
        java.lang.StringBuilder r35, r37, r38;
        java.io.IOException r39;

        r0 := @this: android.app.DexLoadReporter;

        r25 := @parameter0: java.lang.String;

        r26 := @parameter1: java.lang.String[];

        $z0 = specialinvoke r0.<android.app.DexLoadReporter: boolean isSecondaryDexFile(java.lang.String,java.lang.String[])>(r25, r26);

        if $z0 != 0 goto label1;

        return;

     label1:
        r33 = new java.io.File;

        specialinvoke r33.<java.io.File: void <init>(java.lang.String)>(r25);

        r34 = new java.io.File;

        $r4 = virtualinvoke r33.<java.io.File: java.lang.String getParent()>();

        specialinvoke r34.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r4, "oat");

        r35 = new java.lang.StringBuilder;

        specialinvoke r35.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r33.<java.io.File: java.lang.String getName()>();

        virtualinvoke r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".cur.prof");

        r36 = new java.io.File;

        $r10 = virtualinvoke r35.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r36.<java.io.File: void <init>(java.io.File,java.lang.String)>(r34, $r10);

        $z1 = virtualinvoke r34.<java.io.File: boolean exists()>();

        if $z1 != 0 goto label2;

        $z3 = virtualinvoke r34.<java.io.File: boolean mkdir()>();

        if $z3 != 0 goto label2;

        r37 = new java.lang.StringBuilder;

        specialinvoke r37.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not create the profile directory: ");

        virtualinvoke r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r36);

        $r16 = virtualinvoke r37.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("DexLoadReporter", $r16);

        return;

     label2:
        virtualinvoke r36.<java.io.File: boolean createNewFile()>();

     label3:
        $r11 = virtualinvoke r36.<java.io.File: java.lang.String getPath()>();

        $r12 = newarray (java.lang.String)[1];

        $r12[0] = r25;

        staticinvoke <dalvik.system.VMRuntime: void registerAppInfo(java.lang.String,java.lang.String[])>($r11, $r12);

        return;

     label4:
        $r17 := @caughtexception;

        r38 = new java.lang.StringBuilder;

        specialinvoke r38.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to create profile for secondary dex ");

        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r25);

        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        r39 = (java.io.IOException) $r17;

        $r22 = virtualinvoke r39.<java.io.IOException: java.lang.String getMessage()>();

        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke r38.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("DexLoadReporter", $r24);

        return;

        catch java.io.IOException from label2 to label3 with label4;
    }

    private void registerSecondaryDexForProfiling(java.util.Set)
    {
        android.app.DexLoadReporter r0;
        java.util.Set r1, $r4, r9;
        java.lang.String[] r2, $r3;
        boolean $z0, $z1;
        java.lang.Object[] $r5;
        java.lang.Object $r6;
        java.lang.String $r7;
        java.lang.Throwable $r8;
        java.util.Iterator r10;

        r0 := @this: android.app.DexLoadReporter;

        r9 := @parameter0: java.util.Set;

        $z0 = staticinvoke <android.os.SystemProperties: boolean getBoolean(java.lang.String,boolean)>("dalvik.vm.dexopt.secondary", 0);

        if $z0 != 0 goto label1;

        return;

     label1:
        r1 = r0.<android.app.DexLoadReporter: java.util.Set mDataDirs>;

        entermonitor r1;

     label2:
        $r4 = r0.<android.app.DexLoadReporter: java.util.Set mDataDirs>;

        $r3 = newarray (java.lang.String)[0];

        $r5 = interfaceinvoke $r4.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        r2 = (java.lang.String[]) $r5;

        exitmonitor r1;

     label3:
        r10 = interfaceinvoke r9.<java.util.Set: java.util.Iterator iterator()>();

     label4:
        $z1 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r6 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (java.lang.String) $r6;

        specialinvoke r0.<android.app.DexLoadReporter: void registerSecondaryDexForProfiling(java.lang.String,java.lang.String[])>($r7, r2);

        goto label4;

     label5:
        return;

     label6:
        $r8 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r8;

        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    void registerAppDataDir(java.lang.String, java.lang.String)
    {
        android.app.DexLoadReporter r0;
        java.util.Set $r1, r5;
        java.lang.Throwable $r2;
        java.lang.String r3, r4;

        r0 := @this: android.app.DexLoadReporter;

        r3 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        if r4 == null goto label6;

        r5 = r0.<android.app.DexLoadReporter: java.util.Set mDataDirs>;

        entermonitor r5;

     label1:
        $r1 = r0.<android.app.DexLoadReporter: java.util.Set mDataDirs>;

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>(r4);

        exitmonitor r5;

     label2:
        goto label6;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r5;

     label5:
        throw $r2;

     label6:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void report(java.util.Map)
    {
        android.app.DexLoadReporter r0;
        java.util.Map r1;
        boolean $z0;
        java.util.Set $r2;

        r0 := @this: android.app.DexLoadReporter;

        r1 := @parameter0: java.util.Map;

        $z0 = interfaceinvoke r1.<java.util.Map: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("DexLoadReporter", "Bad call to DexLoadReporter: empty classLoaderContextMap");

        return;

     label1:
        specialinvoke r0.<android.app.DexLoadReporter: void notifyPackageManager(java.util.Map)>(r1);

        $r2 = interfaceinvoke r1.<java.util.Map: java.util.Set keySet()>();

        specialinvoke r0.<android.app.DexLoadReporter: void registerSecondaryDexForProfiling(java.util.Set)>($r2);

        return;
    }
}
