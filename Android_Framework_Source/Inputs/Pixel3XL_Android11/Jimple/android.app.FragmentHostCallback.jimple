public abstract class android.app.FragmentHostCallback extends android.app.FragmentContainer
{
    private final android.app.Activity mActivity;
    private android.util.ArrayMap mAllLoaderManagers;
    private boolean mCheckedForLoaderManager;
    final android.content.Context mContext;
    final android.app.FragmentManagerImpl mFragmentManager;
    private final android.os.Handler mHandler;
    private android.app.LoaderManagerImpl mLoaderManager;
    private boolean mLoadersStarted;
    private boolean mRetainLoaders;
    final int mWindowAnimations;

    void <init>(android.app.Activity)
    {
        android.app.FragmentHostCallback r0;
        android.app.Activity r1;
        android.os.Handler $r2;

        r0 := @this: android.app.FragmentHostCallback;

        r1 := @parameter0: android.app.Activity;

        $r2 = r1.<android.app.Activity: android.os.Handler mHandler>;

        specialinvoke r0.<android.app.FragmentHostCallback: void <init>(android.app.Activity,android.content.Context,android.os.Handler,int)>(r1, r1, $r2, 0);

        return;
    }

    void <init>(android.app.Activity, android.content.Context, android.os.Handler, int)
    {
        android.app.FragmentHostCallback r0;
        android.app.Activity r1;
        android.content.Context r2;
        android.os.Handler r3;
        int i0;
        android.app.FragmentManagerImpl $r4;

        r0 := @this: android.app.FragmentHostCallback;

        r1 := @parameter0: android.app.Activity;

        r2 := @parameter1: android.content.Context;

        r3 := @parameter2: android.os.Handler;

        i0 := @parameter3: int;

        specialinvoke r0.<android.app.FragmentContainer: void <init>()>();

        $r4 = new android.app.FragmentManagerImpl;

        specialinvoke $r4.<android.app.FragmentManagerImpl: void <init>()>();

        r0.<android.app.FragmentHostCallback: android.app.FragmentManagerImpl mFragmentManager> = $r4;

        r0.<android.app.FragmentHostCallback: android.app.Activity mActivity> = r1;

        r0.<android.app.FragmentHostCallback: android.content.Context mContext> = r2;

        r0.<android.app.FragmentHostCallback: android.os.Handler mHandler> = r3;

        r0.<android.app.FragmentHostCallback: int mWindowAnimations> = i0;

        return;
    }

    public void <init>(android.content.Context, android.os.Handler, int)
    {
        android.app.FragmentHostCallback r0;
        android.content.Context r1;
        android.os.Handler r2, $r3;
        int i0;
        boolean $z0;
        android.app.Activity r4;

        r0 := @this: android.app.FragmentHostCallback;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.os.Handler;

        i0 := @parameter2: int;

        $z0 = r1 instanceof android.app.Activity;

        if $z0 == 0 goto label1;

        r4 = (android.app.Activity) r1;

        goto label2;

     label1:
        r4 = null;

     label2:
        $r3 = staticinvoke <android.app.FragmentHostCallback: android.os.Handler chooseHandler(android.content.Context,android.os.Handler)>(r1, r2);

        specialinvoke r0.<android.app.FragmentHostCallback: void <init>(android.app.Activity,android.content.Context,android.os.Handler,int)>(r4, r1, $r3, i0);

        return;
    }

    private static android.os.Handler chooseHandler(android.content.Context, android.os.Handler)
    {
        android.content.Context r0;
        android.os.Handler r1, $r3;
        boolean $z0;
        android.app.Activity $r2;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.os.Handler;

        if r1 != null goto label1;

        $z0 = r0 instanceof android.app.Activity;

        if $z0 == 0 goto label1;

        $r2 = (android.app.Activity) r0;

        $r3 = $r2.<android.app.Activity: android.os.Handler mHandler>;

        return $r3;

     label1:
        return r1;
    }

    void doLoaderDestroy()
    {
        android.app.FragmentHostCallback r0;
        android.app.LoaderManagerImpl r1;

        r0 := @this: android.app.FragmentHostCallback;

        r1 = r0.<android.app.FragmentHostCallback: android.app.LoaderManagerImpl mLoaderManager>;

        if r1 != null goto label1;

        return;

     label1:
        virtualinvoke r1.<android.app.LoaderManagerImpl: void doDestroy()>();

        return;
    }

    void doLoaderRetain()
    {
        android.app.FragmentHostCallback r0;
        android.app.LoaderManagerImpl r1;

        r0 := @this: android.app.FragmentHostCallback;

        r1 = r0.<android.app.FragmentHostCallback: android.app.LoaderManagerImpl mLoaderManager>;

        if r1 != null goto label1;

        return;

     label1:
        virtualinvoke r1.<android.app.LoaderManagerImpl: void doRetain()>();

        return;
    }

    void doLoaderStart()
    {
        android.app.FragmentHostCallback r0;
        android.app.LoaderManagerImpl r1, $r2;
        boolean $z0, $z1;

        r0 := @this: android.app.FragmentHostCallback;

        $z0 = r0.<android.app.FragmentHostCallback: boolean mLoadersStarted>;

        if $z0 == 0 goto label1;

        return;

     label1:
        r0.<android.app.FragmentHostCallback: boolean mLoadersStarted> = 1;

        r1 = r0.<android.app.FragmentHostCallback: android.app.LoaderManagerImpl mLoaderManager>;

        if r1 == null goto label2;

        virtualinvoke r1.<android.app.LoaderManagerImpl: void doStart()>();

        goto label3;

     label2:
        $z1 = r0.<android.app.FragmentHostCallback: boolean mCheckedForLoaderManager>;

        if $z1 != 0 goto label3;

        $r2 = virtualinvoke r0.<android.app.FragmentHostCallback: android.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean)>("(root)", 1, 0);

        r0.<android.app.FragmentHostCallback: android.app.LoaderManagerImpl mLoaderManager> = $r2;

     label3:
        r0.<android.app.FragmentHostCallback: boolean mCheckedForLoaderManager> = 1;

        return;
    }

    void doLoaderStop(boolean)
    {
        android.app.FragmentHostCallback r0;
        boolean z0, $z1;
        android.app.LoaderManagerImpl r1;

        r0 := @this: android.app.FragmentHostCallback;

        z0 := @parameter0: boolean;

        r0.<android.app.FragmentHostCallback: boolean mRetainLoaders> = z0;

        r1 = r0.<android.app.FragmentHostCallback: android.app.LoaderManagerImpl mLoaderManager>;

        if r1 != null goto label1;

        return;

     label1:
        $z1 = r0.<android.app.FragmentHostCallback: boolean mLoadersStarted>;

        if $z1 != 0 goto label2;

        return;

     label2:
        r0.<android.app.FragmentHostCallback: boolean mLoadersStarted> = 0;

        if z0 == 0 goto label3;

        virtualinvoke r1.<android.app.LoaderManagerImpl: void doRetain()>();

        goto label4;

     label3:
        virtualinvoke r1.<android.app.LoaderManagerImpl: void doStop()>();

     label4:
        return;
    }

    void dumpLoaders(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        android.app.FragmentHostCallback r0;
        java.lang.String r1, $r9, $r13;
        java.io.FileDescriptor r2;
        java.io.PrintWriter r3;
        java.lang.String[] r4;
        android.app.LoaderManagerImpl r5, $r7, $r8;
        boolean $z0;
        int $i0;
        java.lang.StringBuilder $r10;

        r0 := @this: android.app.FragmentHostCallback;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.io.FileDescriptor;

        r3 := @parameter2: java.io.PrintWriter;

        r4 := @parameter3: java.lang.String[];

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>("mLoadersStarted=");

        $z0 = r0.<android.app.FragmentHostCallback: boolean mLoadersStarted>;

        virtualinvoke r3.<java.io.PrintWriter: void println(boolean)>($z0);

        $r7 = r0.<android.app.FragmentHostCallback: android.app.LoaderManagerImpl mLoaderManager>;

        if $r7 == null goto label1;

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>("Loader Manager ");

        $r8 = r0.<android.app.FragmentHostCallback: android.app.LoaderManagerImpl mLoaderManager>;

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>($r8);

        $r9 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>($r9);

        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.String)>(":");

        r5 = r0.<android.app.FragmentHostCallback: android.app.LoaderManagerImpl mLoaderManager>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r5.<android.app.LoaderManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>($r13, r2, r3, r4);

     label1:
        return;
    }

    android.app.Activity getActivity()
    {
        android.app.FragmentHostCallback r0;
        android.app.Activity $r1;

        r0 := @this: android.app.FragmentHostCallback;

        $r1 = r0.<android.app.FragmentHostCallback: android.app.Activity mActivity>;

        return $r1;
    }

    android.content.Context getContext()
    {
        android.app.FragmentHostCallback r0;
        android.content.Context $r1;

        r0 := @this: android.app.FragmentHostCallback;

        $r1 = r0.<android.app.FragmentHostCallback: android.content.Context mContext>;

        return $r1;
    }

    android.app.FragmentManagerImpl getFragmentManagerImpl()
    {
        android.app.FragmentHostCallback r0;
        android.app.FragmentManagerImpl $r1;

        r0 := @this: android.app.FragmentHostCallback;

        $r1 = r0.<android.app.FragmentHostCallback: android.app.FragmentManagerImpl mFragmentManager>;

        return $r1;
    }

    android.os.Handler getHandler()
    {
        android.app.FragmentHostCallback r0;
        android.os.Handler $r1;

        r0 := @this: android.app.FragmentHostCallback;

        $r1 = r0.<android.app.FragmentHostCallback: android.os.Handler mHandler>;

        return $r1;
    }

    android.app.LoaderManagerImpl getLoaderManager(java.lang.String, boolean, boolean)
    {
        android.app.FragmentHostCallback r0;
        boolean z0, z1, $z2;
        android.util.ArrayMap $r1, $r2, $r5, $r7;
        java.lang.Object $r3;
        android.app.LoaderManagerImpl $r4, r9, r11;
        java.lang.String r8;

        r0 := @this: android.app.FragmentHostCallback;

        r8 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        $r1 = r0.<android.app.FragmentHostCallback: android.util.ArrayMap mAllLoaderManagers>;

        if $r1 != null goto label1;

        $r7 = new android.util.ArrayMap;

        specialinvoke $r7.<android.util.ArrayMap: void <init>()>();

        r0.<android.app.FragmentHostCallback: android.util.ArrayMap mAllLoaderManagers> = $r7;

     label1:
        $r2 = r0.<android.app.FragmentHostCallback: android.util.ArrayMap mAllLoaderManagers>;

        $r3 = virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r8);

        r9 = (android.app.LoaderManagerImpl) $r3;

        if r9 != null goto label2;

        if z1 == 0 goto label2;

        $r4 = new android.app.LoaderManagerImpl;

        specialinvoke $r4.<android.app.LoaderManagerImpl: void <init>(java.lang.String,android.app.FragmentHostCallback,boolean)>(r8, r0, z0);

        $r5 = r0.<android.app.FragmentHostCallback: android.util.ArrayMap mAllLoaderManagers>;

        virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r8, $r4);

        r11 = $r4;

        goto label3;

     label2:
        r11 = r9;

        if z0 == 0 goto label3;

        r11 = r9;

        if r9 == null goto label3;

        r11 = r9;

        $z2 = r9.<android.app.LoaderManagerImpl: boolean mStarted>;

        if $z2 != 0 goto label3;

        virtualinvoke r9.<android.app.LoaderManagerImpl: void doStart()>();

        r11 = r9;

     label3:
        return r11;
    }

    android.app.LoaderManagerImpl getLoaderManagerImpl()
    {
        android.app.FragmentHostCallback r0;
        boolean $z0;
        android.app.LoaderManagerImpl r1, r2;

        r0 := @this: android.app.FragmentHostCallback;

        r1 = r0.<android.app.FragmentHostCallback: android.app.LoaderManagerImpl mLoaderManager>;

        if r1 == null goto label1;

        return r1;

     label1:
        r0.<android.app.FragmentHostCallback: boolean mCheckedForLoaderManager> = 1;

        $z0 = r0.<android.app.FragmentHostCallback: boolean mLoadersStarted>;

        r2 = virtualinvoke r0.<android.app.FragmentHostCallback: android.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean)>("(root)", $z0, 1);

        r0.<android.app.FragmentHostCallback: android.app.LoaderManagerImpl mLoaderManager> = r2;

        return r2;
    }

    boolean getRetainLoaders()
    {
        android.app.FragmentHostCallback r0;
        boolean $z0;

        r0 := @this: android.app.FragmentHostCallback;

        $z0 = r0.<android.app.FragmentHostCallback: boolean mRetainLoaders>;

        return $z0;
    }

    void inactivateFragment(java.lang.String)
    {
        android.app.FragmentHostCallback r0;
        java.lang.String r1;
        java.lang.Object $r2;
        boolean $z0;
        android.util.ArrayMap $r3, r5;
        android.app.LoaderManagerImpl r6;

        r0 := @this: android.app.FragmentHostCallback;

        r1 := @parameter0: java.lang.String;

        r5 = r0.<android.app.FragmentHostCallback: android.util.ArrayMap mAllLoaderManagers>;

        if r5 == null goto label1;

        $r2 = virtualinvoke r5.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r6 = (android.app.LoaderManagerImpl) $r2;

        if r6 == null goto label1;

        $z0 = r6.<android.app.LoaderManagerImpl: boolean mRetaining>;

        if $z0 != 0 goto label1;

        virtualinvoke r6.<android.app.LoaderManagerImpl: void doDestroy()>();

        $r3 = r0.<android.app.FragmentHostCallback: android.util.ArrayMap mAllLoaderManagers>;

        virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r1);

     label1:
        return;
    }

    public void onAttachFragment(android.app.Fragment)
    {
        android.app.FragmentHostCallback r0;
        android.app.Fragment r1;

        r0 := @this: android.app.FragmentHostCallback;

        r1 := @parameter0: android.app.Fragment;

        return;
    }

    public void onDump(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        android.app.FragmentHostCallback r0;
        java.lang.String r1;
        java.io.FileDescriptor r2;
        java.io.PrintWriter r3;
        java.lang.String[] r4;

        r0 := @this: android.app.FragmentHostCallback;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.io.FileDescriptor;

        r3 := @parameter2: java.io.PrintWriter;

        r4 := @parameter3: java.lang.String[];

        return;
    }

    public android.view.View onFindViewById(int)
    {
        android.app.FragmentHostCallback r0;
        int i0;

        r0 := @this: android.app.FragmentHostCallback;

        i0 := @parameter0: int;

        return null;
    }

    public abstract java.lang.Object onGetHost();

    public android.view.LayoutInflater onGetLayoutInflater()
    {
        android.app.FragmentHostCallback r0;
        android.content.Context $r1;
        java.lang.Object $r2;
        android.view.LayoutInflater $r3;

        r0 := @this: android.app.FragmentHostCallback;

        $r1 = r0.<android.app.FragmentHostCallback: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("layout_inflater");

        $r3 = (android.view.LayoutInflater) $r2;

        return $r3;
    }

    public int onGetWindowAnimations()
    {
        android.app.FragmentHostCallback r0;
        int $i0;

        r0 := @this: android.app.FragmentHostCallback;

        $i0 = r0.<android.app.FragmentHostCallback: int mWindowAnimations>;

        return $i0;
    }

    public boolean onHasView()
    {
        android.app.FragmentHostCallback r0;

        r0 := @this: android.app.FragmentHostCallback;

        return 1;
    }

    public boolean onHasWindowAnimations()
    {
        android.app.FragmentHostCallback r0;

        r0 := @this: android.app.FragmentHostCallback;

        return 1;
    }

    public void onInvalidateOptionsMenu()
    {
        android.app.FragmentHostCallback r0;

        r0 := @this: android.app.FragmentHostCallback;

        return;
    }

    public void onRequestPermissionsFromFragment(android.app.Fragment, java.lang.String[], int)
    {
        android.app.FragmentHostCallback r0;
        android.app.Fragment r1;
        java.lang.String[] r2;
        int i0;

        r0 := @this: android.app.FragmentHostCallback;

        r1 := @parameter0: android.app.Fragment;

        r2 := @parameter1: java.lang.String[];

        i0 := @parameter2: int;

        return;
    }

    public boolean onShouldSaveFragmentState(android.app.Fragment)
    {
        android.app.FragmentHostCallback r0;
        android.app.Fragment r1;

        r0 := @this: android.app.FragmentHostCallback;

        r1 := @parameter0: android.app.Fragment;

        return 1;
    }

    public void onStartActivityAsUserFromFragment(android.app.Fragment, android.content.Intent, int, android.os.Bundle, android.os.UserHandle)
    {
        android.app.FragmentHostCallback r0;
        android.app.Fragment r1;
        android.content.Intent r2;
        int i0;
        android.os.Bundle r3;
        android.os.UserHandle r4;
        java.lang.IllegalStateException $r5;
        android.content.Context $r6;

        r0 := @this: android.app.FragmentHostCallback;

        r1 := @parameter0: android.app.Fragment;

        r2 := @parameter1: android.content.Intent;

        i0 := @parameter2: int;

        r3 := @parameter3: android.os.Bundle;

        r4 := @parameter4: android.os.UserHandle;

        if i0 != -1 goto label1;

        $r6 = r0.<android.app.FragmentHostCallback: android.content.Context mContext>;

        virtualinvoke $r6.<android.content.Context: void startActivityAsUser(android.content.Intent,android.os.UserHandle)>(r2, r4);

        return;

     label1:
        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Starting activity with a requestCode requires a FragmentActivity host");

        throw $r5;
    }

    public void onStartActivityFromFragment(android.app.Fragment, android.content.Intent, int, android.os.Bundle)
    {
        android.app.FragmentHostCallback r0;
        android.app.Fragment r1;
        android.content.Intent r2;
        int i0;
        android.os.Bundle r3;
        java.lang.IllegalStateException $r4;
        android.content.Context $r5;

        r0 := @this: android.app.FragmentHostCallback;

        r1 := @parameter0: android.app.Fragment;

        r2 := @parameter1: android.content.Intent;

        i0 := @parameter2: int;

        r3 := @parameter3: android.os.Bundle;

        if i0 != -1 goto label1;

        $r5 = r0.<android.app.FragmentHostCallback: android.content.Context mContext>;

        virtualinvoke $r5.<android.content.Context: void startActivity(android.content.Intent)>(r2);

        return;

     label1:
        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Starting activity with a requestCode requires a FragmentActivity host");

        throw $r4;
    }

    public void onStartIntentSenderFromFragment(android.app.Fragment, android.content.IntentSender, int, android.content.Intent, int, int, int, android.os.Bundle) throws android.content.IntentSender$SendIntentException
    {
        android.app.FragmentHostCallback r0;
        android.app.Fragment r1;
        android.content.IntentSender r2;
        int i0, i1, i2, i3;
        android.content.Intent r3;
        android.os.Bundle r4;
        java.lang.IllegalStateException $r5;
        android.content.Context $r6;

        r0 := @this: android.app.FragmentHostCallback;

        r1 := @parameter0: android.app.Fragment;

        r2 := @parameter1: android.content.IntentSender;

        i0 := @parameter2: int;

        r3 := @parameter3: android.content.Intent;

        i1 := @parameter4: int;

        i2 := @parameter5: int;

        i3 := @parameter6: int;

        r4 := @parameter7: android.os.Bundle;

        if i0 != -1 goto label1;

        $r6 = r0.<android.app.FragmentHostCallback: android.content.Context mContext>;

        virtualinvoke $r6.<android.content.Context: void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int,android.os.Bundle)>(r2, r3, i1, i2, i3, r4);

        return;

     label1:
        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Starting intent sender with a requestCode requires a FragmentActivity host");

        throw $r5;
    }

    public boolean onUseFragmentManagerInflaterFactory()
    {
        android.app.FragmentHostCallback r0;

        r0 := @this: android.app.FragmentHostCallback;

        return 0;
    }

    void reportLoaderStart()
    {
        android.app.FragmentHostCallback r0;
        int i0, i1, i2;
        android.app.LoaderManagerImpl r1, $r4;
        android.util.ArrayMap $r2, r5;
        java.lang.Object $r3;
        android.app.LoaderManagerImpl[] r6;

        r0 := @this: android.app.FragmentHostCallback;

        r5 = r0.<android.app.FragmentHostCallback: android.util.ArrayMap mAllLoaderManagers>;

        if r5 == null goto label4;

        i0 = virtualinvoke r5.<android.util.ArrayMap: int size()>();

        r6 = newarray (android.app.LoaderManagerImpl)[i0];

        i1 = i0 - 1;

     label1:
        if i1 < 0 goto label2;

        $r2 = r0.<android.app.FragmentHostCallback: android.util.ArrayMap mAllLoaderManagers>;

        $r3 = virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i1);

        $r4 = (android.app.LoaderManagerImpl) $r3;

        r6[i1] = $r4;

        i1 = i1 + -1;

        goto label1;

     label2:
        i2 = 0;

     label3:
        if i2 >= i0 goto label4;

        r1 = r6[i2];

        virtualinvoke r1.<android.app.LoaderManagerImpl: void finishRetain()>();

        virtualinvoke r1.<android.app.LoaderManagerImpl: void doReportStart()>();

        i2 = i2 + 1;

        goto label3;

     label4:
        return;
    }

    void restoreLoaderNonConfig(android.util.ArrayMap)
    {
        android.app.FragmentHostCallback r0;
        android.util.ArrayMap r1;
        int i0, i1;
        java.lang.Object $r2;
        android.app.LoaderManagerImpl $r3;

        r0 := @this: android.app.FragmentHostCallback;

        r1 := @parameter0: android.util.ArrayMap;

        if r1 == null goto label2;

        i1 = 0;

        i0 = virtualinvoke r1.<android.util.ArrayMap: int size()>();

     label1:
        if i1 >= i0 goto label2;

        $r2 = virtualinvoke r1.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i1);

        $r3 = (android.app.LoaderManagerImpl) $r2;

        virtualinvoke $r3.<android.app.LoaderManagerImpl: void updateHostController(android.app.FragmentHostCallback)>(r0);

        i1 = i1 + 1;

        goto label1;

     label2:
        r0.<android.app.FragmentHostCallback: android.util.ArrayMap mAllLoaderManagers> = r1;

        return;
    }

    android.util.ArrayMap retainLoaderNonConfig()
    {
        android.app.FragmentHostCallback r0;
        int i0, i1, i2;
        boolean z1, $z2, $z3, z4, z5, $z6;
        android.app.LoaderManagerImpl r1, $r8;
        android.util.ArrayMap $r2, $r4, $r6, r9;
        java.lang.String $r3;
        java.lang.Object $r7;
        android.app.LoaderManagerImpl[] r10;

        r0 := @this: android.app.FragmentHostCallback;

        z4 = 0;

        r9 = r0.<android.app.FragmentHostCallback: android.util.ArrayMap mAllLoaderManagers>;

        if r9 == null goto label8;

        i0 = virtualinvoke r9.<android.util.ArrayMap: int size()>();

        r10 = newarray (android.app.LoaderManagerImpl)[i0];

        i1 = i0 - 1;

     label1:
        if i1 < 0 goto label2;

        $r6 = r0.<android.app.FragmentHostCallback: android.util.ArrayMap mAllLoaderManagers>;

        $r7 = virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i1);

        $r8 = (android.app.LoaderManagerImpl) $r7;

        r10[i1] = $r8;

        i1 = i1 + -1;

        goto label1;

     label2:
        z1 = virtualinvoke r0.<android.app.FragmentHostCallback: boolean getRetainLoaders()>();

        i2 = 0;

        z5 = 0;

     label3:
        z4 = z5;

        if i2 >= i0 goto label8;

        r1 = r10[i2];

        $z2 = r1.<android.app.LoaderManagerImpl: boolean mRetaining>;

        if $z2 != 0 goto label5;

        if z1 == 0 goto label5;

        $z3 = r1.<android.app.LoaderManagerImpl: boolean mStarted>;

        if $z3 != 0 goto label4;

        virtualinvoke r1.<android.app.LoaderManagerImpl: void doStart()>();

     label4:
        virtualinvoke r1.<android.app.LoaderManagerImpl: void doRetain()>();

     label5:
        $z6 = r1.<android.app.LoaderManagerImpl: boolean mRetaining>;

        if $z6 == 0 goto label6;

        z5 = 1;

        goto label7;

     label6:
        virtualinvoke r1.<android.app.LoaderManagerImpl: void doDestroy()>();

        $r4 = r0.<android.app.FragmentHostCallback: android.util.ArrayMap mAllLoaderManagers>;

        $r3 = r1.<android.app.LoaderManagerImpl: java.lang.String mWho>;

        virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>($r3);

     label7:
        i2 = i2 + 1;

        goto label3;

     label8:
        if z4 == 0 goto label9;

        $r2 = r0.<android.app.FragmentHostCallback: android.util.ArrayMap mAllLoaderManagers>;

        return $r2;

     label9:
        return null;
    }
}
