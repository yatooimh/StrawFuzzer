class android.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener extends java.lang.Object implements android.animation.Animator$AnimatorListener
{
    private boolean mShouldRunOnHWLayer;
    private android.view.View mView;

    public void <init>(android.view.View)
    {
        android.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener r0;
        android.view.View r1;

        r0 := @this: android.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener;

        r1 := @parameter0: android.view.View;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener: boolean mShouldRunOnHWLayer> = 0;

        if r1 != null goto label1;

        return;

     label1:
        r0.<android.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener: android.view.View mView> = r1;

        return;
    }

    public void onAnimationCancel(android.animation.Animator)
    {
        android.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener r0;
        android.animation.Animator r1;

        r0 := @this: android.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener;

        r1 := @parameter0: android.animation.Animator;

        return;
    }

    public void onAnimationEnd(android.animation.Animator)
    {
        android.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener r0;
        android.animation.Animator r1;
        boolean $z0;
        android.view.View $r2;

        r0 := @this: android.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener;

        r1 := @parameter0: android.animation.Animator;

        $z0 = r0.<android.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener: boolean mShouldRunOnHWLayer>;

        if $z0 == 0 goto label1;

        $r2 = r0.<android.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener: android.view.View mView>;

        virtualinvoke $r2.<android.view.View: void setLayerType(int,android.graphics.Paint)>(0, null);

     label1:
        r0.<android.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener: android.view.View mView> = null;

        virtualinvoke r1.<android.animation.Animator: void removeListener(android.animation.Animator$AnimatorListener)>(r0);

        return;
    }

    public void onAnimationRepeat(android.animation.Animator)
    {
        android.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener r0;
        android.animation.Animator r1;

        r0 := @this: android.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener;

        r1 := @parameter0: android.animation.Animator;

        return;
    }

    public void onAnimationStart(android.animation.Animator)
    {
        android.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener r0;
        android.animation.Animator r1;
        boolean z0;
        android.view.View $r2, $r3;

        r0 := @this: android.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener;

        r1 := @parameter0: android.animation.Animator;

        $r2 = r0.<android.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener: android.view.View mView>;

        z0 = staticinvoke <android.app.FragmentManagerImpl: boolean shouldRunOnHWLayer(android.view.View,android.animation.Animator)>($r2, r1);

        r0.<android.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener: boolean mShouldRunOnHWLayer> = z0;

        if z0 == 0 goto label1;

        $r3 = r0.<android.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener: android.view.View mView>;

        virtualinvoke $r3.<android.view.View: void setLayerType(int,android.graphics.Paint)>(2, null);

     label1:
        return;
    }
}
