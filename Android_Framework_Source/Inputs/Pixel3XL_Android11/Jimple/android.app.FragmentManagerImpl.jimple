final class android.app.FragmentManagerImpl extends android.app.FragmentManager implements android.view.LayoutInflater$Factory2
{
    static boolean DEBUG;
    static final java.lang.String TAG;
    static final java.lang.String TARGET_REQUEST_CODE_STATE_TAG;
    static final java.lang.String TARGET_STATE_TAG;
    static final java.lang.String USER_VISIBLE_HINT_TAG;
    static final java.lang.String VIEW_STATE_TAG;
    android.util.SparseArray mActive;
    final java.util.ArrayList mAdded;
    boolean mAllowOldReentrantBehavior;
    java.util.ArrayList mAvailBackStackIndices;
    java.util.ArrayList mBackStack;
    java.util.ArrayList mBackStackChangeListeners;
    java.util.ArrayList mBackStackIndices;
    android.app.FragmentContainer mContainer;
    java.util.ArrayList mCreatedMenus;
    int mCurState;
    boolean mDestroyed;
    java.lang.Runnable mExecCommit;
    boolean mExecutingActions;
    boolean mHavePendingDeferredStart;
    android.app.FragmentHostCallback mHost;
    final java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks;
    boolean mNeedMenuInvalidate;
    int mNextFragmentIndex;
    java.lang.String mNoTransactionsBecause;
    android.app.Fragment mParent;
    java.util.ArrayList mPendingActions;
    java.util.ArrayList mPostponedTransactions;
    android.app.Fragment mPrimaryNav;
    android.app.FragmentManagerNonConfig mSavedNonConfig;
    android.util.SparseArray mStateArray;
    android.os.Bundle mStateBundle;
    boolean mStateSaved;
    java.util.ArrayList mTmpAddedFragments;
    java.util.ArrayList mTmpIsPop;
    java.util.ArrayList mTmpRecords;

    static void <clinit>()
    {
        <android.app.FragmentManagerImpl: java.lang.String VIEW_STATE_TAG> = "android:view_state";

        <android.app.FragmentManagerImpl: java.lang.String USER_VISIBLE_HINT_TAG> = "android:user_visible_hint";

        <android.app.FragmentManagerImpl: java.lang.String TARGET_STATE_TAG> = "android:target_state";

        <android.app.FragmentManagerImpl: java.lang.String TARGET_REQUEST_CODE_STATE_TAG> = "android:target_req_state";

        <android.app.FragmentManagerImpl: java.lang.String TAG> = "FragmentManager";

        <android.app.FragmentManagerImpl: boolean DEBUG> = 0;

        <android.app.FragmentManagerImpl: boolean DEBUG> = 0;

        return;
    }

    void <init>()
    {
        android.app.FragmentManagerImpl r0;
        java.util.ArrayList $r1;
        java.util.concurrent.CopyOnWriteArrayList $r2;
        android.app.FragmentManagerImpl$1 $r3;

        r0 := @this: android.app.FragmentManagerImpl;

        specialinvoke r0.<android.app.FragmentManager: void <init>()>();

        r0.<android.app.FragmentManagerImpl: int mNextFragmentIndex> = 0;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<android.app.FragmentManagerImpl: java.util.ArrayList mAdded> = $r1;

        $r2 = new java.util.concurrent.CopyOnWriteArrayList;

        specialinvoke $r2.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>();

        r0.<android.app.FragmentManagerImpl: java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks> = $r2;

        r0.<android.app.FragmentManagerImpl: int mCurState> = 0;

        r0.<android.app.FragmentManagerImpl: android.os.Bundle mStateBundle> = null;

        r0.<android.app.FragmentManagerImpl: android.util.SparseArray mStateArray> = null;

        $r3 = new android.app.FragmentManagerImpl$1;

        specialinvoke $r3.<android.app.FragmentManagerImpl$1: void <init>(android.app.FragmentManagerImpl)>(r0);

        r0.<android.app.FragmentManagerImpl: java.lang.Runnable mExecCommit> = $r3;

        return;
    }

    static void access$200(android.app.FragmentManagerImpl)
    {
        android.app.FragmentManagerImpl r0;

        r0 := @parameter0: android.app.FragmentManagerImpl;

        specialinvoke r0.<android.app.FragmentManagerImpl: void scheduleCommit()>();

        return;
    }

    static void access$300(android.app.FragmentManagerImpl, android.app.BackStackRecord, boolean, boolean, boolean)
    {
        android.app.FragmentManagerImpl r0;
        android.app.BackStackRecord r1;
        boolean z0, z1, z2;

        r0 := @parameter0: android.app.FragmentManagerImpl;

        r1 := @parameter1: android.app.BackStackRecord;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        z2 := @parameter4: boolean;

        specialinvoke r0.<android.app.FragmentManagerImpl: void completeExecute(android.app.BackStackRecord,boolean,boolean,boolean)>(r1, z0, z1, z2);

        return;
    }

    private void addAddedFragments(android.util.ArraySet)
    {
        android.app.FragmentManagerImpl r0;
        android.util.ArraySet r1;
        int i0, i1, $i2, $i3, $i4, i5, i6;
        android.app.Fragment r2;
        java.util.ArrayList $r3, $r4;
        java.lang.Object $r5;
        android.view.View $r6;
        boolean $z0, $z1;

        r0 := @this: android.app.FragmentManagerImpl;

        r1 := @parameter0: android.util.ArraySet;

        i5 = r0.<android.app.FragmentManagerImpl: int mCurState>;

        if i5 >= 1 goto label1;

        return;

     label1:
        i0 = staticinvoke <java.lang.Math: int min(int,int)>(i5, 4);

        $r3 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i6 = 0;

     label2:
        if i6 >= i1 goto label4;

        $r4 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i6);

        r2 = (android.app.Fragment) $r5;

        $i2 = r2.<android.app.Fragment: int mState>;

        if $i2 >= i0 goto label3;

        $i3 = virtualinvoke r2.<android.app.Fragment: int getNextAnim()>();

        $i4 = virtualinvoke r2.<android.app.Fragment: int getNextTransition()>();

        virtualinvoke r0.<android.app.FragmentManagerImpl: void moveToState(android.app.Fragment,int,int,int,boolean)>(r2, i0, $i3, $i4, 0);

        $r6 = r2.<android.app.Fragment: android.view.View mView>;

        if $r6 == null goto label3;

        $z0 = r2.<android.app.Fragment: boolean mHidden>;

        if $z0 != 0 goto label3;

        $z1 = r2.<android.app.Fragment: boolean mIsNewlyAdded>;

        if $z1 == 0 goto label3;

        virtualinvoke r1.<android.util.ArraySet: boolean add(java.lang.Object)>(r2);

     label3:
        i6 = i6 + 1;

        goto label2;

     label4:
        return;
    }

    private void burpActive()
    {
        android.app.FragmentManagerImpl r0;
        int $i0, $i1, i2;
        android.util.SparseArray $r1, r3, r4;
        java.lang.Object $r2;

        r0 := @this: android.app.FragmentManagerImpl;

        r3 = r0.<android.app.FragmentManagerImpl: android.util.SparseArray mActive>;

        if r3 == null goto label3;

        $i0 = virtualinvoke r3.<android.util.SparseArray: int size()>();

        i2 = $i0 - 1;

     label1:
        if i2 < 0 goto label3;

        $r1 = r0.<android.app.FragmentManagerImpl: android.util.SparseArray mActive>;

        $r2 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        if $r2 != null goto label2;

        r4 = r0.<android.app.FragmentManagerImpl: android.util.SparseArray mActive>;

        $i1 = virtualinvoke r4.<android.util.SparseArray: int keyAt(int)>(i2);

        virtualinvoke r4.<android.util.SparseArray: void delete(int)>($i1);

     label2:
        i2 = i2 + -1;

        goto label1;

     label3:
        return;
    }

    private void checkStateLoss()
    {
        android.app.FragmentManagerImpl r0;
        boolean $z0;
        java.lang.IllegalStateException $r2, $r8;
        java.lang.String $r3, $r6, $r9;
        java.lang.StringBuilder $r4;

        r0 := @this: android.app.FragmentManagerImpl;

        $z0 = r0.<android.app.FragmentManagerImpl: boolean mStateSaved>;

        if $z0 != 0 goto label2;

        $r3 = r0.<android.app.FragmentManagerImpl: java.lang.String mNoTransactionsBecause>;

        if $r3 != null goto label1;

        return;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can not perform this action inside of ");

        $r6 = r0.<android.app.FragmentManagerImpl: java.lang.String mNoTransactionsBecause>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = new java.lang.IllegalStateException;

        $r9 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r9);

        throw $r8;

     label2:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Can not perform this action after onSaveInstanceState");

        throw $r2;
    }

    private void cleanupExec()
    {
        android.app.FragmentManagerImpl r0;
        java.util.ArrayList $r1, $r2;

        r0 := @this: android.app.FragmentManagerImpl;

        r0.<android.app.FragmentManagerImpl: boolean mExecutingActions> = 0;

        $r1 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mTmpIsPop>;

        virtualinvoke $r1.<java.util.ArrayList: void clear()>();

        $r2 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mTmpRecords>;

        virtualinvoke $r2.<java.util.ArrayList: void clear()>();

        return;
    }

    private void completeExecute(android.app.BackStackRecord, boolean, boolean, boolean)
    {
        android.app.FragmentManagerImpl r0;
        android.app.BackStackRecord r1;
        boolean z0, z1, z2, $z5, $z6;
        int i0, $i1, $i2, i3;
        java.util.ArrayList $r3, $r4;
        java.lang.Boolean $r5;
        android.util.SparseArray $r6, r10;
        java.lang.Object $r7;
        android.view.View $r8;
        android.app.Fragment r11;

        r0 := @this: android.app.FragmentManagerImpl;

        r1 := @parameter0: android.app.BackStackRecord;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        z2 := @parameter3: boolean;

        if z0 == 0 goto label1;

        virtualinvoke r1.<android.app.BackStackRecord: void executePopOps(boolean)>(z2);

        goto label2;

     label1:
        virtualinvoke r1.<android.app.BackStackRecord: void executeOps()>();

     label2:
        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>(int)>(1);

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>(int)>(1);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        if z1 == 0 goto label3;

        staticinvoke <android.app.FragmentTransition: void startTransitions(android.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean)>(r0, $r3, $r4, 0, 1, 1);

     label3:
        if z2 == 0 goto label4;

        $i2 = r0.<android.app.FragmentManagerImpl: int mCurState>;

        virtualinvoke r0.<android.app.FragmentManagerImpl: void moveToState(int,boolean)>($i2, 1);

     label4:
        r10 = r0.<android.app.FragmentManagerImpl: android.util.SparseArray mActive>;

        if r10 == null goto label7;

        i0 = virtualinvoke r10.<android.util.SparseArray: int size()>();

        i3 = 0;

     label5:
        if i3 >= i0 goto label7;

        $r6 = r0.<android.app.FragmentManagerImpl: android.util.SparseArray mActive>;

        $r7 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object valueAt(int)>(i3);

        r11 = (android.app.Fragment) $r7;

        if r11 == null goto label6;

        $r8 = r11.<android.app.Fragment: android.view.View mView>;

        if $r8 == null goto label6;

        $z5 = r11.<android.app.Fragment: boolean mIsNewlyAdded>;

        if $z5 == 0 goto label6;

        $i1 = r11.<android.app.Fragment: int mContainerId>;

        $z6 = virtualinvoke r1.<android.app.BackStackRecord: boolean interactsWith(int)>($i1);

        if $z6 == 0 goto label6;

        r11.<android.app.Fragment: boolean mIsNewlyAdded> = 0;

     label6:
        i3 = i3 + 1;

        goto label5;

     label7:
        return;
    }

    private void dispatchMoveToState(int)
    {
        android.app.FragmentManagerImpl r0;
        int i0;
        boolean $z0;
        java.lang.Throwable $r2;

        r0 := @this: android.app.FragmentManagerImpl;

        i0 := @parameter0: int;

        $z0 = r0.<android.app.FragmentManagerImpl: boolean mAllowOldReentrantBehavior>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<android.app.FragmentManagerImpl: void moveToState(int,boolean)>(i0, 0);

        goto label3;

     label1:
        r0.<android.app.FragmentManagerImpl: boolean mExecutingActions> = 1;

        virtualinvoke r0.<android.app.FragmentManagerImpl: void moveToState(int,boolean)>(i0, 0);

     label2:
        r0.<android.app.FragmentManagerImpl: boolean mExecutingActions> = 0;

     label3:
        virtualinvoke r0.<android.app.FragmentManagerImpl: boolean execPendingActions()>();

        return;

     label4:
        $r2 := @caughtexception;

        r0.<android.app.FragmentManagerImpl: boolean mExecutingActions> = 0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    private void endAnimatingAwayFragments()
    {
        android.app.FragmentManagerImpl r0;
        android.util.SparseArray $r1, r5;
        java.lang.Object $r2;
        android.animation.Animator $r3, $r4;
        int i0, i1;
        android.app.Fragment r6;

        r0 := @this: android.app.FragmentManagerImpl;

        r5 = r0.<android.app.FragmentManagerImpl: android.util.SparseArray mActive>;

        if r5 != null goto label1;

        i0 = 0;

        goto label2;

     label1:
        i0 = virtualinvoke r5.<android.util.SparseArray: int size()>();

     label2:
        i1 = 0;

     label3:
        if i1 >= i0 goto label5;

        $r1 = r0.<android.app.FragmentManagerImpl: android.util.SparseArray mActive>;

        $r2 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        r6 = (android.app.Fragment) $r2;

        if r6 == null goto label4;

        $r3 = virtualinvoke r6.<android.app.Fragment: android.animation.Animator getAnimatingAway()>();

        if $r3 == null goto label4;

        $r4 = virtualinvoke r6.<android.app.Fragment: android.animation.Animator getAnimatingAway()>();

        virtualinvoke $r4.<android.animation.Animator: void end()>();

     label4:
        i1 = i1 + 1;

        goto label3;

     label5:
        return;
    }

    private void ensureExecReady(boolean)
    {
        android.app.FragmentManagerImpl r0;
        boolean z0, $z1;
        java.lang.IllegalStateException $r2, $r7;
        android.os.Looper $r3, $r6;
        android.app.FragmentHostCallback $r4;
        android.os.Handler $r5;
        java.util.ArrayList $r8, $r9, $r10;
        java.lang.Throwable $r11;

        r0 := @this: android.app.FragmentManagerImpl;

        z0 := @parameter0: boolean;

        $z1 = r0.<android.app.FragmentManagerImpl: boolean mExecutingActions>;

        if $z1 != 0 goto label7;

        $r3 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        $r4 = r0.<android.app.FragmentManagerImpl: android.app.FragmentHostCallback mHost>;

        $r5 = virtualinvoke $r4.<android.app.FragmentHostCallback: android.os.Handler getHandler()>();

        $r6 = virtualinvoke $r5.<android.os.Handler: android.os.Looper getLooper()>();

        if $r3 != $r6 goto label6;

        if z0 != 0 goto label1;

        specialinvoke r0.<android.app.FragmentManagerImpl: void checkStateLoss()>();

     label1:
        $r8 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mTmpRecords>;

        if $r8 != null goto label2;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r0.<android.app.FragmentManagerImpl: java.util.ArrayList mTmpRecords> = $r9;

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        r0.<android.app.FragmentManagerImpl: java.util.ArrayList mTmpIsPop> = $r10;

     label2:
        r0.<android.app.FragmentManagerImpl: boolean mExecutingActions> = 1;

     label3:
        specialinvoke r0.<android.app.FragmentManagerImpl: void executePostponedTransaction(java.util.ArrayList,java.util.ArrayList)>(null, null);

     label4:
        r0.<android.app.FragmentManagerImpl: boolean mExecutingActions> = 0;

        return;

     label5:
        $r11 := @caughtexception;

        r0.<android.app.FragmentManagerImpl: boolean mExecutingActions> = 0;

        throw $r11;

     label6:
        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Must be called from main thread of fragment host");

        throw $r7;

     label7:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("FragmentManager is already executing transactions");

        throw $r2;

        catch java.lang.Throwable from label3 to label4 with label5;
    }

    private static void executeOps(java.util.ArrayList, java.util.ArrayList, int, int)
    {
        java.util.ArrayList r0, r1;
        int i0, $i1, i2;
        android.app.BackStackRecord r2;
        boolean z0, z1;
        java.lang.Object $r3, $r4;
        java.lang.Boolean $r5;

        r0 := @parameter0: java.util.ArrayList;

        r1 := @parameter1: java.util.ArrayList;

        i2 := @parameter2: int;

        i0 := @parameter3: int;

     label1:
        if i2 >= i0 goto label6;

        $r3 = virtualinvoke r0.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r2 = (android.app.BackStackRecord) $r3;

        $r4 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r5 = (java.lang.Boolean) $r4;

        z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        z1 = 1;

        if z0 == 0 goto label4;

        virtualinvoke r2.<android.app.BackStackRecord: void bumpBackStackNesting(int)>(-1);

        $i1 = i0 - 1;

        if i2 != $i1 goto label2;

        goto label3;

     label2:
        z1 = 0;

     label3:
        virtualinvoke r2.<android.app.BackStackRecord: void executePopOps(boolean)>(z1);

        goto label5;

     label4:
        virtualinvoke r2.<android.app.BackStackRecord: void bumpBackStackNesting(int)>(1);

        virtualinvoke r2.<android.app.BackStackRecord: void executeOps()>();

     label5:
        i2 = i2 + 1;

        goto label1;

     label6:
        return;
    }

    private void executeOpsTogether(java.util.ArrayList, java.util.ArrayList, int, int)
    {
        android.app.FragmentManagerImpl r0;
        java.util.ArrayList r1, r2, $r6, $r7, $r8, $r16, $r17, $r18, r19;
        int i0, $i1, $i2, $i3, i4, i5, i6;
        boolean z0, $z3, $z4, $z5, z6, z7;
        android.app.BackStackRecord r3, $r5, r22;
        java.lang.Object $r4, $r9, $r10, $r13, $r14;
        java.lang.Boolean $r11, $r15;
        android.util.ArraySet $r12;
        android.app.Fragment r20;

        r0 := @this: android.app.FragmentManagerImpl;

        r1 := @parameter0: java.util.ArrayList;

        r2 := @parameter1: java.util.ArrayList;

        i4 := @parameter2: int;

        i0 := @parameter3: int;

        $r4 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        $r5 = (android.app.BackStackRecord) $r4;

        z0 = $r5.<android.app.BackStackRecord: boolean mReorderingAllowed>;

        r19 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mTmpAddedFragments>;

        if r19 != null goto label01;

        $r18 = new java.util.ArrayList;

        specialinvoke $r18.<java.util.ArrayList: void <init>()>();

        r0.<android.app.FragmentManagerImpl: java.util.ArrayList mTmpAddedFragments> = $r18;

        goto label02;

     label01:
        virtualinvoke r19.<java.util.ArrayList: void clear()>();

     label02:
        $r7 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mTmpAddedFragments>;

        $r6 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        virtualinvoke $r7.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r6);

        r20 = virtualinvoke r0.<android.app.FragmentManagerImpl: android.app.Fragment getPrimaryNavigationFragment()>();

        i5 = i4;

        z6 = 0;

     label03:
        if i5 >= i0 goto label08;

        $r13 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        r3 = (android.app.BackStackRecord) $r13;

        $r14 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        $r15 = (java.lang.Boolean) $r14;

        $z4 = virtualinvoke $r15.<java.lang.Boolean: boolean booleanValue()>();

        if $z4 != 0 goto label04;

        $r17 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mTmpAddedFragments>;

        r20 = virtualinvoke r3.<android.app.BackStackRecord: android.app.Fragment expandOps(java.util.ArrayList,android.app.Fragment)>($r17, r20);

        goto label05;

     label04:
        $r16 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mTmpAddedFragments>;

        virtualinvoke r3.<android.app.BackStackRecord: void trackAddedFragmentsInPop(java.util.ArrayList)>($r16);

     label05:
        z7 = 1;

        if z6 != 0 goto label07;

        $z5 = r3.<android.app.BackStackRecord: boolean mAddToBackStack>;

        if $z5 == 0 goto label06;

        z7 = 1;

        goto label07;

     label06:
        z7 = 0;

     label07:
        i5 = i5 + 1;

        z6 = z7;

        goto label03;

     label08:
        $r8 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mTmpAddedFragments>;

        virtualinvoke $r8.<java.util.ArrayList: void clear()>();

        if z0 != 0 goto label09;

        staticinvoke <android.app.FragmentTransition: void startTransitions(android.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean)>(r0, r1, r2, i4, i0, 0);

     label09:
        staticinvoke <android.app.FragmentManagerImpl: void executeOps(java.util.ArrayList,java.util.ArrayList,int,int)>(r1, r2, i4, i0);

        i6 = i0;

        if z0 == 0 goto label10;

        $r12 = new android.util.ArraySet;

        specialinvoke $r12.<android.util.ArraySet: void <init>()>();

        specialinvoke r0.<android.app.FragmentManagerImpl: void addAddedFragments(android.util.ArraySet)>($r12);

        i6 = specialinvoke r0.<android.app.FragmentManagerImpl: int postponePostponableTransactions(java.util.ArrayList,java.util.ArrayList,int,int,android.util.ArraySet)>(r1, r2, i4, i0, $r12);

        specialinvoke r0.<android.app.FragmentManagerImpl: void makeRemovedFragmentsInvisible(android.util.ArraySet)>($r12);

     label10:
        if i6 == i4 goto label11;

        if z0 == 0 goto label11;

        staticinvoke <android.app.FragmentTransition: void startTransitions(android.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean)>(r0, r1, r2, i4, i6, 1);

        $i3 = r0.<android.app.FragmentManagerImpl: int mCurState>;

        virtualinvoke r0.<android.app.FragmentManagerImpl: void moveToState(int,boolean)>($i3, 1);

     label11:
        if i4 >= i0 goto label13;

        $r9 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        r22 = (android.app.BackStackRecord) $r9;

        $r10 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        $r11 = (java.lang.Boolean) $r10;

        $z3 = virtualinvoke $r11.<java.lang.Boolean: boolean booleanValue()>();

        if $z3 == 0 goto label12;

        $i1 = r22.<android.app.BackStackRecord: int mIndex>;

        if $i1 < 0 goto label12;

        $i2 = r22.<android.app.BackStackRecord: int mIndex>;

        virtualinvoke r0.<android.app.FragmentManagerImpl: void freeBackStackIndex(int)>($i2);

        r22.<android.app.BackStackRecord: int mIndex> = -1;

     label12:
        virtualinvoke r22.<android.app.BackStackRecord: void runOnCommitRunnables()>();

        i4 = i4 + 1;

        goto label11;

     label13:
        if z6 == 0 goto label14;

        virtualinvoke r0.<android.app.FragmentManagerImpl: void reportBackStackChanged()>();

     label14:
        return;
    }

    private void executePostponedTransaction(java.util.ArrayList, java.util.ArrayList)
    {
        android.app.FragmentManagerImpl r0;
        java.util.ArrayList r1, r2, $r3, $r5, r14;
        java.lang.Object $r4, $r8, $r12;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        android.app.BackStackRecord $r7, $r10, $r11;
        java.lang.Boolean $r9, $r13;
        int $i0, i1, i2, i3, i4, i5, i6;
        android.app.FragmentManagerImpl$StartEnterTransitionListener r15;

        r0 := @this: android.app.FragmentManagerImpl;

        r1 := @parameter0: java.util.ArrayList;

        r2 := @parameter1: java.util.ArrayList;

        r14 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mPostponedTransactions>;

        if r14 != null goto label1;

        i1 = 0;

        goto label2;

     label1:
        i1 = virtualinvoke r14.<java.util.ArrayList: int size()>();

     label2:
        i2 = 0;

     label3:
        if i2 >= i1 goto label8;

        $r3 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mPostponedTransactions>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r15 = (android.app.FragmentManagerImpl$StartEnterTransitionListener) $r4;

        if r1 == null goto label4;

        $z3 = staticinvoke <android.app.FragmentManagerImpl$StartEnterTransitionListener: boolean access$000(android.app.FragmentManagerImpl$StartEnterTransitionListener)>(r15);

        if $z3 != 0 goto label4;

        $r11 = staticinvoke <android.app.FragmentManagerImpl$StartEnterTransitionListener: android.app.BackStackRecord access$100(android.app.FragmentManagerImpl$StartEnterTransitionListener)>(r15);

        i3 = virtualinvoke r1.<java.util.ArrayList: int indexOf(java.lang.Object)>($r11);

        if i3 == -1 goto label4;

        $r12 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        $r13 = (java.lang.Boolean) $r12;

        $z4 = virtualinvoke $r13.<java.lang.Boolean: boolean booleanValue()>();

        if $z4 == 0 goto label4;

        virtualinvoke r15.<android.app.FragmentManagerImpl$StartEnterTransitionListener: void cancelTransaction()>();

        i4 = i1;

        i5 = i2;

        goto label7;

     label4:
        $z5 = virtualinvoke r15.<android.app.FragmentManagerImpl$StartEnterTransitionListener: boolean isReady()>();

        if $z5 != 0 goto label5;

        i4 = i1;

        i5 = i2;

        if r1 == null goto label7;

        i4 = i1;

        i5 = i2;

        $r10 = staticinvoke <android.app.FragmentManagerImpl$StartEnterTransitionListener: android.app.BackStackRecord access$100(android.app.FragmentManagerImpl$StartEnterTransitionListener)>(r15);

        $i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        $z2 = virtualinvoke $r10.<android.app.BackStackRecord: boolean interactsWith(java.util.ArrayList,int,int)>(r1, 0, $i0);

        if $z2 == 0 goto label7;

     label5:
        $r5 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mPostponedTransactions>;

        virtualinvoke $r5.<java.util.ArrayList: java.lang.Object remove(int)>(i2);

        i5 = i2 - 1;

        i4 = i1 - 1;

        if r1 == null goto label6;

        $z0 = staticinvoke <android.app.FragmentManagerImpl$StartEnterTransitionListener: boolean access$000(android.app.FragmentManagerImpl$StartEnterTransitionListener)>(r15);

        if $z0 != 0 goto label6;

        $r7 = staticinvoke <android.app.FragmentManagerImpl$StartEnterTransitionListener: android.app.BackStackRecord access$100(android.app.FragmentManagerImpl$StartEnterTransitionListener)>(r15);

        i6 = virtualinvoke r1.<java.util.ArrayList: int indexOf(java.lang.Object)>($r7);

        if i6 == -1 goto label6;

        $r8 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i6);

        $r9 = (java.lang.Boolean) $r8;

        $z1 = virtualinvoke $r9.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label6;

        virtualinvoke r15.<android.app.FragmentManagerImpl$StartEnterTransitionListener: void cancelTransaction()>();

        goto label7;

     label6:
        virtualinvoke r15.<android.app.FragmentManagerImpl$StartEnterTransitionListener: void completeTransaction()>();

     label7:
        i2 = i5 + 1;

        i1 = i4;

        goto label3;

     label8:
        return;
    }

    private android.app.Fragment findFragmentUnder(android.app.Fragment)
    {
        android.app.FragmentManagerImpl r0;
        android.view.ViewGroup r1, $r6;
        android.view.View r2, $r7;
        java.util.ArrayList $r3, $r4;
        int $i0, i1;
        java.lang.Object $r5;
        android.app.Fragment r8, r9;

        r0 := @this: android.app.FragmentManagerImpl;

        r8 := @parameter0: android.app.Fragment;

        r1 = r8.<android.app.Fragment: android.view.ViewGroup mContainer>;

        r2 = r8.<android.app.Fragment: android.view.View mView>;

        if r1 == null goto label5;

        if r2 != null goto label1;

        goto label5;

     label1:
        $r3 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int indexOf(java.lang.Object)>(r8);

        i1 = $i0 - 1;

     label2:
        if i1 < 0 goto label4;

        $r4 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r9 = (android.app.Fragment) $r5;

        $r6 = r9.<android.app.Fragment: android.view.ViewGroup mContainer>;

        if $r6 != r1 goto label3;

        $r7 = r9.<android.app.Fragment: android.view.View mView>;

        if $r7 == null goto label3;

        return r9;

     label3:
        i1 = i1 + -1;

        goto label2;

     label4:
        return null;

     label5:
        return null;
    }

    private void forcePostponedTransactions()
    {
        android.app.FragmentManagerImpl r0;
        java.util.ArrayList $r1, $r2, $r3;
        boolean $z0;
        java.lang.Object $r4;
        android.app.FragmentManagerImpl$StartEnterTransitionListener $r5;

        r0 := @this: android.app.FragmentManagerImpl;

        $r1 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mPostponedTransactions>;

        if $r1 == null goto label2;

     label1:
        $r2 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mPostponedTransactions>;

        $z0 = virtualinvoke $r2.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        $r3 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mPostponedTransactions>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object remove(int)>(0);

        $r5 = (android.app.FragmentManagerImpl$StartEnterTransitionListener) $r4;

        virtualinvoke $r5.<android.app.FragmentManagerImpl$StartEnterTransitionListener: void completeTransaction()>();

        goto label1;

     label2:
        return;
    }

    private boolean generateOpsForPendingActions(java.util.ArrayList, java.util.ArrayList)
    {
        android.app.FragmentManagerImpl r0;
        java.util.ArrayList r1, $r2, $r3, $r4, $r5, $r9, r13;
        int i0, $i1, i2;
        android.app.FragmentHostCallback $r6;
        android.os.Handler $r7;
        java.lang.Runnable $r8;
        java.lang.Object $r10;
        android.app.FragmentManagerImpl$OpGenerator $r11;
        boolean $z0, z1;
        java.lang.Throwable $r12;

        r0 := @this: android.app.FragmentManagerImpl;

        r13 := @parameter0: java.util.ArrayList;

        r1 := @parameter1: java.util.ArrayList;

        z1 = 0;

        entermonitor r0;

     label01:
        $r2 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mPendingActions>;

        if $r2 == null goto label10;

        $r3 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mPendingActions>;

        $i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if $i1 != 0 goto label03;

     label02:
        goto label10;

     label03:
        $r4 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mPendingActions>;

        i0 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

     label04:
        i2 = 0;

     label05:
        if i2 >= i0 goto label08;

     label06:
        $r9 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mPendingActions>;

        $r10 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r11 = (android.app.FragmentManagerImpl$OpGenerator) $r10;

        $z0 = interfaceinvoke $r11.<android.app.FragmentManagerImpl$OpGenerator: boolean generateOps(java.util.ArrayList,java.util.ArrayList)>(r13, r1);

        z1 = z1 | $z0;

     label07:
        i2 = i2 + 1;

        goto label05;

     label08:
        $r5 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mPendingActions>;

        virtualinvoke $r5.<java.util.ArrayList: void clear()>();

        $r6 = r0.<android.app.FragmentManagerImpl: android.app.FragmentHostCallback mHost>;

        $r7 = virtualinvoke $r6.<android.app.FragmentHostCallback: android.os.Handler getHandler()>();

        $r8 = r0.<android.app.FragmentManagerImpl: java.lang.Runnable mExecCommit>;

        virtualinvoke $r7.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r8);

        exitmonitor r0;

     label09:
        return z1;

     label10:
        exitmonitor r0;

     label11:
        return 0;

     label12:
        $r12 := @caughtexception;

     label13:
        exitmonitor r0;

     label14:
        throw $r12;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    private void makeRemovedFragmentsInvisible(android.util.ArraySet)
    {
        android.app.FragmentManagerImpl r0;
        android.util.ArraySet r1;
        int i0, i1;
        android.app.Fragment r2;
        java.lang.Object $r3;
        boolean $z0;
        android.view.View $r4;

        r0 := @this: android.app.FragmentManagerImpl;

        r1 := @parameter0: android.util.ArraySet;

        i0 = virtualinvoke r1.<android.util.ArraySet: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r3 = virtualinvoke r1.<android.util.ArraySet: java.lang.Object valueAt(int)>(i1);

        r2 = (android.app.Fragment) $r3;

        $z0 = r2.<android.app.Fragment: boolean mAdded>;

        if $z0 != 0 goto label2;

        $r4 = virtualinvoke r2.<android.app.Fragment: android.view.View getView()>();

        virtualinvoke $r4.<android.view.View: void setTransitionAlpha(float)>(0.0F);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    static boolean modifiesAlpha(android.animation.Animator)
    {
        boolean $z0, $z1, $z2, $z3;
        android.animation.AnimatorSet $r0;
        int $i0, $i1, i2, i3;
        java.lang.Object $r1;
        android.animation.Animator $r2, r7;
        android.animation.ValueAnimator $r3;
        android.animation.PropertyValuesHolder $r4;
        java.lang.String $r5, $r6;
        android.animation.PropertyValuesHolder[] r8;
        java.util.ArrayList r9;

        r7 := @parameter0: android.animation.Animator;

        if r7 != null goto label1;

        return 0;

     label1:
        $z0 = r7 instanceof android.animation.ValueAnimator;

        if $z0 == 0 goto label5;

        $r3 = (android.animation.ValueAnimator) r7;

        r8 = virtualinvoke $r3.<android.animation.ValueAnimator: android.animation.PropertyValuesHolder[] getValues()>();

        i2 = 0;

     label2:
        $i1 = lengthof r8;

        if i2 >= $i1 goto label4;

        $r5 = "alpha";

        $r4 = r8[i2];

        $r6 = virtualinvoke $r4.<android.animation.PropertyValuesHolder: java.lang.String getPropertyName()>();

        $z3 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z3 == 0 goto label3;

        return 1;

     label3:
        i2 = i2 + 1;

        goto label2;

     label4:
        goto label8;

     label5:
        $z1 = r7 instanceof android.animation.AnimatorSet;

        if $z1 == 0 goto label8;

        $r0 = (android.animation.AnimatorSet) r7;

        r9 = virtualinvoke $r0.<android.animation.AnimatorSet: java.util.ArrayList getChildAnimations()>();

        i3 = 0;

     label6:
        $i0 = interfaceinvoke r9.<java.util.List: int size()>();

        if i3 >= $i0 goto label8;

        $r1 = interfaceinvoke r9.<java.util.List: java.lang.Object get(int)>(i3);

        $r2 = (android.animation.Animator) $r1;

        $z2 = staticinvoke <android.app.FragmentManagerImpl: boolean modifiesAlpha(android.animation.Animator)>($r2);

        if $z2 == 0 goto label7;

        return 1;

     label7:
        i3 = i3 + 1;

        goto label6;

     label8:
        return 0;
    }

    private boolean popBackStackImmediate(java.lang.String, int, int)
    {
        android.app.FragmentManagerImpl r0, r6;
        int i0, i1;
        boolean z0, $z2;
        java.util.ArrayList $r1, $r2, $r7, $r8;
        java.lang.Throwable $r3;
        java.lang.String r4;
        android.app.Fragment r5;

        r0 := @this: android.app.FragmentManagerImpl;

        r4 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        virtualinvoke r0.<android.app.FragmentManagerImpl: boolean execPendingActions()>();

        specialinvoke r0.<android.app.FragmentManagerImpl: void ensureExecReady(boolean)>(1);

        r5 = r0.<android.app.FragmentManagerImpl: android.app.Fragment mPrimaryNav>;

        if r5 == null goto label1;

        if i0 >= 0 goto label1;

        if r4 != null goto label1;

        r6 = r5.<android.app.Fragment: android.app.FragmentManagerImpl mChildFragmentManager>;

        if r6 == null goto label1;

        $z2 = virtualinvoke r6.<android.app.FragmentManager: boolean popBackStackImmediate()>();

        if $z2 == 0 goto label1;

        return 1;

     label1:
        $r7 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mTmpRecords>;

        $r8 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mTmpIsPop>;

        z0 = virtualinvoke r0.<android.app.FragmentManagerImpl: boolean popBackStackState(java.util.ArrayList,java.util.ArrayList,java.lang.String,int,int)>($r7, $r8, r4, i0, i1);

        if z0 == 0 goto label5;

        r0.<android.app.FragmentManagerImpl: boolean mExecutingActions> = 1;

     label2:
        $r2 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mTmpRecords>;

        $r1 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mTmpIsPop>;

        specialinvoke r0.<android.app.FragmentManagerImpl: void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList)>($r2, $r1);

     label3:
        specialinvoke r0.<android.app.FragmentManagerImpl: void cleanupExec()>();

        goto label5;

     label4:
        $r3 := @caughtexception;

        specialinvoke r0.<android.app.FragmentManagerImpl: void cleanupExec()>();

        throw $r3;

     label5:
        virtualinvoke r0.<android.app.FragmentManagerImpl: void doPendingDeferredStart()>();

        specialinvoke r0.<android.app.FragmentManagerImpl: void burpActive()>();

        return z0;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    private int postponePostponableTransactions(java.util.ArrayList, java.util.ArrayList, int, int, android.util.ArraySet)
    {
        android.app.FragmentManagerImpl r0;
        java.util.ArrayList r1, r2, $r9, $r11, $r13;
        int i0, i1, $i2, i3, i4, i5;
        android.util.ArraySet r3;
        android.app.BackStackRecord r4;
        boolean z0, $z1, $z3, z4;
        java.lang.Object $r6, $r7;
        java.lang.Boolean $r8;
        android.app.FragmentManagerImpl$StartEnterTransitionListener $r10;

        r0 := @this: android.app.FragmentManagerImpl;

        r1 := @parameter0: java.util.ArrayList;

        r2 := @parameter1: java.util.ArrayList;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r3 := @parameter4: android.util.ArraySet;

        i3 = i1;

        i4 = i1 - 1;

     label1:
        if i4 < i0 goto label9;

        $r6 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        r4 = (android.app.BackStackRecord) $r6;

        $r7 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        $r8 = (java.lang.Boolean) $r7;

        z0 = virtualinvoke $r8.<java.lang.Boolean: boolean booleanValue()>();

        $z1 = virtualinvoke r4.<android.app.BackStackRecord: boolean isPostponed()>();

        if $z1 == 0 goto label2;

        $i2 = i4 + 1;

        $z3 = virtualinvoke r4.<android.app.BackStackRecord: boolean interactsWith(java.util.ArrayList,int,int)>(r1, $i2, i1);

        if $z3 != 0 goto label2;

        z4 = 1;

        goto label3;

     label2:
        z4 = 0;

     label3:
        i5 = i3;

        if z4 == 0 goto label8;

        $r9 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mPostponedTransactions>;

        if $r9 != null goto label4;

        $r13 = new java.util.ArrayList;

        specialinvoke $r13.<java.util.ArrayList: void <init>()>();

        r0.<android.app.FragmentManagerImpl: java.util.ArrayList mPostponedTransactions> = $r13;

     label4:
        $r10 = new android.app.FragmentManagerImpl$StartEnterTransitionListener;

        specialinvoke $r10.<android.app.FragmentManagerImpl$StartEnterTransitionListener: void <init>(android.app.BackStackRecord,boolean)>(r4, z0);

        $r11 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mPostponedTransactions>;

        virtualinvoke $r11.<java.util.ArrayList: boolean add(java.lang.Object)>($r10);

        virtualinvoke r4.<android.app.BackStackRecord: void setOnStartPostponedListener(android.app.Fragment$OnStartEnterTransitionListener)>($r10);

        if z0 == 0 goto label5;

        virtualinvoke r4.<android.app.BackStackRecord: void executeOps()>();

        goto label6;

     label5:
        virtualinvoke r4.<android.app.BackStackRecord: void executePopOps(boolean)>(0);

     label6:
        i5 = i3 - 1;

        if i4 == i5 goto label7;

        virtualinvoke r1.<java.util.ArrayList: java.lang.Object remove(int)>(i4);

        virtualinvoke r1.<java.util.ArrayList: void add(int,java.lang.Object)>(i5, r4);

     label7:
        specialinvoke r0.<android.app.FragmentManagerImpl: void addAddedFragments(android.util.ArraySet)>(r3);

     label8:
        i4 = i4 + -1;

        i3 = i5;

        goto label1;

     label9:
        return i3;
    }

    private void removeRedundantOperationsAndExecute(java.util.ArrayList, java.util.ArrayList)
    {
        android.app.FragmentManagerImpl r0;
        java.util.ArrayList r1, r2;
        int i0, $i1, $i2, i3, i4, i5, i6, i7, i8;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.IllegalStateException $r3;
        java.lang.Object $r4, $r6, $r8, $r10;
        android.app.BackStackRecord $r5, $r11;
        java.lang.Boolean $r7, $r9;

        r0 := @this: android.app.FragmentManagerImpl;

        r1 := @parameter0: java.util.ArrayList;

        r2 := @parameter1: java.util.ArrayList;

        if r1 == null goto label10;

        $z0 = virtualinvoke r1.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 == 0 goto label01;

        goto label10;

     label01:
        if r2 == null goto label09;

        $i1 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        $i2 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        if $i1 != $i2 goto label09;

        specialinvoke r0.<android.app.FragmentManagerImpl: void executePostponedTransaction(java.util.ArrayList,java.util.ArrayList)>(r1, r2);

        i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        i3 = 0;

        i4 = 0;

     label02:
        if i4 >= i0 goto label07;

        i5 = i3;

        i6 = i4;

        $r4 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        $r5 = (android.app.BackStackRecord) $r4;

        $z1 = $r5.<android.app.BackStackRecord: boolean mReorderingAllowed>;

        if $z1 != 0 goto label06;

        if i3 == i4 goto label03;

        specialinvoke r0.<android.app.FragmentManagerImpl: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)>(r1, r2, i3, i4);

     label03:
        i7 = i4 + 1;

        i8 = i7;

        $r6 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        $r7 = (java.lang.Boolean) $r6;

        $z2 = virtualinvoke $r7.<java.lang.Boolean: boolean booleanValue()>();

        if $z2 == 0 goto label05;

     label04:
        i8 = i7;

        if i7 >= i0 goto label05;

        i8 = i7;

        $r8 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i7);

        $r9 = (java.lang.Boolean) $r8;

        $z3 = virtualinvoke $r9.<java.lang.Boolean: boolean booleanValue()>();

        if $z3 == 0 goto label05;

        i8 = i7;

        $r10 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i7);

        $r11 = (android.app.BackStackRecord) $r10;

        $z4 = $r11.<android.app.BackStackRecord: boolean mReorderingAllowed>;

        if $z4 != 0 goto label05;

        i7 = i7 + 1;

        goto label04;

     label05:
        specialinvoke r0.<android.app.FragmentManagerImpl: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)>(r1, r2, i4, i8);

        i6 = i8 - 1;

        i5 = i8;

     label06:
        i4 = i6 + 1;

        i3 = i5;

        goto label02;

     label07:
        if i3 == i0 goto label08;

        specialinvoke r0.<android.app.FragmentManagerImpl: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)>(r1, r2, i3, i0);

     label08:
        return;

     label09:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Internal error with the back stack records");

        throw $r3;

     label10:
        return;
    }

    public static int reverseTransit(int)
    {
        int i1;
        short s2;

        i1 := @parameter0: int;

        if i1 == 4097 goto label3;

        if i1 == 4099 goto label2;

        if i1 == 8194 goto label1;

        s2 = 0;

        goto label4;

     label1:
        s2 = 4097;

        goto label4;

     label2:
        s2 = 4099;

        goto label4;

     label3:
        s2 = 8194;

     label4:
        return s2;
    }

    private void scheduleCommit()
    {
        android.app.FragmentManagerImpl r0;
        android.app.FragmentHostCallback $r1, $r4;
        android.os.Handler $r2, $r5;
        java.lang.Runnable $r3, $r6;
        java.util.ArrayList $r7, $r8, r10, $r11;
        int $i0;
        boolean $z2, z3, z4;
        java.lang.Throwable $r9;

        r0 := @this: android.app.FragmentManagerImpl;

        entermonitor r0;

     label01:
        r10 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mPostponedTransactions>;

     label02:
        if r10 == null goto label05;

     label03:
        $r8 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mPostponedTransactions>;

        $z2 = virtualinvoke $r8.<java.util.ArrayList: boolean isEmpty()>();

        if $z2 != 0 goto label05;

     label04:
        z3 = 1;

        goto label06;

     label05:
        z3 = 0;

     label06:
        z4 = 0;

     label07:
        $r11 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mPendingActions>;

        if $r11 == null goto label11;

     label08:
        z4 = 0;

     label09:
        $r7 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mPendingActions>;

        $i0 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        if $i0 != 1 goto label11;

     label10:
        z4 = 1;

     label11:
        if z3 != 0 goto label12;

        if z4 == 0 goto label13;

     label12:
        $r1 = r0.<android.app.FragmentManagerImpl: android.app.FragmentHostCallback mHost>;

        $r2 = virtualinvoke $r1.<android.app.FragmentHostCallback: android.os.Handler getHandler()>();

        $r3 = r0.<android.app.FragmentManagerImpl: java.lang.Runnable mExecCommit>;

        virtualinvoke $r2.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r3);

        $r4 = r0.<android.app.FragmentManagerImpl: android.app.FragmentHostCallback mHost>;

        $r5 = virtualinvoke $r4.<android.app.FragmentHostCallback: android.os.Handler getHandler()>();

        $r6 = r0.<android.app.FragmentManagerImpl: java.lang.Runnable mExecCommit>;

        virtualinvoke $r5.<android.os.Handler: boolean post(java.lang.Runnable)>($r6);

     label13:
        exitmonitor r0;

     label14:
        return;

     label15:
        $r9 := @caughtexception;

     label16:
        exitmonitor r0;

     label17:
        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label07 to label08 with label15;
        catch java.lang.Throwable from label09 to label10 with label15;
        catch java.lang.Throwable from label12 to label13 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label16 to label17 with label15;
    }

    private void setHWLayerAnimListenerIfAlpha(android.view.View, android.animation.Animator)
    {
        android.app.FragmentManagerImpl r0;
        android.view.View r1;
        android.animation.Animator r2;
        boolean $z0;
        android.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener $r3;

        r0 := @this: android.app.FragmentManagerImpl;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.animation.Animator;

        if r1 == null goto label3;

        if r2 != null goto label1;

        goto label3;

     label1:
        $z0 = staticinvoke <android.app.FragmentManagerImpl: boolean shouldRunOnHWLayer(android.view.View,android.animation.Animator)>(r1, r2);

        if $z0 == 0 goto label2;

        $r3 = new android.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener;

        specialinvoke $r3.<android.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener: void <init>(android.view.View)>(r1);

        virtualinvoke r2.<android.animation.Animator: void addListener(android.animation.Animator$AnimatorListener)>($r3);

     label2:
        return;

     label3:
        return;
    }

    private static void setRetaining(android.app.FragmentManagerNonConfig)
    {
        boolean $z0, $z1;
        java.lang.Object $r0, $r2;
        android.app.FragmentManagerNonConfig $r1, r4;
        android.app.Fragment $r3;
        java.util.List r5, r7;
        java.util.Iterator r6, r8;

        r4 := @parameter0: android.app.FragmentManagerNonConfig;

        if r4 != null goto label1;

        return;

     label1:
        r5 = virtualinvoke r4.<android.app.FragmentManagerNonConfig: java.util.List getFragments()>();

        if r5 == null goto label3;

        r6 = interfaceinvoke r5.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r2 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (android.app.Fragment) $r2;

        $r3.<android.app.Fragment: boolean mRetaining> = 1;

        goto label2;

     label3:
        r7 = virtualinvoke r4.<android.app.FragmentManagerNonConfig: java.util.List getChildNonConfigs()>();

        if r7 == null goto label5;

        r8 = interfaceinvoke r7.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z0 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r0 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();

        $r1 = (android.app.FragmentManagerNonConfig) $r0;

        staticinvoke <android.app.FragmentManagerImpl: void setRetaining(android.app.FragmentManagerNonConfig)>($r1);

        goto label4;

     label5:
        return;
    }

    static boolean shouldRunOnHWLayer(android.view.View, android.animation.Animator)
    {
        android.view.View r0;
        android.animation.Animator r1;
        int $i0;
        boolean $z0, $z1, z2;

        r0 := @parameter0: android.view.View;

        r1 := @parameter1: android.animation.Animator;

        z2 = 0;

        if r0 == null goto label3;

        if r1 != null goto label1;

        goto label3;

     label1:
        $i0 = virtualinvoke r0.<android.view.View: int getLayerType()>();

        if $i0 != 0 goto label2;

        $z0 = virtualinvoke r0.<android.view.View: boolean hasOverlappingRendering()>();

        if $z0 == 0 goto label2;

        $z1 = staticinvoke <android.app.FragmentManagerImpl: boolean modifiesAlpha(android.animation.Animator)>(r1);

        if $z1 == 0 goto label2;

        z2 = 1;

        goto label2;

     label2:
        return z2;

     label3:
        return 0;
    }

    private void throwException(java.lang.RuntimeException)
    {
        android.app.FragmentManagerImpl r0;
        java.lang.RuntimeException r1;
        java.lang.String $r3;
        com.android.internal.util.FastPrintWriter $r4;
        android.util.LogWriter $r5;
        android.app.FragmentHostCallback $r6, $r9;
        java.lang.String[] $r7, $r8;
        java.lang.Exception $r10, $r11;

        r0 := @this: android.app.FragmentManagerImpl;

        r1 := @parameter0: java.lang.RuntimeException;

        $r3 = virtualinvoke r1.<java.lang.RuntimeException: java.lang.String getMessage()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("FragmentManager", $r3);

        $r4 = new com.android.internal.util.FastPrintWriter;

        $r5 = new android.util.LogWriter;

        specialinvoke $r5.<android.util.LogWriter: void <init>(int,java.lang.String)>(6, "FragmentManager");

        specialinvoke $r4.<com.android.internal.util.FastPrintWriter: void <init>(java.io.Writer,boolean,int)>($r5, 0, 1024);

        $r6 = r0.<android.app.FragmentManagerImpl: android.app.FragmentHostCallback mHost>;

        if $r6 == null goto label5;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("FragmentManager", "Activity state:");

     label1:
        $r9 = r0.<android.app.FragmentManagerImpl: android.app.FragmentHostCallback mHost>;

        $r8 = newarray (java.lang.String)[0];

        virtualinvoke $r9.<android.app.FragmentHostCallback: void onDump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>("  ", null, $r4, $r8);

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        virtualinvoke $r4.<java.io.PrintWriter: void flush()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("FragmentManager", "Failed dumping state", $r10);

     label4:
        goto label9;

     label5:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("FragmentManager", "Fragment manager state:");

     label6:
        $r7 = newarray (java.lang.String)[0];

        virtualinvoke r0.<android.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>("  ", null, $r4, $r7);

     label7:
        goto label9;

     label8:
        $r11 := @caughtexception;

        virtualinvoke $r4.<java.io.PrintWriter: void flush()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("FragmentManager", "Failed dumping state", $r11);

     label9:
        virtualinvoke $r4.<java.io.PrintWriter: void flush()>();

        throw r1;

        catch java.lang.Exception from label1 to label2 with label3;
        catch java.lang.Exception from label6 to label7 with label8;
    }

    public static int transitToStyleIndex(int, boolean)
    {
        boolean z0;
        int i1;
        byte b2;

        i1 := @parameter0: int;

        z0 := @parameter1: boolean;

        if i1 == 4097 goto label7;

        if i1 == 4099 goto label4;

        if i1 == 8194 goto label1;

        b2 = -1;

        goto label9;

     label1:
        if z0 == 0 goto label2;

        b2 = 2;

        goto label3;

     label2:
        b2 = 3;

     label3:
        goto label9;

     label4:
        if z0 == 0 goto label5;

        b2 = 4;

        goto label6;

     label5:
        b2 = 5;

     label6:
        goto label9;

     label7:
        if z0 == 0 goto label8;

        b2 = 0;

        goto label9;

     label8:
        b2 = 1;

     label9:
        return b2;
    }

    void addBackStackState(android.app.BackStackRecord)
    {
        android.app.FragmentManagerImpl r0;
        android.app.BackStackRecord r1;
        java.util.ArrayList $r2, $r3, $r4;

        r0 := @this: android.app.FragmentManagerImpl;

        r1 := @parameter0: android.app.BackStackRecord;

        $r2 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mBackStack>;

        if $r2 != null goto label1;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<android.app.FragmentManagerImpl: java.util.ArrayList mBackStack> = $r4;

     label1:
        $r3 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mBackStack>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void addFragment(android.app.Fragment, boolean)
    {
        android.app.FragmentManagerImpl r0;
        boolean z0, $z1, $z2, $z3, $z5, $z6;
        java.util.ArrayList $r1, $r7, r16;
        java.lang.StringBuilder $r2, $r9;
        java.lang.IllegalStateException $r5;
        java.lang.String $r6, $r12;
        android.view.View $r8;
        java.lang.Throwable $r13;
        android.app.Fragment r14;

        r0 := @this: android.app.FragmentManagerImpl;

        r14 := @parameter0: android.app.Fragment;

        z0 := @parameter1: boolean;

        $z1 = <android.app.FragmentManagerImpl: boolean DEBUG>;

        if $z1 == 0 goto label01;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("add: ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r14);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r12);

     label01:
        virtualinvoke r0.<android.app.FragmentManagerImpl: void makeActive(android.app.Fragment)>(r14);

        $z2 = r14.<android.app.Fragment: boolean mDetached>;

        if $z2 != 0 goto label10;

        $r1 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $z3 = virtualinvoke $r1.<java.util.ArrayList: boolean contains(java.lang.Object)>(r14);

        if $z3 != 0 goto label09;

        r16 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        entermonitor r16;

     label02:
        $r7 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>(r14);

        exitmonitor r16;

     label03:
        r14.<android.app.Fragment: boolean mAdded> = 1;

        r14.<android.app.Fragment: boolean mRemoving> = 0;

        $r8 = r14.<android.app.Fragment: android.view.View mView>;

        if $r8 != null goto label04;

        r14.<android.app.Fragment: boolean mHiddenChanged> = 0;

     label04:
        $z5 = r14.<android.app.Fragment: boolean mHasMenu>;

        if $z5 == 0 goto label05;

        $z6 = r14.<android.app.Fragment: boolean mMenuVisible>;

        if $z6 == 0 goto label05;

        r0.<android.app.FragmentManagerImpl: boolean mNeedMenuInvalidate> = 1;

     label05:
        if z0 == 0 goto label10;

        virtualinvoke r0.<android.app.FragmentManagerImpl: void moveToState(android.app.Fragment)>(r14);

        goto label10;

     label06:
        $r13 := @caughtexception;

     label07:
        exitmonitor r16;

     label08:
        throw $r13;

     label09:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fragment already added: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r14);

        $r5 = new java.lang.IllegalStateException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label10:
        return;

        catch java.lang.Throwable from label02 to label03 with label06;
        catch java.lang.Throwable from label07 to label08 with label06;
    }

    public void addOnBackStackChangedListener(android.app.FragmentManager$OnBackStackChangedListener)
    {
        android.app.FragmentManagerImpl r0;
        android.app.FragmentManager$OnBackStackChangedListener r1;
        java.util.ArrayList $r2, $r3, $r4;

        r0 := @this: android.app.FragmentManagerImpl;

        r1 := @parameter0: android.app.FragmentManager$OnBackStackChangedListener;

        $r2 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mBackStackChangeListeners>;

        if $r2 != null goto label1;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<android.app.FragmentManagerImpl: java.util.ArrayList mBackStackChangeListeners> = $r4;

     label1:
        $r3 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mBackStackChangeListeners>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        return;
    }

    public int allocBackStackIndex(android.app.BackStackRecord)
    {
        android.app.FragmentManagerImpl r0;
        java.util.ArrayList $r1, $r2, $r3, $r4, $r10, $r11, $r12, $r15, r25;
        boolean $z0, $z2;
        java.lang.String $r9, $r21;
        int $i1, $i2, $i3, i5, i6;
        java.lang.Object $r13;
        java.lang.Integer $r14;
        java.lang.Throwable $r22;
        android.app.BackStackRecord r23;
        java.lang.StringBuilder r24, r26;

        r0 := @this: android.app.FragmentManagerImpl;

        r23 := @parameter0: android.app.BackStackRecord;

        entermonitor r0;

     label01:
        $r1 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mAvailBackStackIndices>;

        if $r1 == null goto label06;

        $r10 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mAvailBackStackIndices>;

        $i1 = virtualinvoke $r10.<java.util.ArrayList: int size()>();

        if $i1 > 0 goto label03;

     label02:
        goto label06;

     label03:
        $r12 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mAvailBackStackIndices>;

        $r11 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mAvailBackStackIndices>;

        $i2 = virtualinvoke $r11.<java.util.ArrayList: int size()>();

        $i3 = $i2 - 1;

        $r13 = virtualinvoke $r12.<java.util.ArrayList: java.lang.Object remove(int)>($i3);

        $r14 = (java.lang.Integer) $r13;

        i5 = virtualinvoke $r14.<java.lang.Integer: int intValue()>();

        $z2 = <android.app.FragmentManagerImpl: boolean DEBUG>;

        if $z2 == 0 goto label04;

        r24 = new java.lang.StringBuilder;

        specialinvoke r24.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Adding back stack index ");

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with ");

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r23);

        $r21 = virtualinvoke r24.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r21);

     label04:
        $r15 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mBackStackIndices>;

        virtualinvoke $r15.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>(i5, r23);

        exitmonitor r0;

     label05:
        return i5;

     label06:
        $r2 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mBackStackIndices>;

        if $r2 != null goto label07;

        r25 = new java.util.ArrayList;

        specialinvoke r25.<java.util.ArrayList: void <init>()>();

        r0.<android.app.FragmentManagerImpl: java.util.ArrayList mBackStackIndices> = r25;

     label07:
        $r3 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mBackStackIndices>;

        i6 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        $z0 = <android.app.FragmentManagerImpl: boolean DEBUG>;

        if $z0 == 0 goto label08;

        r26 = new java.lang.StringBuilder;

        specialinvoke r26.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting back stack index ");

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6);

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r23);

        $r9 = virtualinvoke r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r9);

     label08:
        $r4 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mBackStackIndices>;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r23);

        exitmonitor r0;

     label09:
        return i6;

     label10:
        $r22 := @caughtexception;

     label11:
        exitmonitor r0;

     label12:
        throw $r22;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public void attachController(android.app.FragmentHostCallback, android.app.FragmentContainer, android.app.Fragment)
    {
        android.app.FragmentManagerImpl r0;
        android.app.FragmentHostCallback r1, $r4;
        android.app.FragmentContainer r2;
        android.app.Fragment r3;
        java.lang.IllegalStateException $r5;
        int $i0;
        boolean z0;

        r0 := @this: android.app.FragmentManagerImpl;

        r1 := @parameter0: android.app.FragmentHostCallback;

        r2 := @parameter1: android.app.FragmentContainer;

        r3 := @parameter2: android.app.Fragment;

        $r4 = r0.<android.app.FragmentManagerImpl: android.app.FragmentHostCallback mHost>;

        if $r4 != null goto label3;

        r0.<android.app.FragmentManagerImpl: android.app.FragmentHostCallback mHost> = r1;

        r0.<android.app.FragmentManagerImpl: android.app.FragmentContainer mContainer> = r2;

        r0.<android.app.FragmentManagerImpl: android.app.Fragment mParent> = r3;

        $i0 = virtualinvoke r0.<android.app.FragmentManagerImpl: int getTargetSdk()>();

        if $i0 > 25 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        r0.<android.app.FragmentManagerImpl: boolean mAllowOldReentrantBehavior> = z0;

        return;

     label3:
        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Already attached");

        throw $r5;
    }

    public void attachFragment(android.app.Fragment)
    {
        android.app.FragmentManagerImpl r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z6, $z7;
        java.util.ArrayList $r1, $r7, r20;
        java.lang.StringBuilder $r2, $r8, $r12;
        java.lang.IllegalStateException $r5;
        java.lang.String $r6, $r11, $r15;
        java.lang.Throwable $r16;
        android.app.Fragment r17;

        r0 := @this: android.app.FragmentManagerImpl;

        r17 := @parameter0: android.app.Fragment;

        $z0 = <android.app.FragmentManagerImpl: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("attach: ");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r17);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r15);

     label1:
        $z1 = r17.<android.app.Fragment: boolean mDetached>;

        if $z1 == 0 goto label9;

        r17.<android.app.Fragment: boolean mDetached> = 0;

        $z2 = r17.<android.app.Fragment: boolean mAdded>;

        if $z2 != 0 goto label9;

        $r1 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $z3 = virtualinvoke $r1.<java.util.ArrayList: boolean contains(java.lang.Object)>(r17);

        if $z3 != 0 goto label8;

        $z4 = <android.app.FragmentManagerImpl: boolean DEBUG>;

        if $z4 == 0 goto label2;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("add from attach: ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r17);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r11);

     label2:
        r20 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        entermonitor r20;

     label3:
        $r7 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>(r17);

        exitmonitor r20;

     label4:
        r17.<android.app.Fragment: boolean mAdded> = 1;

        $z6 = r17.<android.app.Fragment: boolean mHasMenu>;

        if $z6 == 0 goto label9;

        $z7 = r17.<android.app.Fragment: boolean mMenuVisible>;

        if $z7 == 0 goto label9;

        r0.<android.app.FragmentManagerImpl: boolean mNeedMenuInvalidate> = 1;

        goto label9;

     label5:
        $r16 := @caughtexception;

     label6:
        exitmonitor r20;

     label7:
        throw $r16;

     label8:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fragment already added: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r17);

        $r5 = new java.lang.IllegalStateException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label9:
        return;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public android.app.FragmentTransaction beginTransaction()
    {
        android.app.FragmentManagerImpl r0;
        android.app.BackStackRecord $r1;

        r0 := @this: android.app.FragmentManagerImpl;

        $r1 = new android.app.BackStackRecord;

        specialinvoke $r1.<android.app.BackStackRecord: void <init>(android.app.FragmentManagerImpl)>(r0);

        return $r1;
    }

    void completeShowHideFragment(android.app.Fragment)
    {
        android.app.FragmentManagerImpl r0;
        android.app.Fragment r1;
        android.animation.Animator r2;
        android.view.ViewGroup r3;
        android.view.View r4, $r5, $r6, $r7, $r9, $r10;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        int $i0, $i1, i2;
        android.app.FragmentManagerImpl$3 $r8;

        r0 := @this: android.app.FragmentManagerImpl;

        r1 := @parameter0: android.app.Fragment;

        $r5 = r1.<android.app.Fragment: android.view.View mView>;

        if $r5 == null goto label8;

        $i0 = virtualinvoke r1.<android.app.Fragment: int getNextTransition()>();

        $z2 = r1.<android.app.Fragment: boolean mHidden>;

        $z3 = $z2 ^ 1;

        $i1 = virtualinvoke r1.<android.app.Fragment: int getNextTransitionStyle()>();

        r2 = virtualinvoke r0.<android.app.FragmentManagerImpl: android.animation.Animator loadAnimator(android.app.Fragment,int,boolean,int)>(r1, $i0, $z3, $i1);

        if r2 == null goto label5;

        $r6 = r1.<android.app.Fragment: android.view.View mView>;

        virtualinvoke r2.<android.animation.Animator: void setTarget(java.lang.Object)>($r6);

        $z6 = r1.<android.app.Fragment: boolean mHidden>;

        if $z6 == 0 goto label3;

        $z7 = virtualinvoke r1.<android.app.Fragment: boolean isHideReplaced()>();

        if $z7 == 0 goto label1;

        virtualinvoke r1.<android.app.Fragment: void setHideReplaced(boolean)>(0);

        goto label4;

     label1:
        r3 = r1.<android.app.Fragment: android.view.ViewGroup mContainer>;

        r4 = r1.<android.app.Fragment: android.view.View mView>;

        if r3 == null goto label2;

        virtualinvoke r3.<android.view.ViewGroup: void startViewTransition(android.view.View)>(r4);

     label2:
        $r8 = new android.app.FragmentManagerImpl$3;

        specialinvoke $r8.<android.app.FragmentManagerImpl$3: void <init>(android.app.FragmentManagerImpl,android.view.ViewGroup,android.view.View)>(r0, r3, r4);

        virtualinvoke r2.<android.animation.Animator: void addListener(android.animation.Animator$AnimatorListener)>($r8);

        goto label4;

     label3:
        $r7 = r1.<android.app.Fragment: android.view.View mView>;

        virtualinvoke $r7.<android.view.View: void setVisibility(int)>(0);

     label4:
        $r9 = r1.<android.app.Fragment: android.view.View mView>;

        specialinvoke r0.<android.app.FragmentManagerImpl: void setHWLayerAnimListenerIfAlpha(android.view.View,android.animation.Animator)>($r9, r2);

        virtualinvoke r2.<android.animation.Animator: void start()>();

        goto label8;

     label5:
        $z4 = r1.<android.app.Fragment: boolean mHidden>;

        if $z4 == 0 goto label6;

        $z5 = virtualinvoke r1.<android.app.Fragment: boolean isHideReplaced()>();

        if $z5 != 0 goto label6;

        i2 = 8;

        goto label7;

     label6:
        i2 = 0;

     label7:
        $r10 = r1.<android.app.Fragment: android.view.View mView>;

        virtualinvoke $r10.<android.view.View: void setVisibility(int)>(i2);

        $z8 = virtualinvoke r1.<android.app.Fragment: boolean isHideReplaced()>();

        if $z8 == 0 goto label8;

        virtualinvoke r1.<android.app.Fragment: void setHideReplaced(boolean)>(0);

     label8:
        $z9 = r1.<android.app.Fragment: boolean mAdded>;

        if $z9 == 0 goto label9;

        $z0 = r1.<android.app.Fragment: boolean mHasMenu>;

        if $z0 == 0 goto label9;

        $z1 = r1.<android.app.Fragment: boolean mMenuVisible>;

        if $z1 == 0 goto label9;

        r0.<android.app.FragmentManagerImpl: boolean mNeedMenuInvalidate> = 1;

     label9:
        r1.<android.app.Fragment: boolean mHiddenChanged> = 0;

        $z10 = r1.<android.app.Fragment: boolean mHidden>;

        virtualinvoke r1.<android.app.Fragment: void onHiddenChanged(boolean)>($z10);

        return;
    }

    public void detachFragment(android.app.Fragment)
    {
        android.app.FragmentManagerImpl r0;
        boolean $z0, $z1, $z2, $z3, $z5, $z6;
        java.util.ArrayList $r1, r14;
        java.lang.StringBuilder $r2, $r6;
        java.lang.String $r5, $r9;
        java.lang.Throwable $r10;
        android.app.Fragment r11;

        r0 := @this: android.app.FragmentManagerImpl;

        r11 := @parameter0: android.app.Fragment;

        $z0 = <android.app.FragmentManagerImpl: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("detach: ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r11);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r9);

     label1:
        $z1 = r11.<android.app.Fragment: boolean mDetached>;

        if $z1 != 0 goto label9;

        r11.<android.app.Fragment: boolean mDetached> = 1;

        $z2 = r11.<android.app.Fragment: boolean mAdded>;

        if $z2 == 0 goto label9;

        $z3 = <android.app.FragmentManagerImpl: boolean DEBUG>;

        if $z3 == 0 goto label2;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("remove from detach: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r11);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r5);

     label2:
        r14 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        entermonitor r14;

     label3:
        $r1 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        virtualinvoke $r1.<java.util.ArrayList: boolean remove(java.lang.Object)>(r11);

        exitmonitor r14;

     label4:
        $z5 = r11.<android.app.Fragment: boolean mHasMenu>;

        if $z5 == 0 goto label5;

        $z6 = r11.<android.app.Fragment: boolean mMenuVisible>;

        if $z6 == 0 goto label5;

        r0.<android.app.FragmentManagerImpl: boolean mNeedMenuInvalidate> = 1;

     label5:
        r11.<android.app.Fragment: boolean mAdded> = 0;

        goto label9;

     label6:
        $r10 := @caughtexception;

     label7:
        exitmonitor r14;

     label8:
        throw $r10;

     label9:
        return;

        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public void dispatchActivityCreated()
    {
        android.app.FragmentManagerImpl r0;

        r0 := @this: android.app.FragmentManagerImpl;

        r0.<android.app.FragmentManagerImpl: boolean mStateSaved> = 0;

        specialinvoke r0.<android.app.FragmentManagerImpl: void dispatchMoveToState(int)>(2);

        return;
    }

    public void dispatchConfigurationChanged(android.content.res.Configuration)
    {
        android.app.FragmentManagerImpl r0;
        android.content.res.Configuration r1;
        android.app.Fragment r2;
        java.util.ArrayList $r3, $r4;
        int $i0, i1;
        java.lang.Object $r5;

        r0 := @this: android.app.FragmentManagerImpl;

        r1 := @parameter0: android.content.res.Configuration;

        i1 = 0;

     label1:
        $r3 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if i1 >= $i0 goto label3;

        $r4 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r2 = (android.app.Fragment) $r5;

        if r2 == null goto label2;

        virtualinvoke r2.<android.app.Fragment: void performConfigurationChanged(android.content.res.Configuration)>(r1);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    public boolean dispatchContextItemSelected(android.view.MenuItem)
    {
        android.app.FragmentManagerImpl r0;
        android.view.MenuItem r1;
        android.app.Fragment r2;
        int $i0, $i1, i2;
        java.util.ArrayList $r3, $r4;
        java.lang.Object $r5;
        boolean $z0;

        r0 := @this: android.app.FragmentManagerImpl;

        r1 := @parameter0: android.view.MenuItem;

        $i0 = r0.<android.app.FragmentManagerImpl: int mCurState>;

        if $i0 >= 1 goto label1;

        return 0;

     label1:
        i2 = 0;

     label2:
        $r3 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if i2 >= $i1 goto label4;

        $r4 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r2 = (android.app.Fragment) $r5;

        if r2 == null goto label3;

        $z0 = virtualinvoke r2.<android.app.Fragment: boolean performContextItemSelected(android.view.MenuItem)>(r1);

        if $z0 == 0 goto label3;

        return 1;

     label3:
        i2 = i2 + 1;

        goto label2;

     label4:
        return 0;
    }

    public void dispatchCreate()
    {
        android.app.FragmentManagerImpl r0;

        r0 := @this: android.app.FragmentManagerImpl;

        r0.<android.app.FragmentManagerImpl: boolean mStateSaved> = 0;

        specialinvoke r0.<android.app.FragmentManagerImpl: void dispatchMoveToState(int)>(1);

        return;
    }

    public boolean dispatchCreateOptionsMenu(android.view.Menu, android.view.MenuInflater)
    {
        android.app.FragmentManagerImpl r0;
        android.view.MenuInflater r1;
        android.app.Fragment r2, r14;
        int $i0, $i1, $i2, i3, i4;
        java.util.ArrayList $r3, $r4, $r5, $r6, $r8, $r10, r12, r13;
        java.lang.Object $r7, $r9;
        boolean $z0, $z1, z3, z4;
        android.view.Menu r11;

        r0 := @this: android.app.FragmentManagerImpl;

        r11 := @parameter0: android.view.Menu;

        r1 := @parameter1: android.view.MenuInflater;

        $i0 = r0.<android.app.FragmentManagerImpl: int mCurState>;

        if $i0 >= 1 goto label1;

        return 0;

     label1:
        z3 = 0;

        r12 = null;

        i3 = 0;

     label2:
        $r3 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if i3 >= $i1 goto label5;

        $r8 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $r9 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r2 = (android.app.Fragment) $r9;

        z4 = z3;

        r13 = r12;

        if r2 == null goto label4;

        z4 = z3;

        r13 = r12;

        $z1 = virtualinvoke r2.<android.app.Fragment: boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>(r11, r1);

        if $z1 == 0 goto label4;

        z4 = 1;

        r13 = r12;

        if r12 != null goto label3;

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        r13 = $r10;

     label3:
        virtualinvoke r13.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

     label4:
        i3 = i3 + 1;

        z3 = z4;

        r12 = r13;

        goto label2;

     label5:
        $r4 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mCreatedMenus>;

        if $r4 == null goto label9;

        i4 = 0;

     label6:
        $r5 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mCreatedMenus>;

        $i2 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        if i4 >= $i2 goto label9;

        $r6 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mCreatedMenus>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        r14 = (android.app.Fragment) $r7;

        if r12 == null goto label7;

        $z0 = virtualinvoke r12.<java.util.ArrayList: boolean contains(java.lang.Object)>(r14);

        if $z0 != 0 goto label8;

     label7:
        virtualinvoke r14.<android.app.Fragment: void onDestroyOptionsMenu()>();

     label8:
        i4 = i4 + 1;

        goto label6;

     label9:
        r0.<android.app.FragmentManagerImpl: java.util.ArrayList mCreatedMenus> = r12;

        return z3;
    }

    public void dispatchDestroy()
    {
        android.app.FragmentManagerImpl r0;

        r0 := @this: android.app.FragmentManagerImpl;

        r0.<android.app.FragmentManagerImpl: boolean mDestroyed> = 1;

        virtualinvoke r0.<android.app.FragmentManagerImpl: boolean execPendingActions()>();

        specialinvoke r0.<android.app.FragmentManagerImpl: void dispatchMoveToState(int)>(0);

        r0.<android.app.FragmentManagerImpl: android.app.FragmentHostCallback mHost> = null;

        r0.<android.app.FragmentManagerImpl: android.app.FragmentContainer mContainer> = null;

        r0.<android.app.FragmentManagerImpl: android.app.Fragment mParent> = null;

        return;
    }

    public void dispatchDestroyView()
    {
        android.app.FragmentManagerImpl r0;

        r0 := @this: android.app.FragmentManagerImpl;

        specialinvoke r0.<android.app.FragmentManagerImpl: void dispatchMoveToState(int)>(1);

        return;
    }

    public void dispatchLowMemory()
    {
        android.app.FragmentManagerImpl r0;
        android.app.Fragment r1;
        java.util.ArrayList $r2, $r3;
        int $i0, i1;
        java.lang.Object $r4;

        r0 := @this: android.app.FragmentManagerImpl;

        i1 = 0;

     label1:
        $r2 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if i1 >= $i0 goto label3;

        $r3 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r1 = (android.app.Fragment) $r4;

        if r1 == null goto label2;

        virtualinvoke r1.<android.app.Fragment: void performLowMemory()>();

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    public void dispatchMultiWindowModeChanged(boolean)
    {
        android.app.FragmentManagerImpl r0;
        boolean z0;
        android.app.Fragment r1;
        java.util.ArrayList $r2, $r3;
        int $i0, i1;
        java.lang.Object $r4;

        r0 := @this: android.app.FragmentManagerImpl;

        z0 := @parameter0: boolean;

        $r2 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label3;

        $r3 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r1 = (android.app.Fragment) $r4;

        if r1 == null goto label2;

        virtualinvoke r1.<android.app.Fragment: void performMultiWindowModeChanged(boolean)>(z0);

     label2:
        i1 = i1 + -1;

        goto label1;

     label3:
        return;
    }

    public void dispatchMultiWindowModeChanged(boolean, android.content.res.Configuration)
    {
        android.app.FragmentManagerImpl r0;
        boolean z0;
        android.content.res.Configuration r1;
        android.app.Fragment r2;
        java.util.ArrayList $r3, $r4;
        int $i0, i1;
        java.lang.Object $r5;

        r0 := @this: android.app.FragmentManagerImpl;

        z0 := @parameter0: boolean;

        r1 := @parameter1: android.content.res.Configuration;

        $r3 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label3;

        $r4 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r2 = (android.app.Fragment) $r5;

        if r2 == null goto label2;

        virtualinvoke r2.<android.app.Fragment: void performMultiWindowModeChanged(boolean,android.content.res.Configuration)>(z0, r1);

     label2:
        i1 = i1 + -1;

        goto label1;

     label3:
        return;
    }

    void dispatchOnFragmentActivityCreated(android.app.Fragment, android.os.Bundle, boolean)
    {
        android.app.FragmentManagerImpl r0, $r9;
        android.app.Fragment r1, r10;
        android.os.Bundle r2;
        boolean z0, $z1, $z2, $z3;
        android.util.Pair r3;
        java.lang.Object $r4, $r5, $r7;
        android.app.FragmentManager$FragmentLifecycleCallbacks $r6;
        java.lang.Boolean $r8;
        android.app.FragmentManager r11;
        java.util.concurrent.CopyOnWriteArrayList $r12;
        java.util.Iterator r13;

        r0 := @this: android.app.FragmentManagerImpl;

        r1 := @parameter0: android.app.Fragment;

        r2 := @parameter1: android.os.Bundle;

        z0 := @parameter2: boolean;

        r10 = r0.<android.app.FragmentManagerImpl: android.app.Fragment mParent>;

        if r10 == null goto label1;

        r11 = virtualinvoke r10.<android.app.Fragment: android.app.FragmentManager getFragmentManager()>();

        $z2 = r11 instanceof android.app.FragmentManagerImpl;

        if $z2 == 0 goto label1;

        $r9 = (android.app.FragmentManagerImpl) r11;

        virtualinvoke $r9.<android.app.FragmentManagerImpl: void dispatchOnFragmentActivityCreated(android.app.Fragment,android.os.Bundle,boolean)>(r1, r2, 1);

     label1:
        $r12 = r0.<android.app.FragmentManagerImpl: java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks>;

        r13 = virtualinvoke $r12.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label2:
        $z3 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label5;

        $r4 = interfaceinvoke r13.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.util.Pair) $r4;

        if z0 == 0 goto label3;

        $r7 = r3.<android.util.Pair: java.lang.Object second>;

        $r8 = (java.lang.Boolean) $r7;

        $z1 = virtualinvoke $r8.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label4;

     label3:
        $r5 = r3.<android.util.Pair: java.lang.Object first>;

        $r6 = (android.app.FragmentManager$FragmentLifecycleCallbacks) $r5;

        virtualinvoke $r6.<android.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentActivityCreated(android.app.FragmentManager,android.app.Fragment,android.os.Bundle)>(r0, r1, r2);

     label4:
        goto label2;

     label5:
        return;
    }

    void dispatchOnFragmentAttached(android.app.Fragment, android.content.Context, boolean)
    {
        android.app.FragmentManagerImpl r0, $r9;
        android.app.Fragment r1, r10;
        android.content.Context r2;
        boolean z0, $z1, $z2, $z3;
        java.util.Iterator r3;
        java.lang.Object $r4, $r5, $r7;
        android.app.FragmentManager$FragmentLifecycleCallbacks $r6;
        java.lang.Boolean $r8;
        android.app.FragmentManager r11;
        java.util.concurrent.CopyOnWriteArrayList $r12;
        android.util.Pair r13;

        r0 := @this: android.app.FragmentManagerImpl;

        r1 := @parameter0: android.app.Fragment;

        r2 := @parameter1: android.content.Context;

        z0 := @parameter2: boolean;

        r10 = r0.<android.app.FragmentManagerImpl: android.app.Fragment mParent>;

        if r10 == null goto label1;

        r11 = virtualinvoke r10.<android.app.Fragment: android.app.FragmentManager getFragmentManager()>();

        $z2 = r11 instanceof android.app.FragmentManagerImpl;

        if $z2 == 0 goto label1;

        $r9 = (android.app.FragmentManagerImpl) r11;

        virtualinvoke $r9.<android.app.FragmentManagerImpl: void dispatchOnFragmentAttached(android.app.Fragment,android.content.Context,boolean)>(r1, r2, 1);

     label1:
        $r12 = r0.<android.app.FragmentManagerImpl: java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks>;

        r3 = virtualinvoke $r12.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label2:
        $z3 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label5;

        $r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r13 = (android.util.Pair) $r4;

        if z0 == 0 goto label3;

        $r7 = r13.<android.util.Pair: java.lang.Object second>;

        $r8 = (java.lang.Boolean) $r7;

        $z1 = virtualinvoke $r8.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label4;

     label3:
        $r5 = r13.<android.util.Pair: java.lang.Object first>;

        $r6 = (android.app.FragmentManager$FragmentLifecycleCallbacks) $r5;

        virtualinvoke $r6.<android.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentAttached(android.app.FragmentManager,android.app.Fragment,android.content.Context)>(r0, r1, r2);

     label4:
        goto label2;

     label5:
        return;
    }

    void dispatchOnFragmentCreated(android.app.Fragment, android.os.Bundle, boolean)
    {
        android.app.FragmentManagerImpl r0, $r9;
        android.app.Fragment r1, r10;
        android.os.Bundle r2;
        boolean z0, $z1, $z2, $z3;
        android.util.Pair r3;
        java.lang.Object $r4, $r5, $r7;
        android.app.FragmentManager$FragmentLifecycleCallbacks $r6;
        java.lang.Boolean $r8;
        android.app.FragmentManager r11;
        java.util.concurrent.CopyOnWriteArrayList $r12;
        java.util.Iterator r13;

        r0 := @this: android.app.FragmentManagerImpl;

        r1 := @parameter0: android.app.Fragment;

        r2 := @parameter1: android.os.Bundle;

        z0 := @parameter2: boolean;

        r10 = r0.<android.app.FragmentManagerImpl: android.app.Fragment mParent>;

        if r10 == null goto label1;

        r11 = virtualinvoke r10.<android.app.Fragment: android.app.FragmentManager getFragmentManager()>();

        $z2 = r11 instanceof android.app.FragmentManagerImpl;

        if $z2 == 0 goto label1;

        $r9 = (android.app.FragmentManagerImpl) r11;

        virtualinvoke $r9.<android.app.FragmentManagerImpl: void dispatchOnFragmentCreated(android.app.Fragment,android.os.Bundle,boolean)>(r1, r2, 1);

     label1:
        $r12 = r0.<android.app.FragmentManagerImpl: java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks>;

        r13 = virtualinvoke $r12.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label2:
        $z3 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label5;

        $r4 = interfaceinvoke r13.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.util.Pair) $r4;

        if z0 == 0 goto label3;

        $r7 = r3.<android.util.Pair: java.lang.Object second>;

        $r8 = (java.lang.Boolean) $r7;

        $z1 = virtualinvoke $r8.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label4;

     label3:
        $r5 = r3.<android.util.Pair: java.lang.Object first>;

        $r6 = (android.app.FragmentManager$FragmentLifecycleCallbacks) $r5;

        virtualinvoke $r6.<android.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentCreated(android.app.FragmentManager,android.app.Fragment,android.os.Bundle)>(r0, r1, r2);

     label4:
        goto label2;

     label5:
        return;
    }

    void dispatchOnFragmentDestroyed(android.app.Fragment, boolean)
    {
        android.app.FragmentManagerImpl r0, $r8;
        android.app.Fragment r1, r9;
        boolean z0, $z1, $z2, $z3;
        android.util.Pair r2;
        java.lang.Object $r3, $r4, $r6;
        android.app.FragmentManager$FragmentLifecycleCallbacks $r5;
        java.lang.Boolean $r7;
        android.app.FragmentManager r10;
        java.util.concurrent.CopyOnWriteArrayList $r11;
        java.util.Iterator r12;

        r0 := @this: android.app.FragmentManagerImpl;

        r1 := @parameter0: android.app.Fragment;

        z0 := @parameter1: boolean;

        r9 = r0.<android.app.FragmentManagerImpl: android.app.Fragment mParent>;

        if r9 == null goto label1;

        r10 = virtualinvoke r9.<android.app.Fragment: android.app.FragmentManager getFragmentManager()>();

        $z2 = r10 instanceof android.app.FragmentManagerImpl;

        if $z2 == 0 goto label1;

        $r8 = (android.app.FragmentManagerImpl) r10;

        virtualinvoke $r8.<android.app.FragmentManagerImpl: void dispatchOnFragmentDestroyed(android.app.Fragment,boolean)>(r1, 1);

     label1:
        $r11 = r0.<android.app.FragmentManagerImpl: java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks>;

        r12 = virtualinvoke $r11.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label2:
        $z3 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label5;

        $r3 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.util.Pair) $r3;

        if z0 == 0 goto label3;

        $r6 = r2.<android.util.Pair: java.lang.Object second>;

        $r7 = (java.lang.Boolean) $r6;

        $z1 = virtualinvoke $r7.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label4;

     label3:
        $r4 = r2.<android.util.Pair: java.lang.Object first>;

        $r5 = (android.app.FragmentManager$FragmentLifecycleCallbacks) $r4;

        virtualinvoke $r5.<android.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentDestroyed(android.app.FragmentManager,android.app.Fragment)>(r0, r1);

     label4:
        goto label2;

     label5:
        return;
    }

    void dispatchOnFragmentDetached(android.app.Fragment, boolean)
    {
        android.app.FragmentManagerImpl r0, $r8;
        android.app.Fragment r1, r9;
        boolean z0, $z1, $z2, $z3;
        android.util.Pair r2;
        java.lang.Object $r3, $r4, $r6;
        android.app.FragmentManager$FragmentLifecycleCallbacks $r5;
        java.lang.Boolean $r7;
        android.app.FragmentManager r10;
        java.util.concurrent.CopyOnWriteArrayList $r11;
        java.util.Iterator r12;

        r0 := @this: android.app.FragmentManagerImpl;

        r1 := @parameter0: android.app.Fragment;

        z0 := @parameter1: boolean;

        r9 = r0.<android.app.FragmentManagerImpl: android.app.Fragment mParent>;

        if r9 == null goto label1;

        r10 = virtualinvoke r9.<android.app.Fragment: android.app.FragmentManager getFragmentManager()>();

        $z2 = r10 instanceof android.app.FragmentManagerImpl;

        if $z2 == 0 goto label1;

        $r8 = (android.app.FragmentManagerImpl) r10;

        virtualinvoke $r8.<android.app.FragmentManagerImpl: void dispatchOnFragmentDetached(android.app.Fragment,boolean)>(r1, 1);

     label1:
        $r11 = r0.<android.app.FragmentManagerImpl: java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks>;

        r12 = virtualinvoke $r11.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label2:
        $z3 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label5;

        $r3 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.util.Pair) $r3;

        if z0 == 0 goto label3;

        $r6 = r2.<android.util.Pair: java.lang.Object second>;

        $r7 = (java.lang.Boolean) $r6;

        $z1 = virtualinvoke $r7.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label4;

     label3:
        $r4 = r2.<android.util.Pair: java.lang.Object first>;

        $r5 = (android.app.FragmentManager$FragmentLifecycleCallbacks) $r4;

        virtualinvoke $r5.<android.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentDetached(android.app.FragmentManager,android.app.Fragment)>(r0, r1);

     label4:
        goto label2;

     label5:
        return;
    }

    void dispatchOnFragmentPaused(android.app.Fragment, boolean)
    {
        android.app.FragmentManagerImpl r0, $r8;
        android.app.Fragment r1, r9;
        boolean z0, $z1, $z2, $z3;
        android.util.Pair r2;
        java.lang.Object $r3, $r4, $r6;
        android.app.FragmentManager$FragmentLifecycleCallbacks $r5;
        java.lang.Boolean $r7;
        android.app.FragmentManager r10;
        java.util.concurrent.CopyOnWriteArrayList $r11;
        java.util.Iterator r12;

        r0 := @this: android.app.FragmentManagerImpl;

        r1 := @parameter0: android.app.Fragment;

        z0 := @parameter1: boolean;

        r9 = r0.<android.app.FragmentManagerImpl: android.app.Fragment mParent>;

        if r9 == null goto label1;

        r10 = virtualinvoke r9.<android.app.Fragment: android.app.FragmentManager getFragmentManager()>();

        $z2 = r10 instanceof android.app.FragmentManagerImpl;

        if $z2 == 0 goto label1;

        $r8 = (android.app.FragmentManagerImpl) r10;

        virtualinvoke $r8.<android.app.FragmentManagerImpl: void dispatchOnFragmentPaused(android.app.Fragment,boolean)>(r1, 1);

     label1:
        $r11 = r0.<android.app.FragmentManagerImpl: java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks>;

        r12 = virtualinvoke $r11.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label2:
        $z3 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label5;

        $r3 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.util.Pair) $r3;

        if z0 == 0 goto label3;

        $r6 = r2.<android.util.Pair: java.lang.Object second>;

        $r7 = (java.lang.Boolean) $r6;

        $z1 = virtualinvoke $r7.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label4;

     label3:
        $r4 = r2.<android.util.Pair: java.lang.Object first>;

        $r5 = (android.app.FragmentManager$FragmentLifecycleCallbacks) $r4;

        virtualinvoke $r5.<android.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentPaused(android.app.FragmentManager,android.app.Fragment)>(r0, r1);

     label4:
        goto label2;

     label5:
        return;
    }

    void dispatchOnFragmentPreAttached(android.app.Fragment, android.content.Context, boolean)
    {
        android.app.FragmentManagerImpl r0, $r9;
        android.app.Fragment r1, r10;
        android.content.Context r2;
        boolean z0, $z1, $z2, $z3;
        android.util.Pair r3;
        java.lang.Object $r4, $r5, $r7;
        android.app.FragmentManager$FragmentLifecycleCallbacks $r6;
        java.lang.Boolean $r8;
        android.app.FragmentManager r11;
        java.util.concurrent.CopyOnWriteArrayList $r12;
        java.util.Iterator r13;

        r0 := @this: android.app.FragmentManagerImpl;

        r1 := @parameter0: android.app.Fragment;

        r2 := @parameter1: android.content.Context;

        z0 := @parameter2: boolean;

        r10 = r0.<android.app.FragmentManagerImpl: android.app.Fragment mParent>;

        if r10 == null goto label1;

        r11 = virtualinvoke r10.<android.app.Fragment: android.app.FragmentManager getFragmentManager()>();

        $z2 = r11 instanceof android.app.FragmentManagerImpl;

        if $z2 == 0 goto label1;

        $r9 = (android.app.FragmentManagerImpl) r11;

        virtualinvoke $r9.<android.app.FragmentManagerImpl: void dispatchOnFragmentPreAttached(android.app.Fragment,android.content.Context,boolean)>(r1, r2, 1);

     label1:
        $r12 = r0.<android.app.FragmentManagerImpl: java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks>;

        r13 = virtualinvoke $r12.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label2:
        $z3 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label5;

        $r4 = interfaceinvoke r13.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.util.Pair) $r4;

        if z0 == 0 goto label3;

        $r7 = r3.<android.util.Pair: java.lang.Object second>;

        $r8 = (java.lang.Boolean) $r7;

        $z1 = virtualinvoke $r8.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label4;

     label3:
        $r5 = r3.<android.util.Pair: java.lang.Object first>;

        $r6 = (android.app.FragmentManager$FragmentLifecycleCallbacks) $r5;

        virtualinvoke $r6.<android.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentPreAttached(android.app.FragmentManager,android.app.Fragment,android.content.Context)>(r0, r1, r2);

     label4:
        goto label2;

     label5:
        return;
    }

    void dispatchOnFragmentPreCreated(android.app.Fragment, android.os.Bundle, boolean)
    {
        android.app.FragmentManagerImpl r0, $r9;
        android.app.Fragment r1, r10;
        android.os.Bundle r2;
        boolean z0, $z1, $z2, $z3;
        java.util.Iterator r3;
        java.lang.Object $r4, $r5, $r7;
        android.app.FragmentManager$FragmentLifecycleCallbacks $r6;
        java.lang.Boolean $r8;
        android.app.FragmentManager r11;
        java.util.concurrent.CopyOnWriteArrayList $r12;
        android.util.Pair r13;

        r0 := @this: android.app.FragmentManagerImpl;

        r1 := @parameter0: android.app.Fragment;

        r2 := @parameter1: android.os.Bundle;

        z0 := @parameter2: boolean;

        r10 = r0.<android.app.FragmentManagerImpl: android.app.Fragment mParent>;

        if r10 == null goto label1;

        r11 = virtualinvoke r10.<android.app.Fragment: android.app.FragmentManager getFragmentManager()>();

        $z2 = r11 instanceof android.app.FragmentManagerImpl;

        if $z2 == 0 goto label1;

        $r9 = (android.app.FragmentManagerImpl) r11;

        virtualinvoke $r9.<android.app.FragmentManagerImpl: void dispatchOnFragmentPreCreated(android.app.Fragment,android.os.Bundle,boolean)>(r1, r2, 1);

     label1:
        $r12 = r0.<android.app.FragmentManagerImpl: java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks>;

        r3 = virtualinvoke $r12.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label2:
        $z3 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label5;

        $r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r13 = (android.util.Pair) $r4;

        if z0 == 0 goto label3;

        $r7 = r13.<android.util.Pair: java.lang.Object second>;

        $r8 = (java.lang.Boolean) $r7;

        $z1 = virtualinvoke $r8.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label4;

     label3:
        $r5 = r13.<android.util.Pair: java.lang.Object first>;

        $r6 = (android.app.FragmentManager$FragmentLifecycleCallbacks) $r5;

        virtualinvoke $r6.<android.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentPreCreated(android.app.FragmentManager,android.app.Fragment,android.os.Bundle)>(r0, r1, r2);

     label4:
        goto label2;

     label5:
        return;
    }

    void dispatchOnFragmentResumed(android.app.Fragment, boolean)
    {
        android.app.FragmentManagerImpl r0, $r8;
        android.app.Fragment r1, r9;
        boolean z0, $z1, $z2, $z3;
        android.util.Pair r2;
        java.lang.Object $r3, $r4, $r6;
        android.app.FragmentManager$FragmentLifecycleCallbacks $r5;
        java.lang.Boolean $r7;
        android.app.FragmentManager r10;
        java.util.concurrent.CopyOnWriteArrayList $r11;
        java.util.Iterator r12;

        r0 := @this: android.app.FragmentManagerImpl;

        r1 := @parameter0: android.app.Fragment;

        z0 := @parameter1: boolean;

        r9 = r0.<android.app.FragmentManagerImpl: android.app.Fragment mParent>;

        if r9 == null goto label1;

        r10 = virtualinvoke r9.<android.app.Fragment: android.app.FragmentManager getFragmentManager()>();

        $z2 = r10 instanceof android.app.FragmentManagerImpl;

        if $z2 == 0 goto label1;

        $r8 = (android.app.FragmentManagerImpl) r10;

        virtualinvoke $r8.<android.app.FragmentManagerImpl: void dispatchOnFragmentResumed(android.app.Fragment,boolean)>(r1, 1);

     label1:
        $r11 = r0.<android.app.FragmentManagerImpl: java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks>;

        r12 = virtualinvoke $r11.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label2:
        $z3 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label5;

        $r3 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.util.Pair) $r3;

        if z0 == 0 goto label3;

        $r6 = r2.<android.util.Pair: java.lang.Object second>;

        $r7 = (java.lang.Boolean) $r6;

        $z1 = virtualinvoke $r7.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label4;

     label3:
        $r4 = r2.<android.util.Pair: java.lang.Object first>;

        $r5 = (android.app.FragmentManager$FragmentLifecycleCallbacks) $r4;

        virtualinvoke $r5.<android.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentResumed(android.app.FragmentManager,android.app.Fragment)>(r0, r1);

     label4:
        goto label2;

     label5:
        return;
    }

    void dispatchOnFragmentSaveInstanceState(android.app.Fragment, android.os.Bundle, boolean)
    {
        android.app.FragmentManagerImpl r0, $r9;
        android.app.Fragment r1, r10;
        android.os.Bundle r2;
        boolean z0, $z1, $z2, $z3;
        java.util.Iterator r3;
        java.lang.Object $r4, $r5, $r7;
        android.app.FragmentManager$FragmentLifecycleCallbacks $r6;
        java.lang.Boolean $r8;
        android.app.FragmentManager r11;
        java.util.concurrent.CopyOnWriteArrayList $r12;
        android.util.Pair r13;

        r0 := @this: android.app.FragmentManagerImpl;

        r1 := @parameter0: android.app.Fragment;

        r2 := @parameter1: android.os.Bundle;

        z0 := @parameter2: boolean;

        r10 = r0.<android.app.FragmentManagerImpl: android.app.Fragment mParent>;

        if r10 == null goto label1;

        r11 = virtualinvoke r10.<android.app.Fragment: android.app.FragmentManager getFragmentManager()>();

        $z2 = r11 instanceof android.app.FragmentManagerImpl;

        if $z2 == 0 goto label1;

        $r9 = (android.app.FragmentManagerImpl) r11;

        virtualinvoke $r9.<android.app.FragmentManagerImpl: void dispatchOnFragmentSaveInstanceState(android.app.Fragment,android.os.Bundle,boolean)>(r1, r2, 1);

     label1:
        $r12 = r0.<android.app.FragmentManagerImpl: java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks>;

        r3 = virtualinvoke $r12.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label2:
        $z3 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label5;

        $r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r13 = (android.util.Pair) $r4;

        if z0 == 0 goto label3;

        $r7 = r13.<android.util.Pair: java.lang.Object second>;

        $r8 = (java.lang.Boolean) $r7;

        $z1 = virtualinvoke $r8.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label4;

     label3:
        $r5 = r13.<android.util.Pair: java.lang.Object first>;

        $r6 = (android.app.FragmentManager$FragmentLifecycleCallbacks) $r5;

        virtualinvoke $r6.<android.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentSaveInstanceState(android.app.FragmentManager,android.app.Fragment,android.os.Bundle)>(r0, r1, r2);

     label4:
        goto label2;

     label5:
        return;
    }

    void dispatchOnFragmentStarted(android.app.Fragment, boolean)
    {
        android.app.FragmentManagerImpl r0, $r8;
        android.app.Fragment r1, r9;
        boolean z0, $z1, $z2, $z3;
        java.util.Iterator r2;
        java.lang.Object $r3, $r4, $r6;
        android.app.FragmentManager$FragmentLifecycleCallbacks $r5;
        java.lang.Boolean $r7;
        android.app.FragmentManager r10;
        java.util.concurrent.CopyOnWriteArrayList $r11;
        android.util.Pair r12;

        r0 := @this: android.app.FragmentManagerImpl;

        r1 := @parameter0: android.app.Fragment;

        z0 := @parameter1: boolean;

        r9 = r0.<android.app.FragmentManagerImpl: android.app.Fragment mParent>;

        if r9 == null goto label1;

        r10 = virtualinvoke r9.<android.app.Fragment: android.app.FragmentManager getFragmentManager()>();

        $z2 = r10 instanceof android.app.FragmentManagerImpl;

        if $z2 == 0 goto label1;

        $r8 = (android.app.FragmentManagerImpl) r10;

        virtualinvoke $r8.<android.app.FragmentManagerImpl: void dispatchOnFragmentStarted(android.app.Fragment,boolean)>(r1, 1);

     label1:
        $r11 = r0.<android.app.FragmentManagerImpl: java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks>;

        r2 = virtualinvoke $r11.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label2:
        $z3 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label5;

        $r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r12 = (android.util.Pair) $r3;

        if z0 == 0 goto label3;

        $r6 = r12.<android.util.Pair: java.lang.Object second>;

        $r7 = (java.lang.Boolean) $r6;

        $z1 = virtualinvoke $r7.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label4;

     label3:
        $r4 = r12.<android.util.Pair: java.lang.Object first>;

        $r5 = (android.app.FragmentManager$FragmentLifecycleCallbacks) $r4;

        virtualinvoke $r5.<android.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentStarted(android.app.FragmentManager,android.app.Fragment)>(r0, r1);

     label4:
        goto label2;

     label5:
        return;
    }

    void dispatchOnFragmentStopped(android.app.Fragment, boolean)
    {
        android.app.FragmentManagerImpl r0, $r8;
        android.app.Fragment r1, r9;
        boolean z0, $z1, $z2, $z3;
        java.util.Iterator r2;
        java.lang.Object $r3, $r4, $r6;
        android.app.FragmentManager$FragmentLifecycleCallbacks $r5;
        java.lang.Boolean $r7;
        android.app.FragmentManager r10;
        java.util.concurrent.CopyOnWriteArrayList $r11;
        android.util.Pair r12;

        r0 := @this: android.app.FragmentManagerImpl;

        r1 := @parameter0: android.app.Fragment;

        z0 := @parameter1: boolean;

        r9 = r0.<android.app.FragmentManagerImpl: android.app.Fragment mParent>;

        if r9 == null goto label1;

        r10 = virtualinvoke r9.<android.app.Fragment: android.app.FragmentManager getFragmentManager()>();

        $z2 = r10 instanceof android.app.FragmentManagerImpl;

        if $z2 == 0 goto label1;

        $r8 = (android.app.FragmentManagerImpl) r10;

        virtualinvoke $r8.<android.app.FragmentManagerImpl: void dispatchOnFragmentStopped(android.app.Fragment,boolean)>(r1, 1);

     label1:
        $r11 = r0.<android.app.FragmentManagerImpl: java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks>;

        r2 = virtualinvoke $r11.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label2:
        $z3 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label5;

        $r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r12 = (android.util.Pair) $r3;

        if z0 == 0 goto label3;

        $r6 = r12.<android.util.Pair: java.lang.Object second>;

        $r7 = (java.lang.Boolean) $r6;

        $z1 = virtualinvoke $r7.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label4;

     label3:
        $r4 = r12.<android.util.Pair: java.lang.Object first>;

        $r5 = (android.app.FragmentManager$FragmentLifecycleCallbacks) $r4;

        virtualinvoke $r5.<android.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentStopped(android.app.FragmentManager,android.app.Fragment)>(r0, r1);

     label4:
        goto label2;

     label5:
        return;
    }

    void dispatchOnFragmentViewCreated(android.app.Fragment, android.view.View, android.os.Bundle, boolean)
    {
        android.app.FragmentManagerImpl r0, $r10;
        android.app.Fragment r1, r11;
        android.view.View r2;
        android.os.Bundle r3;
        boolean z0, $z1, $z2, $z3;
        android.util.Pair r4;
        java.lang.Object $r5, $r6, $r8;
        android.app.FragmentManager$FragmentLifecycleCallbacks $r7;
        java.lang.Boolean $r9;
        android.app.FragmentManager r12;
        java.util.concurrent.CopyOnWriteArrayList $r13;
        java.util.Iterator r14;

        r0 := @this: android.app.FragmentManagerImpl;

        r1 := @parameter0: android.app.Fragment;

        r2 := @parameter1: android.view.View;

        r3 := @parameter2: android.os.Bundle;

        z0 := @parameter3: boolean;

        r11 = r0.<android.app.FragmentManagerImpl: android.app.Fragment mParent>;

        if r11 == null goto label1;

        r12 = virtualinvoke r11.<android.app.Fragment: android.app.FragmentManager getFragmentManager()>();

        $z2 = r12 instanceof android.app.FragmentManagerImpl;

        if $z2 == 0 goto label1;

        $r10 = (android.app.FragmentManagerImpl) r12;

        virtualinvoke $r10.<android.app.FragmentManagerImpl: void dispatchOnFragmentViewCreated(android.app.Fragment,android.view.View,android.os.Bundle,boolean)>(r1, r2, r3, 1);

     label1:
        $r13 = r0.<android.app.FragmentManagerImpl: java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks>;

        r14 = virtualinvoke $r13.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label2:
        $z3 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label5;

        $r5 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>();

        r4 = (android.util.Pair) $r5;

        if z0 == 0 goto label3;

        $r8 = r4.<android.util.Pair: java.lang.Object second>;

        $r9 = (java.lang.Boolean) $r8;

        $z1 = virtualinvoke $r9.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label4;

     label3:
        $r6 = r4.<android.util.Pair: java.lang.Object first>;

        $r7 = (android.app.FragmentManager$FragmentLifecycleCallbacks) $r6;

        virtualinvoke $r7.<android.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentViewCreated(android.app.FragmentManager,android.app.Fragment,android.view.View,android.os.Bundle)>(r0, r1, r2, r3);

     label4:
        goto label2;

     label5:
        return;
    }

    void dispatchOnFragmentViewDestroyed(android.app.Fragment, boolean)
    {
        android.app.FragmentManagerImpl r0, $r8;
        android.app.Fragment r1, r9;
        boolean z0, $z1, $z2, $z3;
        android.util.Pair r2;
        java.lang.Object $r3, $r4, $r6;
        android.app.FragmentManager$FragmentLifecycleCallbacks $r5;
        java.lang.Boolean $r7;
        android.app.FragmentManager r10;
        java.util.concurrent.CopyOnWriteArrayList $r11;
        java.util.Iterator r12;

        r0 := @this: android.app.FragmentManagerImpl;

        r1 := @parameter0: android.app.Fragment;

        z0 := @parameter1: boolean;

        r9 = r0.<android.app.FragmentManagerImpl: android.app.Fragment mParent>;

        if r9 == null goto label1;

        r10 = virtualinvoke r9.<android.app.Fragment: android.app.FragmentManager getFragmentManager()>();

        $z2 = r10 instanceof android.app.FragmentManagerImpl;

        if $z2 == 0 goto label1;

        $r8 = (android.app.FragmentManagerImpl) r10;

        virtualinvoke $r8.<android.app.FragmentManagerImpl: void dispatchOnFragmentViewDestroyed(android.app.Fragment,boolean)>(r1, 1);

     label1:
        $r11 = r0.<android.app.FragmentManagerImpl: java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks>;

        r12 = virtualinvoke $r11.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label2:
        $z3 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label5;

        $r3 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.util.Pair) $r3;

        if z0 == 0 goto label3;

        $r6 = r2.<android.util.Pair: java.lang.Object second>;

        $r7 = (java.lang.Boolean) $r6;

        $z1 = virtualinvoke $r7.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label4;

     label3:
        $r4 = r2.<android.util.Pair: java.lang.Object first>;

        $r5 = (android.app.FragmentManager$FragmentLifecycleCallbacks) $r4;

        virtualinvoke $r5.<android.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentViewDestroyed(android.app.FragmentManager,android.app.Fragment)>(r0, r1);

     label4:
        goto label2;

     label5:
        return;
    }

    public boolean dispatchOptionsItemSelected(android.view.MenuItem)
    {
        android.app.FragmentManagerImpl r0;
        android.view.MenuItem r1;
        android.app.Fragment r2;
        int $i0, $i1, i2;
        java.util.ArrayList $r3, $r4;
        java.lang.Object $r5;
        boolean $z0;

        r0 := @this: android.app.FragmentManagerImpl;

        r1 := @parameter0: android.view.MenuItem;

        $i0 = r0.<android.app.FragmentManagerImpl: int mCurState>;

        if $i0 >= 1 goto label1;

        return 0;

     label1:
        i2 = 0;

     label2:
        $r3 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if i2 >= $i1 goto label4;

        $r4 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r2 = (android.app.Fragment) $r5;

        if r2 == null goto label3;

        $z0 = virtualinvoke r2.<android.app.Fragment: boolean performOptionsItemSelected(android.view.MenuItem)>(r1);

        if $z0 == 0 goto label3;

        return 1;

     label3:
        i2 = i2 + 1;

        goto label2;

     label4:
        return 0;
    }

    public void dispatchOptionsMenuClosed(android.view.Menu)
    {
        android.app.FragmentManagerImpl r0;
        android.view.Menu r1;
        android.app.Fragment r2;
        int $i0, $i1, i2;
        java.util.ArrayList $r3, $r4;
        java.lang.Object $r5;

        r0 := @this: android.app.FragmentManagerImpl;

        r1 := @parameter0: android.view.Menu;

        $i0 = r0.<android.app.FragmentManagerImpl: int mCurState>;

        if $i0 >= 1 goto label1;

        return;

     label1:
        i2 = 0;

     label2:
        $r3 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if i2 >= $i1 goto label4;

        $r4 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r2 = (android.app.Fragment) $r5;

        if r2 == null goto label3;

        virtualinvoke r2.<android.app.Fragment: void performOptionsMenuClosed(android.view.Menu)>(r1);

     label3:
        i2 = i2 + 1;

        goto label2;

     label4:
        return;
    }

    public void dispatchPause()
    {
        android.app.FragmentManagerImpl r0;

        r0 := @this: android.app.FragmentManagerImpl;

        specialinvoke r0.<android.app.FragmentManagerImpl: void dispatchMoveToState(int)>(4);

        return;
    }

    public void dispatchPictureInPictureModeChanged(boolean)
    {
        android.app.FragmentManagerImpl r0;
        boolean z0;
        android.app.Fragment r1;
        java.util.ArrayList $r2, $r3;
        int $i0, i1;
        java.lang.Object $r4;

        r0 := @this: android.app.FragmentManagerImpl;

        z0 := @parameter0: boolean;

        $r2 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label3;

        $r3 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r1 = (android.app.Fragment) $r4;

        if r1 == null goto label2;

        virtualinvoke r1.<android.app.Fragment: void performPictureInPictureModeChanged(boolean)>(z0);

     label2:
        i1 = i1 + -1;

        goto label1;

     label3:
        return;
    }

    public void dispatchPictureInPictureModeChanged(boolean, android.content.res.Configuration)
    {
        android.app.FragmentManagerImpl r0;
        boolean z0;
        android.content.res.Configuration r1;
        android.app.Fragment r2;
        java.util.ArrayList $r3, $r4;
        int $i0, i1;
        java.lang.Object $r5;

        r0 := @this: android.app.FragmentManagerImpl;

        z0 := @parameter0: boolean;

        r1 := @parameter1: android.content.res.Configuration;

        $r3 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label3;

        $r4 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r2 = (android.app.Fragment) $r5;

        if r2 == null goto label2;

        virtualinvoke r2.<android.app.Fragment: void performPictureInPictureModeChanged(boolean,android.content.res.Configuration)>(z0, r1);

     label2:
        i1 = i1 + -1;

        goto label1;

     label3:
        return;
    }

    public boolean dispatchPrepareOptionsMenu(android.view.Menu)
    {
        android.app.FragmentManagerImpl r0;
        android.view.Menu r1;
        android.app.Fragment r2;
        int $i0, $i1, i2;
        java.util.ArrayList $r3, $r4;
        java.lang.Object $r5;
        boolean $z0, z1, z2;

        r0 := @this: android.app.FragmentManagerImpl;

        r1 := @parameter0: android.view.Menu;

        $i0 = r0.<android.app.FragmentManagerImpl: int mCurState>;

        if $i0 >= 1 goto label1;

        return 0;

     label1:
        z1 = 0;

        i2 = 0;

     label2:
        $r3 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if i2 >= $i1 goto label4;

        $r4 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r2 = (android.app.Fragment) $r5;

        z2 = z1;

        if r2 == null goto label3;

        z2 = z1;

        $z0 = virtualinvoke r2.<android.app.Fragment: boolean performPrepareOptionsMenu(android.view.Menu)>(r1);

        if $z0 == 0 goto label3;

        z2 = 1;

     label3:
        i2 = i2 + 1;

        z1 = z2;

        goto label2;

     label4:
        return z1;
    }

    public void dispatchResume()
    {
        android.app.FragmentManagerImpl r0;

        r0 := @this: android.app.FragmentManagerImpl;

        r0.<android.app.FragmentManagerImpl: boolean mStateSaved> = 0;

        specialinvoke r0.<android.app.FragmentManagerImpl: void dispatchMoveToState(int)>(5);

        return;
    }

    public void dispatchStart()
    {
        android.app.FragmentManagerImpl r0;

        r0 := @this: android.app.FragmentManagerImpl;

        r0.<android.app.FragmentManagerImpl: boolean mStateSaved> = 0;

        specialinvoke r0.<android.app.FragmentManagerImpl: void dispatchMoveToState(int)>(4);

        return;
    }

    public void dispatchStop()
    {
        android.app.FragmentManagerImpl r0;

        r0 := @this: android.app.FragmentManagerImpl;

        specialinvoke r0.<android.app.FragmentManagerImpl: void dispatchMoveToState(int)>(3);

        return;
    }

    public void dispatchTrimMemory(int)
    {
        android.app.FragmentManagerImpl r0;
        int i0, $i1, i2;
        android.app.Fragment r1;
        java.util.ArrayList $r2, $r3;
        java.lang.Object $r4;

        r0 := @this: android.app.FragmentManagerImpl;

        i0 := @parameter0: int;

        i2 = 0;

     label1:
        $r2 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if i2 >= $i1 goto label3;

        $r3 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r1 = (android.app.Fragment) $r4;

        if r1 == null goto label2;

        virtualinvoke r1.<android.app.Fragment: void performTrimMemory(int)>(i0);

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return;
    }

    void doPendingDeferredStart()
    {
        android.app.FragmentManagerImpl r0;
        android.app.Fragment r1;
        boolean $z0, $z1, z2, z3;
        android.util.SparseArray $r2, $r3;
        int $i0, i1;
        java.lang.Object $r4;
        android.app.LoaderManagerImpl $r5, $r6;

        r0 := @this: android.app.FragmentManagerImpl;

        $z0 = r0.<android.app.FragmentManagerImpl: boolean mHavePendingDeferredStart>;

        if $z0 == 0 goto label4;

        z2 = 0;

        i1 = 0;

     label1:
        $r2 = r0.<android.app.FragmentManagerImpl: android.util.SparseArray mActive>;

        $i0 = virtualinvoke $r2.<android.util.SparseArray: int size()>();

        if i1 >= $i0 goto label3;

        $r3 = r0.<android.app.FragmentManagerImpl: android.util.SparseArray mActive>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        r1 = (android.app.Fragment) $r4;

        z3 = z2;

        if r1 == null goto label2;

        z3 = z2;

        $r5 = r1.<android.app.Fragment: android.app.LoaderManagerImpl mLoaderManager>;

        if $r5 == null goto label2;

        $r6 = r1.<android.app.Fragment: android.app.LoaderManagerImpl mLoaderManager>;

        $z1 = virtualinvoke $r6.<android.app.LoaderManagerImpl: boolean hasRunningLoaders()>();

        z3 = z2 | $z1;

     label2:
        i1 = i1 + 1;

        z2 = z3;

        goto label1;

     label3:
        if z2 != 0 goto label4;

        r0.<android.app.FragmentManagerImpl: boolean mHavePendingDeferredStart> = 0;

        virtualinvoke r0.<android.app.FragmentManagerImpl: void startPendingDeferredFragments()>();

     label4:
        return;
    }

    public void dump(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        android.app.FragmentManagerImpl r0;
        java.io.PrintWriter r1;
        java.lang.String[] r2;
        java.lang.StringBuilder $r3;
        int $i0, $i1, $i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14;
        boolean $z0, $z1, $z2, $z3;
        java.lang.String $r6, $r7, $r14, $r20, $r23, $r26, $r27, r31, r34;
        android.app.Fragment $r8, r36, r38, r40, $r50;
        java.util.ArrayList $r9, $r11, $r12, $r15, $r16, $r18, $r21, $r24, $r37, r39, r41, $r43, $r45, r46;
        java.lang.Object $r10, $r17, $r19, $r22, $r25, $r29;
        java.lang.Object[] $r13;
        android.util.SparseArray $r28, r35;
        java.lang.Throwable $r30;
        java.io.FileDescriptor r32;
        android.app.BackStackRecord r42, r44;
        android.app.FragmentManagerImpl$OpGenerator r47;
        android.app.FragmentHostCallback $r48;
        android.app.FragmentContainer $r49;

        r0 := @this: android.app.FragmentManagerImpl;

        r31 := @parameter0: java.lang.String;

        r32 := @parameter1: java.io.FileDescriptor;

        r1 := @parameter2: java.io.PrintWriter;

        r2 := @parameter3: java.lang.String[];

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r31);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        r34 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        r35 = r0.<android.app.FragmentManagerImpl: android.util.SparseArray mActive>;

        if r35 == null goto label03;

        i3 = virtualinvoke r35.<android.util.SparseArray: int size()>();

        if i3 <= 0 goto label03;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r31);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("Active Fragments in ");

        $i2 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        $r27 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r27);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(":");

        i4 = 0;

     label01:
        if i4 >= i3 goto label03;

        $r28 = r0.<android.app.FragmentManagerImpl: android.util.SparseArray mActive>;

        $r29 = virtualinvoke $r28.<android.util.SparseArray: java.lang.Object valueAt(int)>(i4);

        r36 = (android.app.Fragment) $r29;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r31);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  #");

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>(i4);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>(r36);

        if r36 == null goto label02;

        virtualinvoke r36.<android.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r34, r32, r1, r2);

     label02:
        i4 = i4 + 1;

        goto label01;

     label03:
        $r37 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        i5 = virtualinvoke $r37.<java.util.ArrayList: int size()>();

        if i5 <= 0 goto label05;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r31);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Added Fragments:");

        i6 = 0;

     label04:
        if i6 >= i5 goto label05;

        $r24 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $r25 = virtualinvoke $r24.<java.util.ArrayList: java.lang.Object get(int)>(i6);

        r38 = (android.app.Fragment) $r25;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r31);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  #");

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>(i6);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        $r26 = virtualinvoke r38.<android.app.Fragment: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r26);

        i6 = i6 + 1;

        goto label04;

     label05:
        r39 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mCreatedMenus>;

        if r39 == null goto label07;

        i7 = virtualinvoke r39.<java.util.ArrayList: int size()>();

        if i7 <= 0 goto label07;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r31);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Fragments Created Menus:");

        i8 = 0;

     label06:
        if i8 >= i7 goto label07;

        $r21 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mCreatedMenus>;

        $r22 = virtualinvoke $r21.<java.util.ArrayList: java.lang.Object get(int)>(i8);

        r40 = (android.app.Fragment) $r22;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r31);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  #");

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>(i8);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        $r23 = virtualinvoke r40.<android.app.Fragment: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r23);

        i8 = i8 + 1;

        goto label06;

     label07:
        r41 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mBackStack>;

        if r41 == null goto label09;

        i9 = virtualinvoke r41.<java.util.ArrayList: int size()>();

        if i9 <= 0 goto label09;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r31);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Back Stack:");

        i10 = 0;

     label08:
        if i10 >= i9 goto label09;

        $r18 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mBackStack>;

        $r19 = virtualinvoke $r18.<java.util.ArrayList: java.lang.Object get(int)>(i10);

        r42 = (android.app.BackStackRecord) $r19;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r31);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  #");

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>(i10);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        $r20 = virtualinvoke r42.<android.app.BackStackRecord: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r20);

        virtualinvoke r42.<android.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r34, r32, r1, r2);

        i10 = i10 + 1;

        goto label08;

     label09:
        entermonitor r0;

     label10:
        $r43 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mBackStackIndices>;

        if $r43 == null goto label17;

        $r15 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mBackStackIndices>;

        i11 = virtualinvoke $r15.<java.util.ArrayList: int size()>();

     label11:
        if i11 <= 0 goto label17;

     label12:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r31);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Back Stack Indices:");

     label13:
        i12 = 0;

     label14:
        if i12 >= i11 goto label17;

     label15:
        $r16 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mBackStackIndices>;

        $r17 = virtualinvoke $r16.<java.util.ArrayList: java.lang.Object get(int)>(i12);

        r44 = (android.app.BackStackRecord) $r17;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r31);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  #");

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>(i12);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>(r44);

     label16:
        i12 = i12 + 1;

        goto label14;

     label17:
        $r45 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mAvailBackStackIndices>;

        if $r45 == null goto label18;

        $r11 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mAvailBackStackIndices>;

        $i1 = virtualinvoke $r11.<java.util.ArrayList: int size()>();

        if $i1 <= 0 goto label18;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r31);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("mAvailBackStackIndices: ");

        $r12 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mAvailBackStackIndices>;

        $r13 = virtualinvoke $r12.<java.util.ArrayList: java.lang.Object[] toArray()>();

        $r14 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>($r13);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r14);

     label18:
        exitmonitor r0;

     label19:
        r46 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mPendingActions>;

        if r46 == null goto label21;

        i13 = virtualinvoke r46.<java.util.ArrayList: int size()>();

        if i13 <= 0 goto label21;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r31);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Pending Actions:");

        i14 = 0;

     label20:
        if i14 >= i13 goto label21;

        $r9 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mPendingActions>;

        $r10 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object get(int)>(i14);

        r47 = (android.app.FragmentManagerImpl$OpGenerator) $r10;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r31);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  #");

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>(i14);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>(r47);

        i14 = i14 + 1;

        goto label20;

     label21:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r31);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("FragmentManager misc state:");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r31);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  mHost=");

        $r48 = r0.<android.app.FragmentManagerImpl: android.app.FragmentHostCallback mHost>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r48);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r31);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  mContainer=");

        $r49 = r0.<android.app.FragmentManagerImpl: android.app.FragmentContainer mContainer>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r49);

        $r50 = r0.<android.app.FragmentManagerImpl: android.app.Fragment mParent>;

        if $r50 == null goto label22;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r31);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  mParent=");

        $r8 = r0.<android.app.FragmentManagerImpl: android.app.Fragment mParent>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r8);

     label22:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r31);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  mCurState=");

        $i0 = r0.<android.app.FragmentManagerImpl: int mCurState>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i0);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" mStateSaved=");

        $z0 = r0.<android.app.FragmentManagerImpl: boolean mStateSaved>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z0);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" mDestroyed=");

        $z1 = r0.<android.app.FragmentManagerImpl: boolean mDestroyed>;

        virtualinvoke r1.<java.io.PrintWriter: void println(boolean)>($z1);

        $z2 = r0.<android.app.FragmentManagerImpl: boolean mNeedMenuInvalidate>;

        if $z2 == 0 goto label23;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r31);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  mNeedMenuInvalidate=");

        $z3 = r0.<android.app.FragmentManagerImpl: boolean mNeedMenuInvalidate>;

        virtualinvoke r1.<java.io.PrintWriter: void println(boolean)>($z3);

     label23:
        $r6 = r0.<android.app.FragmentManagerImpl: java.lang.String mNoTransactionsBecause>;

        if $r6 == null goto label24;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r31);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  mNoTransactionsBecause=");

        $r7 = r0.<android.app.FragmentManagerImpl: java.lang.String mNoTransactionsBecause>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r7);

     label24:
        return;

     label25:
        $r30 := @caughtexception;

     label26:
        exitmonitor r0;

     label27:
        throw $r30;

        catch java.lang.Throwable from label10 to label11 with label25;
        catch java.lang.Throwable from label12 to label13 with label25;
        catch java.lang.Throwable from label15 to label16 with label25;
        catch java.lang.Throwable from label17 to label18 with label25;
        catch java.lang.Throwable from label18 to label19 with label25;
        catch java.lang.Throwable from label26 to label27 with label25;
    }

    public void enqueueAction(android.app.FragmentManagerImpl$OpGenerator, boolean)
    {
        android.app.FragmentManagerImpl r0;
        boolean z0, $z1;
        java.util.ArrayList r1, $r3, $r4;
        android.app.FragmentHostCallback $r2;
        java.lang.Throwable $r5;
        android.app.FragmentManagerImpl$OpGenerator r6;
        java.lang.IllegalStateException r7;

        r0 := @this: android.app.FragmentManagerImpl;

        r6 := @parameter0: android.app.FragmentManagerImpl$OpGenerator;

        z0 := @parameter1: boolean;

        if z0 != 0 goto label01;

        specialinvoke r0.<android.app.FragmentManagerImpl: void checkStateLoss()>();

     label01:
        entermonitor r0;

     label02:
        $z1 = r0.<android.app.FragmentManagerImpl: boolean mDestroyed>;

        if $z1 != 0 goto label07;

        $r2 = r0.<android.app.FragmentManagerImpl: android.app.FragmentHostCallback mHost>;

        if $r2 != null goto label04;

     label03:
        goto label07;

     label04:
        $r3 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mPendingActions>;

        if $r3 != null goto label05;

        r1 = new java.util.ArrayList;

        specialinvoke r1.<java.util.ArrayList: void <init>()>();

        r0.<android.app.FragmentManagerImpl: java.util.ArrayList mPendingActions> = r1;

     label05:
        $r4 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mPendingActions>;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r6);

        specialinvoke r0.<android.app.FragmentManagerImpl: void scheduleCommit()>();

        exitmonitor r0;

     label06:
        return;

     label07:
        if z0 == 0 goto label10;

     label08:
        exitmonitor r0;

     label09:
        return;

     label10:
        r7 = new java.lang.IllegalStateException;

        specialinvoke r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Activity has been destroyed");

        throw r7;

     label11:
        $r5 := @caughtexception;

     label12:
        exitmonitor r0;

     label13:
        throw $r5;

        catch java.lang.Throwable from label02 to label03 with label11;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label08 to label09 with label11;
        catch java.lang.Throwable from label10 to label11 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    void ensureInflatedFragmentView(android.app.Fragment)
    {
        android.app.FragmentManagerImpl r0;
        android.app.Fragment r1;
        boolean $z0, $z1, $z2;
        android.os.Bundle $r2, $r4, $r8, $r10;
        android.view.LayoutInflater $r3;
        android.view.View $r5, $r6, $r7, $r9, $r11, $r12;

        r0 := @this: android.app.FragmentManagerImpl;

        r1 := @parameter0: android.app.Fragment;

        $z0 = r1.<android.app.Fragment: boolean mFromLayout>;

        if $z0 == 0 goto label2;

        $z1 = r1.<android.app.Fragment: boolean mPerformedCreateView>;

        if $z1 != 0 goto label2;

        $r2 = r1.<android.app.Fragment: android.os.Bundle mSavedFragmentState>;

        $r3 = virtualinvoke r1.<android.app.Fragment: android.view.LayoutInflater performGetLayoutInflater(android.os.Bundle)>($r2);

        $r4 = r1.<android.app.Fragment: android.os.Bundle mSavedFragmentState>;

        $r5 = virtualinvoke r1.<android.app.Fragment: android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>($r3, null, $r4);

        r1.<android.app.Fragment: android.view.View mView> = $r5;

        $r6 = r1.<android.app.Fragment: android.view.View mView>;

        if $r6 == null goto label2;

        $r7 = r1.<android.app.Fragment: android.view.View mView>;

        virtualinvoke $r7.<android.view.View: void setSaveFromParentEnabled(boolean)>(0);

        $z2 = r1.<android.app.Fragment: boolean mHidden>;

        if $z2 == 0 goto label1;

        $r12 = r1.<android.app.Fragment: android.view.View mView>;

        virtualinvoke $r12.<android.view.View: void setVisibility(int)>(8);

     label1:
        $r9 = r1.<android.app.Fragment: android.view.View mView>;

        $r8 = r1.<android.app.Fragment: android.os.Bundle mSavedFragmentState>;

        virtualinvoke r1.<android.app.Fragment: void onViewCreated(android.view.View,android.os.Bundle)>($r9, $r8);

        $r11 = r1.<android.app.Fragment: android.view.View mView>;

        $r10 = r1.<android.app.Fragment: android.os.Bundle mSavedFragmentState>;

        virtualinvoke r0.<android.app.FragmentManagerImpl: void dispatchOnFragmentViewCreated(android.app.Fragment,android.view.View,android.os.Bundle,boolean)>(r1, $r11, $r10, 0);

     label2:
        return;
    }

    public boolean execPendingActions()
    {
        android.app.FragmentManagerImpl r0;
        java.util.ArrayList $r2, $r3, $r4, $r5;
        boolean $z0, z1;
        java.lang.Throwable $r6;

        r0 := @this: android.app.FragmentManagerImpl;

        specialinvoke r0.<android.app.FragmentManagerImpl: void ensureExecReady(boolean)>(1);

        z1 = 0;

     label1:
        $r3 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mTmpRecords>;

        $r2 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mTmpIsPop>;

        $z0 = specialinvoke r0.<android.app.FragmentManagerImpl: boolean generateOpsForPendingActions(java.util.ArrayList,java.util.ArrayList)>($r3, $r2);

        if $z0 == 0 goto label5;

        r0.<android.app.FragmentManagerImpl: boolean mExecutingActions> = 1;

     label2:
        $r5 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mTmpRecords>;

        $r4 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mTmpIsPop>;

        specialinvoke r0.<android.app.FragmentManagerImpl: void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList)>($r5, $r4);

     label3:
        specialinvoke r0.<android.app.FragmentManagerImpl: void cleanupExec()>();

        z1 = 1;

        goto label1;

     label4:
        $r6 := @caughtexception;

        specialinvoke r0.<android.app.FragmentManagerImpl: void cleanupExec()>();

        throw $r6;

     label5:
        virtualinvoke r0.<android.app.FragmentManagerImpl: void doPendingDeferredStart()>();

        specialinvoke r0.<android.app.FragmentManagerImpl: void burpActive()>();

        return z1;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public void execSingleAction(android.app.FragmentManagerImpl$OpGenerator, boolean)
    {
        android.app.FragmentManagerImpl r0;
        boolean z0, $z1, $z2;
        java.util.ArrayList $r1, $r2, $r3, $r4;
        android.app.FragmentHostCallback $r5;
        java.lang.Throwable $r6;
        android.app.FragmentManagerImpl$OpGenerator r7;

        r0 := @this: android.app.FragmentManagerImpl;

        r7 := @parameter0: android.app.FragmentManagerImpl$OpGenerator;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label2;

        $r5 = r0.<android.app.FragmentManagerImpl: android.app.FragmentHostCallback mHost>;

        if $r5 == null goto label1;

        $z2 = r0.<android.app.FragmentManagerImpl: boolean mDestroyed>;

        if $z2 == 0 goto label2;

     label1:
        return;

     label2:
        specialinvoke r0.<android.app.FragmentManagerImpl: void ensureExecReady(boolean)>(z0);

        $r2 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mTmpRecords>;

        $r1 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mTmpIsPop>;

        $z1 = interfaceinvoke r7.<android.app.FragmentManagerImpl$OpGenerator: boolean generateOps(java.util.ArrayList,java.util.ArrayList)>($r2, $r1);

        if $z1 == 0 goto label6;

        r0.<android.app.FragmentManagerImpl: boolean mExecutingActions> = 1;

     label3:
        $r4 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mTmpRecords>;

        $r3 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mTmpIsPop>;

        specialinvoke r0.<android.app.FragmentManagerImpl: void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList)>($r4, $r3);

     label4:
        specialinvoke r0.<android.app.FragmentManagerImpl: void cleanupExec()>();

        goto label6;

     label5:
        $r6 := @caughtexception;

        specialinvoke r0.<android.app.FragmentManagerImpl: void cleanupExec()>();

        throw $r6;

     label6:
        virtualinvoke r0.<android.app.FragmentManagerImpl: void doPendingDeferredStart()>();

        specialinvoke r0.<android.app.FragmentManagerImpl: void burpActive()>();

        return;

        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public boolean executePendingTransactions()
    {
        android.app.FragmentManagerImpl r0;
        boolean z0;

        r0 := @this: android.app.FragmentManagerImpl;

        z0 = virtualinvoke r0.<android.app.FragmentManagerImpl: boolean execPendingActions()>();

        specialinvoke r0.<android.app.FragmentManagerImpl: void forcePostponedTransactions()>();

        return z0;
    }

    public android.app.Fragment findFragmentById(int)
    {
        android.app.FragmentManagerImpl r0;
        int i0, $i1, $i2, $i3, $i4, i5, i6;
        java.util.ArrayList $r1, $r4;
        android.util.SparseArray $r2, r7;
        java.lang.Object $r3, $r5;
        android.app.Fragment r6, r8;

        r0 := @this: android.app.FragmentManagerImpl;

        i0 := @parameter0: int;

        $r1 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $i1 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        i5 = $i1 - 1;

     label1:
        if i5 < 0 goto label3;

        $r4 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        r6 = (android.app.Fragment) $r5;

        if r6 == null goto label2;

        $i4 = r6.<android.app.Fragment: int mFragmentId>;

        if $i4 != i0 goto label2;

        return r6;

     label2:
        i5 = i5 + -1;

        goto label1;

     label3:
        r7 = r0.<android.app.FragmentManagerImpl: android.util.SparseArray mActive>;

        if r7 == null goto label6;

        $i2 = virtualinvoke r7.<android.util.SparseArray: int size()>();

        i6 = $i2 - 1;

     label4:
        if i6 < 0 goto label6;

        $r2 = r0.<android.app.FragmentManagerImpl: android.util.SparseArray mActive>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object valueAt(int)>(i6);

        r8 = (android.app.Fragment) $r3;

        if r8 == null goto label5;

        $i3 = r8.<android.app.Fragment: int mFragmentId>;

        if $i3 != i0 goto label5;

        return r8;

     label5:
        i6 = i6 + -1;

        goto label4;

     label6:
        return null;
    }

    public android.app.Fragment findFragmentByTag(java.lang.String)
    {
        android.app.FragmentManagerImpl r0;
        java.lang.String r1, $r4, $r8;
        int $i0, $i1, i2, i3;
        android.util.SparseArray $r2, r10;
        java.lang.Object $r3, $r7;
        boolean $z0, $z1;
        java.util.ArrayList $r5, $r6;
        android.app.Fragment r9, r11;

        r0 := @this: android.app.FragmentManagerImpl;

        r1 := @parameter0: java.lang.String;

        if r1 == null goto label3;

        $r5 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $i1 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        i2 = $i1 - 1;

     label1:
        if i2 < 0 goto label3;

        $r6 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r9 = (android.app.Fragment) $r7;

        if r9 == null goto label2;

        $r8 = r9.<android.app.Fragment: java.lang.String mTag>;

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z1 == 0 goto label2;

        return r9;

     label2:
        i2 = i2 + -1;

        goto label1;

     label3:
        r10 = r0.<android.app.FragmentManagerImpl: android.util.SparseArray mActive>;

        if r10 == null goto label6;

        if r1 == null goto label6;

        $i0 = virtualinvoke r10.<android.util.SparseArray: int size()>();

        i3 = $i0 - 1;

     label4:
        if i3 < 0 goto label6;

        $r2 = r0.<android.app.FragmentManagerImpl: android.util.SparseArray mActive>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object valueAt(int)>(i3);

        r11 = (android.app.Fragment) $r3;

        if r11 == null goto label5;

        $r4 = r11.<android.app.Fragment: java.lang.String mTag>;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label5;

        return r11;

     label5:
        i3 = i3 + -1;

        goto label4;

     label6:
        return null;
    }

    public android.app.Fragment findFragmentByWho(java.lang.String)
    {
        android.app.FragmentManagerImpl r0;
        java.lang.String r1;
        int $i0, i1;
        android.util.SparseArray $r2, r4;
        java.lang.Object $r3;
        android.app.Fragment r5, r6;

        r0 := @this: android.app.FragmentManagerImpl;

        r1 := @parameter0: java.lang.String;

        r4 = r0.<android.app.FragmentManagerImpl: android.util.SparseArray mActive>;

        if r4 == null goto label3;

        if r1 == null goto label3;

        $i0 = virtualinvoke r4.<android.util.SparseArray: int size()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label3;

        $r2 = r0.<android.app.FragmentManagerImpl: android.util.SparseArray mActive>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        r5 = (android.app.Fragment) $r3;

        if r5 == null goto label2;

        r6 = virtualinvoke r5.<android.app.Fragment: android.app.Fragment findFragmentByWho(java.lang.String)>(r1);

        if r6 == null goto label2;

        return r6;

     label2:
        i1 = i1 + -1;

        goto label1;

     label3:
        return null;
    }

    public void freeBackStackIndex(int)
    {
        android.app.FragmentManagerImpl r0;
        int i0;
        java.util.ArrayList $r1, $r3, $r4, r10;
        boolean $z0;
        java.lang.Integer $r5;
        java.lang.String $r8;
        java.lang.Throwable $r9;
        java.lang.StringBuilder r11;

        r0 := @this: android.app.FragmentManagerImpl;

        i0 := @parameter0: int;

        entermonitor r0;

     label1:
        $r1 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mBackStackIndices>;

        virtualinvoke $r1.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>(i0, null);

        $r3 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mAvailBackStackIndices>;

        if $r3 != null goto label2;

        r10 = new java.util.ArrayList;

        specialinvoke r10.<java.util.ArrayList: void <init>()>();

        r0.<android.app.FragmentManagerImpl: java.util.ArrayList mAvailBackStackIndices> = r10;

     label2:
        $z0 = <android.app.FragmentManagerImpl: boolean DEBUG>;

        if $z0 == 0 goto label3;

        r11 = new java.lang.StringBuilder;

        specialinvoke r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Freeing back stack index ");

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r8);

     label3:
        $r4 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mAvailBackStackIndices>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        exitmonitor r0;

     label4:
        return;

     label5:
        $r9 := @caughtexception;

     label6:
        exitmonitor r0;

     label7:
        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public android.app.FragmentManager$BackStackEntry getBackStackEntryAt(int)
    {
        android.app.FragmentManagerImpl r0;
        int i0;
        java.util.ArrayList $r1;
        java.lang.Object $r2;
        android.app.FragmentManager$BackStackEntry $r3;

        r0 := @this: android.app.FragmentManagerImpl;

        i0 := @parameter0: int;

        $r1 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mBackStack>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r3 = (android.app.FragmentManager$BackStackEntry) $r2;

        return $r3;
    }

    public int getBackStackEntryCount()
    {
        android.app.FragmentManagerImpl r0;
        java.util.ArrayList r1;
        int i0;

        r0 := @this: android.app.FragmentManagerImpl;

        r1 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mBackStack>;

        if r1 == null goto label1;

        i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        goto label2;

     label1:
        i0 = 0;

     label2:
        return i0;
    }

    public android.app.Fragment getFragment(android.os.Bundle, java.lang.String)
    {
        android.app.FragmentManagerImpl r0;
        java.lang.String r1, $r11;
        int i0;
        android.app.Fragment r2;
        android.util.SparseArray $r3;
        java.lang.Object $r4;
        java.lang.StringBuilder $r5;
        java.lang.IllegalStateException $r10;
        android.os.Bundle r12;

        r0 := @this: android.app.FragmentManagerImpl;

        r12 := @parameter0: android.os.Bundle;

        r1 := @parameter1: java.lang.String;

        i0 = virtualinvoke r12.<android.os.Bundle: int getInt(java.lang.String,int)>(r1, -1);

        if i0 != -1 goto label1;

        return null;

     label1:
        $r3 = r0.<android.app.FragmentManagerImpl: android.util.SparseArray mActive>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (android.app.Fragment) $r4;

        if r2 != null goto label2;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fragment no longer exists for key ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": index ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = new java.lang.IllegalStateException;

        $r11 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r11);

        specialinvoke r0.<android.app.FragmentManagerImpl: void throwException(java.lang.RuntimeException)>($r10);

     label2:
        return r2;
    }

    public java.util.List getFragments()
    {
        android.app.FragmentManagerImpl r0;
        java.util.ArrayList r1, $r2, $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.util.List $r5, r7;
        java.lang.Throwable $r6;

        r0 := @this: android.app.FragmentManagerImpl;

        $r2 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $z0 = virtualinvoke $r2.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r5 = <java.util.Collections: java.util.List EMPTY_LIST>;

        return $r5;

     label1:
        r1 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        entermonitor r1;

     label2:
        $r3 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object clone()>();

        r7 = (java.util.List) $r4;

        exitmonitor r1;

     label3:
        return r7;

     label4:
        $r6 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r6;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    android.view.LayoutInflater$Factory2 getLayoutInflaterFactory()
    {
        android.app.FragmentManagerImpl r0;

        r0 := @this: android.app.FragmentManagerImpl;

        return r0;
    }

    public android.app.Fragment getPrimaryNavigationFragment()
    {
        android.app.FragmentManagerImpl r0;
        android.app.Fragment $r1;

        r0 := @this: android.app.FragmentManagerImpl;

        $r1 = r0.<android.app.FragmentManagerImpl: android.app.Fragment mPrimaryNav>;

        return $r1;
    }

    int getTargetSdk()
    {
        android.app.FragmentManagerImpl r0;
        int $i0;
        android.app.FragmentHostCallback r1;
        android.content.Context r2;
        android.content.pm.ApplicationInfo r3;

        r0 := @this: android.app.FragmentManagerImpl;

        r1 = r0.<android.app.FragmentManagerImpl: android.app.FragmentHostCallback mHost>;

        if r1 == null goto label1;

        r2 = virtualinvoke r1.<android.app.FragmentHostCallback: android.content.Context getContext()>();

        if r2 == null goto label1;

        r3 = virtualinvoke r2.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        if r3 == null goto label1;

        $i0 = r3.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        return $i0;

     label1:
        return 0;
    }

    public void hideFragment(android.app.Fragment)
    {
        android.app.FragmentManagerImpl r0;
        android.app.Fragment r1;
        boolean $z0, $z1, $z2, $z3;
        java.lang.StringBuilder $r3;
        java.lang.String $r6;

        r0 := @this: android.app.FragmentManagerImpl;

        r1 := @parameter0: android.app.Fragment;

        $z0 = <android.app.FragmentManagerImpl: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("hide: ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r6);

     label1:
        $z1 = r1.<android.app.Fragment: boolean mHidden>;

        if $z1 != 0 goto label2;

        r1.<android.app.Fragment: boolean mHidden> = 1;

        $z2 = r1.<android.app.Fragment: boolean mHiddenChanged>;

        $z3 = 1 ^ $z2;

        r1.<android.app.Fragment: boolean mHiddenChanged> = $z3;

     label2:
        return;
    }

    public void invalidateOptionsMenu()
    {
        android.app.FragmentManagerImpl r0;
        android.app.FragmentHostCallback r1;
        int $i0;

        r0 := @this: android.app.FragmentManagerImpl;

        r1 = r0.<android.app.FragmentManagerImpl: android.app.FragmentHostCallback mHost>;

        if r1 == null goto label1;

        $i0 = r0.<android.app.FragmentManagerImpl: int mCurState>;

        if $i0 != 5 goto label1;

        virtualinvoke r1.<android.app.FragmentHostCallback: void onInvalidateOptionsMenu()>();

        goto label2;

     label1:
        r0.<android.app.FragmentManagerImpl: boolean mNeedMenuInvalidate> = 1;

     label2:
        return;
    }

    public boolean isDestroyed()
    {
        android.app.FragmentManagerImpl r0;
        boolean $z0;

        r0 := @this: android.app.FragmentManagerImpl;

        $z0 = r0.<android.app.FragmentManagerImpl: boolean mDestroyed>;

        return $z0;
    }

    boolean isStateAtLeast(int)
    {
        android.app.FragmentManagerImpl r0;
        int i0, $i1;
        boolean z0;

        r0 := @this: android.app.FragmentManagerImpl;

        i0 := @parameter0: int;

        $i1 = r0.<android.app.FragmentManagerImpl: int mCurState>;

        if $i1 < i0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isStateSaved()
    {
        android.app.FragmentManagerImpl r0;
        boolean $z0;

        r0 := @this: android.app.FragmentManagerImpl;

        $z0 = r0.<android.app.FragmentManagerImpl: boolean mStateSaved>;

        return $z0;
    }

    android.animation.Animator loadAnimator(android.app.Fragment, int, boolean, int)
    {
        android.app.FragmentManagerImpl r0;
        boolean z0, $z1;
        int i0, i1, $i2, $i3, $i4, i5, i6, i7;
        android.animation.Animator r1, $r7, r13;
        android.app.FragmentHostCallback $r2, $r5, $r8, $r9, $r10;
        android.content.Context $r3, $r6, $r11;
        int[] $r4;
        android.app.Fragment r12;
        android.content.res.TypedArray r14;

        r0 := @this: android.app.FragmentManagerImpl;

        r12 := @parameter0: android.app.Fragment;

        i5 := @parameter1: int;

        z0 := @parameter2: boolean;

        i0 := @parameter3: int;

        $i2 = virtualinvoke r12.<android.app.Fragment: int getNextAnim()>();

        r1 = virtualinvoke r12.<android.app.Fragment: android.animation.Animator onCreateAnimator(int,boolean,int)>(i5, z0, $i2);

        if r1 == null goto label1;

        return r1;

     label1:
        $i3 = virtualinvoke r12.<android.app.Fragment: int getNextAnim()>();

        if $i3 == 0 goto label2;

        $r10 = r0.<android.app.FragmentManagerImpl: android.app.FragmentHostCallback mHost>;

        $r11 = virtualinvoke $r10.<android.app.FragmentHostCallback: android.content.Context getContext()>();

        $i4 = virtualinvoke r12.<android.app.Fragment: int getNextAnim()>();

        r13 = staticinvoke <android.animation.AnimatorInflater: android.animation.Animator loadAnimator(android.content.Context,int)>($r11, $i4);

        if r13 == null goto label2;

        return r13;

     label2:
        if i5 != 0 goto label3;

        return null;

     label3:
        i1 = staticinvoke <android.app.FragmentManagerImpl: int transitToStyleIndex(int,boolean)>(i5, z0);

        if i1 >= 0 goto label4;

        return null;

     label4:
        i6 = i0;

        if i0 != 0 goto label5;

        i6 = i0;

        $r8 = r0.<android.app.FragmentManagerImpl: android.app.FragmentHostCallback mHost>;

        $z1 = virtualinvoke $r8.<android.app.FragmentHostCallback: boolean onHasWindowAnimations()>();

        if $z1 == 0 goto label5;

        $r9 = r0.<android.app.FragmentManagerImpl: android.app.FragmentHostCallback mHost>;

        i6 = virtualinvoke $r9.<android.app.FragmentHostCallback: int onGetWindowAnimations()>();

     label5:
        if i6 != 0 goto label6;

        return null;

     label6:
        $r2 = r0.<android.app.FragmentManagerImpl: android.app.FragmentHostCallback mHost>;

        $r3 = virtualinvoke $r2.<android.app.FragmentHostCallback: android.content.Context getContext()>();

        $r4 = <com.android.internal.R$styleable: int[] FragmentAnimation>;

        r14 = virtualinvoke $r3.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(int,int[])>(i6, $r4);

        i7 = virtualinvoke r14.<android.content.res.TypedArray: int getResourceId(int,int)>(i1, 0);

        virtualinvoke r14.<android.content.res.TypedArray: void recycle()>();

        if i7 != 0 goto label7;

        return null;

     label7:
        $r5 = r0.<android.app.FragmentManagerImpl: android.app.FragmentHostCallback mHost>;

        $r6 = virtualinvoke $r5.<android.app.FragmentHostCallback: android.content.Context getContext()>();

        $r7 = staticinvoke <android.animation.AnimatorInflater: android.animation.Animator loadAnimator(android.content.Context,int)>($r6, i7);

        return $r7;
    }

    void makeActive(android.app.Fragment)
    {
        android.app.FragmentManagerImpl r0;
        android.app.Fragment r1, $r3;
        int i0, $i1, $i2, $i3;
        android.util.SparseArray $r4, $r5, $r10;
        boolean $z0;
        java.lang.StringBuilder $r6;
        java.lang.String $r9;

        r0 := @this: android.app.FragmentManagerImpl;

        r1 := @parameter0: android.app.Fragment;

        $i1 = r1.<android.app.Fragment: int mIndex>;

        if $i1 < 0 goto label1;

        return;

     label1:
        i0 = r0.<android.app.FragmentManagerImpl: int mNextFragmentIndex>;

        $i2 = i0 + 1;

        r0.<android.app.FragmentManagerImpl: int mNextFragmentIndex> = $i2;

        $r3 = r0.<android.app.FragmentManagerImpl: android.app.Fragment mParent>;

        virtualinvoke r1.<android.app.Fragment: void setIndex(int,android.app.Fragment)>(i0, $r3);

        $r4 = r0.<android.app.FragmentManagerImpl: android.util.SparseArray mActive>;

        if $r4 != null goto label2;

        $r10 = new android.util.SparseArray;

        specialinvoke $r10.<android.util.SparseArray: void <init>()>();

        r0.<android.app.FragmentManagerImpl: android.util.SparseArray mActive> = $r10;

     label2:
        $r5 = r0.<android.app.FragmentManagerImpl: android.util.SparseArray mActive>;

        $i3 = r1.<android.app.Fragment: int mIndex>;

        virtualinvoke $r5.<android.util.SparseArray: void put(int,java.lang.Object)>($i3, r1);

        $z0 = <android.app.FragmentManagerImpl: boolean DEBUG>;

        if $z0 == 0 goto label3;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Allocated fragment index ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r9);

     label3:
        return;
    }

    void makeInactive(android.app.Fragment)
    {
        android.app.FragmentManagerImpl r0;
        android.app.Fragment r1;
        int $i0, $i1;
        boolean $z0;
        android.util.SparseArray $r3;
        java.lang.String $r4, $r9;
        android.app.FragmentHostCallback $r5;
        java.lang.StringBuilder $r6;

        r0 := @this: android.app.FragmentManagerImpl;

        r1 := @parameter0: android.app.Fragment;

        $i0 = r1.<android.app.Fragment: int mIndex>;

        if $i0 >= 0 goto label1;

        return;

     label1:
        $z0 = <android.app.FragmentManagerImpl: boolean DEBUG>;

        if $z0 == 0 goto label2;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Freeing fragment index ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r9);

     label2:
        $r3 = r0.<android.app.FragmentManagerImpl: android.util.SparseArray mActive>;

        $i1 = r1.<android.app.Fragment: int mIndex>;

        virtualinvoke $r3.<android.util.SparseArray: void put(int,java.lang.Object)>($i1, null);

        $r5 = r0.<android.app.FragmentManagerImpl: android.app.FragmentHostCallback mHost>;

        $r4 = r1.<android.app.Fragment: java.lang.String mWho>;

        virtualinvoke $r5.<android.app.FragmentHostCallback: void inactivateFragment(java.lang.String)>($r4);

        virtualinvoke r1.<android.app.Fragment: void initState()>();

        return;
    }

    void moveFragmentToExpectedState(android.app.Fragment)
    {
        android.app.FragmentManagerImpl r0;
        android.app.Fragment r1, r10;
        android.view.View r2, $r4, $r5, $r6, $r7, $r8, $r9;
        boolean $z0, $z1, $z2, $z3;
        android.view.ViewGroup $r3, r11;
        int $i0, $i1, i2, i3, $i4, $i5, i6, i7;
        android.animation.Animator r12;

        r0 := @this: android.app.FragmentManagerImpl;

        r1 := @parameter0: android.app.Fragment;

        if r1 != null goto label1;

        return;

     label1:
        i2 = r0.<android.app.FragmentManagerImpl: int mCurState>;

        i3 = i2;

        $z0 = r1.<android.app.Fragment: boolean mRemoving>;

        if $z0 == 0 goto label3;

        $z1 = virtualinvoke r1.<android.app.Fragment: boolean isInBackStack()>();

        if $z1 == 0 goto label2;

        i3 = staticinvoke <java.lang.Math: int min(int,int)>(i2, 1);

        goto label3;

     label2:
        i3 = staticinvoke <java.lang.Math: int min(int,int)>(i2, 0);

     label3:
        $i4 = virtualinvoke r1.<android.app.Fragment: int getNextTransition()>();

        $i5 = virtualinvoke r1.<android.app.Fragment: int getNextTransitionStyle()>();

        virtualinvoke r0.<android.app.FragmentManagerImpl: void moveToState(android.app.Fragment,int,int,int,boolean)>(r1, i3, $i4, $i5, 0);

        $r9 = r1.<android.app.Fragment: android.view.View mView>;

        if $r9 == null goto label5;

        r10 = specialinvoke r0.<android.app.FragmentManagerImpl: android.app.Fragment findFragmentUnder(android.app.Fragment)>(r1);

        if r10 == null goto label4;

        r2 = r10.<android.app.Fragment: android.view.View mView>;

        r11 = r1.<android.app.Fragment: android.view.ViewGroup mContainer>;

        i6 = virtualinvoke r11.<android.view.ViewGroup: int indexOfChild(android.view.View)>(r2);

        $r7 = r1.<android.app.Fragment: android.view.View mView>;

        i7 = virtualinvoke r11.<android.view.ViewGroup: int indexOfChild(android.view.View)>($r7);

        if i7 >= i6 goto label4;

        virtualinvoke r11.<android.view.ViewGroup: void removeViewAt(int)>(i7);

        $r8 = r1.<android.app.Fragment: android.view.View mView>;

        virtualinvoke r11.<android.view.ViewGroup: void addView(android.view.View,int)>($r8, i6);

     label4:
        $z2 = r1.<android.app.Fragment: boolean mIsNewlyAdded>;

        if $z2 == 0 goto label5;

        $r3 = r1.<android.app.Fragment: android.view.ViewGroup mContainer>;

        if $r3 == null goto label5;

        $r4 = r1.<android.app.Fragment: android.view.View mView>;

        virtualinvoke $r4.<android.view.View: void setTransitionAlpha(float)>(1.0F);

        r1.<android.app.Fragment: boolean mIsNewlyAdded> = 0;

        $i0 = virtualinvoke r1.<android.app.Fragment: int getNextTransition()>();

        $i1 = virtualinvoke r1.<android.app.Fragment: int getNextTransitionStyle()>();

        r12 = virtualinvoke r0.<android.app.FragmentManagerImpl: android.animation.Animator loadAnimator(android.app.Fragment,int,boolean,int)>(r1, $i0, 1, $i1);

        if r12 == null goto label5;

        $r5 = r1.<android.app.Fragment: android.view.View mView>;

        virtualinvoke r12.<android.animation.Animator: void setTarget(java.lang.Object)>($r5);

        $r6 = r1.<android.app.Fragment: android.view.View mView>;

        specialinvoke r0.<android.app.FragmentManagerImpl: void setHWLayerAnimListenerIfAlpha(android.view.View,android.animation.Animator)>($r6, r12);

        virtualinvoke r12.<android.animation.Animator: void start()>();

     label5:
        $z3 = r1.<android.app.Fragment: boolean mHiddenChanged>;

        if $z3 == 0 goto label6;

        virtualinvoke r0.<android.app.FragmentManagerImpl: void completeShowHideFragment(android.app.Fragment)>(r1);

     label6:
        return;
    }

    void moveToState(int, boolean)
    {
        android.app.FragmentManagerImpl r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, z7, z8, z9;
        android.app.FragmentHostCallback $r1, r16;
        android.util.SparseArray $r2, $r4, $r5;
        java.util.ArrayList $r3, $r9;
        int $i0, $i1, i2, i3, i4, i5, i6;
        java.lang.Object $r6, $r10;
        android.app.LoaderManagerImpl $r7, $r8, $r11, $r12;
        java.lang.IllegalStateException $r13;
        android.app.Fragment r14, r15;

        r0 := @this: android.app.FragmentManagerImpl;

        i2 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r1 = r0.<android.app.FragmentManagerImpl: android.app.FragmentHostCallback mHost>;

        if $r1 != null goto label02;

        if i2 != 0 goto label01;

        goto label02;

     label01:
        $r13 = new java.lang.IllegalStateException;

        specialinvoke $r13.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No activity");

        throw $r13;

     label02:
        if z0 != 0 goto label03;

        $i1 = r0.<android.app.FragmentManagerImpl: int mCurState>;

        if $i1 != i2 goto label03;

        return;

     label03:
        r0.<android.app.FragmentManagerImpl: int mCurState> = i2;

        $r2 = r0.<android.app.FragmentManagerImpl: android.util.SparseArray mActive>;

        if $r2 == null goto label12;

        z7 = 0;

        $r3 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        i3 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i4 = 0;

     label04:
        if i4 >= i3 goto label06;

        $r9 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $r10 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        r14 = (android.app.Fragment) $r10;

        virtualinvoke r0.<android.app.FragmentManagerImpl: void moveFragmentToExpectedState(android.app.Fragment)>(r14);

        z8 = z7;

        $r11 = r14.<android.app.Fragment: android.app.LoaderManagerImpl mLoaderManager>;

        if $r11 == null goto label05;

        $r12 = r14.<android.app.Fragment: android.app.LoaderManagerImpl mLoaderManager>;

        $z6 = virtualinvoke $r12.<android.app.LoaderManagerImpl: boolean hasRunningLoaders()>();

        z8 = z7 | $z6;

     label05:
        i4 = i4 + 1;

        z7 = z8;

        goto label04;

     label06:
        $r4 = r0.<android.app.FragmentManagerImpl: android.util.SparseArray mActive>;

        i5 = virtualinvoke $r4.<android.util.SparseArray: int size()>();

        i6 = 0;

     label07:
        if i6 >= i5 goto label10;

        $r5 = r0.<android.app.FragmentManagerImpl: android.util.SparseArray mActive>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object valueAt(int)>(i6);

        r15 = (android.app.Fragment) $r6;

        z9 = z7;

        if r15 == null goto label09;

        $z2 = r15.<android.app.Fragment: boolean mRemoving>;

        if $z2 != 0 goto label08;

        z9 = z7;

        $z5 = r15.<android.app.Fragment: boolean mDetached>;

        if $z5 == 0 goto label09;

     label08:
        z9 = z7;

        $z3 = r15.<android.app.Fragment: boolean mIsNewlyAdded>;

        if $z3 != 0 goto label09;

        virtualinvoke r0.<android.app.FragmentManagerImpl: void moveFragmentToExpectedState(android.app.Fragment)>(r15);

        z9 = z7;

        $r7 = r15.<android.app.Fragment: android.app.LoaderManagerImpl mLoaderManager>;

        if $r7 == null goto label09;

        $r8 = r15.<android.app.Fragment: android.app.LoaderManagerImpl mLoaderManager>;

        $z4 = virtualinvoke $r8.<android.app.LoaderManagerImpl: boolean hasRunningLoaders()>();

        z9 = z7 | $z4;

     label09:
        i6 = i6 + 1;

        z7 = z9;

        goto label07;

     label10:
        if z7 != 0 goto label11;

        virtualinvoke r0.<android.app.FragmentManagerImpl: void startPendingDeferredFragments()>();

     label11:
        $z1 = r0.<android.app.FragmentManagerImpl: boolean mNeedMenuInvalidate>;

        if $z1 == 0 goto label12;

        r16 = r0.<android.app.FragmentManagerImpl: android.app.FragmentHostCallback mHost>;

        if r16 == null goto label12;

        $i0 = r0.<android.app.FragmentManagerImpl: int mCurState>;

        if $i0 != 5 goto label12;

        virtualinvoke r16.<android.app.FragmentHostCallback: void onInvalidateOptionsMenu()>();

        r0.<android.app.FragmentManagerImpl: boolean mNeedMenuInvalidate> = 0;

     label12:
        return;
    }

    void moveToState(android.app.Fragment)
    {
        android.app.FragmentManagerImpl r0;
        android.app.Fragment r1;
        int $i0;

        r0 := @this: android.app.FragmentManagerImpl;

        r1 := @parameter0: android.app.Fragment;

        $i0 = r0.<android.app.FragmentManagerImpl: int mCurState>;

        virtualinvoke r0.<android.app.FragmentManagerImpl: void moveToState(android.app.Fragment,int,int,int,boolean)>(r1, $i0, 0, 0, 0);

        return;
    }

    void moveToState(android.app.Fragment, int, int, int, boolean)
    {
        android.app.FragmentManagerImpl r0, r132;
        android.app.Fragment r1, $r85, $r92, $r93, $r101, $r104, $r109, $r114, $r115, $r119, $r120, $r130, r131;
        boolean z0, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, z25, $z26, $z27, $z28, z29;
        int $i0, $i1, $i4, $i5, $i6, $i13, $i14, $i15, $i16, $i17, $i18, $i20, $i21, $i22, $i24, $i25, $i26, $i27, i28, i29, i30, i31, i32, i33, $i34, i35, i36, i37, i38, i39, i40, i41, $i42;
        java.lang.StringBuilder $r2, $r10, $r29, $r33, $r37, $r42, $r46, $r63, $r73, $r79, $r86, $r105, $r123;
        java.lang.String $r9, $r13, $r32, $r36, $r40, $r45, $r49, $r65, $r72, $r78, $r82, $r91, $r113, $r126, r143;
        android.animation.Animator $r14, $r41, r160, r164, $r165;
        android.view.View $r15, $r17, $r20, $r21, $r22, $r23, $r24, $r25, $r51, $r53, $r55, $r56, $r58, $r59, $r61, $r149, $r150, $r153, $r159, $r161, r163;
        android.view.ViewGroup $r16, $r18, $r26, $r57, r140, r142, r162;
        android.app.FragmentManagerImpl$2 $r19;
        float $f0;
        byte $b7;
        android.app.FragmentHostCallback $r27, $r84, $r94, $r100, $r129, $r134, $r136;
        android.util.SparseArray $r28, $r102, $r117;
        android.os.Bundle $r50, $r52, $r54, $r83, $r96, $r97, $r98, $r99, $r116, $r118, $r121, $r122, $r146, $r148, $r151, $r152;
        android.app.FragmentContainer $r60;
        android.content.res.Resources $r62;
        java.lang.IllegalArgumentException $r71, $r77;
        android.util.SuperNotCalledException $r90;
        android.content.Context $r95, $r135, $r137;
        java.lang.Object $r103;
        java.lang.IllegalStateException $r112;
        android.content.res.Resources$NotFoundException $r127;
        android.view.LayoutInflater $r147;

        r0 := @this: android.app.FragmentManagerImpl;

        r1 := @parameter0: android.app.Fragment;

        i28 := @parameter1: int;

        i29 := @parameter2: int;

        i30 := @parameter3: int;

        z25 := @parameter4: boolean;

        z0 = r1.<android.app.Fragment: boolean mAdded>;

        if z0 == 0 goto label02;

        $z24 = r1.<android.app.Fragment: boolean mDetached>;

        if $z24 == 0 goto label01;

        goto label02;

     label01:
        goto label03;

     label02:
        i31 = i28;

        if i31 <= 1 goto label03;

        i28 = 1;

     label03:
        i32 = i28;

        $z26 = r1.<android.app.Fragment: boolean mRemoving>;

        if $z26 == 0 goto label05;

        i32 = i28;

        $i26 = r1.<android.app.Fragment: int mState>;

        if i28 <= $i26 goto label05;

        $i27 = r1.<android.app.Fragment: int mState>;

        if $i27 != 0 goto label04;

        $z23 = virtualinvoke r1.<android.app.Fragment: boolean isInBackStack()>();

        if $z23 == 0 goto label04;

        i32 = 1;

        goto label05;

     label04:
        i32 = r1.<android.app.Fragment: int mState>;

     label05:
        i33 = i32;

        $z27 = r1.<android.app.Fragment: boolean mDeferStart>;

        if $z27 == 0 goto label06;

        i33 = i32;

        $i25 = r1.<android.app.Fragment: int mState>;

        if $i25 >= 4 goto label06;

        i33 = i32;

        if i32 <= 3 goto label06;

        i33 = 3;

     label06:
        $i34 = r1.<android.app.Fragment: int mState>;

        if $i34 > i33 goto label45;

        $z11 = r1.<android.app.Fragment: boolean mFromLayout>;

        if $z11 == 0 goto label07;

        $z22 = r1.<android.app.Fragment: boolean mInLayout>;

        if $z22 != 0 goto label07;

        return;

     label07:
        $r41 = virtualinvoke r1.<android.app.Fragment: android.animation.Animator getAnimatingAway()>();

        if $r41 == null goto label08;

        virtualinvoke r1.<android.app.Fragment: void setAnimatingAway(android.animation.Animator)>(null);

        $i24 = virtualinvoke r1.<android.app.Fragment: int getStateAfterAnimating()>();

        virtualinvoke r0.<android.app.FragmentManagerImpl: void moveToState(android.app.Fragment,int,int,int,boolean)>(r1, $i24, 0, 0, 1);

     label08:
        i35 = r1.<android.app.Fragment: int mState>;

        if i35 == 0 goto label09;

        if i35 == 1 goto label23;

        i36 = i33;

        if i35 == 2 goto label39;

        i37 = i33;

        if i35 == 3 goto label40;

        i38 = i33;

        if i35 == 4 goto label42;

        goto label44;

     label09:
        if i33 <= 0 goto label23;

        $z18 = <android.app.FragmentManagerImpl: boolean DEBUG>;

        if $z18 == 0 goto label10;

        $r123 = new java.lang.StringBuilder;

        specialinvoke $r123.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r123.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("moveto CREATED: ");

        virtualinvoke $r123.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r126 = virtualinvoke $r123.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r126);

     label10:
        i39 = i33;

        $r83 = r1.<android.app.Fragment: android.os.Bundle mSavedFragmentState>;

        if $r83 == null goto label12;

        $r116 = r1.<android.app.Fragment: android.os.Bundle mSavedFragmentState>;

        $r117 = virtualinvoke $r116.<android.os.Bundle: android.util.SparseArray getSparseParcelableArray(java.lang.String)>("android:view_state");

        r1.<android.app.Fragment: android.util.SparseArray mSavedViewState> = $r117;

        $r118 = r1.<android.app.Fragment: android.os.Bundle mSavedFragmentState>;

        $r119 = virtualinvoke r0.<android.app.FragmentManagerImpl: android.app.Fragment getFragment(android.os.Bundle,java.lang.String)>($r118, "android:target_state");

        r1.<android.app.Fragment: android.app.Fragment mTarget> = $r119;

        $r120 = r1.<android.app.Fragment: android.app.Fragment mTarget>;

        if $r120 == null goto label11;

        $r122 = r1.<android.app.Fragment: android.os.Bundle mSavedFragmentState>;

        $i22 = virtualinvoke $r122.<android.os.Bundle: int getInt(java.lang.String,int)>("android:target_req_state", 0);

        r1.<android.app.Fragment: int mTargetRequestCode> = $i22;

     label11:
        $r121 = r1.<android.app.Fragment: android.os.Bundle mSavedFragmentState>;

        $z20 = virtualinvoke $r121.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>("android:user_visible_hint", 1);

        r1.<android.app.Fragment: boolean mUserVisibleHint> = $z20;

        i39 = i33;

        $z21 = r1.<android.app.Fragment: boolean mUserVisibleHint>;

        if $z21 != 0 goto label12;

        r1.<android.app.Fragment: boolean mDeferStart> = 1;

        i39 = i33;

        if i33 <= 3 goto label12;

        i39 = 3;

     label12:
        $r129 = r0.<android.app.FragmentManagerImpl: android.app.FragmentHostCallback mHost>;

        r1.<android.app.Fragment: android.app.FragmentHostCallback mHost> = $r129;

        $r130 = r0.<android.app.FragmentManagerImpl: android.app.Fragment mParent>;

        r1.<android.app.Fragment: android.app.Fragment mParentFragment> = $r130;

        r131 = r0.<android.app.FragmentManagerImpl: android.app.Fragment mParent>;

        if r131 == null goto label13;

        r132 = r131.<android.app.Fragment: android.app.FragmentManagerImpl mChildFragmentManager>;

        goto label14;

     label13:
        $r84 = r0.<android.app.FragmentManagerImpl: android.app.FragmentHostCallback mHost>;

        r132 = virtualinvoke $r84.<android.app.FragmentHostCallback: android.app.FragmentManagerImpl getFragmentManagerImpl()>();

     label14:
        r1.<android.app.Fragment: android.app.FragmentManagerImpl mFragmentManager> = r132;

        $r85 = r1.<android.app.Fragment: android.app.Fragment mTarget>;

        if $r85 == null goto label17;

        $r102 = r0.<android.app.FragmentManagerImpl: android.util.SparseArray mActive>;

        $r101 = r1.<android.app.Fragment: android.app.Fragment mTarget>;

        $i20 = $r101.<android.app.Fragment: int mIndex>;

        $r103 = virtualinvoke $r102.<android.util.SparseArray: java.lang.Object get(int)>($i20);

        $r104 = r1.<android.app.Fragment: android.app.Fragment mTarget>;

        if $r103 != $r104 goto label16;

        $r114 = r1.<android.app.Fragment: android.app.Fragment mTarget>;

        $i21 = $r114.<android.app.Fragment: int mState>;

        if $i21 >= 1 goto label15;

        $r115 = r1.<android.app.Fragment: android.app.Fragment mTarget>;

        virtualinvoke r0.<android.app.FragmentManagerImpl: void moveToState(android.app.Fragment,int,int,int,boolean)>($r115, 1, 0, 0, 1);

        goto label17;

     label15:
        goto label17;

     label16:
        $r105 = new java.lang.StringBuilder;

        specialinvoke $r105.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fragment ");

        virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" declared target fragment ");

        $r109 = r1.<android.app.Fragment: android.app.Fragment mTarget>;

        virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r109);

        virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" that does not belong to this FragmentManager!");

        $r112 = new java.lang.IllegalStateException;

        $r113 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r112.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r113);

        throw $r112;

     label17:
        $r134 = r0.<android.app.FragmentManagerImpl: android.app.FragmentHostCallback mHost>;

        $r135 = virtualinvoke $r134.<android.app.FragmentHostCallback: android.content.Context getContext()>();

        virtualinvoke r0.<android.app.FragmentManagerImpl: void dispatchOnFragmentPreAttached(android.app.Fragment,android.content.Context,boolean)>(r1, $r135, 0);

        r1.<android.app.Fragment: boolean mCalled> = 0;

        $r136 = r0.<android.app.FragmentManagerImpl: android.app.FragmentHostCallback mHost>;

        $r137 = virtualinvoke $r136.<android.app.FragmentHostCallback: android.content.Context getContext()>();

        virtualinvoke r1.<android.app.Fragment: void onAttach(android.content.Context)>($r137);

        $z28 = r1.<android.app.Fragment: boolean mCalled>;

        if $z28 == 0 goto label22;

        $r92 = r1.<android.app.Fragment: android.app.Fragment mParentFragment>;

        if $r92 != null goto label18;

        $r100 = r0.<android.app.FragmentManagerImpl: android.app.FragmentHostCallback mHost>;

        virtualinvoke $r100.<android.app.FragmentHostCallback: void onAttachFragment(android.app.Fragment)>(r1);

        goto label19;

     label18:
        $r93 = r1.<android.app.Fragment: android.app.Fragment mParentFragment>;

        virtualinvoke $r93.<android.app.Fragment: void onAttachFragment(android.app.Fragment)>(r1);

     label19:
        $r94 = r0.<android.app.FragmentManagerImpl: android.app.FragmentHostCallback mHost>;

        $r95 = virtualinvoke $r94.<android.app.FragmentHostCallback: android.content.Context getContext()>();

        virtualinvoke r0.<android.app.FragmentManagerImpl: void dispatchOnFragmentAttached(android.app.Fragment,android.content.Context,boolean)>(r1, $r95, 0);

        $z19 = r1.<android.app.Fragment: boolean mIsCreated>;

        if $z19 != 0 goto label20;

        $r97 = r1.<android.app.Fragment: android.os.Bundle mSavedFragmentState>;

        virtualinvoke r0.<android.app.FragmentManagerImpl: void dispatchOnFragmentPreCreated(android.app.Fragment,android.os.Bundle,boolean)>(r1, $r97, 0);

        $r98 = r1.<android.app.Fragment: android.os.Bundle mSavedFragmentState>;

        virtualinvoke r1.<android.app.Fragment: void performCreate(android.os.Bundle)>($r98);

        $r99 = r1.<android.app.Fragment: android.os.Bundle mSavedFragmentState>;

        virtualinvoke r0.<android.app.FragmentManagerImpl: void dispatchOnFragmentCreated(android.app.Fragment,android.os.Bundle,boolean)>(r1, $r99, 0);

        goto label21;

     label20:
        $r96 = r1.<android.app.Fragment: android.os.Bundle mSavedFragmentState>;

        virtualinvoke r1.<android.app.Fragment: void restoreChildFragmentState(android.os.Bundle,boolean)>($r96, 1);

        r1.<android.app.Fragment: int mState> = 1;

     label21:
        r1.<android.app.Fragment: boolean mRetaining> = 0;

        i33 = i39;

        goto label23;

     label22:
        $r86 = new java.lang.StringBuilder;

        specialinvoke $r86.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fragment ");

        virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" did not call through to super.onAttach()");

        $r90 = new android.util.SuperNotCalledException;

        $r91 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r90.<android.util.SuperNotCalledException: void <init>(java.lang.String)>($r91);

        throw $r90;

     label23:
        virtualinvoke r0.<android.app.FragmentManagerImpl: void ensureInflatedFragmentView(android.app.Fragment)>(r1);

        if i33 <= 1 goto label38;

        $z14 = <android.app.FragmentManagerImpl: boolean DEBUG>;

        if $z14 == 0 goto label24;

        $r79 = new java.lang.StringBuilder;

        specialinvoke $r79.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("moveto ACTIVITY_CREATED: ");

        virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r82 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r82);

     label24:
        $z15 = r1.<android.app.Fragment: boolean mFromLayout>;

        if $z15 != 0 goto label36;

        r140 = null;

        $i13 = r1.<android.app.Fragment: int mContainerId>;

        if $i13 == 0 goto label31;

        $i15 = r1.<android.app.Fragment: int mContainerId>;

        if $i15 != -1 goto label25;

        $r73 = new java.lang.StringBuilder;

        specialinvoke $r73.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot create fragment ");

        virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for a container view with no id");

        $r77 = new java.lang.IllegalArgumentException;

        $r78 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r77.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r78);

        specialinvoke r0.<android.app.FragmentManagerImpl: void throwException(java.lang.RuntimeException)>($r77);

     label25:
        $r60 = r0.<android.app.FragmentManagerImpl: android.app.FragmentContainer mContainer>;

        $i16 = r1.<android.app.Fragment: int mContainerId>;

        $r61 = virtualinvoke $r60.<android.app.FragmentContainer: android.view.View onFindViewById(int)>($i16);

        r142 = (android.view.ViewGroup) $r61;

        if r142 != null goto label30;

        $z17 = r1.<android.app.Fragment: boolean mRestored>;

        if $z17 != 0 goto label30;

     label26:
        $r62 = virtualinvoke r1.<android.app.Fragment: android.content.res.Resources getResources()>();

        $i17 = r1.<android.app.Fragment: int mContainerId>;

        r143 = virtualinvoke $r62.<android.content.res.Resources: java.lang.String getResourceName(int)>($i17);

     label27:
        goto label29;

     label28:
        $r127 := @caughtexception;

        r143 = "unknown";

     label29:
        $r63 = new java.lang.StringBuilder;

        specialinvoke $r63.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No view found for id 0x");

        $i18 = r1.<android.app.Fragment: int mContainerId>;

        $r65 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i18);

        virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r65);

        virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r143);

        virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") for fragment ");

        virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r71 = new java.lang.IllegalArgumentException;

        $r72 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r71.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r72);

        specialinvoke r0.<android.app.FragmentManagerImpl: void throwException(java.lang.RuntimeException)>($r71);

     label30:
        r140 = r142;

     label31:
        r1.<android.app.Fragment: android.view.ViewGroup mContainer> = r140;

        $r146 = r1.<android.app.Fragment: android.os.Bundle mSavedFragmentState>;

        $r147 = virtualinvoke r1.<android.app.Fragment: android.view.LayoutInflater performGetLayoutInflater(android.os.Bundle)>($r146);

        $r148 = r1.<android.app.Fragment: android.os.Bundle mSavedFragmentState>;

        $r149 = virtualinvoke r1.<android.app.Fragment: android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>($r147, r140, $r148);

        r1.<android.app.Fragment: android.view.View mView> = $r149;

        $r150 = r1.<android.app.Fragment: android.view.View mView>;

        if $r150 == null goto label36;

        $r51 = r1.<android.app.Fragment: android.view.View mView>;

        virtualinvoke $r51.<android.view.View: void setSaveFromParentEnabled(boolean)>(0);

        if r140 == null goto label32;

        $r59 = r1.<android.app.Fragment: android.view.View mView>;

        virtualinvoke r140.<android.view.ViewGroup: void addView(android.view.View)>($r59);

     label32:
        $z16 = r1.<android.app.Fragment: boolean mHidden>;

        if $z16 == 0 goto label33;

        $r58 = r1.<android.app.Fragment: android.view.View mView>;

        virtualinvoke $r58.<android.view.View: void setVisibility(int)>(8);

     label33:
        $r53 = r1.<android.app.Fragment: android.view.View mView>;

        $r52 = r1.<android.app.Fragment: android.os.Bundle mSavedFragmentState>;

        virtualinvoke r1.<android.app.Fragment: void onViewCreated(android.view.View,android.os.Bundle)>($r53, $r52);

        $r55 = r1.<android.app.Fragment: android.view.View mView>;

        $r54 = r1.<android.app.Fragment: android.os.Bundle mSavedFragmentState>;

        virtualinvoke r0.<android.app.FragmentManagerImpl: void dispatchOnFragmentViewCreated(android.app.Fragment,android.view.View,android.os.Bundle,boolean)>(r1, $r55, $r54, 0);

        $r56 = r1.<android.app.Fragment: android.view.View mView>;

        $i14 = virtualinvoke $r56.<android.view.View: int getVisibility()>();

        if $i14 != 0 goto label34;

        $r57 = r1.<android.app.Fragment: android.view.ViewGroup mContainer>;

        if $r57 == null goto label34;

        z29 = 1;

        goto label35;

     label34:
        z29 = 0;

     label35:
        r1.<android.app.Fragment: boolean mIsNewlyAdded> = z29;

     label36:
        $r151 = r1.<android.app.Fragment: android.os.Bundle mSavedFragmentState>;

        virtualinvoke r1.<android.app.Fragment: void performActivityCreated(android.os.Bundle)>($r151);

        $r152 = r1.<android.app.Fragment: android.os.Bundle mSavedFragmentState>;

        virtualinvoke r0.<android.app.FragmentManagerImpl: void dispatchOnFragmentActivityCreated(android.app.Fragment,android.os.Bundle,boolean)>(r1, $r152, 0);

        $r153 = r1.<android.app.Fragment: android.view.View mView>;

        if $r153 == null goto label37;

        $r50 = r1.<android.app.Fragment: android.os.Bundle mSavedFragmentState>;

        virtualinvoke r1.<android.app.Fragment: void restoreViewState(android.os.Bundle)>($r50);

     label37:
        r1.<android.app.Fragment: android.os.Bundle mSavedFragmentState> = null;

     label38:
        i36 = i33;

     label39:
        i37 = i36;

        if i36 <= 2 goto label40;

        r1.<android.app.Fragment: int mState> = 3;

        i37 = i36;

     label40:
        i38 = i37;

        if i37 <= 3 goto label42;

        $z13 = <android.app.FragmentManagerImpl: boolean DEBUG>;

        if $z13 == 0 goto label41;

        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("moveto STARTED: ");

        virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r49 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r49);

     label41:
        virtualinvoke r1.<android.app.Fragment: void performStart()>();

        virtualinvoke r0.<android.app.FragmentManagerImpl: void dispatchOnFragmentStarted(android.app.Fragment,boolean)>(r1, 0);

        i38 = i37;

     label42:
        i33 = i38;

        if i38 <= 4 goto label44;

        $z12 = <android.app.FragmentManagerImpl: boolean DEBUG>;

        if $z12 == 0 goto label43;

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("moveto RESUMED: ");

        virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r45 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r45);

     label43:
        virtualinvoke r1.<android.app.Fragment: void performResume()>();

        virtualinvoke r0.<android.app.FragmentManagerImpl: void dispatchOnFragmentResumed(android.app.Fragment,boolean)>(r1, 0);

        r1.<android.app.Fragment: android.os.Bundle mSavedFragmentState> = null;

        r1.<android.app.Fragment: android.util.SparseArray mSavedViewState> = null;

        i33 = i38;

     label44:
        i40 = i33;

        goto label69;

     label45:
        $i0 = r1.<android.app.Fragment: int mState>;

        if $i0 <= i33 goto label68;

        i41 = r1.<android.app.Fragment: int mState>;

        if i41 == 1 goto label61;

        if i41 == 2 goto label50;

        if i41 == 3 goto label50;

        if i41 == 4 goto label48;

        if i41 == 5 goto label46;

        i40 = i33;

        goto label69;

     label46:
        if i33 >= 5 goto label48;

        $z10 = <android.app.FragmentManagerImpl: boolean DEBUG>;

        if $z10 == 0 goto label47;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("movefrom RESUMED: ");

        virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r40 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r40);

     label47:
        virtualinvoke r1.<android.app.Fragment: void performPause()>();

        virtualinvoke r0.<android.app.FragmentManagerImpl: void dispatchOnFragmentPaused(android.app.Fragment,boolean)>(r1, 0);

     label48:
        if i33 >= 4 goto label50;

        $z9 = <android.app.FragmentManagerImpl: boolean DEBUG>;

        if $z9 == 0 goto label49;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("movefrom STARTED: ");

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r36 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r36);

     label49:
        virtualinvoke r1.<android.app.Fragment: void performStop()>();

        virtualinvoke r0.<android.app.FragmentManagerImpl: void dispatchOnFragmentStopped(android.app.Fragment,boolean)>(r1, 0);

     label50:
        if i33 >= 2 goto label60;

        $z6 = <android.app.FragmentManagerImpl: boolean DEBUG>;

        if $z6 == 0 goto label51;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("movefrom ACTIVITY_CREATED: ");

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r32 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r32);

     label51:
        $r15 = r1.<android.app.Fragment: android.view.View mView>;

        if $r15 == null goto label52;

        $r27 = r0.<android.app.FragmentManagerImpl: android.app.FragmentHostCallback mHost>;

        $z8 = virtualinvoke $r27.<android.app.FragmentHostCallback: boolean onShouldSaveFragmentState(android.app.Fragment)>(r1);

        if $z8 == 0 goto label52;

        $r28 = r1.<android.app.Fragment: android.util.SparseArray mSavedViewState>;

        if $r28 != null goto label52;

        virtualinvoke r0.<android.app.FragmentManagerImpl: void saveFragmentViewState(android.app.Fragment)>(r1);

     label52:
        virtualinvoke r1.<android.app.Fragment: void performDestroyView()>();

        virtualinvoke r0.<android.app.FragmentManagerImpl: void dispatchOnFragmentViewDestroyed(android.app.Fragment,boolean)>(r1, 0);

        $r159 = r1.<android.app.Fragment: android.view.View mView>;

        if $r159 == null goto label59;

        $r16 = r1.<android.app.Fragment: android.view.ViewGroup mContainer>;

        if $r16 == null goto label59;

        $i4 = virtualinvoke r0.<android.app.FragmentManagerImpl: int getTargetSdk()>();

        if $i4 < 26 goto label53;

        $r24 = r1.<android.app.Fragment: android.view.View mView>;

        virtualinvoke $r24.<android.view.View: void clearAnimation()>();

        $r26 = r1.<android.app.Fragment: android.view.ViewGroup mContainer>;

        $r25 = r1.<android.app.Fragment: android.view.View mView>;

        virtualinvoke $r26.<android.view.ViewGroup: void endViewTransition(android.view.View)>($r25);

     label53:
        $i5 = r0.<android.app.FragmentManagerImpl: int mCurState>;

        if $i5 <= 0 goto label56;

        $z7 = r0.<android.app.FragmentManagerImpl: boolean mDestroyed>;

        if $z7 != 0 goto label56;

        $r22 = r1.<android.app.Fragment: android.view.View mView>;

        $i6 = virtualinvoke $r22.<android.view.View: int getVisibility()>();

        if $i6 != 0 goto label55;

        $r23 = r1.<android.app.Fragment: android.view.View mView>;

        $f0 = virtualinvoke $r23.<android.view.View: float getTransitionAlpha()>();

        $b7 = $f0 cmpl 0.0F;

        if $b7 <= 0 goto label54;

        r160 = virtualinvoke r0.<android.app.FragmentManagerImpl: android.animation.Animator loadAnimator(android.app.Fragment,int,boolean,int)>(r1, i29, 0, i30);

        goto label57;

     label54:
        goto label56;

     label55:
        goto label56;

     label56:
        r160 = null;

     label57:
        $r161 = r1.<android.app.Fragment: android.view.View mView>;

        virtualinvoke $r161.<android.view.View: void setTransitionAlpha(float)>(1.0F);

        if r160 == null goto label58;

        r162 = r1.<android.app.Fragment: android.view.ViewGroup mContainer>;

        r163 = r1.<android.app.Fragment: android.view.View mView>;

        virtualinvoke r162.<android.view.ViewGroup: void startViewTransition(android.view.View)>(r163);

        virtualinvoke r1.<android.app.Fragment: void setAnimatingAway(android.animation.Animator)>(r160);

        virtualinvoke r1.<android.app.Fragment: void setStateAfterAnimating(int)>(i33);

        $r19 = new android.app.FragmentManagerImpl$2;

        specialinvoke $r19.<android.app.FragmentManagerImpl$2: void <init>(android.app.FragmentManagerImpl,android.view.ViewGroup,android.view.View,android.app.Fragment,android.app.Fragment)>(r0, r162, r163, r1, r1);

        virtualinvoke r160.<android.animation.Animator: void addListener(android.animation.Animator$AnimatorListener)>($r19);

        $r20 = r1.<android.app.Fragment: android.view.View mView>;

        virtualinvoke r160.<android.animation.Animator: void setTarget(java.lang.Object)>($r20);

        $r21 = r1.<android.app.Fragment: android.view.View mView>;

        specialinvoke r0.<android.app.FragmentManagerImpl: void setHWLayerAnimListenerIfAlpha(android.view.View,android.animation.Animator)>($r21, r160);

        virtualinvoke r160.<android.animation.Animator: void start()>();

     label58:
        $r18 = r1.<android.app.Fragment: android.view.ViewGroup mContainer>;

        $r17 = r1.<android.app.Fragment: android.view.View mView>;

        virtualinvoke $r18.<android.view.ViewGroup: void removeView(android.view.View)>($r17);

        goto label59;

     label59:
        r1.<android.app.Fragment: android.view.ViewGroup mContainer> = null;

        r1.<android.app.Fragment: android.view.View mView> = null;

        r1.<android.app.Fragment: boolean mInLayout> = 0;

        goto label61;

     label60:
        goto label61;

     label61:
        i40 = i33;

        if i33 >= 1 goto label69;

        $z2 = r0.<android.app.FragmentManagerImpl: boolean mDestroyed>;

        if $z2 == 0 goto label62;

        $r14 = virtualinvoke r1.<android.app.Fragment: android.animation.Animator getAnimatingAway()>();

        if $r14 == null goto label62;

        r164 = virtualinvoke r1.<android.app.Fragment: android.animation.Animator getAnimatingAway()>();

        virtualinvoke r1.<android.app.Fragment: void setAnimatingAway(android.animation.Animator)>(null);

        virtualinvoke r164.<android.animation.Animator: void cancel()>();

     label62:
        $r165 = virtualinvoke r1.<android.app.Fragment: android.animation.Animator getAnimatingAway()>();

        if $r165 == null goto label63;

        virtualinvoke r1.<android.app.Fragment: void setStateAfterAnimating(int)>(i33);

        i40 = 1;

        goto label69;

     label63:
        $z3 = <android.app.FragmentManagerImpl: boolean DEBUG>;

        if $z3 == 0 goto label64;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("movefrom CREATED: ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r13);

     label64:
        $z4 = r1.<android.app.Fragment: boolean mRetaining>;

        if $z4 != 0 goto label65;

        virtualinvoke r1.<android.app.Fragment: void performDestroy()>();

        virtualinvoke r0.<android.app.FragmentManagerImpl: void dispatchOnFragmentDestroyed(android.app.Fragment,boolean)>(r1, 0);

        goto label66;

     label65:
        r1.<android.app.Fragment: int mState> = 0;

     label66:
        virtualinvoke r1.<android.app.Fragment: void performDetach()>();

        virtualinvoke r0.<android.app.FragmentManagerImpl: void dispatchOnFragmentDetached(android.app.Fragment,boolean)>(r1, 0);

        i40 = i33;

        if z25 != 0 goto label69;

        $z5 = r1.<android.app.Fragment: boolean mRetaining>;

        if $z5 != 0 goto label67;

        virtualinvoke r0.<android.app.FragmentManagerImpl: void makeInactive(android.app.Fragment)>(r1);

        i40 = i33;

        goto label69;

     label67:
        r1.<android.app.Fragment: android.app.FragmentHostCallback mHost> = null;

        r1.<android.app.Fragment: android.app.Fragment mParentFragment> = null;

        r1.<android.app.Fragment: android.app.FragmentManagerImpl mFragmentManager> = null;

        i40 = i33;

        goto label69;

     label68:
        i40 = i33;

     label69:
        $i42 = r1.<android.app.Fragment: int mState>;

        if $i42 == i40 goto label70;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("moveToState: Fragment state for ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not updated inline; expected state ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i40);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" found ");

        $i1 = r1.<android.app.Fragment: int mState>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r9 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("FragmentManager", $r9);

        r1.<android.app.Fragment: int mState> = i40;

     label70:
        return;

        catch android.content.res.Resources$NotFoundException from label26 to label27 with label28;
    }

    public void noteStateNotSaved()
    {
        android.app.FragmentManagerImpl r0;
        int i0, i1;
        android.app.Fragment r1;
        java.util.ArrayList $r2, $r3;
        java.lang.Object $r4;

        r0 := @this: android.app.FragmentManagerImpl;

        r0.<android.app.FragmentManagerImpl: android.app.FragmentManagerNonConfig mSavedNonConfig> = null;

        r0.<android.app.FragmentManagerImpl: boolean mStateSaved> = 0;

        $r2 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r3 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r1 = (android.app.Fragment) $r4;

        if r1 == null goto label2;

        virtualinvoke r1.<android.app.Fragment: void noteStateNotSaved()>();

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    public android.view.View onCreateView(android.view.View, java.lang.String, android.content.Context, android.util.AttributeSet)
    {
        android.app.FragmentManagerImpl r0;
        android.content.Context r1, $r34, $r39;
        android.util.AttributeSet r2;
        int i0, i2, i3, $i4;
        java.lang.String r3, $r4, $r7, $r10, $r15, $r20, $r27, $r43, $r49, $r51, $r56, r58, r59;
        boolean $z0, $z1, $z2, $z3, $z4;
        int[] $r5;
        java.lang.StringBuilder $r6, $r22, $r41, $r50;
        java.lang.IllegalArgumentException $r19, $r55;
        android.app.FragmentHostCallback $r21, $r33, $r37, $r38;
        java.lang.IllegalStateException $r26;
        android.view.View $r28, $r30, $r31, $r32, r57, $r66;
        java.lang.Object $r29;
        android.os.Bundle $r35, $r40;
        android.app.FragmentContainer $r36;
        android.content.res.TypedArray r60;
        android.app.Fragment r62, r63, r64;

        r0 := @this: android.app.FragmentManagerImpl;

        r57 := @parameter0: android.view.View;

        r58 := @parameter1: java.lang.String;

        r1 := @parameter2: android.content.Context;

        r2 := @parameter3: android.util.AttributeSet;

        $r4 = "fragment";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r58);

        if $z0 != 0 goto label01;

        return null;

     label01:
        r59 = interfaceinvoke r2.<android.util.AttributeSet: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "class");

        $r5 = <com.android.internal.R$styleable: int[] Fragment>;

        r60 = virtualinvoke r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>(r2, $r5);

        i2 = 0;

        if r59 != null goto label02;

        r59 = virtualinvoke r60.<android.content.res.TypedArray: java.lang.String getString(int)>(0);

        goto label02;

     label02:
        i0 = virtualinvoke r60.<android.content.res.TypedArray: int getResourceId(int,int)>(1, -1);

        r3 = virtualinvoke r60.<android.content.res.TypedArray: java.lang.String getString(int)>(2);

        virtualinvoke r60.<android.content.res.TypedArray: void recycle()>();

        if r57 == null goto label03;

        i2 = virtualinvoke r57.<android.view.View: int getId()>();

     label03:
        if i2 != -1 goto label05;

        if i0 != -1 goto label05;

        if r3 == null goto label04;

        goto label05;

     label04:
        $r50 = new java.lang.StringBuilder;

        specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();

        $r51 = interfaceinvoke r2.<android.util.AttributeSet: java.lang.String getPositionDescription()>();

        virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r51);

        virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Must specify unique android:id, android:tag, or have a parent with an id for ");

        virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r59);

        $r55 = new java.lang.IllegalArgumentException;

        $r56 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r55.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r56);

        throw $r55;

     label05:
        if i0 == -1 goto label06;

        r62 = virtualinvoke r0.<android.app.FragmentManagerImpl: android.app.Fragment findFragmentById(int)>(i0);

        goto label07;

     label06:
        r62 = null;

     label07:
        r63 = r62;

        if r62 != null goto label08;

        r63 = r62;

        if r3 == null goto label08;

        r63 = virtualinvoke r0.<android.app.FragmentManagerImpl: android.app.Fragment findFragmentByTag(java.lang.String)>(r3);

     label08:
        r64 = r63;

        if r63 != null goto label09;

        r64 = r63;

        if i2 == -1 goto label09;

        r64 = virtualinvoke r0.<android.app.FragmentManagerImpl: android.app.Fragment findFragmentById(int)>(i2);

     label09:
        $z4 = <android.app.FragmentManagerImpl: boolean DEBUG>;

        if $z4 == 0 goto label10;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onCreateView: id=0x");

        $r43 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" fname=");

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r59);

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" existing=");

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r64);

        $r49 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r49);

     label10:
        if r64 != null goto label13;

        $r36 = r0.<android.app.FragmentManagerImpl: android.app.FragmentContainer mContainer>;

        r64 = virtualinvoke $r36.<android.app.FragmentContainer: android.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)>(r1, r59, null);

        r64.<android.app.Fragment: boolean mFromLayout> = 1;

        if i0 == 0 goto label11;

        i3 = i0;

        goto label12;

     label11:
        i3 = i2;

     label12:
        r64.<android.app.Fragment: int mFragmentId> = i3;

        r64.<android.app.Fragment: int mContainerId> = i2;

        r64.<android.app.Fragment: java.lang.String mTag> = r3;

        r64.<android.app.Fragment: boolean mInLayout> = 1;

        r64.<android.app.Fragment: android.app.FragmentManagerImpl mFragmentManager> = r0;

        $r37 = r0.<android.app.FragmentManagerImpl: android.app.FragmentHostCallback mHost>;

        r64.<android.app.Fragment: android.app.FragmentHostCallback mHost> = $r37;

        $r38 = r0.<android.app.FragmentManagerImpl: android.app.FragmentHostCallback mHost>;

        $r39 = virtualinvoke $r38.<android.app.FragmentHostCallback: android.content.Context getContext()>();

        $r40 = r64.<android.app.Fragment: android.os.Bundle mSavedFragmentState>;

        virtualinvoke r64.<android.app.Fragment: void onInflate(android.content.Context,android.util.AttributeSet,android.os.Bundle)>($r39, r2, $r40);

        virtualinvoke r0.<android.app.FragmentManagerImpl: void addFragment(android.app.Fragment,boolean)>(r64, 1);

        goto label14;

     label13:
        $z1 = r64.<android.app.Fragment: boolean mInLayout>;

        if $z1 != 0 goto label20;

        r64.<android.app.Fragment: boolean mInLayout> = 1;

        $r21 = r0.<android.app.FragmentManagerImpl: android.app.FragmentHostCallback mHost>;

        r64.<android.app.Fragment: android.app.FragmentHostCallback mHost> = $r21;

        $z2 = r64.<android.app.Fragment: boolean mRetaining>;

        if $z2 != 0 goto label14;

        $r33 = r0.<android.app.FragmentManagerImpl: android.app.FragmentHostCallback mHost>;

        $r34 = virtualinvoke $r33.<android.app.FragmentHostCallback: android.content.Context getContext()>();

        $r35 = r64.<android.app.Fragment: android.os.Bundle mSavedFragmentState>;

        virtualinvoke r64.<android.app.Fragment: void onInflate(android.content.Context,android.util.AttributeSet,android.os.Bundle)>($r34, r2, $r35);

     label14:
        $i4 = r0.<android.app.FragmentManagerImpl: int mCurState>;

        if $i4 >= 1 goto label15;

        $z3 = r64.<android.app.Fragment: boolean mFromLayout>;

        if $z3 == 0 goto label15;

        virtualinvoke r0.<android.app.FragmentManagerImpl: void moveToState(android.app.Fragment,int,int,int,boolean)>(r64, 1, 0, 0, 0);

        goto label16;

     label15:
        virtualinvoke r0.<android.app.FragmentManagerImpl: void moveToState(android.app.Fragment)>(r64);

     label16:
        $r66 = r64.<android.app.Fragment: android.view.View mView>;

        if $r66 == null goto label19;

        if i0 == 0 goto label17;

        $r32 = r64.<android.app.Fragment: android.view.View mView>;

        virtualinvoke $r32.<android.view.View: void setId(int)>(i0);

     label17:
        $r28 = r64.<android.app.Fragment: android.view.View mView>;

        $r29 = virtualinvoke $r28.<android.view.View: java.lang.Object getTag()>();

        if $r29 != null goto label18;

        $r31 = r64.<android.app.Fragment: android.view.View mView>;

        virtualinvoke $r31.<android.view.View: void setTag(java.lang.Object)>(r3);

     label18:
        $r30 = r64.<android.app.Fragment: android.view.View mView>;

        return $r30;

     label19:
        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fragment ");

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r59);

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" did not create a view.");

        $r26 = new java.lang.IllegalStateException;

        $r27 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r26.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r27);

        throw $r26;

     label20:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = interfaceinvoke r2.<android.util.AttributeSet: java.lang.String getPositionDescription()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Duplicate id 0x");

        $r10 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", tag ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", or parent id 0x");

        $r15 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i2);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with another fragment for ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r59);

        $r19 = new java.lang.IllegalArgumentException;

        $r20 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r20);

        throw $r19;
    }

    public android.view.View onCreateView(java.lang.String, android.content.Context, android.util.AttributeSet)
    {
        android.app.FragmentManagerImpl r0;
        java.lang.String r1;
        android.content.Context r2;
        android.util.AttributeSet r3;

        r0 := @this: android.app.FragmentManagerImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.content.Context;

        r3 := @parameter2: android.util.AttributeSet;

        return null;
    }

    public void performPendingDeferredStart(android.app.Fragment)
    {
        android.app.FragmentManagerImpl r0;
        android.app.Fragment r1;
        boolean $z0, $z1;
        int $i0;

        r0 := @this: android.app.FragmentManagerImpl;

        r1 := @parameter0: android.app.Fragment;

        $z0 = r1.<android.app.Fragment: boolean mDeferStart>;

        if $z0 == 0 goto label2;

        $z1 = r0.<android.app.FragmentManagerImpl: boolean mExecutingActions>;

        if $z1 == 0 goto label1;

        r0.<android.app.FragmentManagerImpl: boolean mHavePendingDeferredStart> = 1;

        return;

     label1:
        r1.<android.app.Fragment: boolean mDeferStart> = 0;

        $i0 = r0.<android.app.FragmentManagerImpl: int mCurState>;

        virtualinvoke r0.<android.app.FragmentManagerImpl: void moveToState(android.app.Fragment,int,int,int,boolean)>(r1, $i0, 0, 0, 0);

     label2:
        return;
    }

    public void popBackStack()
    {
        android.app.FragmentManagerImpl r0;
        android.app.FragmentManagerImpl$PopBackStackState $r1;

        r0 := @this: android.app.FragmentManagerImpl;

        $r1 = new android.app.FragmentManagerImpl$PopBackStackState;

        specialinvoke $r1.<android.app.FragmentManagerImpl$PopBackStackState: void <init>(android.app.FragmentManagerImpl,java.lang.String,int,int)>(r0, null, -1, 0);

        virtualinvoke r0.<android.app.FragmentManagerImpl: void enqueueAction(android.app.FragmentManagerImpl$OpGenerator,boolean)>($r1, 0);

        return;
    }

    public void popBackStack(int, int)
    {
        android.app.FragmentManagerImpl r0;
        int i0, i1;
        java.lang.StringBuilder $r2;
        java.lang.IllegalArgumentException $r5;
        java.lang.String $r6;
        android.app.FragmentManagerImpl$PopBackStackState $r7;

        r0 := @this: android.app.FragmentManagerImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 < 0 goto label1;

        $r7 = new android.app.FragmentManagerImpl$PopBackStackState;

        specialinvoke $r7.<android.app.FragmentManagerImpl$PopBackStackState: void <init>(android.app.FragmentManagerImpl,java.lang.String,int,int)>(r0, null, i0, i1);

        virtualinvoke r0.<android.app.FragmentManagerImpl: void enqueueAction(android.app.FragmentManagerImpl$OpGenerator,boolean)>($r7, 0);

        return;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad id: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r5;
    }

    public void popBackStack(java.lang.String, int)
    {
        android.app.FragmentManagerImpl r0;
        java.lang.String r1;
        int i0;
        android.app.FragmentManagerImpl$PopBackStackState $r2;

        r0 := @this: android.app.FragmentManagerImpl;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = new android.app.FragmentManagerImpl$PopBackStackState;

        specialinvoke $r2.<android.app.FragmentManagerImpl$PopBackStackState: void <init>(android.app.FragmentManagerImpl,java.lang.String,int,int)>(r0, r1, -1, i0);

        virtualinvoke r0.<android.app.FragmentManagerImpl: void enqueueAction(android.app.FragmentManagerImpl$OpGenerator,boolean)>($r2, 0);

        return;
    }

    public boolean popBackStackImmediate()
    {
        android.app.FragmentManagerImpl r0;
        boolean $z0;

        r0 := @this: android.app.FragmentManagerImpl;

        specialinvoke r0.<android.app.FragmentManagerImpl: void checkStateLoss()>();

        $z0 = specialinvoke r0.<android.app.FragmentManagerImpl: boolean popBackStackImmediate(java.lang.String,int,int)>(null, -1, 0);

        return $z0;
    }

    public boolean popBackStackImmediate(int, int)
    {
        android.app.FragmentManagerImpl r0;
        int i0, i1;
        java.lang.StringBuilder $r2;
        java.lang.IllegalArgumentException $r5;
        java.lang.String $r6;
        boolean $z0;

        r0 := @this: android.app.FragmentManagerImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<android.app.FragmentManagerImpl: void checkStateLoss()>();

        if i0 < 0 goto label1;

        $z0 = specialinvoke r0.<android.app.FragmentManagerImpl: boolean popBackStackImmediate(java.lang.String,int,int)>(null, i0, i1);

        return $z0;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad id: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r5;
    }

    public boolean popBackStackImmediate(java.lang.String, int)
    {
        android.app.FragmentManagerImpl r0;
        java.lang.String r1;
        int i0;
        boolean $z0;

        r0 := @this: android.app.FragmentManagerImpl;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<android.app.FragmentManagerImpl: void checkStateLoss()>();

        $z0 = specialinvoke r0.<android.app.FragmentManagerImpl: boolean popBackStackImmediate(java.lang.String,int,int)>(r1, -1, i0);

        return $z0;
    }

    boolean popBackStackState(java.util.ArrayList, java.util.ArrayList, java.lang.String, int, int)
    {
        android.app.FragmentManagerImpl r0;
        java.util.ArrayList r1, r2, $r4, $r5, $r6, $r10, $r13, $r16, r20, $r23;
        java.lang.String r3, $r12, $r15;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, i8, i9, i10, i11, i12, $i13, $i14, i15;
        java.lang.Object $r7, $r11, $r14, $r17;
        android.app.BackStackRecord $r8, $r18, r21, r22;
        java.lang.Boolean $r9, $r19;
        boolean $z2, $z3;

        r0 := @this: android.app.FragmentManagerImpl;

        r1 := @parameter0: java.util.ArrayList;

        r2 := @parameter1: java.util.ArrayList;

        r3 := @parameter2: java.lang.String;

        i7 := @parameter3: int;

        i8 := @parameter4: int;

        r20 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mBackStack>;

        if r20 != null goto label01;

        return 0;

     label01:
        if r3 != null goto label03;

        if i7 >= 0 goto label03;

        $i5 = i8 & 1;

        if $i5 != 0 goto label03;

        $i6 = virtualinvoke r20.<java.util.ArrayList: int size()>();

        i9 = $i6 - 1;

        if i9 >= 0 goto label02;

        return 0;

     label02:
        $r16 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mBackStack>;

        $r17 = virtualinvoke $r16.<java.util.ArrayList: java.lang.Object remove(int)>(i9);

        $r18 = (android.app.BackStackRecord) $r17;

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r18);

        $r19 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r19);

        goto label16;

     label03:
        i10 = -1;

        if r3 != null goto label04;

        if i7 < 0 goto label13;

     label04:
        $r4 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mBackStack>;

        $i0 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        i11 = $i0 - 1;

     label05:
        if i11 < 0 goto label08;

        $r13 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mBackStack>;

        $r14 = virtualinvoke $r13.<java.util.ArrayList: java.lang.Object get(int)>(i11);

        r21 = (android.app.BackStackRecord) $r14;

        if r3 == null goto label06;

        $r15 = virtualinvoke r21.<android.app.BackStackRecord: java.lang.String getName()>();

        $z3 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>($r15);

        if $z3 == 0 goto label06;

        goto label08;

     label06:
        if i7 < 0 goto label07;

        $i4 = r21.<android.app.BackStackRecord: int mIndex>;

        if i7 != $i4 goto label07;

        goto label08;

     label07:
        i11 = i11 + -1;

        goto label05;

     label08:
        if i11 >= 0 goto label09;

        return 0;

     label09:
        i10 = i11;

        $i1 = i8 & 1;

        if $i1 == 0 goto label13;

        i12 = i11 - 1;

     label10:
        i10 = i12;

        if i12 < 0 goto label13;

        $r10 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mBackStack>;

        $r11 = virtualinvoke $r10.<java.util.ArrayList: java.lang.Object get(int)>(i12);

        r22 = (android.app.BackStackRecord) $r11;

        if r3 == null goto label11;

        $r12 = virtualinvoke r22.<android.app.BackStackRecord: java.lang.String getName()>();

        $z2 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>($r12);

        if $z2 != 0 goto label12;

     label11:
        i10 = i12;

        if i7 < 0 goto label13;

        i10 = i12;

        $i3 = r22.<android.app.BackStackRecord: int mIndex>;

        if i7 != $i3 goto label13;

     label12:
        i12 = i12 + -1;

        goto label10;

     label13:
        $r23 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mBackStack>;

        $i13 = virtualinvoke $r23.<java.util.ArrayList: int size()>();

        $i14 = $i13 - 1;

        if i10 != $i14 goto label14;

        return 0;

     label14:
        $r5 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mBackStack>;

        $i2 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        i15 = $i2 - 1;

     label15:
        if i15 <= i10 goto label16;

        $r6 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mBackStack>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object remove(int)>(i15);

        $r8 = (android.app.BackStackRecord) $r7;

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r8);

        $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r9);

        i15 = i15 + -1;

        goto label15;

     label16:
        return 1;
    }

    public void putFragment(android.os.Bundle, java.lang.String, android.app.Fragment)
    {
        android.app.FragmentManagerImpl r0;
        android.os.Bundle r1;
        java.lang.String r2, $r10;
        android.app.Fragment r3;
        int $i0, $i1;
        java.lang.StringBuilder $r5;
        java.lang.IllegalStateException $r9;

        r0 := @this: android.app.FragmentManagerImpl;

        r1 := @parameter0: android.os.Bundle;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.app.Fragment;

        $i0 = r3.<android.app.Fragment: int mIndex>;

        if $i0 >= 0 goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fragment ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not currently in the FragmentManager");

        $r9 = new java.lang.IllegalStateException;

        $r10 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r10);

        specialinvoke r0.<android.app.FragmentManagerImpl: void throwException(java.lang.RuntimeException)>($r9);

     label1:
        $i1 = r3.<android.app.Fragment: int mIndex>;

        virtualinvoke r1.<android.os.Bundle: void putInt(java.lang.String,int)>(r2, $i1);

        return;
    }

    public void registerFragmentLifecycleCallbacks(android.app.FragmentManager$FragmentLifecycleCallbacks, boolean)
    {
        android.app.FragmentManagerImpl r0;
        android.app.FragmentManager$FragmentLifecycleCallbacks r1;
        boolean z0;
        android.util.Pair $r2;
        java.util.concurrent.CopyOnWriteArrayList $r3;
        java.lang.Boolean $r4;

        r0 := @this: android.app.FragmentManagerImpl;

        r1 := @parameter0: android.app.FragmentManager$FragmentLifecycleCallbacks;

        z0 := @parameter1: boolean;

        $r3 = r0.<android.app.FragmentManagerImpl: java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks>;

        $r2 = new android.util.Pair;

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        specialinvoke $r2.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>(r1, $r4);

        virtualinvoke $r3.<java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>($r2);

        return;
    }

    public void removeFragment(android.app.Fragment)
    {
        android.app.FragmentManagerImpl r0;
        boolean z0, $z1, $z2, $z4, $z5, $z6;
        java.util.ArrayList $r1, r11;
        java.lang.StringBuilder $r2;
        int $i0;
        java.lang.String $r7;
        java.lang.Throwable $r8;
        android.app.Fragment r9;

        r0 := @this: android.app.FragmentManagerImpl;

        r9 := @parameter0: android.app.Fragment;

        $z1 = <android.app.FragmentManagerImpl: boolean DEBUG>;

        if $z1 == 0 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("remove: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r9);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" nesting=");

        $i0 = r9.<android.app.Fragment: int mBackStackNesting>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r7);

     label1:
        z0 = virtualinvoke r9.<android.app.Fragment: boolean isInBackStack()>();

        $z2 = r9.<android.app.Fragment: boolean mDetached>;

        if $z2 == 0 goto label2;

        $z6 = z0 ^ 1;

        if $z6 == 0 goto label6;

     label2:
        r11 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        entermonitor r11;

     label3:
        $r1 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        virtualinvoke $r1.<java.util.ArrayList: boolean remove(java.lang.Object)>(r9);

        exitmonitor r11;

     label4:
        $z4 = r9.<android.app.Fragment: boolean mHasMenu>;

        if $z4 == 0 goto label5;

        $z5 = r9.<android.app.Fragment: boolean mMenuVisible>;

        if $z5 == 0 goto label5;

        r0.<android.app.FragmentManagerImpl: boolean mNeedMenuInvalidate> = 1;

     label5:
        r9.<android.app.Fragment: boolean mAdded> = 0;

        r9.<android.app.Fragment: boolean mRemoving> = 1;

     label6:
        return;

     label7:
        $r8 := @caughtexception;

     label8:
        exitmonitor r11;

     label9:
        throw $r8;

        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public void removeOnBackStackChangedListener(android.app.FragmentManager$OnBackStackChangedListener)
    {
        android.app.FragmentManagerImpl r0;
        android.app.FragmentManager$OnBackStackChangedListener r1;
        java.util.ArrayList r2;

        r0 := @this: android.app.FragmentManagerImpl;

        r1 := @parameter0: android.app.FragmentManager$OnBackStackChangedListener;

        r2 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mBackStackChangeListeners>;

        if r2 == null goto label1;

        virtualinvoke r2.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

     label1:
        return;
    }

    void reportBackStackChanged()
    {
        android.app.FragmentManagerImpl r0;
        java.util.ArrayList $r1, $r2, $r3;
        int $i0, i1;
        java.lang.Object $r4;
        android.app.FragmentManager$OnBackStackChangedListener $r5;

        r0 := @this: android.app.FragmentManagerImpl;

        $r1 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mBackStackChangeListeners>;

        if $r1 == null goto label2;

        i1 = 0;

     label1:
        $r2 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mBackStackChangeListeners>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if i1 >= $i0 goto label2;

        $r3 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mBackStackChangeListeners>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r5 = (android.app.FragmentManager$OnBackStackChangedListener) $r4;

        interfaceinvoke $r5.<android.app.FragmentManager$OnBackStackChangedListener: void onBackStackChanged()>();

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    void restoreAllState(android.os.Parcelable, android.app.FragmentManagerNonConfig)
    {
        android.app.FragmentManagerImpl r0;
        android.app.FragmentManagerState r1;
        android.app.FragmentState[] $r2, $r4, $r41, $r47, $r48, $r60, $r72, $r75;
        android.util.SparseArray $r3, $r8, $r23, $r35, $r42, $r55;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, i21, i22, i23, $i24, i25, $i26, i27, i28, i29, i30;
        java.util.ArrayList $r5, $r11, $r16, $r25, $r27, r89;
        int[] $r6, $r21, $r22, $r31;
        android.app.BackStackState[] $r7, $r12, $r13, $r14;
        java.lang.Object $r9, $r24, $r34, $r36, $r45, $r46;
        android.app.Fragment $r10, $r37, $r38, r70, $r80, r81, r84, r86;
        android.app.BackStackState $r15;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.StringBuilder $r17, $r28, $r30, $r39, $r43, $r57, $r62;
        java.lang.String $r18, $r29, $r33, $r40, $r44, $r59, $r63;
        com.android.internal.util.FastPrintWriter $r19;
        android.util.LogWriter $r20;
        java.lang.IllegalStateException $r26, $r32, $r58;
        android.os.Bundle $r49, $r51, $r54, $r56;
        android.app.FragmentHostCallback $r50, $r78;
        android.content.Context $r52;
        java.lang.ClassLoader $r53;
        android.app.FragmentState $r61, r74, r76;
        java.lang.Throwable $r64;
        android.os.Parcelable r65;
        android.app.FragmentManagerNonConfig r66, r77;
        java.util.List r67, r68, r69, r83;
        android.app.FragmentContainer $r79;
        android.app.BackStackRecord r91;

        r0 := @this: android.app.FragmentManagerImpl;

        r65 := @parameter0: android.os.Parcelable;

        r66 := @parameter1: android.app.FragmentManagerNonConfig;

        if r65 != null goto label01;

        return;

     label01:
        r1 = (android.app.FragmentManagerState) r65;

        $r2 = r1.<android.app.FragmentManagerState: android.app.FragmentState[] mActive>;

        if $r2 != null goto label02;

        return;

     label02:
        r67 = null;

        if r66 == null goto label11;

        r68 = virtualinvoke r66.<android.app.FragmentManagerNonConfig: java.util.List getFragments()>();

        r69 = virtualinvoke r66.<android.app.FragmentManagerNonConfig: java.util.List getChildNonConfigs()>();

        if r68 == null goto label03;

        i21 = interfaceinvoke r68.<java.util.List: int size()>();

        goto label04;

     label03:
        i21 = 0;

     label04:
        i22 = 0;

     label05:
        r67 = r69;

        if i22 >= i21 goto label11;

        $r46 = interfaceinvoke r68.<java.util.List: java.lang.Object get(int)>(i22);

        r70 = (android.app.Fragment) $r46;

        $z3 = <android.app.FragmentManagerImpl: boolean DEBUG>;

        if $z3 == 0 goto label06;

        $r62 = new java.lang.StringBuilder;

        specialinvoke $r62.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("restoreAllState: re-attaching retained ");

        virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r70);

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r63);

     label06:
        i23 = 0;

     label07:
        $r72 = r1.<android.app.FragmentManagerState: android.app.FragmentState[] mActive>;

        $i24 = lengthof $r72;

        if i23 >= $i24 goto label08;

        $r60 = r1.<android.app.FragmentManagerState: android.app.FragmentState[] mActive>;

        $r61 = $r60[i23];

        $i20 = $r61.<android.app.FragmentState: int mIndex>;

        $i19 = r70.<android.app.Fragment: int mIndex>;

        if $i20 == $i19 goto label08;

        i23 = i23 + 1;

        goto label07;

     label08:
        $r47 = r1.<android.app.FragmentManagerState: android.app.FragmentState[] mActive>;

        $i17 = lengthof $r47;

        if i23 != $i17 goto label09;

        $r57 = new java.lang.StringBuilder;

        specialinvoke $r57.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not find active fragment with index ");

        $i18 = r70.<android.app.Fragment: int mIndex>;

        virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i18);

        $r58 = new java.lang.IllegalStateException;

        $r59 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r58.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r59);

        specialinvoke r0.<android.app.FragmentManagerImpl: void throwException(java.lang.RuntimeException)>($r58);

     label09:
        $r48 = r1.<android.app.FragmentManagerState: android.app.FragmentState[] mActive>;

        r74 = $r48[i23];

        r74.<android.app.FragmentState: android.app.Fragment mInstance> = r70;

        r70.<android.app.Fragment: android.util.SparseArray mSavedViewState> = null;

        r70.<android.app.Fragment: int mBackStackNesting> = 0;

        r70.<android.app.Fragment: boolean mInLayout> = 0;

        r70.<android.app.Fragment: boolean mAdded> = 0;

        r70.<android.app.Fragment: android.app.Fragment mTarget> = null;

        $r49 = r74.<android.app.FragmentState: android.os.Bundle mSavedFragmentState>;

        if $r49 == null goto label10;

        $r51 = r74.<android.app.FragmentState: android.os.Bundle mSavedFragmentState>;

        $r50 = r0.<android.app.FragmentManagerImpl: android.app.FragmentHostCallback mHost>;

        $r52 = virtualinvoke $r50.<android.app.FragmentHostCallback: android.content.Context getContext()>();

        $r53 = virtualinvoke $r52.<android.content.Context: java.lang.ClassLoader getClassLoader()>();

        virtualinvoke $r51.<android.os.Bundle: void setClassLoader(java.lang.ClassLoader)>($r53);

        $r54 = r74.<android.app.FragmentState: android.os.Bundle mSavedFragmentState>;

        $r55 = virtualinvoke $r54.<android.os.Bundle: android.util.SparseArray getSparseParcelableArray(java.lang.String)>("android:view_state");

        r70.<android.app.Fragment: android.util.SparseArray mSavedViewState> = $r55;

        $r56 = r74.<android.app.FragmentState: android.os.Bundle mSavedFragmentState>;

        r70.<android.app.Fragment: android.os.Bundle mSavedFragmentState> = $r56;

     label10:
        i22 = i22 + 1;

        goto label05;

     label11:
        $r3 = new android.util.SparseArray;

        $r4 = r1.<android.app.FragmentManagerState: android.app.FragmentState[] mActive>;

        $i0 = lengthof $r4;

        specialinvoke $r3.<android.util.SparseArray: void <init>(int)>($i0);

        r0.<android.app.FragmentManagerImpl: android.util.SparseArray mActive> = $r3;

        i25 = 0;

     label12:
        $r75 = r1.<android.app.FragmentManagerState: android.app.FragmentState[] mActive>;

        $i26 = lengthof $r75;

        if i25 >= $i26 goto label16;

        $r41 = r1.<android.app.FragmentManagerState: android.app.FragmentState[] mActive>;

        r76 = $r41[i25];

        if r76 == null goto label15;

        r77 = null;

        if r67 == null goto label13;

        r77 = null;

        $i16 = interfaceinvoke r67.<java.util.List: int size()>();

        if i25 >= $i16 goto label13;

        $r45 = interfaceinvoke r67.<java.util.List: java.lang.Object get(int)>(i25);

        r77 = (android.app.FragmentManagerNonConfig) $r45;

     label13:
        $r78 = r0.<android.app.FragmentManagerImpl: android.app.FragmentHostCallback mHost>;

        $r79 = r0.<android.app.FragmentManagerImpl: android.app.FragmentContainer mContainer>;

        $r80 = r0.<android.app.FragmentManagerImpl: android.app.Fragment mParent>;

        r81 = virtualinvoke r76.<android.app.FragmentState: android.app.Fragment instantiate(android.app.FragmentHostCallback,android.app.FragmentContainer,android.app.Fragment,android.app.FragmentManagerNonConfig)>($r78, $r79, $r80, r77);

        $z4 = <android.app.FragmentManagerImpl: boolean DEBUG>;

        if $z4 == 0 goto label14;

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("restoreAllState: active #");

        virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i25);

        virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r81);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r44);

     label14:
        $r42 = r0.<android.app.FragmentManagerImpl: android.util.SparseArray mActive>;

        $i15 = r81.<android.app.Fragment: int mIndex>;

        virtualinvoke $r42.<android.util.SparseArray: void put(int,java.lang.Object)>($i15, r81);

        r76.<android.app.FragmentState: android.app.Fragment mInstance> = null;

     label15:
        i25 = i25 + 1;

        goto label12;

     label16:
        if r66 == null goto label21;

        r83 = virtualinvoke r66.<android.app.FragmentManagerNonConfig: java.util.List getFragments()>();

        if r83 == null goto label17;

        i27 = interfaceinvoke r83.<java.util.List: int size()>();

        goto label18;

     label17:
        i27 = 0;

     label18:
        i28 = 0;

     label19:
        if i28 >= i27 goto label21;

        $r34 = interfaceinvoke r83.<java.util.List: java.lang.Object get(int)>(i28);

        r84 = (android.app.Fragment) $r34;

        $i12 = r84.<android.app.Fragment: int mTargetIndex>;

        if $i12 < 0 goto label20;

        $r35 = r0.<android.app.FragmentManagerImpl: android.util.SparseArray mActive>;

        $i13 = r84.<android.app.Fragment: int mTargetIndex>;

        $r36 = virtualinvoke $r35.<android.util.SparseArray: java.lang.Object get(int)>($i13);

        $r37 = (android.app.Fragment) $r36;

        r84.<android.app.Fragment: android.app.Fragment mTarget> = $r37;

        $r38 = r84.<android.app.Fragment: android.app.Fragment mTarget>;

        if $r38 != null goto label20;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Re-attaching retained fragment ");

        virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r84);

        virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" target no longer exists: ");

        $i14 = r84.<android.app.Fragment: int mTargetIndex>;

        virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i14);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("FragmentManager", $r40);

        r84.<android.app.Fragment: android.app.Fragment mTarget> = null;

     label20:
        i28 = i28 + 1;

        goto label19;

     label21:
        $r5 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        virtualinvoke $r5.<java.util.ArrayList: void clear()>();

        $r6 = r1.<android.app.FragmentManagerState: int[] mAdded>;

        if $r6 == null goto label31;

        i29 = 0;

     label22:
        $r21 = r1.<android.app.FragmentManagerState: int[] mAdded>;

        $i9 = lengthof $r21;

        if i29 >= $i9 goto label31;

        $r23 = r0.<android.app.FragmentManagerImpl: android.util.SparseArray mActive>;

        $r22 = r1.<android.app.FragmentManagerState: int[] mAdded>;

        $i10 = $r22[i29];

        $r24 = virtualinvoke $r23.<android.util.SparseArray: java.lang.Object get(int)>($i10);

        r86 = (android.app.Fragment) $r24;

        if r86 != null goto label23;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No instantiated fragment for index #");

        $r31 = r1.<android.app.FragmentManagerState: int[] mAdded>;

        $i11 = $r31[i29];

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        $r32 = new java.lang.IllegalStateException;

        $r33 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r32.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r33);

        specialinvoke r0.<android.app.FragmentManagerImpl: void throwException(java.lang.RuntimeException)>($r32);

     label23:
        r86.<android.app.Fragment: boolean mAdded> = 1;

        $z1 = <android.app.FragmentManagerImpl: boolean DEBUG>;

        if $z1 == 0 goto label24;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("restoreAllState: added #");

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i29);

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r86);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r29);

     label24:
        $r25 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $z2 = virtualinvoke $r25.<java.util.ArrayList: boolean contains(java.lang.Object)>(r86);

        if $z2 != 0 goto label30;

        r89 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        entermonitor r89;

     label25:
        $r27 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        virtualinvoke $r27.<java.util.ArrayList: boolean add(java.lang.Object)>(r86);

        exitmonitor r89;

     label26:
        i29 = i29 + 1;

        goto label22;

     label27:
        $r64 := @caughtexception;

     label28:
        exitmonitor r89;

     label29:
        throw $r64;

     label30:
        $r26 = new java.lang.IllegalStateException;

        specialinvoke $r26.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Already added!");

        throw $r26;

     label31:
        $r7 = r1.<android.app.FragmentManagerState: android.app.BackStackState[] mBackStack>;

        if $r7 == null goto label36;

        $r11 = new java.util.ArrayList;

        $r12 = r1.<android.app.FragmentManagerState: android.app.BackStackState[] mBackStack>;

        $i4 = lengthof $r12;

        specialinvoke $r11.<java.util.ArrayList: void <init>(int)>($i4);

        r0.<android.app.FragmentManagerImpl: java.util.ArrayList mBackStack> = $r11;

        i30 = 0;

     label32:
        $r13 = r1.<android.app.FragmentManagerState: android.app.BackStackState[] mBackStack>;

        $i5 = lengthof $r13;

        if i30 >= $i5 goto label35;

        $r14 = r1.<android.app.FragmentManagerState: android.app.BackStackState[] mBackStack>;

        $r15 = $r14[i30];

        r91 = virtualinvoke $r15.<android.app.BackStackState: android.app.BackStackRecord instantiate(android.app.FragmentManagerImpl)>(r0);

        $z0 = <android.app.FragmentManagerImpl: boolean DEBUG>;

        if $z0 == 0 goto label33;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("restoreAllState: back stack #");

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i30);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (index ");

        $i8 = r91.<android.app.BackStackRecord: int mIndex>;

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("): ");

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r91);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r18);

        $r19 = new com.android.internal.util.FastPrintWriter;

        $r20 = new android.util.LogWriter;

        specialinvoke $r20.<android.util.LogWriter: void <init>(int,java.lang.String)>(2, "FragmentManager");

        specialinvoke $r19.<com.android.internal.util.FastPrintWriter: void <init>(java.io.Writer,boolean,int)>($r20, 0, 1024);

        virtualinvoke r91.<android.app.BackStackRecord: void dump(java.lang.String,java.io.PrintWriter,boolean)>("  ", $r19, 0);

        virtualinvoke $r19.<java.io.PrintWriter: void flush()>();

     label33:
        $r16 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mBackStack>;

        virtualinvoke $r16.<java.util.ArrayList: boolean add(java.lang.Object)>(r91);

        $i6 = r91.<android.app.BackStackRecord: int mIndex>;

        if $i6 < 0 goto label34;

        $i7 = r91.<android.app.BackStackRecord: int mIndex>;

        virtualinvoke r0.<android.app.FragmentManagerImpl: void setBackStackIndex(int,android.app.BackStackRecord)>($i7, r91);

     label34:
        i30 = i30 + 1;

        goto label32;

     label35:
        goto label37;

     label36:
        r0.<android.app.FragmentManagerImpl: java.util.ArrayList mBackStack> = null;

     label37:
        $i1 = r1.<android.app.FragmentManagerState: int mPrimaryNavActiveIndex>;

        if $i1 < 0 goto label38;

        $r8 = r0.<android.app.FragmentManagerImpl: android.util.SparseArray mActive>;

        $i3 = r1.<android.app.FragmentManagerState: int mPrimaryNavActiveIndex>;

        $r9 = virtualinvoke $r8.<android.util.SparseArray: java.lang.Object get(int)>($i3);

        $r10 = (android.app.Fragment) $r9;

        r0.<android.app.FragmentManagerImpl: android.app.Fragment mPrimaryNav> = $r10;

     label38:
        $i2 = r1.<android.app.FragmentManagerState: int mNextFragmentIndex>;

        r0.<android.app.FragmentManagerImpl: int mNextFragmentIndex> = $i2;

        return;

        catch java.lang.Throwable from label25 to label26 with label27;
        catch java.lang.Throwable from label28 to label29 with label27;
    }

    android.app.FragmentManagerNonConfig retainNonConfig()
    {
        android.app.FragmentManagerImpl r0;
        android.app.FragmentManagerNonConfig $r1, $r2;

        r0 := @this: android.app.FragmentManagerImpl;

        $r1 = r0.<android.app.FragmentManagerImpl: android.app.FragmentManagerNonConfig mSavedNonConfig>;

        staticinvoke <android.app.FragmentManagerImpl: void setRetaining(android.app.FragmentManagerNonConfig)>($r1);

        $r2 = r0.<android.app.FragmentManagerImpl: android.app.FragmentManagerNonConfig mSavedNonConfig>;

        return $r2;
    }

    android.os.Parcelable saveAllState()
    {
        android.app.FragmentManagerImpl r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, i13, i14, i15, i16, $i17;
        android.app.FragmentState[] r1;
        java.util.ArrayList r2, $r4, $r6, $r10, $r13, $r17, $r21;
        android.util.SparseArray $r3, $r25, r48;
        android.app.BackStackState $r5;
        java.lang.Object $r7, $r11, $r14, $r18, $r22, $r26;
        android.app.BackStackRecord $r8;
        boolean $z0, $z1, $z2, z3, $z4;
        java.lang.StringBuilder $r9, $r16, $r20, $r29, $r41, $r45;
        java.lang.String $r12, $r19, $r24, $r31, $r44, $r47;
        android.app.Fragment $r15, $r34, $r35, $r37, $r42, r49, r63;
        java.lang.IllegalStateException $r23, $r43, $r46;
        android.app.FragmentState $r27;
        android.os.Bundle $r28, $r30, $r32, $r33, $r36, $r38, $r39, $r40;
        int[] r54, r55;
        android.app.BackStackState[] r58, r59;
        android.app.FragmentManagerState $r61;

        r0 := @this: android.app.FragmentManagerImpl;

        specialinvoke r0.<android.app.FragmentManagerImpl: void forcePostponedTransactions()>();

        specialinvoke r0.<android.app.FragmentManagerImpl: void endAnimatingAwayFragments()>();

        virtualinvoke r0.<android.app.FragmentManagerImpl: boolean execPendingActions()>();

        r0.<android.app.FragmentManagerImpl: boolean mStateSaved> = 1;

        r0.<android.app.FragmentManagerImpl: android.app.FragmentManagerNonConfig mSavedNonConfig> = null;

        r48 = r0.<android.app.FragmentManagerImpl: android.util.SparseArray mActive>;

        if r48 == null goto label20;

        $i1 = virtualinvoke r48.<android.util.SparseArray: int size()>();

        if $i1 > 0 goto label01;

        goto label20;

     label01:
        $r3 = r0.<android.app.FragmentManagerImpl: android.util.SparseArray mActive>;

        i0 = virtualinvoke $r3.<android.util.SparseArray: int size()>();

        r1 = newarray (android.app.FragmentState)[i0];

        z3 = 0;

        i12 = 0;

     label02:
        if i12 >= i0 goto label09;

        $r25 = r0.<android.app.FragmentManagerImpl: android.util.SparseArray mActive>;

        $r26 = virtualinvoke $r25.<android.util.SparseArray: java.lang.Object valueAt(int)>(i12);

        r49 = (android.app.Fragment) $r26;

        if r49 == null goto label08;

        $i6 = r49.<android.app.Fragment: int mIndex>;

        if $i6 >= 0 goto label03;

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure saving state: active ");

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r49);

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has cleared index: ");

        $i11 = r49.<android.app.Fragment: int mIndex>;

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        $r46 = new java.lang.IllegalStateException;

        $r47 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r46.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r47);

        specialinvoke r0.<android.app.FragmentManagerImpl: void throwException(java.lang.RuntimeException)>($r46);

     label03:
        $r27 = new android.app.FragmentState;

        specialinvoke $r27.<android.app.FragmentState: void <init>(android.app.Fragment)>(r49);

        r1[i12] = $r27;

        $i7 = r49.<android.app.Fragment: int mState>;

        if $i7 <= 0 goto label06;

        $r32 = $r27.<android.app.FragmentState: android.os.Bundle mSavedFragmentState>;

        if $r32 != null goto label06;

        $r33 = virtualinvoke r0.<android.app.FragmentManagerImpl: android.os.Bundle saveFragmentBasicState(android.app.Fragment)>(r49);

        $r27.<android.app.FragmentState: android.os.Bundle mSavedFragmentState> = $r33;

        $r34 = r49.<android.app.Fragment: android.app.Fragment mTarget>;

        if $r34 == null goto label07;

        $r35 = r49.<android.app.Fragment: android.app.Fragment mTarget>;

        $i8 = $r35.<android.app.Fragment: int mIndex>;

        if $i8 >= 0 goto label04;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure saving state: ");

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r49);

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has target not in fragment manager: ");

        $r42 = r49.<android.app.Fragment: android.app.Fragment mTarget>;

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r42);

        $r43 = new java.lang.IllegalStateException;

        $r44 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r43.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r44);

        specialinvoke r0.<android.app.FragmentManagerImpl: void throwException(java.lang.RuntimeException)>($r43);

     label04:
        $r36 = $r27.<android.app.FragmentState: android.os.Bundle mSavedFragmentState>;

        if $r36 != null goto label05;

        $r40 = new android.os.Bundle;

        specialinvoke $r40.<android.os.Bundle: void <init>()>();

        $r27.<android.app.FragmentState: android.os.Bundle mSavedFragmentState> = $r40;

     label05:
        $r38 = $r27.<android.app.FragmentState: android.os.Bundle mSavedFragmentState>;

        $r37 = r49.<android.app.Fragment: android.app.Fragment mTarget>;

        virtualinvoke r0.<android.app.FragmentManagerImpl: void putFragment(android.os.Bundle,java.lang.String,android.app.Fragment)>($r38, "android:target_state", $r37);

        $i9 = r49.<android.app.Fragment: int mTargetRequestCode>;

        if $i9 == 0 goto label07;

        $r39 = $r27.<android.app.FragmentState: android.os.Bundle mSavedFragmentState>;

        $i10 = r49.<android.app.Fragment: int mTargetRequestCode>;

        virtualinvoke $r39.<android.os.Bundle: void putInt(java.lang.String,int)>("android:target_req_state", $i10);

        goto label07;

     label06:
        $r28 = r49.<android.app.Fragment: android.os.Bundle mSavedFragmentState>;

        $r27.<android.app.FragmentState: android.os.Bundle mSavedFragmentState> = $r28;

     label07:
        z3 = 1;

        $z4 = <android.app.FragmentManagerImpl: boolean DEBUG>;

        if $z4 == 0 goto label08;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Saved state of ");

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r49);

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r30 = $r27.<android.app.FragmentState: android.os.Bundle mSavedFragmentState>;

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r30);

        $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r31);

        z3 = 1;

     label08:
        i12 = i12 + 1;

        goto label02;

     label09:
        if z3 != 0 goto label11;

        $z2 = <android.app.FragmentManagerImpl: boolean DEBUG>;

        if $z2 == 0 goto label10;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", "saveAllState: no fragments!");

     label10:
        return null;

     label11:
        r54 = null;

        $r4 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        i13 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        if i13 <= 0 goto label15;

        r55 = newarray (int)[i13];

        i14 = 0;

     label12:
        r54 = r55;

        if i14 >= i13 goto label15;

        $r13 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $r14 = virtualinvoke $r13.<java.util.ArrayList: java.lang.Object get(int)>(i14);

        $r15 = (android.app.Fragment) $r14;

        $i3 = $r15.<android.app.Fragment: int mIndex>;

        r55[i14] = $i3;

        $i4 = r55[i14];

        if $i4 >= 0 goto label13;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure saving state: active ");

        $r21 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $r22 = virtualinvoke $r21.<java.util.ArrayList: java.lang.Object get(int)>(i14);

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r22);

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has cleared index: ");

        $i5 = r55[i14];

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r23 = new java.lang.IllegalStateException;

        $r24 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r23.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r24);

        specialinvoke r0.<android.app.FragmentManagerImpl: void throwException(java.lang.RuntimeException)>($r23);

     label13:
        $z1 = <android.app.FragmentManagerImpl: boolean DEBUG>;

        if $z1 == 0 goto label14;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("saveAllState: adding fragment #");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i14);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r17 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $r18 = virtualinvoke $r17.<java.util.ArrayList: java.lang.Object get(int)>(i14);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r19);

     label14:
        i14 = i14 + 1;

        goto label12;

     label15:
        r2 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mBackStack>;

        r58 = null;

        if r2 == null goto label18;

        i15 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        r58 = null;

        if i15 <= 0 goto label18;

        r59 = newarray (android.app.BackStackState)[i15];

        i16 = 0;

     label16:
        r58 = r59;

        if i16 >= i15 goto label18;

        $r5 = new android.app.BackStackState;

        $r6 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mBackStack>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(i16);

        $r8 = (android.app.BackStackRecord) $r7;

        specialinvoke $r5.<android.app.BackStackState: void <init>(android.app.FragmentManagerImpl,android.app.BackStackRecord)>(r0, $r8);

        r59[i16] = $r5;

        $z0 = <android.app.FragmentManagerImpl: boolean DEBUG>;

        if $z0 == 0 goto label17;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("saveAllState: adding back stack #");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i16);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r10 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mBackStack>;

        $r11 = virtualinvoke $r10.<java.util.ArrayList: java.lang.Object get(int)>(i16);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r12);

     label17:
        i16 = i16 + 1;

        goto label16;

     label18:
        $r61 = new android.app.FragmentManagerState;

        specialinvoke $r61.<android.app.FragmentManagerState: void <init>()>();

        $r61.<android.app.FragmentManagerState: android.app.FragmentState[] mActive> = r1;

        $r61.<android.app.FragmentManagerState: int[] mAdded> = r54;

        $r61.<android.app.FragmentManagerState: android.app.BackStackState[] mBackStack> = r58;

        $i17 = r0.<android.app.FragmentManagerImpl: int mNextFragmentIndex>;

        $r61.<android.app.FragmentManagerState: int mNextFragmentIndex> = $i17;

        r63 = r0.<android.app.FragmentManagerImpl: android.app.Fragment mPrimaryNav>;

        if r63 == null goto label19;

        $i2 = r63.<android.app.Fragment: int mIndex>;

        $r61.<android.app.FragmentManagerState: int mPrimaryNavActiveIndex> = $i2;

     label19:
        virtualinvoke r0.<android.app.FragmentManagerImpl: void saveNonConfig()>();

        return $r61;

     label20:
        return null;
    }

    android.os.Bundle saveFragmentBasicState(android.app.Fragment)
    {
        android.app.FragmentManagerImpl r0;
        android.app.Fragment r1;
        android.os.Bundle $r2, $r3, $r4, $r5, $r8, $r10, $r11, r12, r13, r14;
        boolean $z0, $z1, $z2;
        android.view.View $r6;
        android.util.SparseArray $r7, $r9;

        r0 := @this: android.app.FragmentManagerImpl;

        r1 := @parameter0: android.app.Fragment;

        r12 = null;

        $r2 = r0.<android.app.FragmentManagerImpl: android.os.Bundle mStateBundle>;

        if $r2 != null goto label1;

        $r11 = new android.os.Bundle;

        specialinvoke $r11.<android.os.Bundle: void <init>()>();

        r0.<android.app.FragmentManagerImpl: android.os.Bundle mStateBundle> = $r11;

     label1:
        $r3 = r0.<android.app.FragmentManagerImpl: android.os.Bundle mStateBundle>;

        virtualinvoke r1.<android.app.Fragment: void performSaveInstanceState(android.os.Bundle)>($r3);

        $r4 = r0.<android.app.FragmentManagerImpl: android.os.Bundle mStateBundle>;

        virtualinvoke r0.<android.app.FragmentManagerImpl: void dispatchOnFragmentSaveInstanceState(android.app.Fragment,android.os.Bundle,boolean)>(r1, $r4, 0);

        $r5 = r0.<android.app.FragmentManagerImpl: android.os.Bundle mStateBundle>;

        $z0 = virtualinvoke $r5.<android.os.Bundle: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        r12 = r0.<android.app.FragmentManagerImpl: android.os.Bundle mStateBundle>;

        r0.<android.app.FragmentManagerImpl: android.os.Bundle mStateBundle> = null;

     label2:
        $r6 = r1.<android.app.Fragment: android.view.View mView>;

        if $r6 == null goto label3;

        virtualinvoke r0.<android.app.FragmentManagerImpl: void saveFragmentViewState(android.app.Fragment)>(r1);

     label3:
        r13 = r12;

        $r7 = r1.<android.app.Fragment: android.util.SparseArray mSavedViewState>;

        if $r7 == null goto label5;

        r13 = r12;

        if r12 != null goto label4;

        $r10 = new android.os.Bundle;

        specialinvoke $r10.<android.os.Bundle: void <init>()>();

        r13 = $r10;

     label4:
        $r9 = r1.<android.app.Fragment: android.util.SparseArray mSavedViewState>;

        virtualinvoke r13.<android.os.Bundle: void putSparseParcelableArray(java.lang.String,android.util.SparseArray)>("android:view_state", $r9);

     label5:
        r14 = r13;

        $z2 = r1.<android.app.Fragment: boolean mUserVisibleHint>;

        if $z2 != 0 goto label7;

        r14 = r13;

        if r13 != null goto label6;

        $r8 = new android.os.Bundle;

        specialinvoke $r8.<android.os.Bundle: void <init>()>();

        r14 = $r8;

     label6:
        $z1 = r1.<android.app.Fragment: boolean mUserVisibleHint>;

        virtualinvoke r14.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("android:user_visible_hint", $z1);

     label7:
        return r14;
    }

    public android.app.Fragment$SavedState saveFragmentInstanceState(android.app.Fragment)
    {
        android.app.FragmentManagerImpl r0;
        int i0, $i1;
        android.os.Bundle r1;
        android.app.Fragment$SavedState $r2, r8;
        java.lang.StringBuilder $r3;
        java.lang.IllegalStateException $r4;
        java.lang.String $r5;
        android.app.Fragment r6;

        r0 := @this: android.app.FragmentManagerImpl;

        r6 := @parameter0: android.app.Fragment;

        $i1 = r6.<android.app.Fragment: int mIndex>;

        if $i1 >= 0 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fragment ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not currently in the FragmentManager");

        $r4 = new java.lang.IllegalStateException;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r5);

        specialinvoke r0.<android.app.FragmentManagerImpl: void throwException(java.lang.RuntimeException)>($r4);

     label1:
        i0 = r6.<android.app.Fragment: int mState>;

        if i0 <= 0 goto label3;

        r1 = virtualinvoke r0.<android.app.FragmentManagerImpl: android.os.Bundle saveFragmentBasicState(android.app.Fragment)>(r6);

        r8 = null;

        if r1 == null goto label2;

        $r2 = new android.app.Fragment$SavedState;

        specialinvoke $r2.<android.app.Fragment$SavedState: void <init>(android.os.Bundle)>(r1);

        r8 = $r2;

     label2:
        return r8;

     label3:
        return null;
    }

    void saveFragmentViewState(android.app.Fragment)
    {
        android.app.FragmentManagerImpl r0;
        android.app.Fragment r1;
        android.util.SparseArray r2, $r4, $r6, $r7, $r8;
        android.view.View $r3, $r5;
        int $i0;

        r0 := @this: android.app.FragmentManagerImpl;

        r1 := @parameter0: android.app.Fragment;

        $r3 = r1.<android.app.Fragment: android.view.View mView>;

        if $r3 != null goto label1;

        return;

     label1:
        r2 = r0.<android.app.FragmentManagerImpl: android.util.SparseArray mStateArray>;

        if r2 != null goto label2;

        $r8 = new android.util.SparseArray;

        specialinvoke $r8.<android.util.SparseArray: void <init>()>();

        r0.<android.app.FragmentManagerImpl: android.util.SparseArray mStateArray> = $r8;

        goto label3;

     label2:
        virtualinvoke r2.<android.util.SparseArray: void clear()>();

     label3:
        $r5 = r1.<android.app.Fragment: android.view.View mView>;

        $r4 = r0.<android.app.FragmentManagerImpl: android.util.SparseArray mStateArray>;

        virtualinvoke $r5.<android.view.View: void saveHierarchyState(android.util.SparseArray)>($r4);

        $r6 = r0.<android.app.FragmentManagerImpl: android.util.SparseArray mStateArray>;

        $i0 = virtualinvoke $r6.<android.util.SparseArray: int size()>();

        if $i0 <= 0 goto label4;

        $r7 = r0.<android.app.FragmentManagerImpl: android.util.SparseArray mStateArray>;

        r1.<android.app.Fragment: android.util.SparseArray mSavedViewState> = $r7;

        r0.<android.app.FragmentManagerImpl: android.util.SparseArray mStateArray> = null;

     label4:
        return;
    }

    void saveNonConfig()
    {
        android.app.FragmentManagerImpl r0, $r8, $r9, $r27;
        android.util.SparseArray $r1, $r3, $r4, $r7;
        android.app.FragmentManagerNonConfig $r2, r28;
        int $i0, $i1, i3, i4, i5;
        java.lang.Object $r5;
        boolean $z0, $z4;
        java.util.ArrayList $r6, $r16, r17, r18, r19, r20, r22, r23, r24, r25, r29;
        android.app.Fragment $r10, $r15, r21;
        java.lang.StringBuilder $r11;
        java.lang.String $r14;

        r0 := @this: android.app.FragmentManagerImpl;

        r17 = null;

        r18 = null;

        r19 = null;

        r20 = null;

        $r1 = r0.<android.app.FragmentManagerImpl: android.util.SparseArray mActive>;

        if $r1 == null goto label11;

        i3 = 0;

     label01:
        r17 = r18;

        r19 = r20;

        $r3 = r0.<android.app.FragmentManagerImpl: android.util.SparseArray mActive>;

        $i0 = virtualinvoke $r3.<android.util.SparseArray: int size()>();

        if i3 >= $i0 goto label11;

        $r4 = r0.<android.app.FragmentManagerImpl: android.util.SparseArray mActive>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object valueAt(int)>(i3);

        r21 = (android.app.Fragment) $r5;

        r22 = r18;

        r23 = r20;

        if r21 == null goto label10;

        r24 = r18;

        $z0 = r21.<android.app.Fragment: boolean mRetainInstance>;

        if $z0 == 0 goto label05;

        r25 = r18;

        if r18 != null goto label02;

        $r16 = new java.util.ArrayList;

        specialinvoke $r16.<java.util.ArrayList: void <init>()>();

        r25 = $r16;

     label02:
        virtualinvoke r25.<java.util.ArrayList: boolean add(java.lang.Object)>(r21);

        $r10 = r21.<android.app.Fragment: android.app.Fragment mTarget>;

        if $r10 == null goto label03;

        $r15 = r21.<android.app.Fragment: android.app.Fragment mTarget>;

        i4 = $r15.<android.app.Fragment: int mIndex>;

        goto label04;

     label03:
        i4 = -1;

     label04:
        r21.<android.app.Fragment: int mTargetIndex> = i4;

        r24 = r25;

        $z4 = <android.app.FragmentManagerImpl: boolean DEBUG>;

        if $z4 == 0 goto label05;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("retainNonConfig: keeping retained ");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r21);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r14);

        r24 = r25;

     label05:
        $r27 = r21.<android.app.Fragment: android.app.FragmentManagerImpl mChildFragmentManager>;

        if $r27 == null goto label06;

        $r8 = r21.<android.app.Fragment: android.app.FragmentManagerImpl mChildFragmentManager>;

        virtualinvoke $r8.<android.app.FragmentManagerImpl: void saveNonConfig()>();

        $r9 = r21.<android.app.Fragment: android.app.FragmentManagerImpl mChildFragmentManager>;

        r28 = $r9.<android.app.FragmentManagerImpl: android.app.FragmentManagerNonConfig mSavedNonConfig>;

        goto label07;

     label06:
        r28 = r21.<android.app.Fragment: android.app.FragmentManagerNonConfig mChildNonConfig>;

     label07:
        r29 = r20;

        if r20 != null goto label09;

        r29 = r20;

        if r28 == null goto label09;

        $r6 = new java.util.ArrayList;

        $r7 = r0.<android.app.FragmentManagerImpl: android.util.SparseArray mActive>;

        $i1 = virtualinvoke $r7.<android.util.SparseArray: int size()>();

        specialinvoke $r6.<java.util.ArrayList: void <init>(int)>($i1);

        i5 = 0;

     label08:
        r29 = $r6;

        if i5 >= i3 goto label09;

        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>(null);

        i5 = i5 + 1;

        goto label08;

     label09:
        r22 = r24;

        r23 = r29;

        if r29 == null goto label10;

        virtualinvoke r29.<java.util.ArrayList: boolean add(java.lang.Object)>(r28);

        r23 = r29;

        r22 = r24;

     label10:
        i3 = i3 + 1;

        r18 = r22;

        r20 = r23;

        goto label01;

     label11:
        if r17 != null goto label12;

        if r19 != null goto label12;

        r0.<android.app.FragmentManagerImpl: android.app.FragmentManagerNonConfig mSavedNonConfig> = null;

        goto label13;

     label12:
        $r2 = new android.app.FragmentManagerNonConfig;

        specialinvoke $r2.<android.app.FragmentManagerNonConfig: void <init>(java.util.List,java.util.List)>(r17, r19);

        r0.<android.app.FragmentManagerImpl: android.app.FragmentManagerNonConfig mSavedNonConfig> = $r2;

     label13:
        return;
    }

    public void setBackStackIndex(int, android.app.BackStackRecord)
    {
        android.app.FragmentManagerImpl r0;
        int i0, i1, i5;
        java.util.ArrayList $r1, $r2, $r3, $r9, $r10, $r11, $r16, r25, r27;
        boolean $z0, $z3, $z5;
        java.lang.String $r8, $r15, $r22;
        java.lang.Integer $r12;
        java.lang.Throwable $r23;
        android.app.BackStackRecord r24;
        java.lang.StringBuilder r26, r28, r29;

        r0 := @this: android.app.FragmentManagerImpl;

        i0 := @parameter0: int;

        r24 := @parameter1: android.app.BackStackRecord;

        entermonitor r0;

     label01:
        $r1 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mBackStackIndices>;

        if $r1 != null goto label02;

        r25 = new java.util.ArrayList;

        specialinvoke r25.<java.util.ArrayList: void <init>()>();

        r0.<android.app.FragmentManagerImpl: java.util.ArrayList mBackStackIndices> = r25;

     label02:
        $r2 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mBackStackIndices>;

        i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

     label03:
        i5 = i1;

        if i0 >= i1 goto label07;

     label04:
        $z5 = <android.app.FragmentManagerImpl: boolean DEBUG>;

        if $z5 == 0 goto label05;

        r26 = new java.lang.StringBuilder;

        specialinvoke r26.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting back stack index ");

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r24);

        $r22 = virtualinvoke r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r22);

     label05:
        $r16 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mBackStackIndices>;

        virtualinvoke $r16.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>(i0, r24);

     label06:
        goto label14;

     label07:
        if i5 >= i0 goto label12;

     label08:
        $r9 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mBackStackIndices>;

        virtualinvoke $r9.<java.util.ArrayList: boolean add(java.lang.Object)>(null);

        $r10 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mAvailBackStackIndices>;

        if $r10 != null goto label09;

        r27 = new java.util.ArrayList;

        specialinvoke r27.<java.util.ArrayList: void <init>()>();

        r0.<android.app.FragmentManagerImpl: java.util.ArrayList mAvailBackStackIndices> = r27;

     label09:
        $z3 = <android.app.FragmentManagerImpl: boolean DEBUG>;

        if $z3 == 0 goto label10;

        r28 = new java.lang.StringBuilder;

        specialinvoke r28.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Adding available back stack index ");

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        $r15 = virtualinvoke r28.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r15);

     label10:
        $r11 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mAvailBackStackIndices>;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i5);

        virtualinvoke $r11.<java.util.ArrayList: boolean add(java.lang.Object)>($r12);

     label11:
        i5 = i5 + 1;

        goto label07;

     label12:
        $z0 = <android.app.FragmentManagerImpl: boolean DEBUG>;

        if $z0 == 0 goto label13;

        r29 = new java.lang.StringBuilder;

        specialinvoke r29.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Adding back stack index ");

        virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with ");

        virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r24);

        $r8 = virtualinvoke r29.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r8);

     label13:
        $r3 = r0.<android.app.FragmentManagerImpl: java.util.ArrayList mBackStackIndices>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r24);

     label14:
        exitmonitor r0;

     label15:
        return;

     label16:
        $r23 := @caughtexception;

     label17:
        exitmonitor r0;

     label18:
        throw $r23;

        catch java.lang.Throwable from label01 to label02 with label16;
        catch java.lang.Throwable from label02 to label03 with label16;
        catch java.lang.Throwable from label04 to label05 with label16;
        catch java.lang.Throwable from label05 to label06 with label16;
        catch java.lang.Throwable from label08 to label09 with label16;
        catch java.lang.Throwable from label09 to label10 with label16;
        catch java.lang.Throwable from label10 to label11 with label16;
        catch java.lang.Throwable from label12 to label13 with label16;
        catch java.lang.Throwable from label13 to label14 with label16;
        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Throwable from label17 to label18 with label16;
    }

    public void setPrimaryNavigationFragment(android.app.Fragment)
    {
        android.app.FragmentManagerImpl r0;
        android.app.Fragment r1;
        int $i0;
        android.util.SparseArray $r3;
        java.lang.Object $r4;
        java.lang.StringBuilder $r5;
        java.lang.IllegalArgumentException $r10;
        java.lang.String $r11;
        android.app.FragmentHostCallback $r12;
        android.app.FragmentManager $r13;

        r0 := @this: android.app.FragmentManagerImpl;

        r1 := @parameter0: android.app.Fragment;

        if r1 == null goto label2;

        $r3 = r0.<android.app.FragmentManagerImpl: android.util.SparseArray mActive>;

        $i0 = r1.<android.app.Fragment: int mIndex>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>($i0);

        if $r4 != r1 goto label1;

        $r12 = r1.<android.app.Fragment: android.app.FragmentHostCallback mHost>;

        if $r12 == null goto label2;

        $r13 = virtualinvoke r1.<android.app.Fragment: android.app.FragmentManager getFragmentManager()>();

        if $r13 != r0 goto label1;

        goto label2;

     label1:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fragment ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not an active fragment of FragmentManager ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r10 = new java.lang.IllegalArgumentException;

        $r11 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r10;

     label2:
        r0.<android.app.FragmentManagerImpl: android.app.Fragment mPrimaryNav> = r1;

        return;
    }

    public void showFragment(android.app.Fragment)
    {
        android.app.FragmentManagerImpl r0;
        android.app.Fragment r1;
        boolean $z0, $z1, $z2, $z3;
        java.lang.StringBuilder $r3;
        java.lang.String $r6;

        r0 := @this: android.app.FragmentManagerImpl;

        r1 := @parameter0: android.app.Fragment;

        $z0 = <android.app.FragmentManagerImpl: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("show: ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r6);

     label1:
        $z1 = r1.<android.app.Fragment: boolean mHidden>;

        if $z1 == 0 goto label2;

        r1.<android.app.Fragment: boolean mHidden> = 0;

        $z2 = r1.<android.app.Fragment: boolean mHiddenChanged>;

        $z3 = $z2 ^ 1;

        r1.<android.app.Fragment: boolean mHiddenChanged> = $z3;

     label2:
        return;
    }

    void startPendingDeferredFragments()
    {
        android.app.FragmentManagerImpl r0;
        android.app.Fragment r1;
        android.util.SparseArray $r2, $r3, $r4;
        int $i0, i1;
        java.lang.Object $r5;

        r0 := @this: android.app.FragmentManagerImpl;

        $r2 = r0.<android.app.FragmentManagerImpl: android.util.SparseArray mActive>;

        if $r2 != null goto label1;

        return;

     label1:
        i1 = 0;

     label2:
        $r3 = r0.<android.app.FragmentManagerImpl: android.util.SparseArray mActive>;

        $i0 = virtualinvoke $r3.<android.util.SparseArray: int size()>();

        if i1 >= $i0 goto label4;

        $r4 = r0.<android.app.FragmentManagerImpl: android.util.SparseArray mActive>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        r1 = (android.app.Fragment) $r5;

        if r1 == null goto label3;

        virtualinvoke r0.<android.app.FragmentManagerImpl: void performPendingDeferredStart(android.app.Fragment)>(r1);

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        return;
    }

    public java.lang.String toString()
    {
        android.app.FragmentManagerImpl r0;
        android.app.Fragment r2;
        java.lang.StringBuilder $r3;
        int $i0;
        java.lang.String $r5, $r10;
        android.app.FragmentHostCallback $r8;

        r0 := @this: android.app.FragmentManagerImpl;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(int)>(128);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FragmentManager{");

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        r2 = r0.<android.app.FragmentManagerImpl: android.app.Fragment mParent>;

        if r2 == null goto label1;

        staticinvoke <android.util.DebugUtils: void buildShortClassTag(java.lang.Object,java.lang.StringBuilder)>(r2, $r3);

        goto label2;

     label1:
        $r8 = r0.<android.app.FragmentManagerImpl: android.app.FragmentHostCallback mHost>;

        staticinvoke <android.util.DebugUtils: void buildShortClassTag(java.lang.Object,java.lang.StringBuilder)>($r8, $r3);

     label2:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}}");

        $r10 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    public void unregisterFragmentLifecycleCallbacks(android.app.FragmentManager$FragmentLifecycleCallbacks)
    {
        android.app.FragmentManagerImpl r0;
        java.util.concurrent.CopyOnWriteArrayList r1, $r2, $r3, $r7;
        int i0, i1;
        java.lang.Object $r4, $r6;
        android.util.Pair $r5;
        java.lang.Throwable $r9;
        android.app.FragmentManager$FragmentLifecycleCallbacks r10;

        r0 := @this: android.app.FragmentManagerImpl;

        r10 := @parameter0: android.app.FragmentManager$FragmentLifecycleCallbacks;

        r1 = r0.<android.app.FragmentManagerImpl: java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks>;

        entermonitor r1;

        i1 = 0;

     label01:
        $r2 = r0.<android.app.FragmentManagerImpl: java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks>;

        i0 = virtualinvoke $r2.<java.util.concurrent.CopyOnWriteArrayList: int size()>();

     label02:
        if i1 >= i0 goto label06;

     label03:
        $r3 = r0.<android.app.FragmentManagerImpl: java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks>;

        $r4 = virtualinvoke $r3.<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object get(int)>(i1);

        $r5 = (android.util.Pair) $r4;

        $r6 = $r5.<android.util.Pair: java.lang.Object first>;

        if $r6 != r10 goto label05;

        $r7 = r0.<android.app.FragmentManagerImpl: java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks>;

        virtualinvoke $r7.<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object remove(int)>(i1);

     label04:
        goto label06;

     label05:
        i1 = i1 + 1;

        goto label02;

     label06:
        exitmonitor r1;

     label07:
        return;

     label08:
        $r9 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }
}
