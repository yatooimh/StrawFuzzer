class android.app.IAlarmManager$Stub$Proxy extends java.lang.Object implements android.app.IAlarmManager
{
    public static android.app.IAlarmManager sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.app.IAlarmManager$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.app.IAlarmManager$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.app.IAlarmManager$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.app.IAlarmManager$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.app.IAlarmManager$Stub$Proxy;

        $r1 = r0.<android.app.IAlarmManager$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public long currentNetworkTimeMillis() throws android.os.RemoteException
    {
        android.app.IAlarmManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.app.IAlarmManager $r5, $r6;
        java.lang.Throwable $r7;
        long l0, l1;

        r0 := @this: android.app.IAlarmManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IAlarmManager");

        $r4 = r0.<android.app.IAlarmManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.app.IAlarmManager$Stub: android.app.IAlarmManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.app.IAlarmManager$Stub: android.app.IAlarmManager getDefaultImpl()>();

        l0 = interfaceinvoke $r6.<android.app.IAlarmManager: long currentNetworkTimeMillis()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return l0;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        l1 = virtualinvoke r2.<android.os.Parcel: long readLong()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return l1;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.app.IAlarmManager$Stub$Proxy r0;

        r0 := @this: android.app.IAlarmManager$Stub$Proxy;

        return "android.app.IAlarmManager";
    }

    public android.app.AlarmManager$AlarmClockInfo getNextAlarmClock(int) throws android.os.RemoteException
    {
        android.app.IAlarmManager$Stub$Proxy r0;
        int i0, $i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.app.IAlarmManager $r6, $r7;
        java.lang.Throwable $r8;
        android.app.AlarmManager$AlarmClockInfo r9, r10;

        r0 := @this: android.app.IAlarmManager$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IAlarmManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.app.IAlarmManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.app.IAlarmManager$Stub: android.app.IAlarmManager getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.app.IAlarmManager$Stub: android.app.IAlarmManager getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<android.app.IAlarmManager: android.app.AlarmManager$AlarmClockInfo getNextAlarmClock(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i1 == 0 goto label5;

        $r4 = <android.app.AlarmManager$AlarmClockInfo: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r10 = (android.app.AlarmManager$AlarmClockInfo) $r5;

     label4:
        goto label6;

     label5:
        r10 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public long getNextWakeFromIdleTime() throws android.os.RemoteException
    {
        android.app.IAlarmManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.app.IAlarmManager $r5, $r6;
        java.lang.Throwable $r7;
        long l0, l1;

        r0 := @this: android.app.IAlarmManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IAlarmManager");

        $r4 = r0.<android.app.IAlarmManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.app.IAlarmManager$Stub: android.app.IAlarmManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.app.IAlarmManager$Stub: android.app.IAlarmManager getDefaultImpl()>();

        l0 = interfaceinvoke $r6.<android.app.IAlarmManager: long getNextWakeFromIdleTime()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return l0;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        l1 = virtualinvoke r2.<android.os.Parcel: long readLong()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return l1;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void remove(android.app.PendingIntent, android.app.IAlarmListener) throws android.os.RemoteException
    {
        android.app.IAlarmManager$Stub$Proxy r0;
        android.app.IAlarmListener r1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4, r9;
        boolean $z0;
        android.app.IAlarmManager $r5, $r6;
        java.lang.Throwable $r7;
        android.app.PendingIntent r8;

        r0 := @this: android.app.IAlarmManager$Stub$Proxy;

        r8 := @parameter0: android.app.PendingIntent;

        r1 := @parameter1: android.app.IAlarmListener;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IAlarmManager");

     label02:
        if r8 == null goto label05;

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r8.<android.app.PendingIntent: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        if r1 == null goto label09;

     label07:
        r9 = interfaceinvoke r1.<android.app.IAlarmListener: android.os.IBinder asBinder()>();

     label08:
        goto label10;

     label09:
        r9 = null;

     label10:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r9);

        $r4 = r0.<android.app.IAlarmManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r2, r3, 0);

        if $z0 != 0 goto label12;

        $r5 = staticinvoke <android.app.IAlarmManager$Stub: android.app.IAlarmManager getDefaultImpl()>();

        if $r5 == null goto label12;

        $r6 = staticinvoke <android.app.IAlarmManager$Stub: android.app.IAlarmManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.app.IAlarmManager: void remove(android.app.PendingIntent,android.app.IAlarmListener)>(r8, r1);

     label11:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label12:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label13:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label14:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Throwable from label05 to label06 with label14;
        catch java.lang.Throwable from label07 to label08 with label14;
        catch java.lang.Throwable from label10 to label11 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
    }

    public void set(java.lang.String, int, long, long, long, int, android.app.PendingIntent, android.app.IAlarmListener, java.lang.String, android.os.WorkSource, android.app.AlarmManager$AlarmClockInfo) throws android.os.RemoteException
    {
        android.app.IAlarmManager$Stub$Proxy r0;
        int i0, i4;
        long l1, l2, l3;
        android.app.PendingIntent r1;
        android.app.IAlarmListener r2;
        java.lang.String r3, r13;
        android.os.WorkSource r4;
        android.app.AlarmManager$AlarmClockInfo r5;
        android.os.Parcel r6, r7;
        android.os.IBinder $r8, r15;
        boolean $z0;
        android.app.IAlarmManager $r9, r16;
        java.lang.Throwable $r10, $r11, $r12, r14;

        r0 := @this: android.app.IAlarmManager$Stub$Proxy;

        r13 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        l2 := @parameter3: long;

        l3 := @parameter4: long;

        i4 := @parameter5: int;

        r1 := @parameter6: android.app.PendingIntent;

        r2 := @parameter7: android.app.IAlarmListener;

        r3 := @parameter8: java.lang.String;

        r4 := @parameter9: android.os.WorkSource;

        r5 := @parameter10: android.app.AlarmManager$AlarmClockInfo;

        r6 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r7 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r6.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IAlarmManager");

        virtualinvoke r6.<android.os.Parcel: void writeString(java.lang.String)>(r13);

        virtualinvoke r6.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r6.<android.os.Parcel: void writeLong(long)>(l1);

        virtualinvoke r6.<android.os.Parcel: void writeLong(long)>(l2);

        virtualinvoke r6.<android.os.Parcel: void writeLong(long)>(l3);

        virtualinvoke r6.<android.os.Parcel: void writeInt(int)>(i4);

     label02:
        if r1 == null goto label06;

     label03:
        virtualinvoke r6.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.app.PendingIntent: void writeToParcel(android.os.Parcel,int)>(r6, 0);

     label04:
        goto label07;

     label05:
        $r11 := @caughtexception;

        r14 = $r11;

        goto label27;

     label06:
        virtualinvoke r6.<android.os.Parcel: void writeInt(int)>(0);

     label07:
        if r2 == null goto label10;

     label08:
        r15 = interfaceinvoke r2.<android.app.IAlarmListener: android.os.IBinder asBinder()>();

     label09:
        goto label11;

     label10:
        r15 = null;

     label11:
        virtualinvoke r6.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r15);

        virtualinvoke r6.<android.os.Parcel: void writeString(java.lang.String)>(r3);

     label12:
        if r4 == null goto label15;

     label13:
        virtualinvoke r6.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r4.<android.os.WorkSource: void writeToParcel(android.os.Parcel,int)>(r6, 0);

     label14:
        goto label16;

     label15:
        virtualinvoke r6.<android.os.Parcel: void writeInt(int)>(0);

     label16:
        if r5 == null goto label19;

     label17:
        virtualinvoke r6.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r5.<android.app.AlarmManager$AlarmClockInfo: void writeToParcel(android.os.Parcel,int)>(r6, 0);

     label18:
        goto label20;

     label19:
        virtualinvoke r6.<android.os.Parcel: void writeInt(int)>(0);

     label20:
        $r8 = r0.<android.app.IAlarmManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r8.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r6, r7, 0);

        if $z0 != 0 goto label23;

        $r9 = staticinvoke <android.app.IAlarmManager$Stub: android.app.IAlarmManager getDefaultImpl()>();

        if $r9 == null goto label23;

        r16 = staticinvoke <android.app.IAlarmManager$Stub: android.app.IAlarmManager getDefaultImpl()>();

     label21:
        interfaceinvoke r16.<android.app.IAlarmManager: void set(java.lang.String,int,long,long,long,int,android.app.PendingIntent,android.app.IAlarmListener,java.lang.String,android.os.WorkSource,android.app.AlarmManager$AlarmClockInfo)>(r13, i0, l1, l2, l3, i4, r1, r2, r3, r4, r5);

     label22:
        virtualinvoke r7.<android.os.Parcel: void recycle()>();

        virtualinvoke r6.<android.os.Parcel: void recycle()>();

        return;

     label23:
        virtualinvoke r7.<android.os.Parcel: void readException()>();

     label24:
        virtualinvoke r7.<android.os.Parcel: void recycle()>();

        virtualinvoke r6.<android.os.Parcel: void recycle()>();

        return;

     label25:
        $r10 := @caughtexception;

        r14 = $r10;

        goto label27;

     label26:
        $r12 := @caughtexception;

        r14 = $r12;

     label27:
        virtualinvoke r7.<android.os.Parcel: void recycle()>();

        virtualinvoke r6.<android.os.Parcel: void recycle()>();

        throw r14;

        catch java.lang.Throwable from label01 to label02 with label26;
        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label06 to label07 with label26;
        catch java.lang.Throwable from label08 to label09 with label05;
        catch java.lang.Throwable from label11 to label12 with label26;
        catch java.lang.Throwable from label13 to label14 with label05;
        catch java.lang.Throwable from label15 to label16 with label26;
        catch java.lang.Throwable from label17 to label18 with label05;
        catch java.lang.Throwable from label19 to label20 with label26;
        catch java.lang.Throwable from label20 to label21 with label26;
        catch java.lang.Throwable from label21 to label22 with label25;
        catch java.lang.Throwable from label23 to label24 with label25;
    }

    public boolean setTime(long) throws android.os.RemoteException
    {
        android.app.IAlarmManager$Stub$Proxy r0;
        long l0;
        android.os.Parcel r1, r2;
        int i1;
        boolean $z0, z1, z2;
        android.app.IAlarmManager $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: android.app.IAlarmManager$Stub$Proxy;

        l0 := @parameter0: long;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IAlarmManager");

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>(l0);

        r6 = r0.<android.app.IAlarmManager$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.app.IAlarmManager$Stub: android.app.IAlarmManager getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.app.IAlarmManager$Stub: android.app.IAlarmManager getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.app.IAlarmManager: boolean setTime(long)>(l0);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i1 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public void setTimeZone(java.lang.String) throws android.os.RemoteException
    {
        android.app.IAlarmManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.app.IAlarmManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: android.app.IAlarmManager$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IAlarmManager");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        $r3 = r0.<android.app.IAlarmManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.app.IAlarmManager$Stub: android.app.IAlarmManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.app.IAlarmManager$Stub: android.app.IAlarmManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.app.IAlarmManager: void setTimeZone(java.lang.String)>(r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }
}
