public class android.app.IApplicationThread$Default extends java.lang.Object implements android.app.IApplicationThread
{

    public void <init>()
    {
        android.app.IApplicationThread$Default r0;

        r0 := @this: android.app.IApplicationThread$Default;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.app.IApplicationThread$Default r0;

        r0 := @this: android.app.IApplicationThread$Default;

        return null;
    }

    public void attachAgent(java.lang.String) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Default r0;
        java.lang.String r1;

        r0 := @this: android.app.IApplicationThread$Default;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public void attachStartupAgents(java.lang.String) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Default r0;
        java.lang.String r1;

        r0 := @this: android.app.IApplicationThread$Default;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public void bindApplication(java.lang.String, android.content.pm.ApplicationInfo, android.content.pm.ProviderInfoList, android.content.ComponentName, android.app.ProfilerInfo, android.os.Bundle, android.app.IInstrumentationWatcher, android.app.IUiAutomationConnection, int, boolean, boolean, boolean, boolean, android.content.res.Configuration, android.content.res.CompatibilityInfo, java.util.Map, android.os.Bundle, java.lang.String, android.content.AutofillOptions, android.content.ContentCaptureOptions, long[]) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Default r0;
        java.lang.String r1, r13;
        android.content.pm.ApplicationInfo r2;
        android.content.pm.ProviderInfoList r3;
        android.content.ComponentName r4;
        android.app.ProfilerInfo r5;
        android.os.Bundle r6, r12;
        android.app.IInstrumentationWatcher r7;
        android.app.IUiAutomationConnection r8;
        int i0;
        boolean z0, z1, z2, z3;
        android.content.res.Configuration r9;
        android.content.res.CompatibilityInfo r10;
        java.util.Map r11;
        android.content.AutofillOptions r14;
        android.content.ContentCaptureOptions r15;
        long[] r16;

        r0 := @this: android.app.IApplicationThread$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.content.pm.ApplicationInfo;

        r3 := @parameter2: android.content.pm.ProviderInfoList;

        r4 := @parameter3: android.content.ComponentName;

        r5 := @parameter4: android.app.ProfilerInfo;

        r6 := @parameter5: android.os.Bundle;

        r7 := @parameter6: android.app.IInstrumentationWatcher;

        r8 := @parameter7: android.app.IUiAutomationConnection;

        i0 := @parameter8: int;

        z0 := @parameter9: boolean;

        z1 := @parameter10: boolean;

        z2 := @parameter11: boolean;

        z3 := @parameter12: boolean;

        r9 := @parameter13: android.content.res.Configuration;

        r10 := @parameter14: android.content.res.CompatibilityInfo;

        r11 := @parameter15: java.util.Map;

        r12 := @parameter16: android.os.Bundle;

        r13 := @parameter17: java.lang.String;

        r14 := @parameter18: android.content.AutofillOptions;

        r15 := @parameter19: android.content.ContentCaptureOptions;

        r16 := @parameter20: long[];

        return;
    }

    public void clearDnsCache() throws android.os.RemoteException
    {
        android.app.IApplicationThread$Default r0;

        r0 := @this: android.app.IApplicationThread$Default;

        return;
    }

    public void dispatchPackageBroadcast(int, java.lang.String[]) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Default r0;
        int i0;
        java.lang.String[] r1;

        r0 := @this: android.app.IApplicationThread$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String[];

        return;
    }

    public void dumpActivity(android.os.ParcelFileDescriptor, android.os.IBinder, java.lang.String, java.lang.String[]) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Default r0;
        android.os.ParcelFileDescriptor r1;
        android.os.IBinder r2;
        java.lang.String r3;
        java.lang.String[] r4;

        r0 := @this: android.app.IApplicationThread$Default;

        r1 := @parameter0: android.os.ParcelFileDescriptor;

        r2 := @parameter1: android.os.IBinder;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String[];

        return;
    }

    public void dumpCacheInfo(android.os.ParcelFileDescriptor, java.lang.String[]) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Default r0;
        android.os.ParcelFileDescriptor r1;
        java.lang.String[] r2;

        r0 := @this: android.app.IApplicationThread$Default;

        r1 := @parameter0: android.os.ParcelFileDescriptor;

        r2 := @parameter1: java.lang.String[];

        return;
    }

    public void dumpDbInfo(android.os.ParcelFileDescriptor, java.lang.String[]) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Default r0;
        android.os.ParcelFileDescriptor r1;
        java.lang.String[] r2;

        r0 := @this: android.app.IApplicationThread$Default;

        r1 := @parameter0: android.os.ParcelFileDescriptor;

        r2 := @parameter1: java.lang.String[];

        return;
    }

    public void dumpGfxInfo(android.os.ParcelFileDescriptor, java.lang.String[]) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Default r0;
        android.os.ParcelFileDescriptor r1;
        java.lang.String[] r2;

        r0 := @this: android.app.IApplicationThread$Default;

        r1 := @parameter0: android.os.ParcelFileDescriptor;

        r2 := @parameter1: java.lang.String[];

        return;
    }

    public void dumpHeap(boolean, boolean, boolean, java.lang.String, android.os.ParcelFileDescriptor, android.os.RemoteCallback) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Default r0;
        boolean z0, z1, z2;
        java.lang.String r1;
        android.os.ParcelFileDescriptor r2;
        android.os.RemoteCallback r3;

        r0 := @this: android.app.IApplicationThread$Default;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        z2 := @parameter2: boolean;

        r1 := @parameter3: java.lang.String;

        r2 := @parameter4: android.os.ParcelFileDescriptor;

        r3 := @parameter5: android.os.RemoteCallback;

        return;
    }

    public void dumpMemInfo(android.os.ParcelFileDescriptor, android.os.Debug$MemoryInfo, boolean, boolean, boolean, boolean, boolean, java.lang.String[]) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Default r0;
        android.os.ParcelFileDescriptor r1;
        android.os.Debug$MemoryInfo r2;
        boolean z0, z1, z2, z3, z4;
        java.lang.String[] r3;

        r0 := @this: android.app.IApplicationThread$Default;

        r1 := @parameter0: android.os.ParcelFileDescriptor;

        r2 := @parameter1: android.os.Debug$MemoryInfo;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        z2 := @parameter4: boolean;

        z3 := @parameter5: boolean;

        z4 := @parameter6: boolean;

        r3 := @parameter7: java.lang.String[];

        return;
    }

    public void dumpMemInfoProto(android.os.ParcelFileDescriptor, android.os.Debug$MemoryInfo, boolean, boolean, boolean, boolean, java.lang.String[]) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Default r0;
        android.os.ParcelFileDescriptor r1;
        android.os.Debug$MemoryInfo r2;
        boolean z0, z1, z2, z3;
        java.lang.String[] r3;

        r0 := @this: android.app.IApplicationThread$Default;

        r1 := @parameter0: android.os.ParcelFileDescriptor;

        r2 := @parameter1: android.os.Debug$MemoryInfo;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        z2 := @parameter4: boolean;

        z3 := @parameter5: boolean;

        r3 := @parameter6: java.lang.String[];

        return;
    }

    public void dumpProvider(android.os.ParcelFileDescriptor, android.os.IBinder, java.lang.String[]) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Default r0;
        android.os.ParcelFileDescriptor r1;
        android.os.IBinder r2;
        java.lang.String[] r3;

        r0 := @this: android.app.IApplicationThread$Default;

        r1 := @parameter0: android.os.ParcelFileDescriptor;

        r2 := @parameter1: android.os.IBinder;

        r3 := @parameter2: java.lang.String[];

        return;
    }

    public void dumpService(android.os.ParcelFileDescriptor, android.os.IBinder, java.lang.String[]) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Default r0;
        android.os.ParcelFileDescriptor r1;
        android.os.IBinder r2;
        java.lang.String[] r3;

        r0 := @this: android.app.IApplicationThread$Default;

        r1 := @parameter0: android.os.ParcelFileDescriptor;

        r2 := @parameter1: android.os.IBinder;

        r3 := @parameter2: java.lang.String[];

        return;
    }

    public void handleTrustStorageUpdate() throws android.os.RemoteException
    {
        android.app.IApplicationThread$Default r0;

        r0 := @this: android.app.IApplicationThread$Default;

        return;
    }

    public void notifyCleartextNetwork(byte[]) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Default r0;
        byte[] r1;

        r0 := @this: android.app.IApplicationThread$Default;

        r1 := @parameter0: byte[];

        return;
    }

    public void performDirectAction(android.os.IBinder, java.lang.String, android.os.Bundle, android.os.RemoteCallback, android.os.RemoteCallback) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Default r0;
        android.os.IBinder r1;
        java.lang.String r2;
        android.os.Bundle r3;
        android.os.RemoteCallback r4, r5;

        r0 := @this: android.app.IApplicationThread$Default;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.Bundle;

        r4 := @parameter3: android.os.RemoteCallback;

        r5 := @parameter4: android.os.RemoteCallback;

        return;
    }

    public void processInBackground() throws android.os.RemoteException
    {
        android.app.IApplicationThread$Default r0;

        r0 := @this: android.app.IApplicationThread$Default;

        return;
    }

    public void profilerControl(boolean, android.app.ProfilerInfo, int) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Default r0;
        boolean z0;
        android.app.ProfilerInfo r1;
        int i0;

        r0 := @this: android.app.IApplicationThread$Default;

        z0 := @parameter0: boolean;

        r1 := @parameter1: android.app.ProfilerInfo;

        i0 := @parameter2: int;

        return;
    }

    public void requestAssistContextExtras(android.os.IBinder, android.os.IBinder, int, int, int) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Default r0;
        android.os.IBinder r1, r2;
        int i0, i1, i2;

        r0 := @this: android.app.IApplicationThread$Default;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: android.os.IBinder;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        return;
    }

    public void requestDirectActions(android.os.IBinder, com.android.internal.app.IVoiceInteractor, android.os.RemoteCallback, android.os.RemoteCallback) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Default r0;
        android.os.IBinder r1;
        com.android.internal.app.IVoiceInteractor r2;
        android.os.RemoteCallback r3, r4;

        r0 := @this: android.app.IApplicationThread$Default;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: com.android.internal.app.IVoiceInteractor;

        r3 := @parameter2: android.os.RemoteCallback;

        r4 := @parameter3: android.os.RemoteCallback;

        return;
    }

    public void runIsolatedEntryPoint(java.lang.String, java.lang.String[]) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Default r0;
        java.lang.String r1;
        java.lang.String[] r2;

        r0 := @this: android.app.IApplicationThread$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String[];

        return;
    }

    public void scheduleApplicationInfoChanged(android.content.pm.ApplicationInfo) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Default r0;
        android.content.pm.ApplicationInfo r1;

        r0 := @this: android.app.IApplicationThread$Default;

        r1 := @parameter0: android.content.pm.ApplicationInfo;

        return;
    }

    public void scheduleBindService(android.os.IBinder, android.content.Intent, boolean, int) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Default r0;
        android.os.IBinder r1;
        android.content.Intent r2;
        boolean z0;
        int i0;

        r0 := @this: android.app.IApplicationThread$Default;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: android.content.Intent;

        z0 := @parameter2: boolean;

        i0 := @parameter3: int;

        return;
    }

    public void scheduleCrash(java.lang.String) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Default r0;
        java.lang.String r1;

        r0 := @this: android.app.IApplicationThread$Default;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public void scheduleCreateBackupAgent(android.content.pm.ApplicationInfo, android.content.res.CompatibilityInfo, int, int) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Default r0;
        android.content.pm.ApplicationInfo r1;
        android.content.res.CompatibilityInfo r2;
        int i0, i1;

        r0 := @this: android.app.IApplicationThread$Default;

        r1 := @parameter0: android.content.pm.ApplicationInfo;

        r2 := @parameter1: android.content.res.CompatibilityInfo;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        return;
    }

    public void scheduleCreateService(android.os.IBinder, android.content.pm.ServiceInfo, android.content.res.CompatibilityInfo, int) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Default r0;
        android.os.IBinder r1;
        android.content.pm.ServiceInfo r2;
        android.content.res.CompatibilityInfo r3;
        int i0;

        r0 := @this: android.app.IApplicationThread$Default;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: android.content.pm.ServiceInfo;

        r3 := @parameter2: android.content.res.CompatibilityInfo;

        i0 := @parameter3: int;

        return;
    }

    public void scheduleDestroyBackupAgent(android.content.pm.ApplicationInfo, android.content.res.CompatibilityInfo, int) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Default r0;
        android.content.pm.ApplicationInfo r1;
        android.content.res.CompatibilityInfo r2;
        int i0;

        r0 := @this: android.app.IApplicationThread$Default;

        r1 := @parameter0: android.content.pm.ApplicationInfo;

        r2 := @parameter1: android.content.res.CompatibilityInfo;

        i0 := @parameter2: int;

        return;
    }

    public void scheduleEnterAnimationComplete(android.os.IBinder) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Default r0;
        android.os.IBinder r1;

        r0 := @this: android.app.IApplicationThread$Default;

        r1 := @parameter0: android.os.IBinder;

        return;
    }

    public void scheduleExit() throws android.os.RemoteException
    {
        android.app.IApplicationThread$Default r0;

        r0 := @this: android.app.IApplicationThread$Default;

        return;
    }

    public void scheduleInstallProvider(android.content.pm.ProviderInfo) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Default r0;
        android.content.pm.ProviderInfo r1;

        r0 := @this: android.app.IApplicationThread$Default;

        r1 := @parameter0: android.content.pm.ProviderInfo;

        return;
    }

    public void scheduleLocalVoiceInteractionStarted(android.os.IBinder, com.android.internal.app.IVoiceInteractor) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Default r0;
        android.os.IBinder r1;
        com.android.internal.app.IVoiceInteractor r2;

        r0 := @this: android.app.IApplicationThread$Default;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: com.android.internal.app.IVoiceInteractor;

        return;
    }

    public void scheduleLowMemory() throws android.os.RemoteException
    {
        android.app.IApplicationThread$Default r0;

        r0 := @this: android.app.IApplicationThread$Default;

        return;
    }

    public void scheduleOnNewActivityOptions(android.os.IBinder, android.os.Bundle) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Default r0;
        android.os.IBinder r1;
        android.os.Bundle r2;

        r0 := @this: android.app.IApplicationThread$Default;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: android.os.Bundle;

        return;
    }

    public void scheduleReceiver(android.content.Intent, android.content.pm.ActivityInfo, android.content.res.CompatibilityInfo, int, java.lang.String, android.os.Bundle, boolean, int, int) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Default r0;
        android.content.Intent r1;
        android.content.pm.ActivityInfo r2;
        android.content.res.CompatibilityInfo r3;
        int i0, i1, i2;
        java.lang.String r4;
        android.os.Bundle r5;
        boolean z0;

        r0 := @this: android.app.IApplicationThread$Default;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: android.content.pm.ActivityInfo;

        r3 := @parameter2: android.content.res.CompatibilityInfo;

        i0 := @parameter3: int;

        r4 := @parameter4: java.lang.String;

        r5 := @parameter5: android.os.Bundle;

        z0 := @parameter6: boolean;

        i1 := @parameter7: int;

        i2 := @parameter8: int;

        return;
    }

    public void scheduleRegisteredReceiver(android.content.IIntentReceiver, android.content.Intent, int, java.lang.String, android.os.Bundle, boolean, boolean, int, int) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Default r0;
        android.content.IIntentReceiver r1;
        android.content.Intent r2;
        int i0, i1, i2;
        java.lang.String r3;
        android.os.Bundle r4;
        boolean z0, z1;

        r0 := @this: android.app.IApplicationThread$Default;

        r1 := @parameter0: android.content.IIntentReceiver;

        r2 := @parameter1: android.content.Intent;

        i0 := @parameter2: int;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: android.os.Bundle;

        z0 := @parameter5: boolean;

        z1 := @parameter6: boolean;

        i1 := @parameter7: int;

        i2 := @parameter8: int;

        return;
    }

    public void scheduleServiceArgs(android.os.IBinder, android.content.pm.ParceledListSlice) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Default r0;
        android.os.IBinder r1;
        android.content.pm.ParceledListSlice r2;

        r0 := @this: android.app.IApplicationThread$Default;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: android.content.pm.ParceledListSlice;

        return;
    }

    public void scheduleStopService(android.os.IBinder) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Default r0;
        android.os.IBinder r1;

        r0 := @this: android.app.IApplicationThread$Default;

        r1 := @parameter0: android.os.IBinder;

        return;
    }

    public void scheduleSuicide() throws android.os.RemoteException
    {
        android.app.IApplicationThread$Default r0;

        r0 := @this: android.app.IApplicationThread$Default;

        return;
    }

    public void scheduleTransaction(android.app.servertransaction.ClientTransaction) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Default r0;
        android.app.servertransaction.ClientTransaction r1;

        r0 := @this: android.app.IApplicationThread$Default;

        r1 := @parameter0: android.app.servertransaction.ClientTransaction;

        return;
    }

    public void scheduleTranslucentConversionComplete(android.os.IBinder, boolean) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Default r0;
        android.os.IBinder r1;
        boolean z0;

        r0 := @this: android.app.IApplicationThread$Default;

        r1 := @parameter0: android.os.IBinder;

        z0 := @parameter1: boolean;

        return;
    }

    public void scheduleTrimMemory(int) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Default r0;
        int i0;

        r0 := @this: android.app.IApplicationThread$Default;

        i0 := @parameter0: int;

        return;
    }

    public void scheduleUnbindService(android.os.IBinder, android.content.Intent) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Default r0;
        android.os.IBinder r1;
        android.content.Intent r2;

        r0 := @this: android.app.IApplicationThread$Default;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: android.content.Intent;

        return;
    }

    public void setCoreSettings(android.os.Bundle) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Default r0;
        android.os.Bundle r1;

        r0 := @this: android.app.IApplicationThread$Default;

        r1 := @parameter0: android.os.Bundle;

        return;
    }

    public void setNetworkBlockSeq(long) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Default r0;
        long l0;

        r0 := @this: android.app.IApplicationThread$Default;

        l0 := @parameter0: long;

        return;
    }

    public void setProcessState(int) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Default r0;
        int i0;

        r0 := @this: android.app.IApplicationThread$Default;

        i0 := @parameter0: int;

        return;
    }

    public void setSchedulingGroup(int) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Default r0;
        int i0;

        r0 := @this: android.app.IApplicationThread$Default;

        i0 := @parameter0: int;

        return;
    }

    public void startBinderTracking() throws android.os.RemoteException
    {
        android.app.IApplicationThread$Default r0;

        r0 := @this: android.app.IApplicationThread$Default;

        return;
    }

    public void stopBinderTrackingAndDump(android.os.ParcelFileDescriptor) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Default r0;
        android.os.ParcelFileDescriptor r1;

        r0 := @this: android.app.IApplicationThread$Default;

        r1 := @parameter0: android.os.ParcelFileDescriptor;

        return;
    }

    public void unstableProviderDied(android.os.IBinder) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Default r0;
        android.os.IBinder r1;

        r0 := @this: android.app.IApplicationThread$Default;

        r1 := @parameter0: android.os.IBinder;

        return;
    }

    public void updateHttpProxy() throws android.os.RemoteException
    {
        android.app.IApplicationThread$Default r0;

        r0 := @this: android.app.IApplicationThread$Default;

        return;
    }

    public void updatePackageCompatibilityInfo(java.lang.String, android.content.res.CompatibilityInfo) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Default r0;
        java.lang.String r1;
        android.content.res.CompatibilityInfo r2;

        r0 := @this: android.app.IApplicationThread$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.content.res.CompatibilityInfo;

        return;
    }

    public void updateTimePrefs(int) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Default r0;
        int i0;

        r0 := @this: android.app.IApplicationThread$Default;

        i0 := @parameter0: int;

        return;
    }

    public void updateTimeZone() throws android.os.RemoteException
    {
        android.app.IApplicationThread$Default r0;

        r0 := @this: android.app.IApplicationThread$Default;

        return;
    }
}
