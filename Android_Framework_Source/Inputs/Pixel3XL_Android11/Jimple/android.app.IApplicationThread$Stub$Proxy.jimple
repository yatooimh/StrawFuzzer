class android.app.IApplicationThread$Stub$Proxy extends java.lang.Object implements android.app.IApplicationThread
{
    public static android.app.IApplicationThread sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.app.IApplicationThread$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.app.IApplicationThread$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.app.IApplicationThread$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.app.IApplicationThread$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.app.IApplicationThread$Stub$Proxy;

        $r1 = r0.<android.app.IApplicationThread$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public void attachAgent(java.lang.String) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r2;
        boolean $z0;
        android.app.IApplicationThread $r3, $r4;
        java.lang.Throwable $r5;
        java.lang.String r6;

        r0 := @this: android.app.IApplicationThread$Stub$Proxy;

        r6 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IApplicationThread");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r6);

        $r2 = r0.<android.app.IApplicationThread$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(48, r1, null, 1);

        if $z0 != 0 goto label3;

        $r3 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        if $r3 == null goto label3;

        $r4 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        interfaceinvoke $r4.<android.app.IApplicationThread: void attachAgent(java.lang.String)>(r6);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void attachStartupAgents(java.lang.String) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r2;
        boolean $z0;
        android.app.IApplicationThread $r3, $r4;
        java.lang.Throwable $r5;
        java.lang.String r6;

        r0 := @this: android.app.IApplicationThread$Stub$Proxy;

        r6 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IApplicationThread");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r6);

        $r2 = r0.<android.app.IApplicationThread$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(49, r1, null, 1);

        if $z0 != 0 goto label3;

        $r3 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        if $r3 == null goto label3;

        $r4 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        interfaceinvoke $r4.<android.app.IApplicationThread: void attachStartupAgents(java.lang.String)>(r6);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void bindApplication(java.lang.String, android.content.pm.ApplicationInfo, android.content.pm.ProviderInfoList, android.content.ComponentName, android.app.ProfilerInfo, android.os.Bundle, android.app.IInstrumentationWatcher, android.app.IUiAutomationConnection, int, boolean, boolean, boolean, boolean, android.content.res.Configuration, android.content.res.CompatibilityInfo, java.util.Map, android.os.Bundle, java.lang.String, android.content.AutofillOptions, android.content.ContentCaptureOptions, long[]) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Stub$Proxy r0;
        android.content.pm.ApplicationInfo r1;
        android.content.pm.ProviderInfoList r2;
        android.content.ComponentName r3;
        android.app.ProfilerInfo r4;
        android.os.Bundle r5, r11;
        android.app.IInstrumentationWatcher r6;
        android.app.IUiAutomationConnection r7;
        int i0;
        boolean z0, z1, z2, z3, $z4;
        android.content.res.Configuration r8;
        android.content.res.CompatibilityInfo r9;
        java.util.Map r10;
        java.lang.String r12, r22;
        android.content.AutofillOptions r13;
        android.content.ContentCaptureOptions r14;
        long[] r15;
        android.os.Parcel r16;
        android.os.IBinder $r17, r24, r25;
        android.app.IApplicationThread $r18, r26;
        java.lang.Throwable $r19, $r20, $r21, r23;
        byte b1, b2, b3, b4;

        r0 := @this: android.app.IApplicationThread$Stub$Proxy;

        r22 := @parameter0: java.lang.String;

        r1 := @parameter1: android.content.pm.ApplicationInfo;

        r2 := @parameter2: android.content.pm.ProviderInfoList;

        r3 := @parameter3: android.content.ComponentName;

        r4 := @parameter4: android.app.ProfilerInfo;

        r5 := @parameter5: android.os.Bundle;

        r6 := @parameter6: android.app.IInstrumentationWatcher;

        r7 := @parameter7: android.app.IUiAutomationConnection;

        i0 := @parameter8: int;

        z0 := @parameter9: boolean;

        z1 := @parameter10: boolean;

        z2 := @parameter11: boolean;

        z3 := @parameter12: boolean;

        r8 := @parameter13: android.content.res.Configuration;

        r9 := @parameter14: android.content.res.CompatibilityInfo;

        r10 := @parameter15: java.util.Map;

        r11 := @parameter16: android.os.Bundle;

        r12 := @parameter17: java.lang.String;

        r13 := @parameter18: android.content.AutofillOptions;

        r14 := @parameter19: android.content.ContentCaptureOptions;

        r15 := @parameter20: long[];

        r16 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r16.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IApplicationThread");

        virtualinvoke r16.<android.os.Parcel: void writeString(java.lang.String)>(r22);

     label02:
        if r1 == null goto label06;

     label03:
        virtualinvoke r16.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.content.pm.ApplicationInfo: void writeToParcel(android.os.Parcel,int)>(r16, 0);

     label04:
        goto label07;

     label05:
        $r21 := @caughtexception;

        r23 = $r21;

        goto label73;

     label06:
        virtualinvoke r16.<android.os.Parcel: void writeInt(int)>(0);

     label07:
        if r2 == null goto label10;

     label08:
        virtualinvoke r16.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r2.<android.content.pm.ProviderInfoList: void writeToParcel(android.os.Parcel,int)>(r16, 0);

     label09:
        goto label11;

     label10:
        virtualinvoke r16.<android.os.Parcel: void writeInt(int)>(0);

     label11:
        if r3 == null goto label14;

     label12:
        virtualinvoke r16.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r3.<android.content.ComponentName: void writeToParcel(android.os.Parcel,int)>(r16, 0);

     label13:
        goto label15;

     label14:
        virtualinvoke r16.<android.os.Parcel: void writeInt(int)>(0);

     label15:
        if r4 == null goto label18;

     label16:
        virtualinvoke r16.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r4.<android.app.ProfilerInfo: void writeToParcel(android.os.Parcel,int)>(r16, 0);

     label17:
        goto label19;

     label18:
        virtualinvoke r16.<android.os.Parcel: void writeInt(int)>(0);

     label19:
        if r5 == null goto label22;

     label20:
        virtualinvoke r16.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r5.<android.os.Bundle: void writeToParcel(android.os.Parcel,int)>(r16, 0);

     label21:
        goto label23;

     label22:
        virtualinvoke r16.<android.os.Parcel: void writeInt(int)>(0);

     label23:
        if r6 == null goto label26;

     label24:
        r24 = interfaceinvoke r6.<android.app.IInstrumentationWatcher: android.os.IBinder asBinder()>();

     label25:
        goto label27;

     label26:
        r24 = null;

     label27:
        virtualinvoke r16.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r24);

     label28:
        if r7 == null goto label31;

     label29:
        r25 = interfaceinvoke r7.<android.app.IUiAutomationConnection: android.os.IBinder asBinder()>();

     label30:
        goto label32;

     label31:
        r25 = null;

     label32:
        virtualinvoke r16.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r25);

        virtualinvoke r16.<android.os.Parcel: void writeInt(int)>(i0);

     label33:
        if z0 == 0 goto label34;

        b1 = 1;

        goto label35;

     label34:
        b1 = 0;

     label35:
        virtualinvoke r16.<android.os.Parcel: void writeInt(int)>(b1);

     label36:
        if z1 == 0 goto label37;

        b2 = 1;

        goto label38;

     label37:
        b2 = 0;

     label38:
        virtualinvoke r16.<android.os.Parcel: void writeInt(int)>(b2);

     label39:
        if z2 == 0 goto label40;

        b3 = 1;

        goto label41;

     label40:
        b3 = 0;

     label41:
        virtualinvoke r16.<android.os.Parcel: void writeInt(int)>(b3);

     label42:
        if z3 == 0 goto label43;

        b4 = 1;

        goto label44;

     label43:
        b4 = 0;

     label44:
        virtualinvoke r16.<android.os.Parcel: void writeInt(int)>(b4);

     label45:
        if r8 == null goto label48;

     label46:
        virtualinvoke r16.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r8.<android.content.res.Configuration: void writeToParcel(android.os.Parcel,int)>(r16, 0);

     label47:
        goto label49;

     label48:
        virtualinvoke r16.<android.os.Parcel: void writeInt(int)>(0);

     label49:
        if r9 == null goto label52;

     label50:
        virtualinvoke r16.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r9.<android.content.res.CompatibilityInfo: void writeToParcel(android.os.Parcel,int)>(r16, 0);

     label51:
        goto label53;

     label52:
        virtualinvoke r16.<android.os.Parcel: void writeInt(int)>(0);

     label53:
        virtualinvoke r16.<android.os.Parcel: void writeMap(java.util.Map)>(r10);

     label54:
        if r11 == null goto label57;

     label55:
        virtualinvoke r16.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r11.<android.os.Bundle: void writeToParcel(android.os.Parcel,int)>(r16, 0);

     label56:
        goto label58;

     label57:
        virtualinvoke r16.<android.os.Parcel: void writeInt(int)>(0);

     label58:
        virtualinvoke r16.<android.os.Parcel: void writeString(java.lang.String)>(r12);

     label59:
        if r13 == null goto label62;

     label60:
        virtualinvoke r16.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r13.<android.content.AutofillOptions: void writeToParcel(android.os.Parcel,int)>(r16, 0);

     label61:
        goto label63;

     label62:
        virtualinvoke r16.<android.os.Parcel: void writeInt(int)>(0);

     label63:
        if r14 == null goto label66;

     label64:
        virtualinvoke r16.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r14.<android.content.ContentCaptureOptions: void writeToParcel(android.os.Parcel,int)>(r16, 0);

     label65:
        goto label67;

     label66:
        virtualinvoke r16.<android.os.Parcel: void writeInt(int)>(0);

     label67:
        virtualinvoke r16.<android.os.Parcel: void writeLongArray(long[])>(r15);

        $r17 = r0.<android.app.IApplicationThread$Stub$Proxy: android.os.IBinder mRemote>;

        $z4 = interfaceinvoke $r17.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r16, null, 1);

        if $z4 != 0 goto label71;

        $r18 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        if $r18 == null goto label71;

        r26 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

     label68:
        interfaceinvoke r26.<android.app.IApplicationThread: void bindApplication(java.lang.String,android.content.pm.ApplicationInfo,android.content.pm.ProviderInfoList,android.content.ComponentName,android.app.ProfilerInfo,android.os.Bundle,android.app.IInstrumentationWatcher,android.app.IUiAutomationConnection,int,boolean,boolean,boolean,boolean,android.content.res.Configuration,android.content.res.CompatibilityInfo,java.util.Map,android.os.Bundle,java.lang.String,android.content.AutofillOptions,android.content.ContentCaptureOptions,long[])>(r22, r1, r2, r3, r4, r5, r6, r7, i0, z0, z1, z2, z3, r8, r9, r10, r11, r12, r13, r14, r15);

     label69:
        virtualinvoke r16.<android.os.Parcel: void recycle()>();

        return;

     label70:
        $r20 := @caughtexception;

        r23 = $r20;

        goto label73;

     label71:
        virtualinvoke r16.<android.os.Parcel: void recycle()>();

        return;

     label72:
        $r19 := @caughtexception;

        r23 = $r19;

     label73:
        virtualinvoke r16.<android.os.Parcel: void recycle()>();

        throw r23;

        catch java.lang.Throwable from label01 to label02 with label72;
        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label06 to label07 with label72;
        catch java.lang.Throwable from label08 to label09 with label05;
        catch java.lang.Throwable from label10 to label11 with label72;
        catch java.lang.Throwable from label12 to label13 with label05;
        catch java.lang.Throwable from label14 to label15 with label72;
        catch java.lang.Throwable from label16 to label17 with label05;
        catch java.lang.Throwable from label18 to label19 with label72;
        catch java.lang.Throwable from label20 to label21 with label05;
        catch java.lang.Throwable from label22 to label23 with label72;
        catch java.lang.Throwable from label24 to label25 with label05;
        catch java.lang.Throwable from label27 to label28 with label72;
        catch java.lang.Throwable from label29 to label30 with label05;
        catch java.lang.Throwable from label32 to label33 with label72;
        catch java.lang.Throwable from label35 to label36 with label72;
        catch java.lang.Throwable from label38 to label39 with label72;
        catch java.lang.Throwable from label41 to label42 with label72;
        catch java.lang.Throwable from label44 to label45 with label72;
        catch java.lang.Throwable from label46 to label47 with label05;
        catch java.lang.Throwable from label48 to label49 with label72;
        catch java.lang.Throwable from label50 to label51 with label05;
        catch java.lang.Throwable from label52 to label53 with label72;
        catch java.lang.Throwable from label53 to label54 with label72;
        catch java.lang.Throwable from label55 to label56 with label05;
        catch java.lang.Throwable from label57 to label58 with label72;
        catch java.lang.Throwable from label58 to label59 with label72;
        catch java.lang.Throwable from label60 to label61 with label05;
        catch java.lang.Throwable from label62 to label63 with label72;
        catch java.lang.Throwable from label64 to label65 with label05;
        catch java.lang.Throwable from label66 to label67 with label72;
        catch java.lang.Throwable from label67 to label68 with label72;
        catch java.lang.Throwable from label68 to label69 with label70;
    }

    public void clearDnsCache() throws android.os.RemoteException
    {
        android.app.IApplicationThread$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        boolean $z0;
        android.app.IApplicationThread $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.app.IApplicationThread$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IApplicationThread");

        $r3 = r0.<android.app.IApplicationThread$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(25, r1, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        interfaceinvoke $r5.<android.app.IApplicationThread: void clearDnsCache()>();

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void dispatchPackageBroadcast(int, java.lang.String[]) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1;
        android.os.IBinder $r2;
        boolean $z0;
        android.app.IApplicationThread $r3, $r4;
        java.lang.Throwable $r5;
        java.lang.String[] r6;

        r0 := @this: android.app.IApplicationThread$Stub$Proxy;

        i0 := @parameter0: int;

        r6 := @parameter1: java.lang.String[];

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IApplicationThread");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeStringArray(java.lang.String[])>(r6);

        $r2 = r0.<android.app.IApplicationThread$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(21, r1, null, 1);

        if $z0 != 0 goto label3;

        $r3 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        if $r3 == null goto label3;

        $r4 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        interfaceinvoke $r4.<android.app.IApplicationThread: void dispatchPackageBroadcast(int,java.lang.String[])>(i0, r6);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void dumpActivity(android.os.ParcelFileDescriptor, android.os.IBinder, java.lang.String, java.lang.String[]) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Stub$Proxy r0;
        android.os.IBinder r1, $r5;
        java.lang.String r2;
        java.lang.String[] r3;
        android.os.Parcel r4;
        boolean $z0;
        android.app.IApplicationThread $r6, $r7;
        java.lang.Throwable $r8;
        android.os.ParcelFileDescriptor r9;

        r0 := @this: android.app.IApplicationThread$Stub$Proxy;

        r9 := @parameter0: android.os.ParcelFileDescriptor;

        r1 := @parameter1: android.os.IBinder;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String[];

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r4.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IApplicationThread");

     label2:
        if r9 == null goto label5;

     label3:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r9.<android.os.ParcelFileDescriptor: void writeToParcel(android.os.Parcel,int)>(r4, 0);

     label4:
        goto label6;

     label5:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(0);

     label6:
        virtualinvoke r4.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r1);

        virtualinvoke r4.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        virtualinvoke r4.<android.os.Parcel: void writeStringArray(java.lang.String[])>(r3);

        $r5 = r0.<android.app.IApplicationThread$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(24, r4, null, 1);

        if $z0 != 0 goto label8;

        $r6 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        if $r6 == null goto label8;

        $r7 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        interfaceinvoke $r7.<android.app.IApplicationThread: void dumpActivity(android.os.ParcelFileDescriptor,android.os.IBinder,java.lang.String,java.lang.String[])>(r9, r1, r2, r3);

     label7:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r8 := @caughtexception;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void dumpCacheInfo(android.os.ParcelFileDescriptor, java.lang.String[]) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Stub$Proxy r0;
        java.lang.String[] r1;
        android.os.Parcel r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.app.IApplicationThread $r4, $r5;
        java.lang.Throwable $r6;
        android.os.ParcelFileDescriptor r7;

        r0 := @this: android.app.IApplicationThread$Stub$Proxy;

        r7 := @parameter0: android.os.ParcelFileDescriptor;

        r1 := @parameter1: java.lang.String[];

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IApplicationThread");

     label2:
        if r7 == null goto label5;

     label3:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.os.ParcelFileDescriptor: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label4:
        goto label6;

     label5:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label6:
        virtualinvoke r2.<android.os.Parcel: void writeStringArray(java.lang.String[])>(r1);

        $r3 = r0.<android.app.IApplicationThread$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(33, r2, null, 1);

        if $z0 != 0 goto label8;

        $r4 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        if $r4 == null goto label8;

        $r5 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        interfaceinvoke $r5.<android.app.IApplicationThread: void dumpCacheInfo(android.os.ParcelFileDescriptor,java.lang.String[])>(r7, r1);

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void dumpDbInfo(android.os.ParcelFileDescriptor, java.lang.String[]) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Stub$Proxy r0;
        java.lang.String[] r1;
        android.os.Parcel r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.app.IApplicationThread $r4, $r5;
        java.lang.Throwable $r6;
        android.os.ParcelFileDescriptor r7;

        r0 := @this: android.app.IApplicationThread$Stub$Proxy;

        r7 := @parameter0: android.os.ParcelFileDescriptor;

        r1 := @parameter1: java.lang.String[];

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IApplicationThread");

     label2:
        if r7 == null goto label5;

     label3:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.os.ParcelFileDescriptor: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label4:
        goto label6;

     label5:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label6:
        virtualinvoke r2.<android.os.Parcel: void writeStringArray(java.lang.String[])>(r1);

        $r3 = r0.<android.app.IApplicationThread$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(35, r2, null, 1);

        if $z0 != 0 goto label8;

        $r4 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        if $r4 == null goto label8;

        $r5 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        interfaceinvoke $r5.<android.app.IApplicationThread: void dumpDbInfo(android.os.ParcelFileDescriptor,java.lang.String[])>(r7, r1);

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void dumpGfxInfo(android.os.ParcelFileDescriptor, java.lang.String[]) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Stub$Proxy r0;
        java.lang.String[] r1;
        android.os.Parcel r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.app.IApplicationThread $r4, $r5;
        java.lang.Throwable $r6;
        android.os.ParcelFileDescriptor r7;

        r0 := @this: android.app.IApplicationThread$Stub$Proxy;

        r7 := @parameter0: android.os.ParcelFileDescriptor;

        r1 := @parameter1: java.lang.String[];

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IApplicationThread");

     label2:
        if r7 == null goto label5;

     label3:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.os.ParcelFileDescriptor: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label4:
        goto label6;

     label5:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label6:
        virtualinvoke r2.<android.os.Parcel: void writeStringArray(java.lang.String[])>(r1);

        $r3 = r0.<android.app.IApplicationThread$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(32, r2, null, 1);

        if $z0 != 0 goto label8;

        $r4 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        if $r4 == null goto label8;

        $r5 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        interfaceinvoke $r5.<android.app.IApplicationThread: void dumpGfxInfo(android.os.ParcelFileDescriptor,java.lang.String[])>(r7, r1);

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void dumpHeap(boolean, boolean, boolean, java.lang.String, android.os.ParcelFileDescriptor, android.os.RemoteCallback) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Stub$Proxy r0;
        boolean z0, z1, z2, $z3;
        android.os.ParcelFileDescriptor r1;
        android.os.RemoteCallback r2;
        android.os.Parcel r3;
        android.os.IBinder $r4;
        android.app.IApplicationThread $r5, $r6;
        java.lang.Throwable $r7, $r8, $r9, r11;
        java.lang.String r10;
        byte b0, b1, b2;

        r0 := @this: android.app.IApplicationThread$Stub$Proxy;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        z2 := @parameter2: boolean;

        r10 := @parameter3: java.lang.String;

        r1 := @parameter4: android.os.ParcelFileDescriptor;

        r2 := @parameter5: android.os.RemoteCallback;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IApplicationThread");

     label02:
        if z0 == 0 goto label03;

        b0 = 1;

        goto label04;

     label03:
        b0 = 0;

     label04:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(b0);

     label05:
        if z1 == 0 goto label06;

        b1 = 1;

        goto label07;

     label06:
        b1 = 0;

     label07:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(b1);

     label08:
        if z2 == 0 goto label09;

        b2 = 1;

        goto label10;

     label09:
        b2 = 0;

     label10:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(b2);

     label11:
        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r10);

     label12:
        if r1 == null goto label15;

     label13:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.os.ParcelFileDescriptor: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label14:
        goto label16;

     label15:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label16:
        if r2 == null goto label19;

     label17:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r2.<android.os.RemoteCallback: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label18:
        goto label20;

     label19:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label20:
        $r4 = r0.<android.app.IApplicationThread$Stub$Proxy: android.os.IBinder mRemote>;

        $z3 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(23, r3, null, 1);

        if $z3 != 0 goto label22;

        $r5 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        if $r5 == null goto label22;

        $r6 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        interfaceinvoke $r6.<android.app.IApplicationThread: void dumpHeap(boolean,boolean,boolean,java.lang.String,android.os.ParcelFileDescriptor,android.os.RemoteCallback)>(z0, z1, z2, r10, r1, r2);

     label21:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label22:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label23:
        $r9 := @caughtexception;

        r11 = $r9;

        goto label26;

     label24:
        $r7 := @caughtexception;

        r11 = $r7;

        goto label26;

     label25:
        $r8 := @caughtexception;

        r11 = $r8;

     label26:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r11;

        catch java.lang.Throwable from label01 to label02 with label25;
        catch java.lang.Throwable from label04 to label05 with label25;
        catch java.lang.Throwable from label07 to label08 with label25;
        catch java.lang.Throwable from label10 to label11 with label25;
        catch java.lang.Throwable from label11 to label12 with label24;
        catch java.lang.Throwable from label13 to label14 with label24;
        catch java.lang.Throwable from label15 to label16 with label24;
        catch java.lang.Throwable from label17 to label18 with label24;
        catch java.lang.Throwable from label19 to label20 with label24;
        catch java.lang.Throwable from label20 to label21 with label23;
    }

    public void dumpMemInfo(android.os.ParcelFileDescriptor, android.os.Debug$MemoryInfo, boolean, boolean, boolean, boolean, boolean, java.lang.String[]) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Stub$Proxy r0;
        android.os.Debug$MemoryInfo r1;
        boolean z0, z1, z2, z3, z4, $z5;
        java.lang.String[] r2;
        android.os.Parcel r3;
        android.os.IBinder $r4;
        android.app.IApplicationThread $r5, $r6;
        java.lang.Throwable $r7, $r8, $r9, r11;
        android.os.ParcelFileDescriptor r10;
        byte b1, b2, b3, b4, b5;

        r0 := @this: android.app.IApplicationThread$Stub$Proxy;

        r10 := @parameter0: android.os.ParcelFileDescriptor;

        r1 := @parameter1: android.os.Debug$MemoryInfo;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        z2 := @parameter4: boolean;

        z3 := @parameter5: boolean;

        z4 := @parameter6: boolean;

        r2 := @parameter7: java.lang.String[];

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IApplicationThread");

     label02:
        if r10 == null goto label05;

     label03:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r10.<android.os.ParcelFileDescriptor: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        if r1 == null goto label09;

     label07:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.os.Debug$MemoryInfo: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label08:
        goto label10;

     label09:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label10:
        if z0 == 0 goto label11;

        b1 = 1;

        goto label12;

     label11:
        b1 = 0;

     label12:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(b1);

     label13:
        if z1 == 0 goto label14;

        b2 = 1;

        goto label15;

     label14:
        b2 = 0;

     label15:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(b2);

     label16:
        if z2 == 0 goto label17;

        b3 = 1;

        goto label18;

     label17:
        b3 = 0;

     label18:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(b3);

     label19:
        if z3 == 0 goto label20;

        b4 = 1;

        goto label21;

     label20:
        b4 = 0;

     label21:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(b4);

     label22:
        b5 = 0;

        if z4 == 0 goto label23;

        b5 = 1;

     label23:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(b5);

     label24:
        virtualinvoke r3.<android.os.Parcel: void writeStringArray(java.lang.String[])>(r2);

     label25:
        $r4 = r0.<android.app.IApplicationThread$Stub$Proxy: android.os.IBinder mRemote>;

        $z5 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(30, r3, null, 1);

        if $z5 != 0 goto label27;

        $r5 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        if $r5 == null goto label27;

        $r6 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        interfaceinvoke $r6.<android.app.IApplicationThread: void dumpMemInfo(android.os.ParcelFileDescriptor,android.os.Debug$MemoryInfo,boolean,boolean,boolean,boolean,boolean,java.lang.String[])>(r10, r1, z0, z1, z2, z3, z4, r2);

     label26:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label27:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label28:
        $r7 := @caughtexception;

        r11 = $r7;

        goto label31;

     label29:
        $r8 := @caughtexception;

        r11 = $r8;

        goto label31;

     label30:
        $r9 := @caughtexception;

        r11 = $r9;

     label31:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r11;

        catch java.lang.Throwable from label01 to label02 with label30;
        catch java.lang.Throwable from label03 to label04 with label30;
        catch java.lang.Throwable from label05 to label06 with label30;
        catch java.lang.Throwable from label07 to label08 with label30;
        catch java.lang.Throwable from label09 to label10 with label30;
        catch java.lang.Throwable from label12 to label13 with label30;
        catch java.lang.Throwable from label15 to label16 with label30;
        catch java.lang.Throwable from label18 to label19 with label30;
        catch java.lang.Throwable from label21 to label22 with label30;
        catch java.lang.Throwable from label23 to label24 with label30;
        catch java.lang.Throwable from label24 to label25 with label29;
        catch java.lang.Throwable from label25 to label26 with label28;
    }

    public void dumpMemInfoProto(android.os.ParcelFileDescriptor, android.os.Debug$MemoryInfo, boolean, boolean, boolean, boolean, java.lang.String[]) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Stub$Proxy r0;
        android.os.Debug$MemoryInfo r1;
        boolean z0, z1, z2, z3, $z4;
        java.lang.String[] r2;
        android.os.Parcel r3;
        android.os.IBinder $r4;
        android.app.IApplicationThread $r5, $r6;
        java.lang.Throwable $r7, $r8, $r9, r11;
        android.os.ParcelFileDescriptor r10;
        byte b1, b2, b3, b4;

        r0 := @this: android.app.IApplicationThread$Stub$Proxy;

        r10 := @parameter0: android.os.ParcelFileDescriptor;

        r1 := @parameter1: android.os.Debug$MemoryInfo;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        z2 := @parameter4: boolean;

        z3 := @parameter5: boolean;

        r2 := @parameter6: java.lang.String[];

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IApplicationThread");

     label02:
        if r10 == null goto label05;

     label03:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r10.<android.os.ParcelFileDescriptor: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        if r1 == null goto label09;

     label07:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.os.Debug$MemoryInfo: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label08:
        goto label10;

     label09:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label10:
        if z0 == 0 goto label11;

        b1 = 1;

        goto label12;

     label11:
        b1 = 0;

     label12:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(b1);

     label13:
        if z1 == 0 goto label14;

        b2 = 1;

        goto label15;

     label14:
        b2 = 0;

     label15:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(b2);

     label16:
        if z2 == 0 goto label17;

        b3 = 1;

        goto label18;

     label17:
        b3 = 0;

     label18:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(b3);

     label19:
        b4 = 0;

        if z3 == 0 goto label20;

        b4 = 1;

     label20:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(b4);

     label21:
        virtualinvoke r3.<android.os.Parcel: void writeStringArray(java.lang.String[])>(r2);

     label22:
        $r4 = r0.<android.app.IApplicationThread$Stub$Proxy: android.os.IBinder mRemote>;

        $z4 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(31, r3, null, 1);

        if $z4 != 0 goto label24;

        $r5 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        if $r5 == null goto label24;

        $r6 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        interfaceinvoke $r6.<android.app.IApplicationThread: void dumpMemInfoProto(android.os.ParcelFileDescriptor,android.os.Debug$MemoryInfo,boolean,boolean,boolean,boolean,java.lang.String[])>(r10, r1, z0, z1, z2, z3, r2);

     label23:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label24:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label25:
        $r8 := @caughtexception;

        r11 = $r8;

        goto label28;

     label26:
        $r7 := @caughtexception;

        r11 = $r7;

        goto label28;

     label27:
        $r9 := @caughtexception;

        r11 = $r9;

     label28:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r11;

        catch java.lang.Throwable from label01 to label02 with label27;
        catch java.lang.Throwable from label03 to label04 with label27;
        catch java.lang.Throwable from label05 to label06 with label27;
        catch java.lang.Throwable from label07 to label08 with label27;
        catch java.lang.Throwable from label09 to label10 with label27;
        catch java.lang.Throwable from label12 to label13 with label27;
        catch java.lang.Throwable from label15 to label16 with label27;
        catch java.lang.Throwable from label18 to label19 with label27;
        catch java.lang.Throwable from label20 to label21 with label27;
        catch java.lang.Throwable from label21 to label22 with label26;
        catch java.lang.Throwable from label22 to label23 with label25;
    }

    public void dumpProvider(android.os.ParcelFileDescriptor, android.os.IBinder, java.lang.String[]) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Stub$Proxy r0;
        android.os.IBinder r1, $r4;
        java.lang.String[] r2;
        android.os.Parcel r3;
        boolean $z0;
        android.app.IApplicationThread $r5, $r6;
        java.lang.Throwable $r7;
        android.os.ParcelFileDescriptor r8;

        r0 := @this: android.app.IApplicationThread$Stub$Proxy;

        r8 := @parameter0: android.os.ParcelFileDescriptor;

        r1 := @parameter1: android.os.IBinder;

        r2 := @parameter2: java.lang.String[];

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IApplicationThread");

     label2:
        if r8 == null goto label5;

     label3:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r8.<android.os.ParcelFileDescriptor: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label4:
        goto label6;

     label5:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label6:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r1);

        virtualinvoke r3.<android.os.Parcel: void writeStringArray(java.lang.String[])>(r2);

        $r4 = r0.<android.app.IApplicationThread$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(34, r3, null, 1);

        if $z0 != 0 goto label8;

        $r5 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        if $r5 == null goto label8;

        $r6 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        interfaceinvoke $r6.<android.app.IApplicationThread: void dumpProvider(android.os.ParcelFileDescriptor,android.os.IBinder,java.lang.String[])>(r8, r1, r2);

     label7:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void dumpService(android.os.ParcelFileDescriptor, android.os.IBinder, java.lang.String[]) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Stub$Proxy r0;
        android.os.IBinder r1, $r4;
        java.lang.String[] r2;
        android.os.Parcel r3;
        boolean $z0;
        android.app.IApplicationThread $r5, $r6;
        java.lang.Throwable $r7;
        android.os.ParcelFileDescriptor r8;

        r0 := @this: android.app.IApplicationThread$Stub$Proxy;

        r8 := @parameter0: android.os.ParcelFileDescriptor;

        r1 := @parameter1: android.os.IBinder;

        r2 := @parameter2: java.lang.String[];

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IApplicationThread");

     label2:
        if r8 == null goto label5;

     label3:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r8.<android.os.ParcelFileDescriptor: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label4:
        goto label6;

     label5:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label6:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r1);

        virtualinvoke r3.<android.os.Parcel: void writeStringArray(java.lang.String[])>(r2);

        $r4 = r0.<android.app.IApplicationThread$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(12, r3, null, 1);

        if $z0 != 0 goto label8;

        $r5 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        if $r5 == null goto label8;

        $r6 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        interfaceinvoke $r6.<android.app.IApplicationThread: void dumpService(android.os.ParcelFileDescriptor,android.os.IBinder,java.lang.String[])>(r8, r1, r2);

     label7:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.app.IApplicationThread$Stub$Proxy r0;

        r0 := @this: android.app.IApplicationThread$Stub$Proxy;

        return "android.app.IApplicationThread";
    }

    public void handleTrustStorageUpdate() throws android.os.RemoteException
    {
        android.app.IApplicationThread$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        boolean $z0;
        android.app.IApplicationThread $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.app.IApplicationThread$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IApplicationThread");

        $r3 = r0.<android.app.IApplicationThread$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(47, r1, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        interfaceinvoke $r5.<android.app.IApplicationThread: void handleTrustStorageUpdate()>();

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void notifyCleartextNetwork(byte[]) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r2;
        boolean $z0;
        android.app.IApplicationThread $r3, $r4;
        java.lang.Throwable $r5;
        byte[] r6;

        r0 := @this: android.app.IApplicationThread$Stub$Proxy;

        r6 := @parameter0: byte[];

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IApplicationThread");

        virtualinvoke r1.<android.os.Parcel: void writeByteArray(byte[])>(r6);

        $r2 = r0.<android.app.IApplicationThread$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(43, r1, null, 1);

        if $z0 != 0 goto label3;

        $r3 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        if $r3 == null goto label3;

        $r4 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        interfaceinvoke $r4.<android.app.IApplicationThread: void notifyCleartextNetwork(byte[])>(r6);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void performDirectAction(android.os.IBinder, java.lang.String, android.os.Bundle, android.os.RemoteCallback, android.os.RemoteCallback) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Stub$Proxy r0;
        java.lang.String r1;
        android.os.Bundle r2;
        android.os.RemoteCallback r3, r4;
        android.os.Parcel r5;
        android.os.IBinder $r6, r10;
        boolean $z0;
        android.app.IApplicationThread $r7, $r8;
        java.lang.Throwable $r9;

        r0 := @this: android.app.IApplicationThread$Stub$Proxy;

        r10 := @parameter0: android.os.IBinder;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.os.Bundle;

        r3 := @parameter3: android.os.RemoteCallback;

        r4 := @parameter4: android.os.RemoteCallback;

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r5.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IApplicationThread");

        virtualinvoke r5.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r10);

        virtualinvoke r5.<android.os.Parcel: void writeString(java.lang.String)>(r1);

     label02:
        if r2 == null goto label05;

     label03:
        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r2.<android.os.Bundle: void writeToParcel(android.os.Parcel,int)>(r5, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        if r3 == null goto label09;

     label07:
        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r3.<android.os.RemoteCallback: void writeToParcel(android.os.Parcel,int)>(r5, 0);

     label08:
        goto label10;

     label09:
        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(0);

     label10:
        if r4 == null goto label13;

     label11:
        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r4.<android.os.RemoteCallback: void writeToParcel(android.os.Parcel,int)>(r5, 0);

     label12:
        goto label14;

     label13:
        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(0);

     label14:
        $r6 = r0.<android.app.IApplicationThread$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(54, r5, null, 1);

        if $z0 != 0 goto label16;

        $r7 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        if $r7 == null goto label16;

        $r8 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        interfaceinvoke $r8.<android.app.IApplicationThread: void performDirectAction(android.os.IBinder,java.lang.String,android.os.Bundle,android.os.RemoteCallback,android.os.RemoteCallback)>(r10, r1, r2, r3, r4);

     label15:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        return;

     label16:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        return;

     label17:
        $r9 := @caughtexception;

        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label17;
        catch java.lang.Throwable from label03 to label04 with label17;
        catch java.lang.Throwable from label05 to label06 with label17;
        catch java.lang.Throwable from label07 to label08 with label17;
        catch java.lang.Throwable from label09 to label10 with label17;
        catch java.lang.Throwable from label11 to label12 with label17;
        catch java.lang.Throwable from label13 to label14 with label17;
        catch java.lang.Throwable from label14 to label15 with label17;
    }

    public void processInBackground() throws android.os.RemoteException
    {
        android.app.IApplicationThread$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        boolean $z0;
        android.app.IApplicationThread $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.app.IApplicationThread$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IApplicationThread");

        $r3 = r0.<android.app.IApplicationThread$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(9, r1, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        interfaceinvoke $r5.<android.app.IApplicationThread: void processInBackground()>();

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void profilerControl(boolean, android.app.ProfilerInfo, int) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Stub$Proxy r0;
        boolean z0, $z1;
        int i0;
        android.os.Parcel r1;
        android.os.IBinder $r2;
        android.app.IApplicationThread $r3, $r4;
        java.lang.Throwable $r5;
        android.app.ProfilerInfo r6;
        byte b1;

        r0 := @this: android.app.IApplicationThread$Stub$Proxy;

        z0 := @parameter0: boolean;

        r6 := @parameter1: android.app.ProfilerInfo;

        i0 := @parameter2: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IApplicationThread");

     label02:
        if z0 == 0 goto label03;

        b1 = 1;

        goto label04;

     label03:
        b1 = 0;

     label04:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b1);

     label05:
        if r6 == null goto label08;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r6.<android.app.ProfilerInfo: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label07:
        goto label09;

     label08:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label09:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r2 = r0.<android.app.IApplicationThread$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(15, r1, null, 1);

        if $z1 != 0 goto label11;

        $r3 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        if $r3 == null goto label11;

        $r4 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        interfaceinvoke $r4.<android.app.IApplicationThread: void profilerControl(boolean,android.app.ProfilerInfo,int)>(z0, r6, i0);

     label10:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label11:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label12:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label09 to label10 with label12;
    }

    public void requestAssistContextExtras(android.os.IBinder, android.os.IBinder, int, int, int) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Stub$Proxy r0;
        android.os.IBinder r1, $r3, r7;
        int i0, i1, i2;
        android.os.Parcel r2;
        boolean $z0;
        android.app.IApplicationThread $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.app.IApplicationThread$Stub$Proxy;

        r7 := @parameter0: android.os.IBinder;

        r1 := @parameter1: android.os.IBinder;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IApplicationThread");

        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r7);

        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r1);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i2);

        $r3 = r0.<android.app.IApplicationThread$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(37, r2, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        interfaceinvoke $r5.<android.app.IApplicationThread: void requestAssistContextExtras(android.os.IBinder,android.os.IBinder,int,int,int)>(r7, r1, i0, i1, i2);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void requestDirectActions(android.os.IBinder, com.android.internal.app.IVoiceInteractor, android.os.RemoteCallback, android.os.RemoteCallback) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Stub$Proxy r0;
        com.android.internal.app.IVoiceInteractor r1;
        android.os.RemoteCallback r2, r3;
        android.os.Parcel r4;
        android.os.IBinder $r5, r9, r10;
        boolean $z0;
        android.app.IApplicationThread $r6, $r7;
        java.lang.Throwable $r8;

        r0 := @this: android.app.IApplicationThread$Stub$Proxy;

        r9 := @parameter0: android.os.IBinder;

        r1 := @parameter1: com.android.internal.app.IVoiceInteractor;

        r2 := @parameter2: android.os.RemoteCallback;

        r3 := @parameter3: android.os.RemoteCallback;

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r4.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IApplicationThread");

        virtualinvoke r4.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r9);

     label02:
        if r1 == null goto label05;

     label03:
        r10 = interfaceinvoke r1.<com.android.internal.app.IVoiceInteractor: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r10 = null;

     label06:
        virtualinvoke r4.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r10);

     label07:
        if r2 == null goto label10;

     label08:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r2.<android.os.RemoteCallback: void writeToParcel(android.os.Parcel,int)>(r4, 0);

     label09:
        goto label11;

     label10:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(0);

     label11:
        if r3 == null goto label14;

     label12:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r3.<android.os.RemoteCallback: void writeToParcel(android.os.Parcel,int)>(r4, 0);

     label13:
        goto label15;

     label14:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(0);

     label15:
        $r5 = r0.<android.app.IApplicationThread$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(53, r4, null, 1);

        if $z0 != 0 goto label17;

        $r6 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        if $r6 == null goto label17;

        $r7 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        interfaceinvoke $r7.<android.app.IApplicationThread: void requestDirectActions(android.os.IBinder,com.android.internal.app.IVoiceInteractor,android.os.RemoteCallback,android.os.RemoteCallback)>(r9, r1, r2, r3);

     label16:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        return;

     label17:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        return;

     label18:
        $r8 := @caughtexception;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label18;
        catch java.lang.Throwable from label03 to label04 with label18;
        catch java.lang.Throwable from label06 to label07 with label18;
        catch java.lang.Throwable from label08 to label09 with label18;
        catch java.lang.Throwable from label10 to label11 with label18;
        catch java.lang.Throwable from label12 to label13 with label18;
        catch java.lang.Throwable from label14 to label15 with label18;
        catch java.lang.Throwable from label15 to label16 with label18;
    }

    public void runIsolatedEntryPoint(java.lang.String, java.lang.String[]) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Stub$Proxy r0;
        java.lang.String[] r1;
        android.os.Parcel r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.app.IApplicationThread $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: android.app.IApplicationThread$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String[];

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IApplicationThread");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        virtualinvoke r2.<android.os.Parcel: void writeStringArray(java.lang.String[])>(r1);

        $r3 = r0.<android.app.IApplicationThread$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r2, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        interfaceinvoke $r5.<android.app.IApplicationThread: void runIsolatedEntryPoint(java.lang.String,java.lang.String[])>(r7, r1);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void scheduleApplicationInfoChanged(android.content.pm.ApplicationInfo) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r2;
        boolean $z0;
        android.app.IApplicationThread $r3, $r4;
        java.lang.Throwable $r5;
        android.content.pm.ApplicationInfo r6;

        r0 := @this: android.app.IApplicationThread$Stub$Proxy;

        r6 := @parameter0: android.content.pm.ApplicationInfo;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IApplicationThread");

     label2:
        if r6 == null goto label5;

     label3:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r6.<android.content.pm.ApplicationInfo: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label4:
        goto label6;

     label5:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label6:
        $r2 = r0.<android.app.IApplicationThread$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(50, r1, null, 1);

        if $z0 != 0 goto label8;

        $r3 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        if $r3 == null goto label8;

        $r4 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        interfaceinvoke $r4.<android.app.IApplicationThread: void scheduleApplicationInfoChanged(android.content.pm.ApplicationInfo)>(r6);

     label7:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void scheduleBindService(android.os.IBinder, android.content.Intent, boolean, int) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Stub$Proxy r0;
        android.content.Intent r1;
        boolean z0, $z1;
        int i0;
        android.os.Parcel r2;
        android.os.IBinder $r3, r7;
        android.app.IApplicationThread $r4, $r5;
        java.lang.Throwable $r6;
        byte b1;

        r0 := @this: android.app.IApplicationThread$Stub$Proxy;

        r7 := @parameter0: android.os.IBinder;

        r1 := @parameter1: android.content.Intent;

        z0 := @parameter2: boolean;

        i0 := @parameter3: int;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IApplicationThread");

        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r7);

     label02:
        b1 = 0;

        if r1 == null goto label05;

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.content.Intent: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        if z0 == 0 goto label07;

        b1 = 1;

     label07:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(b1);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.app.IApplicationThread$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(10, r2, null, 1);

        if $z1 != 0 goto label09;

        $r4 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        if $r4 == null goto label09;

        $r5 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        interfaceinvoke $r5.<android.app.IApplicationThread: void scheduleBindService(android.os.IBinder,android.content.Intent,boolean,int)>(r7, r1, z0, i0);

     label08:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label07 to label08 with label10;
    }

    public void scheduleCrash(java.lang.String) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r2;
        boolean $z0;
        android.app.IApplicationThread $r3, $r4;
        java.lang.Throwable $r5;
        java.lang.String r6;

        r0 := @this: android.app.IApplicationThread$Stub$Proxy;

        r6 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IApplicationThread");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r6);

        $r2 = r0.<android.app.IApplicationThread$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(22, r1, null, 1);

        if $z0 != 0 goto label3;

        $r3 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        if $r3 == null goto label3;

        $r4 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        interfaceinvoke $r4.<android.app.IApplicationThread: void scheduleCrash(java.lang.String)>(r6);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void scheduleCreateBackupAgent(android.content.pm.ApplicationInfo, android.content.res.CompatibilityInfo, int, int) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Stub$Proxy r0;
        android.content.res.CompatibilityInfo r1;
        int i0, i1;
        android.os.Parcel r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.app.IApplicationThread $r4, $r5;
        java.lang.Throwable $r6;
        android.content.pm.ApplicationInfo r7;

        r0 := @this: android.app.IApplicationThread$Stub$Proxy;

        r7 := @parameter0: android.content.pm.ApplicationInfo;

        r1 := @parameter1: android.content.res.CompatibilityInfo;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IApplicationThread");

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.content.pm.ApplicationInfo: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        if r1 == null goto label09;

     label07:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.content.res.CompatibilityInfo: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label08:
        goto label10;

     label09:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label10:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i1);

        $r3 = r0.<android.app.IApplicationThread$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(17, r2, null, 1);

        if $z0 != 0 goto label12;

        $r4 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        if $r4 == null goto label12;

        $r5 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        interfaceinvoke $r5.<android.app.IApplicationThread: void scheduleCreateBackupAgent(android.content.pm.ApplicationInfo,android.content.res.CompatibilityInfo,int,int)>(r7, r1, i0, i1);

     label11:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label12:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label13:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label10 to label11 with label13;
    }

    public void scheduleCreateService(android.os.IBinder, android.content.pm.ServiceInfo, android.content.res.CompatibilityInfo, int) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Stub$Proxy r0;
        android.content.pm.ServiceInfo r1;
        android.content.res.CompatibilityInfo r2;
        int i0;
        android.os.Parcel r3;
        android.os.IBinder $r4, r8;
        boolean $z0;
        android.app.IApplicationThread $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.app.IApplicationThread$Stub$Proxy;

        r8 := @parameter0: android.os.IBinder;

        r1 := @parameter1: android.content.pm.ServiceInfo;

        r2 := @parameter2: android.content.res.CompatibilityInfo;

        i0 := @parameter3: int;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IApplicationThread");

        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

     label02:
        if r1 == null goto label05;

     label03:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.content.pm.ServiceInfo: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        if r2 == null goto label09;

     label07:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r2.<android.content.res.CompatibilityInfo: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label08:
        goto label10;

     label09:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label10:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.app.IApplicationThread$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r3, null, 1);

        if $z0 != 0 goto label12;

        $r5 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        if $r5 == null goto label12;

        $r6 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        interfaceinvoke $r6.<android.app.IApplicationThread: void scheduleCreateService(android.os.IBinder,android.content.pm.ServiceInfo,android.content.res.CompatibilityInfo,int)>(r8, r1, r2, i0);

     label11:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label12:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label13:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label10 to label11 with label13;
    }

    public void scheduleDestroyBackupAgent(android.content.pm.ApplicationInfo, android.content.res.CompatibilityInfo, int) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Stub$Proxy r0;
        android.content.res.CompatibilityInfo r1;
        int i0;
        android.os.Parcel r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.app.IApplicationThread $r4, $r5;
        java.lang.Throwable $r6;
        android.content.pm.ApplicationInfo r7;

        r0 := @this: android.app.IApplicationThread$Stub$Proxy;

        r7 := @parameter0: android.content.pm.ApplicationInfo;

        r1 := @parameter1: android.content.res.CompatibilityInfo;

        i0 := @parameter2: int;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IApplicationThread");

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.content.pm.ApplicationInfo: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        if r1 == null goto label09;

     label07:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.content.res.CompatibilityInfo: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label08:
        goto label10;

     label09:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label10:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.app.IApplicationThread$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(18, r2, null, 1);

        if $z0 != 0 goto label12;

        $r4 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        if $r4 == null goto label12;

        $r5 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        interfaceinvoke $r5.<android.app.IApplicationThread: void scheduleDestroyBackupAgent(android.content.pm.ApplicationInfo,android.content.res.CompatibilityInfo,int)>(r7, r1, i0);

     label11:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label12:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label13:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label10 to label11 with label13;
    }

    public void scheduleEnterAnimationComplete(android.os.IBinder) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r2, r6;
        boolean $z0;
        android.app.IApplicationThread $r3, $r4;
        java.lang.Throwable $r5;

        r0 := @this: android.app.IApplicationThread$Stub$Proxy;

        r6 := @parameter0: android.os.IBinder;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IApplicationThread");

        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r6);

        $r2 = r0.<android.app.IApplicationThread$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(42, r1, null, 1);

        if $z0 != 0 goto label3;

        $r3 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        if $r3 == null goto label3;

        $r4 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        interfaceinvoke $r4.<android.app.IApplicationThread: void scheduleEnterAnimationComplete(android.os.IBinder)>(r6);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void scheduleExit() throws android.os.RemoteException
    {
        android.app.IApplicationThread$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        boolean $z0;
        android.app.IApplicationThread $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.app.IApplicationThread$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IApplicationThread");

        $r3 = r0.<android.app.IApplicationThread$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r1, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        interfaceinvoke $r5.<android.app.IApplicationThread: void scheduleExit()>();

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void scheduleInstallProvider(android.content.pm.ProviderInfo) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r2;
        boolean $z0;
        android.app.IApplicationThread $r3, $r4;
        java.lang.Throwable $r5;
        android.content.pm.ProviderInfo r6;

        r0 := @this: android.app.IApplicationThread$Stub$Proxy;

        r6 := @parameter0: android.content.pm.ProviderInfo;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IApplicationThread");

     label2:
        if r6 == null goto label5;

     label3:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r6.<android.content.pm.ProviderInfo: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label4:
        goto label6;

     label5:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label6:
        $r2 = r0.<android.app.IApplicationThread$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(40, r1, null, 1);

        if $z0 != 0 goto label8;

        $r3 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        if $r3 == null goto label8;

        $r4 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        interfaceinvoke $r4.<android.app.IApplicationThread: void scheduleInstallProvider(android.content.pm.ProviderInfo)>(r6);

     label7:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void scheduleLocalVoiceInteractionStarted(android.os.IBinder, com.android.internal.app.IVoiceInteractor) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Stub$Proxy r0;
        com.android.internal.app.IVoiceInteractor r1;
        android.os.Parcel r2;
        android.os.IBinder $r3, r7, r8;
        boolean $z0;
        android.app.IApplicationThread $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.app.IApplicationThread$Stub$Proxy;

        r7 := @parameter0: android.os.IBinder;

        r1 := @parameter1: com.android.internal.app.IVoiceInteractor;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IApplicationThread");

        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r7);

     label2:
        if r1 == null goto label5;

     label3:
        r8 = interfaceinvoke r1.<com.android.internal.app.IVoiceInteractor: android.os.IBinder asBinder()>();

     label4:
        goto label6;

     label5:
        r8 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.app.IApplicationThread$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(46, r2, null, 1);

        if $z0 != 0 goto label8;

        $r4 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        if $r4 == null goto label8;

        $r5 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        interfaceinvoke $r5.<android.app.IApplicationThread: void scheduleLocalVoiceInteractionStarted(android.os.IBinder,com.android.internal.app.IVoiceInteractor)>(r7, r1);

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void scheduleLowMemory() throws android.os.RemoteException
    {
        android.app.IApplicationThread$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        boolean $z0;
        android.app.IApplicationThread $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.app.IApplicationThread$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IApplicationThread");

        $r3 = r0.<android.app.IApplicationThread$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(14, r1, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        interfaceinvoke $r5.<android.app.IApplicationThread: void scheduleLowMemory()>();

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void scheduleOnNewActivityOptions(android.os.IBinder, android.os.Bundle) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Stub$Proxy r0;
        android.os.Bundle r1;
        android.os.Parcel r2;
        android.os.IBinder $r3, r7;
        boolean $z0;
        android.app.IApplicationThread $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.app.IApplicationThread$Stub$Proxy;

        r7 := @parameter0: android.os.IBinder;

        r1 := @parameter1: android.os.Bundle;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IApplicationThread");

        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r7);

     label2:
        if r1 == null goto label5;

     label3:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.os.Bundle: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label4:
        goto label6;

     label5:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label6:
        $r3 = r0.<android.app.IApplicationThread$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(19, r2, null, 1);

        if $z0 != 0 goto label8;

        $r4 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        if $r4 == null goto label8;

        $r5 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        interfaceinvoke $r5.<android.app.IApplicationThread: void scheduleOnNewActivityOptions(android.os.IBinder,android.os.Bundle)>(r7, r1);

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void scheduleReceiver(android.content.Intent, android.content.pm.ActivityInfo, android.content.res.CompatibilityInfo, int, java.lang.String, android.os.Bundle, boolean, int, int) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Stub$Proxy r0;
        android.content.pm.ActivityInfo r1;
        android.content.res.CompatibilityInfo r2;
        int i0, i1, i2;
        java.lang.String r3;
        android.os.Bundle r4;
        boolean z0, $z1;
        android.os.Parcel r5;
        android.os.IBinder $r6;
        android.app.IApplicationThread $r7, $r8;
        java.lang.Throwable $r9;
        android.content.Intent r10;
        byte b3;

        r0 := @this: android.app.IApplicationThread$Stub$Proxy;

        r10 := @parameter0: android.content.Intent;

        r1 := @parameter1: android.content.pm.ActivityInfo;

        r2 := @parameter2: android.content.res.CompatibilityInfo;

        i0 := @parameter3: int;

        r3 := @parameter4: java.lang.String;

        r4 := @parameter5: android.os.Bundle;

        z0 := @parameter6: boolean;

        i1 := @parameter7: int;

        i2 := @parameter8: int;

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r5.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IApplicationThread");

     label02:
        b3 = 0;

        if r10 == null goto label05;

     label03:
        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r10.<android.content.Intent: void writeToParcel(android.os.Parcel,int)>(r5, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        if r1 == null goto label09;

     label07:
        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.content.pm.ActivityInfo: void writeToParcel(android.os.Parcel,int)>(r5, 0);

     label08:
        goto label10;

     label09:
        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(0);

     label10:
        if r2 == null goto label13;

     label11:
        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r2.<android.content.res.CompatibilityInfo: void writeToParcel(android.os.Parcel,int)>(r5, 0);

     label12:
        goto label14;

     label13:
        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(0);

     label14:
        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r5.<android.os.Parcel: void writeString(java.lang.String)>(r3);

     label15:
        if r4 == null goto label18;

     label16:
        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r4.<android.os.Bundle: void writeToParcel(android.os.Parcel,int)>(r5, 0);

     label17:
        goto label19;

     label18:
        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(0);

     label19:
        if z0 == 0 goto label20;

        b3 = 1;

     label20:
        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(b3);

        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(i2);

        $r6 = r0.<android.app.IApplicationThread$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r5, null, 1);

        if $z1 != 0 goto label22;

        $r7 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        if $r7 == null goto label22;

        $r8 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        interfaceinvoke $r8.<android.app.IApplicationThread: void scheduleReceiver(android.content.Intent,android.content.pm.ActivityInfo,android.content.res.CompatibilityInfo,int,java.lang.String,android.os.Bundle,boolean,int,int)>(r10, r1, r2, i0, r3, r4, z0, i1, i2);

     label21:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        return;

     label22:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        return;

     label23:
        $r9 := @caughtexception;

        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label23;
        catch java.lang.Throwable from label03 to label04 with label23;
        catch java.lang.Throwable from label05 to label06 with label23;
        catch java.lang.Throwable from label07 to label08 with label23;
        catch java.lang.Throwable from label09 to label10 with label23;
        catch java.lang.Throwable from label11 to label12 with label23;
        catch java.lang.Throwable from label13 to label14 with label23;
        catch java.lang.Throwable from label14 to label15 with label23;
        catch java.lang.Throwable from label16 to label17 with label23;
        catch java.lang.Throwable from label18 to label19 with label23;
        catch java.lang.Throwable from label20 to label21 with label23;
    }

    public void scheduleRegisteredReceiver(android.content.IIntentReceiver, android.content.Intent, int, java.lang.String, android.os.Bundle, boolean, boolean, int, int) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Stub$Proxy r0;
        android.content.Intent r1;
        int i0, i1, i2;
        java.lang.String r2;
        android.os.Bundle r3;
        boolean z0, z1, $z2;
        android.os.Parcel r4;
        android.os.IBinder $r5, r12;
        android.app.IApplicationThread $r6, $r7;
        java.lang.Throwable $r8, $r9, $r10, r13;
        android.content.IIntentReceiver r11;
        byte b4, b5;

        r0 := @this: android.app.IApplicationThread$Stub$Proxy;

        r11 := @parameter0: android.content.IIntentReceiver;

        r1 := @parameter1: android.content.Intent;

        i0 := @parameter2: int;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: android.os.Bundle;

        z0 := @parameter5: boolean;

        z1 := @parameter6: boolean;

        i1 := @parameter7: int;

        i2 := @parameter8: int;

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r4.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IApplicationThread");

     label02:
        if r11 == null goto label05;

     label03:
        r12 = interfaceinvoke r11.<android.content.IIntentReceiver: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r12 = null;

     label06:
        virtualinvoke r4.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r12);

     label07:
        if r1 == null goto label10;

     label08:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.content.Intent: void writeToParcel(android.os.Parcel,int)>(r4, 0);

     label09:
        goto label11;

     label10:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(0);

     label11:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(i0);

     label12:
        virtualinvoke r4.<android.os.Parcel: void writeString(java.lang.String)>(r2);

     label13:
        if r3 == null goto label16;

     label14:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r3.<android.os.Bundle: void writeToParcel(android.os.Parcel,int)>(r4, 0);

     label15:
        goto label17;

     label16:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(0);

     label17:
        if z0 == 0 goto label18;

        b4 = 1;

        goto label19;

     label18:
        b4 = 0;

     label19:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(b4);

     label20:
        b5 = 0;

        if z1 == 0 goto label21;

        b5 = 1;

     label21:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(b5);

        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(i2);

        $r5 = r0.<android.app.IApplicationThread$Stub$Proxy: android.os.IBinder mRemote>;

        $z2 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(13, r4, null, 1);

        if $z2 != 0 goto label23;

        $r6 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        if $r6 == null goto label23;

        $r7 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        interfaceinvoke $r7.<android.app.IApplicationThread: void scheduleRegisteredReceiver(android.content.IIntentReceiver,android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int,int)>(r11, r1, i0, r2, r3, z0, z1, i1, i2);

     label22:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        return;

     label23:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        return;

     label24:
        $r8 := @caughtexception;

        r13 = $r8;

        goto label27;

     label25:
        $r9 := @caughtexception;

        r13 = $r9;

        goto label27;

     label26:
        $r10 := @caughtexception;

        r13 = $r10;

     label27:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        throw r13;

        catch java.lang.Throwable from label01 to label02 with label26;
        catch java.lang.Throwable from label03 to label04 with label26;
        catch java.lang.Throwable from label06 to label07 with label26;
        catch java.lang.Throwable from label08 to label09 with label26;
        catch java.lang.Throwable from label10 to label11 with label26;
        catch java.lang.Throwable from label11 to label12 with label25;
        catch java.lang.Throwable from label12 to label13 with label24;
        catch java.lang.Throwable from label14 to label15 with label24;
        catch java.lang.Throwable from label16 to label17 with label24;
        catch java.lang.Throwable from label19 to label20 with label24;
        catch java.lang.Throwable from label21 to label22 with label24;
    }

    public void scheduleServiceArgs(android.os.IBinder, android.content.pm.ParceledListSlice) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Stub$Proxy r0;
        android.content.pm.ParceledListSlice r1;
        android.os.Parcel r2;
        android.os.IBinder $r3, r7;
        boolean $z0;
        android.app.IApplicationThread $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.app.IApplicationThread$Stub$Proxy;

        r7 := @parameter0: android.os.IBinder;

        r1 := @parameter1: android.content.pm.ParceledListSlice;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IApplicationThread");

        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r7);

     label2:
        if r1 == null goto label5;

     label3:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.content.pm.ParceledListSlice: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label4:
        goto label6;

     label5:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label6:
        $r3 = r0.<android.app.IApplicationThread$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r2, null, 1);

        if $z0 != 0 goto label8;

        $r4 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        if $r4 == null goto label8;

        $r5 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        interfaceinvoke $r5.<android.app.IApplicationThread: void scheduleServiceArgs(android.os.IBinder,android.content.pm.ParceledListSlice)>(r7, r1);

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void scheduleStopService(android.os.IBinder) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r2, r6;
        boolean $z0;
        android.app.IApplicationThread $r3, $r4;
        java.lang.Throwable $r5;

        r0 := @this: android.app.IApplicationThread$Stub$Proxy;

        r6 := @parameter0: android.os.IBinder;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IApplicationThread");

        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r6);

        $r2 = r0.<android.app.IApplicationThread$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r1, null, 1);

        if $z0 != 0 goto label3;

        $r3 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        if $r3 == null goto label3;

        $r4 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        interfaceinvoke $r4.<android.app.IApplicationThread: void scheduleStopService(android.os.IBinder)>(r6);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void scheduleSuicide() throws android.os.RemoteException
    {
        android.app.IApplicationThread$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        boolean $z0;
        android.app.IApplicationThread $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.app.IApplicationThread$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IApplicationThread");

        $r3 = r0.<android.app.IApplicationThread$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(20, r1, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        interfaceinvoke $r5.<android.app.IApplicationThread: void scheduleSuicide()>();

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void scheduleTransaction(android.app.servertransaction.ClientTransaction) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r2;
        boolean $z0;
        android.app.IApplicationThread $r3, $r4;
        java.lang.Throwable $r5;
        android.app.servertransaction.ClientTransaction r6;

        r0 := @this: android.app.IApplicationThread$Stub$Proxy;

        r6 := @parameter0: android.app.servertransaction.ClientTransaction;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IApplicationThread");

     label2:
        if r6 == null goto label5;

     label3:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r6.<android.app.servertransaction.ClientTransaction: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label4:
        goto label6;

     label5:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label6:
        $r2 = r0.<android.app.IApplicationThread$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(52, r1, null, 1);

        if $z0 != 0 goto label8;

        $r3 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        if $r3 == null goto label8;

        $r4 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        interfaceinvoke $r4.<android.app.IApplicationThread: void scheduleTransaction(android.app.servertransaction.ClientTransaction)>(r6);

     label7:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void scheduleTranslucentConversionComplete(android.os.IBinder, boolean) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Stub$Proxy r0;
        boolean z0, $z1;
        android.os.Parcel r1;
        android.os.IBinder $r2, r6;
        android.app.IApplicationThread $r3, $r4;
        java.lang.Throwable $r5;
        byte b0;

        r0 := @this: android.app.IApplicationThread$Stub$Proxy;

        r6 := @parameter0: android.os.IBinder;

        z0 := @parameter1: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IApplicationThread");

        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r6);

     label2:
        if z0 == 0 goto label3;

        b0 = 1;

        goto label4;

     label3:
        b0 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b0);

        $r2 = r0.<android.app.IApplicationThread$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(38, r1, null, 1);

        if $z1 != 0 goto label6;

        $r3 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        if $r3 == null goto label6;

        $r4 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        interfaceinvoke $r4.<android.app.IApplicationThread: void scheduleTranslucentConversionComplete(android.os.IBinder,boolean)>(r6, z0);

     label5:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label7:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
    }

    public void scheduleTrimMemory(int) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        boolean $z0;
        android.app.IApplicationThread $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.app.IApplicationThread$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IApplicationThread");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.app.IApplicationThread$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(29, r1, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        interfaceinvoke $r5.<android.app.IApplicationThread: void scheduleTrimMemory(int)>(i0);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void scheduleUnbindService(android.os.IBinder, android.content.Intent) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Stub$Proxy r0;
        android.content.Intent r1;
        android.os.Parcel r2;
        android.os.IBinder $r3, r7;
        boolean $z0;
        android.app.IApplicationThread $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.app.IApplicationThread$Stub$Proxy;

        r7 := @parameter0: android.os.IBinder;

        r1 := @parameter1: android.content.Intent;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IApplicationThread");

        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r7);

     label2:
        if r1 == null goto label5;

     label3:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.content.Intent: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label4:
        goto label6;

     label5:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label6:
        $r3 = r0.<android.app.IApplicationThread$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(11, r2, null, 1);

        if $z0 != 0 goto label8;

        $r4 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        if $r4 == null goto label8;

        $r5 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        interfaceinvoke $r5.<android.app.IApplicationThread: void scheduleUnbindService(android.os.IBinder,android.content.Intent)>(r7, r1);

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void setCoreSettings(android.os.Bundle) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r2;
        boolean $z0;
        android.app.IApplicationThread $r3, $r4;
        java.lang.Throwable $r5;
        android.os.Bundle r6;

        r0 := @this: android.app.IApplicationThread$Stub$Proxy;

        r6 := @parameter0: android.os.Bundle;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IApplicationThread");

     label2:
        if r6 == null goto label5;

     label3:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r6.<android.os.Bundle: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label4:
        goto label6;

     label5:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label6:
        $r2 = r0.<android.app.IApplicationThread$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(27, r1, null, 1);

        if $z0 != 0 goto label8;

        $r3 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        if $r3 == null goto label8;

        $r4 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        interfaceinvoke $r4.<android.app.IApplicationThread: void setCoreSettings(android.os.Bundle)>(r6);

     label7:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void setNetworkBlockSeq(long) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Stub$Proxy r0;
        long l0;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        boolean $z0;
        android.app.IApplicationThread $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.app.IApplicationThread$Stub$Proxy;

        l0 := @parameter0: long;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IApplicationThread");

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>(l0);

        $r3 = r0.<android.app.IApplicationThread$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(51, r1, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        interfaceinvoke $r5.<android.app.IApplicationThread: void setNetworkBlockSeq(long)>(l0);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void setProcessState(int) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        boolean $z0;
        android.app.IApplicationThread $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.app.IApplicationThread$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IApplicationThread");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.app.IApplicationThread$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(39, r1, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        interfaceinvoke $r5.<android.app.IApplicationThread: void setProcessState(int)>(i0);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void setSchedulingGroup(int) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        boolean $z0;
        android.app.IApplicationThread $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.app.IApplicationThread$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IApplicationThread");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.app.IApplicationThread$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(16, r1, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        interfaceinvoke $r5.<android.app.IApplicationThread: void setSchedulingGroup(int)>(i0);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void startBinderTracking() throws android.os.RemoteException
    {
        android.app.IApplicationThread$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        boolean $z0;
        android.app.IApplicationThread $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.app.IApplicationThread$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IApplicationThread");

        $r3 = r0.<android.app.IApplicationThread$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(44, r1, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        interfaceinvoke $r5.<android.app.IApplicationThread: void startBinderTracking()>();

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void stopBinderTrackingAndDump(android.os.ParcelFileDescriptor) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r2;
        boolean $z0;
        android.app.IApplicationThread $r3, $r4;
        java.lang.Throwable $r5;
        android.os.ParcelFileDescriptor r6;

        r0 := @this: android.app.IApplicationThread$Stub$Proxy;

        r6 := @parameter0: android.os.ParcelFileDescriptor;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IApplicationThread");

     label2:
        if r6 == null goto label5;

     label3:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r6.<android.os.ParcelFileDescriptor: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label4:
        goto label6;

     label5:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label6:
        $r2 = r0.<android.app.IApplicationThread$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(45, r1, null, 1);

        if $z0 != 0 goto label8;

        $r3 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        if $r3 == null goto label8;

        $r4 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        interfaceinvoke $r4.<android.app.IApplicationThread: void stopBinderTrackingAndDump(android.os.ParcelFileDescriptor)>(r6);

     label7:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void unstableProviderDied(android.os.IBinder) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r2, r6;
        boolean $z0;
        android.app.IApplicationThread $r3, $r4;
        java.lang.Throwable $r5;

        r0 := @this: android.app.IApplicationThread$Stub$Proxy;

        r6 := @parameter0: android.os.IBinder;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IApplicationThread");

        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r6);

        $r2 = r0.<android.app.IApplicationThread$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(36, r1, null, 1);

        if $z0 != 0 goto label3;

        $r3 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        if $r3 == null goto label3;

        $r4 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        interfaceinvoke $r4.<android.app.IApplicationThread: void unstableProviderDied(android.os.IBinder)>(r6);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void updateHttpProxy() throws android.os.RemoteException
    {
        android.app.IApplicationThread$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        boolean $z0;
        android.app.IApplicationThread $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.app.IApplicationThread$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IApplicationThread");

        $r3 = r0.<android.app.IApplicationThread$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(26, r1, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        interfaceinvoke $r5.<android.app.IApplicationThread: void updateHttpProxy()>();

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void updatePackageCompatibilityInfo(java.lang.String, android.content.res.CompatibilityInfo) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Stub$Proxy r0;
        android.content.res.CompatibilityInfo r1;
        android.os.Parcel r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.app.IApplicationThread $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: android.app.IApplicationThread$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        r1 := @parameter1: android.content.res.CompatibilityInfo;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IApplicationThread");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r7);

     label2:
        if r1 == null goto label5;

     label3:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.content.res.CompatibilityInfo: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label4:
        goto label6;

     label5:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label6:
        $r3 = r0.<android.app.IApplicationThread$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(28, r2, null, 1);

        if $z0 != 0 goto label8;

        $r4 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        if $r4 == null goto label8;

        $r5 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        interfaceinvoke $r5.<android.app.IApplicationThread: void updatePackageCompatibilityInfo(java.lang.String,android.content.res.CompatibilityInfo)>(r7, r1);

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void updateTimePrefs(int) throws android.os.RemoteException
    {
        android.app.IApplicationThread$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        boolean $z0;
        android.app.IApplicationThread $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.app.IApplicationThread$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IApplicationThread");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.app.IApplicationThread$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(41, r1, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        interfaceinvoke $r5.<android.app.IApplicationThread: void updateTimePrefs(int)>(i0);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void updateTimeZone() throws android.os.RemoteException
    {
        android.app.IApplicationThread$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        boolean $z0;
        android.app.IApplicationThread $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.app.IApplicationThread$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IApplicationThread");

        $r3 = r0.<android.app.IApplicationThread$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, r1, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.app.IApplicationThread$Stub: android.app.IApplicationThread getDefaultImpl()>();

        interfaceinvoke $r5.<android.app.IApplicationThread: void updateTimeZone()>();

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }
}
