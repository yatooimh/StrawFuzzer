class android.app.IInstrumentationWatcher$Stub$Proxy extends java.lang.Object implements android.app.IInstrumentationWatcher
{
    public static android.app.IInstrumentationWatcher sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.app.IInstrumentationWatcher$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.app.IInstrumentationWatcher$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.app.IInstrumentationWatcher$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.app.IInstrumentationWatcher$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.app.IInstrumentationWatcher$Stub$Proxy;

        $r1 = r0.<android.app.IInstrumentationWatcher$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.app.IInstrumentationWatcher$Stub$Proxy r0;

        r0 := @this: android.app.IInstrumentationWatcher$Stub$Proxy;

        return "android.app.IInstrumentationWatcher";
    }

    public void instrumentationFinished(android.content.ComponentName, int, android.os.Bundle) throws android.os.RemoteException
    {
        android.app.IInstrumentationWatcher$Stub$Proxy r0;
        int i0;
        android.os.Bundle r1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.app.IInstrumentationWatcher $r5, $r6;
        java.lang.Throwable $r7;
        android.content.ComponentName r8;

        r0 := @this: android.app.IInstrumentationWatcher$Stub$Proxy;

        r8 := @parameter0: android.content.ComponentName;

        i0 := @parameter1: int;

        r1 := @parameter2: android.os.Bundle;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IInstrumentationWatcher");

     label02:
        if r8 == null goto label05;

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r8.<android.content.ComponentName: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

     label07:
        if r1 == null goto label10;

     label08:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.os.Bundle: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label09:
        goto label11;

     label10:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label11:
        $r4 = r0.<android.app.IInstrumentationWatcher$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r2, r3, 0);

        if $z0 != 0 goto label13;

        $r5 = staticinvoke <android.app.IInstrumentationWatcher$Stub: android.app.IInstrumentationWatcher getDefaultImpl()>();

        if $r5 == null goto label13;

        $r6 = staticinvoke <android.app.IInstrumentationWatcher$Stub: android.app.IInstrumentationWatcher getDefaultImpl()>();

        interfaceinvoke $r6.<android.app.IInstrumentationWatcher: void instrumentationFinished(android.content.ComponentName,int,android.os.Bundle)>(r8, i0, r1);

     label12:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label13:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label14:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label15:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label05 to label06 with label15;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.lang.Throwable from label11 to label12 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
    }

    public void instrumentationStatus(android.content.ComponentName, int, android.os.Bundle) throws android.os.RemoteException
    {
        android.app.IInstrumentationWatcher$Stub$Proxy r0;
        int i0;
        android.os.Bundle r1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.app.IInstrumentationWatcher $r5, $r6;
        java.lang.Throwable $r7;
        android.content.ComponentName r8;

        r0 := @this: android.app.IInstrumentationWatcher$Stub$Proxy;

        r8 := @parameter0: android.content.ComponentName;

        i0 := @parameter1: int;

        r1 := @parameter2: android.os.Bundle;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IInstrumentationWatcher");

     label02:
        if r8 == null goto label05;

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r8.<android.content.ComponentName: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

     label07:
        if r1 == null goto label10;

     label08:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.os.Bundle: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label09:
        goto label11;

     label10:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label11:
        $r4 = r0.<android.app.IInstrumentationWatcher$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r2, r3, 0);

        if $z0 != 0 goto label13;

        $r5 = staticinvoke <android.app.IInstrumentationWatcher$Stub: android.app.IInstrumentationWatcher getDefaultImpl()>();

        if $r5 == null goto label13;

        $r6 = staticinvoke <android.app.IInstrumentationWatcher$Stub: android.app.IInstrumentationWatcher getDefaultImpl()>();

        interfaceinvoke $r6.<android.app.IInstrumentationWatcher: void instrumentationStatus(android.content.ComponentName,int,android.os.Bundle)>(r8, i0, r1);

     label12:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label13:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label14:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label15:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label05 to label06 with label15;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.lang.Throwable from label11 to label12 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
    }
}
