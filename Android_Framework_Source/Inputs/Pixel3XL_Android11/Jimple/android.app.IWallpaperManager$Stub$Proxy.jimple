class android.app.IWallpaperManager$Stub$Proxy extends java.lang.Object implements android.app.IWallpaperManager
{
    public static android.app.IWallpaperManager sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.app.IWallpaperManager$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.app.IWallpaperManager$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.app.IWallpaperManager$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.app.IWallpaperManager$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.app.IWallpaperManager$Stub$Proxy;

        $r1 = r0.<android.app.IWallpaperManager$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public void clearWallpaper(java.lang.String, int, int) throws android.os.RemoteException
    {
        android.app.IWallpaperManager$Stub$Proxy r0;
        int i0, i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.app.IWallpaperManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: android.app.IWallpaperManager$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IWallpaperManager");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        $r3 = r0.<android.app.IWallpaperManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.app.IWallpaperManager$Stub: android.app.IWallpaperManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.app.IWallpaperManager$Stub: android.app.IWallpaperManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.app.IWallpaperManager: void clearWallpaper(java.lang.String,int,int)>(r7, i0, i1);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int getHeightHint(int) throws android.os.RemoteException
    {
        android.app.IWallpaperManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.app.IWallpaperManager $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1, i2;

        r0 := @this: android.app.IWallpaperManager$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IWallpaperManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.app.IWallpaperManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(12, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.app.IWallpaperManager$Stub: android.app.IWallpaperManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.app.IWallpaperManager$Stub: android.app.IWallpaperManager getDefaultImpl()>();

        i1 = interfaceinvoke $r6.<android.app.IWallpaperManager: int getHeightHint(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i2;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.app.IWallpaperManager$Stub$Proxy r0;

        r0 := @this: android.app.IWallpaperManager$Stub$Proxy;

        return "android.app.IWallpaperManager";
    }

    public java.lang.String getName() throws android.os.RemoteException
    {
        android.app.IWallpaperManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.app.IWallpaperManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7, r8;

        r0 := @this: android.app.IWallpaperManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IWallpaperManager");

        $r3 = r0.<android.app.IWallpaperManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(14, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.app.IWallpaperManager$Stub: android.app.IWallpaperManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.app.IWallpaperManager$Stub: android.app.IWallpaperManager getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<android.app.IWallpaperManager: java.lang.String getName()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: java.lang.String readString()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.os.ParcelFileDescriptor getWallpaper(java.lang.String, android.app.IWallpaperManagerCallback, int, android.os.Bundle, int) throws android.os.RemoteException
    {
        android.app.IWallpaperManager$Stub$Proxy r0;
        android.app.IWallpaperManagerCallback r1;
        int i0, i1, $i2, $i3;
        android.os.Bundle r2;
        android.os.Parcel r3, r4;
        android.os.IBinder $r5, r12;
        boolean $z0;
        android.os.Parcelable$Creator $r6;
        java.lang.Object $r7;
        android.app.IWallpaperManager $r8, $r9;
        java.lang.Throwable $r10;
        java.lang.String r11;
        android.os.ParcelFileDescriptor r13, r14;

        r0 := @this: android.app.IWallpaperManager$Stub$Proxy;

        r11 := @parameter0: java.lang.String;

        r1 := @parameter1: android.app.IWallpaperManagerCallback;

        i0 := @parameter2: int;

        r2 := @parameter3: android.os.Bundle;

        i1 := @parameter4: int;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IWallpaperManager");

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r11);

     label02:
        if r1 == null goto label05;

     label03:
        r12 = interfaceinvoke r1.<android.app.IWallpaperManagerCallback: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r12 = null;

     label06:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r12);

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i1);

        $r5 = r0.<android.app.IWallpaperManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r3, r4, 0);

        if $z0 != 0 goto label08;

        $r8 = staticinvoke <android.app.IWallpaperManager$Stub: android.app.IWallpaperManager getDefaultImpl()>();

        if $r8 == null goto label08;

        $r9 = staticinvoke <android.app.IWallpaperManager$Stub: android.app.IWallpaperManager getDefaultImpl()>();

        r13 = interfaceinvoke $r9.<android.app.IWallpaperManager: android.os.ParcelFileDescriptor getWallpaper(java.lang.String,android.app.IWallpaperManagerCallback,int,android.os.Bundle,int)>(r11, r1, i0, r2, i1);

     label07:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return r13;

     label08:
        virtualinvoke r4.<android.os.Parcel: void readException()>();

        $i2 = virtualinvoke r4.<android.os.Parcel: int readInt()>();

        if $i2 == 0 goto label10;

        $r6 = <android.os.ParcelFileDescriptor: android.os.Parcelable$Creator CREATOR>;

        $r7 = interfaceinvoke $r6.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r4);

        r14 = (android.os.ParcelFileDescriptor) $r7;

     label09:
        goto label11;

     label10:
        r14 = null;

     label11:
        $i3 = virtualinvoke r4.<android.os.Parcel: int readInt()>();

        if $i3 == 0 goto label12;

        virtualinvoke r2.<android.os.Bundle: void readFromParcel(android.os.Parcel)>(r4);

     label12:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return r14;

     label13:
        $r10 := @caughtexception;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw $r10;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
    }

    public android.app.WallpaperColors getWallpaperColors(int, int, int) throws android.os.RemoteException
    {
        android.app.IWallpaperManager$Stub$Proxy r0;
        int i0, i1, i2, $i3;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.app.IWallpaperManager $r6, $r7;
        java.lang.Throwable $r8;
        android.app.WallpaperColors r9, r10;

        r0 := @this: android.app.IWallpaperManager$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IWallpaperManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i2);

        $r3 = r0.<android.app.IWallpaperManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(20, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.app.IWallpaperManager$Stub: android.app.IWallpaperManager getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.app.IWallpaperManager$Stub: android.app.IWallpaperManager getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<android.app.IWallpaperManager: android.app.WallpaperColors getWallpaperColors(int,int,int)>(i0, i1, i2);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i3 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i3 == 0 goto label5;

        $r4 = <android.app.WallpaperColors: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r10 = (android.app.WallpaperColors) $r5;

     label4:
        goto label6;

     label5:
        r10 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public int getWallpaperIdForUser(int, int) throws android.os.RemoteException
    {
        android.app.IWallpaperManager$Stub$Proxy r0;
        int i0, i1, i2, i3;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.app.IWallpaperManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.app.IWallpaperManager$Stub$Proxy;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IWallpaperManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.app.IWallpaperManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.app.IWallpaperManager$Stub: android.app.IWallpaperManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.app.IWallpaperManager$Stub: android.app.IWallpaperManager getDefaultImpl()>();

        i2 = interfaceinvoke $r6.<android.app.IWallpaperManager: int getWallpaperIdForUser(int,int)>(i1, i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i2;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i3 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i3;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.app.WallpaperInfo getWallpaperInfo(int) throws android.os.RemoteException
    {
        android.app.IWallpaperManager$Stub$Proxy r0;
        int i0, $i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.app.IWallpaperManager $r6, $r7;
        java.lang.Throwable $r8;
        android.app.WallpaperInfo r9, r10;

        r0 := @this: android.app.IWallpaperManager$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IWallpaperManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.app.IWallpaperManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.app.IWallpaperManager$Stub: android.app.IWallpaperManager getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.app.IWallpaperManager$Stub: android.app.IWallpaperManager getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<android.app.IWallpaperManager: android.app.WallpaperInfo getWallpaperInfo(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i1 == 0 goto label5;

        $r4 = <android.app.WallpaperInfo: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r10 = (android.app.WallpaperInfo) $r5;

     label4:
        goto label6;

     label5:
        r10 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public android.os.ParcelFileDescriptor getWallpaperWithFeature(java.lang.String, java.lang.String, android.app.IWallpaperManagerCallback, int, android.os.Bundle, int) throws android.os.RemoteException
    {
        android.app.IWallpaperManager$Stub$Proxy r0;
        java.lang.String r1, r18;
        android.app.IWallpaperManagerCallback r2;
        android.os.Bundle r3;
        int i0, $i1, i2, i3;
        android.os.Parcel r4, r5;
        android.os.IBinder $r6, r19;
        boolean $z0;
        android.os.Parcelable$Creator $r7;
        java.lang.Object $r8;
        android.app.IWallpaperManager $r9, $r10;
        java.lang.Throwable $r11, $r12, $r13, $r14, $r15, $r16, $r17, r22;
        android.os.ParcelFileDescriptor r20, r21;

        r0 := @this: android.app.IWallpaperManager$Stub$Proxy;

        r18 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.app.IWallpaperManagerCallback;

        i2 := @parameter3: int;

        r3 := @parameter4: android.os.Bundle;

        i0 := @parameter5: int;

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r4.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IWallpaperManager");

     label02:
        virtualinvoke r4.<android.os.Parcel: void writeString(java.lang.String)>(r18);

     label03:
        virtualinvoke r4.<android.os.Parcel: void writeString(java.lang.String)>(r1);

     label04:
        if r2 == null goto label07;

     label05:
        r19 = interfaceinvoke r2.<android.app.IWallpaperManagerCallback: android.os.IBinder asBinder()>();

     label06:
        goto label08;

     label07:
        r19 = null;

     label08:
        virtualinvoke r4.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r19);

     label09:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(i2);

     label10:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(i0);

     label11:
        $r6 = r0.<android.app.IWallpaperManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r4, r5, 0);

        if $z0 != 0 goto label13;

        $r9 = staticinvoke <android.app.IWallpaperManager$Stub: android.app.IWallpaperManager getDefaultImpl()>();

        if $r9 == null goto label13;

        $r10 = staticinvoke <android.app.IWallpaperManager$Stub: android.app.IWallpaperManager getDefaultImpl()>();

        r20 = interfaceinvoke $r10.<android.app.IWallpaperManager: android.os.ParcelFileDescriptor getWallpaperWithFeature(java.lang.String,java.lang.String,android.app.IWallpaperManagerCallback,int,android.os.Bundle,int)>(r18, r1, r2, i2, r3, i0);

     label12:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        return r20;

     label13:
        virtualinvoke r5.<android.os.Parcel: void readException()>();

        $i1 = virtualinvoke r5.<android.os.Parcel: int readInt()>();

        if $i1 == 0 goto label15;

        $r7 = <android.os.ParcelFileDescriptor: android.os.Parcelable$Creator CREATOR>;

        $r8 = interfaceinvoke $r7.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r5);

        r21 = (android.os.ParcelFileDescriptor) $r8;

     label14:
        goto label16;

     label15:
        r21 = null;

     label16:
        i3 = virtualinvoke r5.<android.os.Parcel: int readInt()>();

     label17:
        if i3 == 0 goto label21;

     label18:
        virtualinvoke r3.<android.os.Bundle: void readFromParcel(android.os.Parcel)>(r5);

     label19:
        goto label21;

     label20:
        $r11 := @caughtexception;

        r22 = $r11;

        goto label29;

     label21:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        return r21;

     label22:
        $r14 := @caughtexception;

        r22 = $r14;

        goto label24;

     label23:
        $r12 := @caughtexception;

        r22 = $r12;

     label24:
        goto label29;

     label25:
        $r15 := @caughtexception;

        r22 = $r15;

        goto label29;

     label26:
        $r16 := @caughtexception;

        r22 = $r16;

        goto label29;

     label27:
        $r13 := @caughtexception;

        r22 = $r13;

        goto label29;

     label28:
        $r17 := @caughtexception;

        r22 = $r17;

     label29:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        throw r22;

        catch java.lang.Throwable from label01 to label02 with label28;
        catch java.lang.Throwable from label02 to label03 with label27;
        catch java.lang.Throwable from label03 to label04 with label26;
        catch java.lang.Throwable from label05 to label06 with label26;
        catch java.lang.Throwable from label08 to label09 with label26;
        catch java.lang.Throwable from label09 to label10 with label25;
        catch java.lang.Throwable from label10 to label11 with label23;
        catch java.lang.Throwable from label11 to label12 with label22;
        catch java.lang.Throwable from label13 to label14 with label22;
        catch java.lang.Throwable from label16 to label17 with label22;
        catch java.lang.Throwable from label18 to label19 with label20;
    }

    public int getWidthHint(int) throws android.os.RemoteException
    {
        android.app.IWallpaperManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.app.IWallpaperManager $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1, i2;

        r0 := @this: android.app.IWallpaperManager$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IWallpaperManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.app.IWallpaperManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(11, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.app.IWallpaperManager$Stub: android.app.IWallpaperManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.app.IWallpaperManager$Stub: android.app.IWallpaperManager getDefaultImpl()>();

        i1 = interfaceinvoke $r6.<android.app.IWallpaperManager: int getWidthHint(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i2;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public boolean hasNamedWallpaper(java.lang.String) throws android.os.RemoteException
    {
        android.app.IWallpaperManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder r3;
        int i0;
        boolean $z0, z1, z2;
        android.app.IWallpaperManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: android.app.IWallpaperManager$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IWallpaperManager");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        r3 = r0.<android.app.IWallpaperManager$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(9, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r4 = staticinvoke <android.app.IWallpaperManager$Stub: android.app.IWallpaperManager getDefaultImpl()>();

        if $r4 == null goto label5;

        $r5 = staticinvoke <android.app.IWallpaperManager$Stub: android.app.IWallpaperManager getDefaultImpl()>();

        z2 = interfaceinvoke $r5.<android.app.IWallpaperManager: boolean hasNamedWallpaper(java.lang.String)>(r7);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isSetWallpaperAllowed(java.lang.String) throws android.os.RemoteException
    {
        android.app.IWallpaperManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder r3;
        int i0;
        boolean $z0, z1, z2;
        android.app.IWallpaperManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: android.app.IWallpaperManager$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IWallpaperManager");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        r3 = r0.<android.app.IWallpaperManager$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(17, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r4 = staticinvoke <android.app.IWallpaperManager$Stub: android.app.IWallpaperManager getDefaultImpl()>();

        if $r4 == null goto label5;

        $r5 = staticinvoke <android.app.IWallpaperManager$Stub: android.app.IWallpaperManager getDefaultImpl()>();

        z2 = interfaceinvoke $r5.<android.app.IWallpaperManager: boolean isSetWallpaperAllowed(java.lang.String)>(r7);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isWallpaperBackupEligible(int, int) throws android.os.RemoteException
    {
        android.app.IWallpaperManager$Stub$Proxy r0;
        int i0, i1, i2;
        android.os.Parcel r1, r2;
        boolean $z0, z1, z2;
        android.app.IWallpaperManager $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: android.app.IWallpaperManager$Stub$Proxy;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IWallpaperManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        r6 = r0.<android.app.IWallpaperManager$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(18, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.app.IWallpaperManager$Stub: android.app.IWallpaperManager getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.app.IWallpaperManager$Stub: android.app.IWallpaperManager getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.app.IWallpaperManager: boolean isWallpaperBackupEligible(int,int)>(i1, i0);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i2 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isWallpaperSupported(java.lang.String) throws android.os.RemoteException
    {
        android.app.IWallpaperManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder r3;
        int i0;
        boolean $z0, z1, z2;
        android.app.IWallpaperManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: android.app.IWallpaperManager$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IWallpaperManager");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        r3 = r0.<android.app.IWallpaperManager$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(16, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r4 = staticinvoke <android.app.IWallpaperManager$Stub: android.app.IWallpaperManager getDefaultImpl()>();

        if $r4 == null goto label5;

        $r5 = staticinvoke <android.app.IWallpaperManager$Stub: android.app.IWallpaperManager getDefaultImpl()>();

        z2 = interfaceinvoke $r5.<android.app.IWallpaperManager: boolean isWallpaperSupported(java.lang.String)>(r7);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public void registerWallpaperColorsCallback(android.app.IWallpaperManagerCallback, int, int) throws android.os.RemoteException
    {
        android.app.IWallpaperManager$Stub$Proxy r0;
        int i0, i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.app.IWallpaperManager $r4, $r5;
        java.lang.Throwable $r6;
        android.app.IWallpaperManagerCallback r7;

        r0 := @this: android.app.IWallpaperManager$Stub$Proxy;

        r7 := @parameter0: android.app.IWallpaperManagerCallback;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IWallpaperManager");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.app.IWallpaperManagerCallback: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        $r3 = r0.<android.app.IWallpaperManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(21, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.app.IWallpaperManager$Stub: android.app.IWallpaperManager getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.app.IWallpaperManager$Stub: android.app.IWallpaperManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.app.IWallpaperManager: void registerWallpaperColorsCallback(android.app.IWallpaperManagerCallback,int,int)>(r7, i0, i1);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void setDimensionHints(int, int, java.lang.String, int) throws android.os.RemoteException
    {
        android.app.IWallpaperManager$Stub$Proxy r0;
        int i0, i1, i2;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.app.IWallpaperManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: android.app.IWallpaperManager$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r7 := @parameter2: java.lang.String;

        i2 := @parameter3: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IWallpaperManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i2);

        $r3 = r0.<android.app.IWallpaperManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(10, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.app.IWallpaperManager$Stub: android.app.IWallpaperManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.app.IWallpaperManager$Stub: android.app.IWallpaperManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.app.IWallpaperManager: void setDimensionHints(int,int,java.lang.String,int)>(i0, i1, r7, i2);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void setDisplayPadding(android.graphics.Rect, java.lang.String, int) throws android.os.RemoteException
    {
        android.app.IWallpaperManager$Stub$Proxy r0;
        java.lang.String r1;
        int i0;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.app.IWallpaperManager $r5, $r6;
        java.lang.Throwable $r7;
        android.graphics.Rect r8;

        r0 := @this: android.app.IWallpaperManager$Stub$Proxy;

        r8 := @parameter0: android.graphics.Rect;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IWallpaperManager");

     label02:
        if r8 == null goto label05;

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r8.<android.graphics.Rect: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.app.IWallpaperManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(13, r2, r3, 0);

        if $z0 != 0 goto label08;

        $r5 = staticinvoke <android.app.IWallpaperManager$Stub: android.app.IWallpaperManager getDefaultImpl()>();

        if $r5 == null goto label08;

        $r6 = staticinvoke <android.app.IWallpaperManager$Stub: android.app.IWallpaperManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.app.IWallpaperManager: void setDisplayPadding(android.graphics.Rect,java.lang.String,int)>(r8, r1, i0);

     label07:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void setInAmbientMode(boolean, long) throws android.os.RemoteException
    {
        android.app.IWallpaperManager$Stub$Proxy r0;
        boolean z0, $z1;
        long l0;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        android.app.IWallpaperManager $r4, $r5;
        java.lang.Throwable $r6;
        byte b1;

        r0 := @this: android.app.IWallpaperManager$Stub$Proxy;

        z0 := @parameter0: boolean;

        l0 := @parameter1: long;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IWallpaperManager");

     label2:
        if z0 == 0 goto label3;

        b1 = 1;

        goto label4;

     label3:
        b1 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b1);

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>(l0);

        $r3 = r0.<android.app.IWallpaperManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(23, r1, null, 1);

        if $z1 != 0 goto label6;

        $r4 = staticinvoke <android.app.IWallpaperManager$Stub: android.app.IWallpaperManager getDefaultImpl()>();

        if $r4 == null goto label6;

        $r5 = staticinvoke <android.app.IWallpaperManager$Stub: android.app.IWallpaperManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.app.IWallpaperManager: void setInAmbientMode(boolean,long)>(z0, l0);

     label5:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label7:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
    }

    public boolean setLockWallpaperCallback(android.app.IWallpaperManagerCallback) throws android.os.RemoteException
    {
        android.app.IWallpaperManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        boolean $z0, z1, z2;
        android.app.IWallpaperManager $r3, $r4;
        java.lang.Throwable $r5;
        android.app.IWallpaperManagerCallback r6;
        android.os.IBinder r7, r8;

        r0 := @this: android.app.IWallpaperManager$Stub$Proxy;

        r6 := @parameter0: android.app.IWallpaperManagerCallback;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IWallpaperManager");

     label02:
        if r6 == null goto label05;

     label03:
        r7 = interfaceinvoke r6.<android.app.IWallpaperManagerCallback: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r7 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r7);

        r8 = r0.<android.app.IWallpaperManager$Stub$Proxy: android.os.IBinder mRemote>;

     label07:
        z1 = 0;

     label08:
        $z0 = interfaceinvoke r8.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(19, r1, r2, 0);

        if $z0 != 0 goto label10;

        $r3 = staticinvoke <android.app.IWallpaperManager$Stub: android.app.IWallpaperManager getDefaultImpl()>();

        if $r3 == null goto label10;

        $r4 = staticinvoke <android.app.IWallpaperManager$Stub: android.app.IWallpaperManager getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.app.IWallpaperManager: boolean setLockWallpaperCallback(android.app.IWallpaperManagerCallback)>(r6);

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label10:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label11:
        if i0 == 0 goto label12;

        z1 = 1;

     label12:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label13:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label10 to label11 with label13;
    }

    public android.os.ParcelFileDescriptor setWallpaper(java.lang.String, java.lang.String, android.graphics.Rect, boolean, android.os.Bundle, int, android.app.IWallpaperManagerCallback, int) throws android.os.RemoteException
    {
        android.app.IWallpaperManager$Stub$Proxy r0;
        java.lang.String r1, r17;
        android.graphics.Rect r2;
        boolean z0, $z1;
        android.os.Bundle r3;
        android.app.IWallpaperManagerCallback r4;
        int i0, $i1, i2, i4;
        android.os.Parcel r5, r6;
        android.os.IBinder $r7, r18;
        android.os.Parcelable$Creator $r8;
        java.lang.Object $r9;
        android.app.IWallpaperManager $r10, $r11;
        java.lang.Throwable $r12, $r13, $r14, $r15, $r16, r21;
        byte b3;
        android.os.ParcelFileDescriptor r19, r20;

        r0 := @this: android.app.IWallpaperManager$Stub$Proxy;

        r17 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.graphics.Rect;

        z0 := @parameter3: boolean;

        r3 := @parameter4: android.os.Bundle;

        i2 := @parameter5: int;

        r4 := @parameter6: android.app.IWallpaperManagerCallback;

        i0 := @parameter7: int;

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r6 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r5.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IWallpaperManager");

     label02:
        virtualinvoke r5.<android.os.Parcel: void writeString(java.lang.String)>(r17);

     label03:
        virtualinvoke r5.<android.os.Parcel: void writeString(java.lang.String)>(r1);

     label04:
        if r2 == null goto label07;

     label05:
        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r2.<android.graphics.Rect: void writeToParcel(android.os.Parcel,int)>(r5, 0);

     label06:
        goto label08;

     label07:
        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(0);

     label08:
        if z0 == 0 goto label09;

        b3 = 1;

        goto label10;

     label09:
        b3 = 0;

     label10:
        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(b3);

     label11:
        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(i2);

     label12:
        if r4 == null goto label15;

     label13:
        r18 = interfaceinvoke r4.<android.app.IWallpaperManagerCallback: android.os.IBinder asBinder()>();

     label14:
        goto label16;

     label15:
        r18 = null;

     label16:
        virtualinvoke r5.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r18);

        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(i0);

        $r7 = r0.<android.app.IWallpaperManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r7.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r5, r6, 0);

        if $z1 != 0 goto label18;

        $r10 = staticinvoke <android.app.IWallpaperManager$Stub: android.app.IWallpaperManager getDefaultImpl()>();

        if $r10 == null goto label18;

        $r11 = staticinvoke <android.app.IWallpaperManager$Stub: android.app.IWallpaperManager getDefaultImpl()>();

        r19 = interfaceinvoke $r11.<android.app.IWallpaperManager: android.os.ParcelFileDescriptor setWallpaper(java.lang.String,java.lang.String,android.graphics.Rect,boolean,android.os.Bundle,int,android.app.IWallpaperManagerCallback,int)>(r17, r1, r2, z0, r3, i2, r4, i0);

     label17:
        virtualinvoke r6.<android.os.Parcel: void recycle()>();

        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        return r19;

     label18:
        virtualinvoke r6.<android.os.Parcel: void readException()>();

        $i1 = virtualinvoke r6.<android.os.Parcel: int readInt()>();

        if $i1 == 0 goto label20;

        $r8 = <android.os.ParcelFileDescriptor: android.os.Parcelable$Creator CREATOR>;

        $r9 = interfaceinvoke $r8.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r6);

        r20 = (android.os.ParcelFileDescriptor) $r9;

     label19:
        goto label21;

     label20:
        r20 = null;

     label21:
        i4 = virtualinvoke r6.<android.os.Parcel: int readInt()>();

     label22:
        if i4 == 0 goto label26;

     label23:
        virtualinvoke r3.<android.os.Bundle: void readFromParcel(android.os.Parcel)>(r6);

     label24:
        goto label26;

     label25:
        $r12 := @caughtexception;

        r21 = $r12;

        goto label31;

     label26:
        virtualinvoke r6.<android.os.Parcel: void recycle()>();

        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        return r20;

     label27:
        $r13 := @caughtexception;

        r21 = $r13;

        goto label31;

     label28:
        $r14 := @caughtexception;

        r21 = $r14;

        goto label31;

     label29:
        $r16 := @caughtexception;

        r21 = $r16;

        goto label31;

     label30:
        $r15 := @caughtexception;

        r21 = $r15;

     label31:
        virtualinvoke r6.<android.os.Parcel: void recycle()>();

        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        throw r21;

        catch java.lang.Throwable from label01 to label02 with label30;
        catch java.lang.Throwable from label02 to label03 with label29;
        catch java.lang.Throwable from label03 to label04 with label28;
        catch java.lang.Throwable from label05 to label06 with label28;
        catch java.lang.Throwable from label07 to label08 with label28;
        catch java.lang.Throwable from label10 to label11 with label28;
        catch java.lang.Throwable from label11 to label12 with label27;
        catch java.lang.Throwable from label13 to label14 with label27;
        catch java.lang.Throwable from label16 to label17 with label27;
        catch java.lang.Throwable from label18 to label19 with label27;
        catch java.lang.Throwable from label21 to label22 with label27;
        catch java.lang.Throwable from label23 to label24 with label25;
    }

    public void setWallpaperComponent(android.content.ComponentName) throws android.os.RemoteException
    {
        android.app.IWallpaperManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.app.IWallpaperManager $r4, $r5;
        java.lang.Throwable $r6;
        android.content.ComponentName r7;

        r0 := @this: android.app.IWallpaperManager$Stub$Proxy;

        r7 := @parameter0: android.content.ComponentName;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IWallpaperManager");

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.content.ComponentName: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r3 = r0.<android.app.IWallpaperManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.app.IWallpaperManager$Stub: android.app.IWallpaperManager getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.app.IWallpaperManager$Stub: android.app.IWallpaperManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.app.IWallpaperManager: void setWallpaperComponent(android.content.ComponentName)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void setWallpaperComponentChecked(android.content.ComponentName, java.lang.String, int) throws android.os.RemoteException
    {
        android.app.IWallpaperManager$Stub$Proxy r0;
        java.lang.String r1;
        int i0;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.app.IWallpaperManager $r5, $r6;
        java.lang.Throwable $r7;
        android.content.ComponentName r8;

        r0 := @this: android.app.IWallpaperManager$Stub$Proxy;

        r8 := @parameter0: android.content.ComponentName;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IWallpaperManager");

     label02:
        if r8 == null goto label05;

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r8.<android.content.ComponentName: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.app.IWallpaperManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r2, r3, 0);

        if $z0 != 0 goto label08;

        $r5 = staticinvoke <android.app.IWallpaperManager$Stub: android.app.IWallpaperManager getDefaultImpl()>();

        if $r5 == null goto label08;

        $r6 = staticinvoke <android.app.IWallpaperManager$Stub: android.app.IWallpaperManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.app.IWallpaperManager: void setWallpaperComponentChecked(android.content.ComponentName,java.lang.String,int)>(r8, r1, i0);

     label07:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void settingsRestored() throws android.os.RemoteException
    {
        android.app.IWallpaperManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.app.IWallpaperManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.app.IWallpaperManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IWallpaperManager");

        $r4 = r0.<android.app.IWallpaperManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(15, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.app.IWallpaperManager$Stub: android.app.IWallpaperManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.app.IWallpaperManager$Stub: android.app.IWallpaperManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.app.IWallpaperManager: void settingsRestored()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void unregisterWallpaperColorsCallback(android.app.IWallpaperManagerCallback, int, int) throws android.os.RemoteException
    {
        android.app.IWallpaperManager$Stub$Proxy r0;
        int i0, i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.app.IWallpaperManager $r4, $r5;
        java.lang.Throwable $r6;
        android.app.IWallpaperManagerCallback r7;

        r0 := @this: android.app.IWallpaperManager$Stub$Proxy;

        r7 := @parameter0: android.app.IWallpaperManagerCallback;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IWallpaperManager");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.app.IWallpaperManagerCallback: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        $r3 = r0.<android.app.IWallpaperManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(22, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.app.IWallpaperManager$Stub: android.app.IWallpaperManager getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.app.IWallpaperManager$Stub: android.app.IWallpaperManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.app.IWallpaperManager: void unregisterWallpaperColorsCallback(android.app.IWallpaperManagerCallback,int,int)>(r7, i0, i1);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }
}
