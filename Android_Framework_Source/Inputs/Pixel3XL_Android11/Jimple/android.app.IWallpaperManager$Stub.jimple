public abstract class android.app.IWallpaperManager$Stub extends android.os.Binder implements android.app.IWallpaperManager
{
    private static final java.lang.String DESCRIPTOR;
    static final int TRANSACTION_clearWallpaper;
    static final int TRANSACTION_getHeightHint;
    static final int TRANSACTION_getName;
    static final int TRANSACTION_getWallpaper;
    static final int TRANSACTION_getWallpaperColors;
    static final int TRANSACTION_getWallpaperIdForUser;
    static final int TRANSACTION_getWallpaperInfo;
    static final int TRANSACTION_getWallpaperWithFeature;
    static final int TRANSACTION_getWidthHint;
    static final int TRANSACTION_hasNamedWallpaper;
    static final int TRANSACTION_isSetWallpaperAllowed;
    static final int TRANSACTION_isWallpaperBackupEligible;
    static final int TRANSACTION_isWallpaperSupported;
    static final int TRANSACTION_registerWallpaperColorsCallback;
    static final int TRANSACTION_setDimensionHints;
    static final int TRANSACTION_setDisplayPadding;
    static final int TRANSACTION_setInAmbientMode;
    static final int TRANSACTION_setLockWallpaperCallback;
    static final int TRANSACTION_setWallpaper;
    static final int TRANSACTION_setWallpaperComponent;
    static final int TRANSACTION_setWallpaperComponentChecked;
    static final int TRANSACTION_settingsRestored;
    static final int TRANSACTION_unregisterWallpaperColorsCallback;

    public void <init>()
    {
        android.app.IWallpaperManager$Stub r0;

        r0 := @this: android.app.IWallpaperManager$Stub;

        specialinvoke r0.<android.os.Binder: void <init>()>();

        virtualinvoke r0.<android.app.IWallpaperManager$Stub: void attachInterface(android.os.IInterface,java.lang.String)>(r0, "android.app.IWallpaperManager");

        return;
    }

    public static android.app.IWallpaperManager asInterface(android.os.IBinder)
    {
        android.os.IBinder r0;
        android.os.IInterface r1;
        android.app.IWallpaperManager$Stub$Proxy $r2;
        boolean $z0;
        android.app.IWallpaperManager $r3;

        r0 := @parameter0: android.os.IBinder;

        if r0 != null goto label1;

        return null;

     label1:
        r1 = interfaceinvoke r0.<android.os.IBinder: android.os.IInterface queryLocalInterface(java.lang.String)>("android.app.IWallpaperManager");

        if r1 == null goto label2;

        $z0 = r1 instanceof android.app.IWallpaperManager;

        if $z0 == 0 goto label2;

        $r3 = (android.app.IWallpaperManager) r1;

        return $r3;

     label2:
        $r2 = new android.app.IWallpaperManager$Stub$Proxy;

        specialinvoke $r2.<android.app.IWallpaperManager$Stub$Proxy: void <init>(android.os.IBinder)>(r0);

        return $r2;
    }

    public static android.app.IWallpaperManager getDefaultImpl()
    {
        android.app.IWallpaperManager $r0;

        $r0 = <android.app.IWallpaperManager$Stub$Proxy: android.app.IWallpaperManager sDefaultImpl>;

        return $r0;
    }

    public static java.lang.String getDefaultTransactionName(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label24;
            case 2: goto label23;
            case 3: goto label22;
            case 4: goto label21;
            case 5: goto label20;
            case 6: goto label19;
            case 7: goto label18;
            case 8: goto label17;
            case 9: goto label16;
            case 10: goto label15;
            case 11: goto label14;
            case 12: goto label13;
            case 13: goto label12;
            case 14: goto label11;
            case 15: goto label10;
            case 16: goto label09;
            case 17: goto label08;
            case 18: goto label07;
            case 19: goto label06;
            case 20: goto label05;
            case 21: goto label04;
            case 22: goto label03;
            case 23: goto label02;
            default: goto label01;
        };

     label01:
        return null;

     label02:
        return "setInAmbientMode";

     label03:
        return "unregisterWallpaperColorsCallback";

     label04:
        return "registerWallpaperColorsCallback";

     label05:
        return "getWallpaperColors";

     label06:
        return "setLockWallpaperCallback";

     label07:
        return "isWallpaperBackupEligible";

     label08:
        return "isSetWallpaperAllowed";

     label09:
        return "isWallpaperSupported";

     label10:
        return "settingsRestored";

     label11:
        return "getName";

     label12:
        return "setDisplayPadding";

     label13:
        return "getHeightHint";

     label14:
        return "getWidthHint";

     label15:
        return "setDimensionHints";

     label16:
        return "hasNamedWallpaper";

     label17:
        return "clearWallpaper";

     label18:
        return "getWallpaperInfo";

     label19:
        return "getWallpaperIdForUser";

     label20:
        return "getWallpaperWithFeature";

     label21:
        return "getWallpaper";

     label22:
        return "setWallpaperComponent";

     label23:
        return "setWallpaperComponentChecked";

     label24:
        return "setWallpaper";
    }

    public static boolean setDefaultImpl(android.app.IWallpaperManager)
    {
        android.app.IWallpaperManager r0, $r1;
        java.lang.IllegalStateException $r2;

        r0 := @parameter0: android.app.IWallpaperManager;

        $r1 = <android.app.IWallpaperManager$Stub$Proxy: android.app.IWallpaperManager sDefaultImpl>;

        if $r1 != null goto label2;

        if r0 == null goto label1;

        <android.app.IWallpaperManager$Stub$Proxy: android.app.IWallpaperManager sDefaultImpl> = r0;

        return 1;

     label1:
        return 0;

     label2:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("setDefaultImpl() called twice");

        throw $r2;
    }

    public android.os.IBinder asBinder()
    {
        android.app.IWallpaperManager$Stub r0;

        r0 := @this: android.app.IWallpaperManager$Stub;

        return r0;
    }

    public java.lang.String getTransactionName(int)
    {
        android.app.IWallpaperManager$Stub r0;
        int i0;
        java.lang.String $r1;

        r0 := @this: android.app.IWallpaperManager$Stub;

        i0 := @parameter0: int;

        $r1 = staticinvoke <android.app.IWallpaperManager$Stub: java.lang.String getDefaultTransactionName(int)>(i0);

        return $r1;
    }

    public boolean onTransact(int, android.os.Parcel, android.os.Parcel, int) throws android.os.RemoteException
    {
        android.app.IWallpaperManager$Stub r0;
        android.os.Parcel r1, r30;
        int i0, $i1, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, i33, i34, i35, i36, i37, i38, i39, i40, i41, i42, i43;
        long $l2;
        android.os.IBinder $r2, $r4, $r6, $r16, $r18, $r26;
        android.app.IWallpaperManagerCallback $r3, $r5, $r7, $r27, r37, r41;
        java.lang.String $r8, $r9, $r10, $r13, $r14, $r15, $r22, r32, r35, r36, r40, r46, r47;
        android.os.Parcelable$Creator $r11, $r20, $r23, $r28;
        java.lang.Object $r12, $r21, $r24, $r29;
        android.os.Bundle $r17, $r19, $r25;
        boolean $z0, z1, z2, z3, z4, z5, z6, z7;
        android.app.WallpaperColors r31;
        android.graphics.Rect r33, r48;
        android.app.WallpaperInfo r34;
        android.os.ParcelFileDescriptor r39, r43, r50;
        android.content.ComponentName r44, r45;

        r0 := @this: android.app.IWallpaperManager$Stub;

        i33 := @parameter0: int;

        r30 := @parameter1: android.os.Parcel;

        r1 := @parameter2: android.os.Parcel;

        i0 := @parameter3: int;

        if i33 == 1598968902 goto label46;

        z1 = 0;

        tableswitch(i33)
        {
            case 1: goto label39;
            case 2: goto label36;
            case 3: goto label33;
            case 4: goto label30;
            case 5: goto label27;
            case 6: goto label26;
            case 7: goto label23;
            case 8: goto label22;
            case 9: goto label21;
            case 10: goto label20;
            case 11: goto label19;
            case 12: goto label18;
            case 13: goto label15;
            case 14: goto label14;
            case 15: goto label13;
            case 16: goto label12;
            case 17: goto label11;
            case 18: goto label10;
            case 19: goto label09;
            case 20: goto label06;
            case 21: goto label05;
            case 22: goto label04;
            case 23: goto label02;
            default: goto label01;
        };

     label01:
        $z0 = specialinvoke r0.<android.os.Binder: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>(i33, r30, r1, i0);

        return $z0;

     label02:
        virtualinvoke r30.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.app.IWallpaperManager");

        $i1 = virtualinvoke r30.<android.os.Parcel: int readInt()>();

        if $i1 == 0 goto label03;

        z1 = 1;

     label03:
        $l2 = virtualinvoke r30.<android.os.Parcel: long readLong()>();

        virtualinvoke r0.<android.app.IWallpaperManager$Stub: void setInAmbientMode(boolean,long)>(z1, $l2);

        return 1;

     label04:
        virtualinvoke r30.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.app.IWallpaperManager");

        $r2 = virtualinvoke r30.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r3 = staticinvoke <android.app.IWallpaperManagerCallback$Stub: android.app.IWallpaperManagerCallback asInterface(android.os.IBinder)>($r2);

        $i3 = virtualinvoke r30.<android.os.Parcel: int readInt()>();

        $i4 = virtualinvoke r30.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.app.IWallpaperManager$Stub: void unregisterWallpaperColorsCallback(android.app.IWallpaperManagerCallback,int,int)>($r3, $i3, $i4);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label05:
        virtualinvoke r30.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.app.IWallpaperManager");

        $r4 = virtualinvoke r30.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r5 = staticinvoke <android.app.IWallpaperManagerCallback$Stub: android.app.IWallpaperManagerCallback asInterface(android.os.IBinder)>($r4);

        $i5 = virtualinvoke r30.<android.os.Parcel: int readInt()>();

        $i6 = virtualinvoke r30.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.app.IWallpaperManager$Stub: void registerWallpaperColorsCallback(android.app.IWallpaperManagerCallback,int,int)>($r5, $i5, $i6);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label06:
        virtualinvoke r30.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.app.IWallpaperManager");

        $i7 = virtualinvoke r30.<android.os.Parcel: int readInt()>();

        $i8 = virtualinvoke r30.<android.os.Parcel: int readInt()>();

        $i9 = virtualinvoke r30.<android.os.Parcel: int readInt()>();

        r31 = virtualinvoke r0.<android.app.IWallpaperManager$Stub: android.app.WallpaperColors getWallpaperColors(int,int,int)>($i7, $i8, $i9);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        if r31 == null goto label07;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r31.<android.app.WallpaperColors: void writeToParcel(android.os.Parcel,int)>(r1, 1);

        goto label08;

     label07:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label08:
        return 1;

     label09:
        virtualinvoke r30.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.app.IWallpaperManager");

        $r6 = virtualinvoke r30.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r7 = staticinvoke <android.app.IWallpaperManagerCallback$Stub: android.app.IWallpaperManagerCallback asInterface(android.os.IBinder)>($r6);

        z2 = virtualinvoke r0.<android.app.IWallpaperManager$Stub: boolean setLockWallpaperCallback(android.app.IWallpaperManagerCallback)>($r7);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i39 = (int) z2;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i39);

        return 1;

     label10:
        virtualinvoke r30.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.app.IWallpaperManager");

        $i10 = virtualinvoke r30.<android.os.Parcel: int readInt()>();

        $i11 = virtualinvoke r30.<android.os.Parcel: int readInt()>();

        z3 = virtualinvoke r0.<android.app.IWallpaperManager$Stub: boolean isWallpaperBackupEligible(int,int)>($i10, $i11);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i40 = (int) z3;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i40);

        return 1;

     label11:
        virtualinvoke r30.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.app.IWallpaperManager");

        $r8 = virtualinvoke r30.<android.os.Parcel: java.lang.String readString()>();

        z4 = virtualinvoke r0.<android.app.IWallpaperManager$Stub: boolean isSetWallpaperAllowed(java.lang.String)>($r8);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i41 = (int) z4;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i41);

        return 1;

     label12:
        virtualinvoke r30.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.app.IWallpaperManager");

        $r9 = virtualinvoke r30.<android.os.Parcel: java.lang.String readString()>();

        z5 = virtualinvoke r0.<android.app.IWallpaperManager$Stub: boolean isWallpaperSupported(java.lang.String)>($r9);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i42 = (int) z5;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i42);

        return 1;

     label13:
        virtualinvoke r30.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.app.IWallpaperManager");

        virtualinvoke r0.<android.app.IWallpaperManager$Stub: void settingsRestored()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label14:
        virtualinvoke r30.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.app.IWallpaperManager");

        r32 = virtualinvoke r0.<android.app.IWallpaperManager$Stub: java.lang.String getName()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r32);

        return 1;

     label15:
        virtualinvoke r30.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.app.IWallpaperManager");

        $i12 = virtualinvoke r30.<android.os.Parcel: int readInt()>();

        if $i12 == 0 goto label16;

        $r11 = <android.graphics.Rect: android.os.Parcelable$Creator CREATOR>;

        $r12 = interfaceinvoke $r11.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r30);

        r33 = (android.graphics.Rect) $r12;

        goto label17;

     label16:
        r33 = null;

     label17:
        $r10 = virtualinvoke r30.<android.os.Parcel: java.lang.String readString()>();

        $i13 = virtualinvoke r30.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.app.IWallpaperManager$Stub: void setDisplayPadding(android.graphics.Rect,java.lang.String,int)>(r33, $r10, $i13);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label18:
        virtualinvoke r30.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.app.IWallpaperManager");

        $i14 = virtualinvoke r30.<android.os.Parcel: int readInt()>();

        i34 = virtualinvoke r0.<android.app.IWallpaperManager$Stub: int getHeightHint(int)>($i14);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i34);

        return 1;

     label19:
        virtualinvoke r30.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.app.IWallpaperManager");

        $i15 = virtualinvoke r30.<android.os.Parcel: int readInt()>();

        i35 = virtualinvoke r0.<android.app.IWallpaperManager$Stub: int getWidthHint(int)>($i15);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i35);

        return 1;

     label20:
        virtualinvoke r30.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.app.IWallpaperManager");

        $i16 = virtualinvoke r30.<android.os.Parcel: int readInt()>();

        $i17 = virtualinvoke r30.<android.os.Parcel: int readInt()>();

        $r13 = virtualinvoke r30.<android.os.Parcel: java.lang.String readString()>();

        $i18 = virtualinvoke r30.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.app.IWallpaperManager$Stub: void setDimensionHints(int,int,java.lang.String,int)>($i16, $i17, $r13, $i18);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label21:
        virtualinvoke r30.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.app.IWallpaperManager");

        $r14 = virtualinvoke r30.<android.os.Parcel: java.lang.String readString()>();

        z6 = virtualinvoke r0.<android.app.IWallpaperManager$Stub: boolean hasNamedWallpaper(java.lang.String)>($r14);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i43 = (int) z6;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i43);

        return 1;

     label22:
        virtualinvoke r30.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.app.IWallpaperManager");

        $r15 = virtualinvoke r30.<android.os.Parcel: java.lang.String readString()>();

        $i19 = virtualinvoke r30.<android.os.Parcel: int readInt()>();

        $i20 = virtualinvoke r30.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.app.IWallpaperManager$Stub: void clearWallpaper(java.lang.String,int,int)>($r15, $i19, $i20);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label23:
        virtualinvoke r30.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.app.IWallpaperManager");

        $i21 = virtualinvoke r30.<android.os.Parcel: int readInt()>();

        r34 = virtualinvoke r0.<android.app.IWallpaperManager$Stub: android.app.WallpaperInfo getWallpaperInfo(int)>($i21);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        if r34 == null goto label24;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r34.<android.app.WallpaperInfo: void writeToParcel(android.os.Parcel,int)>(r1, 1);

        goto label25;

     label24:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label25:
        return 1;

     label26:
        virtualinvoke r30.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.app.IWallpaperManager");

        $i22 = virtualinvoke r30.<android.os.Parcel: int readInt()>();

        $i23 = virtualinvoke r30.<android.os.Parcel: int readInt()>();

        i36 = virtualinvoke r0.<android.app.IWallpaperManager$Stub: int getWallpaperIdForUser(int,int)>($i22, $i23);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i36);

        return 1;

     label27:
        virtualinvoke r30.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.app.IWallpaperManager");

        r35 = virtualinvoke r30.<android.os.Parcel: java.lang.String readString()>();

        r36 = virtualinvoke r30.<android.os.Parcel: java.lang.String readString()>();

        $r16 = virtualinvoke r30.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r37 = staticinvoke <android.app.IWallpaperManagerCallback$Stub: android.app.IWallpaperManagerCallback asInterface(android.os.IBinder)>($r16);

        i37 = virtualinvoke r30.<android.os.Parcel: int readInt()>();

        $r17 = new android.os.Bundle;

        specialinvoke $r17.<android.os.Bundle: void <init>()>();

        $i24 = virtualinvoke r30.<android.os.Parcel: int readInt()>();

        r39 = virtualinvoke r0.<android.app.IWallpaperManager$Stub: android.os.ParcelFileDescriptor getWallpaperWithFeature(java.lang.String,java.lang.String,android.app.IWallpaperManagerCallback,int,android.os.Bundle,int)>(r35, r36, r37, i37, $r17, $i24);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        if r39 == null goto label28;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r39.<android.os.ParcelFileDescriptor: void writeToParcel(android.os.Parcel,int)>(r1, 1);

        goto label29;

     label28:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label29:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke $r17.<android.os.Bundle: void writeToParcel(android.os.Parcel,int)>(r1, 1);

        return 1;

     label30:
        virtualinvoke r30.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.app.IWallpaperManager");

        r40 = virtualinvoke r30.<android.os.Parcel: java.lang.String readString()>();

        $r18 = virtualinvoke r30.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r41 = staticinvoke <android.app.IWallpaperManagerCallback$Stub: android.app.IWallpaperManagerCallback asInterface(android.os.IBinder)>($r18);

        i38 = virtualinvoke r30.<android.os.Parcel: int readInt()>();

        $r19 = new android.os.Bundle;

        specialinvoke $r19.<android.os.Bundle: void <init>()>();

        $i25 = virtualinvoke r30.<android.os.Parcel: int readInt()>();

        r43 = virtualinvoke r0.<android.app.IWallpaperManager$Stub: android.os.ParcelFileDescriptor getWallpaper(java.lang.String,android.app.IWallpaperManagerCallback,int,android.os.Bundle,int)>(r40, r41, i38, $r19, $i25);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        if r43 == null goto label31;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r43.<android.os.ParcelFileDescriptor: void writeToParcel(android.os.Parcel,int)>(r1, 1);

        goto label32;

     label31:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label32:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke $r19.<android.os.Bundle: void writeToParcel(android.os.Parcel,int)>(r1, 1);

        return 1;

     label33:
        virtualinvoke r30.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.app.IWallpaperManager");

        $i26 = virtualinvoke r30.<android.os.Parcel: int readInt()>();

        if $i26 == 0 goto label34;

        $r20 = <android.content.ComponentName: android.os.Parcelable$Creator CREATOR>;

        $r21 = interfaceinvoke $r20.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r30);

        r44 = (android.content.ComponentName) $r21;

        goto label35;

     label34:
        r44 = null;

     label35:
        virtualinvoke r0.<android.app.IWallpaperManager$Stub: void setWallpaperComponent(android.content.ComponentName)>(r44);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label36:
        virtualinvoke r30.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.app.IWallpaperManager");

        $i27 = virtualinvoke r30.<android.os.Parcel: int readInt()>();

        if $i27 == 0 goto label37;

        $r23 = <android.content.ComponentName: android.os.Parcelable$Creator CREATOR>;

        $r24 = interfaceinvoke $r23.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r30);

        r45 = (android.content.ComponentName) $r24;

        goto label38;

     label37:
        r45 = null;

     label38:
        $r22 = virtualinvoke r30.<android.os.Parcel: java.lang.String readString()>();

        $i28 = virtualinvoke r30.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.app.IWallpaperManager$Stub: void setWallpaperComponentChecked(android.content.ComponentName,java.lang.String,int)>(r45, $r22, $i28);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label39:
        virtualinvoke r30.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.app.IWallpaperManager");

        r46 = virtualinvoke r30.<android.os.Parcel: java.lang.String readString()>();

        r47 = virtualinvoke r30.<android.os.Parcel: java.lang.String readString()>();

        $i29 = virtualinvoke r30.<android.os.Parcel: int readInt()>();

        if $i29 == 0 goto label40;

        $r28 = <android.graphics.Rect: android.os.Parcelable$Creator CREATOR>;

        $r29 = interfaceinvoke $r28.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r30);

        r48 = (android.graphics.Rect) $r29;

        goto label41;

     label40:
        r48 = null;

     label41:
        $i30 = virtualinvoke r30.<android.os.Parcel: int readInt()>();

        if $i30 == 0 goto label42;

        z7 = 1;

        goto label43;

     label42:
        z7 = 0;

     label43:
        $r25 = new android.os.Bundle;

        specialinvoke $r25.<android.os.Bundle: void <init>()>();

        $i31 = virtualinvoke r30.<android.os.Parcel: int readInt()>();

        $r26 = virtualinvoke r30.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r27 = staticinvoke <android.app.IWallpaperManagerCallback$Stub: android.app.IWallpaperManagerCallback asInterface(android.os.IBinder)>($r26);

        $i32 = virtualinvoke r30.<android.os.Parcel: int readInt()>();

        r50 = virtualinvoke r0.<android.app.IWallpaperManager$Stub: android.os.ParcelFileDescriptor setWallpaper(java.lang.String,java.lang.String,android.graphics.Rect,boolean,android.os.Bundle,int,android.app.IWallpaperManagerCallback,int)>(r46, r47, r48, z7, $r25, $i31, $r27, $i32);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        if r50 == null goto label44;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r50.<android.os.ParcelFileDescriptor: void writeToParcel(android.os.Parcel,int)>(r1, 1);

        goto label45;

     label44:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label45:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke $r25.<android.os.Bundle: void writeToParcel(android.os.Parcel,int)>(r1, 1);

        return 1;

     label46:
        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>("android.app.IWallpaperManager");

        return 1;
    }

    public static void <clinit>()
    {
        <android.app.IWallpaperManager$Stub: int TRANSACTION_unregisterWallpaperColorsCallback> = 22;

        <android.app.IWallpaperManager$Stub: int TRANSACTION_settingsRestored> = 15;

        <android.app.IWallpaperManager$Stub: int TRANSACTION_setWallpaperComponentChecked> = 2;

        <android.app.IWallpaperManager$Stub: int TRANSACTION_setWallpaperComponent> = 3;

        <android.app.IWallpaperManager$Stub: int TRANSACTION_setWallpaper> = 1;

        <android.app.IWallpaperManager$Stub: int TRANSACTION_setLockWallpaperCallback> = 19;

        <android.app.IWallpaperManager$Stub: int TRANSACTION_setInAmbientMode> = 23;

        <android.app.IWallpaperManager$Stub: int TRANSACTION_setDisplayPadding> = 13;

        <android.app.IWallpaperManager$Stub: int TRANSACTION_setDimensionHints> = 10;

        <android.app.IWallpaperManager$Stub: int TRANSACTION_registerWallpaperColorsCallback> = 21;

        <android.app.IWallpaperManager$Stub: int TRANSACTION_isWallpaperSupported> = 16;

        <android.app.IWallpaperManager$Stub: int TRANSACTION_isWallpaperBackupEligible> = 18;

        <android.app.IWallpaperManager$Stub: int TRANSACTION_isSetWallpaperAllowed> = 17;

        <android.app.IWallpaperManager$Stub: int TRANSACTION_hasNamedWallpaper> = 9;

        <android.app.IWallpaperManager$Stub: int TRANSACTION_getWidthHint> = 11;

        <android.app.IWallpaperManager$Stub: int TRANSACTION_getWallpaperWithFeature> = 5;

        <android.app.IWallpaperManager$Stub: int TRANSACTION_getWallpaperInfo> = 7;

        <android.app.IWallpaperManager$Stub: int TRANSACTION_getWallpaperIdForUser> = 6;

        <android.app.IWallpaperManager$Stub: int TRANSACTION_getWallpaperColors> = 20;

        <android.app.IWallpaperManager$Stub: int TRANSACTION_getWallpaper> = 4;

        <android.app.IWallpaperManager$Stub: int TRANSACTION_getName> = 14;

        <android.app.IWallpaperManager$Stub: int TRANSACTION_getHeightHint> = 12;

        <android.app.IWallpaperManager$Stub: int TRANSACTION_clearWallpaper> = 8;

        <android.app.IWallpaperManager$Stub: java.lang.String DESCRIPTOR> = "android.app.IWallpaperManager";

        return;
    }
}
