public abstract class android.app.InstantAppResolverService extends android.app.Service
{
    private static final boolean DEBUG_INSTANT;
    public static final java.lang.String EXTRA_RESOLVE_INFO;
    public static final java.lang.String EXTRA_SEQUENCE;
    private static final java.lang.String TAG;
    android.os.Handler mHandler;

    static void <clinit>()
    {
        boolean $z0;

        <android.app.InstantAppResolverService: java.lang.String TAG> = "PackageManager";

        <android.app.InstantAppResolverService: java.lang.String EXTRA_SEQUENCE> = "android.app.extra.SEQUENCE";

        <android.app.InstantAppResolverService: java.lang.String EXTRA_RESOLVE_INFO> = "android.app.extra.RESOLVE_INFO";

        $z0 = <android.os.Build: boolean IS_DEBUGGABLE>;

        <android.app.InstantAppResolverService: boolean DEBUG_INSTANT> = $z0;

        return;
    }

    public void <init>()
    {
        android.app.InstantAppResolverService r0;

        r0 := @this: android.app.InstantAppResolverService;

        specialinvoke r0.<android.app.Service: void <init>()>();

        return;
    }

    static boolean access$000()
    {
        boolean $z0;

        $z0 = <android.app.InstantAppResolverService: boolean DEBUG_INSTANT>;

        return $z0;
    }

    public final void attachBaseContext(android.content.Context)
    {
        android.app.InstantAppResolverService r0;
        android.content.Context r1;
        android.app.InstantAppResolverService$ServiceHandler $r2;
        android.os.Looper $r3;

        r0 := @this: android.app.InstantAppResolverService;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.app.Service: void attachBaseContext(android.content.Context)>(r1);

        $r2 = new android.app.InstantAppResolverService$ServiceHandler;

        $r3 = virtualinvoke r0.<android.app.InstantAppResolverService: android.os.Looper getLooper()>();

        specialinvoke $r2.<android.app.InstantAppResolverService$ServiceHandler: void <init>(android.app.InstantAppResolverService,android.os.Looper)>(r0, $r3);

        r0.<android.app.InstantAppResolverService: android.os.Handler mHandler> = $r2;

        return;
    }

    android.os.Looper getLooper()
    {
        android.app.InstantAppResolverService r0;
        android.content.Context $r1;
        android.os.Looper $r2;

        r0 := @this: android.app.InstantAppResolverService;

        $r1 = virtualinvoke r0.<android.app.InstantAppResolverService: android.content.Context getBaseContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: android.os.Looper getMainLooper()>();

        return $r2;
    }

    public final android.os.IBinder onBind(android.content.Intent)
    {
        android.app.InstantAppResolverService r0;
        android.content.Intent r1;
        android.app.InstantAppResolverService$1 $r2;

        r0 := @this: android.app.InstantAppResolverService;

        r1 := @parameter0: android.content.Intent;

        $r2 = new android.app.InstantAppResolverService$1;

        specialinvoke $r2.<android.app.InstantAppResolverService$1: void <init>(android.app.InstantAppResolverService)>(r0);

        return $r2;
    }

    public void onGetInstantAppIntentFilter(android.content.Intent, int[], android.os.UserHandle, java.lang.String, android.app.InstantAppResolverService$InstantAppResolutionCallback)
    {
        android.app.InstantAppResolverService r0;
        android.content.Intent r1;
        int[] r2;
        android.os.UserHandle r3;
        java.lang.String r4;
        android.app.InstantAppResolverService$InstantAppResolutionCallback r5;

        r0 := @this: android.app.InstantAppResolverService;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: int[];

        r3 := @parameter2: android.os.UserHandle;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: android.app.InstantAppResolverService$InstantAppResolutionCallback;

        virtualinvoke r0.<android.app.InstantAppResolverService: void onGetInstantAppIntentFilter(android.content.Intent,int[],java.lang.String,android.app.InstantAppResolverService$InstantAppResolutionCallback)>(r1, r2, r4, r5);

        return;
    }

    public void onGetInstantAppIntentFilter(android.content.Intent, int[], java.lang.String, android.app.InstantAppResolverService$InstantAppResolutionCallback)
    {
        android.app.InstantAppResolverService r0;
        android.content.Intent r1;
        int[] r2;
        java.lang.String r3;
        android.app.InstantAppResolverService$InstantAppResolutionCallback r4;
        boolean $z0;
        java.util.List $r5;

        r0 := @this: android.app.InstantAppResolverService;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: int[];

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.app.InstantAppResolverService$InstantAppResolutionCallback;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("PackageManager", "New onGetInstantAppIntentFilter is not overridden");

        $z0 = virtualinvoke r1.<android.content.Intent: boolean isWebIntent()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<android.app.InstantAppResolverService: void onGetInstantAppIntentFilter(int[],java.lang.String,android.app.InstantAppResolverService$InstantAppResolutionCallback)>(r2, r3, r4);

        goto label2;

     label1:
        $r5 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        virtualinvoke r4.<android.app.InstantAppResolverService$InstantAppResolutionCallback: void onInstantAppResolveInfo(java.util.List)>($r5);

     label2:
        return;
    }

    public void onGetInstantAppIntentFilter(android.content.pm.InstantAppRequestInfo, android.app.InstantAppResolverService$InstantAppResolutionCallback)
    {
        android.app.InstantAppResolverService r0;
        android.content.pm.InstantAppRequestInfo r1;
        android.app.InstantAppResolverService$InstantAppResolutionCallback r2;
        android.content.Intent $r3;
        int[] $r4;
        android.os.UserHandle $r5;
        java.lang.String $r6;

        r0 := @this: android.app.InstantAppResolverService;

        r1 := @parameter0: android.content.pm.InstantAppRequestInfo;

        r2 := @parameter1: android.app.InstantAppResolverService$InstantAppResolutionCallback;

        $r3 = virtualinvoke r1.<android.content.pm.InstantAppRequestInfo: android.content.Intent getIntent()>();

        $r4 = virtualinvoke r1.<android.content.pm.InstantAppRequestInfo: int[] getHostDigestPrefix()>();

        $r5 = virtualinvoke r1.<android.content.pm.InstantAppRequestInfo: android.os.UserHandle getUserHandle()>();

        $r6 = virtualinvoke r1.<android.content.pm.InstantAppRequestInfo: java.lang.String getToken()>();

        virtualinvoke r0.<android.app.InstantAppResolverService: void onGetInstantAppIntentFilter(android.content.Intent,int[],android.os.UserHandle,java.lang.String,android.app.InstantAppResolverService$InstantAppResolutionCallback)>($r3, $r4, $r5, $r6, r2);

        return;
    }

    public void onGetInstantAppIntentFilter(int[], java.lang.String, android.app.InstantAppResolverService$InstantAppResolutionCallback)
    {
        android.app.InstantAppResolverService r0;
        int[] r1;
        java.lang.String r2;
        android.app.InstantAppResolverService$InstantAppResolutionCallback r3;
        java.lang.IllegalStateException $r4;

        r0 := @this: android.app.InstantAppResolverService;

        r1 := @parameter0: int[];

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.app.InstantAppResolverService$InstantAppResolutionCallback;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Must define onGetInstantAppIntentFilter");

        throw $r4;
    }

    public void onGetInstantAppResolveInfo(android.content.Intent, int[], android.os.UserHandle, java.lang.String, android.app.InstantAppResolverService$InstantAppResolutionCallback)
    {
        android.app.InstantAppResolverService r0;
        android.content.Intent r1;
        int[] r2;
        android.os.UserHandle r3;
        java.lang.String r4;
        android.app.InstantAppResolverService$InstantAppResolutionCallback r5;

        r0 := @this: android.app.InstantAppResolverService;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: int[];

        r3 := @parameter2: android.os.UserHandle;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: android.app.InstantAppResolverService$InstantAppResolutionCallback;

        virtualinvoke r0.<android.app.InstantAppResolverService: void onGetInstantAppResolveInfo(android.content.Intent,int[],java.lang.String,android.app.InstantAppResolverService$InstantAppResolutionCallback)>(r1, r2, r4, r5);

        return;
    }

    public void onGetInstantAppResolveInfo(android.content.Intent, int[], java.lang.String, android.app.InstantAppResolverService$InstantAppResolutionCallback)
    {
        android.app.InstantAppResolverService r0;
        android.content.Intent r1;
        int[] r2;
        java.lang.String r3;
        android.app.InstantAppResolverService$InstantAppResolutionCallback r4;
        boolean $z0;
        java.util.List $r5;

        r0 := @this: android.app.InstantAppResolverService;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: int[];

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.app.InstantAppResolverService$InstantAppResolutionCallback;

        $z0 = virtualinvoke r1.<android.content.Intent: boolean isWebIntent()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<android.app.InstantAppResolverService: void onGetInstantAppResolveInfo(int[],java.lang.String,android.app.InstantAppResolverService$InstantAppResolutionCallback)>(r2, r3, r4);

        goto label2;

     label1:
        $r5 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        virtualinvoke r4.<android.app.InstantAppResolverService$InstantAppResolutionCallback: void onInstantAppResolveInfo(java.util.List)>($r5);

     label2:
        return;
    }

    public void onGetInstantAppResolveInfo(android.content.pm.InstantAppRequestInfo, android.app.InstantAppResolverService$InstantAppResolutionCallback)
    {
        android.app.InstantAppResolverService r0;
        android.content.pm.InstantAppRequestInfo r1;
        android.app.InstantAppResolverService$InstantAppResolutionCallback r2;
        android.content.Intent $r3;
        int[] $r4;
        android.os.UserHandle $r5;
        java.lang.String $r6;

        r0 := @this: android.app.InstantAppResolverService;

        r1 := @parameter0: android.content.pm.InstantAppRequestInfo;

        r2 := @parameter1: android.app.InstantAppResolverService$InstantAppResolutionCallback;

        $r3 = virtualinvoke r1.<android.content.pm.InstantAppRequestInfo: android.content.Intent getIntent()>();

        $r4 = virtualinvoke r1.<android.content.pm.InstantAppRequestInfo: int[] getHostDigestPrefix()>();

        $r5 = virtualinvoke r1.<android.content.pm.InstantAppRequestInfo: android.os.UserHandle getUserHandle()>();

        $r6 = virtualinvoke r1.<android.content.pm.InstantAppRequestInfo: java.lang.String getToken()>();

        virtualinvoke r0.<android.app.InstantAppResolverService: void onGetInstantAppResolveInfo(android.content.Intent,int[],android.os.UserHandle,java.lang.String,android.app.InstantAppResolverService$InstantAppResolutionCallback)>($r3, $r4, $r5, $r6, r2);

        return;
    }

    public void onGetInstantAppResolveInfo(int[], java.lang.String, android.app.InstantAppResolverService$InstantAppResolutionCallback)
    {
        android.app.InstantAppResolverService r0;
        int[] r1;
        java.lang.String r2;
        android.app.InstantAppResolverService$InstantAppResolutionCallback r3;
        java.lang.IllegalStateException $r4;

        r0 := @this: android.app.InstantAppResolverService;

        r1 := @parameter0: int[];

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.app.InstantAppResolverService$InstantAppResolutionCallback;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Must define onGetInstantAppResolveInfo");

        throw $r4;
    }
}
