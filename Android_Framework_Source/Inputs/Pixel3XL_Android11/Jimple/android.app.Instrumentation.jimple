public class android.app.Instrumentation extends java.lang.Object
{
    public static final java.lang.String REPORT_KEY_IDENTIFIER;
    public static final java.lang.String REPORT_KEY_STREAMRESULT;
    private static final java.lang.String TAG;
    private java.util.List mActivityMonitors;
    private final java.lang.Object mAnimationCompleteLock;
    private android.content.Context mAppContext;
    private boolean mAutomaticPerformanceSnapshots;
    private android.content.ComponentName mComponent;
    private android.content.Context mInstrContext;
    private android.os.MessageQueue mMessageQueue;
    private android.os.Bundle mPerfMetrics;
    private android.os.PerformanceCollector mPerformanceCollector;
    private java.lang.Thread mRunner;
    private final java.lang.Object mSync;
    private android.app.ActivityThread mThread;
    private android.app.UiAutomation mUiAutomation;
    private android.app.IUiAutomationConnection mUiAutomationConnection;
    private java.util.List mWaitingActivities;
    private android.app.IInstrumentationWatcher mWatcher;

    public void <init>()
    {
        android.app.Instrumentation r0;
        java.lang.Object $r1, $r3;
        android.os.Bundle $r2;

        r0 := @this: android.app.Instrumentation;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        r0.<android.app.Instrumentation: java.lang.Object mSync> = $r1;

        r0.<android.app.Instrumentation: android.app.ActivityThread mThread> = null;

        r0.<android.app.Instrumentation: android.os.MessageQueue mMessageQueue> = null;

        r0.<android.app.Instrumentation: boolean mAutomaticPerformanceSnapshots> = 0;

        $r2 = new android.os.Bundle;

        specialinvoke $r2.<android.os.Bundle: void <init>()>();

        r0.<android.app.Instrumentation: android.os.Bundle mPerfMetrics> = $r2;

        $r3 = new java.lang.Object;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        r0.<android.app.Instrumentation: java.lang.Object mAnimationCompleteLock> = $r3;

        return;
    }

    static boolean access$100(android.app.Instrumentation)
    {
        android.app.Instrumentation r0;
        boolean $z0;

        r0 := @parameter0: android.app.Instrumentation;

        $z0 = r0.<android.app.Instrumentation: boolean mAutomaticPerformanceSnapshots>;

        return $z0;
    }

    static java.lang.Object access$200(android.app.Instrumentation)
    {
        android.app.Instrumentation r0;
        java.lang.Object $r1;

        r0 := @parameter0: android.app.Instrumentation;

        $r1 = r0.<android.app.Instrumentation: java.lang.Object mSync>;

        return $r1;
    }

    static java.util.List access$300(android.app.Instrumentation)
    {
        android.app.Instrumentation r0;
        java.util.List $r1;

        r0 := @parameter0: android.app.Instrumentation;

        $r1 = r0.<android.app.Instrumentation: java.util.List mWaitingActivities>;

        return $r1;
    }

    private void addValue(java.lang.String, int, android.os.Bundle)
    {
        android.app.Instrumentation r0;
        int i0;
        android.os.Bundle r1;
        boolean $z0;
        java.util.ArrayList $r3, r7;
        java.lang.Integer $r4, $r5;
        java.lang.String r6;

        r0 := @this: android.app.Instrumentation;

        r6 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 := @parameter2: android.os.Bundle;

        $z0 = virtualinvoke r1.<android.os.Bundle: boolean containsKey(java.lang.String)>(r6);

        if $z0 == 0 goto label2;

        r7 = virtualinvoke r1.<android.os.Bundle: java.util.ArrayList getIntegerArrayList(java.lang.String)>(r6);

        if r7 == null goto label1;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>($r5);

     label1:
        goto label3;

     label2:
        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        virtualinvoke r1.<android.os.Bundle: void putIntegerArrayList(java.lang.String,java.util.ArrayList)>(r6, $r3);

     label3:
        return;
    }

    private void checkInstrumenting(java.lang.String)
    {
        android.app.Instrumentation r0;
        java.lang.String r1, $r8;
        android.content.Context $r3;
        java.lang.StringBuilder $r4;
        java.lang.RuntimeException $r7;

        r0 := @this: android.app.Instrumentation;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<android.app.Instrumentation: android.content.Context mInstrContext>;

        if $r3 == null goto label1;

        return;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cannot be called outside of instrumented processes");

        $r7 = new java.lang.RuntimeException;

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>($r8);

        throw $r7;
    }

    public static void checkStartActivityResult(int, java.lang.Object)
    {
        int i0;
        java.lang.Object r0;
        boolean $z0, $z1;
        java.lang.IllegalStateException $r1, $r2, $r36, $r37;
        java.lang.StringBuilder $r3, $r10, $r20, $r26, $r31, $r38;
        android.content.ActivityNotFoundException $r6, $r17;
        java.lang.String $r7, $r14, $r18, $r24, $r30, $r35, $r44;
        android.content.Intent $r8, $r12;
        android.content.ComponentName $r9, $r13;
        android.util.AndroidRuntimeException $r19, $r29, $r43;
        java.lang.SecurityException $r23, $r34;
        java.lang.IllegalArgumentException $r25;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.Object;

        $z0 = staticinvoke <android.app.ActivityManager: boolean isStartResultFatalError(int)>(i0);

        if $z0 != 0 goto label01;

        return;

     label01:
        tableswitch(i0)
        {
            case -100: goto label13;
            case -99: goto label12;
            case -98: goto label02;
            case -97: goto label11;
            case -96: goto label10;
            case -95: goto label09;
            case -94: goto label08;
            case -93: goto label07;
            case -92: goto label05;
            case -91: goto label05;
            case -90: goto label04;
            case -89: goto label03;
            default: goto label02;
        };

     label02:
        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown error code ");

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" when starting ");

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r43 = new android.util.AndroidRuntimeException;

        $r44 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r43.<android.util.AndroidRuntimeException: void <init>(java.lang.String)>($r44);

        throw $r43;

     label03:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Session calling startAssistantActivity does not match active session");

        throw $r1;

     label04:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot start assistant activity on a hidden session");

        throw $r2;

     label05:
        $z1 = r0 instanceof android.content.Intent;

        if $z1 == 0 goto label06;

        $r8 = (android.content.Intent) r0;

        $r9 = virtualinvoke $r8.<android.content.Intent: android.content.ComponentName getComponent()>();

        if $r9 == null goto label06;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to find explicit activity class ");

        $r12 = (android.content.Intent) r0;

        $r13 = virtualinvoke $r12.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r14 = virtualinvoke $r13.<android.content.ComponentName: java.lang.String toShortString()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; have you declared this activity in your AndroidManifest.xml?");

        $r17 = new android.content.ActivityNotFoundException;

        $r18 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<android.content.ActivityNotFoundException: void <init>(java.lang.String)>($r18);

        throw $r17;

     label06:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No Activity found to handle ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r6 = new android.content.ActivityNotFoundException;

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<android.content.ActivityNotFoundException: void <init>(java.lang.String)>($r7);

        throw $r6;

     label07:
        $r19 = new android.util.AndroidRuntimeException;

        specialinvoke $r19.<android.util.AndroidRuntimeException: void <init>(java.lang.String)>("FORWARD_RESULT_FLAG used while also requesting a result");

        throw $r19;

     label08:
        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not allowed to start activity ");

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r23 = new java.lang.SecurityException;

        $r24 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r23.<java.lang.SecurityException: void <init>(java.lang.String)>($r24);

        throw $r23;

     label09:
        $r25 = new java.lang.IllegalArgumentException;

        specialinvoke $r25.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("PendingIntent is not an activity");

        throw $r25;

     label10:
        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Activity could not be started for ");

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r29 = new android.util.AndroidRuntimeException;

        $r30 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r29.<android.util.AndroidRuntimeException: void <init>(java.lang.String)>($r30);

        throw $r29;

     label11:
        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Starting under voice control not allowed for: ");

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r34 = new java.lang.SecurityException;

        $r35 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r34.<java.lang.SecurityException: void <init>(java.lang.String)>($r35);

        throw $r34;

     label12:
        $r36 = new java.lang.IllegalStateException;

        specialinvoke $r36.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Session calling startVoiceActivity does not match active session");

        throw $r36;

     label13:
        $r37 = new java.lang.IllegalStateException;

        specialinvoke $r37.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot start voice activity on a hidden session");

        throw $r37;
    }

    private android.app.AppComponentFactory getFactory(java.lang.String)
    {
        android.app.Instrumentation r0;
        android.app.AppComponentFactory $r1, $r5, $r6;
        android.app.ActivityThread $r2, r8;
        android.app.ContextImpl $r3;
        java.lang.Throwable $r4;
        java.lang.String r7;
        android.app.LoadedApk r9, r10;

        r0 := @this: android.app.Instrumentation;

        r7 := @parameter0: java.lang.String;

        if r7 != null goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Instrumentation", "No pkg specified, disabling AppComponentFactory");

        $r6 = <android.app.AppComponentFactory: android.app.AppComponentFactory DEFAULT>;

        return $r6;

     label1:
        r8 = r0.<android.app.Instrumentation: android.app.ActivityThread mThread>;

        if r8 != null goto label2;

        $r4 = new java.lang.Throwable;

        specialinvoke $r4.<java.lang.Throwable: void <init>()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("Instrumentation", "Uninitialized ActivityThread, likely app-created Instrumentation, disabling AppComponentFactory", $r4);

        $r5 = <android.app.AppComponentFactory: android.app.AppComponentFactory DEFAULT>;

        return $r5;

     label2:
        r9 = virtualinvoke r8.<android.app.ActivityThread: android.app.LoadedApk peekPackageInfo(java.lang.String,boolean)>(r7, 1);

        r10 = r9;

        if r9 != null goto label3;

        $r2 = r0.<android.app.Instrumentation: android.app.ActivityThread mThread>;

        $r3 = virtualinvoke $r2.<android.app.ActivityThread: android.app.ContextImpl getSystemContext()>();

        r10 = $r3.<android.app.ContextImpl: android.app.LoadedApk mPackageInfo>;

     label3:
        $r1 = virtualinvoke r10.<android.app.LoadedApk: android.app.AppComponentFactory getAppFactory()>();

        return $r1;
    }

    public static android.app.Application newApplication(java.lang.Class, android.content.Context) throws java.lang.InstantiationException, java.lang.IllegalAccessException, java.lang.ClassNotFoundException
    {
        android.content.Context r0;
        java.lang.Object $r1;
        java.lang.Class r2;
        android.app.Application r3;

        r2 := @parameter0: java.lang.Class;

        r0 := @parameter1: android.content.Context;

        $r1 = virtualinvoke r2.<java.lang.Class: java.lang.Object newInstance()>();

        r3 = (android.app.Application) $r1;

        virtualinvoke r3.<android.app.Application: void attach(android.content.Context)>(r0);

        return r3;
    }

    private void postPerformCreate(android.app.Activity)
    {
        android.app.Instrumentation r0;
        java.lang.Object r1, $r5;
        int i0, i1;
        java.util.List $r2, $r3, $r4;
        android.app.Instrumentation$ActivityMonitor $r6;
        android.content.Intent $r7;
        java.lang.Throwable $r8;
        android.app.Activity r9;

        r0 := @this: android.app.Instrumentation;

        r9 := @parameter0: android.app.Activity;

        $r2 = r0.<android.app.Instrumentation: java.util.List mActivityMonitors>;

        if $r2 == null goto label11;

        r1 = r0.<android.app.Instrumentation: java.lang.Object mSync>;

        entermonitor r1;

     label01:
        $r3 = r0.<android.app.Instrumentation: java.util.List mActivityMonitors>;

        i0 = interfaceinvoke $r3.<java.util.List: int size()>();

     label02:
        i1 = 0;

     label03:
        if i1 >= i0 goto label06;

     label04:
        $r4 = r0.<android.app.Instrumentation: java.util.List mActivityMonitors>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i1);

        $r6 = (android.app.Instrumentation$ActivityMonitor) $r5;

        $r7 = virtualinvoke r9.<android.app.Activity: android.content.Intent getIntent()>();

        virtualinvoke $r6.<android.app.Instrumentation$ActivityMonitor: boolean match(android.content.Context,android.app.Activity,android.content.Intent)>(r9, r9, $r7);

     label05:
        i1 = i1 + 1;

        goto label03;

     label06:
        exitmonitor r1;

     label07:
        goto label11;

     label08:
        $r8 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r8;

     label11:
        return;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    private void prePerformCreate(android.app.Activity)
    {
        android.app.Instrumentation r0;
        java.lang.Object r1, $r8;
        int i0, i1;
        android.app.Instrumentation$ActivityWaiter r2;
        android.os.MessageQueue r3;
        android.app.Instrumentation$ActivityGoing r4;
        java.util.List $r5, $r6, $r7;
        android.content.Intent $r9, $r10;
        boolean $z0;
        java.lang.Throwable $r11;
        android.app.Activity r12;

        r0 := @this: android.app.Instrumentation;

        r12 := @parameter0: android.app.Activity;

        $r5 = r0.<android.app.Instrumentation: java.util.List mWaitingActivities>;

        if $r5 == null goto label11;

        r1 = r0.<android.app.Instrumentation: java.lang.Object mSync>;

        entermonitor r1;

     label01:
        $r6 = r0.<android.app.Instrumentation: java.util.List mWaitingActivities>;

        i0 = interfaceinvoke $r6.<java.util.List: int size()>();

     label02:
        i1 = 0;

     label03:
        if i1 >= i0 goto label06;

     label04:
        $r7 = r0.<android.app.Instrumentation: java.util.List mWaitingActivities>;

        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(i1);

        r2 = (android.app.Instrumentation$ActivityWaiter) $r8;

        $r9 = r2.<android.app.Instrumentation$ActivityWaiter: android.content.Intent intent>;

        $r10 = virtualinvoke r12.<android.app.Activity: android.content.Intent getIntent()>();

        $z0 = virtualinvoke $r9.<android.content.Intent: boolean filterEquals(android.content.Intent)>($r10);

        if $z0 == 0 goto label05;

        r2.<android.app.Instrumentation$ActivityWaiter: android.app.Activity activity> = r12;

        r3 = r0.<android.app.Instrumentation: android.os.MessageQueue mMessageQueue>;

        r4 = new android.app.Instrumentation$ActivityGoing;

        specialinvoke r4.<android.app.Instrumentation$ActivityGoing: void <init>(android.app.Instrumentation,android.app.Instrumentation$ActivityWaiter)>(r0, r2);

        virtualinvoke r3.<android.os.MessageQueue: void addIdleHandler(android.os.MessageQueue$IdleHandler)>(r4);

     label05:
        i1 = i1 + 1;

        goto label03;

     label06:
        exitmonitor r1;

     label07:
        goto label11;

     label08:
        $r11 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r11;

     label11:
        return;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    private final void validateNotAppThread()
    {
        android.app.Instrumentation r0;
        android.os.Looper $r1, $r2;
        java.lang.RuntimeException $r3;

        r0 := @this: android.app.Instrumentation;

        $r1 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        $r2 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        if $r1 == $r2 goto label1;

        return;

     label1:
        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("This method can not be called from the main application thread");

        throw $r3;
    }

    private void waitForEnterAnimationComplete(android.app.Activity)
    {
        android.app.Instrumentation r0;
        java.lang.Object r1, $r2;
        long l0, l1, $l3, l4;
        byte $b2;
        boolean $z0;
        java.lang.Throwable $r3, $r4;
        android.app.Activity r5;

        r0 := @this: android.app.Instrumentation;

        r5 := @parameter0: android.app.Activity;

        r1 = r0.<android.app.Instrumentation: java.lang.Object mAnimationCompleteLock>;

        entermonitor r1;

        l4 = 5000L;

     label1:
        $b2 = l4 cmp 0L;

        if $b2 <= 0 goto label6;

     label2:
        $z0 = r5.<android.app.Activity: boolean mEnterAnimationComplete>;

        if $z0 != 0 goto label6;

        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r2 = r0.<android.app.Instrumentation: java.lang.Object mAnimationCompleteLock>;

        virtualinvoke $r2.<java.lang.Object: void wait(long)>(l4);

        l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

     label3:
        $l3 = l1 - l0;

        l4 = l4 - $l3;

        goto label1;

     label4:
        $r4 := @caughtexception;

        goto label8;

     label5:
        $r3 := @caughtexception;

        goto label6;

     label6:
        exitmonitor r1;

     label7:
        return;

     label8:
        exitmonitor r1;

     label9:
        throw $r4;

        catch java.lang.InterruptedException from label2 to label3 with label5;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label6 to label7 with label4;
        catch java.lang.Throwable from label8 to label9 with label4;
    }

    public android.os.TestLooperManager acquireLooperManager(android.os.Looper)
    {
        android.app.Instrumentation r0;
        android.os.Looper r1;
        android.os.TestLooperManager $r2;

        r0 := @this: android.app.Instrumentation;

        r1 := @parameter0: android.os.Looper;

        specialinvoke r0.<android.app.Instrumentation: void checkInstrumenting(java.lang.String)>("acquireLooperManager");

        $r2 = new android.os.TestLooperManager;

        specialinvoke $r2.<android.os.TestLooperManager: void <init>(android.os.Looper)>(r1);

        return $r2;
    }

    public android.app.Instrumentation$ActivityMonitor addMonitor(android.content.IntentFilter, android.app.Instrumentation$ActivityResult, boolean)
    {
        android.app.Instrumentation r0;
        android.app.Instrumentation$ActivityResult r1;
        boolean z0;
        android.app.Instrumentation$ActivityMonitor $r2;
        android.content.IntentFilter r3;

        r0 := @this: android.app.Instrumentation;

        r3 := @parameter0: android.content.IntentFilter;

        r1 := @parameter1: android.app.Instrumentation$ActivityResult;

        z0 := @parameter2: boolean;

        $r2 = new android.app.Instrumentation$ActivityMonitor;

        specialinvoke $r2.<android.app.Instrumentation$ActivityMonitor: void <init>(android.content.IntentFilter,android.app.Instrumentation$ActivityResult,boolean)>(r3, r1, z0);

        virtualinvoke r0.<android.app.Instrumentation: void addMonitor(android.app.Instrumentation$ActivityMonitor)>($r2);

        return $r2;
    }

    public android.app.Instrumentation$ActivityMonitor addMonitor(java.lang.String, android.app.Instrumentation$ActivityResult, boolean)
    {
        android.app.Instrumentation r0;
        android.app.Instrumentation$ActivityResult r1;
        boolean z0;
        android.app.Instrumentation$ActivityMonitor $r2;
        java.lang.String r3;

        r0 := @this: android.app.Instrumentation;

        r3 := @parameter0: java.lang.String;

        r1 := @parameter1: android.app.Instrumentation$ActivityResult;

        z0 := @parameter2: boolean;

        $r2 = new android.app.Instrumentation$ActivityMonitor;

        specialinvoke $r2.<android.app.Instrumentation$ActivityMonitor: void <init>(java.lang.String,android.app.Instrumentation$ActivityResult,boolean)>(r3, r1, z0);

        virtualinvoke r0.<android.app.Instrumentation: void addMonitor(android.app.Instrumentation$ActivityMonitor)>($r2);

        return $r2;
    }

    public void addMonitor(android.app.Instrumentation$ActivityMonitor)
    {
        android.app.Instrumentation r0;
        java.lang.Object r1;
        java.util.ArrayList r2;
        java.util.List $r3, $r4;
        java.lang.Throwable $r5;
        android.app.Instrumentation$ActivityMonitor r6;

        r0 := @this: android.app.Instrumentation;

        r6 := @parameter0: android.app.Instrumentation$ActivityMonitor;

        r1 = r0.<android.app.Instrumentation: java.lang.Object mSync>;

        entermonitor r1;

     label1:
        $r3 = r0.<android.app.Instrumentation: java.util.List mActivityMonitors>;

        if $r3 != null goto label2;

        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        r0.<android.app.Instrumentation: java.util.List mActivityMonitors> = r2;

     label2:
        $r4 = r0.<android.app.Instrumentation: java.util.List mActivityMonitors>;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>(r6);

        exitmonitor r1;

     label3:
        return;

     label4:
        $r5 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void addResults(android.os.Bundle)
    {
        android.app.Instrumentation r0;
        android.app.IActivityManager r1;
        android.app.ActivityThread $r2;
        android.app.ActivityThread$ApplicationThread $r3;
        android.os.RemoteException $r4;
        java.lang.RuntimeException $r5;
        android.os.Bundle r6;

        r0 := @this: android.app.Instrumentation;

        r6 := @parameter0: android.os.Bundle;

        r1 = staticinvoke <android.app.ActivityManager: android.app.IActivityManager getService()>();

     label1:
        $r2 = r0.<android.app.Instrumentation: android.app.ActivityThread mThread>;

        $r3 = virtualinvoke $r2.<android.app.ActivityThread: android.app.ActivityThread$ApplicationThread getApplicationThread()>();

        interfaceinvoke r1.<android.app.IActivityManager: void addInstrumentationResults(android.app.IApplicationThread,android.os.Bundle)>($r3, r6);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        $r5 = virtualinvoke $r4.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    final void basicInit(android.app.ActivityThread)
    {
        android.app.Instrumentation r0;
        android.app.ActivityThread r1;

        r0 := @this: android.app.Instrumentation;

        r1 := @parameter0: android.app.ActivityThread;

        r0.<android.app.Instrumentation: android.app.ActivityThread mThread> = r1;

        return;
    }

    public void callActivityOnCreate(android.app.Activity, android.os.Bundle)
    {
        android.app.Instrumentation r0;
        android.app.Activity r1;
        android.os.Bundle r2;

        r0 := @this: android.app.Instrumentation;

        r1 := @parameter0: android.app.Activity;

        r2 := @parameter1: android.os.Bundle;

        specialinvoke r0.<android.app.Instrumentation: void prePerformCreate(android.app.Activity)>(r1);

        virtualinvoke r1.<android.app.Activity: void performCreate(android.os.Bundle)>(r2);

        specialinvoke r0.<android.app.Instrumentation: void postPerformCreate(android.app.Activity)>(r1);

        return;
    }

    public void callActivityOnCreate(android.app.Activity, android.os.Bundle, android.os.PersistableBundle)
    {
        android.app.Instrumentation r0;
        android.app.Activity r1;
        android.os.Bundle r2;
        android.os.PersistableBundle r3;

        r0 := @this: android.app.Instrumentation;

        r1 := @parameter0: android.app.Activity;

        r2 := @parameter1: android.os.Bundle;

        r3 := @parameter2: android.os.PersistableBundle;

        specialinvoke r0.<android.app.Instrumentation: void prePerformCreate(android.app.Activity)>(r1);

        virtualinvoke r1.<android.app.Activity: void performCreate(android.os.Bundle,android.os.PersistableBundle)>(r2, r3);

        specialinvoke r0.<android.app.Instrumentation: void postPerformCreate(android.app.Activity)>(r1);

        return;
    }

    public void callActivityOnDestroy(android.app.Activity)
    {
        android.app.Instrumentation r0;
        android.app.Activity r1;

        r0 := @this: android.app.Instrumentation;

        r1 := @parameter0: android.app.Activity;

        virtualinvoke r1.<android.app.Activity: void performDestroy()>();

        return;
    }

    public void callActivityOnNewIntent(android.app.Activity, android.content.Intent)
    {
        android.app.Instrumentation r0;
        android.app.Activity r1;
        android.content.Intent r2;

        r0 := @this: android.app.Instrumentation;

        r1 := @parameter0: android.app.Activity;

        r2 := @parameter1: android.content.Intent;

        virtualinvoke r1.<android.app.Activity: void performNewIntent(android.content.Intent)>(r2);

        return;
    }

    public void callActivityOnNewIntent(android.app.Activity, com.android.internal.content.ReferrerIntent)
    {
        android.app.Instrumentation r0;
        android.app.Activity r1;
        java.lang.String r2, $r4;
        android.content.Intent r3, r8;
        java.lang.Throwable $r5;
        com.android.internal.content.ReferrerIntent r6;

        r0 := @this: android.app.Instrumentation;

        r1 := @parameter0: android.app.Activity;

        r6 := @parameter1: com.android.internal.content.ReferrerIntent;

        r2 = r1.<android.app.Activity: java.lang.String mReferrer>;

        if r6 == null goto label04;

     label01:
        $r4 = r6.<com.android.internal.content.ReferrerIntent: java.lang.String mReferrer>;

        r1.<android.app.Activity: java.lang.String mReferrer> = $r4;

     label02:
        goto label04;

     label03:
        $r5 := @caughtexception;

        goto label10;

     label04:
        if r6 == null goto label07;

     label05:
        r3 = new android.content.Intent;

        specialinvoke r3.<android.content.Intent: void <init>(android.content.Intent)>(r6);

     label06:
        r8 = r3;

        goto label08;

     label07:
        r8 = null;

     label08:
        virtualinvoke r0.<android.app.Instrumentation: void callActivityOnNewIntent(android.app.Activity,android.content.Intent)>(r1, r8);

     label09:
        r1.<android.app.Activity: java.lang.String mReferrer> = r2;

        return;

     label10:
        r1.<android.app.Activity: java.lang.String mReferrer> = r2;

        throw $r5;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label05 to label06 with label03;
        catch java.lang.Throwable from label08 to label09 with label03;
    }

    public void callActivityOnPause(android.app.Activity)
    {
        android.app.Instrumentation r0;
        android.app.Activity r1;

        r0 := @this: android.app.Instrumentation;

        r1 := @parameter0: android.app.Activity;

        virtualinvoke r1.<android.app.Activity: void performPause()>();

        return;
    }

    public void callActivityOnPictureInPictureRequested(android.app.Activity)
    {
        android.app.Instrumentation r0;
        android.app.Activity r1;

        r0 := @this: android.app.Instrumentation;

        r1 := @parameter0: android.app.Activity;

        virtualinvoke r1.<android.app.Activity: boolean onPictureInPictureRequested()>();

        return;
    }

    public void callActivityOnPostCreate(android.app.Activity, android.os.Bundle)
    {
        android.app.Instrumentation r0;
        android.app.Activity r1;
        android.os.Bundle r2;

        r0 := @this: android.app.Instrumentation;

        r1 := @parameter0: android.app.Activity;

        r2 := @parameter1: android.os.Bundle;

        virtualinvoke r1.<android.app.Activity: void onPostCreate(android.os.Bundle)>(r2);

        return;
    }

    public void callActivityOnPostCreate(android.app.Activity, android.os.Bundle, android.os.PersistableBundle)
    {
        android.app.Instrumentation r0;
        android.app.Activity r1;
        android.os.Bundle r2;
        android.os.PersistableBundle r3;

        r0 := @this: android.app.Instrumentation;

        r1 := @parameter0: android.app.Activity;

        r2 := @parameter1: android.os.Bundle;

        r3 := @parameter2: android.os.PersistableBundle;

        virtualinvoke r1.<android.app.Activity: void onPostCreate(android.os.Bundle,android.os.PersistableBundle)>(r2, r3);

        return;
    }

    public void callActivityOnRestart(android.app.Activity)
    {
        android.app.Instrumentation r0;
        android.app.Activity r1;

        r0 := @this: android.app.Instrumentation;

        r1 := @parameter0: android.app.Activity;

        virtualinvoke r1.<android.app.Activity: void onRestart()>();

        return;
    }

    public void callActivityOnRestoreInstanceState(android.app.Activity, android.os.Bundle)
    {
        android.app.Instrumentation r0;
        android.app.Activity r1;
        android.os.Bundle r2;

        r0 := @this: android.app.Instrumentation;

        r1 := @parameter0: android.app.Activity;

        r2 := @parameter1: android.os.Bundle;

        virtualinvoke r1.<android.app.Activity: void performRestoreInstanceState(android.os.Bundle)>(r2);

        return;
    }

    public void callActivityOnRestoreInstanceState(android.app.Activity, android.os.Bundle, android.os.PersistableBundle)
    {
        android.app.Instrumentation r0;
        android.app.Activity r1;
        android.os.Bundle r2;
        android.os.PersistableBundle r3;

        r0 := @this: android.app.Instrumentation;

        r1 := @parameter0: android.app.Activity;

        r2 := @parameter1: android.os.Bundle;

        r3 := @parameter2: android.os.PersistableBundle;

        virtualinvoke r1.<android.app.Activity: void performRestoreInstanceState(android.os.Bundle,android.os.PersistableBundle)>(r2, r3);

        return;
    }

    public void callActivityOnResume(android.app.Activity)
    {
        android.app.Instrumentation r0;
        java.lang.Object r1, $r5;
        int i0, i1;
        java.util.List $r2, $r3, $r4;
        android.app.Instrumentation$ActivityMonitor $r6;
        android.content.Intent $r7;
        java.lang.Throwable $r8;
        android.app.Activity r9;

        r0 := @this: android.app.Instrumentation;

        r9 := @parameter0: android.app.Activity;

        r9.<android.app.Activity: boolean mResumed> = 1;

        virtualinvoke r9.<android.app.Activity: void onResume()>();

        $r2 = r0.<android.app.Instrumentation: java.util.List mActivityMonitors>;

        if $r2 == null goto label11;

        r1 = r0.<android.app.Instrumentation: java.lang.Object mSync>;

        entermonitor r1;

     label01:
        $r3 = r0.<android.app.Instrumentation: java.util.List mActivityMonitors>;

        i0 = interfaceinvoke $r3.<java.util.List: int size()>();

     label02:
        i1 = 0;

     label03:
        if i1 >= i0 goto label06;

     label04:
        $r4 = r0.<android.app.Instrumentation: java.util.List mActivityMonitors>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i1);

        $r6 = (android.app.Instrumentation$ActivityMonitor) $r5;

        $r7 = virtualinvoke r9.<android.app.Activity: android.content.Intent getIntent()>();

        virtualinvoke $r6.<android.app.Instrumentation$ActivityMonitor: boolean match(android.content.Context,android.app.Activity,android.content.Intent)>(r9, r9, $r7);

     label05:
        i1 = i1 + 1;

        goto label03;

     label06:
        exitmonitor r1;

     label07:
        goto label11;

     label08:
        $r8 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r8;

     label11:
        return;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public void callActivityOnSaveInstanceState(android.app.Activity, android.os.Bundle)
    {
        android.app.Instrumentation r0;
        android.app.Activity r1;
        android.os.Bundle r2;

        r0 := @this: android.app.Instrumentation;

        r1 := @parameter0: android.app.Activity;

        r2 := @parameter1: android.os.Bundle;

        virtualinvoke r1.<android.app.Activity: void performSaveInstanceState(android.os.Bundle)>(r2);

        return;
    }

    public void callActivityOnSaveInstanceState(android.app.Activity, android.os.Bundle, android.os.PersistableBundle)
    {
        android.app.Instrumentation r0;
        android.app.Activity r1;
        android.os.Bundle r2;
        android.os.PersistableBundle r3;

        r0 := @this: android.app.Instrumentation;

        r1 := @parameter0: android.app.Activity;

        r2 := @parameter1: android.os.Bundle;

        r3 := @parameter2: android.os.PersistableBundle;

        virtualinvoke r1.<android.app.Activity: void performSaveInstanceState(android.os.Bundle,android.os.PersistableBundle)>(r2, r3);

        return;
    }

    public void callActivityOnStart(android.app.Activity)
    {
        android.app.Instrumentation r0;
        android.app.Activity r1;

        r0 := @this: android.app.Instrumentation;

        r1 := @parameter0: android.app.Activity;

        virtualinvoke r1.<android.app.Activity: void onStart()>();

        return;
    }

    public void callActivityOnStop(android.app.Activity)
    {
        android.app.Instrumentation r0;
        android.app.Activity r1;

        r0 := @this: android.app.Instrumentation;

        r1 := @parameter0: android.app.Activity;

        virtualinvoke r1.<android.app.Activity: void onStop()>();

        return;
    }

    public void callActivityOnUserLeaving(android.app.Activity)
    {
        android.app.Instrumentation r0;
        android.app.Activity r1;

        r0 := @this: android.app.Instrumentation;

        r1 := @parameter0: android.app.Activity;

        virtualinvoke r1.<android.app.Activity: void performUserLeaving()>();

        return;
    }

    public void callApplicationOnCreate(android.app.Application)
    {
        android.app.Instrumentation r0;
        android.app.Application r1;

        r0 := @this: android.app.Instrumentation;

        r1 := @parameter0: android.app.Application;

        virtualinvoke r1.<android.app.Application: void onCreate()>();

        return;
    }

    public boolean checkMonitorHit(android.app.Instrumentation$ActivityMonitor, int)
    {
        android.app.Instrumentation r0;
        int i0, $i1;
        java.lang.Object r1;
        java.util.List $r2;
        java.lang.Throwable $r3;
        android.app.Instrumentation$ActivityMonitor r4;

        r0 := @this: android.app.Instrumentation;

        r4 := @parameter0: android.app.Instrumentation$ActivityMonitor;

        i0 := @parameter1: int;

        virtualinvoke r0.<android.app.Instrumentation: void waitForIdleSync()>();

        r1 = r0.<android.app.Instrumentation: java.lang.Object mSync>;

        entermonitor r1;

     label1:
        $i1 = virtualinvoke r4.<android.app.Instrumentation$ActivityMonitor: int getHits()>();

        if $i1 >= i0 goto label3;

        exitmonitor r1;

     label2:
        return 0;

     label3:
        $r2 = r0.<android.app.Instrumentation: java.util.List mActivityMonitors>;

        interfaceinvoke $r2.<java.util.List: boolean remove(java.lang.Object)>(r4);

        exitmonitor r1;

     label4:
        return 1;

     label5:
        $r3 := @caughtexception;

     label6:
        exitmonitor r1;

     label7:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public void endPerformanceSnapshot()
    {
        android.app.Instrumentation r0;
        boolean $z0;
        android.os.PerformanceCollector $r1;
        android.os.Bundle $r2;

        r0 := @this: android.app.Instrumentation;

        $z0 = virtualinvoke r0.<android.app.Instrumentation: boolean isProfiling()>();

        if $z0 != 0 goto label1;

        $r1 = r0.<android.app.Instrumentation: android.os.PerformanceCollector mPerformanceCollector>;

        $r2 = virtualinvoke $r1.<android.os.PerformanceCollector: android.os.Bundle endSnapshot()>();

        r0.<android.app.Instrumentation: android.os.Bundle mPerfMetrics> = $r2;

     label1:
        return;
    }

    public void execStartActivities(android.content.Context, android.os.IBinder, android.os.IBinder, android.app.Activity, android.content.Intent[], android.os.Bundle)
    {
        android.app.Instrumentation r0;
        android.content.Context r1;
        android.os.IBinder r2, r3;
        android.app.Activity r4;
        android.content.Intent[] r5;
        android.os.Bundle r6;
        int $i0;

        r0 := @this: android.app.Instrumentation;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.os.IBinder;

        r3 := @parameter2: android.os.IBinder;

        r4 := @parameter3: android.app.Activity;

        r5 := @parameter4: android.content.Intent[];

        r6 := @parameter5: android.os.Bundle;

        $i0 = virtualinvoke r1.<android.content.Context: int getUserId()>();

        virtualinvoke r0.<android.app.Instrumentation: int execStartActivitiesAsUser(android.content.Context,android.os.IBinder,android.os.IBinder,android.app.Activity,android.content.Intent[],android.os.Bundle,int)>(r1, r2, r3, r4, r5, r6, $i0);

        return;
    }

    public int execStartActivitiesAsUser(android.content.Context, android.os.IBinder, android.os.IBinder, android.app.Activity, android.content.Intent[], android.os.Bundle, int)
    {
        android.app.Instrumentation r0;
        android.os.IBinder r1, r25;
        android.content.Intent[] r2;
        android.os.Bundle r3;
        android.app.IApplicationThread r4;
        int i0, $i1, $i2, $i3, $i4, $i5, i6, i7, i8, $i9, i10;
        android.app.Instrumentation$ActivityMonitor r5;
        java.util.List $r6, $r16, $r17;
        android.app.IActivityTaskManager $r7;
        java.lang.String $r8, $r9, $r15;
        android.content.Intent $r10, $r11, $r12, $r13, $r19, $r20;
        android.content.ContentResolver $r14;
        java.lang.Object $r18, r27;
        boolean $z1, $z2, $z3;
        java.lang.Throwable $r21;
        android.os.RemoteException $r22;
        java.lang.RuntimeException $r23;
        android.content.Context r24;
        android.app.Activity r26;
        android.app.Instrumentation$ActivityResult r28;
        java.lang.String[] r30;

        r0 := @this: android.app.Instrumentation;

        r24 := @parameter0: android.content.Context;

        r25 := @parameter1: android.os.IBinder;

        r1 := @parameter2: android.os.IBinder;

        r26 := @parameter3: android.app.Activity;

        r2 := @parameter4: android.content.Intent[];

        r3 := @parameter5: android.os.Bundle;

        i6 := @parameter6: int;

        r4 = (android.app.IApplicationThread) r25;

        $r6 = r0.<android.app.Instrumentation: java.util.List mActivityMonitors>;

        if $r6 == null goto label18;

        r27 = r0.<android.app.Instrumentation: java.lang.Object mSync>;

        entermonitor r27;

     label01:
        $r16 = r0.<android.app.Instrumentation: java.util.List mActivityMonitors>;

        i0 = interfaceinvoke $r16.<java.util.List: int size()>();

     label02:
        i7 = 0;

     label03:
        if i7 >= i0 goto label13;

     label04:
        $r17 = r0.<android.app.Instrumentation: java.util.List mActivityMonitors>;

        $r18 = interfaceinvoke $r17.<java.util.List: java.lang.Object get(int)>(i7);

        r5 = (android.app.Instrumentation$ActivityMonitor) $r18;

     label05:
        r28 = null;

     label06:
        $z1 = virtualinvoke r5.<android.app.Instrumentation$ActivityMonitor: boolean ignoreMatchingSpecificIntents()>();

        if $z1 == 0 goto label07;

        $r20 = r2[0];

        r28 = virtualinvoke r5.<android.app.Instrumentation$ActivityMonitor: android.app.Instrumentation$ActivityResult onStartActivity(android.content.Intent)>($r20);

     label07:
        if r28 == null goto label10;

     label08:
        $i4 = r5.<android.app.Instrumentation$ActivityMonitor: int mHits>;

        $i5 = $i4 + 1;

        r5.<android.app.Instrumentation$ActivityMonitor: int mHits> = $i5;

        exitmonitor r27;

     label09:
        return -96;

     label10:
        $r19 = r2[0];

        $z2 = virtualinvoke r5.<android.app.Instrumentation$ActivityMonitor: boolean match(android.content.Context,android.app.Activity,android.content.Intent)>(r24, null, $r19);

        if $z2 == 0 goto label12;

        $i2 = r5.<android.app.Instrumentation$ActivityMonitor: int mHits>;

        $i3 = $i2 + 1;

        r5.<android.app.Instrumentation$ActivityMonitor: int mHits> = $i3;

        $z3 = virtualinvoke r5.<android.app.Instrumentation$ActivityMonitor: boolean isBlocking()>();

        if $z3 == 0 goto label13;

        exitmonitor r27;

     label11:
        return -96;

     label12:
        i7 = i7 + 1;

        goto label03;

     label13:
        exitmonitor r27;

     label14:
        goto label18;

     label15:
        $r21 := @caughtexception;

     label16:
        exitmonitor r27;

     label17:
        throw $r21;

     label18:
        $i1 = lengthof r2;

        r30 = newarray (java.lang.String)[$i1];

     label19:
        i8 = 0;

     label20:
        $i9 = lengthof r2;

        if i8 >= $i9 goto label22;

        $r11 = r2[i8];

        virtualinvoke $r11.<android.content.Intent: boolean migrateExtraStreamToClipData(android.content.Context)>(r24);

        $r12 = r2[i8];

        virtualinvoke $r12.<android.content.Intent: void prepareToLeaveProcess(android.content.Context)>(r24);

        $r13 = r2[i8];

        $r14 = virtualinvoke r24.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r15 = virtualinvoke $r13.<android.content.Intent: java.lang.String resolveTypeIfNeeded(android.content.ContentResolver)>($r14);

        r30[i8] = $r15;

     label21:
        i8 = i8 + 1;

        goto label20;

     label22:
        $r7 = staticinvoke <android.app.ActivityTaskManager: android.app.IActivityTaskManager getService()>();

        $r8 = virtualinvoke r24.<android.content.Context: java.lang.String getBasePackageName()>();

        $r9 = virtualinvoke r24.<android.content.Context: java.lang.String getAttributionTag()>();

        i10 = interfaceinvoke $r7.<android.app.IActivityTaskManager: int startActivities(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.Intent[],java.lang.String[],android.os.IBinder,android.os.Bundle,int)>(r4, $r8, $r9, r2, r30, r1, r3, i6);

        $r10 = r2[0];

        staticinvoke <android.app.Instrumentation: void checkStartActivityResult(int,java.lang.Object)>(i10, $r10);

     label23:
        return i10;

     label24:
        $r22 := @caughtexception;

        $r23 = new java.lang.RuntimeException;

        specialinvoke $r23.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Failure from system", $r22);

        throw $r23;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label04 to label05 with label15;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label16 to label17 with label15;
        catch android.os.RemoteException from label18 to label19 with label24;
        catch android.os.RemoteException from label20 to label21 with label24;
        catch android.os.RemoteException from label22 to label23 with label24;
    }

    public android.app.Instrumentation$ActivityResult execStartActivity(android.content.Context, android.os.IBinder, android.os.IBinder, android.app.Activity, android.content.Intent, int, android.os.Bundle)
    {
        android.app.Instrumentation r0;
        android.os.IBinder r1, r16;
        android.app.Activity r2;
        android.content.Intent r3;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, i7;
        android.os.Bundle r4;
        android.app.IApplicationThread r5;
        java.util.List $r6, $r8, $r9;
        android.content.ContentResolver $r7;
        java.lang.Object $r10, r18;
        boolean $z0, $z1, $z2;
        android.os.RemoteException $r11, $r12, $r14, r28;
        java.lang.Throwable $r13;
        android.content.Context r15;
        android.net.Uri r17;
        android.app.Instrumentation$ActivityMonitor r19;
        android.app.Instrumentation$ActivityResult r20, r21;
        android.app.IActivityTaskManager r23;
        java.lang.String r24, r25, r26, r27;
        java.lang.RuntimeException $r29;

        r0 := @this: android.app.Instrumentation;

        r15 := @parameter0: android.content.Context;

        r16 := @parameter1: android.os.IBinder;

        r1 := @parameter2: android.os.IBinder;

        r2 := @parameter3: android.app.Activity;

        r3 := @parameter4: android.content.Intent;

        i0 := @parameter5: int;

        r4 := @parameter6: android.os.Bundle;

        r5 = (android.app.IApplicationThread) r16;

        if r2 == null goto label01;

        r17 = virtualinvoke r2.<android.app.Activity: android.net.Uri onProvideReferrer()>();

        goto label02;

     label01:
        r17 = null;

     label02:
        if r17 == null goto label03;

        virtualinvoke r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("android.intent.extra.REFERRER", r17);

     label03:
        $r6 = r0.<android.app.Instrumentation: java.util.List mActivityMonitors>;

        if $r6 == null goto label24;

        r18 = r0.<android.app.Instrumentation: java.lang.Object mSync>;

        entermonitor r18;

     label04:
        $r8 = r0.<android.app.Instrumentation: java.util.List mActivityMonitors>;

        i1 = interfaceinvoke $r8.<java.util.List: int size()>();

     label05:
        i7 = 0;

     label06:
        if i7 >= i1 goto label19;

     label07:
        $r9 = r0.<android.app.Instrumentation: java.util.List mActivityMonitors>;

        $r10 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(i7);

        r19 = (android.app.Instrumentation$ActivityMonitor) $r10;

     label08:
        r20 = null;

     label09:
        $z0 = virtualinvoke r19.<android.app.Instrumentation$ActivityMonitor: boolean ignoreMatchingSpecificIntents()>();

        if $z0 == 0 goto label10;

        r20 = virtualinvoke r19.<android.app.Instrumentation$ActivityMonitor: android.app.Instrumentation$ActivityResult onStartActivity(android.content.Intent)>(r3);

     label10:
        if r20 == null goto label13;

     label11:
        $i5 = r19.<android.app.Instrumentation$ActivityMonitor: int mHits>;

        $i6 = $i5 + 1;

        r19.<android.app.Instrumentation$ActivityMonitor: int mHits> = $i6;

        exitmonitor r18;

     label12:
        return r20;

     label13:
        $z1 = virtualinvoke r19.<android.app.Instrumentation$ActivityMonitor: boolean match(android.content.Context,android.app.Activity,android.content.Intent)>(r15, null, r3);

        if $z1 == 0 goto label18;

        $i3 = r19.<android.app.Instrumentation$ActivityMonitor: int mHits>;

        $i4 = $i3 + 1;

        r19.<android.app.Instrumentation$ActivityMonitor: int mHits> = $i4;

        $z2 = virtualinvoke r19.<android.app.Instrumentation$ActivityMonitor: boolean isBlocking()>();

        if $z2 == 0 goto label19;

     label14:
        r21 = null;

        if i0 < 0 goto label16;

     label15:
        r21 = virtualinvoke r19.<android.app.Instrumentation$ActivityMonitor: android.app.Instrumentation$ActivityResult getResult()>();

     label16:
        exitmonitor r18;

     label17:
        return r21;

     label18:
        i7 = i7 + 1;

        goto label06;

     label19:
        exitmonitor r18;

     label20:
        goto label24;

     label21:
        $r13 := @caughtexception;

     label22:
        exitmonitor r18;

     label23:
        throw $r13;

     label24:
        virtualinvoke r3.<android.content.Intent: boolean migrateExtraStreamToClipData(android.content.Context)>(r15);

        virtualinvoke r3.<android.content.Intent: void prepareToLeaveProcess(android.content.Context)>(r15);

        r23 = staticinvoke <android.app.ActivityTaskManager: android.app.IActivityTaskManager getService()>();

        r24 = virtualinvoke r15.<android.content.Context: java.lang.String getBasePackageName()>();

        r25 = virtualinvoke r15.<android.content.Context: java.lang.String getAttributionTag()>();

        $r7 = virtualinvoke r15.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r26 = virtualinvoke r3.<android.content.Intent: java.lang.String resolveTypeIfNeeded(android.content.ContentResolver)>($r7);

     label25:
        if r2 == null goto label29;

     label26:
        r27 = r2.<android.app.Activity: java.lang.String mEmbeddedID>;

     label27:
        goto label30;

     label28:
        $r14 := @caughtexception;

        r28 = $r14;

        goto label34;

     label29:
        r27 = null;

     label30:
        $i2 = interfaceinvoke r23.<android.app.IActivityTaskManager: int startActivity(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle)>(r5, r24, r25, r3, r26, r1, r27, i0, 0, null, r4);

        staticinvoke <android.app.Instrumentation: void checkStartActivityResult(int,java.lang.Object)>($i2, r3);

     label31:
        return null;

     label32:
        $r12 := @caughtexception;

        r28 = $r12;

        goto label34;

     label33:
        $r11 := @caughtexception;

        r28 = $r11;

     label34:
        $r29 = new java.lang.RuntimeException;

        specialinvoke $r29.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Failure from system", r28);

        throw $r29;

        catch java.lang.Throwable from label04 to label05 with label21;
        catch java.lang.Throwable from label07 to label08 with label21;
        catch java.lang.Throwable from label09 to label10 with label21;
        catch java.lang.Throwable from label11 to label12 with label21;
        catch java.lang.Throwable from label13 to label14 with label21;
        catch java.lang.Throwable from label15 to label16 with label21;
        catch java.lang.Throwable from label16 to label17 with label21;
        catch java.lang.Throwable from label19 to label20 with label21;
        catch java.lang.Throwable from label22 to label23 with label21;
        catch android.os.RemoteException from label24 to label25 with label33;
        catch android.os.RemoteException from label26 to label27 with label28;
        catch android.os.RemoteException from label30 to label31 with label32;
    }

    public android.app.Instrumentation$ActivityResult execStartActivity(android.content.Context, android.os.IBinder, android.os.IBinder, java.lang.String, android.content.Intent, int, android.os.Bundle)
    {
        android.app.Instrumentation r0;
        android.os.IBinder r1, r20;
        java.lang.String r2, $r9, $r10, $r12;
        android.content.Intent r3;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, i7;
        android.os.Bundle r4;
        android.app.IApplicationThread r5;
        java.lang.Object r6, $r15;
        android.app.Instrumentation$ActivityMonitor r7;
        android.app.IActivityTaskManager $r8;
        android.content.ContentResolver $r11;
        java.util.List $r13, $r14, r21;
        boolean $z0, $z1, $z2;
        android.os.RemoteException $r16;
        java.lang.RuntimeException $r17;
        java.lang.Throwable $r18;
        android.content.Context r19;
        android.app.Instrumentation$ActivityResult r22, r23;

        r0 := @this: android.app.Instrumentation;

        r19 := @parameter0: android.content.Context;

        r20 := @parameter1: android.os.IBinder;

        r1 := @parameter2: android.os.IBinder;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: android.content.Intent;

        i0 := @parameter5: int;

        r4 := @parameter6: android.os.Bundle;

        r5 = (android.app.IApplicationThread) r20;

        r21 = r0.<android.app.Instrumentation: java.util.List mActivityMonitors>;

        if r21 == null goto label21;

        r6 = r0.<android.app.Instrumentation: java.lang.Object mSync>;

        entermonitor r6;

     label01:
        $r13 = r0.<android.app.Instrumentation: java.util.List mActivityMonitors>;

        i1 = interfaceinvoke $r13.<java.util.List: int size()>();

     label02:
        i7 = 0;

     label03:
        if i7 >= i1 goto label16;

     label04:
        $r14 = r0.<android.app.Instrumentation: java.util.List mActivityMonitors>;

        $r15 = interfaceinvoke $r14.<java.util.List: java.lang.Object get(int)>(i7);

        r7 = (android.app.Instrumentation$ActivityMonitor) $r15;

     label05:
        r22 = null;

     label06:
        $z0 = virtualinvoke r7.<android.app.Instrumentation$ActivityMonitor: boolean ignoreMatchingSpecificIntents()>();

        if $z0 == 0 goto label07;

        r22 = virtualinvoke r7.<android.app.Instrumentation$ActivityMonitor: android.app.Instrumentation$ActivityResult onStartActivity(android.content.Intent)>(r3);

     label07:
        if r22 == null goto label10;

     label08:
        $i5 = r7.<android.app.Instrumentation$ActivityMonitor: int mHits>;

        $i6 = $i5 + 1;

        r7.<android.app.Instrumentation$ActivityMonitor: int mHits> = $i6;

        exitmonitor r6;

     label09:
        return r22;

     label10:
        $z1 = virtualinvoke r7.<android.app.Instrumentation$ActivityMonitor: boolean match(android.content.Context,android.app.Activity,android.content.Intent)>(r19, null, r3);

        if $z1 == 0 goto label15;

        $i3 = r7.<android.app.Instrumentation$ActivityMonitor: int mHits>;

        $i4 = $i3 + 1;

        r7.<android.app.Instrumentation$ActivityMonitor: int mHits> = $i4;

        $z2 = virtualinvoke r7.<android.app.Instrumentation$ActivityMonitor: boolean isBlocking()>();

        if $z2 == 0 goto label16;

     label11:
        r23 = null;

        if i0 < 0 goto label13;

     label12:
        r23 = virtualinvoke r7.<android.app.Instrumentation$ActivityMonitor: android.app.Instrumentation$ActivityResult getResult()>();

     label13:
        exitmonitor r6;

     label14:
        return r23;

     label15:
        i7 = i7 + 1;

        goto label03;

     label16:
        exitmonitor r6;

     label17:
        goto label21;

     label18:
        $r18 := @caughtexception;

     label19:
        exitmonitor r6;

     label20:
        throw $r18;

     label21:
        virtualinvoke r3.<android.content.Intent: boolean migrateExtraStreamToClipData(android.content.Context)>(r19);

        virtualinvoke r3.<android.content.Intent: void prepareToLeaveProcess(android.content.Context)>(r19);

        $r8 = staticinvoke <android.app.ActivityTaskManager: android.app.IActivityTaskManager getService()>();

        $r9 = virtualinvoke r19.<android.content.Context: java.lang.String getBasePackageName()>();

        $r10 = virtualinvoke r19.<android.content.Context: java.lang.String getAttributionTag()>();

        $r11 = virtualinvoke r19.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r12 = virtualinvoke r3.<android.content.Intent: java.lang.String resolveTypeIfNeeded(android.content.ContentResolver)>($r11);

        $i2 = interfaceinvoke $r8.<android.app.IActivityTaskManager: int startActivity(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle)>(r5, $r9, $r10, r3, $r12, r1, r2, i0, 0, null, r4);

        staticinvoke <android.app.Instrumentation: void checkStartActivityResult(int,java.lang.Object)>($i2, r3);

     label22:
        return null;

     label23:
        $r16 := @caughtexception;

        $r17 = new java.lang.RuntimeException;

        specialinvoke $r17.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Failure from system", $r16);

        throw $r17;

        catch java.lang.Throwable from label01 to label02 with label18;
        catch java.lang.Throwable from label04 to label05 with label18;
        catch java.lang.Throwable from label06 to label07 with label18;
        catch java.lang.Throwable from label08 to label09 with label18;
        catch java.lang.Throwable from label10 to label11 with label18;
        catch java.lang.Throwable from label12 to label13 with label18;
        catch java.lang.Throwable from label13 to label14 with label18;
        catch java.lang.Throwable from label16 to label17 with label18;
        catch java.lang.Throwable from label19 to label20 with label18;
        catch android.os.RemoteException from label21 to label22 with label23;
    }

    public android.app.Instrumentation$ActivityResult execStartActivity(android.content.Context, android.os.IBinder, android.os.IBinder, java.lang.String, android.content.Intent, int, android.os.Bundle, android.os.UserHandle)
    {
        android.app.Instrumentation r0;
        android.os.IBinder r1, r17;
        java.lang.String r2, r24, r25, r26;
        android.content.Intent r3;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, i7, i8;
        android.os.Bundle r4;
        android.os.UserHandle r5;
        android.app.IApplicationThread r6;
        android.app.Instrumentation$ActivityMonitor r7;
        android.content.ContentResolver $r8;
        java.util.List $r9, $r10, r18;
        java.lang.Object $r11, r19;
        boolean $z0, $z1, $z2;
        java.lang.Throwable $r12;
        android.os.RemoteException $r13, $r15, r27;
        java.lang.RuntimeException $r14;
        android.content.Context r16;
        android.app.Instrumentation$ActivityResult r20, r21;
        android.app.IActivityTaskManager r23;

        r0 := @this: android.app.Instrumentation;

        r16 := @parameter0: android.content.Context;

        r17 := @parameter1: android.os.IBinder;

        r1 := @parameter2: android.os.IBinder;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: android.content.Intent;

        i0 := @parameter5: int;

        r4 := @parameter6: android.os.Bundle;

        r5 := @parameter7: android.os.UserHandle;

        r6 = (android.app.IApplicationThread) r17;

        r18 = r0.<android.app.Instrumentation: java.util.List mActivityMonitors>;

        if r18 == null goto label21;

        r19 = r0.<android.app.Instrumentation: java.lang.Object mSync>;

        entermonitor r19;

     label01:
        $r9 = r0.<android.app.Instrumentation: java.util.List mActivityMonitors>;

        i1 = interfaceinvoke $r9.<java.util.List: int size()>();

     label02:
        i7 = 0;

     label03:
        if i7 >= i1 goto label16;

     label04:
        $r10 = r0.<android.app.Instrumentation: java.util.List mActivityMonitors>;

        $r11 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>(i7);

        r7 = (android.app.Instrumentation$ActivityMonitor) $r11;

     label05:
        r20 = null;

     label06:
        $z0 = virtualinvoke r7.<android.app.Instrumentation$ActivityMonitor: boolean ignoreMatchingSpecificIntents()>();

        if $z0 == 0 goto label07;

        r20 = virtualinvoke r7.<android.app.Instrumentation$ActivityMonitor: android.app.Instrumentation$ActivityResult onStartActivity(android.content.Intent)>(r3);

     label07:
        if r20 == null goto label10;

     label08:
        $i5 = r7.<android.app.Instrumentation$ActivityMonitor: int mHits>;

        $i6 = $i5 + 1;

        r7.<android.app.Instrumentation$ActivityMonitor: int mHits> = $i6;

        exitmonitor r19;

     label09:
        return r20;

     label10:
        $z1 = virtualinvoke r7.<android.app.Instrumentation$ActivityMonitor: boolean match(android.content.Context,android.app.Activity,android.content.Intent)>(r16, null, r3);

        if $z1 == 0 goto label15;

        $i3 = r7.<android.app.Instrumentation$ActivityMonitor: int mHits>;

        $i4 = $i3 + 1;

        r7.<android.app.Instrumentation$ActivityMonitor: int mHits> = $i4;

        $z2 = virtualinvoke r7.<android.app.Instrumentation$ActivityMonitor: boolean isBlocking()>();

        if $z2 == 0 goto label16;

     label11:
        r21 = null;

        if i0 < 0 goto label13;

     label12:
        r21 = virtualinvoke r7.<android.app.Instrumentation$ActivityMonitor: android.app.Instrumentation$ActivityResult getResult()>();

     label13:
        exitmonitor r19;

     label14:
        return r21;

     label15:
        i7 = i7 + 1;

        goto label03;

     label16:
        exitmonitor r19;

     label17:
        goto label21;

     label18:
        $r12 := @caughtexception;

     label19:
        exitmonitor r19;

     label20:
        throw $r12;

     label21:
        virtualinvoke r3.<android.content.Intent: boolean migrateExtraStreamToClipData(android.content.Context)>(r16);

        virtualinvoke r3.<android.content.Intent: void prepareToLeaveProcess(android.content.Context)>(r16);

        r23 = staticinvoke <android.app.ActivityTaskManager: android.app.IActivityTaskManager getService()>();

        r24 = virtualinvoke r16.<android.content.Context: java.lang.String getBasePackageName()>();

        r25 = virtualinvoke r16.<android.content.Context: java.lang.String getAttributionTag()>();

        $r8 = virtualinvoke r16.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r26 = virtualinvoke r3.<android.content.Intent: java.lang.String resolveTypeIfNeeded(android.content.ContentResolver)>($r8);

        i8 = virtualinvoke r5.<android.os.UserHandle: int getIdentifier()>();

     label22:
        $i2 = interfaceinvoke r23.<android.app.IActivityTaskManager: int startActivityAsUser(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle,int)>(r6, r24, r25, r3, r26, r1, r2, i0, 0, null, r4, i8);

        staticinvoke <android.app.Instrumentation: void checkStartActivityResult(int,java.lang.Object)>($i2, r3);

     label23:
        return null;

     label24:
        $r13 := @caughtexception;

        r27 = $r13;

        goto label26;

     label25:
        $r15 := @caughtexception;

        r27 = $r15;

     label26:
        $r14 = new java.lang.RuntimeException;

        specialinvoke $r14.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Failure from system", r27);

        throw $r14;

        catch java.lang.Throwable from label01 to label02 with label18;
        catch java.lang.Throwable from label04 to label05 with label18;
        catch java.lang.Throwable from label06 to label07 with label18;
        catch java.lang.Throwable from label08 to label09 with label18;
        catch java.lang.Throwable from label10 to label11 with label18;
        catch java.lang.Throwable from label12 to label13 with label18;
        catch java.lang.Throwable from label13 to label14 with label18;
        catch java.lang.Throwable from label16 to label17 with label18;
        catch java.lang.Throwable from label19 to label20 with label18;
        catch android.os.RemoteException from label21 to label22 with label25;
        catch android.os.RemoteException from label22 to label23 with label24;
    }

    public android.app.Instrumentation$ActivityResult execStartActivityAsCaller(android.content.Context, android.os.IBinder, android.os.IBinder, android.app.Activity, android.content.Intent, int, android.os.Bundle, android.os.IBinder, boolean, int)
    {
        android.app.Instrumentation r0;
        android.os.IBinder r1, r5, r17;
        android.app.Activity r2;
        android.content.Intent r3;
        android.os.Bundle r4;
        boolean z0, $z1, $z2, $z3;
        int i0, i1, $i2, $i3, $i4, $i5, i6, i7, i8;
        android.app.IApplicationThread r6;
        android.app.Instrumentation$ActivityMonitor r7;
        android.content.ContentResolver $r8;
        java.util.List $r9, $r10, r18;
        java.lang.Object $r11, r19;
        java.lang.Throwable $r12;
        android.os.RemoteException $r13, $r14, $r15, r27;
        android.content.Context r16;
        android.app.Instrumentation$ActivityResult r20, r21;
        android.app.IActivityTaskManager r23;
        java.lang.String r24, r25, r26;
        java.lang.RuntimeException $r28;

        r0 := @this: android.app.Instrumentation;

        r16 := @parameter0: android.content.Context;

        r17 := @parameter1: android.os.IBinder;

        r1 := @parameter2: android.os.IBinder;

        r2 := @parameter3: android.app.Activity;

        r3 := @parameter4: android.content.Intent;

        i6 := @parameter5: int;

        r4 := @parameter6: android.os.Bundle;

        r5 := @parameter7: android.os.IBinder;

        z0 := @parameter8: boolean;

        i0 := @parameter9: int;

        r6 = (android.app.IApplicationThread) r17;

        r18 = r0.<android.app.Instrumentation: java.util.List mActivityMonitors>;

        if r18 == null goto label21;

        r19 = r0.<android.app.Instrumentation: java.lang.Object mSync>;

        entermonitor r19;

     label01:
        $r9 = r0.<android.app.Instrumentation: java.util.List mActivityMonitors>;

        i1 = interfaceinvoke $r9.<java.util.List: int size()>();

     label02:
        i7 = 0;

     label03:
        if i7 >= i1 goto label16;

     label04:
        $r10 = r0.<android.app.Instrumentation: java.util.List mActivityMonitors>;

        $r11 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>(i7);

        r7 = (android.app.Instrumentation$ActivityMonitor) $r11;

     label05:
        r20 = null;

     label06:
        $z1 = virtualinvoke r7.<android.app.Instrumentation$ActivityMonitor: boolean ignoreMatchingSpecificIntents()>();

        if $z1 == 0 goto label07;

        r20 = virtualinvoke r7.<android.app.Instrumentation$ActivityMonitor: android.app.Instrumentation$ActivityResult onStartActivity(android.content.Intent)>(r3);

     label07:
        if r20 == null goto label10;

     label08:
        $i4 = r7.<android.app.Instrumentation$ActivityMonitor: int mHits>;

        $i5 = $i4 + 1;

        r7.<android.app.Instrumentation$ActivityMonitor: int mHits> = $i5;

        exitmonitor r19;

     label09:
        return r20;

     label10:
        $z2 = virtualinvoke r7.<android.app.Instrumentation$ActivityMonitor: boolean match(android.content.Context,android.app.Activity,android.content.Intent)>(r16, null, r3);

        if $z2 == 0 goto label15;

        $i2 = r7.<android.app.Instrumentation$ActivityMonitor: int mHits>;

        $i3 = $i2 + 1;

        r7.<android.app.Instrumentation$ActivityMonitor: int mHits> = $i3;

        $z3 = virtualinvoke r7.<android.app.Instrumentation$ActivityMonitor: boolean isBlocking()>();

        if $z3 == 0 goto label16;

     label11:
        r21 = null;

        if i6 < 0 goto label13;

     label12:
        r21 = virtualinvoke r7.<android.app.Instrumentation$ActivityMonitor: android.app.Instrumentation$ActivityResult getResult()>();

     label13:
        exitmonitor r19;

     label14:
        return r21;

     label15:
        i7 = i7 + 1;

        goto label03;

     label16:
        exitmonitor r19;

     label17:
        goto label21;

     label18:
        $r12 := @caughtexception;

     label19:
        exitmonitor r19;

     label20:
        throw $r12;

     label21:
        virtualinvoke r3.<android.content.Intent: boolean migrateExtraStreamToClipData(android.content.Context)>(r16);

        virtualinvoke r3.<android.content.Intent: void prepareToLeaveProcess(android.content.Context)>(r16);

        r23 = staticinvoke <android.app.ActivityTaskManager: android.app.IActivityTaskManager getService()>();

        r24 = virtualinvoke r16.<android.content.Context: java.lang.String getBasePackageName()>();

        $r8 = virtualinvoke r16.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r25 = virtualinvoke r3.<android.content.Intent: java.lang.String resolveTypeIfNeeded(android.content.ContentResolver)>($r8);

     label22:
        if r2 == null goto label25;

     label23:
        r26 = r2.<android.app.Activity: java.lang.String mEmbeddedID>;

     label24:
        goto label26;

     label25:
        r26 = null;

     label26:
        i8 = interfaceinvoke r23.<android.app.IActivityTaskManager: int startActivityAsCaller(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle,android.os.IBinder,boolean,int)>(r6, r24, r3, r25, r1, r26, i6, 0, null, r4, r5, z0, i0);

     label27:
        staticinvoke <android.app.Instrumentation: void checkStartActivityResult(int,java.lang.Object)>(i8, r3);

     label28:
        return null;

     label29:
        $r15 := @caughtexception;

        r27 = $r15;

        goto label32;

     label30:
        $r13 := @caughtexception;

        r27 = $r13;

        goto label32;

     label31:
        $r14 := @caughtexception;

        r27 = $r14;

     label32:
        $r28 = new java.lang.RuntimeException;

        specialinvoke $r28.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Failure from system", r27);

        throw $r28;

        catch java.lang.Throwable from label01 to label02 with label18;
        catch java.lang.Throwable from label04 to label05 with label18;
        catch java.lang.Throwable from label06 to label07 with label18;
        catch java.lang.Throwable from label08 to label09 with label18;
        catch java.lang.Throwable from label10 to label11 with label18;
        catch java.lang.Throwable from label12 to label13 with label18;
        catch java.lang.Throwable from label13 to label14 with label18;
        catch java.lang.Throwable from label16 to label17 with label18;
        catch java.lang.Throwable from label19 to label20 with label18;
        catch android.os.RemoteException from label21 to label22 with label31;
        catch android.os.RemoteException from label23 to label24 with label31;
        catch android.os.RemoteException from label26 to label27 with label30;
        catch android.os.RemoteException from label27 to label28 with label29;
    }

    public void execStartActivityFromAppTask(android.content.Context, android.os.IBinder, android.app.IAppTask, android.content.Intent, android.os.Bundle)
    {
        android.app.Instrumentation r0;
        android.app.IAppTask r1;
        android.content.Intent r2;
        android.os.Bundle r3;
        android.app.IApplicationThread r4;
        java.lang.Object r5, $r15;
        int i0, $i1, $i2, $i3, $i4, $i5, i6;
        android.app.Instrumentation$ActivityMonitor r6;
        java.util.List $r7, $r13, $r14;
        android.os.IBinder $r8, r20;
        java.lang.String $r9, $r10, $r12;
        android.content.ContentResolver $r11;
        boolean $z1, $z2, $z3;
        android.os.RemoteException $r16;
        java.lang.RuntimeException $r17;
        java.lang.Throwable $r18;
        android.content.Context r19;
        android.app.Instrumentation$ActivityResult r21;

        r0 := @this: android.app.Instrumentation;

        r19 := @parameter0: android.content.Context;

        r20 := @parameter1: android.os.IBinder;

        r1 := @parameter2: android.app.IAppTask;

        r2 := @parameter3: android.content.Intent;

        r3 := @parameter4: android.os.Bundle;

        r4 = (android.app.IApplicationThread) r20;

        $r7 = r0.<android.app.Instrumentation: java.util.List mActivityMonitors>;

        if $r7 == null goto label18;

        r5 = r0.<android.app.Instrumentation: java.lang.Object mSync>;

        entermonitor r5;

     label01:
        $r13 = r0.<android.app.Instrumentation: java.util.List mActivityMonitors>;

        i0 = interfaceinvoke $r13.<java.util.List: int size()>();

     label02:
        i6 = 0;

     label03:
        if i6 >= i0 goto label13;

     label04:
        $r14 = r0.<android.app.Instrumentation: java.util.List mActivityMonitors>;

        $r15 = interfaceinvoke $r14.<java.util.List: java.lang.Object get(int)>(i6);

        r6 = (android.app.Instrumentation$ActivityMonitor) $r15;

     label05:
        r21 = null;

     label06:
        $z1 = virtualinvoke r6.<android.app.Instrumentation$ActivityMonitor: boolean ignoreMatchingSpecificIntents()>();

        if $z1 == 0 goto label07;

        r21 = virtualinvoke r6.<android.app.Instrumentation$ActivityMonitor: android.app.Instrumentation$ActivityResult onStartActivity(android.content.Intent)>(r2);

     label07:
        if r21 == null goto label10;

     label08:
        $i4 = r6.<android.app.Instrumentation$ActivityMonitor: int mHits>;

        $i5 = $i4 + 1;

        r6.<android.app.Instrumentation$ActivityMonitor: int mHits> = $i5;

        exitmonitor r5;

     label09:
        return;

     label10:
        $z2 = virtualinvoke r6.<android.app.Instrumentation$ActivityMonitor: boolean match(android.content.Context,android.app.Activity,android.content.Intent)>(r19, null, r2);

        if $z2 == 0 goto label12;

        $i2 = r6.<android.app.Instrumentation$ActivityMonitor: int mHits>;

        $i3 = $i2 + 1;

        r6.<android.app.Instrumentation$ActivityMonitor: int mHits> = $i3;

        $z3 = virtualinvoke r6.<android.app.Instrumentation$ActivityMonitor: boolean isBlocking()>();

        if $z3 == 0 goto label13;

        exitmonitor r5;

     label11:
        return;

     label12:
        i6 = i6 + 1;

        goto label03;

     label13:
        exitmonitor r5;

     label14:
        goto label18;

     label15:
        $r18 := @caughtexception;

     label16:
        exitmonitor r5;

     label17:
        throw $r18;

     label18:
        virtualinvoke r2.<android.content.Intent: boolean migrateExtraStreamToClipData(android.content.Context)>(r19);

        virtualinvoke r2.<android.content.Intent: void prepareToLeaveProcess(android.content.Context)>(r19);

        $r8 = interfaceinvoke r4.<android.app.IApplicationThread: android.os.IBinder asBinder()>();

        $r9 = virtualinvoke r19.<android.content.Context: java.lang.String getBasePackageName()>();

        $r10 = virtualinvoke r19.<android.content.Context: java.lang.String getAttributionTag()>();

        $r11 = virtualinvoke r19.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r12 = virtualinvoke r2.<android.content.Intent: java.lang.String resolveTypeIfNeeded(android.content.ContentResolver)>($r11);

        $i1 = interfaceinvoke r1.<android.app.IAppTask: int startActivity(android.os.IBinder,java.lang.String,java.lang.String,android.content.Intent,java.lang.String,android.os.Bundle)>($r8, $r9, $r10, r2, $r12, r3);

        staticinvoke <android.app.Instrumentation: void checkStartActivityResult(int,java.lang.Object)>($i1, r2);

     label19:
        return;

     label20:
        $r16 := @caughtexception;

        $r17 = new java.lang.RuntimeException;

        specialinvoke $r17.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Failure from system", $r16);

        throw $r17;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label04 to label05 with label15;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label16 to label17 with label15;
        catch android.os.RemoteException from label18 to label19 with label20;
    }

    public void finish(int, android.os.Bundle)
    {
        android.app.Instrumentation r0;
        int i0;
        boolean $z0, $z1;
        android.os.Bundle $r1, $r3, $r4, r5, r6;
        android.app.UiAutomation $r2, r7;
        android.app.ActivityThread $r8;

        r0 := @this: android.app.Instrumentation;

        i0 := @parameter0: int;

        r5 := @parameter1: android.os.Bundle;

        $z0 = r0.<android.app.Instrumentation: boolean mAutomaticPerformanceSnapshots>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<android.app.Instrumentation: void endPerformanceSnapshot()>();

     label1:
        r6 = r5;

        $r1 = r0.<android.app.Instrumentation: android.os.Bundle mPerfMetrics>;

        if $r1 == null goto label3;

        r6 = r5;

        if r5 != null goto label2;

        $r4 = new android.os.Bundle;

        specialinvoke $r4.<android.os.Bundle: void <init>()>();

        r6 = $r4;

     label2:
        $r3 = r0.<android.app.Instrumentation: android.os.Bundle mPerfMetrics>;

        virtualinvoke r6.<android.os.Bundle: void putAll(android.os.Bundle)>($r3);

     label3:
        r7 = r0.<android.app.Instrumentation: android.app.UiAutomation mUiAutomation>;

        if r7 == null goto label4;

        $z1 = virtualinvoke r7.<android.app.UiAutomation: boolean isDestroyed()>();

        if $z1 != 0 goto label4;

        $r2 = r0.<android.app.Instrumentation: android.app.UiAutomation mUiAutomation>;

        virtualinvoke $r2.<android.app.UiAutomation: void disconnect()>();

        r0.<android.app.Instrumentation: android.app.UiAutomation mUiAutomation> = null;

     label4:
        $r8 = r0.<android.app.Instrumentation: android.app.ActivityThread mThread>;

        virtualinvoke $r8.<android.app.ActivityThread: void finishInstrumentation(int,android.os.Bundle)>(i0, r6);

        return;
    }

    public android.os.Bundle getAllocCounts()
    {
        android.app.Instrumentation r0;
        android.os.Bundle $r2;
        int $i0, $i2, $i4, $i6, $i8;
        long $l1, $l3, $l5, $l7, $l9;

        r0 := @this: android.app.Instrumentation;

        $r2 = new android.os.Bundle;

        specialinvoke $r2.<android.os.Bundle: void <init>()>();

        $i0 = staticinvoke <android.os.Debug: int getGlobalAllocCount()>();

        $l1 = (long) $i0;

        virtualinvoke $r2.<android.os.Bundle: void putLong(java.lang.String,long)>("global_alloc_count", $l1);

        $i2 = staticinvoke <android.os.Debug: int getGlobalAllocSize()>();

        $l3 = (long) $i2;

        virtualinvoke $r2.<android.os.Bundle: void putLong(java.lang.String,long)>("global_alloc_size", $l3);

        $i4 = staticinvoke <android.os.Debug: int getGlobalFreedCount()>();

        $l5 = (long) $i4;

        virtualinvoke $r2.<android.os.Bundle: void putLong(java.lang.String,long)>("global_freed_count", $l5);

        $i6 = staticinvoke <android.os.Debug: int getGlobalFreedSize()>();

        $l7 = (long) $i6;

        virtualinvoke $r2.<android.os.Bundle: void putLong(java.lang.String,long)>("global_freed_size", $l7);

        $i8 = staticinvoke <android.os.Debug: int getGlobalGcInvocationCount()>();

        $l9 = (long) $i8;

        virtualinvoke $r2.<android.os.Bundle: void putLong(java.lang.String,long)>("gc_invocation_count", $l9);

        return $r2;
    }

    public android.os.Bundle getBinderCounts()
    {
        android.app.Instrumentation r0;
        android.os.Bundle $r2;
        int $i0, $i2;
        long $l1, $l3;

        r0 := @this: android.app.Instrumentation;

        $r2 = new android.os.Bundle;

        specialinvoke $r2.<android.os.Bundle: void <init>()>();

        $i0 = staticinvoke <android.os.Debug: int getBinderSentTransactions()>();

        $l1 = (long) $i0;

        virtualinvoke $r2.<android.os.Bundle: void putLong(java.lang.String,long)>("sent_transactions", $l1);

        $i2 = staticinvoke <android.os.Debug: int getBinderReceivedTransactions()>();

        $l3 = (long) $i2;

        virtualinvoke $r2.<android.os.Bundle: void putLong(java.lang.String,long)>("received_transactions", $l3);

        return $r2;
    }

    public android.content.ComponentName getComponentName()
    {
        android.app.Instrumentation r0;
        android.content.ComponentName $r1;

        r0 := @this: android.app.Instrumentation;

        $r1 = r0.<android.app.Instrumentation: android.content.ComponentName mComponent>;

        return $r1;
    }

    public android.content.Context getContext()
    {
        android.app.Instrumentation r0;
        android.content.Context $r1;

        r0 := @this: android.app.Instrumentation;

        $r1 = r0.<android.app.Instrumentation: android.content.Context mInstrContext>;

        return $r1;
    }

    public java.lang.String getProcessName()
    {
        android.app.Instrumentation r0;
        android.app.ActivityThread $r1;
        java.lang.String $r2;

        r0 := @this: android.app.Instrumentation;

        $r1 = r0.<android.app.Instrumentation: android.app.ActivityThread mThread>;

        $r2 = virtualinvoke $r1.<android.app.ActivityThread: java.lang.String getProcessName()>();

        return $r2;
    }

    public android.content.Context getTargetContext()
    {
        android.app.Instrumentation r0;
        android.content.Context $r1;

        r0 := @this: android.app.Instrumentation;

        $r1 = r0.<android.app.Instrumentation: android.content.Context mAppContext>;

        return $r1;
    }

    public android.app.UiAutomation getUiAutomation()
    {
        android.app.Instrumentation r0;
        android.app.UiAutomation $r1;

        r0 := @this: android.app.Instrumentation;

        $r1 = virtualinvoke r0.<android.app.Instrumentation: android.app.UiAutomation getUiAutomation(int)>(0);

        return $r1;
    }

    public android.app.UiAutomation getUiAutomation(int)
    {
        android.app.Instrumentation r0;
        int i0, $i1;
        android.app.UiAutomation r1, $r2, $r3, $r4, $r5, $r9, $r10;
        android.content.Context $r6;
        android.os.Looper $r7;
        android.app.IUiAutomationConnection $r8, $r11;
        boolean $z0, z1;

        r0 := @this: android.app.Instrumentation;

        i0 := @parameter0: int;

        r1 = r0.<android.app.Instrumentation: android.app.UiAutomation mUiAutomation>;

        if r1 == null goto label2;

        $z0 = virtualinvoke r1.<android.app.UiAutomation: boolean isDestroyed()>();

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        z1 = 0;

        goto label3;

     label2:
        z1 = 1;

     label3:
        $r11 = r0.<android.app.Instrumentation: android.app.IUiAutomationConnection mUiAutomationConnection>;

        if $r11 == null goto label7;

        if z1 != 0 goto label4;

        $r9 = r0.<android.app.Instrumentation: android.app.UiAutomation mUiAutomation>;

        $i1 = virtualinvoke $r9.<android.app.UiAutomation: int getFlags()>();

        if $i1 != i0 goto label4;

        $r10 = r0.<android.app.Instrumentation: android.app.UiAutomation mUiAutomation>;

        return $r10;

     label4:
        if z1 == 0 goto label5;

        $r5 = new android.app.UiAutomation;

        $r6 = virtualinvoke r0.<android.app.Instrumentation: android.content.Context getTargetContext()>();

        $r7 = virtualinvoke $r6.<android.content.Context: android.os.Looper getMainLooper()>();

        $r8 = r0.<android.app.Instrumentation: android.app.IUiAutomationConnection mUiAutomationConnection>;

        specialinvoke $r5.<android.app.UiAutomation: void <init>(android.os.Looper,android.app.IUiAutomationConnection)>($r7, $r8);

        r0.<android.app.Instrumentation: android.app.UiAutomation mUiAutomation> = $r5;

        goto label6;

     label5:
        $r2 = r0.<android.app.Instrumentation: android.app.UiAutomation mUiAutomation>;

        virtualinvoke $r2.<android.app.UiAutomation: void disconnect()>();

     label6:
        $r3 = r0.<android.app.Instrumentation: android.app.UiAutomation mUiAutomation>;

        virtualinvoke $r3.<android.app.UiAutomation: void connect(int)>(i0);

        $r4 = r0.<android.app.Instrumentation: android.app.UiAutomation mUiAutomation>;

        return $r4;

     label7:
        return null;
    }

    final void init(android.app.ActivityThread, android.content.Context, android.content.Context, android.content.ComponentName, android.app.IInstrumentationWatcher, android.app.IUiAutomationConnection)
    {
        android.app.Instrumentation r0;
        android.app.ActivityThread r1;
        android.content.Context r2, r3;
        android.content.ComponentName r4;
        android.app.IInstrumentationWatcher r5;
        android.app.IUiAutomationConnection r6;
        android.os.MessageQueue $r8;

        r0 := @this: android.app.Instrumentation;

        r1 := @parameter0: android.app.ActivityThread;

        r2 := @parameter1: android.content.Context;

        r3 := @parameter2: android.content.Context;

        r4 := @parameter3: android.content.ComponentName;

        r5 := @parameter4: android.app.IInstrumentationWatcher;

        r6 := @parameter5: android.app.IUiAutomationConnection;

        r0.<android.app.Instrumentation: android.app.ActivityThread mThread> = r1;

        virtualinvoke r1.<android.app.ActivityThread: android.os.Looper getLooper()>();

        $r8 = staticinvoke <android.os.Looper: android.os.MessageQueue myQueue()>();

        r0.<android.app.Instrumentation: android.os.MessageQueue mMessageQueue> = $r8;

        r0.<android.app.Instrumentation: android.content.Context mInstrContext> = r2;

        r0.<android.app.Instrumentation: android.content.Context mAppContext> = r3;

        r0.<android.app.Instrumentation: android.content.ComponentName mComponent> = r4;

        r0.<android.app.Instrumentation: android.app.IInstrumentationWatcher mWatcher> = r5;

        r0.<android.app.Instrumentation: android.app.IUiAutomationConnection mUiAutomationConnection> = r6;

        return;
    }

    public boolean invokeContextMenuAction(android.app.Activity, int, int)
    {
        android.app.Instrumentation r0;
        int i0, i1, $i2;
        android.view.KeyEvent $r1, $r2;
        long $l3;
        android.app.Instrumentation$1ContextMenuRunnable $r3;
        boolean $z0;
        java.lang.Throwable $r4;
        android.app.Activity r5;

        r0 := @this: android.app.Instrumentation;

        r5 := @parameter0: android.app.Activity;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<android.app.Instrumentation: void validateNotAppThread()>();

        $r1 = new android.view.KeyEvent;

        specialinvoke $r1.<android.view.KeyEvent: void <init>(int,int)>(0, 23);

        virtualinvoke r0.<android.app.Instrumentation: void sendKeySync(android.view.KeyEvent)>($r1);

        virtualinvoke r0.<android.app.Instrumentation: void waitForIdleSync()>();

     label1:
        $i2 = staticinvoke <android.view.ViewConfiguration: int getLongPressTimeout()>();

        $l3 = (long) $i2;

        staticinvoke <java.lang.Thread: void sleep(long)>($l3);

     label2:
        $r2 = new android.view.KeyEvent;

        specialinvoke $r2.<android.view.KeyEvent: void <init>(int,int)>(1, 23);

        virtualinvoke r0.<android.app.Instrumentation: void sendKeySync(android.view.KeyEvent)>($r2);

        virtualinvoke r0.<android.app.Instrumentation: void waitForIdleSync()>();

        $r3 = new android.app.Instrumentation$1ContextMenuRunnable;

        specialinvoke $r3.<android.app.Instrumentation$1ContextMenuRunnable: void <init>(android.app.Instrumentation,android.app.Activity,int,int)>(r0, r5, i0, i1);

        virtualinvoke r0.<android.app.Instrumentation: void runOnMainSync(java.lang.Runnable)>($r3);

        $z0 = $r3.<android.app.Instrumentation$1ContextMenuRunnable: boolean returnValue>;

        return $z0;

     label3:
        $r4 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("Instrumentation", "Could not sleep for long press timeout", $r4);

        return 0;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }

    public boolean invokeMenuActionSync(android.app.Activity, int, int)
    {
        android.app.Instrumentation r0;
        int i0, i1;
        android.app.Instrumentation$1MenuRunnable $r1;
        boolean $z0;
        android.app.Activity r2;

        r0 := @this: android.app.Instrumentation;

        r2 := @parameter0: android.app.Activity;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = new android.app.Instrumentation$1MenuRunnable;

        specialinvoke $r1.<android.app.Instrumentation$1MenuRunnable: void <init>(android.app.Instrumentation,android.app.Activity,int,int)>(r0, r2, i0, i1);

        virtualinvoke r0.<android.app.Instrumentation: void runOnMainSync(java.lang.Runnable)>($r1);

        $z0 = $r1.<android.app.Instrumentation$1MenuRunnable: boolean returnValue>;

        return $z0;
    }

    public boolean isProfiling()
    {
        android.app.Instrumentation r0;
        android.app.ActivityThread $r1;
        boolean $z0;

        r0 := @this: android.app.Instrumentation;

        $r1 = r0.<android.app.Instrumentation: android.app.ActivityThread mThread>;

        $z0 = virtualinvoke $r1.<android.app.ActivityThread: boolean isProfiling()>();

        return $z0;
    }

    public android.app.Activity newActivity(java.lang.Class, android.content.Context, android.os.IBinder, android.app.Application, android.content.Intent, android.content.pm.ActivityInfo, java.lang.CharSequence, android.app.Activity, java.lang.String, java.lang.Object) throws java.lang.InstantiationException, java.lang.IllegalAccessException
    {
        android.app.Instrumentation r0;
        android.content.Context r1;
        android.os.IBinder r2;
        android.content.Intent r3;
        android.content.pm.ActivityInfo r4;
        java.lang.CharSequence r5;
        android.app.Activity r6, r15;
        java.lang.String r7;
        java.lang.Object r8, $r9;
        android.content.res.Configuration $r10;
        android.app.Activity$NonConfigurationInstances $r11;
        android.app.Application $r12, r14;
        java.lang.Class r13;

        r0 := @this: android.app.Instrumentation;

        r13 := @parameter0: java.lang.Class;

        r1 := @parameter1: android.content.Context;

        r2 := @parameter2: android.os.IBinder;

        r14 := @parameter3: android.app.Application;

        r3 := @parameter4: android.content.Intent;

        r4 := @parameter5: android.content.pm.ActivityInfo;

        r5 := @parameter6: java.lang.CharSequence;

        r6 := @parameter7: android.app.Activity;

        r7 := @parameter8: java.lang.String;

        r8 := @parameter9: java.lang.Object;

        $r9 = virtualinvoke r13.<java.lang.Class: java.lang.Object newInstance()>();

        r15 = (android.app.Activity) $r9;

        if r14 != null goto label1;

        $r12 = new android.app.Application;

        specialinvoke $r12.<android.app.Application: void <init>()>();

        r14 = $r12;

        goto label1;

     label1:
        $r11 = (android.app.Activity$NonConfigurationInstances) r8;

        $r10 = new android.content.res.Configuration;

        specialinvoke $r10.<android.content.res.Configuration: void <init>()>();

        virtualinvoke r15.<android.app.Activity: void attach(android.content.Context,android.app.ActivityThread,android.app.Instrumentation,android.os.IBinder,int,android.app.Application,android.content.Intent,android.content.pm.ActivityInfo,java.lang.CharSequence,android.app.Activity,java.lang.String,android.app.Activity$NonConfigurationInstances,android.content.res.Configuration,java.lang.String,com.android.internal.app.IVoiceInteractor,android.view.Window,android.view.ViewRootImpl$ActivityConfigCallback,android.os.IBinder)>(r1, null, r0, r2, 0, r14, r3, r4, r5, r6, r7, $r11, $r10, null, null, null, null, null);

        return r15;
    }

    public android.app.Activity newActivity(java.lang.ClassLoader, java.lang.String, android.content.Intent) throws java.lang.InstantiationException, java.lang.IllegalAccessException, java.lang.ClassNotFoundException
    {
        android.app.Instrumentation r0;
        java.lang.ClassLoader r1;
        java.lang.String r2, r6;
        android.content.Intent r3;
        android.content.ComponentName $r4, $r5;
        android.app.AppComponentFactory $r7;
        android.app.Activity $r8;

        r0 := @this: android.app.Instrumentation;

        r1 := @parameter0: java.lang.ClassLoader;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.content.Intent;

        if r3 == null goto label1;

        $r4 = virtualinvoke r3.<android.content.Intent: android.content.ComponentName getComponent()>();

        if $r4 == null goto label1;

        $r5 = virtualinvoke r3.<android.content.Intent: android.content.ComponentName getComponent()>();

        r6 = virtualinvoke $r5.<android.content.ComponentName: java.lang.String getPackageName()>();

        goto label2;

     label1:
        r6 = null;

     label2:
        $r7 = specialinvoke r0.<android.app.Instrumentation: android.app.AppComponentFactory getFactory(java.lang.String)>(r6);

        $r8 = virtualinvoke $r7.<android.app.AppComponentFactory: android.app.Activity instantiateActivity(java.lang.ClassLoader,java.lang.String,android.content.Intent)>(r1, r2, r3);

        return $r8;
    }

    public android.app.Application newApplication(java.lang.ClassLoader, java.lang.String, android.content.Context) throws java.lang.InstantiationException, java.lang.IllegalAccessException, java.lang.ClassNotFoundException
    {
        android.app.Instrumentation r0;
        java.lang.String r1, $r3;
        android.content.Context r2;
        android.app.AppComponentFactory $r4;
        java.lang.ClassLoader r5;
        android.app.Application r6;

        r0 := @this: android.app.Instrumentation;

        r5 := @parameter0: java.lang.ClassLoader;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.content.Context;

        $r3 = virtualinvoke r2.<android.content.Context: java.lang.String getPackageName()>();

        $r4 = specialinvoke r0.<android.app.Instrumentation: android.app.AppComponentFactory getFactory(java.lang.String)>($r3);

        r6 = virtualinvoke $r4.<android.app.AppComponentFactory: android.app.Application instantiateApplication(java.lang.ClassLoader,java.lang.String)>(r5, r1);

        virtualinvoke r6.<android.app.Application: void attach(android.content.Context)>(r2);

        return r6;
    }

    public void onCreate(android.os.Bundle)
    {
        android.app.Instrumentation r0;
        android.os.Bundle r1;

        r0 := @this: android.app.Instrumentation;

        r1 := @parameter0: android.os.Bundle;

        return;
    }

    public void onDestroy()
    {
        android.app.Instrumentation r0;

        r0 := @this: android.app.Instrumentation;

        return;
    }

    public void onEnterAnimationComplete()
    {
        android.app.Instrumentation r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable $r4;

        r0 := @this: android.app.Instrumentation;

        r1 = r0.<android.app.Instrumentation: java.lang.Object mAnimationCompleteLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<android.app.Instrumentation: java.lang.Object mAnimationCompleteLock>;

        virtualinvoke $r3.<java.lang.Object: void notifyAll()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean onException(java.lang.Object, java.lang.Throwable)
    {
        android.app.Instrumentation r0;
        java.lang.Object r1;
        java.lang.Throwable r2;

        r0 := @this: android.app.Instrumentation;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Throwable;

        return 0;
    }

    public void onStart()
    {
        android.app.Instrumentation r0;

        r0 := @this: android.app.Instrumentation;

        return;
    }

    public void removeMonitor(android.app.Instrumentation$ActivityMonitor)
    {
        android.app.Instrumentation r0;
        java.lang.Object r1;
        java.util.List $r2;
        java.lang.Throwable $r3;
        android.app.Instrumentation$ActivityMonitor r4;

        r0 := @this: android.app.Instrumentation;

        r4 := @parameter0: android.app.Instrumentation$ActivityMonitor;

        r1 = r0.<android.app.Instrumentation: java.lang.Object mSync>;

        entermonitor r1;

     label1:
        $r2 = r0.<android.app.Instrumentation: java.util.List mActivityMonitors>;

        interfaceinvoke $r2.<java.util.List: boolean remove(java.lang.Object)>(r4);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void runOnMainSync(java.lang.Runnable)
    {
        android.app.Instrumentation r0;
        android.app.Instrumentation$SyncRunnable $r1;
        android.app.ActivityThread $r2;
        android.os.Handler $r3;
        java.lang.Runnable r4;

        r0 := @this: android.app.Instrumentation;

        r4 := @parameter0: java.lang.Runnable;

        specialinvoke r0.<android.app.Instrumentation: void validateNotAppThread()>();

        $r1 = new android.app.Instrumentation$SyncRunnable;

        specialinvoke $r1.<android.app.Instrumentation$SyncRunnable: void <init>(java.lang.Runnable)>(r4);

        $r2 = r0.<android.app.Instrumentation: android.app.ActivityThread mThread>;

        $r3 = virtualinvoke $r2.<android.app.ActivityThread: android.os.Handler getHandler()>();

        virtualinvoke $r3.<android.os.Handler: boolean post(java.lang.Runnable)>($r1);

        virtualinvoke $r1.<android.app.Instrumentation$SyncRunnable: void waitForComplete()>();

        return;
    }

    public void sendCharacterSync(int)
    {
        android.app.Instrumentation r0;
        int i0;
        android.view.KeyEvent $r1, $r2;

        r0 := @this: android.app.Instrumentation;

        i0 := @parameter0: int;

        $r1 = new android.view.KeyEvent;

        specialinvoke $r1.<android.view.KeyEvent: void <init>(int,int)>(0, i0);

        virtualinvoke r0.<android.app.Instrumentation: void sendKeySync(android.view.KeyEvent)>($r1);

        $r2 = new android.view.KeyEvent;

        specialinvoke $r2.<android.view.KeyEvent: void <init>(int,int)>(1, i0);

        virtualinvoke r0.<android.app.Instrumentation: void sendKeySync(android.view.KeyEvent)>($r2);

        return;
    }

    public void sendKeyDownUpSync(int)
    {
        android.app.Instrumentation r0;
        int i0;
        android.view.KeyEvent $r1, $r2;

        r0 := @this: android.app.Instrumentation;

        i0 := @parameter0: int;

        $r1 = new android.view.KeyEvent;

        specialinvoke $r1.<android.view.KeyEvent: void <init>(int,int)>(0, i0);

        virtualinvoke r0.<android.app.Instrumentation: void sendKeySync(android.view.KeyEvent)>($r1);

        $r2 = new android.view.KeyEvent;

        specialinvoke $r2.<android.view.KeyEvent: void <init>(int,int)>(1, i0);

        virtualinvoke r0.<android.app.Instrumentation: void sendKeySync(android.view.KeyEvent)>($r2);

        return;
    }

    public void sendKeySync(android.view.KeyEvent)
    {
        android.app.Instrumentation r0;
        android.view.KeyEvent r1, $r3;
        long l0, l6, l8, l9;
        int i1, $i4, $i5, i7;
        byte $b2, $b3;
        android.hardware.input.InputManager $r4;

        r0 := @this: android.app.Instrumentation;

        r1 := @parameter0: android.view.KeyEvent;

        specialinvoke r0.<android.app.Instrumentation: void validateNotAppThread()>();

        l0 = virtualinvoke r1.<android.view.KeyEvent: long getDownTime()>();

        l6 = virtualinvoke r1.<android.view.KeyEvent: long getEventTime()>();

        i1 = virtualinvoke r1.<android.view.KeyEvent: int getSource()>();

        i7 = i1;

        if i1 != 0 goto label1;

        i7 = 257;

     label1:
        l8 = l6;

        $b2 = l6 cmp 0L;

        if $b2 != 0 goto label2;

        l8 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

     label2:
        l9 = l0;

        $b3 = l0 cmp 0L;

        if $b3 != 0 goto label3;

        l9 = l8;

     label3:
        $r3 = new android.view.KeyEvent;

        specialinvoke $r3.<android.view.KeyEvent: void <init>(android.view.KeyEvent)>(r1);

        virtualinvoke $r3.<android.view.KeyEvent: void setTime(long,long)>(l9, l8);

        virtualinvoke $r3.<android.view.KeyEvent: void setSource(int)>(i7);

        $i4 = virtualinvoke r1.<android.view.KeyEvent: int getFlags()>();

        $i5 = $i4 | 8;

        virtualinvoke $r3.<android.view.KeyEvent: void setFlags(int)>($i5);

        $r4 = staticinvoke <android.hardware.input.InputManager: android.hardware.input.InputManager getInstance()>();

        virtualinvoke $r4.<android.hardware.input.InputManager: boolean injectInputEvent(android.view.InputEvent,int)>($r3, 2);

        return;
    }

    public void sendPointerSync(android.view.MotionEvent)
    {
        android.app.Instrumentation r0;
        int $i0, $i1;
        android.view.IWindowManager $r1;
        android.os.RemoteException $r2;
        android.view.MotionEvent r3;

        r0 := @this: android.app.Instrumentation;

        r3 := @parameter0: android.view.MotionEvent;

        specialinvoke r0.<android.app.Instrumentation: void validateNotAppThread()>();

        $i0 = virtualinvoke r3.<android.view.MotionEvent: int getSource()>();

        $i1 = $i0 & 2;

        if $i1 != 0 goto label1;

        virtualinvoke r3.<android.view.MotionEvent: void setSource(int)>(4098);

     label1:
        $r1 = staticinvoke <android.view.WindowManagerGlobal: android.view.IWindowManager getWindowManagerService()>();

        interfaceinvoke $r1.<android.view.IWindowManager: boolean injectInputAfterTransactionsApplied(android.view.InputEvent,int)>(r3, 2);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void sendStatus(int, android.os.Bundle)
    {
        android.app.Instrumentation r0;
        int i0;
        android.app.IInstrumentationWatcher r1;
        android.content.ComponentName $r2;
        android.os.RemoteException $r3;
        android.os.Bundle r4;

        r0 := @this: android.app.Instrumentation;

        i0 := @parameter0: int;

        r4 := @parameter1: android.os.Bundle;

        r1 = r0.<android.app.Instrumentation: android.app.IInstrumentationWatcher mWatcher>;

        if r1 == null goto label4;

     label1:
        $r2 = r0.<android.app.Instrumentation: android.content.ComponentName mComponent>;

        interfaceinvoke r1.<android.app.IInstrumentationWatcher: void instrumentationStatus(android.content.ComponentName,int,android.os.Bundle)>($r2, i0, r4);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        r0.<android.app.Instrumentation: android.app.IInstrumentationWatcher mWatcher> = null;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void sendStringSync(java.lang.String)
    {
        android.app.Instrumentation r0;
        android.view.KeyCharacterMap $r1;
        char[] $r2;
        int $i0, i2;
        android.view.KeyEvent $r3, $r4;
        long $l1;
        java.lang.String r5;
        android.view.KeyEvent[] r6;

        r0 := @this: android.app.Instrumentation;

        r5 := @parameter0: java.lang.String;

        if r5 != null goto label1;

        return;

     label1:
        $r1 = staticinvoke <android.view.KeyCharacterMap: android.view.KeyCharacterMap load(int)>(-1);

        $r2 = virtualinvoke r5.<java.lang.String: char[] toCharArray()>();

        r6 = virtualinvoke $r1.<android.view.KeyCharacterMap: android.view.KeyEvent[] getEvents(char[])>($r2);

        if r6 == null goto label3;

        i2 = 0;

     label2:
        $i0 = lengthof r6;

        if i2 >= $i0 goto label3;

        $r3 = r6[i2];

        $l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r4 = staticinvoke <android.view.KeyEvent: android.view.KeyEvent changeTimeRepeat(android.view.KeyEvent,long,int)>($r3, $l1, 0);

        virtualinvoke r0.<android.app.Instrumentation: void sendKeySync(android.view.KeyEvent)>($r4);

        i2 = i2 + 1;

        goto label2;

     label3:
        return;
    }

    public void sendTrackballEventSync(android.view.MotionEvent)
    {
        android.app.Instrumentation r0;
        android.view.MotionEvent r1;
        int $i0, $i1;
        android.hardware.input.InputManager $r2;

        r0 := @this: android.app.Instrumentation;

        r1 := @parameter0: android.view.MotionEvent;

        specialinvoke r0.<android.app.Instrumentation: void validateNotAppThread()>();

        $i0 = virtualinvoke r1.<android.view.MotionEvent: int getSource()>();

        $i1 = $i0 & 4;

        if $i1 != 0 goto label1;

        virtualinvoke r1.<android.view.MotionEvent: void setSource(int)>(65540);

     label1:
        $r2 = staticinvoke <android.hardware.input.InputManager: android.hardware.input.InputManager getInstance()>();

        virtualinvoke $r2.<android.hardware.input.InputManager: boolean injectInputEvent(android.view.InputEvent,int)>(r1, 2);

        return;
    }

    public void setAutomaticPerformanceSnapshots()
    {
        android.app.Instrumentation r0;
        android.os.PerformanceCollector $r1;

        r0 := @this: android.app.Instrumentation;

        r0.<android.app.Instrumentation: boolean mAutomaticPerformanceSnapshots> = 1;

        $r1 = new android.os.PerformanceCollector;

        specialinvoke $r1.<android.os.PerformanceCollector: void <init>()>();

        r0.<android.app.Instrumentation: android.os.PerformanceCollector mPerformanceCollector> = $r1;

        return;
    }

    public void setInTouchMode(boolean)
    {
        android.app.Instrumentation r0;
        boolean z0;
        android.os.IBinder $r2;
        android.view.IWindowManager $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.app.Instrumentation;

        z0 := @parameter0: boolean;

     label1:
        $r2 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("window");

        $r3 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager asInterface(android.os.IBinder)>($r2);

        interfaceinvoke $r3.<android.view.IWindowManager: void setInTouchMode(boolean)>(z0);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void start()
    {
        android.app.Instrumentation r0;
        java.lang.Thread $r1;
        java.lang.RuntimeException $r2;
        java.lang.StringBuilder $r3;
        java.lang.Class $r5;
        java.lang.String $r6, $r9;
        android.app.Instrumentation$InstrumentationThread $r8;

        r0 := @this: android.app.Instrumentation;

        $r1 = r0.<android.app.Instrumentation: java.lang.Thread mRunner>;

        if $r1 != null goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Instr: ");

        $r5 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = new android.app.Instrumentation$InstrumentationThread;

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<android.app.Instrumentation$InstrumentationThread: void <init>(android.app.Instrumentation,java.lang.String)>(r0, $r9);

        r0.<android.app.Instrumentation: java.lang.Thread mRunner> = $r8;

        virtualinvoke $r8.<java.lang.Thread: void start()>();

        return;

     label1:
        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Instrumentation already started");

        throw $r2;
    }

    public android.app.Activity startActivitySync(android.content.Intent)
    {
        android.app.Instrumentation r0;
        android.content.Intent r1;
        android.app.Activity $r2;

        r0 := @this: android.app.Instrumentation;

        r1 := @parameter0: android.content.Intent;

        $r2 = virtualinvoke r0.<android.app.Instrumentation: android.app.Activity startActivitySync(android.content.Intent,android.os.Bundle)>(r1, null);

        return $r2;
    }

    public android.app.Activity startActivitySync(android.content.Intent, android.os.Bundle)
    {
        android.app.Instrumentation r0;
        java.lang.Object r1, $r39;
        android.content.Intent r2, r32;
        java.lang.RuntimeException r3, r46;
        android.content.Context $r4, $r25;
        android.content.pm.PackageManager $r5;
        java.lang.String $r8, $r10, $r14, $r18, $r20, $r21, r35;
        android.app.ActivityThread $r9;
        boolean $z0, $z2;
        android.content.pm.ApplicationInfo $r19;
        java.util.List $r23, $r24, $r26;
        android.view.SurfaceControl$Transaction $r27;
        java.lang.Throwable $r28, $r29, $r30, $r31;
        android.os.Bundle r33;
        android.content.pm.ActivityInfo r34;
        android.content.ComponentName r36;
        android.app.Instrumentation$ActivityWaiter r37;
        java.util.ArrayList r38;
        android.app.Activity r41;
        java.lang.StringBuilder r45, r47;

        r0 := @this: android.app.Instrumentation;

        r32 := @parameter0: android.content.Intent;

        r33 := @parameter1: android.os.Bundle;

        specialinvoke r0.<android.app.Instrumentation: void validateNotAppThread()>();

        r1 = r0.<android.app.Instrumentation: java.lang.Object mSync>;

        entermonitor r1;

     label01:
        r2 = new android.content.Intent;

        specialinvoke r2.<android.content.Intent: void <init>(android.content.Intent)>(r32);

     label02:
        $r4 = virtualinvoke r0.<android.app.Instrumentation: android.content.Context getTargetContext()>();

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r34 = virtualinvoke r2.<android.content.Intent: android.content.pm.ActivityInfo resolveActivityInfo(android.content.pm.PackageManager,int)>($r5, 0);

     label03:
        if r34 == null goto label19;

     label04:
        $r9 = r0.<android.app.Instrumentation: android.app.ActivityThread mThread>;

        r35 = virtualinvoke $r9.<android.app.ActivityThread: java.lang.String getProcessName()>();

        $r10 = r34.<android.content.pm.ActivityInfo: java.lang.String processName>;

        $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r35);

        if $z0 == 0 goto label18;

        r36 = new android.content.ComponentName;

        $r19 = r34.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r21 = $r19.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r20 = r34.<android.content.pm.ActivityInfo: java.lang.String name>;

        specialinvoke r36.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r21, $r20);

        virtualinvoke r2.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>(r36);

        r37 = new android.app.Instrumentation$ActivityWaiter;

        specialinvoke r37.<android.app.Instrumentation$ActivityWaiter: void <init>(android.content.Intent)>(r2);

        $r23 = r0.<android.app.Instrumentation: java.util.List mWaitingActivities>;

        if $r23 != null goto label05;

        r38 = new java.util.ArrayList;

        specialinvoke r38.<java.util.ArrayList: void <init>()>();

        r0.<android.app.Instrumentation: java.util.List mWaitingActivities> = r38;

     label05:
        $r24 = r0.<android.app.Instrumentation: java.util.List mWaitingActivities>;

        interfaceinvoke $r24.<java.util.List: boolean add(java.lang.Object)>(r37);

        $r25 = virtualinvoke r0.<android.app.Instrumentation: android.content.Context getTargetContext()>();

        virtualinvoke $r25.<android.content.Context: void startActivity(android.content.Intent,android.os.Bundle)>(r2, r33);

     label06:
        $r39 = r0.<android.app.Instrumentation: java.lang.Object mSync>;

        virtualinvoke $r39.<java.lang.Object: void wait()>();

     label07:
        goto label09;

     label08:
        $r30 := @caughtexception;

     label09:
        $r26 = r0.<android.app.Instrumentation: java.util.List mWaitingActivities>;

        $z2 = interfaceinvoke $r26.<java.util.List: boolean contains(java.lang.Object)>(r37);

        if $z2 != 0 goto label06;

        r41 = r37.<android.app.Instrumentation$ActivityWaiter: android.app.Activity activity>;

        exitmonitor r1;

     label10:
        specialinvoke r0.<android.app.Instrumentation: void waitForEnterAnimationComplete(android.app.Activity)>(r41);

        $r27 = new android.view.SurfaceControl$Transaction;

        specialinvoke $r27.<android.view.SurfaceControl$Transaction: void <init>()>();

     label11:
        virtualinvoke $r27.<android.view.SurfaceControl$Transaction: void apply(boolean)>(1);

     label12:
        virtualinvoke $r27.<android.view.SurfaceControl$Transaction: void close()>();

        return r41;

     label13:
        $r29 := @caughtexception;

     label14:
        virtualinvoke $r27.<android.view.SurfaceControl$Transaction: void close()>();

     label15:
        goto label17;

     label16:
        $r28 := @caughtexception;

        virtualinvoke $r29.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r28);

     label17:
        throw $r29;

     label18:
        r3 = new java.lang.RuntimeException;

        r45 = new java.lang.StringBuilder;

        specialinvoke r45.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Intent in process ");

        virtualinvoke r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r35);

        virtualinvoke r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" resolved to different process ");

        $r14 = r34.<android.content.pm.ActivityInfo: java.lang.String processName>;

        virtualinvoke r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        virtualinvoke r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        virtualinvoke r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r18 = virtualinvoke r45.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r3.<java.lang.RuntimeException: void <init>(java.lang.String)>($r18);

        throw r3;

     label19:
        r46 = new java.lang.RuntimeException;

        r47 = new java.lang.StringBuilder;

        specialinvoke r47.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to resolve activity for: ");

        virtualinvoke r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r8 = virtualinvoke r47.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r46.<java.lang.RuntimeException: void <init>(java.lang.String)>($r8);

        throw r46;

     label20:
        $r31 := @caughtexception;

     label21:
        exitmonitor r1;

     label22:
        throw $r31;

        catch java.lang.Throwable from label01 to label02 with label20;
        catch java.lang.Throwable from label02 to label03 with label20;
        catch java.lang.Throwable from label04 to label05 with label20;
        catch java.lang.Throwable from label05 to label06 with label20;
        catch java.lang.InterruptedException from label06 to label07 with label08;
        catch java.lang.Throwable from label06 to label07 with label20;
        catch java.lang.Throwable from label09 to label10 with label20;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Throwable from label18 to label19 with label20;
        catch java.lang.Throwable from label19 to label20 with label20;
        catch java.lang.Throwable from label21 to label22 with label20;
    }

    public void startAllocCounting()
    {
        android.app.Instrumentation r0;
        java.lang.Runtime $r1, $r2, $r3;

        r0 := @this: android.app.Instrumentation;

        $r1 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        virtualinvoke $r1.<java.lang.Runtime: void gc()>();

        $r2 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        virtualinvoke $r2.<java.lang.Runtime: void runFinalization()>();

        $r3 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        virtualinvoke $r3.<java.lang.Runtime: void gc()>();

        staticinvoke <android.os.Debug: void resetAllCounts()>();

        staticinvoke <android.os.Debug: void startAllocCounting()>();

        return;
    }

    public void startPerformanceSnapshot()
    {
        android.app.Instrumentation r0;
        boolean $z0;
        android.os.PerformanceCollector $r1;

        r0 := @this: android.app.Instrumentation;

        $z0 = virtualinvoke r0.<android.app.Instrumentation: boolean isProfiling()>();

        if $z0 != 0 goto label1;

        $r1 = r0.<android.app.Instrumentation: android.os.PerformanceCollector mPerformanceCollector>;

        virtualinvoke $r1.<android.os.PerformanceCollector: void beginSnapshot(java.lang.String)>(null);

     label1:
        return;
    }

    public void startProfiling()
    {
        android.app.Instrumentation r0;
        android.app.ActivityThread $r2, $r4;
        boolean $z0;
        java.io.File $r3, $r6;
        java.lang.String $r5, $r7;

        r0 := @this: android.app.Instrumentation;

        $r2 = r0.<android.app.Instrumentation: android.app.ActivityThread mThread>;

        $z0 = virtualinvoke $r2.<android.app.ActivityThread: boolean isProfiling()>();

        if $z0 == 0 goto label1;

        $r3 = new java.io.File;

        $r4 = r0.<android.app.Instrumentation: android.app.ActivityThread mThread>;

        $r5 = virtualinvoke $r4.<android.app.ActivityThread: java.lang.String getProfileFilePath()>();

        specialinvoke $r3.<java.io.File: void <init>(java.lang.String)>($r5);

        $r6 = virtualinvoke $r3.<java.io.File: java.io.File getParentFile()>();

        virtualinvoke $r6.<java.io.File: boolean mkdirs()>();

        $r7 = virtualinvoke $r3.<java.io.File: java.lang.String toString()>();

        staticinvoke <android.os.Debug: void startMethodTracing(java.lang.String,int)>($r7, 8388608);

     label1:
        return;
    }

    public void stopAllocCounting()
    {
        android.app.Instrumentation r0;
        java.lang.Runtime $r1, $r2, $r3;

        r0 := @this: android.app.Instrumentation;

        $r1 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        virtualinvoke $r1.<java.lang.Runtime: void gc()>();

        $r2 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        virtualinvoke $r2.<java.lang.Runtime: void runFinalization()>();

        $r3 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        virtualinvoke $r3.<java.lang.Runtime: void gc()>();

        staticinvoke <android.os.Debug: void stopAllocCounting()>();

        return;
    }

    public void stopProfiling()
    {
        android.app.Instrumentation r0;
        android.app.ActivityThread $r1;
        boolean $z0;

        r0 := @this: android.app.Instrumentation;

        $r1 = r0.<android.app.Instrumentation: android.app.ActivityThread mThread>;

        $z0 = virtualinvoke $r1.<android.app.ActivityThread: boolean isProfiling()>();

        if $z0 == 0 goto label1;

        staticinvoke <android.os.Debug: void stopMethodTracing()>();

     label1:
        return;
    }

    public void waitForIdle(java.lang.Runnable)
    {
        android.app.Instrumentation r0;
        java.lang.Runnable r1;
        android.app.Instrumentation$Idler $r2;
        android.os.MessageQueue $r3;
        android.app.ActivityThread $r4;
        android.os.Handler $r5;
        android.app.Instrumentation$EmptyRunnable $r6;

        r0 := @this: android.app.Instrumentation;

        r1 := @parameter0: java.lang.Runnable;

        $r3 = r0.<android.app.Instrumentation: android.os.MessageQueue mMessageQueue>;

        $r2 = new android.app.Instrumentation$Idler;

        specialinvoke $r2.<android.app.Instrumentation$Idler: void <init>(java.lang.Runnable)>(r1);

        virtualinvoke $r3.<android.os.MessageQueue: void addIdleHandler(android.os.MessageQueue$IdleHandler)>($r2);

        $r4 = r0.<android.app.Instrumentation: android.app.ActivityThread mThread>;

        $r5 = virtualinvoke $r4.<android.app.ActivityThread: android.os.Handler getHandler()>();

        $r6 = new android.app.Instrumentation$EmptyRunnable;

        specialinvoke $r6.<android.app.Instrumentation$EmptyRunnable: void <init>(android.app.Instrumentation$1)>(null);

        virtualinvoke $r5.<android.os.Handler: boolean post(java.lang.Runnable)>($r6);

        return;
    }

    public void waitForIdleSync()
    {
        android.app.Instrumentation r0;
        android.app.Instrumentation$Idler $r2;
        android.os.MessageQueue $r3;
        android.app.ActivityThread $r4;
        android.os.Handler $r5;
        android.app.Instrumentation$EmptyRunnable $r6;

        r0 := @this: android.app.Instrumentation;

        specialinvoke r0.<android.app.Instrumentation: void validateNotAppThread()>();

        $r2 = new android.app.Instrumentation$Idler;

        specialinvoke $r2.<android.app.Instrumentation$Idler: void <init>(java.lang.Runnable)>(null);

        $r3 = r0.<android.app.Instrumentation: android.os.MessageQueue mMessageQueue>;

        virtualinvoke $r3.<android.os.MessageQueue: void addIdleHandler(android.os.MessageQueue$IdleHandler)>($r2);

        $r4 = r0.<android.app.Instrumentation: android.app.ActivityThread mThread>;

        $r5 = virtualinvoke $r4.<android.app.ActivityThread: android.os.Handler getHandler()>();

        $r6 = new android.app.Instrumentation$EmptyRunnable;

        specialinvoke $r6.<android.app.Instrumentation$EmptyRunnable: void <init>(android.app.Instrumentation$1)>(null);

        virtualinvoke $r5.<android.os.Handler: boolean post(java.lang.Runnable)>($r6);

        virtualinvoke $r2.<android.app.Instrumentation$Idler: void waitForIdle()>();

        return;
    }

    public android.app.Activity waitForMonitor(android.app.Instrumentation$ActivityMonitor)
    {
        android.app.Instrumentation r0;
        android.app.Activity r1;
        java.lang.Object r2;
        java.util.List $r3;
        java.lang.Throwable $r4;
        android.app.Instrumentation$ActivityMonitor r5;

        r0 := @this: android.app.Instrumentation;

        r5 := @parameter0: android.app.Instrumentation$ActivityMonitor;

        r1 = virtualinvoke r5.<android.app.Instrumentation$ActivityMonitor: android.app.Activity waitForActivity()>();

        r2 = r0.<android.app.Instrumentation: java.lang.Object mSync>;

        entermonitor r2;

     label1:
        $r3 = r0.<android.app.Instrumentation: java.util.List mActivityMonitors>;

        interfaceinvoke $r3.<java.util.List: boolean remove(java.lang.Object)>(r5);

        exitmonitor r2;

     label2:
        return r1;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r2;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public android.app.Activity waitForMonitorWithTimeout(android.app.Instrumentation$ActivityMonitor, long)
    {
        android.app.Instrumentation r0;
        long l0;
        android.app.Activity r1;
        java.lang.Object r2;
        java.util.List $r3;
        java.lang.Throwable $r4;
        android.app.Instrumentation$ActivityMonitor r5;

        r0 := @this: android.app.Instrumentation;

        r5 := @parameter0: android.app.Instrumentation$ActivityMonitor;

        l0 := @parameter1: long;

        r1 = virtualinvoke r5.<android.app.Instrumentation$ActivityMonitor: android.app.Activity waitForActivityWithTimeout(long)>(l0);

        r2 = r0.<android.app.Instrumentation: java.lang.Object mSync>;

        entermonitor r2;

     label1:
        $r3 = r0.<android.app.Instrumentation: java.util.List mActivityMonitors>;

        interfaceinvoke $r3.<java.util.List: boolean remove(java.lang.Object)>(r5);

        exitmonitor r2;

     label2:
        return r1;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r2;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public static void <clinit>()
    {
        <android.app.Instrumentation: java.lang.String TAG> = "Instrumentation";

        <android.app.Instrumentation: java.lang.String REPORT_KEY_STREAMRESULT> = "stream";

        <android.app.Instrumentation: java.lang.String REPORT_KEY_IDENTIFIER> = "id";

        return;
    }
}
