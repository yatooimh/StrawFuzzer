final class android.app.LoadedApk$ServiceDispatcher extends java.lang.Object
{
    private final android.util.ArrayMap mActiveConnections;
    private final java.util.concurrent.Executor mActivityExecutor;
    private final android.os.Handler mActivityThread;
    private final android.content.ServiceConnection mConnection;
    private final android.content.Context mContext;
    private final int mFlags;
    private boolean mForgotten;
    private final android.app.LoadedApk$ServiceDispatcher$InnerConnection mIServiceConnection;
    private final android.app.ServiceConnectionLeaked mLocation;
    private java.lang.RuntimeException mUnbindLocation;

    void <init>(android.content.ServiceConnection, android.content.Context, android.os.Handler, int)
    {
        android.app.LoadedApk$ServiceDispatcher r0;
        android.content.Context r1;
        android.os.Handler r2;
        int i0;
        android.util.ArrayMap $r3;
        android.app.LoadedApk$ServiceDispatcher$InnerConnection $r4;
        android.app.ServiceConnectionLeaked $r5;
        android.content.ServiceConnection r7;

        r0 := @this: android.app.LoadedApk$ServiceDispatcher;

        r7 := @parameter0: android.content.ServiceConnection;

        r1 := @parameter1: android.content.Context;

        r2 := @parameter2: android.os.Handler;

        i0 := @parameter3: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new android.util.ArrayMap;

        specialinvoke $r3.<android.util.ArrayMap: void <init>()>();

        r0.<android.app.LoadedApk$ServiceDispatcher: android.util.ArrayMap mActiveConnections> = $r3;

        $r4 = new android.app.LoadedApk$ServiceDispatcher$InnerConnection;

        specialinvoke $r4.<android.app.LoadedApk$ServiceDispatcher$InnerConnection: void <init>(android.app.LoadedApk$ServiceDispatcher)>(r0);

        r0.<android.app.LoadedApk$ServiceDispatcher: android.app.LoadedApk$ServiceDispatcher$InnerConnection mIServiceConnection> = $r4;

        r0.<android.app.LoadedApk$ServiceDispatcher: android.content.ServiceConnection mConnection> = r7;

        r0.<android.app.LoadedApk$ServiceDispatcher: android.content.Context mContext> = r1;

        r0.<android.app.LoadedApk$ServiceDispatcher: android.os.Handler mActivityThread> = r2;

        r0.<android.app.LoadedApk$ServiceDispatcher: java.util.concurrent.Executor mActivityExecutor> = null;

        $r5 = new android.app.ServiceConnectionLeaked;

        specialinvoke $r5.<android.app.ServiceConnectionLeaked: void <init>(java.lang.String)>(null);

        r0.<android.app.LoadedApk$ServiceDispatcher: android.app.ServiceConnectionLeaked mLocation> = $r5;

        virtualinvoke $r5.<android.app.ServiceConnectionLeaked: java.lang.Throwable fillInStackTrace()>();

        r0.<android.app.LoadedApk$ServiceDispatcher: int mFlags> = i0;

        return;
    }

    void <init>(android.content.ServiceConnection, android.content.Context, java.util.concurrent.Executor, int)
    {
        android.app.LoadedApk$ServiceDispatcher r0;
        android.content.Context r1;
        java.util.concurrent.Executor r2;
        int i0;
        android.util.ArrayMap $r3;
        android.app.LoadedApk$ServiceDispatcher$InnerConnection $r4;
        android.app.ServiceConnectionLeaked $r5;
        android.content.ServiceConnection r7;

        r0 := @this: android.app.LoadedApk$ServiceDispatcher;

        r7 := @parameter0: android.content.ServiceConnection;

        r1 := @parameter1: android.content.Context;

        r2 := @parameter2: java.util.concurrent.Executor;

        i0 := @parameter3: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new android.util.ArrayMap;

        specialinvoke $r3.<android.util.ArrayMap: void <init>()>();

        r0.<android.app.LoadedApk$ServiceDispatcher: android.util.ArrayMap mActiveConnections> = $r3;

        $r4 = new android.app.LoadedApk$ServiceDispatcher$InnerConnection;

        specialinvoke $r4.<android.app.LoadedApk$ServiceDispatcher$InnerConnection: void <init>(android.app.LoadedApk$ServiceDispatcher)>(r0);

        r0.<android.app.LoadedApk$ServiceDispatcher: android.app.LoadedApk$ServiceDispatcher$InnerConnection mIServiceConnection> = $r4;

        r0.<android.app.LoadedApk$ServiceDispatcher: android.content.ServiceConnection mConnection> = r7;

        r0.<android.app.LoadedApk$ServiceDispatcher: android.content.Context mContext> = r1;

        r0.<android.app.LoadedApk$ServiceDispatcher: android.os.Handler mActivityThread> = null;

        r0.<android.app.LoadedApk$ServiceDispatcher: java.util.concurrent.Executor mActivityExecutor> = r2;

        $r5 = new android.app.ServiceConnectionLeaked;

        specialinvoke $r5.<android.app.ServiceConnectionLeaked: void <init>(java.lang.String)>(null);

        r0.<android.app.LoadedApk$ServiceDispatcher: android.app.ServiceConnectionLeaked mLocation> = $r5;

        virtualinvoke $r5.<android.app.ServiceConnectionLeaked: java.lang.Throwable fillInStackTrace()>();

        r0.<android.app.LoadedApk$ServiceDispatcher: int mFlags> = i0;

        return;
    }

    public void connected(android.content.ComponentName, android.os.IBinder, boolean)
    {
        android.app.LoadedApk$ServiceDispatcher r0;
        android.content.ComponentName r1;
        android.os.IBinder r2;
        boolean z0;
        android.app.LoadedApk$ServiceDispatcher$RunConnection $r3, $r4;
        java.util.concurrent.Executor r5;
        android.os.Handler r6;

        r0 := @this: android.app.LoadedApk$ServiceDispatcher;

        r1 := @parameter0: android.content.ComponentName;

        r2 := @parameter1: android.os.IBinder;

        z0 := @parameter2: boolean;

        r5 = r0.<android.app.LoadedApk$ServiceDispatcher: java.util.concurrent.Executor mActivityExecutor>;

        if r5 == null goto label1;

        $r4 = new android.app.LoadedApk$ServiceDispatcher$RunConnection;

        specialinvoke $r4.<android.app.LoadedApk$ServiceDispatcher$RunConnection: void <init>(android.app.LoadedApk$ServiceDispatcher,android.content.ComponentName,android.os.IBinder,int,boolean)>(r0, r1, r2, 0, z0);

        interfaceinvoke r5.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r4);

        goto label3;

     label1:
        r6 = r0.<android.app.LoadedApk$ServiceDispatcher: android.os.Handler mActivityThread>;

        if r6 == null goto label2;

        $r3 = new android.app.LoadedApk$ServiceDispatcher$RunConnection;

        specialinvoke $r3.<android.app.LoadedApk$ServiceDispatcher$RunConnection: void <init>(android.app.LoadedApk$ServiceDispatcher,android.content.ComponentName,android.os.IBinder,int,boolean)>(r0, r1, r2, 0, z0);

        virtualinvoke r6.<android.os.Handler: boolean post(java.lang.Runnable)>($r3);

        goto label3;

     label2:
        virtualinvoke r0.<android.app.LoadedApk$ServiceDispatcher: void doConnected(android.content.ComponentName,android.os.IBinder,boolean)>(r1, r2, z0);

     label3:
        return;
    }

    public void death(android.content.ComponentName, android.os.IBinder)
    {
        android.app.LoadedApk$ServiceDispatcher r0;
        android.content.ComponentName r1;
        android.os.IBinder r2;
        android.app.LoadedApk$ServiceDispatcher$RunConnection $r3, $r4;
        java.util.concurrent.Executor r5;
        android.os.Handler r6;

        r0 := @this: android.app.LoadedApk$ServiceDispatcher;

        r1 := @parameter0: android.content.ComponentName;

        r2 := @parameter1: android.os.IBinder;

        r5 = r0.<android.app.LoadedApk$ServiceDispatcher: java.util.concurrent.Executor mActivityExecutor>;

        if r5 == null goto label1;

        $r4 = new android.app.LoadedApk$ServiceDispatcher$RunConnection;

        specialinvoke $r4.<android.app.LoadedApk$ServiceDispatcher$RunConnection: void <init>(android.app.LoadedApk$ServiceDispatcher,android.content.ComponentName,android.os.IBinder,int,boolean)>(r0, r1, r2, 1, 0);

        interfaceinvoke r5.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r4);

        goto label3;

     label1:
        r6 = r0.<android.app.LoadedApk$ServiceDispatcher: android.os.Handler mActivityThread>;

        if r6 == null goto label2;

        $r3 = new android.app.LoadedApk$ServiceDispatcher$RunConnection;

        specialinvoke $r3.<android.app.LoadedApk$ServiceDispatcher$RunConnection: void <init>(android.app.LoadedApk$ServiceDispatcher,android.content.ComponentName,android.os.IBinder,int,boolean)>(r0, r1, r2, 1, 0);

        virtualinvoke r6.<android.os.Handler: boolean post(java.lang.Runnable)>($r3);

        goto label3;

     label2:
        virtualinvoke r0.<android.app.LoadedApk$ServiceDispatcher: void doDeath(android.content.ComponentName,android.os.IBinder)>(r1, r2);

     label3:
        return;
    }

    public void doConnected(android.content.ComponentName, android.os.IBinder, boolean)
    {
        android.app.LoadedApk$ServiceDispatcher r0;
        boolean z0, $z1;
        android.app.LoadedApk$ServiceDispatcher$ConnectionInfo r1, r2;
        android.app.LoadedApk$ServiceDispatcher$DeathMonitor r3;
        android.util.ArrayMap $r4, $r6, $r15, $r20;
        java.lang.Object $r5;
        android.content.ServiceConnection $r8, $r9, $r10, $r11;
        android.os.IBinder$DeathRecipient $r12, $r14;
        android.os.IBinder $r13, $r17, r23;
        java.lang.Throwable $r18;
        android.os.RemoteException $r19;
        android.content.ComponentName r22;

        r0 := @this: android.app.LoadedApk$ServiceDispatcher;

        r22 := @parameter0: android.content.ComponentName;

        r23 := @parameter1: android.os.IBinder;

        z0 := @parameter2: boolean;

        entermonitor r0;

     label01:
        $z1 = r0.<android.app.LoadedApk$ServiceDispatcher: boolean mForgotten>;

        if $z1 == 0 goto label03;

        exitmonitor r0;

     label02:
        return;

     label03:
        $r4 = r0.<android.app.LoadedApk$ServiceDispatcher: android.util.ArrayMap mActiveConnections>;

        $r5 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r22);

        r1 = (android.app.LoadedApk$ServiceDispatcher$ConnectionInfo) $r5;

     label04:
        if r1 == null goto label07;

     label05:
        $r17 = r1.<android.app.LoadedApk$ServiceDispatcher$ConnectionInfo: android.os.IBinder binder>;

        if $r17 != r23 goto label07;

        exitmonitor r0;

     label06:
        return;

     label07:
        if r23 == null goto label14;

     label08:
        r2 = new android.app.LoadedApk$ServiceDispatcher$ConnectionInfo;

        specialinvoke r2.<android.app.LoadedApk$ServiceDispatcher$ConnectionInfo: void <init>(android.app.LoadedApk$1)>(null);

        r2.<android.app.LoadedApk$ServiceDispatcher$ConnectionInfo: android.os.IBinder binder> = r23;

        r3 = new android.app.LoadedApk$ServiceDispatcher$DeathMonitor;

        specialinvoke r3.<android.app.LoadedApk$ServiceDispatcher$DeathMonitor: void <init>(android.app.LoadedApk$ServiceDispatcher,android.content.ComponentName,android.os.IBinder)>(r0, r22, r23);

        r2.<android.app.LoadedApk$ServiceDispatcher$ConnectionInfo: android.os.IBinder$DeathRecipient deathMonitor> = r3;

     label09:
        $r14 = r2.<android.app.LoadedApk$ServiceDispatcher$ConnectionInfo: android.os.IBinder$DeathRecipient deathMonitor>;

        interfaceinvoke r23.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>($r14, 0);

        $r15 = r0.<android.app.LoadedApk$ServiceDispatcher: android.util.ArrayMap mActiveConnections>;

        virtualinvoke $r15.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r22, r2);

     label10:
        goto label15;

     label11:
        $r19 := @caughtexception;

     label12:
        $r20 = r0.<android.app.LoadedApk$ServiceDispatcher: android.util.ArrayMap mActiveConnections>;

        virtualinvoke $r20.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r22);

        exitmonitor r0;

     label13:
        return;

     label14:
        $r6 = r0.<android.app.LoadedApk$ServiceDispatcher: android.util.ArrayMap mActiveConnections>;

        virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r22);

     label15:
        if r1 == null goto label17;

     label16:
        $r13 = r1.<android.app.LoadedApk$ServiceDispatcher$ConnectionInfo: android.os.IBinder binder>;

        $r12 = r1.<android.app.LoadedApk$ServiceDispatcher$ConnectionInfo: android.os.IBinder$DeathRecipient deathMonitor>;

        interfaceinvoke $r13.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r12, 0);

     label17:
        exitmonitor r0;

     label18:
        if r1 == null goto label19;

        $r11 = r0.<android.app.LoadedApk$ServiceDispatcher: android.content.ServiceConnection mConnection>;

        interfaceinvoke $r11.<android.content.ServiceConnection: void onServiceDisconnected(android.content.ComponentName)>(r22);

     label19:
        if z0 == 0 goto label20;

        $r10 = r0.<android.app.LoadedApk$ServiceDispatcher: android.content.ServiceConnection mConnection>;

        interfaceinvoke $r10.<android.content.ServiceConnection: void onBindingDied(android.content.ComponentName)>(r22);

     label20:
        if r23 == null goto label21;

        $r9 = r0.<android.app.LoadedApk$ServiceDispatcher: android.content.ServiceConnection mConnection>;

        interfaceinvoke $r9.<android.content.ServiceConnection: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>(r22, r23);

        goto label22;

     label21:
        $r8 = r0.<android.app.LoadedApk$ServiceDispatcher: android.content.ServiceConnection mConnection>;

        interfaceinvoke $r8.<android.content.ServiceConnection: void onNullBinding(android.content.ComponentName)>(r22);

     label22:
        return;

     label23:
        $r18 := @caughtexception;

     label24:
        exitmonitor r0;

     label25:
        throw $r18;

        catch java.lang.Throwable from label01 to label02 with label23;
        catch java.lang.Throwable from label03 to label04 with label23;
        catch java.lang.Throwable from label05 to label06 with label23;
        catch java.lang.Throwable from label08 to label09 with label23;
        catch android.os.RemoteException from label09 to label10 with label11;
        catch java.lang.Throwable from label09 to label10 with label23;
        catch java.lang.Throwable from label12 to label13 with label23;
        catch java.lang.Throwable from label14 to label15 with label23;
        catch java.lang.Throwable from label16 to label17 with label23;
        catch java.lang.Throwable from label17 to label18 with label23;
        catch java.lang.Throwable from label24 to label25 with label23;
    }

    public void doDeath(android.content.ComponentName, android.os.IBinder)
    {
        android.app.LoadedApk$ServiceDispatcher r0;
        android.os.IBinder r1, $r5, $r9;
        android.app.LoadedApk$ServiceDispatcher$ConnectionInfo r2;
        android.util.ArrayMap $r3, $r6;
        java.lang.Object $r4;
        android.os.IBinder$DeathRecipient $r8;
        android.content.ServiceConnection $r10;
        java.lang.Throwable $r11;
        android.content.ComponentName r12;

        r0 := @this: android.app.LoadedApk$ServiceDispatcher;

        r12 := @parameter0: android.content.ComponentName;

        r1 := @parameter1: android.os.IBinder;

        entermonitor r0;

     label01:
        $r3 = r0.<android.app.LoadedApk$ServiceDispatcher: android.util.ArrayMap mActiveConnections>;

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r12);

        r2 = (android.app.LoadedApk$ServiceDispatcher$ConnectionInfo) $r4;

     label02:
        if r2 == null goto label08;

     label03:
        $r5 = r2.<android.app.LoadedApk$ServiceDispatcher$ConnectionInfo: android.os.IBinder binder>;

        if $r5 == r1 goto label05;

     label04:
        goto label08;

     label05:
        $r6 = r0.<android.app.LoadedApk$ServiceDispatcher: android.util.ArrayMap mActiveConnections>;

        virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r12);

        $r9 = r2.<android.app.LoadedApk$ServiceDispatcher$ConnectionInfo: android.os.IBinder binder>;

        $r8 = r2.<android.app.LoadedApk$ServiceDispatcher$ConnectionInfo: android.os.IBinder$DeathRecipient deathMonitor>;

        interfaceinvoke $r9.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r8, 0);

     label06:
        exitmonitor r0;

     label07:
        $r10 = r0.<android.app.LoadedApk$ServiceDispatcher: android.content.ServiceConnection mConnection>;

        interfaceinvoke $r10.<android.content.ServiceConnection: void onServiceDisconnected(android.content.ComponentName)>(r12);

        return;

     label08:
        exitmonitor r0;

     label09:
        return;

     label10:
        $r11 := @caughtexception;

     label11:
        exitmonitor r0;

     label12:
        throw $r11;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    void doForget()
    {
        android.app.LoadedApk$ServiceDispatcher r0;
        android.util.ArrayMap $r1, $r2, $r3;
        int $i0, i1;
        java.lang.Object $r4;
        android.os.IBinder$DeathRecipient $r5;
        android.os.IBinder $r6;
        java.lang.Throwable $r7;
        android.app.LoadedApk$ServiceDispatcher$ConnectionInfo r8;

        r0 := @this: android.app.LoadedApk$ServiceDispatcher;

        entermonitor r0;

        i1 = 0;

     label1:
        $r1 = r0.<android.app.LoadedApk$ServiceDispatcher: android.util.ArrayMap mActiveConnections>;

        $i0 = virtualinvoke $r1.<android.util.ArrayMap: int size()>();

        if i1 >= $i0 goto label3;

        $r3 = r0.<android.app.LoadedApk$ServiceDispatcher: android.util.ArrayMap mActiveConnections>;

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i1);

        r8 = (android.app.LoadedApk$ServiceDispatcher$ConnectionInfo) $r4;

        $r6 = r8.<android.app.LoadedApk$ServiceDispatcher$ConnectionInfo: android.os.IBinder binder>;

        $r5 = r8.<android.app.LoadedApk$ServiceDispatcher$ConnectionInfo: android.os.IBinder$DeathRecipient deathMonitor>;

        interfaceinvoke $r6.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r5, 0);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r2 = r0.<android.app.LoadedApk$ServiceDispatcher: android.util.ArrayMap mActiveConnections>;

        virtualinvoke $r2.<android.util.ArrayMap: void clear()>();

        r0.<android.app.LoadedApk$ServiceDispatcher: boolean mForgotten> = 1;

        exitmonitor r0;

     label4:
        return;

     label5:
        $r7 := @caughtexception;

     label6:
        exitmonitor r0;

     label7:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    int getFlags()
    {
        android.app.LoadedApk$ServiceDispatcher r0;
        int $i0;

        r0 := @this: android.app.LoadedApk$ServiceDispatcher;

        $i0 = r0.<android.app.LoadedApk$ServiceDispatcher: int mFlags>;

        return $i0;
    }

    android.app.IServiceConnection getIServiceConnection()
    {
        android.app.LoadedApk$ServiceDispatcher r0;
        android.app.LoadedApk$ServiceDispatcher$InnerConnection $r1;

        r0 := @this: android.app.LoadedApk$ServiceDispatcher;

        $r1 = r0.<android.app.LoadedApk$ServiceDispatcher: android.app.LoadedApk$ServiceDispatcher$InnerConnection mIServiceConnection>;

        return $r1;
    }

    android.app.ServiceConnectionLeaked getLocation()
    {
        android.app.LoadedApk$ServiceDispatcher r0;
        android.app.ServiceConnectionLeaked $r1;

        r0 := @this: android.app.LoadedApk$ServiceDispatcher;

        $r1 = r0.<android.app.LoadedApk$ServiceDispatcher: android.app.ServiceConnectionLeaked mLocation>;

        return $r1;
    }

    android.content.ServiceConnection getServiceConnection()
    {
        android.app.LoadedApk$ServiceDispatcher r0;
        android.content.ServiceConnection $r1;

        r0 := @this: android.app.LoadedApk$ServiceDispatcher;

        $r1 = r0.<android.app.LoadedApk$ServiceDispatcher: android.content.ServiceConnection mConnection>;

        return $r1;
    }

    java.lang.RuntimeException getUnbindLocation()
    {
        android.app.LoadedApk$ServiceDispatcher r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.app.LoadedApk$ServiceDispatcher;

        $r1 = r0.<android.app.LoadedApk$ServiceDispatcher: java.lang.RuntimeException mUnbindLocation>;

        return $r1;
    }

    void setUnbindLocation(java.lang.RuntimeException)
    {
        android.app.LoadedApk$ServiceDispatcher r0;
        java.lang.RuntimeException r1;

        r0 := @this: android.app.LoadedApk$ServiceDispatcher;

        r1 := @parameter0: java.lang.RuntimeException;

        r0.<android.app.LoadedApk$ServiceDispatcher: java.lang.RuntimeException mUnbindLocation> = r1;

        return;
    }

    void validate(android.content.Context, android.os.Handler, java.util.concurrent.Executor)
    {
        android.app.LoadedApk$ServiceDispatcher r0;
        java.util.concurrent.Executor r1, $r28, $r34;
        android.content.Context $r2, $r8, r41;
        java.lang.StringBuilder $r3, $r16, $r29;
        android.content.ServiceConnection $r5, $r18, $r31;
        java.lang.RuntimeException $r13, $r26, $r39;
        java.lang.String $r14, $r27, $r40;
        android.os.Handler $r15, $r21, r42;

        r0 := @this: android.app.LoadedApk$ServiceDispatcher;

        r41 := @parameter0: android.content.Context;

        r42 := @parameter1: android.os.Handler;

        r1 := @parameter2: java.util.concurrent.Executor;

        $r2 = r0.<android.app.LoadedApk$ServiceDispatcher: android.content.Context mContext>;

        if $r2 != r41 goto label3;

        $r15 = r0.<android.app.LoadedApk$ServiceDispatcher: android.os.Handler mActivityThread>;

        if $r15 != r42 goto label2;

        $r28 = r0.<android.app.LoadedApk$ServiceDispatcher: java.util.concurrent.Executor mActivityExecutor>;

        if $r28 != r1 goto label1;

        return;

     label1:
        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ServiceConnection ");

        $r31 = r0.<android.app.LoadedApk$ServiceDispatcher: android.content.ServiceConnection mConnection>;

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r31);

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" registered with differing executor (was ");

        $r34 = r0.<android.app.LoadedApk$ServiceDispatcher: java.util.concurrent.Executor mActivityExecutor>;

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r34);

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" now ");

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r39 = new java.lang.RuntimeException;

        $r40 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r39.<java.lang.RuntimeException: void <init>(java.lang.String)>($r40);

        throw $r39;

     label2:
        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ServiceConnection ");

        $r18 = r0.<android.app.LoadedApk$ServiceDispatcher: android.content.ServiceConnection mConnection>;

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" registered with differing handler (was ");

        $r21 = r0.<android.app.LoadedApk$ServiceDispatcher: android.os.Handler mActivityThread>;

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r21);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" now ");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r42);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r26 = new java.lang.RuntimeException;

        $r27 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r26.<java.lang.RuntimeException: void <init>(java.lang.String)>($r27);

        throw $r26;

     label3:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ServiceConnection ");

        $r5 = r0.<android.app.LoadedApk$ServiceDispatcher: android.content.ServiceConnection mConnection>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" registered with differing Context (was ");

        $r8 = r0.<android.app.LoadedApk$ServiceDispatcher: android.content.Context mContext>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" now ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r41);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r13 = new java.lang.RuntimeException;

        $r14 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.String)>($r14);

        throw $r13;
    }
}
