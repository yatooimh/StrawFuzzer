final class android.app.LoaderManagerImpl$LoaderInfo extends java.lang.Object implements android.content.Loader$OnLoadCompleteListener, android.content.Loader$OnLoadCanceledListener
{
    final android.os.Bundle mArgs;
    android.app.LoaderManager$LoaderCallbacks mCallbacks;
    java.lang.Object mData;
    boolean mDeliveredData;
    boolean mDestroyed;
    boolean mHaveData;
    final int mId;
    boolean mListenerRegistered;
    android.content.Loader mLoader;
    android.app.LoaderManagerImpl$LoaderInfo mPendingLoader;
    boolean mReportNextStart;
    boolean mRetaining;
    boolean mRetainingStarted;
    boolean mStarted;
    final android.app.LoaderManagerImpl this$0;

    public void <init>(android.app.LoaderManagerImpl, int, android.os.Bundle, android.app.LoaderManager$LoaderCallbacks)
    {
        android.app.LoaderManagerImpl$LoaderInfo r0;
        android.app.LoaderManagerImpl r1;
        int i0;
        android.os.Bundle r2;
        android.app.LoaderManager$LoaderCallbacks r3;

        r0 := @this: android.app.LoaderManagerImpl$LoaderInfo;

        r1 := @parameter0: android.app.LoaderManagerImpl;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.Bundle;

        r3 := @parameter3: android.app.LoaderManager$LoaderCallbacks;

        r0.<android.app.LoaderManagerImpl$LoaderInfo: android.app.LoaderManagerImpl this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.app.LoaderManagerImpl$LoaderInfo: int mId> = i0;

        r0.<android.app.LoaderManagerImpl$LoaderInfo: android.os.Bundle mArgs> = r2;

        r0.<android.app.LoaderManagerImpl$LoaderInfo: android.app.LoaderManager$LoaderCallbacks mCallbacks> = r3;

        return;
    }

    void callOnLoadFinished(android.content.Loader, java.lang.Object)
    {
        android.app.LoaderManagerImpl$LoaderInfo r0;
        java.lang.Object r1;
        java.lang.StringBuilder r2;
        android.app.LoaderManager$LoaderCallbacks $r3, $r6;
        android.app.LoaderManagerImpl $r4, $r7, $r9, $r18, $r21, $r25, $r27;
        android.app.FragmentHostCallback $r5, $r8, $r10, $r19, $r22, $r26, $r28;
        boolean $z0;
        android.app.FragmentManagerImpl $r11, $r20, $r23, $r29;
        java.lang.String $r15, $r17, r31;
        java.lang.Throwable $r24;
        android.content.Loader r30;

        r0 := @this: android.app.LoaderManagerImpl$LoaderInfo;

        r30 := @parameter0: android.content.Loader;

        r1 := @parameter1: java.lang.Object;

        $r3 = r0.<android.app.LoaderManagerImpl$LoaderInfo: android.app.LoaderManager$LoaderCallbacks mCallbacks>;

        if $r3 == null goto label7;

        r31 = null;

        $r4 = r0.<android.app.LoaderManagerImpl$LoaderInfo: android.app.LoaderManagerImpl this$0>;

        $r5 = staticinvoke <android.app.LoaderManagerImpl: android.app.FragmentHostCallback access$000(android.app.LoaderManagerImpl)>($r4);

        if $r5 == null goto label1;

        $r18 = r0.<android.app.LoaderManagerImpl$LoaderInfo: android.app.LoaderManagerImpl this$0>;

        $r19 = staticinvoke <android.app.LoaderManagerImpl: android.app.FragmentHostCallback access$000(android.app.LoaderManagerImpl)>($r18);

        $r20 = $r19.<android.app.FragmentHostCallback: android.app.FragmentManagerImpl mFragmentManager>;

        r31 = $r20.<android.app.FragmentManagerImpl: java.lang.String mNoTransactionsBecause>;

        $r21 = r0.<android.app.LoaderManagerImpl$LoaderInfo: android.app.LoaderManagerImpl this$0>;

        $r22 = staticinvoke <android.app.LoaderManagerImpl: android.app.FragmentHostCallback access$000(android.app.LoaderManagerImpl)>($r21);

        $r23 = $r22.<android.app.FragmentHostCallback: android.app.FragmentManagerImpl mFragmentManager>;

        $r23.<android.app.FragmentManagerImpl: java.lang.String mNoTransactionsBecause> = "onLoadFinished";

     label1:
        $z0 = <android.app.LoaderManagerImpl: boolean DEBUG>;

        if $z0 == 0 goto label2;

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  onLoadFinished in ");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r30);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r15 = virtualinvoke r30.<android.content.Loader: java.lang.String dataToString(java.lang.Object)>(r1);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("LoaderManager", $r17);

     label2:
        $r6 = r0.<android.app.LoaderManagerImpl$LoaderInfo: android.app.LoaderManager$LoaderCallbacks mCallbacks>;

        interfaceinvoke $r6.<android.app.LoaderManager$LoaderCallbacks: void onLoadFinished(android.content.Loader,java.lang.Object)>(r30, r1);

     label3:
        $r7 = r0.<android.app.LoaderManagerImpl$LoaderInfo: android.app.LoaderManagerImpl this$0>;

        $r8 = staticinvoke <android.app.LoaderManagerImpl: android.app.FragmentHostCallback access$000(android.app.LoaderManagerImpl)>($r7);

        if $r8 == null goto label4;

        $r9 = r0.<android.app.LoaderManagerImpl$LoaderInfo: android.app.LoaderManagerImpl this$0>;

        $r10 = staticinvoke <android.app.LoaderManagerImpl: android.app.FragmentHostCallback access$000(android.app.LoaderManagerImpl)>($r9);

        $r11 = $r10.<android.app.FragmentHostCallback: android.app.FragmentManagerImpl mFragmentManager>;

        $r11.<android.app.FragmentManagerImpl: java.lang.String mNoTransactionsBecause> = r31;

     label4:
        r0.<android.app.LoaderManagerImpl$LoaderInfo: boolean mDeliveredData> = 1;

        goto label7;

     label5:
        $r24 := @caughtexception;

        $r25 = r0.<android.app.LoaderManagerImpl$LoaderInfo: android.app.LoaderManagerImpl this$0>;

        $r26 = staticinvoke <android.app.LoaderManagerImpl: android.app.FragmentHostCallback access$000(android.app.LoaderManagerImpl)>($r25);

        if $r26 == null goto label6;

        $r27 = r0.<android.app.LoaderManagerImpl$LoaderInfo: android.app.LoaderManagerImpl this$0>;

        $r28 = staticinvoke <android.app.LoaderManagerImpl: android.app.FragmentHostCallback access$000(android.app.LoaderManagerImpl)>($r27);

        $r29 = $r28.<android.app.FragmentHostCallback: android.app.FragmentManagerImpl mFragmentManager>;

        $r29.<android.app.FragmentManagerImpl: java.lang.String mNoTransactionsBecause> = r31;

     label6:
        throw $r24;

     label7:
        return;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label2 to label3 with label5;
    }

    boolean cancel()
    {
        android.app.LoaderManagerImpl$LoaderInfo r0;
        boolean z0, $z1, $z2, $z3;
        android.content.Loader $r1, r7;
        java.lang.StringBuilder $r2;
        java.lang.String $r5;

        r0 := @this: android.app.LoaderManagerImpl$LoaderInfo;

        $z1 = <android.app.LoaderManagerImpl: boolean DEBUG>;

        if $z1 == 0 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Canceling: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("LoaderManager", $r5);

     label1:
        $z2 = r0.<android.app.LoaderManagerImpl$LoaderInfo: boolean mStarted>;

        if $z2 == 0 goto label3;

        r7 = r0.<android.app.LoaderManagerImpl$LoaderInfo: android.content.Loader mLoader>;

        if r7 == null goto label3;

        $z3 = r0.<android.app.LoaderManagerImpl$LoaderInfo: boolean mListenerRegistered>;

        if $z3 == 0 goto label3;

        z0 = virtualinvoke r7.<android.content.Loader: boolean cancelLoad()>();

        if z0 != 0 goto label2;

        $r1 = r0.<android.app.LoaderManagerImpl$LoaderInfo: android.content.Loader mLoader>;

        virtualinvoke r0.<android.app.LoaderManagerImpl$LoaderInfo: void onLoadCanceled(android.content.Loader)>($r1);

     label2:
        return z0;

     label3:
        return 0;
    }

    void destroy()
    {
        android.app.LoaderManagerImpl$LoaderInfo r0, r39;
        boolean z0, $z1, $z2, $z3, $z4;
        android.app.LoaderManager$LoaderCallbacks $r2, $r9;
        android.content.Loader $r3, $r4, $r5, $r8, r38;
        android.app.LoaderManagerImpl $r6, $r10, $r12, $r15, $r18, $r30, $r32;
        android.app.FragmentHostCallback $r7, $r11, $r13, $r16, $r19, $r31, $r33;
        android.app.FragmentManagerImpl $r14, $r17, $r20, $r34;
        java.lang.StringBuilder $r21, $r25;
        java.lang.String $r24, $r28, r37;
        java.lang.Throwable $r29;

        r0 := @this: android.app.LoaderManagerImpl$LoaderInfo;

        $z1 = <android.app.LoaderManagerImpl: boolean DEBUG>;

        if $z1 == 0 goto label01;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Destroying: ");

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r28 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("LoaderManager", $r28);

     label01:
        r0.<android.app.LoaderManagerImpl$LoaderInfo: boolean mDestroyed> = 1;

        z0 = r0.<android.app.LoaderManagerImpl$LoaderInfo: boolean mDeliveredData>;

        r0.<android.app.LoaderManagerImpl$LoaderInfo: boolean mDeliveredData> = 0;

        $r2 = r0.<android.app.LoaderManagerImpl$LoaderInfo: android.app.LoaderManager$LoaderCallbacks mCallbacks>;

        if $r2 == null goto label07;

        $r5 = r0.<android.app.LoaderManagerImpl$LoaderInfo: android.content.Loader mLoader>;

        if $r5 == null goto label07;

        $z3 = r0.<android.app.LoaderManagerImpl$LoaderInfo: boolean mHaveData>;

        if $z3 == 0 goto label07;

        if z0 == 0 goto label07;

        $z4 = <android.app.LoaderManagerImpl: boolean DEBUG>;

        if $z4 == 0 goto label02;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Reseting: ");

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("LoaderManager", $r24);

     label02:
        r37 = null;

        $r6 = r0.<android.app.LoaderManagerImpl$LoaderInfo: android.app.LoaderManagerImpl this$0>;

        $r7 = staticinvoke <android.app.LoaderManagerImpl: android.app.FragmentHostCallback access$000(android.app.LoaderManagerImpl)>($r6);

        if $r7 == null goto label03;

        $r15 = r0.<android.app.LoaderManagerImpl$LoaderInfo: android.app.LoaderManagerImpl this$0>;

        $r16 = staticinvoke <android.app.LoaderManagerImpl: android.app.FragmentHostCallback access$000(android.app.LoaderManagerImpl)>($r15);

        $r17 = $r16.<android.app.FragmentHostCallback: android.app.FragmentManagerImpl mFragmentManager>;

        r37 = $r17.<android.app.FragmentManagerImpl: java.lang.String mNoTransactionsBecause>;

        $r18 = r0.<android.app.LoaderManagerImpl$LoaderInfo: android.app.LoaderManagerImpl this$0>;

        $r19 = staticinvoke <android.app.LoaderManagerImpl: android.app.FragmentHostCallback access$000(android.app.LoaderManagerImpl)>($r18);

        $r20 = $r19.<android.app.FragmentHostCallback: android.app.FragmentManagerImpl mFragmentManager>;

        $r20.<android.app.FragmentManagerImpl: java.lang.String mNoTransactionsBecause> = "onLoaderReset";

     label03:
        $r9 = r0.<android.app.LoaderManagerImpl$LoaderInfo: android.app.LoaderManager$LoaderCallbacks mCallbacks>;

        $r8 = r0.<android.app.LoaderManagerImpl$LoaderInfo: android.content.Loader mLoader>;

        interfaceinvoke $r9.<android.app.LoaderManager$LoaderCallbacks: void onLoaderReset(android.content.Loader)>($r8);

     label04:
        $r10 = r0.<android.app.LoaderManagerImpl$LoaderInfo: android.app.LoaderManagerImpl this$0>;

        $r11 = staticinvoke <android.app.LoaderManagerImpl: android.app.FragmentHostCallback access$000(android.app.LoaderManagerImpl)>($r10);

        if $r11 == null goto label07;

        $r12 = r0.<android.app.LoaderManagerImpl$LoaderInfo: android.app.LoaderManagerImpl this$0>;

        $r13 = staticinvoke <android.app.LoaderManagerImpl: android.app.FragmentHostCallback access$000(android.app.LoaderManagerImpl)>($r12);

        $r14 = $r13.<android.app.FragmentHostCallback: android.app.FragmentManagerImpl mFragmentManager>;

        $r14.<android.app.FragmentManagerImpl: java.lang.String mNoTransactionsBecause> = r37;

        goto label07;

     label05:
        $r29 := @caughtexception;

        $r30 = r0.<android.app.LoaderManagerImpl$LoaderInfo: android.app.LoaderManagerImpl this$0>;

        $r31 = staticinvoke <android.app.LoaderManagerImpl: android.app.FragmentHostCallback access$000(android.app.LoaderManagerImpl)>($r30);

        if $r31 == null goto label06;

        $r32 = r0.<android.app.LoaderManagerImpl$LoaderInfo: android.app.LoaderManagerImpl this$0>;

        $r33 = staticinvoke <android.app.LoaderManagerImpl: android.app.FragmentHostCallback access$000(android.app.LoaderManagerImpl)>($r32);

        $r34 = $r33.<android.app.FragmentHostCallback: android.app.FragmentManagerImpl mFragmentManager>;

        $r34.<android.app.FragmentManagerImpl: java.lang.String mNoTransactionsBecause> = r37;

     label06:
        throw $r29;

     label07:
        r0.<android.app.LoaderManagerImpl$LoaderInfo: android.app.LoaderManager$LoaderCallbacks mCallbacks> = null;

        r0.<android.app.LoaderManagerImpl$LoaderInfo: java.lang.Object mData> = null;

        r0.<android.app.LoaderManagerImpl$LoaderInfo: boolean mHaveData> = 0;

        r38 = r0.<android.app.LoaderManagerImpl$LoaderInfo: android.content.Loader mLoader>;

        if r38 == null goto label09;

        $z2 = r0.<android.app.LoaderManagerImpl$LoaderInfo: boolean mListenerRegistered>;

        if $z2 == 0 goto label08;

        r0.<android.app.LoaderManagerImpl$LoaderInfo: boolean mListenerRegistered> = 0;

        virtualinvoke r38.<android.content.Loader: void unregisterListener(android.content.Loader$OnLoadCompleteListener)>(r0);

        $r4 = r0.<android.app.LoaderManagerImpl$LoaderInfo: android.content.Loader mLoader>;

        virtualinvoke $r4.<android.content.Loader: void unregisterOnLoadCanceledListener(android.content.Loader$OnLoadCanceledListener)>(r0);

     label08:
        $r3 = r0.<android.app.LoaderManagerImpl$LoaderInfo: android.content.Loader mLoader>;

        virtualinvoke $r3.<android.content.Loader: void reset()>();

     label09:
        r39 = r0.<android.app.LoaderManagerImpl$LoaderInfo: android.app.LoaderManagerImpl$LoaderInfo mPendingLoader>;

        if r39 == null goto label10;

        virtualinvoke r39.<android.app.LoaderManagerImpl$LoaderInfo: void destroy()>();

     label10:
        return;

        catch java.lang.Throwable from label03 to label04 with label05;
    }

    public void dump(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        android.app.LoaderManagerImpl$LoaderInfo r0, $r9, $r20, r21;
        java.lang.String r1, $r13, $r17;
        java.io.FileDescriptor r2;
        java.io.PrintWriter r3;
        java.lang.String[] r4;
        int $i0;
        android.os.Bundle $r5;
        android.app.LoaderManager$LoaderCallbacks $r6;
        android.content.Loader $r7, r18;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        java.lang.Object $r8;
        java.lang.StringBuilder $r10, $r14;

        r0 := @this: android.app.LoaderManagerImpl$LoaderInfo;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.io.FileDescriptor;

        r3 := @parameter2: java.io.PrintWriter;

        r4 := @parameter3: java.lang.String[];

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>("mId=");

        $i0 = r0.<android.app.LoaderManagerImpl$LoaderInfo: int mId>;

        virtualinvoke r3.<java.io.PrintWriter: void print(int)>($i0);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(" mArgs=");

        $r5 = r0.<android.app.LoaderManagerImpl$LoaderInfo: android.os.Bundle mArgs>;

        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.Object)>($r5);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>("mCallbacks=");

        $r6 = r0.<android.app.LoaderManagerImpl$LoaderInfo: android.app.LoaderManager$LoaderCallbacks mCallbacks>;

        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.Object)>($r6);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>("mLoader=");

        $r7 = r0.<android.app.LoaderManagerImpl$LoaderInfo: android.content.Loader mLoader>;

        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.Object)>($r7);

        r18 = r0.<android.app.LoaderManagerImpl$LoaderInfo: android.content.Loader mLoader>;

        if r18 == null goto label1;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r18.<android.content.Loader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>($r17, r2, r3, r4);

     label1:
        $z0 = r0.<android.app.LoaderManagerImpl$LoaderInfo: boolean mHaveData>;

        if $z0 != 0 goto label2;

        $z3 = r0.<android.app.LoaderManagerImpl$LoaderInfo: boolean mDeliveredData>;

        if $z3 == 0 goto label3;

     label2:
        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>("mHaveData=");

        $z1 = r0.<android.app.LoaderManagerImpl$LoaderInfo: boolean mHaveData>;

        virtualinvoke r3.<java.io.PrintWriter: void print(boolean)>($z1);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>("  mDeliveredData=");

        $z2 = r0.<android.app.LoaderManagerImpl$LoaderInfo: boolean mDeliveredData>;

        virtualinvoke r3.<java.io.PrintWriter: void println(boolean)>($z2);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>("mData=");

        $r8 = r0.<android.app.LoaderManagerImpl$LoaderInfo: java.lang.Object mData>;

        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.Object)>($r8);

     label3:
        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>("mStarted=");

        $z4 = r0.<android.app.LoaderManagerImpl$LoaderInfo: boolean mStarted>;

        virtualinvoke r3.<java.io.PrintWriter: void print(boolean)>($z4);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(" mReportNextStart=");

        $z5 = r0.<android.app.LoaderManagerImpl$LoaderInfo: boolean mReportNextStart>;

        virtualinvoke r3.<java.io.PrintWriter: void print(boolean)>($z5);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(" mDestroyed=");

        $z6 = r0.<android.app.LoaderManagerImpl$LoaderInfo: boolean mDestroyed>;

        virtualinvoke r3.<java.io.PrintWriter: void println(boolean)>($z6);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>("mRetaining=");

        $z7 = r0.<android.app.LoaderManagerImpl$LoaderInfo: boolean mRetaining>;

        virtualinvoke r3.<java.io.PrintWriter: void print(boolean)>($z7);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(" mRetainingStarted=");

        $z8 = r0.<android.app.LoaderManagerImpl$LoaderInfo: boolean mRetainingStarted>;

        virtualinvoke r3.<java.io.PrintWriter: void print(boolean)>($z8);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(" mListenerRegistered=");

        $z9 = r0.<android.app.LoaderManagerImpl$LoaderInfo: boolean mListenerRegistered>;

        virtualinvoke r3.<java.io.PrintWriter: void println(boolean)>($z9);

        $r20 = r0.<android.app.LoaderManagerImpl$LoaderInfo: android.app.LoaderManagerImpl$LoaderInfo mPendingLoader>;

        if $r20 == null goto label4;

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.String)>("Pending Loader ");

        $r9 = r0.<android.app.LoaderManagerImpl$LoaderInfo: android.app.LoaderManagerImpl$LoaderInfo mPendingLoader>;

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.Object)>($r9);

        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.String)>(":");

        r21 = r0.<android.app.LoaderManagerImpl$LoaderInfo: android.app.LoaderManagerImpl$LoaderInfo mPendingLoader>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r21.<android.app.LoaderManagerImpl$LoaderInfo: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>($r13, r2, r3, r4);

     label4:
        return;
    }

    void finishRetain()
    {
        android.app.LoaderManagerImpl$LoaderInfo r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.Object $r2;
        android.content.Loader $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r7;

        r0 := @this: android.app.LoaderManagerImpl$LoaderInfo;

        $z1 = r0.<android.app.LoaderManagerImpl$LoaderInfo: boolean mRetaining>;

        if $z1 == 0 goto label2;

        $z4 = <android.app.LoaderManagerImpl: boolean DEBUG>;

        if $z4 == 0 goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Finished Retaining: ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("LoaderManager", $r7);

     label1:
        r0.<android.app.LoaderManagerImpl$LoaderInfo: boolean mRetaining> = 0;

        z0 = r0.<android.app.LoaderManagerImpl$LoaderInfo: boolean mStarted>;

        $z5 = r0.<android.app.LoaderManagerImpl$LoaderInfo: boolean mRetainingStarted>;

        if z0 == $z5 goto label2;

        if z0 != 0 goto label2;

        virtualinvoke r0.<android.app.LoaderManagerImpl$LoaderInfo: void stop()>();

     label2:
        $z6 = r0.<android.app.LoaderManagerImpl$LoaderInfo: boolean mStarted>;

        if $z6 == 0 goto label3;

        $z2 = r0.<android.app.LoaderManagerImpl$LoaderInfo: boolean mHaveData>;

        if $z2 == 0 goto label3;

        $z3 = r0.<android.app.LoaderManagerImpl$LoaderInfo: boolean mReportNextStart>;

        if $z3 != 0 goto label3;

        $r3 = r0.<android.app.LoaderManagerImpl$LoaderInfo: android.content.Loader mLoader>;

        $r2 = r0.<android.app.LoaderManagerImpl$LoaderInfo: java.lang.Object mData>;

        virtualinvoke r0.<android.app.LoaderManagerImpl$LoaderInfo: void callOnLoadFinished(android.content.Loader,java.lang.Object)>($r3, $r2);

     label3:
        return;
    }

    public void onLoadCanceled(android.content.Loader)
    {
        android.app.LoaderManagerImpl$LoaderInfo r0, r18;
        boolean $z0, $z1, $z2, $z3, $z4;
        android.app.LoaderManagerImpl $r2, $r5, $r7;
        int $i0, $i1;
        android.util.SparseArray $r3, $r6;
        java.lang.Object $r4;
        java.lang.StringBuilder $r8, $r12;
        java.lang.String $r11, $r15;
        android.content.Loader r16;

        r0 := @this: android.app.LoaderManagerImpl$LoaderInfo;

        r16 := @parameter0: android.content.Loader;

        $z0 = <android.app.LoaderManagerImpl: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onLoadCanceled: ");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("LoaderManager", $r15);

     label1:
        $z1 = r0.<android.app.LoaderManagerImpl$LoaderInfo: boolean mDestroyed>;

        if $z1 == 0 goto label3;

        $z4 = <android.app.LoaderManagerImpl: boolean DEBUG>;

        if $z4 == 0 goto label2;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("LoaderManager", "  Ignoring load canceled -- destroyed");

     label2:
        return;

     label3:
        $r2 = r0.<android.app.LoaderManagerImpl$LoaderInfo: android.app.LoaderManagerImpl this$0>;

        $r3 = $r2.<android.app.LoaderManagerImpl: android.util.SparseArray mLoaders>;

        $i0 = r0.<android.app.LoaderManagerImpl$LoaderInfo: int mId>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>($i0);

        if $r4 == r0 goto label5;

        $z3 = <android.app.LoaderManagerImpl: boolean DEBUG>;

        if $z3 == 0 goto label4;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("LoaderManager", "  Ignoring load canceled -- not active");

     label4:
        return;

     label5:
        r18 = r0.<android.app.LoaderManagerImpl$LoaderInfo: android.app.LoaderManagerImpl$LoaderInfo mPendingLoader>;

        if r18 == null goto label7;

        $z2 = <android.app.LoaderManagerImpl: boolean DEBUG>;

        if $z2 == 0 goto label6;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Switching to pending loader: ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r18);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("LoaderManager", $r11);

     label6:
        r0.<android.app.LoaderManagerImpl$LoaderInfo: android.app.LoaderManagerImpl$LoaderInfo mPendingLoader> = null;

        $r5 = r0.<android.app.LoaderManagerImpl$LoaderInfo: android.app.LoaderManagerImpl this$0>;

        $r6 = $r5.<android.app.LoaderManagerImpl: android.util.SparseArray mLoaders>;

        $i1 = r0.<android.app.LoaderManagerImpl$LoaderInfo: int mId>;

        virtualinvoke $r6.<android.util.SparseArray: void put(int,java.lang.Object)>($i1, null);

        virtualinvoke r0.<android.app.LoaderManagerImpl$LoaderInfo: void destroy()>();

        $r7 = r0.<android.app.LoaderManagerImpl$LoaderInfo: android.app.LoaderManagerImpl this$0>;

        virtualinvoke $r7.<android.app.LoaderManagerImpl: void installLoader(android.app.LoaderManagerImpl$LoaderInfo)>(r18);

     label7:
        return;
    }

    public void onLoadComplete(android.content.Loader, java.lang.Object)
    {
        android.app.LoaderManagerImpl$LoaderInfo r0, r25, r30;
        java.lang.Object r1, $r4, $r5, $r29;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        android.app.LoaderManagerImpl $r2, $r6, $r7, $r10, $r12, $r14, $r27, $r31;
        int $i0, $i1, $i2, $i7;
        android.util.SparseArray $r3, $r11, $r13, $r28;
        android.app.FragmentHostCallback $r8, $r32;
        android.app.FragmentManagerImpl $r9;
        java.lang.StringBuilder $r15, $r19;
        java.lang.String $r18, $r22;
        android.content.Loader r23;

        r0 := @this: android.app.LoaderManagerImpl$LoaderInfo;

        r23 := @parameter0: android.content.Loader;

        r1 := @parameter1: java.lang.Object;

        $z0 = <android.app.LoaderManagerImpl: boolean DEBUG>;

        if $z0 == 0 goto label01;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onLoadComplete: ");

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("LoaderManager", $r22);

     label01:
        $z1 = r0.<android.app.LoaderManagerImpl$LoaderInfo: boolean mDestroyed>;

        if $z1 == 0 goto label03;

        $z7 = <android.app.LoaderManagerImpl: boolean DEBUG>;

        if $z7 == 0 goto label02;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("LoaderManager", "  Ignoring load complete -- destroyed");

     label02:
        return;

     label03:
        $r2 = r0.<android.app.LoaderManagerImpl$LoaderInfo: android.app.LoaderManagerImpl this$0>;

        $r3 = $r2.<android.app.LoaderManagerImpl: android.util.SparseArray mLoaders>;

        $i0 = r0.<android.app.LoaderManagerImpl$LoaderInfo: int mId>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>($i0);

        if $r4 == r0 goto label05;

        $z6 = <android.app.LoaderManagerImpl: boolean DEBUG>;

        if $z6 == 0 goto label04;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("LoaderManager", "  Ignoring load complete -- not active");

     label04:
        return;

     label05:
        r25 = r0.<android.app.LoaderManagerImpl$LoaderInfo: android.app.LoaderManagerImpl$LoaderInfo mPendingLoader>;

        if r25 == null goto label07;

        $z5 = <android.app.LoaderManagerImpl: boolean DEBUG>;

        if $z5 == 0 goto label06;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Switching to pending loader: ");

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r25);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("LoaderManager", $r18);

     label06:
        r0.<android.app.LoaderManagerImpl$LoaderInfo: android.app.LoaderManagerImpl$LoaderInfo mPendingLoader> = null;

        $r12 = r0.<android.app.LoaderManagerImpl$LoaderInfo: android.app.LoaderManagerImpl this$0>;

        $r13 = $r12.<android.app.LoaderManagerImpl: android.util.SparseArray mLoaders>;

        $i2 = r0.<android.app.LoaderManagerImpl$LoaderInfo: int mId>;

        virtualinvoke $r13.<android.util.SparseArray: void put(int,java.lang.Object)>($i2, null);

        virtualinvoke r0.<android.app.LoaderManagerImpl$LoaderInfo: void destroy()>();

        $r14 = r0.<android.app.LoaderManagerImpl$LoaderInfo: android.app.LoaderManagerImpl this$0>;

        virtualinvoke $r14.<android.app.LoaderManagerImpl: void installLoader(android.app.LoaderManagerImpl$LoaderInfo)>(r25);

        return;

     label07:
        $r5 = r0.<android.app.LoaderManagerImpl$LoaderInfo: java.lang.Object mData>;

        if $r5 != r1 goto label08;

        $z4 = r0.<android.app.LoaderManagerImpl$LoaderInfo: boolean mHaveData>;

        if $z4 != 0 goto label09;

     label08:
        r0.<android.app.LoaderManagerImpl$LoaderInfo: java.lang.Object mData> = r1;

        r0.<android.app.LoaderManagerImpl$LoaderInfo: boolean mHaveData> = 1;

        $z2 = r0.<android.app.LoaderManagerImpl$LoaderInfo: boolean mStarted>;

        if $z2 == 0 goto label09;

        virtualinvoke r0.<android.app.LoaderManagerImpl$LoaderInfo: void callOnLoadFinished(android.content.Loader,java.lang.Object)>(r23, r1);

     label09:
        $r27 = r0.<android.app.LoaderManagerImpl$LoaderInfo: android.app.LoaderManagerImpl this$0>;

        $r28 = $r27.<android.app.LoaderManagerImpl: android.util.SparseArray mInactiveLoaders>;

        $i7 = r0.<android.app.LoaderManagerImpl$LoaderInfo: int mId>;

        $r29 = virtualinvoke $r28.<android.util.SparseArray: java.lang.Object get(int)>($i7);

        r30 = (android.app.LoaderManagerImpl$LoaderInfo) $r29;

        if r30 == null goto label10;

        if r30 == r0 goto label10;

        r30.<android.app.LoaderManagerImpl$LoaderInfo: boolean mDeliveredData> = 0;

        virtualinvoke r30.<android.app.LoaderManagerImpl$LoaderInfo: void destroy()>();

        $r10 = r0.<android.app.LoaderManagerImpl$LoaderInfo: android.app.LoaderManagerImpl this$0>;

        $r11 = $r10.<android.app.LoaderManagerImpl: android.util.SparseArray mInactiveLoaders>;

        $i1 = r0.<android.app.LoaderManagerImpl$LoaderInfo: int mId>;

        virtualinvoke $r11.<android.util.SparseArray: void remove(int)>($i1);

     label10:
        $r31 = r0.<android.app.LoaderManagerImpl$LoaderInfo: android.app.LoaderManagerImpl this$0>;

        $r32 = staticinvoke <android.app.LoaderManagerImpl: android.app.FragmentHostCallback access$000(android.app.LoaderManagerImpl)>($r31);

        if $r32 == null goto label11;

        $r6 = r0.<android.app.LoaderManagerImpl$LoaderInfo: android.app.LoaderManagerImpl this$0>;

        $z3 = virtualinvoke $r6.<android.app.LoaderManagerImpl: boolean hasRunningLoaders()>();

        if $z3 != 0 goto label11;

        $r7 = r0.<android.app.LoaderManagerImpl$LoaderInfo: android.app.LoaderManagerImpl this$0>;

        $r8 = staticinvoke <android.app.LoaderManagerImpl: android.app.FragmentHostCallback access$000(android.app.LoaderManagerImpl)>($r7);

        $r9 = $r8.<android.app.FragmentHostCallback: android.app.FragmentManagerImpl mFragmentManager>;

        virtualinvoke $r9.<android.app.FragmentManagerImpl: void startPendingDeferredFragments()>();

     label11:
        return;
    }

    void reportStart()
    {
        android.app.LoaderManagerImpl$LoaderInfo r0;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object $r1;
        android.content.Loader $r2;

        r0 := @this: android.app.LoaderManagerImpl$LoaderInfo;

        $z0 = r0.<android.app.LoaderManagerImpl$LoaderInfo: boolean mStarted>;

        if $z0 == 0 goto label1;

        $z1 = r0.<android.app.LoaderManagerImpl$LoaderInfo: boolean mReportNextStart>;

        if $z1 == 0 goto label1;

        r0.<android.app.LoaderManagerImpl$LoaderInfo: boolean mReportNextStart> = 0;

        $z2 = r0.<android.app.LoaderManagerImpl$LoaderInfo: boolean mHaveData>;

        if $z2 == 0 goto label1;

        $z3 = r0.<android.app.LoaderManagerImpl$LoaderInfo: boolean mRetaining>;

        if $z3 != 0 goto label1;

        $r2 = r0.<android.app.LoaderManagerImpl$LoaderInfo: android.content.Loader mLoader>;

        $r1 = r0.<android.app.LoaderManagerImpl$LoaderInfo: java.lang.Object mData>;

        virtualinvoke r0.<android.app.LoaderManagerImpl$LoaderInfo: void callOnLoadFinished(android.content.Loader,java.lang.Object)>($r2, $r1);

     label1:
        return;
    }

    void retain()
    {
        android.app.LoaderManagerImpl$LoaderInfo r0;
        boolean $z0, $z1;
        java.lang.StringBuilder $r2;
        java.lang.String $r5;

        r0 := @this: android.app.LoaderManagerImpl$LoaderInfo;

        $z0 = <android.app.LoaderManagerImpl: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Retaining: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("LoaderManager", $r5);

     label1:
        r0.<android.app.LoaderManagerImpl$LoaderInfo: boolean mRetaining> = 1;

        $z1 = r0.<android.app.LoaderManagerImpl$LoaderInfo: boolean mStarted>;

        r0.<android.app.LoaderManagerImpl$LoaderInfo: boolean mRetainingStarted> = $z1;

        r0.<android.app.LoaderManagerImpl$LoaderInfo: boolean mStarted> = 0;

        r0.<android.app.LoaderManagerImpl$LoaderInfo: android.app.LoaderManager$LoaderCallbacks mCallbacks> = null;

        return;
    }

    void start()
    {
        android.app.LoaderManagerImpl$LoaderInfo r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        android.content.Loader $r1, $r3, $r4, $r5, $r6, $r10, $r15, r22;
        java.lang.Class $r2, $r7;
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r8, $r16;
        java.lang.IllegalArgumentException $r12;
        java.lang.String $r13, $r19;
        android.os.Bundle $r14;
        android.app.LoaderManager$LoaderCallbacks r21;

        r0 := @this: android.app.LoaderManagerImpl$LoaderInfo;

        $z0 = r0.<android.app.LoaderManagerImpl$LoaderInfo: boolean mRetaining>;

        if $z0 == 0 goto label1;

        $z6 = r0.<android.app.LoaderManagerImpl$LoaderInfo: boolean mRetainingStarted>;

        if $z6 == 0 goto label1;

        r0.<android.app.LoaderManagerImpl$LoaderInfo: boolean mStarted> = 1;

        return;

     label1:
        $z1 = r0.<android.app.LoaderManagerImpl$LoaderInfo: boolean mStarted>;

        if $z1 == 0 goto label2;

        return;

     label2:
        r0.<android.app.LoaderManagerImpl$LoaderInfo: boolean mStarted> = 1;

        $z2 = <android.app.LoaderManagerImpl: boolean DEBUG>;

        if $z2 == 0 goto label3;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Starting: ");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("LoaderManager", $r19);

     label3:
        $r1 = r0.<android.app.LoaderManagerImpl$LoaderInfo: android.content.Loader mLoader>;

        if $r1 != null goto label4;

        r21 = r0.<android.app.LoaderManagerImpl$LoaderInfo: android.app.LoaderManager$LoaderCallbacks mCallbacks>;

        if r21 == null goto label4;

        $i2 = r0.<android.app.LoaderManagerImpl$LoaderInfo: int mId>;

        $r14 = r0.<android.app.LoaderManagerImpl$LoaderInfo: android.os.Bundle mArgs>;

        $r15 = interfaceinvoke r21.<android.app.LoaderManager$LoaderCallbacks: android.content.Loader onCreateLoader(int,android.os.Bundle)>($i2, $r14);

        r0.<android.app.LoaderManagerImpl$LoaderInfo: android.content.Loader mLoader> = $r15;

     label4:
        r22 = r0.<android.app.LoaderManagerImpl$LoaderInfo: android.content.Loader mLoader>;

        if r22 == null goto label8;

        $r2 = virtualinvoke r22.<java.lang.Object: java.lang.Class getClass()>();

        $z3 = virtualinvoke $r2.<java.lang.Class: boolean isMemberClass()>();

        if $z3 == 0 goto label6;

        $r6 = r0.<android.app.LoaderManagerImpl$LoaderInfo: android.content.Loader mLoader>;

        $r7 = virtualinvoke $r6.<java.lang.Object: java.lang.Class getClass()>();

        $i1 = virtualinvoke $r7.<java.lang.Class: int getModifiers()>();

        $z5 = staticinvoke <java.lang.reflect.Modifier: boolean isStatic(int)>($i1);

        if $z5 == 0 goto label5;

        goto label6;

     label5:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Object returned from onCreateLoader must not be a non-static inner member class: ");

        $r10 = r0.<android.app.LoaderManagerImpl$LoaderInfo: android.content.Loader mLoader>;

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r12 = new java.lang.IllegalArgumentException;

        $r13 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13);

        throw $r12;

     label6:
        $z4 = r0.<android.app.LoaderManagerImpl$LoaderInfo: boolean mListenerRegistered>;

        if $z4 != 0 goto label7;

        $r4 = r0.<android.app.LoaderManagerImpl$LoaderInfo: android.content.Loader mLoader>;

        $i0 = r0.<android.app.LoaderManagerImpl$LoaderInfo: int mId>;

        virtualinvoke $r4.<android.content.Loader: void registerListener(int,android.content.Loader$OnLoadCompleteListener)>($i0, r0);

        $r5 = r0.<android.app.LoaderManagerImpl$LoaderInfo: android.content.Loader mLoader>;

        virtualinvoke $r5.<android.content.Loader: void registerOnLoadCanceledListener(android.content.Loader$OnLoadCanceledListener)>(r0);

        r0.<android.app.LoaderManagerImpl$LoaderInfo: boolean mListenerRegistered> = 1;

     label7:
        $r3 = r0.<android.app.LoaderManagerImpl$LoaderInfo: android.content.Loader mLoader>;

        virtualinvoke $r3.<android.content.Loader: void startLoading()>();

     label8:
        return;
    }

    void stop()
    {
        android.app.LoaderManagerImpl$LoaderInfo r0;
        boolean $z0, $z1, $z2;
        android.content.Loader $r1, $r2, r8;
        java.lang.StringBuilder $r3;
        java.lang.String $r6;

        r0 := @this: android.app.LoaderManagerImpl$LoaderInfo;

        $z0 = <android.app.LoaderManagerImpl: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Stopping: ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("LoaderManager", $r6);

     label1:
        r0.<android.app.LoaderManagerImpl$LoaderInfo: boolean mStarted> = 0;

        $z1 = r0.<android.app.LoaderManagerImpl$LoaderInfo: boolean mRetaining>;

        if $z1 != 0 goto label2;

        r8 = r0.<android.app.LoaderManagerImpl$LoaderInfo: android.content.Loader mLoader>;

        if r8 == null goto label2;

        $z2 = r0.<android.app.LoaderManagerImpl$LoaderInfo: boolean mListenerRegistered>;

        if $z2 == 0 goto label2;

        r0.<android.app.LoaderManagerImpl$LoaderInfo: boolean mListenerRegistered> = 0;

        virtualinvoke r8.<android.content.Loader: void unregisterListener(android.content.Loader$OnLoadCompleteListener)>(r0);

        $r1 = r0.<android.app.LoaderManagerImpl$LoaderInfo: android.content.Loader mLoader>;

        virtualinvoke $r1.<android.content.Loader: void unregisterOnLoadCanceledListener(android.content.Loader$OnLoadCanceledListener)>(r0);

        $r2 = r0.<android.app.LoaderManagerImpl$LoaderInfo: android.content.Loader mLoader>;

        virtualinvoke $r2.<android.content.Loader: void stopLoading()>();

     label2:
        return;
    }

    public java.lang.String toString()
    {
        android.app.LoaderManagerImpl$LoaderInfo r0;
        java.lang.StringBuilder $r2;
        int $i0, $i1;
        java.lang.String $r4, $r11;
        android.content.Loader $r9;

        r0 := @this: android.app.LoaderManagerImpl$LoaderInfo;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>(64);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LoaderInfo{");

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" #");

        $i1 = r0.<android.app.LoaderManagerImpl$LoaderInfo: int mId>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ");

        $r9 = r0.<android.app.LoaderManagerImpl$LoaderInfo: android.content.Loader mLoader>;

        staticinvoke <android.util.DebugUtils: void buildShortClassTag(java.lang.Object,java.lang.StringBuilder)>($r9, $r2);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}}");

        $r11 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;
    }
}
