public class android.app.MediaRouteActionProvider extends android.view.ActionProvider
{
    private static final java.lang.String TAG;
    private android.app.MediaRouteButton mButton;
    private final android.app.MediaRouteActionProvider$MediaRouterCallback mCallback;
    private final android.content.Context mContext;
    private android.view.View$OnClickListener mExtendedSettingsListener;
    private int mRouteTypes;
    private final android.media.MediaRouter mRouter;

    public void <init>(android.content.Context)
    {
        android.app.MediaRouteActionProvider r0;
        android.content.Context r1;
        java.lang.Object $r2;
        android.media.MediaRouter $r3;
        android.app.MediaRouteActionProvider$MediaRouterCallback $r4;

        r0 := @this: android.app.MediaRouteActionProvider;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.view.ActionProvider: void <init>(android.content.Context)>(r1);

        r0.<android.app.MediaRouteActionProvider: android.content.Context mContext> = r1;

        $r2 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("media_router");

        $r3 = (android.media.MediaRouter) $r2;

        r0.<android.app.MediaRouteActionProvider: android.media.MediaRouter mRouter> = $r3;

        $r4 = new android.app.MediaRouteActionProvider$MediaRouterCallback;

        specialinvoke $r4.<android.app.MediaRouteActionProvider$MediaRouterCallback: void <init>(android.app.MediaRouteActionProvider)>(r0);

        r0.<android.app.MediaRouteActionProvider: android.app.MediaRouteActionProvider$MediaRouterCallback mCallback> = $r4;

        virtualinvoke r0.<android.app.MediaRouteActionProvider: void setRouteTypes(int)>(1);

        return;
    }

    static void access$000(android.app.MediaRouteActionProvider)
    {
        android.app.MediaRouteActionProvider r0;

        r0 := @parameter0: android.app.MediaRouteActionProvider;

        specialinvoke r0.<android.app.MediaRouteActionProvider: void refreshRoute()>();

        return;
    }

    private void refreshRoute()
    {
        android.app.MediaRouteActionProvider r0;

        r0 := @this: android.app.MediaRouteActionProvider;

        virtualinvoke r0.<android.app.MediaRouteActionProvider: void refreshVisibility()>();

        return;
    }

    public boolean isVisible()
    {
        android.app.MediaRouteActionProvider r0;
        int $i0;
        android.media.MediaRouter $r1;
        boolean $z0;

        r0 := @this: android.app.MediaRouteActionProvider;

        $r1 = r0.<android.app.MediaRouteActionProvider: android.media.MediaRouter mRouter>;

        $i0 = r0.<android.app.MediaRouteActionProvider: int mRouteTypes>;

        $z0 = virtualinvoke $r1.<android.media.MediaRouter: boolean isRouteAvailable(int,int)>($i0, 1);

        return $z0;
    }

    public android.view.View onCreateActionView()
    {
        android.app.MediaRouteActionProvider r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: android.app.MediaRouteActionProvider;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Use onCreateActionView(MenuItem) instead.");

        throw $r1;
    }

    public android.view.View onCreateActionView(android.view.MenuItem)
    {
        android.app.MediaRouteActionProvider r0;
        android.app.MediaRouteButton $r1, $r2, $r5, $r7, $r8;
        android.content.Context $r3;
        int $i0;
        android.view.View$OnClickListener $r4;
        android.view.ViewGroup$LayoutParams $r6;
        android.view.MenuItem r9;

        r0 := @this: android.app.MediaRouteActionProvider;

        r9 := @parameter0: android.view.MenuItem;

        $r1 = r0.<android.app.MediaRouteActionProvider: android.app.MediaRouteButton mButton>;

        if $r1 == null goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MediaRouteActionProvider", "onCreateActionView: this ActionProvider is already associated with a menu item. Don\'t reuse MediaRouteActionProvider instances! Abandoning the old one...");

     label1:
        $r2 = new android.app.MediaRouteButton;

        $r3 = r0.<android.app.MediaRouteActionProvider: android.content.Context mContext>;

        specialinvoke $r2.<android.app.MediaRouteButton: void <init>(android.content.Context)>($r3);

        r0.<android.app.MediaRouteActionProvider: android.app.MediaRouteButton mButton> = $r2;

        $i0 = r0.<android.app.MediaRouteActionProvider: int mRouteTypes>;

        virtualinvoke $r2.<android.app.MediaRouteButton: void setRouteTypes(int)>($i0);

        $r5 = r0.<android.app.MediaRouteActionProvider: android.app.MediaRouteButton mButton>;

        $r4 = r0.<android.app.MediaRouteActionProvider: android.view.View$OnClickListener mExtendedSettingsListener>;

        virtualinvoke $r5.<android.app.MediaRouteButton: void setExtendedSettingsClickListener(android.view.View$OnClickListener)>($r4);

        $r7 = r0.<android.app.MediaRouteActionProvider: android.app.MediaRouteButton mButton>;

        $r6 = new android.view.ViewGroup$LayoutParams;

        specialinvoke $r6.<android.view.ViewGroup$LayoutParams: void <init>(int,int)>(-2, -1);

        virtualinvoke $r7.<android.app.MediaRouteButton: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r6);

        $r8 = r0.<android.app.MediaRouteActionProvider: android.app.MediaRouteButton mButton>;

        return $r8;
    }

    public boolean onPerformDefaultAction()
    {
        android.app.MediaRouteActionProvider r0;
        android.app.MediaRouteButton r1;
        boolean $z0;

        r0 := @this: android.app.MediaRouteActionProvider;

        r1 = r0.<android.app.MediaRouteActionProvider: android.app.MediaRouteButton mButton>;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<android.app.MediaRouteButton: boolean showDialogInternal()>();

        return $z0;

     label1:
        return 0;
    }

    public boolean overridesItemVisibility()
    {
        android.app.MediaRouteActionProvider r0;

        r0 := @this: android.app.MediaRouteActionProvider;

        return 1;
    }

    public void setExtendedSettingsClickListener(android.view.View$OnClickListener)
    {
        android.app.MediaRouteActionProvider r0;
        android.view.View$OnClickListener r1;
        android.app.MediaRouteButton r2;

        r0 := @this: android.app.MediaRouteActionProvider;

        r1 := @parameter0: android.view.View$OnClickListener;

        r0.<android.app.MediaRouteActionProvider: android.view.View$OnClickListener mExtendedSettingsListener> = r1;

        r2 = r0.<android.app.MediaRouteActionProvider: android.app.MediaRouteButton mButton>;

        if r2 == null goto label1;

        virtualinvoke r2.<android.app.MediaRouteButton: void setExtendedSettingsClickListener(android.view.View$OnClickListener)>(r1);

     label1:
        return;
    }

    public void setRouteTypes(int)
    {
        android.app.MediaRouteActionProvider r0;
        int i0, i1, $i2;
        android.app.MediaRouteButton r1;
        android.app.MediaRouteActionProvider$MediaRouterCallback $r2, $r4;
        android.media.MediaRouter $r3, $r5;

        r0 := @this: android.app.MediaRouteActionProvider;

        i0 := @parameter0: int;

        i1 = r0.<android.app.MediaRouteActionProvider: int mRouteTypes>;

        if i1 == i0 goto label3;

        if i1 == 0 goto label1;

        $r5 = r0.<android.app.MediaRouteActionProvider: android.media.MediaRouter mRouter>;

        $r4 = r0.<android.app.MediaRouteActionProvider: android.app.MediaRouteActionProvider$MediaRouterCallback mCallback>;

        virtualinvoke $r5.<android.media.MediaRouter: void removeCallback(android.media.MediaRouter$Callback)>($r4);

     label1:
        r0.<android.app.MediaRouteActionProvider: int mRouteTypes> = i0;

        if i0 == 0 goto label2;

        $r3 = r0.<android.app.MediaRouteActionProvider: android.media.MediaRouter mRouter>;

        $r2 = r0.<android.app.MediaRouteActionProvider: android.app.MediaRouteActionProvider$MediaRouterCallback mCallback>;

        virtualinvoke $r3.<android.media.MediaRouter: void addCallback(int,android.media.MediaRouter$Callback,int)>(i0, $r2, 8);

     label2:
        specialinvoke r0.<android.app.MediaRouteActionProvider: void refreshRoute()>();

        r1 = r0.<android.app.MediaRouteActionProvider: android.app.MediaRouteButton mButton>;

        if r1 == null goto label3;

        $i2 = r0.<android.app.MediaRouteActionProvider: int mRouteTypes>;

        virtualinvoke r1.<android.app.MediaRouteButton: void setRouteTypes(int)>($i2);

     label3:
        return;
    }

    public static void <clinit>()
    {
        <android.app.MediaRouteActionProvider: java.lang.String TAG> = "MediaRouteActionProvider";

        return;
    }
}
