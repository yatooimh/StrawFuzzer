public class android.app.NativeActivity extends android.app.Activity implements android.view.SurfaceHolder$Callback2, android.view.InputQueue$Callback, android.view.ViewTreeObserver$OnGlobalLayoutListener
{
    private static final java.lang.String KEY_NATIVE_SAVED_STATE;
    public static final java.lang.String META_DATA_FUNC_NAME;
    public static final java.lang.String META_DATA_LIB_NAME;
    private android.view.InputQueue mCurInputQueue;
    private android.view.SurfaceHolder mCurSurfaceHolder;
    private boolean mDestroyed;
    private boolean mDispatchingUnhandledKey;
    private android.view.inputmethod.InputMethodManager mIMM;
    int mLastContentHeight;
    int mLastContentWidth;
    int mLastContentX;
    int mLastContentY;
    final int[] mLocation;
    private android.app.NativeActivity$NativeContentView mNativeContentView;
    private long mNativeHandle;

    public void <init>()
    {
        android.app.NativeActivity r0;
        int[] $r1;

        r0 := @this: android.app.NativeActivity;

        specialinvoke r0.<android.app.Activity: void <init>()>();

        $r1 = newarray (int)[2];

        r0.<android.app.NativeActivity: int[] mLocation> = $r1;

        return;
    }

    private static java.lang.String getAbsolutePath(java.io.File)
    {
        java.io.File r0;
        java.lang.String r1;

        r0 := @parameter0: java.io.File;

        if r0 == null goto label1;

        r1 = virtualinvoke r0.<java.io.File: java.lang.String getAbsolutePath()>();

        goto label2;

     label1:
        r1 = null;

     label2:
        return r1;
    }

    private native java.lang.String getDlError();

    private native long loadNativeCode(java.lang.String, java.lang.String, android.os.MessageQueue, java.lang.String, java.lang.String, java.lang.String, int, android.content.res.AssetManager, byte[], java.lang.ClassLoader, java.lang.String);

    private native void onConfigurationChangedNative(long);

    private native void onContentRectChangedNative(long, int, int, int, int);

    private native void onInputQueueCreatedNative(long, long);

    private native void onInputQueueDestroyedNative(long, long);

    private native void onLowMemoryNative(long);

    private native void onPauseNative(long);

    private native void onResumeNative(long);

    private native byte[] onSaveInstanceStateNative(long);

    private native void onStartNative(long);

    private native void onStopNative(long);

    private native void onSurfaceChangedNative(long, android.view.Surface, int, int, int);

    private native void onSurfaceCreatedNative(long, android.view.Surface);

    private native void onSurfaceDestroyedNative(long);

    private native void onSurfaceRedrawNeededNative(long, android.view.Surface);

    private native void onWindowFocusChangedNative(long, boolean);

    private native void unloadNativeCode(long);

    void hideIme(int)
    {
        android.app.NativeActivity r0;
        int i0;
        android.app.NativeActivity$NativeContentView $r1;
        android.view.inputmethod.InputMethodManager $r2;
        android.os.IBinder $r3;

        r0 := @this: android.app.NativeActivity;

        i0 := @parameter0: int;

        $r2 = r0.<android.app.NativeActivity: android.view.inputmethod.InputMethodManager mIMM>;

        $r1 = r0.<android.app.NativeActivity: android.app.NativeActivity$NativeContentView mNativeContentView>;

        $r3 = virtualinvoke $r1.<android.app.NativeActivity$NativeContentView: android.os.IBinder getWindowToken()>();

        virtualinvoke $r2.<android.view.inputmethod.InputMethodManager: boolean hideSoftInputFromWindow(android.os.IBinder,int)>($r3, i0);

        return;
    }

    public void onConfigurationChanged(android.content.res.Configuration)
    {
        android.app.NativeActivity r0;
        android.content.res.Configuration r1;
        boolean $z0;
        long $l0;

        r0 := @this: android.app.NativeActivity;

        r1 := @parameter0: android.content.res.Configuration;

        specialinvoke r0.<android.app.Activity: void onConfigurationChanged(android.content.res.Configuration)>(r1);

        $z0 = r0.<android.app.NativeActivity: boolean mDestroyed>;

        if $z0 != 0 goto label1;

        $l0 = r0.<android.app.NativeActivity: long mNativeHandle>;

        specialinvoke r0.<android.app.NativeActivity: void onConfigurationChangedNative(long)>($l0);

     label1:
        return;
    }

    protected void onCreate(android.os.Bundle)
    {
        android.app.NativeActivity r0;
        long l0;
        java.lang.Object $r1;
        android.view.inputmethod.InputMethodManager $r2;
        android.view.Window $r3, $r4, $r5, $r6;
        android.app.NativeActivity$NativeContentView $r8, $r9, $r10, r62;
        android.view.ViewTreeObserver $r11;
        android.content.pm.PackageManager $r12;
        android.content.Intent $r13;
        android.content.ComponentName $r14;
        android.os.Bundle $r15, $r42, $r43, r46;
        java.lang.ClassLoader $r16, r68;
        java.lang.String $r21, $r24, $r27, $r29, $r31, $r33, $r38, $r41, r47, r48, r51, r52, r54, r55, r57;
        android.os.MessageQueue $r25;
        java.io.File $r26, $r28, $r30;
        int $i1;
        android.content.res.AssetManager $r32;
        byte $b2;
        android.content.pm.PackageManager$NameNotFoundException $r44;
        android.content.pm.ActivityInfo r50;
        dalvik.system.BaseDexClassLoader r56;
        byte[] r58;
        java.lang.StringBuilder r63, r65;
        java.lang.UnsatisfiedLinkError r64;
        java.lang.IllegalArgumentException r66;
        java.lang.RuntimeException r67;

        r0 := @this: android.app.NativeActivity;

        r46 := @parameter0: android.os.Bundle;

        r47 = "main";

        r48 = "ANativeActivity_onCreate";

        $r1 = virtualinvoke r0.<android.app.NativeActivity: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/view/inputmethod/InputMethodManager;");

        $r2 = (android.view.inputmethod.InputMethodManager) $r1;

        r0.<android.app.NativeActivity: android.view.inputmethod.InputMethodManager mIMM> = $r2;

        $r3 = virtualinvoke r0.<android.app.NativeActivity: android.view.Window getWindow()>();

        virtualinvoke $r3.<android.view.Window: void takeSurface(android.view.SurfaceHolder$Callback2)>(r0);

        $r4 = virtualinvoke r0.<android.app.NativeActivity: android.view.Window getWindow()>();

        virtualinvoke $r4.<android.view.Window: void takeInputQueue(android.view.InputQueue$Callback)>(r0);

        $r5 = virtualinvoke r0.<android.app.NativeActivity: android.view.Window getWindow()>();

        virtualinvoke $r5.<android.view.Window: void setFormat(int)>(4);

        $r6 = virtualinvoke r0.<android.app.NativeActivity: android.view.Window getWindow()>();

        virtualinvoke $r6.<android.view.Window: void setSoftInputMode(int)>(16);

        r62 = new android.app.NativeActivity$NativeContentView;

        specialinvoke r62.<android.app.NativeActivity$NativeContentView: void <init>(android.content.Context)>(r0);

        r0.<android.app.NativeActivity: android.app.NativeActivity$NativeContentView mNativeContentView> = r62;

        r62.<android.app.NativeActivity$NativeContentView: android.app.NativeActivity mActivity> = r0;

        $r8 = r0.<android.app.NativeActivity: android.app.NativeActivity$NativeContentView mNativeContentView>;

        virtualinvoke r0.<android.app.NativeActivity: void setContentView(android.view.View)>($r8);

        $r9 = r0.<android.app.NativeActivity: android.app.NativeActivity$NativeContentView mNativeContentView>;

        virtualinvoke $r9.<android.app.NativeActivity$NativeContentView: boolean requestFocus()>();

        $r10 = r0.<android.app.NativeActivity: android.app.NativeActivity$NativeContentView mNativeContentView>;

        $r11 = virtualinvoke $r10.<android.app.NativeActivity$NativeContentView: android.view.ViewTreeObserver getViewTreeObserver()>();

        virtualinvoke $r11.<android.view.ViewTreeObserver: void addOnGlobalLayoutListener(android.view.ViewTreeObserver$OnGlobalLayoutListener)>(r0);

     label01:
        $r12 = virtualinvoke r0.<android.app.NativeActivity: android.content.pm.PackageManager getPackageManager()>();

        $r13 = virtualinvoke r0.<android.app.NativeActivity: android.content.Intent getIntent()>();

        $r14 = virtualinvoke $r13.<android.content.Intent: android.content.ComponentName getComponent()>();

        r50 = virtualinvoke $r12.<android.content.pm.PackageManager: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int)>($r14, 128);

        $r15 = r50.<android.content.pm.ActivityInfo: android.os.Bundle metaData>;

        if $r15 == null goto label06;

        $r42 = r50.<android.content.pm.ActivityInfo: android.os.Bundle metaData>;

        r51 = virtualinvoke $r42.<android.os.Bundle: java.lang.String getString(java.lang.String)>("android.app.lib_name");

     label02:
        if r51 == null goto label03;

        r47 = r51;

     label03:
        $r43 = r50.<android.content.pm.ActivityInfo: android.os.Bundle metaData>;

        r52 = virtualinvoke $r43.<android.os.Bundle: java.lang.String getString(java.lang.String)>("android.app.func_name");

     label04:
        if r52 == null goto label05;

        r48 = r52;

     label05:
        r54 = r48;

        r55 = r47;

        goto label07;

     label06:
        r55 = "main";

        r54 = "ANativeActivity_onCreate";

     label07:
        $r16 = virtualinvoke r0.<android.app.NativeActivity: java.lang.ClassLoader getClassLoader()>();

        r56 = (dalvik.system.BaseDexClassLoader) $r16;

        r57 = virtualinvoke r56.<dalvik.system.BaseDexClassLoader: java.lang.String findLibrary(java.lang.String)>(r55);

        if r57 == null goto label11;

        if r46 == null goto label08;

        r58 = virtualinvoke r46.<android.os.Bundle: byte[] getByteArray(java.lang.String)>("android:native_state");

        goto label09;

     label08:
        r58 = null;

     label09:
        $r25 = staticinvoke <android.os.Looper: android.os.MessageQueue myQueue()>();

        $r26 = virtualinvoke r0.<android.app.NativeActivity: java.io.File getFilesDir()>();

        $r27 = staticinvoke <android.app.NativeActivity: java.lang.String getAbsolutePath(java.io.File)>($r26);

        $r28 = virtualinvoke r0.<android.app.NativeActivity: java.io.File getObbDir()>();

        $r29 = staticinvoke <android.app.NativeActivity: java.lang.String getAbsolutePath(java.io.File)>($r28);

        $r30 = virtualinvoke r0.<android.app.NativeActivity: java.io.File getExternalFilesDir(java.lang.String)>(null);

        $r31 = staticinvoke <android.app.NativeActivity: java.lang.String getAbsolutePath(java.io.File)>($r30);

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        $r32 = virtualinvoke r0.<android.app.NativeActivity: android.content.res.AssetManager getAssets()>();

        $r33 = virtualinvoke r56.<dalvik.system.BaseDexClassLoader: java.lang.String getLdLibraryPath()>();

        r68 = (java.lang.ClassLoader) r56;

        l0 = specialinvoke r0.<android.app.NativeActivity: long loadNativeCode(java.lang.String,java.lang.String,android.os.MessageQueue,java.lang.String,java.lang.String,java.lang.String,int,android.content.res.AssetManager,byte[],java.lang.ClassLoader,java.lang.String)>(r57, r54, $r25, $r27, $r29, $r31, $i1, $r32, r58, r68, $r33);

        r0.<android.app.NativeActivity: long mNativeHandle> = l0;

        $b2 = l0 cmp 0L;

        if $b2 == 0 goto label10;

        specialinvoke r0.<android.app.Activity: void onCreate(android.os.Bundle)>(r46);

        return;

     label10:
        r63 = new java.lang.StringBuilder;

        specialinvoke r63.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to load native library \"");

        virtualinvoke r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r57);

        virtualinvoke r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\": ");

        $r38 = specialinvoke r0.<android.app.NativeActivity: java.lang.String getDlError()>();

        virtualinvoke r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        r64 = new java.lang.UnsatisfiedLinkError;

        $r41 = virtualinvoke r63.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r64.<java.lang.UnsatisfiedLinkError: void <init>(java.lang.String)>($r41);

        throw r64;

     label11:
        r65 = new java.lang.StringBuilder;

        specialinvoke r65.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to find native library ");

        virtualinvoke r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r55);

        virtualinvoke r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" using classloader: ");

        $r21 = virtualinvoke r56.<dalvik.system.BaseDexClassLoader: java.lang.String toString()>();

        virtualinvoke r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        r66 = new java.lang.IllegalArgumentException;

        $r24 = virtualinvoke r65.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r66.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r24);

        throw r66;

     label12:
        $r44 := @caughtexception;

        r67 = new java.lang.RuntimeException;

        specialinvoke r67.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Error getting activity info", $r44);

        throw r67;

        catch android.content.pm.PackageManager$NameNotFoundException from label01 to label02 with label12;
        catch android.content.pm.PackageManager$NameNotFoundException from label03 to label04 with label12;
    }

    protected void onDestroy()
    {
        android.app.NativeActivity r0;
        android.view.InputQueue r1;
        android.view.SurfaceHolder $r2;
        long $l0, $l1, $l2, $l3;

        r0 := @this: android.app.NativeActivity;

        r0.<android.app.NativeActivity: boolean mDestroyed> = 1;

        $r2 = r0.<android.app.NativeActivity: android.view.SurfaceHolder mCurSurfaceHolder>;

        if $r2 == null goto label1;

        $l3 = r0.<android.app.NativeActivity: long mNativeHandle>;

        specialinvoke r0.<android.app.NativeActivity: void onSurfaceDestroyedNative(long)>($l3);

        r0.<android.app.NativeActivity: android.view.SurfaceHolder mCurSurfaceHolder> = null;

     label1:
        r1 = r0.<android.app.NativeActivity: android.view.InputQueue mCurInputQueue>;

        if r1 == null goto label2;

        $l1 = r0.<android.app.NativeActivity: long mNativeHandle>;

        $l2 = virtualinvoke r1.<android.view.InputQueue: long getNativePtr()>();

        specialinvoke r0.<android.app.NativeActivity: void onInputQueueDestroyedNative(long,long)>($l1, $l2);

        r0.<android.app.NativeActivity: android.view.InputQueue mCurInputQueue> = null;

     label2:
        $l0 = r0.<android.app.NativeActivity: long mNativeHandle>;

        specialinvoke r0.<android.app.NativeActivity: void unloadNativeCode(long)>($l0);

        specialinvoke r0.<android.app.Activity: void onDestroy()>();

        return;
    }

    public void onGlobalLayout()
    {
        android.app.NativeActivity r0;
        int i0, i1, i2, i3, $i4, $i5, $i7, $i8, $i9, $i10;
        int[] $r1, r5, r6;
        android.app.NativeActivity$NativeContentView $r2, $r3, $r4;
        long $l6;
        boolean $z0;

        r0 := @this: android.app.NativeActivity;

        $r2 = r0.<android.app.NativeActivity: android.app.NativeActivity$NativeContentView mNativeContentView>;

        $r1 = r0.<android.app.NativeActivity: int[] mLocation>;

        virtualinvoke $r2.<android.app.NativeActivity$NativeContentView: void getLocationInWindow(int[])>($r1);

        $r3 = r0.<android.app.NativeActivity: android.app.NativeActivity$NativeContentView mNativeContentView>;

        i0 = virtualinvoke $r3.<android.app.NativeActivity$NativeContentView: int getWidth()>();

        $r4 = r0.<android.app.NativeActivity: android.app.NativeActivity$NativeContentView mNativeContentView>;

        i1 = virtualinvoke $r4.<android.app.NativeActivity$NativeContentView: int getHeight()>();

        r5 = r0.<android.app.NativeActivity: int[] mLocation>;

        $i5 = r5[0];

        $i4 = r0.<android.app.NativeActivity: int mLastContentX>;

        if $i5 != $i4 goto label1;

        $i8 = r5[1];

        $i7 = r0.<android.app.NativeActivity: int mLastContentY>;

        if $i8 != $i7 goto label1;

        $i9 = r0.<android.app.NativeActivity: int mLastContentWidth>;

        if i0 != $i9 goto label1;

        $i10 = r0.<android.app.NativeActivity: int mLastContentHeight>;

        if i1 == $i10 goto label2;

     label1:
        r6 = r0.<android.app.NativeActivity: int[] mLocation>;

        i2 = r6[0];

        r0.<android.app.NativeActivity: int mLastContentX> = i2;

        i3 = r6[1];

        r0.<android.app.NativeActivity: int mLastContentY> = i3;

        r0.<android.app.NativeActivity: int mLastContentWidth> = i0;

        r0.<android.app.NativeActivity: int mLastContentHeight> = i1;

        $z0 = r0.<android.app.NativeActivity: boolean mDestroyed>;

        if $z0 != 0 goto label2;

        $l6 = r0.<android.app.NativeActivity: long mNativeHandle>;

        specialinvoke r0.<android.app.NativeActivity: void onContentRectChangedNative(long,int,int,int,int)>($l6, i2, i3, i0, i1);

     label2:
        return;
    }

    public void onInputQueueCreated(android.view.InputQueue)
    {
        android.app.NativeActivity r0;
        android.view.InputQueue r1;
        boolean $z0;
        long $l0, $l1;

        r0 := @this: android.app.NativeActivity;

        r1 := @parameter0: android.view.InputQueue;

        $z0 = r0.<android.app.NativeActivity: boolean mDestroyed>;

        if $z0 != 0 goto label1;

        r0.<android.app.NativeActivity: android.view.InputQueue mCurInputQueue> = r1;

        $l0 = r0.<android.app.NativeActivity: long mNativeHandle>;

        $l1 = virtualinvoke r1.<android.view.InputQueue: long getNativePtr()>();

        specialinvoke r0.<android.app.NativeActivity: void onInputQueueCreatedNative(long,long)>($l0, $l1);

     label1:
        return;
    }

    public void onInputQueueDestroyed(android.view.InputQueue)
    {
        android.app.NativeActivity r0;
        android.view.InputQueue r1;
        boolean $z0;
        long $l0, $l1;

        r0 := @this: android.app.NativeActivity;

        r1 := @parameter0: android.view.InputQueue;

        $z0 = r0.<android.app.NativeActivity: boolean mDestroyed>;

        if $z0 != 0 goto label1;

        $l0 = r0.<android.app.NativeActivity: long mNativeHandle>;

        $l1 = virtualinvoke r1.<android.view.InputQueue: long getNativePtr()>();

        specialinvoke r0.<android.app.NativeActivity: void onInputQueueDestroyedNative(long,long)>($l0, $l1);

        r0.<android.app.NativeActivity: android.view.InputQueue mCurInputQueue> = null;

     label1:
        return;
    }

    public void onLowMemory()
    {
        android.app.NativeActivity r0;
        boolean $z0;
        long $l0;

        r0 := @this: android.app.NativeActivity;

        specialinvoke r0.<android.app.Activity: void onLowMemory()>();

        $z0 = r0.<android.app.NativeActivity: boolean mDestroyed>;

        if $z0 != 0 goto label1;

        $l0 = r0.<android.app.NativeActivity: long mNativeHandle>;

        specialinvoke r0.<android.app.NativeActivity: void onLowMemoryNative(long)>($l0);

     label1:
        return;
    }

    protected void onPause()
    {
        android.app.NativeActivity r0;
        long $l0;

        r0 := @this: android.app.NativeActivity;

        specialinvoke r0.<android.app.Activity: void onPause()>();

        $l0 = r0.<android.app.NativeActivity: long mNativeHandle>;

        specialinvoke r0.<android.app.NativeActivity: void onPauseNative(long)>($l0);

        return;
    }

    protected void onResume()
    {
        android.app.NativeActivity r0;
        long $l0;

        r0 := @this: android.app.NativeActivity;

        specialinvoke r0.<android.app.Activity: void onResume()>();

        $l0 = r0.<android.app.NativeActivity: long mNativeHandle>;

        specialinvoke r0.<android.app.NativeActivity: void onResumeNative(long)>($l0);

        return;
    }

    protected void onSaveInstanceState(android.os.Bundle)
    {
        android.app.NativeActivity r0;
        android.os.Bundle r1;
        byte[] r2;
        long $l0;

        r0 := @this: android.app.NativeActivity;

        r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<android.app.Activity: void onSaveInstanceState(android.os.Bundle)>(r1);

        $l0 = r0.<android.app.NativeActivity: long mNativeHandle>;

        r2 = specialinvoke r0.<android.app.NativeActivity: byte[] onSaveInstanceStateNative(long)>($l0);

        if r2 == null goto label1;

        virtualinvoke r1.<android.os.Bundle: void putByteArray(java.lang.String,byte[])>("android:native_state", r2);

     label1:
        return;
    }

    protected void onStart()
    {
        android.app.NativeActivity r0;
        long $l0;

        r0 := @this: android.app.NativeActivity;

        specialinvoke r0.<android.app.Activity: void onStart()>();

        $l0 = r0.<android.app.NativeActivity: long mNativeHandle>;

        specialinvoke r0.<android.app.NativeActivity: void onStartNative(long)>($l0);

        return;
    }

    protected void onStop()
    {
        android.app.NativeActivity r0;
        long $l0;

        r0 := @this: android.app.NativeActivity;

        specialinvoke r0.<android.app.Activity: void onStop()>();

        $l0 = r0.<android.app.NativeActivity: long mNativeHandle>;

        specialinvoke r0.<android.app.NativeActivity: void onStopNative(long)>($l0);

        return;
    }

    public void onWindowFocusChanged(boolean)
    {
        android.app.NativeActivity r0;
        boolean z0, $z1;
        long $l0;

        r0 := @this: android.app.NativeActivity;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.app.Activity: void onWindowFocusChanged(boolean)>(z0);

        $z1 = r0.<android.app.NativeActivity: boolean mDestroyed>;

        if $z1 != 0 goto label1;

        $l0 = r0.<android.app.NativeActivity: long mNativeHandle>;

        specialinvoke r0.<android.app.NativeActivity: void onWindowFocusChangedNative(long,boolean)>($l0, z0);

     label1:
        return;
    }

    void setWindowFlags(int, int)
    {
        android.app.NativeActivity r0;
        int i0, i1;
        android.view.Window $r1;

        r0 := @this: android.app.NativeActivity;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<android.app.NativeActivity: android.view.Window getWindow()>();

        virtualinvoke $r1.<android.view.Window: void setFlags(int,int)>(i0, i1);

        return;
    }

    void setWindowFormat(int)
    {
        android.app.NativeActivity r0;
        int i0;
        android.view.Window $r1;

        r0 := @this: android.app.NativeActivity;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.app.NativeActivity: android.view.Window getWindow()>();

        virtualinvoke $r1.<android.view.Window: void setFormat(int)>(i0);

        return;
    }

    void showIme(int)
    {
        android.app.NativeActivity r0;
        int i0;
        android.app.NativeActivity$NativeContentView $r1;
        android.view.inputmethod.InputMethodManager $r2;

        r0 := @this: android.app.NativeActivity;

        i0 := @parameter0: int;

        $r2 = r0.<android.app.NativeActivity: android.view.inputmethod.InputMethodManager mIMM>;

        $r1 = r0.<android.app.NativeActivity: android.app.NativeActivity$NativeContentView mNativeContentView>;

        virtualinvoke $r2.<android.view.inputmethod.InputMethodManager: boolean showSoftInput(android.view.View,int)>($r1, i0);

        return;
    }

    public void surfaceChanged(android.view.SurfaceHolder, int, int, int)
    {
        android.app.NativeActivity r0;
        android.view.SurfaceHolder r1;
        int i0, i1, i2;
        boolean $z0;
        long $l3;
        android.view.Surface $r2;

        r0 := @this: android.app.NativeActivity;

        r1 := @parameter0: android.view.SurfaceHolder;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $z0 = r0.<android.app.NativeActivity: boolean mDestroyed>;

        if $z0 != 0 goto label1;

        r0.<android.app.NativeActivity: android.view.SurfaceHolder mCurSurfaceHolder> = r1;

        $l3 = r0.<android.app.NativeActivity: long mNativeHandle>;

        $r2 = interfaceinvoke r1.<android.view.SurfaceHolder: android.view.Surface getSurface()>();

        specialinvoke r0.<android.app.NativeActivity: void onSurfaceChangedNative(long,android.view.Surface,int,int,int)>($l3, $r2, i0, i1, i2);

     label1:
        return;
    }

    public void surfaceCreated(android.view.SurfaceHolder)
    {
        android.app.NativeActivity r0;
        android.view.SurfaceHolder r1;
        boolean $z0;
        long $l0;
        android.view.Surface $r2;

        r0 := @this: android.app.NativeActivity;

        r1 := @parameter0: android.view.SurfaceHolder;

        $z0 = r0.<android.app.NativeActivity: boolean mDestroyed>;

        if $z0 != 0 goto label1;

        r0.<android.app.NativeActivity: android.view.SurfaceHolder mCurSurfaceHolder> = r1;

        $l0 = r0.<android.app.NativeActivity: long mNativeHandle>;

        $r2 = interfaceinvoke r1.<android.view.SurfaceHolder: android.view.Surface getSurface()>();

        specialinvoke r0.<android.app.NativeActivity: void onSurfaceCreatedNative(long,android.view.Surface)>($l0, $r2);

     label1:
        return;
    }

    public void surfaceDestroyed(android.view.SurfaceHolder)
    {
        android.app.NativeActivity r0;
        android.view.SurfaceHolder r1;
        boolean $z0;
        long $l0;

        r0 := @this: android.app.NativeActivity;

        r1 := @parameter0: android.view.SurfaceHolder;

        r0.<android.app.NativeActivity: android.view.SurfaceHolder mCurSurfaceHolder> = null;

        $z0 = r0.<android.app.NativeActivity: boolean mDestroyed>;

        if $z0 != 0 goto label1;

        $l0 = r0.<android.app.NativeActivity: long mNativeHandle>;

        specialinvoke r0.<android.app.NativeActivity: void onSurfaceDestroyedNative(long)>($l0);

     label1:
        return;
    }

    public void surfaceRedrawNeeded(android.view.SurfaceHolder)
    {
        android.app.NativeActivity r0;
        android.view.SurfaceHolder r1;
        boolean $z0;
        long $l0;
        android.view.Surface $r2;

        r0 := @this: android.app.NativeActivity;

        r1 := @parameter0: android.view.SurfaceHolder;

        $z0 = r0.<android.app.NativeActivity: boolean mDestroyed>;

        if $z0 != 0 goto label1;

        r0.<android.app.NativeActivity: android.view.SurfaceHolder mCurSurfaceHolder> = r1;

        $l0 = r0.<android.app.NativeActivity: long mNativeHandle>;

        $r2 = interfaceinvoke r1.<android.view.SurfaceHolder: android.view.Surface getSurface()>();

        specialinvoke r0.<android.app.NativeActivity: void onSurfaceRedrawNeededNative(long,android.view.Surface)>($l0, $r2);

     label1:
        return;
    }

    public static void <clinit>()
    {
        <android.app.NativeActivity: java.lang.String META_DATA_LIB_NAME> = "android.app.lib_name";

        <android.app.NativeActivity: java.lang.String META_DATA_FUNC_NAME> = "android.app.func_name";

        <android.app.NativeActivity: java.lang.String KEY_NATIVE_SAVED_STATE> = "android:native_state";

        return;
    }
}
