public class android.app.Notification$Builder extends java.lang.Object
{
    public static final java.lang.String EXTRA_REBUILD_BIG_CONTENT_VIEW_ACTION_COUNT;
    public static final java.lang.String EXTRA_REBUILD_CONTENT_VIEW_ACTION_COUNT;
    public static final java.lang.String EXTRA_REBUILD_HEADS_UP_CONTENT_VIEW_ACTION_COUNT;
    private static final int LIGHTNESS_TEXT_DIFFERENCE_DARK;
    private static final int LIGHTNESS_TEXT_DIFFERENCE_LIGHT;
    private static final boolean USE_ONLY_TITLE_IN_LOW_PRIORITY_SUMMARY;
    private java.util.ArrayList mActions;
    private int mBackgroundColor;
    private int mCachedContrastColor;
    private int mCachedContrastColorIsFor;
    private com.android.internal.util.ContrastColorUtil mColorUtil;
    private android.content.Context mContext;
    private int mForegroundColor;
    private boolean mInNightMode;
    private boolean mIsLegacy;
    private boolean mIsLegacyInitialized;
    private android.app.Notification mN;
    private int mNeutralColor;
    private java.util.ArrayList mOriginalActions;
    android.app.Notification$StandardTemplateParams mParams;
    private java.util.ArrayList mPersonList;
    private int mPrimaryTextColor;
    private boolean mRebuildStyledRemoteViews;
    private int mSecondaryTextColor;
    private android.app.Notification$Style mStyle;
    private int mTextColorsAreForBackground;
    private boolean mTintActionButtons;
    private android.os.Bundle mUserExtras;

    static void <clinit>()
    {
        boolean $z0;

        <android.app.Notification$Builder: int LIGHTNESS_TEXT_DIFFERENCE_LIGHT> = 20;

        <android.app.Notification$Builder: int LIGHTNESS_TEXT_DIFFERENCE_DARK> = -10;

        <android.app.Notification$Builder: java.lang.String EXTRA_REBUILD_HEADS_UP_CONTENT_VIEW_ACTION_COUNT> = "android.rebuild.hudViewActionCount";

        <android.app.Notification$Builder: java.lang.String EXTRA_REBUILD_CONTENT_VIEW_ACTION_COUNT> = "android.rebuild.contentViewActionCount";

        <android.app.Notification$Builder: java.lang.String EXTRA_REBUILD_BIG_CONTENT_VIEW_ACTION_COUNT> = "android.rebuild.bigViewActionCount";

        $z0 = staticinvoke <android.os.SystemProperties: boolean getBoolean(java.lang.String,boolean)>("notifications.only_title", 1);

        <android.app.Notification$Builder: boolean USE_ONLY_TITLE_IN_LOW_PRIORITY_SUMMARY> = $z0;

        return;
    }

    public void <init>(android.content.Context)
    {
        android.app.Notification$Builder r0;
        android.content.Context r1;
        android.app.Notification $r2;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.content.Context;

        $r2 = (android.app.Notification) null;

        specialinvoke r0.<android.app.Notification$Builder: void <init>(android.content.Context,android.app.Notification)>(r1, $r2);

        return;
    }

    public void <init>(android.content.Context, android.app.Notification)
    {
        android.app.Notification$Builder r0;
        android.content.res.Resources r1;
        android.os.Bundle $r2, $r8, $r15, $r30, $r40, $r49;
        java.util.ArrayList $r3, $r4, $r31, $r34, r45;
        android.app.Notification$StandardTemplateParams $r5;
        boolean $z0, $z1, $z2, z5, $z6;
        android.app.Notification$Action[] $r6, $r33;
        android.app.Notification $r7, $r9, $r14, $r21, $r23, $r26, $r27, $r29, $r32, $r35, $r37, $r38, $r39, r44, $r46, $r48;
        android.graphics.drawable.Icon $r10, $r47;
        java.lang.Class[] $r11;
        java.lang.Object[] $r12;
        java.lang.Object $r13;
        java.lang.StringBuilder $r17;
        java.lang.String $r20, r50;
        android.graphics.Bitmap $r22, $r24;
        int $i1, $i2, $i3, $i4, $i5;
        android.content.pm.ApplicationInfo $r36;
        android.content.res.Configuration $r41;
        java.lang.Throwable $r42;
        android.content.Context r43;
        java.lang.Class r51;
        java.lang.reflect.Constructor r53;
        android.app.Notification$Style r54;

        r0 := @this: android.app.Notification$Builder;

        r43 := @parameter0: android.content.Context;

        r44 := @parameter1: android.app.Notification;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new android.os.Bundle;

        specialinvoke $r2.<android.os.Bundle: void <init>()>();

        r0.<android.app.Notification$Builder: android.os.Bundle mUserExtras> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>(int)>(3);

        r0.<android.app.Notification$Builder: java.util.ArrayList mActions> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<android.app.Notification$Builder: java.util.ArrayList mPersonList> = $r4;

        r0.<android.app.Notification$Builder: int mCachedContrastColor> = 1;

        r0.<android.app.Notification$Builder: int mCachedContrastColorIsFor> = 1;

        r0.<android.app.Notification$Builder: int mNeutralColor> = 1;

        $r5 = new android.app.Notification$StandardTemplateParams;

        specialinvoke $r5.<android.app.Notification$StandardTemplateParams: void <init>(android.app.Notification$1)>(null);

        r0.<android.app.Notification$Builder: android.app.Notification$StandardTemplateParams mParams> = $r5;

        r0.<android.app.Notification$Builder: int mTextColorsAreForBackground> = 1;

        r0.<android.app.Notification$Builder: int mPrimaryTextColor> = 1;

        r0.<android.app.Notification$Builder: int mSecondaryTextColor> = 1;

        r0.<android.app.Notification$Builder: int mBackgroundColor> = 1;

        r0.<android.app.Notification$Builder: int mForegroundColor> = 1;

        r0.<android.app.Notification$Builder: android.content.Context mContext> = r43;

        r1 = virtualinvoke r43.<android.content.Context: android.content.res.Resources getResources()>();

        $z0 = virtualinvoke r1.<android.content.res.Resources: boolean getBoolean(int)>(17891562);

        r0.<android.app.Notification$Builder: boolean mTintActionButtons> = $z0;

        $z1 = virtualinvoke r1.<android.content.res.Resources: boolean getBoolean(int)>(17891449);

        if $z1 == 0 goto label03;

        $r41 = virtualinvoke r1.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $i4 = $r41.<android.content.res.Configuration: int uiMode>;

        $i5 = $i4 & 48;

        if $i5 != 32 goto label01;

        z5 = 1;

        goto label02;

     label01:
        z5 = 0;

     label02:
        r0.<android.app.Notification$Builder: boolean mInNightMode> = z5;

     label03:
        if r44 != null goto label05;

        $r35 = new android.app.Notification;

        specialinvoke $r35.<android.app.Notification: void <init>()>();

        r0.<android.app.Notification$Builder: android.app.Notification mN> = $r35;

        $r36 = virtualinvoke r43.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $i3 = $r36.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i3 >= 24 goto label04;

        $r39 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r40 = $r39.<android.app.Notification: android.os.Bundle extras>;

        virtualinvoke $r40.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("android.showWhen", 1);

     label04:
        $r37 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r37.<android.app.Notification: int priority> = 0;

        $r38 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r38.<android.app.Notification: int visibility> = 0;

        goto label15;

     label05:
        r0.<android.app.Notification$Builder: android.app.Notification mN> = r44;

        $r6 = r44.<android.app.Notification: android.app.Notification$Action[] actions>;

        if $r6 == null goto label06;

        $r34 = r0.<android.app.Notification$Builder: java.util.ArrayList mActions>;

        $r32 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r33 = $r32.<android.app.Notification: android.app.Notification$Action[] actions>;

        staticinvoke <java.util.Collections: boolean addAll(java.util.Collection,java.lang.Object[])>($r34, $r33);

     label06:
        $r7 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r8 = $r7.<android.app.Notification: android.os.Bundle extras>;

        $z2 = virtualinvoke $r8.<android.os.Bundle: boolean containsKey(java.lang.String)>("android.people.list");

        if $z2 == 0 goto label07;

        $r29 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r30 = $r29.<android.app.Notification: android.os.Bundle extras>;

        r45 = virtualinvoke $r30.<android.os.Bundle: java.util.ArrayList getParcelableArrayList(java.lang.String)>("android.people.list");

        $r31 = r0.<android.app.Notification$Builder: java.util.ArrayList mPersonList>;

        virtualinvoke $r31.<java.util.ArrayList: boolean addAll(java.util.Collection)>(r45);

     label07:
        $r9 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r10 = virtualinvoke $r9.<android.app.Notification: android.graphics.drawable.Icon getSmallIcon()>();

        if $r10 != null goto label08;

        $r26 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $i1 = $r26.<android.app.Notification: int icon>;

        if $i1 == 0 goto label08;

        $r27 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $i2 = $r27.<android.app.Notification: int icon>;

        virtualinvoke r0.<android.app.Notification$Builder: android.app.Notification$Builder setSmallIcon(int)>($i2);

     label08:
        $r46 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r47 = virtualinvoke $r46.<android.app.Notification: android.graphics.drawable.Icon getLargeIcon()>();

        if $r47 != null goto label09;

        $r21 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r22 = $r21.<android.app.Notification: android.graphics.Bitmap largeIcon>;

        if $r22 == null goto label09;

        $r23 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r24 = $r23.<android.app.Notification: android.graphics.Bitmap largeIcon>;

        virtualinvoke r0.<android.app.Notification$Builder: android.app.Notification$Builder setLargeIcon(android.graphics.Bitmap)>($r24);

     label09:
        $r48 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r49 = $r48.<android.app.Notification: android.os.Bundle extras>;

        r50 = virtualinvoke $r49.<android.os.Bundle: java.lang.String getString(java.lang.String)>("android.template");

        $z6 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r50);

        if $z6 != 0 goto label15;

        r51 = staticinvoke <android.app.Notification: java.lang.Class getNotificationStyleClass(java.lang.String)>(r50);

        if r51 != null goto label10;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown style class: ");

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r50);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("Notification", $r20);

        goto label15;

     label10:
        $r11 = newarray (java.lang.Class)[0];

        r53 = virtualinvoke r51.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>($r11);

        virtualinvoke r53.<java.lang.reflect.Constructor: void setAccessible(boolean)>(1);

        $r12 = newarray (java.lang.Object)[0];

        $r13 = virtualinvoke r53.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r12);

        r54 = (android.app.Notification$Style) $r13;

        $r14 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r15 = $r14.<android.app.Notification: android.os.Bundle extras>;

        virtualinvoke r54.<android.app.Notification$Style: void restoreFromExtras(android.os.Bundle)>($r15);

     label11:
        if r54 == null goto label13;

     label12:
        virtualinvoke r0.<android.app.Notification$Builder: android.app.Notification$Builder setStyle(android.app.Notification$Style)>(r54);

     label13:
        goto label15;

     label14:
        $r42 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("Notification", "Could not create Style", $r42);

     label15:
        return;

        catch java.lang.Throwable from label10 to label11 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
    }

    public void <init>(android.content.Context, java.lang.String)
    {
        android.app.Notification$Builder r0;
        android.content.Context r1;
        java.lang.String r2;
        android.app.Notification $r3, $r4;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String;

        $r3 = (android.app.Notification) null;

        specialinvoke r0.<android.app.Notification$Builder: void <init>(android.content.Context,android.app.Notification)>(r1, $r3);

        $r4 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        staticinvoke <android.app.Notification: java.lang.String access$602(android.app.Notification,java.lang.String)>($r4, r2);

        return;
    }

    static android.widget.RemoteViews access$2400(android.app.Notification$Builder, int, android.app.Notification$StandardTemplateParams, android.app.Notification$TemplateBindResult)
    {
        android.app.Notification$Builder r0;
        int i0;
        android.app.Notification$StandardTemplateParams r1;
        android.app.Notification$TemplateBindResult r2;
        android.widget.RemoteViews $r3;

        r0 := @parameter0: android.app.Notification$Builder;

        i0 := @parameter1: int;

        r1 := @parameter2: android.app.Notification$StandardTemplateParams;

        r2 := @parameter3: android.app.Notification$TemplateBindResult;

        $r3 = specialinvoke r0.<android.app.Notification$Builder: android.widget.RemoteViews applyStandardTemplateWithActions(int,android.app.Notification$StandardTemplateParams,android.app.Notification$TemplateBindResult)>(i0, r1, r2);

        return $r3;
    }

    static int access$2500(android.app.Notification$Builder)
    {
        android.app.Notification$Builder r0;
        int $i0;

        r0 := @parameter0: android.app.Notification$Builder;

        $i0 = specialinvoke r0.<android.app.Notification$Builder: int getBigPictureLayoutResource()>();

        return $i0;
    }

    static java.lang.CharSequence access$2600(android.app.Notification$Builder, java.lang.CharSequence)
    {
        android.app.Notification$Builder r0;
        java.lang.CharSequence r1, $r2;

        r0 := @parameter0: android.app.Notification$Builder;

        r1 := @parameter1: java.lang.CharSequence;

        $r2 = specialinvoke r0.<android.app.Notification$Builder: java.lang.CharSequence processLegacyText(java.lang.CharSequence)>(r1);

        return $r2;
    }

    static java.lang.CharSequence access$2700(android.app.Notification$Builder, java.lang.CharSequence)
    {
        android.app.Notification$Builder r0;
        java.lang.CharSequence r1, $r2;

        r0 := @parameter0: android.app.Notification$Builder;

        r1 := @parameter1: java.lang.CharSequence;

        $r2 = specialinvoke r0.<android.app.Notification$Builder: java.lang.CharSequence processTextSpans(java.lang.CharSequence)>(r1);

        return $r2;
    }

    static void access$2800(android.app.Notification$Builder, android.widget.RemoteViews, int, android.app.Notification$StandardTemplateParams)
    {
        android.app.Notification$Builder r0;
        android.widget.RemoteViews r1;
        int i0;
        android.app.Notification$StandardTemplateParams r2;

        r0 := @parameter0: android.app.Notification$Builder;

        r1 := @parameter1: android.widget.RemoteViews;

        i0 := @parameter2: int;

        r2 := @parameter3: android.app.Notification$StandardTemplateParams;

        specialinvoke r0.<android.app.Notification$Builder: void setTextViewColorSecondary(android.widget.RemoteViews,int,android.app.Notification$StandardTemplateParams)>(r1, i0, r2);

        return;
    }

    static java.util.ArrayList access$2900(android.app.Notification$Builder)
    {
        android.app.Notification$Builder r0;
        java.util.ArrayList $r1;

        r0 := @parameter0: android.app.Notification$Builder;

        $r1 = r0.<android.app.Notification$Builder: java.util.ArrayList mOriginalActions>;

        return $r1;
    }

    static java.util.ArrayList access$2902(android.app.Notification$Builder, java.util.ArrayList)
    {
        android.app.Notification$Builder r0;
        java.util.ArrayList r1;

        r0 := @parameter0: android.app.Notification$Builder;

        r1 := @parameter1: java.util.ArrayList;

        r0.<android.app.Notification$Builder: java.util.ArrayList mOriginalActions> = r1;

        return r1;
    }

    static java.util.ArrayList access$3000(android.app.Notification$Builder)
    {
        android.app.Notification$Builder r0;
        java.util.ArrayList $r1;

        r0 := @parameter0: android.app.Notification$Builder;

        $r1 = r0.<android.app.Notification$Builder: java.util.ArrayList mActions>;

        return $r1;
    }

    static java.util.ArrayList access$3002(android.app.Notification$Builder, java.util.ArrayList)
    {
        android.app.Notification$Builder r0;
        java.util.ArrayList r1;

        r0 := @parameter0: android.app.Notification$Builder;

        r1 := @parameter1: java.util.ArrayList;

        r0.<android.app.Notification$Builder: java.util.ArrayList mActions> = r1;

        return r1;
    }

    static int access$3200(android.app.Notification$Builder)
    {
        android.app.Notification$Builder r0;
        int $i0;

        r0 := @parameter0: android.app.Notification$Builder;

        $i0 = specialinvoke r0.<android.app.Notification$Builder: int getBigTextLayoutResource()>();

        return $i0;
    }

    static android.os.Bundle access$3300(android.app.Notification$Builder)
    {
        android.app.Notification$Builder r0;
        android.os.Bundle $r1;

        r0 := @parameter0: android.app.Notification$Builder;

        $r1 = specialinvoke r0.<android.app.Notification$Builder: android.os.Bundle getAllExtras()>();

        return $r1;
    }

    static android.content.Context access$3500(android.app.Notification$Builder)
    {
        android.app.Notification$Builder r0;
        android.content.Context $r1;

        r0 := @parameter0: android.app.Notification$Builder;

        $r1 = r0.<android.app.Notification$Builder: android.content.Context mContext>;

        return $r1;
    }

    static int access$3800(android.app.Notification$Builder)
    {
        android.app.Notification$Builder r0;
        int $i0;

        r0 := @parameter0: android.app.Notification$Builder;

        $i0 = specialinvoke r0.<android.app.Notification$Builder: int getConversationLayoutResource()>();

        return $i0;
    }

    static int access$3900(android.app.Notification$Builder)
    {
        android.app.Notification$Builder r0;
        int $i0;

        r0 := @parameter0: android.app.Notification$Builder;

        $i0 = specialinvoke r0.<android.app.Notification$Builder: int getMessagingLayoutResource()>();

        return $i0;
    }

    static android.app.Notification access$400(android.app.Notification$Builder)
    {
        android.app.Notification$Builder r0;
        android.app.Notification $r1;

        r0 := @parameter0: android.app.Notification$Builder;

        $r1 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        return $r1;
    }

    static boolean access$4000(android.app.Notification$Builder, android.app.Notification$StandardTemplateParams)
    {
        android.app.Notification$Builder r0;
        android.app.Notification$StandardTemplateParams r1;
        boolean $z0;

        r0 := @parameter0: android.app.Notification$Builder;

        r1 := @parameter1: android.app.Notification$StandardTemplateParams;

        $z0 = specialinvoke r0.<android.app.Notification$Builder: boolean isColorized(android.app.Notification$StandardTemplateParams)>(r1);

        return $z0;
    }

    static int access$4100(android.app.Notification$Builder, android.app.Notification$StandardTemplateParams)
    {
        android.app.Notification$Builder r0;
        android.app.Notification$StandardTemplateParams r1;
        int $i0;

        r0 := @parameter0: android.app.Notification$Builder;

        r1 := @parameter1: android.app.Notification$StandardTemplateParams;

        $i0 = specialinvoke r0.<android.app.Notification$Builder: int resolveBackgroundColor(android.app.Notification$StandardTemplateParams)>(r1);

        return $i0;
    }

    static int access$4200(android.app.Notification$Builder)
    {
        android.app.Notification$Builder r0;
        int $i0;

        r0 := @parameter0: android.app.Notification$Builder;

        $i0 = specialinvoke r0.<android.app.Notification$Builder: int getInboxLayoutResource()>();

        return $i0;
    }

    static boolean access$4300(android.app.Notification$Builder)
    {
        android.app.Notification$Builder r0;
        boolean $z0;

        r0 := @parameter0: android.app.Notification$Builder;

        $z0 = specialinvoke r0.<android.app.Notification$Builder: boolean shouldTintActionButtons()>();

        return $z0;
    }

    static android.widget.RemoteViews access$4400(android.app.Notification$Builder, int, android.app.Notification$StandardTemplateParams, android.app.Notification$TemplateBindResult)
    {
        android.app.Notification$Builder r0;
        int i0;
        android.app.Notification$StandardTemplateParams r1;
        android.app.Notification$TemplateBindResult r2;
        android.widget.RemoteViews $r3;

        r0 := @parameter0: android.app.Notification$Builder;

        i0 := @parameter1: int;

        r1 := @parameter2: android.app.Notification$StandardTemplateParams;

        r2 := @parameter3: android.app.Notification$TemplateBindResult;

        $r3 = specialinvoke r0.<android.app.Notification$Builder: android.widget.RemoteViews applyStandardTemplate(int,android.app.Notification$StandardTemplateParams,android.app.Notification$TemplateBindResult)>(i0, r1, r2);

        return $r3;
    }

    static int access$4500(android.app.Notification$Builder)
    {
        android.app.Notification$Builder r0;
        int $i0;

        r0 := @parameter0: android.app.Notification$Builder;

        $i0 = specialinvoke r0.<android.app.Notification$Builder: int getBigBaseLayoutResource()>();

        return $i0;
    }

    static android.widget.RemoteViews access$4600(android.app.Notification$Builder, int, android.app.Notification$TemplateBindResult)
    {
        android.app.Notification$Builder r0;
        int i0;
        android.app.Notification$TemplateBindResult r1;
        android.widget.RemoteViews $r2;

        r0 := @parameter0: android.app.Notification$Builder;

        i0 := @parameter1: int;

        r1 := @parameter2: android.app.Notification$TemplateBindResult;

        $r2 = specialinvoke r0.<android.app.Notification$Builder: android.widget.RemoteViews applyStandardTemplateWithActions(int,android.app.Notification$TemplateBindResult)>(i0, r1);

        return $r2;
    }

    static int access$4700(android.app.Notification$Builder)
    {
        android.app.Notification$Builder r0;
        int $i0;

        r0 := @parameter0: android.app.Notification$Builder;

        $i0 = specialinvoke r0.<android.app.Notification$Builder: int getBaseLayoutResource()>();

        return $i0;
    }

    static android.widget.RemoteViews access$4800(android.app.Notification$Builder, int, android.app.Notification$TemplateBindResult)
    {
        android.app.Notification$Builder r0;
        int i0;
        android.app.Notification$TemplateBindResult r1;
        android.widget.RemoteViews $r2;

        r0 := @parameter0: android.app.Notification$Builder;

        i0 := @parameter1: int;

        r1 := @parameter2: android.app.Notification$TemplateBindResult;

        $r2 = specialinvoke r0.<android.app.Notification$Builder: android.widget.RemoteViews applyStandardTemplate(int,android.app.Notification$TemplateBindResult)>(i0, r1);

        return $r2;
    }

    private android.widget.RemoteViews applyStandardTemplate(int, android.app.Notification$StandardTemplateParams, android.app.Notification$TemplateBindResult)
    {
        android.app.Notification$Builder r0;
        android.app.Notification$StandardTemplateParams r1;
        android.os.Bundle r3;
        boolean z0, $z1, z2;
        android.app.Notification$BuilderRemoteViews $r4;
        android.content.Context $r5;
        android.content.pm.ApplicationInfo $r6;
        android.app.Notification $r7, $r8;
        java.lang.CharSequence $r9, $r10, $r11, $r12, r14, $r15;
        int i0, i2;
        android.app.Notification$TemplateBindResult r13;
        byte b1;

        r0 := @this: android.app.Notification$Builder;

        i0 := @parameter0: int;

        r1 := @parameter1: android.app.Notification$StandardTemplateParams;

        r13 := @parameter2: android.app.Notification$TemplateBindResult;

        $r4 = new android.app.Notification$BuilderRemoteViews;

        $r5 = r0.<android.app.Notification$Builder: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        specialinvoke $r4.<android.app.Notification$BuilderRemoteViews: void <init>(android.content.pm.ApplicationInfo,int)>($r6, i0);

        specialinvoke r0.<android.app.Notification$Builder: void resetStandardTemplate(android.widget.RemoteViews)>($r4);

        $r7 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        r3 = $r7.<android.app.Notification: android.os.Bundle extras>;

        specialinvoke r0.<android.app.Notification$Builder: void updateBackgroundColor(android.widget.RemoteViews,android.app.Notification$StandardTemplateParams)>($r4, r1);

        specialinvoke r0.<android.app.Notification$Builder: void bindNotificationHeader(android.widget.RemoteViews,android.app.Notification$StandardTemplateParams)>($r4, r1);

        specialinvoke r0.<android.app.Notification$Builder: void bindLargeIconAndReply(android.widget.RemoteViews,android.app.Notification$StandardTemplateParams,android.app.Notification$TemplateBindResult)>($r4, r1, r13);

        z0 = specialinvoke r0.<android.app.Notification$Builder: boolean handleProgressBar(android.widget.RemoteViews,android.os.Bundle,android.app.Notification$StandardTemplateParams)>($r4, r3, r1);

        r14 = r1.<android.app.Notification$StandardTemplateParams: java.lang.CharSequence title>;

        z2 = 0;

        if r14 == null goto label3;

        virtualinvoke $r4.<android.widget.RemoteViews: void setViewVisibility(int,int)>(16908310, 0);

        $r11 = r1.<android.app.Notification$StandardTemplateParams: java.lang.CharSequence title>;

        $r12 = specialinvoke r0.<android.app.Notification$Builder: java.lang.CharSequence processTextSpans(java.lang.CharSequence)>($r11);

        virtualinvoke $r4.<android.widget.RemoteViews: void setTextViewText(int,java.lang.CharSequence)>(16908310, $r12);

        specialinvoke r0.<android.app.Notification$Builder: void setTextViewColorPrimary(android.widget.RemoteViews,int,android.app.Notification$StandardTemplateParams)>($r4, 16908310, r1);

        if z0 == 0 goto label1;

        b1 = -2;

        goto label2;

     label1:
        b1 = -1;

     label2:
        virtualinvoke $r4.<android.widget.RemoteViews: void setViewLayoutWidth(int,int)>(16908310, b1);

     label3:
        $r15 = r1.<android.app.Notification$StandardTemplateParams: java.lang.CharSequence text>;

        if $r15 == null goto label6;

        if z0 == 0 goto label4;

        i2 = 16909530;

        goto label5;

     label4:
        i2 = 16909502;

     label5:
        $r9 = r1.<android.app.Notification$StandardTemplateParams: java.lang.CharSequence text>;

        $r10 = specialinvoke r0.<android.app.Notification$Builder: java.lang.CharSequence processTextSpans(java.lang.CharSequence)>($r9);

        virtualinvoke $r4.<android.widget.RemoteViews: void setTextViewText(int,java.lang.CharSequence)>(i2, $r10);

        specialinvoke r0.<android.app.Notification$Builder: void setTextViewColorSecondary(android.widget.RemoteViews,int,android.app.Notification$StandardTemplateParams)>($r4, i2, r1);

        virtualinvoke $r4.<android.widget.RemoteViews: void setViewVisibility(int,int)>(i2, 0);

     label6:
        if z0 != 0 goto label7;

        $r8 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $z1 = staticinvoke <android.app.Notification: boolean access$1900(android.app.Notification)>($r8);

        if $z1 == 0 goto label8;

     label7:
        z2 = 1;

     label8:
        virtualinvoke r0.<android.app.Notification$Builder: void setContentMinHeight(android.widget.RemoteViews,boolean)>($r4, z2);

        return $r4;
    }

    private android.widget.RemoteViews applyStandardTemplate(int, android.app.Notification$TemplateBindResult)
    {
        android.app.Notification$Builder r0;
        int i0;
        android.app.Notification$TemplateBindResult r1;
        android.app.Notification$StandardTemplateParams $r2, $r3, $r4;
        android.widget.RemoteViews $r5;

        r0 := @this: android.app.Notification$Builder;

        i0 := @parameter0: int;

        r1 := @parameter1: android.app.Notification$TemplateBindResult;

        $r2 = r0.<android.app.Notification$Builder: android.app.Notification$StandardTemplateParams mParams>;

        $r3 = virtualinvoke $r2.<android.app.Notification$StandardTemplateParams: android.app.Notification$StandardTemplateParams reset()>();

        $r4 = virtualinvoke $r3.<android.app.Notification$StandardTemplateParams: android.app.Notification$StandardTemplateParams fillTextsFrom(android.app.Notification$Builder)>(r0);

        $r5 = specialinvoke r0.<android.app.Notification$Builder: android.widget.RemoteViews applyStandardTemplate(int,android.app.Notification$StandardTemplateParams,android.app.Notification$TemplateBindResult)>(i0, $r4, r1);

        return $r5;
    }

    private android.widget.RemoteViews applyStandardTemplateWithActions(int, android.app.Notification$StandardTemplateParams, android.app.Notification$TemplateBindResult)
    {
        android.app.Notification$Builder r0;
        android.app.Notification$StandardTemplateParams r1;
        boolean z0, $z1, $z2, $z3, $z4, z6, z7, z8;
        java.util.ArrayList $r2;
        android.app.Notification $r3, $r5, $r10;
        android.app.PendingIntent $r4;
        android.os.Bundle $r6, $r11;
        android.os.Parcelable[] $r7;
        int $i1, $i2, $i3, $i4, $i5, $i6, i7, i8, i9, i10, i11, i12;
        android.app.RemoteInputHistoryItem $r8, $r12, $r16, $r18, $r21, $r23;
        java.lang.CharSequence $r9, $r13, $r14, $r17, $r19, $r20, $r22, $r24, $r25;
        android.content.res.ColorStateList $r15;
        java.lang.Object $r26;
        android.app.Notification$TemplateBindResult r27;
        android.widget.RemoteViews r28, r31;
        java.util.List r29;
        android.app.Notification$Action r30;
        android.app.RemoteInputHistoryItem[] r32;

        r0 := @this: android.app.Notification$Builder;

        i7 := @parameter0: int;

        r1 := @parameter1: android.app.Notification$StandardTemplateParams;

        r27 := @parameter2: android.app.Notification$TemplateBindResult;

        r28 = specialinvoke r0.<android.app.Notification$Builder: android.widget.RemoteViews applyStandardTemplate(int,android.app.Notification$StandardTemplateParams,android.app.Notification$TemplateBindResult)>(i7, r1, r27);

        specialinvoke r0.<android.app.Notification$Builder: void resetStandardTemplateWithActions(android.widget.RemoteViews)>(r28);

        z6 = 0;

        $r2 = r0.<android.app.Notification$Builder: java.util.ArrayList mActions>;

        r29 = staticinvoke <android.app.Notification$Builder: java.util.List filterOutContextualActions(java.util.List)>($r2);

        i8 = interfaceinvoke r29.<java.util.List: int size()>();

        $r3 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r4 = $r3.<android.app.Notification: android.app.PendingIntent fullScreenIntent>;

        if $r4 == null goto label01;

        z7 = 1;

        goto label02;

     label01:
        z7 = 0;

     label02:
        virtualinvoke r28.<android.widget.RemoteViews: void setBoolean(int,java.lang.String,boolean)>(16908721, "setEmphasizedMode", z7);

        if i8 <= 0 goto label07;

        virtualinvoke r28.<android.widget.RemoteViews: void setViewVisibility(int,int)>(16908722, 0);

        virtualinvoke r28.<android.widget.RemoteViews: void setViewVisibility(int,int)>(16908721, 0);

        virtualinvoke r28.<android.widget.RemoteViews: void setViewLayoutMarginBottomDimen(int,int)>(16909221, 0);

        i9 = i8;

        if i8 <= 3 goto label03;

        i9 = 3;

     label03:
        i10 = 0;

     label04:
        if i10 >= i9 goto label06;

        $r26 = interfaceinvoke r29.<java.util.List: java.lang.Object get(int)>(i10);

        r30 = (android.app.Notification$Action) $r26;

        z0 = specialinvoke r0.<android.app.Notification$Builder: boolean hasValidRemoteInput(android.app.Notification$Action)>(r30);

        z6 = z6 | z0;

        r31 = specialinvoke r0.<android.app.Notification$Builder: android.widget.RemoteViews generateActionButton(android.app.Notification$Action,boolean,android.app.Notification$StandardTemplateParams)>(r30, z7, r1);

        if z0 == 0 goto label05;

        if z7 != 0 goto label05;

        virtualinvoke r31.<android.widget.RemoteViews: void setInt(int,java.lang.String,int)>(16908696, "setBackgroundResource", 0);

     label05:
        virtualinvoke r28.<android.widget.RemoteViews: void addView(int,android.widget.RemoteViews)>(16908721, r31);

        i10 = i10 + 1;

        goto label04;

     label06:
        goto label08;

     label07:
        virtualinvoke r28.<android.widget.RemoteViews: void setViewVisibility(int,int)>(16908722, 8);

        z6 = 0;

     label08:
        $r5 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r6 = $r5.<android.app.Notification: android.os.Bundle extras>;

        $r7 = staticinvoke <android.app.Notification: android.os.Parcelable[] access$000(android.os.Bundle,java.lang.String,java.lang.Class)>($r6, "android.remoteInputHistoryItems", class "Landroid/app/RemoteInputHistoryItem;");

        r32 = (android.app.RemoteInputHistoryItem[]) $r7;

        if z6 == 0 goto label12;

        if r32 == null goto label12;

        $i1 = lengthof r32;

        if $i1 <= 0 goto label12;

        $r8 = r32[0];

        $r9 = virtualinvoke $r8.<android.app.RemoteInputHistoryItem: java.lang.CharSequence getText()>();

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r9);

        if $z1 != 0 goto label12;

        $i2 = r1.<android.app.Notification$StandardTemplateParams: int maxRemoteInputHistory>;

        if $i2 <= 0 goto label12;

        $r10 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r11 = $r10.<android.app.Notification: android.os.Bundle extras>;

        z8 = virtualinvoke $r11.<android.os.Bundle: boolean getBoolean(java.lang.String)>("android.remoteInputSpinner");

        virtualinvoke r28.<android.widget.RemoteViews: void setViewVisibility(int,int)>(16909226, 0);

        virtualinvoke r28.<android.widget.RemoteViews: void setViewVisibility(int,int)>(16909229, 0);

        $r12 = r32[0];

        $r13 = virtualinvoke $r12.<android.app.RemoteInputHistoryItem: java.lang.CharSequence getText()>();

        $r14 = specialinvoke r0.<android.app.Notification$Builder: java.lang.CharSequence processTextSpans(java.lang.CharSequence)>($r13);

        virtualinvoke r28.<android.widget.RemoteViews: void setTextViewText(int,java.lang.CharSequence)>(16909228, $r14);

        specialinvoke r0.<android.app.Notification$Builder: void setTextViewColorSecondary(android.widget.RemoteViews,int,android.app.Notification$StandardTemplateParams)>(r28, 16909228, r1);

        i11 = 8;

        if z8 == 0 goto label09;

        i11 = 0;

     label09:
        virtualinvoke r28.<android.widget.RemoteViews: void setViewVisibility(int,int)>(16909227, i11);

        $z2 = specialinvoke r0.<android.app.Notification$Builder: boolean isColorized(android.app.Notification$StandardTemplateParams)>(r1);

        if $z2 == 0 goto label10;

        i12 = virtualinvoke r0.<android.app.Notification$Builder: int getPrimaryTextColor(android.app.Notification$StandardTemplateParams)>(r1);

        goto label11;

     label10:
        i12 = virtualinvoke r0.<android.app.Notification$Builder: int resolveContrastColor(android.app.Notification$StandardTemplateParams)>(r1);

     label11:
        $r15 = staticinvoke <android.content.res.ColorStateList: android.content.res.ColorStateList valueOf(int)>(i12);

        virtualinvoke r28.<android.widget.RemoteViews: void setProgressIndeterminateTintList(int,android.content.res.ColorStateList)>(16909227, $r15);

        $i3 = lengthof r32;

        if $i3 <= 1 goto label12;

        $r16 = r32[1];

        $r17 = virtualinvoke $r16.<android.app.RemoteInputHistoryItem: java.lang.CharSequence getText()>();

        $z3 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r17);

        if $z3 != 0 goto label12;

        $i4 = r1.<android.app.Notification$StandardTemplateParams: int maxRemoteInputHistory>;

        if $i4 <= 1 goto label12;

        virtualinvoke r28.<android.widget.RemoteViews: void setViewVisibility(int,int)>(16909230, 0);

        $r18 = r32[1];

        $r19 = virtualinvoke $r18.<android.app.RemoteInputHistoryItem: java.lang.CharSequence getText()>();

        $r20 = specialinvoke r0.<android.app.Notification$Builder: java.lang.CharSequence processTextSpans(java.lang.CharSequence)>($r19);

        virtualinvoke r28.<android.widget.RemoteViews: void setTextViewText(int,java.lang.CharSequence)>(16909230, $r20);

        specialinvoke r0.<android.app.Notification$Builder: void setTextViewColorSecondary(android.widget.RemoteViews,int,android.app.Notification$StandardTemplateParams)>(r28, 16909230, r1);

        $i5 = lengthof r32;

        if $i5 <= 2 goto label12;

        $r21 = r32[2];

        $r22 = virtualinvoke $r21.<android.app.RemoteInputHistoryItem: java.lang.CharSequence getText()>();

        $z4 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r22);

        if $z4 != 0 goto label12;

        $i6 = r1.<android.app.Notification$StandardTemplateParams: int maxRemoteInputHistory>;

        if $i6 <= 2 goto label12;

        virtualinvoke r28.<android.widget.RemoteViews: void setViewVisibility(int,int)>(16909231, 0);

        $r23 = r32[2];

        $r24 = virtualinvoke $r23.<android.app.RemoteInputHistoryItem: java.lang.CharSequence getText()>();

        $r25 = specialinvoke r0.<android.app.Notification$Builder: java.lang.CharSequence processTextSpans(java.lang.CharSequence)>($r24);

        virtualinvoke r28.<android.widget.RemoteViews: void setTextViewText(int,java.lang.CharSequence)>(16909231, $r25);

        specialinvoke r0.<android.app.Notification$Builder: void setTextViewColorSecondary(android.widget.RemoteViews,int,android.app.Notification$StandardTemplateParams)>(r28, 16909231, r1);

     label12:
        return r28;
    }

    private android.widget.RemoteViews applyStandardTemplateWithActions(int, android.app.Notification$TemplateBindResult)
    {
        android.app.Notification$Builder r0;
        int i0;
        android.app.Notification$TemplateBindResult r1;
        android.app.Notification$StandardTemplateParams $r2, $r3, $r4;
        android.widget.RemoteViews $r5;

        r0 := @this: android.app.Notification$Builder;

        i0 := @parameter0: int;

        r1 := @parameter1: android.app.Notification$TemplateBindResult;

        $r2 = r0.<android.app.Notification$Builder: android.app.Notification$StandardTemplateParams mParams>;

        $r3 = virtualinvoke $r2.<android.app.Notification$StandardTemplateParams: android.app.Notification$StandardTemplateParams reset()>();

        $r4 = virtualinvoke $r3.<android.app.Notification$StandardTemplateParams: android.app.Notification$StandardTemplateParams fillTextsFrom(android.app.Notification$Builder)>(r0);

        $r5 = specialinvoke r0.<android.app.Notification$Builder: android.widget.RemoteViews applyStandardTemplateWithActions(int,android.app.Notification$StandardTemplateParams,android.app.Notification$TemplateBindResult)>(i0, $r4, r1);

        return $r5;
    }

    private void bindActivePermissions(android.widget.RemoteViews, android.app.Notification$StandardTemplateParams)
    {
        android.app.Notification$Builder r0;
        android.widget.RemoteViews r1;
        android.app.Notification$StandardTemplateParams r2;
        int i0;
        android.graphics.PorterDuff$Mode $r3, $r4, $r5;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.widget.RemoteViews;

        r2 := @parameter1: android.app.Notification$StandardTemplateParams;

        i0 = specialinvoke r0.<android.app.Notification$Builder: int getNeutralColor(android.app.Notification$StandardTemplateParams)>(r2);

        $r3 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SRC_ATOP>;

        virtualinvoke r1.<android.widget.RemoteViews: void setDrawableTint(int,boolean,int,android.graphics.PorterDuff$Mode)>(16908823, 0, i0, $r3);

        $r4 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SRC_ATOP>;

        virtualinvoke r1.<android.widget.RemoteViews: void setDrawableTint(int,boolean,int,android.graphics.PorterDuff$Mode)>(16909171, 0, i0, $r4);

        $r5 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SRC_ATOP>;

        virtualinvoke r1.<android.widget.RemoteViews: void setDrawableTint(int,boolean,int,android.graphics.PorterDuff$Mode)>(16909267, 0, i0, $r5);

        return;
    }

    private void bindAlertedIcon(android.widget.RemoteViews, android.app.Notification$StandardTemplateParams)
    {
        android.app.Notification$Builder r0;
        android.widget.RemoteViews r1;
        android.app.Notification$StandardTemplateParams r2;
        int $i0;
        android.graphics.PorterDuff$Mode $r3;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.widget.RemoteViews;

        r2 := @parameter1: android.app.Notification$StandardTemplateParams;

        $i0 = specialinvoke r0.<android.app.Notification$Builder: int getNeutralColor(android.app.Notification$StandardTemplateParams)>(r2);

        $r3 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SRC_ATOP>;

        virtualinvoke r1.<android.widget.RemoteViews: void setDrawableTint(int,boolean,int,android.graphics.PorterDuff$Mode)>(16908740, 0, $i0, $r3);

        return;
    }

    private void bindExpandButton(android.widget.RemoteViews, android.app.Notification$StandardTemplateParams)
    {
        android.app.Notification$Builder r0;
        android.widget.RemoteViews r1;
        android.app.Notification$StandardTemplateParams r2;
        boolean $z0;
        android.graphics.PorterDuff$Mode $r3;
        int i0;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.widget.RemoteViews;

        r2 := @parameter1: android.app.Notification$StandardTemplateParams;

        $z0 = specialinvoke r0.<android.app.Notification$Builder: boolean isColorized(android.app.Notification$StandardTemplateParams)>(r2);

        if $z0 == 0 goto label1;

        i0 = virtualinvoke r0.<android.app.Notification$Builder: int getPrimaryTextColor(android.app.Notification$StandardTemplateParams)>(r2);

        goto label2;

     label1:
        i0 = virtualinvoke r0.<android.app.Notification$Builder: int getSecondaryTextColor(android.app.Notification$StandardTemplateParams)>(r2);

     label2:
        $r3 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SRC_ATOP>;

        virtualinvoke r1.<android.widget.RemoteViews: void setDrawableTint(int,boolean,int,android.graphics.PorterDuff$Mode)>(16908949, 0, i0, $r3);

        virtualinvoke r1.<android.widget.RemoteViews: void setInt(int,java.lang.String,int)>(16908949, "setOriginalNotificationColor", i0);

        return;
    }

    private void bindHeaderAppName(android.widget.RemoteViews, android.app.Notification$StandardTemplateParams)
    {
        android.app.Notification$Builder r0;
        android.widget.RemoteViews r1;
        android.app.Notification$StandardTemplateParams r2;
        java.lang.String $r3;
        boolean $z0;
        int $i0;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.widget.RemoteViews;

        r2 := @parameter1: android.app.Notification$StandardTemplateParams;

        $r3 = virtualinvoke r0.<android.app.Notification$Builder: java.lang.String loadHeaderAppName()>();

        virtualinvoke r1.<android.widget.RemoteViews: void setTextViewText(int,java.lang.CharSequence)>(16908761, $r3);

        $z0 = specialinvoke r0.<android.app.Notification$Builder: boolean isColorized(android.app.Notification$StandardTemplateParams)>(r2);

        if $z0 == 0 goto label1;

        specialinvoke r0.<android.app.Notification$Builder: void setTextViewColorPrimary(android.widget.RemoteViews,int,android.app.Notification$StandardTemplateParams)>(r1, 16908761, r2);

        goto label2;

     label1:
        $i0 = virtualinvoke r0.<android.app.Notification$Builder: int getSecondaryTextColor(android.app.Notification$StandardTemplateParams)>(r2);

        virtualinvoke r1.<android.widget.RemoteViews: void setTextColor(int,int)>(16908761, $i0);

     label2:
        return;
    }

    private void bindHeaderChronometerAndTime(android.widget.RemoteViews, android.app.Notification$StandardTemplateParams)
    {
        android.app.Notification$Builder r0;
        android.widget.RemoteViews r1;
        android.app.Notification$StandardTemplateParams r2;
        boolean $z0, $z1, $z2;
        android.app.Notification $r3, $r4, $r5, $r6, $r8, $r9, $r10;
        long $l0, $l2, $l3, $l4, $l5, $l6, $l7, l8;
        byte $b1;
        android.os.Bundle $r7, $r11;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.widget.RemoteViews;

        r2 := @parameter1: android.app.Notification$StandardTemplateParams;

        $z0 = specialinvoke r0.<android.app.Notification$Builder: boolean showsTimeOrChronometer()>();

        if $z0 == 0 goto label2;

        virtualinvoke r1.<android.widget.RemoteViews: void setViewVisibility(int,int)>(16909537, 0);

        specialinvoke r0.<android.app.Notification$Builder: void setTextViewColorSecondary(android.widget.RemoteViews,int,android.app.Notification$StandardTemplateParams)>(r1, 16909537, r2);

        $r6 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r7 = $r6.<android.app.Notification: android.os.Bundle extras>;

        $z1 = virtualinvoke $r7.<android.os.Bundle: boolean getBoolean(java.lang.String)>("android.showChronometer");

        if $z1 == 0 goto label1;

        virtualinvoke r1.<android.widget.RemoteViews: void setViewVisibility(int,int)>(16908842, 0);

        $r9 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $l3 = $r9.<android.app.Notification: long when>;

        $l4 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l5 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l6 = $l4 - $l5;

        $l7 = $l3 + $l6;

        virtualinvoke r1.<android.widget.RemoteViews: void setLong(int,java.lang.String,long)>(16908842, "setBase", $l7);

        virtualinvoke r1.<android.widget.RemoteViews: void setBoolean(int,java.lang.String,boolean)>(16908842, "setStarted", 1);

        $r10 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r11 = $r10.<android.app.Notification: android.os.Bundle extras>;

        $z2 = virtualinvoke $r11.<android.os.Bundle: boolean getBoolean(java.lang.String)>("android.chronometerCountDown");

        virtualinvoke r1.<android.widget.RemoteViews: void setChronometerCountDown(int,boolean)>(16908842, $z2);

        specialinvoke r0.<android.app.Notification$Builder: void setTextViewColorSecondary(android.widget.RemoteViews,int,android.app.Notification$StandardTemplateParams)>(r1, 16908842, r2);

        goto label5;

     label1:
        virtualinvoke r1.<android.widget.RemoteViews: void setViewVisibility(int,int)>(16909533, 0);

        $r8 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $l2 = $r8.<android.app.Notification: long when>;

        virtualinvoke r1.<android.widget.RemoteViews: void setLong(int,java.lang.String,long)>(16909533, "setTime", $l2);

        specialinvoke r0.<android.app.Notification$Builder: void setTextViewColorSecondary(android.widget.RemoteViews,int,android.app.Notification$StandardTemplateParams)>(r1, 16909533, r2);

        goto label5;

     label2:
        $r3 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $l0 = $r3.<android.app.Notification: long when>;

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label3;

        $r5 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        l8 = $r5.<android.app.Notification: long when>;

        goto label4;

     label3:
        $r4 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        l8 = staticinvoke <android.app.Notification: long access$2100(android.app.Notification)>($r4);

     label4:
        virtualinvoke r1.<android.widget.RemoteViews: void setLong(int,java.lang.String,long)>(16909533, "setTime", l8);

     label5:
        return;
    }

    private void bindHeaderText(android.widget.RemoteViews, android.app.Notification$StandardTemplateParams)
    {
        android.app.Notification$Builder r0;
        android.widget.RemoteViews r1;
        android.app.Notification$StandardTemplateParams r2;
        android.app.Notification$Style r3, $r13, $r14;
        java.lang.CharSequence $r4, $r5, $r10, r15, r16, r17;
        android.content.Context $r6;
        android.content.pm.ApplicationInfo $r7;
        int $i0;
        android.app.Notification $r8, $r11;
        android.os.Bundle $r9, $r12;
        boolean $z0, $z1;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.widget.RemoteViews;

        r2 := @parameter1: android.app.Notification$StandardTemplateParams;

        r15 = r2.<android.app.Notification$StandardTemplateParams: java.lang.CharSequence summaryText>;

        r16 = r15;

        if r15 != null goto label1;

        r3 = r0.<android.app.Notification$Builder: android.app.Notification$Style mStyle>;

        r16 = r15;

        if r3 == null goto label1;

        r16 = r15;

        $z0 = r3.<android.app.Notification$Style: boolean mSummaryTextSet>;

        if $z0 == 0 goto label1;

        r16 = r15;

        $r13 = r0.<android.app.Notification$Builder: android.app.Notification$Style mStyle>;

        $z1 = virtualinvoke $r13.<android.app.Notification$Style: boolean hasSummaryInHeader()>();

        if $z1 == 0 goto label1;

        $r14 = r0.<android.app.Notification$Builder: android.app.Notification$Style mStyle>;

        r16 = $r14.<android.app.Notification$Style: java.lang.CharSequence mSummaryText>;

     label1:
        r17 = r16;

        if r16 != null goto label2;

        r17 = r16;

        $r6 = r0.<android.app.Notification$Builder: android.content.Context mContext>;

        $r7 = virtualinvoke $r6.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $i0 = $r7.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i0 >= 24 goto label2;

        r17 = r16;

        $r8 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r9 = $r8.<android.app.Notification: android.os.Bundle extras>;

        $r10 = virtualinvoke $r9.<android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String)>("android.infoText");

        if $r10 == null goto label2;

        $r11 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r12 = $r11.<android.app.Notification: android.os.Bundle extras>;

        r17 = virtualinvoke $r12.<android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String)>("android.infoText");

     label2:
        if r17 == null goto label3;

        $r4 = specialinvoke r0.<android.app.Notification$Builder: java.lang.CharSequence processLegacyText(java.lang.CharSequence)>(r17);

        $r5 = specialinvoke r0.<android.app.Notification$Builder: java.lang.CharSequence processTextSpans(java.lang.CharSequence)>($r4);

        virtualinvoke r1.<android.widget.RemoteViews: void setTextViewText(int,java.lang.CharSequence)>(16909033, $r5);

        specialinvoke r0.<android.app.Notification$Builder: void setTextViewColorSecondary(android.widget.RemoteViews,int,android.app.Notification$StandardTemplateParams)>(r1, 16909033, r2);

        virtualinvoke r1.<android.widget.RemoteViews: void setViewVisibility(int,int)>(16909033, 0);

        virtualinvoke r1.<android.widget.RemoteViews: void setViewVisibility(int,int)>(16909034, 0);

        specialinvoke r0.<android.app.Notification$Builder: void setTextViewColorSecondary(android.widget.RemoteViews,int,android.app.Notification$StandardTemplateParams)>(r1, 16909034, r2);

     label3:
        return;
    }

    private void bindHeaderTextSecondary(android.widget.RemoteViews, android.app.Notification$StandardTemplateParams)
    {
        android.app.Notification$Builder r0;
        android.widget.RemoteViews r1;
        android.app.Notification$StandardTemplateParams r2;
        java.lang.CharSequence $r3, $r4, $r5, $r6;
        boolean $z0;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.widget.RemoteViews;

        r2 := @parameter1: android.app.Notification$StandardTemplateParams;

        $r3 = r2.<android.app.Notification$StandardTemplateParams: java.lang.CharSequence headerTextSecondary>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r3);

        if $z0 != 0 goto label1;

        $r4 = r2.<android.app.Notification$StandardTemplateParams: java.lang.CharSequence headerTextSecondary>;

        $r5 = specialinvoke r0.<android.app.Notification$Builder: java.lang.CharSequence processLegacyText(java.lang.CharSequence)>($r4);

        $r6 = specialinvoke r0.<android.app.Notification$Builder: java.lang.CharSequence processTextSpans(java.lang.CharSequence)>($r5);

        virtualinvoke r1.<android.widget.RemoteViews: void setTextViewText(int,java.lang.CharSequence)>(16909035, $r6);

        specialinvoke r0.<android.app.Notification$Builder: void setTextViewColorSecondary(android.widget.RemoteViews,int,android.app.Notification$StandardTemplateParams)>(r1, 16909035, r2);

        virtualinvoke r1.<android.widget.RemoteViews: void setViewVisibility(int,int)>(16909035, 0);

        virtualinvoke r1.<android.widget.RemoteViews: void setViewVisibility(int,int)>(16909036, 0);

        specialinvoke r0.<android.app.Notification$Builder: void setTextViewColorSecondary(android.widget.RemoteViews,int,android.app.Notification$StandardTemplateParams)>(r1, 16909036, r2);

     label1:
        return;
    }

    private boolean bindLargeIcon(android.widget.RemoteViews, android.app.Notification$StandardTemplateParams)
    {
        android.app.Notification$Builder r0;
        android.widget.RemoteViews r1;
        android.app.Notification$StandardTemplateParams r2;
        android.app.Notification r3, $r4, $r6, $r8, $r10, $r15;
        android.graphics.drawable.Icon $r5, $r7, $r9, $r13, $r16;
        boolean $z0, z1;
        android.graphics.Bitmap $r11, $r12;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.widget.RemoteViews;

        r2 := @parameter1: android.app.Notification$StandardTemplateParams;

        $r4 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r5 = staticinvoke <android.app.Notification: android.graphics.drawable.Icon access$1400(android.app.Notification)>($r4);

        if $r5 != null goto label1;

        $r10 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r11 = $r10.<android.app.Notification: android.graphics.Bitmap largeIcon>;

        if $r11 == null goto label1;

        r3 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r12 = r3.<android.app.Notification: android.graphics.Bitmap largeIcon>;

        $r13 = staticinvoke <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithBitmap(android.graphics.Bitmap)>($r12);

        staticinvoke <android.app.Notification: android.graphics.drawable.Icon access$1402(android.app.Notification,android.graphics.drawable.Icon)>(r3, $r13);

     label1:
        $r15 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r16 = staticinvoke <android.app.Notification: android.graphics.drawable.Icon access$1400(android.app.Notification)>($r15);

        if $r16 == null goto label2;

        $z0 = r2.<android.app.Notification$StandardTemplateParams: boolean hideLargeIcon>;

        if $z0 != 0 goto label2;

        z1 = 1;

        goto label3;

     label2:
        z1 = 0;

     label3:
        if z1 == 0 goto label4;

        virtualinvoke r1.<android.widget.RemoteViews: void setViewVisibility(int,int)>(16909366, 0);

        $r6 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r7 = staticinvoke <android.app.Notification: android.graphics.drawable.Icon access$1400(android.app.Notification)>($r6);

        virtualinvoke r1.<android.widget.RemoteViews: void setImageViewIcon(int,android.graphics.drawable.Icon)>(16909366, $r7);

        $r8 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r9 = staticinvoke <android.app.Notification: android.graphics.drawable.Icon access$1400(android.app.Notification)>($r8);

        specialinvoke r0.<android.app.Notification$Builder: void processLargeLegacyIcon(android.graphics.drawable.Icon,android.widget.RemoteViews,android.app.Notification$StandardTemplateParams)>($r9, r1, r2);

     label4:
        return z1;
    }

    private void bindLargeIconAndReply(android.widget.RemoteViews, android.app.Notification$StandardTemplateParams, android.app.Notification$TemplateBindResult)
    {
        android.app.Notification$Builder r0;
        android.widget.RemoteViews r1;
        android.app.Notification$StandardTemplateParams r2;
        android.app.Notification$TemplateBindResult r3;
        boolean z0, z1, z2;
        byte b0;
        int i1;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.widget.RemoteViews;

        r2 := @parameter1: android.app.Notification$StandardTemplateParams;

        r3 := @parameter2: android.app.Notification$TemplateBindResult;

        z0 = specialinvoke r0.<android.app.Notification$Builder: boolean bindLargeIcon(android.widget.RemoteViews,android.app.Notification$StandardTemplateParams)>(r1, r2);

        z1 = specialinvoke r0.<android.app.Notification$Builder: boolean bindReplyIcon(android.widget.RemoteViews,android.app.Notification$StandardTemplateParams)>(r1, r2);

        b0 = 0;

        if z0 != 0 goto label2;

        if z1 == 0 goto label1;

        goto label2;

     label1:
        z2 = 0;

        goto label3;

     label2:
        z2 = 1;

     label3:
        if z2 == 0 goto label4;

        goto label5;

     label4:
        b0 = 8;

     label5:
        virtualinvoke r1.<android.widget.RemoteViews: void setViewVisibility(int,int)>(16909367, b0);

        i1 = specialinvoke r0.<android.app.Notification$Builder: int calculateMarginEnd(boolean,boolean)>(z0, z1);

        virtualinvoke r1.<android.widget.RemoteViews: void setViewLayoutMarginEnd(int,int)>(16909124, i1);

        virtualinvoke r1.<android.widget.RemoteViews: void setViewLayoutMarginEnd(int,int)>(16909502, i1);

        virtualinvoke r1.<android.widget.RemoteViews: void setViewLayoutMarginEnd(int,int)>(16908301, i1);

        if r3 == null goto label6;

        virtualinvoke r3.<android.app.Notification$TemplateBindResult: void setIconMarginEnd(int)>(i1);

        virtualinvoke r3.<android.app.Notification$TemplateBindResult: void setRightIconContainerVisible(boolean)>(z2);

     label6:
        return;
    }

    private void bindNotificationHeader(android.widget.RemoteViews, android.app.Notification$StandardTemplateParams)
    {
        android.app.Notification$Builder r0;
        android.widget.RemoteViews r1;
        android.app.Notification$StandardTemplateParams r2;
        android.app.Notification $r3;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.widget.RemoteViews;

        r2 := @parameter1: android.app.Notification$StandardTemplateParams;

        specialinvoke r0.<android.app.Notification$Builder: void bindSmallIcon(android.widget.RemoteViews,android.app.Notification$StandardTemplateParams)>(r1, r2);

        specialinvoke r0.<android.app.Notification$Builder: void bindHeaderAppName(android.widget.RemoteViews,android.app.Notification$StandardTemplateParams)>(r1, r2);

        specialinvoke r0.<android.app.Notification$Builder: void bindHeaderText(android.widget.RemoteViews,android.app.Notification$StandardTemplateParams)>(r1, r2);

        specialinvoke r0.<android.app.Notification$Builder: void bindHeaderTextSecondary(android.widget.RemoteViews,android.app.Notification$StandardTemplateParams)>(r1, r2);

        specialinvoke r0.<android.app.Notification$Builder: void bindHeaderChronometerAndTime(android.widget.RemoteViews,android.app.Notification$StandardTemplateParams)>(r1, r2);

        specialinvoke r0.<android.app.Notification$Builder: void bindProfileBadge(android.widget.RemoteViews,android.app.Notification$StandardTemplateParams)>(r1, r2);

        specialinvoke r0.<android.app.Notification$Builder: void bindAlertedIcon(android.widget.RemoteViews,android.app.Notification$StandardTemplateParams)>(r1, r2);

        specialinvoke r0.<android.app.Notification$Builder: void bindActivePermissions(android.widget.RemoteViews,android.app.Notification$StandardTemplateParams)>(r1, r2);

        specialinvoke r0.<android.app.Notification$Builder: void bindExpandButton(android.widget.RemoteViews,android.app.Notification$StandardTemplateParams)>(r1, r2);

        $r3 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        staticinvoke <android.app.Notification: boolean access$1702(android.app.Notification,boolean)>($r3, 1);

        return;
    }

    private void bindProfileBadge(android.widget.RemoteViews, android.app.Notification$StandardTemplateParams)
    {
        android.app.Notification$Builder r0;
        android.widget.RemoteViews r1;
        android.app.Notification$StandardTemplateParams r2;
        android.graphics.Bitmap r3;
        boolean $z0;
        int $i0;
        android.graphics.PorterDuff$Mode $r4;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.widget.RemoteViews;

        r2 := @parameter1: android.app.Notification$StandardTemplateParams;

        r3 = specialinvoke r0.<android.app.Notification$Builder: android.graphics.Bitmap getProfileBadge()>();

        if r3 == null goto label1;

        virtualinvoke r1.<android.widget.RemoteViews: void setImageViewBitmap(int,android.graphics.Bitmap)>(16909317, r3);

        virtualinvoke r1.<android.widget.RemoteViews: void setViewVisibility(int,int)>(16909317, 0);

        $z0 = specialinvoke r0.<android.app.Notification$Builder: boolean isColorized(android.app.Notification$StandardTemplateParams)>(r2);

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke r0.<android.app.Notification$Builder: int getPrimaryTextColor(android.app.Notification$StandardTemplateParams)>(r2);

        $r4 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SRC_ATOP>;

        virtualinvoke r1.<android.widget.RemoteViews: void setDrawableTint(int,boolean,int,android.graphics.PorterDuff$Mode)>(16909317, 0, $i0, $r4);

     label1:
        return;
    }

    private boolean bindReplyIcon(android.widget.RemoteViews, android.app.Notification$StandardTemplateParams)
    {
        android.app.Notification$Builder r0;
        android.widget.RemoteViews r1;
        android.app.Notification$StandardTemplateParams r2;
        boolean z1, z2, z3;
        int $i0, i1;
        android.graphics.PorterDuff$Mode $r3;
        android.app.PendingIntent $r4;
        android.app.RemoteInput[] $r5;
        android.app.Notification$Action r6;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.widget.RemoteViews;

        r2 := @parameter1: android.app.Notification$StandardTemplateParams;

        z2 = r2.<android.app.Notification$StandardTemplateParams: boolean hideReplyIcon>;

        z1 = z2 ^ 1;

        r6 = null;

        i1 = 0;

        z3 = z1;

        if z1 == 0 goto label2;

        r6 = specialinvoke r0.<android.app.Notification$Builder: android.app.Notification$Action findReplyAction()>();

        if r6 == null goto label1;

        z3 = 1;

        goto label2;

     label1:
        z3 = 0;

     label2:
        if z3 == 0 goto label3;

        virtualinvoke r1.<android.widget.RemoteViews: void setViewVisibility(int,int)>(16909346, 0);

        $i0 = specialinvoke r0.<android.app.Notification$Builder: int getNeutralColor(android.app.Notification$StandardTemplateParams)>(r2);

        $r3 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SRC_ATOP>;

        virtualinvoke r1.<android.widget.RemoteViews: void setDrawableTint(int,boolean,int,android.graphics.PorterDuff$Mode)>(16909346, 0, $i0, $r3);

        $r4 = r6.<android.app.Notification$Action: android.app.PendingIntent actionIntent>;

        virtualinvoke r1.<android.widget.RemoteViews: void setOnClickPendingIntent(int,android.app.PendingIntent)>(16909346, $r4);

        $r5 = staticinvoke <android.app.Notification$Action: android.app.RemoteInput[] access$2000(android.app.Notification$Action)>(r6);

        virtualinvoke r1.<android.widget.RemoteViews: void setRemoteInputs(int,android.app.RemoteInput[])>(16909346, $r5);

        goto label4;

     label3:
        virtualinvoke r1.<android.widget.RemoteViews: void setRemoteInputs(int,android.app.RemoteInput[])>(16909346, null);

     label4:
        if z3 == 0 goto label5;

        goto label6;

     label5:
        i1 = 8;

     label6:
        virtualinvoke r1.<android.widget.RemoteViews: void setViewVisibility(int,int)>(16909346, i1);

        return z3;
    }

    private void bindSmallIcon(android.widget.RemoteViews, android.app.Notification$StandardTemplateParams)
    {
        android.app.Notification$Builder r0;
        android.widget.RemoteViews r1;
        android.app.Notification$StandardTemplateParams r2;
        android.app.Notification r3, $r4, $r6, $r10, $r12, $r13;
        android.graphics.drawable.Icon $r5, $r8, $r11, $r14;
        int $i0, $i1, $i2;
        android.content.Context $r7;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.widget.RemoteViews;

        r2 := @parameter1: android.app.Notification$StandardTemplateParams;

        $r4 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r5 = staticinvoke <android.app.Notification: android.graphics.drawable.Icon access$2200(android.app.Notification)>($r4);

        if $r5 != null goto label1;

        $r6 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $i0 = $r6.<android.app.Notification: int icon>;

        if $i0 == 0 goto label1;

        r3 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r7 = r0.<android.app.Notification$Builder: android.content.Context mContext>;

        $i1 = r3.<android.app.Notification: int icon>;

        $r8 = staticinvoke <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithResource(android.content.Context,int)>($r7, $i1);

        staticinvoke <android.app.Notification: android.graphics.drawable.Icon access$2202(android.app.Notification,android.graphics.drawable.Icon)>(r3, $r8);

     label1:
        $r10 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r11 = staticinvoke <android.app.Notification: android.graphics.drawable.Icon access$2200(android.app.Notification)>($r10);

        virtualinvoke r1.<android.widget.RemoteViews: void setImageViewIcon(int,android.graphics.drawable.Icon)>(16908294, $r11);

        $r12 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $i2 = $r12.<android.app.Notification: int iconLevel>;

        virtualinvoke r1.<android.widget.RemoteViews: void setInt(int,java.lang.String,int)>(16908294, "setImageLevel", $i2);

        $r13 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r14 = staticinvoke <android.app.Notification: android.graphics.drawable.Icon access$2200(android.app.Notification)>($r13);

        specialinvoke r0.<android.app.Notification$Builder: void processSmallIconColor(android.graphics.drawable.Icon,android.widget.RemoteViews,android.app.Notification$StandardTemplateParams)>($r14, r1, r2);

        return;
    }

    private int calculateMarginEnd(boolean, boolean)
    {
        android.app.Notification$Builder r0;
        boolean z0, z1;
        int i0, i1, $i2, $i3, $i4, i5, i6, i7, i8;
        android.content.Context $r1, $r3, $r5;
        android.content.res.Resources $r2, $r4, $r6;

        r0 := @this: android.app.Notification$Builder;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        i5 = 0;

        $r1 = r0.<android.app.Notification$Builder: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        i0 = virtualinvoke $r2.<android.content.res.Resources: int getDimensionPixelSize(int)>(17105345);

        $r3 = r0.<android.app.Notification$Builder: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.res.Resources getResources()>();

        i1 = virtualinvoke $r4.<android.content.res.Resources: int getDimensionPixelSize(int)>(17105379);

        if z1 == 0 goto label1;

        $i2 = 0 + i1;

        $r5 = r0.<android.app.Notification$Builder: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.res.Resources getResources()>();

        $i3 = virtualinvoke $r6.<android.content.res.Resources: int getDimensionPixelSize(int)>(17105378);

        $i4 = $i3 * 2;

        i5 = $i2 - $i4;

     label1:
        i6 = i5;

        if z0 == 0 goto label2;

        i7 = i5 + i1;

        i6 = i7;

        if z1 == 0 goto label2;

        i6 = i7 + i0;

     label2:
        if z1 != 0 goto label3;

        i8 = i6;

        if z0 == 0 goto label4;

     label3:
        i8 = i6 + i0;

     label4:
        return i8;
    }

    private java.lang.CharSequence createSummaryText()
    {
        android.app.Notification$Builder r0;
        java.lang.CharSequence r2, $r8, $r11, $r12, $r14, r18, r19;
        android.app.Notification $r3, $r6, $r16;
        android.os.Bundle $r4, $r7, $r17;
        boolean $z0;
        android.text.SpannableStringBuilder $r5;
        android.content.Context $r10;
        android.text.BidiFormatter r20;

        r0 := @this: android.app.Notification$Builder;

        $r3 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r4 = $r3.<android.app.Notification: android.os.Bundle extras>;

        r18 = virtualinvoke $r4.<android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String)>("android.title");

        $z0 = <android.app.Notification$Builder: boolean USE_ONLY_TITLE_IN_LOW_PRIORITY_SUMMARY>;

        if $z0 == 0 goto label1;

        return r18;

     label1:
        $r5 = new android.text.SpannableStringBuilder;

        specialinvoke $r5.<android.text.SpannableStringBuilder: void <init>()>();

        r19 = r18;

        if r18 != null goto label2;

        $r16 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r17 = $r16.<android.app.Notification: android.os.Bundle extras>;

        r19 = virtualinvoke $r17.<android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String)>("android.title.big");

     label2:
        r20 = staticinvoke <android.text.BidiFormatter: android.text.BidiFormatter getInstance()>();

        if r19 == null goto label3;

        $r14 = virtualinvoke r20.<android.text.BidiFormatter: java.lang.CharSequence unicodeWrap(java.lang.CharSequence)>(r19);

        virtualinvoke $r5.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence)>($r14);

     label3:
        $r6 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r7 = $r6.<android.app.Notification: android.os.Bundle extras>;

        r2 = virtualinvoke $r7.<android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String)>("android.text");

        if r19 == null goto label4;

        if r2 == null goto label4;

        $r10 = r0.<android.app.Notification$Builder: android.content.Context mContext>;

        $r11 = virtualinvoke $r10.<android.content.Context: java.lang.CharSequence getText(int)>(17040708);

        $r12 = virtualinvoke r20.<android.text.BidiFormatter: java.lang.CharSequence unicodeWrap(java.lang.CharSequence)>($r11);

        virtualinvoke $r5.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence)>($r12);

     label4:
        if r2 == null goto label5;

        $r8 = virtualinvoke r20.<android.text.BidiFormatter: java.lang.CharSequence unicodeWrap(java.lang.CharSequence)>(r2);

        virtualinvoke $r5.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence)>($r8);

     label5:
        return $r5;
    }

    private java.lang.CharSequence ensureColorSpanContrast(java.lang.CharSequence, int, android.content.res.ColorStateList[])
    {
        android.app.Notification$Builder r0;
        java.lang.CharSequence r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, i14, i15, i16, i17;
        android.content.res.ColorStateList[] r2;
        android.text.Spanned r3;
        java.lang.Object[] r4;
        java.lang.Object r6, $r16, r23;
        android.text.style.TextAppearanceSpan r7, $r18;
        int[] r8, r25;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, z6;
        android.text.SpannableStringBuilder $r9;
        java.lang.String $r10, $r19;
        android.text.style.ForegroundColorSpan $r11, $r12;
        android.content.res.ColorStateList $r13, $r14, $r20, r24, r27;
        int[][] $r15, $r17;
        android.text.style.CharacterStyle $r21;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        r2 := @parameter2: android.content.res.ColorStateList[];

        $z0 = r1 instanceof android.text.Spanned;

        if $z0 == 0 goto label15;

        r3 = (android.text.Spanned) r1;

        i13 = interfaceinvoke r3.<android.text.Spanned: int length()>();

        z6 = 0;

        r4 = interfaceinvoke r3.<android.text.Spanned: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, i13, class "Ljava/lang/Object;");

        $r9 = new android.text.SpannableStringBuilder;

        $r10 = virtualinvoke r3.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r9.<android.text.SpannableStringBuilder: void <init>(java.lang.CharSequence)>($r10);

        i14 = lengthof r4;

        i15 = 0;

     label01:
        if i15 >= i14 goto label14;

        r6 = r4[i15];

        i1 = interfaceinvoke r3.<android.text.Spanned: int getSpanStart(java.lang.Object)>(r6);

        i2 = interfaceinvoke r3.<android.text.Spanned: int getSpanEnd(java.lang.Object)>(r6);

        $i3 = i2 - i1;

        $i4 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        if $i3 != $i4 goto label02;

        z6 = 1;

        goto label02;

     label02:
        r23 = r6;

        $z1 = r6 instanceof android.text.style.CharacterStyle;

        if $z1 == 0 goto label03;

        $r21 = (android.text.style.CharacterStyle) r6;

        r23 = virtualinvoke $r21.<android.text.style.CharacterStyle: android.text.style.CharacterStyle getUnderlying()>();

     label03:
        $z2 = r23 instanceof android.text.style.TextAppearanceSpan;

        if $z2 == 0 goto label08;

        r7 = (android.text.style.TextAppearanceSpan) r23;

        r24 = virtualinvoke r7.<android.text.style.TextAppearanceSpan: android.content.res.ColorStateList getTextColor()>();

        if r24 == null goto label07;

        r25 = virtualinvoke r24.<android.content.res.ColorStateList: int[] getColors()>();

        $i7 = lengthof r25;

        r8 = newarray (int)[$i7];

        i16 = 0;

     label04:
        $i8 = lengthof r8;

        if i16 >= $i8 goto label05;

        $i11 = r25[i16];

        $z5 = r0.<android.app.Notification$Builder: boolean mInNightMode>;

        $i12 = staticinvoke <com.android.internal.util.ContrastColorUtil: int ensureLargeTextContrast(int,int,boolean)>($i11, i0, $z5);

        r8[i16] = $i12;

        i16 = i16 + 1;

        goto label04;

     label05:
        $r14 = new android.content.res.ColorStateList;

        $r15 = virtualinvoke r24.<android.content.res.ColorStateList: int[][] getStates()>();

        $r16 = virtualinvoke $r15.<java.lang.Object: java.lang.Object clone()>();

        $r17 = (int[][]) $r16;

        specialinvoke $r14.<android.content.res.ColorStateList: void <init>(int[][],int[])>($r17, r8);

        r27 = $r14;

        if z6 == 0 goto label06;

        r2[0] = $r14;

        r27 = null;

     label06:
        $r18 = new android.text.style.TextAppearanceSpan;

        $r19 = virtualinvoke r7.<android.text.style.TextAppearanceSpan: java.lang.String getFamily()>();

        $i9 = virtualinvoke r7.<android.text.style.TextAppearanceSpan: int getTextStyle()>();

        $i10 = virtualinvoke r7.<android.text.style.TextAppearanceSpan: int getTextSize()>();

        $r20 = virtualinvoke r7.<android.text.style.TextAppearanceSpan: android.content.res.ColorStateList getLinkTextColor()>();

        specialinvoke $r18.<android.text.style.TextAppearanceSpan: void <init>(java.lang.String,int,int,android.content.res.ColorStateList,android.content.res.ColorStateList)>($r19, $i9, $i10, r27, $r20);

        r23 = $r18;

        goto label07;

     label07:
        goto label12;

     label08:
        $z3 = r23 instanceof android.text.style.ForegroundColorSpan;

        if $z3 == 0 goto label11;

        $r11 = (android.text.style.ForegroundColorSpan) r23;

        $i6 = virtualinvoke $r11.<android.text.style.ForegroundColorSpan: int getForegroundColor()>();

        $z4 = r0.<android.app.Notification$Builder: boolean mInNightMode>;

        i17 = staticinvoke <com.android.internal.util.ContrastColorUtil: int ensureLargeTextContrast(int,int,boolean)>($i6, i0, $z4);

        if z6 == 0 goto label09;

        $r13 = staticinvoke <android.content.res.ColorStateList: android.content.res.ColorStateList valueOf(int)>(i17);

        r2[0] = $r13;

        r23 = null;

        goto label10;

     label09:
        $r12 = new android.text.style.ForegroundColorSpan;

        specialinvoke $r12.<android.text.style.ForegroundColorSpan: void <init>(int)>(i17);

        r23 = $r12;

     label10:
        goto label12;

     label11:
        r23 = r6;

     label12:
        if r23 == null goto label13;

        $i5 = interfaceinvoke r3.<android.text.Spanned: int getSpanFlags(java.lang.Object)>(r6);

        virtualinvoke $r9.<android.text.SpannableStringBuilder: void setSpan(java.lang.Object,int,int,int)>(r23, i1, i2, $i5);

     label13:
        i15 = i15 + 1;

        z6 = 0;

        goto label01;

     label14:
        return $r9;

     label15:
        return r1;
    }

    private void ensureColors(android.app.Notification$StandardTemplateParams)
    {
        android.app.Notification$Builder r0;
        android.app.Notification$StandardTemplateParams r1;
        int i0, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, i27, i28, i30, i31;
        double d0, d1, d2, $d3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, z7;
        android.content.Context $r2, $r3;
        byte $b12, $b13, $b14, $b26, b29, b32;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.app.Notification$StandardTemplateParams;

        i0 = specialinvoke r0.<android.app.Notification$Builder: int getBackgroundColor(android.app.Notification$StandardTemplateParams)>(r1);

        $i3 = r0.<android.app.Notification$Builder: int mPrimaryTextColor>;

        if $i3 == 1 goto label01;

        $i24 = r0.<android.app.Notification$Builder: int mSecondaryTextColor>;

        if $i24 == 1 goto label01;

        $i25 = r0.<android.app.Notification$Builder: int mTextColorsAreForBackground>;

        if $i25 == i0 goto label16;

     label01:
        r0.<android.app.Notification$Builder: int mTextColorsAreForBackground> = i0;

        $z6 = specialinvoke r0.<android.app.Notification$Builder: boolean hasForegroundColor()>();

        if $z6 == 0 goto label15;

        $z3 = specialinvoke r0.<android.app.Notification$Builder: boolean isColorized(android.app.Notification$StandardTemplateParams)>(r1);

        if $z3 != 0 goto label02;

        goto label15;

     label02:
        d0 = staticinvoke <com.android.internal.util.ContrastColorUtil: double calculateLuminance(int)>(i0);

        $i10 = r0.<android.app.Notification$Builder: int mForegroundColor>;

        d1 = staticinvoke <com.android.internal.util.ContrastColorUtil: double calculateLuminance(int)>($i10);

        $i11 = r0.<android.app.Notification$Builder: int mForegroundColor>;

        d2 = staticinvoke <com.android.internal.util.ContrastColorUtil: double calculateContrast(int,int)>($i11, i0);

        $b12 = d0 cmpl d1;

        if $b12 <= 0 goto label03;

        $z5 = staticinvoke <com.android.internal.util.ContrastColorUtil: boolean satisfiesTextContrast(int,int)>(i0, -16777216);

        if $z5 != 0 goto label04;

     label03:
        $b13 = d0 cmpg d1;

        if $b13 > 0 goto label05;

        $z4 = staticinvoke <com.android.internal.util.ContrastColorUtil: boolean satisfiesTextContrast(int,int)>(i0, -1);

        if $z4 != 0 goto label05;

     label04:
        z7 = 1;

        goto label06;

     label05:
        z7 = 0;

     label06:
        $b26 = d2 cmpg 4.5;

        if $b26 >= 0 goto label08;

        if z7 == 0 goto label07;

        $i22 = r0.<android.app.Notification$Builder: int mForegroundColor>;

        i27 = staticinvoke <com.android.internal.util.ContrastColorUtil: int findContrastColor(int,int,boolean,double)>($i22, i0, 1, 4.5);

        r0.<android.app.Notification$Builder: int mSecondaryTextColor> = i27;

        $i23 = staticinvoke <com.android.internal.util.ContrastColorUtil: int changeColorLightness(int,int)>(i27, -20);

        r0.<android.app.Notification$Builder: int mPrimaryTextColor> = $i23;

        goto label16;

     label07:
        $i20 = r0.<android.app.Notification$Builder: int mForegroundColor>;

        i28 = staticinvoke <com.android.internal.util.ContrastColorUtil: int findContrastColorAgainstDark(int,int,boolean,double)>($i20, i0, 1, 4.5);

        r0.<android.app.Notification$Builder: int mSecondaryTextColor> = i28;

        $i21 = staticinvoke <com.android.internal.util.ContrastColorUtil: int changeColorLightness(int,int)>(i28, 10);

        r0.<android.app.Notification$Builder: int mPrimaryTextColor> = $i21;

        goto label16;

     label08:
        i2 = r0.<android.app.Notification$Builder: int mForegroundColor>;

        r0.<android.app.Notification$Builder: int mPrimaryTextColor> = i2;

        if z7 == 0 goto label09;

        b29 = 20;

        goto label10;

     label09:
        b29 = -10;

     label10:
        i30 = staticinvoke <com.android.internal.util.ContrastColorUtil: int changeColorLightness(int,int)>(i2, b29);

        r0.<android.app.Notification$Builder: int mSecondaryTextColor> = i30;

        $d3 = staticinvoke <com.android.internal.util.ContrastColorUtil: double calculateContrast(int,int)>(i30, i0);

        $b14 = $d3 cmpg 4.5;

        if $b14 >= 0 goto label16;

        if z7 == 0 goto label11;

        $i18 = r0.<android.app.Notification$Builder: int mSecondaryTextColor>;

        $i19 = staticinvoke <com.android.internal.util.ContrastColorUtil: int findContrastColor(int,int,boolean,double)>($i18, i0, 1, 4.5);

        r0.<android.app.Notification$Builder: int mSecondaryTextColor> = $i19;

        goto label12;

     label11:
        $i15 = r0.<android.app.Notification$Builder: int mSecondaryTextColor>;

        $i16 = staticinvoke <com.android.internal.util.ContrastColorUtil: int findContrastColorAgainstDark(int,int,boolean,double)>($i15, i0, 1, 4.5);

        r0.<android.app.Notification$Builder: int mSecondaryTextColor> = $i16;

     label12:
        i31 = r0.<android.app.Notification$Builder: int mSecondaryTextColor>;

        if z7 == 0 goto label13;

        b32 = -20;

        goto label14;

     label13:
        b32 = 10;

     label14:
        $i17 = staticinvoke <com.android.internal.util.ContrastColorUtil: int changeColorLightness(int,int)>(i31, b32);

        r0.<android.app.Notification$Builder: int mPrimaryTextColor> = $i17;

        goto label16;

     label15:
        $r2 = r0.<android.app.Notification$Builder: android.content.Context mContext>;

        $z0 = r0.<android.app.Notification$Builder: boolean mInNightMode>;

        $i4 = staticinvoke <com.android.internal.util.ContrastColorUtil: int resolvePrimaryColor(android.content.Context,int,boolean)>($r2, i0, $z0);

        r0.<android.app.Notification$Builder: int mPrimaryTextColor> = $i4;

        $r3 = r0.<android.app.Notification$Builder: android.content.Context mContext>;

        $z1 = r0.<android.app.Notification$Builder: boolean mInNightMode>;

        $i5 = staticinvoke <com.android.internal.util.ContrastColorUtil: int resolveSecondaryColor(android.content.Context,int,boolean)>($r3, i0, $z1);

        r0.<android.app.Notification$Builder: int mSecondaryTextColor> = $i5;

        if i0 == 0 goto label16;

        $z2 = specialinvoke r0.<android.app.Notification$Builder: boolean isColorized(android.app.Notification$StandardTemplateParams)>(r1);

        if $z2 == 0 goto label16;

        $i6 = r0.<android.app.Notification$Builder: int mPrimaryTextColor>;

        $i7 = staticinvoke <com.android.internal.util.ContrastColorUtil: int findAlphaToMeetContrast(int,int,double)>($i6, i0, 4.5);

        r0.<android.app.Notification$Builder: int mPrimaryTextColor> = $i7;

        $i8 = r0.<android.app.Notification$Builder: int mSecondaryTextColor>;

        $i9 = staticinvoke <com.android.internal.util.ContrastColorUtil: int findAlphaToMeetContrast(int,int,double)>($i8, i0, 4.5);

        r0.<android.app.Notification$Builder: int mSecondaryTextColor> = $i9;

     label16:
        return;
    }

    private static java.util.List filterOutContextualActions(java.util.List)
    {
        android.app.Notification$Action r1;
        java.util.ArrayList $r2;
        boolean $z0, $z1;
        java.lang.Object $r3;
        java.util.List r4;
        java.util.Iterator r5;

        r4 := @parameter0: java.util.List;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r5 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r1 = (android.app.Notification$Action) $r3;

        $z1 = virtualinvoke r1.<android.app.Notification$Action: boolean isContextual()>();

        if $z1 != 0 goto label2;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

     label2:
        goto label1;

     label3:
        return $r2;
    }

    private android.app.Notification$Action findReplyAction()
    {
        android.app.Notification$Builder r0;
        int i0, i1;
        android.app.Notification$Action r1;
        java.util.ArrayList $r2, r4;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: android.app.Notification$Builder;

        r4 = r0.<android.app.Notification$Builder: java.util.ArrayList mActions>;

        $r2 = r0.<android.app.Notification$Builder: java.util.ArrayList mOriginalActions>;

        if $r2 == null goto label1;

        r4 = r0.<android.app.Notification$Builder: java.util.ArrayList mOriginalActions>;

     label1:
        i0 = virtualinvoke r4.<java.util.ArrayList: int size()>();

        i1 = 0;

     label2:
        if i1 >= i0 goto label4;

        $r3 = virtualinvoke r4.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r1 = (android.app.Notification$Action) $r3;

        $z0 = specialinvoke r0.<android.app.Notification$Builder: boolean hasValidRemoteInput(android.app.Notification$Action)>(r1);

        if $z0 == 0 goto label3;

        return r1;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        return null;
    }

    private android.widget.RemoteViews generateActionButton(android.app.Notification$Action, boolean, android.app.Notification$StandardTemplateParams)
    {
        android.app.Notification$Builder r0;
        android.app.Notification$Action r1;
        android.app.Notification$StandardTemplateParams r2;
        android.content.Context $r4, $r12;
        java.lang.CharSequence $r5, $r7, $r8, $r9, $r10, r19, r21;
        android.app.RemoteInput[] $r6, $r14;
        boolean $z1, $z2, $z3, $z4, $z5, $z6, $z7, z8, z9, z10, z11;
        int $i0, $i1, $i2, i3, i4, i5, $i6, $i7, $i8;
        android.content.res.ColorStateList $r11, $r13, $r22, $r23;
        android.app.PendingIntent $r15, r16;
        android.content.pm.ApplicationInfo r17;
        android.app.Notification$BuilderRemoteViews $r18;
        android.content.res.ColorStateList[] r20;
        java.util.ArrayList $r24;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.app.Notification$Action;

        z8 := @parameter1: boolean;

        r2 := @parameter2: android.app.Notification$StandardTemplateParams;

        r16 = r1.<android.app.Notification$Action: android.app.PendingIntent actionIntent>;

        if r16 != null goto label01;

        z9 = 1;

        goto label02;

     label01:
        z9 = 0;

     label02:
        $r4 = r0.<android.app.Notification$Builder: android.content.Context mContext>;

        r17 = virtualinvoke $r4.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        if z8 == 0 goto label03;

        i3 = specialinvoke r0.<android.app.Notification$Builder: int getEmphasizedActionLayoutResource()>();

        goto label05;

     label03:
        if z9 == 0 goto label04;

        i3 = specialinvoke r0.<android.app.Notification$Builder: int getActionTombstoneLayoutResource()>();

        goto label05;

     label04:
        i3 = specialinvoke r0.<android.app.Notification$Builder: int getActionLayoutResource()>();

     label05:
        $r18 = new android.app.Notification$BuilderRemoteViews;

        specialinvoke $r18.<android.app.Notification$BuilderRemoteViews: void <init>(android.content.pm.ApplicationInfo,int)>(r17, i3);

        if z9 != 0 goto label06;

        $r15 = r1.<android.app.Notification$Action: android.app.PendingIntent actionIntent>;

        virtualinvoke $r18.<android.widget.RemoteViews: void setOnClickPendingIntent(int,android.app.PendingIntent)>(16908696, $r15);

     label06:
        $r5 = r1.<android.app.Notification$Action: java.lang.CharSequence title>;

        virtualinvoke $r18.<android.widget.RemoteViews: void setContentDescription(int,java.lang.CharSequence)>(16908696, $r5);

        $r6 = staticinvoke <android.app.Notification$Action: android.app.RemoteInput[] access$2000(android.app.Notification$Action)>(r1);

        if $r6 == null goto label07;

        $r14 = staticinvoke <android.app.Notification$Action: android.app.RemoteInput[] access$2000(android.app.Notification$Action)>(r1);

        virtualinvoke $r18.<android.widget.RemoteViews: void setRemoteInputs(int,android.app.RemoteInput[])>(16908696, $r14);

     label07:
        if z8 == 0 goto label17;

        r19 = r1.<android.app.Notification$Action: java.lang.CharSequence title>;

        r20 = null;

        i4 = specialinvoke r0.<android.app.Notification$Builder: int resolveBackgroundColor(android.app.Notification$StandardTemplateParams)>(r2);

        $z3 = specialinvoke r0.<android.app.Notification$Builder: boolean isLegacy()>();

        if $z3 == 0 goto label08;

        r21 = staticinvoke <com.android.internal.util.ContrastColorUtil: java.lang.CharSequence clearColorSpans(java.lang.CharSequence)>(r19);

        goto label09;

     label08:
        r20 = newarray (android.content.res.ColorStateList)[1];

        r21 = specialinvoke r0.<android.app.Notification$Builder: java.lang.CharSequence ensureColorSpanContrast(java.lang.CharSequence,int,android.content.res.ColorStateList[])>(r19, i4, r20);

     label09:
        $r10 = specialinvoke r0.<android.app.Notification$Builder: java.lang.CharSequence processTextSpans(java.lang.CharSequence)>(r21);

        virtualinvoke $r18.<android.widget.RemoteViews: void setTextViewText(int,java.lang.CharSequence)>(16908696, $r10);

        specialinvoke r0.<android.app.Notification$Builder: void setTextViewColorPrimary(android.widget.RemoteViews,int,android.app.Notification$StandardTemplateParams)>($r18, 16908696, r2);

        if r20 == null goto label10;

        $r13 = r20[0];

        if $r13 == null goto label10;

        z10 = 1;

        goto label11;

     label10:
        z10 = 0;

     label11:
        if z10 == 0 goto label12;

        $r11 = r20[0];

        i4 = virtualinvoke $r11.<android.content.res.ColorStateList: int getDefaultColor()>();

        $r12 = r0.<android.app.Notification$Builder: android.content.Context mContext>;

        $z7 = r0.<android.app.Notification$Builder: boolean mInNightMode>;

        i5 = staticinvoke <com.android.internal.util.ContrastColorUtil: int resolvePrimaryColor(android.content.Context,int,boolean)>($r12, i4, $z7);

        virtualinvoke $r18.<android.widget.RemoteViews: void setTextColor(int,int)>(16908696, i5);

        goto label14;

     label12:
        $i2 = specialinvoke r0.<android.app.Notification$Builder: int getRawColor(android.app.Notification$StandardTemplateParams)>(r2);

        if $i2 == 0 goto label13;

        $z4 = specialinvoke r0.<android.app.Notification$Builder: boolean isColorized(android.app.Notification$StandardTemplateParams)>(r2);

        if $z4 != 0 goto label13;

        $z5 = r0.<android.app.Notification$Builder: boolean mTintActionButtons>;

        if $z5 == 0 goto label13;

        $z6 = r0.<android.app.Notification$Builder: boolean mInNightMode>;

        if $z6 != 0 goto label13;

        i5 = virtualinvoke r0.<android.app.Notification$Builder: int resolveContrastColor(android.app.Notification$StandardTemplateParams)>(r2);

        virtualinvoke $r18.<android.widget.RemoteViews: void setTextColor(int,int)>(16908696, i5);

        goto label14;

     label13:
        i5 = virtualinvoke r0.<android.app.Notification$Builder: int getPrimaryTextColor(android.app.Notification$StandardTemplateParams)>(r2);

     label14:
        $i6 = 16777215 & i5;

        $i7 = $i6 | 855638016;

        $r22 = staticinvoke <android.content.res.ColorStateList: android.content.res.ColorStateList valueOf(int)>($i7);

        virtualinvoke $r18.<android.widget.RemoteViews: void setColorStateList(int,java.lang.String,android.content.res.ColorStateList)>(16908696, "setRippleColor", $r22);

        $r23 = staticinvoke <android.content.res.ColorStateList: android.content.res.ColorStateList valueOf(int)>(i4);

        virtualinvoke $r18.<android.widget.RemoteViews: void setColorStateList(int,java.lang.String,android.content.res.ColorStateList)>(16908696, "setButtonBackground", $r23);

        if z10 != 0 goto label15;

        z11 = 1;

        goto label16;

     label15:
        z11 = 0;

     label16:
        virtualinvoke $r18.<android.widget.RemoteViews: void setBoolean(int,java.lang.String,boolean)>(16908696, "setHasStroke", z11);

        goto label19;

     label17:
        $r7 = r1.<android.app.Notification$Action: java.lang.CharSequence title>;

        $r8 = specialinvoke r0.<android.app.Notification$Builder: java.lang.CharSequence processLegacyText(java.lang.CharSequence)>($r7);

        $r9 = specialinvoke r0.<android.app.Notification$Builder: java.lang.CharSequence processTextSpans(java.lang.CharSequence)>($r8);

        virtualinvoke $r18.<android.widget.RemoteViews: void setTextViewText(int,java.lang.CharSequence)>(16908696, $r9);

        $z1 = specialinvoke r0.<android.app.Notification$Builder: boolean isColorized(android.app.Notification$StandardTemplateParams)>(r2);

        if $z1 == 0 goto label18;

        specialinvoke r0.<android.app.Notification$Builder: void setTextViewColorPrimary(android.widget.RemoteViews,int,android.app.Notification$StandardTemplateParams)>($r18, 16908696, r2);

        goto label19;

     label18:
        $i0 = specialinvoke r0.<android.app.Notification$Builder: int getRawColor(android.app.Notification$StandardTemplateParams)>(r2);

        if $i0 == 0 goto label19;

        $z2 = r0.<android.app.Notification$Builder: boolean mTintActionButtons>;

        if $z2 == 0 goto label19;

        $i1 = virtualinvoke r0.<android.app.Notification$Builder: int resolveContrastColor(android.app.Notification$StandardTemplateParams)>(r2);

        virtualinvoke $r18.<android.widget.RemoteViews: void setTextColor(int,int)>(16908696, $i1);

     label19:
        $r24 = r0.<android.app.Notification$Builder: java.util.ArrayList mActions>;

        $i8 = virtualinvoke $r24.<java.util.ArrayList: int indexOf(java.lang.Object)>(r1);

        virtualinvoke $r18.<android.widget.RemoteViews: void setIntTag(int,int,int)>(16908696, 16909220, $i8);

        return $r18;
    }

    private int getActionLayoutResource()
    {
        android.app.Notification$Builder r0;

        r0 := @this: android.app.Notification$Builder;

        return 17367199;
    }

    private int getActionTombstoneLayoutResource()
    {
        android.app.Notification$Builder r0;

        r0 := @this: android.app.Notification$Builder;

        return 17367202;
    }

    private android.os.Bundle getAllExtras()
    {
        android.app.Notification$Builder r0;
        android.os.Bundle r1, $r2, $r5;
        java.lang.Object $r3;
        android.app.Notification $r4;

        r0 := @this: android.app.Notification$Builder;

        $r2 = r0.<android.app.Notification$Builder: android.os.Bundle mUserExtras>;

        $r3 = virtualinvoke $r2.<android.os.Bundle: java.lang.Object clone()>();

        r1 = (android.os.Bundle) $r3;

        $r4 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r5 = $r4.<android.app.Notification: android.os.Bundle extras>;

        virtualinvoke r1.<android.os.Bundle: void putAll(android.os.Bundle)>($r5);

        return r1;
    }

    private int getBackgroundColor(android.app.Notification$StandardTemplateParams)
    {
        android.app.Notification$Builder r0;
        android.app.Notification$StandardTemplateParams r1;
        boolean $z0;
        int i0;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.app.Notification$StandardTemplateParams;

        $z0 = specialinvoke r0.<android.app.Notification$Builder: boolean isColorized(android.app.Notification$StandardTemplateParams)>(r1);

        if $z0 == 0 goto label3;

        i0 = r0.<android.app.Notification$Builder: int mBackgroundColor>;

        if i0 == 1 goto label1;

        goto label2;

     label1:
        i0 = specialinvoke r0.<android.app.Notification$Builder: int getRawColor(android.app.Notification$StandardTemplateParams)>(r1);

     label2:
        return i0;

     label3:
        return 0;
    }

    private int getBaseLayoutResource()
    {
        android.app.Notification$Builder r0;

        r0 := @this: android.app.Notification$Builder;

        return 17367208;
    }

    private int getBigBaseLayoutResource()
    {
        android.app.Notification$Builder r0;

        r0 := @this: android.app.Notification$Builder;

        return 17367209;
    }

    private int getBigPictureLayoutResource()
    {
        android.app.Notification$Builder r0;

        r0 := @this: android.app.Notification$Builder;

        return 17367211;
    }

    private int getBigTextLayoutResource()
    {
        android.app.Notification$Builder r0;

        r0 := @this: android.app.Notification$Builder;

        return 17367212;
    }

    private com.android.internal.util.ContrastColorUtil getColorUtil()
    {
        android.app.Notification$Builder r0;
        com.android.internal.util.ContrastColorUtil $r1, $r2, $r4;
        android.content.Context $r3;

        r0 := @this: android.app.Notification$Builder;

        $r1 = r0.<android.app.Notification$Builder: com.android.internal.util.ContrastColorUtil mColorUtil>;

        if $r1 != null goto label1;

        $r3 = r0.<android.app.Notification$Builder: android.content.Context mContext>;

        $r4 = staticinvoke <com.android.internal.util.ContrastColorUtil: com.android.internal.util.ContrastColorUtil getInstance(android.content.Context)>($r3);

        r0.<android.app.Notification$Builder: com.android.internal.util.ContrastColorUtil mColorUtil> = $r4;

     label1:
        $r2 = r0.<android.app.Notification$Builder: com.android.internal.util.ContrastColorUtil mColorUtil>;

        return $r2;
    }

    private int getConversationLayoutResource()
    {
        android.app.Notification$Builder r0;

        r0 := @this: android.app.Notification$Builder;

        return 17367213;
    }

    private int getEmphasizedActionLayoutResource()
    {
        android.app.Notification$Builder r0;

        r0 := @this: android.app.Notification$Builder;

        return 17367200;
    }

    private int getInboxLayoutResource()
    {
        android.app.Notification$Builder r0;

        r0 := @this: android.app.Notification$Builder;

        return 17367214;
    }

    private int getMessagingLayoutResource()
    {
        android.app.Notification$Builder r0;

        r0 := @this: android.app.Notification$Builder;

        return 17367216;
    }

    private int getNeutralColor(android.app.Notification$StandardTemplateParams)
    {
        android.app.Notification$Builder r0;
        android.app.Notification$StandardTemplateParams r1;
        boolean $z0;
        int $i0, $i1;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.app.Notification$StandardTemplateParams;

        $z0 = specialinvoke r0.<android.app.Notification$Builder: boolean isColorized(android.app.Notification$StandardTemplateParams)>(r1);

        if $z0 == 0 goto label1;

        $i1 = virtualinvoke r0.<android.app.Notification$Builder: int getSecondaryTextColor(android.app.Notification$StandardTemplateParams)>(r1);

        return $i1;

     label1:
        $i0 = virtualinvoke r0.<android.app.Notification$Builder: int resolveNeutralColor()>();

        return $i0;
    }

    private android.graphics.Bitmap getProfileBadge()
    {
        android.app.Notification$Builder r0;
        android.graphics.drawable.Drawable r1;
        int i0;
        android.graphics.Bitmap r2;
        android.content.Context $r4;
        android.content.res.Resources $r5;
        android.graphics.Bitmap$Config $r6;
        android.graphics.Canvas $r7;

        r0 := @this: android.app.Notification$Builder;

        r1 = specialinvoke r0.<android.app.Notification$Builder: android.graphics.drawable.Drawable getProfileBadgeDrawable()>();

        if r1 != null goto label1;

        return null;

     label1:
        $r4 = r0.<android.app.Notification$Builder: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.res.Resources getResources()>();

        i0 = virtualinvoke $r5.<android.content.res.Resources: int getDimensionPixelSize(int)>(17105338);

        $r6 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        r2 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>(i0, i0, $r6);

        $r7 = new android.graphics.Canvas;

        specialinvoke $r7.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>(r2);

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, i0, i0);

        virtualinvoke r1.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r7);

        return r2;
    }

    private android.graphics.drawable.Drawable getProfileBadgeDrawable()
    {
        android.app.Notification$Builder r0;
        android.content.Context $r1, $r2, $r5;
        int $i0, $i1;
        android.content.pm.PackageManager $r3;
        android.os.UserHandle $r4;
        android.graphics.drawable.Drawable $r6;

        r0 := @this: android.app.Notification$Builder;

        $r1 = r0.<android.app.Notification$Builder: android.content.Context mContext>;

        $i0 = virtualinvoke $r1.<android.content.Context: int getUserId()>();

        if $i0 != 0 goto label1;

        return null;

     label1:
        $r2 = r0.<android.app.Notification$Builder: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r4 = new android.os.UserHandle;

        $r5 = r0.<android.app.Notification$Builder: android.content.Context mContext>;

        $i1 = virtualinvoke $r5.<android.content.Context: int getUserId()>();

        specialinvoke $r4.<android.os.UserHandle: void <init>(int)>($i1);

        $r6 = virtualinvoke $r3.<android.content.pm.PackageManager: android.graphics.drawable.Drawable getUserBadgeForDensityNoBackground(android.os.UserHandle,int)>($r4, 0);

        return $r6;
    }

    private int getRawColor(android.app.Notification$StandardTemplateParams)
    {
        android.app.Notification$Builder r0;
        android.app.Notification$StandardTemplateParams r1;
        boolean $z0;
        android.app.Notification $r2;
        int $i0;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.app.Notification$StandardTemplateParams;

        $z0 = r1.<android.app.Notification$StandardTemplateParams: boolean forceDefaultColor>;

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r2 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $i0 = $r2.<android.app.Notification: int color>;

        return $i0;
    }

    private boolean handleProgressBar(android.widget.RemoteViews, android.os.Bundle, android.app.Notification$StandardTemplateParams)
    {
        android.app.Notification$Builder r0;
        android.widget.RemoteViews r1;
        android.app.Notification$StandardTemplateParams r2;
        int i0, $i1, $i2, i3, i4;
        boolean z0, $z1, $z2;
        android.content.Context $r3;
        android.content.res.ColorStateList $r4, r6;
        android.os.Bundle r5;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.widget.RemoteViews;

        r5 := @parameter1: android.os.Bundle;

        r2 := @parameter2: android.app.Notification$StandardTemplateParams;

        i0 = virtualinvoke r5.<android.os.Bundle: int getInt(java.lang.String,int)>("android.progressMax", 0);

        i3 = virtualinvoke r5.<android.os.Bundle: int getInt(java.lang.String,int)>("android.progress", 0);

        z0 = virtualinvoke r5.<android.os.Bundle: boolean getBoolean(java.lang.String)>("android.progressIndeterminate");

        $z1 = r2.<android.app.Notification$StandardTemplateParams: boolean hasProgress>;

        if $z1 == 0 goto label5;

        if i0 != 0 goto label1;

        if z0 == 0 goto label5;

     label1:
        virtualinvoke r1.<android.widget.RemoteViews: void setViewVisibility(int,int)>(16908301, 0);

        virtualinvoke r1.<android.widget.RemoteViews: void setProgressBar(int,int,int,boolean)>(16908301, i0, i3, z0);

        $r3 = r0.<android.app.Notification$Builder: android.content.Context mContext>;

        $i1 = virtualinvoke $r3.<android.content.Context: int getColor(int)>(17170891);

        $r4 = staticinvoke <android.content.res.ColorStateList: android.content.res.ColorStateList valueOf(int)>($i1);

        virtualinvoke r1.<android.widget.RemoteViews: void setProgressBackgroundTintList(int,android.content.res.ColorStateList)>(16908301, $r4);

        $i2 = specialinvoke r0.<android.app.Notification$Builder: int getRawColor(android.app.Notification$StandardTemplateParams)>(r2);

        if $i2 == 0 goto label4;

        $z2 = specialinvoke r0.<android.app.Notification$Builder: boolean isColorized(android.app.Notification$StandardTemplateParams)>(r2);

        if $z2 == 0 goto label2;

        i4 = virtualinvoke r0.<android.app.Notification$Builder: int getPrimaryTextColor(android.app.Notification$StandardTemplateParams)>(r2);

        goto label3;

     label2:
        i4 = virtualinvoke r0.<android.app.Notification$Builder: int resolveContrastColor(android.app.Notification$StandardTemplateParams)>(r2);

     label3:
        r6 = staticinvoke <android.content.res.ColorStateList: android.content.res.ColorStateList valueOf(int)>(i4);

        virtualinvoke r1.<android.widget.RemoteViews: void setProgressTintList(int,android.content.res.ColorStateList)>(16908301, r6);

        virtualinvoke r1.<android.widget.RemoteViews: void setProgressIndeterminateTintList(int,android.content.res.ColorStateList)>(16908301, r6);

     label4:
        return 1;

     label5:
        virtualinvoke r1.<android.widget.RemoteViews: void setViewVisibility(int,int)>(16908301, 8);

        return 0;
    }

    private boolean hasForegroundColor()
    {
        android.app.Notification$Builder r0;
        int i0;
        boolean z0;

        r0 := @this: android.app.Notification$Builder;

        i0 = r0.<android.app.Notification$Builder: int mForegroundColor>;

        z0 = 1;

        if i0 == 1 goto label1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private boolean hasValidRemoteInput(android.app.Notification$Action)
    {
        android.app.Notification$Builder r0;
        int i0, $i1, i2;
        android.app.RemoteInput r1;
        java.lang.CharSequence[] r2;
        java.lang.CharSequence $r3;
        boolean $z0, $z1;
        android.app.PendingIntent $r4;
        android.app.Notification$Action r5;
        android.app.RemoteInput[] r6;

        r0 := @this: android.app.Notification$Builder;

        r5 := @parameter0: android.app.Notification$Action;

        $r3 = r5.<android.app.Notification$Action: java.lang.CharSequence title>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r3);

        if $z0 != 0 goto label7;

        $r4 = r5.<android.app.Notification$Action: android.app.PendingIntent actionIntent>;

        if $r4 != null goto label1;

        goto label7;

     label1:
        r6 = virtualinvoke r5.<android.app.Notification$Action: android.app.RemoteInput[] getRemoteInputs()>();

        if r6 != null goto label2;

        return 0;

     label2:
        i0 = lengthof r6;

        i2 = 0;

     label3:
        if i2 >= i0 goto label6;

        r1 = r6[i2];

        r2 = virtualinvoke r1.<android.app.RemoteInput: java.lang.CharSequence[] getChoices()>();

        $z1 = virtualinvoke r1.<android.app.RemoteInput: boolean getAllowFreeFormInput()>();

        if $z1 != 0 goto label5;

        if r2 == null goto label4;

        $i1 = lengthof r2;

        if $i1 == 0 goto label4;

        goto label5;

     label4:
        i2 = i2 + 1;

        goto label3;

     label5:
        return 1;

     label6:
        return 0;

     label7:
        return 0;
    }

    private void hideLine1Text(android.widget.RemoteViews)
    {
        android.app.Notification$Builder r0;
        android.widget.RemoteViews r1;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.widget.RemoteViews;

        if r1 == null goto label1;

        virtualinvoke r1.<android.widget.RemoteViews: void setViewVisibility(int,int)>(16909530, 8);

     label1:
        return;
    }

    private boolean isColorized(android.app.Notification$StandardTemplateParams)
    {
        android.app.Notification$Builder r0;
        android.app.Notification$StandardTemplateParams r1;
        boolean $z0, $z1, z2;
        android.app.Notification $r2;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.app.Notification$StandardTemplateParams;

        $z0 = r1.<android.app.Notification$StandardTemplateParams: boolean allowColorization>;

        if $z0 == 0 goto label1;

        $r2 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $z1 = virtualinvoke $r2.<android.app.Notification: boolean isColorized()>();

        if $z1 == 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;
    }

    private boolean isLegacy()
    {
        android.app.Notification$Builder r0;
        boolean $z0, z1, $z2;
        android.content.Context $r1;
        android.content.pm.ApplicationInfo $r2;
        int $i0;

        r0 := @this: android.app.Notification$Builder;

        $z0 = r0.<android.app.Notification$Builder: boolean mIsLegacyInitialized>;

        if $z0 != 0 goto label3;

        $r1 = r0.<android.app.Notification$Builder: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $i0 = $r2.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i0 >= 21 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        r0.<android.app.Notification$Builder: boolean mIsLegacy> = z1;

        r0.<android.app.Notification$Builder: boolean mIsLegacyInitialized> = 1;

     label3:
        $z2 = r0.<android.app.Notification$Builder: boolean mIsLegacy>;

        return $z2;
    }

    public static void makeHeaderExpanded(android.widget.RemoteViews)
    {
        android.widget.RemoteViews r0;

        r0 := @parameter0: android.widget.RemoteViews;

        if r0 == null goto label1;

        virtualinvoke r0.<android.widget.RemoteViews: void setBoolean(int,java.lang.String,boolean)>(16909224, "setExpanded", 1);

     label1:
        return;
    }

    private android.widget.RemoteViews makeNotificationHeader(android.app.Notification$StandardTemplateParams)
    {
        android.app.Notification$Builder r0;
        android.app.Notification$StandardTemplateParams r1;
        android.app.Notification$BuilderRemoteViews $r4;
        android.content.Context $r5;
        android.content.pm.ApplicationInfo $r6;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.app.Notification$StandardTemplateParams;

        virtualinvoke r1.<android.app.Notification$StandardTemplateParams: android.app.Notification$StandardTemplateParams disallowColorization()>();

        $r4 = new android.app.Notification$BuilderRemoteViews;

        $r5 = r0.<android.app.Notification$Builder: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        specialinvoke $r4.<android.app.Notification$BuilderRemoteViews: void <init>(android.content.pm.ApplicationInfo,int)>($r6, 17367207);

        specialinvoke r0.<android.app.Notification$Builder: void resetNotificationHeader(android.widget.RemoteViews)>($r4);

        specialinvoke r0.<android.app.Notification$Builder: void bindNotificationHeader(android.widget.RemoteViews,android.app.Notification$StandardTemplateParams)>($r4, r1);

        return $r4;
    }

    public static android.app.Notification maybeCloneStrippedForDelivery(android.app.Notification)
    {
        java.lang.String r0;
        boolean z0, $z1, z2, z3, $z4, z5, $z6;
        android.os.Bundle $r1, $r3, $r4, $r5, $r6, $r8, $r10;
        android.widget.RemoteViews $r2, $r7, $r9, $r11, $r14, $r15;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.Class $r12;
        android.app.Notification r13, r16;

        r13 := @parameter0: android.app.Notification;

        $r1 = r13.<android.app.Notification: android.os.Bundle extras>;

        r0 = virtualinvoke $r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("android.template");

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r0);

        if $z1 != 0 goto label01;

        $r12 = staticinvoke <android.app.Notification: java.lang.Class getNotificationStyleClass(java.lang.String)>(r0);

        if $r12 != null goto label01;

        return r13;

     label01:
        $r2 = r13.<android.app.Notification: android.widget.RemoteViews contentView>;

        z0 = $r2 instanceof android.app.Notification$BuilderRemoteViews;

        z2 = 1;

        if z0 == 0 goto label02;

        $r10 = r13.<android.app.Notification: android.os.Bundle extras>;

        $i4 = virtualinvoke $r10.<android.os.Bundle: int getInt(java.lang.String,int)>("android.rebuild.contentViewActionCount", -1);

        $r11 = r13.<android.app.Notification: android.widget.RemoteViews contentView>;

        $i5 = virtualinvoke $r11.<android.widget.RemoteViews: int getSequenceNumber()>();

        if $i4 != $i5 goto label02;

        z3 = 1;

        goto label03;

     label02:
        z3 = 0;

     label03:
        $r14 = r13.<android.app.Notification: android.widget.RemoteViews bigContentView>;

        $z4 = $r14 instanceof android.app.Notification$BuilderRemoteViews;

        if $z4 == 0 goto label04;

        $r8 = r13.<android.app.Notification: android.os.Bundle extras>;

        $i2 = virtualinvoke $r8.<android.os.Bundle: int getInt(java.lang.String,int)>("android.rebuild.bigViewActionCount", -1);

        $r9 = r13.<android.app.Notification: android.widget.RemoteViews bigContentView>;

        $i3 = virtualinvoke $r9.<android.widget.RemoteViews: int getSequenceNumber()>();

        if $i2 != $i3 goto label04;

        z5 = 1;

        goto label05;

     label04:
        z5 = 0;

     label05:
        $r15 = r13.<android.app.Notification: android.widget.RemoteViews headsUpContentView>;

        $z6 = $r15 instanceof android.app.Notification$BuilderRemoteViews;

        if $z6 == 0 goto label06;

        $r6 = r13.<android.app.Notification: android.os.Bundle extras>;

        $i0 = virtualinvoke $r6.<android.os.Bundle: int getInt(java.lang.String,int)>("android.rebuild.hudViewActionCount", -1);

        $r7 = r13.<android.app.Notification: android.widget.RemoteViews headsUpContentView>;

        $i1 = virtualinvoke $r7.<android.widget.RemoteViews: int getSequenceNumber()>();

        if $i0 != $i1 goto label06;

        goto label07;

     label06:
        z2 = 0;

     label07:
        if z3 != 0 goto label08;

        if z5 != 0 goto label08;

        if z2 != 0 goto label08;

        return r13;

     label08:
        r16 = virtualinvoke r13.<android.app.Notification: android.app.Notification clone()>();

        if z3 == 0 goto label09;

        r16.<android.app.Notification: android.widget.RemoteViews contentView> = null;

        $r5 = r16.<android.app.Notification: android.os.Bundle extras>;

        virtualinvoke $r5.<android.os.Bundle: void remove(java.lang.String)>("android.rebuild.contentViewActionCount");

     label09:
        if z5 == 0 goto label10;

        r16.<android.app.Notification: android.widget.RemoteViews bigContentView> = null;

        $r4 = r16.<android.app.Notification: android.os.Bundle extras>;

        virtualinvoke $r4.<android.os.Bundle: void remove(java.lang.String)>("android.rebuild.bigViewActionCount");

     label10:
        if z2 == 0 goto label11;

        r16.<android.app.Notification: android.widget.RemoteViews headsUpContentView> = null;

        $r3 = r16.<android.app.Notification: android.os.Bundle extras>;

        virtualinvoke $r3.<android.os.Bundle: void remove(java.lang.String)>("android.rebuild.hudViewActionCount");

     label11:
        return r16;
    }

    private void processLargeLegacyIcon(android.graphics.drawable.Icon, android.widget.RemoteViews, android.app.Notification$StandardTemplateParams)
    {
        android.app.Notification$Builder r0;
        android.graphics.drawable.Icon r1;
        android.widget.RemoteViews r2;
        android.app.Notification$StandardTemplateParams r3;
        boolean $z0, $z1;
        com.android.internal.util.ContrastColorUtil $r4;
        android.content.Context $r5;
        int $i0;
        android.graphics.PorterDuff$Mode $r6;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.graphics.drawable.Icon;

        r2 := @parameter1: android.widget.RemoteViews;

        r3 := @parameter2: android.app.Notification$StandardTemplateParams;

        if r1 == null goto label1;

        $z0 = specialinvoke r0.<android.app.Notification$Builder: boolean isLegacy()>();

        if $z0 == 0 goto label1;

        $r4 = specialinvoke r0.<android.app.Notification$Builder: com.android.internal.util.ContrastColorUtil getColorUtil()>();

        $r5 = r0.<android.app.Notification$Builder: android.content.Context mContext>;

        $z1 = virtualinvoke $r4.<com.android.internal.util.ContrastColorUtil: boolean isGrayscaleIcon(android.content.Context,android.graphics.drawable.Icon)>($r5, r1);

        if $z1 == 0 goto label1;

        $i0 = virtualinvoke r0.<android.app.Notification$Builder: int resolveContrastColor(android.app.Notification$StandardTemplateParams)>(r3);

        $r6 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SRC_ATOP>;

        virtualinvoke r2.<android.widget.RemoteViews: void setDrawableTint(int,boolean,int,android.graphics.PorterDuff$Mode)>(16908294, 0, $i0, $r6);

     label1:
        return;
    }

    private java.lang.CharSequence processLegacyText(java.lang.CharSequence)
    {
        android.app.Notification$Builder r0;
        java.lang.CharSequence r1, $r3;
        boolean $z0, $z1, z2;
        com.android.internal.util.ContrastColorUtil $r2;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: java.lang.CharSequence;

        $z0 = specialinvoke r0.<android.app.Notification$Builder: boolean isLegacy()>();

        if $z0 != 0 goto label2;

        $z1 = specialinvoke r0.<android.app.Notification$Builder: boolean textColorsNeedInversion()>();

        if $z1 == 0 goto label1;

        goto label2;

     label1:
        z2 = 0;

        goto label3;

     label2:
        z2 = 1;

     label3:
        if z2 == 0 goto label4;

        $r2 = specialinvoke r0.<android.app.Notification$Builder: com.android.internal.util.ContrastColorUtil getColorUtil()>();

        $r3 = virtualinvoke $r2.<com.android.internal.util.ContrastColorUtil: java.lang.CharSequence invertCharSequenceColors(java.lang.CharSequence)>(r1);

        return $r3;

     label4:
        return r1;
    }

    private void processSmallIconColor(android.graphics.drawable.Icon, android.widget.RemoteViews, android.app.Notification$StandardTemplateParams)
    {
        android.app.Notification$Builder r0;
        android.graphics.drawable.Icon r1;
        android.widget.RemoteViews r2;
        android.app.Notification$StandardTemplateParams r3;
        boolean z0, $z1, z2, $z3;
        android.graphics.PorterDuff$Mode $r4;
        com.android.internal.util.ContrastColorUtil $r5;
        android.content.Context $r6;
        int i0, i1;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.graphics.drawable.Icon;

        r2 := @parameter1: android.widget.RemoteViews;

        r3 := @parameter2: android.app.Notification$StandardTemplateParams;

        z0 = specialinvoke r0.<android.app.Notification$Builder: boolean isLegacy()>();

        i0 = 1;

        if z0 == 0 goto label2;

        $r5 = specialinvoke r0.<android.app.Notification$Builder: com.android.internal.util.ContrastColorUtil getColorUtil()>();

        $r6 = r0.<android.app.Notification$Builder: android.content.Context mContext>;

        $z1 = virtualinvoke $r5.<com.android.internal.util.ContrastColorUtil: boolean isGrayscaleIcon(android.content.Context,android.graphics.drawable.Icon)>($r6, r1);

        if $z1 == 0 goto label1;

        goto label2;

     label1:
        z2 = 0;

        goto label3;

     label2:
        z2 = 1;

     label3:
        $z3 = specialinvoke r0.<android.app.Notification$Builder: boolean isColorized(android.app.Notification$StandardTemplateParams)>(r3);

        if $z3 == 0 goto label4;

        i1 = virtualinvoke r0.<android.app.Notification$Builder: int getPrimaryTextColor(android.app.Notification$StandardTemplateParams)>(r3);

        goto label5;

     label4:
        i1 = virtualinvoke r0.<android.app.Notification$Builder: int resolveContrastColor(android.app.Notification$StandardTemplateParams)>(r3);

     label5:
        if z2 == 0 goto label6;

        $r4 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SRC_ATOP>;

        virtualinvoke r2.<android.widget.RemoteViews: void setDrawableTint(int,boolean,int,android.graphics.PorterDuff$Mode)>(16908294, 0, i1, $r4);

     label6:
        if z2 == 0 goto label7;

        i0 = i1;

     label7:
        virtualinvoke r2.<android.widget.RemoteViews: void setInt(int,java.lang.String,int)>(16908294, "setOriginalIconColor", i0);

        return;
    }

    private java.lang.CharSequence processTextSpans(java.lang.CharSequence)
    {
        android.app.Notification$Builder r0;
        java.lang.CharSequence r1, $r2;
        boolean $z0, $z1;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: java.lang.CharSequence;

        $z0 = specialinvoke r0.<android.app.Notification$Builder: boolean hasForegroundColor()>();

        if $z0 != 0 goto label2;

        $z1 = r0.<android.app.Notification$Builder: boolean mInNightMode>;

        if $z1 == 0 goto label1;

        goto label2;

     label1:
        return r1;

     label2:
        $r2 = staticinvoke <com.android.internal.util.ContrastColorUtil: java.lang.CharSequence clearColorSpans(java.lang.CharSequence)>(r1);

        return $r2;
    }

    public static android.app.Notification$Builder recoverBuilder(android.content.Context, android.app.Notification)
    {
        android.app.Notification r0;
        android.content.pm.ApplicationInfo r1;
        android.os.Bundle $r2;
        android.os.Parcelable $r3;
        android.app.Notification$Builder $r4;
        android.content.pm.PackageManager$NameNotFoundException $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r10;
        android.content.Context r11, r12;

        r11 := @parameter0: android.content.Context;

        r0 := @parameter1: android.app.Notification;

        $r2 = r0.<android.app.Notification: android.os.Bundle extras>;

        $r3 = virtualinvoke $r2.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>("android.appInfo");

        r1 = (android.content.pm.ApplicationInfo) $r3;

        if r1 == null goto label5;

     label1:
        r12 = virtualinvoke r11.<android.content.Context: android.content.Context createApplicationContext(android.content.pm.ApplicationInfo,int)>(r1, 4);

     label2:
        r11 = r12;

     label3:
        goto label5;

     label4:
        $r5 := @caughtexception;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ApplicationInfo ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not found");

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Notification", $r10);

        goto label3;

     label5:
        $r4 = new android.app.Notification$Builder;

        specialinvoke $r4.<android.app.Notification$Builder: void <init>(android.content.Context,android.app.Notification)>(r11, r0);

        return $r4;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label4;
    }

    private void resetNotificationHeader(android.widget.RemoteViews)
    {
        android.app.Notification$Builder r0;
        android.widget.RemoteViews r1;
        android.app.Notification $r2;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.widget.RemoteViews;

        virtualinvoke r1.<android.widget.RemoteViews: void setBoolean(int,java.lang.String,boolean)>(16909224, "setExpanded", 0);

        virtualinvoke r1.<android.widget.RemoteViews: void setTextViewText(int,java.lang.CharSequence)>(16908761, null);

        virtualinvoke r1.<android.widget.RemoteViews: void setViewVisibility(int,int)>(16908842, 8);

        virtualinvoke r1.<android.widget.RemoteViews: void setViewVisibility(int,int)>(16909033, 8);

        virtualinvoke r1.<android.widget.RemoteViews: void setTextViewText(int,java.lang.CharSequence)>(16909033, null);

        virtualinvoke r1.<android.widget.RemoteViews: void setViewVisibility(int,int)>(16909035, 8);

        virtualinvoke r1.<android.widget.RemoteViews: void setTextViewText(int,java.lang.CharSequence)>(16909035, null);

        virtualinvoke r1.<android.widget.RemoteViews: void setViewVisibility(int,int)>(16909034, 8);

        virtualinvoke r1.<android.widget.RemoteViews: void setViewVisibility(int,int)>(16909036, 8);

        virtualinvoke r1.<android.widget.RemoteViews: void setViewVisibility(int,int)>(16909537, 8);

        virtualinvoke r1.<android.widget.RemoteViews: void setViewVisibility(int,int)>(16909533, 8);

        virtualinvoke r1.<android.widget.RemoteViews: void setImageViewIcon(int,android.graphics.drawable.Icon)>(16909317, null);

        virtualinvoke r1.<android.widget.RemoteViews: void setViewVisibility(int,int)>(16909317, 8);

        virtualinvoke r1.<android.widget.RemoteViews: void setViewVisibility(int,int)>(16908740, 8);

        $r2 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        staticinvoke <android.app.Notification: boolean access$1702(android.app.Notification,boolean)>($r2, 0);

        return;
    }

    private void resetStandardTemplate(android.widget.RemoteViews)
    {
        android.app.Notification$Builder r0;
        android.widget.RemoteViews r1;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.widget.RemoteViews;

        specialinvoke r0.<android.app.Notification$Builder: void resetNotificationHeader(android.widget.RemoteViews)>(r1);

        virtualinvoke r1.<android.widget.RemoteViews: void setViewVisibility(int,int)>(16909366, 8);

        virtualinvoke r1.<android.widget.RemoteViews: void setViewVisibility(int,int)>(16908310, 8);

        virtualinvoke r1.<android.widget.RemoteViews: void setTextViewText(int,java.lang.CharSequence)>(16908310, null);

        virtualinvoke r1.<android.widget.RemoteViews: void setViewVisibility(int,int)>(16909502, 8);

        virtualinvoke r1.<android.widget.RemoteViews: void setTextViewText(int,java.lang.CharSequence)>(16909502, null);

        virtualinvoke r1.<android.widget.RemoteViews: void setViewVisibility(int,int)>(16909530, 8);

        virtualinvoke r1.<android.widget.RemoteViews: void setTextViewText(int,java.lang.CharSequence)>(16909530, null);

        return;
    }

    private void resetStandardTemplateWithActions(android.widget.RemoteViews)
    {
        android.app.Notification$Builder r0;
        android.widget.RemoteViews r1;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.widget.RemoteViews;

        virtualinvoke r1.<android.widget.RemoteViews: void setViewVisibility(int,int)>(16908721, 8);

        virtualinvoke r1.<android.widget.RemoteViews: void removeAllViews(int)>(16908721);

        virtualinvoke r1.<android.widget.RemoteViews: void setViewVisibility(int,int)>(16909226, 8);

        virtualinvoke r1.<android.widget.RemoteViews: void setTextViewText(int,java.lang.CharSequence)>(16909228, null);

        virtualinvoke r1.<android.widget.RemoteViews: void setViewVisibility(int,int)>(16909229, 8);

        virtualinvoke r1.<android.widget.RemoteViews: void setViewVisibility(int,int)>(16909227, 8);

        virtualinvoke r1.<android.widget.RemoteViews: void setViewVisibility(int,int)>(16909230, 8);

        virtualinvoke r1.<android.widget.RemoteViews: void setTextViewText(int,java.lang.CharSequence)>(16909230, null);

        virtualinvoke r1.<android.widget.RemoteViews: void setViewVisibility(int,int)>(16909231, 8);

        virtualinvoke r1.<android.widget.RemoteViews: void setTextViewText(int,java.lang.CharSequence)>(16909231, null);

        virtualinvoke r1.<android.widget.RemoteViews: void setViewLayoutMarginBottomDimen(int,int)>(16909221, 17105344);

        return;
    }

    private int resolveBackgroundColor(android.app.Notification$StandardTemplateParams)
    {
        android.app.Notification$Builder r0;
        android.app.Notification$StandardTemplateParams r1;
        int i0, i1;
        android.content.Context $r2;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.app.Notification$StandardTemplateParams;

        i0 = specialinvoke r0.<android.app.Notification$Builder: int getBackgroundColor(android.app.Notification$StandardTemplateParams)>(r1);

        i1 = i0;

        if i0 != 0 goto label1;

        $r2 = r0.<android.app.Notification$Builder: android.content.Context mContext>;

        i1 = virtualinvoke $r2.<android.content.Context: int getColor(int)>(17170888);

     label1:
        return i1;
    }

    private void sanitizeColor()
    {
        android.app.Notification$Builder r0;
        android.app.Notification r1, $r2;
        int $i0, $i1, $i2;

        r0 := @this: android.app.Notification$Builder;

        $r2 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $i0 = $r2.<android.app.Notification: int color>;

        if $i0 == 0 goto label1;

        r1 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $i1 = r1.<android.app.Notification: int color>;

        $i2 = $i1 | -16777216;

        r1.<android.app.Notification: int color> = $i2;

     label1:
        return;
    }

    private void setTextViewColorPrimary(android.widget.RemoteViews, int, android.app.Notification$StandardTemplateParams)
    {
        android.app.Notification$Builder r0;
        android.widget.RemoteViews r1;
        int i0, $i1;
        android.app.Notification$StandardTemplateParams r2;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.widget.RemoteViews;

        i0 := @parameter1: int;

        r2 := @parameter2: android.app.Notification$StandardTemplateParams;

        specialinvoke r0.<android.app.Notification$Builder: void ensureColors(android.app.Notification$StandardTemplateParams)>(r2);

        $i1 = r0.<android.app.Notification$Builder: int mPrimaryTextColor>;

        virtualinvoke r1.<android.widget.RemoteViews: void setTextColor(int,int)>(i0, $i1);

        return;
    }

    private void setTextViewColorSecondary(android.widget.RemoteViews, int, android.app.Notification$StandardTemplateParams)
    {
        android.app.Notification$Builder r0;
        android.widget.RemoteViews r1;
        int i0, $i1;
        android.app.Notification$StandardTemplateParams r2;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.widget.RemoteViews;

        i0 := @parameter1: int;

        r2 := @parameter2: android.app.Notification$StandardTemplateParams;

        specialinvoke r0.<android.app.Notification$Builder: void ensureColors(android.app.Notification$StandardTemplateParams)>(r2);

        $i1 = r0.<android.app.Notification$Builder: int mSecondaryTextColor>;

        virtualinvoke r1.<android.widget.RemoteViews: void setTextColor(int,int)>(i0, $i1);

        return;
    }

    private boolean shouldTintActionButtons()
    {
        android.app.Notification$Builder r0;
        boolean $z0;

        r0 := @this: android.app.Notification$Builder;

        $z0 = r0.<android.app.Notification$Builder: boolean mTintActionButtons>;

        return $z0;
    }

    private boolean showsTimeOrChronometer()
    {
        android.app.Notification$Builder r0;
        android.app.Notification $r1, $r2;
        boolean $z0, $z1, z2;

        r0 := @this: android.app.Notification$Builder;

        $r1 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $z0 = virtualinvoke $r1.<android.app.Notification: boolean showsTime()>();

        if $z0 != 0 goto label2;

        $r2 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $z1 = virtualinvoke $r2.<android.app.Notification: boolean showsChronometer()>();

        if $z1 == 0 goto label1;

        goto label2;

     label1:
        z2 = 0;

        goto label3;

     label2:
        z2 = 1;

     label3:
        return z2;
    }

    private boolean textColorsNeedInversion()
    {
        android.app.Notification$Builder r0;
        android.app.Notification$Style r1;
        int i0;
        java.lang.Class $r2, $r3;
        boolean $z1, z2;
        android.content.Context $r4;
        android.content.pm.ApplicationInfo $r5;

        r0 := @this: android.app.Notification$Builder;

        r1 = r0.<android.app.Notification$Builder: android.app.Notification$Style mStyle>;

        if r1 == null goto label3;

        $r2 = class "Landroid/app/Notification$MediaStyle;";

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $z1 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z1 != 0 goto label1;

        goto label3;

     label1:
        $r4 = r0.<android.app.Notification$Builder: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        i0 = $r5.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        z2 = 0;

        if i0 <= 23 goto label2;

        z2 = 0;

        if i0 >= 26 goto label2;

        z2 = 1;

     label2:
        return z2;

     label3:
        return 0;
    }

    private void updateBackgroundColor(android.widget.RemoteViews, android.app.Notification$StandardTemplateParams)
    {
        android.app.Notification$Builder r0;
        android.widget.RemoteViews r1;
        android.app.Notification$StandardTemplateParams r2;
        boolean $z0;
        int $i0;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.widget.RemoteViews;

        r2 := @parameter1: android.app.Notification$StandardTemplateParams;

        $z0 = specialinvoke r0.<android.app.Notification$Builder: boolean isColorized(android.app.Notification$StandardTemplateParams)>(r2);

        if $z0 == 0 goto label1;

        $i0 = specialinvoke r0.<android.app.Notification$Builder: int getBackgroundColor(android.app.Notification$StandardTemplateParams)>(r2);

        virtualinvoke r1.<android.widget.RemoteViews: void setInt(int,java.lang.String,int)>(16909478, "setBackgroundColor", $i0);

        goto label2;

     label1:
        virtualinvoke r1.<android.widget.RemoteViews: void setInt(int,java.lang.String,int)>(16909478, "setBackgroundResource", 0);

     label2:
        return;
    }

    private boolean useExistingRemoteView()
    {
        android.app.Notification$Builder r0;
        android.app.Notification$Style r1;
        boolean $z0, $z1, z2;

        r0 := @this: android.app.Notification$Builder;

        r1 = r0.<android.app.Notification$Builder: android.app.Notification$Style mStyle>;

        if r1 == null goto label2;

        $z0 = virtualinvoke r1.<android.app.Notification$Style: boolean displayCustomViewInline()>();

        if $z0 != 0 goto label1;

        $z1 = r0.<android.app.Notification$Builder: boolean mRebuildStyledRemoteViews>;

        if $z1 != 0 goto label1;

        goto label2;

     label1:
        z2 = 0;

        goto label3;

     label2:
        z2 = 1;

     label3:
        return z2;
    }

    public android.app.Notification$Builder addAction(int, java.lang.CharSequence, android.app.PendingIntent)
    {
        android.app.Notification$Builder r0;
        int i0;
        java.lang.CharSequence r1, $r5;
        android.app.PendingIntent r2;
        android.app.Notification$Action $r3;
        java.util.ArrayList $r4;

        r0 := @this: android.app.Notification$Builder;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.CharSequence;

        r2 := @parameter2: android.app.PendingIntent;

        $r4 = r0.<android.app.Notification$Builder: java.util.ArrayList mActions>;

        $r3 = new android.app.Notification$Action;

        $r5 = staticinvoke <android.app.Notification: java.lang.CharSequence safeCharSequence(java.lang.CharSequence)>(r1);

        specialinvoke $r3.<android.app.Notification$Action: void <init>(int,java.lang.CharSequence,android.app.PendingIntent)>(i0, $r5, r2);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        return r0;
    }

    public android.app.Notification$Builder addAction(android.app.Notification$Action)
    {
        android.app.Notification$Builder r0;
        android.app.Notification$Action r1;
        java.util.ArrayList $r2;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.app.Notification$Action;

        if r1 == null goto label1;

        $r2 = r0.<android.app.Notification$Builder: java.util.ArrayList mActions>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

     label1:
        return r0;
    }

    public android.app.Notification$Builder addExtras(android.os.Bundle)
    {
        android.app.Notification$Builder r0;
        android.os.Bundle r1, $r2;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.os.Bundle;

        if r1 == null goto label1;

        $r2 = r0.<android.app.Notification$Builder: android.os.Bundle mUserExtras>;

        virtualinvoke $r2.<android.os.Bundle: void putAll(android.os.Bundle)>(r1);

     label1:
        return r0;
    }

    public android.app.Notification$Builder addPerson(android.app.Person)
    {
        android.app.Notification$Builder r0;
        android.app.Person r1;
        java.util.ArrayList $r2;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.app.Person;

        $r2 = r0.<android.app.Notification$Builder: java.util.ArrayList mPersonList>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        return r0;
    }

    public android.app.Notification$Builder addPerson(java.lang.String)
    {
        android.app.Notification$Builder r0;
        java.lang.String r1;
        android.app.Person$Builder $r2, $r3;
        android.app.Person $r4;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: java.lang.String;

        $r2 = new android.app.Person$Builder;

        specialinvoke $r2.<android.app.Person$Builder: void <init>()>();

        $r3 = virtualinvoke $r2.<android.app.Person$Builder: android.app.Person$Builder setUri(java.lang.String)>(r1);

        $r4 = virtualinvoke $r3.<android.app.Person$Builder: android.app.Person build()>();

        virtualinvoke r0.<android.app.Notification$Builder: android.app.Notification$Builder addPerson(android.app.Person)>($r4);

        return r0;
    }

    public android.app.Notification build()
    {
        android.app.Notification$Builder r0;
        android.app.Notification $r1, $r3, $r4, $r8, $r11, $r12, $r13, $r15, $r17, $r19, $r21, $r22, $r25, $r27, $r29, $r30, $r33, $r35, $r36, $r43, $r46, $r48, $r50, $r53, $r55, $r60, $r64, $r73, $r75, r76;
        java.lang.String $r2, $r52, $r54, $r57, $r61, $r66, $r69;
        long $l0;
        android.content.Context $r5, $r7, $r9, $r39, $r41;
        android.content.pm.ApplicationInfo $r10;
        int $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        boolean $z0, $z1;
        android.widget.RemoteViews $r14, $r16, $r18, $r20, $r23, $r26, $r28, $r31, $r34, $r37, $r74;
        android.os.Bundle $r24, $r32, $r38, $r47, $r71;
        android.app.Notification$Style $r40, $r42, $r44, r72;
        android.app.Notification$BubbleMetadata $r49, $r51, $r56, $r65;
        java.lang.StringBuilder $r58;
        java.lang.IllegalArgumentException $r68;

        r0 := @this: android.app.Notification$Builder;

        $r1 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r2 = staticinvoke <android.app.Notification: java.lang.String access$700(android.app.Notification)>($r1);

        if $r2 == null goto label2;

        $r48 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r49 = staticinvoke <android.app.Notification: android.app.Notification$BubbleMetadata access$1100(android.app.Notification)>($r48);

        if $r49 == null goto label2;

        $r50 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r51 = staticinvoke <android.app.Notification: android.app.Notification$BubbleMetadata access$1100(android.app.Notification)>($r50);

        $r52 = virtualinvoke $r51.<android.app.Notification$BubbleMetadata: java.lang.String getShortcutId()>();

        if $r52 == null goto label2;

        $r53 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r54 = staticinvoke <android.app.Notification: java.lang.String access$700(android.app.Notification)>($r53);

        $r55 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r56 = staticinvoke <android.app.Notification: android.app.Notification$BubbleMetadata access$1100(android.app.Notification)>($r55);

        $r57 = virtualinvoke $r56.<android.app.Notification$BubbleMetadata: java.lang.String getShortcutId()>();

        $z1 = virtualinvoke $r54.<java.lang.String: boolean equals(java.lang.Object)>($r57);

        if $z1 == 0 goto label1;

        goto label2;

     label1:
        $r58 = new java.lang.StringBuilder;

        specialinvoke $r58.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Notification and BubbleMetadata shortcut id\'s don\'t match, notification: ");

        $r60 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r61 = staticinvoke <android.app.Notification: java.lang.String access$700(android.app.Notification)>($r60);

        virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r61);

        virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" vs bubble: ");

        $r64 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r65 = staticinvoke <android.app.Notification: android.app.Notification$BubbleMetadata access$1100(android.app.Notification)>($r64);

        $r66 = virtualinvoke $r65.<android.app.Notification$BubbleMetadata: java.lang.String getShortcutId()>();

        virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r66);

        $r68 = new java.lang.IllegalArgumentException;

        $r69 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r68.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r69);

        throw $r68;

     label2:
        $r71 = r0.<android.app.Notification$Builder: android.os.Bundle mUserExtras>;

        if $r71 == null goto label3;

        $r46 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r47 = specialinvoke r0.<android.app.Notification$Builder: android.os.Bundle getAllExtras()>();

        $r46.<android.app.Notification: android.os.Bundle extras> = $r47;

     label3:
        $r3 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        staticinvoke <android.app.Notification: long access$2102(android.app.Notification,long)>($r3, $l0);

        $r5 = r0.<android.app.Notification$Builder: android.content.Context mContext>;

        $r4 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        staticinvoke <android.app.Notification: void addFieldsFromContext(android.content.Context,android.app.Notification)>($r5, $r4);

        virtualinvoke r0.<android.app.Notification$Builder: android.app.Notification buildUnstyled()>();

        r72 = r0.<android.app.Notification$Builder: android.app.Notification$Style mStyle>;

        if r72 == null goto label4;

        $r39 = r0.<android.app.Notification$Builder: android.content.Context mContext>;

        virtualinvoke r72.<android.app.Notification$Style: void reduceImageSizes(android.content.Context)>($r39);

        $r40 = r0.<android.app.Notification$Builder: android.app.Notification$Style mStyle>;

        virtualinvoke $r40.<android.app.Notification$Style: void purgeResources()>();

        $r42 = r0.<android.app.Notification$Builder: android.app.Notification$Style mStyle>;

        $r41 = r0.<android.app.Notification$Builder: android.content.Context mContext>;

        virtualinvoke $r42.<android.app.Notification$Style: void validate(android.content.Context)>($r41);

        $r44 = r0.<android.app.Notification$Builder: android.app.Notification$Style mStyle>;

        $r43 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        virtualinvoke $r44.<android.app.Notification$Style: android.app.Notification buildStyled(android.app.Notification)>($r43);

     label4:
        $r8 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r7 = r0.<android.app.Notification$Builder: android.content.Context mContext>;

        virtualinvoke $r8.<android.app.Notification: void reduceImageSizes(android.content.Context)>($r7);

        $r9 = r0.<android.app.Notification$Builder: android.content.Context mContext>;

        $r10 = virtualinvoke $r9.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $i2 = $r10.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i2 >= 24 goto label7;

        $z0 = specialinvoke r0.<android.app.Notification$Builder: boolean useExistingRemoteView()>();

        if $z0 == 0 goto label7;

        $r13 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r14 = $r13.<android.app.Notification: android.widget.RemoteViews contentView>;

        if $r14 != null goto label5;

        $r33 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r34 = virtualinvoke r0.<android.app.Notification$Builder: android.widget.RemoteViews createContentView()>();

        $r33.<android.app.Notification: android.widget.RemoteViews contentView> = $r34;

        $r35 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r38 = $r35.<android.app.Notification: android.os.Bundle extras>;

        $r36 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r37 = $r36.<android.app.Notification: android.widget.RemoteViews contentView>;

        $i7 = virtualinvoke $r37.<android.widget.RemoteViews: int getSequenceNumber()>();

        virtualinvoke $r38.<android.os.Bundle: void putInt(java.lang.String,int)>("android.rebuild.contentViewActionCount", $i7);

     label5:
        $r15 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r16 = $r15.<android.app.Notification: android.widget.RemoteViews bigContentView>;

        if $r16 != null goto label6;

        $r25 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r26 = virtualinvoke r0.<android.app.Notification$Builder: android.widget.RemoteViews createBigContentView()>();

        $r25.<android.app.Notification: android.widget.RemoteViews bigContentView> = $r26;

        $r27 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r28 = $r27.<android.app.Notification: android.widget.RemoteViews bigContentView>;

        if $r28 == null goto label6;

        $r29 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r32 = $r29.<android.app.Notification: android.os.Bundle extras>;

        $r30 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r31 = $r30.<android.app.Notification: android.widget.RemoteViews bigContentView>;

        $i6 = virtualinvoke $r31.<android.widget.RemoteViews: int getSequenceNumber()>();

        virtualinvoke $r32.<android.os.Bundle: void putInt(java.lang.String,int)>("android.rebuild.bigViewActionCount", $i6);

     label6:
        $r73 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r74 = $r73.<android.app.Notification: android.widget.RemoteViews headsUpContentView>;

        if $r74 != null goto label7;

        $r17 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r18 = virtualinvoke r0.<android.app.Notification$Builder: android.widget.RemoteViews createHeadsUpContentView()>();

        $r17.<android.app.Notification: android.widget.RemoteViews headsUpContentView> = $r18;

        $r19 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r20 = $r19.<android.app.Notification: android.widget.RemoteViews headsUpContentView>;

        if $r20 == null goto label7;

        $r21 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r24 = $r21.<android.app.Notification: android.os.Bundle extras>;

        $r22 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r23 = $r22.<android.app.Notification: android.widget.RemoteViews headsUpContentView>;

        $i5 = virtualinvoke $r23.<android.widget.RemoteViews: int getSequenceNumber()>();

        virtualinvoke $r24.<android.os.Bundle: void putInt(java.lang.String,int)>("android.rebuild.hudViewActionCount", $i5);

     label7:
        $r75 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $i8 = $r75.<android.app.Notification: int defaults>;

        $i9 = $i8 & 4;

        if $i9 == 0 goto label8;

        r76 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $i3 = r76.<android.app.Notification: int flags>;

        $i4 = $i3 | 1;

        r76.<android.app.Notification: int flags> = $i4;

     label8:
        $r11 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r11.<android.app.Notification: android.util.ArraySet allPendingIntents> = null;

        $r12 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        return $r12;
    }

    public android.app.Notification buildInto(android.app.Notification)
    {
        android.app.Notification$Builder r0;
        android.app.Notification r1, $r2;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.app.Notification;

        $r2 = virtualinvoke r0.<android.app.Notification$Builder: android.app.Notification build()>();

        virtualinvoke $r2.<android.app.Notification: void cloneInto(android.app.Notification,boolean)>(r1, 1);

        return r1;
    }

    public android.app.Notification buildUnstyled()
    {
        android.app.Notification$Builder r0;
        java.util.ArrayList $r1, $r2, $r10, $r12, $r17;
        int $i0, $i1;
        boolean $z0;
        android.app.Notification $r3, $r5, $r7, $r9, $r13, $r15, $r19, $r21;
        android.widget.RemoteViews $r4, $r6, $r8;
        android.os.Bundle $r11, $r20;
        android.app.Notification$Action[] $r14, $r16;

        r0 := @this: android.app.Notification$Builder;

        $r1 = r0.<android.app.Notification$Builder: java.util.ArrayList mActions>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if $i0 <= 0 goto label1;

        $r13 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r12 = r0.<android.app.Notification$Builder: java.util.ArrayList mActions>;

        $i1 = virtualinvoke $r12.<java.util.ArrayList: int size()>();

        $r14 = newarray (android.app.Notification$Action)[$i1];

        $r13.<android.app.Notification: android.app.Notification$Action[] actions> = $r14;

        $r17 = r0.<android.app.Notification$Builder: java.util.ArrayList mActions>;

        $r15 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r16 = $r15.<android.app.Notification: android.app.Notification$Action[] actions>;

        virtualinvoke $r17.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r16);

     label1:
        $r2 = r0.<android.app.Notification$Builder: java.util.ArrayList mPersonList>;

        $z0 = virtualinvoke $r2.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        $r9 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r11 = $r9.<android.app.Notification: android.os.Bundle extras>;

        $r10 = r0.<android.app.Notification$Builder: java.util.ArrayList mPersonList>;

        virtualinvoke $r11.<android.os.Bundle: void putParcelableArrayList(java.lang.String,java.util.ArrayList)>("android.people.list", $r10);

     label2:
        $r3 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r4 = $r3.<android.app.Notification: android.widget.RemoteViews bigContentView>;

        if $r4 != null goto label3;

        $r5 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r6 = $r5.<android.app.Notification: android.widget.RemoteViews contentView>;

        if $r6 != null goto label3;

        $r7 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r8 = $r7.<android.app.Notification: android.widget.RemoteViews headsUpContentView>;

        if $r8 == null goto label4;

     label3:
        $r19 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r20 = $r19.<android.app.Notification: android.os.Bundle extras>;

        virtualinvoke $r20.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("android.contains.customView", 1);

     label4:
        $r21 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        return $r21;
    }

    public android.widget.RemoteViews createBigContentView()
    {
        android.app.Notification$Builder r0;
        android.app.Notification$Style r1;
        android.app.Notification $r2, $r5;
        android.widget.RemoteViews $r3, $r6, r7;
        java.util.ArrayList $r4;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: android.app.Notification$Builder;

        r7 = null;

        $r2 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r3 = $r2.<android.app.Notification: android.widget.RemoteViews bigContentView>;

        if $r3 == null goto label1;

        $z0 = specialinvoke r0.<android.app.Notification$Builder: boolean useExistingRemoteView()>();

        if $z0 == 0 goto label1;

        $r5 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r6 = $r5.<android.app.Notification: android.widget.RemoteViews bigContentView>;

        return $r6;

     label1:
        r1 = r0.<android.app.Notification$Builder: android.app.Notification$Style mStyle>;

        if r1 == null goto label2;

        r7 = virtualinvoke r1.<android.app.Notification$Style: android.widget.RemoteViews makeBigContentView()>();

        specialinvoke r0.<android.app.Notification$Builder: void hideLine1Text(android.widget.RemoteViews)>(r7);

        goto label3;

     label2:
        $r4 = r0.<android.app.Notification$Builder: java.util.ArrayList mActions>;

        $i0 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        if $i0 == 0 goto label3;

        $i1 = specialinvoke r0.<android.app.Notification$Builder: int getBigBaseLayoutResource()>();

        r7 = specialinvoke r0.<android.app.Notification$Builder: android.widget.RemoteViews applyStandardTemplateWithActions(int,android.app.Notification$TemplateBindResult)>($i1, null);

     label3:
        staticinvoke <android.app.Notification$Builder: void makeHeaderExpanded(android.widget.RemoteViews)>(r7);

        return r7;
    }

    public android.widget.RemoteViews createContentView()
    {
        android.app.Notification$Builder r0;
        android.widget.RemoteViews $r1;

        r0 := @this: android.app.Notification$Builder;

        $r1 = virtualinvoke r0.<android.app.Notification$Builder: android.widget.RemoteViews createContentView(boolean)>(0);

        return $r1;
    }

    public android.widget.RemoteViews createContentView(boolean)
    {
        android.app.Notification$Builder r0;
        boolean z0, $z1;
        android.app.Notification $r1, $r4;
        android.widget.RemoteViews $r2, $r3, $r5, r7;
        int $i0;
        android.app.Notification$Style r6;

        r0 := @this: android.app.Notification$Builder;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r2 = $r1.<android.app.Notification: android.widget.RemoteViews contentView>;

        if $r2 == null goto label1;

        $z1 = specialinvoke r0.<android.app.Notification$Builder: boolean useExistingRemoteView()>();

        if $z1 == 0 goto label1;

        $r4 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r5 = $r4.<android.app.Notification: android.widget.RemoteViews contentView>;

        return $r5;

     label1:
        r6 = r0.<android.app.Notification$Builder: android.app.Notification$Style mStyle>;

        if r6 == null goto label2;

        r7 = virtualinvoke r6.<android.app.Notification$Style: android.widget.RemoteViews makeContentView(boolean)>(z0);

        if r7 == null goto label2;

        return r7;

     label2:
        $i0 = specialinvoke r0.<android.app.Notification$Builder: int getBaseLayoutResource()>();

        $r3 = specialinvoke r0.<android.app.Notification$Builder: android.widget.RemoteViews applyStandardTemplate(int,android.app.Notification$TemplateBindResult)>($i0, null);

        return $r3;
    }

    public android.widget.RemoteViews createHeadsUpContentView()
    {
        android.app.Notification$Builder r0;
        android.widget.RemoteViews $r1;

        r0 := @this: android.app.Notification$Builder;

        $r1 = virtualinvoke r0.<android.app.Notification$Builder: android.widget.RemoteViews createHeadsUpContentView(boolean)>(0);

        return $r1;
    }

    public android.widget.RemoteViews createHeadsUpContentView(boolean)
    {
        android.app.Notification$Builder r0;
        boolean z0, $z1;
        android.app.Notification $r1, $r8;
        android.widget.RemoteViews $r2, $r7, $r9, r11;
        java.util.ArrayList $r3;
        int $i0, $i1;
        android.app.Notification$StandardTemplateParams $r4, $r5, $r6, r12;
        android.app.Notification$Style r10;

        r0 := @this: android.app.Notification$Builder;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r2 = $r1.<android.app.Notification: android.widget.RemoteViews headsUpContentView>;

        if $r2 == null goto label1;

        $z1 = specialinvoke r0.<android.app.Notification$Builder: boolean useExistingRemoteView()>();

        if $z1 == 0 goto label1;

        $r8 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r9 = $r8.<android.app.Notification: android.widget.RemoteViews headsUpContentView>;

        return $r9;

     label1:
        r10 = r0.<android.app.Notification$Builder: android.app.Notification$Style mStyle>;

        if r10 == null goto label3;

        r11 = virtualinvoke r10.<android.app.Notification$Style: android.widget.RemoteViews makeHeadsUpContentView(boolean)>(z0);

        if r11 == null goto label2;

        return r11;

     label2:
        goto label4;

     label3:
        $r3 = r0.<android.app.Notification$Builder: java.util.ArrayList mActions>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if $i0 != 0 goto label4;

        return null;

     label4:
        $r4 = r0.<android.app.Notification$Builder: android.app.Notification$StandardTemplateParams mParams>;

        $r5 = virtualinvoke $r4.<android.app.Notification$StandardTemplateParams: android.app.Notification$StandardTemplateParams reset()>();

        $r6 = virtualinvoke $r5.<android.app.Notification$StandardTemplateParams: android.app.Notification$StandardTemplateParams fillTextsFrom(android.app.Notification$Builder)>(r0);

        r12 = virtualinvoke $r6.<android.app.Notification$StandardTemplateParams: android.app.Notification$StandardTemplateParams setMaxRemoteInputHistory(int)>(1);

        $i1 = specialinvoke r0.<android.app.Notification$Builder: int getBigBaseLayoutResource()>();

        $r7 = specialinvoke r0.<android.app.Notification$Builder: android.widget.RemoteViews applyStandardTemplateWithActions(int,android.app.Notification$StandardTemplateParams,android.app.Notification$TemplateBindResult)>($i1, r12, null);

        return $r7;
    }

    public android.app.Notification$Builder extend(android.app.Notification$Extender)
    {
        android.app.Notification$Builder r0;
        android.app.Notification$Extender r1;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.app.Notification$Extender;

        interfaceinvoke r1.<android.app.Notification$Extender: android.app.Notification$Builder extend(android.app.Notification$Builder)>(r0);

        return r0;
    }

    public android.os.Bundle getExtras()
    {
        android.app.Notification$Builder r0;
        android.os.Bundle $r1;

        r0 := @this: android.app.Notification$Builder;

        $r1 = r0.<android.app.Notification$Builder: android.os.Bundle mUserExtras>;

        return $r1;
    }

    public java.lang.CharSequence getHeadsUpStatusBarText(boolean)
    {
        android.app.Notification$Builder r0;
        boolean z0, $z1;
        android.app.Notification$Style r1;
        java.lang.CharSequence r2;
        java.lang.String $r3;

        r0 := @this: android.app.Notification$Builder;

        z0 := @parameter0: boolean;

        r1 = r0.<android.app.Notification$Builder: android.app.Notification$Style mStyle>;

        if r1 == null goto label1;

        if z0 != 0 goto label1;

        r2 = virtualinvoke r1.<android.app.Notification$Style: java.lang.CharSequence getHeadsUpStatusBarText()>();

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z1 != 0 goto label1;

        return r2;

     label1:
        $r3 = virtualinvoke r0.<android.app.Notification$Builder: java.lang.String loadHeaderAppName()>();

        return $r3;
    }

    public android.app.Notification getNotification()
    {
        android.app.Notification$Builder r0;
        android.app.Notification $r1;

        r0 := @this: android.app.Notification$Builder;

        $r1 = virtualinvoke r0.<android.app.Notification$Builder: android.app.Notification build()>();

        return $r1;
    }

    public int getPrimaryTextColor()
    {
        android.app.Notification$Builder r0;
        android.app.Notification$StandardTemplateParams $r1;
        int $i0;

        r0 := @this: android.app.Notification$Builder;

        $r1 = r0.<android.app.Notification$Builder: android.app.Notification$StandardTemplateParams mParams>;

        $i0 = virtualinvoke r0.<android.app.Notification$Builder: int getPrimaryTextColor(android.app.Notification$StandardTemplateParams)>($r1);

        return $i0;
    }

    public int getPrimaryTextColor(android.app.Notification$StandardTemplateParams)
    {
        android.app.Notification$Builder r0;
        android.app.Notification$StandardTemplateParams r1;
        int $i0;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.app.Notification$StandardTemplateParams;

        specialinvoke r0.<android.app.Notification$Builder: void ensureColors(android.app.Notification$StandardTemplateParams)>(r1);

        $i0 = r0.<android.app.Notification$Builder: int mPrimaryTextColor>;

        return $i0;
    }

    public int getSecondaryTextColor()
    {
        android.app.Notification$Builder r0;
        android.app.Notification$StandardTemplateParams $r1;
        int $i0;

        r0 := @this: android.app.Notification$Builder;

        $r1 = r0.<android.app.Notification$Builder: android.app.Notification$StandardTemplateParams mParams>;

        $i0 = virtualinvoke r0.<android.app.Notification$Builder: int getSecondaryTextColor(android.app.Notification$StandardTemplateParams)>($r1);

        return $i0;
    }

    public int getSecondaryTextColor(android.app.Notification$StandardTemplateParams)
    {
        android.app.Notification$Builder r0;
        android.app.Notification$StandardTemplateParams r1;
        int $i0;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.app.Notification$StandardTemplateParams;

        specialinvoke r0.<android.app.Notification$Builder: void ensureColors(android.app.Notification$StandardTemplateParams)>(r1);

        $i0 = r0.<android.app.Notification$Builder: int mSecondaryTextColor>;

        return $i0;
    }

    public android.app.Notification$Style getStyle()
    {
        android.app.Notification$Builder r0;
        android.app.Notification$Style $r1;

        r0 := @this: android.app.Notification$Builder;

        $r1 = r0.<android.app.Notification$Builder: android.app.Notification$Style mStyle>;

        return $r1;
    }

    public java.lang.String loadHeaderAppName()
    {
        android.app.Notification$Builder r0;
        android.content.pm.PackageManager r1;
        java.lang.String r2, $r7, $r14, r15;
        android.content.Context $r4, $r8, $r10;
        android.app.Notification $r5, $r11;
        android.os.Bundle $r6, $r12;
        boolean $z0, $z1, $z2;
        android.content.pm.ApplicationInfo $r9;
        int $i0;
        java.lang.Object r16;
        java.lang.StringBuilder r17;
        java.lang.CharSequence r18;

        r0 := @this: android.app.Notification$Builder;

        $r4 = r0.<android.app.Notification$Builder: android.content.Context mContext>;

        r1 = virtualinvoke $r4.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r15 = null;

        $r5 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r6 = $r5.<android.app.Notification: android.os.Bundle extras>;

        $z0 = virtualinvoke $r6.<android.os.Bundle: boolean containsKey(java.lang.String)>("android.substName");

        if $z0 == 0 goto label2;

        $r10 = r0.<android.app.Notification$Builder: android.content.Context mContext>;

        r2 = virtualinvoke $r10.<android.content.Context: java.lang.String getPackageName()>();

        $r11 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r12 = $r11.<android.app.Notification: android.os.Bundle extras>;

        r15 = virtualinvoke $r12.<android.os.Bundle: java.lang.String getString(java.lang.String)>("android.substName");

        $i0 = virtualinvoke r1.<android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>("android.permission.SUBSTITUTE_NOTIFICATION_APP_NAME", r2);

        if $i0 != 0 goto label1;

        goto label2;

     label1:
        r17 = new java.lang.StringBuilder;

        specialinvoke r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("warning: pkg ");

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" attempting to substitute app name \'");

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' without holding perm ");

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.SUBSTITUTE_NOTIFICATION_APP_NAME");

        $r14 = virtualinvoke r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Notification", $r14);

        r15 = null;

     label2:
        r16 = r15;

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r15);

        if $z2 == 0 goto label3;

        $r8 = r0.<android.app.Notification$Builder: android.content.Context mContext>;

        $r9 = virtualinvoke $r8.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        r16 = virtualinvoke r1.<android.content.pm.PackageManager: java.lang.CharSequence getApplicationLabel(android.content.pm.ApplicationInfo)>($r9);

     label3:
        r18 = (java.lang.CharSequence) r16;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r18);

        if $z1 == 0 goto label4;

        return null;

     label4:
        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r16);

        return $r7;
    }

    public android.widget.RemoteViews makeAmbientNotification()
    {
        android.app.Notification$Builder r0;
        android.widget.RemoteViews r1, $r2;

        r0 := @this: android.app.Notification$Builder;

        r1 = virtualinvoke r0.<android.app.Notification$Builder: android.widget.RemoteViews createHeadsUpContentView(boolean)>(0);

        if r1 == null goto label1;

        return r1;

     label1:
        $r2 = virtualinvoke r0.<android.app.Notification$Builder: android.widget.RemoteViews createContentView()>();

        return $r2;
    }

    public android.widget.RemoteViews makeLowPriorityContentView(boolean)
    {
        android.app.Notification$Builder r0;
        boolean z0, $z1;
        android.app.Notification$StandardTemplateParams $r1, $r2, $r3, $r6, r8;
        java.lang.CharSequence $r4, $r7;
        android.widget.RemoteViews r9;

        r0 := @this: android.app.Notification$Builder;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.app.Notification$Builder: android.app.Notification$StandardTemplateParams mParams>;

        $r2 = virtualinvoke $r1.<android.app.Notification$StandardTemplateParams: android.app.Notification$StandardTemplateParams reset()>();

        $r3 = virtualinvoke $r2.<android.app.Notification$StandardTemplateParams: android.app.Notification$StandardTemplateParams forceDefaultColor()>();

        r8 = virtualinvoke $r3.<android.app.Notification$StandardTemplateParams: android.app.Notification$StandardTemplateParams fillTextsFrom(android.app.Notification$Builder)>(r0);

        if z0 == 0 goto label1;

        $r6 = r0.<android.app.Notification$Builder: android.app.Notification$StandardTemplateParams mParams>;

        $r7 = $r6.<android.app.Notification$StandardTemplateParams: java.lang.CharSequence summaryText>;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r7);

        if $z1 == 0 goto label2;

     label1:
        $r4 = specialinvoke r0.<android.app.Notification$Builder: java.lang.CharSequence createSummaryText()>();

        virtualinvoke r8.<android.app.Notification$StandardTemplateParams: android.app.Notification$StandardTemplateParams summaryText(java.lang.CharSequence)>($r4);

     label2:
        r9 = specialinvoke r0.<android.app.Notification$Builder: android.widget.RemoteViews makeNotificationHeader(android.app.Notification$StandardTemplateParams)>(r8);

        virtualinvoke r9.<android.widget.RemoteViews: void setBoolean(int,java.lang.String,boolean)>(16909224, "setAcceptAllTouches", 1);

        return r9;
    }

    public android.widget.RemoteViews makeNotificationHeader()
    {
        android.app.Notification$Builder r0;
        android.app.Notification$StandardTemplateParams $r1, $r2, $r3;
        android.widget.RemoteViews $r4;

        r0 := @this: android.app.Notification$Builder;

        $r1 = r0.<android.app.Notification$Builder: android.app.Notification$StandardTemplateParams mParams>;

        $r2 = virtualinvoke $r1.<android.app.Notification$StandardTemplateParams: android.app.Notification$StandardTemplateParams reset()>();

        $r3 = virtualinvoke $r2.<android.app.Notification$StandardTemplateParams: android.app.Notification$StandardTemplateParams fillTextsFrom(android.app.Notification$Builder)>(r0);

        $r4 = specialinvoke r0.<android.app.Notification$Builder: android.widget.RemoteViews makeNotificationHeader(android.app.Notification$StandardTemplateParams)>($r3);

        return $r4;
    }

    public android.widget.RemoteViews makePublicContentView(boolean)
    {
        android.app.Notification$Builder r0, $r28;
        boolean z0, $z1, $z2, $z3;
        android.os.Bundle r1, $r16;
        android.app.Notification$Style r2;
        android.graphics.drawable.Icon r3;
        android.graphics.Bitmap r4;
        java.util.ArrayList r5, $r15;
        java.lang.String r6;
        android.app.Notification $r7, $r8, $r9, $r10, $r11, $r13, $r14, $r17, $r20, $r21, $r23, $r25, $r26;
        android.app.Notification$StandardTemplateParams $r18, $r19, r31;
        android.content.Context $r27;
        android.widget.RemoteViews $r29, r32;

        r0 := @this: android.app.Notification$Builder;

        z0 := @parameter0: boolean;

        $r7 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r8 = $r7.<android.app.Notification: android.app.Notification publicVersion>;

        if $r8 == null goto label1;

        $r27 = r0.<android.app.Notification$Builder: android.content.Context mContext>;

        $r25 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r26 = $r25.<android.app.Notification: android.app.Notification publicVersion>;

        $r28 = staticinvoke <android.app.Notification$Builder: android.app.Notification$Builder recoverBuilder(android.content.Context,android.app.Notification)>($r27, $r26);

        $r29 = virtualinvoke $r28.<android.app.Notification$Builder: android.widget.RemoteViews createContentView()>();

        return $r29;

     label1:
        $r9 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        r1 = $r9.<android.app.Notification: android.os.Bundle extras>;

        r2 = r0.<android.app.Notification$Builder: android.app.Notification$Style mStyle>;

        r0.<android.app.Notification$Builder: android.app.Notification$Style mStyle> = null;

        $r10 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        r3 = staticinvoke <android.app.Notification: android.graphics.drawable.Icon access$1400(android.app.Notification)>($r10);

        $r11 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        staticinvoke <android.app.Notification: android.graphics.drawable.Icon access$1402(android.app.Notification,android.graphics.drawable.Icon)>($r11, null);

        $r13 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        r4 = $r13.<android.app.Notification: android.graphics.Bitmap largeIcon>;

        $r14 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r14.<android.app.Notification: android.graphics.Bitmap largeIcon> = null;

        r5 = r0.<android.app.Notification$Builder: java.util.ArrayList mActions>;

        $r15 = new java.util.ArrayList;

        specialinvoke $r15.<java.util.ArrayList: void <init>()>();

        r0.<android.app.Notification$Builder: java.util.ArrayList mActions> = $r15;

        $r16 = new android.os.Bundle;

        specialinvoke $r16.<android.os.Bundle: void <init>()>();

        $z1 = virtualinvoke r1.<android.os.Bundle: boolean getBoolean(java.lang.String)>("android.showWhen");

        virtualinvoke $r16.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("android.showWhen", $z1);

        $z2 = virtualinvoke r1.<android.os.Bundle: boolean getBoolean(java.lang.String)>("android.showChronometer");

        virtualinvoke $r16.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("android.showChronometer", $z2);

        $z3 = virtualinvoke r1.<android.os.Bundle: boolean getBoolean(java.lang.String)>("android.chronometerCountDown");

        virtualinvoke $r16.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("android.chronometerCountDown", $z3);

        r6 = virtualinvoke r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("android.substName");

        if r6 == null goto label2;

        virtualinvoke $r16.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("android.substName", r6);

     label2:
        $r17 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r17.<android.app.Notification: android.os.Bundle extras> = $r16;

        $r18 = r0.<android.app.Notification$Builder: android.app.Notification$StandardTemplateParams mParams>;

        $r19 = virtualinvoke $r18.<android.app.Notification$StandardTemplateParams: android.app.Notification$StandardTemplateParams reset()>();

        r31 = virtualinvoke $r19.<android.app.Notification$StandardTemplateParams: android.app.Notification$StandardTemplateParams fillTextsFrom(android.app.Notification$Builder)>(r0);

        if z0 == 0 goto label3;

        virtualinvoke r31.<android.app.Notification$StandardTemplateParams: android.app.Notification$StandardTemplateParams forceDefaultColor()>();

     label3:
        r32 = specialinvoke r0.<android.app.Notification$Builder: android.widget.RemoteViews makeNotificationHeader(android.app.Notification$StandardTemplateParams)>(r31);

        virtualinvoke r32.<android.widget.RemoteViews: void setBoolean(int,java.lang.String,boolean)>(16909224, "setExpandOnlyOnButton", 1);

        $r20 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r20.<android.app.Notification: android.os.Bundle extras> = r1;

        $r21 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        staticinvoke <android.app.Notification: android.graphics.drawable.Icon access$1402(android.app.Notification,android.graphics.drawable.Icon)>($r21, r3);

        $r23 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r23.<android.app.Notification: android.graphics.Bitmap largeIcon> = r4;

        r0.<android.app.Notification$Builder: java.util.ArrayList mActions> = r5;

        r0.<android.app.Notification$Builder: android.app.Notification$Style mStyle> = r2;

        return r32;
    }

    int resolveContrastColor(android.app.Notification$StandardTemplateParams)
    {
        android.app.Notification$Builder r0;
        android.app.Notification$StandardTemplateParams r1;
        int i0, i1, $i2, $i3, i4, i5, i6;
        android.content.Context $r2, $r3, $r4;
        boolean $z0, $z1;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.app.Notification$StandardTemplateParams;

        i0 = specialinvoke r0.<android.app.Notification$Builder: int getRawColor(android.app.Notification$StandardTemplateParams)>(r1);

        $i2 = r0.<android.app.Notification$Builder: int mCachedContrastColorIsFor>;

        if $i2 != i0 goto label1;

        i4 = r0.<android.app.Notification$Builder: int mCachedContrastColor>;

        if i4 == 1 goto label1;

        return i4;

     label1:
        $r2 = r0.<android.app.Notification$Builder: android.content.Context mContext>;

        i1 = virtualinvoke $r2.<android.content.Context: int getColor(int)>(17170888);

        if i0 != 0 goto label2;

        specialinvoke r0.<android.app.Notification$Builder: void ensureColors(android.app.Notification$StandardTemplateParams)>(r1);

        $r4 = r0.<android.app.Notification$Builder: android.content.Context mContext>;

        $z1 = r0.<android.app.Notification$Builder: boolean mInNightMode>;

        i5 = staticinvoke <com.android.internal.util.ContrastColorUtil: int resolveDefaultColor(android.content.Context,int,boolean)>($r4, i1, $z1);

        goto label3;

     label2:
        $r3 = r0.<android.app.Notification$Builder: android.content.Context mContext>;

        $z0 = r0.<android.app.Notification$Builder: boolean mInNightMode>;

        i5 = staticinvoke <com.android.internal.util.ContrastColorUtil: int resolveContrastColor(android.content.Context,int,int,boolean)>($r3, i0, i1, $z0);

     label3:
        i6 = i5;

        $i3 = staticinvoke <android.graphics.Color: int alpha(int)>(i5);

        if $i3 >= 255 goto label4;

        i6 = staticinvoke <com.android.internal.util.ContrastColorUtil: int compositeColors(int,int)>(i5, i1);

     label4:
        r0.<android.app.Notification$Builder: int mCachedContrastColorIsFor> = i0;

        r0.<android.app.Notification$Builder: int mCachedContrastColor> = i6;

        return i6;
    }

    int resolveNeutralColor()
    {
        android.app.Notification$Builder r0;
        int i0, $i1, $i2, $i3, $i4, i5, i6;
        android.content.Context $r1, $r2;
        boolean $z0;

        r0 := @this: android.app.Notification$Builder;

        i5 = r0.<android.app.Notification$Builder: int mNeutralColor>;

        if i5 == 1 goto label1;

        return i5;

     label1:
        $r1 = r0.<android.app.Notification$Builder: android.content.Context mContext>;

        i6 = virtualinvoke $r1.<android.content.Context: int getColor(int)>(17170888);

        $r2 = r0.<android.app.Notification$Builder: android.content.Context mContext>;

        $z0 = r0.<android.app.Notification$Builder: boolean mInNightMode>;

        i0 = staticinvoke <com.android.internal.util.ContrastColorUtil: int resolveDefaultColor(android.content.Context,int,boolean)>($r2, i6, $z0);

        r0.<android.app.Notification$Builder: int mNeutralColor> = i0;

        $i1 = staticinvoke <android.graphics.Color: int alpha(int)>(i0);

        if $i1 >= 255 goto label2;

        $i3 = r0.<android.app.Notification$Builder: int mNeutralColor>;

        $i4 = staticinvoke <com.android.internal.util.ContrastColorUtil: int compositeColors(int,int)>($i3, i6);

        r0.<android.app.Notification$Builder: int mNeutralColor> = $i4;

     label2:
        $i2 = r0.<android.app.Notification$Builder: int mNeutralColor>;

        return $i2;
    }

    public transient android.app.Notification$Builder setActions(android.app.Notification$Action[])
    {
        android.app.Notification$Builder r0;
        android.app.Notification$Action[] r1;
        java.util.ArrayList $r2, $r5;
        int $i0, i1;
        android.app.Notification$Action $r3, $r4;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.app.Notification$Action[];

        $r2 = r0.<android.app.Notification$Builder: java.util.ArrayList mActions>;

        virtualinvoke $r2.<java.util.ArrayList: void clear()>();

        i1 = 0;

     label1:
        $i0 = lengthof r1;

        if i1 >= $i0 goto label3;

        $r3 = r1[i1];

        if $r3 == null goto label2;

        $r5 = r0.<android.app.Notification$Builder: java.util.ArrayList mActions>;

        $r4 = r1[i1];

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return r0;
    }

    public android.app.Notification$Builder setAllowSystemGeneratedContextualActions(boolean)
    {
        android.app.Notification$Builder r0;
        boolean z0;
        android.app.Notification $r1;

        r0 := @this: android.app.Notification$Builder;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        staticinvoke <android.app.Notification: boolean access$2302(android.app.Notification,boolean)>($r1, z0);

        return r0;
    }

    public android.app.Notification$Builder setAutoCancel(boolean)
    {
        android.app.Notification$Builder r0;
        boolean z0;

        r0 := @this: android.app.Notification$Builder;

        z0 := @parameter0: boolean;

        virtualinvoke r0.<android.app.Notification$Builder: android.app.Notification$Builder setFlag(int,boolean)>(16, z0);

        return r0;
    }

    public android.app.Notification$Builder setBadgeIconType(int)
    {
        android.app.Notification$Builder r0;
        int i0;
        android.app.Notification $r1;

        r0 := @this: android.app.Notification$Builder;

        i0 := @parameter0: int;

        $r1 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        staticinvoke <android.app.Notification: int access$902(android.app.Notification,int)>($r1, i0);

        return r0;
    }

    public android.app.Notification$Builder setBubbleMetadata(android.app.Notification$BubbleMetadata)
    {
        android.app.Notification$Builder r0;
        android.app.Notification$BubbleMetadata r1;
        android.app.Notification $r2;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.app.Notification$BubbleMetadata;

        $r2 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        staticinvoke <android.app.Notification: android.app.Notification$BubbleMetadata access$1102(android.app.Notification,android.app.Notification$BubbleMetadata)>($r2, r1);

        return r0;
    }

    public android.app.Notification$Builder setCategory(java.lang.String)
    {
        android.app.Notification$Builder r0;
        java.lang.String r1;
        android.app.Notification $r2;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r2.<android.app.Notification: java.lang.String category> = r1;

        return r0;
    }

    public android.app.Notification$Builder setChannel(java.lang.String)
    {
        android.app.Notification$Builder r0;
        java.lang.String r1;
        android.app.Notification $r2;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        staticinvoke <android.app.Notification: java.lang.String access$602(android.app.Notification,java.lang.String)>($r2, r1);

        return r0;
    }

    public android.app.Notification$Builder setChannelId(java.lang.String)
    {
        android.app.Notification$Builder r0;
        java.lang.String r1;
        android.app.Notification $r2;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        staticinvoke <android.app.Notification: java.lang.String access$602(android.app.Notification,java.lang.String)>($r2, r1);

        return r0;
    }

    public android.app.Notification$Builder setChronometerCountDown(boolean)
    {
        android.app.Notification$Builder r0;
        boolean z0;
        android.app.Notification $r1;
        android.os.Bundle $r2;

        r0 := @this: android.app.Notification$Builder;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r2 = $r1.<android.app.Notification: android.os.Bundle extras>;

        virtualinvoke $r2.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("android.chronometerCountDown", z0);

        return r0;
    }

    public android.app.Notification$Builder setColor(int)
    {
        android.app.Notification$Builder r0;
        int i0;
        android.app.Notification $r1;

        r0 := @this: android.app.Notification$Builder;

        i0 := @parameter0: int;

        $r1 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r1.<android.app.Notification: int color> = i0;

        specialinvoke r0.<android.app.Notification$Builder: void sanitizeColor()>();

        return r0;
    }

    public void setColorPalette(int, int)
    {
        android.app.Notification$Builder r0;
        int i0, i1;
        android.app.Notification$StandardTemplateParams $r1, $r2, $r3;

        r0 := @this: android.app.Notification$Builder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0.<android.app.Notification$Builder: int mBackgroundColor> = i0;

        r0.<android.app.Notification$Builder: int mForegroundColor> = i1;

        r0.<android.app.Notification$Builder: int mTextColorsAreForBackground> = 1;

        $r1 = r0.<android.app.Notification$Builder: android.app.Notification$StandardTemplateParams mParams>;

        $r2 = virtualinvoke $r1.<android.app.Notification$StandardTemplateParams: android.app.Notification$StandardTemplateParams reset()>();

        $r3 = virtualinvoke $r2.<android.app.Notification$StandardTemplateParams: android.app.Notification$StandardTemplateParams fillTextsFrom(android.app.Notification$Builder)>(r0);

        specialinvoke r0.<android.app.Notification$Builder: void ensureColors(android.app.Notification$StandardTemplateParams)>($r3);

        return;
    }

    public android.app.Notification$Builder setColorized(boolean)
    {
        android.app.Notification$Builder r0;
        boolean z0;
        android.app.Notification $r1;
        android.os.Bundle $r2;

        r0 := @this: android.app.Notification$Builder;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r2 = $r1.<android.app.Notification: android.os.Bundle extras>;

        virtualinvoke $r2.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("android.colorized", z0);

        return r0;
    }

    public android.app.Notification$Builder setContent(android.widget.RemoteViews)
    {
        android.app.Notification$Builder r0, $r2;
        android.widget.RemoteViews r1;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.widget.RemoteViews;

        $r2 = virtualinvoke r0.<android.app.Notification$Builder: android.app.Notification$Builder setCustomContentView(android.widget.RemoteViews)>(r1);

        return $r2;
    }

    public android.app.Notification$Builder setContentInfo(java.lang.CharSequence)
    {
        android.app.Notification$Builder r0;
        java.lang.CharSequence r1, $r4;
        android.app.Notification $r2;
        android.os.Bundle $r3;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: java.lang.CharSequence;

        $r2 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r3 = $r2.<android.app.Notification: android.os.Bundle extras>;

        $r4 = staticinvoke <android.app.Notification: java.lang.CharSequence safeCharSequence(java.lang.CharSequence)>(r1);

        virtualinvoke $r3.<android.os.Bundle: void putCharSequence(java.lang.String,java.lang.CharSequence)>("android.infoText", $r4);

        return r0;
    }

    public android.app.Notification$Builder setContentIntent(android.app.PendingIntent)
    {
        android.app.Notification$Builder r0;
        android.app.PendingIntent r1;
        android.app.Notification $r2;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.app.PendingIntent;

        $r2 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r2.<android.app.Notification: android.app.PendingIntent contentIntent> = r1;

        return r0;
    }

    void setContentMinHeight(android.widget.RemoteViews, boolean)
    {
        android.app.Notification$Builder r0;
        android.widget.RemoteViews r1;
        boolean z0;
        android.content.Context $r2;
        android.content.res.Resources $r3;
        int i0;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.widget.RemoteViews;

        z0 := @parameter1: boolean;

        i0 = 0;

        if z0 == 0 goto label1;

        $r2 = r0.<android.app.Notification$Builder: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.res.Resources getResources()>();

        i0 = virtualinvoke $r3.<android.content.res.Resources: int getDimensionPixelSize(int)>(17105374);

     label1:
        virtualinvoke r1.<android.widget.RemoteViews: void setInt(int,java.lang.String,int)>(16909225, "setMinimumHeight", i0);

        return;
    }

    public android.app.Notification$Builder setContentText(java.lang.CharSequence)
    {
        android.app.Notification$Builder r0;
        java.lang.CharSequence r1, $r4;
        android.app.Notification $r2;
        android.os.Bundle $r3;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: java.lang.CharSequence;

        $r2 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r3 = $r2.<android.app.Notification: android.os.Bundle extras>;

        $r4 = staticinvoke <android.app.Notification: java.lang.CharSequence safeCharSequence(java.lang.CharSequence)>(r1);

        virtualinvoke $r3.<android.os.Bundle: void putCharSequence(java.lang.String,java.lang.CharSequence)>("android.text", $r4);

        return r0;
    }

    public android.app.Notification$Builder setContentTitle(java.lang.CharSequence)
    {
        android.app.Notification$Builder r0;
        java.lang.CharSequence r1, $r4;
        android.app.Notification $r2;
        android.os.Bundle $r3;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: java.lang.CharSequence;

        $r2 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r3 = $r2.<android.app.Notification: android.os.Bundle extras>;

        $r4 = staticinvoke <android.app.Notification: java.lang.CharSequence safeCharSequence(java.lang.CharSequence)>(r1);

        virtualinvoke $r3.<android.os.Bundle: void putCharSequence(java.lang.String,java.lang.CharSequence)>("android.title", $r4);

        return r0;
    }

    public android.app.Notification$Builder setCustomBigContentView(android.widget.RemoteViews)
    {
        android.app.Notification$Builder r0;
        android.widget.RemoteViews r1;
        android.app.Notification $r2;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.widget.RemoteViews;

        $r2 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r2.<android.app.Notification: android.widget.RemoteViews bigContentView> = r1;

        return r0;
    }

    public android.app.Notification$Builder setCustomContentView(android.widget.RemoteViews)
    {
        android.app.Notification$Builder r0;
        android.widget.RemoteViews r1;
        android.app.Notification $r2;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.widget.RemoteViews;

        $r2 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r2.<android.app.Notification: android.widget.RemoteViews contentView> = r1;

        return r0;
    }

    public android.app.Notification$Builder setCustomHeadsUpContentView(android.widget.RemoteViews)
    {
        android.app.Notification$Builder r0;
        android.widget.RemoteViews r1;
        android.app.Notification $r2;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.widget.RemoteViews;

        $r2 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r2.<android.app.Notification: android.widget.RemoteViews headsUpContentView> = r1;

        return r0;
    }

    public android.app.Notification$Builder setDefaults(int)
    {
        android.app.Notification$Builder r0;
        int i0;
        android.app.Notification $r1;

        r0 := @this: android.app.Notification$Builder;

        i0 := @parameter0: int;

        $r1 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r1.<android.app.Notification: int defaults> = i0;

        return r0;
    }

    public android.app.Notification$Builder setDeleteIntent(android.app.PendingIntent)
    {
        android.app.Notification$Builder r0;
        android.app.PendingIntent r1;
        android.app.Notification $r2;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.app.PendingIntent;

        $r2 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r2.<android.app.Notification: android.app.PendingIntent deleteIntent> = r1;

        return r0;
    }

    public android.app.Notification$Builder setExtras(android.os.Bundle)
    {
        android.app.Notification$Builder r0;
        android.os.Bundle r1;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.os.Bundle;

        if r1 == null goto label1;

        r0.<android.app.Notification$Builder: android.os.Bundle mUserExtras> = r1;

     label1:
        return r0;
    }

    public android.app.Notification$Builder setFlag(int, boolean)
    {
        android.app.Notification$Builder r0;
        int i0, $i1, $i2, $i3, $i4;
        boolean z0;
        android.app.Notification r1, r2;

        r0 := @this: android.app.Notification$Builder;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        r1 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $i3 = r1.<android.app.Notification: int flags>;

        $i4 = $i3 | i0;

        r1.<android.app.Notification: int flags> = $i4;

        goto label2;

     label1:
        r2 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $i1 = r2.<android.app.Notification: int flags>;

        $i2 = $i1 & i0;

        r2.<android.app.Notification: int flags> = $i2;

     label2:
        return r0;
    }

    public android.app.Notification$Builder setFullScreenIntent(android.app.PendingIntent, boolean)
    {
        android.app.Notification$Builder r0;
        android.app.PendingIntent r1;
        boolean z0;
        android.app.Notification $r2;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.app.PendingIntent;

        z0 := @parameter1: boolean;

        $r2 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r2.<android.app.Notification: android.app.PendingIntent fullScreenIntent> = r1;

        virtualinvoke r0.<android.app.Notification$Builder: android.app.Notification$Builder setFlag(int,boolean)>(128, z0);

        return r0;
    }

    public android.app.Notification$Builder setGroup(java.lang.String)
    {
        android.app.Notification$Builder r0;
        java.lang.String r1;
        android.app.Notification $r2;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        staticinvoke <android.app.Notification: java.lang.String access$1502(android.app.Notification,java.lang.String)>($r2, r1);

        return r0;
    }

    public android.app.Notification$Builder setGroupAlertBehavior(int)
    {
        android.app.Notification$Builder r0;
        int i0;
        android.app.Notification $r1;

        r0 := @this: android.app.Notification$Builder;

        i0 := @parameter0: int;

        $r1 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        staticinvoke <android.app.Notification: int access$1002(android.app.Notification,int)>($r1, i0);

        return r0;
    }

    public android.app.Notification$Builder setGroupSummary(boolean)
    {
        android.app.Notification$Builder r0;
        boolean z0;

        r0 := @this: android.app.Notification$Builder;

        z0 := @parameter0: boolean;

        virtualinvoke r0.<android.app.Notification$Builder: android.app.Notification$Builder setFlag(int,boolean)>(512, z0);

        return r0;
    }

    public android.app.Notification$Builder setHideSmartReplies(boolean)
    {
        android.app.Notification$Builder r0;
        boolean z0;
        android.app.Notification $r1;
        android.os.Bundle $r2;

        r0 := @this: android.app.Notification$Builder;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r2 = $r1.<android.app.Notification: android.os.Bundle extras>;

        virtualinvoke $r2.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("android.hideSmartReplies", z0);

        return r0;
    }

    public android.app.Notification$Builder setLargeIcon(android.graphics.Bitmap)
    {
        android.app.Notification$Builder r0, $r1;
        android.graphics.Bitmap r2;
        android.graphics.drawable.Icon r3;

        r0 := @this: android.app.Notification$Builder;

        r2 := @parameter0: android.graphics.Bitmap;

        if r2 == null goto label1;

        r3 = staticinvoke <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithBitmap(android.graphics.Bitmap)>(r2);

        goto label2;

     label1:
        r3 = null;

     label2:
        $r1 = virtualinvoke r0.<android.app.Notification$Builder: android.app.Notification$Builder setLargeIcon(android.graphics.drawable.Icon)>(r3);

        return $r1;
    }

    public android.app.Notification$Builder setLargeIcon(android.graphics.drawable.Icon)
    {
        android.app.Notification$Builder r0;
        android.graphics.drawable.Icon r1;
        android.app.Notification $r2, $r4;
        android.os.Bundle $r5;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.graphics.drawable.Icon;

        $r2 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        staticinvoke <android.app.Notification: android.graphics.drawable.Icon access$1402(android.app.Notification,android.graphics.drawable.Icon)>($r2, r1);

        $r4 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r5 = $r4.<android.app.Notification: android.os.Bundle extras>;

        virtualinvoke $r5.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("android.largeIcon", r1);

        return r0;
    }

    public android.app.Notification$Builder setLights(int, int, int)
    {
        android.app.Notification$Builder r0;
        int i0, i1, i2, $i3, $i4;
        android.app.Notification r1, $r2, $r3, $r4;

        r0 := @this: android.app.Notification$Builder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r2 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r2.<android.app.Notification: int ledARGB> = i0;

        $r3 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r3.<android.app.Notification: int ledOnMS> = i1;

        $r4 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r4.<android.app.Notification: int ledOffMS> = i2;

        if i1 != 0 goto label1;

        if i2 == 0 goto label2;

     label1:
        r1 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $i3 = r1.<android.app.Notification: int flags>;

        $i4 = $i3 | 1;

        r1.<android.app.Notification: int flags> = $i4;

     label2:
        return r0;
    }

    public android.app.Notification$Builder setLocalOnly(boolean)
    {
        android.app.Notification$Builder r0;
        boolean z0;

        r0 := @this: android.app.Notification$Builder;

        z0 := @parameter0: boolean;

        virtualinvoke r0.<android.app.Notification$Builder: android.app.Notification$Builder setFlag(int,boolean)>(256, z0);

        return r0;
    }

    public android.app.Notification$Builder setLocusId(android.content.LocusId)
    {
        android.app.Notification$Builder r0;
        android.content.LocusId r1;
        android.app.Notification $r2;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.content.LocusId;

        $r2 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        staticinvoke <android.app.Notification: android.content.LocusId access$802(android.app.Notification,android.content.LocusId)>($r2, r1);

        return r0;
    }

    public android.app.Notification$Builder setNumber(int)
    {
        android.app.Notification$Builder r0;
        int i0;
        android.app.Notification $r1;

        r0 := @this: android.app.Notification$Builder;

        i0 := @parameter0: int;

        $r1 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r1.<android.app.Notification: int number> = i0;

        return r0;
    }

    public android.app.Notification$Builder setOngoing(boolean)
    {
        android.app.Notification$Builder r0;
        boolean z0;

        r0 := @this: android.app.Notification$Builder;

        z0 := @parameter0: boolean;

        virtualinvoke r0.<android.app.Notification$Builder: android.app.Notification$Builder setFlag(int,boolean)>(2, z0);

        return r0;
    }

    public android.app.Notification$Builder setOnlyAlertOnce(boolean)
    {
        android.app.Notification$Builder r0;
        boolean z0;

        r0 := @this: android.app.Notification$Builder;

        z0 := @parameter0: boolean;

        virtualinvoke r0.<android.app.Notification$Builder: android.app.Notification$Builder setFlag(int,boolean)>(8, z0);

        return r0;
    }

    public android.app.Notification$Builder setPriority(int)
    {
        android.app.Notification$Builder r0;
        int i0;
        android.app.Notification $r1;

        r0 := @this: android.app.Notification$Builder;

        i0 := @parameter0: int;

        $r1 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r1.<android.app.Notification: int priority> = i0;

        return r0;
    }

    public android.app.Notification$Builder setProgress(int, int, boolean)
    {
        android.app.Notification$Builder r0;
        int i0, i1;
        boolean z0;
        android.app.Notification $r1, $r3, $r5;
        android.os.Bundle $r2, $r4, $r6;

        r0 := @this: android.app.Notification$Builder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r1 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r2 = $r1.<android.app.Notification: android.os.Bundle extras>;

        virtualinvoke $r2.<android.os.Bundle: void putInt(java.lang.String,int)>("android.progress", i1);

        $r3 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r4 = $r3.<android.app.Notification: android.os.Bundle extras>;

        virtualinvoke $r4.<android.os.Bundle: void putInt(java.lang.String,int)>("android.progressMax", i0);

        $r5 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r6 = $r5.<android.app.Notification: android.os.Bundle extras>;

        virtualinvoke $r6.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("android.progressIndeterminate", z0);

        return r0;
    }

    public android.app.Notification$Builder setPublicVersion(android.app.Notification)
    {
        android.app.Notification$Builder r0;
        android.app.Notification r1, $r2, $r3, $r4, $r5, $r6;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.app.Notification;

        if r1 == null goto label1;

        $r4 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r3 = new android.app.Notification;

        specialinvoke $r3.<android.app.Notification: void <init>()>();

        $r4.<android.app.Notification: android.app.Notification publicVersion> = $r3;

        $r5 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r6 = $r5.<android.app.Notification: android.app.Notification publicVersion>;

        virtualinvoke r1.<android.app.Notification: void cloneInto(android.app.Notification,boolean)>($r6, 1);

        goto label2;

     label1:
        $r2 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r2.<android.app.Notification: android.app.Notification publicVersion> = null;

     label2:
        return r0;
    }

    public void setRebuildStyledRemoteViews(boolean)
    {
        android.app.Notification$Builder r0;
        boolean z0;

        r0 := @this: android.app.Notification$Builder;

        z0 := @parameter0: boolean;

        r0.<android.app.Notification$Builder: boolean mRebuildStyledRemoteViews> = z0;

        return;
    }

    public android.app.Notification$Builder setRemoteInputHistory(android.app.RemoteInputHistoryItem[])
    {
        android.app.Notification$Builder r0;
        android.app.RemoteInputHistoryItem[] r1, r2;
        int i0, $i1, i2;
        android.app.Notification $r3, $r6;
        android.os.Bundle $r4, $r7;
        android.app.RemoteInputHistoryItem $r5;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.app.RemoteInputHistoryItem[];

        if r1 != null goto label1;

        $r6 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r7 = $r6.<android.app.Notification: android.os.Bundle extras>;

        virtualinvoke $r7.<android.os.Bundle: void putParcelableArray(java.lang.String,android.os.Parcelable[])>("android.remoteInputHistoryItems", null);

        goto label4;

     label1:
        $i1 = lengthof r1;

        i0 = staticinvoke <java.lang.Math: int min(int,int)>(5, $i1);

        r2 = newarray (android.app.RemoteInputHistoryItem)[i0];

        i2 = 0;

     label2:
        if i2 >= i0 goto label3;

        $r5 = r1[i2];

        r2[i2] = $r5;

        i2 = i2 + 1;

        goto label2;

     label3:
        $r3 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r4 = $r3.<android.app.Notification: android.os.Bundle extras>;

        virtualinvoke $r4.<android.os.Bundle: void putParcelableArray(java.lang.String,android.os.Parcelable[])>("android.remoteInputHistoryItems", r2);

     label4:
        return r0;
    }

    public android.app.Notification$Builder setRemoteInputHistory(java.lang.CharSequence[])
    {
        android.app.Notification$Builder r0;
        java.lang.CharSequence[] r1, r2;
        int i0, $i1, i2;
        android.app.RemoteInputHistoryItem[] r3;
        android.app.Notification $r4, $r6, $r12;
        android.os.Bundle $r5, $r7, $r13;
        java.lang.CharSequence $r8, $r9, $r11;
        android.app.RemoteInputHistoryItem $r10;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: java.lang.CharSequence[];

        if r1 != null goto label1;

        $r12 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r13 = $r12.<android.app.Notification: android.os.Bundle extras>;

        virtualinvoke $r13.<android.os.Bundle: void putCharSequenceArray(java.lang.String,java.lang.CharSequence[])>("android.remoteInputHistory", null);

        goto label4;

     label1:
        $i1 = lengthof r1;

        i0 = staticinvoke <java.lang.Math: int min(int,int)>(5, $i1);

        r2 = newarray (java.lang.CharSequence)[i0];

        r3 = newarray (android.app.RemoteInputHistoryItem)[i0];

        i2 = 0;

     label2:
        if i2 >= i0 goto label3;

        $r8 = r1[i2];

        $r9 = staticinvoke <android.app.Notification: java.lang.CharSequence safeCharSequence(java.lang.CharSequence)>($r8);

        r2[i2] = $r9;

        $r10 = new android.app.RemoteInputHistoryItem;

        $r11 = r1[i2];

        specialinvoke $r10.<android.app.RemoteInputHistoryItem: void <init>(java.lang.CharSequence)>($r11);

        r3[i2] = $r10;

        i2 = i2 + 1;

        goto label2;

     label3:
        $r4 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r5 = $r4.<android.app.Notification: android.os.Bundle extras>;

        virtualinvoke $r5.<android.os.Bundle: void putCharSequenceArray(java.lang.String,java.lang.CharSequence[])>("android.remoteInputHistory", r2);

        $r6 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r7 = $r6.<android.app.Notification: android.os.Bundle extras>;

        virtualinvoke $r7.<android.os.Bundle: void putParcelableArray(java.lang.String,android.os.Parcelable[])>("android.remoteInputHistoryItems", r3);

     label4:
        return r0;
    }

    public android.app.Notification$Builder setSettingsText(java.lang.CharSequence)
    {
        android.app.Notification$Builder r0;
        java.lang.CharSequence r1, $r3;
        android.app.Notification $r2;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: java.lang.CharSequence;

        $r2 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r3 = staticinvoke <android.app.Notification: java.lang.CharSequence safeCharSequence(java.lang.CharSequence)>(r1);

        staticinvoke <android.app.Notification: java.lang.CharSequence access$1302(android.app.Notification,java.lang.CharSequence)>($r2, $r3);

        return r0;
    }

    public android.app.Notification$Builder setShortcutId(java.lang.String)
    {
        android.app.Notification$Builder r0;
        java.lang.String r1;
        android.app.Notification $r2;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        staticinvoke <android.app.Notification: java.lang.String access$702(android.app.Notification,java.lang.String)>($r2, r1);

        return r0;
    }

    public android.app.Notification$Builder setShowRemoteInputSpinner(boolean)
    {
        android.app.Notification$Builder r0;
        boolean z0;
        android.app.Notification $r1;
        android.os.Bundle $r2;

        r0 := @this: android.app.Notification$Builder;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r2 = $r1.<android.app.Notification: android.os.Bundle extras>;

        virtualinvoke $r2.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("android.remoteInputSpinner", z0);

        return r0;
    }

    public android.app.Notification$Builder setShowWhen(boolean)
    {
        android.app.Notification$Builder r0;
        boolean z0;
        android.app.Notification $r1;
        android.os.Bundle $r2;

        r0 := @this: android.app.Notification$Builder;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r2 = $r1.<android.app.Notification: android.os.Bundle extras>;

        virtualinvoke $r2.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("android.showWhen", z0);

        return r0;
    }

    public android.app.Notification$Builder setSmallIcon(int)
    {
        android.app.Notification$Builder r0, $r1;
        int i0;
        android.content.Context $r2;
        android.graphics.drawable.Icon r3;

        r0 := @this: android.app.Notification$Builder;

        i0 := @parameter0: int;

        if i0 == 0 goto label1;

        $r2 = r0.<android.app.Notification$Builder: android.content.Context mContext>;

        r3 = staticinvoke <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithResource(android.content.Context,int)>($r2, i0);

        goto label2;

     label1:
        r3 = null;

     label2:
        $r1 = virtualinvoke r0.<android.app.Notification$Builder: android.app.Notification$Builder setSmallIcon(android.graphics.drawable.Icon)>(r3);

        return $r1;
    }

    public android.app.Notification$Builder setSmallIcon(int, int)
    {
        android.app.Notification$Builder r0, $r2;
        int i0, i1;
        android.app.Notification $r1;

        r0 := @this: android.app.Notification$Builder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r1.<android.app.Notification: int iconLevel> = i1;

        $r2 = virtualinvoke r0.<android.app.Notification$Builder: android.app.Notification$Builder setSmallIcon(int)>(i0);

        return $r2;
    }

    public android.app.Notification$Builder setSmallIcon(android.graphics.drawable.Icon)
    {
        android.app.Notification$Builder r0;
        android.graphics.drawable.Icon r1;
        android.app.Notification $r2, $r3;
        int $i0, $i1;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.graphics.drawable.Icon;

        $r2 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        virtualinvoke $r2.<android.app.Notification: void setSmallIcon(android.graphics.drawable.Icon)>(r1);

        if r1 == null goto label1;

        $i0 = virtualinvoke r1.<android.graphics.drawable.Icon: int getType()>();

        if $i0 != 2 goto label1;

        $r3 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $i1 = virtualinvoke r1.<android.graphics.drawable.Icon: int getResId()>();

        $r3.<android.app.Notification: int icon> = $i1;

     label1:
        return r0;
    }

    public android.app.Notification$Builder setSortKey(java.lang.String)
    {
        android.app.Notification$Builder r0;
        java.lang.String r1;
        android.app.Notification $r2;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        staticinvoke <android.app.Notification: java.lang.String access$1602(android.app.Notification,java.lang.String)>($r2, r1);

        return r0;
    }

    public android.app.Notification$Builder setSound(android.net.Uri)
    {
        android.app.Notification$Builder r0;
        android.net.Uri r1;
        android.app.Notification $r2, $r4;
        android.media.AudioAttributes $r3;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.net.Uri;

        $r2 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r2.<android.app.Notification: android.net.Uri sound> = r1;

        $r4 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r3 = <android.app.Notification: android.media.AudioAttributes AUDIO_ATTRIBUTES_DEFAULT>;

        $r4.<android.app.Notification: android.media.AudioAttributes audioAttributes> = $r3;

        return r0;
    }

    public android.app.Notification$Builder setSound(android.net.Uri, int)
    {
        android.app.Notification$Builder r0;
        android.net.Uri r1;
        int i0;
        android.app.Notification $r2, $r3;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.net.Uri;

        i0 := @parameter1: int;

        staticinvoke <android.media.PlayerBase: void deprecateStreamTypeForPlayback(int,java.lang.String,java.lang.String)>(i0, "Notification", "setSound()");

        $r2 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r2.<android.app.Notification: android.net.Uri sound> = r1;

        $r3 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r3.<android.app.Notification: int audioStreamType> = i0;

        return r0;
    }

    public android.app.Notification$Builder setSound(android.net.Uri, android.media.AudioAttributes)
    {
        android.app.Notification$Builder r0;
        android.net.Uri r1;
        android.media.AudioAttributes r2;
        android.app.Notification $r3, $r4;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.media.AudioAttributes;

        $r3 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r3.<android.app.Notification: android.net.Uri sound> = r1;

        $r4 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r4.<android.app.Notification: android.media.AudioAttributes audioAttributes> = r2;

        return r0;
    }

    public android.app.Notification$Builder setStyle(android.app.Notification$Style)
    {
        android.app.Notification$Builder r0;
        android.app.Notification$Style r1, $r2;
        android.app.Notification $r3, $r5;
        android.os.Bundle $r4, $r6;
        java.lang.Class $r7;
        java.lang.String $r8;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.app.Notification$Style;

        $r2 = r0.<android.app.Notification$Builder: android.app.Notification$Style mStyle>;

        if $r2 == r1 goto label2;

        r0.<android.app.Notification$Builder: android.app.Notification$Style mStyle> = r1;

        if r1 == null goto label1;

        virtualinvoke r1.<android.app.Notification$Style: void setBuilder(android.app.Notification$Builder)>(r0);

        $r5 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r6 = $r5.<android.app.Notification: android.os.Bundle extras>;

        $r7 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r6.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("android.template", $r8);

        goto label2;

     label1:
        $r3 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r4 = $r3.<android.app.Notification: android.os.Bundle extras>;

        virtualinvoke $r4.<android.os.Bundle: void remove(java.lang.String)>("android.template");

     label2:
        return r0;
    }

    public android.app.Notification$Builder setSubText(java.lang.CharSequence)
    {
        android.app.Notification$Builder r0;
        java.lang.CharSequence r1, $r4;
        android.app.Notification $r2;
        android.os.Bundle $r3;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: java.lang.CharSequence;

        $r2 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r3 = $r2.<android.app.Notification: android.os.Bundle extras>;

        $r4 = staticinvoke <android.app.Notification: java.lang.CharSequence safeCharSequence(java.lang.CharSequence)>(r1);

        virtualinvoke $r3.<android.os.Bundle: void putCharSequence(java.lang.String,java.lang.CharSequence)>("android.subText", $r4);

        return r0;
    }

    public android.app.Notification$Builder setTicker(java.lang.CharSequence)
    {
        android.app.Notification$Builder r0;
        java.lang.CharSequence r1, $r3;
        android.app.Notification $r2;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: java.lang.CharSequence;

        $r2 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r3 = staticinvoke <android.app.Notification: java.lang.CharSequence safeCharSequence(java.lang.CharSequence)>(r1);

        $r2.<android.app.Notification: java.lang.CharSequence tickerText> = $r3;

        return r0;
    }

    public android.app.Notification$Builder setTicker(java.lang.CharSequence, android.widget.RemoteViews)
    {
        android.app.Notification$Builder r0;
        java.lang.CharSequence r1;
        android.widget.RemoteViews r2;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: java.lang.CharSequence;

        r2 := @parameter1: android.widget.RemoteViews;

        virtualinvoke r0.<android.app.Notification$Builder: android.app.Notification$Builder setTicker(java.lang.CharSequence)>(r1);

        return r0;
    }

    public android.app.Notification$Builder setTimeout(long)
    {
        android.app.Notification$Builder r0;
        long l0;
        android.app.Notification $r1;

        r0 := @this: android.app.Notification$Builder;

        l0 := @parameter0: long;

        $r1 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        staticinvoke <android.app.Notification: long access$1202(android.app.Notification,long)>($r1, l0);

        return r0;
    }

    public android.app.Notification$Builder setTimeoutAfter(long)
    {
        android.app.Notification$Builder r0;
        long l0;
        android.app.Notification $r1;

        r0 := @this: android.app.Notification$Builder;

        l0 := @parameter0: long;

        $r1 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        staticinvoke <android.app.Notification: long access$1202(android.app.Notification,long)>($r1, l0);

        return r0;
    }

    public android.app.Notification$Builder setUsesChronometer(boolean)
    {
        android.app.Notification$Builder r0;
        boolean z0;
        android.app.Notification $r1;
        android.os.Bundle $r2;

        r0 := @this: android.app.Notification$Builder;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r2 = $r1.<android.app.Notification: android.os.Bundle extras>;

        virtualinvoke $r2.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("android.showChronometer", z0);

        return r0;
    }

    public android.app.Notification$Builder setVibrate(long[])
    {
        android.app.Notification$Builder r0;
        long[] r1;
        android.app.Notification $r2;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: long[];

        $r2 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r2.<android.app.Notification: long[] vibrate> = r1;

        return r0;
    }

    public android.app.Notification$Builder setVisibility(int)
    {
        android.app.Notification$Builder r0;
        int i0;
        android.app.Notification $r1;

        r0 := @this: android.app.Notification$Builder;

        i0 := @parameter0: int;

        $r1 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r1.<android.app.Notification: int visibility> = i0;

        return r0;
    }

    public android.app.Notification$Builder setWhen(long)
    {
        android.app.Notification$Builder r0;
        long l0;
        android.app.Notification $r1;

        r0 := @this: android.app.Notification$Builder;

        l0 := @parameter0: long;

        $r1 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r1.<android.app.Notification: long when> = l0;

        return r0;
    }

    public boolean usesStandardHeader()
    {
        android.app.Notification$Builder r0;
        boolean z0, $z1, $z2, z3, z4, z5;
        android.app.Notification $r1, $r5, $r9, $r12, $r14, $r16, $r18;
        android.content.Context $r2;
        android.content.pm.ApplicationInfo $r3;
        int $i0, $i1, $i2;
        android.util.ArraySet $r4, $r8;
        android.widget.RemoteViews $r6, $r10, $r13, $r15, $r17, $r19;
        java.lang.Integer $r7, $r11;

        r0 := @this: android.app.Notification$Builder;

        $r1 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        z0 = staticinvoke <android.app.Notification: boolean access$1700(android.app.Notification)>($r1);

        z3 = 1;

        if z0 == 0 goto label01;

        return 1;

     label01:
        $r2 = r0.<android.app.Notification$Builder: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $i0 = $r3.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i0 < 24 goto label02;

        $r12 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r13 = $r12.<android.app.Notification: android.widget.RemoteViews contentView>;

        if $r13 != null goto label02;

        $r14 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r15 = $r14.<android.app.Notification: android.widget.RemoteViews bigContentView>;

        if $r15 != null goto label02;

        return 1;

     label02:
        $r16 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r17 = $r16.<android.app.Notification: android.widget.RemoteViews contentView>;

        if $r17 == null goto label04;

        $r8 = staticinvoke <android.app.Notification: android.util.ArraySet access$1800()>();

        $r9 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r10 = $r9.<android.app.Notification: android.widget.RemoteViews contentView>;

        $i2 = virtualinvoke $r10.<android.widget.RemoteViews: int getLayoutId()>();

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $z2 = virtualinvoke $r8.<android.util.ArraySet: boolean contains(java.lang.Object)>($r11);

        if $z2 == 0 goto label03;

        goto label04;

     label03:
        z4 = 0;

        goto label05;

     label04:
        z4 = 1;

     label05:
        $r18 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r19 = $r18.<android.app.Notification: android.widget.RemoteViews bigContentView>;

        if $r19 == null goto label07;

        $r4 = staticinvoke <android.app.Notification: android.util.ArraySet access$1800()>();

        $r5 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r6 = $r5.<android.app.Notification: android.widget.RemoteViews bigContentView>;

        $i1 = virtualinvoke $r6.<android.widget.RemoteViews: int getLayoutId()>();

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $z1 = virtualinvoke $r4.<android.util.ArraySet: boolean contains(java.lang.Object)>($r7);

        if $z1 == 0 goto label06;

        goto label07;

     label06:
        z5 = 0;

        goto label08;

     label07:
        z5 = 1;

     label08:
        if z4 == 0 goto label09;

        if z5 == 0 goto label09;

        goto label10;

     label09:
        z3 = 0;

     label10:
        return z3;
    }

    public boolean usesTemplate()
    {
        android.app.Notification$Builder r0;
        android.app.Notification$Style r1;
        android.app.Notification $r2, $r4, $r6;
        android.widget.RemoteViews $r3, $r5, $r7;
        boolean $z0, z1;

        r0 := @this: android.app.Notification$Builder;

        $r2 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r3 = $r2.<android.app.Notification: android.widget.RemoteViews contentView>;

        if $r3 != null goto label1;

        $r4 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r5 = $r4.<android.app.Notification: android.widget.RemoteViews headsUpContentView>;

        if $r5 != null goto label1;

        $r6 = r0.<android.app.Notification$Builder: android.app.Notification mN>;

        $r7 = $r6.<android.app.Notification: android.widget.RemoteViews bigContentView>;

        if $r7 == null goto label2;

     label1:
        r1 = r0.<android.app.Notification$Builder: android.app.Notification$Style mStyle>;

        if r1 == null goto label3;

        $z0 = virtualinvoke r1.<android.app.Notification$Style: boolean displayCustomViewInline()>();

        if $z0 == 0 goto label3;

     label2:
        z1 = 1;

        goto label4;

     label3:
        z1 = 0;

     label4:
        return z1;
    }
}
