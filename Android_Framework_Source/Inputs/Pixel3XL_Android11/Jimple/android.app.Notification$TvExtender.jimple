public final class android.app.Notification$TvExtender extends java.lang.Object implements android.app.Notification$Extender
{
    private static final java.lang.String EXTRA_CHANNEL_ID;
    private static final java.lang.String EXTRA_CONTENT_INTENT;
    private static final java.lang.String EXTRA_DELETE_INTENT;
    private static final java.lang.String EXTRA_FLAGS;
    private static final java.lang.String EXTRA_SUPPRESS_SHOW_OVER_APPS;
    private static final java.lang.String EXTRA_TV_EXTENDER;
    private static final int FLAG_AVAILABLE_ON_TV;
    private static final java.lang.String TAG;
    private java.lang.String mChannelId;
    private android.app.PendingIntent mContentIntent;
    private android.app.PendingIntent mDeleteIntent;
    private int mFlags;
    private boolean mSuppressShowOverApps;

    public void <init>()
    {
        android.app.Notification$TvExtender r0;

        r0 := @this: android.app.Notification$TvExtender;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.app.Notification$TvExtender: int mFlags> = 1;

        return;
    }

    public void <init>(android.app.Notification)
    {
        android.app.Notification$TvExtender r0;
        android.os.Bundle $r1, $r2, r9;
        int $i0;
        java.lang.String $r3;
        boolean $z0;
        android.os.Parcelable $r4, $r6;
        android.app.PendingIntent $r5, $r7;
        android.app.Notification r8;

        r0 := @this: android.app.Notification$TvExtender;

        r8 := @parameter0: android.app.Notification;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = r8.<android.app.Notification: android.os.Bundle extras>;

        if $r1 != null goto label1;

        r9 = null;

        goto label2;

     label1:
        $r2 = r8.<android.app.Notification: android.os.Bundle extras>;

        r9 = virtualinvoke $r2.<android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>("android.tv.EXTENSIONS");

     label2:
        if r9 == null goto label3;

        $i0 = virtualinvoke r9.<android.os.Bundle: int getInt(java.lang.String)>("flags");

        r0.<android.app.Notification$TvExtender: int mFlags> = $i0;

        $r3 = virtualinvoke r9.<android.os.Bundle: java.lang.String getString(java.lang.String)>("channel_id");

        r0.<android.app.Notification$TvExtender: java.lang.String mChannelId> = $r3;

        $z0 = virtualinvoke r9.<android.os.Bundle: boolean getBoolean(java.lang.String)>("suppressShowOverApps");

        r0.<android.app.Notification$TvExtender: boolean mSuppressShowOverApps> = $z0;

        $r4 = virtualinvoke r9.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>("content_intent");

        $r5 = (android.app.PendingIntent) $r4;

        r0.<android.app.Notification$TvExtender: android.app.PendingIntent mContentIntent> = $r5;

        $r6 = virtualinvoke r9.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>("delete_intent");

        $r7 = (android.app.PendingIntent) $r6;

        r0.<android.app.Notification$TvExtender: android.app.PendingIntent mDeleteIntent> = $r7;

     label3:
        return;
    }

    public android.app.Notification$Builder extend(android.app.Notification$Builder)
    {
        android.app.Notification$TvExtender r0;
        android.app.Notification$Builder r1;
        android.os.Bundle $r3, $r5;
        int $i0;
        java.lang.String $r4;
        boolean $z0;
        android.app.PendingIntent r6, r7;

        r0 := @this: android.app.Notification$TvExtender;

        r1 := @parameter0: android.app.Notification$Builder;

        $r3 = new android.os.Bundle;

        specialinvoke $r3.<android.os.Bundle: void <init>()>();

        $i0 = r0.<android.app.Notification$TvExtender: int mFlags>;

        virtualinvoke $r3.<android.os.Bundle: void putInt(java.lang.String,int)>("flags", $i0);

        $r4 = r0.<android.app.Notification$TvExtender: java.lang.String mChannelId>;

        virtualinvoke $r3.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("channel_id", $r4);

        $z0 = r0.<android.app.Notification$TvExtender: boolean mSuppressShowOverApps>;

        virtualinvoke $r3.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("suppressShowOverApps", $z0);

        r6 = r0.<android.app.Notification$TvExtender: android.app.PendingIntent mContentIntent>;

        if r6 == null goto label1;

        virtualinvoke $r3.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("content_intent", r6);

     label1:
        r7 = r0.<android.app.Notification$TvExtender: android.app.PendingIntent mDeleteIntent>;

        if r7 == null goto label2;

        virtualinvoke $r3.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("delete_intent", r7);

     label2:
        $r5 = virtualinvoke r1.<android.app.Notification$Builder: android.os.Bundle getExtras()>();

        virtualinvoke $r5.<android.os.Bundle: void putBundle(java.lang.String,android.os.Bundle)>("android.tv.EXTENSIONS", $r3);

        return r1;
    }

    public java.lang.String getChannel()
    {
        android.app.Notification$TvExtender r0;
        java.lang.String $r1;

        r0 := @this: android.app.Notification$TvExtender;

        $r1 = r0.<android.app.Notification$TvExtender: java.lang.String mChannelId>;

        return $r1;
    }

    public java.lang.String getChannelId()
    {
        android.app.Notification$TvExtender r0;
        java.lang.String $r1;

        r0 := @this: android.app.Notification$TvExtender;

        $r1 = r0.<android.app.Notification$TvExtender: java.lang.String mChannelId>;

        return $r1;
    }

    public android.app.PendingIntent getContentIntent()
    {
        android.app.Notification$TvExtender r0;
        android.app.PendingIntent $r1;

        r0 := @this: android.app.Notification$TvExtender;

        $r1 = r0.<android.app.Notification$TvExtender: android.app.PendingIntent mContentIntent>;

        return $r1;
    }

    public android.app.PendingIntent getDeleteIntent()
    {
        android.app.Notification$TvExtender r0;
        android.app.PendingIntent $r1;

        r0 := @this: android.app.Notification$TvExtender;

        $r1 = r0.<android.app.Notification$TvExtender: android.app.PendingIntent mDeleteIntent>;

        return $r1;
    }

    public boolean getSuppressShowOverApps()
    {
        android.app.Notification$TvExtender r0;
        boolean $z0;

        r0 := @this: android.app.Notification$TvExtender;

        $z0 = r0.<android.app.Notification$TvExtender: boolean mSuppressShowOverApps>;

        return $z0;
    }

    public boolean isAvailableOnTv()
    {
        android.app.Notification$TvExtender r0;
        int i0, $i1;
        boolean z0;

        r0 := @this: android.app.Notification$TvExtender;

        i0 = r0.<android.app.Notification$TvExtender: int mFlags>;

        z0 = 1;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public android.app.Notification$TvExtender setChannel(java.lang.String)
    {
        android.app.Notification$TvExtender r0;
        java.lang.String r1;

        r0 := @this: android.app.Notification$TvExtender;

        r1 := @parameter0: java.lang.String;

        r0.<android.app.Notification$TvExtender: java.lang.String mChannelId> = r1;

        return r0;
    }

    public android.app.Notification$TvExtender setChannelId(java.lang.String)
    {
        android.app.Notification$TvExtender r0;
        java.lang.String r1;

        r0 := @this: android.app.Notification$TvExtender;

        r1 := @parameter0: java.lang.String;

        r0.<android.app.Notification$TvExtender: java.lang.String mChannelId> = r1;

        return r0;
    }

    public android.app.Notification$TvExtender setContentIntent(android.app.PendingIntent)
    {
        android.app.Notification$TvExtender r0;
        android.app.PendingIntent r1;

        r0 := @this: android.app.Notification$TvExtender;

        r1 := @parameter0: android.app.PendingIntent;

        r0.<android.app.Notification$TvExtender: android.app.PendingIntent mContentIntent> = r1;

        return r0;
    }

    public android.app.Notification$TvExtender setDeleteIntent(android.app.PendingIntent)
    {
        android.app.Notification$TvExtender r0;
        android.app.PendingIntent r1;

        r0 := @this: android.app.Notification$TvExtender;

        r1 := @parameter0: android.app.PendingIntent;

        r0.<android.app.Notification$TvExtender: android.app.PendingIntent mDeleteIntent> = r1;

        return r0;
    }

    public android.app.Notification$TvExtender setSuppressShowOverApps(boolean)
    {
        android.app.Notification$TvExtender r0;
        boolean z0;

        r0 := @this: android.app.Notification$TvExtender;

        z0 := @parameter0: boolean;

        r0.<android.app.Notification$TvExtender: boolean mSuppressShowOverApps> = z0;

        return r0;
    }

    public static void <clinit>()
    {
        <android.app.Notification$TvExtender: java.lang.String TAG> = "TvExtender";

        <android.app.Notification$TvExtender: int FLAG_AVAILABLE_ON_TV> = 1;

        <android.app.Notification$TvExtender: java.lang.String EXTRA_TV_EXTENDER> = "android.tv.EXTENSIONS";

        <android.app.Notification$TvExtender: java.lang.String EXTRA_SUPPRESS_SHOW_OVER_APPS> = "suppressShowOverApps";

        <android.app.Notification$TvExtender: java.lang.String EXTRA_FLAGS> = "flags";

        <android.app.Notification$TvExtender: java.lang.String EXTRA_DELETE_INTENT> = "delete_intent";

        <android.app.Notification$TvExtender: java.lang.String EXTRA_CONTENT_INTENT> = "content_intent";

        <android.app.Notification$TvExtender: java.lang.String EXTRA_CHANNEL_ID> = "channel_id";

        return;
    }
}
