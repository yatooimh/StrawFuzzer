public final class android.app.NotificationChannel extends java.lang.Object implements android.os.Parcelable
{
    public static final int ALLOW_BUBBLE_OFF;
    public static final int ALLOW_BUBBLE_ON;
    private static final java.lang.String ATT_ALLOW_BUBBLE;
    private static final java.lang.String ATT_BLOCKABLE_SYSTEM;
    private static final java.lang.String ATT_CONTENT_TYPE;
    private static final java.lang.String ATT_CONVERSATION_ID;
    private static final java.lang.String ATT_DELETED;
    private static final java.lang.String ATT_DEMOTE;
    private static final java.lang.String ATT_DESC;
    private static final java.lang.String ATT_FG_SERVICE_SHOWN;
    private static final java.lang.String ATT_FLAGS;
    private static final java.lang.String ATT_GROUP;
    private static final java.lang.String ATT_ID;
    private static final java.lang.String ATT_IMPORTANCE;
    private static final java.lang.String ATT_IMP_CONVERSATION;
    private static final java.lang.String ATT_LIGHTS;
    private static final java.lang.String ATT_LIGHT_COLOR;
    private static final java.lang.String ATT_NAME;
    private static final java.lang.String ATT_ORIG_IMP;
    private static final java.lang.String ATT_PARENT_CHANNEL;
    private static final java.lang.String ATT_PRIORITY;
    private static final java.lang.String ATT_SHOW_BADGE;
    private static final java.lang.String ATT_SOUND;
    private static final java.lang.String ATT_USAGE;
    private static final java.lang.String ATT_USER_LOCKED;
    private static final java.lang.String ATT_VIBRATION;
    private static final java.lang.String ATT_VIBRATION_ENABLED;
    private static final java.lang.String ATT_VISIBILITY;
    public static final java.lang.String CONVERSATION_CHANNEL_ID_FORMAT;
    public static final android.os.Parcelable$Creator CREATOR;
    public static final int DEFAULT_ALLOW_BUBBLE;
    public static final java.lang.String DEFAULT_CHANNEL_ID;
    private static final boolean DEFAULT_DELETED;
    private static final int DEFAULT_IMPORTANCE;
    private static final int DEFAULT_LIGHT_COLOR;
    private static final boolean DEFAULT_SHOW_BADGE;
    private static final int DEFAULT_VISIBILITY;
    private static final java.lang.String DELIMITER;
    public static final int[] LOCKABLE_FIELDS;
    private static final int MAX_TEXT_LENGTH;
    public static final java.lang.String PLACEHOLDER_CONVERSATION_ID;
    private static final java.lang.String TAG_CHANNEL;
    public static final int USER_LOCKED_ALLOW_BUBBLE;
    public static final int USER_LOCKED_IMPORTANCE;
    public static final int USER_LOCKED_LIGHTS;
    public static final int USER_LOCKED_PRIORITY;
    public static final int USER_LOCKED_SHOW_BADGE;
    public static final int USER_LOCKED_SOUND;
    public static final int USER_LOCKED_VIBRATION;
    public static final int USER_LOCKED_VISIBILITY;
    private int mAllowBubbles;
    private android.media.AudioAttributes mAudioAttributes;
    private boolean mBlockableSystem;
    private boolean mBypassDnd;
    private java.lang.String mConversationId;
    private boolean mDeleted;
    private boolean mDemoted;
    private java.lang.String mDesc;
    private boolean mFgServiceShown;
    private java.lang.String mGroup;
    private java.lang.String mId;
    private int mImportance;
    private boolean mImportanceLockedByOEM;
    private boolean mImportanceLockedDefaultApp;
    private boolean mImportantConvo;
    private int mLightColor;
    private boolean mLights;
    private int mLockscreenVisibility;
    private java.lang.String mName;
    private int mOriginalImportance;
    private java.lang.String mParentId;
    private boolean mShowBadge;
    private android.net.Uri mSound;
    private int mUserLockedFields;
    private long[] mVibration;
    private boolean mVibrationEnabled;

    static void <clinit>()
    {
        int[] $r0;
        android.app.NotificationChannel$1 $r1;

        <android.app.NotificationChannel: int USER_LOCKED_VISIBILITY> = 2;

        <android.app.NotificationChannel: int USER_LOCKED_VIBRATION> = 16;

        <android.app.NotificationChannel: int USER_LOCKED_SOUND> = 32;

        <android.app.NotificationChannel: int USER_LOCKED_SHOW_BADGE> = 128;

        <android.app.NotificationChannel: int USER_LOCKED_PRIORITY> = 1;

        <android.app.NotificationChannel: int USER_LOCKED_LIGHTS> = 8;

        <android.app.NotificationChannel: int USER_LOCKED_IMPORTANCE> = 4;

        <android.app.NotificationChannel: int USER_LOCKED_ALLOW_BUBBLE> = 256;

        <android.app.NotificationChannel: java.lang.String TAG_CHANNEL> = "channel";

        <android.app.NotificationChannel: java.lang.String PLACEHOLDER_CONVERSATION_ID> = ":placeholder_id";

        <android.app.NotificationChannel: int MAX_TEXT_LENGTH> = 1000;

        <android.app.NotificationChannel: java.lang.String DELIMITER> = ",";

        <android.app.NotificationChannel: int DEFAULT_VISIBILITY> = -1000;

        <android.app.NotificationChannel: boolean DEFAULT_SHOW_BADGE> = 1;

        <android.app.NotificationChannel: int DEFAULT_LIGHT_COLOR> = 0;

        <android.app.NotificationChannel: int DEFAULT_IMPORTANCE> = -1000;

        <android.app.NotificationChannel: boolean DEFAULT_DELETED> = 0;

        <android.app.NotificationChannel: java.lang.String DEFAULT_CHANNEL_ID> = "miscellaneous";

        <android.app.NotificationChannel: int DEFAULT_ALLOW_BUBBLE> = -1;

        <android.app.NotificationChannel: java.lang.String CONVERSATION_CHANNEL_ID_FORMAT> = "%1$s : %2$s";

        <android.app.NotificationChannel: java.lang.String ATT_VISIBILITY> = "visibility";

        <android.app.NotificationChannel: java.lang.String ATT_VIBRATION_ENABLED> = "vibration_enabled";

        <android.app.NotificationChannel: java.lang.String ATT_VIBRATION> = "vibration";

        <android.app.NotificationChannel: java.lang.String ATT_USER_LOCKED> = "locked";

        <android.app.NotificationChannel: java.lang.String ATT_USAGE> = "usage";

        <android.app.NotificationChannel: java.lang.String ATT_SOUND> = "sound";

        <android.app.NotificationChannel: java.lang.String ATT_SHOW_BADGE> = "show_badge";

        <android.app.NotificationChannel: java.lang.String ATT_PRIORITY> = "priority";

        <android.app.NotificationChannel: java.lang.String ATT_PARENT_CHANNEL> = "parent";

        <android.app.NotificationChannel: java.lang.String ATT_ORIG_IMP> = "orig_imp";

        <android.app.NotificationChannel: java.lang.String ATT_NAME> = "name";

        <android.app.NotificationChannel: java.lang.String ATT_LIGHT_COLOR> = "light_color";

        <android.app.NotificationChannel: java.lang.String ATT_LIGHTS> = "lights";

        <android.app.NotificationChannel: java.lang.String ATT_IMP_CONVERSATION> = "imp_conv";

        <android.app.NotificationChannel: java.lang.String ATT_IMPORTANCE> = "importance";

        <android.app.NotificationChannel: java.lang.String ATT_ID> = "id";

        <android.app.NotificationChannel: java.lang.String ATT_GROUP> = "group";

        <android.app.NotificationChannel: java.lang.String ATT_FLAGS> = "flags";

        <android.app.NotificationChannel: java.lang.String ATT_FG_SERVICE_SHOWN> = "fgservice";

        <android.app.NotificationChannel: java.lang.String ATT_DESC> = "desc";

        <android.app.NotificationChannel: java.lang.String ATT_DEMOTE> = "dem";

        <android.app.NotificationChannel: java.lang.String ATT_DELETED> = "deleted";

        <android.app.NotificationChannel: java.lang.String ATT_CONVERSATION_ID> = "conv_id";

        <android.app.NotificationChannel: java.lang.String ATT_CONTENT_TYPE> = "content_type";

        <android.app.NotificationChannel: java.lang.String ATT_BLOCKABLE_SYSTEM> = "blockable_system";

        <android.app.NotificationChannel: java.lang.String ATT_ALLOW_BUBBLE> = "allow_bubbles";

        <android.app.NotificationChannel: int ALLOW_BUBBLE_ON> = 1;

        <android.app.NotificationChannel: int ALLOW_BUBBLE_OFF> = 0;

        $r0 = newarray (int)[8];

        $r0[0] = 1;

        $r0[1] = 2;

        $r0[2] = 4;

        $r0[3] = 8;

        $r0[4] = 16;

        $r0[5] = 32;

        $r0[6] = 128;

        $r0[7] = 256;

        <android.app.NotificationChannel: int[] LOCKABLE_FIELDS> = $r0;

        $r1 = new android.app.NotificationChannel$1;

        specialinvoke $r1.<android.app.NotificationChannel$1: void <init>()>();

        <android.app.NotificationChannel: android.os.Parcelable$Creator CREATOR> = $r1;

        return;
    }

    protected void <init>(android.os.Parcel)
    {
        android.app.NotificationChannel r0;
        android.os.Parcel r1;
        android.net.Uri $r2, $r12;
        android.media.AudioAttributes $r3, r16;
        byte $b0, $b1, $b2, $b4, $b6, $b7, $b9, $b10, $b11, $b12, $b13;
        int $i3, $i5, $i8, $i14, $i15, $i16, $i17;
        long[] $r4;
        boolean $z1, $z2, $z3, $z4, z5, z6, z7, z8, z9, z10;
        java.lang.String $r5, $r6, $r9, $r13, $r14, $r15;
        android.os.Parcelable$Creator $r7, $r10;
        java.lang.Object $r8, $r11;

        r0 := @this: android.app.NotificationChannel;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.app.NotificationChannel: int mImportance> = -1000;

        r0.<android.app.NotificationChannel: int mOriginalImportance> = -1000;

        r0.<android.app.NotificationChannel: int mLockscreenVisibility> = -1000;

        $r2 = <android.provider.Settings$System: android.net.Uri DEFAULT_NOTIFICATION_URI>;

        r0.<android.app.NotificationChannel: android.net.Uri mSound> = $r2;

        r0.<android.app.NotificationChannel: int mLightColor> = 0;

        r0.<android.app.NotificationChannel: boolean mShowBadge> = 1;

        r0.<android.app.NotificationChannel: boolean mDeleted> = 0;

        $r3 = <android.app.Notification: android.media.AudioAttributes AUDIO_ATTRIBUTES_DEFAULT>;

        r0.<android.app.NotificationChannel: android.media.AudioAttributes mAudioAttributes> = $r3;

        r0.<android.app.NotificationChannel: boolean mBlockableSystem> = 0;

        r0.<android.app.NotificationChannel: int mAllowBubbles> = -1;

        r16 = null;

        r0.<android.app.NotificationChannel: java.lang.String mParentId> = null;

        r0.<android.app.NotificationChannel: java.lang.String mConversationId> = null;

        r0.<android.app.NotificationChannel: boolean mDemoted> = 0;

        r0.<android.app.NotificationChannel: boolean mImportantConvo> = 0;

        $b0 = virtualinvoke r1.<android.os.Parcel: byte readByte()>();

        if $b0 == 0 goto label01;

        $r15 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.app.NotificationChannel: java.lang.String mId> = $r15;

        goto label02;

     label01:
        r0.<android.app.NotificationChannel: java.lang.String mId> = null;

     label02:
        $b1 = virtualinvoke r1.<android.os.Parcel: byte readByte()>();

        if $b1 == 0 goto label03;

        $r14 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.app.NotificationChannel: java.lang.String mName> = $r14;

        goto label04;

     label03:
        r0.<android.app.NotificationChannel: java.lang.String mName> = null;

     label04:
        $b2 = virtualinvoke r1.<android.os.Parcel: byte readByte()>();

        if $b2 == 0 goto label05;

        $r13 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.app.NotificationChannel: java.lang.String mDesc> = $r13;

        goto label06;

     label05:
        r0.<android.app.NotificationChannel: java.lang.String mDesc> = null;

     label06:
        $i3 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.app.NotificationChannel: int mImportance> = $i3;

        $b4 = virtualinvoke r1.<android.os.Parcel: byte readByte()>();

        if $b4 == 0 goto label07;

        z5 = 1;

        goto label08;

     label07:
        z5 = 0;

     label08:
        r0.<android.app.NotificationChannel: boolean mBypassDnd> = z5;

        $i5 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.app.NotificationChannel: int mLockscreenVisibility> = $i5;

        $b6 = virtualinvoke r1.<android.os.Parcel: byte readByte()>();

        if $b6 == 0 goto label09;

        $r10 = <android.net.Uri: android.os.Parcelable$Creator CREATOR>;

        $r11 = interfaceinvoke $r10.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        $r12 = (android.net.Uri) $r11;

        r0.<android.app.NotificationChannel: android.net.Uri mSound> = $r12;

        goto label10;

     label09:
        r0.<android.app.NotificationChannel: android.net.Uri mSound> = null;

     label10:
        $b7 = virtualinvoke r1.<android.os.Parcel: byte readByte()>();

        if $b7 == 0 goto label11;

        z6 = 1;

        goto label12;

     label11:
        z6 = 0;

     label12:
        r0.<android.app.NotificationChannel: boolean mLights> = z6;

        $r4 = virtualinvoke r1.<android.os.Parcel: long[] createLongArray()>();

        r0.<android.app.NotificationChannel: long[] mVibration> = $r4;

        $i8 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.app.NotificationChannel: int mUserLockedFields> = $i8;

        $b9 = virtualinvoke r1.<android.os.Parcel: byte readByte()>();

        if $b9 == 0 goto label13;

        z7 = 1;

        goto label14;

     label13:
        z7 = 0;

     label14:
        r0.<android.app.NotificationChannel: boolean mFgServiceShown> = z7;

        $b10 = virtualinvoke r1.<android.os.Parcel: byte readByte()>();

        if $b10 == 0 goto label15;

        z8 = 1;

        goto label16;

     label15:
        z8 = 0;

     label16:
        r0.<android.app.NotificationChannel: boolean mVibrationEnabled> = z8;

        $b11 = virtualinvoke r1.<android.os.Parcel: byte readByte()>();

        if $b11 == 0 goto label17;

        z9 = 1;

        goto label18;

     label17:
        z9 = 0;

     label18:
        r0.<android.app.NotificationChannel: boolean mShowBadge> = z9;

        z10 = 0;

        $b12 = virtualinvoke r1.<android.os.Parcel: byte readByte()>();

        if $b12 == 0 goto label19;

        z10 = 1;

     label19:
        r0.<android.app.NotificationChannel: boolean mDeleted> = z10;

        $b13 = virtualinvoke r1.<android.os.Parcel: byte readByte()>();

        if $b13 == 0 goto label20;

        $r9 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.app.NotificationChannel: java.lang.String mGroup> = $r9;

        goto label21;

     label20:
        r0.<android.app.NotificationChannel: java.lang.String mGroup> = null;

     label21:
        $i14 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i14 <= 0 goto label22;

        $r7 = <android.media.AudioAttributes: android.os.Parcelable$Creator CREATOR>;

        $r8 = interfaceinvoke $r7.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r16 = (android.media.AudioAttributes) $r8;

     label22:
        r0.<android.app.NotificationChannel: android.media.AudioAttributes mAudioAttributes> = r16;

        $i15 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.app.NotificationChannel: int mLightColor> = $i15;

        $z1 = virtualinvoke r1.<android.os.Parcel: boolean readBoolean()>();

        r0.<android.app.NotificationChannel: boolean mBlockableSystem> = $z1;

        $i16 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.app.NotificationChannel: int mAllowBubbles> = $i16;

        $z2 = virtualinvoke r1.<android.os.Parcel: boolean readBoolean()>();

        r0.<android.app.NotificationChannel: boolean mImportanceLockedByOEM> = $z2;

        $i17 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.app.NotificationChannel: int mOriginalImportance> = $i17;

        $r5 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.app.NotificationChannel: java.lang.String mParentId> = $r5;

        $r6 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.app.NotificationChannel: java.lang.String mConversationId> = $r6;

        $z3 = virtualinvoke r1.<android.os.Parcel: boolean readBoolean()>();

        r0.<android.app.NotificationChannel: boolean mDemoted> = $z3;

        $z4 = virtualinvoke r1.<android.os.Parcel: boolean readBoolean()>();

        r0.<android.app.NotificationChannel: boolean mImportantConvo> = $z4;

        return;
    }

    public void <init>(java.lang.String, java.lang.CharSequence, int)
    {
        android.app.NotificationChannel r0;
        java.lang.CharSequence r1;
        int i0;
        android.net.Uri $r2;
        android.media.AudioAttributes $r3;
        java.lang.String $r4, $r5, r6, r7;

        r0 := @this: android.app.NotificationChannel;

        r6 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.CharSequence;

        i0 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.app.NotificationChannel: int mImportance> = -1000;

        r0.<android.app.NotificationChannel: int mOriginalImportance> = -1000;

        r0.<android.app.NotificationChannel: int mLockscreenVisibility> = -1000;

        $r2 = <android.provider.Settings$System: android.net.Uri DEFAULT_NOTIFICATION_URI>;

        r0.<android.app.NotificationChannel: android.net.Uri mSound> = $r2;

        r0.<android.app.NotificationChannel: int mLightColor> = 0;

        r0.<android.app.NotificationChannel: boolean mShowBadge> = 1;

        r0.<android.app.NotificationChannel: boolean mDeleted> = 0;

        $r3 = <android.app.Notification: android.media.AudioAttributes AUDIO_ATTRIBUTES_DEFAULT>;

        r0.<android.app.NotificationChannel: android.media.AudioAttributes mAudioAttributes> = $r3;

        r0.<android.app.NotificationChannel: boolean mBlockableSystem> = 0;

        r0.<android.app.NotificationChannel: int mAllowBubbles> = -1;

        r0.<android.app.NotificationChannel: java.lang.String mParentId> = null;

        r0.<android.app.NotificationChannel: java.lang.String mConversationId> = null;

        r0.<android.app.NotificationChannel: boolean mDemoted> = 0;

        r0.<android.app.NotificationChannel: boolean mImportantConvo> = 0;

        $r4 = specialinvoke r0.<android.app.NotificationChannel: java.lang.String getTrimmedString(java.lang.String)>(r6);

        r0.<android.app.NotificationChannel: java.lang.String mId> = $r4;

        r7 = null;

        if r1 == null goto label1;

        $r5 = interfaceinvoke r1.<java.lang.CharSequence: java.lang.String toString()>();

        r7 = specialinvoke r0.<android.app.NotificationChannel: java.lang.String getTrimmedString(java.lang.String)>($r5);

     label1:
        r0.<android.app.NotificationChannel: java.lang.String mName> = r7;

        r0.<android.app.NotificationChannel: int mImportance> = i0;

        return;
    }

    private java.lang.String getFieldsString()
    {
        android.app.NotificationChannel r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r4, $r21, $r24, $r35, $r52, $r55, $r61, r62;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.net.Uri $r13;
        long[] $r20;
        android.media.AudioAttributes $r39;

        r0 := @this: android.app.NotificationChannel;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mDescription=");

        $r4 = r0.<android.app.NotificationChannel: java.lang.String mDesc>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r4);

        if $z0 != 0 goto label1;

        r62 = "hasDescription ";

        goto label2;

     label1:
        r62 = "";

     label2:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r62);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mImportance=");

        $i0 = r0.<android.app.NotificationChannel: int mImportance>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mBypassDnd=");

        $z1 = r0.<android.app.NotificationChannel: boolean mBypassDnd>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mLockscreenVisibility=");

        $i1 = r0.<android.app.NotificationChannel: int mLockscreenVisibility>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mSound=");

        $r13 = r0.<android.app.NotificationChannel: android.net.Uri mSound>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mLights=");

        $z2 = r0.<android.app.NotificationChannel: boolean mLights>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mLightColor=");

        $i2 = r0.<android.app.NotificationChannel: int mLightColor>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mVibration=");

        $r20 = r0.<android.app.NotificationChannel: long[] mVibration>;

        $r21 = staticinvoke <java.util.Arrays: java.lang.String toString(long[])>($r20);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mUserLockedFields=");

        $i3 = r0.<android.app.NotificationChannel: int mUserLockedFields>;

        $r24 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mFgServiceShown=");

        $z3 = r0.<android.app.NotificationChannel: boolean mFgServiceShown>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mVibrationEnabled=");

        $z4 = r0.<android.app.NotificationChannel: boolean mVibrationEnabled>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mShowBadge=");

        $z5 = r0.<android.app.NotificationChannel: boolean mShowBadge>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z5);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mDeleted=");

        $z6 = r0.<android.app.NotificationChannel: boolean mDeleted>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z6);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mGroup=\'");

        $r35 = r0.<android.app.NotificationChannel: java.lang.String mGroup>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mAudioAttributes=");

        $r39 = r0.<android.app.NotificationChannel: android.media.AudioAttributes mAudioAttributes>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r39);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mBlockableSystem=");

        $z7 = r0.<android.app.NotificationChannel: boolean mBlockableSystem>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z7);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mAllowBubbles=");

        $i4 = r0.<android.app.NotificationChannel: int mAllowBubbles>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mImportanceLockedByOEM=");

        $z8 = r0.<android.app.NotificationChannel: boolean mImportanceLockedByOEM>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z8);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mImportanceLockedDefaultApp=");

        $z9 = r0.<android.app.NotificationChannel: boolean mImportanceLockedDefaultApp>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z9);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mOriginalImp=");

        $i5 = r0.<android.app.NotificationChannel: int mOriginalImportance>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mParent=");

        $r52 = r0.<android.app.NotificationChannel: java.lang.String mParentId>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mConversationId=");

        $r55 = r0.<android.app.NotificationChannel: java.lang.String mConversationId>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r55);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mDemoted=");

        $z10 = r0.<android.app.NotificationChannel: boolean mDemoted>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z10);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mImportantConvo=");

        $z11 = r0.<android.app.NotificationChannel: boolean mImportantConvo>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z11);

        $r61 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r61;
    }

    private android.net.Uri getSoundForBackup(android.content.Context)
    {
        android.app.NotificationChannel r0;
        android.net.Uri r1, $r2, $r4, r6;
        boolean $z0;
        android.content.ContentResolver $r3;
        android.content.Context r5;

        r0 := @this: android.app.NotificationChannel;

        r5 := @parameter0: android.content.Context;

        r1 = virtualinvoke r0.<android.app.NotificationChannel: android.net.Uri getSound()>();

        if r1 == null goto label3;

        $r2 = <android.net.Uri: android.net.Uri EMPTY>;

        $z0 = virtualinvoke $r2.<android.net.Uri: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        goto label3;

     label1:
        $r3 = virtualinvoke r5.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r6 = virtualinvoke $r3.<android.content.ContentResolver: android.net.Uri canonicalize(android.net.Uri)>(r1);

        if r6 != null goto label2;

        $r4 = <android.provider.Settings$System: android.net.Uri DEFAULT_NOTIFICATION_URI>;

        return $r4;

     label2:
        return r6;

     label3:
        return null;
    }

    private java.lang.String getTrimmedString(java.lang.String)
    {
        android.app.NotificationChannel r0;
        java.lang.String r1, $r2;
        int $i0;

        r0 := @this: android.app.NotificationChannel;

        r1 := @parameter0: java.lang.String;

        if r1 == null goto label1;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 <= 1000 goto label1;

        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, 1000);

        return $r2;

     label1:
        return r1;
    }

    private static java.lang.String longArrayToString(long[])
    {
        long[] r0;
        java.lang.StringBuffer $r2;
        int $i0, $i1, $i2, $i3, $i4, i7;
        long $l5, $l6;
        java.lang.String $r6;

        r0 := @parameter0: long[];

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        if r0 == null goto label3;

        $i0 = lengthof r0;

        if $i0 <= 0 goto label3;

        i7 = 0;

     label1:
        $i1 = lengthof r0;

        $i2 = $i1 - 1;

        if i7 >= $i2 goto label2;

        $l6 = r0[i7];

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(long)>($l6);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",");

        i7 = i7 + 1;

        goto label1;

     label2:
        $i3 = lengthof r0;

        $i4 = $i3 - 1;

        $l5 = r0[$i4];

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(long)>($l5);

     label3:
        $r6 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r6;
    }

    private void populateFromXml(org.xmlpull.v1.XmlPullParser, boolean, android.content.Context)
    {
        android.app.NotificationChannel r0;
        org.xmlpull.v1.XmlPullParser r1;
        boolean z0, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, z10, z11;
        android.net.Uri r2, r10;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.media.AudioAttributes $r3;
        long[] $r4;
        java.lang.String $r5, $r6, $r7, $r9;
        android.content.Context r8;

        r0 := @this: android.app.NotificationChannel;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        z0 := @parameter1: boolean;

        r8 := @parameter2: android.content.Context;

        if z0 == 0 goto label2;

        if r8 == null goto label1;

        goto label2;

     label1:
        z10 = 0;

        goto label3;

     label2:
        z10 = 1;

     label3:
        staticinvoke <com.android.internal.util.Preconditions: void checkArgument(boolean,java.lang.Object)>(z10, "forRestore is true but got null context");

        $r9 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "desc");

        virtualinvoke r0.<android.app.NotificationChannel: void setDescription(java.lang.String)>($r9);

        $i5 = staticinvoke <android.app.NotificationChannel: int safeInt(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r1, "priority", 0);

        if $i5 == 0 goto label4;

        z11 = 1;

        goto label5;

     label4:
        z11 = 0;

     label5:
        virtualinvoke r0.<android.app.NotificationChannel: void setBypassDnd(boolean)>(z11);

        $i0 = staticinvoke <android.app.NotificationChannel: int safeInt(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r1, "visibility", -1000);

        virtualinvoke r0.<android.app.NotificationChannel: void setLockscreenVisibility(int)>($i0);

        r2 = staticinvoke <android.app.NotificationChannel: android.net.Uri safeUri(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "sound");

        if z0 == 0 goto label6;

        r10 = specialinvoke r0.<android.app.NotificationChannel: android.net.Uri restoreSoundUri(android.content.Context,android.net.Uri)>(r8, r2);

        goto label7;

     label6:
        r10 = r2;

     label7:
        $r3 = staticinvoke <android.app.NotificationChannel: android.media.AudioAttributes safeAudioAttributes(org.xmlpull.v1.XmlPullParser)>(r1);

        virtualinvoke r0.<android.app.NotificationChannel: void setSound(android.net.Uri,android.media.AudioAttributes)>(r10, $r3);

        $z2 = staticinvoke <android.app.NotificationChannel: boolean safeBool(org.xmlpull.v1.XmlPullParser,java.lang.String,boolean)>(r1, "lights", 0);

        virtualinvoke r0.<android.app.NotificationChannel: void enableLights(boolean)>($z2);

        $i1 = staticinvoke <android.app.NotificationChannel: int safeInt(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r1, "light_color", 0);

        virtualinvoke r0.<android.app.NotificationChannel: void setLightColor(int)>($i1);

        $r4 = staticinvoke <android.app.NotificationChannel: long[] safeLongArray(org.xmlpull.v1.XmlPullParser,java.lang.String,long[])>(r1, "vibration", null);

        virtualinvoke r0.<android.app.NotificationChannel: void setVibrationPattern(long[])>($r4);

        $z3 = staticinvoke <android.app.NotificationChannel: boolean safeBool(org.xmlpull.v1.XmlPullParser,java.lang.String,boolean)>(r1, "vibration_enabled", 0);

        virtualinvoke r0.<android.app.NotificationChannel: void enableVibration(boolean)>($z3);

        $z4 = staticinvoke <android.app.NotificationChannel: boolean safeBool(org.xmlpull.v1.XmlPullParser,java.lang.String,boolean)>(r1, "show_badge", 0);

        virtualinvoke r0.<android.app.NotificationChannel: void setShowBadge(boolean)>($z4);

        $z5 = staticinvoke <android.app.NotificationChannel: boolean safeBool(org.xmlpull.v1.XmlPullParser,java.lang.String,boolean)>(r1, "deleted", 0);

        virtualinvoke r0.<android.app.NotificationChannel: void setDeleted(boolean)>($z5);

        $r5 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "group");

        virtualinvoke r0.<android.app.NotificationChannel: void setGroup(java.lang.String)>($r5);

        $i2 = staticinvoke <android.app.NotificationChannel: int safeInt(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r1, "locked", 0);

        virtualinvoke r0.<android.app.NotificationChannel: void lockFields(int)>($i2);

        $z6 = staticinvoke <android.app.NotificationChannel: boolean safeBool(org.xmlpull.v1.XmlPullParser,java.lang.String,boolean)>(r1, "fgservice", 0);

        virtualinvoke r0.<android.app.NotificationChannel: void setFgServiceShown(boolean)>($z6);

        $z7 = staticinvoke <android.app.NotificationChannel: boolean safeBool(org.xmlpull.v1.XmlPullParser,java.lang.String,boolean)>(r1, "blockable_system", 0);

        virtualinvoke r0.<android.app.NotificationChannel: void setBlockable(boolean)>($z7);

        $i3 = staticinvoke <android.app.NotificationChannel: int safeInt(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r1, "allow_bubbles", -1);

        virtualinvoke r0.<android.app.NotificationChannel: void setAllowBubbles(int)>($i3);

        $i4 = staticinvoke <android.app.NotificationChannel: int safeInt(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r1, "orig_imp", -1000);

        virtualinvoke r0.<android.app.NotificationChannel: void setOriginalImportance(int)>($i4);

        $r6 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "parent");

        $r7 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "conv_id");

        virtualinvoke r0.<android.app.NotificationChannel: void setConversationId(java.lang.String,java.lang.String)>($r6, $r7);

        $z8 = staticinvoke <android.app.NotificationChannel: boolean safeBool(org.xmlpull.v1.XmlPullParser,java.lang.String,boolean)>(r1, "dem", 0);

        virtualinvoke r0.<android.app.NotificationChannel: void setDemoted(boolean)>($z8);

        $z9 = staticinvoke <android.app.NotificationChannel: boolean safeBool(org.xmlpull.v1.XmlPullParser,java.lang.String,boolean)>(r1, "imp_conv", 0);

        virtualinvoke r0.<android.app.NotificationChannel: void setImportantConversation(boolean)>($z9);

        return;
    }

    private android.net.Uri restoreSoundUri(android.content.Context, android.net.Uri)
    {
        android.app.NotificationChannel r0;
        android.net.Uri $r1, $r2, $r3, r5, r7;
        boolean $z0;
        android.content.Context r4;
        android.content.ContentResolver r6;

        r0 := @this: android.app.NotificationChannel;

        r4 := @parameter0: android.content.Context;

        r5 := @parameter1: android.net.Uri;

        if r5 == null goto label3;

        $r1 = <android.net.Uri: android.net.Uri EMPTY>;

        $z0 = virtualinvoke $r1.<android.net.Uri: boolean equals(java.lang.Object)>(r5);

        if $z0 == 0 goto label1;

        goto label3;

     label1:
        r6 = virtualinvoke r4.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r7 = virtualinvoke r6.<android.content.ContentResolver: android.net.Uri canonicalize(android.net.Uri)>(r5);

        if r7 != null goto label2;

        $r3 = <android.provider.Settings$System: android.net.Uri DEFAULT_NOTIFICATION_URI>;

        return $r3;

     label2:
        $r2 = virtualinvoke r6.<android.content.ContentResolver: android.net.Uri uncanonicalize(android.net.Uri)>(r7);

        return $r2;

     label3:
        return null;
    }

    private static android.media.AudioAttributes safeAudioAttributes(org.xmlpull.v1.XmlPullParser)
    {
        org.xmlpull.v1.XmlPullParser r0;
        int i0, i1, i2;
        android.media.AudioAttributes$Builder $r1, $r2, $r3, $r4;
        android.media.AudioAttributes $r5;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        i0 = staticinvoke <android.app.NotificationChannel: int safeInt(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r0, "usage", 5);

        i1 = staticinvoke <android.app.NotificationChannel: int safeInt(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r0, "content_type", 4);

        i2 = staticinvoke <android.app.NotificationChannel: int safeInt(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r0, "flags", 0);

        $r1 = new android.media.AudioAttributes$Builder;

        specialinvoke $r1.<android.media.AudioAttributes$Builder: void <init>()>();

        $r2 = virtualinvoke $r1.<android.media.AudioAttributes$Builder: android.media.AudioAttributes$Builder setUsage(int)>(i0);

        $r3 = virtualinvoke $r2.<android.media.AudioAttributes$Builder: android.media.AudioAttributes$Builder setContentType(int)>(i1);

        $r4 = virtualinvoke $r3.<android.media.AudioAttributes$Builder: android.media.AudioAttributes$Builder setFlags(int)>(i2);

        $r5 = virtualinvoke $r4.<android.media.AudioAttributes$Builder: android.media.AudioAttributes build()>();

        return $r5;
    }

    private static boolean safeBool(org.xmlpull.v1.XmlPullParser, java.lang.String, boolean)
    {
        java.lang.String r0, r2;
        boolean z0, $z1, $z2;
        org.xmlpull.v1.XmlPullParser r1;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r0 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        r2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, r0);

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z1 == 0 goto label1;

        return z0;

     label1:
        $z2 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>(r2);

        return $z2;
    }

    private static int safeInt(org.xmlpull.v1.XmlPullParser, java.lang.String, int)
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String r1, $r2;
        int i0, $i1;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r2 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, r1);

        $i1 = staticinvoke <android.app.NotificationChannel: int tryParseInt(java.lang.String,int)>($r2, i0);

        return $i1;
    }

    private static long[] safeLongArray(org.xmlpull.v1.XmlPullParser, java.lang.String, long[])
    {
        boolean $z0;
        int $i0, $i1, i3;
        java.lang.String $r0, r3, r5;
        long $l2;
        java.lang.Throwable $r1;
        org.xmlpull.v1.XmlPullParser r2;
        long[] r4, r7;
        java.lang.String[] r6;

        r2 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: long[];

        r5 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, r3);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r5);

        if $z0 == 0 goto label1;

        return r4;

     label1:
        r6 = virtualinvoke r5.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        $i0 = lengthof r6;

        r7 = newarray (long)[$i0];

        i3 = 0;

     label2:
        $i1 = lengthof r6;

        if i3 >= $i1 goto label7;

     label3:
        $r0 = r6[i3];

        $l2 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r0);

        r7[i3] = $l2;

     label4:
        goto label6;

     label5:
        $r1 := @caughtexception;

        r7[i3] = 0L;

     label6:
        i3 = i3 + 1;

        goto label2;

     label7:
        return r7;

        catch java.lang.NumberFormatException from label3 to label4 with label5;
    }

    private static android.net.Uri safeUri(org.xmlpull.v1.XmlPullParser, java.lang.String)
    {
        java.lang.String r0, r2;
        org.xmlpull.v1.XmlPullParser r1;
        android.net.Uri r3;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r0 := @parameter1: java.lang.String;

        r2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, r0);

        if r2 != null goto label1;

        r3 = null;

        goto label2;

     label1:
        r3 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>(r2);

     label2:
        return r3;
    }

    private static int tryParseInt(java.lang.String, int)
    {
        int i0, i1;
        boolean $z0;
        java.lang.Throwable $r0;
        java.lang.String r1;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label1;

        return i0;

     label1:
        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r1);

     label2:
        return i1;

     label3:
        $r0 := @caughtexception;

        return i0;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    private void writeXml(org.xmlpull.v1.XmlSerializer, boolean, android.content.Context) throws java.io.IOException
    {
        android.app.NotificationChannel r0;
        org.xmlpull.v1.XmlSerializer r1;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, z18;
        java.lang.String $r4, $r7, $r8, $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r23, $r25, $r27, $r29, $r31, $r33, $r36, $r38, $r40, $r42, $r45, $r48, $r51, $r53, $r55, $r57, $r59, $r61, $r64, $r67;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        android.media.AudioAttributes $r5, $r44, $r47, $r50;
        long[] $r6, $r35;
        java.lang.CharSequence $r63, $r68;
        android.content.Context r66;
        android.net.Uri r69;

        r0 := @this: android.app.NotificationChannel;

        r1 := @parameter0: org.xmlpull.v1.XmlSerializer;

        z0 := @parameter1: boolean;

        r66 := @parameter2: android.content.Context;

        if z0 == 0 goto label02;

        if r66 == null goto label01;

        goto label02;

     label01:
        z18 = 0;

        goto label03;

     label02:
        z18 = 1;

     label03:
        staticinvoke <com.android.internal.util.Preconditions: void checkArgument(boolean,java.lang.Object)>(z18, "forBackup is true but got null context");

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "channel");

        $r67 = virtualinvoke r0.<android.app.NotificationChannel: java.lang.String getId()>();

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "id", $r67);

        $r68 = virtualinvoke r0.<android.app.NotificationChannel: java.lang.CharSequence getName()>();

        if $r68 == null goto label04;

        $r63 = virtualinvoke r0.<android.app.NotificationChannel: java.lang.CharSequence getName()>();

        $r64 = interfaceinvoke $r63.<java.lang.CharSequence: java.lang.String toString()>();

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", $r64);

     label04:
        $r4 = virtualinvoke r0.<android.app.NotificationChannel: java.lang.String getDescription()>();

        if $r4 == null goto label05;

        $r61 = virtualinvoke r0.<android.app.NotificationChannel: java.lang.String getDescription()>();

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "desc", $r61);

     label05:
        $i0 = virtualinvoke r0.<android.app.NotificationChannel: int getImportance()>();

        if $i0 == -1000 goto label06;

        $i14 = virtualinvoke r0.<android.app.NotificationChannel: int getImportance()>();

        $r59 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i14);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "importance", $r59);

     label06:
        $z1 = virtualinvoke r0.<android.app.NotificationChannel: boolean canBypassDnd()>();

        if $z1 == 0 goto label07;

        $r57 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(2);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "priority", $r57);

     label07:
        $i1 = virtualinvoke r0.<android.app.NotificationChannel: int getLockscreenVisibility()>();

        if $i1 == -1000 goto label08;

        $i13 = virtualinvoke r0.<android.app.NotificationChannel: int getLockscreenVisibility()>();

        $r55 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i13);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "visibility", $r55);

     label08:
        if z0 == 0 goto label09;

        r69 = specialinvoke r0.<android.app.NotificationChannel: android.net.Uri getSoundForBackup(android.content.Context)>(r66);

        goto label10;

     label09:
        r69 = virtualinvoke r0.<android.app.NotificationChannel: android.net.Uri getSound()>();

     label10:
        if r69 == null goto label11;

        $r53 = virtualinvoke r69.<android.net.Uri: java.lang.String toString()>();

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "sound", $r53);

     label11:
        $r5 = virtualinvoke r0.<android.app.NotificationChannel: android.media.AudioAttributes getAudioAttributes()>();

        if $r5 == null goto label12;

        $r44 = virtualinvoke r0.<android.app.NotificationChannel: android.media.AudioAttributes getAudioAttributes()>();

        $i10 = virtualinvoke $r44.<android.media.AudioAttributes: int getUsage()>();

        $r45 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i10);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "usage", $r45);

        $r47 = virtualinvoke r0.<android.app.NotificationChannel: android.media.AudioAttributes getAudioAttributes()>();

        $i11 = virtualinvoke $r47.<android.media.AudioAttributes: int getContentType()>();

        $r48 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i11);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "content_type", $r48);

        $r50 = virtualinvoke r0.<android.app.NotificationChannel: android.media.AudioAttributes getAudioAttributes()>();

        $i12 = virtualinvoke $r50.<android.media.AudioAttributes: int getFlags()>();

        $r51 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i12);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "flags", $r51);

     label12:
        $z2 = virtualinvoke r0.<android.app.NotificationChannel: boolean shouldShowLights()>();

        if $z2 == 0 goto label13;

        $z17 = virtualinvoke r0.<android.app.NotificationChannel: boolean shouldShowLights()>();

        $r42 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>($z17);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "lights", $r42);

     label13:
        $i2 = virtualinvoke r0.<android.app.NotificationChannel: int getLightColor()>();

        if $i2 == 0 goto label14;

        $i9 = virtualinvoke r0.<android.app.NotificationChannel: int getLightColor()>();

        $r40 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i9);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "light_color", $r40);

     label14:
        $z3 = virtualinvoke r0.<android.app.NotificationChannel: boolean shouldVibrate()>();

        if $z3 == 0 goto label15;

        $z16 = virtualinvoke r0.<android.app.NotificationChannel: boolean shouldVibrate()>();

        $r38 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>($z16);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "vibration_enabled", $r38);

     label15:
        $r6 = virtualinvoke r0.<android.app.NotificationChannel: long[] getVibrationPattern()>();

        if $r6 == null goto label16;

        $r35 = virtualinvoke r0.<android.app.NotificationChannel: long[] getVibrationPattern()>();

        $r36 = staticinvoke <android.app.NotificationChannel: java.lang.String longArrayToString(long[])>($r35);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "vibration", $r36);

     label16:
        $i3 = virtualinvoke r0.<android.app.NotificationChannel: int getUserLockedFields()>();

        if $i3 == 0 goto label17;

        $i8 = virtualinvoke r0.<android.app.NotificationChannel: int getUserLockedFields()>();

        $r33 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i8);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "locked", $r33);

     label17:
        $z4 = virtualinvoke r0.<android.app.NotificationChannel: boolean isFgServiceShown()>();

        if $z4 == 0 goto label18;

        $z15 = virtualinvoke r0.<android.app.NotificationChannel: boolean isFgServiceShown()>();

        $r31 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>($z15);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "fgservice", $r31);

     label18:
        $z5 = virtualinvoke r0.<android.app.NotificationChannel: boolean canShowBadge()>();

        if $z5 == 0 goto label19;

        $z14 = virtualinvoke r0.<android.app.NotificationChannel: boolean canShowBadge()>();

        $r29 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>($z14);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "show_badge", $r29);

     label19:
        $z6 = virtualinvoke r0.<android.app.NotificationChannel: boolean isDeleted()>();

        if $z6 == 0 goto label20;

        $z13 = virtualinvoke r0.<android.app.NotificationChannel: boolean isDeleted()>();

        $r27 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>($z13);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "deleted", $r27);

     label20:
        $r7 = virtualinvoke r0.<android.app.NotificationChannel: java.lang.String getGroup()>();

        if $r7 == null goto label21;

        $r25 = virtualinvoke r0.<android.app.NotificationChannel: java.lang.String getGroup()>();

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "group", $r25);

     label21:
        $z7 = virtualinvoke r0.<android.app.NotificationChannel: boolean isBlockable()>();

        if $z7 == 0 goto label22;

        $z12 = virtualinvoke r0.<android.app.NotificationChannel: boolean isBlockable()>();

        $r23 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>($z12);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "blockable_system", $r23);

     label22:
        $i4 = virtualinvoke r0.<android.app.NotificationChannel: int getAllowBubbles()>();

        if $i4 == -1 goto label23;

        $i7 = virtualinvoke r0.<android.app.NotificationChannel: int getAllowBubbles()>();

        $r21 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i7);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "allow_bubbles", $r21);

     label23:
        $i5 = virtualinvoke r0.<android.app.NotificationChannel: int getOriginalImportance()>();

        if $i5 == -1000 goto label24;

        $i6 = virtualinvoke r0.<android.app.NotificationChannel: int getOriginalImportance()>();

        $r19 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i6);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "orig_imp", $r19);

     label24:
        $r8 = virtualinvoke r0.<android.app.NotificationChannel: java.lang.String getParentChannelId()>();

        if $r8 == null goto label25;

        $r17 = virtualinvoke r0.<android.app.NotificationChannel: java.lang.String getParentChannelId()>();

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "parent", $r17);

     label25:
        $r9 = virtualinvoke r0.<android.app.NotificationChannel: java.lang.String getConversationId()>();

        if $r9 == null goto label26;

        $r15 = virtualinvoke r0.<android.app.NotificationChannel: java.lang.String getConversationId()>();

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "conv_id", $r15);

     label26:
        $z8 = virtualinvoke r0.<android.app.NotificationChannel: boolean isDemoted()>();

        if $z8 == 0 goto label27;

        $z11 = virtualinvoke r0.<android.app.NotificationChannel: boolean isDemoted()>();

        $r13 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>($z11);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "dem", $r13);

     label27:
        $z9 = virtualinvoke r0.<android.app.NotificationChannel: boolean isImportantConversation()>();

        if $z9 == 0 goto label28;

        $z10 = virtualinvoke r0.<android.app.NotificationChannel: boolean isImportantConversation()>();

        $r11 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>($z10);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "imp_conv", $r11);

     label28:
        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "channel");

        return;
    }

    public boolean canBubble()
    {
        android.app.NotificationChannel r0;
        int i0;
        boolean z0;

        r0 := @this: android.app.NotificationChannel;

        i0 = r0.<android.app.NotificationChannel: int mAllowBubbles>;

        z0 = 1;

        if i0 != 1 goto label1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean canBypassDnd()
    {
        android.app.NotificationChannel r0;
        boolean $z0;

        r0 := @this: android.app.NotificationChannel;

        $z0 = r0.<android.app.NotificationChannel: boolean mBypassDnd>;

        return $z0;
    }

    public boolean canShowBadge()
    {
        android.app.NotificationChannel r0;
        boolean $z0;

        r0 := @this: android.app.NotificationChannel;

        $z0 = r0.<android.app.NotificationChannel: boolean mShowBadge>;

        return $z0;
    }

    public int describeContents()
    {
        android.app.NotificationChannel r0;

        r0 := @this: android.app.NotificationChannel;

        return 0;
    }

    public void dump(java.io.PrintWriter, java.lang.String, boolean)
    {
        android.app.NotificationChannel r0;
        java.io.PrintWriter r1;
        java.lang.String r2, $r5, $r10, $r16, r18, r19, r21;
        boolean z0;
        java.lang.StringBuilder $r3, $r13;
        java.lang.CharSequence $r17;

        r0 := @this: android.app.NotificationChannel;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        r18 = r0.<android.app.NotificationChannel: java.lang.String mName>;

        r19 = r18;

        if z0 == 0 goto label1;

        $r17 = staticinvoke <android.text.TextUtils: java.lang.CharSequence trimToLengthWithEllipsis(java.lang.CharSequence,int)>(r18, 3);

        r19 = (java.lang.String) $r17;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NotificationChannel{mId=\'");

        $r5 = r0.<android.app.NotificationChannel: java.lang.String mId>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mName=");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19);

        $r10 = specialinvoke r0.<android.app.NotificationChannel: java.lang.String getFieldsString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        r21 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r21);

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r16);

        return;
    }

    public void dumpDebug(android.util.proto.ProtoOutputStream, long)
    {
        android.app.NotificationChannel r0;
        android.util.proto.ProtoOutputStream r1;
        int i0, $i1, $i2, $i3, $i4, $i5, i9;
        java.lang.String $r2, $r3, $r4, $r5, $r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        long $l6, l7, l8;
        android.net.Uri r7;
        long[] r8;
        android.media.AudioAttributes r9;

        r0 := @this: android.app.NotificationChannel;

        r1 := @parameter0: android.util.proto.ProtoOutputStream;

        l7 := @parameter1: long;

        l8 = virtualinvoke r1.<android.util.proto.ProtoOutputStream: long start(long)>(l7);

        $r2 = r0.<android.app.NotificationChannel: java.lang.String mId>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,java.lang.String)>(1138166333441L, $r2);

        $r3 = r0.<android.app.NotificationChannel: java.lang.String mName>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,java.lang.String)>(1138166333442L, $r3);

        $r4 = r0.<android.app.NotificationChannel: java.lang.String mDesc>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,java.lang.String)>(1138166333443L, $r4);

        $i1 = r0.<android.app.NotificationChannel: int mImportance>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464260L, $i1);

        $z0 = r0.<android.app.NotificationChannel: boolean mBypassDnd>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,boolean)>(1133871366149L, $z0);

        $i2 = r0.<android.app.NotificationChannel: int mLockscreenVisibility>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464262L, $i2);

        r7 = r0.<android.app.NotificationChannel: android.net.Uri mSound>;

        if r7 == null goto label1;

        $r6 = virtualinvoke r7.<android.net.Uri: java.lang.String toString()>();

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,java.lang.String)>(1138166333447L, $r6);

     label1:
        $z1 = r0.<android.app.NotificationChannel: boolean mLights>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,boolean)>(1133871366152L, $z1);

        $i3 = r0.<android.app.NotificationChannel: int mLightColor>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464265L, $i3);

        r8 = r0.<android.app.NotificationChannel: long[] mVibration>;

        if r8 == null goto label3;

        i0 = lengthof r8;

        i9 = 0;

     label2:
        if i9 >= i0 goto label3;

        $l6 = r8[i9];

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,long)>(2211908157450L, $l6);

        i9 = i9 + 1;

        goto label2;

     label3:
        $i4 = r0.<android.app.NotificationChannel: int mUserLockedFields>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464267L, $i4);

        $z2 = r0.<android.app.NotificationChannel: boolean mFgServiceShown>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,boolean)>(1133871366162L, $z2);

        $z3 = r0.<android.app.NotificationChannel: boolean mVibrationEnabled>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,boolean)>(1133871366156L, $z3);

        $z4 = r0.<android.app.NotificationChannel: boolean mShowBadge>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,boolean)>(1133871366157L, $z4);

        $z5 = r0.<android.app.NotificationChannel: boolean mDeleted>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,boolean)>(1133871366158L, $z5);

        $r5 = r0.<android.app.NotificationChannel: java.lang.String mGroup>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,java.lang.String)>(1138166333455L, $r5);

        r9 = r0.<android.app.NotificationChannel: android.media.AudioAttributes mAudioAttributes>;

        if r9 == null goto label4;

        virtualinvoke r9.<android.media.AudioAttributes: void dumpDebug(android.util.proto.ProtoOutputStream,long)>(r1, 1146756268048L);

     label4:
        $z6 = r0.<android.app.NotificationChannel: boolean mBlockableSystem>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,boolean)>(1133871366161L, $z6);

        $i5 = r0.<android.app.NotificationChannel: int mAllowBubbles>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1133871366163L, $i5);

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void end(long)>(l8);

        return;
    }

    public void enableLights(boolean)
    {
        android.app.NotificationChannel r0;
        boolean z0;

        r0 := @this: android.app.NotificationChannel;

        z0 := @parameter0: boolean;

        r0.<android.app.NotificationChannel: boolean mLights> = z0;

        return;
    }

    public void enableVibration(boolean)
    {
        android.app.NotificationChannel r0;
        boolean z0;

        r0 := @this: android.app.NotificationChannel;

        z0 := @parameter0: boolean;

        r0.<android.app.NotificationChannel: boolean mVibrationEnabled> = z0;

        return;
    }

    public boolean equals(java.lang.Object)
    {
        android.app.NotificationChannel r0, r22;
        java.lang.Class $r1, $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, z31;
        java.lang.String $r3, $r4, $r7, $r8, $r13, $r14, $r17, $r18, $r19, $r20;
        java.lang.CharSequence $r5, $r6;
        android.net.Uri $r9, $r10;
        long[] $r11, $r12;
        android.media.AudioAttributes $r15, $r16;
        java.lang.Object r21;

        r0 := @this: android.app.NotificationChannel;

        r21 := @parameter0: java.lang.Object;

        z31 = 1;

        if r0 != r21 goto label1;

        return 1;

     label1:
        if r21 == null goto label5;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke r21.<java.lang.Object: java.lang.Class getClass()>();

        if $r1 == $r2 goto label2;

        goto label5;

     label2:
        r22 = (android.app.NotificationChannel) r21;

        $i0 = virtualinvoke r0.<android.app.NotificationChannel: int getImportance()>();

        $i1 = virtualinvoke r22.<android.app.NotificationChannel: int getImportance()>();

        if $i0 != $i1 goto label3;

        $z1 = r0.<android.app.NotificationChannel: boolean mBypassDnd>;

        $z0 = r22.<android.app.NotificationChannel: boolean mBypassDnd>;

        if $z1 != $z0 goto label3;

        $i2 = virtualinvoke r0.<android.app.NotificationChannel: int getLockscreenVisibility()>();

        $i3 = virtualinvoke r22.<android.app.NotificationChannel: int getLockscreenVisibility()>();

        if $i2 != $i3 goto label3;

        $z3 = r0.<android.app.NotificationChannel: boolean mLights>;

        $z2 = r22.<android.app.NotificationChannel: boolean mLights>;

        if $z3 != $z2 goto label3;

        $i4 = virtualinvoke r0.<android.app.NotificationChannel: int getLightColor()>();

        $i5 = virtualinvoke r22.<android.app.NotificationChannel: int getLightColor()>();

        if $i4 != $i5 goto label3;

        $i6 = virtualinvoke r0.<android.app.NotificationChannel: int getUserLockedFields()>();

        $i7 = virtualinvoke r22.<android.app.NotificationChannel: int getUserLockedFields()>();

        if $i6 != $i7 goto label3;

        $z4 = virtualinvoke r0.<android.app.NotificationChannel: boolean isFgServiceShown()>();

        $z5 = virtualinvoke r22.<android.app.NotificationChannel: boolean isFgServiceShown()>();

        if $z4 != $z5 goto label3;

        $z7 = r0.<android.app.NotificationChannel: boolean mVibrationEnabled>;

        $z6 = r22.<android.app.NotificationChannel: boolean mVibrationEnabled>;

        if $z7 != $z6 goto label3;

        $z9 = r0.<android.app.NotificationChannel: boolean mShowBadge>;

        $z8 = r22.<android.app.NotificationChannel: boolean mShowBadge>;

        if $z9 != $z8 goto label3;

        $z10 = virtualinvoke r0.<android.app.NotificationChannel: boolean isDeleted()>();

        $z11 = virtualinvoke r22.<android.app.NotificationChannel: boolean isDeleted()>();

        if $z10 != $z11 goto label3;

        $z12 = virtualinvoke r0.<android.app.NotificationChannel: boolean isBlockable()>();

        $z13 = virtualinvoke r22.<android.app.NotificationChannel: boolean isBlockable()>();

        if $z12 != $z13 goto label3;

        $i9 = r0.<android.app.NotificationChannel: int mAllowBubbles>;

        $i8 = r22.<android.app.NotificationChannel: int mAllowBubbles>;

        if $i9 != $i8 goto label3;

        $r3 = virtualinvoke r0.<android.app.NotificationChannel: java.lang.String getId()>();

        $r4 = virtualinvoke r22.<android.app.NotificationChannel: java.lang.String getId()>();

        $z14 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r3, $r4);

        if $z14 == 0 goto label3;

        $r5 = virtualinvoke r0.<android.app.NotificationChannel: java.lang.CharSequence getName()>();

        $r6 = virtualinvoke r22.<android.app.NotificationChannel: java.lang.CharSequence getName()>();

        $z15 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r5, $r6);

        if $z15 == 0 goto label3;

        $r8 = r0.<android.app.NotificationChannel: java.lang.String mDesc>;

        $r7 = r22.<android.app.NotificationChannel: java.lang.String mDesc>;

        $z16 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r8, $r7);

        if $z16 == 0 goto label3;

        $r9 = virtualinvoke r0.<android.app.NotificationChannel: android.net.Uri getSound()>();

        $r10 = virtualinvoke r22.<android.app.NotificationChannel: android.net.Uri getSound()>();

        $z17 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r9, $r10);

        if $z17 == 0 goto label3;

        $r12 = r0.<android.app.NotificationChannel: long[] mVibration>;

        $r11 = r22.<android.app.NotificationChannel: long[] mVibration>;

        $z18 = staticinvoke <java.util.Arrays: boolean equals(long[],long[])>($r12, $r11);

        if $z18 == 0 goto label3;

        $r13 = virtualinvoke r0.<android.app.NotificationChannel: java.lang.String getGroup()>();

        $r14 = virtualinvoke r22.<android.app.NotificationChannel: java.lang.String getGroup()>();

        $z19 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r13, $r14);

        if $z19 == 0 goto label3;

        $r15 = virtualinvoke r0.<android.app.NotificationChannel: android.media.AudioAttributes getAudioAttributes()>();

        $r16 = virtualinvoke r22.<android.app.NotificationChannel: android.media.AudioAttributes getAudioAttributes()>();

        $z20 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r15, $r16);

        if $z20 == 0 goto label3;

        $z22 = r0.<android.app.NotificationChannel: boolean mImportanceLockedByOEM>;

        $z21 = r22.<android.app.NotificationChannel: boolean mImportanceLockedByOEM>;

        if $z22 != $z21 goto label3;

        $z24 = r0.<android.app.NotificationChannel: boolean mImportanceLockedDefaultApp>;

        $z23 = r22.<android.app.NotificationChannel: boolean mImportanceLockedDefaultApp>;

        if $z24 != $z23 goto label3;

        $i11 = r0.<android.app.NotificationChannel: int mOriginalImportance>;

        $i10 = r22.<android.app.NotificationChannel: int mOriginalImportance>;

        if $i11 != $i10 goto label3;

        $r17 = virtualinvoke r0.<android.app.NotificationChannel: java.lang.String getParentChannelId()>();

        $r18 = virtualinvoke r22.<android.app.NotificationChannel: java.lang.String getParentChannelId()>();

        $z25 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r17, $r18);

        if $z25 == 0 goto label3;

        $r19 = virtualinvoke r0.<android.app.NotificationChannel: java.lang.String getConversationId()>();

        $r20 = virtualinvoke r22.<android.app.NotificationChannel: java.lang.String getConversationId()>();

        $z26 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r19, $r20);

        if $z26 == 0 goto label3;

        $z27 = virtualinvoke r0.<android.app.NotificationChannel: boolean isDemoted()>();

        $z28 = virtualinvoke r22.<android.app.NotificationChannel: boolean isDemoted()>();

        if $z27 != $z28 goto label3;

        $z29 = virtualinvoke r0.<android.app.NotificationChannel: boolean isImportantConversation()>();

        $z30 = virtualinvoke r22.<android.app.NotificationChannel: boolean isImportantConversation()>();

        if $z29 != $z30 goto label3;

        goto label4;

     label3:
        z31 = 0;

     label4:
        return z31;

     label5:
        return 0;
    }

    public int getAllowBubbles()
    {
        android.app.NotificationChannel r0;
        int $i0;

        r0 := @this: android.app.NotificationChannel;

        $i0 = r0.<android.app.NotificationChannel: int mAllowBubbles>;

        return $i0;
    }

    public android.media.AudioAttributes getAudioAttributes()
    {
        android.app.NotificationChannel r0;
        android.media.AudioAttributes $r1;

        r0 := @this: android.app.NotificationChannel;

        $r1 = r0.<android.app.NotificationChannel: android.media.AudioAttributes mAudioAttributes>;

        return $r1;
    }

    public java.lang.String getConversationId()
    {
        android.app.NotificationChannel r0;
        java.lang.String $r1;

        r0 := @this: android.app.NotificationChannel;

        $r1 = r0.<android.app.NotificationChannel: java.lang.String mConversationId>;

        return $r1;
    }

    public java.lang.String getDescription()
    {
        android.app.NotificationChannel r0;
        java.lang.String $r1;

        r0 := @this: android.app.NotificationChannel;

        $r1 = r0.<android.app.NotificationChannel: java.lang.String mDesc>;

        return $r1;
    }

    public java.lang.String getGroup()
    {
        android.app.NotificationChannel r0;
        java.lang.String $r1;

        r0 := @this: android.app.NotificationChannel;

        $r1 = r0.<android.app.NotificationChannel: java.lang.String mGroup>;

        return $r1;
    }

    public java.lang.String getId()
    {
        android.app.NotificationChannel r0;
        java.lang.String $r1;

        r0 := @this: android.app.NotificationChannel;

        $r1 = r0.<android.app.NotificationChannel: java.lang.String mId>;

        return $r1;
    }

    public int getImportance()
    {
        android.app.NotificationChannel r0;
        int $i0;

        r0 := @this: android.app.NotificationChannel;

        $i0 = r0.<android.app.NotificationChannel: int mImportance>;

        return $i0;
    }

    public int getLightColor()
    {
        android.app.NotificationChannel r0;
        int $i0;

        r0 := @this: android.app.NotificationChannel;

        $i0 = r0.<android.app.NotificationChannel: int mLightColor>;

        return $i0;
    }

    public int getLockscreenVisibility()
    {
        android.app.NotificationChannel r0;
        int $i0;

        r0 := @this: android.app.NotificationChannel;

        $i0 = r0.<android.app.NotificationChannel: int mLockscreenVisibility>;

        return $i0;
    }

    public java.lang.CharSequence getName()
    {
        android.app.NotificationChannel r0;
        java.lang.String $r1;

        r0 := @this: android.app.NotificationChannel;

        $r1 = r0.<android.app.NotificationChannel: java.lang.String mName>;

        return $r1;
    }

    public int getOriginalImportance()
    {
        android.app.NotificationChannel r0;
        int $i0;

        r0 := @this: android.app.NotificationChannel;

        $i0 = r0.<android.app.NotificationChannel: int mOriginalImportance>;

        return $i0;
    }

    public java.lang.String getParentChannelId()
    {
        android.app.NotificationChannel r0;
        java.lang.String $r1;

        r0 := @this: android.app.NotificationChannel;

        $r1 = r0.<android.app.NotificationChannel: java.lang.String mParentId>;

        return $r1;
    }

    public android.net.Uri getSound()
    {
        android.app.NotificationChannel r0;
        android.net.Uri $r1;

        r0 := @this: android.app.NotificationChannel;

        $r1 = r0.<android.app.NotificationChannel: android.net.Uri mSound>;

        return $r1;
    }

    public int getUserLockedFields()
    {
        android.app.NotificationChannel r0;
        int $i0;

        r0 := @this: android.app.NotificationChannel;

        $i0 = r0.<android.app.NotificationChannel: int mUserLockedFields>;

        return $i0;
    }

    public long[] getVibrationPattern()
    {
        android.app.NotificationChannel r0;
        long[] $r1;

        r0 := @this: android.app.NotificationChannel;

        $r1 = r0.<android.app.NotificationChannel: long[] mVibration>;

        return $r1;
    }

    public boolean hasUserSetImportance()
    {
        android.app.NotificationChannel r0;
        int $i0, $i1;
        boolean z0;

        r0 := @this: android.app.NotificationChannel;

        $i0 = r0.<android.app.NotificationChannel: int mUserLockedFields>;

        $i1 = $i0 & 4;

        if $i1 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean hasUserSetSound()
    {
        android.app.NotificationChannel r0;
        int $i0, $i1;
        boolean z0;

        r0 := @this: android.app.NotificationChannel;

        $i0 = r0.<android.app.NotificationChannel: int mUserLockedFields>;

        $i1 = $i0 & 32;

        if $i1 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public int hashCode()
    {
        android.app.NotificationChannel r0;
        java.lang.Object[] $r1;
        java.lang.String $r2, $r4, $r16, $r23, $r24;
        java.lang.CharSequence $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.Integer $r5, $r7, $r10, $r11, $r19, $r22;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        java.lang.Boolean $r6, $r9, $r12, $r13, $r14, $r15, $r18, $r20, $r21, $r25, $r26;
        android.net.Uri $r8;
        android.media.AudioAttributes $r17;
        long[] $r27;

        r0 := @this: android.app.NotificationChannel;

        $r1 = newarray (java.lang.Object)[25];

        $r2 = virtualinvoke r0.<android.app.NotificationChannel: java.lang.String getId()>();

        $r1[0] = $r2;

        $r3 = virtualinvoke r0.<android.app.NotificationChannel: java.lang.CharSequence getName()>();

        $r1[1] = $r3;

        $r4 = r0.<android.app.NotificationChannel: java.lang.String mDesc>;

        $r1[2] = $r4;

        $i0 = virtualinvoke r0.<android.app.NotificationChannel: int getImportance()>();

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r1[3] = $r5;

        $z0 = r0.<android.app.NotificationChannel: boolean mBypassDnd>;

        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r1[4] = $r6;

        $i1 = virtualinvoke r0.<android.app.NotificationChannel: int getLockscreenVisibility()>();

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r1[5] = $r7;

        $r8 = virtualinvoke r0.<android.app.NotificationChannel: android.net.Uri getSound()>();

        $r1[6] = $r8;

        $z1 = r0.<android.app.NotificationChannel: boolean mLights>;

        $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        $r1[7] = $r9;

        $i2 = virtualinvoke r0.<android.app.NotificationChannel: int getLightColor()>();

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r1[8] = $r10;

        $i3 = virtualinvoke r0.<android.app.NotificationChannel: int getUserLockedFields()>();

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r1[9] = $r11;

        $z2 = virtualinvoke r0.<android.app.NotificationChannel: boolean isFgServiceShown()>();

        $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2);

        $r1[10] = $r12;

        $z3 = r0.<android.app.NotificationChannel: boolean mVibrationEnabled>;

        $r13 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3);

        $r1[11] = $r13;

        $z4 = r0.<android.app.NotificationChannel: boolean mShowBadge>;

        $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z4);

        $r1[12] = $r14;

        $z5 = virtualinvoke r0.<android.app.NotificationChannel: boolean isDeleted()>();

        $r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z5);

        $r1[13] = $r15;

        $r16 = virtualinvoke r0.<android.app.NotificationChannel: java.lang.String getGroup()>();

        $r1[14] = $r16;

        $r17 = virtualinvoke r0.<android.app.NotificationChannel: android.media.AudioAttributes getAudioAttributes()>();

        $r1[15] = $r17;

        $z6 = virtualinvoke r0.<android.app.NotificationChannel: boolean isBlockable()>();

        $r18 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z6);

        $r1[16] = $r18;

        $i4 = r0.<android.app.NotificationChannel: int mAllowBubbles>;

        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r1[17] = $r19;

        $z7 = r0.<android.app.NotificationChannel: boolean mImportanceLockedByOEM>;

        $r20 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z7);

        $r1[18] = $r20;

        $z8 = r0.<android.app.NotificationChannel: boolean mImportanceLockedDefaultApp>;

        $r21 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z8);

        $r1[19] = $r21;

        $i5 = r0.<android.app.NotificationChannel: int mOriginalImportance>;

        $r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        $r1[20] = $r22;

        $r23 = r0.<android.app.NotificationChannel: java.lang.String mParentId>;

        $r1[21] = $r23;

        $r24 = r0.<android.app.NotificationChannel: java.lang.String mConversationId>;

        $r1[22] = $r24;

        $z9 = r0.<android.app.NotificationChannel: boolean mDemoted>;

        $r25 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z9);

        $r1[23] = $r25;

        $z10 = r0.<android.app.NotificationChannel: boolean mImportantConvo>;

        $r26 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z10);

        $r1[24] = $r26;

        $i6 = staticinvoke <java.util.Objects: int hash(java.lang.Object[])>($r1);

        $i7 = $i6 * 31;

        $r27 = r0.<android.app.NotificationChannel: long[] mVibration>;

        $i8 = staticinvoke <java.util.Arrays: int hashCode(long[])>($r27);

        $i9 = $i7 + $i8;

        return $i9;
    }

    public boolean isBlockable()
    {
        android.app.NotificationChannel r0;
        boolean $z0;

        r0 := @this: android.app.NotificationChannel;

        $z0 = r0.<android.app.NotificationChannel: boolean mBlockableSystem>;

        return $z0;
    }

    public boolean isDeleted()
    {
        android.app.NotificationChannel r0;
        boolean $z0;

        r0 := @this: android.app.NotificationChannel;

        $z0 = r0.<android.app.NotificationChannel: boolean mDeleted>;

        return $z0;
    }

    public boolean isDemoted()
    {
        android.app.NotificationChannel r0;
        boolean $z0;

        r0 := @this: android.app.NotificationChannel;

        $z0 = r0.<android.app.NotificationChannel: boolean mDemoted>;

        return $z0;
    }

    public boolean isFgServiceShown()
    {
        android.app.NotificationChannel r0;
        boolean $z0;

        r0 := @this: android.app.NotificationChannel;

        $z0 = r0.<android.app.NotificationChannel: boolean mFgServiceShown>;

        return $z0;
    }

    public boolean isImportanceLockedByCriticalDeviceFunction()
    {
        android.app.NotificationChannel r0;
        boolean $z0;

        r0 := @this: android.app.NotificationChannel;

        $z0 = r0.<android.app.NotificationChannel: boolean mImportanceLockedDefaultApp>;

        return $z0;
    }

    public boolean isImportanceLockedByOEM()
    {
        android.app.NotificationChannel r0;
        boolean $z0;

        r0 := @this: android.app.NotificationChannel;

        $z0 = r0.<android.app.NotificationChannel: boolean mImportanceLockedByOEM>;

        return $z0;
    }

    public boolean isImportantConversation()
    {
        android.app.NotificationChannel r0;
        boolean $z0;

        r0 := @this: android.app.NotificationChannel;

        $z0 = r0.<android.app.NotificationChannel: boolean mImportantConvo>;

        return $z0;
    }

    public void lockFields(int)
    {
        android.app.NotificationChannel r0;
        int i0, $i1, $i2;

        r0 := @this: android.app.NotificationChannel;

        i0 := @parameter0: int;

        $i1 = r0.<android.app.NotificationChannel: int mUserLockedFields>;

        $i2 = $i1 | i0;

        r0.<android.app.NotificationChannel: int mUserLockedFields> = $i2;

        return;
    }

    public void populateFromXml(org.xmlpull.v1.XmlPullParser)
    {
        android.app.NotificationChannel r0;
        org.xmlpull.v1.XmlPullParser r1;

        r0 := @this: android.app.NotificationChannel;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        specialinvoke r0.<android.app.NotificationChannel: void populateFromXml(org.xmlpull.v1.XmlPullParser,boolean,android.content.Context)>(r1, 0, null);

        return;
    }

    public void populateFromXmlForRestore(org.xmlpull.v1.XmlPullParser, android.content.Context)
    {
        android.app.NotificationChannel r0;
        org.xmlpull.v1.XmlPullParser r1;
        android.content.Context r2;

        r0 := @this: android.app.NotificationChannel;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter1: android.content.Context;

        specialinvoke r0.<android.app.NotificationChannel: void populateFromXml(org.xmlpull.v1.XmlPullParser,boolean,android.content.Context)>(r1, 1, r2);

        return;
    }

    public void setAllowBubbles(int)
    {
        android.app.NotificationChannel r0;
        int i0;

        r0 := @this: android.app.NotificationChannel;

        i0 := @parameter0: int;

        r0.<android.app.NotificationChannel: int mAllowBubbles> = i0;

        return;
    }

    public void setAllowBubbles(boolean)
    {
        android.app.NotificationChannel r0;
        boolean z0;
        int i0;

        r0 := @this: android.app.NotificationChannel;

        z0 := @parameter0: boolean;

        i0 = (int) z0;

        r0.<android.app.NotificationChannel: int mAllowBubbles> = i0;

        return;
    }

    public void setBlockable(boolean)
    {
        android.app.NotificationChannel r0;
        boolean z0;

        r0 := @this: android.app.NotificationChannel;

        z0 := @parameter0: boolean;

        r0.<android.app.NotificationChannel: boolean mBlockableSystem> = z0;

        return;
    }

    public void setBypassDnd(boolean)
    {
        android.app.NotificationChannel r0;
        boolean z0;

        r0 := @this: android.app.NotificationChannel;

        z0 := @parameter0: boolean;

        r0.<android.app.NotificationChannel: boolean mBypassDnd> = z0;

        return;
    }

    public void setConversationId(java.lang.String, java.lang.String)
    {
        android.app.NotificationChannel r0;
        java.lang.String r1, r2;

        r0 := @this: android.app.NotificationChannel;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r0.<android.app.NotificationChannel: java.lang.String mParentId> = r1;

        r0.<android.app.NotificationChannel: java.lang.String mConversationId> = r2;

        return;
    }

    public void setDeleted(boolean)
    {
        android.app.NotificationChannel r0;
        boolean z0;

        r0 := @this: android.app.NotificationChannel;

        z0 := @parameter0: boolean;

        r0.<android.app.NotificationChannel: boolean mDeleted> = z0;

        return;
    }

    public void setDemoted(boolean)
    {
        android.app.NotificationChannel r0;
        boolean z0;

        r0 := @this: android.app.NotificationChannel;

        z0 := @parameter0: boolean;

        r0.<android.app.NotificationChannel: boolean mDemoted> = z0;

        return;
    }

    public void setDescription(java.lang.String)
    {
        android.app.NotificationChannel r0;
        java.lang.String r1, $r2;

        r0 := @this: android.app.NotificationChannel;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<android.app.NotificationChannel: java.lang.String getTrimmedString(java.lang.String)>(r1);

        r0.<android.app.NotificationChannel: java.lang.String mDesc> = $r2;

        return;
    }

    public void setFgServiceShown(boolean)
    {
        android.app.NotificationChannel r0;
        boolean z0;

        r0 := @this: android.app.NotificationChannel;

        z0 := @parameter0: boolean;

        r0.<android.app.NotificationChannel: boolean mFgServiceShown> = z0;

        return;
    }

    public void setGroup(java.lang.String)
    {
        android.app.NotificationChannel r0;
        java.lang.String r1;

        r0 := @this: android.app.NotificationChannel;

        r1 := @parameter0: java.lang.String;

        r0.<android.app.NotificationChannel: java.lang.String mGroup> = r1;

        return;
    }

    public void setId(java.lang.String)
    {
        android.app.NotificationChannel r0;
        java.lang.String r1;

        r0 := @this: android.app.NotificationChannel;

        r1 := @parameter0: java.lang.String;

        r0.<android.app.NotificationChannel: java.lang.String mId> = r1;

        return;
    }

    public void setImportance(int)
    {
        android.app.NotificationChannel r0;
        int i0;

        r0 := @this: android.app.NotificationChannel;

        i0 := @parameter0: int;

        r0.<android.app.NotificationChannel: int mImportance> = i0;

        return;
    }

    public void setImportanceLockedByCriticalDeviceFunction(boolean)
    {
        android.app.NotificationChannel r0;
        boolean z0;

        r0 := @this: android.app.NotificationChannel;

        z0 := @parameter0: boolean;

        r0.<android.app.NotificationChannel: boolean mImportanceLockedDefaultApp> = z0;

        return;
    }

    public void setImportanceLockedByOEM(boolean)
    {
        android.app.NotificationChannel r0;
        boolean z0;

        r0 := @this: android.app.NotificationChannel;

        z0 := @parameter0: boolean;

        r0.<android.app.NotificationChannel: boolean mImportanceLockedByOEM> = z0;

        return;
    }

    public void setImportantConversation(boolean)
    {
        android.app.NotificationChannel r0;
        boolean z0;

        r0 := @this: android.app.NotificationChannel;

        z0 := @parameter0: boolean;

        r0.<android.app.NotificationChannel: boolean mImportantConvo> = z0;

        return;
    }

    public void setLightColor(int)
    {
        android.app.NotificationChannel r0;
        int i0;

        r0 := @this: android.app.NotificationChannel;

        i0 := @parameter0: int;

        r0.<android.app.NotificationChannel: int mLightColor> = i0;

        return;
    }

    public void setLockscreenVisibility(int)
    {
        android.app.NotificationChannel r0;
        int i0;

        r0 := @this: android.app.NotificationChannel;

        i0 := @parameter0: int;

        r0.<android.app.NotificationChannel: int mLockscreenVisibility> = i0;

        return;
    }

    public void setName(java.lang.CharSequence)
    {
        android.app.NotificationChannel r0;
        java.lang.String $r1, r3;
        java.lang.CharSequence r2;

        r0 := @this: android.app.NotificationChannel;

        r2 := @parameter0: java.lang.CharSequence;

        if r2 == null goto label1;

        $r1 = interfaceinvoke r2.<java.lang.CharSequence: java.lang.String toString()>();

        r3 = specialinvoke r0.<android.app.NotificationChannel: java.lang.String getTrimmedString(java.lang.String)>($r1);

        goto label2;

     label1:
        r3 = null;

     label2:
        r0.<android.app.NotificationChannel: java.lang.String mName> = r3;

        return;
    }

    public void setOriginalImportance(int)
    {
        android.app.NotificationChannel r0;
        int i0;

        r0 := @this: android.app.NotificationChannel;

        i0 := @parameter0: int;

        r0.<android.app.NotificationChannel: int mOriginalImportance> = i0;

        return;
    }

    public void setShowBadge(boolean)
    {
        android.app.NotificationChannel r0;
        boolean z0;

        r0 := @this: android.app.NotificationChannel;

        z0 := @parameter0: boolean;

        r0.<android.app.NotificationChannel: boolean mShowBadge> = z0;

        return;
    }

    public void setSound(android.net.Uri, android.media.AudioAttributes)
    {
        android.app.NotificationChannel r0;
        android.net.Uri r1;
        android.media.AudioAttributes r2;

        r0 := @this: android.app.NotificationChannel;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.media.AudioAttributes;

        r0.<android.app.NotificationChannel: android.net.Uri mSound> = r1;

        r0.<android.app.NotificationChannel: android.media.AudioAttributes mAudioAttributes> = r2;

        return;
    }

    public void setVibrationPattern(long[])
    {
        android.app.NotificationChannel r0;
        long[] r1;
        int $i0;
        boolean z0;

        r0 := @this: android.app.NotificationChannel;

        r1 := @parameter0: long[];

        if r1 == null goto label1;

        $i0 = lengthof r1;

        if $i0 <= 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        r0.<android.app.NotificationChannel: boolean mVibrationEnabled> = z0;

        r0.<android.app.NotificationChannel: long[] mVibration> = r1;

        return;
    }

    public boolean shouldShowLights()
    {
        android.app.NotificationChannel r0;
        boolean $z0;

        r0 := @this: android.app.NotificationChannel;

        $z0 = r0.<android.app.NotificationChannel: boolean mLights>;

        return $z0;
    }

    public boolean shouldVibrate()
    {
        android.app.NotificationChannel r0;
        boolean $z0;

        r0 := @this: android.app.NotificationChannel;

        $z0 = r0.<android.app.NotificationChannel: boolean mVibrationEnabled>;

        return $z0;
    }

    public org.json.JSONObject toJson() throws org.json.JSONException
    {
        android.app.NotificationChannel r0;
        org.json.JSONObject $r2;
        java.lang.String $r3, $r7, $r11, $r13, $r15, $r17, $r19, $r22, $r24, $r26, $r28, $r33, $r36, $r39, $r42, $r44, $r47;
        java.lang.CharSequence $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        android.net.Uri $r9, $r41;
        android.media.AudioAttributes $r10, $r32, $r35, $r38;
        long[] $r21;

        r0 := @this: android.app.NotificationChannel;

        $r2 = new org.json.JSONObject;

        specialinvoke $r2.<org.json.JSONObject: void <init>()>();

        $r3 = virtualinvoke r0.<android.app.NotificationChannel: java.lang.String getId()>();

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("id", $r3);

        $r5 = virtualinvoke r0.<android.app.NotificationChannel: java.lang.CharSequence getName()>();

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("name", $r5);

        $r7 = virtualinvoke r0.<android.app.NotificationChannel: java.lang.String getDescription()>();

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("desc", $r7);

        $i0 = virtualinvoke r0.<android.app.NotificationChannel: int getImportance()>();

        if $i0 == -1000 goto label1;

        $i9 = virtualinvoke r0.<android.app.NotificationChannel: int getImportance()>();

        $r47 = staticinvoke <android.service.notification.NotificationListenerService$Ranking: java.lang.String importanceToString(int)>($i9);

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("importance", $r47);

     label1:
        $z0 = virtualinvoke r0.<android.app.NotificationChannel: boolean canBypassDnd()>();

        if $z0 == 0 goto label2;

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("priority", 2);

     label2:
        $i1 = virtualinvoke r0.<android.app.NotificationChannel: int getLockscreenVisibility()>();

        if $i1 == -1000 goto label3;

        $i8 = virtualinvoke r0.<android.app.NotificationChannel: int getLockscreenVisibility()>();

        $r44 = staticinvoke <android.app.Notification: java.lang.String visibilityToString(int)>($i8);

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("visibility", $r44);

     label3:
        $r9 = virtualinvoke r0.<android.app.NotificationChannel: android.net.Uri getSound()>();

        if $r9 == null goto label4;

        $r41 = virtualinvoke r0.<android.app.NotificationChannel: android.net.Uri getSound()>();

        $r42 = virtualinvoke $r41.<android.net.Uri: java.lang.String toString()>();

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("sound", $r42);

     label4:
        $r10 = virtualinvoke r0.<android.app.NotificationChannel: android.media.AudioAttributes getAudioAttributes()>();

        if $r10 == null goto label5;

        $r32 = virtualinvoke r0.<android.app.NotificationChannel: android.media.AudioAttributes getAudioAttributes()>();

        $i5 = virtualinvoke $r32.<android.media.AudioAttributes: int getUsage()>();

        $r33 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i5);

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("usage", $r33);

        $r35 = virtualinvoke r0.<android.app.NotificationChannel: android.media.AudioAttributes getAudioAttributes()>();

        $i6 = virtualinvoke $r35.<android.media.AudioAttributes: int getContentType()>();

        $r36 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i6);

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("content_type", $r36);

        $r38 = virtualinvoke r0.<android.app.NotificationChannel: android.media.AudioAttributes getAudioAttributes()>();

        $i7 = virtualinvoke $r38.<android.media.AudioAttributes: int getFlags()>();

        $r39 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i7);

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("flags", $r39);

     label5:
        $z1 = virtualinvoke r0.<android.app.NotificationChannel: boolean shouldShowLights()>();

        $r11 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>($z1);

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("lights", $r11);

        $i2 = virtualinvoke r0.<android.app.NotificationChannel: int getLightColor()>();

        $r13 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i2);

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("light_color", $r13);

        $z2 = virtualinvoke r0.<android.app.NotificationChannel: boolean shouldVibrate()>();

        $r15 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>($z2);

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("vibration_enabled", $r15);

        $i3 = virtualinvoke r0.<android.app.NotificationChannel: int getUserLockedFields()>();

        $r17 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i3);

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("locked", $r17);

        $z3 = virtualinvoke r0.<android.app.NotificationChannel: boolean isFgServiceShown()>();

        $r19 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>($z3);

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("fgservice", $r19);

        $r21 = virtualinvoke r0.<android.app.NotificationChannel: long[] getVibrationPattern()>();

        $r22 = staticinvoke <android.app.NotificationChannel: java.lang.String longArrayToString(long[])>($r21);

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("vibration", $r22);

        $z4 = virtualinvoke r0.<android.app.NotificationChannel: boolean canShowBadge()>();

        $r24 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>($z4);

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("show_badge", $r24);

        $z5 = virtualinvoke r0.<android.app.NotificationChannel: boolean isDeleted()>();

        $r26 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>($z5);

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("deleted", $r26);

        $r28 = virtualinvoke r0.<android.app.NotificationChannel: java.lang.String getGroup()>();

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("group", $r28);

        $z6 = virtualinvoke r0.<android.app.NotificationChannel: boolean isBlockable()>();

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,boolean)>("blockable_system", $z6);

        $i4 = virtualinvoke r0.<android.app.NotificationChannel: int getAllowBubbles()>();

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("allow_bubbles", $i4);

        return $r2;
    }

    public java.lang.String toString()
    {
        android.app.NotificationChannel r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r4, $r8, $r10, $r13;

        r0 := @this: android.app.NotificationChannel;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NotificationChannel{mId=\'");

        $r4 = r0.<android.app.NotificationChannel: java.lang.String mId>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mName=");

        $r8 = r0.<android.app.NotificationChannel: java.lang.String mName>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = specialinvoke r0.<android.app.NotificationChannel: java.lang.String getFieldsString()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r13 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r13;
    }

    public void unlockFields(int)
    {
        android.app.NotificationChannel r0;
        int i0, $i1, $i2;

        r0 := @this: android.app.NotificationChannel;

        i0 := @parameter0: int;

        $i1 = r0.<android.app.NotificationChannel: int mUserLockedFields>;

        $i2 = $i1 & i0;

        r0.<android.app.NotificationChannel: int mUserLockedFields> = $i2;

        return;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.app.NotificationChannel r0;
        android.os.Parcel r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.String $r2, $r3, $r4, $r7, $r9, $r10, $r12, $r14, $r15, $r16;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        android.net.Uri $r5, $r13;
        long[] $r6;
        android.media.AudioAttributes $r8, $r11;
        byte b7, b8, b9, b10, b11, b12;

        r0 := @this: android.app.NotificationChannel;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $r2 = r0.<android.app.NotificationChannel: java.lang.String mId>;

        if $r2 == null goto label01;

        virtualinvoke r1.<android.os.Parcel: void writeByte(byte)>(1);

        $r16 = r0.<android.app.NotificationChannel: java.lang.String mId>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r16);

        goto label02;

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeByte(byte)>(0);

     label02:
        $r3 = r0.<android.app.NotificationChannel: java.lang.String mName>;

        if $r3 == null goto label03;

        virtualinvoke r1.<android.os.Parcel: void writeByte(byte)>(1);

        $r15 = r0.<android.app.NotificationChannel: java.lang.String mName>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r15);

        goto label04;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeByte(byte)>(0);

     label04:
        $r4 = r0.<android.app.NotificationChannel: java.lang.String mDesc>;

        if $r4 == null goto label05;

        virtualinvoke r1.<android.os.Parcel: void writeByte(byte)>(1);

        $r14 = r0.<android.app.NotificationChannel: java.lang.String mDesc>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r14);

        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeByte(byte)>(0);

     label06:
        $i1 = r0.<android.app.NotificationChannel: int mImportance>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $z0 = r0.<android.app.NotificationChannel: boolean mBypassDnd>;

        b7 = (byte) $z0;

        virtualinvoke r1.<android.os.Parcel: void writeByte(byte)>(b7);

        $i2 = r0.<android.app.NotificationChannel: int mLockscreenVisibility>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i2);

        $r5 = r0.<android.app.NotificationChannel: android.net.Uri mSound>;

        if $r5 == null goto label07;

        virtualinvoke r1.<android.os.Parcel: void writeByte(byte)>(1);

        $r13 = r0.<android.app.NotificationChannel: android.net.Uri mSound>;

        virtualinvoke $r13.<android.net.Uri: void writeToParcel(android.os.Parcel,int)>(r1, 0);

        goto label08;

     label07:
        virtualinvoke r1.<android.os.Parcel: void writeByte(byte)>(0);

     label08:
        $z1 = r0.<android.app.NotificationChannel: boolean mLights>;

        b8 = (byte) $z1;

        virtualinvoke r1.<android.os.Parcel: void writeByte(byte)>(b8);

        $r6 = r0.<android.app.NotificationChannel: long[] mVibration>;

        virtualinvoke r1.<android.os.Parcel: void writeLongArray(long[])>($r6);

        $i3 = r0.<android.app.NotificationChannel: int mUserLockedFields>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i3);

        $z2 = r0.<android.app.NotificationChannel: boolean mFgServiceShown>;

        b9 = (byte) $z2;

        virtualinvoke r1.<android.os.Parcel: void writeByte(byte)>(b9);

        $z3 = r0.<android.app.NotificationChannel: boolean mVibrationEnabled>;

        b10 = (byte) $z3;

        virtualinvoke r1.<android.os.Parcel: void writeByte(byte)>(b10);

        $z4 = r0.<android.app.NotificationChannel: boolean mShowBadge>;

        b11 = (byte) $z4;

        virtualinvoke r1.<android.os.Parcel: void writeByte(byte)>(b11);

        $z5 = r0.<android.app.NotificationChannel: boolean mDeleted>;

        b12 = (byte) $z5;

        virtualinvoke r1.<android.os.Parcel: void writeByte(byte)>(b12);

        $r7 = r0.<android.app.NotificationChannel: java.lang.String mGroup>;

        if $r7 == null goto label09;

        virtualinvoke r1.<android.os.Parcel: void writeByte(byte)>(1);

        $r12 = r0.<android.app.NotificationChannel: java.lang.String mGroup>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r12);

        goto label10;

     label09:
        virtualinvoke r1.<android.os.Parcel: void writeByte(byte)>(0);

     label10:
        $r8 = r0.<android.app.NotificationChannel: android.media.AudioAttributes mAudioAttributes>;

        if $r8 == null goto label11;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r11 = r0.<android.app.NotificationChannel: android.media.AudioAttributes mAudioAttributes>;

        virtualinvoke $r11.<android.media.AudioAttributes: void writeToParcel(android.os.Parcel,int)>(r1, 0);

        goto label12;

     label11:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label12:
        $i4 = r0.<android.app.NotificationChannel: int mLightColor>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i4);

        $z6 = r0.<android.app.NotificationChannel: boolean mBlockableSystem>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z6);

        $i5 = r0.<android.app.NotificationChannel: int mAllowBubbles>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i5);

        $z7 = r0.<android.app.NotificationChannel: boolean mImportanceLockedByOEM>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z7);

        $i6 = r0.<android.app.NotificationChannel: int mOriginalImportance>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i6);

        $r9 = r0.<android.app.NotificationChannel: java.lang.String mParentId>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r9);

        $r10 = r0.<android.app.NotificationChannel: java.lang.String mConversationId>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r10);

        $z8 = r0.<android.app.NotificationChannel: boolean mDemoted>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z8);

        $z9 = r0.<android.app.NotificationChannel: boolean mImportantConvo>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z9);

        return;
    }

    public void writeXml(org.xmlpull.v1.XmlSerializer) throws java.io.IOException
    {
        android.app.NotificationChannel r0;
        org.xmlpull.v1.XmlSerializer r1;

        r0 := @this: android.app.NotificationChannel;

        r1 := @parameter0: org.xmlpull.v1.XmlSerializer;

        specialinvoke r0.<android.app.NotificationChannel: void writeXml(org.xmlpull.v1.XmlSerializer,boolean,android.content.Context)>(r1, 0, null);

        return;
    }

    public void writeXmlForBackup(org.xmlpull.v1.XmlSerializer, android.content.Context) throws java.io.IOException
    {
        android.app.NotificationChannel r0;
        org.xmlpull.v1.XmlSerializer r1;
        android.content.Context r2;

        r0 := @this: android.app.NotificationChannel;

        r1 := @parameter0: org.xmlpull.v1.XmlSerializer;

        r2 := @parameter1: android.content.Context;

        specialinvoke r0.<android.app.NotificationChannel: void writeXml(org.xmlpull.v1.XmlSerializer,boolean,android.content.Context)>(r1, 1, r2);

        return;
    }
}
