public final class android.app.PropertyInvalidatedCache$AutoCorker extends java.lang.Object
{
    public static final int DEFAULT_AUTO_CORK_DELAY_MS;
    private final int mAutoCorkDelayMs;
    private android.os.Handler mHandler;
    private final java.lang.Object mLock;
    private final java.lang.String mPropertyName;
    private long mUncorkDeadlineMs;

    public void <init>(java.lang.String)
    {
        android.app.PropertyInvalidatedCache$AutoCorker r0;
        java.lang.String r1;

        r0 := @this: android.app.PropertyInvalidatedCache$AutoCorker;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<android.app.PropertyInvalidatedCache$AutoCorker: void <init>(java.lang.String,int)>(r1, 2000);

        return;
    }

    public void <init>(java.lang.String, int)
    {
        android.app.PropertyInvalidatedCache$AutoCorker r0;
        java.lang.String r1;
        int i0;
        java.lang.Object $r2;

        r0 := @this: android.app.PropertyInvalidatedCache$AutoCorker;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<android.app.PropertyInvalidatedCache$AutoCorker: java.lang.Object mLock> = $r2;

        r0.<android.app.PropertyInvalidatedCache$AutoCorker: long mUncorkDeadlineMs> = -1L;

        r0.<android.app.PropertyInvalidatedCache$AutoCorker: java.lang.String mPropertyName> = r1;

        r0.<android.app.PropertyInvalidatedCache$AutoCorker: int mAutoCorkDelayMs> = i0;

        return;
    }

    static void access$000(android.app.PropertyInvalidatedCache$AutoCorker, android.os.Message)
    {
        android.app.PropertyInvalidatedCache$AutoCorker r0;
        android.os.Message r1;

        r0 := @parameter0: android.app.PropertyInvalidatedCache$AutoCorker;

        r1 := @parameter1: android.os.Message;

        specialinvoke r0.<android.app.PropertyInvalidatedCache$AutoCorker: void handleMessage(android.os.Message)>(r1);

        return;
    }

    private android.os.Handler getHandlerLocked()
    {
        android.app.PropertyInvalidatedCache$AutoCorker r0;
        android.os.Handler $r1, $r2;
        android.app.PropertyInvalidatedCache$AutoCorker$1 $r3;
        android.os.Looper $r4;

        r0 := @this: android.app.PropertyInvalidatedCache$AutoCorker;

        $r1 = r0.<android.app.PropertyInvalidatedCache$AutoCorker: android.os.Handler mHandler>;

        if $r1 != null goto label1;

        $r3 = new android.app.PropertyInvalidatedCache$AutoCorker$1;

        $r4 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke $r3.<android.app.PropertyInvalidatedCache$AutoCorker$1: void <init>(android.app.PropertyInvalidatedCache$AutoCorker,android.os.Looper)>(r0, $r4);

        r0.<android.app.PropertyInvalidatedCache$AutoCorker: android.os.Handler mHandler> = $r3;

     label1:
        $r2 = r0.<android.app.PropertyInvalidatedCache$AutoCorker: android.os.Handler mHandler>;

        return $r2;
    }

    private void handleMessage(android.os.Message)
    {
        android.app.PropertyInvalidatedCache$AutoCorker r0;
        long l0, $l1, $l3, $l6, $l7, $l8;
        byte $b2, $b4;
        java.lang.String $r2;
        int $i5;
        android.os.Handler $r3;
        java.lang.Throwable $r4;
        android.os.Message r5;
        java.lang.Object r6;

        r0 := @this: android.app.PropertyInvalidatedCache$AutoCorker;

        r5 := @parameter0: android.os.Message;

        r6 = r0.<android.app.PropertyInvalidatedCache$AutoCorker: java.lang.Object mLock>;

        entermonitor r6;

     label1:
        $l1 = r0.<android.app.PropertyInvalidatedCache$AutoCorker: long mUncorkDeadlineMs>;

        $b2 = $l1 cmp 0L;

        if $b2 >= 0 goto label3;

        exitmonitor r6;

     label2:
        return;

     label3:
        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l3 = r0.<android.app.PropertyInvalidatedCache$AutoCorker: long mUncorkDeadlineMs>;

        $b4 = $l3 cmp l0;

        if $b4 <= 0 goto label5;

        $i5 = r0.<android.app.PropertyInvalidatedCache$AutoCorker: int mAutoCorkDelayMs>;

        $l6 = (long) $i5;

        $l7 = $l6 + l0;

        r0.<android.app.PropertyInvalidatedCache$AutoCorker: long mUncorkDeadlineMs> = $l7;

        $r3 = specialinvoke r0.<android.app.PropertyInvalidatedCache$AutoCorker: android.os.Handler getHandlerLocked()>();

        $l8 = r0.<android.app.PropertyInvalidatedCache$AutoCorker: long mUncorkDeadlineMs>;

        virtualinvoke $r3.<android.os.Handler: boolean sendEmptyMessageAtTime(int,long)>(0, $l8);

        exitmonitor r6;

     label4:
        return;

     label5:
        r0.<android.app.PropertyInvalidatedCache$AutoCorker: long mUncorkDeadlineMs> = -1L;

        $r2 = r0.<android.app.PropertyInvalidatedCache$AutoCorker: java.lang.String mPropertyName>;

        staticinvoke <android.app.PropertyInvalidatedCache: void uncorkInvalidations(java.lang.String)>($r2);

        exitmonitor r6;

     label6:
        return;

     label7:
        $r4 := @caughtexception;

     label8:
        exitmonitor r6;

     label9:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public void autoCork()
    {
        android.app.PropertyInvalidatedCache$AutoCorker r0;
        java.lang.Object r1;
        android.os.Looper $r3;
        long $l0, $l2, $l4, $l5, $l6;
        byte $b1;
        int $i3;
        android.os.Handler $r4;
        java.lang.String $r5, $r6;
        java.lang.Throwable $r7;
        boolean z1;

        r0 := @this: android.app.PropertyInvalidatedCache$AutoCorker;

        $r3 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        if $r3 != null goto label01;

        $r6 = r0.<android.app.PropertyInvalidatedCache$AutoCorker: java.lang.String mPropertyName>;

        staticinvoke <android.app.PropertyInvalidatedCache: void invalidateCache(java.lang.String)>($r6);

        return;

     label01:
        r1 = r0.<android.app.PropertyInvalidatedCache$AutoCorker: java.lang.Object mLock>;

        entermonitor r1;

     label02:
        $l0 = r0.<android.app.PropertyInvalidatedCache$AutoCorker: long mUncorkDeadlineMs>;

        $b1 = $l0 cmp 0L;

        if $b1 < 0 goto label04;

     label03:
        z1 = 1;

        goto label05;

     label04:
        z1 = 0;

     label05:
        $l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $i3 = r0.<android.app.PropertyInvalidatedCache$AutoCorker: int mAutoCorkDelayMs>;

        $l4 = (long) $i3;

        $l5 = $l2 + $l4;

        r0.<android.app.PropertyInvalidatedCache$AutoCorker: long mUncorkDeadlineMs> = $l5;

     label06:
        if z1 != 0 goto label08;

     label07:
        $r4 = specialinvoke r0.<android.app.PropertyInvalidatedCache$AutoCorker: android.os.Handler getHandlerLocked()>();

        $l6 = r0.<android.app.PropertyInvalidatedCache$AutoCorker: long mUncorkDeadlineMs>;

        virtualinvoke $r4.<android.os.Handler: boolean sendEmptyMessageAtTime(int,long)>(0, $l6);

        $r5 = r0.<android.app.PropertyInvalidatedCache$AutoCorker: java.lang.String mPropertyName>;

        staticinvoke <android.app.PropertyInvalidatedCache: void corkInvalidations(java.lang.String)>($r5);

     label08:
        exitmonitor r1;

     label09:
        return;

     label10:
        $r7 := @caughtexception;

     label11:
        exitmonitor r1;

     label12:
        throw $r7;

        catch java.lang.Throwable from label02 to label03 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public static void <clinit>()
    {
        <android.app.PropertyInvalidatedCache$AutoCorker: int DEFAULT_AUTO_CORK_DELAY_MS> = 2000;

        return;
    }
}
