public abstract class android.app.PropertyInvalidatedCache extends java.lang.Object
{
    private static final boolean DEBUG;
    private static final long NONCE_DISABLED;
    private static final long NONCE_UNSET;
    private static final java.lang.String TAG;
    private static final boolean VERIFY;
    private static final java.util.WeakHashMap sCaches;
    private static final java.lang.Object sCorkLock;
    private static final java.util.HashMap sCorks;
    private static boolean sEnabled;
    private static final java.util.HashMap sInvalidates;
    private final java.util.LinkedHashMap mCache;
    private boolean mDisabled;
    private long mHits;
    private long mLastSeenNonce;
    private final java.lang.Object mLock;
    private final int mMaxEntries;
    private long mMisses;
    private volatile android.os.SystemProperties$Handle mPropertyHandle;
    private final java.lang.String mPropertyName;

    static void <clinit>()
    {
        java.util.HashMap $r0, $r2;
        java.lang.Object $r1;
        java.util.WeakHashMap $r3;

        <android.app.PropertyInvalidatedCache: boolean VERIFY> = 0;

        <android.app.PropertyInvalidatedCache: java.lang.String TAG> = "PropertyInvalidatedCache";

        <android.app.PropertyInvalidatedCache: long NONCE_UNSET> = 0L;

        <android.app.PropertyInvalidatedCache: long NONCE_DISABLED> = -1L;

        <android.app.PropertyInvalidatedCache: boolean DEBUG> = 0;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <android.app.PropertyInvalidatedCache: java.util.HashMap sInvalidates> = $r0;

        <android.app.PropertyInvalidatedCache: boolean sEnabled> = 1;

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        <android.app.PropertyInvalidatedCache: java.lang.Object sCorkLock> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        <android.app.PropertyInvalidatedCache: java.util.HashMap sCorks> = $r2;

        $r3 = new java.util.WeakHashMap;

        specialinvoke $r3.<java.util.WeakHashMap: void <init>()>();

        <android.app.PropertyInvalidatedCache: java.util.WeakHashMap sCaches> = $r3;

        return;
    }

    public void <init>(int, java.lang.String)
    {
        android.app.PropertyInvalidatedCache r0;
        int i0;
        java.lang.Object r1, $r2;
        android.app.PropertyInvalidatedCache$1 $r3;
        java.util.WeakHashMap $r4;
        java.util.HashMap $r6;
        java.lang.Long $r7;
        java.lang.Throwable $r9;
        java.lang.String r10;

        r0 := @this: android.app.PropertyInvalidatedCache;

        i0 := @parameter0: int;

        r10 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.app.PropertyInvalidatedCache: long mHits> = 0L;

        r0.<android.app.PropertyInvalidatedCache: long mMisses> = 0L;

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<android.app.PropertyInvalidatedCache: java.lang.Object mLock> = $r2;

        r0.<android.app.PropertyInvalidatedCache: long mLastSeenNonce> = 0L;

        r0.<android.app.PropertyInvalidatedCache: boolean mDisabled> = 0;

        r0.<android.app.PropertyInvalidatedCache: java.lang.String mPropertyName> = r10;

        r0.<android.app.PropertyInvalidatedCache: int mMaxEntries> = i0;

        $r3 = new android.app.PropertyInvalidatedCache$1;

        specialinvoke $r3.<android.app.PropertyInvalidatedCache$1: void <init>(android.app.PropertyInvalidatedCache,int,float,boolean,int)>(r0, 2, 0.75F, 1, i0);

        r0.<android.app.PropertyInvalidatedCache: java.util.LinkedHashMap mCache> = $r3;

        r1 = <android.app.PropertyInvalidatedCache: java.lang.Object sCorkLock>;

        entermonitor r1;

     label1:
        $r4 = <android.app.PropertyInvalidatedCache: java.util.WeakHashMap sCaches>;

        virtualinvoke $r4.<java.util.WeakHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, null);

        $r6 = <android.app.PropertyInvalidatedCache: java.util.HashMap sInvalidates>;

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L);

        virtualinvoke $r6.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r10, $r7);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r9 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public static void corkInvalidations(java.lang.String)
    {
        java.lang.Object r0, $r3;
        int i0, $i4;
        long l1;
        java.util.HashMap $r1, $r9;
        java.lang.Integer $r2, $r4, $r10;
        byte $b2, $b3;
        java.lang.String $r6, r8;
        java.lang.Throwable $r7;

        r8 := @parameter0: java.lang.String;

        r0 = <android.app.PropertyInvalidatedCache: java.lang.Object sCorkLock>;

        entermonitor r0;

     label01:
        $r1 = <android.app.PropertyInvalidatedCache: java.util.HashMap sCorks>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r3 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)>(r8, $r2);

        $r4 = (java.lang.Integer) $r3;

        i0 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

     label02:
        if i0 != 0 goto label06;

     label03:
        l1 = staticinvoke <android.os.SystemProperties: long getLong(java.lang.String,long)>(r8, 0L);

     label04:
        $b2 = l1 cmp 0L;

        if $b2 == 0 goto label06;

        $b3 = l1 cmp -1L;

        if $b3 == 0 goto label06;

     label05:
        $r6 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(0L);

        staticinvoke <android.os.SystemProperties: void set(java.lang.String,java.lang.String)>(r8, $r6);

     label06:
        $r9 = <android.app.PropertyInvalidatedCache: java.util.HashMap sCorks>;

        $i4 = i0 + 1;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        virtualinvoke $r9.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r8, $r10);

     label07:
        exitmonitor r0;

     label08:
        return;

     label09:
        $r7 := @caughtexception;

     label10:
        exitmonitor r0;

     label11:
        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public static void disableForTestMode()
    {
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("PropertyInvalidatedCache", "disabling all caches in the process");

        <android.app.PropertyInvalidatedCache: boolean sEnabled> = 0;

        return;
    }

    public static void disableSystemWide(java.lang.String)
    {
        java.lang.String r0, $r1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $z0 = <android.app.PropertyInvalidatedCache: boolean sEnabled>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(-1L);

        staticinvoke <android.os.SystemProperties: void set(java.lang.String,java.lang.String)>(r0, $r1);

        return;
    }

    public static void dumpCacheInfo(java.io.FileDescriptor, java.lang.String[])
    {
        java.io.FileOutputStream r0;
        java.lang.Object r1, $r5, $r7, $r9, $r10;
        java.util.ArrayList r2, r3;
        java.util.Map$Entry r4;
        boolean $z0;
        int $i0, $i1, i3, i4, $i5;
        android.app.PropertyInvalidatedCache $r6;
        java.lang.Object[] $r8;
        java.lang.String $r11;
        java.lang.Throwable $r12, $r13, $r14, $r15, $r16, $r17;
        java.io.FileDescriptor r18;
        java.lang.String[] r19;
        com.android.internal.util.FastPrintWriter r20;

        r18 := @parameter0: java.io.FileDescriptor;

        r19 := @parameter1: java.lang.String[];

     label01:
        r0 = new java.io.FileOutputStream;

        specialinvoke r0.<java.io.FileOutputStream: void <init>(java.io.FileDescriptor)>(r18);

     label02:
        r20 = new com.android.internal.util.FastPrintWriter;

        specialinvoke r20.<com.android.internal.util.FastPrintWriter: void <init>(java.io.OutputStream)>(r0);

     label03:
        $z0 = <android.app.PropertyInvalidatedCache: boolean sEnabled>;

        if $z0 != 0 goto label07;

        virtualinvoke r20.<java.io.PrintWriter: void println(java.lang.String)>("  Caching is disabled in this process.");

     label04:
        virtualinvoke r20.<java.io.PrintWriter: void close()>();

     label05:
        virtualinvoke r0.<java.io.FileOutputStream: void close()>();

     label06:
        return;

     label07:
        r1 = <android.app.PropertyInvalidatedCache: java.lang.Object sCorkLock>;

        entermonitor r1;

     label08:
        r2 = staticinvoke <android.app.PropertyInvalidatedCache: java.util.ArrayList getActiveCaches()>();

        r3 = staticinvoke <android.app.PropertyInvalidatedCache: java.util.ArrayList getActiveCorks()>();

        $i0 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        if $i0 <= 0 goto label12;

        virtualinvoke r20.<java.io.PrintWriter: void println(java.lang.String)>("  Corking Status:");

     label09:
        i3 = 0;

     label10:
        $i1 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        if i3 >= $i1 goto label12;

        $r7 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r4 = (java.util.Map$Entry) $r7;

        $r8 = newarray (java.lang.Object)[2];

        $r9 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r8[0] = $r9;

        $r10 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r8[1] = $r10;

        $r11 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("    Property Name: %s Count: %d", $r8);

        virtualinvoke r20.<java.io.PrintWriter: void println(java.lang.String)>($r11);

     label11:
        i3 = i3 + 1;

        goto label10;

     label12:
        exitmonitor r1;

     label13:
        i4 = 0;

     label14:
        $i5 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        if i4 >= $i5 goto label16;

        $r5 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        $r6 = (android.app.PropertyInvalidatedCache) $r5;

        specialinvoke $r6.<android.app.PropertyInvalidatedCache: void dumpContents(java.io.PrintWriter,java.lang.String[])>(r20, r19);

        virtualinvoke r20.<java.io.PrintWriter: void flush()>();

     label15:
        i4 = i4 + 1;

        goto label14;

     label16:
        virtualinvoke r20.<java.io.PrintWriter: void close()>();

     label17:
        virtualinvoke r0.<java.io.FileOutputStream: void close()>();

     label18:
        goto label35;

     label19:
        $r16 := @caughtexception;

     label20:
        exitmonitor r1;

     label21:
        throw $r16;

     label22:
        $r15 := @caughtexception;

     label23:
        virtualinvoke r20.<java.io.PrintWriter: void close()>();

     label24:
        goto label27;

     label25:
        $r13 := @caughtexception;

     label26:
        virtualinvoke $r15.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r13);

     label27:
        throw $r15;

     label28:
        $r17 := @caughtexception;

     label29:
        virtualinvoke r0.<java.io.FileOutputStream: void close()>();

     label30:
        goto label33;

     label31:
        $r14 := @caughtexception;

     label32:
        virtualinvoke $r17.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r14);

     label33:
        throw $r17;

     label34:
        $r12 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("PropertyInvalidatedCache", "Failed to dump PropertyInvalidatedCache instances");

     label35:
        return;

        catch java.io.IOException from label01 to label02 with label34;
        catch java.lang.Throwable from label02 to label03 with label28;
        catch java.lang.Throwable from label03 to label04 with label22;
        catch java.lang.Throwable from label04 to label05 with label28;
        catch java.io.IOException from label05 to label06 with label34;
        catch java.lang.Throwable from label07 to label08 with label22;
        catch java.lang.Throwable from label08 to label09 with label19;
        catch java.lang.Throwable from label10 to label11 with label19;
        catch java.lang.Throwable from label12 to label13 with label19;
        catch java.lang.Throwable from label14 to label15 with label22;
        catch java.lang.Throwable from label16 to label17 with label28;
        catch java.io.IOException from label17 to label18 with label34;
        catch java.lang.Throwable from label20 to label21 with label19;
        catch java.lang.Throwable from label21 to label22 with label22;
        catch java.lang.Throwable from label23 to label24 with label25;
        catch java.lang.Throwable from label26 to label27 with label28;
        catch java.lang.Throwable from label27 to label28 with label28;
        catch java.lang.Throwable from label29 to label30 with label31;
        catch java.io.IOException from label32 to label33 with label34;
        catch java.io.IOException from label33 to label34 with label34;
    }

    private void dumpContents(java.io.PrintWriter, java.lang.String[])
    {
        android.app.PropertyInvalidatedCache r0;
        long l0, $l1, $l2, $l3;
        java.lang.Object r1, $r6, $r28, $r30, $r32, r39;
        java.util.Map$Entry r2;
        java.util.HashMap $r3;
        java.lang.String $r4, $r9, $r10, $r15, $r18, $r24, $r26, $r31, $r33, $r34, r40;
        java.lang.Long $r5, $r7, $r12, $r13, $r14, $r17;
        java.lang.Object[] $r8, $r11, $r16, $r19, $r25, $r29;
        java.util.LinkedHashMap $r20, $r27;
        java.util.Set $r21, r41;
        int $i4, $i5, $i6;
        java.lang.Integer $r22, $r23;
        boolean $z0, $z1;
        java.lang.Throwable $r35, $r36;
        java.io.PrintWriter r37;
        java.lang.String[] r38;
        java.util.Iterator r42;

        r0 := @this: android.app.PropertyInvalidatedCache;

        r37 := @parameter0: java.io.PrintWriter;

        r38 := @parameter1: java.lang.String[];

        r39 = <android.app.PropertyInvalidatedCache: java.lang.Object sCorkLock>;

        entermonitor r39;

     label01:
        $r3 = <android.app.PropertyInvalidatedCache: java.util.HashMap sInvalidates>;

        $r4 = r0.<android.app.PropertyInvalidatedCache: java.lang.String mPropertyName>;

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L);

        $r6 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)>($r4, $r5);

        $r7 = (java.lang.Long) $r6;

        l0 = virtualinvoke $r7.<java.lang.Long: long longValue()>();

        exitmonitor r39;

     label02:
        r1 = r0.<android.app.PropertyInvalidatedCache: java.lang.Object mLock>;

        entermonitor r1;

     label03:
        $r8 = newarray (java.lang.Object)[1];

        $r9 = virtualinvoke r0.<android.app.PropertyInvalidatedCache: java.lang.String cacheName()>();

        $r8[0] = $r9;

        $r10 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("  Cache Property Name: %s", $r8);

        virtualinvoke r37.<java.io.PrintWriter: void println(java.lang.String)>($r10);

        $r11 = newarray (java.lang.Object)[3];

        $l1 = r0.<android.app.PropertyInvalidatedCache: long mHits>;

        $r12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r11[0] = $r12;

        $l2 = r0.<android.app.PropertyInvalidatedCache: long mMisses>;

        $r13 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r11[1] = $r13;

        $r14 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r11[2] = $r14;

        $r15 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("    Hits: %d, Misses: %d, Invalidates: %d", $r11);

        virtualinvoke r37.<java.io.PrintWriter: void println(java.lang.String)>($r15);

        $r16 = newarray (java.lang.Object)[1];

        $l3 = r0.<android.app.PropertyInvalidatedCache: long mLastSeenNonce>;

        $r17 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        $r16[0] = $r17;

        $r18 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("    Last Observed Nonce: %d", $r16);

        virtualinvoke r37.<java.io.PrintWriter: void println(java.lang.String)>($r18);

        $r19 = newarray (java.lang.Object)[2];

        $r20 = r0.<android.app.PropertyInvalidatedCache: java.util.LinkedHashMap mCache>;

        $r21 = virtualinvoke $r20.<java.util.LinkedHashMap: java.util.Set entrySet()>();

        $i4 = interfaceinvoke $r21.<java.util.Set: int size()>();

        $r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r19[0] = $r22;

        $i5 = r0.<android.app.PropertyInvalidatedCache: int mMaxEntries>;

        $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        $r19[1] = $r23;

        $r24 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("    Current Size: %d, Max Size: %d", $r19);

        virtualinvoke r37.<java.io.PrintWriter: void println(java.lang.String)>($r24);

        $z0 = r0.<android.app.PropertyInvalidatedCache: boolean mDisabled>;

        if $z0 == 0 goto label05;

     label04:
        r40 = "false";

        goto label06;

     label05:
        r40 = "true";

     label06:
        $r25 = newarray (java.lang.Object)[1];

        $r25[0] = r40;

        $r26 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("    Enabled: %s", $r25);

        virtualinvoke r37.<java.io.PrintWriter: void println(java.lang.String)>($r26);

        $r27 = r0.<android.app.PropertyInvalidatedCache: java.util.LinkedHashMap mCache>;

        r41 = virtualinvoke $r27.<java.util.LinkedHashMap: java.util.Set entrySet()>();

        $i6 = interfaceinvoke r41.<java.util.Set: int size()>();

        if $i6 != 0 goto label08;

        virtualinvoke r37.<java.io.PrintWriter: void println(java.lang.String)>("");

        exitmonitor r1;

     label07:
        return;

     label08:
        virtualinvoke r37.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r37.<java.io.PrintWriter: void println(java.lang.String)>("    Contents:");

        r42 = interfaceinvoke r41.<java.util.Set: java.util.Iterator iterator()>();

     label09:
        $z1 = interfaceinvoke r42.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label11;

        $r28 = interfaceinvoke r42.<java.util.Iterator: java.lang.Object next()>();

        r2 = (java.util.Map$Entry) $r28;

        $r29 = newarray (java.lang.Object)[2];

        $r30 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r31 = staticinvoke <java.util.Objects: java.lang.String toString(java.lang.Object)>($r30);

        $r29[0] = $r31;

        $r32 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r33 = staticinvoke <java.util.Objects: java.lang.String toString(java.lang.Object)>($r32);

        $r29[1] = $r33;

        $r34 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("      Key: %s\n      Value: %s\n", $r29);

        virtualinvoke r37.<java.io.PrintWriter: void println(java.lang.String)>($r34);

     label10:
        goto label09;

     label11:
        exitmonitor r1;

     label12:
        return;

     label13:
        $r35 := @caughtexception;

     label14:
        exitmonitor r1;

     label15:
        throw $r35;

     label16:
        $r36 := @caughtexception;

     label17:
        exitmonitor r39;

     label18:
        throw $r36;

        catch java.lang.Throwable from label01 to label02 with label16;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
        catch java.lang.Throwable from label17 to label18 with label16;
    }

    public static java.util.ArrayList getActiveCaches()
    {
        java.lang.Object r0;
        java.util.WeakHashMap $r1;
        java.util.Set $r2;
        java.lang.Throwable $r3;
        java.util.ArrayList r4;

        r0 = <android.app.PropertyInvalidatedCache: java.lang.Object sCorkLock>;

        entermonitor r0;

     label1:
        r4 = new java.util.ArrayList;

        $r1 = <android.app.PropertyInvalidatedCache: java.util.WeakHashMap sCaches>;

        $r2 = virtualinvoke $r1.<java.util.WeakHashMap: java.util.Set keySet()>();

        specialinvoke r4.<java.util.ArrayList: void <init>(java.util.Collection)>($r2);

        exitmonitor r0;

     label2:
        return r4;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public static java.util.ArrayList getActiveCorks()
    {
        java.lang.Object r0;
        java.util.HashMap $r1;
        java.util.Set $r2;
        java.lang.Throwable $r3;
        java.util.ArrayList r4;

        r0 = <android.app.PropertyInvalidatedCache: java.lang.Object sCorkLock>;

        entermonitor r0;

     label1:
        r4 = new java.util.ArrayList;

        $r1 = <android.app.PropertyInvalidatedCache: java.util.HashMap sCorks>;

        $r2 = virtualinvoke $r1.<java.util.HashMap: java.util.Set entrySet()>();

        specialinvoke r4.<java.util.ArrayList: void <init>(java.util.Collection)>($r2);

        exitmonitor r0;

     label2:
        return r4;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private long getCurrentNonce()
    {
        android.app.PropertyInvalidatedCache r0;
        android.os.SystemProperties$Handle r1, r3;
        long $l0;
        java.lang.String $r2;

        r0 := @this: android.app.PropertyInvalidatedCache;

        r1 = r0.<android.app.PropertyInvalidatedCache: android.os.SystemProperties$Handle mPropertyHandle>;

        r3 = r1;

        if r1 != null goto label2;

        $r2 = r0.<android.app.PropertyInvalidatedCache: java.lang.String mPropertyName>;

        r3 = staticinvoke <android.os.SystemProperties: android.os.SystemProperties$Handle find(java.lang.String)>($r2);

        if r3 != null goto label1;

        return 0L;

     label1:
        r0.<android.app.PropertyInvalidatedCache: android.os.SystemProperties$Handle mPropertyHandle> = r3;

     label2:
        $l0 = virtualinvoke r3.<android.os.SystemProperties$Handle: long getLong(long)>(0L);

        return $l0;
    }

    public static void invalidateCache(java.lang.String)
    {
        java.lang.Object r0, $r3;
        java.lang.Integer r1;
        boolean $z0;
        java.util.HashMap $r2;
        int $i0;
        java.lang.Throwable $r4;
        java.lang.String r5;

        r5 := @parameter0: java.lang.String;

        $z0 = <android.app.PropertyInvalidatedCache: boolean sEnabled>;

        if $z0 != 0 goto label01;

        return;

     label01:
        r0 = <android.app.PropertyInvalidatedCache: java.lang.Object sCorkLock>;

        entermonitor r0;

     label02:
        $r2 = <android.app.PropertyInvalidatedCache: java.util.HashMap sCorks>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r5);

        r1 = (java.lang.Integer) $r3;

     label03:
        if r1 == null goto label06;

     label04:
        $i0 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        if $i0 <= 0 goto label06;

        exitmonitor r0;

     label05:
        return;

     label06:
        staticinvoke <android.app.PropertyInvalidatedCache: void invalidateCacheLocked(java.lang.String)>(r5);

        exitmonitor r0;

     label07:
        return;

     label08:
        $r4 := @caughtexception;

     label09:
        exitmonitor r0;

     label10:
        throw $r4;

        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    private static void invalidateCacheLocked(java.lang.String)
    {
        java.lang.String r0, $r1;
        long $l0, $l4, l5, l6;
        byte $b1, $b2, $b3;
        java.util.HashMap $r2, $r6;
        java.lang.Long $r3, $r5, $r7;
        java.lang.Object $r4;

        r0 := @parameter0: java.lang.String;

        $l0 = staticinvoke <android.os.SystemProperties: long getLong(java.lang.String,long)>(r0, 0L);

        $b1 = $l0 cmp -1L;

        if $b1 != 0 goto label1;

        return;

     label1:
        l5 = staticinvoke <android.app.PropertyInvalidatedCache$NoPreloadHolder: long next()>();

        $b2 = l5 cmp 0L;

        if $b2 == 0 goto label2;

        $b3 = l5 cmp -1L;

        if $b3 == 0 goto label2;

        $r1 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l5);

        staticinvoke <android.os.SystemProperties: void set(java.lang.String,java.lang.String)>(r0, $r1);

        $r2 = <android.app.PropertyInvalidatedCache: java.util.HashMap sInvalidates>;

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L);

        $r4 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)>(r0, $r3);

        $r5 = (java.lang.Long) $r4;

        l6 = virtualinvoke $r5.<java.lang.Long: long longValue()>();

        $r6 = <android.app.PropertyInvalidatedCache: java.util.HashMap sInvalidates>;

        $l4 = 1L + l6;

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4);

        virtualinvoke $r6.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, $r7);

        return;

     label2:
        goto label1;
    }

    public static void uncorkInvalidations(java.lang.String)
    {
        java.lang.Object r0, $r5;
        int i0, $i1;
        java.lang.AssertionError r1;
        java.lang.StringBuilder r2;
        java.util.HashMap $r3, $r10, $r13;
        java.lang.Integer $r4, $r6, $r11;
        java.lang.String $r9, r16;
        java.lang.Throwable $r15;

        r16 := @parameter0: java.lang.String;

        r0 = <android.app.PropertyInvalidatedCache: java.lang.Object sCorkLock>;

        entermonitor r0;

     label01:
        $r3 = <android.app.PropertyInvalidatedCache: java.util.HashMap sCorks>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r5 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)>(r16, $r4);

        $r6 = (java.lang.Integer) $r5;

        i0 = virtualinvoke $r6.<java.lang.Integer: int intValue()>();

     label02:
        if i0 < 1 goto label08;

        if i0 != 1 goto label05;

     label03:
        $r13 = <android.app.PropertyInvalidatedCache: java.util.HashMap sCorks>;

        virtualinvoke $r13.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r16);

        staticinvoke <android.app.PropertyInvalidatedCache: void invalidateCacheLocked(java.lang.String)>(r16);

     label04:
        goto label06;

     label05:
        $r10 = <android.app.PropertyInvalidatedCache: java.util.HashMap sCorks>;

        $i1 = i0 - 1;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        virtualinvoke $r10.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r16, $r11);

     label06:
        exitmonitor r0;

     label07:
        return;

     label08:
        r1 = new java.lang.AssertionError;

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cork underflow: ");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16);

        $r9 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r1.<java.lang.AssertionError: void <init>(java.lang.Object)>($r9);

        throw r1;

     label09:
        $r15 := @caughtexception;

     label10:
        exitmonitor r0;

     label11:
        throw $r15;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label08 to label09 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public java.lang.String cacheName()
    {
        android.app.PropertyInvalidatedCache r0;
        java.lang.String $r1;

        r0 := @this: android.app.PropertyInvalidatedCache;

        $r1 = r0.<android.app.PropertyInvalidatedCache: java.lang.String mPropertyName>;

        return $r1;
    }

    public final void clear()
    {
        android.app.PropertyInvalidatedCache r0;
        java.lang.Object r1;
        java.util.LinkedHashMap $r3;
        java.lang.Throwable $r4;

        r0 := @this: android.app.PropertyInvalidatedCache;

        r1 = r0.<android.app.PropertyInvalidatedCache: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<android.app.PropertyInvalidatedCache: java.util.LinkedHashMap mCache>;

        virtualinvoke $r3.<java.util.LinkedHashMap: void clear()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    protected boolean debugCompareQueryResults(java.lang.Object, java.lang.Object)
    {
        android.app.PropertyInvalidatedCache r0;
        java.lang.Object r1, r2;
        boolean $z0;

        r0 := @this: android.app.PropertyInvalidatedCache;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        if r2 == null goto label1;

        $z0 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(r1, r2);

        return $z0;

     label1:
        return 1;
    }

    public final void disableLocal()
    {
        android.app.PropertyInvalidatedCache r0;
        java.lang.Object r1;
        java.util.LinkedHashMap $r3;
        java.lang.Throwable $r4;

        r0 := @this: android.app.PropertyInvalidatedCache;

        r1 = r0.<android.app.PropertyInvalidatedCache: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r0.<android.app.PropertyInvalidatedCache: boolean mDisabled> = 1;

        $r3 = r0.<android.app.PropertyInvalidatedCache: java.util.LinkedHashMap mCache>;

        virtualinvoke $r3.<java.util.LinkedHashMap: void clear()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public final void disableSystemWide()
    {
        android.app.PropertyInvalidatedCache r0;
        java.lang.String $r1;

        r0 := @this: android.app.PropertyInvalidatedCache;

        $r1 = r0.<android.app.PropertyInvalidatedCache: java.lang.String mPropertyName>;

        staticinvoke <android.app.PropertyInvalidatedCache: void disableSystemWide(java.lang.String)>($r1);

        return;
    }

    public final void invalidateCache()
    {
        android.app.PropertyInvalidatedCache r0;
        java.lang.String $r1;

        r0 := @this: android.app.PropertyInvalidatedCache;

        $r1 = r0.<android.app.PropertyInvalidatedCache: java.lang.String mPropertyName>;

        staticinvoke <android.app.PropertyInvalidatedCache: void invalidateCache(java.lang.String)>($r1);

        return;
    }

    public final boolean isDisabledLocal()
    {
        android.app.PropertyInvalidatedCache r0;
        boolean $z0, $z1, z2;

        r0 := @this: android.app.PropertyInvalidatedCache;

        $z0 = r0.<android.app.PropertyInvalidatedCache: boolean mDisabled>;

        if $z0 != 0 goto label2;

        $z1 = <android.app.PropertyInvalidatedCache: boolean sEnabled>;

        if $z1 != 0 goto label1;

        goto label2;

     label1:
        z2 = 0;

        goto label3;

     label2:
        z2 = 1;

     label3:
        return z2;
    }

    protected java.lang.Object maybeCheckConsistency(java.lang.Object, java.lang.Object)
    {
        android.app.PropertyInvalidatedCache r0;
        java.lang.Object r1, r2;

        r0 := @this: android.app.PropertyInvalidatedCache;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        return r2;
    }

    public java.lang.Object query(java.lang.Object)
    {
        android.app.PropertyInvalidatedCache r0;
        java.lang.Object r1, $r2, $r6, r15, r16, r17, r18, r19, $r20, r22, r23, $r24;
        long l0, $l2, $l4, $l7, $l9, $l10, l11, $l13, $l14;
        boolean $z0;
        byte $b1, $b3, $b5, $b6, $b8, $b12;
        java.util.LinkedHashMap $r3, $r4, $r7, $r9, $r11;
        java.lang.Throwable $r12, $r13, $r14;

        r0 := @this: android.app.PropertyInvalidatedCache;

        r15 := @parameter0: java.lang.Object;

        $z0 = virtualinvoke r0.<android.app.PropertyInvalidatedCache: boolean isDisabledLocal()>();

        if $z0 != 0 goto label01;

        l11 = specialinvoke r0.<android.app.PropertyInvalidatedCache: long getCurrentNonce()>();

        goto label02;

     label01:
        l11 = -1L;

     label02:
        $b12 = l11 cmp -1L;

        if $b12 == 0 goto label37;

        $b1 = l11 cmp 0L;

        if $b1 != 0 goto label03;

        goto label37;

     label03:
        r1 = r0.<android.app.PropertyInvalidatedCache: java.lang.Object mLock>;

        entermonitor r1;

     label04:
        $l2 = r0.<android.app.PropertyInvalidatedCache: long mLastSeenNonce>;

        $b3 = l11 cmp $l2;

        if $b3 != 0 goto label08;

        $r11 = r0.<android.app.PropertyInvalidatedCache: java.util.LinkedHashMap mCache>;

        r16 = virtualinvoke $r11.<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>(r15);

     label05:
        r17 = r16;

        if r16 == null goto label10;

     label06:
        $l9 = r0.<android.app.PropertyInvalidatedCache: long mHits>;

        $l10 = $l9 + 1L;

        r0.<android.app.PropertyInvalidatedCache: long mHits> = $l10;

     label07:
        r17 = r16;

        goto label10;

     label08:
        $r3 = r0.<android.app.PropertyInvalidatedCache: java.util.LinkedHashMap mCache>;

        virtualinvoke $r3.<java.util.LinkedHashMap: void clear()>();

        r0.<android.app.PropertyInvalidatedCache: long mLastSeenNonce> = l11;

     label09:
        r17 = null;

     label10:
        exitmonitor r1;

     label11:
        if r17 == null goto label25;

        r18 = virtualinvoke r0.<android.app.PropertyInvalidatedCache: java.lang.Object refresh(java.lang.Object,java.lang.Object)>(r17, r15);

        if r18 == r17 goto label24;

        l0 = specialinvoke r0.<android.app.PropertyInvalidatedCache: long getCurrentNonce()>();

        $b6 = l11 cmp l0;

        if $b6 == 0 goto label12;

        l11 = l0;

        goto label02;

     label12:
        r19 = r0.<android.app.PropertyInvalidatedCache: java.lang.Object mLock>;

        entermonitor r19;

     label13:
        $l7 = r0.<android.app.PropertyInvalidatedCache: long mLastSeenNonce>;

        $b8 = l11 cmp $l7;

        if $b8 == 0 goto label15;

     label14:
        goto label19;

     label15:
        if r18 != null goto label18;

     label16:
        $r9 = r0.<android.app.PropertyInvalidatedCache: java.util.LinkedHashMap mCache>;

        virtualinvoke $r9.<java.util.LinkedHashMap: java.lang.Object remove(java.lang.Object)>(r15);

     label17:
        goto label19;

     label18:
        $r7 = r0.<android.app.PropertyInvalidatedCache: java.util.LinkedHashMap mCache>;

        virtualinvoke $r7.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r15, r18);

     label19:
        exitmonitor r19;

     label20:
        $r20 = virtualinvoke r0.<android.app.PropertyInvalidatedCache: java.lang.Object maybeCheckConsistency(java.lang.Object,java.lang.Object)>(r15, r18);

        return $r20;

     label21:
        $r14 := @caughtexception;

     label22:
        exitmonitor r19;

     label23:
        throw $r14;

     label24:
        $r6 = virtualinvoke r0.<android.app.PropertyInvalidatedCache: java.lang.Object maybeCheckConsistency(java.lang.Object,java.lang.Object)>(r15, r17);

        return $r6;

     label25:
        r22 = virtualinvoke r0.<android.app.PropertyInvalidatedCache: java.lang.Object recompute(java.lang.Object)>(r15);

        r23 = r0.<android.app.PropertyInvalidatedCache: java.lang.Object mLock>;

        entermonitor r23;

     label26:
        $l4 = r0.<android.app.PropertyInvalidatedCache: long mLastSeenNonce>;

        $b5 = $l4 cmp l11;

        if $b5 != 0 goto label29;

     label27:
        if r22 == null goto label29;

     label28:
        $r4 = r0.<android.app.PropertyInvalidatedCache: java.util.LinkedHashMap mCache>;

        virtualinvoke $r4.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r15, r22);

     label29:
        $l13 = r0.<android.app.PropertyInvalidatedCache: long mMisses>;

        $l14 = $l13 + 1L;

        r0.<android.app.PropertyInvalidatedCache: long mMisses> = $l14;

        exitmonitor r23;

     label30:
        $r24 = virtualinvoke r0.<android.app.PropertyInvalidatedCache: java.lang.Object maybeCheckConsistency(java.lang.Object,java.lang.Object)>(r15, r22);

        return $r24;

     label31:
        $r12 := @caughtexception;

     label32:
        exitmonitor r23;

     label33:
        throw $r12;

     label34:
        $r13 := @caughtexception;

     label35:
        exitmonitor r1;

     label36:
        throw $r13;

     label37:
        $r2 = virtualinvoke r0.<android.app.PropertyInvalidatedCache: java.lang.Object recompute(java.lang.Object)>(r15);

        return $r2;

        catch java.lang.Throwable from label04 to label05 with label34;
        catch java.lang.Throwable from label06 to label07 with label34;
        catch java.lang.Throwable from label08 to label09 with label34;
        catch java.lang.Throwable from label10 to label11 with label34;
        catch java.lang.Throwable from label13 to label14 with label21;
        catch java.lang.Throwable from label16 to label17 with label21;
        catch java.lang.Throwable from label18 to label19 with label21;
        catch java.lang.Throwable from label19 to label20 with label21;
        catch java.lang.Throwable from label22 to label23 with label21;
        catch java.lang.Throwable from label26 to label27 with label31;
        catch java.lang.Throwable from label28 to label29 with label31;
        catch java.lang.Throwable from label29 to label30 with label31;
        catch java.lang.Throwable from label32 to label33 with label31;
        catch java.lang.Throwable from label35 to label36 with label34;
    }

    public java.lang.String queryToString(java.lang.Object)
    {
        android.app.PropertyInvalidatedCache r0;
        java.lang.Object r1;
        java.lang.String $r2;

        r0 := @this: android.app.PropertyInvalidatedCache;

        r1 := @parameter0: java.lang.Object;

        $r2 = staticinvoke <java.util.Objects: java.lang.String toString(java.lang.Object)>(r1);

        return $r2;
    }

    protected abstract java.lang.Object recompute(java.lang.Object);

    protected java.lang.Object refresh(java.lang.Object, java.lang.Object)
    {
        android.app.PropertyInvalidatedCache r0;
        java.lang.Object r1, r2;

        r0 := @this: android.app.PropertyInvalidatedCache;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        return r1;
    }
}
