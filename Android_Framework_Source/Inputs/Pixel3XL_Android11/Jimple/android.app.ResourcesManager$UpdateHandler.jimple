class android.app.ResourcesManager$UpdateHandler extends java.lang.Object implements android.content.res.Resources$UpdateCallbacks
{
    final android.app.ResourcesManager this$0;

    private void <init>(android.app.ResourcesManager)
    {
        android.app.ResourcesManager$UpdateHandler r0;
        android.app.ResourcesManager r1;

        r0 := @this: android.app.ResourcesManager$UpdateHandler;

        r1 := @parameter0: android.app.ResourcesManager;

        r0.<android.app.ResourcesManager$UpdateHandler: android.app.ResourcesManager this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(android.app.ResourcesManager, android.app.ResourcesManager$1)
    {
        android.app.ResourcesManager$UpdateHandler r0;
        android.app.ResourcesManager r1;
        android.app.ResourcesManager$1 r2;

        r0 := @this: android.app.ResourcesManager$UpdateHandler;

        r1 := @parameter0: android.app.ResourcesManager;

        r2 := @parameter1: android.app.ResourcesManager$1;

        specialinvoke r0.<android.app.ResourcesManager$UpdateHandler: void <init>(android.app.ResourcesManager)>(r1);

        return;
    }

    public void onLoaderUpdated(android.content.res.loader.ResourcesLoader)
    {
        android.app.ResourcesManager$UpdateHandler r0;
        android.app.ResourcesManager r1, $r5, $r7, $r8, $r11, $r16;
        android.util.ArrayMap r2, $r6, $r9, $r12, $r17;
        android.content.res.ResourcesKey r3;
        java.lang.ref.WeakReference r4;
        int $i0, i1;
        java.lang.Object $r10, $r13, $r14, $r19;
        android.content.res.loader.ResourcesLoader[] $r15;
        boolean $z0;
        android.content.res.ResourcesImpl $r20;
        java.lang.Throwable $r22;
        android.content.res.loader.ResourcesLoader r23;

        r0 := @this: android.app.ResourcesManager$UpdateHandler;

        r23 := @parameter0: android.content.res.loader.ResourcesLoader;

        r1 = r0.<android.app.ResourcesManager$UpdateHandler: android.app.ResourcesManager this$0>;

        entermonitor r1;

     label01:
        r2 = new android.util.ArrayMap;

        specialinvoke r2.<android.util.ArrayMap: void <init>()>();

        $r5 = r0.<android.app.ResourcesManager$UpdateHandler: android.app.ResourcesManager this$0>;

        $r6 = staticinvoke <android.app.ResourcesManager: android.util.ArrayMap access$400(android.app.ResourcesManager)>($r5);

        $i0 = virtualinvoke $r6.<android.util.ArrayMap: int size()>();

        i1 = $i0 - 1;

     label02:
        if i1 < 0 goto label09;

     label03:
        $r8 = r0.<android.app.ResourcesManager$UpdateHandler: android.app.ResourcesManager this$0>;

        $r9 = staticinvoke <android.app.ResourcesManager: android.util.ArrayMap access$400(android.app.ResourcesManager)>($r8);

        $r10 = virtualinvoke $r9.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i1);

        r3 = (android.content.res.ResourcesKey) $r10;

        $r11 = r0.<android.app.ResourcesManager$UpdateHandler: android.app.ResourcesManager this$0>;

        $r12 = staticinvoke <android.app.ResourcesManager: android.util.ArrayMap access$400(android.app.ResourcesManager)>($r11);

        $r13 = virtualinvoke $r12.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i1);

        r4 = (java.lang.ref.WeakReference) $r13;

     label04:
        if r4 == null goto label08;

     label05:
        $r14 = virtualinvoke r4.<java.lang.ref.WeakReference: java.lang.Object get()>();

        if $r14 == null goto label08;

        $r15 = r3.<android.content.res.ResourcesKey: android.content.res.loader.ResourcesLoader[] mLoaders>;

        $z0 = staticinvoke <com.android.internal.util.ArrayUtils: boolean contains(java.lang.Object[],java.lang.Object)>($r15, r23);

        if $z0 != 0 goto label07;

     label06:
        goto label08;

     label07:
        $r16 = r0.<android.app.ResourcesManager$UpdateHandler: android.app.ResourcesManager this$0>;

        $r17 = staticinvoke <android.app.ResourcesManager: android.util.ArrayMap access$400(android.app.ResourcesManager)>($r16);

        virtualinvoke $r17.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r3);

        $r19 = virtualinvoke r4.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r20 = (android.content.res.ResourcesImpl) $r19;

        virtualinvoke r2.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r20, r3);

     label08:
        i1 = i1 + -1;

        goto label02;

     label09:
        $r7 = r0.<android.app.ResourcesManager$UpdateHandler: android.app.ResourcesManager this$0>;

        staticinvoke <android.app.ResourcesManager: void access$500(android.app.ResourcesManager,android.util.ArrayMap)>($r7, r2);

        exitmonitor r1;

     label10:
        return;

     label11:
        $r22 := @caughtexception;

     label12:
        exitmonitor r1;

     label13:
        throw $r22;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    public void onLoadersChanged(android.content.res.Resources, java.util.List)
    {
        android.app.ResourcesManager$UpdateHandler r0;
        java.util.List r1;
        android.app.ResourcesManager r2, $r5, $r16;
        android.content.res.ResourcesKey r3, r4;
        android.content.res.ResourcesImpl $r6, $r17;
        android.content.res.loader.ResourcesLoader[] $r7, $r15;
        java.lang.String $r8;
        java.lang.String[] $r9, $r10, $r11;
        int $i0;
        android.content.res.Configuration $r12;
        android.content.res.CompatibilityInfo $r13;
        java.lang.Object[] $r14;
        java.lang.Throwable $r18;
        android.content.res.Resources r19;
        java.lang.IllegalArgumentException r20;

        r0 := @this: android.app.ResourcesManager$UpdateHandler;

        r19 := @parameter0: android.content.res.Resources;

        r1 := @parameter1: java.util.List;

        r2 = r0.<android.app.ResourcesManager$UpdateHandler: android.app.ResourcesManager this$0>;

        entermonitor r2;

     label1:
        $r5 = r0.<android.app.ResourcesManager$UpdateHandler: android.app.ResourcesManager this$0>;

        $r6 = virtualinvoke r19.<android.content.res.Resources: android.content.res.ResourcesImpl getImpl()>();

        r3 = staticinvoke <android.app.ResourcesManager: android.content.res.ResourcesKey access$200(android.app.ResourcesManager,android.content.res.ResourcesImpl)>($r5, $r6);

     label2:
        if r3 == null goto label5;

     label3:
        r4 = new android.content.res.ResourcesKey;

        $r8 = r3.<android.content.res.ResourcesKey: java.lang.String mResDir>;

        $r9 = r3.<android.content.res.ResourcesKey: java.lang.String[] mSplitResDirs>;

        $r10 = r3.<android.content.res.ResourcesKey: java.lang.String[] mOverlayDirs>;

        $r11 = r3.<android.content.res.ResourcesKey: java.lang.String[] mLibDirs>;

        $i0 = r3.<android.content.res.ResourcesKey: int mDisplayId>;

        $r12 = r3.<android.content.res.ResourcesKey: android.content.res.Configuration mOverrideConfiguration>;

        $r13 = r3.<android.content.res.ResourcesKey: android.content.res.CompatibilityInfo mCompatInfo>;

        $r7 = newarray (android.content.res.loader.ResourcesLoader)[0];

        $r14 = interfaceinvoke r1.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r7);

        $r15 = (android.content.res.loader.ResourcesLoader[]) $r14;

        specialinvoke r4.<android.content.res.ResourcesKey: void <init>(java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],int,android.content.res.Configuration,android.content.res.CompatibilityInfo,android.content.res.loader.ResourcesLoader[])>($r8, $r9, $r10, $r11, $i0, $r12, $r13, $r15);

        $r16 = r0.<android.app.ResourcesManager$UpdateHandler: android.app.ResourcesManager this$0>;

        $r17 = staticinvoke <android.app.ResourcesManager: android.content.res.ResourcesImpl access$300(android.app.ResourcesManager,android.content.res.ResourcesKey)>($r16, r4);

        virtualinvoke r19.<android.content.res.Resources: void setImpl(android.content.res.ResourcesImpl)>($r17);

        exitmonitor r2;

     label4:
        return;

     label5:
        r20 = new java.lang.IllegalArgumentException;

        specialinvoke r20.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot modify resource loaders of ResourcesImpl not registered with ResourcesManager");

        throw r20;

     label6:
        $r18 := @caughtexception;

     label7:
        exitmonitor r2;

     label8:
        throw $r18;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label5 to label6 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }
}
