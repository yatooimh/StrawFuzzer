public class android.app.ResourcesManager extends java.lang.Object
{
    private static final boolean DEBUG;
    private static final boolean ENABLE_APK_ASSETS_CACHE;
    static final java.lang.String TAG;
    private static android.app.ResourcesManager sResourcesManager;
    private final java.util.WeakHashMap mActivityResourceReferences;
    private final android.util.ArrayMap mAdjustedDisplays;
    private final android.util.ArrayMap mCachedApkAssets;
    private final android.util.LruCache mLoadedApkAssets;
    private android.content.res.CompatibilityInfo mResCompatibilityInfo;
    private final android.content.res.Configuration mResConfiguration;
    private final android.util.ArrayMap mResourceImpls;
    private final java.util.ArrayList mResourceReferences;
    private final java.lang.ref.ReferenceQueue mResourcesReferencesQueue;
    private final android.app.ResourcesManager$UpdateHandler mUpdateCallbacks;

    public void <init>()
    {
        android.app.ResourcesManager r0;
        android.content.res.Configuration $r1;
        android.util.ArrayMap $r2, $r5, $r7;
        java.util.ArrayList $r3;
        java.lang.ref.ReferenceQueue $r4;
        java.util.WeakHashMap $r6;
        android.app.ResourcesManager$UpdateHandler $r8;

        r0 := @this: android.app.ResourcesManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new android.content.res.Configuration;

        specialinvoke $r1.<android.content.res.Configuration: void <init>()>();

        r0.<android.app.ResourcesManager: android.content.res.Configuration mResConfiguration> = $r1;

        $r2 = new android.util.ArrayMap;

        specialinvoke $r2.<android.util.ArrayMap: void <init>()>();

        r0.<android.app.ResourcesManager: android.util.ArrayMap mResourceImpls> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<android.app.ResourcesManager: java.util.ArrayList mResourceReferences> = $r3;

        $r4 = new java.lang.ref.ReferenceQueue;

        specialinvoke $r4.<java.lang.ref.ReferenceQueue: void <init>()>();

        r0.<android.app.ResourcesManager: java.lang.ref.ReferenceQueue mResourcesReferencesQueue> = $r4;

        r0.<android.app.ResourcesManager: android.util.LruCache mLoadedApkAssets> = null;

        $r5 = new android.util.ArrayMap;

        specialinvoke $r5.<android.util.ArrayMap: void <init>()>();

        r0.<android.app.ResourcesManager: android.util.ArrayMap mCachedApkAssets> = $r5;

        $r6 = new java.util.WeakHashMap;

        specialinvoke $r6.<java.util.WeakHashMap: void <init>()>();

        r0.<android.app.ResourcesManager: java.util.WeakHashMap mActivityResourceReferences> = $r6;

        $r7 = new android.util.ArrayMap;

        specialinvoke $r7.<android.util.ArrayMap: void <init>()>();

        r0.<android.app.ResourcesManager: android.util.ArrayMap mAdjustedDisplays> = $r7;

        $r8 = new android.app.ResourcesManager$UpdateHandler;

        specialinvoke $r8.<android.app.ResourcesManager$UpdateHandler: void <init>(android.app.ResourcesManager,android.app.ResourcesManager$1)>(r0, null);

        r0.<android.app.ResourcesManager: android.app.ResourcesManager$UpdateHandler mUpdateCallbacks> = $r8;

        return;
    }

    static android.content.res.ResourcesKey access$200(android.app.ResourcesManager, android.content.res.ResourcesImpl)
    {
        android.app.ResourcesManager r0;
        android.content.res.ResourcesImpl r1;
        android.content.res.ResourcesKey $r2;

        r0 := @parameter0: android.app.ResourcesManager;

        r1 := @parameter1: android.content.res.ResourcesImpl;

        $r2 = specialinvoke r0.<android.app.ResourcesManager: android.content.res.ResourcesKey findKeyForResourceImplLocked(android.content.res.ResourcesImpl)>(r1);

        return $r2;
    }

    static android.content.res.ResourcesImpl access$300(android.app.ResourcesManager, android.content.res.ResourcesKey)
    {
        android.app.ResourcesManager r0;
        android.content.res.ResourcesKey r1;
        android.content.res.ResourcesImpl $r2;

        r0 := @parameter0: android.app.ResourcesManager;

        r1 := @parameter1: android.content.res.ResourcesKey;

        $r2 = specialinvoke r0.<android.app.ResourcesManager: android.content.res.ResourcesImpl findOrCreateResourcesImplForKeyLocked(android.content.res.ResourcesKey)>(r1);

        return $r2;
    }

    static android.util.ArrayMap access$400(android.app.ResourcesManager)
    {
        android.app.ResourcesManager r0;
        android.util.ArrayMap $r1;

        r0 := @parameter0: android.app.ResourcesManager;

        $r1 = r0.<android.app.ResourcesManager: android.util.ArrayMap mResourceImpls>;

        return $r1;
    }

    static void access$500(android.app.ResourcesManager, android.util.ArrayMap)
    {
        android.app.ResourcesManager r0;
        android.util.ArrayMap r1;

        r0 := @parameter0: android.app.ResourcesManager;

        r1 := @parameter1: android.util.ArrayMap;

        specialinvoke r0.<android.app.ResourcesManager: void redirectResourcesToNewImplLocked(android.util.ArrayMap)>(r1);

        return;
    }

    private void applyConfigurationToResourcesLocked(android.content.res.Configuration, android.content.res.CompatibilityInfo, android.content.res.Configuration, android.content.res.ResourcesKey, android.content.res.ResourcesImpl)
    {
        android.app.ResourcesManager r0;
        android.content.res.CompatibilityInfo r1;
        android.content.res.Configuration r2, $r6, $r8, r9;
        android.content.res.ResourcesKey r3;
        android.content.res.ResourcesImpl r4;
        boolean z0;
        android.view.DisplayAdjustments r5, $r7, r10;
        int i0;
        android.util.DisplayMetrics r11;

        r0 := @this: android.app.ResourcesManager;

        r9 := @parameter0: android.content.res.Configuration;

        r1 := @parameter1: android.content.res.CompatibilityInfo;

        r2 := @parameter2: android.content.res.Configuration;

        r3 := @parameter3: android.content.res.ResourcesKey;

        r4 := @parameter4: android.content.res.ResourcesImpl;

        virtualinvoke r2.<android.content.res.Configuration: void setTo(android.content.res.Configuration)>(r9);

        z0 = virtualinvoke r3.<android.content.res.ResourcesKey: boolean hasOverrideConfiguration()>();

        if z0 == 0 goto label1;

        $r8 = r3.<android.content.res.ResourcesKey: android.content.res.Configuration mOverrideConfiguration>;

        virtualinvoke r2.<android.content.res.Configuration: int updateFrom(android.content.res.Configuration)>($r8);

     label1:
        r5 = virtualinvoke r4.<android.content.res.ResourcesImpl: android.view.DisplayAdjustments getDisplayAdjustments()>();

        r10 = r5;

        if r1 == null goto label2;

        $r7 = new android.view.DisplayAdjustments;

        specialinvoke $r7.<android.view.DisplayAdjustments: void <init>(android.view.DisplayAdjustments)>(r5);

        r10 = $r7;

        virtualinvoke $r7.<android.view.DisplayAdjustments: void setCompatibilityInfo(android.content.res.CompatibilityInfo)>(r1);

     label2:
        i0 = r3.<android.content.res.ResourcesKey: int mDisplayId>;

        if i0 != 0 goto label3;

        virtualinvoke r10.<android.view.DisplayAdjustments: void setConfiguration(android.content.res.Configuration)>(r2);

     label3:
        r11 = virtualinvoke r0.<android.app.ResourcesManager: android.util.DisplayMetrics getDisplayMetrics(int,android.view.DisplayAdjustments)>(i0, r10);

        if i0 == 0 goto label4;

        staticinvoke <android.app.ResourcesManager: void applyNonDefaultDisplayMetricsToConfiguration(android.util.DisplayMetrics,android.content.res.Configuration)>(r11, r2);

        if z0 == 0 goto label4;

        $r6 = r3.<android.content.res.ResourcesKey: android.content.res.Configuration mOverrideConfiguration>;

        virtualinvoke r2.<android.content.res.Configuration: int updateFrom(android.content.res.Configuration)>($r6);

     label4:
        virtualinvoke r4.<android.content.res.ResourcesImpl: void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics,android.content.res.CompatibilityInfo)>(r2, r11, r1);

        return;
    }

    private static void applyNonDefaultDisplayMetricsToConfiguration(android.util.DisplayMetrics, android.content.res.Configuration)
    {
        android.util.DisplayMetrics r0;
        android.content.res.Configuration r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20;
        float $f0, $f1, $f2, $f3, $f4, $f5;

        r0 := @parameter0: android.util.DisplayMetrics;

        r1 := @parameter1: android.content.res.Configuration;

        r1.<android.content.res.Configuration: int touchscreen> = 1;

        $i1 = r0.<android.util.DisplayMetrics: int densityDpi>;

        r1.<android.content.res.Configuration: int densityDpi> = $i1;

        $i2 = r0.<android.util.DisplayMetrics: int widthPixels>;

        $f1 = (float) $i2;

        $f0 = r0.<android.util.DisplayMetrics: float density>;

        $f2 = $f1 / $f0;

        $i3 = (int) $f2;

        r1.<android.content.res.Configuration: int screenWidthDp> = $i3;

        $i4 = r0.<android.util.DisplayMetrics: int heightPixels>;

        $f4 = (float) $i4;

        $f3 = r0.<android.util.DisplayMetrics: float density>;

        $f5 = $f4 / $f3;

        $i5 = (int) $f5;

        r1.<android.content.res.Configuration: int screenHeightDp> = $i5;

        $i6 = r1.<android.content.res.Configuration: int screenLayout>;

        i0 = staticinvoke <android.content.res.Configuration: int resetScreenLayout(int)>($i6);

        $i8 = r0.<android.util.DisplayMetrics: int widthPixels>;

        $i7 = r0.<android.util.DisplayMetrics: int heightPixels>;

        if $i8 <= $i7 goto label1;

        r1.<android.content.res.Configuration: int orientation> = 2;

        $i19 = r1.<android.content.res.Configuration: int screenWidthDp>;

        $i18 = r1.<android.content.res.Configuration: int screenHeightDp>;

        $i20 = staticinvoke <android.content.res.Configuration: int reduceScreenLayout(int,int,int)>(i0, $i19, $i18);

        r1.<android.content.res.Configuration: int screenLayout> = $i20;

        goto label2;

     label1:
        r1.<android.content.res.Configuration: int orientation> = 1;

        $i10 = r1.<android.content.res.Configuration: int screenHeightDp>;

        $i9 = r1.<android.content.res.Configuration: int screenWidthDp>;

        $i11 = staticinvoke <android.content.res.Configuration: int reduceScreenLayout(int,int,int)>(i0, $i10, $i9);

        r1.<android.content.res.Configuration: int screenLayout> = $i11;

     label2:
        $i13 = r1.<android.content.res.Configuration: int screenWidthDp>;

        $i12 = r1.<android.content.res.Configuration: int screenHeightDp>;

        $i14 = staticinvoke <java.lang.Math: int min(int,int)>($i13, $i12);

        r1.<android.content.res.Configuration: int smallestScreenWidthDp> = $i14;

        $i15 = r1.<android.content.res.Configuration: int screenWidthDp>;

        r1.<android.content.res.Configuration: int compatScreenWidthDp> = $i15;

        $i16 = r1.<android.content.res.Configuration: int screenHeightDp>;

        r1.<android.content.res.Configuration: int compatScreenHeightDp> = $i16;

        $i17 = r1.<android.content.res.Configuration: int smallestScreenWidthDp>;

        r1.<android.content.res.Configuration: int compatSmallestScreenWidthDp> = $i17;

        return;
    }

    private static void cleanupReferences(java.util.ArrayList, java.lang.ref.ReferenceQueue)
    {
        java.util.ArrayList r0;
        java.lang.ref.ReferenceQueue r1;
        java.util.HashSet $r3;
        android.app._$$Lambda$ResourcesManager$JPMYJ3O5qlFN_c1356pr2ximEb0 $r4;
        java.lang.ref.Reference r5;

        r0 := @parameter0: java.util.ArrayList;

        r1 := @parameter1: java.lang.ref.ReferenceQueue;

        r5 = virtualinvoke r1.<java.lang.ref.ReferenceQueue: java.lang.ref.Reference poll()>();

        if r5 != null goto label1;

        return;

     label1:
        $r3 = new java.util.HashSet;

        specialinvoke $r3.<java.util.HashSet: void <init>()>();

     label2:
        if r5 == null goto label3;

        virtualinvoke $r3.<java.util.HashSet: boolean add(java.lang.Object)>(r5);

        r5 = virtualinvoke r1.<java.lang.ref.ReferenceQueue: java.lang.ref.Reference poll()>();

        goto label2;

     label3:
        $r4 = new android.app._$$Lambda$ResourcesManager$JPMYJ3O5qlFN_c1356pr2ximEb0;

        specialinvoke $r4.<android.app._$$Lambda$ResourcesManager$JPMYJ3O5qlFN_c1356pr2ximEb0: void <init>(java.util.HashSet)>($r3);

        staticinvoke <com.android.internal.util.ArrayUtils: int unstableRemoveIf(java.util.ArrayList,java.util.function.Predicate)>(r0, $r4);

        return;
    }

    private static int countLiveReferences(java.util.Collection)
    {
        java.util.Iterator r0;
        boolean $z0;
        java.lang.Object $r1, r4;
        java.util.Collection r2;
        int i0, i1;
        java.lang.ref.WeakReference r3;

        r2 := @parameter0: java.util.Collection;

        i0 = 0;

        r0 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r0.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r1 = interfaceinvoke r0.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.ref.WeakReference) $r1;

        if r3 == null goto label2;

        r4 = virtualinvoke r3.<java.lang.ref.WeakReference: java.lang.Object get()>();

        goto label3;

     label2:
        r4 = null;

     label3:
        i1 = i0;

        if r4 == null goto label4;

        i1 = i0 + 1;

     label4:
        i0 = i1;

        goto label1;

     label5:
        return i0;
    }

    private android.content.res.Resources createResources(android.os.IBinder, android.content.res.ResourcesKey, java.lang.ClassLoader)
    {
        android.app.ResourcesManager r0;
        android.content.res.ResourcesKey r1;
        java.lang.ClassLoader r2;
        android.content.res.ResourcesImpl r3;
        android.content.res.CompatibilityInfo $r4, $r5;
        java.lang.Throwable $r6;
        android.os.IBinder r7;
        android.content.res.Resources r8, r9;

        r0 := @this: android.app.ResourcesManager;

        r7 := @parameter0: android.os.IBinder;

        r1 := @parameter1: android.content.res.ResourcesKey;

        r2 := @parameter2: java.lang.ClassLoader;

        entermonitor r0;

     label01:
        r3 = specialinvoke r0.<android.app.ResourcesManager: android.content.res.ResourcesImpl findOrCreateResourcesImplForKeyLocked(android.content.res.ResourcesKey)>(r1);

     label02:
        if r3 != null goto label05;

     label03:
        exitmonitor r0;

     label04:
        return null;

     label05:
        if r7 == null goto label08;

     label06:
        $r5 = r1.<android.content.res.ResourcesKey: android.content.res.CompatibilityInfo mCompatInfo>;

        r8 = specialinvoke r0.<android.app.ResourcesManager: android.content.res.Resources createResourcesForActivityLocked(android.os.IBinder,java.lang.ClassLoader,android.content.res.ResourcesImpl,android.content.res.CompatibilityInfo)>(r7, r2, r3, $r5);

        exitmonitor r0;

     label07:
        return r8;

     label08:
        $r4 = r1.<android.content.res.ResourcesKey: android.content.res.CompatibilityInfo mCompatInfo>;

        r9 = specialinvoke r0.<android.app.ResourcesManager: android.content.res.Resources createResourcesLocked(java.lang.ClassLoader,android.content.res.ResourcesImpl,android.content.res.CompatibilityInfo)>(r2, r3, $r4);

        exitmonitor r0;

     label09:
        return r9;

     label10:
        $r6 := @caughtexception;

     label11:
        exitmonitor r0;

     label12:
        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    private android.content.res.Resources createResourcesForActivityLocked(android.os.IBinder, java.lang.ClassLoader, android.content.res.ResourcesImpl, android.content.res.CompatibilityInfo)
    {
        android.app.ResourcesManager r0;
        java.lang.ClassLoader r1;
        android.content.res.ResourcesImpl r2;
        android.content.res.CompatibilityInfo r3;
        android.app.ResourcesManager$ActivityResources r4;
        java.lang.ref.ReferenceQueue $r5, $r10;
        java.util.ArrayList $r6, $r11;
        boolean $z0;
        android.content.res.Resources $r7, r14;
        android.app.ResourcesManager$UpdateHandler $r8;
        java.lang.ref.WeakReference $r9;
        android.content.res.CompatResources $r12;
        android.os.IBinder r13;

        r0 := @this: android.app.ResourcesManager;

        r13 := @parameter0: android.os.IBinder;

        r1 := @parameter1: java.lang.ClassLoader;

        r2 := @parameter2: android.content.res.ResourcesImpl;

        r3 := @parameter3: android.content.res.CompatibilityInfo;

        r4 = specialinvoke r0.<android.app.ResourcesManager: android.app.ResourcesManager$ActivityResources getOrCreateActivityResourcesStructLocked(android.os.IBinder)>(r13);

        $r6 = r4.<android.app.ResourcesManager$ActivityResources: java.util.ArrayList activityResources>;

        $r5 = r4.<android.app.ResourcesManager$ActivityResources: java.lang.ref.ReferenceQueue activityResourcesQueue>;

        staticinvoke <android.app.ResourcesManager: void cleanupReferences(java.util.ArrayList,java.lang.ref.ReferenceQueue)>($r6, $r5);

        $z0 = virtualinvoke r3.<android.content.res.CompatibilityInfo: boolean needsCompatResources()>();

        if $z0 == 0 goto label1;

        $r12 = new android.content.res.CompatResources;

        specialinvoke $r12.<android.content.res.CompatResources: void <init>(java.lang.ClassLoader)>(r1);

        r14 = $r12;

        goto label2;

     label1:
        $r7 = new android.content.res.Resources;

        specialinvoke $r7.<android.content.res.Resources: void <init>(java.lang.ClassLoader)>(r1);

        r14 = $r7;

     label2:
        virtualinvoke r14.<android.content.res.Resources: void setImpl(android.content.res.ResourcesImpl)>(r2);

        $r8 = r0.<android.app.ResourcesManager: android.app.ResourcesManager$UpdateHandler mUpdateCallbacks>;

        virtualinvoke r14.<android.content.res.Resources: void setCallbacks(android.content.res.Resources$UpdateCallbacks)>($r8);

        $r11 = r4.<android.app.ResourcesManager$ActivityResources: java.util.ArrayList activityResources>;

        $r9 = new java.lang.ref.WeakReference;

        $r10 = r4.<android.app.ResourcesManager$ActivityResources: java.lang.ref.ReferenceQueue activityResourcesQueue>;

        specialinvoke $r9.<java.lang.ref.WeakReference: void <init>(java.lang.Object,java.lang.ref.ReferenceQueue)>(r14, $r10);

        virtualinvoke $r11.<java.util.ArrayList: boolean add(java.lang.Object)>($r9);

        return r14;
    }

    private android.content.res.ResourcesImpl createResourcesImpl(android.content.res.ResourcesKey)
    {
        android.app.ResourcesManager r0;
        android.content.res.ResourcesKey r1;
        android.content.res.AssetManager r3;
        android.util.DisplayMetrics r4;
        android.view.DisplayAdjustments $r5;
        android.content.res.Configuration $r6, $r9;
        android.content.res.CompatibilityInfo $r7;
        int $i0;
        android.content.res.ResourcesImpl $r8;

        r0 := @this: android.app.ResourcesManager;

        r1 := @parameter0: android.content.res.ResourcesKey;

        $r5 = new android.view.DisplayAdjustments;

        $r6 = r1.<android.content.res.ResourcesKey: android.content.res.Configuration mOverrideConfiguration>;

        specialinvoke $r5.<android.view.DisplayAdjustments: void <init>(android.content.res.Configuration)>($r6);

        $r7 = r1.<android.content.res.ResourcesKey: android.content.res.CompatibilityInfo mCompatInfo>;

        virtualinvoke $r5.<android.view.DisplayAdjustments: void setCompatibilityInfo(android.content.res.CompatibilityInfo)>($r7);

        r3 = virtualinvoke r0.<android.app.ResourcesManager: android.content.res.AssetManager createAssetManager(android.content.res.ResourcesKey)>(r1);

        if r3 != null goto label1;

        return null;

     label1:
        $i0 = r1.<android.content.res.ResourcesKey: int mDisplayId>;

        r4 = virtualinvoke r0.<android.app.ResourcesManager: android.util.DisplayMetrics getDisplayMetrics(int,android.view.DisplayAdjustments)>($i0, $r5);

        $r8 = new android.content.res.ResourcesImpl;

        $r9 = specialinvoke r0.<android.app.ResourcesManager: android.content.res.Configuration generateConfig(android.content.res.ResourcesKey,android.util.DisplayMetrics)>(r1, r4);

        specialinvoke $r8.<android.content.res.ResourcesImpl: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration,android.view.DisplayAdjustments)>(r3, r4, $r9, $r5);

        return $r8;
    }

    private android.content.res.Resources createResourcesLocked(java.lang.ClassLoader, android.content.res.ResourcesImpl, android.content.res.CompatibilityInfo)
    {
        android.app.ResourcesManager r0;
        android.content.res.ResourcesImpl r1;
        android.content.res.CompatibilityInfo r2;
        java.lang.ref.ReferenceQueue $r3, $r8;
        java.util.ArrayList $r4, $r9;
        boolean $z0;
        android.content.res.Resources $r5, r12;
        android.app.ResourcesManager$UpdateHandler $r6;
        java.lang.ref.WeakReference $r7;
        android.content.res.CompatResources $r10;
        java.lang.ClassLoader r11;

        r0 := @this: android.app.ResourcesManager;

        r11 := @parameter0: java.lang.ClassLoader;

        r1 := @parameter1: android.content.res.ResourcesImpl;

        r2 := @parameter2: android.content.res.CompatibilityInfo;

        $r4 = r0.<android.app.ResourcesManager: java.util.ArrayList mResourceReferences>;

        $r3 = r0.<android.app.ResourcesManager: java.lang.ref.ReferenceQueue mResourcesReferencesQueue>;

        staticinvoke <android.app.ResourcesManager: void cleanupReferences(java.util.ArrayList,java.lang.ref.ReferenceQueue)>($r4, $r3);

        $z0 = virtualinvoke r2.<android.content.res.CompatibilityInfo: boolean needsCompatResources()>();

        if $z0 == 0 goto label1;

        $r10 = new android.content.res.CompatResources;

        specialinvoke $r10.<android.content.res.CompatResources: void <init>(java.lang.ClassLoader)>(r11);

        r12 = $r10;

        goto label2;

     label1:
        $r5 = new android.content.res.Resources;

        specialinvoke $r5.<android.content.res.Resources: void <init>(java.lang.ClassLoader)>(r11);

        r12 = $r5;

     label2:
        virtualinvoke r12.<android.content.res.Resources: void setImpl(android.content.res.ResourcesImpl)>(r1);

        $r6 = r0.<android.app.ResourcesManager: android.app.ResourcesManager$UpdateHandler mUpdateCallbacks>;

        virtualinvoke r12.<android.content.res.Resources: void setCallbacks(android.content.res.Resources$UpdateCallbacks)>($r6);

        $r9 = r0.<android.app.ResourcesManager: java.util.ArrayList mResourceReferences>;

        $r7 = new java.lang.ref.WeakReference;

        $r8 = r0.<android.app.ResourcesManager: java.lang.ref.ReferenceQueue mResourcesReferencesQueue>;

        specialinvoke $r7.<java.lang.ref.WeakReference: void <init>(java.lang.Object,java.lang.ref.ReferenceQueue)>(r12, $r8);

        virtualinvoke $r9.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        return r12;
    }

    private android.content.res.ResourcesKey findKeyForResourceImplLocked(android.content.res.ResourcesImpl)
    {
        android.app.ResourcesManager r0;
        android.content.res.ResourcesImpl r1, r10;
        int i0, i1;
        java.lang.ref.WeakReference r2;
        android.util.ArrayMap $r3, $r4, $r6;
        java.lang.Object $r5, $r7, $r9;
        android.content.res.ResourcesKey $r8;

        r0 := @this: android.app.ResourcesManager;

        r1 := @parameter0: android.content.res.ResourcesImpl;

        $r3 = r0.<android.app.ResourcesManager: android.util.ArrayMap mResourceImpls>;

        i0 = virtualinvoke $r3.<android.util.ArrayMap: int size()>();

        i1 = 0;

     label1:
        r10 = null;

        if i1 >= i0 goto label4;

        $r4 = r0.<android.app.ResourcesManager: android.util.ArrayMap mResourceImpls>;

        $r5 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i1);

        r2 = (java.lang.ref.WeakReference) $r5;

        if r2 == null goto label2;

        $r9 = virtualinvoke r2.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r10 = (android.content.res.ResourcesImpl) $r9;

     label2:
        if r1 != r10 goto label3;

        $r6 = r0.<android.app.ResourcesManager: android.util.ArrayMap mResourceImpls>;

        $r7 = virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i1);

        $r8 = (android.content.res.ResourcesKey) $r7;

        return $r8;

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        return null;
    }

    private android.content.res.ResourcesImpl findOrCreateResourcesImplForKeyLocked(android.content.res.ResourcesKey)
    {
        android.app.ResourcesManager r0;
        android.content.res.ResourcesKey r1;
        java.lang.ref.WeakReference $r2;
        android.util.ArrayMap $r3;
        android.content.res.ResourcesImpl r5, r6, r7;

        r0 := @this: android.app.ResourcesManager;

        r1 := @parameter0: android.content.res.ResourcesKey;

        r5 = specialinvoke r0.<android.app.ResourcesManager: android.content.res.ResourcesImpl findResourcesImplForKeyLocked(android.content.res.ResourcesKey)>(r1);

        r6 = r5;

        if r5 != null goto label1;

        r7 = specialinvoke r0.<android.app.ResourcesManager: android.content.res.ResourcesImpl createResourcesImpl(android.content.res.ResourcesKey)>(r1);

        r6 = r7;

        if r7 == null goto label1;

        $r3 = r0.<android.app.ResourcesManager: android.util.ArrayMap mResourceImpls>;

        $r2 = new java.lang.ref.WeakReference;

        specialinvoke $r2.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r7);

        virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r2);

        r6 = r7;

     label1:
        return r6;
    }

    private android.content.res.Resources findResourcesForActivityLocked(android.os.IBinder, android.content.res.ResourcesKey, java.lang.ClassLoader)
    {
        android.app.ResourcesManager r0;
        android.content.res.ResourcesKey r1, r13;
        java.lang.ClassLoader r2, $r11;
        android.app.ResourcesManager$ActivityResources r3;
        int i0, i1;
        android.content.res.Resources r4;
        java.util.ArrayList $r5, $r6;
        java.lang.Object $r7, $r9;
        java.lang.ref.WeakReference $r8;
        android.content.res.ResourcesImpl $r10;
        boolean $z0, $z1;
        android.os.IBinder r12;

        r0 := @this: android.app.ResourcesManager;

        r12 := @parameter0: android.os.IBinder;

        r1 := @parameter1: android.content.res.ResourcesKey;

        r2 := @parameter2: java.lang.ClassLoader;

        r3 = specialinvoke r0.<android.app.ResourcesManager: android.app.ResourcesManager$ActivityResources getOrCreateActivityResourcesStructLocked(android.os.IBinder)>(r12);

        $r5 = r3.<android.app.ResourcesManager$ActivityResources: java.util.ArrayList activityResources>;

        i0 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        i1 = 0;

     label1:
        r13 = null;

        if i1 >= i0 goto label5;

        $r6 = r3.<android.app.ResourcesManager$ActivityResources: java.util.ArrayList activityResources>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r8 = (java.lang.ref.WeakReference) $r7;

        $r9 = virtualinvoke $r8.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r4 = (android.content.res.Resources) $r9;

        if r4 != null goto label2;

        goto label3;

     label2:
        $r10 = virtualinvoke r4.<android.content.res.Resources: android.content.res.ResourcesImpl getImpl()>();

        r13 = specialinvoke r0.<android.app.ResourcesManager: android.content.res.ResourcesKey findKeyForResourceImplLocked(android.content.res.ResourcesImpl)>($r10);

     label3:
        if r13 == null goto label4;

        $r11 = virtualinvoke r4.<android.content.res.Resources: java.lang.ClassLoader getClassLoader()>();

        $z0 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r11, r2);

        if $z0 == 0 goto label4;

        $z1 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(r13, r1);

        if $z1 == 0 goto label4;

        return r4;

     label4:
        i1 = i1 + 1;

        goto label1;

     label5:
        return null;
    }

    private android.content.res.ResourcesImpl findResourcesImplForKeyLocked(android.content.res.ResourcesKey)
    {
        android.app.ResourcesManager r0;
        android.util.ArrayMap $r1;
        java.lang.Object $r2, $r4;
        android.content.res.AssetManager $r3;
        boolean $z0;
        android.content.res.ResourcesKey r5;
        java.lang.ref.WeakReference r6;
        android.content.res.ResourcesImpl r7;

        r0 := @this: android.app.ResourcesManager;

        r5 := @parameter0: android.content.res.ResourcesKey;

        $r1 = r0.<android.app.ResourcesManager: android.util.ArrayMap mResourceImpls>;

        $r2 = virtualinvoke $r1.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r5);

        r6 = (java.lang.ref.WeakReference) $r2;

        if r6 == null goto label1;

        $r4 = virtualinvoke r6.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r7 = (android.content.res.ResourcesImpl) $r4;

        goto label2;

     label1:
        r7 = null;

     label2:
        if r7 == null goto label3;

        $r3 = virtualinvoke r7.<android.content.res.ResourcesImpl: android.content.res.AssetManager getAssets()>();

        $z0 = virtualinvoke $r3.<android.content.res.AssetManager: boolean isUpToDate()>();

        if $z0 == 0 goto label3;

        return r7;

     label3:
        return null;
    }

    private android.content.res.Configuration generateConfig(android.content.res.ResourcesKey, android.util.DisplayMetrics)
    {
        android.app.ResourcesManager r0;
        android.content.res.ResourcesKey r1;
        boolean z0, z1;
        int $i0;
        android.content.res.Configuration $r3, $r4, $r5, r7;
        android.util.DisplayMetrics r6;

        r0 := @this: android.app.ResourcesManager;

        r1 := @parameter0: android.content.res.ResourcesKey;

        r6 := @parameter1: android.util.DisplayMetrics;

        $i0 = r1.<android.content.res.ResourcesKey: int mDisplayId>;

        if $i0 != 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        z0 = virtualinvoke r1.<android.content.res.ResourcesKey: boolean hasOverrideConfiguration()>();

        if z1 == 0 goto label4;

        if z0 == 0 goto label3;

        goto label4;

     label3:
        r7 = virtualinvoke r0.<android.app.ResourcesManager: android.content.res.Configuration getConfiguration()>();

        goto label6;

     label4:
        $r3 = new android.content.res.Configuration;

        $r4 = virtualinvoke r0.<android.app.ResourcesManager: android.content.res.Configuration getConfiguration()>();

        specialinvoke $r3.<android.content.res.Configuration: void <init>(android.content.res.Configuration)>($r4);

        if z1 != 0 goto label5;

        staticinvoke <android.app.ResourcesManager: void applyNonDefaultDisplayMetricsToConfiguration(android.util.DisplayMetrics,android.content.res.Configuration)>(r6, $r3);

     label5:
        r7 = $r3;

        if z0 == 0 goto label6;

        $r5 = r1.<android.content.res.ResourcesKey: android.content.res.Configuration mOverrideConfiguration>;

        virtualinvoke $r3.<android.content.res.Configuration: int updateFrom(android.content.res.Configuration)>($r5);

        r7 = $r3;

     label6:
        return r7;
    }

    private android.view.Display getAdjustedDisplay(int, android.view.DisplayAdjustments)
    {
        android.app.ResourcesManager r0;
        int i0;
        android.view.Display r1, r17;
        android.util.ArrayMap r2, $r5;
        android.view.DisplayAdjustments $r3, $r8, $r11, r13, r14;
        java.lang.Integer $r4;
        java.lang.Object $r6, $r7, $r10;
        java.lang.Throwable $r12;
        android.util.Pair r15;
        java.lang.ref.WeakReference r16, r19;
        android.hardware.display.DisplayManagerGlobal r18;

        r0 := @this: android.app.ResourcesManager;

        i0 := @parameter0: int;

        r13 := @parameter1: android.view.DisplayAdjustments;

        if r13 == null goto label01;

        $r11 = new android.view.DisplayAdjustments;

        specialinvoke $r11.<android.view.DisplayAdjustments: void <init>(android.view.DisplayAdjustments)>(r13);

        r14 = $r11;

        goto label02;

     label01:
        $r3 = new android.view.DisplayAdjustments;

        specialinvoke $r3.<android.view.DisplayAdjustments: void <init>()>();

        r14 = $r3;

     label02:
        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        r15 = staticinvoke <android.util.Pair: android.util.Pair create(java.lang.Object,java.lang.Object)>($r4, r14);

        entermonitor r0;

     label03:
        $r5 = r0.<android.app.ResourcesManager: android.util.ArrayMap mAdjustedDisplays>;

        $r6 = virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r15);

        r16 = (java.lang.ref.WeakReference) $r6;

     label04:
        if r16 == null goto label09;

     label05:
        $r10 = virtualinvoke r16.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r17 = (android.view.Display) $r10;

     label06:
        if r17 == null goto label09;

     label07:
        exitmonitor r0;

     label08:
        return r17;

     label09:
        r18 = staticinvoke <android.hardware.display.DisplayManagerGlobal: android.hardware.display.DisplayManagerGlobal getInstance()>();

     label10:
        if r18 != null goto label13;

     label11:
        exitmonitor r0;

     label12:
        return null;

     label13:
        $r7 = r15.<android.util.Pair: java.lang.Object second>;

        $r8 = (android.view.DisplayAdjustments) $r7;

        r1 = virtualinvoke r18.<android.hardware.display.DisplayManagerGlobal: android.view.Display getCompatibleDisplay(int,android.view.DisplayAdjustments)>(i0, $r8);

     label14:
        if r1 == null goto label16;

     label15:
        r2 = r0.<android.app.ResourcesManager: android.util.ArrayMap mAdjustedDisplays>;

        r19 = new java.lang.ref.WeakReference;

        specialinvoke r19.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r1);

        virtualinvoke r2.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r15, r19);

     label16:
        exitmonitor r0;

     label17:
        return r1;

     label18:
        $r12 := @caughtexception;

     label19:
        exitmonitor r0;

     label20:
        throw $r12;

        catch java.lang.Throwable from label03 to label04 with label18;
        catch java.lang.Throwable from label05 to label06 with label18;
        catch java.lang.Throwable from label07 to label08 with label18;
        catch java.lang.Throwable from label09 to label10 with label18;
        catch java.lang.Throwable from label11 to label12 with label18;
        catch java.lang.Throwable from label13 to label14 with label18;
        catch java.lang.Throwable from label15 to label16 with label18;
        catch java.lang.Throwable from label16 to label17 with label18;
        catch java.lang.Throwable from label19 to label20 with label18;
    }

    public static android.app.ResourcesManager getInstance()
    {
        android.app.ResourcesManager $r0, r2, r3;
        java.lang.Throwable $r1;

        entermonitor class "Landroid/app/ResourcesManager;";

     label1:
        $r0 = <android.app.ResourcesManager: android.app.ResourcesManager sResourcesManager>;

        if $r0 != null goto label2;

        r2 = new android.app.ResourcesManager;

        specialinvoke r2.<android.app.ResourcesManager: void <init>()>();

        <android.app.ResourcesManager: android.app.ResourcesManager sResourcesManager> = r2;

     label2:
        r3 = <android.app.ResourcesManager: android.app.ResourcesManager sResourcesManager>;

        exitmonitor class "Landroid/app/ResourcesManager;";

     label3:
        return r3;

     label4:
        $r1 := @caughtexception;

     label5:
        exitmonitor class "Landroid/app/ResourcesManager;";

     label6:
        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    private android.app.ResourcesManager$ActivityResources getOrCreateActivityResourcesStructLocked(android.os.IBinder)
    {
        android.app.ResourcesManager r0;
        android.os.IBinder r1;
        android.app.ResourcesManager$ActivityResources r2, $r5, r8;
        java.util.WeakHashMap $r3, $r6;
        java.lang.Object $r4;

        r0 := @this: android.app.ResourcesManager;

        r1 := @parameter0: android.os.IBinder;

        $r3 = r0.<android.app.ResourcesManager: java.util.WeakHashMap mActivityResourceReferences>;

        $r4 = virtualinvoke $r3.<java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (android.app.ResourcesManager$ActivityResources) $r4;

        r8 = r2;

        if r2 != null goto label1;

        $r5 = new android.app.ResourcesManager$ActivityResources;

        specialinvoke $r5.<android.app.ResourcesManager$ActivityResources: void <init>(android.app.ResourcesManager$1)>(null);

        r8 = $r5;

        $r6 = r0.<android.app.ResourcesManager: java.util.WeakHashMap mActivityResourceReferences>;

        virtualinvoke $r6.<java.util.WeakHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r5);

     label1:
        return r8;
    }

    static boolean lambda$cleanupReferences$0(java.util.HashSet, java.lang.ref.WeakReference)
    {
        java.util.HashSet r0;
        java.lang.ref.WeakReference r1;
        boolean $z0, z1;

        r0 := @parameter0: java.util.HashSet;

        r1 := @parameter1: java.lang.ref.WeakReference;

        if r1 == null goto label2;

        $z0 = virtualinvoke r0.<java.util.HashSet: boolean contains(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        z1 = 0;

        goto label3;

     label2:
        z1 = 1;

     label3:
        return z1;
    }

    private android.content.res.ApkAssets loadApkAssets(java.lang.String, boolean, boolean) throws java.io.IOException
    {
        android.app.ResourcesManager r0;
        boolean z0, z1, $z2, $z3;
        android.app.ResourcesManager$ApkKey $r2;
        java.lang.ref.WeakReference $r3, r18;
        android.util.ArrayMap $r4, $r9, $r16;
        java.lang.String $r7, r13;
        java.lang.Object $r8, $r12, $r17;
        android.util.LruCache r14, r20, r22;
        android.content.res.ApkAssets r15, r19, r21;
        byte b0;

        r0 := @this: android.app.ResourcesManager;

        r13 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        $r2 = new android.app.ResourcesManager$ApkKey;

        specialinvoke $r2.<android.app.ResourcesManager$ApkKey: void <init>(java.lang.String,boolean,boolean)>(r13, z0, z1);

        r14 = r0.<android.app.ResourcesManager: android.util.LruCache mLoadedApkAssets>;

        if r14 == null goto label1;

        $r12 = virtualinvoke r14.<android.util.LruCache: java.lang.Object get(java.lang.Object)>($r2);

        r15 = (android.content.res.ApkAssets) $r12;

        if r15 == null goto label1;

        $z3 = virtualinvoke r15.<android.content.res.ApkAssets: boolean isUpToDate()>();

        if $z3 == 0 goto label1;

        return r15;

     label1:
        $r16 = r0.<android.app.ResourcesManager: android.util.ArrayMap mCachedApkAssets>;

        $r17 = virtualinvoke $r16.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r2);

        r18 = (java.lang.ref.WeakReference) $r17;

        if r18 == null goto label4;

        $r8 = virtualinvoke r18.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r19 = (android.content.res.ApkAssets) $r8;

        if r19 == null goto label3;

        $z2 = virtualinvoke r19.<android.content.res.ApkAssets: boolean isUpToDate()>();

        if $z2 == 0 goto label3;

        r20 = r0.<android.app.ResourcesManager: android.util.LruCache mLoadedApkAssets>;

        if r20 == null goto label2;

        virtualinvoke r20.<android.util.LruCache: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, r19);

     label2:
        return r19;

     label3:
        $r9 = r0.<android.app.ResourcesManager: android.util.ArrayMap mCachedApkAssets>;

        virtualinvoke $r9.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>($r2);

     label4:
        b0 = 0;

        if z1 == 0 goto label5;

        $r7 = staticinvoke <android.app.ResourcesManager: java.lang.String overlayPathToIdmapPath(java.lang.String)>(r13);

        r21 = staticinvoke <android.content.res.ApkAssets: android.content.res.ApkAssets loadOverlayFromPath(java.lang.String,int)>($r7, 0);

        goto label7;

     label5:
        if z0 == 0 goto label6;

        b0 = 2;

     label6:
        r21 = staticinvoke <android.content.res.ApkAssets: android.content.res.ApkAssets loadFromPath(java.lang.String,int)>(r13, b0);

     label7:
        r22 = r0.<android.app.ResourcesManager: android.util.LruCache mLoadedApkAssets>;

        if r22 == null goto label8;

        virtualinvoke r22.<android.util.LruCache: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, r21);

     label8:
        $r4 = r0.<android.app.ResourcesManager: android.util.ArrayMap mCachedApkAssets>;

        $r3 = new java.lang.ref.WeakReference;

        specialinvoke $r3.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r21);

        virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r3);

        return r21;
    }

    private static java.lang.String overlayPathToIdmapPath(java.lang.String)
    {
        java.lang.String r0, $r4, $r5, $r8;
        java.lang.StringBuilder $r2;

        r0 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/data/resource-cache/");

        $r4 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(1);

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String replace(char,char)>(47, 64);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@idmap");

        $r8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    private android.content.res.ResourcesKey rebaseActivityOverrideConfig(android.content.res.Resources, android.content.res.Configuration, android.content.res.Configuration, int)
    {
        android.app.ResourcesManager r0;
        android.content.res.Configuration r1, $r4, $r5, $r6, $r7, r14;
        int i0;
        android.content.res.ResourcesKey r2, $r17;
        android.content.res.ResourcesImpl $r3, $r10;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r8;
        java.lang.String $r12, $r18;
        android.content.res.Resources r13;
        java.lang.String[] $r19, $r20, $r21;
        android.content.res.CompatibilityInfo $r22;
        android.content.res.loader.ResourcesLoader[] $r23;

        r0 := @this: android.app.ResourcesManager;

        r13 := @parameter0: android.content.res.Resources;

        r14 := @parameter1: android.content.res.Configuration;

        r1 := @parameter2: android.content.res.Configuration;

        i0 := @parameter3: int;

        $r3 = virtualinvoke r13.<android.content.res.Resources: android.content.res.ResourcesImpl getImpl()>();

        r2 = specialinvoke r0.<android.app.ResourcesManager: android.content.res.ResourcesKey findKeyForResourceImplLocked(android.content.res.ResourcesImpl)>($r3);

        if r2 != null goto label1;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("can\'t find ResourcesKey for resources impl=");

        $r10 = virtualinvoke r13.<android.content.res.Resources: android.content.res.ResourcesImpl getImpl()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ResourcesManager", $r12);

        return null;

     label1:
        $r4 = new android.content.res.Configuration;

        specialinvoke $r4.<android.content.res.Configuration: void <init>()>();

        if r1 == null goto label2;

        virtualinvoke $r4.<android.content.res.Configuration: void setTo(android.content.res.Configuration)>(r1);

     label2:
        $r5 = <android.content.res.Configuration: android.content.res.Configuration EMPTY>;

        $z0 = virtualinvoke r14.<android.content.res.Configuration: boolean equals(android.content.res.Configuration)>($r5);

        $z1 = $z0 ^ 1;

        if $z1 == 0 goto label3;

        $z2 = virtualinvoke r2.<android.content.res.ResourcesKey: boolean hasOverrideConfiguration()>();

        if $z2 == 0 goto label3;

        $r6 = r2.<android.content.res.ResourcesKey: android.content.res.Configuration mOverrideConfiguration>;

        $r7 = staticinvoke <android.content.res.Configuration: android.content.res.Configuration generateDelta(android.content.res.Configuration,android.content.res.Configuration)>(r14, $r6);

        virtualinvoke $r4.<android.content.res.Configuration: int updateFrom(android.content.res.Configuration)>($r7);

     label3:
        $r17 = new android.content.res.ResourcesKey;

        $r18 = r2.<android.content.res.ResourcesKey: java.lang.String mResDir>;

        $r19 = r2.<android.content.res.ResourcesKey: java.lang.String[] mSplitResDirs>;

        $r20 = r2.<android.content.res.ResourcesKey: java.lang.String[] mOverlayDirs>;

        $r21 = r2.<android.content.res.ResourcesKey: java.lang.String[] mLibDirs>;

        $r22 = r2.<android.content.res.ResourcesKey: android.content.res.CompatibilityInfo mCompatInfo>;

        $r23 = r2.<android.content.res.ResourcesKey: android.content.res.loader.ResourcesLoader[] mLoaders>;

        specialinvoke $r17.<android.content.res.ResourcesKey: void <init>(java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],int,android.content.res.Configuration,android.content.res.CompatibilityInfo,android.content.res.loader.ResourcesLoader[])>($r18, $r19, $r20, $r21, i0, $r4, $r22, $r23);

        return $r17;
    }

    private void rebaseKeyForActivity(android.os.IBinder, android.content.res.ResourcesKey)
    {
        android.app.ResourcesManager r0;
        android.content.res.ResourcesKey r1;
        android.content.res.Configuration r2, $r3, $r4, $r5, $r6, $r7;
        boolean $z0, $z1;
        java.lang.Throwable $r8;
        android.os.IBinder r9;
        android.app.ResourcesManager$ActivityResources r10;

        r0 := @this: android.app.ResourcesManager;

        r9 := @parameter0: android.os.IBinder;

        r1 := @parameter1: android.content.res.ResourcesKey;

        entermonitor r0;

     label1:
        r10 = specialinvoke r0.<android.app.ResourcesManager: android.app.ResourcesManager$ActivityResources getOrCreateActivityResourcesStructLocked(android.os.IBinder)>(r9);

        $z0 = virtualinvoke r1.<android.content.res.ResourcesKey: boolean hasOverrideConfiguration()>();

        if $z0 == 0 goto label2;

        $r4 = r10.<android.app.ResourcesManager$ActivityResources: android.content.res.Configuration overrideConfig>;

        $r3 = <android.content.res.Configuration: android.content.res.Configuration EMPTY>;

        $z1 = virtualinvoke $r4.<android.content.res.Configuration: boolean equals(android.content.res.Configuration)>($r3);

        if $z1 != 0 goto label2;

        r2 = new android.content.res.Configuration;

        $r5 = r10.<android.app.ResourcesManager$ActivityResources: android.content.res.Configuration overrideConfig>;

        specialinvoke r2.<android.content.res.Configuration: void <init>(android.content.res.Configuration)>($r5);

        $r6 = r1.<android.content.res.ResourcesKey: android.content.res.Configuration mOverrideConfiguration>;

        virtualinvoke r2.<android.content.res.Configuration: int updateFrom(android.content.res.Configuration)>($r6);

        $r7 = r1.<android.content.res.ResourcesKey: android.content.res.Configuration mOverrideConfiguration>;

        virtualinvoke $r7.<android.content.res.Configuration: void setTo(android.content.res.Configuration)>(r2);

     label2:
        exitmonitor r0;

     label3:
        return;

     label4:
        $r8 := @caughtexception;

     label5:
        exitmonitor r0;

     label6:
        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    private void redirectResourcesToNewImplLocked(android.util.ArrayMap)
    {
        android.app.ResourcesManager r0;
        android.util.ArrayMap r1;
        java.util.Iterator r2;
        boolean $z0, $z1;
        java.util.ArrayList $r3, $r7, $r8, $r14;
        java.util.WeakHashMap $r4;
        java.util.Collection $r5;
        java.lang.Object $r6, $r9, $r11, $r13, $r15, $r17, $r19;
        android.content.res.ResourcesImpl $r10, $r16, r23, r28;
        android.content.res.Resources$NotFoundException $r12, $r18;
        int i0, i1, i2, i3;
        android.content.res.Resources r20, r26;
        java.lang.ref.WeakReference r21, r25;
        android.content.res.ResourcesKey r22, r27;
        android.app.ResourcesManager$ActivityResources r24;

        r0 := @this: android.app.ResourcesManager;

        r1 := @parameter0: android.util.ArrayMap;

        $z0 = virtualinvoke r1.<android.util.ArrayMap: boolean isEmpty()>();

        if $z0 == 0 goto label01;

        return;

     label01:
        $r3 = r0.<android.app.ResourcesManager: java.util.ArrayList mResourceReferences>;

        i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i1 = 0;

     label02:
        r20 = null;

        if i1 >= i0 goto label06;

        $r14 = r0.<android.app.ResourcesManager: java.util.ArrayList mResourceReferences>;

        $r15 = virtualinvoke $r14.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r21 = (java.lang.ref.WeakReference) $r15;

        if r21 == null goto label03;

        $r19 = virtualinvoke r21.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r20 = (android.content.res.Resources) $r19;

     label03:
        if r20 == null goto label05;

        $r16 = virtualinvoke r20.<android.content.res.Resources: android.content.res.ResourcesImpl getImpl()>();

        $r17 = virtualinvoke r1.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r16);

        r22 = (android.content.res.ResourcesKey) $r17;

        if r22 == null goto label05;

        r23 = specialinvoke r0.<android.app.ResourcesManager: android.content.res.ResourcesImpl findOrCreateResourcesImplForKeyLocked(android.content.res.ResourcesKey)>(r22);

        if r23 == null goto label04;

        virtualinvoke r20.<android.content.res.Resources: void setImpl(android.content.res.ResourcesImpl)>(r23);

        goto label05;

     label04:
        $r18 = new android.content.res.Resources$NotFoundException;

        specialinvoke $r18.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>("failed to redirect ResourcesImpl");

        throw $r18;

     label05:
        i1 = i1 + 1;

        goto label02;

     label06:
        $r4 = r0.<android.app.ResourcesManager: java.util.WeakHashMap mActivityResourceReferences>;

        $r5 = virtualinvoke $r4.<java.util.WeakHashMap: java.util.Collection values()>();

        r2 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label07:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label14;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r24 = (android.app.ResourcesManager$ActivityResources) $r6;

        $r7 = r24.<android.app.ResourcesManager$ActivityResources: java.util.ArrayList activityResources>;

        i2 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        i3 = 0;

     label08:
        if i3 >= i2 goto label13;

        $r8 = r24.<android.app.ResourcesManager$ActivityResources: java.util.ArrayList activityResources>;

        $r9 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r25 = (java.lang.ref.WeakReference) $r9;

        if r25 == null goto label09;

        $r13 = virtualinvoke r25.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r26 = (android.content.res.Resources) $r13;

        goto label10;

     label09:
        r26 = null;

     label10:
        if r26 == null goto label12;

        $r10 = virtualinvoke r26.<android.content.res.Resources: android.content.res.ResourcesImpl getImpl()>();

        $r11 = virtualinvoke r1.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r10);

        r27 = (android.content.res.ResourcesKey) $r11;

        if r27 == null goto label12;

        r28 = specialinvoke r0.<android.app.ResourcesManager: android.content.res.ResourcesImpl findOrCreateResourcesImplForKeyLocked(android.content.res.ResourcesKey)>(r27);

        if r28 == null goto label11;

        virtualinvoke r26.<android.content.res.Resources: void setImpl(android.content.res.ResourcesImpl)>(r28);

        goto label12;

     label11:
        $r12 = new android.content.res.Resources$NotFoundException;

        specialinvoke $r12.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>("failed to redirect ResourcesImpl");

        throw $r12;

     label12:
        i3 = i3 + 1;

        goto label08;

     label13:
        goto label07;

     label14:
        return;
    }

    private void updateActivityResources(android.content.res.Resources, android.content.res.ResourcesKey, boolean)
    {
        android.app.ResourcesManager r0;
        android.content.res.Resources r1;
        boolean z0;
        android.content.res.ResourcesImpl $r2, r4;
        android.content.res.ResourcesKey r3;

        r0 := @this: android.app.ResourcesManager;

        r1 := @parameter0: android.content.res.Resources;

        r3 := @parameter1: android.content.res.ResourcesKey;

        z0 := @parameter2: boolean;

        if z0 == 0 goto label1;

        r4 = specialinvoke r0.<android.app.ResourcesManager: android.content.res.ResourcesImpl createResourcesImpl(android.content.res.ResourcesKey)>(r3);

        goto label2;

     label1:
        r4 = specialinvoke r0.<android.app.ResourcesManager: android.content.res.ResourcesImpl findOrCreateResourcesImplForKeyLocked(android.content.res.ResourcesKey)>(r3);

     label2:
        if r4 == null goto label3;

        $r2 = virtualinvoke r1.<android.content.res.Resources: android.content.res.ResourcesImpl getImpl()>();

        if r4 == $r2 goto label3;

        virtualinvoke r1.<android.content.res.Resources: void setImpl(android.content.res.ResourcesImpl)>(r4);

     label3:
        return;
    }

    public void appendLibAssetForMainAssetPath(java.lang.String, java.lang.String)
    {
        android.app.ResourcesManager r0;
        java.lang.String r1, r2;
        java.lang.String[] $r3;

        r0 := @this: android.app.ResourcesManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = newarray (java.lang.String)[1];

        $r3[0] = r2;

        virtualinvoke r0.<android.app.ResourcesManager: void appendLibAssetsForMainAssetPath(java.lang.String,java.lang.String[])>(r1, $r3);

        return;
    }

    public void appendLibAssetsForMainAssetPath(java.lang.String, java.lang.String[])
    {
        android.app.ResourcesManager r0;
        java.lang.String[] r1, $r9, $r13, $r14, r27;
        android.util.ArrayMap r2, $r4, $r5, $r7;
        int i0, i1, $i2, i3, i4;
        android.content.res.ResourcesKey r3, r28;
        java.lang.Object $r6, $r8, $r19;
        boolean $z0, $z1;
        android.content.res.loader.ResourcesLoader[] $r10;
        android.content.res.CompatibilityInfo $r11;
        android.content.res.Configuration $r12;
        java.lang.String $r15, $r17, r22, r26;
        java.lang.Object[] $r18;
        java.lang.Throwable $r20, $r21, r29;
        java.lang.ref.WeakReference r24;
        android.content.res.ResourcesImpl r25;

        r0 := @this: android.app.ResourcesManager;

        r22 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String[];

        entermonitor r0;

     label01:
        r2 = new android.util.ArrayMap;

        specialinvoke r2.<android.util.ArrayMap: void <init>()>();

        $r4 = r0.<android.app.ResourcesManager: android.util.ArrayMap mResourceImpls>;

        i0 = virtualinvoke $r4.<android.util.ArrayMap: int size()>();

     label02:
        i3 = 0;

     label03:
        if i3 >= i0 goto label20;

     label04:
        $r5 = r0.<android.app.ResourcesManager: android.util.ArrayMap mResourceImpls>;

        $r6 = virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i3);

        r3 = (android.content.res.ResourcesKey) $r6;

        $r7 = r0.<android.app.ResourcesManager: android.util.ArrayMap mResourceImpls>;

        $r8 = virtualinvoke $r7.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i3);

        r24 = (java.lang.ref.WeakReference) $r8;

     label05:
        if r24 == null goto label08;

     label06:
        $r19 = virtualinvoke r24.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r25 = (android.content.res.ResourcesImpl) $r19;

     label07:
        goto label09;

     label08:
        r25 = null;

     label09:
        if r25 == null goto label19;

     label10:
        r26 = r3.<android.content.res.ResourcesKey: java.lang.String mResDir>;

     label11:
        $z0 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(r26, r22);

        if $z0 == 0 goto label19;

        r27 = r3.<android.content.res.ResourcesKey: java.lang.String[] mLibDirs>;

        i1 = lengthof r1;

     label12:
        i4 = 0;

     label13:
        if i4 >= i1 goto label16;

     label14:
        $r17 = r1[i4];

        $r18 = staticinvoke <com.android.internal.util.ArrayUtils: java.lang.Object[] appendElement(java.lang.Class,java.lang.Object[],java.lang.Object)>(class "Ljava/lang/String;", r27, $r17);

        r27 = (java.lang.String[]) $r18;

     label15:
        i4 = i4 + 1;

        goto label13;

     label16:
        $r9 = r3.<android.content.res.ResourcesKey: java.lang.String[] mLibDirs>;

        $z1 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>(r27, $r9);

        if $z1 != 0 goto label18;

        r28 = new android.content.res.ResourcesKey;

        $r15 = r3.<android.content.res.ResourcesKey: java.lang.String mResDir>;

        $r14 = r3.<android.content.res.ResourcesKey: java.lang.String[] mSplitResDirs>;

        $r13 = r3.<android.content.res.ResourcesKey: java.lang.String[] mOverlayDirs>;

        $i2 = r3.<android.content.res.ResourcesKey: int mDisplayId>;

        $r12 = r3.<android.content.res.ResourcesKey: android.content.res.Configuration mOverrideConfiguration>;

        $r11 = r3.<android.content.res.ResourcesKey: android.content.res.CompatibilityInfo mCompatInfo>;

        $r10 = r3.<android.content.res.ResourcesKey: android.content.res.loader.ResourcesLoader[] mLoaders>;

        specialinvoke r28.<android.content.res.ResourcesKey: void <init>(java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],int,android.content.res.Configuration,android.content.res.CompatibilityInfo,android.content.res.loader.ResourcesLoader[])>($r15, $r14, $r13, r27, $i2, $r12, $r11, $r10);

        virtualinvoke r2.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r25, r28);

     label17:
        goto label19;

     label18:
        goto label19;

     label19:
        i3 = i3 + 1;

        goto label03;

     label20:
        specialinvoke r0.<android.app.ResourcesManager: void redirectResourcesToNewImplLocked(android.util.ArrayMap)>(r2);

        exitmonitor r0;

     label21:
        return;

     label22:
        $r20 := @caughtexception;

        r29 = $r20;

     label23:
        exitmonitor r0;

     label24:
        throw r29;

     label25:
        $r21 := @caughtexception;

        r29 = $r21;

        goto label23;

        catch java.lang.Throwable from label01 to label02 with label22;
        catch java.lang.Throwable from label04 to label05 with label22;
        catch java.lang.Throwable from label06 to label07 with label22;
        catch java.lang.Throwable from label10 to label11 with label22;
        catch java.lang.Throwable from label11 to label12 with label25;
        catch java.lang.Throwable from label14 to label15 with label25;
        catch java.lang.Throwable from label16 to label17 with label25;
        catch java.lang.Throwable from label20 to label21 with label25;
        catch java.lang.Throwable from label23 to label24 with label25;
    }

    public boolean applyCompatConfigurationLocked(int, android.content.res.Configuration)
    {
        android.app.ResourcesManager r0;
        int i0;
        android.content.res.Configuration r1;
        android.content.res.CompatibilityInfo r2, $r3;
        boolean $z0;

        r0 := @this: android.app.ResourcesManager;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.res.Configuration;

        r2 = r0.<android.app.ResourcesManager: android.content.res.CompatibilityInfo mResCompatibilityInfo>;

        if r2 == null goto label1;

        $z0 = virtualinvoke r2.<android.content.res.CompatibilityInfo: boolean supportsScreen()>();

        if $z0 != 0 goto label1;

        $r3 = r0.<android.app.ResourcesManager: android.content.res.CompatibilityInfo mResCompatibilityInfo>;

        virtualinvoke $r3.<android.content.res.CompatibilityInfo: void applyToConfiguration(int,android.content.res.Configuration)>(i0, r1);

        return 1;

     label1:
        return 0;
    }

    public final boolean applyConfigurationToResources(android.content.res.Configuration, android.content.res.CompatibilityInfo)
    {
        android.app.ResourcesManager r0;
        android.content.res.CompatibilityInfo r1;
        boolean z0;
        java.lang.Throwable $r2;
        android.content.res.Configuration r3;

        r0 := @this: android.app.ResourcesManager;

        r3 := @parameter0: android.content.res.Configuration;

        r1 := @parameter1: android.content.res.CompatibilityInfo;

        entermonitor r0;

     label1:
        z0 = virtualinvoke r0.<android.app.ResourcesManager: boolean applyConfigurationToResourcesLocked(android.content.res.Configuration,android.content.res.CompatibilityInfo)>(r3, r1);

        exitmonitor r0;

     label2:
        return z0;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public final boolean applyConfigurationToResourcesLocked(android.content.res.Configuration, android.content.res.CompatibilityInfo)
    {
        android.app.ResourcesManager r0;
        android.content.res.CompatibilityInfo r1, $r14, $r15;
        boolean z0, $z1, z2;
        android.content.res.Configuration r2, $r4, $r5, r17;
        android.content.res.ResourcesKey r3;
        android.util.ArrayMap $r6, $r7, $r9, $r11, $r19;
        java.lang.Object $r8, $r10, $r13;
        java.lang.Throwable $r16;
        int i0, i1, $i2, i3;
        android.util.DisplayMetrics r18;
        java.lang.ref.WeakReference r20;
        android.content.res.ResourcesImpl r21;

        r0 := @this: android.app.ResourcesManager;

        r17 := @parameter0: android.content.res.Configuration;

        r1 := @parameter1: android.content.res.CompatibilityInfo;

     label01:
        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(8192L, "ResourcesManager#applyConfigurationToResourcesLocked");

        $r4 = r0.<android.app.ResourcesManager: android.content.res.Configuration mResConfiguration>;

        z0 = virtualinvoke $r4.<android.content.res.Configuration: boolean isOtherSeqNewer(android.content.res.Configuration)>(r17);

     label02:
        z2 = 0;

        if z0 != 0 goto label03;

        if r1 != null goto label03;

        staticinvoke <android.os.Trace: void traceEnd(long)>(8192L);

        return 0;

     label03:
        $r5 = r0.<android.app.ResourcesManager: android.content.res.Configuration mResConfiguration>;

        i0 = virtualinvoke $r5.<android.content.res.Configuration: int updateFrom(android.content.res.Configuration)>(r17);

        $r6 = r0.<android.app.ResourcesManager: android.util.ArrayMap mAdjustedDisplays>;

        virtualinvoke $r6.<android.util.ArrayMap: void clear()>();

        r18 = virtualinvoke r0.<android.app.ResourcesManager: android.util.DisplayMetrics getDisplayMetrics()>();

     label04:
        i1 = i0;

        if r1 == null goto label10;

     label05:
        $r14 = r0.<android.app.ResourcesManager: android.content.res.CompatibilityInfo mResCompatibilityInfo>;

        if $r14 == null goto label08;

     label06:
        i1 = i0;

     label07:
        $r15 = r0.<android.app.ResourcesManager: android.content.res.CompatibilityInfo mResCompatibilityInfo>;

        $z1 = virtualinvoke $r15.<android.content.res.CompatibilityInfo: boolean equals(java.lang.Object)>(r1);

        if $z1 != 0 goto label10;

     label08:
        r0.<android.app.ResourcesManager: android.content.res.CompatibilityInfo mResCompatibilityInfo> = r1;

     label09:
        i1 = i0 | 3328;

     label10:
        staticinvoke <android.content.res.Resources: void updateSystemConfiguration(android.content.res.Configuration,android.util.DisplayMetrics,android.content.res.CompatibilityInfo)>(r17, r18, r1);

        staticinvoke <android.app.ApplicationPackageManager: void configurationChanged()>();

        r2 = new android.content.res.Configuration;

        specialinvoke r2.<android.content.res.Configuration: void <init>()>();

        $r19 = r0.<android.app.ResourcesManager: android.util.ArrayMap mResourceImpls>;

        $i2 = virtualinvoke $r19.<android.util.ArrayMap: int size()>();

        i3 = $i2 - 1;

     label11:
        if i3 < 0 goto label22;

     label12:
        $r7 = r0.<android.app.ResourcesManager: android.util.ArrayMap mResourceImpls>;

        $r8 = virtualinvoke $r7.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i3);

        r3 = (android.content.res.ResourcesKey) $r8;

        $r9 = r0.<android.app.ResourcesManager: android.util.ArrayMap mResourceImpls>;

        $r10 = virtualinvoke $r9.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i3);

        r20 = (java.lang.ref.WeakReference) $r10;

     label13:
        if r20 == null goto label16;

     label14:
        $r13 = virtualinvoke r20.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r21 = (android.content.res.ResourcesImpl) $r13;

     label15:
        goto label17;

     label16:
        r21 = null;

     label17:
        if r21 == null goto label20;

     label18:
        specialinvoke r0.<android.app.ResourcesManager: void applyConfigurationToResourcesLocked(android.content.res.Configuration,android.content.res.CompatibilityInfo,android.content.res.Configuration,android.content.res.ResourcesKey,android.content.res.ResourcesImpl)>(r17, r1, r2, r3, r21);

     label19:
        goto label21;

     label20:
        $r11 = r0.<android.app.ResourcesManager: android.util.ArrayMap mResourceImpls>;

        virtualinvoke $r11.<android.util.ArrayMap: java.lang.Object removeAt(int)>(i3);

     label21:
        i3 = i3 + -1;

        goto label11;

     label22:
        if i1 == 0 goto label23;

        z2 = 1;

     label23:
        staticinvoke <android.os.Trace: void traceEnd(long)>(8192L);

        return z2;

     label24:
        $r16 := @caughtexception;

        staticinvoke <android.os.Trace: void traceEnd(long)>(8192L);

        throw $r16;

        catch java.lang.Throwable from label01 to label02 with label24;
        catch java.lang.Throwable from label03 to label04 with label24;
        catch java.lang.Throwable from label05 to label06 with label24;
        catch java.lang.Throwable from label07 to label08 with label24;
        catch java.lang.Throwable from label08 to label09 with label24;
        catch java.lang.Throwable from label10 to label11 with label24;
        catch java.lang.Throwable from label12 to label13 with label24;
        catch java.lang.Throwable from label14 to label15 with label24;
        catch java.lang.Throwable from label18 to label19 with label24;
        catch java.lang.Throwable from label20 to label21 with label24;
    }

    final void applyNewResourceDirsLocked(android.content.pm.ApplicationInfo, java.lang.String[])
    {
        android.app.ResourcesManager r0;
        java.lang.String[] r1, r2, r3, $r6, r20, $r29;
        android.content.res.ResourcesKey r4, r28;
        int $i0, i1, i2, i3, $i4;
        java.lang.Object[] $r5, $r7;
        android.util.ArrayMap $r8, $r9, $r11, r21;
        java.lang.Object $r10, $r12, $r15;
        java.lang.String $r14, r19, r25, r26;
        boolean $z0, $z1;
        java.lang.Throwable $r16, $r17, r27;
        android.content.pm.ApplicationInfo r18;
        java.lang.ref.WeakReference r23;
        android.content.res.ResourcesImpl r24;
        android.content.res.Configuration $r30;
        android.content.res.CompatibilityInfo $r31;
        android.content.res.loader.ResourcesLoader[] $r32;

        r0 := @this: android.app.ResourcesManager;

        r18 := @parameter0: android.content.pm.ApplicationInfo;

        r1 := @parameter1: java.lang.String[];

     label01:
        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(8192L, "ResourcesManager#applyNewResourceDirsLocked");

        r19 = virtualinvoke r18.<android.content.pm.ApplicationInfo: java.lang.String getBaseCodePath()>();

        i1 = staticinvoke <android.os.Process: int myUid()>();

        $i0 = r18.<android.content.pm.ApplicationInfo: int uid>;

        if $i0 != i1 goto label03;

        r20 = r18.<android.content.pm.ApplicationInfo: java.lang.String[] splitSourceDirs>;

     label02:
        goto label04;

     label03:
        r20 = r18.<android.content.pm.ApplicationInfo: java.lang.String[] splitPublicSourceDirs>;

     label04:
        $r5 = staticinvoke <com.android.internal.util.ArrayUtils: java.lang.Object[] cloneOrNull(java.lang.Object[])>(r20);

        r2 = (java.lang.String[]) $r5;

        $r6 = r18.<android.content.pm.ApplicationInfo: java.lang.String[] resourceDirs>;

        $r7 = staticinvoke <com.android.internal.util.ArrayUtils: java.lang.Object[] cloneOrNull(java.lang.Object[])>($r6);

        r3 = (java.lang.String[]) $r7;

        r21 = new android.util.ArrayMap;

        specialinvoke r21.<android.util.ArrayMap: void <init>()>();

     label05:
        $r8 = r0.<android.app.ResourcesManager: android.util.ArrayMap mResourceImpls>;

        i2 = virtualinvoke $r8.<android.util.ArrayMap: int size()>();

     label06:
        i3 = 0;

     label07:
        if i3 >= i2 goto label24;

     label08:
        $r9 = r0.<android.app.ResourcesManager: android.util.ArrayMap mResourceImpls>;

        $r10 = virtualinvoke $r9.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i3);

        r4 = (android.content.res.ResourcesKey) $r10;

        $r11 = r0.<android.app.ResourcesManager: android.util.ArrayMap mResourceImpls>;

        $r12 = virtualinvoke $r11.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i3);

        r23 = (java.lang.ref.WeakReference) $r12;

     label09:
        if r23 == null goto label12;

     label10:
        $r15 = virtualinvoke r23.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r24 = (android.content.res.ResourcesImpl) $r15;

     label11:
        goto label13;

     label12:
        r24 = null;

     label13:
        if r24 != null goto label14;

        goto label23;

     label14:
        r25 = r4.<android.content.res.ResourcesKey: java.lang.String mResDir>;

     label15:
        if r25 == null goto label22;

     label16:
        $r14 = r4.<android.content.res.ResourcesKey: java.lang.String mResDir>;

        $z0 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r19);

        if $z0 != 0 goto label20;

        r26 = r4.<android.content.res.ResourcesKey: java.lang.String mResDir>;

     label17:
        $z1 = staticinvoke <com.android.internal.util.ArrayUtils: boolean contains(java.lang.Object[],java.lang.Object)>(r1, r26);

        if $z1 == 0 goto label19;

     label18:
        goto label22;

     label19:
        goto label23;

     label20:
        goto label22;

     label21:
        $r16 := @caughtexception;

        r27 = $r16;

        goto label27;

     label22:
        r28 = new android.content.res.ResourcesKey;

        $r29 = r4.<android.content.res.ResourcesKey: java.lang.String[] mLibDirs>;

        $i4 = r4.<android.content.res.ResourcesKey: int mDisplayId>;

        $r30 = r4.<android.content.res.ResourcesKey: android.content.res.Configuration mOverrideConfiguration>;

        $r31 = r4.<android.content.res.ResourcesKey: android.content.res.CompatibilityInfo mCompatInfo>;

        $r32 = r4.<android.content.res.ResourcesKey: android.content.res.loader.ResourcesLoader[] mLoaders>;

        specialinvoke r28.<android.content.res.ResourcesKey: void <init>(java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],int,android.content.res.Configuration,android.content.res.CompatibilityInfo,android.content.res.loader.ResourcesLoader[])>(r19, r2, r3, $r29, $i4, $r30, $r31, $r32);

        virtualinvoke r21.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r24, r28);

     label23:
        i3 = i3 + 1;

        goto label07;

     label24:
        specialinvoke r0.<android.app.ResourcesManager: void redirectResourcesToNewImplLocked(android.util.ArrayMap)>(r21);

     label25:
        staticinvoke <android.os.Trace: void traceEnd(long)>(8192L);

        return;

     label26:
        $r17 := @caughtexception;

        r27 = $r17;

     label27:
        staticinvoke <android.os.Trace: void traceEnd(long)>(8192L);

        throw r27;

        catch java.lang.Throwable from label01 to label02 with label26;
        catch java.lang.Throwable from label03 to label04 with label26;
        catch java.lang.Throwable from label04 to label05 with label26;
        catch java.lang.Throwable from label05 to label06 with label26;
        catch java.lang.Throwable from label08 to label09 with label26;
        catch java.lang.Throwable from label10 to label11 with label26;
        catch java.lang.Throwable from label14 to label15 with label26;
        catch java.lang.Throwable from label16 to label17 with label21;
        catch java.lang.Throwable from label17 to label18 with label26;
        catch java.lang.Throwable from label22 to label23 with label26;
        catch java.lang.Throwable from label24 to label25 with label26;
    }

    protected android.content.res.AssetManager createAssetManager(android.content.res.ResourcesKey)
    {
        android.app.ResourcesManager r0;
        android.content.res.AssetManager$Builder $r1;
        java.lang.String[] $r2, $r3, $r4, r45, r49, r53;
        android.content.res.loader.ResourcesLoader[] $r5, r57;
        android.content.res.AssetManager $r6;
        android.content.res.loader.ResourcesLoader $r7;
        android.content.res.ApkAssets $r9, $r11, $r13, $r16;
        boolean $z0;
        java.lang.String $r15, $r22, $r28, $r33, $r37, $r39, r42, r46, r50, r54;
        java.lang.Throwable $r18, $r23, $r29, $r34;
        java.lang.StringBuilder $r19, $r24, $r30, $r35;
        android.content.res.ResourcesKey r40;
        int i5, i6, i7, i8, i9, i10, i11, i12;

        r0 := @this: android.app.ResourcesManager;

        r40 := @parameter0: android.content.res.ResourcesKey;

        $r1 = new android.content.res.AssetManager$Builder;

        specialinvoke $r1.<android.content.res.AssetManager$Builder: void <init>()>();

        r42 = r40.<android.content.res.ResourcesKey: java.lang.String mResDir>;

        if r42 == null goto label04;

     label01:
        $r15 = r40.<android.content.res.ResourcesKey: java.lang.String mResDir>;

        $r16 = specialinvoke r0.<android.app.ResourcesManager: android.content.res.ApkAssets loadApkAssets(java.lang.String,boolean,boolean)>($r15, 0, 0);

        virtualinvoke $r1.<android.content.res.AssetManager$Builder: android.content.res.AssetManager$Builder addApkAssets(android.content.res.ApkAssets)>($r16);

     label02:
        goto label04;

     label03:
        $r34 := @caughtexception;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("failed to add asset path ");

        $r37 = r40.<android.content.res.ResourcesKey: java.lang.String mResDir>;

        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        $r39 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ResourcesManager", $r39);

        return null;

     label04:
        $r2 = r40.<android.content.res.ResourcesKey: java.lang.String[] mSplitResDirs>;

        if $r2 == null goto label09;

        r45 = r40.<android.content.res.ResourcesKey: java.lang.String[] mSplitResDirs>;

        i5 = lengthof r45;

        i6 = 0;

     label05:
        if i6 >= i5 goto label09;

        r46 = r45[i6];

     label06:
        $r13 = specialinvoke r0.<android.app.ResourcesManager: android.content.res.ApkAssets loadApkAssets(java.lang.String,boolean,boolean)>(r46, 0, 0);

        virtualinvoke $r1.<android.content.res.AssetManager$Builder: android.content.res.AssetManager$Builder addApkAssets(android.content.res.ApkAssets)>($r13);

     label07:
        i6 = i6 + 1;

        goto label05;

     label08:
        $r29 := @caughtexception;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("failed to add split asset path ");

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r46);

        $r33 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ResourcesManager", $r33);

        return null;

     label09:
        $r3 = r40.<android.content.res.ResourcesKey: java.lang.String[] mLibDirs>;

        if $r3 == null goto label15;

        r49 = r40.<android.content.res.ResourcesKey: java.lang.String[] mLibDirs>;

        i7 = lengthof r49;

        i8 = 0;

     label10:
        if i8 >= i7 goto label15;

        r50 = r49[i8];

        $z0 = virtualinvoke r50.<java.lang.String: boolean endsWith(java.lang.String)>(".apk");

        if $z0 == 0 goto label14;

     label11:
        $r11 = specialinvoke r0.<android.app.ResourcesManager: android.content.res.ApkAssets loadApkAssets(java.lang.String,boolean,boolean)>(r50, 1, 0);

        virtualinvoke $r1.<android.content.res.AssetManager$Builder: android.content.res.AssetManager$Builder addApkAssets(android.content.res.ApkAssets)>($r11);

     label12:
        goto label14;

     label13:
        $r23 := @caughtexception;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Asset path \'");

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r50);

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' does not exist or contains no resources.");

        $r28 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ResourcesManager", $r28);

     label14:
        i8 = i8 + 1;

        goto label10;

     label15:
        $r4 = r40.<android.content.res.ResourcesKey: java.lang.String[] mOverlayDirs>;

        if $r4 == null goto label21;

        r53 = r40.<android.content.res.ResourcesKey: java.lang.String[] mOverlayDirs>;

        i9 = lengthof r53;

        i10 = 0;

     label16:
        if i10 >= i9 goto label21;

        r54 = r53[i10];

     label17:
        $r9 = specialinvoke r0.<android.app.ResourcesManager: android.content.res.ApkAssets loadApkAssets(java.lang.String,boolean,boolean)>(r54, 0, 1);

        virtualinvoke $r1.<android.content.res.AssetManager$Builder: android.content.res.AssetManager$Builder addApkAssets(android.content.res.ApkAssets)>($r9);

     label18:
        goto label20;

     label19:
        $r18 := @caughtexception;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("failed to add overlay path ");

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r54);

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ResourcesManager", $r22);

     label20:
        i10 = i10 + 1;

        goto label16;

     label21:
        $r5 = r40.<android.content.res.ResourcesKey: android.content.res.loader.ResourcesLoader[] mLoaders>;

        if $r5 == null goto label23;

        r57 = r40.<android.content.res.ResourcesKey: android.content.res.loader.ResourcesLoader[] mLoaders>;

        i11 = lengthof r57;

        i12 = 0;

     label22:
        if i12 >= i11 goto label23;

        $r7 = r57[i12];

        virtualinvoke $r1.<android.content.res.AssetManager$Builder: android.content.res.AssetManager$Builder addLoader(android.content.res.loader.ResourcesLoader)>($r7);

        i12 = i12 + 1;

        goto label22;

     label23:
        $r6 = virtualinvoke $r1.<android.content.res.AssetManager$Builder: android.content.res.AssetManager build()>();

        return $r6;

        catch java.io.IOException from label01 to label02 with label03;
        catch java.io.IOException from label06 to label07 with label08;
        catch java.io.IOException from label11 to label12 with label13;
        catch java.io.IOException from label17 to label18 with label19;
    }

    public android.content.res.Resources createBaseTokenResources(android.os.IBinder, java.lang.String, java.lang.String[], java.lang.String[], java.lang.String[], int, android.content.res.Configuration, android.content.res.CompatibilityInfo, java.lang.ClassLoader, java.util.List)
    {
        android.app.ResourcesManager r0;
        java.lang.String[] r1, r2, r17;
        int i0;
        android.content.res.Configuration r3, r19;
        android.content.res.CompatibilityInfo r4;
        java.lang.ClassLoader r5, r21;
        android.content.res.ResourcesKey r6;
        android.content.res.loader.ResourcesLoader[] $r7, r20;
        java.lang.Object[] $r8;
        java.lang.Throwable $r9, $r10, $r11, $r12, $r13, $r14, r25, r26;
        android.os.IBinder r15;
        java.lang.String r16;
        java.util.List r18;
        android.content.res.Resources r22, r23;

        r0 := @this: android.app.ResourcesManager;

        r15 := @parameter0: android.os.IBinder;

        r16 := @parameter1: java.lang.String;

        r17 := @parameter2: java.lang.String[];

        r1 := @parameter3: java.lang.String[];

        r2 := @parameter4: java.lang.String[];

        i0 := @parameter5: int;

        r3 := @parameter6: android.content.res.Configuration;

        r4 := @parameter7: android.content.res.CompatibilityInfo;

        r5 := @parameter8: java.lang.ClassLoader;

        r18 := @parameter9: java.util.List;

     label01:
        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(8192L, "ResourcesManager#createBaseActivityResources");

        r6 = new android.content.res.ResourcesKey;

     label02:
        if r3 == null goto label05;

     label03:
        r19 = new android.content.res.Configuration;

        specialinvoke r19.<android.content.res.Configuration: void <init>(android.content.res.Configuration)>(r3);

     label04:
        goto label06;

     label05:
        r19 = null;

     label06:
        if r18 != null goto label08;

        r20 = null;

     label07:
        goto label10;

     label08:
        $r7 = newarray (android.content.res.loader.ResourcesLoader)[0];

        $r8 = interfaceinvoke r18.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r7);

        r20 = (android.content.res.loader.ResourcesLoader[]) $r8;

     label09:
        goto label07;

     label10:
        specialinvoke r6.<android.content.res.ResourcesKey: void <init>(java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],int,android.content.res.Configuration,android.content.res.CompatibilityInfo,android.content.res.loader.ResourcesLoader[])>(r16, r17, r1, r2, i0, r19, r4, r20);

     label11:
        if r5 == null goto label12;

        r21 = r5;

        goto label13;

     label12:
        r21 = staticinvoke <java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>();

     label13:
        entermonitor r0;

     label14:
        specialinvoke r0.<android.app.ResourcesManager: android.app.ResourcesManager$ActivityResources getOrCreateActivityResourcesStructLocked(android.os.IBinder)>(r15);

        exitmonitor r0;

     label15:
        virtualinvoke r0.<android.app.ResourcesManager: void updateResourcesForActivity(android.os.IBinder,android.content.res.Configuration,int,boolean)>(r15, r3, i0, 0);

        specialinvoke r0.<android.app.ResourcesManager: void rebaseKeyForActivity(android.os.IBinder,android.content.res.ResourcesKey)>(r15, r6);

        entermonitor r0;

     label16:
        r22 = specialinvoke r0.<android.app.ResourcesManager: android.content.res.Resources findResourcesForActivityLocked(android.os.IBinder,android.content.res.ResourcesKey,java.lang.ClassLoader)>(r15, r6, r21);

     label17:
        if r22 == null goto label20;

     label18:
        exitmonitor r0;

     label19:
        staticinvoke <android.os.Trace: void traceEnd(long)>(8192L);

        return r22;

     label20:
        exitmonitor r0;

     label21:
        r23 = specialinvoke r0.<android.app.ResourcesManager: android.content.res.Resources createResources(android.os.IBinder,android.content.res.ResourcesKey,java.lang.ClassLoader)>(r15, r6, r21);

     label22:
        staticinvoke <android.os.Trace: void traceEnd(long)>(8192L);

        return r23;

     label23:
        $r14 := @caughtexception;

     label24:
        exitmonitor r0;

     label25:
        throw $r14;

     label26:
        $r12 := @caughtexception;

        r25 = $r12;

     label27:
        exitmonitor r0;

     label28:
        throw r25;

     label29:
        $r9 := @caughtexception;

        r26 = $r9;

        goto label33;

     label30:
        $r13 := @caughtexception;

        r25 = $r13;

        goto label27;

     label31:
        $r10 := @caughtexception;

        r26 = $r10;

        goto label33;

     label32:
        $r11 := @caughtexception;

        r26 = $r11;

     label33:
        staticinvoke <android.os.Trace: void traceEnd(long)>(8192L);

        throw r26;

        catch java.lang.Throwable from label01 to label02 with label32;
        catch java.lang.Throwable from label03 to label04 with label32;
        catch java.lang.Throwable from label08 to label09 with label32;
        catch java.lang.Throwable from label10 to label11 with label32;
        catch java.lang.Throwable from label12 to label13 with label32;
        catch java.lang.Throwable from label13 to label14 with label31;
        catch java.lang.Throwable from label14 to label15 with label26;
        catch java.lang.Throwable from label15 to label16 with label29;
        catch java.lang.Throwable from label16 to label17 with label23;
        catch java.lang.Throwable from label18 to label19 with label23;
        catch java.lang.Throwable from label20 to label21 with label23;
        catch java.lang.Throwable from label21 to label22 with label29;
        catch java.lang.Throwable from label24 to label25 with label23;
        catch java.lang.Throwable from label25 to label26 with label29;
        catch java.lang.Throwable from label27 to label28 with label30;
        catch java.lang.Throwable from label28 to label29 with label29;
    }

    public void dump(java.lang.String, java.io.PrintWriter)
    {
        android.app.ResourcesManager r0;
        java.io.PrintWriter r1;
        com.android.internal.util.IndentingPrintWriter r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12;
        android.util.LruCache $r4, $r15, $r16, $r17, $r18, $r19, $r20;
        android.util.ArrayMap $r5, $r10;
        java.util.Collection $r6, $r9, $r11;
        java.util.ArrayList $r7, $r14;
        java.util.WeakHashMap $r8;
        java.lang.Object $r12;
        android.app.ResourcesManager$ActivityResources $r13;
        java.lang.Throwable $r22;
        java.lang.String r23;
        java.util.Iterator r24;
        boolean $z0;

        r0 := @this: android.app.ResourcesManager;

        r23 := @parameter0: java.lang.String;

        r1 := @parameter1: java.io.PrintWriter;

        entermonitor r0;

     label01:
        r2 = new com.android.internal.util.IndentingPrintWriter;

        specialinvoke r2.<com.android.internal.util.IndentingPrintWriter: void <init>(java.io.Writer,java.lang.String)>(r1, "  ");

     label02:
        i11 = 0;

     label03:
        $i0 = virtualinvoke r23.<java.lang.String: int length()>();

        $i1 = $i0 / 2;

        if i11 >= $i1 goto label05;

        virtualinvoke r2.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

     label04:
        i11 = i11 + 1;

        goto label03;

     label05:
        virtualinvoke r2.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("ResourcesManager:");

        virtualinvoke r2.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        $r4 = r0.<android.app.ResourcesManager: android.util.LruCache mLoadedApkAssets>;

        if $r4 == null goto label07;

        virtualinvoke r2.<com.android.internal.util.IndentingPrintWriter: void print(java.lang.String)>("cached apks: total=");

        $r15 = r0.<android.app.ResourcesManager: android.util.LruCache mLoadedApkAssets>;

        $i5 = virtualinvoke $r15.<android.util.LruCache: int size()>();

        virtualinvoke r2.<com.android.internal.util.IndentingPrintWriter: void print(int)>($i5);

        virtualinvoke r2.<com.android.internal.util.IndentingPrintWriter: void print(java.lang.String)>(" created=");

        $r16 = r0.<android.app.ResourcesManager: android.util.LruCache mLoadedApkAssets>;

        $i6 = virtualinvoke $r16.<android.util.LruCache: int createCount()>();

        virtualinvoke r2.<com.android.internal.util.IndentingPrintWriter: void print(int)>($i6);

        virtualinvoke r2.<com.android.internal.util.IndentingPrintWriter: void print(java.lang.String)>(" evicted=");

        $r17 = r0.<android.app.ResourcesManager: android.util.LruCache mLoadedApkAssets>;

        $i7 = virtualinvoke $r17.<android.util.LruCache: int evictionCount()>();

        virtualinvoke r2.<com.android.internal.util.IndentingPrintWriter: void print(int)>($i7);

        virtualinvoke r2.<com.android.internal.util.IndentingPrintWriter: void print(java.lang.String)>(" hit=");

        $r18 = r0.<android.app.ResourcesManager: android.util.LruCache mLoadedApkAssets>;

        $i8 = virtualinvoke $r18.<android.util.LruCache: int hitCount()>();

        virtualinvoke r2.<com.android.internal.util.IndentingPrintWriter: void print(int)>($i8);

        virtualinvoke r2.<com.android.internal.util.IndentingPrintWriter: void print(java.lang.String)>(" miss=");

        $r19 = r0.<android.app.ResourcesManager: android.util.LruCache mLoadedApkAssets>;

        $i9 = virtualinvoke $r19.<android.util.LruCache: int missCount()>();

        virtualinvoke r2.<com.android.internal.util.IndentingPrintWriter: void print(int)>($i9);

        virtualinvoke r2.<com.android.internal.util.IndentingPrintWriter: void print(java.lang.String)>(" max=");

        $r20 = r0.<android.app.ResourcesManager: android.util.LruCache mLoadedApkAssets>;

        $i10 = virtualinvoke $r20.<android.util.LruCache: int maxSize()>();

        virtualinvoke r2.<com.android.internal.util.IndentingPrintWriter: void print(int)>($i10);

     label06:
        goto label08;

     label07:
        virtualinvoke r2.<com.android.internal.util.IndentingPrintWriter: void print(java.lang.String)>("cached apks: 0 [cache disabled]");

     label08:
        virtualinvoke r2.<com.android.internal.util.IndentingPrintWriter: void println()>();

        virtualinvoke r2.<com.android.internal.util.IndentingPrintWriter: void print(java.lang.String)>("total apks: ");

        $r5 = r0.<android.app.ResourcesManager: android.util.ArrayMap mCachedApkAssets>;

        $r6 = virtualinvoke $r5.<android.util.ArrayMap: java.util.Collection values()>();

        $i2 = staticinvoke <android.app.ResourcesManager: int countLiveReferences(java.util.Collection)>($r6);

        virtualinvoke r2.<com.android.internal.util.IndentingPrintWriter: void println(int)>($i2);

        virtualinvoke r2.<com.android.internal.util.IndentingPrintWriter: void print(java.lang.String)>("resources: ");

        $r7 = r0.<android.app.ResourcesManager: java.util.ArrayList mResourceReferences>;

        i12 = staticinvoke <android.app.ResourcesManager: int countLiveReferences(java.util.Collection)>($r7);

        $r8 = r0.<android.app.ResourcesManager: java.util.WeakHashMap mActivityResourceReferences>;

        $r9 = virtualinvoke $r8.<java.util.WeakHashMap: java.util.Collection values()>();

        r24 = interfaceinvoke $r9.<java.util.Collection: java.util.Iterator iterator()>();

     label09:
        $z0 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label11;

        $r12 = interfaceinvoke r24.<java.util.Iterator: java.lang.Object next()>();

        $r13 = (android.app.ResourcesManager$ActivityResources) $r12;

        $r14 = $r13.<android.app.ResourcesManager$ActivityResources: java.util.ArrayList activityResources>;

        $i4 = staticinvoke <android.app.ResourcesManager: int countLiveReferences(java.util.Collection)>($r14);

        i12 = i12 + $i4;

     label10:
        goto label09;

     label11:
        virtualinvoke r2.<com.android.internal.util.IndentingPrintWriter: void println(int)>(i12);

        virtualinvoke r2.<com.android.internal.util.IndentingPrintWriter: void print(java.lang.String)>("resource impls: ");

        $r10 = r0.<android.app.ResourcesManager: android.util.ArrayMap mResourceImpls>;

        $r11 = virtualinvoke $r10.<android.util.ArrayMap: java.util.Collection values()>();

        $i3 = staticinvoke <android.app.ResourcesManager: int countLiveReferences(java.util.Collection)>($r11);

        virtualinvoke r2.<com.android.internal.util.IndentingPrintWriter: void println(int)>($i3);

        exitmonitor r0;

     label12:
        return;

     label13:
        $r22 := @caughtexception;

     label14:
        exitmonitor r0;

     label15:
        throw $r22;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    public android.view.Display getAdjustedDisplay(int, android.content.res.Resources)
    {
        android.app.ResourcesManager r0;
        int i0;
        android.hardware.display.DisplayManagerGlobal r1;
        java.lang.Throwable $r2;
        android.content.res.Resources r3;
        android.view.Display r4;

        r0 := @this: android.app.ResourcesManager;

        i0 := @parameter0: int;

        r3 := @parameter1: android.content.res.Resources;

        entermonitor r0;

     label1:
        r1 = staticinvoke <android.hardware.display.DisplayManagerGlobal: android.hardware.display.DisplayManagerGlobal getInstance()>();

     label2:
        if r1 != null goto label5;

     label3:
        exitmonitor r0;

     label4:
        return null;

     label5:
        r4 = virtualinvoke r1.<android.hardware.display.DisplayManagerGlobal: android.view.Display getCompatibleDisplay(int,android.content.res.Resources)>(i0, r3);

        exitmonitor r0;

     label6:
        return r4;

     label7:
        $r2 := @caughtexception;

     label8:
        exitmonitor r0;

     label9:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public android.content.res.Configuration getConfiguration()
    {
        android.app.ResourcesManager r0;
        java.lang.Throwable $r1;
        android.content.res.Configuration r2;

        r0 := @this: android.app.ResourcesManager;

        entermonitor r0;

     label1:
        r2 = r0.<android.app.ResourcesManager: android.content.res.Configuration mResConfiguration>;

        exitmonitor r0;

     label2:
        return r2;

     label3:
        $r1 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    android.util.DisplayMetrics getDisplayMetrics()
    {
        android.app.ResourcesManager r0;
        android.view.DisplayAdjustments $r1;
        android.util.DisplayMetrics $r2;

        r0 := @this: android.app.ResourcesManager;

        $r1 = <android.view.DisplayAdjustments: android.view.DisplayAdjustments DEFAULT_DISPLAY_ADJUSTMENTS>;

        $r2 = virtualinvoke r0.<android.app.ResourcesManager: android.util.DisplayMetrics getDisplayMetrics(int,android.view.DisplayAdjustments)>(0, $r1);

        return $r2;
    }

    protected android.util.DisplayMetrics getDisplayMetrics(int, android.view.DisplayAdjustments)
    {
        android.app.ResourcesManager r0;
        int i0;
        android.util.DisplayMetrics $r2;
        android.view.DisplayAdjustments r3;
        android.view.Display r4;

        r0 := @this: android.app.ResourcesManager;

        i0 := @parameter0: int;

        r3 := @parameter1: android.view.DisplayAdjustments;

        $r2 = new android.util.DisplayMetrics;

        specialinvoke $r2.<android.util.DisplayMetrics: void <init>()>();

        r4 = specialinvoke r0.<android.app.ResourcesManager: android.view.Display getAdjustedDisplay(int,android.view.DisplayAdjustments)>(i0, r3);

        if r4 == null goto label1;

        virtualinvoke r4.<android.view.Display: void getMetrics(android.util.DisplayMetrics)>($r2);

        goto label2;

     label1:
        virtualinvoke $r2.<android.util.DisplayMetrics: void setToDefaults()>();

     label2:
        return $r2;
    }

    public android.content.res.Resources getResources(android.os.IBinder, java.lang.String, java.lang.String[], java.lang.String[], java.lang.String[], int, android.content.res.Configuration, android.content.res.CompatibilityInfo, java.lang.ClassLoader, java.util.List)
    {
        android.app.ResourcesManager r0;
        java.lang.String[] r1, r2, r3;
        int i0;
        android.content.res.CompatibilityInfo r4;
        java.lang.ClassLoader r5, r18;
        android.content.res.ResourcesKey r6;
        android.content.res.Configuration r7, r14, r16;
        android.content.res.loader.ResourcesLoader[] $r8, r17;
        java.lang.Object[] $r9;
        java.lang.Throwable $r10, $r11, r20;
        android.os.IBinder r12;
        java.lang.String r13;
        java.util.List r15;
        android.content.res.Resources r19;

        r0 := @this: android.app.ResourcesManager;

        r12 := @parameter0: android.os.IBinder;

        r13 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String[];

        r2 := @parameter3: java.lang.String[];

        r3 := @parameter4: java.lang.String[];

        i0 := @parameter5: int;

        r14 := @parameter6: android.content.res.Configuration;

        r4 := @parameter7: android.content.res.CompatibilityInfo;

        r5 := @parameter8: java.lang.ClassLoader;

        r15 := @parameter9: java.util.List;

     label01:
        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(8192L, "ResourcesManager#getResources");

        r6 = new android.content.res.ResourcesKey;

     label02:
        if r14 == null goto label05;

     label03:
        r7 = new android.content.res.Configuration;

        specialinvoke r7.<android.content.res.Configuration: void <init>(android.content.res.Configuration)>(r14);

     label04:
        r16 = r7;

        goto label06;

     label05:
        r16 = null;

     label06:
        if r15 != null goto label08;

        r17 = null;

     label07:
        goto label10;

     label08:
        $r8 = newarray (android.content.res.loader.ResourcesLoader)[0];

        $r9 = interfaceinvoke r15.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r8);

        r17 = (android.content.res.loader.ResourcesLoader[]) $r9;

     label09:
        goto label07;

     label10:
        specialinvoke r6.<android.content.res.ResourcesKey: void <init>(java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],int,android.content.res.Configuration,android.content.res.CompatibilityInfo,android.content.res.loader.ResourcesLoader[])>(r13, r1, r2, r3, i0, r16, r4, r17);

     label11:
        if r5 == null goto label12;

        r18 = r5;

        goto label13;

     label12:
        r18 = staticinvoke <java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>();

     label13:
        if r12 == null goto label15;

     label14:
        specialinvoke r0.<android.app.ResourcesManager: void rebaseKeyForActivity(android.os.IBinder,android.content.res.ResourcesKey)>(r12, r6);

     label15:
        r19 = specialinvoke r0.<android.app.ResourcesManager: android.content.res.Resources createResources(android.os.IBinder,android.content.res.ResourcesKey,java.lang.ClassLoader)>(r12, r6, r18);

     label16:
        staticinvoke <android.os.Trace: void traceEnd(long)>(8192L);

        return r19;

     label17:
        $r11 := @caughtexception;

        r20 = $r11;

        goto label19;

     label18:
        $r10 := @caughtexception;

        r20 = $r10;

     label19:
        staticinvoke <android.os.Trace: void traceEnd(long)>(8192L);

        throw r20;

        catch java.lang.Throwable from label01 to label02 with label18;
        catch java.lang.Throwable from label03 to label04 with label18;
        catch java.lang.Throwable from label08 to label09 with label18;
        catch java.lang.Throwable from label10 to label11 with label18;
        catch java.lang.Throwable from label12 to label13 with label18;
        catch java.lang.Throwable from label14 to label15 with label17;
        catch java.lang.Throwable from label15 to label16 with label17;
    }

    public void invalidatePath(java.lang.String)
    {
        android.app.ResourcesManager r0;
        android.util.ArrayMap $r1, $r7, $r8, $r12, $r17, $r20;
        int $i0, $i2, i3, i4, i5, i6;
        java.lang.String $r6, $r11, r25;
        java.lang.Object $r9, $r13, $r14, $r15, $r18, $r21, $r23;
        android.app.ResourcesManager$ApkKey $r10;
        boolean $z0, $z1;
        android.content.res.ApkAssets $r16;
        android.content.res.ResourcesKey $r19;
        java.lang.ref.WeakReference $r22, r28;
        java.lang.Throwable $r24;
        android.content.res.ResourcesImpl r26;
        java.lang.StringBuilder r27;

        r0 := @this: android.app.ResourcesManager;

        r25 := @parameter0: java.lang.String;

        entermonitor r0;

        i3 = 0;

     label01:
        $r1 = r0.<android.app.ResourcesManager: android.util.ArrayMap mResourceImpls>;

        $i0 = virtualinvoke $r1.<android.util.ArrayMap: int size()>();

        i4 = $i0 - 1;

     label02:
        if i4 < 0 goto label08;

        i5 = i3;

     label03:
        $r17 = r0.<android.app.ResourcesManager: android.util.ArrayMap mResourceImpls>;

        $r18 = virtualinvoke $r17.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i4);

        $r19 = (android.content.res.ResourcesKey) $r18;

        $z1 = virtualinvoke $r19.<android.content.res.ResourcesKey: boolean isPathReferenced(java.lang.String)>(r25);

        if $z1 == 0 goto label07;

        $r20 = r0.<android.app.ResourcesManager: android.util.ArrayMap mResourceImpls>;

        $r21 = virtualinvoke $r20.<android.util.ArrayMap: java.lang.Object removeAt(int)>(i4);

        $r22 = (java.lang.ref.WeakReference) $r21;

        $r23 = virtualinvoke $r22.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r26 = (android.content.res.ResourcesImpl) $r23;

     label04:
        if r26 == null goto label06;

     label05:
        virtualinvoke r26.<android.content.res.ResourcesImpl: void flushLayoutCache()>();

     label06:
        i5 = i3 + 1;

     label07:
        i4 = i4 + -1;

        i3 = i5;

        goto label02;

     label08:
        r27 = new java.lang.StringBuilder;

        specialinvoke r27.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalidated ");

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" asset managers that referenced ");

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r25);

        $r6 = virtualinvoke r27.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ResourcesManager", $r6);

        $r7 = r0.<android.app.ResourcesManager: android.util.ArrayMap mCachedApkAssets>;

        $i2 = virtualinvoke $r7.<android.util.ArrayMap: int size()>();

        i6 = $i2 - 1;

     label09:
        if i6 < 0 goto label14;

     label10:
        $r8 = r0.<android.app.ResourcesManager: android.util.ArrayMap mCachedApkAssets>;

        $r9 = virtualinvoke $r8.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i6);

        $r10 = (android.app.ResourcesManager$ApkKey) $r9;

        $r11 = $r10.<android.app.ResourcesManager$ApkKey: java.lang.String path>;

        $z0 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r25);

        if $z0 == 0 goto label13;

        $r12 = r0.<android.app.ResourcesManager: android.util.ArrayMap mCachedApkAssets>;

        $r13 = virtualinvoke $r12.<android.util.ArrayMap: java.lang.Object removeAt(int)>(i6);

        r28 = (java.lang.ref.WeakReference) $r13;

     label11:
        if r28 == null goto label13;

     label12:
        $r14 = virtualinvoke r28.<java.lang.ref.WeakReference: java.lang.Object get()>();

        if $r14 == null goto label13;

        $r15 = virtualinvoke r28.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r16 = (android.content.res.ApkAssets) $r15;

        virtualinvoke $r16.<android.content.res.ApkAssets: void close()>();

     label13:
        i6 = i6 + -1;

        goto label09;

     label14:
        exitmonitor r0;

     label15:
        return;

     label16:
        $r24 := @caughtexception;

     label17:
        exitmonitor r0;

     label18:
        throw $r24;

        catch java.lang.Throwable from label01 to label02 with label16;
        catch java.lang.Throwable from label03 to label04 with label16;
        catch java.lang.Throwable from label05 to label06 with label16;
        catch java.lang.Throwable from label08 to label09 with label16;
        catch java.lang.Throwable from label10 to label11 with label16;
        catch java.lang.Throwable from label12 to label13 with label16;
        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Throwable from label17 to label18 with label16;
    }

    boolean isSameResourcesOverrideConfig(android.os.IBinder, android.content.res.Configuration)
    {
        android.app.ResourcesManager r0;
        android.content.res.Configuration r1, $r2, $r3, $r4;
        boolean $z1, z2, z3;
        int $i0;
        java.util.WeakHashMap $r5;
        java.lang.Object $r6;
        java.lang.Throwable $r7;
        android.os.IBinder r8;
        android.app.ResourcesManager$ActivityResources r9;

        r0 := @this: android.app.ResourcesManager;

        r8 := @parameter0: android.os.IBinder;

        r1 := @parameter1: android.content.res.Configuration;

        entermonitor r0;

        if r8 == null goto label04;

     label01:
        $r5 = r0.<android.app.ResourcesManager: java.util.WeakHashMap mActivityResourceReferences>;

        $r6 = virtualinvoke $r5.<java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>(r8);

        r9 = (android.app.ResourcesManager$ActivityResources) $r6;

     label02:
        goto label05;

     label03:
        $r7 := @caughtexception;

        goto label17;

     label04:
        r9 = null;

     label05:
        z2 = 1;

        if r9 != null goto label09;

        if r1 != null goto label06;

        goto label07;

     label06:
        z2 = 0;

     label07:
        exitmonitor r0;

     label08:
        return z2;

     label09:
        $r2 = r9.<android.app.ResourcesManager$ActivityResources: android.content.res.Configuration overrideConfig>;

        $z1 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r2, r1);

        if $z1 != 0 goto label14;

     label10:
        if r1 == null goto label13;

     label11:
        $r3 = r9.<android.app.ResourcesManager$ActivityResources: android.content.res.Configuration overrideConfig>;

        if $r3 == null goto label13;

        $r4 = r9.<android.app.ResourcesManager$ActivityResources: android.content.res.Configuration overrideConfig>;

        $i0 = virtualinvoke r1.<android.content.res.Configuration: int diffPublicOnly(android.content.res.Configuration)>($r4);

        if $i0 != 0 goto label13;

     label12:
        goto label14;

     label13:
        z3 = 0;

        goto label15;

     label14:
        z3 = 1;

     label15:
        exitmonitor r0;

     label16:
        return z3;

     label17:
        exitmonitor r0;

     label18:
        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label07 to label08 with label03;
        catch java.lang.Throwable from label09 to label10 with label03;
        catch java.lang.Throwable from label11 to label12 with label03;
        catch java.lang.Throwable from label15 to label16 with label03;
        catch java.lang.Throwable from label17 to label18 with label03;
    }

    public boolean overrideTokenDisplayAdjustments(android.os.IBinder, java.util.function.Consumer)
    {
        android.app.ResourcesManager r0;
        java.util.function.Consumer r1;
        android.content.res.Resources r2;
        java.util.WeakHashMap $r3;
        java.lang.Object $r4, $r5, $r7;
        int $i0, i1;
        java.lang.ref.WeakReference $r6;
        java.lang.Throwable $r8;
        android.os.IBinder r9;
        boolean z0;
        android.app.ResourcesManager$ActivityResources r10;
        java.util.ArrayList r11;

        r0 := @this: android.app.ResourcesManager;

        r9 := @parameter0: android.os.IBinder;

        r1 := @parameter1: java.util.function.Consumer;

        z0 = 0;

        entermonitor r0;

     label01:
        $r3 = r0.<android.app.ResourcesManager: java.util.WeakHashMap mActivityResourceReferences>;

        $r4 = virtualinvoke $r3.<java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>(r9);

        r10 = (android.app.ResourcesManager$ActivityResources) $r4;

     label02:
        if r10 != null goto label05;

     label03:
        exitmonitor r0;

     label04:
        return 0;

     label05:
        r11 = r10.<android.app.ResourcesManager$ActivityResources: java.util.ArrayList activityResources>;

        $i0 = virtualinvoke r11.<java.util.ArrayList: int size()>();

        i1 = $i0 - 1;

     label06:
        if i1 < 0 goto label12;

     label07:
        $r5 = virtualinvoke r11.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r6 = (java.lang.ref.WeakReference) $r5;

        $r7 = virtualinvoke $r6.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r2 = (android.content.res.Resources) $r7;

     label08:
        if r2 == null goto label11;

     label09:
        virtualinvoke r2.<android.content.res.Resources: void overrideDisplayAdjustments(java.util.function.Consumer)>(r1);

     label10:
        z0 = 1;

     label11:
        i1 = i1 + -1;

        goto label06;

     label12:
        exitmonitor r0;

     label13:
        return z0;

     label14:
        $r8 := @caughtexception;

     label15:
        exitmonitor r0;

     label16:
        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Throwable from label05 to label06 with label14;
        catch java.lang.Throwable from label07 to label08 with label14;
        catch java.lang.Throwable from label09 to label10 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label15 to label16 with label14;
    }

    public void updateResourcesForActivity(android.os.IBinder, android.content.res.Configuration, int, boolean)
    {
        android.app.ResourcesManager r0;
        android.content.res.Configuration r1, r3, $r5, $r6, $r7, $r13;
        int i0, i1, i2;
        boolean z0, $z1;
        android.app.ResourcesManager$ActivityResources r2;
        android.content.res.ResourcesKey r4;
        java.util.ArrayList $r8, $r9;
        java.lang.Object $r10, $r12;
        java.lang.ref.WeakReference $r11;
        java.lang.Throwable $r14, $r15;
        android.os.IBinder r16;
        android.content.res.Resources r17;

        r0 := @this: android.app.ResourcesManager;

        r16 := @parameter0: android.os.IBinder;

        r1 := @parameter1: android.content.res.Configuration;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

     label01:
        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(8192L, "ResourcesManager#updateResourcesForActivity");

        entermonitor r0;

     label02:
        r2 = specialinvoke r0.<android.app.ResourcesManager: android.app.ResourcesManager$ActivityResources getOrCreateActivityResourcesStructLocked(android.os.IBinder)>(r16);

        $r5 = r2.<android.app.ResourcesManager$ActivityResources: android.content.res.Configuration overrideConfig>;

        $z1 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r5, r1);

        if $z1 == 0 goto label06;

     label03:
        if z0 != 0 goto label06;

     label04:
        exitmonitor r0;

     label05:
        staticinvoke <android.os.Trace: void traceEnd(long)>(8192L);

        return;

     label06:
        r3 = new android.content.res.Configuration;

        $r6 = r2.<android.app.ResourcesManager$ActivityResources: android.content.res.Configuration overrideConfig>;

        specialinvoke r3.<android.content.res.Configuration: void <init>(android.content.res.Configuration)>($r6);

     label07:
        if r1 == null goto label10;

     label08:
        $r13 = r2.<android.app.ResourcesManager$ActivityResources: android.content.res.Configuration overrideConfig>;

        virtualinvoke $r13.<android.content.res.Configuration: void setTo(android.content.res.Configuration)>(r1);

     label09:
        goto label11;

     label10:
        $r7 = r2.<android.app.ResourcesManager$ActivityResources: android.content.res.Configuration overrideConfig>;

        virtualinvoke $r7.<android.content.res.Configuration: void unset()>();

     label11:
        $r8 = r2.<android.app.ResourcesManager$ActivityResources: java.util.ArrayList activityResources>;

        i1 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

     label12:
        i2 = 0;

     label13:
        if i2 >= i1 goto label20;

     label14:
        $r9 = r2.<android.app.ResourcesManager$ActivityResources: java.util.ArrayList activityResources>;

        $r10 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r11 = (java.lang.ref.WeakReference) $r10;

        $r12 = virtualinvoke $r11.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r17 = (android.content.res.Resources) $r12;

     label15:
        if r17 != null goto label16;

        goto label19;

     label16:
        r4 = specialinvoke r0.<android.app.ResourcesManager: android.content.res.ResourcesKey rebaseActivityOverrideConfig(android.content.res.Resources,android.content.res.Configuration,android.content.res.Configuration,int)>(r17, r3, r1, i0);

     label17:
        if r4 == null goto label19;

     label18:
        specialinvoke r0.<android.app.ResourcesManager: void updateActivityResources(android.content.res.Resources,android.content.res.ResourcesKey,boolean)>(r17, r4, 0);

     label19:
        i2 = i2 + 1;

        goto label13;

     label20:
        exitmonitor r0;

     label21:
        staticinvoke <android.os.Trace: void traceEnd(long)>(8192L);

        return;

     label22:
        $r15 := @caughtexception;

     label23:
        exitmonitor r0;

     label24:
        throw $r15;

     label25:
        $r14 := @caughtexception;

        staticinvoke <android.os.Trace: void traceEnd(long)>(8192L);

        throw $r14;

        catch java.lang.Throwable from label01 to label02 with label25;
        catch java.lang.Throwable from label02 to label03 with label22;
        catch java.lang.Throwable from label04 to label05 with label22;
        catch java.lang.Throwable from label06 to label07 with label22;
        catch java.lang.Throwable from label08 to label09 with label22;
        catch java.lang.Throwable from label10 to label11 with label22;
        catch java.lang.Throwable from label11 to label12 with label22;
        catch java.lang.Throwable from label14 to label15 with label22;
        catch java.lang.Throwable from label16 to label17 with label22;
        catch java.lang.Throwable from label18 to label19 with label22;
        catch java.lang.Throwable from label20 to label21 with label22;
        catch java.lang.Throwable from label23 to label24 with label22;
        catch java.lang.Throwable from label24 to label25 with label25;
    }

    public static void <clinit>()
    {
        <android.app.ResourcesManager: java.lang.String TAG> = "ResourcesManager";

        <android.app.ResourcesManager: boolean ENABLE_APK_ASSETS_CACHE> = 0;

        <android.app.ResourcesManager: boolean DEBUG> = 0;

        return;
    }
}
