public final class android.app.RuntimeAppOpAccessMessage extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    private final java.lang.String mAttributionTag;
    private final java.lang.String mMessage;
    private final int mOpCode;
    private final java.lang.String mPackageName;
    private final int mSamplingStrategy;
    private final int mUid;

    static void <clinit>()
    {
        android.app.RuntimeAppOpAccessMessage$1 $r0;

        $r0 = new android.app.RuntimeAppOpAccessMessage$1;

        specialinvoke $r0.<android.app.RuntimeAppOpAccessMessage$1: void <init>()>();

        <android.app.RuntimeAppOpAccessMessage: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    public void <init>(int, int, java.lang.String, java.lang.String, java.lang.String, int)
    {
        android.app.RuntimeAppOpAccessMessage r0;
        int i0, i1, i2;
        java.lang.String r1, r2, r3;

        r0 := @this: android.app.RuntimeAppOpAccessMessage;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: java.lang.String;

        i2 := @parameter5: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.app.RuntimeAppOpAccessMessage: int mUid> = i0;

        staticinvoke <com.android.internal.util.AnnotationValidations: void validate(java.lang.Class,android.'annotation'.IntRange,int,java.lang.String,long)>(class "Landroid/annotation/IntRange;", null, i0, "from", 0L);

        r0.<android.app.RuntimeAppOpAccessMessage: int mOpCode> = i1;

        staticinvoke <com.android.internal.util.AnnotationValidations: void validate(java.lang.Class,android.'annotation'.IntRange,int,java.lang.String,long,java.lang.String,long)>(class "Landroid/annotation/IntRange;", null, i1, "from", 0L, "to", 99L);

        r0.<android.app.RuntimeAppOpAccessMessage: java.lang.String mPackageName> = r1;

        staticinvoke <com.android.internal.util.AnnotationValidations: void validate(java.lang.Class,android.'annotation'.NonNull,java.lang.Object)>(class "Landroid/annotation/NonNull;", null, r1);

        r0.<android.app.RuntimeAppOpAccessMessage: java.lang.String mAttributionTag> = r2;

        r0.<android.app.RuntimeAppOpAccessMessage: java.lang.String mMessage> = r3;

        staticinvoke <com.android.internal.util.AnnotationValidations: void validate(java.lang.Class,android.'annotation'.NonNull,java.lang.Object)>(class "Landroid/annotation/NonNull;", null, r3);

        r0.<android.app.RuntimeAppOpAccessMessage: int mSamplingStrategy> = i2;

        staticinvoke <com.android.internal.util.AnnotationValidations: void validate(java.lang.Class,java.lang.'annotation'.Annotation,int)>(class "Landroid/app/AppOpsManager$SamplingStrategy;", null, i2);

        return;
    }

    void <init>(android.os.Parcel)
    {
        android.app.RuntimeAppOpAccessMessage r0;
        android.os.Parcel r1;
        int i0, i1, i4;
        java.lang.String r2, r3, r4;
        byte $b2, b3;

        r0 := @this: android.app.RuntimeAppOpAccessMessage;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        b3 = virtualinvoke r1.<android.os.Parcel: byte readByte()>();

        i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        i1 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r2 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $b2 = b3 & 8;

        if $b2 != 0 goto label1;

        r4 = null;

        goto label2;

     label1:
        r4 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

     label2:
        r3 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        i4 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.app.RuntimeAppOpAccessMessage: int mUid> = i0;

        staticinvoke <com.android.internal.util.AnnotationValidations: void validate(java.lang.Class,android.'annotation'.IntRange,int,java.lang.String,long)>(class "Landroid/annotation/IntRange;", null, i0, "from", 0L);

        r0.<android.app.RuntimeAppOpAccessMessage: int mOpCode> = i1;

        staticinvoke <com.android.internal.util.AnnotationValidations: void validate(java.lang.Class,android.'annotation'.IntRange,int,java.lang.String,long,java.lang.String,long)>(class "Landroid/annotation/IntRange;", null, i1, "from", 0L, "to", 99L);

        r0.<android.app.RuntimeAppOpAccessMessage: java.lang.String mPackageName> = r2;

        staticinvoke <com.android.internal.util.AnnotationValidations: void validate(java.lang.Class,android.'annotation'.NonNull,java.lang.Object)>(class "Landroid/annotation/NonNull;", null, r2);

        r0.<android.app.RuntimeAppOpAccessMessage: java.lang.String mAttributionTag> = r4;

        r0.<android.app.RuntimeAppOpAccessMessage: java.lang.String mMessage> = r3;

        staticinvoke <com.android.internal.util.AnnotationValidations: void validate(java.lang.Class,android.'annotation'.NonNull,java.lang.Object)>(class "Landroid/annotation/NonNull;", null, r3);

        r0.<android.app.RuntimeAppOpAccessMessage: int mSamplingStrategy> = i4;

        staticinvoke <com.android.internal.util.AnnotationValidations: void validate(java.lang.Class,java.lang.'annotation'.Annotation,int)>(class "Landroid/app/AppOpsManager$SamplingStrategy;", null, i4);

        return;
    }

    private void __metadata()
    {
        android.app.RuntimeAppOpAccessMessage r0;

        r0 := @this: android.app.RuntimeAppOpAccessMessage;

        return;
    }

    public int describeContents()
    {
        android.app.RuntimeAppOpAccessMessage r0;

        r0 := @this: android.app.RuntimeAppOpAccessMessage;

        return 0;
    }

    public java.lang.String getAttributionTag()
    {
        android.app.RuntimeAppOpAccessMessage r0;
        java.lang.String $r1;

        r0 := @this: android.app.RuntimeAppOpAccessMessage;

        $r1 = r0.<android.app.RuntimeAppOpAccessMessage: java.lang.String mAttributionTag>;

        return $r1;
    }

    public java.lang.String getMessage()
    {
        android.app.RuntimeAppOpAccessMessage r0;
        java.lang.String $r1;

        r0 := @this: android.app.RuntimeAppOpAccessMessage;

        $r1 = r0.<android.app.RuntimeAppOpAccessMessage: java.lang.String mMessage>;

        return $r1;
    }

    public java.lang.String getOp()
    {
        android.app.RuntimeAppOpAccessMessage r0;
        int $i0;
        java.lang.String $r1;

        r0 := @this: android.app.RuntimeAppOpAccessMessage;

        $i0 = r0.<android.app.RuntimeAppOpAccessMessage: int mOpCode>;

        $r1 = staticinvoke <android.app.AppOpsManager: java.lang.String opToPublicName(int)>($i0);

        return $r1;
    }

    public java.lang.String getPackageName()
    {
        android.app.RuntimeAppOpAccessMessage r0;
        java.lang.String $r1;

        r0 := @this: android.app.RuntimeAppOpAccessMessage;

        $r1 = r0.<android.app.RuntimeAppOpAccessMessage: java.lang.String mPackageName>;

        return $r1;
    }

    public int getSamplingStrategy()
    {
        android.app.RuntimeAppOpAccessMessage r0;
        int $i0;

        r0 := @this: android.app.RuntimeAppOpAccessMessage;

        $i0 = r0.<android.app.RuntimeAppOpAccessMessage: int mSamplingStrategy>;

        return $i0;
    }

    public int getUid()
    {
        android.app.RuntimeAppOpAccessMessage r0;
        int $i0;

        r0 := @this: android.app.RuntimeAppOpAccessMessage;

        $i0 = r0.<android.app.RuntimeAppOpAccessMessage: int mUid>;

        return $i0;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.app.RuntimeAppOpAccessMessage r0;
        android.os.Parcel r1;
        java.lang.String r2, $r3, $r4, $r5;
        int $i0, $i1, $i2, i4;
        byte $b3, b6, b7;

        r0 := @this: android.app.RuntimeAppOpAccessMessage;

        r1 := @parameter0: android.os.Parcel;

        i4 := @parameter1: int;

        b6 = 0;

        $r3 = r0.<android.app.RuntimeAppOpAccessMessage: java.lang.String mAttributionTag>;

        if $r3 == null goto label1;

        $b3 = 0 | 8;

        b7 = (byte) $b3;

        b6 = b7;

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeByte(byte)>(b6);

        $i0 = r0.<android.app.RuntimeAppOpAccessMessage: int mUid>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i0);

        $i1 = r0.<android.app.RuntimeAppOpAccessMessage: int mOpCode>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $r4 = r0.<android.app.RuntimeAppOpAccessMessage: java.lang.String mPackageName>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r4);

        r2 = r0.<android.app.RuntimeAppOpAccessMessage: java.lang.String mAttributionTag>;

        if r2 == null goto label2;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r2);

     label2:
        $r5 = r0.<android.app.RuntimeAppOpAccessMessage: java.lang.String mMessage>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r5);

        $i2 = r0.<android.app.RuntimeAppOpAccessMessage: int mSamplingStrategy>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i2);

        return;
    }
}
