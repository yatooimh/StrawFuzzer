public abstract class android.app.SharedElementCallback extends java.lang.Object
{
    private static final java.lang.String BUNDLE_SNAPSHOT_BITMAP;
    private static final java.lang.String BUNDLE_SNAPSHOT_COLOR_SPACE;
    private static final java.lang.String BUNDLE_SNAPSHOT_HARDWARE_BUFFER;
    private static final java.lang.String BUNDLE_SNAPSHOT_IMAGE_MATRIX;
    private static final java.lang.String BUNDLE_SNAPSHOT_IMAGE_SCALETYPE;
    static final android.app.SharedElementCallback NULL_CALLBACK;
    private android.graphics.Matrix mTempMatrix;

    static void <clinit>()
    {
        android.app.SharedElementCallback$1 $r0;

        <android.app.SharedElementCallback: java.lang.String BUNDLE_SNAPSHOT_IMAGE_SCALETYPE> = "sharedElement:snapshot:imageScaleType";

        <android.app.SharedElementCallback: java.lang.String BUNDLE_SNAPSHOT_IMAGE_MATRIX> = "sharedElement:snapshot:imageMatrix";

        <android.app.SharedElementCallback: java.lang.String BUNDLE_SNAPSHOT_HARDWARE_BUFFER> = "sharedElement:snapshot:hardwareBuffer";

        <android.app.SharedElementCallback: java.lang.String BUNDLE_SNAPSHOT_COLOR_SPACE> = "sharedElement:snapshot:colorSpace";

        <android.app.SharedElementCallback: java.lang.String BUNDLE_SNAPSHOT_BITMAP> = "sharedElement:snapshot:bitmap";

        $r0 = new android.app.SharedElementCallback$1;

        specialinvoke $r0.<android.app.SharedElementCallback$1: void <init>()>();

        <android.app.SharedElementCallback: android.app.SharedElementCallback NULL_CALLBACK> = $r0;

        return;
    }

    public void <init>()
    {
        android.app.SharedElementCallback r0;

        r0 := @this: android.app.SharedElementCallback;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public android.os.Parcelable onCaptureSharedElementSnapshot(android.view.View, android.graphics.Matrix, android.graphics.RectF)
    {
        android.app.SharedElementCallback r0;
        android.graphics.drawable.Drawable r1, r14;
        boolean $z0;
        android.view.ViewParent $r2;
        android.graphics.Matrix $r3, $r5, r11, r22, r24;
        android.graphics.Bitmap $r4, r15;
        android.os.Bundle $r6;
        android.graphics.Bitmap$Config $r7, $r8;
        android.hardware.HardwareBuffer $r9;
        int $i0, $i1;
        android.view.View r10;
        android.graphics.RectF r12;
        android.widget.ImageView r13;
        android.graphics.ColorSpace r17;
        android.widget.ImageView$ScaleType $r18, $r20, $r21;
        java.lang.String $r19;
        float[] r23;
        android.view.ViewGroup r25;

        r0 := @this: android.app.SharedElementCallback;

        r10 := @parameter0: android.view.View;

        r11 := @parameter1: android.graphics.Matrix;

        r12 := @parameter2: android.graphics.RectF;

        $z0 = r10 instanceof android.widget.ImageView;

        if $z0 == 0 goto label5;

        r13 = (android.widget.ImageView) r10;

        r14 = virtualinvoke r13.<android.widget.ImageView: android.graphics.drawable.Drawable getDrawable()>();

        r1 = virtualinvoke r13.<android.widget.ImageView: android.graphics.drawable.Drawable getBackground()>();

        if r14 == null goto label5;

        if r1 == null goto label1;

        $i1 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getAlpha()>();

        if $i1 != 0 goto label5;

     label1:
        r15 = staticinvoke <android.transition.TransitionUtils: android.graphics.Bitmap createDrawableBitmap(android.graphics.drawable.Drawable,android.view.View)>(r14, r13);

        if r15 == null goto label5;

        $r6 = new android.os.Bundle;

        specialinvoke $r6.<android.os.Bundle: void <init>()>();

        $r7 = virtualinvoke r15.<android.graphics.Bitmap: android.graphics.Bitmap$Config getConfig()>();

        $r8 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config HARDWARE>;

        if $r7 == $r8 goto label2;

        virtualinvoke $r6.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("sharedElement:snapshot:bitmap", r15);

        goto label3;

     label2:
        $r9 = virtualinvoke r15.<android.graphics.Bitmap: android.hardware.HardwareBuffer getHardwareBuffer()>();

        virtualinvoke $r6.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("sharedElement:snapshot:hardwareBuffer", $r9);

        r17 = virtualinvoke r15.<android.graphics.Bitmap: android.graphics.ColorSpace getColorSpace()>();

        if r17 == null goto label3;

        $i0 = virtualinvoke r17.<android.graphics.ColorSpace: int getId()>();

        virtualinvoke $r6.<android.os.Bundle: void putInt(java.lang.String,int)>("sharedElement:snapshot:colorSpace", $i0);

     label3:
        $r18 = virtualinvoke r13.<android.widget.ImageView: android.widget.ImageView$ScaleType getScaleType()>();

        $r19 = virtualinvoke $r18.<android.widget.ImageView$ScaleType: java.lang.String toString()>();

        virtualinvoke $r6.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("sharedElement:snapshot:imageScaleType", $r19);

        $r20 = virtualinvoke r13.<android.widget.ImageView: android.widget.ImageView$ScaleType getScaleType()>();

        $r21 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType MATRIX>;

        if $r20 != $r21 goto label4;

        r22 = virtualinvoke r13.<android.widget.ImageView: android.graphics.Matrix getImageMatrix()>();

        r23 = newarray (float)[9];

        virtualinvoke r22.<android.graphics.Matrix: void getValues(float[])>(r23);

        virtualinvoke $r6.<android.os.Bundle: void putFloatArray(java.lang.String,float[])>("sharedElement:snapshot:imageMatrix", r23);

     label4:
        return $r6;

     label5:
        r24 = r0.<android.app.SharedElementCallback: android.graphics.Matrix mTempMatrix>;

        if r24 != null goto label6;

        $r5 = new android.graphics.Matrix;

        specialinvoke $r5.<android.graphics.Matrix: void <init>(android.graphics.Matrix)>(r11);

        r0.<android.app.SharedElementCallback: android.graphics.Matrix mTempMatrix> = $r5;

        goto label7;

     label6:
        virtualinvoke r24.<android.graphics.Matrix: void set(android.graphics.Matrix)>(r11);

     label7:
        $r2 = virtualinvoke r10.<android.view.View: android.view.ViewParent getParent()>();

        r25 = (android.view.ViewGroup) $r2;

        $r3 = r0.<android.app.SharedElementCallback: android.graphics.Matrix mTempMatrix>;

        $r4 = staticinvoke <android.transition.TransitionUtils: android.graphics.Bitmap createViewBitmap(android.view.View,android.graphics.Matrix,android.graphics.RectF,android.view.ViewGroup)>(r10, $r3, r12, r25);

        return $r4;
    }

    public android.view.View onCreateSnapshotView(android.content.Context, android.os.Parcelable)
    {
        android.app.SharedElementCallback r0;
        android.os.Bundle r1;
        int i0, $i1;
        boolean $z0, $z1;
        android.view.View $r2, r13;
        android.graphics.drawable.BitmapDrawable $r3;
        android.content.res.Resources $r4;
        android.os.Parcelable $r5, $r6, r12;
        android.graphics.Matrix $r7;
        android.graphics.ColorSpace$Named[] $r8, $r9;
        android.graphics.ColorSpace$Named $r10;
        android.content.Context r11;
        android.hardware.HardwareBuffer r14;
        android.graphics.Bitmap r15, r16, r27;
        android.graphics.ColorSpace r17;
        android.widget.ImageView $r18;
        java.lang.String $r21;
        android.widget.ImageView$ScaleType $r22, $r23, $r24;
        float[] r25;

        r0 := @this: android.app.SharedElementCallback;

        r11 := @parameter0: android.content.Context;

        r12 := @parameter1: android.os.Parcelable;

        r13 = null;

        $z0 = r12 instanceof android.os.Bundle;

        if $z0 == 0 goto label4;

        r1 = (android.os.Bundle) r12;

        $r5 = virtualinvoke r1.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>("sharedElement:snapshot:hardwareBuffer");

        r14 = (android.hardware.HardwareBuffer) $r5;

        $r6 = virtualinvoke r1.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>("sharedElement:snapshot:bitmap");

        r15 = (android.graphics.Bitmap) $r6;

        if r14 != null goto label1;

        if r15 != null goto label1;

        return null;

     label1:
        r16 = r15;

        if r15 != null goto label3;

        i0 = virtualinvoke r1.<android.os.Bundle: int getInt(java.lang.String,int)>("sharedElement:snapshot:colorSpace", 0);

        r17 = null;

        if i0 < 0 goto label2;

        r17 = null;

        $r8 = staticinvoke <android.graphics.ColorSpace$Named: android.graphics.ColorSpace$Named[] values()>();

        $i1 = lengthof $r8;

        if i0 >= $i1 goto label2;

        $r9 = staticinvoke <android.graphics.ColorSpace$Named: android.graphics.ColorSpace$Named[] values()>();

        $r10 = $r9[i0];

        r17 = staticinvoke <android.graphics.ColorSpace: android.graphics.ColorSpace get(android.graphics.ColorSpace$Named)>($r10);

     label2:
        r16 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap wrapHardwareBuffer(android.hardware.HardwareBuffer,android.graphics.ColorSpace)>(r14, r17);

     label3:
        $r18 = new android.widget.ImageView;

        specialinvoke $r18.<android.widget.ImageView: void <init>(android.content.Context)>(r11);

        virtualinvoke $r18.<android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>(r16);

        $r21 = virtualinvoke r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("sharedElement:snapshot:imageScaleType");

        $r22 = staticinvoke <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType valueOf(java.lang.String)>($r21);

        virtualinvoke $r18.<android.widget.ImageView: void setScaleType(android.widget.ImageView$ScaleType)>($r22);

        r13 = $r18;

        $r23 = virtualinvoke $r18.<android.widget.ImageView: android.widget.ImageView$ScaleType getScaleType()>();

        $r24 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType MATRIX>;

        if $r23 != $r24 goto label5;

        r25 = virtualinvoke r1.<android.os.Bundle: float[] getFloatArray(java.lang.String)>("sharedElement:snapshot:imageMatrix");

        $r7 = new android.graphics.Matrix;

        specialinvoke $r7.<android.graphics.Matrix: void <init>()>();

        virtualinvoke $r7.<android.graphics.Matrix: void setValues(float[])>(r25);

        virtualinvoke $r18.<android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>($r7);

        r13 = $r18;

        goto label5;

     label4:
        $z1 = r12 instanceof android.graphics.Bitmap;

        if $z1 == 0 goto label5;

        r27 = (android.graphics.Bitmap) r12;

        $r2 = new android.view.View;

        specialinvoke $r2.<android.view.View: void <init>(android.content.Context)>(r11);

        r13 = $r2;

        $r3 = new android.graphics.drawable.BitmapDrawable;

        $r4 = virtualinvoke r11.<android.content.Context: android.content.res.Resources getResources()>();

        specialinvoke $r3.<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap)>($r4, r27);

        virtualinvoke $r2.<android.view.View: void setBackground(android.graphics.drawable.Drawable)>($r3);

        goto label5;

     label5:
        return r13;
    }

    public void onMapSharedElements(java.util.List, java.util.Map)
    {
        android.app.SharedElementCallback r0;
        java.util.List r1;
        java.util.Map r2;

        r0 := @this: android.app.SharedElementCallback;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.util.Map;

        return;
    }

    public void onRejectSharedElements(java.util.List)
    {
        android.app.SharedElementCallback r0;
        java.util.List r1;

        r0 := @this: android.app.SharedElementCallback;

        r1 := @parameter0: java.util.List;

        return;
    }

    public void onSharedElementEnd(java.util.List, java.util.List, java.util.List)
    {
        android.app.SharedElementCallback r0;
        java.util.List r1, r2, r3;

        r0 := @this: android.app.SharedElementCallback;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: java.util.List;

        return;
    }

    public void onSharedElementStart(java.util.List, java.util.List, java.util.List)
    {
        android.app.SharedElementCallback r0;
        java.util.List r1, r2, r3;

        r0 := @this: android.app.SharedElementCallback;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: java.util.List;

        return;
    }

    public void onSharedElementsArrived(java.util.List, java.util.List, android.app.SharedElementCallback$OnSharedElementsReadyListener)
    {
        android.app.SharedElementCallback r0;
        java.util.List r1, r2;
        android.app.SharedElementCallback$OnSharedElementsReadyListener r3;

        r0 := @this: android.app.SharedElementCallback;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: android.app.SharedElementCallback$OnSharedElementsReadyListener;

        interfaceinvoke r3.<android.app.SharedElementCallback$OnSharedElementsReadyListener: void onSharedElementsReady()>();

        return;
    }
}
