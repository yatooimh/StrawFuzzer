class android.app.SharedPreferencesImpl$EditorImpl$1 extends java.lang.Object implements java.lang.Runnable
{
    final android.app.SharedPreferencesImpl$EditorImpl this$1;
    final android.app.SharedPreferencesImpl$MemoryCommitResult val$mcr;
    final long val$startTime;

    void <init>(android.app.SharedPreferencesImpl$EditorImpl, android.app.SharedPreferencesImpl$MemoryCommitResult, long)
    {
        android.app.SharedPreferencesImpl$EditorImpl$1 r0;
        android.app.SharedPreferencesImpl$EditorImpl r1;
        android.app.SharedPreferencesImpl$MemoryCommitResult r2;
        long l0;

        r0 := @this: android.app.SharedPreferencesImpl$EditorImpl$1;

        r1 := @parameter0: android.app.SharedPreferencesImpl$EditorImpl;

        r2 := @parameter1: android.app.SharedPreferencesImpl$MemoryCommitResult;

        l0 := @parameter2: long;

        r0.<android.app.SharedPreferencesImpl$EditorImpl$1: android.app.SharedPreferencesImpl$EditorImpl this$1> = r1;

        r0.<android.app.SharedPreferencesImpl$EditorImpl$1: android.app.SharedPreferencesImpl$MemoryCommitResult val$mcr> = r2;

        r0.<android.app.SharedPreferencesImpl$EditorImpl$1: long val$startTime> = l0;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        android.app.SharedPreferencesImpl$EditorImpl$1 r0;
        android.app.SharedPreferencesImpl$MemoryCommitResult $r2;
        java.util.concurrent.CountDownLatch $r3;
        java.lang.Throwable $r4;

        r0 := @this: android.app.SharedPreferencesImpl$EditorImpl$1;

     label1:
        $r2 = r0.<android.app.SharedPreferencesImpl$EditorImpl$1: android.app.SharedPreferencesImpl$MemoryCommitResult val$mcr>;

        $r3 = $r2.<android.app.SharedPreferencesImpl$MemoryCommitResult: java.util.concurrent.CountDownLatch writtenToDiskLatch>;

        virtualinvoke $r3.<java.util.concurrent.CountDownLatch: void await()>();

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        return;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }
}
