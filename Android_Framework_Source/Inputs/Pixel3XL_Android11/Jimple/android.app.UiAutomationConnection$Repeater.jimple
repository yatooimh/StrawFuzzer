public class android.app.UiAutomationConnection$Repeater extends java.lang.Object implements java.lang.Runnable
{
    private final java.io.InputStream readFrom;
    final android.app.UiAutomationConnection this$0;
    private final java.io.OutputStream writeTo;

    public void <init>(android.app.UiAutomationConnection, java.io.InputStream, java.io.OutputStream)
    {
        android.app.UiAutomationConnection$Repeater r0;
        android.app.UiAutomationConnection r1;
        java.io.InputStream r2;
        java.io.OutputStream r3;

        r0 := @this: android.app.UiAutomationConnection$Repeater;

        r1 := @parameter0: android.app.UiAutomationConnection;

        r2 := @parameter1: java.io.InputStream;

        r3 := @parameter2: java.io.OutputStream;

        r0.<android.app.UiAutomationConnection$Repeater: android.app.UiAutomationConnection this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.app.UiAutomationConnection$Repeater: java.io.InputStream readFrom> = r2;

        r0.<android.app.UiAutomationConnection$Repeater: java.io.OutputStream writeTo> = r3;

        return;
    }

    public void run()
    {
        android.app.UiAutomationConnection$Repeater r0;
        int i0;
        java.io.InputStream $r1, $r4, $r8;
        java.io.OutputStream $r2, $r3, $r5, $r9;
        java.lang.Throwable $r6, $r7;
        byte[] r10;

        r0 := @this: android.app.UiAutomationConnection$Repeater;

     label01:
        r10 = newarray (byte)[8192];

     label02:
        $r1 = r0.<android.app.UiAutomationConnection$Repeater: java.io.InputStream readFrom>;

        i0 = virtualinvoke $r1.<java.io.InputStream: int read(byte[])>(r10);

     label03:
        if i0 >= 0 goto label04;

        goto label09;

     label04:
        $r2 = r0.<android.app.UiAutomationConnection$Repeater: java.io.OutputStream writeTo>;

        virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>(r10, 0, i0);

        $r3 = r0.<android.app.UiAutomationConnection$Repeater: java.io.OutputStream writeTo>;

        virtualinvoke $r3.<java.io.OutputStream: void flush()>();

     label05:
        goto label02;

     label06:
        $r7 := @caughtexception;

        goto label10;

     label07:
        $r6 := @caughtexception;

     label08:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("UiAutomationConnection", "Error while reading/writing to streams");

     label09:
        $r4 = r0.<android.app.UiAutomationConnection$Repeater: java.io.InputStream readFrom>;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>($r4);

        $r5 = r0.<android.app.UiAutomationConnection$Repeater: java.io.OutputStream writeTo>;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>($r5);

        return;

     label10:
        $r8 = r0.<android.app.UiAutomationConnection$Repeater: java.io.InputStream readFrom>;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>($r8);

        $r9 = r0.<android.app.UiAutomationConnection$Repeater: java.io.OutputStream writeTo>;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>($r9);

        throw $r7;

        catch java.io.IOException from label01 to label02 with label07;
        catch java.lang.Throwable from label01 to label02 with label06;
        catch java.io.IOException from label02 to label03 with label07;
        catch java.lang.Throwable from label02 to label03 with label06;
        catch java.io.IOException from label04 to label05 with label07;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label08 to label09 with label06;
    }
}
