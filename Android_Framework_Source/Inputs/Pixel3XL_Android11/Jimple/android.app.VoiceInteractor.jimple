public final class android.app.VoiceInteractor extends java.lang.Object
{
    static final boolean DEBUG;
    public static final java.lang.String KEY_CANCELLATION_SIGNAL;
    public static final java.lang.String KEY_KILL_SIGNAL;
    static final int MSG_ABORT_VOICE_RESULT;
    static final int MSG_CANCEL_RESULT;
    static final int MSG_COMMAND_RESULT;
    static final int MSG_COMPLETE_VOICE_RESULT;
    static final int MSG_CONFIRMATION_RESULT;
    static final int MSG_PICK_OPTION_RESULT;
    static final android.app.VoiceInteractor$Request[] NO_REQUESTS;
    static final java.lang.String TAG;
    final android.util.ArrayMap mActiveRequests;
    android.app.Activity mActivity;
    final com.android.internal.app.IVoiceInteractorCallback$Stub mCallback;
    android.content.Context mContext;
    final com.android.internal.os.HandlerCaller mHandlerCaller;
    final com.android.internal.os.HandlerCaller$Callback mHandlerCallerCallback;
    com.android.internal.app.IVoiceInteractor mInteractor;
    final android.util.ArrayMap mOnDestroyCallbacks;
    boolean mRetaining;

    static void <clinit>()
    {
        android.app.VoiceInteractor$Request[] $r0;

        <android.app.VoiceInteractor: java.lang.String TAG> = "VoiceInteractor";

        <android.app.VoiceInteractor: int MSG_PICK_OPTION_RESULT> = 2;

        <android.app.VoiceInteractor: int MSG_CONFIRMATION_RESULT> = 1;

        <android.app.VoiceInteractor: int MSG_COMPLETE_VOICE_RESULT> = 3;

        <android.app.VoiceInteractor: int MSG_COMMAND_RESULT> = 5;

        <android.app.VoiceInteractor: int MSG_CANCEL_RESULT> = 6;

        <android.app.VoiceInteractor: int MSG_ABORT_VOICE_RESULT> = 4;

        <android.app.VoiceInteractor: java.lang.String KEY_KILL_SIGNAL> = "key_kill_signal";

        <android.app.VoiceInteractor: java.lang.String KEY_CANCELLATION_SIGNAL> = "key_cancellation_signal";

        <android.app.VoiceInteractor: boolean DEBUG> = 0;

        $r0 = newarray (android.app.VoiceInteractor$Request)[0];

        <android.app.VoiceInteractor: android.app.VoiceInteractor$Request[] NO_REQUESTS> = $r0;

        return;
    }

    void <init>(com.android.internal.app.IVoiceInteractor, android.content.Context, android.app.Activity, android.os.Looper)
    {
        android.app.VoiceInteractor r0;
        android.app.Activity r1;
        android.os.Looper r2;
        android.app.VoiceInteractor$1 $r3;
        android.app.VoiceInteractor$2 $r4;
        android.util.ArrayMap $r5, $r6;
        com.android.internal.os.HandlerCaller $r7;
        com.android.internal.os.HandlerCaller$Callback $r8;
        android.os.RemoteException $r9;
        com.android.internal.app.IVoiceInteractor r10, r12;
        android.content.Context r11;
        android.app.VoiceInteractor$KillCallback r13;

        r0 := @this: android.app.VoiceInteractor;

        r10 := @parameter0: com.android.internal.app.IVoiceInteractor;

        r11 := @parameter1: android.content.Context;

        r1 := @parameter2: android.app.Activity;

        r2 := @parameter3: android.os.Looper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new android.app.VoiceInteractor$1;

        specialinvoke $r3.<android.app.VoiceInteractor$1: void <init>(android.app.VoiceInteractor)>(r0);

        r0.<android.app.VoiceInteractor: com.android.internal.os.HandlerCaller$Callback mHandlerCallerCallback> = $r3;

        $r4 = new android.app.VoiceInteractor$2;

        specialinvoke $r4.<android.app.VoiceInteractor$2: void <init>(android.app.VoiceInteractor)>(r0);

        r0.<android.app.VoiceInteractor: com.android.internal.app.IVoiceInteractorCallback$Stub mCallback> = $r4;

        $r5 = new android.util.ArrayMap;

        specialinvoke $r5.<android.util.ArrayMap: void <init>()>();

        r0.<android.app.VoiceInteractor: android.util.ArrayMap mActiveRequests> = $r5;

        $r6 = new android.util.ArrayMap;

        specialinvoke $r6.<android.util.ArrayMap: void <init>()>();

        r0.<android.app.VoiceInteractor: android.util.ArrayMap mOnDestroyCallbacks> = $r6;

        r0.<android.app.VoiceInteractor: com.android.internal.app.IVoiceInteractor mInteractor> = r10;

        r0.<android.app.VoiceInteractor: android.content.Context mContext> = r11;

        r0.<android.app.VoiceInteractor: android.app.Activity mActivity> = r1;

        $r7 = new com.android.internal.os.HandlerCaller;

        $r8 = r0.<android.app.VoiceInteractor: com.android.internal.os.HandlerCaller$Callback mHandlerCallerCallback>;

        specialinvoke $r7.<com.android.internal.os.HandlerCaller: void <init>(android.content.Context,android.os.Looper,com.android.internal.os.HandlerCaller$Callback,boolean)>(r11, r2, $r8, 1);

        r0.<android.app.VoiceInteractor: com.android.internal.os.HandlerCaller mHandlerCaller> = $r7;

     label1:
        r12 = r0.<android.app.VoiceInteractor: com.android.internal.app.IVoiceInteractor mInteractor>;

        r13 = new android.app.VoiceInteractor$KillCallback;

        specialinvoke r13.<android.app.VoiceInteractor$KillCallback: void <init>(android.app.VoiceInteractor)>(r0);

        interfaceinvoke r12.<com.android.internal.app.IVoiceInteractor: void setKillCallback(android.os.ICancellationSignal)>(r13);

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private java.util.ArrayList makeRequestList()
    {
        android.app.VoiceInteractor r0;
        int i0, i1;
        android.util.ArrayMap $r2, $r4;
        java.util.ArrayList $r3;
        java.lang.Object $r5;
        android.app.VoiceInteractor$Request $r6;

        r0 := @this: android.app.VoiceInteractor;

        $r2 = r0.<android.app.VoiceInteractor: android.util.ArrayMap mActiveRequests>;

        i0 = virtualinvoke $r2.<android.util.ArrayMap: int size()>();

        if i0 >= 1 goto label1;

        return null;

     label1:
        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>(int)>(i0);

        i1 = 0;

     label2:
        if i1 >= i0 goto label3;

        $r4 = r0.<android.app.VoiceInteractor: android.util.ArrayMap mActiveRequests>;

        $r5 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i1);

        $r6 = (android.app.VoiceInteractor$Request) $r5;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        i1 = i1 + 1;

        goto label2;

     label3:
        return $r3;
    }

    void attachActivity(android.app.Activity)
    {
        android.app.VoiceInteractor r0;
        android.app.Activity r1, $r4;
        java.util.ArrayList r2;
        android.app.VoiceInteractor$Request r3;
        int $i0, i1;
        java.lang.Object $r5;

        r0 := @this: android.app.VoiceInteractor;

        r1 := @parameter0: android.app.Activity;

        r0.<android.app.VoiceInteractor: boolean mRetaining> = 0;

        $r4 = r0.<android.app.VoiceInteractor: android.app.Activity mActivity>;

        if $r4 != r1 goto label1;

        return;

     label1:
        r0.<android.app.VoiceInteractor: android.content.Context mContext> = r1;

        r0.<android.app.VoiceInteractor: android.app.Activity mActivity> = r1;

        r2 = specialinvoke r0.<android.app.VoiceInteractor: java.util.ArrayList makeRequestList()>();

        if r2 == null goto label3;

        i1 = 0;

     label2:
        $i0 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        if i1 >= $i0 goto label3;

        $r5 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r3 = (android.app.VoiceInteractor$Request) $r5;

        r3.<android.app.VoiceInteractor$Request: android.content.Context mContext> = r1;

        r3.<android.app.VoiceInteractor$Request: android.app.Activity mActivity> = r1;

        virtualinvoke r3.<android.app.VoiceInteractor$Request: void onAttached(android.app.Activity)>(r1);

        i1 = i1 + 1;

        goto label2;

     label3:
        return;
    }

    void destroy()
    {
        android.app.VoiceInteractor r0;
        android.util.ArrayMap $r1, $r2, $r3, $r5, $r8, $r10, $r12;
        int $i0, $i1, i2, i3;
        java.lang.Object $r4, $r6, $r11;
        java.util.concurrent.Executor $r7;
        android.app.VoiceInteractor$Request r14;
        java.lang.Runnable r15;
        android.app.Activity r16;

        r0 := @this: android.app.VoiceInteractor;

        $r1 = r0.<android.app.VoiceInteractor: android.util.ArrayMap mActiveRequests>;

        $i0 = virtualinvoke $r1.<android.util.ArrayMap: int size()>();

        i2 = $i0 - 1;

     label1:
        if i2 < 0 goto label2;

        $r10 = r0.<android.app.VoiceInteractor: android.util.ArrayMap mActiveRequests>;

        $r11 = virtualinvoke $r10.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i2);

        r14 = (android.app.VoiceInteractor$Request) $r11;

        $r12 = r0.<android.app.VoiceInteractor: android.util.ArrayMap mActiveRequests>;

        virtualinvoke $r12.<android.util.ArrayMap: java.lang.Object removeAt(int)>(i2);

        virtualinvoke r14.<android.app.VoiceInteractor$Request: void cancel()>();

        i2 = i2 + -1;

        goto label1;

     label2:
        $r2 = r0.<android.app.VoiceInteractor: android.util.ArrayMap mOnDestroyCallbacks>;

        $i1 = virtualinvoke $r2.<android.util.ArrayMap: int size()>();

        i3 = $i1 - 1;

     label3:
        if i3 < 0 goto label4;

        $r3 = r0.<android.app.VoiceInteractor: android.util.ArrayMap mOnDestroyCallbacks>;

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i3);

        r15 = (java.lang.Runnable) $r4;

        $r5 = r0.<android.app.VoiceInteractor: android.util.ArrayMap mOnDestroyCallbacks>;

        $r6 = virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i3);

        $r7 = (java.util.concurrent.Executor) $r6;

        interfaceinvoke $r7.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>(r15);

        $r8 = r0.<android.app.VoiceInteractor: android.util.ArrayMap mOnDestroyCallbacks>;

        virtualinvoke $r8.<android.util.ArrayMap: java.lang.Object removeAt(int)>(i3);

        i3 = i3 + -1;

        goto label3;

     label4:
        r0.<android.app.VoiceInteractor: com.android.internal.app.IVoiceInteractor mInteractor> = null;

        r16 = r0.<android.app.VoiceInteractor: android.app.Activity mActivity>;

        if r16 == null goto label5;

        virtualinvoke r16.<android.app.Activity: void setVoiceInteractor(com.android.internal.app.IVoiceInteractor)>(null);

     label5:
        return;
    }

    void detachActivity()
    {
        android.app.VoiceInteractor r0;
        java.util.ArrayList r1, r7;
        boolean $z0;
        android.util.ArrayMap $r2;
        int $i0, $i1, i2, i3;
        java.lang.Object $r3, $r5;
        android.app.VoiceInteractor$Request $r4, r6;

        r0 := @this: android.app.VoiceInteractor;

        r1 = specialinvoke r0.<android.app.VoiceInteractor: java.util.ArrayList makeRequestList()>();

        if r1 == null goto label2;

        i2 = 0;

     label1:
        $i1 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if i2 >= $i1 goto label2;

        $r5 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r6 = (android.app.VoiceInteractor$Request) $r5;

        virtualinvoke r6.<android.app.VoiceInteractor$Request: void onDetached()>();

        r6.<android.app.VoiceInteractor$Request: android.app.Activity mActivity> = null;

        r6.<android.app.VoiceInteractor$Request: android.content.Context mContext> = null;

        i2 = i2 + 1;

        goto label1;

     label2:
        $z0 = r0.<android.app.VoiceInteractor: boolean mRetaining>;

        if $z0 != 0 goto label5;

        r7 = specialinvoke r0.<android.app.VoiceInteractor: java.util.ArrayList makeRequestList()>();

        if r7 == null goto label4;

        i3 = 0;

     label3:
        $i0 = virtualinvoke r7.<java.util.ArrayList: int size()>();

        if i3 >= $i0 goto label4;

        $r3 = virtualinvoke r7.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        $r4 = (android.app.VoiceInteractor$Request) $r3;

        virtualinvoke $r4.<android.app.VoiceInteractor$Request: void cancel()>();

        i3 = i3 + 1;

        goto label3;

     label4:
        $r2 = r0.<android.app.VoiceInteractor: android.util.ArrayMap mActiveRequests>;

        virtualinvoke $r2.<android.util.ArrayMap: void clear()>();

     label5:
        r0.<android.app.VoiceInteractor: android.content.Context mContext> = null;

        r0.<android.app.VoiceInteractor: android.app.Activity mActivity> = null;

        return;
    }

    void dump(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        android.app.VoiceInteractor r0;
        java.lang.String r1, r5;
        java.io.FileDescriptor r2;
        java.io.PrintWriter r3;
        java.lang.String[] r4;
        java.lang.StringBuilder $r6;
        android.util.ArrayMap $r9, $r13, $r14;
        int $i0, $i1, i2;
        com.android.internal.app.IVoiceInteractor $r10;
        android.os.IBinder $r11;
        android.app.Activity $r12;
        java.lang.Object $r15;
        android.app.VoiceInteractor$Request r17;

        r0 := @this: android.app.VoiceInteractor;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.io.FileDescriptor;

        r3 := @parameter2: java.io.PrintWriter;

        r4 := @parameter3: java.lang.String[];

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        r5 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = r0.<android.app.VoiceInteractor: android.util.ArrayMap mActiveRequests>;

        $i0 = virtualinvoke $r9.<android.util.ArrayMap: int size()>();

        if $i0 <= 0 goto label2;

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.String)>("Active voice requests:");

        i2 = 0;

     label1:
        $r13 = r0.<android.app.VoiceInteractor: android.util.ArrayMap mActiveRequests>;

        $i1 = virtualinvoke $r13.<android.util.ArrayMap: int size()>();

        if i2 >= $i1 goto label2;

        $r14 = r0.<android.app.VoiceInteractor: android.util.ArrayMap mActiveRequests>;

        $r15 = virtualinvoke $r14.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i2);

        r17 = (android.app.VoiceInteractor$Request) $r15;

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>("  #");

        virtualinvoke r3.<java.io.PrintWriter: void print(int)>(i2);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.Object)>(r17);

        virtualinvoke r17.<android.app.VoiceInteractor$Request: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r5, r2, r3, r4);

        i2 = i2 + 1;

        goto label1;

     label2:
        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.String)>("VoiceInteractor misc state:");

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>("  mInteractor=");

        $r10 = r0.<android.app.VoiceInteractor: com.android.internal.app.IVoiceInteractor mInteractor>;

        $r11 = interfaceinvoke $r10.<com.android.internal.app.IVoiceInteractor: android.os.IBinder asBinder()>();

        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.Object)>($r11);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>("  mActivity=");

        $r12 = r0.<android.app.VoiceInteractor: android.app.Activity mActivity>;

        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.Object)>($r12);

        return;
    }

    public android.app.VoiceInteractor$Request getActiveRequest(java.lang.String)
    {
        android.app.VoiceInteractor r0;
        android.util.ArrayMap r1, $r3, $r4;
        int i0, i2;
        android.app.VoiceInteractor$Request r2;
        boolean $z0, $z1;
        java.lang.Object $r5;
        java.lang.String $r6, $r7, r9;
        java.lang.Throwable $r8;

        r0 := @this: android.app.VoiceInteractor;

        r9 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<android.app.VoiceInteractor: boolean isDestroyed()>();

        if $z0 == 0 goto label01;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("VoiceInteractor", "Cannot interact with a destroyed voice interactor");

        return null;

     label01:
        r1 = r0.<android.app.VoiceInteractor: android.util.ArrayMap mActiveRequests>;

        entermonitor r1;

     label02:
        $r3 = r0.<android.app.VoiceInteractor: android.util.ArrayMap mActiveRequests>;

        i0 = virtualinvoke $r3.<android.util.ArrayMap: int size()>();

     label03:
        i2 = 0;

     label04:
        if i2 >= i0 goto label12;

     label05:
        $r4 = r0.<android.app.VoiceInteractor: android.util.ArrayMap mActiveRequests>;

        $r5 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i2);

        r2 = (android.app.VoiceInteractor$Request) $r5;

        $r6 = virtualinvoke r2.<android.app.VoiceInteractor$Request: java.lang.String getName()>();

        if r9 == $r6 goto label10;

     label06:
        if r9 == null goto label09;

     label07:
        $r7 = virtualinvoke r2.<android.app.VoiceInteractor$Request: java.lang.String getName()>();

        $z1 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z1 == 0 goto label09;

     label08:
        goto label10;

     label09:
        i2 = i2 + 1;

        goto label04;

     label10:
        exitmonitor r1;

     label11:
        return r2;

     label12:
        exitmonitor r1;

     label13:
        return null;

     label14:
        $r8 := @caughtexception;

     label15:
        exitmonitor r1;

     label16:
        throw $r8;

        catch java.lang.Throwable from label02 to label03 with label14;
        catch java.lang.Throwable from label05 to label06 with label14;
        catch java.lang.Throwable from label07 to label08 with label14;
        catch java.lang.Throwable from label10 to label11 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label15 to label16 with label14;
    }

    public android.app.VoiceInteractor$Request[] getActiveRequests()
    {
        android.app.VoiceInteractor r0;
        android.util.ArrayMap r1, $r2, $r3;
        int i0, i2;
        boolean $z0;
        java.lang.Object $r4;
        android.app.VoiceInteractor$Request $r5;
        java.lang.Throwable $r6;
        android.app.VoiceInteractor$Request[] r7, r8;

        r0 := @this: android.app.VoiceInteractor;

        $z0 = virtualinvoke r0.<android.app.VoiceInteractor: boolean isDestroyed()>();

        if $z0 == 0 goto label01;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("VoiceInteractor", "Cannot interact with a destroyed voice interactor");

        return null;

     label01:
        r1 = r0.<android.app.VoiceInteractor: android.util.ArrayMap mActiveRequests>;

        entermonitor r1;

     label02:
        $r2 = r0.<android.app.VoiceInteractor: android.util.ArrayMap mActiveRequests>;

        i0 = virtualinvoke $r2.<android.util.ArrayMap: int size()>();

     label03:
        if i0 > 0 goto label06;

     label04:
        r7 = <android.app.VoiceInteractor: android.app.VoiceInteractor$Request[] NO_REQUESTS>;

        exitmonitor r1;

     label05:
        return r7;

     label06:
        r8 = newarray (android.app.VoiceInteractor$Request)[i0];

     label07:
        i2 = 0;

     label08:
        if i2 >= i0 goto label11;

     label09:
        $r3 = r0.<android.app.VoiceInteractor: android.util.ArrayMap mActiveRequests>;

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i2);

        $r5 = (android.app.VoiceInteractor$Request) $r4;

        r8[i2] = $r5;

     label10:
        i2 = i2 + 1;

        goto label08;

     label11:
        exitmonitor r1;

     label12:
        return r8;

     label13:
        $r6 := @caughtexception;

     label14:
        exitmonitor r1;

     label15:
        throw $r6;

        catch java.lang.Throwable from label02 to label03 with label13;
        catch java.lang.Throwable from label04 to label05 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    public boolean isDestroyed()
    {
        android.app.VoiceInteractor r0;
        com.android.internal.app.IVoiceInteractor $r1;
        boolean z0;

        r0 := @this: android.app.VoiceInteractor;

        $r1 = r0.<android.app.VoiceInteractor: com.android.internal.app.IVoiceInteractor mInteractor>;

        if $r1 != null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public void notifyDirectActionsChanged()
    {
        android.app.VoiceInteractor r0;
        boolean $z0;
        android.app.Activity $r2, $r4;
        com.android.internal.app.IVoiceInteractor $r3;
        int $i0;
        android.os.IBinder $r5;
        android.os.RemoteException $r6;

        r0 := @this: android.app.VoiceInteractor;

        $z0 = virtualinvoke r0.<android.app.VoiceInteractor: boolean isDestroyed()>();

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("VoiceInteractor", "Cannot interact with a destroyed voice interactor");

        return;

     label1:
        $r3 = r0.<android.app.VoiceInteractor: com.android.internal.app.IVoiceInteractor mInteractor>;

        $r2 = r0.<android.app.VoiceInteractor: android.app.Activity mActivity>;

        $i0 = virtualinvoke $r2.<android.app.Activity: int getTaskId()>();

        $r4 = r0.<android.app.VoiceInteractor: android.app.Activity mActivity>;

        $r5 = virtualinvoke $r4.<android.app.Activity: android.os.IBinder getAssistToken()>();

        interfaceinvoke $r3.<com.android.internal.app.IVoiceInteractor: void notifyDirectActionsChanged(int,android.os.IBinder)>($i0, $r5);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("VoiceInteractor", "Voice interactor has died", $r6);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    android.app.VoiceInteractor$Request pullRequest(com.android.internal.app.IVoiceInteractorRequest, boolean)
    {
        android.app.VoiceInteractor r0;
        boolean z0;
        android.util.ArrayMap r1, $r3, $r6;
        android.app.VoiceInteractor$Request r2;
        android.os.IBinder $r4, $r7;
        java.lang.Object $r5;
        java.lang.Throwable $r9;
        com.android.internal.app.IVoiceInteractorRequest r10;

        r0 := @this: android.app.VoiceInteractor;

        r10 := @parameter0: com.android.internal.app.IVoiceInteractorRequest;

        z0 := @parameter1: boolean;

        r1 = r0.<android.app.VoiceInteractor: android.util.ArrayMap mActiveRequests>;

        entermonitor r1;

     label1:
        $r3 = r0.<android.app.VoiceInteractor: android.util.ArrayMap mActiveRequests>;

        $r4 = interfaceinvoke r10.<com.android.internal.app.IVoiceInteractorRequest: android.os.IBinder asBinder()>();

        $r5 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r4);

        r2 = (android.app.VoiceInteractor$Request) $r5;

     label2:
        if r2 == null goto label4;

        if z0 == 0 goto label4;

     label3:
        $r6 = r0.<android.app.VoiceInteractor: android.util.ArrayMap mActiveRequests>;

        $r7 = interfaceinvoke r10.<com.android.internal.app.IVoiceInteractorRequest: android.os.IBinder asBinder()>();

        virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>($r7);

     label4:
        exitmonitor r1;

     label5:
        return r2;

     label6:
        $r9 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public boolean registerOnDestroyedCallback(java.util.concurrent.Executor, java.lang.Runnable)
    {
        android.app.VoiceInteractor r0;
        java.util.concurrent.Executor r1;
        java.lang.Runnable r2;
        boolean $z0;
        android.util.ArrayMap $r5;

        r0 := @this: android.app.VoiceInteractor;

        r1 := @parameter0: java.util.concurrent.Executor;

        r2 := @parameter1: java.lang.Runnable;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r2);

        $z0 = virtualinvoke r0.<android.app.VoiceInteractor: boolean isDestroyed()>();

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("VoiceInteractor", "Cannot interact with a destroyed voice interactor");

        return 0;

     label1:
        $r5 = r0.<android.app.VoiceInteractor: android.util.ArrayMap mOnDestroyCallbacks>;

        virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r1);

        return 1;
    }

    void retainInstance()
    {
        android.app.VoiceInteractor r0;

        r0 := @this: android.app.VoiceInteractor;

        r0.<android.app.VoiceInteractor: boolean mRetaining> = 1;

        return;
    }

    public boolean submitRequest(android.app.VoiceInteractor$Request)
    {
        android.app.VoiceInteractor r0;
        android.app.VoiceInteractor$Request r1;
        boolean $z0;

        r0 := @this: android.app.VoiceInteractor;

        r1 := @parameter0: android.app.VoiceInteractor$Request;

        $z0 = virtualinvoke r0.<android.app.VoiceInteractor: boolean submitRequest(android.app.VoiceInteractor$Request,java.lang.String)>(r1, null);

        return $z0;
    }

    public boolean submitRequest(android.app.VoiceInteractor$Request, java.lang.String)
    {
        android.app.VoiceInteractor r0;
        boolean $z0;
        com.android.internal.app.IVoiceInteractorRequest $r1, r19;
        java.lang.String $r5, $r8, r18;
        android.content.Context $r6, $r10;
        com.android.internal.app.IVoiceInteractor $r7;
        com.android.internal.app.IVoiceInteractorCallback$Stub $r9;
        android.app.Activity $r11;
        android.util.ArrayMap $r12, r20;
        android.os.IBinder $r13;
        android.os.RemoteException $r15;
        java.lang.Throwable $r16;
        android.app.VoiceInteractor$Request r17;
        java.lang.IllegalStateException r22;
        java.lang.StringBuilder r23;

        r0 := @this: android.app.VoiceInteractor;

        r17 := @parameter0: android.app.VoiceInteractor$Request;

        r18 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r0.<android.app.VoiceInteractor: boolean isDestroyed()>();

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("VoiceInteractor", "Cannot interact with a destroyed voice interactor");

        return 0;

     label1:
        $r1 = r17.<android.app.VoiceInteractor$Request: com.android.internal.app.IVoiceInteractorRequest mRequestInterface>;

        if $r1 != null goto label7;

        $r7 = r0.<android.app.VoiceInteractor: com.android.internal.app.IVoiceInteractor mInteractor>;

        $r6 = r0.<android.app.VoiceInteractor: android.content.Context mContext>;

        $r8 = virtualinvoke $r6.<android.content.Context: java.lang.String getOpPackageName()>();

        $r9 = r0.<android.app.VoiceInteractor: com.android.internal.app.IVoiceInteractorCallback$Stub mCallback>;

        r19 = virtualinvoke r17.<android.app.VoiceInteractor$Request: com.android.internal.app.IVoiceInteractorRequest submit(com.android.internal.app.IVoiceInteractor,java.lang.String,com.android.internal.app.IVoiceInteractorCallback)>($r7, $r8, $r9);

        r17.<android.app.VoiceInteractor$Request: com.android.internal.app.IVoiceInteractorRequest mRequestInterface> = r19;

        $r10 = r0.<android.app.VoiceInteractor: android.content.Context mContext>;

        r17.<android.app.VoiceInteractor$Request: android.content.Context mContext> = $r10;

        $r11 = r0.<android.app.VoiceInteractor: android.app.Activity mActivity>;

        r17.<android.app.VoiceInteractor$Request: android.app.Activity mActivity> = $r11;

        r17.<android.app.VoiceInteractor$Request: java.lang.String mName> = r18;

        r20 = r0.<android.app.VoiceInteractor: android.util.ArrayMap mActiveRequests>;

        entermonitor r20;

     label2:
        $r12 = r0.<android.app.VoiceInteractor: android.util.ArrayMap mActiveRequests>;

        $r13 = interfaceinvoke r19.<com.android.internal.app.IVoiceInteractorRequest: android.os.IBinder asBinder()>();

        virtualinvoke $r12.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r13, r17);

        exitmonitor r20;

     label3:
        return 1;

     label4:
        $r16 := @caughtexception;

     label5:
        exitmonitor r20;

     label6:
        throw $r16;

     label7:
        r22 = new java.lang.IllegalStateException;

        r23 = new java.lang.StringBuilder;

        specialinvoke r23.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Given ");

        virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r17);

        virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is already active");

        $r5 = virtualinvoke r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r22.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r5);

        throw r22;

     label8:
        $r15 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("VoiceInteractor", "Remove voice interactor service died", $r15);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label8;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
        catch android.os.RemoteException from label6 to label7 with label8;
        catch android.os.RemoteException from label7 to label8 with label8;
    }

    public boolean[] supportsCommands(java.lang.String[])
    {
        android.app.VoiceInteractor r0;
        boolean $z0;
        android.content.Context $r1;
        com.android.internal.app.IVoiceInteractor $r2;
        java.lang.String $r3;
        int $i1;
        boolean[] $r4, r8;
        android.os.RemoteException $r5;
        java.lang.RuntimeException $r6;
        java.lang.String[] r7;

        r0 := @this: android.app.VoiceInteractor;

        r7 := @parameter0: java.lang.String[];

        $z0 = virtualinvoke r0.<android.app.VoiceInteractor: boolean isDestroyed()>();

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("VoiceInteractor", "Cannot interact with a destroyed voice interactor");

        $i1 = lengthof r7;

        $r4 = newarray (boolean)[$i1];

        return $r4;

     label1:
        $r2 = r0.<android.app.VoiceInteractor: com.android.internal.app.IVoiceInteractor mInteractor>;

        $r1 = r0.<android.app.VoiceInteractor: android.content.Context mContext>;

        $r3 = virtualinvoke $r1.<android.content.Context: java.lang.String getOpPackageName()>();

        r8 = interfaceinvoke $r2.<com.android.internal.app.IVoiceInteractor: boolean[] supportsCommands(java.lang.String,java.lang.String[])>($r3, r7);

     label2:
        return r8;

     label3:
        $r5 := @caughtexception;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Voice interactor has died", $r5);

        throw $r6;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean unregisterOnDestroyedCallback(java.lang.Runnable)
    {
        android.app.VoiceInteractor r0;
        java.lang.Runnable r1;
        boolean z0, z1;
        android.util.ArrayMap $r3;
        java.lang.Object $r4;

        r0 := @this: android.app.VoiceInteractor;

        r1 := @parameter0: java.lang.Runnable;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        z0 = virtualinvoke r0.<android.app.VoiceInteractor: boolean isDestroyed()>();

        z1 = 0;

        if z0 == 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("VoiceInteractor", "Cannot interact with a destroyed voice interactor");

        return 0;

     label1:
        $r3 = r0.<android.app.VoiceInteractor: android.util.ArrayMap mOnDestroyCallbacks>;

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r1);

        if $r4 == null goto label2;

        z1 = 1;

     label2:
        return z1;
    }
}
