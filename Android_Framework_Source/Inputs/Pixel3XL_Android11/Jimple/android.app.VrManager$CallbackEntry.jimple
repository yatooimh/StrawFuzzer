class android.app.VrManager$CallbackEntry extends java.lang.Object
{
    final android.app.VrStateCallback mCallback;
    final java.util.concurrent.Executor mExecutor;
    final android.service.vr.IPersistentVrStateCallbacks mPersistentStateCallback;
    final android.service.vr.IVrStateCallbacks mStateCallback;

    void <init>(android.app.VrStateCallback, java.util.concurrent.Executor)
    {
        android.app.VrManager$CallbackEntry r0;
        android.app.VrStateCallback r1;
        java.util.concurrent.Executor r2;
        android.app.VrManager$CallbackEntry$1 $r3;
        android.app.VrManager$CallbackEntry$2 $r4;

        r0 := @this: android.app.VrManager$CallbackEntry;

        r1 := @parameter0: android.app.VrStateCallback;

        r2 := @parameter1: java.util.concurrent.Executor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new android.app.VrManager$CallbackEntry$1;

        specialinvoke $r3.<android.app.VrManager$CallbackEntry$1: void <init>(android.app.VrManager$CallbackEntry)>(r0);

        r0.<android.app.VrManager$CallbackEntry: android.service.vr.IVrStateCallbacks mStateCallback> = $r3;

        $r4 = new android.app.VrManager$CallbackEntry$2;

        specialinvoke $r4.<android.app.VrManager$CallbackEntry$2: void <init>(android.app.VrManager$CallbackEntry)>(r0);

        r0.<android.app.VrManager$CallbackEntry: android.service.vr.IPersistentVrStateCallbacks mPersistentStateCallback> = $r4;

        r0.<android.app.VrManager$CallbackEntry: android.app.VrStateCallback mCallback> = r1;

        r0.<android.app.VrManager$CallbackEntry: java.util.concurrent.Executor mExecutor> = r2;

        return;
    }
}
