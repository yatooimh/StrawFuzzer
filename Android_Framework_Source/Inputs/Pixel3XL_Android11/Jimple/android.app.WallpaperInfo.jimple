public final class android.app.WallpaperInfo extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    static final java.lang.String TAG;
    final int mAuthorResource;
    final int mContextDescriptionResource;
    final int mContextUriResource;
    final int mDescriptionResource;
    final android.content.pm.ResolveInfo mService;
    final java.lang.String mSettingsActivityName;
    final java.lang.String mSettingsSliceUri;
    final boolean mShowMetadataInPreview;
    final boolean mSupportMultipleDisplays;
    final boolean mSupportsAmbientMode;
    final int mThumbnailResource;

    static void <clinit>()
    {
        android.app.WallpaperInfo$1 $r0;

        <android.app.WallpaperInfo: java.lang.String TAG> = "WallpaperInfo";

        $r0 = new android.app.WallpaperInfo$1;

        specialinvoke $r0.<android.app.WallpaperInfo$1: void <init>()>();

        <android.app.WallpaperInfo: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    public void <init>(android.content.Context, android.content.pm.ResolveInfo) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.app.WallpaperInfo r0;
        android.content.pm.ServiceInfo r1;
        android.util.AttributeSet r2;
        int i0, $i1, $i2, $i3, $i4, $i5;
        android.content.pm.ApplicationInfo $r3;
        java.lang.String $r4, $r5, $r7, $r8, $r12, $r14;
        boolean $z0, $z1, $z2, $z3;
        int[] $r6;
        java.lang.Throwable $r9, r33, r34, r35;
        android.content.pm.PackageManager$NameNotFoundException $r10;
        android.content.Context r15;
        android.content.pm.ResolveInfo r16;
        android.content.pm.PackageManager r17;
        android.content.res.XmlResourceParser r18, r19, r20;
        android.content.res.Resources r21;
        android.content.res.TypedArray r22;
        org.xmlpull.v1.XmlPullParserException r29, r30, r32;
        java.lang.StringBuilder r31;

        r0 := @this: android.app.WallpaperInfo;

        r15 := @parameter0: android.content.Context;

        r16 := @parameter1: android.content.pm.ResolveInfo;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.app.WallpaperInfo: android.content.pm.ResolveInfo mService> = r16;

        r1 = r16.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        r17 = virtualinvoke r15.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r18 = null;

        r19 = null;

     label01:
        r20 = virtualinvoke r1.<android.content.pm.ServiceInfo: android.content.res.XmlResourceParser loadXmlMetaData(android.content.pm.PackageManager,java.lang.String)>(r17, "android.service.wallpaper");

     label02:
        if r20 == null goto label43;

        r19 = r20;

        r18 = r20;

     label03:
        $r3 = r1.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

        r21 = virtualinvoke r17.<android.content.pm.PackageManager: android.content.res.Resources getResourcesForApplication(android.content.pm.ApplicationInfo)>($r3);

     label04:
        r19 = r20;

        r18 = r20;

     label05:
        r2 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>(r20);

     label06:
        r19 = r20;

        r18 = r20;

     label07:
        i0 = interfaceinvoke r20.<android.content.res.XmlResourceParser: int next()>();

     label08:
        if i0 == 1 goto label09;

        if i0 == 2 goto label09;

        goto label06;

     label09:
        r19 = r20;

        r18 = r20;

     label10:
        $r4 = "wallpaper";

        $r5 = interfaceinvoke r20.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label37;

     label11:
        r19 = r20;

        r18 = r20;

     label12:
        $r6 = <com.android.internal.R$styleable: int[] Wallpaper>;

        r22 = virtualinvoke r21.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r2, $r6);

     label13:
        r19 = r20;

        r18 = r20;

     label14:
        $r7 = virtualinvoke r22.<android.content.res.TypedArray: java.lang.String getString(int)>(1);

        r0.<android.app.WallpaperInfo: java.lang.String mSettingsActivityName> = $r7;

     label15:
        r19 = r20;

        r18 = r20;

     label16:
        $i1 = virtualinvoke r22.<android.content.res.TypedArray: int getResourceId(int,int)>(2, -1);

        r0.<android.app.WallpaperInfo: int mThumbnailResource> = $i1;

     label17:
        r19 = r20;

        r18 = r20;

     label18:
        $i2 = virtualinvoke r22.<android.content.res.TypedArray: int getResourceId(int,int)>(3, -1);

        r0.<android.app.WallpaperInfo: int mAuthorResource> = $i2;

     label19:
        r19 = r20;

        r18 = r20;

     label20:
        $i3 = virtualinvoke r22.<android.content.res.TypedArray: int getResourceId(int,int)>(0, -1);

        r0.<android.app.WallpaperInfo: int mDescriptionResource> = $i3;

     label21:
        r19 = r20;

        r18 = r20;

     label22:
        $i4 = virtualinvoke r22.<android.content.res.TypedArray: int getResourceId(int,int)>(4, -1);

        r0.<android.app.WallpaperInfo: int mContextUriResource> = $i4;

     label23:
        r19 = r20;

        r18 = r20;

     label24:
        $i5 = virtualinvoke r22.<android.content.res.TypedArray: int getResourceId(int,int)>(5, -1);

        r0.<android.app.WallpaperInfo: int mContextDescriptionResource> = $i5;

     label25:
        r19 = r20;

        r18 = r20;

     label26:
        $z1 = virtualinvoke r22.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(6, 0);

        r0.<android.app.WallpaperInfo: boolean mShowMetadataInPreview> = $z1;

     label27:
        r19 = r20;

        r18 = r20;

     label28:
        $z2 = virtualinvoke r22.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(7, 0);

        r0.<android.app.WallpaperInfo: boolean mSupportsAmbientMode> = $z2;

     label29:
        r19 = r20;

        r18 = r20;

     label30:
        $r8 = virtualinvoke r22.<android.content.res.TypedArray: java.lang.String getString(int)>(8);

        r0.<android.app.WallpaperInfo: java.lang.String mSettingsSliceUri> = $r8;

     label31:
        r19 = r20;

        r18 = r20;

     label32:
        $z3 = virtualinvoke r22.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(9, 0);

        r0.<android.app.WallpaperInfo: boolean mSupportMultipleDisplays> = $z3;

     label33:
        r19 = r20;

        r18 = r20;

     label34:
        virtualinvoke r22.<android.content.res.TypedArray: void recycle()>();

     label35:
        if r20 == null goto label36;

        interfaceinvoke r20.<android.content.res.XmlResourceParser: void close()>();

     label36:
        return;

     label37:
        r19 = r20;

        r18 = r20;

     label38:
        r29 = new org.xmlpull.v1.XmlPullParserException;

     label39:
        r19 = r20;

        r18 = r20;

     label40:
        specialinvoke r29.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("Meta-data does not start with wallpaper tag");

     label41:
        r19 = r20;

        r18 = r20;

     label42:
        r33 = (java.lang.Throwable) r29;

        throw r33;

     label43:
        r19 = r20;

        r18 = r20;

     label44:
        r30 = new org.xmlpull.v1.XmlPullParserException;

     label45:
        r19 = r20;

        r18 = r20;

     label46:
        specialinvoke r30.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("No android.service.wallpaper meta-data");

     label47:
        r19 = r20;

        r18 = r20;

     label48:
        r34 = (java.lang.Throwable) r30;

        throw r34;

     label49:
        $r9 := @caughtexception;

        goto label64;

     label50:
        $r10 := @caughtexception;

        r19 = r18;

     label51:
        r32 = new org.xmlpull.v1.XmlPullParserException;

     label52:
        r19 = r18;

     label53:
        r31 = new java.lang.StringBuilder;

     label54:
        r19 = r18;

     label55:
        specialinvoke r31.<java.lang.StringBuilder: void <init>()>();

     label56:
        r19 = r18;

     label57:
        virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to create context for: ");

     label58:
        r19 = r18;

     label59:
        $r12 = r1.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

     label60:
        r19 = r18;

     label61:
        $r14 = virtualinvoke r31.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r32.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r14);

     label62:
        r19 = r18;

     label63:
        r35 = (java.lang.Throwable) r32;

        throw r35;

     label64:
        if r19 == null goto label65;

        interfaceinvoke r19.<android.content.res.XmlResourceParser: void close()>();

     label65:
        throw $r9;

        catch android.content.pm.PackageManager$NameNotFoundException from label01 to label02 with label50;
        catch java.lang.Throwable from label01 to label02 with label49;
        catch android.content.pm.PackageManager$NameNotFoundException from label03 to label04 with label50;
        catch java.lang.Throwable from label03 to label04 with label49;
        catch android.content.pm.PackageManager$NameNotFoundException from label05 to label06 with label50;
        catch java.lang.Throwable from label05 to label06 with label49;
        catch android.content.pm.PackageManager$NameNotFoundException from label07 to label08 with label50;
        catch java.lang.Throwable from label07 to label08 with label49;
        catch android.content.pm.PackageManager$NameNotFoundException from label10 to label11 with label50;
        catch java.lang.Throwable from label10 to label11 with label49;
        catch android.content.pm.PackageManager$NameNotFoundException from label12 to label13 with label50;
        catch java.lang.Throwable from label12 to label13 with label49;
        catch android.content.pm.PackageManager$NameNotFoundException from label14 to label15 with label50;
        catch java.lang.Throwable from label14 to label15 with label49;
        catch android.content.pm.PackageManager$NameNotFoundException from label16 to label17 with label50;
        catch java.lang.Throwable from label16 to label17 with label49;
        catch android.content.pm.PackageManager$NameNotFoundException from label18 to label19 with label50;
        catch java.lang.Throwable from label18 to label19 with label49;
        catch android.content.pm.PackageManager$NameNotFoundException from label20 to label21 with label50;
        catch java.lang.Throwable from label20 to label21 with label49;
        catch android.content.pm.PackageManager$NameNotFoundException from label22 to label23 with label50;
        catch java.lang.Throwable from label22 to label23 with label49;
        catch android.content.pm.PackageManager$NameNotFoundException from label24 to label25 with label50;
        catch java.lang.Throwable from label24 to label25 with label49;
        catch android.content.pm.PackageManager$NameNotFoundException from label26 to label27 with label50;
        catch java.lang.Throwable from label26 to label27 with label49;
        catch android.content.pm.PackageManager$NameNotFoundException from label28 to label29 with label50;
        catch java.lang.Throwable from label28 to label29 with label49;
        catch android.content.pm.PackageManager$NameNotFoundException from label30 to label31 with label50;
        catch java.lang.Throwable from label30 to label31 with label49;
        catch android.content.pm.PackageManager$NameNotFoundException from label32 to label33 with label50;
        catch java.lang.Throwable from label32 to label33 with label49;
        catch android.content.pm.PackageManager$NameNotFoundException from label34 to label35 with label50;
        catch java.lang.Throwable from label34 to label35 with label49;
        catch android.content.pm.PackageManager$NameNotFoundException from label38 to label39 with label50;
        catch java.lang.Throwable from label38 to label39 with label49;
        catch android.content.pm.PackageManager$NameNotFoundException from label40 to label41 with label50;
        catch java.lang.Throwable from label40 to label41 with label49;
        catch android.content.pm.PackageManager$NameNotFoundException from label42 to label43 with label50;
        catch java.lang.Throwable from label42 to label43 with label49;
        catch android.content.pm.PackageManager$NameNotFoundException from label44 to label45 with label50;
        catch java.lang.Throwable from label44 to label45 with label49;
        catch android.content.pm.PackageManager$NameNotFoundException from label46 to label47 with label50;
        catch java.lang.Throwable from label46 to label47 with label49;
        catch android.content.pm.PackageManager$NameNotFoundException from label48 to label49 with label50;
        catch java.lang.Throwable from label48 to label49 with label49;
        catch java.lang.Throwable from label51 to label52 with label49;
        catch java.lang.Throwable from label53 to label54 with label49;
        catch java.lang.Throwable from label55 to label56 with label49;
        catch java.lang.Throwable from label57 to label58 with label49;
        catch java.lang.Throwable from label59 to label60 with label49;
        catch java.lang.Throwable from label61 to label62 with label49;
        catch java.lang.Throwable from label63 to label64 with label49;
    }

    void <init>(android.os.Parcel)
    {
        android.app.WallpaperInfo r0;
        android.os.Parcel r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.String $r2, $r3;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.content.pm.ResolveInfo $r6;
        boolean z1, z2, z3;

        r0 := @this: android.app.WallpaperInfo;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.app.WallpaperInfo: java.lang.String mSettingsActivityName> = $r2;

        $i1 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.app.WallpaperInfo: int mThumbnailResource> = $i1;

        $i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.app.WallpaperInfo: int mAuthorResource> = $i2;

        $i3 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.app.WallpaperInfo: int mDescriptionResource> = $i3;

        $i4 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.app.WallpaperInfo: int mContextUriResource> = $i4;

        $i5 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.app.WallpaperInfo: int mContextDescriptionResource> = $i5;

        i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if i0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        r0.<android.app.WallpaperInfo: boolean mShowMetadataInPreview> = z1;

        $i6 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i6 == 0 goto label3;

        z2 = 1;

        goto label4;

     label3:
        z2 = 0;

     label4:
        r0.<android.app.WallpaperInfo: boolean mSupportsAmbientMode> = z2;

        $r3 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.app.WallpaperInfo: java.lang.String mSettingsSliceUri> = $r3;

        $i7 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i7 == 0 goto label5;

        z3 = 1;

        goto label6;

     label5:
        z3 = 0;

     label6:
        r0.<android.app.WallpaperInfo: boolean mSupportMultipleDisplays> = z3;

        $r4 = <android.content.pm.ResolveInfo: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        $r6 = (android.content.pm.ResolveInfo) $r5;

        r0.<android.app.WallpaperInfo: android.content.pm.ResolveInfo mService> = $r6;

        return;
    }

    public int describeContents()
    {
        android.app.WallpaperInfo r0;

        r0 := @this: android.app.WallpaperInfo;

        return 0;
    }

    public void dump(android.util.Printer, java.lang.String)
    {
        android.app.WallpaperInfo r0;
        android.util.Printer r1;
        java.lang.String r2, $r7, $r11, $r15, $r17;
        android.content.pm.ResolveInfo r3;
        java.lang.StringBuilder $r4, $r8, $r12;

        r0 := @this: android.app.WallpaperInfo;

        r1 := @parameter0: android.util.Printer;

        r2 := @parameter1: java.lang.String;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Service:");

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r1.<android.util.Printer: void println(java.lang.String)>($r7);

        r3 = r0.<android.app.WallpaperInfo: android.content.pm.ResolveInfo mService>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<android.content.pm.ResolveInfo: void dump(android.util.Printer,java.lang.String)>(r1, $r11);

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mSettingsActivityName=");

        $r15 = r0.<android.app.WallpaperInfo: java.lang.String mSettingsActivityName>;

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r1.<android.util.Printer: void println(java.lang.String)>($r17);

        return;
    }

    public android.content.ComponentName getComponent()
    {
        android.app.WallpaperInfo r0;
        android.content.ComponentName $r1;
        android.content.pm.ResolveInfo $r2, $r4;
        android.content.pm.ServiceInfo $r3, $r5;
        java.lang.String $r6, $r7;

        r0 := @this: android.app.WallpaperInfo;

        $r1 = new android.content.ComponentName;

        $r2 = r0.<android.app.WallpaperInfo: android.content.pm.ResolveInfo mService>;

        $r3 = $r2.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r7 = $r3.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        $r4 = r0.<android.app.WallpaperInfo: android.content.pm.ResolveInfo mService>;

        $r5 = $r4.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r6 = $r5.<android.content.pm.ServiceInfo: java.lang.String name>;

        specialinvoke $r1.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r7, $r6);

        return $r1;
    }

    public java.lang.String getPackageName()
    {
        android.app.WallpaperInfo r0;
        android.content.pm.ResolveInfo $r1;
        android.content.pm.ServiceInfo $r2;
        java.lang.String $r3;

        r0 := @this: android.app.WallpaperInfo;

        $r1 = r0.<android.app.WallpaperInfo: android.content.pm.ResolveInfo mService>;

        $r2 = $r1.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r3 = $r2.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        return $r3;
    }

    public android.content.pm.ServiceInfo getServiceInfo()
    {
        android.app.WallpaperInfo r0;
        android.content.pm.ResolveInfo $r1;
        android.content.pm.ServiceInfo $r2;

        r0 := @this: android.app.WallpaperInfo;

        $r1 = r0.<android.app.WallpaperInfo: android.content.pm.ResolveInfo mService>;

        $r2 = $r1.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        return $r2;
    }

    public java.lang.String getServiceName()
    {
        android.app.WallpaperInfo r0;
        android.content.pm.ResolveInfo $r1;
        android.content.pm.ServiceInfo $r2;
        java.lang.String $r3;

        r0 := @this: android.app.WallpaperInfo;

        $r1 = r0.<android.app.WallpaperInfo: android.content.pm.ResolveInfo mService>;

        $r2 = $r1.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r3 = $r2.<android.content.pm.ServiceInfo: java.lang.String name>;

        return $r3;
    }

    public java.lang.String getSettingsActivity()
    {
        android.app.WallpaperInfo r0;
        java.lang.String $r1;

        r0 := @this: android.app.WallpaperInfo;

        $r1 = r0.<android.app.WallpaperInfo: java.lang.String mSettingsActivityName>;

        return $r1;
    }

    public android.net.Uri getSettingsSliceUri()
    {
        android.app.WallpaperInfo r0;
        java.lang.String r1;
        android.net.Uri $r2;

        r0 := @this: android.app.WallpaperInfo;

        r1 = r0.<android.app.WallpaperInfo: java.lang.String mSettingsSliceUri>;

        if r1 != null goto label1;

        return null;

     label1:
        $r2 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>(r1);

        return $r2;
    }

    public boolean getShowMetadataInPreview()
    {
        android.app.WallpaperInfo r0;
        boolean $z0;

        r0 := @this: android.app.WallpaperInfo;

        $z0 = r0.<android.app.WallpaperInfo: boolean mShowMetadataInPreview>;

        return $z0;
    }

    public java.lang.CharSequence loadAuthor(android.content.pm.PackageManager) throws android.content.res.Resources$NotFoundException
    {
        android.app.WallpaperInfo r0;
        android.content.pm.PackageManager r1;
        java.lang.String r2, r11;
        int $i0, $i1;
        android.content.res.Resources$NotFoundException $r3;
        android.content.pm.ResolveInfo $r4, $r6, $r8;
        java.lang.CharSequence $r5;
        android.content.pm.ServiceInfo $r7, $r9;
        android.content.pm.ApplicationInfo r10;

        r0 := @this: android.app.WallpaperInfo;

        r1 := @parameter0: android.content.pm.PackageManager;

        $i0 = r0.<android.app.WallpaperInfo: int mAuthorResource>;

        if $i0 <= 0 goto label2;

        $r4 = r0.<android.app.WallpaperInfo: android.content.pm.ResolveInfo mService>;

        r2 = $r4.<android.content.pm.ResolveInfo: java.lang.String resolvePackageName>;

        r10 = null;

        r11 = r2;

        if r2 != null goto label1;

        $r6 = r0.<android.app.WallpaperInfo: android.content.pm.ResolveInfo mService>;

        $r7 = $r6.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        r11 = $r7.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        $r8 = r0.<android.app.WallpaperInfo: android.content.pm.ResolveInfo mService>;

        $r9 = $r8.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        r10 = $r9.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

     label1:
        $i1 = r0.<android.app.WallpaperInfo: int mAuthorResource>;

        $r5 = virtualinvoke r1.<android.content.pm.PackageManager: java.lang.CharSequence getText(java.lang.String,int,android.content.pm.ApplicationInfo)>(r11, $i1, r10);

        return $r5;

     label2:
        $r3 = new android.content.res.Resources$NotFoundException;

        specialinvoke $r3.<android.content.res.Resources$NotFoundException: void <init>()>();

        throw $r3;
    }

    public java.lang.CharSequence loadContextDescription(android.content.pm.PackageManager) throws android.content.res.Resources$NotFoundException
    {
        android.app.WallpaperInfo r0;
        android.content.pm.PackageManager r1;
        java.lang.String r2, $r6, r12;
        int $i0, $i1;
        android.content.res.Resources$NotFoundException $r3;
        android.content.pm.ResolveInfo $r4, $r7, $r9;
        java.lang.CharSequence $r5;
        android.content.pm.ServiceInfo $r8, $r10;
        android.content.pm.ApplicationInfo r11;

        r0 := @this: android.app.WallpaperInfo;

        r1 := @parameter0: android.content.pm.PackageManager;

        $i0 = r0.<android.app.WallpaperInfo: int mContextDescriptionResource>;

        if $i0 <= 0 goto label2;

        $r4 = r0.<android.app.WallpaperInfo: android.content.pm.ResolveInfo mService>;

        r2 = $r4.<android.content.pm.ResolveInfo: java.lang.String resolvePackageName>;

        r11 = null;

        r12 = r2;

        if r2 != null goto label1;

        $r7 = r0.<android.app.WallpaperInfo: android.content.pm.ResolveInfo mService>;

        $r8 = $r7.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        r12 = $r8.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        $r9 = r0.<android.app.WallpaperInfo: android.content.pm.ResolveInfo mService>;

        $r10 = $r9.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        r11 = $r10.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

     label1:
        $i1 = r0.<android.app.WallpaperInfo: int mContextDescriptionResource>;

        $r5 = virtualinvoke r1.<android.content.pm.PackageManager: java.lang.CharSequence getText(java.lang.String,int,android.content.pm.ApplicationInfo)>(r12, $i1, r11);

        $r6 = interfaceinvoke $r5.<java.lang.CharSequence: java.lang.String toString()>();

        return $r6;

     label2:
        $r3 = new android.content.res.Resources$NotFoundException;

        specialinvoke $r3.<android.content.res.Resources$NotFoundException: void <init>()>();

        throw $r3;
    }

    public android.net.Uri loadContextUri(android.content.pm.PackageManager) throws android.content.res.Resources$NotFoundException
    {
        android.app.WallpaperInfo r0;
        java.lang.String r1, r12, r13;
        int $i0, $i1;
        android.content.res.Resources$NotFoundException $r2;
        android.content.pm.ResolveInfo $r3, $r6, $r8;
        java.lang.CharSequence $r4;
        android.net.Uri $r5;
        android.content.pm.ServiceInfo $r7, $r9;
        android.content.pm.PackageManager r10;
        android.content.pm.ApplicationInfo r11;

        r0 := @this: android.app.WallpaperInfo;

        r10 := @parameter0: android.content.pm.PackageManager;

        $i0 = r0.<android.app.WallpaperInfo: int mContextUriResource>;

        if $i0 <= 0 goto label3;

        $r3 = r0.<android.app.WallpaperInfo: android.content.pm.ResolveInfo mService>;

        r1 = $r3.<android.content.pm.ResolveInfo: java.lang.String resolvePackageName>;

        r11 = null;

        r12 = r1;

        if r1 != null goto label1;

        $r6 = r0.<android.app.WallpaperInfo: android.content.pm.ResolveInfo mService>;

        $r7 = $r6.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        r12 = $r7.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        $r8 = r0.<android.app.WallpaperInfo: android.content.pm.ResolveInfo mService>;

        $r9 = $r8.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        r11 = $r9.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

     label1:
        $i1 = r0.<android.app.WallpaperInfo: int mContextUriResource>;

        $r4 = virtualinvoke r10.<android.content.pm.PackageManager: java.lang.CharSequence getText(java.lang.String,int,android.content.pm.ApplicationInfo)>(r12, $i1, r11);

        r13 = interfaceinvoke $r4.<java.lang.CharSequence: java.lang.String toString()>();

        if r13 != null goto label2;

        return null;

     label2:
        $r5 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>(r13);

        return $r5;

     label3:
        $r2 = new android.content.res.Resources$NotFoundException;

        specialinvoke $r2.<android.content.res.Resources$NotFoundException: void <init>()>();

        throw $r2;
    }

    public java.lang.CharSequence loadDescription(android.content.pm.PackageManager) throws android.content.res.Resources$NotFoundException
    {
        android.app.WallpaperInfo r0;
        android.content.pm.PackageManager r1;
        java.lang.String r2, r19;
        int i0, $i1, $i2;
        android.content.pm.ResolveInfo $r3, $r4, $r7, $r11, $r14, $r16;
        android.content.pm.ServiceInfo $r5, $r8, $r12, $r15, $r17;
        android.content.res.Resources$NotFoundException $r6;
        android.content.pm.ApplicationInfo $r9, r18;
        java.lang.CharSequence $r10, $r13;

        r0 := @this: android.app.WallpaperInfo;

        r1 := @parameter0: android.content.pm.PackageManager;

        $r3 = r0.<android.app.WallpaperInfo: android.content.pm.ResolveInfo mService>;

        r2 = $r3.<android.content.pm.ResolveInfo: java.lang.String resolvePackageName>;

        r18 = null;

        r19 = r2;

        if r2 != null goto label1;

        $r14 = r0.<android.app.WallpaperInfo: android.content.pm.ResolveInfo mService>;

        $r15 = $r14.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        r19 = $r15.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        $r16 = r0.<android.app.WallpaperInfo: android.content.pm.ResolveInfo mService>;

        $r17 = $r16.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        r18 = $r17.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

     label1:
        $r4 = r0.<android.app.WallpaperInfo: android.content.pm.ResolveInfo mService>;

        $r5 = $r4.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $i1 = $r5.<android.content.pm.ServiceInfo: int descriptionRes>;

        if $i1 == 0 goto label2;

        $r11 = r0.<android.app.WallpaperInfo: android.content.pm.ResolveInfo mService>;

        $r12 = $r11.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $i2 = $r12.<android.content.pm.ServiceInfo: int descriptionRes>;

        $r13 = virtualinvoke r1.<android.content.pm.PackageManager: java.lang.CharSequence getText(java.lang.String,int,android.content.pm.ApplicationInfo)>(r19, $i2, r18);

        return $r13;

     label2:
        i0 = r0.<android.app.WallpaperInfo: int mDescriptionResource>;

        if i0 <= 0 goto label3;

        $r7 = r0.<android.app.WallpaperInfo: android.content.pm.ResolveInfo mService>;

        $r8 = $r7.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r9 = $r8.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r10 = virtualinvoke r1.<android.content.pm.PackageManager: java.lang.CharSequence getText(java.lang.String,int,android.content.pm.ApplicationInfo)>(r19, i0, $r9);

        return $r10;

     label3:
        $r6 = new android.content.res.Resources$NotFoundException;

        specialinvoke $r6.<android.content.res.Resources$NotFoundException: void <init>()>();

        throw $r6;
    }

    public android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)
    {
        android.app.WallpaperInfo r0;
        android.content.pm.PackageManager r1;
        android.content.pm.ResolveInfo $r2;
        android.graphics.drawable.Drawable $r3;

        r0 := @this: android.app.WallpaperInfo;

        r1 := @parameter0: android.content.pm.PackageManager;

        $r2 = r0.<android.app.WallpaperInfo: android.content.pm.ResolveInfo mService>;

        $r3 = virtualinvoke $r2.<android.content.pm.ResolveInfo: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)>(r1);

        return $r3;
    }

    public java.lang.CharSequence loadLabel(android.content.pm.PackageManager)
    {
        android.app.WallpaperInfo r0;
        android.content.pm.PackageManager r1;
        android.content.pm.ResolveInfo $r2;
        java.lang.CharSequence $r3;

        r0 := @this: android.app.WallpaperInfo;

        r1 := @parameter0: android.content.pm.PackageManager;

        $r2 = r0.<android.app.WallpaperInfo: android.content.pm.ResolveInfo mService>;

        $r3 = virtualinvoke $r2.<android.content.pm.ResolveInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>(r1);

        return $r3;
    }

    public android.graphics.drawable.Drawable loadThumbnail(android.content.pm.PackageManager)
    {
        android.app.WallpaperInfo r0;
        android.content.pm.PackageManager r1;
        int $i0, $i1;
        android.content.pm.ResolveInfo $r2, $r4;
        android.content.pm.ServiceInfo $r3, $r5;
        android.content.pm.ApplicationInfo $r6;
        java.lang.String $r7;
        android.graphics.drawable.Drawable $r8;

        r0 := @this: android.app.WallpaperInfo;

        r1 := @parameter0: android.content.pm.PackageManager;

        $i0 = r0.<android.app.WallpaperInfo: int mThumbnailResource>;

        if $i0 >= 0 goto label1;

        return null;

     label1:
        $r2 = r0.<android.app.WallpaperInfo: android.content.pm.ResolveInfo mService>;

        $r3 = $r2.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r7 = $r3.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        $i1 = r0.<android.app.WallpaperInfo: int mThumbnailResource>;

        $r4 = r0.<android.app.WallpaperInfo: android.content.pm.ResolveInfo mService>;

        $r5 = $r4.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r6 = $r5.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r8 = virtualinvoke r1.<android.content.pm.PackageManager: android.graphics.drawable.Drawable getDrawable(java.lang.String,int,android.content.pm.ApplicationInfo)>($r7, $i1, $r6);

        return $r8;
    }

    public boolean supportsAmbientMode()
    {
        android.app.WallpaperInfo r0;
        boolean $z0;

        r0 := @this: android.app.WallpaperInfo;

        $z0 = r0.<android.app.WallpaperInfo: boolean mSupportsAmbientMode>;

        return $z0;
    }

    public boolean supportsMultipleDisplays()
    {
        android.app.WallpaperInfo r0;
        boolean $z0;

        r0 := @this: android.app.WallpaperInfo;

        $z0 = r0.<android.app.WallpaperInfo: boolean mSupportMultipleDisplays>;

        return $z0;
    }

    public java.lang.String toString()
    {
        android.app.WallpaperInfo r0;
        java.lang.StringBuilder $r2;
        android.content.pm.ResolveInfo $r4;
        android.content.pm.ServiceInfo $r5;
        java.lang.String $r6, $r9, $r12;

        r0 := @this: android.app.WallpaperInfo;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WallpaperInfo{");

        $r4 = r0.<android.app.WallpaperInfo: android.content.pm.ResolveInfo mService>;

        $r5 = $r4.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r6 = $r5.<android.content.pm.ServiceInfo: java.lang.String name>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", settings: ");

        $r9 = r0.<android.app.WallpaperInfo: java.lang.String mSettingsActivityName>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r12 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.app.WallpaperInfo r0;
        android.os.Parcel r1;
        int i0, $i1, $i2, $i3, $i4, $i5, i6, i7, i8;
        java.lang.String $r2, $r3;
        boolean $z0, $z1, $z2;
        android.content.pm.ResolveInfo $r4;

        r0 := @this: android.app.WallpaperInfo;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $r2 = r0.<android.app.WallpaperInfo: java.lang.String mSettingsActivityName>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r2);

        $i1 = r0.<android.app.WallpaperInfo: int mThumbnailResource>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $i2 = r0.<android.app.WallpaperInfo: int mAuthorResource>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i2);

        $i3 = r0.<android.app.WallpaperInfo: int mDescriptionResource>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i3);

        $i4 = r0.<android.app.WallpaperInfo: int mContextUriResource>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i4);

        $i5 = r0.<android.app.WallpaperInfo: int mContextDescriptionResource>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i5);

        $z0 = r0.<android.app.WallpaperInfo: boolean mShowMetadataInPreview>;

        i6 = (int) $z0;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i6);

        $z1 = r0.<android.app.WallpaperInfo: boolean mSupportsAmbientMode>;

        i7 = (int) $z1;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i7);

        $r3 = r0.<android.app.WallpaperInfo: java.lang.String mSettingsSliceUri>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r3);

        $z2 = r0.<android.app.WallpaperInfo: boolean mSupportMultipleDisplays>;

        i8 = (int) $z2;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i8);

        $r4 = r0.<android.app.WallpaperInfo: android.content.pm.ResolveInfo mService>;

        virtualinvoke $r4.<android.content.pm.ResolveInfo: void writeToParcel(android.os.Parcel,int)>(r1, i0);

        return;
    }
}
