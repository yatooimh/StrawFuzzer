public class android.app.WindowContext extends android.content.ContextWrapper
{
    private boolean mOwnsToken;
    private final android.app.WindowTokenClient mToken;
    private final android.view.WindowManagerImpl mWindowManager;
    private final android.view.IWindowManager mWms;

    public void <init>(android.content.Context, int, android.os.Bundle)
    {
        android.app.WindowContext r0;
        android.os.Bundle r1;
        android.view.IWindowManager $r3, $r8;
        android.app.WindowTokenClient $r4, $r5, $r7, $r9;
        android.view.WindowManagerImpl $r6;
        int $i0, i1, i2;
        java.lang.String $r10;
        java.lang.UnsupportedOperationException $r11;
        android.os.RemoteException $r12;
        java.lang.RuntimeException $r13;
        android.content.Context r14;
        android.app.ContextImpl r15;
        boolean z0;

        r0 := @this: android.app.WindowContext;

        r14 := @parameter0: android.content.Context;

        i1 := @parameter1: int;

        r1 := @parameter2: android.os.Bundle;

        specialinvoke r0.<android.content.ContextWrapper: void <init>(android.content.Context)>(null);

        $r3 = staticinvoke <android.view.WindowManagerGlobal: android.view.IWindowManager getWindowManagerService()>();

        r0.<android.app.WindowContext: android.view.IWindowManager mWms> = $r3;

        $r4 = new android.app.WindowTokenClient;

        specialinvoke $r4.<android.app.WindowTokenClient: void <init>()>();

        r0.<android.app.WindowContext: android.app.WindowTokenClient mToken> = $r4;

        r15 = staticinvoke <android.app.WindowContext: android.app.ContextImpl createBaseWindowContext(android.content.Context,android.os.IBinder)>(r14, $r4);

        virtualinvoke r0.<android.app.WindowContext: void attachBaseContext(android.content.Context)>(r15);

        virtualinvoke r15.<android.app.ContextImpl: void setOuterContext(android.content.Context)>(r0);

        $r5 = r0.<android.app.WindowContext: android.app.WindowTokenClient mToken>;

        virtualinvoke $r5.<android.app.WindowTokenClient: void attachContext(android.app.WindowContext)>(r0);

        $r6 = new android.view.WindowManagerImpl;

        specialinvoke $r6.<android.view.WindowManagerImpl: void <init>(android.content.Context)>(r0);

        r0.<android.app.WindowContext: android.view.WindowManagerImpl mWindowManager> = $r6;

        $r7 = r0.<android.app.WindowContext: android.app.WindowTokenClient mToken>;

        virtualinvoke $r6.<android.view.WindowManagerImpl: void setDefaultToken(android.os.IBinder)>($r7);

        z0 = 0;

     label1:
        $r8 = r0.<android.app.WindowContext: android.view.IWindowManager mWms>;

        $r9 = r0.<android.app.WindowContext: android.app.WindowTokenClient mToken>;

        $i0 = virtualinvoke r0.<android.app.WindowContext: int getDisplayId()>();

        $r10 = virtualinvoke r0.<android.app.WindowContext: java.lang.String getPackageName()>();

        i2 = interfaceinvoke $r8.<android.view.IWindowManager: int addWindowTokenWithOptions(android.os.IBinder,int,int,android.os.Bundle,java.lang.String)>($r9, i1, $i0, r1, $r10);

     label2:
        if i2 == -12 goto label4;

        if i2 != 0 goto label3;

        z0 = 1;

     label3:
        r0.<android.app.WindowContext: boolean mOwnsToken> = z0;

        staticinvoke <java.lang.ref.Reference: void reachabilityFence(java.lang.Object)>(r0);

        return;

     label4:
        $r11 = new java.lang.UnsupportedOperationException;

        specialinvoke $r11.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("createWindowContext failed! Too many unused window contexts. Please see Context#createWindowContext documentation for detail.");

        throw $r11;

     label5:
        $r12 := @caughtexception;

        r0.<android.app.WindowContext: boolean mOwnsToken> = 0;

        $r13 = virtualinvoke $r12.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r13;

        catch android.os.RemoteException from label1 to label2 with label5;
    }

    private static android.app.ContextImpl createBaseWindowContext(android.content.Context, android.os.IBinder)
    {
        android.content.Context r0;
        android.os.IBinder r1;
        android.app.ContextImpl $r2, $r3;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.os.IBinder;

        $r2 = staticinvoke <android.app.ContextImpl: android.app.ContextImpl getImpl(android.content.Context)>(r0);

        $r3 = virtualinvoke $r2.<android.app.ContextImpl: android.app.ContextImpl createBaseWindowContext(android.os.IBinder)>(r1);

        return $r3;
    }

    void destroy()
    {
        android.app.WindowContext r0;
        android.content.Context $r1;
        android.app.ContextImpl $r2;
        java.lang.Class $r3;
        java.lang.String $r4;

        r0 := @this: android.app.WindowContext;

        $r1 = virtualinvoke r0.<android.app.WindowContext: android.content.Context getBaseContext()>();

        $r2 = (android.app.ContextImpl) $r1;

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r2.<android.app.ContextImpl: void scheduleFinalCleanup(java.lang.String,java.lang.String)>($r4, "WindowContext");

        staticinvoke <java.lang.ref.Reference: void reachabilityFence(java.lang.Object)>(r0);

        return;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.app.WindowContext r0;

        r0 := @this: android.app.WindowContext;

        virtualinvoke r0.<android.app.WindowContext: void release()>();

        specialinvoke r0.<java.lang.Object: void finalize()>();

        return;
    }

    public java.lang.Object getSystemService(java.lang.String)
    {
        android.app.WindowContext r0;
        java.lang.String r1, $r2;
        boolean $z0;
        java.lang.Object $r3;
        android.view.WindowManagerImpl $r4;

        r0 := @this: android.app.WindowContext;

        r1 := @parameter0: java.lang.String;

        $r2 = "window";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r4 = r0.<android.app.WindowContext: android.view.WindowManagerImpl mWindowManager>;

        return $r4;

     label1:
        $r3 = specialinvoke r0.<android.content.ContextWrapper: java.lang.Object getSystemService(java.lang.String)>(r1);

        return $r3;
    }

    public void release()
    {
        android.app.WindowContext r0;
        boolean $z0;
        android.view.IWindowManager $r2;
        android.app.WindowTokenClient $r3;
        int $i0;
        android.os.RemoteException $r4;
        java.lang.RuntimeException $r5;

        r0 := @this: android.app.WindowContext;

        $z0 = r0.<android.app.WindowContext: boolean mOwnsToken>;

        if $z0 == 0 goto label4;

     label1:
        $r2 = r0.<android.app.WindowContext: android.view.IWindowManager mWms>;

        $r3 = r0.<android.app.WindowContext: android.app.WindowTokenClient mToken>;

        $i0 = virtualinvoke r0.<android.app.WindowContext: int getDisplayId()>();

        interfaceinvoke $r2.<android.view.IWindowManager: void removeWindowToken(android.os.IBinder,int)>($r3, $i0);

        r0.<android.app.WindowContext: boolean mOwnsToken> = 0;

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = virtualinvoke $r4.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r5;

     label4:
        virtualinvoke r0.<android.app.WindowContext: void destroy()>();

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }
}
