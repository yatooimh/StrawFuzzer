public final class android.app.admin.DeviceAdminInfo extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    static final java.lang.String TAG;
    public static final int USES_ENCRYPTED_STORAGE;
    public static final int USES_POLICY_DEVICE_OWNER;
    public static final int USES_POLICY_DISABLE_CAMERA;
    public static final int USES_POLICY_DISABLE_KEYGUARD_FEATURES;
    public static final int USES_POLICY_EXPIRE_PASSWORD;
    public static final int USES_POLICY_FORCE_LOCK;
    public static final int USES_POLICY_LIMIT_PASSWORD;
    public static final int USES_POLICY_ORGANIZATION_OWNED_PROFILE_OWNER;
    public static final int USES_POLICY_PROFILE_OWNER;
    public static final int USES_POLICY_RESET_PASSWORD;
    public static final int USES_POLICY_SETS_GLOBAL_PROXY;
    public static final int USES_POLICY_WATCH_LOGIN;
    public static final int USES_POLICY_WIPE_DATA;
    static java.util.HashMap sKnownPolicies;
    static java.util.ArrayList sPoliciesDisplayOrder;
    static android.util.SparseArray sRevKnownPolicies;
    final android.content.pm.ActivityInfo mActivityInfo;
    boolean mSupportsTransferOwnership;
    int mUsesPolicies;
    boolean mVisible;

    static void <clinit>()
    {
        android.app.admin.DeviceAdminInfo$PolicyInfo r0, $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r20, $r22;
        java.util.ArrayList $r1, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r23, $r24, $r26;
        java.util.HashMap $r2, $r29;
        android.util.SparseArray $r3, $r28;
        int $i0, $i1, $i2, i3;
        android.app.admin.DeviceAdminInfo$1 $r25;
        java.lang.Object $r27;
        java.lang.String $r30;
        java.lang.Integer $r31;

        <android.app.admin.DeviceAdminInfo: int USES_POLICY_WIPE_DATA> = 4;

        <android.app.admin.DeviceAdminInfo: int USES_POLICY_WATCH_LOGIN> = 1;

        <android.app.admin.DeviceAdminInfo: int USES_POLICY_SETS_GLOBAL_PROXY> = 5;

        <android.app.admin.DeviceAdminInfo: int USES_POLICY_RESET_PASSWORD> = 2;

        <android.app.admin.DeviceAdminInfo: int USES_POLICY_PROFILE_OWNER> = -1;

        <android.app.admin.DeviceAdminInfo: int USES_POLICY_ORGANIZATION_OWNED_PROFILE_OWNER> = -3;

        <android.app.admin.DeviceAdminInfo: int USES_POLICY_LIMIT_PASSWORD> = 0;

        <android.app.admin.DeviceAdminInfo: int USES_POLICY_FORCE_LOCK> = 3;

        <android.app.admin.DeviceAdminInfo: int USES_POLICY_EXPIRE_PASSWORD> = 6;

        <android.app.admin.DeviceAdminInfo: int USES_POLICY_DISABLE_KEYGUARD_FEATURES> = 9;

        <android.app.admin.DeviceAdminInfo: int USES_POLICY_DISABLE_CAMERA> = 8;

        <android.app.admin.DeviceAdminInfo: int USES_POLICY_DEVICE_OWNER> = -2;

        <android.app.admin.DeviceAdminInfo: int USES_ENCRYPTED_STORAGE> = 7;

        <android.app.admin.DeviceAdminInfo: java.lang.String TAG> = "DeviceAdminInfo";

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        <android.app.admin.DeviceAdminInfo: java.util.ArrayList sPoliciesDisplayOrder> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        <android.app.admin.DeviceAdminInfo: java.util.HashMap sKnownPolicies> = $r2;

        $r3 = new android.util.SparseArray;

        specialinvoke $r3.<android.util.SparseArray: void <init>()>();

        <android.app.admin.DeviceAdminInfo: android.util.SparseArray sRevKnownPolicies> = $r3;

        $r5 = <android.app.admin.DeviceAdminInfo: java.util.ArrayList sPoliciesDisplayOrder>;

        $r4 = new android.app.admin.DeviceAdminInfo$PolicyInfo;

        specialinvoke $r4.<android.app.admin.DeviceAdminInfo$PolicyInfo: void <init>(int,java.lang.String,int,int,int,int)>(4, "wipe-data", 17041072, 17041061, 17041073, 17041062);

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        $r7 = <android.app.admin.DeviceAdminInfo: java.util.ArrayList sPoliciesDisplayOrder>;

        $r6 = new android.app.admin.DeviceAdminInfo$PolicyInfo;

        specialinvoke $r6.<android.app.admin.DeviceAdminInfo$PolicyInfo: void <init>(int,java.lang.String,int,int)>(2, "reset-password", 17041069, 17041057);

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        $r9 = <android.app.admin.DeviceAdminInfo: java.util.ArrayList sPoliciesDisplayOrder>;

        $r8 = new android.app.admin.DeviceAdminInfo$PolicyInfo;

        specialinvoke $r8.<android.app.admin.DeviceAdminInfo$PolicyInfo: void <init>(int,java.lang.String,int,int)>(0, "limit-password", 17041068, 17041056);

        virtualinvoke $r9.<java.util.ArrayList: boolean add(java.lang.Object)>($r8);

        $r11 = <android.app.admin.DeviceAdminInfo: java.util.ArrayList sPoliciesDisplayOrder>;

        $r10 = new android.app.admin.DeviceAdminInfo$PolicyInfo;

        specialinvoke $r10.<android.app.admin.DeviceAdminInfo$PolicyInfo: void <init>(int,java.lang.String,int,int,int,int)>(1, "watch-login", 17041071, 17041059, 17041071, 17041060);

        virtualinvoke $r11.<java.util.ArrayList: boolean add(java.lang.Object)>($r10);

        $r13 = <android.app.admin.DeviceAdminInfo: java.util.ArrayList sPoliciesDisplayOrder>;

        $r12 = new android.app.admin.DeviceAdminInfo$PolicyInfo;

        specialinvoke $r12.<android.app.admin.DeviceAdminInfo$PolicyInfo: void <init>(int,java.lang.String,int,int)>(3, "force-lock", 17041067, 17041055);

        virtualinvoke $r13.<java.util.ArrayList: boolean add(java.lang.Object)>($r12);

        $r15 = <android.app.admin.DeviceAdminInfo: java.util.ArrayList sPoliciesDisplayOrder>;

        $r14 = new android.app.admin.DeviceAdminInfo$PolicyInfo;

        specialinvoke $r14.<android.app.admin.DeviceAdminInfo$PolicyInfo: void <init>(int,java.lang.String,int,int)>(5, "set-global-proxy", 17041070, 17041058);

        virtualinvoke $r15.<java.util.ArrayList: boolean add(java.lang.Object)>($r14);

        $r17 = <android.app.admin.DeviceAdminInfo: java.util.ArrayList sPoliciesDisplayOrder>;

        $r16 = new android.app.admin.DeviceAdminInfo$PolicyInfo;

        specialinvoke $r16.<android.app.admin.DeviceAdminInfo$PolicyInfo: void <init>(int,java.lang.String,int,int)>(6, "expire-password", 17041066, 17041054);

        virtualinvoke $r17.<java.util.ArrayList: boolean add(java.lang.Object)>($r16);

        $r19 = <android.app.admin.DeviceAdminInfo: java.util.ArrayList sPoliciesDisplayOrder>;

        $r18 = new android.app.admin.DeviceAdminInfo$PolicyInfo;

        specialinvoke $r18.<android.app.admin.DeviceAdminInfo$PolicyInfo: void <init>(int,java.lang.String,int,int)>(7, "encrypted-storage", 17041065, 17041053);

        virtualinvoke $r19.<java.util.ArrayList: boolean add(java.lang.Object)>($r18);

        $r21 = <android.app.admin.DeviceAdminInfo: java.util.ArrayList sPoliciesDisplayOrder>;

        $r20 = new android.app.admin.DeviceAdminInfo$PolicyInfo;

        specialinvoke $r20.<android.app.admin.DeviceAdminInfo$PolicyInfo: void <init>(int,java.lang.String,int,int)>(8, "disable-camera", 17041063, 17041051);

        virtualinvoke $r21.<java.util.ArrayList: boolean add(java.lang.Object)>($r20);

        $r23 = <android.app.admin.DeviceAdminInfo: java.util.ArrayList sPoliciesDisplayOrder>;

        $r22 = new android.app.admin.DeviceAdminInfo$PolicyInfo;

        specialinvoke $r22.<android.app.admin.DeviceAdminInfo$PolicyInfo: void <init>(int,java.lang.String,int,int)>(9, "disable-keyguard-features", 17041064, 17041052);

        virtualinvoke $r23.<java.util.ArrayList: boolean add(java.lang.Object)>($r22);

        i3 = 0;

     label1:
        $r24 = <android.app.admin.DeviceAdminInfo: java.util.ArrayList sPoliciesDisplayOrder>;

        $i0 = virtualinvoke $r24.<java.util.ArrayList: int size()>();

        if i3 >= $i0 goto label2;

        $r26 = <android.app.admin.DeviceAdminInfo: java.util.ArrayList sPoliciesDisplayOrder>;

        $r27 = virtualinvoke $r26.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r0 = (android.app.admin.DeviceAdminInfo$PolicyInfo) $r27;

        $r28 = <android.app.admin.DeviceAdminInfo: android.util.SparseArray sRevKnownPolicies>;

        $i1 = r0.<android.app.admin.DeviceAdminInfo$PolicyInfo: int ident>;

        virtualinvoke $r28.<android.util.SparseArray: void put(int,java.lang.Object)>($i1, r0);

        $r29 = <android.app.admin.DeviceAdminInfo: java.util.HashMap sKnownPolicies>;

        $r30 = r0.<android.app.admin.DeviceAdminInfo$PolicyInfo: java.lang.String tag>;

        $i2 = r0.<android.app.admin.DeviceAdminInfo$PolicyInfo: int ident>;

        $r31 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        virtualinvoke $r29.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r30, $r31);

        i3 = i3 + 1;

        goto label1;

     label2:
        $r25 = new android.app.admin.DeviceAdminInfo$1;

        specialinvoke $r25.<android.app.admin.DeviceAdminInfo$1: void <init>()>();

        <android.app.admin.DeviceAdminInfo: android.os.Parcelable$Creator CREATOR> = $r25;

        return;
    }

    public void <init>(android.content.Context, android.content.pm.ActivityInfo) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.app.admin.DeviceAdminInfo r0;
        int i0, $i1, $i3, $i4, $i5, $i6, $i7, $i8, i9, i11, i12, i13;
        android.content.pm.ActivityInfo $r1, $r2, $r18, r23;
        android.content.pm.ApplicationInfo $r3;
        java.lang.String $r4, $r5, $r14, $r19, $r21, r31, r32;
        boolean $z0, $z1, $z2, $z3;
        int[] $r6;
        java.util.HashMap $r7;
        java.lang.Object $r8;
        android.content.ComponentName $r10;
        java.lang.Throwable $r15, r48, r49, r50, r51;
        android.content.pm.PackageManager$NameNotFoundException $r16;
        android.content.Context r22;
        android.content.pm.PackageManager r24;
        android.content.res.XmlResourceParser r25, r26, r27;
        android.content.res.Resources r28;
        android.util.AttributeSet r29;
        android.content.res.TypedArray r30;
        java.lang.Integer r33;
        java.lang.StringBuilder r42, r46;
        org.xmlpull.v1.XmlPullParserException r43, r44, r45, r47;

        r0 := @this: android.app.admin.DeviceAdminInfo;

        r22 := @parameter0: android.content.Context;

        r23 := @parameter1: android.content.pm.ActivityInfo;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.app.admin.DeviceAdminInfo: android.content.pm.ActivityInfo mActivityInfo> = r23;

        r24 = virtualinvoke r22.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r25 = null;

        r26 = null;

     label001:
        $r1 = r0.<android.app.admin.DeviceAdminInfo: android.content.pm.ActivityInfo mActivityInfo>;

        r27 = virtualinvoke $r1.<android.content.pm.ActivityInfo: android.content.res.XmlResourceParser loadXmlMetaData(android.content.pm.PackageManager,java.lang.String)>(r24, "android.app.device_admin");

     label002:
        if r27 == null goto label084;

        r26 = r27;

        r25 = r27;

     label003:
        $r2 = r0.<android.app.admin.DeviceAdminInfo: android.content.pm.ActivityInfo mActivityInfo>;

        $r3 = $r2.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        r28 = virtualinvoke r24.<android.content.pm.PackageManager: android.content.res.Resources getResourcesForApplication(android.content.pm.ApplicationInfo)>($r3);

     label004:
        r26 = r27;

        r25 = r27;

     label005:
        r29 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>(r27);

     label006:
        r26 = r27;

        r25 = r27;

     label007:
        i9 = interfaceinvoke r27.<android.content.res.XmlResourceParser: int next()>();

     label008:
        if i9 == 1 goto label009;

        if i9 == 2 goto label009;

        goto label006;

     label009:
        r26 = r27;

        r25 = r27;

     label010:
        $r4 = "device-admin";

        $r5 = interfaceinvoke r27.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label078;

     label011:
        r26 = r27;

        r25 = r27;

     label012:
        $r6 = <com.android.internal.R$styleable: int[] DeviceAdmin>;

        r30 = virtualinvoke r28.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r29, $r6);

     label013:
        r26 = r27;

        r25 = r27;

     label014:
        $z1 = virtualinvoke r30.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(0, 1);

        r0.<android.app.admin.DeviceAdminInfo: boolean mVisible> = $z1;

     label015:
        r26 = r27;

        r25 = r27;

     label016:
        virtualinvoke r30.<android.content.res.TypedArray: void recycle()>();

     label017:
        r26 = r27;

        r25 = r27;

     label018:
        i11 = interfaceinvoke r27.<android.content.res.XmlResourceParser: int getDepth()>();

     label019:
        r26 = r27;

        r25 = r27;

     label020:
        i12 = interfaceinvoke r27.<android.content.res.XmlResourceParser: int next()>();

     label021:
        if i12 == 1 goto label076;

        if i12 != 3 goto label023;

        r26 = r27;

        r25 = r27;

     label022:
        $i8 = interfaceinvoke r27.<android.content.res.XmlResourceParser: int getDepth()>();

        if $i8 <= i11 goto label076;

     label023:
        if i12 == 3 goto label075;

        if i12 != 4 goto label024;

        goto label075;

     label024:
        r26 = r27;

        r25 = r27;

     label025:
        r31 = interfaceinvoke r27.<android.content.res.XmlResourceParser: java.lang.String getName()>();

     label026:
        r26 = r27;

        r25 = r27;

     label027:
        $z2 = virtualinvoke r31.<java.lang.String: boolean equals(java.lang.Object)>("uses-policies");

        if $z2 == 0 goto label061;

     label028:
        r26 = r27;

        r25 = r27;

     label029:
        i13 = interfaceinvoke r27.<android.content.res.XmlResourceParser: int getDepth()>();

     label030:
        r26 = r27;

        r25 = r27;

     label031:
        i0 = interfaceinvoke r27.<android.content.res.XmlResourceParser: int next()>();

     label032:
        if i0 == 1 goto label060;

        if i0 != 3 goto label036;

        r26 = r27;

        r25 = r27;

     label033:
        $i7 = interfaceinvoke r27.<android.content.res.XmlResourceParser: int getDepth()>();

        if $i7 <= i13 goto label035;

     label034:
        goto label036;

     label035:
        goto label060;

     label036:
        if i0 == 3 goto label059;

        if i0 != 4 goto label037;

        goto label059;

     label037:
        r26 = r27;

        r25 = r27;

     label038:
        r32 = interfaceinvoke r27.<android.content.res.XmlResourceParser: java.lang.String getName()>();

     label039:
        r26 = r27;

        r25 = r27;

     label040:
        $r7 = <android.app.admin.DeviceAdminInfo: java.util.HashMap sKnownPolicies>;

        $r8 = virtualinvoke $r7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r32);

        r33 = (java.lang.Integer) $r8;

     label041:
        if r33 == null goto label044;

        r26 = r27;

        r25 = r27;

     label042:
        $i3 = r0.<android.app.admin.DeviceAdminInfo: int mUsesPolicies>;

        $i4 = virtualinvoke r33.<java.lang.Integer: int intValue()>();

        $i5 = 1 << $i4;

        $i6 = $i3 | $i5;

        r0.<android.app.admin.DeviceAdminInfo: int mUsesPolicies> = $i6;

     label043:
        goto label058;

     label044:
        r26 = r27;

        r25 = r27;

     label045:
        r42 = new java.lang.StringBuilder;

     label046:
        r26 = r27;

        r25 = r27;

     label047:
        specialinvoke r42.<java.lang.StringBuilder: void <init>()>();

     label048:
        r26 = r27;

        r25 = r27;

     label049:
        virtualinvoke r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown tag under uses-policies of ");

     label050:
        r26 = r27;

        r25 = r27;

     label051:
        $r10 = virtualinvoke r0.<android.app.admin.DeviceAdminInfo: android.content.ComponentName getComponent()>();

        virtualinvoke r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

     label052:
        r26 = r27;

        r25 = r27;

     label053:
        virtualinvoke r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

     label054:
        r26 = r27;

        r25 = r27;

     label055:
        virtualinvoke r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r32);

     label056:
        r26 = r27;

        r25 = r27;

     label057:
        $r14 = virtualinvoke r42.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("DeviceAdminInfo", $r14);

     label058:
        goto label059;

     label059:
        goto label030;

     label060:
        goto label074;

     label061:
        r26 = r27;

        r25 = r27;

     label062:
        $z3 = virtualinvoke r31.<java.lang.String: boolean equals(java.lang.Object)>("support-transfer-ownership");

        if $z3 == 0 goto label074;

     label063:
        r26 = r27;

        r25 = r27;

     label064:
        $i1 = interfaceinvoke r27.<android.content.res.XmlResourceParser: int next()>();

        if $i1 != 3 goto label068;

     label065:
        r26 = r27;

        r25 = r27;

     label066:
        r0.<android.app.admin.DeviceAdminInfo: boolean mSupportsTransferOwnership> = 1;

     label067:
        goto label074;

     label068:
        r26 = r27;

        r25 = r27;

     label069:
        r43 = new org.xmlpull.v1.XmlPullParserException;

     label070:
        r26 = r27;

        r25 = r27;

     label071:
        specialinvoke r43.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("support-transfer-ownership tag must be empty.");

     label072:
        r26 = r27;

        r25 = r27;

     label073:
        r48 = (java.lang.Throwable) r43;

        throw r48;

     label074:
        goto label019;

     label075:
        goto label019;

     label076:
        if r27 == null goto label077;

        interfaceinvoke r27.<android.content.res.XmlResourceParser: void close()>();

     label077:
        return;

     label078:
        r26 = r27;

        r25 = r27;

     label079:
        r44 = new org.xmlpull.v1.XmlPullParserException;

     label080:
        r26 = r27;

        r25 = r27;

     label081:
        specialinvoke r44.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("Meta-data does not start with device-admin tag");

     label082:
        r26 = r27;

        r25 = r27;

     label083:
        r49 = (java.lang.Throwable) r44;

        throw r49;

     label084:
        r26 = r27;

        r25 = r27;

     label085:
        r45 = new org.xmlpull.v1.XmlPullParserException;

     label086:
        r26 = r27;

        r25 = r27;

     label087:
        specialinvoke r45.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("No android.app.device_admin meta-data");

     label088:
        r26 = r27;

        r25 = r27;

     label089:
        r50 = (java.lang.Throwable) r45;

        throw r50;

     label090:
        $r15 := @caughtexception;

        goto label105;

     label091:
        $r16 := @caughtexception;

        r26 = r25;

     label092:
        r47 = new org.xmlpull.v1.XmlPullParserException;

     label093:
        r26 = r25;

     label094:
        r46 = new java.lang.StringBuilder;

     label095:
        r26 = r25;

     label096:
        specialinvoke r46.<java.lang.StringBuilder: void <init>()>();

     label097:
        r26 = r25;

     label098:
        virtualinvoke r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to create context for: ");

     label099:
        r26 = r25;

     label100:
        $r18 = r0.<android.app.admin.DeviceAdminInfo: android.content.pm.ActivityInfo mActivityInfo>;

        $r19 = $r18.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        virtualinvoke r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

     label101:
        r26 = r25;

     label102:
        $r21 = virtualinvoke r46.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r47.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r21);

     label103:
        r26 = r25;

     label104:
        r51 = (java.lang.Throwable) r47;

        throw r51;

     label105:
        if r26 == null goto label106;

        interfaceinvoke r26.<android.content.res.XmlResourceParser: void close()>();

     label106:
        throw $r15;

        catch android.content.pm.PackageManager$NameNotFoundException from label001 to label002 with label091;
        catch java.lang.Throwable from label001 to label002 with label090;
        catch android.content.pm.PackageManager$NameNotFoundException from label003 to label004 with label091;
        catch java.lang.Throwable from label003 to label004 with label090;
        catch android.content.pm.PackageManager$NameNotFoundException from label005 to label006 with label091;
        catch java.lang.Throwable from label005 to label006 with label090;
        catch android.content.pm.PackageManager$NameNotFoundException from label007 to label008 with label091;
        catch java.lang.Throwable from label007 to label008 with label090;
        catch android.content.pm.PackageManager$NameNotFoundException from label010 to label011 with label091;
        catch java.lang.Throwable from label010 to label011 with label090;
        catch android.content.pm.PackageManager$NameNotFoundException from label012 to label013 with label091;
        catch java.lang.Throwable from label012 to label013 with label090;
        catch android.content.pm.PackageManager$NameNotFoundException from label014 to label015 with label091;
        catch java.lang.Throwable from label014 to label015 with label090;
        catch android.content.pm.PackageManager$NameNotFoundException from label016 to label017 with label091;
        catch java.lang.Throwable from label016 to label017 with label090;
        catch android.content.pm.PackageManager$NameNotFoundException from label018 to label019 with label091;
        catch java.lang.Throwable from label018 to label019 with label090;
        catch android.content.pm.PackageManager$NameNotFoundException from label020 to label021 with label091;
        catch java.lang.Throwable from label020 to label021 with label090;
        catch android.content.pm.PackageManager$NameNotFoundException from label022 to label023 with label091;
        catch java.lang.Throwable from label022 to label023 with label090;
        catch android.content.pm.PackageManager$NameNotFoundException from label025 to label026 with label091;
        catch java.lang.Throwable from label025 to label026 with label090;
        catch android.content.pm.PackageManager$NameNotFoundException from label027 to label028 with label091;
        catch java.lang.Throwable from label027 to label028 with label090;
        catch android.content.pm.PackageManager$NameNotFoundException from label029 to label030 with label091;
        catch java.lang.Throwable from label029 to label030 with label090;
        catch android.content.pm.PackageManager$NameNotFoundException from label031 to label032 with label091;
        catch java.lang.Throwable from label031 to label032 with label090;
        catch android.content.pm.PackageManager$NameNotFoundException from label033 to label034 with label091;
        catch java.lang.Throwable from label033 to label034 with label090;
        catch android.content.pm.PackageManager$NameNotFoundException from label038 to label039 with label091;
        catch java.lang.Throwable from label038 to label039 with label090;
        catch android.content.pm.PackageManager$NameNotFoundException from label040 to label041 with label091;
        catch java.lang.Throwable from label040 to label041 with label090;
        catch android.content.pm.PackageManager$NameNotFoundException from label042 to label043 with label091;
        catch java.lang.Throwable from label042 to label043 with label090;
        catch android.content.pm.PackageManager$NameNotFoundException from label045 to label046 with label091;
        catch java.lang.Throwable from label045 to label046 with label090;
        catch android.content.pm.PackageManager$NameNotFoundException from label047 to label048 with label091;
        catch java.lang.Throwable from label047 to label048 with label090;
        catch android.content.pm.PackageManager$NameNotFoundException from label049 to label050 with label091;
        catch java.lang.Throwable from label049 to label050 with label090;
        catch android.content.pm.PackageManager$NameNotFoundException from label051 to label052 with label091;
        catch java.lang.Throwable from label051 to label052 with label090;
        catch android.content.pm.PackageManager$NameNotFoundException from label053 to label054 with label091;
        catch java.lang.Throwable from label053 to label054 with label090;
        catch android.content.pm.PackageManager$NameNotFoundException from label055 to label056 with label091;
        catch java.lang.Throwable from label055 to label056 with label090;
        catch android.content.pm.PackageManager$NameNotFoundException from label057 to label058 with label091;
        catch java.lang.Throwable from label057 to label058 with label090;
        catch android.content.pm.PackageManager$NameNotFoundException from label062 to label063 with label091;
        catch java.lang.Throwable from label062 to label063 with label090;
        catch android.content.pm.PackageManager$NameNotFoundException from label064 to label065 with label091;
        catch java.lang.Throwable from label064 to label065 with label090;
        catch android.content.pm.PackageManager$NameNotFoundException from label066 to label067 with label091;
        catch java.lang.Throwable from label066 to label067 with label090;
        catch android.content.pm.PackageManager$NameNotFoundException from label069 to label070 with label091;
        catch java.lang.Throwable from label069 to label070 with label090;
        catch android.content.pm.PackageManager$NameNotFoundException from label071 to label072 with label091;
        catch java.lang.Throwable from label071 to label072 with label090;
        catch android.content.pm.PackageManager$NameNotFoundException from label073 to label074 with label091;
        catch java.lang.Throwable from label073 to label074 with label090;
        catch android.content.pm.PackageManager$NameNotFoundException from label079 to label080 with label091;
        catch java.lang.Throwable from label079 to label080 with label090;
        catch android.content.pm.PackageManager$NameNotFoundException from label081 to label082 with label091;
        catch java.lang.Throwable from label081 to label082 with label090;
        catch android.content.pm.PackageManager$NameNotFoundException from label083 to label084 with label091;
        catch java.lang.Throwable from label083 to label084 with label090;
        catch android.content.pm.PackageManager$NameNotFoundException from label085 to label086 with label091;
        catch java.lang.Throwable from label085 to label086 with label090;
        catch android.content.pm.PackageManager$NameNotFoundException from label087 to label088 with label091;
        catch java.lang.Throwable from label087 to label088 with label090;
        catch android.content.pm.PackageManager$NameNotFoundException from label089 to label090 with label091;
        catch java.lang.Throwable from label089 to label090 with label090;
        catch java.lang.Throwable from label092 to label093 with label090;
        catch java.lang.Throwable from label094 to label095 with label090;
        catch java.lang.Throwable from label096 to label097 with label090;
        catch java.lang.Throwable from label098 to label099 with label090;
        catch java.lang.Throwable from label100 to label101 with label090;
        catch java.lang.Throwable from label102 to label103 with label090;
        catch java.lang.Throwable from label104 to label105 with label090;
    }

    public void <init>(android.content.Context, android.content.pm.ResolveInfo) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.app.admin.DeviceAdminInfo r0;
        android.content.Context r1;
        android.content.pm.ResolveInfo r2;
        android.content.pm.ActivityInfo $r3;

        r0 := @this: android.app.admin.DeviceAdminInfo;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.pm.ResolveInfo;

        $r3 = r2.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        specialinvoke r0.<android.app.admin.DeviceAdminInfo: void <init>(android.content.Context,android.content.pm.ActivityInfo)>(r1, $r3);

        return;
    }

    void <init>(android.os.Parcel)
    {
        android.app.admin.DeviceAdminInfo r0;
        android.os.Parcel r1;
        android.os.Parcelable$Creator $r2;
        java.lang.Object $r3;
        android.content.pm.ActivityInfo $r4;
        int $i0;
        boolean $z0;

        r0 := @this: android.app.admin.DeviceAdminInfo;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = <android.content.pm.ActivityInfo: android.os.Parcelable$Creator CREATOR>;

        $r3 = interfaceinvoke $r2.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        $r4 = (android.content.pm.ActivityInfo) $r3;

        r0.<android.app.admin.DeviceAdminInfo: android.content.pm.ActivityInfo mActivityInfo> = $r4;

        $i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.app.admin.DeviceAdminInfo: int mUsesPolicies> = $i0;

        $z0 = virtualinvoke r1.<android.os.Parcel: boolean readBoolean()>();

        r0.<android.app.admin.DeviceAdminInfo: boolean mSupportsTransferOwnership> = $z0;

        return;
    }

    public int describeContents()
    {
        android.app.admin.DeviceAdminInfo r0;

        r0 := @this: android.app.admin.DeviceAdminInfo;

        return 0;
    }

    public void dump(android.util.Printer, java.lang.String)
    {
        android.app.admin.DeviceAdminInfo r0;
        android.util.Printer r1;
        java.lang.String r2, $r7, $r11;
        java.lang.StringBuilder $r4, $r8;
        android.content.pm.ActivityInfo r13;

        r0 := @this: android.app.admin.DeviceAdminInfo;

        r1 := @parameter0: android.util.Printer;

        r2 := @parameter1: java.lang.String;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Receiver:");

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r1.<android.util.Printer: void println(java.lang.String)>($r7);

        r13 = r0.<android.app.admin.DeviceAdminInfo: android.content.pm.ActivityInfo mActivityInfo>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r13.<android.content.pm.ActivityInfo: void dump(android.util.Printer,java.lang.String)>(r1, $r11);

        return;
    }

    public android.content.pm.ActivityInfo getActivityInfo()
    {
        android.app.admin.DeviceAdminInfo r0;
        android.content.pm.ActivityInfo $r1;

        r0 := @this: android.app.admin.DeviceAdminInfo;

        $r1 = r0.<android.app.admin.DeviceAdminInfo: android.content.pm.ActivityInfo mActivityInfo>;

        return $r1;
    }

    public android.content.ComponentName getComponent()
    {
        android.app.admin.DeviceAdminInfo r0;
        android.content.ComponentName $r1;
        android.content.pm.ActivityInfo $r2, $r3;
        java.lang.String $r4, $r5;

        r0 := @this: android.app.admin.DeviceAdminInfo;

        $r1 = new android.content.ComponentName;

        $r2 = r0.<android.app.admin.DeviceAdminInfo: android.content.pm.ActivityInfo mActivityInfo>;

        $r5 = $r2.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $r3 = r0.<android.app.admin.DeviceAdminInfo: android.content.pm.ActivityInfo mActivityInfo>;

        $r4 = $r3.<android.content.pm.ActivityInfo: java.lang.String name>;

        specialinvoke $r1.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r5, $r4);

        return $r1;
    }

    public java.lang.String getPackageName()
    {
        android.app.admin.DeviceAdminInfo r0;
        android.content.pm.ActivityInfo $r1;
        java.lang.String $r2;

        r0 := @this: android.app.admin.DeviceAdminInfo;

        $r1 = r0.<android.app.admin.DeviceAdminInfo: android.content.pm.ActivityInfo mActivityInfo>;

        $r2 = $r1.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        return $r2;
    }

    public java.lang.String getReceiverName()
    {
        android.app.admin.DeviceAdminInfo r0;
        android.content.pm.ActivityInfo $r1;
        java.lang.String $r2;

        r0 := @this: android.app.admin.DeviceAdminInfo;

        $r1 = r0.<android.app.admin.DeviceAdminInfo: android.content.pm.ActivityInfo mActivityInfo>;

        $r2 = $r1.<android.content.pm.ActivityInfo: java.lang.String name>;

        return $r2;
    }

    public java.lang.String getTagForPolicy(int)
    {
        android.app.admin.DeviceAdminInfo r0;
        int i0;
        android.util.SparseArray $r1;
        java.lang.Object $r2;
        android.app.admin.DeviceAdminInfo$PolicyInfo $r3;
        java.lang.String $r4;

        r0 := @this: android.app.admin.DeviceAdminInfo;

        i0 := @parameter0: int;

        $r1 = <android.app.admin.DeviceAdminInfo: android.util.SparseArray sRevKnownPolicies>;

        $r2 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        $r3 = (android.app.admin.DeviceAdminInfo$PolicyInfo) $r2;

        $r4 = $r3.<android.app.admin.DeviceAdminInfo$PolicyInfo: java.lang.String tag>;

        return $r4;
    }

    public java.util.ArrayList getUsedPolicies()
    {
        android.app.admin.DeviceAdminInfo r0;
        android.app.admin.DeviceAdminInfo$PolicyInfo r2;
        java.util.ArrayList $r3, $r4, $r5;
        int $i0, $i1, i2;
        java.lang.Object $r6;
        boolean $z0;

        r0 := @this: android.app.admin.DeviceAdminInfo;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        i2 = 0;

     label1:
        $r4 = <android.app.admin.DeviceAdminInfo: java.util.ArrayList sPoliciesDisplayOrder>;

        $i0 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        if i2 >= $i0 goto label3;

        $r5 = <android.app.admin.DeviceAdminInfo: java.util.ArrayList sPoliciesDisplayOrder>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r2 = (android.app.admin.DeviceAdminInfo$PolicyInfo) $r6;

        $i1 = r2.<android.app.admin.DeviceAdminInfo$PolicyInfo: int ident>;

        $z0 = virtualinvoke r0.<android.app.admin.DeviceAdminInfo: boolean usesPolicy(int)>($i1);

        if $z0 == 0 goto label2;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return $r3;
    }

    public boolean isVisible()
    {
        android.app.admin.DeviceAdminInfo r0;
        boolean $z0;

        r0 := @this: android.app.admin.DeviceAdminInfo;

        $z0 = r0.<android.app.admin.DeviceAdminInfo: boolean mVisible>;

        return $z0;
    }

    public java.lang.CharSequence loadDescription(android.content.pm.PackageManager) throws android.content.res.Resources$NotFoundException
    {
        android.app.admin.DeviceAdminInfo r0;
        android.content.pm.PackageManager r1;
        android.content.pm.ActivityInfo $r2, $r4, $r5, $r6;
        int $i0, $i1;
        android.content.res.Resources$NotFoundException $r3;
        android.content.pm.ApplicationInfo $r7;
        java.lang.String $r8;
        java.lang.CharSequence $r9;

        r0 := @this: android.app.admin.DeviceAdminInfo;

        r1 := @parameter0: android.content.pm.PackageManager;

        $r2 = r0.<android.app.admin.DeviceAdminInfo: android.content.pm.ActivityInfo mActivityInfo>;

        $i0 = $r2.<android.content.pm.ActivityInfo: int descriptionRes>;

        if $i0 == 0 goto label1;

        $r4 = r0.<android.app.admin.DeviceAdminInfo: android.content.pm.ActivityInfo mActivityInfo>;

        $r8 = $r4.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $r5 = r0.<android.app.admin.DeviceAdminInfo: android.content.pm.ActivityInfo mActivityInfo>;

        $i1 = $r5.<android.content.pm.ActivityInfo: int descriptionRes>;

        $r6 = r0.<android.app.admin.DeviceAdminInfo: android.content.pm.ActivityInfo mActivityInfo>;

        $r7 = $r6.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r9 = virtualinvoke r1.<android.content.pm.PackageManager: java.lang.CharSequence getText(java.lang.String,int,android.content.pm.ApplicationInfo)>($r8, $i1, $r7);

        return $r9;

     label1:
        $r3 = new android.content.res.Resources$NotFoundException;

        specialinvoke $r3.<android.content.res.Resources$NotFoundException: void <init>()>();

        throw $r3;
    }

    public android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)
    {
        android.app.admin.DeviceAdminInfo r0;
        android.content.pm.PackageManager r1;
        android.content.pm.ActivityInfo $r2;
        android.graphics.drawable.Drawable $r3;

        r0 := @this: android.app.admin.DeviceAdminInfo;

        r1 := @parameter0: android.content.pm.PackageManager;

        $r2 = r0.<android.app.admin.DeviceAdminInfo: android.content.pm.ActivityInfo mActivityInfo>;

        $r3 = virtualinvoke $r2.<android.content.pm.ActivityInfo: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)>(r1);

        return $r3;
    }

    public java.lang.CharSequence loadLabel(android.content.pm.PackageManager)
    {
        android.app.admin.DeviceAdminInfo r0;
        android.content.pm.PackageManager r1;
        android.content.pm.ActivityInfo $r2;
        java.lang.CharSequence $r3;

        r0 := @this: android.app.admin.DeviceAdminInfo;

        r1 := @parameter0: android.content.pm.PackageManager;

        $r2 = r0.<android.app.admin.DeviceAdminInfo: android.content.pm.ActivityInfo mActivityInfo>;

        $r3 = virtualinvoke $r2.<android.content.pm.ActivityInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>(r1);

        return $r3;
    }

    public void readPoliciesFromXml(org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.app.admin.DeviceAdminInfo r0;
        org.xmlpull.v1.XmlPullParser r1;
        java.lang.String $r2;
        int $i0;

        r0 := @this: android.app.admin.DeviceAdminInfo;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $r2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "flags");

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);

        r0.<android.app.admin.DeviceAdminInfo: int mUsesPolicies> = $i0;

        return;
    }

    public boolean supportsTransferOwnership()
    {
        android.app.admin.DeviceAdminInfo r0;
        boolean $z0;

        r0 := @this: android.app.admin.DeviceAdminInfo;

        $z0 = r0.<android.app.admin.DeviceAdminInfo: boolean mSupportsTransferOwnership>;

        return $z0;
    }

    public java.lang.String toString()
    {
        android.app.admin.DeviceAdminInfo r0;
        java.lang.StringBuilder $r2;
        android.content.pm.ActivityInfo $r4;
        java.lang.String $r5, $r8;

        r0 := @this: android.app.admin.DeviceAdminInfo;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DeviceAdminInfo{");

        $r4 = r0.<android.app.admin.DeviceAdminInfo: android.content.pm.ActivityInfo mActivityInfo>;

        $r5 = $r4.<android.content.pm.ActivityInfo: java.lang.String name>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public boolean usesPolicy(int)
    {
        android.app.admin.DeviceAdminInfo r0;
        int i0, i1, $i2, $i3;
        boolean z0;

        r0 := @this: android.app.admin.DeviceAdminInfo;

        i0 := @parameter0: int;

        i1 = r0.<android.app.admin.DeviceAdminInfo: int mUsesPolicies>;

        z0 = 1;

        $i2 = 1 << i0;

        $i3 = i1 & $i2;

        if $i3 == 0 goto label1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public void writePoliciesToXml(org.xmlpull.v1.XmlSerializer) throws java.lang.IllegalArgumentException, java.lang.IllegalStateException, java.io.IOException
    {
        android.app.admin.DeviceAdminInfo r0;
        org.xmlpull.v1.XmlSerializer r1;
        int $i0;
        java.lang.String $r2;

        r0 := @this: android.app.admin.DeviceAdminInfo;

        r1 := @parameter0: org.xmlpull.v1.XmlSerializer;

        $i0 = r0.<android.app.admin.DeviceAdminInfo: int mUsesPolicies>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "flags", $r2);

        return;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.app.admin.DeviceAdminInfo r0;
        android.os.Parcel r1;
        int i0, $i1;
        android.content.pm.ActivityInfo $r2;
        boolean $z0;

        r0 := @this: android.app.admin.DeviceAdminInfo;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $r2 = r0.<android.app.admin.DeviceAdminInfo: android.content.pm.ActivityInfo mActivityInfo>;

        virtualinvoke $r2.<android.content.pm.ActivityInfo: void writeToParcel(android.os.Parcel,int)>(r1, i0);

        $i1 = r0.<android.app.admin.DeviceAdminInfo: int mUsesPolicies>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $z0 = r0.<android.app.admin.DeviceAdminInfo: boolean mSupportsTransferOwnership>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z0);

        return;
    }
}
