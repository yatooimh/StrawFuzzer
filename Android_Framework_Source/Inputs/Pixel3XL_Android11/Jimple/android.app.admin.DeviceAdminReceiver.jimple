public class android.app.admin.DeviceAdminReceiver extends android.content.BroadcastReceiver
{
    public static final java.lang.String ACTION_AFFILIATED_PROFILE_TRANSFER_OWNERSHIP_COMPLETE;
    public static final java.lang.String ACTION_BUGREPORT_FAILED;
    public static final java.lang.String ACTION_BUGREPORT_SHARE;
    public static final java.lang.String ACTION_BUGREPORT_SHARING_DECLINED;
    public static final java.lang.String ACTION_CHOOSE_PRIVATE_KEY_ALIAS;
    public static final java.lang.String ACTION_DEVICE_ADMIN_DISABLED;
    public static final java.lang.String ACTION_DEVICE_ADMIN_DISABLE_REQUESTED;
    public static final java.lang.String ACTION_DEVICE_ADMIN_ENABLED;
    public static final java.lang.String ACTION_LOCK_TASK_ENTERING;
    public static final java.lang.String ACTION_LOCK_TASK_EXITING;
    public static final java.lang.String ACTION_NETWORK_LOGS_AVAILABLE;
    public static final java.lang.String ACTION_NOTIFY_PENDING_SYSTEM_UPDATE;
    public static final java.lang.String ACTION_PASSWORD_CHANGED;
    public static final java.lang.String ACTION_PASSWORD_EXPIRING;
    public static final java.lang.String ACTION_PASSWORD_FAILED;
    public static final java.lang.String ACTION_PASSWORD_SUCCEEDED;
    public static final java.lang.String ACTION_PROFILE_PROVISIONING_COMPLETE;
    public static final java.lang.String ACTION_SECURITY_LOGS_AVAILABLE;
    public static final java.lang.String ACTION_TRANSFER_OWNERSHIP_COMPLETE;
    public static final java.lang.String ACTION_USER_ADDED;
    public static final java.lang.String ACTION_USER_REMOVED;
    public static final java.lang.String ACTION_USER_STARTED;
    public static final java.lang.String ACTION_USER_STOPPED;
    public static final java.lang.String ACTION_USER_SWITCHED;
    public static final int BUGREPORT_FAILURE_FAILED_COMPLETING;
    public static final int BUGREPORT_FAILURE_FILE_NO_LONGER_AVAILABLE;
    public static final java.lang.String DEVICE_ADMIN_META_DATA;
    public static final java.lang.String EXTRA_BUGREPORT_FAILURE_REASON;
    public static final java.lang.String EXTRA_BUGREPORT_HASH;
    public static final java.lang.String EXTRA_CHOOSE_PRIVATE_KEY_ALIAS;
    public static final java.lang.String EXTRA_CHOOSE_PRIVATE_KEY_RESPONSE;
    public static final java.lang.String EXTRA_CHOOSE_PRIVATE_KEY_SENDER_UID;
    public static final java.lang.String EXTRA_CHOOSE_PRIVATE_KEY_URI;
    public static final java.lang.String EXTRA_DISABLE_WARNING;
    public static final java.lang.String EXTRA_LOCK_TASK_PACKAGE;
    public static final java.lang.String EXTRA_NETWORK_LOGS_COUNT;
    public static final java.lang.String EXTRA_NETWORK_LOGS_TOKEN;
    public static final java.lang.String EXTRA_SYSTEM_UPDATE_RECEIVED_TIME;
    public static final java.lang.String EXTRA_TRANSFER_OWNERSHIP_ADMIN_EXTRAS_BUNDLE;
    private static java.lang.String TAG;
    private static boolean localLOGV;
    private android.app.admin.DevicePolicyManager mManager;
    private android.content.ComponentName mWho;

    static void <clinit>()
    {
        <android.app.admin.DeviceAdminReceiver: java.lang.String EXTRA_TRANSFER_OWNERSHIP_ADMIN_EXTRAS_BUNDLE> = "android.app.extra.TRANSFER_OWNERSHIP_ADMIN_EXTRAS_BUNDLE";

        <android.app.admin.DeviceAdminReceiver: java.lang.String EXTRA_SYSTEM_UPDATE_RECEIVED_TIME> = "android.app.extra.SYSTEM_UPDATE_RECEIVED_TIME";

        <android.app.admin.DeviceAdminReceiver: java.lang.String EXTRA_NETWORK_LOGS_TOKEN> = "android.app.extra.EXTRA_NETWORK_LOGS_TOKEN";

        <android.app.admin.DeviceAdminReceiver: java.lang.String EXTRA_NETWORK_LOGS_COUNT> = "android.app.extra.EXTRA_NETWORK_LOGS_COUNT";

        <android.app.admin.DeviceAdminReceiver: java.lang.String EXTRA_LOCK_TASK_PACKAGE> = "android.app.extra.LOCK_TASK_PACKAGE";

        <android.app.admin.DeviceAdminReceiver: java.lang.String EXTRA_DISABLE_WARNING> = "android.app.extra.DISABLE_WARNING";

        <android.app.admin.DeviceAdminReceiver: java.lang.String EXTRA_CHOOSE_PRIVATE_KEY_URI> = "android.app.extra.CHOOSE_PRIVATE_KEY_URI";

        <android.app.admin.DeviceAdminReceiver: java.lang.String EXTRA_CHOOSE_PRIVATE_KEY_SENDER_UID> = "android.app.extra.CHOOSE_PRIVATE_KEY_SENDER_UID";

        <android.app.admin.DeviceAdminReceiver: java.lang.String EXTRA_CHOOSE_PRIVATE_KEY_RESPONSE> = "android.app.extra.CHOOSE_PRIVATE_KEY_RESPONSE";

        <android.app.admin.DeviceAdminReceiver: java.lang.String EXTRA_CHOOSE_PRIVATE_KEY_ALIAS> = "android.app.extra.CHOOSE_PRIVATE_KEY_ALIAS";

        <android.app.admin.DeviceAdminReceiver: java.lang.String EXTRA_BUGREPORT_HASH> = "android.app.extra.BUGREPORT_HASH";

        <android.app.admin.DeviceAdminReceiver: java.lang.String EXTRA_BUGREPORT_FAILURE_REASON> = "android.app.extra.BUGREPORT_FAILURE_REASON";

        <android.app.admin.DeviceAdminReceiver: java.lang.String DEVICE_ADMIN_META_DATA> = "android.app.device_admin";

        <android.app.admin.DeviceAdminReceiver: int BUGREPORT_FAILURE_FILE_NO_LONGER_AVAILABLE> = 1;

        <android.app.admin.DeviceAdminReceiver: int BUGREPORT_FAILURE_FAILED_COMPLETING> = 0;

        <android.app.admin.DeviceAdminReceiver: java.lang.String ACTION_USER_SWITCHED> = "android.app.action.USER_SWITCHED";

        <android.app.admin.DeviceAdminReceiver: java.lang.String ACTION_USER_STOPPED> = "android.app.action.USER_STOPPED";

        <android.app.admin.DeviceAdminReceiver: java.lang.String ACTION_USER_STARTED> = "android.app.action.USER_STARTED";

        <android.app.admin.DeviceAdminReceiver: java.lang.String ACTION_USER_REMOVED> = "android.app.action.USER_REMOVED";

        <android.app.admin.DeviceAdminReceiver: java.lang.String ACTION_USER_ADDED> = "android.app.action.USER_ADDED";

        <android.app.admin.DeviceAdminReceiver: java.lang.String ACTION_TRANSFER_OWNERSHIP_COMPLETE> = "android.app.action.TRANSFER_OWNERSHIP_COMPLETE";

        <android.app.admin.DeviceAdminReceiver: java.lang.String ACTION_SECURITY_LOGS_AVAILABLE> = "android.app.action.SECURITY_LOGS_AVAILABLE";

        <android.app.admin.DeviceAdminReceiver: java.lang.String ACTION_PROFILE_PROVISIONING_COMPLETE> = "android.app.action.PROFILE_PROVISIONING_COMPLETE";

        <android.app.admin.DeviceAdminReceiver: java.lang.String ACTION_PASSWORD_SUCCEEDED> = "android.app.action.ACTION_PASSWORD_SUCCEEDED";

        <android.app.admin.DeviceAdminReceiver: java.lang.String ACTION_PASSWORD_FAILED> = "android.app.action.ACTION_PASSWORD_FAILED";

        <android.app.admin.DeviceAdminReceiver: java.lang.String ACTION_PASSWORD_EXPIRING> = "android.app.action.ACTION_PASSWORD_EXPIRING";

        <android.app.admin.DeviceAdminReceiver: java.lang.String ACTION_PASSWORD_CHANGED> = "android.app.action.ACTION_PASSWORD_CHANGED";

        <android.app.admin.DeviceAdminReceiver: java.lang.String ACTION_NOTIFY_PENDING_SYSTEM_UPDATE> = "android.app.action.NOTIFY_PENDING_SYSTEM_UPDATE";

        <android.app.admin.DeviceAdminReceiver: java.lang.String ACTION_NETWORK_LOGS_AVAILABLE> = "android.app.action.NETWORK_LOGS_AVAILABLE";

        <android.app.admin.DeviceAdminReceiver: java.lang.String ACTION_LOCK_TASK_EXITING> = "android.app.action.LOCK_TASK_EXITING";

        <android.app.admin.DeviceAdminReceiver: java.lang.String ACTION_LOCK_TASK_ENTERING> = "android.app.action.LOCK_TASK_ENTERING";

        <android.app.admin.DeviceAdminReceiver: java.lang.String ACTION_DEVICE_ADMIN_ENABLED> = "android.app.action.DEVICE_ADMIN_ENABLED";

        <android.app.admin.DeviceAdminReceiver: java.lang.String ACTION_DEVICE_ADMIN_DISABLE_REQUESTED> = "android.app.action.DEVICE_ADMIN_DISABLE_REQUESTED";

        <android.app.admin.DeviceAdminReceiver: java.lang.String ACTION_DEVICE_ADMIN_DISABLED> = "android.app.action.DEVICE_ADMIN_DISABLED";

        <android.app.admin.DeviceAdminReceiver: java.lang.String ACTION_CHOOSE_PRIVATE_KEY_ALIAS> = "android.app.action.CHOOSE_PRIVATE_KEY_ALIAS";

        <android.app.admin.DeviceAdminReceiver: java.lang.String ACTION_BUGREPORT_SHARING_DECLINED> = "android.app.action.BUGREPORT_SHARING_DECLINED";

        <android.app.admin.DeviceAdminReceiver: java.lang.String ACTION_BUGREPORT_SHARE> = "android.app.action.BUGREPORT_SHARE";

        <android.app.admin.DeviceAdminReceiver: java.lang.String ACTION_BUGREPORT_FAILED> = "android.app.action.BUGREPORT_FAILED";

        <android.app.admin.DeviceAdminReceiver: java.lang.String ACTION_AFFILIATED_PROFILE_TRANSFER_OWNERSHIP_COMPLETE> = "android.app.action.AFFILIATED_PROFILE_TRANSFER_OWNERSHIP_COMPLETE";

        <android.app.admin.DeviceAdminReceiver: java.lang.String TAG> = "DevicePolicy";

        <android.app.admin.DeviceAdminReceiver: boolean localLOGV> = 0;

        return;
    }

    public void <init>()
    {
        android.app.admin.DeviceAdminReceiver r0;

        r0 := @this: android.app.admin.DeviceAdminReceiver;

        specialinvoke r0.<android.content.BroadcastReceiver: void <init>()>();

        return;
    }

    public android.app.admin.DevicePolicyManager getManager(android.content.Context)
    {
        android.app.admin.DeviceAdminReceiver r0;
        android.app.admin.DevicePolicyManager r1, r4;
        java.lang.Object $r2;
        android.content.Context r3;

        r0 := @this: android.app.admin.DeviceAdminReceiver;

        r3 := @parameter0: android.content.Context;

        r1 = r0.<android.app.admin.DeviceAdminReceiver: android.app.admin.DevicePolicyManager mManager>;

        if r1 == null goto label1;

        return r1;

     label1:
        $r2 = virtualinvoke r3.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("device_policy");

        r4 = (android.app.admin.DevicePolicyManager) $r2;

        r0.<android.app.admin.DeviceAdminReceiver: android.app.admin.DevicePolicyManager mManager> = r4;

        return r4;
    }

    public android.content.ComponentName getWho(android.content.Context)
    {
        android.app.admin.DeviceAdminReceiver r0;
        android.content.ComponentName r1, $r2;
        java.lang.Class $r3;
        android.content.Context r4;

        r0 := @this: android.app.admin.DeviceAdminReceiver;

        r4 := @parameter0: android.content.Context;

        r1 = r0.<android.app.admin.DeviceAdminReceiver: android.content.ComponentName mWho>;

        if r1 == null goto label1;

        return r1;

     label1:
        $r2 = new android.content.ComponentName;

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        specialinvoke $r2.<android.content.ComponentName: void <init>(android.content.Context,java.lang.Class)>(r4, $r3);

        r0.<android.app.admin.DeviceAdminReceiver: android.content.ComponentName mWho> = $r2;

        return $r2;
    }

    public void onBugreportFailed(android.content.Context, android.content.Intent, int)
    {
        android.app.admin.DeviceAdminReceiver r0;
        android.content.Context r1;
        android.content.Intent r2;
        int i0;

        r0 := @this: android.app.admin.DeviceAdminReceiver;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.Intent;

        i0 := @parameter2: int;

        return;
    }

    public void onBugreportShared(android.content.Context, android.content.Intent, java.lang.String)
    {
        android.app.admin.DeviceAdminReceiver r0;
        android.content.Context r1;
        android.content.Intent r2;
        java.lang.String r3;

        r0 := @this: android.app.admin.DeviceAdminReceiver;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.Intent;

        r3 := @parameter2: java.lang.String;

        return;
    }

    public void onBugreportSharingDeclined(android.content.Context, android.content.Intent)
    {
        android.app.admin.DeviceAdminReceiver r0;
        android.content.Context r1;
        android.content.Intent r2;

        r0 := @this: android.app.admin.DeviceAdminReceiver;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.Intent;

        return;
    }

    public java.lang.String onChoosePrivateKeyAlias(android.content.Context, android.content.Intent, int, android.net.Uri, java.lang.String)
    {
        android.app.admin.DeviceAdminReceiver r0;
        android.content.Context r1;
        android.content.Intent r2;
        int i0;
        android.net.Uri r3;
        java.lang.String r4;

        r0 := @this: android.app.admin.DeviceAdminReceiver;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.Intent;

        i0 := @parameter2: int;

        r3 := @parameter3: android.net.Uri;

        r4 := @parameter4: java.lang.String;

        return null;
    }

    public java.lang.CharSequence onDisableRequested(android.content.Context, android.content.Intent)
    {
        android.app.admin.DeviceAdminReceiver r0;
        android.content.Context r1;
        android.content.Intent r2;

        r0 := @this: android.app.admin.DeviceAdminReceiver;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.Intent;

        return null;
    }

    public void onDisabled(android.content.Context, android.content.Intent)
    {
        android.app.admin.DeviceAdminReceiver r0;
        android.content.Context r1;
        android.content.Intent r2;

        r0 := @this: android.app.admin.DeviceAdminReceiver;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.Intent;

        return;
    }

    public void onEnabled(android.content.Context, android.content.Intent)
    {
        android.app.admin.DeviceAdminReceiver r0;
        android.content.Context r1;
        android.content.Intent r2;

        r0 := @this: android.app.admin.DeviceAdminReceiver;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.Intent;

        return;
    }

    public void onLockTaskModeEntering(android.content.Context, android.content.Intent, java.lang.String)
    {
        android.app.admin.DeviceAdminReceiver r0;
        android.content.Context r1;
        android.content.Intent r2;
        java.lang.String r3;

        r0 := @this: android.app.admin.DeviceAdminReceiver;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.Intent;

        r3 := @parameter2: java.lang.String;

        return;
    }

    public void onLockTaskModeExiting(android.content.Context, android.content.Intent)
    {
        android.app.admin.DeviceAdminReceiver r0;
        android.content.Context r1;
        android.content.Intent r2;

        r0 := @this: android.app.admin.DeviceAdminReceiver;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.Intent;

        return;
    }

    public void onNetworkLogsAvailable(android.content.Context, android.content.Intent, long, int)
    {
        android.app.admin.DeviceAdminReceiver r0;
        android.content.Context r1;
        android.content.Intent r2;
        long l0;
        int i1;

        r0 := @this: android.app.admin.DeviceAdminReceiver;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.Intent;

        l0 := @parameter2: long;

        i1 := @parameter3: int;

        return;
    }

    public void onPasswordChanged(android.content.Context, android.content.Intent)
    {
        android.app.admin.DeviceAdminReceiver r0;
        android.content.Context r1;
        android.content.Intent r2;

        r0 := @this: android.app.admin.DeviceAdminReceiver;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.Intent;

        return;
    }

    public void onPasswordChanged(android.content.Context, android.content.Intent, android.os.UserHandle)
    {
        android.app.admin.DeviceAdminReceiver r0;
        android.content.Context r1;
        android.content.Intent r2;
        android.os.UserHandle r3;

        r0 := @this: android.app.admin.DeviceAdminReceiver;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.Intent;

        r3 := @parameter2: android.os.UserHandle;

        virtualinvoke r0.<android.app.admin.DeviceAdminReceiver: void onPasswordChanged(android.content.Context,android.content.Intent)>(r1, r2);

        return;
    }

    public void onPasswordExpiring(android.content.Context, android.content.Intent)
    {
        android.app.admin.DeviceAdminReceiver r0;
        android.content.Context r1;
        android.content.Intent r2;

        r0 := @this: android.app.admin.DeviceAdminReceiver;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.Intent;

        return;
    }

    public void onPasswordExpiring(android.content.Context, android.content.Intent, android.os.UserHandle)
    {
        android.app.admin.DeviceAdminReceiver r0;
        android.content.Context r1;
        android.content.Intent r2;
        android.os.UserHandle r3;

        r0 := @this: android.app.admin.DeviceAdminReceiver;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.Intent;

        r3 := @parameter2: android.os.UserHandle;

        virtualinvoke r0.<android.app.admin.DeviceAdminReceiver: void onPasswordExpiring(android.content.Context,android.content.Intent)>(r1, r2);

        return;
    }

    public void onPasswordFailed(android.content.Context, android.content.Intent)
    {
        android.app.admin.DeviceAdminReceiver r0;
        android.content.Context r1;
        android.content.Intent r2;

        r0 := @this: android.app.admin.DeviceAdminReceiver;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.Intent;

        return;
    }

    public void onPasswordFailed(android.content.Context, android.content.Intent, android.os.UserHandle)
    {
        android.app.admin.DeviceAdminReceiver r0;
        android.content.Context r1;
        android.content.Intent r2;
        android.os.UserHandle r3;

        r0 := @this: android.app.admin.DeviceAdminReceiver;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.Intent;

        r3 := @parameter2: android.os.UserHandle;

        virtualinvoke r0.<android.app.admin.DeviceAdminReceiver: void onPasswordFailed(android.content.Context,android.content.Intent)>(r1, r2);

        return;
    }

    public void onPasswordSucceeded(android.content.Context, android.content.Intent)
    {
        android.app.admin.DeviceAdminReceiver r0;
        android.content.Context r1;
        android.content.Intent r2;

        r0 := @this: android.app.admin.DeviceAdminReceiver;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.Intent;

        return;
    }

    public void onPasswordSucceeded(android.content.Context, android.content.Intent, android.os.UserHandle)
    {
        android.app.admin.DeviceAdminReceiver r0;
        android.content.Context r1;
        android.content.Intent r2;
        android.os.UserHandle r3;

        r0 := @this: android.app.admin.DeviceAdminReceiver;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.Intent;

        r3 := @parameter2: android.os.UserHandle;

        virtualinvoke r0.<android.app.admin.DeviceAdminReceiver: void onPasswordSucceeded(android.content.Context,android.content.Intent)>(r1, r2);

        return;
    }

    public void onProfileProvisioningComplete(android.content.Context, android.content.Intent)
    {
        android.app.admin.DeviceAdminReceiver r0;
        android.content.Context r1;
        android.content.Intent r2;

        r0 := @this: android.app.admin.DeviceAdminReceiver;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.Intent;

        return;
    }

    public void onReadyForUserInitialization(android.content.Context, android.content.Intent)
    {
        android.app.admin.DeviceAdminReceiver r0;
        android.content.Context r1;
        android.content.Intent r2;

        r0 := @this: android.app.admin.DeviceAdminReceiver;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.Intent;

        return;
    }

    public void onReceive(android.content.Context, android.content.Intent)
    {
        android.app.admin.DeviceAdminReceiver r0;
        android.content.Intent r1;
        java.lang.String r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r41, $r42, $r45, $r46;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23;
        android.os.Parcelable $r27, $r29, $r31, $r33, $r35, $r37, $r39, $r43, $r47, $r50, $r52, $r54;
        android.os.UserHandle $r28, $r32, $r34, $r36, $r38, $r40, $r48, $r51, $r53, $r55;
        android.os.PersistableBundle $r30;
        long $l0, $l3;
        int $i1, $i2, $i4;
        android.net.Uri $r44;
        android.os.Bundle $r49;
        android.content.Context r56;
        java.lang.CharSequence r57;

        r0 := @this: android.app.admin.DeviceAdminReceiver;

        r56 := @parameter0: android.content.Context;

        r1 := @parameter1: android.content.Intent;

        r2 = virtualinvoke r1.<android.content.Intent: java.lang.String getAction()>();

        $r3 = "android.app.action.ACTION_PASSWORD_CHANGED";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z0 == 0 goto label01;

        $r54 = virtualinvoke r1.<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>("android.intent.extra.USER");

        $r55 = (android.os.UserHandle) $r54;

        virtualinvoke r0.<android.app.admin.DeviceAdminReceiver: void onPasswordChanged(android.content.Context,android.content.Intent,android.os.UserHandle)>(r56, r1, $r55);

        goto label25;

     label01:
        $r4 = "android.app.action.ACTION_PASSWORD_FAILED";

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z1 == 0 goto label02;

        $r52 = virtualinvoke r1.<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>("android.intent.extra.USER");

        $r53 = (android.os.UserHandle) $r52;

        virtualinvoke r0.<android.app.admin.DeviceAdminReceiver: void onPasswordFailed(android.content.Context,android.content.Intent,android.os.UserHandle)>(r56, r1, $r53);

        goto label25;

     label02:
        $r5 = "android.app.action.ACTION_PASSWORD_SUCCEEDED";

        $z2 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z2 == 0 goto label03;

        $r50 = virtualinvoke r1.<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>("android.intent.extra.USER");

        $r51 = (android.os.UserHandle) $r50;

        virtualinvoke r0.<android.app.admin.DeviceAdminReceiver: void onPasswordSucceeded(android.content.Context,android.content.Intent,android.os.UserHandle)>(r56, r1, $r51);

        goto label25;

     label03:
        $r6 = "android.app.action.DEVICE_ADMIN_ENABLED";

        $z3 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z3 == 0 goto label04;

        virtualinvoke r0.<android.app.admin.DeviceAdminReceiver: void onEnabled(android.content.Context,android.content.Intent)>(r56, r1);

        goto label25;

     label04:
        $r7 = "android.app.action.DEVICE_ADMIN_DISABLE_REQUESTED";

        $z4 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z4 == 0 goto label06;

        r57 = virtualinvoke r0.<android.app.admin.DeviceAdminReceiver: java.lang.CharSequence onDisableRequested(android.content.Context,android.content.Intent)>(r56, r1);

        if r57 == null goto label05;

        $r49 = virtualinvoke r0.<android.app.admin.DeviceAdminReceiver: android.os.Bundle getResultExtras(boolean)>(1);

        virtualinvoke $r49.<android.os.Bundle: void putCharSequence(java.lang.String,java.lang.CharSequence)>("android.app.extra.DISABLE_WARNING", r57);

     label05:
        goto label25;

     label06:
        $r8 = "android.app.action.DEVICE_ADMIN_DISABLED";

        $z5 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z5 == 0 goto label07;

        virtualinvoke r0.<android.app.admin.DeviceAdminReceiver: void onDisabled(android.content.Context,android.content.Intent)>(r56, r1);

        goto label25;

     label07:
        $r9 = "android.app.action.ACTION_PASSWORD_EXPIRING";

        $z6 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z6 == 0 goto label08;

        $r47 = virtualinvoke r1.<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>("android.intent.extra.USER");

        $r48 = (android.os.UserHandle) $r47;

        virtualinvoke r0.<android.app.admin.DeviceAdminReceiver: void onPasswordExpiring(android.content.Context,android.content.Intent,android.os.UserHandle)>(r56, r1, $r48);

        goto label25;

     label08:
        $r10 = "android.app.action.PROFILE_PROVISIONING_COMPLETE";

        $z7 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z7 == 0 goto label09;

        virtualinvoke r0.<android.app.admin.DeviceAdminReceiver: void onProfileProvisioningComplete(android.content.Context,android.content.Intent)>(r56, r1);

        goto label25;

     label09:
        $r11 = "android.app.action.CHOOSE_PRIVATE_KEY_ALIAS";

        $z8 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z8 == 0 goto label10;

        $i4 = virtualinvoke r1.<android.content.Intent: int getIntExtra(java.lang.String,int)>("android.app.extra.CHOOSE_PRIVATE_KEY_SENDER_UID", -1);

        $r43 = virtualinvoke r1.<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>("android.app.extra.CHOOSE_PRIVATE_KEY_URI");

        $r44 = (android.net.Uri) $r43;

        $r45 = virtualinvoke r1.<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>("android.app.extra.CHOOSE_PRIVATE_KEY_ALIAS");

        $r46 = virtualinvoke r0.<android.app.admin.DeviceAdminReceiver: java.lang.String onChoosePrivateKeyAlias(android.content.Context,android.content.Intent,int,android.net.Uri,java.lang.String)>(r56, r1, $i4, $r44, $r45);

        virtualinvoke r0.<android.app.admin.DeviceAdminReceiver: void setResultData(java.lang.String)>($r46);

        goto label25;

     label10:
        $r12 = "android.app.action.LOCK_TASK_ENTERING";

        $z9 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z9 == 0 goto label11;

        $r42 = virtualinvoke r1.<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>("android.app.extra.LOCK_TASK_PACKAGE");

        virtualinvoke r0.<android.app.admin.DeviceAdminReceiver: void onLockTaskModeEntering(android.content.Context,android.content.Intent,java.lang.String)>(r56, r1, $r42);

        goto label25;

     label11:
        $r13 = "android.app.action.LOCK_TASK_EXITING";

        $z10 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z10 == 0 goto label12;

        virtualinvoke r0.<android.app.admin.DeviceAdminReceiver: void onLockTaskModeExiting(android.content.Context,android.content.Intent)>(r56, r1);

        goto label25;

     label12:
        $r14 = "android.app.action.NOTIFY_PENDING_SYSTEM_UPDATE";

        $z11 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z11 == 0 goto label13;

        $l3 = virtualinvoke r1.<android.content.Intent: long getLongExtra(java.lang.String,long)>("android.app.extra.SYSTEM_UPDATE_RECEIVED_TIME", -1L);

        virtualinvoke r0.<android.app.admin.DeviceAdminReceiver: void onSystemUpdatePending(android.content.Context,android.content.Intent,long)>(r56, r1, $l3);

        goto label25;

     label13:
        $r15 = "android.app.action.BUGREPORT_SHARING_DECLINED";

        $z12 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z12 == 0 goto label14;

        virtualinvoke r0.<android.app.admin.DeviceAdminReceiver: void onBugreportSharingDeclined(android.content.Context,android.content.Intent)>(r56, r1);

        goto label25;

     label14:
        $r16 = "android.app.action.BUGREPORT_SHARE";

        $z13 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z13 == 0 goto label15;

        $r41 = virtualinvoke r1.<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>("android.app.extra.BUGREPORT_HASH");

        virtualinvoke r0.<android.app.admin.DeviceAdminReceiver: void onBugreportShared(android.content.Context,android.content.Intent,java.lang.String)>(r56, r1, $r41);

        goto label25;

     label15:
        $r17 = "android.app.action.BUGREPORT_FAILED";

        $z14 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z14 == 0 goto label16;

        $i2 = virtualinvoke r1.<android.content.Intent: int getIntExtra(java.lang.String,int)>("android.app.extra.BUGREPORT_FAILURE_REASON", 0);

        virtualinvoke r0.<android.app.admin.DeviceAdminReceiver: void onBugreportFailed(android.content.Context,android.content.Intent,int)>(r56, r1, $i2);

        goto label25;

     label16:
        $r18 = "android.app.action.SECURITY_LOGS_AVAILABLE";

        $z15 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z15 == 0 goto label17;

        virtualinvoke r0.<android.app.admin.DeviceAdminReceiver: void onSecurityLogsAvailable(android.content.Context,android.content.Intent)>(r56, r1);

        goto label25;

     label17:
        $r19 = "android.app.action.NETWORK_LOGS_AVAILABLE";

        $z16 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z16 == 0 goto label18;

        $l0 = virtualinvoke r1.<android.content.Intent: long getLongExtra(java.lang.String,long)>("android.app.extra.EXTRA_NETWORK_LOGS_TOKEN", -1L);

        $i1 = virtualinvoke r1.<android.content.Intent: int getIntExtra(java.lang.String,int)>("android.app.extra.EXTRA_NETWORK_LOGS_COUNT", 0);

        virtualinvoke r0.<android.app.admin.DeviceAdminReceiver: void onNetworkLogsAvailable(android.content.Context,android.content.Intent,long,int)>(r56, r1, $l0, $i1);

        goto label25;

     label18:
        $r20 = "android.app.action.USER_ADDED";

        $z17 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z17 == 0 goto label19;

        $r39 = virtualinvoke r1.<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>("android.intent.extra.USER");

        $r40 = (android.os.UserHandle) $r39;

        virtualinvoke r0.<android.app.admin.DeviceAdminReceiver: void onUserAdded(android.content.Context,android.content.Intent,android.os.UserHandle)>(r56, r1, $r40);

        goto label25;

     label19:
        $r21 = "android.app.action.USER_REMOVED";

        $z18 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z18 == 0 goto label20;

        $r37 = virtualinvoke r1.<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>("android.intent.extra.USER");

        $r38 = (android.os.UserHandle) $r37;

        virtualinvoke r0.<android.app.admin.DeviceAdminReceiver: void onUserRemoved(android.content.Context,android.content.Intent,android.os.UserHandle)>(r56, r1, $r38);

        goto label25;

     label20:
        $r22 = "android.app.action.USER_STARTED";

        $z19 = virtualinvoke $r22.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z19 == 0 goto label21;

        $r35 = virtualinvoke r1.<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>("android.intent.extra.USER");

        $r36 = (android.os.UserHandle) $r35;

        virtualinvoke r0.<android.app.admin.DeviceAdminReceiver: void onUserStarted(android.content.Context,android.content.Intent,android.os.UserHandle)>(r56, r1, $r36);

        goto label25;

     label21:
        $r23 = "android.app.action.USER_STOPPED";

        $z20 = virtualinvoke $r23.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z20 == 0 goto label22;

        $r33 = virtualinvoke r1.<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>("android.intent.extra.USER");

        $r34 = (android.os.UserHandle) $r33;

        virtualinvoke r0.<android.app.admin.DeviceAdminReceiver: void onUserStopped(android.content.Context,android.content.Intent,android.os.UserHandle)>(r56, r1, $r34);

        goto label25;

     label22:
        $r24 = "android.app.action.USER_SWITCHED";

        $z21 = virtualinvoke $r24.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z21 == 0 goto label23;

        $r31 = virtualinvoke r1.<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>("android.intent.extra.USER");

        $r32 = (android.os.UserHandle) $r31;

        virtualinvoke r0.<android.app.admin.DeviceAdminReceiver: void onUserSwitched(android.content.Context,android.content.Intent,android.os.UserHandle)>(r56, r1, $r32);

        goto label25;

     label23:
        $r25 = "android.app.action.TRANSFER_OWNERSHIP_COMPLETE";

        $z22 = virtualinvoke $r25.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z22 == 0 goto label24;

        $r29 = virtualinvoke r1.<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>("android.app.extra.TRANSFER_OWNERSHIP_ADMIN_EXTRAS_BUNDLE");

        $r30 = (android.os.PersistableBundle) $r29;

        virtualinvoke r0.<android.app.admin.DeviceAdminReceiver: void onTransferOwnershipComplete(android.content.Context,android.os.PersistableBundle)>(r56, $r30);

        goto label25;

     label24:
        $r26 = "android.app.action.AFFILIATED_PROFILE_TRANSFER_OWNERSHIP_COMPLETE";

        $z23 = virtualinvoke $r26.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z23 == 0 goto label25;

        $r27 = virtualinvoke r1.<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>("android.intent.extra.USER");

        $r28 = (android.os.UserHandle) $r27;

        virtualinvoke r0.<android.app.admin.DeviceAdminReceiver: void onTransferAffiliatedProfileOwnershipComplete(android.content.Context,android.os.UserHandle)>(r56, $r28);

        goto label25;

     label25:
        return;
    }

    public void onSecurityLogsAvailable(android.content.Context, android.content.Intent)
    {
        android.app.admin.DeviceAdminReceiver r0;
        android.content.Context r1;
        android.content.Intent r2;

        r0 := @this: android.app.admin.DeviceAdminReceiver;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.Intent;

        return;
    }

    public void onSystemUpdatePending(android.content.Context, android.content.Intent, long)
    {
        android.app.admin.DeviceAdminReceiver r0;
        android.content.Context r1;
        android.content.Intent r2;
        long l0;

        r0 := @this: android.app.admin.DeviceAdminReceiver;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.Intent;

        l0 := @parameter2: long;

        return;
    }

    public void onTransferAffiliatedProfileOwnershipComplete(android.content.Context, android.os.UserHandle)
    {
        android.app.admin.DeviceAdminReceiver r0;
        android.content.Context r1;
        android.os.UserHandle r2;

        r0 := @this: android.app.admin.DeviceAdminReceiver;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.os.UserHandle;

        return;
    }

    public void onTransferOwnershipComplete(android.content.Context, android.os.PersistableBundle)
    {
        android.app.admin.DeviceAdminReceiver r0;
        android.content.Context r1;
        android.os.PersistableBundle r2;

        r0 := @this: android.app.admin.DeviceAdminReceiver;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.os.PersistableBundle;

        return;
    }

    public void onUserAdded(android.content.Context, android.content.Intent, android.os.UserHandle)
    {
        android.app.admin.DeviceAdminReceiver r0;
        android.content.Context r1;
        android.content.Intent r2;
        android.os.UserHandle r3;

        r0 := @this: android.app.admin.DeviceAdminReceiver;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.Intent;

        r3 := @parameter2: android.os.UserHandle;

        return;
    }

    public void onUserRemoved(android.content.Context, android.content.Intent, android.os.UserHandle)
    {
        android.app.admin.DeviceAdminReceiver r0;
        android.content.Context r1;
        android.content.Intent r2;
        android.os.UserHandle r3;

        r0 := @this: android.app.admin.DeviceAdminReceiver;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.Intent;

        r3 := @parameter2: android.os.UserHandle;

        return;
    }

    public void onUserStarted(android.content.Context, android.content.Intent, android.os.UserHandle)
    {
        android.app.admin.DeviceAdminReceiver r0;
        android.content.Context r1;
        android.content.Intent r2;
        android.os.UserHandle r3;

        r0 := @this: android.app.admin.DeviceAdminReceiver;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.Intent;

        r3 := @parameter2: android.os.UserHandle;

        return;
    }

    public void onUserStopped(android.content.Context, android.content.Intent, android.os.UserHandle)
    {
        android.app.admin.DeviceAdminReceiver r0;
        android.content.Context r1;
        android.content.Intent r2;
        android.os.UserHandle r3;

        r0 := @this: android.app.admin.DeviceAdminReceiver;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.Intent;

        r3 := @parameter2: android.os.UserHandle;

        return;
    }

    public void onUserSwitched(android.content.Context, android.content.Intent, android.os.UserHandle)
    {
        android.app.admin.DeviceAdminReceiver r0;
        android.content.Context r1;
        android.content.Intent r2;
        android.os.UserHandle r3;

        r0 := @this: android.app.admin.DeviceAdminReceiver;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.Intent;

        r3 := @parameter2: android.os.UserHandle;

        return;
    }
}
