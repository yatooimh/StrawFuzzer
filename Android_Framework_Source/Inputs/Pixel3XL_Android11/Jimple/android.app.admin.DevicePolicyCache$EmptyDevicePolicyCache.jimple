class android.app.admin.DevicePolicyCache$EmptyDevicePolicyCache extends android.app.admin.DevicePolicyCache
{
    private static final android.app.admin.DevicePolicyCache$EmptyDevicePolicyCache INSTANCE;

    static void <clinit>()
    {
        android.app.admin.DevicePolicyCache$EmptyDevicePolicyCache $r0;

        $r0 = new android.app.admin.DevicePolicyCache$EmptyDevicePolicyCache;

        specialinvoke $r0.<android.app.admin.DevicePolicyCache$EmptyDevicePolicyCache: void <init>()>();

        <android.app.admin.DevicePolicyCache$EmptyDevicePolicyCache: android.app.admin.DevicePolicyCache$EmptyDevicePolicyCache INSTANCE> = $r0;

        return;
    }

    private void <init>()
    {
        android.app.admin.DevicePolicyCache$EmptyDevicePolicyCache r0;

        r0 := @this: android.app.admin.DevicePolicyCache$EmptyDevicePolicyCache;

        specialinvoke r0.<android.app.admin.DevicePolicyCache: void <init>()>();

        return;
    }

    static android.app.admin.DevicePolicyCache$EmptyDevicePolicyCache access$000()
    {
        android.app.admin.DevicePolicyCache$EmptyDevicePolicyCache $r0;

        $r0 = <android.app.admin.DevicePolicyCache$EmptyDevicePolicyCache: android.app.admin.DevicePolicyCache$EmptyDevicePolicyCache INSTANCE>;

        return $r0;
    }

    public int getPasswordQuality(int)
    {
        android.app.admin.DevicePolicyCache$EmptyDevicePolicyCache r0;
        int i0;

        r0 := @this: android.app.admin.DevicePolicyCache$EmptyDevicePolicyCache;

        i0 := @parameter0: int;

        return 0;
    }

    public boolean isScreenCaptureAllowed(int, boolean)
    {
        android.app.admin.DevicePolicyCache$EmptyDevicePolicyCache r0;
        int i0;
        boolean z0;

        r0 := @this: android.app.admin.DevicePolicyCache$EmptyDevicePolicyCache;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        return 1;
    }
}
