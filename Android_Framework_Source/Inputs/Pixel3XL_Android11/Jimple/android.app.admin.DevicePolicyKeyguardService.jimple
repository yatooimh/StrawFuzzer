public class android.app.admin.DevicePolicyKeyguardService extends android.app.Service
{
    private static final java.lang.String TAG;
    private android.app.admin.IKeyguardCallback mCallback;
    private final android.app.admin.IKeyguardClient mClient;
    private final android.os.Handler mHandler;

    public void <init>()
    {
        android.app.admin.DevicePolicyKeyguardService r0;
        android.os.Handler $r1;
        android.os.Looper $r2;
        android.app.admin.DevicePolicyKeyguardService$1 $r3;

        r0 := @this: android.app.admin.DevicePolicyKeyguardService;

        specialinvoke r0.<android.app.Service: void <init>()>();

        $r1 = new android.os.Handler;

        $r2 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke $r1.<android.os.Handler: void <init>(android.os.Looper)>($r2);

        r0.<android.app.admin.DevicePolicyKeyguardService: android.os.Handler mHandler> = $r1;

        $r3 = new android.app.admin.DevicePolicyKeyguardService$1;

        specialinvoke $r3.<android.app.admin.DevicePolicyKeyguardService$1: void <init>(android.app.admin.DevicePolicyKeyguardService)>(r0);

        r0.<android.app.admin.DevicePolicyKeyguardService: android.app.admin.IKeyguardClient mClient> = $r3;

        return;
    }

    static android.app.admin.IKeyguardCallback access$000(android.app.admin.DevicePolicyKeyguardService)
    {
        android.app.admin.DevicePolicyKeyguardService r0;
        android.app.admin.IKeyguardCallback $r1;

        r0 := @parameter0: android.app.admin.DevicePolicyKeyguardService;

        $r1 = r0.<android.app.admin.DevicePolicyKeyguardService: android.app.admin.IKeyguardCallback mCallback>;

        return $r1;
    }

    static android.app.admin.IKeyguardCallback access$002(android.app.admin.DevicePolicyKeyguardService, android.app.admin.IKeyguardCallback)
    {
        android.app.admin.DevicePolicyKeyguardService r0;
        android.app.admin.IKeyguardCallback r1;

        r0 := @parameter0: android.app.admin.DevicePolicyKeyguardService;

        r1 := @parameter1: android.app.admin.IKeyguardCallback;

        r0.<android.app.admin.DevicePolicyKeyguardService: android.app.admin.IKeyguardCallback mCallback> = r1;

        return r1;
    }

    static android.os.Handler access$100(android.app.admin.DevicePolicyKeyguardService)
    {
        android.app.admin.DevicePolicyKeyguardService r0;
        android.os.Handler $r1;

        r0 := @parameter0: android.app.admin.DevicePolicyKeyguardService;

        $r1 = r0.<android.app.admin.DevicePolicyKeyguardService: android.os.Handler mHandler>;

        return $r1;
    }

    public void dismiss()
    {
        android.app.admin.DevicePolicyKeyguardService r0;
        android.os.RemoteException $r1;
        android.app.admin.IKeyguardCallback r2;

        r0 := @this: android.app.admin.DevicePolicyKeyguardService;

        r2 = r0.<android.app.admin.DevicePolicyKeyguardService: android.app.admin.IKeyguardCallback mCallback>;

        if r2 != null goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("DevicePolicyKeyguardService", "KeyguardCallback was unexpectedly null");

        return;

     label1:
        interfaceinvoke r2.<android.app.admin.IKeyguardCallback: void onDismiss()>();

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("DevicePolicyKeyguardService", "onDismiss failed", $r1);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public final android.os.IBinder onBind(android.content.Intent)
    {
        android.app.admin.DevicePolicyKeyguardService r0;
        android.content.Intent r1;
        android.app.admin.IKeyguardClient $r2;
        android.os.IBinder $r3;

        r0 := @this: android.app.admin.DevicePolicyKeyguardService;

        r1 := @parameter0: android.content.Intent;

        $r2 = r0.<android.app.admin.DevicePolicyKeyguardService: android.app.admin.IKeyguardClient mClient>;

        $r3 = interfaceinvoke $r2.<android.app.admin.IKeyguardClient: android.os.IBinder asBinder()>();

        return $r3;
    }

    public android.view.SurfaceControlViewHost$SurfacePackage onCreateKeyguardSurface(android.os.IBinder)
    {
        android.app.admin.DevicePolicyKeyguardService r0;
        android.os.IBinder r1;

        r0 := @this: android.app.admin.DevicePolicyKeyguardService;

        r1 := @parameter0: android.os.IBinder;

        return null;
    }

    public void onDestroy()
    {
        android.app.admin.DevicePolicyKeyguardService r0;
        android.os.Handler $r1;

        r0 := @this: android.app.admin.DevicePolicyKeyguardService;

        $r1 = r0.<android.app.admin.DevicePolicyKeyguardService: android.os.Handler mHandler>;

        virtualinvoke $r1.<android.os.Handler: void removeCallbacksAndMessages(java.lang.Object)>(null);

        return;
    }

    public static void <clinit>()
    {
        <android.app.admin.DevicePolicyKeyguardService: java.lang.String TAG> = "DevicePolicyKeyguardService";

        return;
    }
}
