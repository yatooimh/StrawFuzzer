public class android.app.admin.FreezePeriod extends java.lang.Object
{
    static final int DAYS_IN_YEAR;
    private static final int DUMMY_YEAR;
    private static final java.lang.String TAG;
    private final java.time.MonthDay mEnd;
    private final int mEndDay;
    private final java.time.MonthDay mStart;
    private final int mStartDay;

    private void <init>(int, int)
    {
        android.app.admin.FreezePeriod r0;
        int i0, i1;
        java.time.MonthDay $r1, $r2;

        r0 := @this: android.app.admin.FreezePeriod;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.app.admin.FreezePeriod: int mStartDay> = i0;

        $r1 = staticinvoke <android.app.admin.FreezePeriod: java.time.MonthDay dayOfYearToMonthDay(int)>(i0);

        r0.<android.app.admin.FreezePeriod: java.time.MonthDay mStart> = $r1;

        r0.<android.app.admin.FreezePeriod: int mEndDay> = i1;

        $r2 = staticinvoke <android.app.admin.FreezePeriod: java.time.MonthDay dayOfYearToMonthDay(int)>(i1);

        r0.<android.app.admin.FreezePeriod: java.time.MonthDay mEnd> = $r2;

        return;
    }

    public void <init>(java.time.MonthDay, java.time.MonthDay)
    {
        android.app.admin.FreezePeriod r0;
        java.time.MonthDay r1, r2;
        java.time.LocalDate $r3, $r4;
        int $i0, $i1;

        r0 := @this: android.app.admin.FreezePeriod;

        r1 := @parameter0: java.time.MonthDay;

        r2 := @parameter1: java.time.MonthDay;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.app.admin.FreezePeriod: java.time.MonthDay mStart> = r1;

        $r3 = virtualinvoke r1.<java.time.MonthDay: java.time.LocalDate atYear(int)>(2001);

        $i0 = virtualinvoke $r3.<java.time.LocalDate: int getDayOfYear()>();

        r0.<android.app.admin.FreezePeriod: int mStartDay> = $i0;

        r0.<android.app.admin.FreezePeriod: java.time.MonthDay mEnd> = r2;

        $r4 = virtualinvoke r2.<java.time.MonthDay: java.time.LocalDate atYear(int)>(2001);

        $i1 = virtualinvoke $r4.<java.time.LocalDate: int getDayOfYear()>();

        r0.<android.app.admin.FreezePeriod: int mEndDay> = $i1;

        return;
    }

    static java.util.List canonicalizePeriods(java.util.List)
    {
        boolean[] r0;
        android.app.admin.FreezePeriod r1, $r4, $r6, $r7, $r9, $r11, $r14;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11, i12;
        boolean $z0, $z1, $z3;
        java.util.ArrayList $r2;
        java.lang.Object $r3, $r5, $r8, $r10, $r15;
        java.util.List r16;
        java.util.Iterator r17;

        r16 := @parameter0: java.util.List;

        r0 = newarray (boolean)[365];

        r17 = interfaceinvoke r16.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r15 = interfaceinvoke r17.<java.util.Iterator: java.lang.Object next()>();

        r1 = (android.app.admin.FreezePeriod) $r15;

        i10 = r1.<android.app.admin.FreezePeriod: int mStartDay>;

     label2:
        $i7 = virtualinvoke r1.<android.app.admin.FreezePeriod: int getEffectiveEndDay()>();

        if i10 > $i7 goto label3;

        $i8 = i10 - 1;

        $i9 = $i8 % 365;

        r0[$i9] = 1;

        i10 = i10 + 1;

        goto label2;

     label3:
        goto label1;

     label4:
        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        i11 = 0;

     label5:
        i0 = i11;

        if i11 >= 365 goto label8;

        $z1 = r0[i11];

        if $z1 != 0 goto label6;

        i11 = i11 + 1;

        goto label5;

     label6:
        if i11 >= 365 goto label7;

        $z3 = r0[i11];

        if $z3 == 0 goto label7;

        i11 = i11 + 1;

        goto label6;

     label7:
        $r14 = new android.app.admin.FreezePeriod;

        $i6 = i0 + 1;

        specialinvoke $r14.<android.app.admin.FreezePeriod: void <init>(int,int)>($i6, i11);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r14);

        goto label5;

     label8:
        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        i12 = $i1 - 1;

        if i12 <= 0 goto label9;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i12);

        $r4 = (android.app.admin.FreezePeriod) $r3;

        $i2 = $r4.<android.app.admin.FreezePeriod: int mEndDay>;

        if $i2 != 365 goto label9;

        $r5 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(0);

        $r6 = (android.app.admin.FreezePeriod) $r5;

        $i3 = $r6.<android.app.admin.FreezePeriod: int mStartDay>;

        if $i3 != 1 goto label9;

        $r7 = new android.app.admin.FreezePeriod;

        $r8 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i12);

        $r9 = (android.app.admin.FreezePeriod) $r8;

        $i4 = $r9.<android.app.admin.FreezePeriod: int mStartDay>;

        $r10 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(0);

        $r11 = (android.app.admin.FreezePeriod) $r10;

        $i5 = $r11.<android.app.admin.FreezePeriod: int mEndDay>;

        specialinvoke $r7.<android.app.admin.FreezePeriod: void <init>(int,int)>($i4, $i5);

        interfaceinvoke $r2.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i12, $r7);

        interfaceinvoke $r2.<java.util.List: java.lang.Object remove(int)>(0);

     label9:
        return $r2;
    }

    private static int dayOfYearDisregardLeapYear(java.time.LocalDate)
    {
        java.time.LocalDate r0, $r1;
        int $i0;

        r0 := @parameter0: java.time.LocalDate;

        $r1 = virtualinvoke r0.<java.time.LocalDate: java.time.LocalDate withYear(int)>(2001);

        $i0 = virtualinvoke $r1.<java.time.LocalDate: int getDayOfYear()>();

        return $i0;
    }

    private static java.time.MonthDay dayOfYearToMonthDay(int)
    {
        int i0, $i1;
        java.time.LocalDate r0;
        java.time.Month $r1;
        java.time.MonthDay $r2;

        i0 := @parameter0: int;

        r0 = staticinvoke <java.time.LocalDate: java.time.LocalDate ofYearDay(int,int)>(2001, i0);

        $r1 = virtualinvoke r0.<java.time.LocalDate: java.time.Month getMonth()>();

        $i1 = virtualinvoke r0.<java.time.LocalDate: int getDayOfMonth()>();

        $r2 = staticinvoke <java.time.MonthDay: java.time.MonthDay of(java.time.Month,int)>($r1, $i1);

        return $r2;
    }

    public static int distanceWithoutLeapYear(java.time.LocalDate, java.time.LocalDate)
    {
        java.time.LocalDate r0, r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @parameter0: java.time.LocalDate;

        r1 := @parameter1: java.time.LocalDate;

        $i0 = staticinvoke <android.app.admin.FreezePeriod: int dayOfYearDisregardLeapYear(java.time.LocalDate)>(r0);

        $i1 = staticinvoke <android.app.admin.FreezePeriod: int dayOfYearDisregardLeapYear(java.time.LocalDate)>(r1);

        $i2 = $i0 - $i1;

        $i3 = virtualinvoke r0.<java.time.LocalDate: int getYear()>();

        $i4 = virtualinvoke r1.<java.time.LocalDate: int getYear()>();

        $i5 = $i3 - $i4;

        $i6 = $i5 * 365;

        $i7 = $i2 + $i6;

        return $i7;
    }

    static void validateAgainstPreviousFreezePeriod(java.util.List, java.time.LocalDate, java.time.LocalDate, java.time.LocalDate)
    {
        java.time.LocalDate r0, $r13, $r35, $r37, $r54, r57, r58;
        java.util.Iterator r1;
        int $i0, $i2, $i3, $i5, $i6, $i9, $i10;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.StringBuilder $r2, $r14, $r23, $r38, $r45;
        java.lang.String $r9, $r22, $r43, $r50, r69;
        java.lang.Object $r10, $r11, $r16, $r19, $r29, $r32, $r34, $r36, $r53, $r55, $r61, $r66;
        java.time.chrono.ChronoLocalDate $r12, $r67;
        java.lang.IllegalStateException $r21;
        byte $b4, $b7, $b8;
        android.app.admin.SystemUpdatePolicy$ValidationFailedException $r44, $r51;
        android.util.Pair $r52, r64, r65;
        java.util.List r56, r60;
        android.app.admin.FreezePeriod r62, r63;
        long l11, l12;

        r56 := @parameter0: java.util.List;

        r57 := @parameter1: java.time.LocalDate;

        r0 := @parameter2: java.time.LocalDate;

        r58 := @parameter3: java.time.LocalDate;

        $i0 = interfaceinvoke r56.<java.util.List: int size()>();

        if $i0 == 0 goto label13;

        if r57 == null goto label13;

        if r0 != null goto label01;

        goto label13;

     label01:
        $z0 = virtualinvoke r57.<java.time.LocalDate: boolean isAfter(java.time.chrono.ChronoLocalDate)>(r58);

        if $z0 != 0 goto label02;

        $z3 = virtualinvoke r0.<java.time.LocalDate: boolean isAfter(java.time.chrono.ChronoLocalDate)>(r58);

        if $z3 == 0 goto label03;

     label02:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Previous period (");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r57);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") is after current date ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r58);

        $r9 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("FreezePeriod", $r9);

     label03:
        r60 = staticinvoke <android.app.admin.FreezePeriod: java.util.List canonicalizePeriods(java.util.List)>(r56);

        $r61 = interfaceinvoke r60.<java.util.List: java.lang.Object get(int)>(0);

        r62 = (android.app.admin.FreezePeriod) $r61;

        r1 = interfaceinvoke r60.<java.util.List: java.util.Iterator iterator()>();

     label04:
        r63 = r62;

        $z4 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label06;

        $r55 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r63 = (android.app.admin.FreezePeriod) $r55;

        $z2 = virtualinvoke r63.<android.app.admin.FreezePeriod: boolean contains(java.time.LocalDate)>(r58);

        if $z2 != 0 goto label06;

        $i9 = r63.<android.app.admin.FreezePeriod: int mStartDay>;

        $i10 = staticinvoke <android.app.admin.FreezePeriod: int dayOfYearDisregardLeapYear(java.time.LocalDate)>(r58);

        if $i9 <= $i10 goto label05;

        goto label06;

     label05:
        goto label04;

     label06:
        r64 = virtualinvoke r63.<android.app.admin.FreezePeriod: android.util.Pair toCurrentOrFutureRealDates(java.time.LocalDate)>(r58);

        r65 = r64;

        $r66 = r64.<android.util.Pair: java.lang.Object first>;

        $r67 = (java.time.chrono.ChronoLocalDate) $r66;

        $z5 = virtualinvoke r58.<java.time.LocalDate: boolean isAfter(java.time.chrono.ChronoLocalDate)>($r67);

        if $z5 == 0 goto label07;

        $r52 = new android.util.Pair;

        $r53 = r64.<android.util.Pair: java.lang.Object second>;

        $r54 = (java.time.LocalDate) $r53;

        specialinvoke $r52.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>(r58, $r54);

        r65 = $r52;

     label07:
        $r10 = r65.<android.util.Pair: java.lang.Object first>;

        $r13 = (java.time.LocalDate) $r10;

        $r11 = r65.<android.util.Pair: java.lang.Object second>;

        $r12 = (java.time.chrono.ChronoLocalDate) $r11;

        $z1 = virtualinvoke $r13.<java.time.LocalDate: boolean isAfter(java.time.chrono.ChronoLocalDate)>($r12);

        if $z1 != 0 goto label12;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Prev: ");

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r57);

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; cur: ");

        $r29 = r65.<android.util.Pair: java.lang.Object first>;

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r29);

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r32 = r65.<android.util.Pair: java.lang.Object second>;

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r32);

        r69 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        $r34 = r65.<android.util.Pair: java.lang.Object first>;

        $r35 = (java.time.LocalDate) $r34;

        $i2 = staticinvoke <android.app.admin.FreezePeriod: int distanceWithoutLeapYear(java.time.LocalDate,java.time.LocalDate)>($r35, r0);

        $i3 = $i2 - 1;

        l11 = (long) $i3;

        $b4 = l11 cmp 0L;

        if $b4 <= 0 goto label09;

        $b8 = l11 cmp 60L;

        if $b8 < 0 goto label08;

        goto label10;

     label08:
        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Previous freeze period too close to new period: ");

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l11);

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r69);

        $r50 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        $r51 = staticinvoke <android.app.admin.SystemUpdatePolicy$ValidationFailedException: android.app.admin.SystemUpdatePolicy$ValidationFailedException combinedPeriodTooClose(java.lang.String)>($r50);

        throw $r51;

     label09:
        $r36 = r65.<android.util.Pair: java.lang.Object second>;

        $r37 = (java.time.LocalDate) $r36;

        $i5 = staticinvoke <android.app.admin.FreezePeriod: int distanceWithoutLeapYear(java.time.LocalDate,java.time.LocalDate)>($r37, r57);

        $i6 = $i5 + 1;

        l12 = (long) $i6;

        $b7 = l12 cmp 90L;

        if $b7 > 0 goto label11;

     label10:
        return;

     label11:
        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Combined freeze period exceeds maximum days: ");

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l12);

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r69);

        $r43 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        $r44 = staticinvoke <android.app.admin.SystemUpdatePolicy$ValidationFailedException: android.app.admin.SystemUpdatePolicy$ValidationFailedException combinedPeriodTooLong(java.lang.String)>($r43);

        throw $r44;

     label12:
        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Current freeze dates inverted: ");

        $r16 = r65.<android.util.Pair: java.lang.Object first>;

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $r19 = r65.<android.util.Pair: java.lang.Object second>;

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19);

        $r21 = new java.lang.IllegalStateException;

        $r22 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r21.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r22);

        throw $r21;

     label13:
        return;
    }

    static void validatePeriods(java.util.List)
    {
        android.app.admin.FreezePeriod r0, r25;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, i16;
        android.app.admin.SystemUpdatePolicy$ValidationFailedException $r1, $r10, $r21;
        java.lang.Object $r2, $r11, $r22;
        java.lang.StringBuilder $r3, $r12;
        java.lang.String $r9, $r20;
        boolean $z0;
        java.util.List r23, r24;

        r23 := @parameter0: java.util.List;

        r24 = staticinvoke <android.app.admin.FreezePeriod: java.util.List canonicalizePeriods(java.util.List)>(r23);

        $i0 = interfaceinvoke r24.<java.util.List: int size()>();

        $i1 = interfaceinvoke r23.<java.util.List: int size()>();

        if $i0 != $i1 goto label10;

        i15 = 0;

     label01:
        $i2 = interfaceinvoke r24.<java.util.List: int size()>();

        if i15 >= $i2 goto label09;

        $r2 = interfaceinvoke r24.<java.util.List: java.lang.Object get(int)>(i15);

        r0 = (android.app.admin.FreezePeriod) $r2;

        $i3 = virtualinvoke r0.<android.app.admin.FreezePeriod: int getLength()>();

        if $i3 > 90 goto label08;

        if i15 <= 0 goto label02;

        $i14 = i15 - 1;

        $r22 = interfaceinvoke r24.<java.util.List: java.lang.Object get(int)>($i14);

        r25 = (android.app.admin.FreezePeriod) $r22;

        goto label03;

     label02:
        $i5 = interfaceinvoke r24.<java.util.List: int size()>();

        $i6 = $i5 - 1;

        $r11 = interfaceinvoke r24.<java.util.List: java.lang.Object get(int)>($i6);

        r25 = (android.app.admin.FreezePeriod) $r11;

     label03:
        if r25 == r0 goto label07;

        if i15 != 0 goto label04;

        $z0 = virtualinvoke r25.<android.app.admin.FreezePeriod: boolean isWrapped()>();

        if $z0 != 0 goto label04;

        $i12 = r0.<android.app.admin.FreezePeriod: int mStartDay>;

        $i10 = r25.<android.app.admin.FreezePeriod: int mEndDay>;

        $i11 = 365 - $i10;

        $i13 = $i12 + $i11;

        i16 = $i13 - 1;

        goto label05;

     label04:
        $i8 = r0.<android.app.admin.FreezePeriod: int mStartDay>;

        $i7 = r25.<android.app.admin.FreezePeriod: int mEndDay>;

        $i9 = $i8 - $i7;

        i16 = $i9 - 1;

     label05:
        if i16 < 60 goto label06;

        goto label07;

     label06:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Freeze periods ");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r25);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and ");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" are too close together: ");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i16);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" days apart");

        $r20 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r21 = staticinvoke <android.app.admin.SystemUpdatePolicy$ValidationFailedException: android.app.admin.SystemUpdatePolicy$ValidationFailedException freezePeriodTooClose(java.lang.String)>($r20);

        throw $r21;

     label07:
        i15 = i15 + 1;

        goto label01;

     label08:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Freeze period ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is too long: ");

        $i4 = virtualinvoke r0.<android.app.admin.FreezePeriod: int getLength()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" days");

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = staticinvoke <android.app.admin.SystemUpdatePolicy$ValidationFailedException: android.app.admin.SystemUpdatePolicy$ValidationFailedException freezePeriodTooLong(java.lang.String)>($r9);

        throw $r10;

     label09:
        return;

     label10:
        $r1 = staticinvoke <android.app.admin.SystemUpdatePolicy$ValidationFailedException: android.app.admin.SystemUpdatePolicy$ValidationFailedException duplicateOrOverlapPeriods()>();

        throw $r1;
    }

    boolean after(java.time.LocalDate)
    {
        android.app.admin.FreezePeriod r0;
        java.time.LocalDate r1;
        int $i0, $i1;
        boolean z0;

        r0 := @this: android.app.admin.FreezePeriod;

        r1 := @parameter0: java.time.LocalDate;

        $i0 = r0.<android.app.admin.FreezePeriod: int mStartDay>;

        $i1 = staticinvoke <android.app.admin.FreezePeriod: int dayOfYearDisregardLeapYear(java.time.LocalDate)>(r1);

        if $i0 <= $i1 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    boolean contains(java.time.LocalDate)
    {
        android.app.admin.FreezePeriod r0;
        java.time.LocalDate r1;
        int i0, $i1, $i2, $i3, $i4;
        boolean z0, z2, z3;

        r0 := @this: android.app.admin.FreezePeriod;

        r1 := @parameter0: java.time.LocalDate;

        i0 = staticinvoke <android.app.admin.FreezePeriod: int dayOfYearDisregardLeapYear(java.time.LocalDate)>(r1);

        z0 = virtualinvoke r0.<android.app.admin.FreezePeriod: boolean isWrapped()>();

        z2 = 0;

        if z0 != 0 goto label2;

        z3 = 0;

        $i3 = r0.<android.app.admin.FreezePeriod: int mStartDay>;

        if $i3 > i0 goto label1;

        z3 = 0;

        $i4 = r0.<android.app.admin.FreezePeriod: int mEndDay>;

        if i0 > $i4 goto label1;

        z3 = 1;

     label1:
        return z3;

     label2:
        $i1 = r0.<android.app.admin.FreezePeriod: int mStartDay>;

        if $i1 <= i0 goto label3;

        $i2 = r0.<android.app.admin.FreezePeriod: int mEndDay>;

        if i0 > $i2 goto label4;

     label3:
        z2 = 1;

     label4:
        return z2;
    }

    int getEffectiveEndDay()
    {
        android.app.admin.FreezePeriod r0;
        boolean $z0;
        int $i0, $i1, $i2;

        r0 := @this: android.app.admin.FreezePeriod;

        $z0 = virtualinvoke r0.<android.app.admin.FreezePeriod: boolean isWrapped()>();

        if $z0 != 0 goto label1;

        $i2 = r0.<android.app.admin.FreezePeriod: int mEndDay>;

        return $i2;

     label1:
        $i0 = r0.<android.app.admin.FreezePeriod: int mEndDay>;

        $i1 = $i0 + 365;

        return $i1;
    }

    public java.time.MonthDay getEnd()
    {
        android.app.admin.FreezePeriod r0;
        java.time.MonthDay $r1;

        r0 := @this: android.app.admin.FreezePeriod;

        $r1 = r0.<android.app.admin.FreezePeriod: java.time.MonthDay mEnd>;

        return $r1;
    }

    int getLength()
    {
        android.app.admin.FreezePeriod r0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.app.admin.FreezePeriod;

        $i0 = virtualinvoke r0.<android.app.admin.FreezePeriod: int getEffectiveEndDay()>();

        $i1 = r0.<android.app.admin.FreezePeriod: int mStartDay>;

        $i2 = $i0 - $i1;

        $i3 = $i2 + 1;

        return $i3;
    }

    public java.time.MonthDay getStart()
    {
        android.app.admin.FreezePeriod r0;
        java.time.MonthDay $r1;

        r0 := @this: android.app.admin.FreezePeriod;

        $r1 = r0.<android.app.admin.FreezePeriod: java.time.MonthDay mStart>;

        return $r1;
    }

    boolean isWrapped()
    {
        android.app.admin.FreezePeriod r0;
        int $i0, $i1;
        boolean z0;

        r0 := @this: android.app.admin.FreezePeriod;

        $i1 = r0.<android.app.admin.FreezePeriod: int mEndDay>;

        $i0 = r0.<android.app.admin.FreezePeriod: int mStartDay>;

        if $i1 >= $i0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    android.util.Pair toCurrentOrFutureRealDates(java.time.LocalDate)
    {
        android.app.admin.FreezePeriod r0;
        java.time.LocalDate r1, $r3, $r4, $r5, $r6;
        boolean $z0, z1;
        int $i0, $i1, i2, $i4, $i5, $i6, $i7, $i8, $i9, i10;
        byte b3;
        android.util.Pair $r2;

        r0 := @this: android.app.admin.FreezePeriod;

        r1 := @parameter0: java.time.LocalDate;

        i2 = staticinvoke <android.app.admin.FreezePeriod: int dayOfYearDisregardLeapYear(java.time.LocalDate)>(r1);

        $z0 = virtualinvoke r0.<android.app.admin.FreezePeriod: boolean contains(java.time.LocalDate)>(r1);

        if $z0 == 0 goto label2;

        $i1 = r0.<android.app.admin.FreezePeriod: int mStartDay>;

        if $i1 > i2 goto label1;

        b3 = 0;

        z1 = virtualinvoke r0.<android.app.admin.FreezePeriod: boolean isWrapped()>();

        goto label4;

     label1:
        b3 = -1;

        z1 = 0;

        goto label4;

     label2:
        $i0 = r0.<android.app.admin.FreezePeriod: int mStartDay>;

        if $i0 <= i2 goto label3;

        b3 = 0;

        z1 = virtualinvoke r0.<android.app.admin.FreezePeriod: boolean isWrapped()>();

        goto label4;

     label3:
        b3 = 1;

        z1 = 1;

     label4:
        $r2 = new android.util.Pair;

        $i4 = r0.<android.app.admin.FreezePeriod: int mStartDay>;

        $r3 = staticinvoke <java.time.LocalDate: java.time.LocalDate ofYearDay(int,int)>(2001, $i4);

        $i5 = virtualinvoke r1.<java.time.LocalDate: int getYear()>();

        $i6 = $i5 + b3;

        $r4 = virtualinvoke $r3.<java.time.LocalDate: java.time.LocalDate withYear(int)>($i6);

        $i7 = r0.<android.app.admin.FreezePeriod: int mEndDay>;

        $r5 = staticinvoke <java.time.LocalDate: java.time.LocalDate ofYearDay(int,int)>(2001, $i7);

        $i8 = virtualinvoke r1.<java.time.LocalDate: int getYear()>();

        i10 = (int) z1;

        $i9 = $i8 + i10;

        $r6 = virtualinvoke $r5.<java.time.LocalDate: java.time.LocalDate withYear(int)>($i9);

        specialinvoke $r2.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r4, $r6);

        return $r2;
    }

    public java.lang.String toString()
    {
        android.app.admin.FreezePeriod r0;
        java.time.format.DateTimeFormatter r1;
        java.lang.StringBuilder $r3;
        int $i0, $i1;
        java.time.LocalDate $r4, $r8;
        java.lang.String $r5, $r9, $r11;

        r0 := @this: android.app.admin.FreezePeriod;

        r1 = staticinvoke <java.time.format.DateTimeFormatter: java.time.format.DateTimeFormatter ofPattern(java.lang.String)>("MMM dd");

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $i0 = r0.<android.app.admin.FreezePeriod: int mStartDay>;

        $r4 = staticinvoke <java.time.LocalDate: java.time.LocalDate ofYearDay(int,int)>(2001, $i0);

        $r5 = virtualinvoke $r4.<java.time.LocalDate: java.lang.String format(java.time.format.DateTimeFormatter)>(r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - ");

        $i1 = r0.<android.app.admin.FreezePeriod: int mEndDay>;

        $r8 = staticinvoke <java.time.LocalDate: java.time.LocalDate ofYearDay(int,int)>(2001, $i1);

        $r9 = virtualinvoke $r8.<java.time.LocalDate: java.lang.String format(java.time.format.DateTimeFormatter)>(r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;
    }

    public static void <clinit>()
    {
        <android.app.admin.FreezePeriod: java.lang.String TAG> = "FreezePeriod";

        <android.app.admin.FreezePeriod: int DUMMY_YEAR> = 2001;

        <android.app.admin.FreezePeriod: int DAYS_IN_YEAR> = 365;

        return;
    }
}
