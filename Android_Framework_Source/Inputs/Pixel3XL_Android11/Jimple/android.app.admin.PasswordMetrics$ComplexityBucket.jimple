abstract enum class android.app.admin.PasswordMetrics$ComplexityBucket extends java.lang.Enum
{
    private static final android.app.admin.PasswordMetrics$ComplexityBucket[] $VALUES;
    public static final enum android.app.admin.PasswordMetrics$ComplexityBucket BUCKET_HIGH;
    public static final enum android.app.admin.PasswordMetrics$ComplexityBucket BUCKET_LOW;
    public static final enum android.app.admin.PasswordMetrics$ComplexityBucket BUCKET_MEDIUM;
    public static final enum android.app.admin.PasswordMetrics$ComplexityBucket BUCKET_NONE;
    int mComplexityLevel;

    static void <clinit>()
    {
        android.app.admin.PasswordMetrics$ComplexityBucket$1 $r1;
        android.app.admin.PasswordMetrics$ComplexityBucket$2 $r2;
        android.app.admin.PasswordMetrics$ComplexityBucket$3 $r3;
        android.app.admin.PasswordMetrics$ComplexityBucket$4 $r4;
        android.app.admin.PasswordMetrics$ComplexityBucket[] $r5;
        android.app.admin.PasswordMetrics$ComplexityBucket $r6, $r7, $r8;

        $r1 = new android.app.admin.PasswordMetrics$ComplexityBucket$1;

        specialinvoke $r1.<android.app.admin.PasswordMetrics$ComplexityBucket$1: void <init>(java.lang.String,int,int)>("BUCKET_HIGH", 0, 327680);

        <android.app.admin.PasswordMetrics$ComplexityBucket: android.app.admin.PasswordMetrics$ComplexityBucket BUCKET_HIGH> = $r1;

        $r2 = new android.app.admin.PasswordMetrics$ComplexityBucket$2;

        specialinvoke $r2.<android.app.admin.PasswordMetrics$ComplexityBucket$2: void <init>(java.lang.String,int,int)>("BUCKET_MEDIUM", 1, 196608);

        <android.app.admin.PasswordMetrics$ComplexityBucket: android.app.admin.PasswordMetrics$ComplexityBucket BUCKET_MEDIUM> = $r2;

        $r3 = new android.app.admin.PasswordMetrics$ComplexityBucket$3;

        specialinvoke $r3.<android.app.admin.PasswordMetrics$ComplexityBucket$3: void <init>(java.lang.String,int,int)>("BUCKET_LOW", 2, 65536);

        <android.app.admin.PasswordMetrics$ComplexityBucket: android.app.admin.PasswordMetrics$ComplexityBucket BUCKET_LOW> = $r3;

        $r4 = new android.app.admin.PasswordMetrics$ComplexityBucket$4;

        specialinvoke $r4.<android.app.admin.PasswordMetrics$ComplexityBucket$4: void <init>(java.lang.String,int,int)>("BUCKET_NONE", 3, 0);

        <android.app.admin.PasswordMetrics$ComplexityBucket: android.app.admin.PasswordMetrics$ComplexityBucket BUCKET_NONE> = $r4;

        $r5 = newarray (android.app.admin.PasswordMetrics$ComplexityBucket)[4];

        $r6 = <android.app.admin.PasswordMetrics$ComplexityBucket: android.app.admin.PasswordMetrics$ComplexityBucket BUCKET_HIGH>;

        $r5[0] = $r6;

        $r7 = <android.app.admin.PasswordMetrics$ComplexityBucket: android.app.admin.PasswordMetrics$ComplexityBucket BUCKET_MEDIUM>;

        $r5[1] = $r7;

        $r8 = <android.app.admin.PasswordMetrics$ComplexityBucket: android.app.admin.PasswordMetrics$ComplexityBucket BUCKET_LOW>;

        $r5[2] = $r8;

        $r5[3] = $r4;

        <android.app.admin.PasswordMetrics$ComplexityBucket: android.app.admin.PasswordMetrics$ComplexityBucket[] $VALUES> = $r5;

        return;
    }

    private void <init>(java.lang.String, int, int)
    {
        android.app.admin.PasswordMetrics$ComplexityBucket r0;
        java.lang.String r1;
        int i0, i1;

        r0 := @this: android.app.admin.PasswordMetrics$ComplexityBucket;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        r0.<android.app.admin.PasswordMetrics$ComplexityBucket: int mComplexityLevel> = i1;

        return;
    }

    void <init>(java.lang.String, int, int, android.app.admin.PasswordMetrics$1)
    {
        android.app.admin.PasswordMetrics$ComplexityBucket r0;
        java.lang.String r1;
        int i0, i1;
        android.app.admin.PasswordMetrics$1 r2;

        r0 := @this: android.app.admin.PasswordMetrics$ComplexityBucket;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: android.app.admin.PasswordMetrics$1;

        specialinvoke r0.<android.app.admin.PasswordMetrics$ComplexityBucket: void <init>(java.lang.String,int,int)>(r1, i0, i1);

        return;
    }

    static android.app.admin.PasswordMetrics$ComplexityBucket forComplexity(int)
    {
        int i0, i1, $i2, i3;
        android.app.admin.PasswordMetrics$ComplexityBucket r0;
        java.lang.StringBuilder $r1;
        java.lang.IllegalArgumentException $r4;
        java.lang.String $r5;
        android.app.admin.PasswordMetrics$ComplexityBucket[] r6;

        i0 := @parameter0: int;

        r6 = staticinvoke <android.app.admin.PasswordMetrics$ComplexityBucket: android.app.admin.PasswordMetrics$ComplexityBucket[] values()>();

        i1 = lengthof r6;

        i3 = 0;

     label1:
        if i3 >= i1 goto label3;

        r0 = r6[i3];

        $i2 = r0.<android.app.admin.PasswordMetrics$ComplexityBucket: int mComplexityLevel>;

        if $i2 != i0 goto label2;

        return r0;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid complexity level: ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r4;
    }

    public static android.app.admin.PasswordMetrics$ComplexityBucket valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        android.app.admin.PasswordMetrics$ComplexityBucket $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Landroid/app/admin/PasswordMetrics$ComplexityBucket;", r0);

        $r2 = (android.app.admin.PasswordMetrics$ComplexityBucket) $r1;

        return $r2;
    }

    public static android.app.admin.PasswordMetrics$ComplexityBucket[] values()
    {
        android.app.admin.PasswordMetrics$ComplexityBucket[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <android.app.admin.PasswordMetrics$ComplexityBucket: android.app.admin.PasswordMetrics$ComplexityBucket[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (android.app.admin.PasswordMetrics$ComplexityBucket[]) $r1;

        return $r2;
    }

    abstract boolean allowsCredType(int);

    abstract boolean allowsNumericPassword();

    abstract boolean canHaveSequence();

    abstract int getMinimumLength(boolean);
}
