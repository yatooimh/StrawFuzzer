public class android.app.assist.AssistStructure$WindowNode extends java.lang.Object
{
    final int mDisplayId;
    final int mHeight;
    final android.app.assist.AssistStructure$ViewNode mRoot;
    final java.lang.CharSequence mTitle;
    final int mWidth;
    final int mX;
    final int mY;

    void <init>(android.app.assist.AssistStructure$ParcelTransferReader)
    {
        android.app.assist.AssistStructure$WindowNode r0;
        android.app.assist.AssistStructure$ParcelTransferReader r1;
        android.os.Parcel r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        android.os.Parcelable$Creator $r3;
        java.lang.Object $r4;
        java.lang.CharSequence $r5;
        android.app.assist.AssistStructure$ViewNode $r6;

        r0 := @this: android.app.assist.AssistStructure$WindowNode;

        r1 := @parameter0: android.app.assist.AssistStructure$ParcelTransferReader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r2 = virtualinvoke r1.<android.app.assist.AssistStructure$ParcelTransferReader: android.os.Parcel readParcel(int,int)>(286331153, 0);

        $i0 = r1.<android.app.assist.AssistStructure$ParcelTransferReader: int mNumReadWindows>;

        $i1 = $i0 + 1;

        r1.<android.app.assist.AssistStructure$ParcelTransferReader: int mNumReadWindows> = $i1;

        $i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        r0.<android.app.assist.AssistStructure$WindowNode: int mX> = $i2;

        $i3 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        r0.<android.app.assist.AssistStructure$WindowNode: int mY> = $i3;

        $i4 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        r0.<android.app.assist.AssistStructure$WindowNode: int mWidth> = $i4;

        $i5 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        r0.<android.app.assist.AssistStructure$WindowNode: int mHeight> = $i5;

        $r3 = <android.text.TextUtils: android.os.Parcelable$Creator CHAR_SEQUENCE_CREATOR>;

        $r4 = interfaceinvoke $r3.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        $r5 = (java.lang.CharSequence) $r4;

        r0.<android.app.assist.AssistStructure$WindowNode: java.lang.CharSequence mTitle> = $r5;

        $i6 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        r0.<android.app.assist.AssistStructure$WindowNode: int mDisplayId> = $i6;

        $r6 = new android.app.assist.AssistStructure$ViewNode;

        specialinvoke $r6.<android.app.assist.AssistStructure$ViewNode: void <init>(android.app.assist.AssistStructure$ParcelTransferReader,int)>(r1, 0);

        r0.<android.app.assist.AssistStructure$WindowNode: android.app.assist.AssistStructure$ViewNode mRoot> = $r6;

        return;
    }

    void <init>(android.app.assist.AssistStructure, android.view.ViewRootImpl, boolean, int)
    {
        android.app.assist.AssistStructure$WindowNode r0;
        android.view.ViewRootImpl r1;
        boolean z0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        android.view.View r2;
        android.graphics.Rect $r3;
        java.lang.CharSequence $r4;
        android.app.assist.AssistStructure$ViewNode $r5;
        android.app.assist.AssistStructure$ViewNodeBuilder $r6;
        android.content.Context $r7, $r8;
        android.app.assist.AssistStructure r9;

        r0 := @this: android.app.assist.AssistStructure$WindowNode;

        r9 := @parameter0: android.app.assist.AssistStructure;

        r1 := @parameter1: android.view.ViewRootImpl;

        z0 := @parameter2: boolean;

        i0 := @parameter3: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r2 = virtualinvoke r1.<android.view.ViewRootImpl: android.view.View getView()>();

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        virtualinvoke r2.<android.view.View: void getBoundsOnScreen(android.graphics.Rect)>($r3);

        $i1 = $r3.<android.graphics.Rect: int left>;

        $i2 = virtualinvoke r2.<android.view.View: int getLeft()>();

        $i3 = $i1 - $i2;

        r0.<android.app.assist.AssistStructure$WindowNode: int mX> = $i3;

        $i4 = $r3.<android.graphics.Rect: int top>;

        $i5 = virtualinvoke r2.<android.view.View: int getTop()>();

        $i6 = $i4 - $i5;

        r0.<android.app.assist.AssistStructure$WindowNode: int mY> = $i6;

        $i7 = virtualinvoke $r3.<android.graphics.Rect: int width()>();

        r0.<android.app.assist.AssistStructure$WindowNode: int mWidth> = $i7;

        $i8 = virtualinvoke $r3.<android.graphics.Rect: int height()>();

        r0.<android.app.assist.AssistStructure$WindowNode: int mHeight> = $i8;

        $r4 = virtualinvoke r1.<android.view.ViewRootImpl: java.lang.CharSequence getTitle()>();

        r0.<android.app.assist.AssistStructure$WindowNode: java.lang.CharSequence mTitle> = $r4;

        $i9 = virtualinvoke r1.<android.view.ViewRootImpl: int getDisplayId()>();

        r0.<android.app.assist.AssistStructure$WindowNode: int mDisplayId> = $i9;

        $r5 = new android.app.assist.AssistStructure$ViewNode;

        specialinvoke $r5.<android.app.assist.AssistStructure$ViewNode: void <init>()>();

        r0.<android.app.assist.AssistStructure$WindowNode: android.app.assist.AssistStructure$ViewNode mRoot> = $r5;

        $r6 = new android.app.assist.AssistStructure$ViewNodeBuilder;

        specialinvoke $r6.<android.app.assist.AssistStructure$ViewNodeBuilder: void <init>(android.app.assist.AssistStructure,android.app.assist.AssistStructure$ViewNode,boolean)>(r9, $r5, 0);

        $i10 = virtualinvoke r1.<android.view.ViewRootImpl: int getWindowFlags()>();

        $i11 = $i10 & 8192;

        if $i11 == 0 goto label2;

        if z0 == 0 goto label1;

        $r8 = virtualinvoke r2.<android.view.View: android.content.Context getContext()>();

        $i13 = virtualinvoke r0.<android.app.assist.AssistStructure$WindowNode: int resolveViewAutofillFlags(android.content.Context,int)>($r8, i0);

        virtualinvoke r2.<android.view.View: void onProvideAutofillStructure(android.view.ViewStructure,int)>($r6, $i13);

        goto label2;

     label1:
        virtualinvoke r2.<android.view.View: void onProvideStructure(android.view.ViewStructure)>($r6);

        virtualinvoke $r6.<android.app.assist.AssistStructure$ViewNodeBuilder: void setAssistBlocked(boolean)>(1);

        return;

     label2:
        if z0 == 0 goto label3;

        $r7 = virtualinvoke r2.<android.view.View: android.content.Context getContext()>();

        $i12 = virtualinvoke r0.<android.app.assist.AssistStructure$WindowNode: int resolveViewAutofillFlags(android.content.Context,int)>($r7, i0);

        virtualinvoke r2.<android.view.View: void dispatchProvideAutofillStructure(android.view.ViewStructure,int)>($r6, $i12);

        goto label4;

     label3:
        virtualinvoke r2.<android.view.View: void dispatchProvideStructure(android.view.ViewStructure)>($r6);

     label4:
        return;
    }

    public int getDisplayId()
    {
        android.app.assist.AssistStructure$WindowNode r0;
        int $i0;

        r0 := @this: android.app.assist.AssistStructure$WindowNode;

        $i0 = r0.<android.app.assist.AssistStructure$WindowNode: int mDisplayId>;

        return $i0;
    }

    public int getHeight()
    {
        android.app.assist.AssistStructure$WindowNode r0;
        int $i0;

        r0 := @this: android.app.assist.AssistStructure$WindowNode;

        $i0 = r0.<android.app.assist.AssistStructure$WindowNode: int mHeight>;

        return $i0;
    }

    public int getLeft()
    {
        android.app.assist.AssistStructure$WindowNode r0;
        int $i0;

        r0 := @this: android.app.assist.AssistStructure$WindowNode;

        $i0 = r0.<android.app.assist.AssistStructure$WindowNode: int mX>;

        return $i0;
    }

    public android.app.assist.AssistStructure$ViewNode getRootViewNode()
    {
        android.app.assist.AssistStructure$WindowNode r0;
        android.app.assist.AssistStructure$ViewNode $r1;

        r0 := @this: android.app.assist.AssistStructure$WindowNode;

        $r1 = r0.<android.app.assist.AssistStructure$WindowNode: android.app.assist.AssistStructure$ViewNode mRoot>;

        return $r1;
    }

    public java.lang.CharSequence getTitle()
    {
        android.app.assist.AssistStructure$WindowNode r0;
        java.lang.CharSequence $r1;

        r0 := @this: android.app.assist.AssistStructure$WindowNode;

        $r1 = r0.<android.app.assist.AssistStructure$WindowNode: java.lang.CharSequence mTitle>;

        return $r1;
    }

    public int getTop()
    {
        android.app.assist.AssistStructure$WindowNode r0;
        int $i0;

        r0 := @this: android.app.assist.AssistStructure$WindowNode;

        $i0 = r0.<android.app.assist.AssistStructure$WindowNode: int mY>;

        return $i0;
    }

    public int getWidth()
    {
        android.app.assist.AssistStructure$WindowNode r0;
        int $i0;

        r0 := @this: android.app.assist.AssistStructure$WindowNode;

        $i0 = r0.<android.app.assist.AssistStructure$WindowNode: int mWidth>;

        return $i0;
    }

    int resolveViewAutofillFlags(android.content.Context, int)
    {
        android.app.assist.AssistStructure$WindowNode r0;
        android.content.Context r1;
        int $i0, i1;
        boolean $z0;
        byte b2;

        r0 := @this: android.app.assist.AssistStructure$WindowNode;

        r1 := @parameter0: android.content.Context;

        i1 := @parameter1: int;

        $i0 = i1 & 1;

        if $i0 != 0 goto label2;

        $z0 = virtualinvoke r1.<android.content.Context: boolean isAutofillCompatibilityEnabled()>();

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        b2 = 0;

        goto label3;

     label2:
        b2 = 1;

     label3:
        return b2;
    }

    void writeSelfToParcel(android.os.Parcel, android.os.PooledStringWriter, float[])
    {
        android.app.assist.AssistStructure$WindowNode r0;
        android.os.Parcel r1;
        android.os.PooledStringWriter r2;
        float[] r3;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.CharSequence $r4;

        r0 := @this: android.app.assist.AssistStructure$WindowNode;

        r1 := @parameter0: android.os.Parcel;

        r2 := @parameter1: android.os.PooledStringWriter;

        r3 := @parameter2: float[];

        $i0 = r0.<android.app.assist.AssistStructure$WindowNode: int mX>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i0);

        $i1 = r0.<android.app.assist.AssistStructure$WindowNode: int mY>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $i2 = r0.<android.app.assist.AssistStructure$WindowNode: int mWidth>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i2);

        $i3 = r0.<android.app.assist.AssistStructure$WindowNode: int mHeight>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i3);

        $r4 = r0.<android.app.assist.AssistStructure$WindowNode: java.lang.CharSequence mTitle>;

        staticinvoke <android.text.TextUtils: void writeToParcel(java.lang.CharSequence,android.os.Parcel,int)>($r4, r1, 0);

        $i4 = r0.<android.app.assist.AssistStructure$WindowNode: int mDisplayId>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i4);

        return;
    }
}
