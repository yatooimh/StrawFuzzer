public abstract class android.app.backup.BackupAgent extends android.content.ContextWrapper
{
    private static final boolean DEBUG;
    public static final int FLAG_CLIENT_SIDE_ENCRYPTION_ENABLED;
    public static final int FLAG_DEVICE_TO_DEVICE_TRANSFER;
    public static final int FLAG_FAKE_CLIENT_SIDE_ENCRYPTION_ENABLED;
    public static final int RESULT_ERROR;
    public static final int RESULT_SUCCESS;
    private static final java.lang.String TAG;
    public static final int TYPE_DIRECTORY;
    public static final int TYPE_EOF;
    public static final int TYPE_FILE;
    public static final int TYPE_SYMLINK;
    private final android.os.IBinder mBinder;
    android.os.Handler mHandler;
    private android.os.UserHandle mUser;

    public void <init>()
    {
        android.app.backup.BackupAgent r0;
        android.app.backup.BackupAgent$BackupServiceBinder $r1;
        android.os.IBinder $r2;

        r0 := @this: android.app.backup.BackupAgent;

        specialinvoke r0.<android.content.ContextWrapper: void <init>(android.content.Context)>(null);

        r0.<android.app.backup.BackupAgent: android.os.Handler mHandler> = null;

        $r1 = new android.app.backup.BackupAgent$BackupServiceBinder;

        specialinvoke $r1.<android.app.backup.BackupAgent$BackupServiceBinder: void <init>(android.app.backup.BackupAgent,android.app.backup.BackupAgent$1)>(r0, null);

        $r2 = virtualinvoke $r1.<android.app.backup.BackupAgent$BackupServiceBinder: android.os.IBinder asBinder()>();

        r0.<android.app.backup.BackupAgent: android.os.IBinder mBinder> = $r2;

        return;
    }

    static void access$100(android.app.backup.BackupAgent)
    {
        android.app.backup.BackupAgent r0;

        r0 := @parameter0: android.app.backup.BackupAgent;

        specialinvoke r0.<android.app.backup.BackupAgent: void waitForSharedPrefs()>();

        return;
    }

    static int access$200(android.app.backup.BackupAgent)
    {
        android.app.backup.BackupAgent r0;
        int $i0;

        r0 := @parameter0: android.app.backup.BackupAgent;

        $i0 = specialinvoke r0.<android.app.backup.BackupAgent: int getBackupUserId()>();

        return $i0;
    }

    private void applyXmlFiltersAndDoFullBackupForDomain(java.lang.String, java.lang.String, java.util.Map, android.util.ArraySet, android.util.ArraySet, android.app.backup.FullBackupDataOutput) throws java.io.IOException
    {
        android.app.backup.BackupAgent r0;
        java.lang.String r1, r2, $r8, $r13;
        android.util.ArraySet r3, r4;
        android.app.backup.FullBackupDataOutput r5;
        java.util.Iterator r6;
        android.app.backup.FullBackup$BackupScheme $r7;
        int $i0, $i1, $i2;
        java.lang.Object $r9, $r10, $r12;
        java.util.Set $r11;
        boolean $z0, $z1;
        java.util.Map r14;
        android.app.backup.FullBackup$BackupScheme$PathWithRequiredFlags r15;

        r0 := @this: android.app.backup.BackupAgent;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r14 := @parameter2: java.util.Map;

        r3 := @parameter3: android.util.ArraySet;

        r4 := @parameter4: android.util.ArraySet;

        r5 := @parameter5: android.app.backup.FullBackupDataOutput;

        if r14 == null goto label6;

        $i0 = interfaceinvoke r14.<java.util.Map: int size()>();

        if $i0 != 0 goto label1;

        goto label6;

     label1:
        $r9 = interfaceinvoke r14.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        if $r9 == null goto label5;

        $r10 = interfaceinvoke r14.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        $r11 = (java.util.Set) $r10;

        r6 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r12 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r15 = (android.app.backup.FullBackup$BackupScheme$PathWithRequiredFlags) $r12;

        $i1 = virtualinvoke r15.<android.app.backup.FullBackup$BackupScheme$PathWithRequiredFlags: int getRequiredFlags()>();

        $i2 = virtualinvoke r5.<android.app.backup.FullBackupDataOutput: int getTransportFlags()>();

        $z1 = specialinvoke r0.<android.app.backup.BackupAgent: boolean areIncludeRequiredTransportFlagsSatisfied(int,int)>($i1, $i2);

        if $z1 == 0 goto label3;

        $r13 = virtualinvoke r15.<android.app.backup.FullBackup$BackupScheme$PathWithRequiredFlags: java.lang.String getPath()>();

        virtualinvoke r0.<android.app.backup.BackupAgent: void fullBackupFileTree(java.lang.String,java.lang.String,java.lang.String,android.util.ArraySet,android.util.ArraySet,android.app.backup.FullBackupDataOutput)>(r1, r2, $r13, r3, r4, r5);

     label3:
        goto label2;

     label4:
        goto label7;

     label5:
        goto label7;

     label6:
        $r7 = staticinvoke <android.app.backup.FullBackup: android.app.backup.FullBackup$BackupScheme getBackupScheme(android.content.Context)>(r0);

        $r8 = virtualinvoke $r7.<android.app.backup.FullBackup$BackupScheme: java.lang.String tokenToDirectoryPath(java.lang.String)>(r2);

        virtualinvoke r0.<android.app.backup.BackupAgent: void fullBackupFileTree(java.lang.String,java.lang.String,java.lang.String,android.util.ArraySet,android.util.ArraySet,android.app.backup.FullBackupDataOutput)>(r1, r2, $r8, r3, r4, r5);

     label7:
        return;
    }

    private boolean areIncludeRequiredTransportFlagsSatisfied(int, int)
    {
        android.app.backup.BackupAgent r0;
        int i0, i1, $i2;
        boolean z0;

        r0 := @this: android.app.backup.BackupAgent;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = i1 & i0;

        if $i2 != i0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private int getBackupUserId()
    {
        android.app.backup.BackupAgent r0;
        android.os.UserHandle r1;
        int i0;

        r0 := @this: android.app.backup.BackupAgent;

        r1 = r0.<android.app.backup.BackupAgent: android.os.UserHandle mUser>;

        if r1 != null goto label1;

        i0 = specialinvoke r0.<android.content.ContextWrapper: int getUserId()>();

        goto label2;

     label1:
        i0 = virtualinvoke r1.<android.os.UserHandle: int getIdentifier()>();

     label2:
        return i0;
    }

    private boolean isFileEligibleForRestore(java.io.File) throws java.io.IOException
    {
        android.app.backup.BackupAgent r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, z9, z10;
        java.util.Collection $r1;
        java.lang.StringBuilder $r2, $r8, $r13, $r22;
        java.lang.String $r6, $r12, $r15, $r18, $r20, $r26, r30;
        java.lang.Object $r7;
        java.lang.Throwable $r21;
        java.io.File r27;
        android.app.backup.FullBackup$BackupScheme r28;
        java.util.Map r31;
        android.util.ArraySet r32;
        java.util.Iterator r34;
        java.util.Set r35;

        r0 := @this: android.app.backup.BackupAgent;

        r27 := @parameter0: java.io.File;

        r28 = staticinvoke <android.app.backup.FullBackup: android.app.backup.FullBackup$BackupScheme getBackupScheme(android.content.Context)>(r0);

        $z0 = virtualinvoke r28.<android.app.backup.FullBackup$BackupScheme: boolean isFullBackupContentEnabled()>();

        if $z0 != 0 goto label02;

        $z7 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("BackupXmlParserLogging", 2);

        if $z7 == 0 goto label01;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onRestoreFile \"");

        $r15 = virtualinvoke r27.<java.io.File: java.lang.String getCanonicalPath()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" : fullBackupContent not enabled for ");

        $r18 = virtualinvoke r0.<android.app.backup.BackupAgent: java.lang.String getPackageName()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("BackupXmlParserLogging", $r20);

     label01:
        return 0;

     label02:
        r30 = virtualinvoke r27.<java.io.File: java.lang.String getCanonicalPath()>();

     label03:
        r31 = virtualinvoke r28.<android.app.backup.FullBackup$BackupScheme: java.util.Map maybeParseAndGetCanonicalIncludePaths()>();

        r32 = virtualinvoke r28.<android.app.backup.FullBackup$BackupScheme: android.util.ArraySet maybeParseAndGetCanonicalExcludePaths()>();

     label04:
        if r32 == null goto label06;

        $z5 = staticinvoke <android.app.backup.BackupUtils: boolean isFileSpecifiedInPathList(java.io.File,java.util.Collection)>(r27, r32);

        if $z5 == 0 goto label06;

        $z6 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("BackupXmlParserLogging", 2);

        if $z6 == 0 goto label05;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onRestoreFile: \"");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r30);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\": listed in excludes; skipping.");

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("BackupXmlParserLogging", $r12);

     label05:
        return 0;

     label06:
        if r31 == null goto label11;

        $z1 = interfaceinvoke r31.<java.util.Map: boolean isEmpty()>();

        if $z1 != 0 goto label11;

        z9 = 0;

        $r1 = interfaceinvoke r31.<java.util.Map: java.util.Collection values()>();

        r34 = interfaceinvoke $r1.<java.util.Collection: java.util.Iterator iterator()>();

     label07:
        z10 = z9;

        $z2 = interfaceinvoke r34.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label09;

        $r7 = interfaceinvoke r34.<java.util.Iterator: java.lang.Object next()>();

        r35 = (java.util.Set) $r7;

        $z4 = staticinvoke <android.app.backup.BackupUtils: boolean isFileSpecifiedInPathList(java.io.File,java.util.Collection)>(r27, r35);

        z9 = z9 | $z4;

        if z9 == 0 goto label08;

        z10 = z9;

        goto label09;

     label08:
        goto label07;

     label09:
        if z10 != 0 goto label11;

        $z3 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("BackupXmlParserLogging", 2);

        if $z3 == 0 goto label10;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onRestoreFile: Trying to restore \"");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r30);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" but it isn\'t specified in the included files; skipping.");

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("BackupXmlParserLogging", $r6);

     label10:
        return 0;

     label11:
        return 1;

     label12:
        $r21 := @caughtexception;

        $z8 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("BackupXmlParserLogging", 2);

        if $z8 == 0 goto label13;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onRestoreFile \"");

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r30);

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" : Exception trying to parse fullBackupContent xml file! Aborting onRestoreFile.");

        $r26 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>("BackupXmlParserLogging", $r26, $r21);

     label13:
        return 0;

        catch org.xmlpull.v1.XmlPullParserException from label03 to label04 with label12;
    }

    private boolean manifestExcludesContainFilePath(android.util.ArraySet, java.lang.String)
    {
        android.app.backup.BackupAgent r0;
        java.lang.String r1, r2;
        boolean $z0, $z1;
        java.lang.Object $r3;
        android.app.backup.FullBackup$BackupScheme$PathWithRequiredFlags $r4;
        android.util.ArraySet r5;
        java.util.Iterator r6;

        r0 := @this: android.app.backup.BackupAgent;

        r5 := @parameter0: android.util.ArraySet;

        r1 := @parameter1: java.lang.String;

        r6 = virtualinvoke r5.<android.util.ArraySet: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (android.app.backup.FullBackup$BackupScheme$PathWithRequiredFlags) $r3;

        r2 = virtualinvoke $r4.<android.app.backup.FullBackup$BackupScheme$PathWithRequiredFlags: java.lang.String getPath()>();

        if r2 == null goto label2;

        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        goto label1;

     label3:
        return 0;
    }

    private void waitForSharedPrefs()
    {
        android.app.backup.BackupAgent r0;
        android.app.backup.BackupAgent$SharedPrefsSynchronizer $r2;
        java.util.concurrent.CountDownLatch $r3;
        java.lang.Throwable $r4;
        android.os.Handler r5;

        r0 := @this: android.app.backup.BackupAgent;

        r5 = virtualinvoke r0.<android.app.backup.BackupAgent: android.os.Handler getHandler()>();

        $r2 = new android.app.backup.BackupAgent$SharedPrefsSynchronizer;

        specialinvoke $r2.<android.app.backup.BackupAgent$SharedPrefsSynchronizer: void <init>(android.app.backup.BackupAgent)>(r0);

        virtualinvoke r5.<android.os.Handler: boolean postAtFrontOfQueue(java.lang.Runnable)>($r2);

     label1:
        $r3 = $r2.<android.app.backup.BackupAgent$SharedPrefsSynchronizer: java.util.concurrent.CountDownLatch mLatch>;

        virtualinvoke $r3.<java.util.concurrent.CountDownLatch: void await()>();

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        return;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }

    public void attach(android.content.Context)
    {
        android.app.backup.BackupAgent r0;
        android.content.Context r1;

        r0 := @this: android.app.backup.BackupAgent;

        r1 := @parameter0: android.content.Context;

        virtualinvoke r0.<android.app.backup.BackupAgent: void attachBaseContext(android.content.Context)>(r1);

        return;
    }

    public final void fullBackupFile(java.io.File, android.app.backup.FullBackupDataOutput)
    {
        android.app.backup.BackupAgent r0;
        android.app.backup.FullBackupDataOutput r1;
        java.lang.String r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, $r35, $r36, $r41, r50, r53, r55, $r56;
        int i0;
        java.io.File $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, r46, r51, r52;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15;
        java.lang.StringBuilder $r37;
        java.lang.Throwable $r42, $r43, $r44, $r45;
        android.content.pm.ApplicationInfo r47;
        android.content.Context r48, r49;

        r0 := @this: android.app.backup.BackupAgent;

        r46 := @parameter0: java.io.File;

        r1 := @parameter1: android.app.backup.FullBackupDataOutput;

        r47 = virtualinvoke r0.<android.app.backup.BackupAgent: android.content.pm.ApplicationInfo getApplicationInfo()>();

     label01:
        r48 = virtualinvoke r0.<android.app.backup.BackupAgent: android.content.Context createCredentialProtectedStorageContext()>();

        $r17 = virtualinvoke r48.<android.content.Context: java.io.File getDataDir()>();

        r2 = virtualinvoke $r17.<java.io.File: java.lang.String getCanonicalPath()>();

        $r18 = virtualinvoke r48.<android.content.Context: java.io.File getFilesDir()>();

        r3 = virtualinvoke $r18.<java.io.File: java.lang.String getCanonicalPath()>();

        $r19 = virtualinvoke r48.<android.content.Context: java.io.File getNoBackupFilesDir()>();

        r4 = virtualinvoke $r19.<java.io.File: java.lang.String getCanonicalPath()>();

        $r20 = virtualinvoke r48.<android.content.Context: java.io.File getDatabasePath(java.lang.String)>("foo");

        $r21 = virtualinvoke $r20.<java.io.File: java.io.File getParentFile()>();

        r5 = virtualinvoke $r21.<java.io.File: java.lang.String getCanonicalPath()>();

        $r22 = virtualinvoke r48.<android.content.Context: java.io.File getSharedPreferencesPath(java.lang.String)>("foo");

        $r23 = virtualinvoke $r22.<java.io.File: java.io.File getParentFile()>();

        r6 = virtualinvoke $r23.<java.io.File: java.lang.String getCanonicalPath()>();

        $r24 = virtualinvoke r48.<android.content.Context: java.io.File getCacheDir()>();

        r7 = virtualinvoke $r24.<java.io.File: java.lang.String getCanonicalPath()>();

        $r25 = virtualinvoke r48.<android.content.Context: java.io.File getCodeCacheDir()>();

        r8 = virtualinvoke $r25.<java.io.File: java.lang.String getCanonicalPath()>();

        r49 = virtualinvoke r0.<android.app.backup.BackupAgent: android.content.Context createDeviceProtectedStorageContext()>();

        $r26 = virtualinvoke r49.<android.content.Context: java.io.File getDataDir()>();

        r9 = virtualinvoke $r26.<java.io.File: java.lang.String getCanonicalPath()>();

        $r27 = virtualinvoke r49.<android.content.Context: java.io.File getFilesDir()>();

        r10 = virtualinvoke $r27.<java.io.File: java.lang.String getCanonicalPath()>();

        $r28 = virtualinvoke r49.<android.content.Context: java.io.File getNoBackupFilesDir()>();

        r11 = virtualinvoke $r28.<java.io.File: java.lang.String getCanonicalPath()>();

        $r29 = virtualinvoke r49.<android.content.Context: java.io.File getDatabasePath(java.lang.String)>("foo");

        $r30 = virtualinvoke $r29.<java.io.File: java.io.File getParentFile()>();

        r12 = virtualinvoke $r30.<java.io.File: java.lang.String getCanonicalPath()>();

        $r31 = virtualinvoke r49.<android.content.Context: java.io.File getSharedPreferencesPath(java.lang.String)>("foo");

        $r32 = virtualinvoke $r31.<java.io.File: java.io.File getParentFile()>();

        r13 = virtualinvoke $r32.<java.io.File: java.lang.String getCanonicalPath()>();

        $r33 = virtualinvoke r49.<android.content.Context: java.io.File getCacheDir()>();

        r14 = virtualinvoke $r33.<java.io.File: java.lang.String getCanonicalPath()>();

        $r34 = virtualinvoke r49.<android.content.Context: java.io.File getCodeCacheDir()>();

        r15 = virtualinvoke $r34.<java.io.File: java.lang.String getCanonicalPath()>();

     label02:
        $r35 = r47.<android.content.pm.ApplicationInfo: java.lang.String nativeLibraryDir>;

        if $r35 != null goto label04;

     label03:
        r50 = null;

        goto label05;

     label04:
        r51 = new java.io.File;

        $r36 = r47.<android.content.pm.ApplicationInfo: java.lang.String nativeLibraryDir>;

        specialinvoke r51.<java.io.File: void <init>(java.lang.String)>($r36);

        r50 = virtualinvoke r51.<java.io.File: java.lang.String getCanonicalPath()>();

     label05:
        i0 = staticinvoke <android.os.Process: int myUid()>();

     label06:
        if i0 == 1000 goto label12;

     label07:
        r52 = virtualinvoke r0.<android.app.backup.BackupAgent: java.io.File getExternalFilesDir(java.lang.String)>(null);

     label08:
        if r52 == null goto label12;

     label09:
        r53 = virtualinvoke r52.<java.io.File: java.lang.String getCanonicalPath()>();

     label10:
        goto label13;

     label11:
        $r43 := @caughtexception;

        goto label35;

     label12:
        r53 = null;

     label13:
        r16 = virtualinvoke r46.<java.io.File: java.lang.String getCanonicalPath()>();

     label14:
        $z15 = virtualinvoke r16.<java.lang.String: boolean startsWith(java.lang.String)>(r7);

        if $z15 != 0 goto label31;

        $z0 = virtualinvoke r16.<java.lang.String: boolean startsWith(java.lang.String)>(r8);

        if $z0 != 0 goto label30;

        $z1 = virtualinvoke r16.<java.lang.String: boolean startsWith(java.lang.String)>(r4);

        if $z1 != 0 goto label29;

        $z2 = virtualinvoke r16.<java.lang.String: boolean startsWith(java.lang.String)>(r14);

        if $z2 != 0 goto label28;

        $z3 = virtualinvoke r16.<java.lang.String: boolean startsWith(java.lang.String)>(r15);

        if $z3 != 0 goto label27;

        $z4 = virtualinvoke r16.<java.lang.String: boolean startsWith(java.lang.String)>(r11);

        if $z4 != 0 goto label26;

        $z5 = virtualinvoke r16.<java.lang.String: boolean startsWith(java.lang.String)>(r50);

        if $z5 == 0 goto label15;

        goto label31;

     label15:
        $z6 = virtualinvoke r16.<java.lang.String: boolean startsWith(java.lang.String)>(r5);

        if $z6 == 0 goto label16;

        r55 = "db";

        r53 = r5;

        goto label24;

     label16:
        $z7 = virtualinvoke r16.<java.lang.String: boolean startsWith(java.lang.String)>(r6);

        if $z7 == 0 goto label17;

        r55 = "sp";

        r53 = r6;

        goto label24;

     label17:
        $z8 = virtualinvoke r16.<java.lang.String: boolean startsWith(java.lang.String)>(r3);

        if $z8 == 0 goto label18;

        r55 = "f";

        r53 = r3;

        goto label24;

     label18:
        $z9 = virtualinvoke r16.<java.lang.String: boolean startsWith(java.lang.String)>(r2);

        if $z9 == 0 goto label19;

        r55 = "r";

        r53 = r2;

        goto label24;

     label19:
        $z10 = virtualinvoke r16.<java.lang.String: boolean startsWith(java.lang.String)>(r12);

        if $z10 == 0 goto label20;

        r55 = "d_db";

        r53 = r12;

        goto label24;

     label20:
        $z11 = virtualinvoke r16.<java.lang.String: boolean startsWith(java.lang.String)>(r13);

        if $z11 == 0 goto label21;

        r55 = "d_sp";

        r53 = r13;

        goto label24;

     label21:
        $z12 = virtualinvoke r16.<java.lang.String: boolean startsWith(java.lang.String)>(r10);

        if $z12 == 0 goto label22;

        r55 = "d_f";

        r53 = r10;

        goto label24;

     label22:
        $z13 = virtualinvoke r16.<java.lang.String: boolean startsWith(java.lang.String)>(r9);

        if $z13 == 0 goto label23;

        r55 = "d_r";

        r53 = r9;

        goto label24;

     label23:
        if r53 == null goto label25;

        $z14 = virtualinvoke r16.<java.lang.String: boolean startsWith(java.lang.String)>(r53);

        if $z14 == 0 goto label25;

        r55 = "ef";

     label24:
        $r56 = virtualinvoke r0.<android.app.backup.BackupAgent: java.lang.String getPackageName()>();

        staticinvoke <android.app.backup.FullBackup: int backupToTar(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.app.backup.FullBackupDataOutput)>($r56, r55, null, r53, r16, r1);

        return;

     label25:
        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File ");

        virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16);

        virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is in an unsupported location; skipping");

        $r41 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BackupAgent", $r41);

        return;

     label26:
        goto label31;

     label27:
        goto label31;

     label28:
        goto label31;

     label29:
        goto label31;

     label30:
        goto label31;

     label31:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BackupAgent", "lib, cache, code_cache, and no_backup files are not backed up");

        return;

     label32:
        $r44 := @caughtexception;

        goto label35;

     label33:
        $r45 := @caughtexception;

        goto label35;

     label34:
        $r42 := @caughtexception;

     label35:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BackupAgent", "Unable to obtain canonical paths");

        return;

        catch java.io.IOException from label01 to label02 with label34;
        catch java.io.IOException from label02 to label03 with label33;
        catch java.io.IOException from label04 to label05 with label33;
        catch java.io.IOException from label05 to label06 with label33;
        catch java.io.IOException from label07 to label08 with label11;
        catch java.io.IOException from label09 to label10 with label11;
        catch java.io.IOException from label13 to label14 with label32;
    }

    protected final void fullBackupFileTree(java.lang.String, java.lang.String, java.lang.String, android.util.ArraySet, android.util.ArraySet, android.app.backup.FullBackupDataOutput)
    {
        android.app.backup.BackupAgent r0;
        java.lang.String r1, r2, r6, $r14, $r20, $r27, r28, r31;
        android.util.ArraySet r3, r4;
        android.app.backup.FullBackupDataOutput r5;
        java.io.File r8, $r11, $r15;
        android.system.StructStat r9;
        int i0, $i1, $i2, $i4, $i7, i8;
        android.app.backup.FullBackup$BackupScheme $r10;
        boolean $z0, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.util.LinkedList $r12;
        java.lang.Object $r13;
        java.lang.Throwable $r16, $r21;
        java.lang.StringBuilder $r17, $r22;
        java.io.File[] r32;

        r0 := @this: android.app.backup.BackupAgent;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r28 := @parameter2: java.lang.String;

        r3 := @parameter3: android.util.ArraySet;

        r4 := @parameter4: android.util.ArraySet;

        r5 := @parameter5: android.app.backup.FullBackupDataOutput;

        $r10 = staticinvoke <android.app.backup.FullBackup: android.app.backup.FullBackup$BackupScheme getBackupScheme(android.content.Context)>(r0);

        r6 = virtualinvoke $r10.<android.app.backup.FullBackup$BackupScheme: java.lang.String tokenToDirectoryPath(java.lang.String)>(r2);

        if r6 != null goto label01;

        return;

     label01:
        $r11 = new java.io.File;

        specialinvoke $r11.<java.io.File: void <init>(java.lang.String)>(r28);

        $z0 = virtualinvoke $r11.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label24;

        $r12 = new java.util.LinkedList;

        specialinvoke $r12.<java.util.LinkedList: void <init>()>();

        virtualinvoke $r12.<java.util.LinkedList: boolean add(java.lang.Object)>($r11);

     label02:
        $i7 = virtualinvoke $r12.<java.util.LinkedList: int size()>();

        if $i7 <= 0 goto label24;

        $r13 = virtualinvoke $r12.<java.util.LinkedList: java.lang.Object remove(int)>(0);

        r8 = (java.io.File) $r13;

     label03:
        $r14 = virtualinvoke r8.<java.io.File: java.lang.String getPath()>();

        r9 = staticinvoke <android.system.Os: android.system.StructStat lstat(java.lang.String)>($r14);

        $i1 = r9.<android.system.StructStat: int st_mode>;

        $z2 = staticinvoke <android.system.OsConstants: boolean S_ISREG(int)>($i1);

        if $z2 != 0 goto label05;

        $i4 = r9.<android.system.StructStat: int st_mode>;

        $z6 = staticinvoke <android.system.OsConstants: boolean S_ISDIR(int)>($i4);

        if $z6 != 0 goto label05;

     label04:
        goto label02;

     label05:
        r31 = virtualinvoke r8.<java.io.File: java.lang.String getCanonicalPath()>();

     label06:
        if r3 == null goto label09;

     label07:
        $z5 = specialinvoke r0.<android.app.backup.BackupAgent: boolean manifestExcludesContainFilePath(android.util.ArraySet,java.lang.String)>(r3, r31);

        if $z5 == 0 goto label09;

     label08:
        goto label02;

     label09:
        if r4 == null goto label12;

     label10:
        $z4 = virtualinvoke r4.<android.util.ArraySet: boolean contains(java.lang.Object)>(r31);

        if $z4 == 0 goto label12;

     label11:
        goto label02;

     label12:
        $i2 = r9.<android.system.StructStat: int st_mode>;

        $z3 = staticinvoke <android.system.OsConstants: boolean S_ISDIR(int)>($i2);

        if $z3 == 0 goto label19;

        r32 = virtualinvoke r8.<java.io.File: java.io.File[] listFiles()>();

     label13:
        if r32 == null goto label19;

     label14:
        i0 = lengthof r32;

     label15:
        i8 = 0;

     label16:
        if i8 >= i0 goto label19;

     label17:
        $r15 = r32[i8];

        virtualinvoke $r12.<java.util.LinkedList: void add(int,java.lang.Object)>(0, $r15);

     label18:
        i8 = i8 + 1;

        goto label16;

     label19:
        staticinvoke <android.app.backup.FullBackup: int backupToTar(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.app.backup.FullBackupDataOutput)>(r1, r2, null, r6, r31, r5);

        goto label02;

     label20:
        $r21 := @caughtexception;

        $z8 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("BackupXmlParserLogging", 2);

        if $z8 == 0 goto label21;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error scanning file ");

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r8);

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ");

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r21);

        $r27 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("BackupXmlParserLogging", $r27);

     label21:
        goto label02;

     label22:
        $r16 := @caughtexception;

        $z7 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("BackupXmlParserLogging", 2);

        if $z7 == 0 goto label23;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error canonicalizing path of ");

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r8);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("BackupXmlParserLogging", $r20);

     label23:
        goto label02;

     label24:
        return;

        catch java.io.IOException from label03 to label04 with label22;
        catch android.system.ErrnoException from label03 to label04 with label20;
        catch java.io.IOException from label05 to label06 with label22;
        catch android.system.ErrnoException from label05 to label06 with label20;
        catch java.io.IOException from label07 to label08 with label22;
        catch android.system.ErrnoException from label07 to label08 with label20;
        catch java.io.IOException from label10 to label11 with label22;
        catch android.system.ErrnoException from label10 to label11 with label20;
        catch java.io.IOException from label12 to label13 with label22;
        catch android.system.ErrnoException from label12 to label13 with label20;
        catch java.io.IOException from label14 to label15 with label22;
        catch android.system.ErrnoException from label14 to label15 with label20;
        catch java.io.IOException from label17 to label18 with label22;
        catch android.system.ErrnoException from label17 to label18 with label20;
    }

    android.os.Handler getHandler()
    {
        android.app.backup.BackupAgent r0;
        android.os.Handler $r1, $r2, $r3;
        android.os.Looper $r4;

        r0 := @this: android.app.backup.BackupAgent;

        $r1 = r0.<android.app.backup.BackupAgent: android.os.Handler mHandler>;

        if $r1 != null goto label1;

        $r3 = new android.os.Handler;

        $r4 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke $r3.<android.os.Handler: void <init>(android.os.Looper)>($r4);

        r0.<android.app.backup.BackupAgent: android.os.Handler mHandler> = $r3;

     label1:
        $r2 = r0.<android.app.backup.BackupAgent: android.os.Handler mHandler>;

        return $r2;
    }

    public abstract void onBackup(android.os.ParcelFileDescriptor, android.app.backup.BackupDataOutput, android.os.ParcelFileDescriptor) throws java.io.IOException;

    public final android.os.IBinder onBind()
    {
        android.app.backup.BackupAgent r0;
        android.os.IBinder $r1;

        r0 := @this: android.app.backup.BackupAgent;

        $r1 = r0.<android.app.backup.BackupAgent: android.os.IBinder mBinder>;

        return $r1;
    }

    public void onCreate()
    {
        android.app.backup.BackupAgent r0;

        r0 := @this: android.app.backup.BackupAgent;

        return;
    }

    public void onCreate(android.os.UserHandle)
    {
        android.app.backup.BackupAgent r0;
        android.os.UserHandle r1;

        r0 := @this: android.app.backup.BackupAgent;

        r1 := @parameter0: android.os.UserHandle;

        virtualinvoke r0.<android.app.backup.BackupAgent: void onCreate()>();

        r0.<android.app.backup.BackupAgent: android.os.UserHandle mUser> = r1;

        return;
    }

    public void onDestroy()
    {
        android.app.backup.BackupAgent r0;

        r0 := @this: android.app.backup.BackupAgent;

        return;
    }

    public void onFullBackup(android.app.backup.FullBackupDataOutput) throws java.io.IOException
    {
        android.app.backup.BackupAgent r0;
        java.util.Map r1;
        android.util.ArraySet r2, $r36;
        java.lang.String r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, $r35, $r39, r46, r47, r48;
        boolean $z0, $z28;
        java.io.File $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r37, $r38;
        int $i0;
        java.lang.Throwable $r40;
        android.app.backup.FullBackupDataOutput r41;
        android.app.backup.FullBackup$BackupScheme r42;
        android.content.pm.ApplicationInfo r43;
        android.content.Context r44, r45;

        r0 := @this: android.app.backup.BackupAgent;

        r41 := @parameter0: android.app.backup.FullBackupDataOutput;

        r42 = staticinvoke <android.app.backup.FullBackup: android.app.backup.FullBackup$BackupScheme getBackupScheme(android.content.Context)>(r0);

        $z0 = virtualinvoke r42.<android.app.backup.FullBackup$BackupScheme: boolean isFullBackupContentEnabled()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        r1 = virtualinvoke r42.<android.app.backup.FullBackup$BackupScheme: java.util.Map maybeParseAndGetCanonicalIncludePaths()>();

        r2 = virtualinvoke r42.<android.app.backup.FullBackup$BackupScheme: android.util.ArraySet maybeParseAndGetCanonicalExcludePaths()>();

     label2:
        r3 = virtualinvoke r0.<android.app.backup.BackupAgent: java.lang.String getPackageName()>();

        r43 = virtualinvoke r0.<android.app.backup.BackupAgent: android.content.pm.ApplicationInfo getApplicationInfo()>();

        r44 = virtualinvoke r0.<android.app.backup.BackupAgent: android.content.Context createCredentialProtectedStorageContext()>();

        $r17 = virtualinvoke r44.<android.content.Context: java.io.File getDataDir()>();

        r4 = virtualinvoke $r17.<java.io.File: java.lang.String getCanonicalPath()>();

        $r18 = virtualinvoke r44.<android.content.Context: java.io.File getFilesDir()>();

        r5 = virtualinvoke $r18.<java.io.File: java.lang.String getCanonicalPath()>();

        $r19 = virtualinvoke r44.<android.content.Context: java.io.File getNoBackupFilesDir()>();

        r6 = virtualinvoke $r19.<java.io.File: java.lang.String getCanonicalPath()>();

        $r20 = virtualinvoke r44.<android.content.Context: java.io.File getDatabasePath(java.lang.String)>("foo");

        $r21 = virtualinvoke $r20.<java.io.File: java.io.File getParentFile()>();

        r7 = virtualinvoke $r21.<java.io.File: java.lang.String getCanonicalPath()>();

        $r22 = virtualinvoke r44.<android.content.Context: java.io.File getSharedPreferencesPath(java.lang.String)>("foo");

        $r23 = virtualinvoke $r22.<java.io.File: java.io.File getParentFile()>();

        r8 = virtualinvoke $r23.<java.io.File: java.lang.String getCanonicalPath()>();

        $r24 = virtualinvoke r44.<android.content.Context: java.io.File getCacheDir()>();

        r9 = virtualinvoke $r24.<java.io.File: java.lang.String getCanonicalPath()>();

        $r25 = virtualinvoke r44.<android.content.Context: java.io.File getCodeCacheDir()>();

        r10 = virtualinvoke $r25.<java.io.File: java.lang.String getCanonicalPath()>();

        r45 = virtualinvoke r0.<android.app.backup.BackupAgent: android.content.Context createDeviceProtectedStorageContext()>();

        $r26 = virtualinvoke r45.<android.content.Context: java.io.File getDataDir()>();

        r11 = virtualinvoke $r26.<java.io.File: java.lang.String getCanonicalPath()>();

        $r27 = virtualinvoke r45.<android.content.Context: java.io.File getFilesDir()>();

        r12 = virtualinvoke $r27.<java.io.File: java.lang.String getCanonicalPath()>();

        $r28 = virtualinvoke r45.<android.content.Context: java.io.File getNoBackupFilesDir()>();

        r13 = virtualinvoke $r28.<java.io.File: java.lang.String getCanonicalPath()>();

        $r29 = virtualinvoke r45.<android.content.Context: java.io.File getDatabasePath(java.lang.String)>("foo");

        $r30 = virtualinvoke $r29.<java.io.File: java.io.File getParentFile()>();

        r14 = virtualinvoke $r30.<java.io.File: java.lang.String getCanonicalPath()>();

        $r31 = virtualinvoke r45.<android.content.Context: java.io.File getSharedPreferencesPath(java.lang.String)>("foo");

        $r32 = virtualinvoke $r31.<java.io.File: java.io.File getParentFile()>();

        r15 = virtualinvoke $r32.<java.io.File: java.lang.String getCanonicalPath()>();

        $r33 = virtualinvoke r45.<android.content.Context: java.io.File getCacheDir()>();

        r46 = virtualinvoke $r33.<java.io.File: java.lang.String getCanonicalPath()>();

        $r34 = virtualinvoke r45.<android.content.Context: java.io.File getCodeCacheDir()>();

        r47 = virtualinvoke $r34.<java.io.File: java.lang.String getCanonicalPath()>();

        $r35 = r43.<android.content.pm.ApplicationInfo: java.lang.String nativeLibraryDir>;

        if $r35 == null goto label3;

        $r38 = new java.io.File;

        $r39 = r43.<android.content.pm.ApplicationInfo: java.lang.String nativeLibraryDir>;

        specialinvoke $r38.<java.io.File: void <init>(java.lang.String)>($r39);

        r48 = virtualinvoke $r38.<java.io.File: java.lang.String getCanonicalPath()>();

        goto label4;

     label3:
        r48 = null;

     label4:
        $r36 = new android.util.ArraySet;

        specialinvoke $r36.<android.util.ArraySet: void <init>()>();

        virtualinvoke $r36.<android.util.ArraySet: boolean add(java.lang.Object)>(r5);

        virtualinvoke $r36.<android.util.ArraySet: boolean add(java.lang.Object)>(r6);

        virtualinvoke $r36.<android.util.ArraySet: boolean add(java.lang.Object)>(r7);

        virtualinvoke $r36.<android.util.ArraySet: boolean add(java.lang.Object)>(r8);

        virtualinvoke $r36.<android.util.ArraySet: boolean add(java.lang.Object)>(r9);

        virtualinvoke $r36.<android.util.ArraySet: boolean add(java.lang.Object)>(r10);

        virtualinvoke $r36.<android.util.ArraySet: boolean add(java.lang.Object)>(r12);

        virtualinvoke $r36.<android.util.ArraySet: boolean add(java.lang.Object)>(r13);

        virtualinvoke $r36.<android.util.ArraySet: boolean add(java.lang.Object)>(r14);

        virtualinvoke $r36.<android.util.ArraySet: boolean add(java.lang.Object)>(r15);

        virtualinvoke $r36.<android.util.ArraySet: boolean add(java.lang.Object)>(r46);

        virtualinvoke $r36.<android.util.ArraySet: boolean add(java.lang.Object)>(r47);

        if r48 == null goto label5;

        virtualinvoke $r36.<android.util.ArraySet: boolean add(java.lang.Object)>(r48);

     label5:
        specialinvoke r0.<android.app.backup.BackupAgent: void applyXmlFiltersAndDoFullBackupForDomain(java.lang.String,java.lang.String,java.util.Map,android.util.ArraySet,android.util.ArraySet,android.app.backup.FullBackupDataOutput)>(r3, "r", r1, r2, $r36, r41);

        virtualinvoke $r36.<android.util.ArraySet: boolean add(java.lang.Object)>(r4);

        specialinvoke r0.<android.app.backup.BackupAgent: void applyXmlFiltersAndDoFullBackupForDomain(java.lang.String,java.lang.String,java.util.Map,android.util.ArraySet,android.util.ArraySet,android.app.backup.FullBackupDataOutput)>(r3, "d_r", r1, r2, $r36, r41);

        virtualinvoke $r36.<android.util.ArraySet: boolean add(java.lang.Object)>(r11);

        virtualinvoke $r36.<android.util.ArraySet: boolean remove(java.lang.Object)>(r5);

        specialinvoke r0.<android.app.backup.BackupAgent: void applyXmlFiltersAndDoFullBackupForDomain(java.lang.String,java.lang.String,java.util.Map,android.util.ArraySet,android.util.ArraySet,android.app.backup.FullBackupDataOutput)>(r3, "f", r1, r2, $r36, r41);

        virtualinvoke $r36.<android.util.ArraySet: boolean add(java.lang.Object)>(r5);

        virtualinvoke $r36.<android.util.ArraySet: boolean remove(java.lang.Object)>(r12);

        specialinvoke r0.<android.app.backup.BackupAgent: void applyXmlFiltersAndDoFullBackupForDomain(java.lang.String,java.lang.String,java.util.Map,android.util.ArraySet,android.util.ArraySet,android.app.backup.FullBackupDataOutput)>(r3, "d_f", r1, r2, $r36, r41);

        virtualinvoke $r36.<android.util.ArraySet: boolean add(java.lang.Object)>(r12);

        virtualinvoke $r36.<android.util.ArraySet: boolean remove(java.lang.Object)>(r7);

        specialinvoke r0.<android.app.backup.BackupAgent: void applyXmlFiltersAndDoFullBackupForDomain(java.lang.String,java.lang.String,java.util.Map,android.util.ArraySet,android.util.ArraySet,android.app.backup.FullBackupDataOutput)>(r3, "db", r1, r2, $r36, r41);

        virtualinvoke $r36.<android.util.ArraySet: boolean add(java.lang.Object)>(r7);

        virtualinvoke $r36.<android.util.ArraySet: boolean remove(java.lang.Object)>(r14);

        specialinvoke r0.<android.app.backup.BackupAgent: void applyXmlFiltersAndDoFullBackupForDomain(java.lang.String,java.lang.String,java.util.Map,android.util.ArraySet,android.util.ArraySet,android.app.backup.FullBackupDataOutput)>(r3, "d_db", r1, r2, $r36, r41);

        virtualinvoke $r36.<android.util.ArraySet: boolean add(java.lang.Object)>(r14);

        virtualinvoke $r36.<android.util.ArraySet: boolean remove(java.lang.Object)>(r8);

        specialinvoke r0.<android.app.backup.BackupAgent: void applyXmlFiltersAndDoFullBackupForDomain(java.lang.String,java.lang.String,java.util.Map,android.util.ArraySet,android.util.ArraySet,android.app.backup.FullBackupDataOutput)>(r3, "sp", r1, r2, $r36, r41);

        virtualinvoke $r36.<android.util.ArraySet: boolean add(java.lang.Object)>(r8);

        virtualinvoke $r36.<android.util.ArraySet: boolean remove(java.lang.Object)>(r15);

        specialinvoke r0.<android.app.backup.BackupAgent: void applyXmlFiltersAndDoFullBackupForDomain(java.lang.String,java.lang.String,java.util.Map,android.util.ArraySet,android.util.ArraySet,android.app.backup.FullBackupDataOutput)>(r3, "d_sp", r1, r2, $r36, r41);

        virtualinvoke $r36.<android.util.ArraySet: boolean add(java.lang.Object)>(r15);

        $i0 = staticinvoke <android.os.Process: int myUid()>();

        if $i0 == 1000 goto label6;

        $r37 = virtualinvoke r0.<android.app.backup.BackupAgent: java.io.File getExternalFilesDir(java.lang.String)>(null);

        if $r37 == null goto label6;

        specialinvoke r0.<android.app.backup.BackupAgent: void applyXmlFiltersAndDoFullBackupForDomain(java.lang.String,java.lang.String,java.util.Map,android.util.ArraySet,android.util.ArraySet,android.app.backup.FullBackupDataOutput)>(r3, "ef", r1, r2, $r36, r41);

     label6:
        return;

     label7:
        $r40 := @caughtexception;

        $z28 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("BackupXmlParserLogging", 2);

        if $z28 == 0 goto label8;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>("BackupXmlParserLogging", "Exception trying to parse fullBackupContent xml file! Aborting full backup.", $r40);

     label8:
        return;

        catch java.io.IOException from label1 to label2 with label7;
        catch org.xmlpull.v1.XmlPullParserException from label1 to label2 with label7;
    }

    public void onQuotaExceeded(long, long)
    {
        android.app.backup.BackupAgent r0;
        long l0, l1;

        r0 := @this: android.app.backup.BackupAgent;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        return;
    }

    public abstract void onRestore(android.app.backup.BackupDataInput, int, android.os.ParcelFileDescriptor) throws java.io.IOException;

    public void onRestore(android.app.backup.BackupDataInput, long, android.os.ParcelFileDescriptor) throws java.io.IOException
    {
        android.app.backup.BackupAgent r0;
        android.app.backup.BackupDataInput r1;
        long l0;
        android.os.ParcelFileDescriptor r2;
        int $i1;

        r0 := @this: android.app.backup.BackupAgent;

        r1 := @parameter0: android.app.backup.BackupDataInput;

        l0 := @parameter1: long;

        r2 := @parameter2: android.os.ParcelFileDescriptor;

        $i1 = (int) l0;

        virtualinvoke r0.<android.app.backup.BackupAgent: void onRestore(android.app.backup.BackupDataInput,int,android.os.ParcelFileDescriptor)>(r1, $i1, r2);

        return;
    }

    public void onRestore(android.app.backup.BackupDataInput, long, android.os.ParcelFileDescriptor, java.util.Set) throws java.io.IOException
    {
        android.app.backup.BackupAgent r0;
        android.app.backup.BackupDataInput r1;
        long l0;
        android.os.ParcelFileDescriptor r2;
        java.util.Set r3;

        r0 := @this: android.app.backup.BackupAgent;

        r1 := @parameter0: android.app.backup.BackupDataInput;

        l0 := @parameter1: long;

        r2 := @parameter2: android.os.ParcelFileDescriptor;

        r3 := @parameter3: java.util.Set;

        virtualinvoke r0.<android.app.backup.BackupAgent: void onRestore(android.app.backup.BackupDataInput,long,android.os.ParcelFileDescriptor)>(r1, l0, r2);

        return;
    }

    protected void onRestoreFile(android.os.ParcelFileDescriptor, long, int, java.lang.String, java.lang.String, long, long) throws java.io.IOException
    {
        android.app.backup.BackupAgent r0;
        android.os.ParcelFileDescriptor r1;
        long l0, l2, l4;
        int i1;
        java.lang.String r2, r3, $r9, r10, r11;
        android.app.backup.FullBackup$BackupScheme $r4;
        boolean $z0, $z1;
        java.io.File $r5;
        java.lang.StringBuilder $r6;
        char $c3;

        r0 := @this: android.app.backup.BackupAgent;

        r1 := @parameter0: android.os.ParcelFileDescriptor;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        r10 := @parameter3: java.lang.String;

        r11 := @parameter4: java.lang.String;

        l4 := @parameter5: long;

        l2 := @parameter6: long;

        $r4 = staticinvoke <android.app.backup.FullBackup: android.app.backup.FullBackup$BackupScheme getBackupScheme(android.content.Context)>(r0);

        r2 = virtualinvoke $r4.<android.app.backup.FullBackup$BackupScheme: java.lang.String tokenToDirectoryPath(java.lang.String)>(r10);

        $z0 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>("ef");

        if $z0 == 0 goto label1;

        l4 = -1L;

        goto label1;

     label1:
        if r2 == null goto label2;

        $r5 = new java.io.File;

        specialinvoke $r5.<java.io.File: void <init>(java.lang.String,java.lang.String)>(r2, r11);

        r3 = virtualinvoke $r5.<java.io.File: java.lang.String getCanonicalPath()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $c3 = <java.io.File: char separatorChar>;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $z1 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>($r9);

        if $z1 == 0 goto label2;

        virtualinvoke r0.<android.app.backup.BackupAgent: void onRestoreFile(android.os.ParcelFileDescriptor,long,java.io.File,int,long,long)>(r1, l0, $r5, i1, l4, l2);

        return;

     label2:
        staticinvoke <android.app.backup.FullBackup: void restoreFile(android.os.ParcelFileDescriptor,long,int,long,long,java.io.File)>(r1, l0, i1, l4, l2, null);

        return;
    }

    public void onRestoreFile(android.os.ParcelFileDescriptor, long, java.io.File, int, long, long) throws java.io.IOException
    {
        android.app.backup.BackupAgent r0;
        android.os.ParcelFileDescriptor r1;
        long l0, l2, l3;
        int i1;
        boolean $z0;
        java.io.File r2;

        r0 := @this: android.app.backup.BackupAgent;

        r1 := @parameter0: android.os.ParcelFileDescriptor;

        l0 := @parameter1: long;

        r2 := @parameter2: java.io.File;

        i1 := @parameter3: int;

        l2 := @parameter4: long;

        l3 := @parameter5: long;

        $z0 = specialinvoke r0.<android.app.backup.BackupAgent: boolean isFileEligibleForRestore(java.io.File)>(r2);

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        r2 = null;

     label2:
        staticinvoke <android.app.backup.FullBackup: void restoreFile(android.os.ParcelFileDescriptor,long,int,long,long,java.io.File)>(r1, l0, i1, l2, l3, r2);

        return;
    }

    public void onRestoreFinished()
    {
        android.app.backup.BackupAgent r0;

        r0 := @this: android.app.backup.BackupAgent;

        return;
    }

    public static void <clinit>()
    {
        <android.app.backup.BackupAgent: int TYPE_SYMLINK> = 3;

        <android.app.backup.BackupAgent: int TYPE_FILE> = 1;

        <android.app.backup.BackupAgent: int TYPE_EOF> = 0;

        <android.app.backup.BackupAgent: int TYPE_DIRECTORY> = 2;

        <android.app.backup.BackupAgent: java.lang.String TAG> = "BackupAgent";

        <android.app.backup.BackupAgent: int RESULT_SUCCESS> = 0;

        <android.app.backup.BackupAgent: int RESULT_ERROR> = -1;

        <android.app.backup.BackupAgent: int FLAG_FAKE_CLIENT_SIDE_ENCRYPTION_ENABLED> = -2147483648;

        <android.app.backup.BackupAgent: int FLAG_DEVICE_TO_DEVICE_TRANSFER> = 2;

        <android.app.backup.BackupAgent: int FLAG_CLIENT_SIDE_ENCRYPTION_ENABLED> = 1;

        <android.app.backup.BackupAgent: boolean DEBUG> = 0;

        return;
    }
}
