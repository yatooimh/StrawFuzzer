public class android.app.backup.BackupDataInput extends java.lang.Object
{
    long mBackupReader;
    private android.app.backup.BackupDataInput$EntityHeader mHeader;
    private boolean mHeaderReady;

    public void <init>(java.io.FileDescriptor)
    {
        android.app.backup.BackupDataInput r0;
        java.io.FileDescriptor r1;
        long l0;
        android.app.backup.BackupDataInput$EntityHeader $r3;
        byte $b1;
        java.lang.StringBuilder $r4;
        java.lang.RuntimeException $r7;
        java.lang.String $r8;

        r0 := @this: android.app.backup.BackupDataInput;

        r1 := @parameter0: java.io.FileDescriptor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new android.app.backup.BackupDataInput$EntityHeader;

        specialinvoke $r3.<android.app.backup.BackupDataInput$EntityHeader: void <init>(android.app.backup.BackupDataInput$1)>(null);

        r0.<android.app.backup.BackupDataInput: android.app.backup.BackupDataInput$EntityHeader mHeader> = $r3;

        if r1 == null goto label2;

        l0 = staticinvoke <android.app.backup.BackupDataInput: long ctor(java.io.FileDescriptor)>(r1);

        r0.<android.app.backup.BackupDataInput: long mBackupReader> = l0;

        $b1 = l0 cmp 0L;

        if $b1 == 0 goto label1;

        return;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Native initialization failed with fd=");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = new java.lang.RuntimeException;

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>($r8);

        throw $r7;

     label2:
        throw null;
    }

    private static native long ctor(java.io.FileDescriptor);

    private static native void dtor(long);

    private native int readEntityData_native(long, byte[], int, int);

    private native int readNextHeader_native(long, android.app.backup.BackupDataInput$EntityHeader);

    private native int skipEntityData_native(long);

    protected void finalize() throws java.lang.Throwable
    {
        android.app.backup.BackupDataInput r0;
        long $l0;
        java.lang.Throwable $r2;

        r0 := @this: android.app.backup.BackupDataInput;

     label1:
        $l0 = r0.<android.app.backup.BackupDataInput: long mBackupReader>;

        staticinvoke <android.app.backup.BackupDataInput: void dtor(long)>($l0);

     label2:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        return;

     label3:
        $r2 := @caughtexception;

        specialinvoke r0.<java.lang.Object: void finalize()>();

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public int getDataSize()
    {
        android.app.backup.BackupDataInput r0;
        boolean $z0;
        java.lang.IllegalStateException $r1;
        android.app.backup.BackupDataInput$EntityHeader $r2;
        int $i0;

        r0 := @this: android.app.backup.BackupDataInput;

        $z0 = r0.<android.app.backup.BackupDataInput: boolean mHeaderReady>;

        if $z0 == 0 goto label1;

        $r2 = r0.<android.app.backup.BackupDataInput: android.app.backup.BackupDataInput$EntityHeader mHeader>;

        $i0 = $r2.<android.app.backup.BackupDataInput$EntityHeader: int dataSize>;

        return $i0;

     label1:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Entity header not read");

        throw $r1;
    }

    public java.lang.String getKey()
    {
        android.app.backup.BackupDataInput r0;
        boolean $z0;
        java.lang.IllegalStateException $r1;
        android.app.backup.BackupDataInput$EntityHeader $r2;
        java.lang.String $r3;

        r0 := @this: android.app.backup.BackupDataInput;

        $z0 = r0.<android.app.backup.BackupDataInput: boolean mHeaderReady>;

        if $z0 == 0 goto label1;

        $r2 = r0.<android.app.backup.BackupDataInput: android.app.backup.BackupDataInput$EntityHeader mHeader>;

        $r3 = $r2.<android.app.backup.BackupDataInput$EntityHeader: java.lang.String key>;

        return $r3;

     label1:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Entity header not read");

        throw $r1;
    }

    public int readEntityData(byte[], int, int) throws java.io.IOException
    {
        android.app.backup.BackupDataInput r0;
        int i0, i2, i3;
        boolean $z0;
        java.lang.IllegalStateException $r1;
        long $l1;
        java.lang.StringBuilder $r2;
        java.lang.String $r4, $r7;
        java.io.IOException $r6;
        byte[] r8;

        r0 := @this: android.app.backup.BackupDataInput;

        r8 := @parameter0: byte[];

        i2 := @parameter1: int;

        i0 := @parameter2: int;

        $z0 = r0.<android.app.backup.BackupDataInput: boolean mHeaderReady>;

        if $z0 == 0 goto label2;

        $l1 = r0.<android.app.backup.BackupDataInput: long mBackupReader>;

        i3 = specialinvoke r0.<android.app.backup.BackupDataInput: int readEntityData_native(long,byte[],int,int)>($l1, r8, i2, i0);

        if i3 < 0 goto label1;

        return i3;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("result=0x");

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = new java.io.IOException;

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>($r7);

        throw $r6;

     label2:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Entity header not read");

        throw $r1;
    }

    public boolean readNextHeader() throws java.io.IOException
    {
        android.app.backup.BackupDataInput r0;
        int i0;
        android.app.backup.BackupDataInput$EntityHeader $r2;
        long $l1;
        java.lang.StringBuilder $r3;
        java.lang.String $r5, $r8;
        java.io.IOException $r7;

        r0 := @this: android.app.backup.BackupDataInput;

        $l1 = r0.<android.app.backup.BackupDataInput: long mBackupReader>;

        $r2 = r0.<android.app.backup.BackupDataInput: android.app.backup.BackupDataInput$EntityHeader mHeader>;

        i0 = specialinvoke r0.<android.app.backup.BackupDataInput: int readNextHeader_native(long,android.app.backup.BackupDataInput$EntityHeader)>($l1, $r2);

        if i0 != 0 goto label1;

        r0.<android.app.backup.BackupDataInput: boolean mHeaderReady> = 1;

        return 1;

     label1:
        if i0 <= 0 goto label2;

        r0.<android.app.backup.BackupDataInput: boolean mHeaderReady> = 0;

        return 0;

     label2:
        r0.<android.app.backup.BackupDataInput: boolean mHeaderReady> = 0;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("failed: 0x");

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = new java.io.IOException;

        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.io.IOException: void <init>(java.lang.String)>($r8);

        throw $r7;
    }

    public void skipEntityData() throws java.io.IOException
    {
        android.app.backup.BackupDataInput r0;
        boolean $z0;
        java.lang.IllegalStateException $r1;
        long $l0;

        r0 := @this: android.app.backup.BackupDataInput;

        $z0 = r0.<android.app.backup.BackupDataInput: boolean mHeaderReady>;

        if $z0 == 0 goto label1;

        $l0 = r0.<android.app.backup.BackupDataInput: long mBackupReader>;

        specialinvoke r0.<android.app.backup.BackupDataInput: int skipEntityData_native(long)>($l0);

        return;

     label1:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Entity header not read");

        throw $r1;
    }
}
