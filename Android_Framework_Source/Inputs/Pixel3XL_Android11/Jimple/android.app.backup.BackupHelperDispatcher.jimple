public class android.app.backup.BackupHelperDispatcher extends java.lang.Object
{
    private static final java.lang.String TAG;
    java.util.TreeMap mHelpers;

    public void <init>()
    {
        android.app.backup.BackupHelperDispatcher r0;
        java.util.TreeMap $r1;

        r0 := @this: android.app.backup.BackupHelperDispatcher;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.TreeMap;

        specialinvoke $r1.<java.util.TreeMap: void <init>()>();

        r0.<android.app.backup.BackupHelperDispatcher: java.util.TreeMap mHelpers> = $r1;

        return;
    }

    private static native int allocateHeader_native(android.app.backup.BackupHelperDispatcher$Header, java.io.FileDescriptor);

    private void doOneBackup(android.os.ParcelFileDescriptor, android.app.backup.BackupDataOutput, android.os.ParcelFileDescriptor, android.app.backup.BackupHelperDispatcher$Header, android.app.backup.BackupHelper) throws java.io.IOException
    {
        android.app.backup.BackupHelperDispatcher r0;
        android.app.backup.BackupDataOutput r1;
        android.os.ParcelFileDescriptor r2, r19;
        android.app.backup.BackupHelperDispatcher$Header r3;
        android.app.backup.BackupHelper r4;
        java.io.FileDescriptor r5;
        java.lang.StringBuilder $r6, $r13;
        java.io.IOException $r10, $r17;
        java.lang.String $r11, $r12, $r18;
        int i0, i1;

        r0 := @this: android.app.backup.BackupHelperDispatcher;

        r19 := @parameter0: android.os.ParcelFileDescriptor;

        r1 := @parameter1: android.app.backup.BackupDataOutput;

        r2 := @parameter2: android.os.ParcelFileDescriptor;

        r3 := @parameter3: android.app.backup.BackupHelperDispatcher$Header;

        r4 := @parameter4: android.app.backup.BackupHelper;

        r5 = virtualinvoke r2.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        i0 = staticinvoke <android.app.backup.BackupHelperDispatcher: int allocateHeader_native(android.app.backup.BackupHelperDispatcher$Header,java.io.FileDescriptor)>(r3, r5);

        if i0 < 0 goto label2;

        $r12 = r3.<android.app.backup.BackupHelperDispatcher$Header: java.lang.String keyPrefix>;

        virtualinvoke r1.<android.app.backup.BackupDataOutput: void setKeyPrefix(java.lang.String)>($r12);

        interfaceinvoke r4.<android.app.backup.BackupHelper: void performBackup(android.os.ParcelFileDescriptor,android.app.backup.BackupDataOutput,android.os.ParcelFileDescriptor)>(r19, r1, r2);

        i1 = staticinvoke <android.app.backup.BackupHelperDispatcher: int writeHeader_native(android.app.backup.BackupHelperDispatcher$Header,java.io.FileDescriptor,int)>(r3, r5, i0);

        if i1 != 0 goto label1;

        return;

     label1:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("writeHeader_native failed (error ");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r17 = new java.io.IOException;

        $r18 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.io.IOException: void <init>(java.lang.String)>($r18);

        throw $r17;

     label2:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("allocateHeader_native failed (error ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r10 = new java.io.IOException;

        $r11 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.io.IOException: void <init>(java.lang.String)>($r11);

        throw $r10;
    }

    private static native int readHeader_native(android.app.backup.BackupHelperDispatcher$Header, java.io.FileDescriptor);

    private static native int skipChunk_native(java.io.FileDescriptor, int);

    private static native int writeHeader_native(android.app.backup.BackupHelperDispatcher$Header, java.io.FileDescriptor, int);

    public void addHelper(java.lang.String, android.app.backup.BackupHelper)
    {
        android.app.backup.BackupHelperDispatcher r0;
        java.lang.String r1;
        android.app.backup.BackupHelper r2;
        java.util.TreeMap $r3;

        r0 := @this: android.app.backup.BackupHelperDispatcher;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.app.backup.BackupHelper;

        $r3 = r0.<android.app.backup.BackupHelperDispatcher: java.util.TreeMap mHelpers>;

        virtualinvoke $r3.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public void performBackup(android.os.ParcelFileDescriptor, android.app.backup.BackupDataOutput, android.os.ParcelFileDescriptor) throws java.io.IOException
    {
        android.app.backup.BackupHelperDispatcher r0;
        android.os.ParcelFileDescriptor r1, r3;
        android.app.backup.BackupDataOutput r2;
        int i0, $i3;
        android.app.backup.BackupHelperDispatcher$Header $r6;
        java.util.TreeMap $r7, r32;
        java.lang.Object $r8, $r10, $r11, $r19, $r22;
        java.util.Set $r9;
        java.lang.String $r12, $r15, $r18, $r21, $r25, $r29, $r30;
        java.lang.StringBuilder $r13, $r23;
        android.app.backup.BackupHelper $r20, r34;
        java.io.FileDescriptor r33;
        java.util.Iterator r35;
        boolean $z0;
        java.util.Map$Entry r36;

        r0 := @this: android.app.backup.BackupHelperDispatcher;

        r1 := @parameter0: android.os.ParcelFileDescriptor;

        r2 := @parameter1: android.app.backup.BackupDataOutput;

        r3 := @parameter2: android.os.ParcelFileDescriptor;

        $r6 = new android.app.backup.BackupHelperDispatcher$Header;

        specialinvoke $r6.<android.app.backup.BackupHelperDispatcher$Header: void <init>(android.app.backup.BackupHelperDispatcher$1)>(null);

        $r7 = r0.<android.app.backup.BackupHelperDispatcher: java.util.TreeMap mHelpers>;

        $r8 = virtualinvoke $r7.<java.util.TreeMap: java.lang.Object clone()>();

        r32 = (java.util.TreeMap) $r8;

        if r1 == null goto label4;

        r33 = virtualinvoke r1.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

     label1:
        i0 = staticinvoke <android.app.backup.BackupHelperDispatcher: int readHeader_native(android.app.backup.BackupHelperDispatcher$Header,java.io.FileDescriptor)>($r6, r33);

        if i0 < 0 goto label4;

        if i0 != 0 goto label1;

        $r21 = $r6.<android.app.backup.BackupHelperDispatcher$Header: java.lang.String keyPrefix>;

        $r22 = virtualinvoke r32.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>($r21);

        r34 = (android.app.backup.BackupHelper) $r22;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handling existing helper \'");

        $r25 = $r6.<android.app.backup.BackupHelperDispatcher$Header: java.lang.String keyPrefix>;

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' ");

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r34);

        $r29 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("BackupHelperDispatcher", $r29);

        if r34 == null goto label2;

        specialinvoke r0.<android.app.backup.BackupHelperDispatcher: void doOneBackup(android.os.ParcelFileDescriptor,android.app.backup.BackupDataOutput,android.os.ParcelFileDescriptor,android.app.backup.BackupHelperDispatcher$Header,android.app.backup.BackupHelper)>(r1, r2, r3, $r6, r34);

        $r30 = $r6.<android.app.backup.BackupHelperDispatcher$Header: java.lang.String keyPrefix>;

        virtualinvoke r32.<java.util.TreeMap: java.lang.Object remove(java.lang.Object)>($r30);

        goto label3;

     label2:
        $i3 = $r6.<android.app.backup.BackupHelperDispatcher$Header: int chunkSize>;

        staticinvoke <android.app.backup.BackupHelperDispatcher: int skipChunk_native(java.io.FileDescriptor,int)>(r33, $i3);

     label3:
        goto label1;

     label4:
        $r9 = virtualinvoke r32.<java.util.TreeMap: java.util.Set entrySet()>();

        r35 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();

     label5:
        $z0 = interfaceinvoke r35.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r10 = interfaceinvoke r35.<java.util.Iterator: java.lang.Object next()>();

        r36 = (java.util.Map$Entry) $r10;

        $r11 = interfaceinvoke r36.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r12 = (java.lang.String) $r11;

        $r6.<android.app.backup.BackupHelperDispatcher$Header: java.lang.String keyPrefix> = $r12;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handling new helper \'");

        $r15 = $r6.<android.app.backup.BackupHelperDispatcher$Header: java.lang.String keyPrefix>;

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r18 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("BackupHelperDispatcher", $r18);

        $r19 = interfaceinvoke r36.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r20 = (android.app.backup.BackupHelper) $r19;

        specialinvoke r0.<android.app.backup.BackupHelperDispatcher: void doOneBackup(android.os.ParcelFileDescriptor,android.app.backup.BackupDataOutput,android.os.ParcelFileDescriptor,android.app.backup.BackupHelperDispatcher$Header,android.app.backup.BackupHelper)>(r1, r2, r3, $r6, $r20);

        goto label5;

     label6:
        return;
    }

    public void performRestore(android.app.backup.BackupDataInput, int, android.os.ParcelFileDescriptor) throws java.io.IOException
    {
        android.app.backup.BackupHelperDispatcher r0;
        android.os.ParcelFileDescriptor r1;
        java.lang.String r3, $r13, $r20, $r21, r23;
        android.app.backup.BackupDataInputStream $r4;
        boolean $z0, $z1, z2, z3;
        java.util.TreeMap $r5, $r14;
        java.util.Collection $r6;
        java.lang.Object $r7, $r15;
        android.app.backup.BackupHelper $r8, r24;
        java.lang.StringBuilder $r9, $r16;
        int $i2, $i3, i4, i5;
        android.app.backup.BackupDataInput r22;
        java.util.Iterator r27;

        r0 := @this: android.app.backup.BackupHelperDispatcher;

        r22 := @parameter0: android.app.backup.BackupDataInput;

        i4 := @parameter1: int;

        r1 := @parameter2: android.os.ParcelFileDescriptor;

        z2 = 0;

        $r4 = new android.app.backup.BackupDataInputStream;

        specialinvoke $r4.<android.app.backup.BackupDataInputStream: void <init>(android.app.backup.BackupDataInput)>(r22);

     label1:
        $z0 = virtualinvoke r22.<android.app.backup.BackupDataInput: boolean readNextHeader()>();

        if $z0 == 0 goto label6;

        r3 = virtualinvoke r22.<android.app.backup.BackupDataInput: java.lang.String getKey()>();

        i5 = virtualinvoke r3.<java.lang.String: int indexOf(int)>(58);

        if i5 <= 0 goto label4;

        r23 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>(0, i5);

        $r14 = r0.<android.app.backup.BackupHelperDispatcher: java.util.TreeMap mHelpers>;

        $r15 = virtualinvoke $r14.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>(r23);

        r24 = (android.app.backup.BackupHelper) $r15;

        if r24 == null goto label2;

        $i2 = virtualinvoke r22.<android.app.backup.BackupDataInput: int getDataSize()>();

        $r4.<android.app.backup.BackupDataInputStream: int dataSize> = $i2;

        $i3 = i5 + 1;

        $r21 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int)>($i3);

        $r4.<android.app.backup.BackupDataInputStream: java.lang.String key> = $r21;

        interfaceinvoke r24.<android.app.backup.BackupHelper: void restoreEntity(android.app.backup.BackupDataInputStream)>($r4);

        z3 = z2;

        goto label3;

     label2:
        z3 = z2;

        if z2 != 0 goto label3;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t find helper for: \'");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r20 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BackupHelperDispatcher", $r20);

        z3 = 1;

     label3:
        goto label5;

     label4:
        z3 = z2;

        if z2 != 0 goto label5;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Entity with no prefix: \'");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r13 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BackupHelperDispatcher", $r13);

        z3 = 1;

     label5:
        virtualinvoke r22.<android.app.backup.BackupDataInput: void skipEntityData()>();

        z2 = z3;

        goto label1;

     label6:
        $r5 = r0.<android.app.backup.BackupHelperDispatcher: java.util.TreeMap mHelpers>;

        $r6 = virtualinvoke $r5.<java.util.TreeMap: java.util.Collection values()>();

        r27 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();

     label7:
        $z1 = interfaceinvoke r27.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label8;

        $r7 = interfaceinvoke r27.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (android.app.backup.BackupHelper) $r7;

        interfaceinvoke $r8.<android.app.backup.BackupHelper: void writeNewStateDescription(android.os.ParcelFileDescriptor)>(r1);

        goto label7;

     label8:
        return;
    }

    public static void <clinit>()
    {
        <android.app.backup.BackupHelperDispatcher: java.lang.String TAG> = "BackupHelperDispatcher";

        return;
    }
}
