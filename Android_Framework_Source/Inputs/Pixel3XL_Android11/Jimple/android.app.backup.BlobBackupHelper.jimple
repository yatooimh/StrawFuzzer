public abstract class android.app.backup.BlobBackupHelper extends java.lang.Object implements android.app.backup.BackupHelper
{
    private static final boolean DEBUG;
    private static final java.lang.String TAG;
    private final int mCurrentBlobVersion;
    private final java.lang.String[] mKeys;

    public transient void <init>(int, java.lang.String[])
    {
        android.app.backup.BlobBackupHelper r0;
        int i0;
        java.lang.String[] r1;

        r0 := @this: android.app.backup.BlobBackupHelper;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.app.backup.BlobBackupHelper: int mCurrentBlobVersion> = i0;

        r0.<android.app.backup.BlobBackupHelper: java.lang.String[] mKeys> = r1;

        return;
    }

    private long checksum(byte[])
    {
        android.app.backup.BlobBackupHelper r0;
        java.util.zip.CRC32 r1;
        java.io.ByteArrayInputStream r2;
        int i0;
        long l1;
        java.lang.Exception $r3;
        byte[] r4, r5;

        r0 := @this: android.app.backup.BlobBackupHelper;

        r4 := @parameter0: byte[];

        if r4 == null goto label9;

     label1:
        r1 = new java.util.zip.CRC32;

        specialinvoke r1.<java.util.zip.CRC32: void <init>()>();

        r2 = new java.io.ByteArrayInputStream;

        specialinvoke r2.<java.io.ByteArrayInputStream: void <init>(byte[])>(r4);

        r5 = newarray (byte)[4096];

     label2:
        i0 = virtualinvoke r2.<java.io.ByteArrayInputStream: int read(byte[])>(r5);

     label3:
        if i0 < 0 goto label6;

     label4:
        virtualinvoke r1.<java.util.zip.CRC32: void update(byte[],int,int)>(r5, 0, i0);

     label5:
        goto label2;

     label6:
        l1 = virtualinvoke r1.<java.util.zip.CRC32: long getValue()>();

     label7:
        return l1;

     label8:
        $r3 := @caughtexception;

     label9:
        return -1L;

        catch java.lang.Exception from label1 to label2 with label8;
        catch java.lang.Exception from label2 to label3 with label8;
        catch java.lang.Exception from label4 to label5 with label8;
        catch java.lang.Exception from label6 to label7 with label8;
    }

    private byte[] deflate(byte[])
    {
        android.app.backup.BlobBackupHelper r0;
        int $i0;
        java.lang.Throwable $r1;
        java.lang.String $r3, $r4;
        byte[] r5, r6;
        java.io.ByteArrayOutputStream r12;
        java.io.DataOutputStream r13;
        java.util.zip.DeflaterOutputStream r14;
        java.lang.StringBuilder r15;
        java.io.IOException r16;

        r0 := @this: android.app.backup.BlobBackupHelper;

        r5 := @parameter0: byte[];

        r6 = null;

        if r5 == null goto label4;

     label1:
        r12 = new java.io.ByteArrayOutputStream;

        specialinvoke r12.<java.io.ByteArrayOutputStream: void <init>()>();

        r13 = new java.io.DataOutputStream;

        specialinvoke r13.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>(r12);

        $i0 = r0.<android.app.backup.BlobBackupHelper: int mCurrentBlobVersion>;

        virtualinvoke r13.<java.io.DataOutputStream: void writeInt(int)>($i0);

        r14 = new java.util.zip.DeflaterOutputStream;

        specialinvoke r14.<java.util.zip.DeflaterOutputStream: void <init>(java.io.OutputStream)>(r12);

        virtualinvoke r14.<java.util.zip.DeflaterOutputStream: void write(byte[])>(r5);

        virtualinvoke r14.<java.util.zip.DeflaterOutputStream: void close()>();

        r6 = virtualinvoke r12.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

        r15 = new java.lang.StringBuilder;

        specialinvoke r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to process payload: ");

        r16 = (java.io.IOException) $r1;

        $r3 = virtualinvoke r16.<java.io.IOException: java.lang.String getMessage()>();

        virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r4 = virtualinvoke r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BlobBackupHelper", $r4);

        r6 = null;

     label4:
        return r6;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private byte[] inflate(byte[])
    {
        android.app.backup.BlobBackupHelper r0;
        byte[] r1, r7, r8;
        int $i0, i1, i2;
        java.lang.String $r2, $r5, $r6;
        java.lang.Throwable $r3;
        java.io.ByteArrayInputStream r16;
        java.io.DataInputStream r17;
        java.lang.StringBuilder r18, r21;
        java.util.zip.InflaterInputStream r19;
        java.io.ByteArrayOutputStream r20;
        java.io.IOException r22;

        r0 := @this: android.app.backup.BlobBackupHelper;

        r7 := @parameter0: byte[];

        r8 = null;

        if r7 == null goto label11;

     label01:
        r16 = new java.io.ByteArrayInputStream;

        specialinvoke r16.<java.io.ByteArrayInputStream: void <init>(byte[])>(r7);

        r17 = new java.io.DataInputStream;

        specialinvoke r17.<java.io.DataInputStream: void <init>(java.io.InputStream)>(r16);

        i1 = virtualinvoke r17.<java.io.DataInputStream: int readInt()>();

        $i0 = r0.<android.app.backup.BlobBackupHelper: int mCurrentBlobVersion>;

        if i1 <= $i0 goto label03;

        r18 = new java.lang.StringBuilder;

        specialinvoke r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Saved payload from unrecognized version ");

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r2 = virtualinvoke r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BlobBackupHelper", $r2);

     label02:
        return null;

     label03:
        r19 = new java.util.zip.InflaterInputStream;

        specialinvoke r19.<java.util.zip.InflaterInputStream: void <init>(java.io.InputStream)>(r16);

        r20 = new java.io.ByteArrayOutputStream;

        specialinvoke r20.<java.io.ByteArrayOutputStream: void <init>()>();

        r1 = newarray (byte)[4096];

     label04:
        i2 = virtualinvoke r19.<java.util.zip.InflaterInputStream: int read(byte[])>(r1);

     label05:
        if i2 <= 0 goto label08;

     label06:
        virtualinvoke r20.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(r1, 0, i2);

     label07:
        goto label04;

     label08:
        virtualinvoke r19.<java.util.zip.InflaterInputStream: void close()>();

        virtualinvoke r20.<java.io.ByteArrayOutputStream: void flush()>();

        r8 = virtualinvoke r20.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

     label09:
        goto label11;

     label10:
        $r3 := @caughtexception;

        r21 = new java.lang.StringBuilder;

        specialinvoke r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to process restored payload: ");

        r22 = (java.io.IOException) $r3;

        $r5 = virtualinvoke r22.<java.io.IOException: java.lang.String getMessage()>();

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r6 = virtualinvoke r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BlobBackupHelper", $r6);

        r8 = null;

     label11:
        return r8;

        catch java.io.IOException from label01 to label02 with label10;
        catch java.io.IOException from label03 to label04 with label10;
        catch java.io.IOException from label04 to label05 with label10;
        catch java.io.IOException from label06 to label07 with label10;
        catch java.io.IOException from label08 to label09 with label10;
    }

    private android.util.ArrayMap readOldState(android.os.ParcelFileDescriptor)
    {
        android.app.backup.BlobBackupHelper r0;
        int i0, $i1, i5, i6;
        android.util.ArrayMap $r3;
        java.io.DataInputStream $r4;
        java.io.FileInputStream $r5;
        java.io.FileDescriptor $r6;
        java.lang.String $r9, $r10, $r17, $r19;
        long $l3;
        java.lang.Long $r11;
        java.lang.Throwable $r13;
        java.lang.Exception $r14;
        java.lang.StringBuilder $r15, r22;
        android.os.ParcelFileDescriptor r20;

        r0 := @this: android.app.backup.BlobBackupHelper;

        r20 := @parameter0: android.os.ParcelFileDescriptor;

        $r3 = new android.util.ArrayMap;

        specialinvoke $r3.<android.util.ArrayMap: void <init>()>();

        $r4 = new java.io.DataInputStream;

        $r5 = new java.io.FileInputStream;

        $r6 = virtualinvoke r20.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        specialinvoke $r5.<java.io.FileInputStream: void <init>(java.io.FileDescriptor)>($r6);

        specialinvoke $r4.<java.io.DataInputStream: void <init>(java.io.InputStream)>($r5);

     label01:
        i5 = virtualinvoke $r4.<java.io.DataInputStream: int readInt()>();

        $i1 = r0.<android.app.backup.BlobBackupHelper: int mCurrentBlobVersion>;

        if i5 > $i1 goto label07;

        i0 = virtualinvoke $r4.<java.io.DataInputStream: int readInt()>();

     label02:
        i6 = 0;

     label03:
        if i6 >= i0 goto label06;

     label04:
        $r10 = virtualinvoke $r4.<java.io.DataInputStream: java.lang.String readUTF()>();

        $l3 = virtualinvoke $r4.<java.io.DataInputStream: long readLong()>();

        $r11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r11);

     label05:
        i6 = i6 + 1;

        goto label03;

     label06:
        goto label11;

     label07:
        r22 = new java.lang.StringBuilder;

        specialinvoke r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Prior state from unrecognized version ");

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        $r9 = virtualinvoke r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BlobBackupHelper", $r9);

     label08:
        goto label11;

     label09:
        $r14 := @caughtexception;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error examining prior backup state ");

        $r17 = virtualinvoke $r14.<java.lang.Exception: java.lang.String getMessage()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BlobBackupHelper", $r19);

        virtualinvoke $r3.<android.util.ArrayMap: void clear()>();

        goto label11;

     label10:
        $r13 := @caughtexception;

        virtualinvoke $r3.<android.util.ArrayMap: void clear()>();

     label11:
        return $r3;

        catch java.io.EOFException from label01 to label02 with label10;
        catch java.lang.Exception from label01 to label02 with label09;
        catch java.io.EOFException from label04 to label05 with label10;
        catch java.lang.Exception from label04 to label05 with label09;
        catch java.io.EOFException from label07 to label08 with label10;
        catch java.lang.Exception from label07 to label08 with label09;
    }

    private void writeBackupState(android.util.ArrayMap, android.os.ParcelFileDescriptor)
    {
        android.app.backup.BlobBackupHelper r0;
        long l0;
        java.io.FileDescriptor $r1;
        int $i1, i3, i4;
        java.lang.Object $r2, $r3;
        java.lang.Long $r4;
        java.lang.Throwable $r5;
        android.util.ArrayMap r6;
        android.os.ParcelFileDescriptor r7;
        java.io.FileOutputStream r8;
        java.io.DataOutputStream r9;
        java.lang.String r10;

        r0 := @this: android.app.backup.BlobBackupHelper;

        r6 := @parameter0: android.util.ArrayMap;

        r7 := @parameter1: android.os.ParcelFileDescriptor;

     label01:
        r8 = new java.io.FileOutputStream;

        $r1 = virtualinvoke r7.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        specialinvoke r8.<java.io.FileOutputStream: void <init>(java.io.FileDescriptor)>($r1);

        r9 = new java.io.DataOutputStream;

        specialinvoke r9.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>(r8);

        $i1 = r0.<android.app.backup.BlobBackupHelper: int mCurrentBlobVersion>;

        virtualinvoke r9.<java.io.DataOutputStream: void writeInt(int)>($i1);

     label02:
        if r6 == null goto label05;

     label03:
        i3 = virtualinvoke r6.<android.util.ArrayMap: int size()>();

     label04:
        goto label06;

     label05:
        i3 = 0;

     label06:
        virtualinvoke r9.<java.io.DataOutputStream: void writeInt(int)>(i3);

     label07:
        i4 = 0;

     label08:
        if i4 >= i3 goto label11;

     label09:
        $r2 = virtualinvoke r6.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i4);

        r10 = (java.lang.String) $r2;

        $r3 = virtualinvoke r6.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i4);

        $r4 = (java.lang.Long) $r3;

        l0 = virtualinvoke $r4.<java.lang.Long: long longValue()>();

        virtualinvoke r9.<java.io.DataOutputStream: void writeUTF(java.lang.String)>(r10);

        virtualinvoke r9.<java.io.DataOutputStream: void writeLong(long)>(l0);

     label10:
        i4 = i4 + 1;

        goto label08;

     label11:
        goto label13;

     label12:
        $r5 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BlobBackupHelper", "Unable to write updated state", $r5);

     label13:
        return;

        catch java.io.IOException from label01 to label02 with label12;
        catch java.io.IOException from label03 to label04 with label12;
        catch java.io.IOException from label06 to label07 with label12;
        catch java.io.IOException from label09 to label10 with label12;
    }

    protected abstract void applyRestoredPayload(java.lang.String, byte[]);

    protected abstract byte[] getBackupPayload(java.lang.String);

    public void performBackup(android.os.ParcelFileDescriptor, android.app.backup.BackupDataOutput, android.os.ParcelFileDescriptor)
    {
        android.app.backup.BlobBackupHelper r0;
        android.os.ParcelFileDescriptor r1, r17;
        android.util.ArrayMap r2, $r6;
        int i0, $i3, $i5, i10;
        java.lang.String r3, $r13, $r15;
        byte[] r4, $r7;
        long l1, $l7;
        java.lang.Long r5, $r8;
        java.lang.Object $r10;
        byte $b8;
        java.lang.Exception $r11;
        java.lang.Throwable $r16;
        android.app.backup.BackupDataOutput r18;
        java.lang.String[] r20;
        java.lang.StringBuilder r23;

        r0 := @this: android.app.backup.BlobBackupHelper;

        r17 := @parameter0: android.os.ParcelFileDescriptor;

        r18 := @parameter1: android.app.backup.BackupDataOutput;

        r1 := @parameter2: android.os.ParcelFileDescriptor;

        r2 = specialinvoke r0.<android.app.backup.BlobBackupHelper: android.util.ArrayMap readOldState(android.os.ParcelFileDescriptor)>(r17);

        $r6 = new android.util.ArrayMap;

        specialinvoke $r6.<android.util.ArrayMap: void <init>()>();

     label01:
        r20 = r0.<android.app.backup.BlobBackupHelper: java.lang.String[] mKeys>;

        i0 = lengthof r20;

     label02:
        i10 = 0;

     label03:
        if i10 >= i0 goto label12;

        r3 = r20[i10];

     label04:
        $r7 = virtualinvoke r0.<android.app.backup.BlobBackupHelper: byte[] getBackupPayload(java.lang.String)>(r3);

        r4 = specialinvoke r0.<android.app.backup.BlobBackupHelper: byte[] deflate(byte[])>($r7);

        l1 = specialinvoke r0.<android.app.backup.BlobBackupHelper: long checksum(byte[])>(r4);

        $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);

        virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, $r8);

        $r10 = virtualinvoke r2.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r3);

        r5 = (java.lang.Long) $r10;

     label05:
        if r5 == null goto label07;

     label06:
        $l7 = virtualinvoke r5.<java.lang.Long: long longValue()>();

        $b8 = l1 cmp $l7;

        if $b8 == 0 goto label11;

     label07:
        if r4 == null goto label10;

     label08:
        $i3 = lengthof r4;

        virtualinvoke r18.<android.app.backup.BackupDataOutput: int writeEntityHeader(java.lang.String,int)>(r3, $i3);

        $i5 = lengthof r4;

        virtualinvoke r18.<android.app.backup.BackupDataOutput: int writeEntityData(byte[],int)>(r4, $i5);

     label09:
        goto label11;

     label10:
        virtualinvoke r18.<android.app.backup.BackupDataOutput: int writeEntityHeader(java.lang.String,int)>(r3, -1);

     label11:
        i10 = i10 + 1;

        goto label03;

     label12:
        specialinvoke r0.<android.app.backup.BlobBackupHelper: void writeBackupState(android.util.ArrayMap,android.os.ParcelFileDescriptor)>($r6, r1);

        goto label17;

     label13:
        $r16 := @caughtexception;

        goto label18;

     label14:
        $r11 := @caughtexception;

     label15:
        r23 = new java.lang.StringBuilder;

        specialinvoke r23.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to record notification state: ");

        $r13 = virtualinvoke $r11.<java.lang.Exception: java.lang.String getMessage()>();

        virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BlobBackupHelper", $r15);

        virtualinvoke $r6.<android.util.ArrayMap: void clear()>();

     label16:
        goto label12;

     label17:
        return;

     label18:
        specialinvoke r0.<android.app.backup.BlobBackupHelper: void writeBackupState(android.util.ArrayMap,android.os.ParcelFileDescriptor)>($r6, r1);

        throw $r16;

        catch java.lang.Exception from label01 to label02 with label14;
        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Exception from label04 to label05 with label14;
        catch java.lang.Throwable from label04 to label05 with label13;
        catch java.lang.Exception from label06 to label07 with label14;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Exception from label08 to label09 with label14;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Exception from label10 to label11 with label14;
        catch java.lang.Throwable from label10 to label11 with label13;
        catch java.lang.Throwable from label15 to label16 with label13;
    }

    public void restoreEntity(android.app.backup.BackupDataInputStream)
    {
        android.app.backup.BlobBackupHelper r0;
        java.lang.String r1, $r8, $r10, $r16, $r18;
        java.lang.String[] $r2, $r3, $r9;
        int $i0, $i1, $i2, i6;
        byte[] $r4, r21;
        boolean $z0;
        java.lang.Exception $r11;
        java.lang.StringBuilder $r12, r20;
        android.app.backup.BackupDataInputStream r19;

        r0 := @this: android.app.backup.BlobBackupHelper;

        r19 := @parameter0: android.app.backup.BackupDataInputStream;

        r1 = virtualinvoke r19.<android.app.backup.BackupDataInputStream: java.lang.String getKey()>();

        i6 = 0;

     label1:
        $r2 = r0.<android.app.backup.BlobBackupHelper: java.lang.String[] mKeys>;

        $i0 = lengthof $r2;

        if i6 >= $i0 goto label4;

        $r9 = r0.<android.app.backup.BlobBackupHelper: java.lang.String[] mKeys>;

        $r10 = $r9[i6];

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z0 == 0 goto label3;

     label2:
        goto label4;

     label3:
        i6 = i6 + 1;

        goto label1;

     label4:
        $r3 = r0.<android.app.backup.BlobBackupHelper: java.lang.String[] mKeys>;

        $i1 = lengthof $r3;

        if i6 < $i1 goto label6;

        r20 = new java.lang.StringBuilder;

        specialinvoke r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unrecognized key ");

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ignoring");

        $r8 = virtualinvoke r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BlobBackupHelper", $r8);

     label5:
        return;

     label6:
        $i2 = virtualinvoke r19.<android.app.backup.BackupDataInputStream: int size()>();

        r21 = newarray (byte)[$i2];

        virtualinvoke r19.<android.app.backup.BackupDataInputStream: int read(byte[])>(r21);

        $r4 = specialinvoke r0.<android.app.backup.BlobBackupHelper: byte[] inflate(byte[])>(r21);

        virtualinvoke r0.<android.app.backup.BlobBackupHelper: void applyRestoredPayload(java.lang.String,byte[])>(r1, $r4);

     label7:
        goto label9;

     label8:
        $r11 := @caughtexception;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception restoring entity ");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ");

        $r16 = virtualinvoke $r11.<java.lang.Exception: java.lang.String getMessage()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BlobBackupHelper", $r18);

     label9:
        return;

        catch java.lang.Exception from label1 to label2 with label8;
        catch java.lang.Exception from label4 to label5 with label8;
        catch java.lang.Exception from label6 to label7 with label8;
    }

    public void writeNewStateDescription(android.os.ParcelFileDescriptor)
    {
        android.app.backup.BlobBackupHelper r0;
        android.os.ParcelFileDescriptor r1;

        r0 := @this: android.app.backup.BlobBackupHelper;

        r1 := @parameter0: android.os.ParcelFileDescriptor;

        specialinvoke r0.<android.app.backup.BlobBackupHelper: void writeBackupState(android.util.ArrayMap,android.os.ParcelFileDescriptor)>(null, r1);

        return;
    }

    public static void <clinit>()
    {
        <android.app.backup.BlobBackupHelper: java.lang.String TAG> = "BlobBackupHelper";

        <android.app.backup.BlobBackupHelper: boolean DEBUG> = 0;

        return;
    }
}
