class android.app.backup.IBackupManager$Stub$Proxy extends java.lang.Object implements android.app.backup.IBackupManager
{
    public static android.app.backup.IBackupManager sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public void acknowledgeFullBackupOrRestore(int, boolean, java.lang.String, java.lang.String, android.app.backup.IFullBackupRestoreObserver) throws android.os.RemoteException
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        int i0;
        boolean z0, $z1;
        java.lang.String r1, r9;
        android.app.backup.IFullBackupRestoreObserver r2;
        android.os.Parcel r3, r4;
        android.os.IBinder $r5, r10;
        android.app.backup.IBackupManager $r6, $r7;
        java.lang.Throwable $r8;
        byte b1;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r9 := @parameter2: java.lang.String;

        r1 := @parameter3: java.lang.String;

        r2 := @parameter4: android.app.backup.IFullBackupRestoreObserver;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IBackupManager");

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i0);

     label02:
        if z0 == 0 goto label03;

        b1 = 1;

        goto label04;

     label03:
        b1 = 0;

     label04:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(b1);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r9);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r1);

     label05:
        if r2 == null goto label08;

     label06:
        r10 = interfaceinvoke r2.<android.app.backup.IFullBackupRestoreObserver: android.os.IBinder asBinder()>();

     label07:
        goto label09;

     label08:
        r10 = null;

     label09:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r10);

        $r5 = r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(26, r3, r4, 0);

        if $z1 != 0 goto label11;

        $r6 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        if $r6 == null goto label11;

        $r7 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        interfaceinvoke $r7.<android.app.backup.IBackupManager: void acknowledgeFullBackupOrRestore(int,boolean,java.lang.String,java.lang.String,android.app.backup.IFullBackupRestoreObserver)>(i0, z0, r9, r1, r2);

     label10:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label11:
        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label12:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label13:
        $r8 := @caughtexception;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label04 to label05 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
    }

    public void acknowledgeFullBackupOrRestoreForUser(int, int, boolean, java.lang.String, java.lang.String, android.app.backup.IFullBackupRestoreObserver) throws android.os.RemoteException
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        int i0, i1;
        boolean z0, $z1;
        java.lang.String r1, r14;
        android.app.backup.IFullBackupRestoreObserver r2;
        android.os.Parcel r3, r4;
        android.os.IBinder $r5, r15;
        android.app.backup.IBackupManager $r6, $r7;
        java.lang.Throwable $r8, $r9, $r10, $r11, $r12, $r13, r16;
        byte b2;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        r14 := @parameter3: java.lang.String;

        r1 := @parameter4: java.lang.String;

        r2 := @parameter5: android.app.backup.IFullBackupRestoreObserver;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IBackupManager");

     label02:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i0);

     label03:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i1);

     label04:
        if z0 == 0 goto label05;

        b2 = 1;

        goto label06;

     label05:
        b2 = 0;

     label06:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(b2);

     label07:
        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r14);

     label08:
        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r1);

     label09:
        if r2 == null goto label12;

     label10:
        r15 = interfaceinvoke r2.<android.app.backup.IFullBackupRestoreObserver: android.os.IBinder asBinder()>();

     label11:
        goto label13;

     label12:
        r15 = null;

     label13:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r15);

     label14:
        $r5 = r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(25, r3, r4, 0);

        if $z1 != 0 goto label16;

        $r6 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        if $r6 == null goto label16;

        $r7 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        interfaceinvoke $r7.<android.app.backup.IBackupManager: void acknowledgeFullBackupOrRestoreForUser(int,int,boolean,java.lang.String,java.lang.String,android.app.backup.IFullBackupRestoreObserver)>(i0, i1, z0, r14, r1, r2);

     label15:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label16:
        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label17:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label18:
        $r10 := @caughtexception;

        r16 = $r10;

        goto label24;

     label19:
        $r11 := @caughtexception;

        r16 = $r11;

        goto label24;

     label20:
        $r9 := @caughtexception;

        r16 = $r9;

        goto label24;

     label21:
        $r12 := @caughtexception;

        r16 = $r12;

        goto label24;

     label22:
        $r8 := @caughtexception;

        r16 = $r8;

        goto label24;

     label23:
        $r13 := @caughtexception;

        r16 = $r13;

     label24:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r16;

        catch java.lang.Throwable from label01 to label02 with label23;
        catch java.lang.Throwable from label02 to label03 with label22;
        catch java.lang.Throwable from label03 to label04 with label21;
        catch java.lang.Throwable from label06 to label07 with label21;
        catch java.lang.Throwable from label07 to label08 with label20;
        catch java.lang.Throwable from label08 to label09 with label19;
        catch java.lang.Throwable from label10 to label11 with label19;
        catch java.lang.Throwable from label13 to label14 with label19;
        catch java.lang.Throwable from label14 to label15 with label18;
        catch java.lang.Throwable from label16 to label17 with label18;
    }

    public void adbBackup(int, android.os.ParcelFileDescriptor, boolean, boolean, boolean, boolean, boolean, boolean, boolean, boolean, java.lang.String[]) throws android.os.RemoteException
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        int i0;
        boolean z0, z1, z2, z3, z4, z5, z6, z7, $z8;
        java.lang.String[] r1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        android.app.backup.IBackupManager $r5, $r6;
        java.lang.Throwable $r7;
        android.os.ParcelFileDescriptor r8;
        byte b2, b3, b4, b5, b6, b7, b8, b9;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        i0 := @parameter0: int;

        r8 := @parameter1: android.os.ParcelFileDescriptor;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        z2 := @parameter4: boolean;

        z3 := @parameter5: boolean;

        z4 := @parameter6: boolean;

        z5 := @parameter7: boolean;

        z6 := @parameter8: boolean;

        z7 := @parameter9: boolean;

        r1 := @parameter10: java.lang.String[];

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IBackupManager");

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

     label02:
        if r8 == null goto label05;

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r8.<android.os.ParcelFileDescriptor: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        if z0 == 0 goto label07;

        b2 = 1;

        goto label08;

     label07:
        b2 = 0;

     label08:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(b2);

     label09:
        if z1 == 0 goto label10;

        b3 = 1;

        goto label11;

     label10:
        b3 = 0;

     label11:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(b3);

     label12:
        if z2 == 0 goto label13;

        b4 = 1;

        goto label14;

     label13:
        b4 = 0;

     label14:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(b4);

     label15:
        if z3 == 0 goto label16;

        b5 = 1;

        goto label17;

     label16:
        b5 = 0;

     label17:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(b5);

     label18:
        if z4 == 0 goto label19;

        b6 = 1;

        goto label20;

     label19:
        b6 = 0;

     label20:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(b6);

     label21:
        if z5 == 0 goto label22;

        b7 = 1;

        goto label23;

     label22:
        b7 = 0;

     label23:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(b7);

     label24:
        if z6 == 0 goto label25;

        b8 = 1;

        goto label26;

     label25:
        b8 = 0;

     label26:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(b8);

     label27:
        if z7 == 0 goto label28;

        b9 = 1;

        goto label29;

     label28:
        b9 = 0;

     label29:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(b9);

        virtualinvoke r2.<android.os.Parcel: void writeStringArray(java.lang.String[])>(r1);

        $r4 = r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z8 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(22, r2, r3, 0);

        if $z8 != 0 goto label31;

        $r5 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        if $r5 == null goto label31;

        $r6 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.app.backup.IBackupManager: void adbBackup(int,android.os.ParcelFileDescriptor,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,java.lang.String[])>(i0, r8, z0, z1, z2, z3, z4, z5, z6, z7, r1);

     label30:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label31:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label32:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label33:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label33;
        catch java.lang.Throwable from label03 to label04 with label33;
        catch java.lang.Throwable from label05 to label06 with label33;
        catch java.lang.Throwable from label08 to label09 with label33;
        catch java.lang.Throwable from label11 to label12 with label33;
        catch java.lang.Throwable from label14 to label15 with label33;
        catch java.lang.Throwable from label17 to label18 with label33;
        catch java.lang.Throwable from label20 to label21 with label33;
        catch java.lang.Throwable from label23 to label24 with label33;
        catch java.lang.Throwable from label26 to label27 with label33;
        catch java.lang.Throwable from label29 to label30 with label33;
        catch java.lang.Throwable from label31 to label32 with label33;
    }

    public void adbRestore(int, android.os.ParcelFileDescriptor) throws android.os.RemoteException
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.app.backup.IBackupManager $r4, $r5;
        java.lang.Throwable $r6;
        android.os.ParcelFileDescriptor r7;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: android.os.ParcelFileDescriptor;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IBackupManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.os.ParcelFileDescriptor: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r3 = r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(24, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.app.backup.IBackupManager: void adbRestore(int,android.os.ParcelFileDescriptor)>(i0, r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void agentConnected(java.lang.String, android.os.IBinder) throws android.os.RemoteException
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        android.os.IBinder r1, $r4;
        android.os.Parcel r2, r3;
        boolean $z0;
        android.app.backup.IBackupManager $r5, $r6;
        java.lang.Throwable $r7;
        java.lang.String r8;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        r8 := @parameter0: java.lang.String;

        r1 := @parameter1: android.os.IBinder;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IBackupManager");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r1);

        $r4 = r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.app.backup.IBackupManager: void agentConnected(java.lang.String,android.os.IBinder)>(r8, r1);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void agentConnectedForUser(int, java.lang.String, android.os.IBinder) throws android.os.RemoteException
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        int i0;
        android.os.IBinder r1, $r4;
        android.os.Parcel r2, r3;
        boolean $z0;
        android.app.backup.IBackupManager $r5, $r6;
        java.lang.Throwable $r7;
        java.lang.String r8;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        i0 := @parameter0: int;

        r8 := @parameter1: java.lang.String;

        r1 := @parameter2: android.os.IBinder;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IBackupManager");

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r1);

        $r4 = r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.app.backup.IBackupManager: void agentConnectedForUser(int,java.lang.String,android.os.IBinder)>(i0, r8, r1);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void agentDisconnected(java.lang.String) throws android.os.RemoteException
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.app.backup.IBackupManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IBackupManager");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        $r3 = r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(9, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.app.backup.IBackupManager: void agentDisconnected(java.lang.String)>(r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void agentDisconnectedForUser(int, java.lang.String) throws android.os.RemoteException
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.app.backup.IBackupManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IBackupManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        $r3 = r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.app.backup.IBackupManager: void agentDisconnectedForUser(int,java.lang.String)>(i0, r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.os.IBinder asBinder()
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        $r1 = r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public void backupNow() throws android.os.RemoteException
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.app.backup.IBackupManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IBackupManager");

        $r4 = r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(21, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.app.backup.IBackupManager: void backupNow()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void backupNowForUser(int) throws android.os.RemoteException
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.app.backup.IBackupManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IBackupManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(20, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.app.backup.IBackupManager: void backupNowForUser(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.app.backup.IRestoreSession beginRestoreSessionForUser(int, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        int i0;
        java.lang.String r1, r9;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4, $r5;
        boolean $z0;
        android.app.backup.IBackupManager $r6, $r7;
        java.lang.Throwable $r8;
        android.app.backup.IRestoreSession r10, r11;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        i0 := @parameter0: int;

        r9 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IBackupManager");

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r9);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r4 = r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(45, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        r10 = interfaceinvoke $r7.<android.app.backup.IBackupManager: android.app.backup.IRestoreSession beginRestoreSessionForUser(int,java.lang.String,java.lang.String)>(i0, r9, r1);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r10;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        $r5 = virtualinvoke r3.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r11 = staticinvoke <android.app.backup.IRestoreSession$Stub: android.app.backup.IRestoreSession asInterface(android.os.IBinder)>($r5);

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r11;

     label5:
        $r8 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void cancelBackups() throws android.os.RemoteException
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.app.backup.IBackupManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IBackupManager");

        $r4 = r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(57, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.app.backup.IBackupManager: void cancelBackups()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void cancelBackupsForUser(int) throws android.os.RemoteException
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.app.backup.IBackupManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IBackupManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(56, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.app.backup.IBackupManager: void cancelBackupsForUser(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void clearBackupData(java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        java.lang.String r1, r8;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.app.backup.IBackupManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        r8 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IBackupManager");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r4 = r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.app.backup.IBackupManager: void clearBackupData(java.lang.String,java.lang.String)>(r8, r1);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void clearBackupDataForUser(int, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        int i0;
        java.lang.String r1, r8;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.app.backup.IBackupManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        i0 := @parameter0: int;

        r8 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IBackupManager");

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r4 = r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.app.backup.IBackupManager: void clearBackupDataForUser(int,java.lang.String,java.lang.String)>(i0, r8, r1);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void dataChanged(java.lang.String) throws android.os.RemoteException
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.app.backup.IBackupManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IBackupManager");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        $r3 = r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.app.backup.IBackupManager: void dataChanged(java.lang.String)>(r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void dataChangedForUser(int, java.lang.String) throws android.os.RemoteException
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.app.backup.IBackupManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IBackupManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        $r3 = r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.app.backup.IBackupManager: void dataChangedForUser(int,java.lang.String)>(i0, r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void excludeKeysFromRestore(java.lang.String, java.util.List) throws android.os.RemoteException
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        java.util.List r1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.app.backup.IBackupManager $r5, $r6;
        java.lang.Throwable $r7;
        java.lang.String r8;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        r8 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.List;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IBackupManager");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        virtualinvoke r2.<android.os.Parcel: void writeStringList(java.util.List)>(r1);

        $r4 = r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(60, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.app.backup.IBackupManager: void excludeKeysFromRestore(java.lang.String,java.util.List)>(r8, r1);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String[] filterAppsEligibleForBackupForUser(int, java.lang.String[]) throws android.os.RemoteException
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.app.backup.IBackupManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String[] r7, r8, r9;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: java.lang.String[];

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IBackupManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeStringArray(java.lang.String[])>(r7);

        $r3 = r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(53, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        r8 = interfaceinvoke $r5.<android.app.backup.IBackupManager: java.lang.String[] filterAppsEligibleForBackupForUser(int,java.lang.String[])>(i0, r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r9 = virtualinvoke r2.<android.os.Parcel: java.lang.String[] createStringArray()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void fullTransportBackupForUser(int, java.lang.String[]) throws android.os.RemoteException
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.app.backup.IBackupManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String[] r7;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: java.lang.String[];

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IBackupManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeStringArray(java.lang.String[])>(r7);

        $r3 = r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(23, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.app.backup.IBackupManager: void fullTransportBackupForUser(int,java.lang.String[])>(i0, r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public long getAvailableRestoreTokenForUser(int, java.lang.String) throws android.os.RemoteException
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.app.backup.IBackupManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;
        long l1, l2;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IBackupManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        $r3 = r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(51, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        l1 = interfaceinvoke $r5.<android.app.backup.IBackupManager: long getAvailableRestoreTokenForUser(int,java.lang.String)>(i0, r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return l1;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        l2 = virtualinvoke r2.<android.os.Parcel: long readLong()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return l2;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.content.Intent getConfigurationIntent(java.lang.String) throws android.os.RemoteException
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        int $i0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.app.backup.IBackupManager $r6, $r7;
        java.lang.Throwable $r8;
        java.lang.String r9;
        android.content.Intent r10, r11;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        r9 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IBackupManager");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r9);

        $r3 = r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(39, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        r10 = interfaceinvoke $r7.<android.app.backup.IBackupManager: android.content.Intent getConfigurationIntent(java.lang.String)>(r9);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label5;

        $r4 = <android.content.Intent: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r11 = (android.content.Intent) $r5;

     label4:
        goto label6;

     label5:
        r11 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r11;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public android.content.Intent getConfigurationIntentForUser(int, java.lang.String) throws android.os.RemoteException
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        int i0, $i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.app.backup.IBackupManager $r6, $r7;
        java.lang.Throwable $r8;
        java.lang.String r9;
        android.content.Intent r10, r11;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        i0 := @parameter0: int;

        r9 := @parameter1: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IBackupManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r9);

        $r3 = r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(38, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        r10 = interfaceinvoke $r7.<android.app.backup.IBackupManager: android.content.Intent getConfigurationIntentForUser(int,java.lang.String)>(i0, r9);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i1 == 0 goto label5;

        $r4 = <android.content.Intent: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r11 = (android.content.Intent) $r5;

     label4:
        goto label6;

     label5:
        r11 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r11;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public java.lang.String getCurrentTransport() throws android.os.RemoteException
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.app.backup.IBackupManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7, r8;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IBackupManager");

        $r3 = r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(29, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<android.app.backup.IBackupManager: java.lang.String getCurrentTransport()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: java.lang.String readString()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.content.ComponentName getCurrentTransportComponentForUser(int) throws android.os.RemoteException
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        int i0, $i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.app.backup.IBackupManager $r6, $r7;
        java.lang.Throwable $r8;
        android.content.ComponentName r9, r10;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IBackupManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(30, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<android.app.backup.IBackupManager: android.content.ComponentName getCurrentTransportComponentForUser(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i1 == 0 goto label5;

        $r4 = <android.content.ComponentName: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r10 = (android.content.ComponentName) $r5;

     label4:
        goto label6;

     label5:
        r10 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public java.lang.String getCurrentTransportForUser(int) throws android.os.RemoteException
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.app.backup.IBackupManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7, r8;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IBackupManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(28, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<android.app.backup.IBackupManager: java.lang.String getCurrentTransportForUser(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: java.lang.String readString()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.content.Intent getDataManagementIntent(java.lang.String) throws android.os.RemoteException
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        int $i0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.app.backup.IBackupManager $r6, $r7;
        java.lang.Throwable $r8;
        java.lang.String r9;
        android.content.Intent r10, r11;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        r9 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IBackupManager");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r9);

        $r3 = r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(43, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        r10 = interfaceinvoke $r7.<android.app.backup.IBackupManager: android.content.Intent getDataManagementIntent(java.lang.String)>(r9);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label5;

        $r4 = <android.content.Intent: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r11 = (android.content.Intent) $r5;

     label4:
        goto label6;

     label5:
        r11 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r11;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public android.content.Intent getDataManagementIntentForUser(int, java.lang.String) throws android.os.RemoteException
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        int i0, $i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.app.backup.IBackupManager $r6, $r7;
        java.lang.Throwable $r8;
        java.lang.String r9;
        android.content.Intent r10, r11;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        i0 := @parameter0: int;

        r9 := @parameter1: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IBackupManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r9);

        $r3 = r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(42, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        r10 = interfaceinvoke $r7.<android.app.backup.IBackupManager: android.content.Intent getDataManagementIntentForUser(int,java.lang.String)>(i0, r9);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i1 == 0 goto label5;

        $r4 = <android.content.Intent: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r11 = (android.content.Intent) $r5;

     label4:
        goto label6;

     label5:
        r11 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r11;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public java.lang.CharSequence getDataManagementLabelForUser(int, java.lang.String) throws android.os.RemoteException
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        int i0, $i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.app.backup.IBackupManager $r6, $r7;
        java.lang.Throwable $r8;
        java.lang.String r9;
        java.lang.CharSequence r10, r11;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        i0 := @parameter0: int;

        r9 := @parameter1: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IBackupManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r9);

        $r3 = r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(44, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        r10 = interfaceinvoke $r7.<android.app.backup.IBackupManager: java.lang.CharSequence getDataManagementLabelForUser(int,java.lang.String)>(i0, r9);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i1 == 0 goto label5;

        $r4 = <android.text.TextUtils: android.os.Parcelable$Creator CHAR_SEQUENCE_CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r11 = (java.lang.CharSequence) $r5;

     label4:
        goto label6;

     label5:
        r11 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r11;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public java.lang.String getDestinationString(java.lang.String) throws android.os.RemoteException
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.app.backup.IBackupManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7, r8, r9;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IBackupManager");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        $r3 = r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(41, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        r8 = interfaceinvoke $r5.<android.app.backup.IBackupManager: java.lang.String getDestinationString(java.lang.String)>(r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r9 = virtualinvoke r2.<android.os.Parcel: java.lang.String readString()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String getDestinationStringForUser(int, java.lang.String) throws android.os.RemoteException
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.app.backup.IBackupManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7, r8, r9;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IBackupManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        $r3 = r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(40, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        r8 = interfaceinvoke $r5.<android.app.backup.IBackupManager: java.lang.String getDestinationStringForUser(int,java.lang.String)>(i0, r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r9 = virtualinvoke r2.<android.os.Parcel: java.lang.String readString()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        return "android.app.backup.IBackupManager";
    }

    public java.lang.String[] getTransportWhitelist() throws android.os.RemoteException
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.app.backup.IBackupManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String[] r7, r8;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IBackupManager");

        $r3 = r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(34, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<android.app.backup.IBackupManager: java.lang.String[] getTransportWhitelist()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: java.lang.String[] createStringArray()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.os.UserHandle getUserForAncestralSerialNumber(long) throws android.os.RemoteException
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        long l0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        int $i1;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.app.backup.IBackupManager $r6, $r7;
        java.lang.Throwable $r8;
        android.os.UserHandle r9, r10;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        l0 := @parameter0: long;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IBackupManager");

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>(l0);

        $r3 = r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(58, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<android.app.backup.IBackupManager: android.os.UserHandle getUserForAncestralSerialNumber(long)>(l0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i1 == 0 goto label5;

        $r4 = <android.os.UserHandle: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r10 = (android.os.UserHandle) $r5;

     label4:
        goto label6;

     label5:
        r10 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public boolean hasBackupPassword() throws android.os.RemoteException
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        boolean $z0, z1, z2;
        android.app.backup.IBackupManager $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IBackupManager");

        r6 = r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(19, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.app.backup.IBackupManager: boolean hasBackupPassword()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public void initializeTransportsForUser(int, java.lang.String[], android.app.backup.IBackupObserver) throws android.os.RemoteException
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        int i0;
        android.app.backup.IBackupObserver r1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4, r9;
        boolean $z0;
        android.app.backup.IBackupManager $r5, $r6;
        java.lang.Throwable $r7;
        java.lang.String[] r8;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        i0 := @parameter0: int;

        r8 := @parameter1: java.lang.String[];

        r1 := @parameter2: android.app.backup.IBackupObserver;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IBackupManager");

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeStringArray(java.lang.String[])>(r8);

     label02:
        if r1 == null goto label05;

     label03:
        r9 = interfaceinvoke r1.<android.app.backup.IBackupObserver: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r9 = null;

     label06:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r9);

        $r4 = r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r2, r3, 0);

        if $z0 != 0 goto label08;

        $r5 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        if $r5 == null goto label08;

        $r6 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.app.backup.IBackupManager: void initializeTransportsForUser(int,java.lang.String[],android.app.backup.IBackupObserver)>(i0, r8, r1);

     label07:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public boolean isAppEligibleForBackupForUser(int, java.lang.String) throws android.os.RemoteException
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder r3;
        boolean $z0, z1, z2;
        android.app.backup.IBackupManager $r4, $r5;
        java.lang.Throwable $r6;
        int i0, i1;
        java.lang.String r7;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IBackupManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        r3 = r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(52, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r4 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        if $r4 == null goto label5;

        $r5 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        z2 = interfaceinvoke $r5.<android.app.backup.IBackupManager: boolean isAppEligibleForBackupForUser(int,java.lang.String)>(i0, r7);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i1 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isBackupEnabled() throws android.os.RemoteException
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        boolean $z0, z1, z2;
        android.app.backup.IBackupManager $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IBackupManager");

        r6 = r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(17, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.app.backup.IBackupManager: boolean isBackupEnabled()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isBackupEnabledForUser(int) throws android.os.RemoteException
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        boolean $z0, z1, z2;
        android.app.backup.IBackupManager $r3, $r4;
        java.lang.Throwable $r5;
        int i0, i1;
        android.os.IBinder r6;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IBackupManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        r6 = r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(16, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.app.backup.IBackupManager: boolean isBackupEnabledForUser(int)>(i0);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i1 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isBackupServiceActive(int) throws android.os.RemoteException
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        boolean $z0, z1, z2;
        android.app.backup.IBackupManager $r3, $r4;
        java.lang.Throwable $r5;
        int i0, i1;
        android.os.IBinder r6;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IBackupManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        r6 = r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(49, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.app.backup.IBackupManager: boolean isBackupServiceActive(int)>(i0);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i1 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isUserReadyForBackup(int) throws android.os.RemoteException
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        boolean $z0, z1, z2;
        android.app.backup.IBackupManager $r3, $r4;
        java.lang.Throwable $r5;
        int i0, i1;
        android.os.IBinder r6;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IBackupManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        r6 = r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(50, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.app.backup.IBackupManager: boolean isUserReadyForBackup(int)>(i0);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i1 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public android.content.ComponentName[] listAllTransportComponentsForUser(int) throws android.os.RemoteException
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object[] $r5;
        android.app.backup.IBackupManager $r6, $r7;
        java.lang.Throwable $r8;
        android.content.ComponentName[] r9, r10;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IBackupManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(33, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<android.app.backup.IBackupManager: android.content.ComponentName[] listAllTransportComponentsForUser(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $r4 = <android.content.ComponentName: android.os.Parcelable$Creator CREATOR>;

        $r5 = virtualinvoke r2.<android.os.Parcel: java.lang.Object[] createTypedArray(android.os.Parcelable$Creator)>($r4);

        r10 = (android.content.ComponentName[]) $r5;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label5:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String[] listAllTransports() throws android.os.RemoteException
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.app.backup.IBackupManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String[] r7, r8;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IBackupManager");

        $r3 = r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(32, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<android.app.backup.IBackupManager: java.lang.String[] listAllTransports()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: java.lang.String[] createStringArray()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String[] listAllTransportsForUser(int) throws android.os.RemoteException
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.app.backup.IBackupManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String[] r7, r8;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IBackupManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(31, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<android.app.backup.IBackupManager: java.lang.String[] listAllTransportsForUser(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: java.lang.String[] createStringArray()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void opComplete(int, long) throws android.os.RemoteException
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        int i0;
        long l1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.app.backup.IBackupManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IBackupManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>(l1);

        $r4 = r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(47, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.app.backup.IBackupManager: void opComplete(int,long)>(i0, l1);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void opCompleteForUser(int, int, long) throws android.os.RemoteException
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        int i0, i1;
        long l2;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.app.backup.IBackupManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        l2 := @parameter2: long;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IBackupManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>(l2);

        $r4 = r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(46, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.app.backup.IBackupManager: void opCompleteForUser(int,int,long)>(i0, i1, l2);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int requestBackup(java.lang.String[], android.app.backup.IBackupObserver, android.app.backup.IBackupManagerMonitor, int) throws android.os.RemoteException
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        android.app.backup.IBackupObserver r1;
        android.app.backup.IBackupManagerMonitor r2;
        android.os.Parcel r3, r4;
        android.os.IBinder $r5, r10, r11;
        boolean $z0;
        android.app.backup.IBackupManager $r6, $r7;
        java.lang.Throwable $r8;
        java.lang.String[] r9;
        int i0, i1, i2;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        r9 := @parameter0: java.lang.String[];

        r1 := @parameter1: android.app.backup.IBackupObserver;

        r2 := @parameter2: android.app.backup.IBackupManagerMonitor;

        i0 := @parameter3: int;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IBackupManager");

        virtualinvoke r3.<android.os.Parcel: void writeStringArray(java.lang.String[])>(r9);

     label02:
        if r1 == null goto label05;

     label03:
        r10 = interfaceinvoke r1.<android.app.backup.IBackupObserver: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r10 = null;

     label06:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r10);

     label07:
        r11 = null;

        if r2 == null goto label09;

     label08:
        r11 = interfaceinvoke r2.<android.app.backup.IBackupManagerMonitor: android.os.IBinder asBinder()>();

     label09:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r11);

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i0);

        $r5 = r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(55, r3, r4, 0);

        if $z0 != 0 goto label11;

        $r6 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        if $r6 == null goto label11;

        $r7 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        i1 = interfaceinvoke $r7.<android.app.backup.IBackupManager: int requestBackup(java.lang.String[],android.app.backup.IBackupObserver,android.app.backup.IBackupManagerMonitor,int)>(r9, r1, r2, i0);

     label10:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return i1;

     label11:
        virtualinvoke r4.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r4.<android.os.Parcel: int readInt()>();

     label12:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return i2;

     label13:
        $r8 := @caughtexception;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
    }

    public int requestBackupForUser(int, java.lang.String[], android.app.backup.IBackupObserver, android.app.backup.IBackupManagerMonitor, int) throws android.os.RemoteException
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        android.app.backup.IBackupObserver r1;
        android.app.backup.IBackupManagerMonitor r2;
        int i0, i1, i2, i3;
        android.os.Parcel r3, r4;
        android.os.IBinder $r5, r10, r11;
        boolean $z0;
        android.app.backup.IBackupManager $r6, $r7;
        java.lang.Throwable $r8;
        java.lang.String[] r9;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        i1 := @parameter0: int;

        r9 := @parameter1: java.lang.String[];

        r1 := @parameter2: android.app.backup.IBackupObserver;

        r2 := @parameter3: android.app.backup.IBackupManagerMonitor;

        i0 := @parameter4: int;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IBackupManager");

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r3.<android.os.Parcel: void writeStringArray(java.lang.String[])>(r9);

     label02:
        if r1 == null goto label05;

     label03:
        r10 = interfaceinvoke r1.<android.app.backup.IBackupObserver: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r10 = null;

     label06:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r10);

     label07:
        r11 = null;

        if r2 == null goto label09;

     label08:
        r11 = interfaceinvoke r2.<android.app.backup.IBackupManagerMonitor: android.os.IBinder asBinder()>();

     label09:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r11);

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i0);

        $r5 = r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(54, r3, r4, 0);

        if $z0 != 0 goto label11;

        $r6 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        if $r6 == null goto label11;

        $r7 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        i2 = interfaceinvoke $r7.<android.app.backup.IBackupManager: int requestBackupForUser(int,java.lang.String[],android.app.backup.IBackupObserver,android.app.backup.IBackupManagerMonitor,int)>(i1, r9, r1, r2, i0);

     label10:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return i2;

     label11:
        virtualinvoke r4.<android.os.Parcel: void readException()>();

        i3 = virtualinvoke r4.<android.os.Parcel: int readInt()>();

     label12:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return i3;

     label13:
        $r8 := @caughtexception;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
    }

    public void restoreAtInstall(java.lang.String, int) throws android.os.RemoteException
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.app.backup.IBackupManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IBackupManager");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(11, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.app.backup.IBackupManager: void restoreAtInstall(java.lang.String,int)>(r7, i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void restoreAtInstallForUser(int, java.lang.String, int) throws android.os.RemoteException
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        int i0, i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.app.backup.IBackupManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IBackupManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        $r3 = r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(10, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.app.backup.IBackupManager: void restoreAtInstallForUser(int,java.lang.String,int)>(i0, r7, i1);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String selectBackupTransport(java.lang.String) throws android.os.RemoteException
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.app.backup.IBackupManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7, r8, r9;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IBackupManager");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        $r3 = r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(36, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        r8 = interfaceinvoke $r5.<android.app.backup.IBackupManager: java.lang.String selectBackupTransport(java.lang.String)>(r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r9 = virtualinvoke r2.<android.os.Parcel: java.lang.String readString()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void selectBackupTransportAsyncForUser(int, android.content.ComponentName, android.app.backup.ISelectBackupTransportCallback) throws android.os.RemoteException
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        int i0;
        android.app.backup.ISelectBackupTransportCallback r1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4, r9;
        boolean $z0;
        android.app.backup.IBackupManager $r5, $r6;
        java.lang.Throwable $r7;
        android.content.ComponentName r8;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        i0 := @parameter0: int;

        r8 := @parameter1: android.content.ComponentName;

        r1 := @parameter2: android.app.backup.ISelectBackupTransportCallback;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IBackupManager");

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

     label02:
        if r8 == null goto label05;

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r8.<android.content.ComponentName: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        if r1 == null goto label09;

     label07:
        r9 = interfaceinvoke r1.<android.app.backup.ISelectBackupTransportCallback: android.os.IBinder asBinder()>();

     label08:
        goto label10;

     label09:
        r9 = null;

     label10:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r9);

        $r4 = r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(37, r2, r3, 0);

        if $z0 != 0 goto label12;

        $r5 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        if $r5 == null goto label12;

        $r6 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.app.backup.IBackupManager: void selectBackupTransportAsyncForUser(int,android.content.ComponentName,android.app.backup.ISelectBackupTransportCallback)>(i0, r8, r1);

     label11:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label12:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label13:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label14:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Throwable from label05 to label06 with label14;
        catch java.lang.Throwable from label07 to label08 with label14;
        catch java.lang.Throwable from label10 to label11 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
    }

    public java.lang.String selectBackupTransportForUser(int, java.lang.String) throws android.os.RemoteException
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.app.backup.IBackupManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7, r8, r9;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IBackupManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        $r3 = r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(35, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        r8 = interfaceinvoke $r5.<android.app.backup.IBackupManager: java.lang.String selectBackupTransportForUser(int,java.lang.String)>(i0, r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r9 = virtualinvoke r2.<android.os.Parcel: java.lang.String readString()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void setAncestralSerialNumber(long) throws android.os.RemoteException
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        long l0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.app.backup.IBackupManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        l0 := @parameter0: long;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IBackupManager");

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>(l0);

        $r4 = r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(59, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.app.backup.IBackupManager: void setAncestralSerialNumber(long)>(l0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void setAutoRestore(boolean) throws android.os.RemoteException
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        android.app.backup.IBackupManager $r5, $r6;
        java.lang.Throwable $r7;
        byte b0;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        z0 := @parameter0: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IBackupManager");

     label2:
        if z0 == 0 goto label3;

        b0 = 1;

        goto label4;

     label3:
        b0 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b0);

        $r4 = r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(15, r1, r2, 0);

        if $z1 != 0 goto label6;

        $r5 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        if $r5 == null goto label6;

        $r6 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.app.backup.IBackupManager: void setAutoRestore(boolean)>(z0);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void setAutoRestoreForUser(int, boolean) throws android.os.RemoteException
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        int i0;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        android.app.backup.IBackupManager $r5, $r6;
        java.lang.Throwable $r7;
        byte b1;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IBackupManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label2:
        if z0 == 0 goto label3;

        b1 = 1;

        goto label4;

     label3:
        b1 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b1);

        $r4 = r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(14, r1, r2, 0);

        if $z1 != 0 goto label6;

        $r5 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        if $r5 == null goto label6;

        $r6 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.app.backup.IBackupManager: void setAutoRestoreForUser(int,boolean)>(i0, z0);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void setBackupEnabled(boolean) throws android.os.RemoteException
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        android.app.backup.IBackupManager $r5, $r6;
        java.lang.Throwable $r7;
        byte b0;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        z0 := @parameter0: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IBackupManager");

     label2:
        if z0 == 0 goto label3;

        b0 = 1;

        goto label4;

     label3:
        b0 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b0);

        $r4 = r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(13, r1, r2, 0);

        if $z1 != 0 goto label6;

        $r5 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        if $r5 == null goto label6;

        $r6 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.app.backup.IBackupManager: void setBackupEnabled(boolean)>(z0);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void setBackupEnabledForUser(int, boolean) throws android.os.RemoteException
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        int i0;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        android.app.backup.IBackupManager $r5, $r6;
        java.lang.Throwable $r7;
        byte b1;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IBackupManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label2:
        if z0 == 0 goto label3;

        b1 = 1;

        goto label4;

     label3:
        b1 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b1);

        $r4 = r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(12, r1, r2, 0);

        if $z1 != 0 goto label6;

        $r5 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        if $r5 == null goto label6;

        $r6 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.app.backup.IBackupManager: void setBackupEnabledForUser(int,boolean)>(i0, z0);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public boolean setBackupPassword(java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        java.lang.String r1, r8;
        android.os.Parcel r2, r3;
        android.os.IBinder r4;
        int i0;
        boolean $z0, z1, z2;
        android.app.backup.IBackupManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        r8 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IBackupManager");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        r4 = r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(18, r2, r3, 0);

        if $z0 != 0 goto label5;

        $r5 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        if $r5 == null goto label5;

        $r6 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        z2 = interfaceinvoke $r6.<android.app.backup.IBackupManager: boolean setBackupPassword(java.lang.String,java.lang.String)>(r8, r1);

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public void setBackupServiceActive(int, boolean) throws android.os.RemoteException
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        int i0;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        android.app.backup.IBackupManager $r5, $r6;
        java.lang.Throwable $r7;
        byte b1;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IBackupManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label2:
        if z0 == 0 goto label3;

        b1 = 1;

        goto label4;

     label3:
        b1 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b1);

        $r4 = r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(48, r1, r2, 0);

        if $z1 != 0 goto label6;

        $r5 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        if $r5 == null goto label6;

        $r6 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.app.backup.IBackupManager: void setBackupServiceActive(int,boolean)>(i0, z0);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void updateTransportAttributesForUser(int, android.content.ComponentName, java.lang.String, android.content.Intent, java.lang.String, android.content.Intent, java.lang.CharSequence) throws android.os.RemoteException
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        int i0;
        java.lang.String r1, r3;
        android.content.Intent r2, r4;
        java.lang.CharSequence r5;
        android.os.Parcel r6, r7;
        android.os.IBinder $r8;
        boolean $z0;
        android.app.backup.IBackupManager $r9, $r10;
        java.lang.Throwable $r11, $r12, r14;
        android.content.ComponentName r13;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        i0 := @parameter0: int;

        r13 := @parameter1: android.content.ComponentName;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: android.content.Intent;

        r3 := @parameter4: java.lang.String;

        r4 := @parameter5: android.content.Intent;

        r5 := @parameter6: java.lang.CharSequence;

        r6 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r7 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r6.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IBackupManager");

     label02:
        virtualinvoke r6.<android.os.Parcel: void writeInt(int)>(i0);

     label03:
        if r13 == null goto label06;

     label04:
        virtualinvoke r6.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r13.<android.content.ComponentName: void writeToParcel(android.os.Parcel,int)>(r6, 0);

     label05:
        goto label07;

     label06:
        virtualinvoke r6.<android.os.Parcel: void writeInt(int)>(0);

     label07:
        virtualinvoke r6.<android.os.Parcel: void writeString(java.lang.String)>(r1);

     label08:
        if r2 == null goto label11;

     label09:
        virtualinvoke r6.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r2.<android.content.Intent: void writeToParcel(android.os.Parcel,int)>(r6, 0);

     label10:
        goto label12;

     label11:
        virtualinvoke r6.<android.os.Parcel: void writeInt(int)>(0);

     label12:
        virtualinvoke r6.<android.os.Parcel: void writeString(java.lang.String)>(r3);

     label13:
        if r4 == null goto label16;

     label14:
        virtualinvoke r6.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r4.<android.content.Intent: void writeToParcel(android.os.Parcel,int)>(r6, 0);

     label15:
        goto label17;

     label16:
        virtualinvoke r6.<android.os.Parcel: void writeInt(int)>(0);

     label17:
        if r5 == null goto label20;

     label18:
        virtualinvoke r6.<android.os.Parcel: void writeInt(int)>(1);

        staticinvoke <android.text.TextUtils: void writeToParcel(java.lang.CharSequence,android.os.Parcel,int)>(r5, r6, 0);

     label19:
        goto label21;

     label20:
        virtualinvoke r6.<android.os.Parcel: void writeInt(int)>(0);

     label21:
        $r8 = r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r8.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(27, r6, r7, 0);

        if $z0 != 0 goto label23;

        $r9 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        if $r9 == null goto label23;

        $r10 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager getDefaultImpl()>();

        interfaceinvoke $r10.<android.app.backup.IBackupManager: void updateTransportAttributesForUser(int,android.content.ComponentName,java.lang.String,android.content.Intent,java.lang.String,android.content.Intent,java.lang.CharSequence)>(i0, r13, r1, r2, r3, r4, r5);

     label22:
        virtualinvoke r7.<android.os.Parcel: void recycle()>();

        virtualinvoke r6.<android.os.Parcel: void recycle()>();

        return;

     label23:
        virtualinvoke r7.<android.os.Parcel: void readException()>();

     label24:
        virtualinvoke r7.<android.os.Parcel: void recycle()>();

        virtualinvoke r6.<android.os.Parcel: void recycle()>();

        return;

     label25:
        $r12 := @caughtexception;

        r14 = $r12;

        goto label27;

     label26:
        $r11 := @caughtexception;

        r14 = $r11;

     label27:
        virtualinvoke r7.<android.os.Parcel: void recycle()>();

        virtualinvoke r6.<android.os.Parcel: void recycle()>();

        throw r14;

        catch java.lang.Throwable from label01 to label02 with label26;
        catch java.lang.Throwable from label02 to label03 with label25;
        catch java.lang.Throwable from label04 to label05 with label25;
        catch java.lang.Throwable from label06 to label07 with label25;
        catch java.lang.Throwable from label07 to label08 with label25;
        catch java.lang.Throwable from label09 to label10 with label25;
        catch java.lang.Throwable from label11 to label12 with label25;
        catch java.lang.Throwable from label12 to label13 with label25;
        catch java.lang.Throwable from label14 to label15 with label25;
        catch java.lang.Throwable from label16 to label17 with label25;
        catch java.lang.Throwable from label18 to label19 with label25;
        catch java.lang.Throwable from label20 to label21 with label25;
        catch java.lang.Throwable from label21 to label22 with label25;
        catch java.lang.Throwable from label23 to label24 with label25;
    }
}
