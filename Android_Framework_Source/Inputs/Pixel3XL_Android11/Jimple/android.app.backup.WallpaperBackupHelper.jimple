public class android.app.backup.WallpaperBackupHelper extends android.app.backup.FileBackupHelperBase implements android.app.backup.BackupHelper
{
    private static final boolean DEBUG;
    private static final java.lang.String STAGE_FILE;
    private static final java.lang.String TAG;
    public static final java.lang.String WALLPAPER_IMAGE_KEY;
    public static final java.lang.String WALLPAPER_INFO_KEY;
    private final java.lang.String[] mKeys;
    private final android.app.WallpaperManager mWpm;

    static void <clinit>()
    {
        java.io.File $r0, $r1;
        java.lang.String $r2;

        <android.app.backup.WallpaperBackupHelper: java.lang.String WALLPAPER_INFO_KEY> = "/data/system/wallpaper_info.xml";

        <android.app.backup.WallpaperBackupHelper: java.lang.String WALLPAPER_IMAGE_KEY> = "/data/data/com.android.settings/files/wallpaper";

        <android.app.backup.WallpaperBackupHelper: java.lang.String TAG> = "WallpaperBackupHelper";

        <android.app.backup.WallpaperBackupHelper: boolean DEBUG> = 0;

        $r0 = new java.io.File;

        $r1 = staticinvoke <android.os.Environment: java.io.File getUserSystemDirectory(int)>(0);

        specialinvoke $r0.<java.io.File: void <init>(java.io.File,java.lang.String)>($r1, "wallpaper-tmp");

        $r2 = virtualinvoke $r0.<java.io.File: java.lang.String getAbsolutePath()>();

        <android.app.backup.WallpaperBackupHelper: java.lang.String STAGE_FILE> = $r2;

        return;
    }

    public void <init>(android.content.Context, java.lang.String[])
    {
        android.app.backup.WallpaperBackupHelper r0;
        android.content.Context r1;
        java.lang.String[] r2;
        java.lang.Object $r3;
        android.app.WallpaperManager $r4;

        r0 := @this: android.app.backup.WallpaperBackupHelper;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String[];

        specialinvoke r0.<android.app.backup.FileBackupHelperBase: void <init>(android.content.Context)>(r1);

        r0.<android.app.backup.WallpaperBackupHelper: android.content.Context mContext> = r1;

        r0.<android.app.backup.WallpaperBackupHelper: java.lang.String[] mKeys> = r2;

        $r3 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("wallpaper");

        $r4 = (android.app.WallpaperManager) $r3;

        r0.<android.app.backup.WallpaperBackupHelper: android.app.WallpaperManager mWpm> = $r4;

        return;
    }

    public void performBackup(android.os.ParcelFileDescriptor, android.app.backup.BackupDataOutput, android.os.ParcelFileDescriptor)
    {
        android.app.backup.WallpaperBackupHelper r0;
        android.os.ParcelFileDescriptor r1, r3;
        android.app.backup.BackupDataOutput r2;

        r0 := @this: android.app.backup.WallpaperBackupHelper;

        r1 := @parameter0: android.os.ParcelFileDescriptor;

        r2 := @parameter1: android.app.backup.BackupDataOutput;

        r3 := @parameter2: android.os.ParcelFileDescriptor;

        return;
    }

    public void restoreEntity(android.app.backup.BackupDataInputStream)
    {
        android.app.backup.WallpaperBackupHelper r0;
        boolean z0, $z1, $z2;
        android.app.WallpaperManager $r1, $r5;
        java.lang.String[] $r2;
        java.lang.String $r4, $r9, $r11, r15;
        java.lang.Throwable $r6, $r7, $r12, $r13;
        android.app.backup.BackupDataInputStream r14;
        java.io.File r23;
        java.io.FileInputStream r24;
        java.lang.StringBuilder r25;
        java.io.IOException r26;

        r0 := @this: android.app.backup.WallpaperBackupHelper;

        r14 := @parameter0: android.app.backup.BackupDataInputStream;

        $r1 = r0.<android.app.backup.WallpaperBackupHelper: android.app.WallpaperManager mWpm>;

        if $r1 != null goto label01;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("WallpaperBackupHelper", "restoreEntity(): no wallpaper service");

        return;

     label01:
        r15 = virtualinvoke r14.<android.app.backup.BackupDataInputStream: java.lang.String getKey()>();

        $r2 = r0.<android.app.backup.WallpaperBackupHelper: java.lang.String[] mKeys>;

        $z1 = virtualinvoke r0.<android.app.backup.WallpaperBackupHelper: boolean isKeyInList(java.lang.String,java.lang.String[])>(r15, $r2);

        if $z1 == 0 goto label20;

        $z2 = virtualinvoke r15.<java.lang.String: boolean equals(java.lang.Object)>("/data/data/com.android.settings/files/wallpaper");

        if $z2 == 0 goto label20;

        r23 = new java.io.File;

        $r4 = <android.app.backup.WallpaperBackupHelper: java.lang.String STAGE_FILE>;

        specialinvoke r23.<java.io.File: void <init>(java.lang.String)>($r4);

     label02:
        z0 = virtualinvoke r0.<android.app.backup.WallpaperBackupHelper: boolean writeFile(java.io.File,android.app.backup.BackupDataInputStream)>(r23, r14);

     label03:
        if z0 == 0 goto label17;

     label04:
        r24 = new java.io.FileInputStream;

        specialinvoke r24.<java.io.FileInputStream: void <init>(java.io.File)>(r23);

     label05:
        $r5 = r0.<android.app.backup.WallpaperBackupHelper: android.app.WallpaperManager mWpm>;

        virtualinvoke $r5.<android.app.WallpaperManager: void setStream(java.io.InputStream)>(r24);

     label06:
        virtualinvoke r24.<java.io.FileInputStream: void close()>();

     label07:
        goto label18;

     label08:
        $r12 := @caughtexception;

     label09:
        virtualinvoke r24.<java.io.FileInputStream: void close()>();

     label10:
        goto label13;

     label11:
        $r13 := @caughtexception;

     label12:
        virtualinvoke $r12.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r13);

     label13:
        throw $r12;

     label14:
        $r7 := @caughtexception;

     label15:
        r25 = new java.lang.StringBuilder;

        specialinvoke r25.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to set restored wallpaper: ");

        r26 = (java.io.IOException) $r7;

        $r9 = virtualinvoke r26.<java.io.IOException: java.lang.String getMessage()>();

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke r25.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("WallpaperBackupHelper", $r11);

     label16:
        goto label18;

     label17:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("WallpaperBackupHelper", "Unable to save restored wallpaper");

     label18:
        virtualinvoke r23.<java.io.File: boolean delete()>();

        goto label20;

     label19:
        $r6 := @caughtexception;

        virtualinvoke r23.<java.io.File: boolean delete()>();

        throw $r6;

     label20:
        return;

        catch java.lang.Throwable from label02 to label03 with label19;
        catch java.io.IOException from label04 to label05 with label14;
        catch java.lang.Throwable from label04 to label05 with label19;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.io.IOException from label06 to label07 with label14;
        catch java.lang.Throwable from label06 to label07 with label19;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.io.IOException from label12 to label13 with label14;
        catch java.lang.Throwable from label12 to label13 with label19;
        catch java.io.IOException from label13 to label14 with label14;
        catch java.lang.Throwable from label13 to label14 with label19;
        catch java.lang.Throwable from label15 to label16 with label19;
        catch java.lang.Throwable from label17 to label18 with label19;
    }

    public volatile void writeNewStateDescription(android.os.ParcelFileDescriptor)
    {
        android.app.backup.WallpaperBackupHelper r0;
        android.os.ParcelFileDescriptor r1;

        r0 := @this: android.app.backup.WallpaperBackupHelper;

        r1 := @parameter0: android.os.ParcelFileDescriptor;

        specialinvoke r0.<android.app.backup.FileBackupHelperBase: void writeNewStateDescription(android.os.ParcelFileDescriptor)>(r1);

        return;
    }
}
