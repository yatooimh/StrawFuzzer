public final class android.app.blob.BlobHandle extends java.lang.Object implements android.os.Parcelable
{
    public static final java.lang.String ALGO_SHA_256;
    public static final android.os.Parcelable$Creator CREATOR;
    private static final int LIMIT_BLOB_LABEL_LENGTH;
    private static final int LIMIT_BLOB_TAG_LENGTH;
    private static final java.lang.String[] SUPPORTED_ALGOS;
    public final java.lang.String algorithm;
    public final byte[] digest;
    public final long expiryTimeMillis;
    public final java.lang.CharSequence label;
    public final java.lang.String tag;

    static void <clinit>()
    {
        java.lang.String[] $r0;
        android.app.blob.BlobHandle$1 $r1;

        <android.app.blob.BlobHandle: int LIMIT_BLOB_TAG_LENGTH> = 128;

        <android.app.blob.BlobHandle: int LIMIT_BLOB_LABEL_LENGTH> = 100;

        <android.app.blob.BlobHandle: java.lang.String ALGO_SHA_256> = "SHA-256";

        $r0 = newarray (java.lang.String)[1];

        $r0[0] = "SHA-256";

        <android.app.blob.BlobHandle: java.lang.String[] SUPPORTED_ALGOS> = $r0;

        $r1 = new android.app.blob.BlobHandle$1;

        specialinvoke $r1.<android.app.blob.BlobHandle$1: void <init>()>();

        <android.app.blob.BlobHandle: android.os.Parcelable$Creator CREATOR> = $r1;

        return;
    }

    private void <init>(android.os.Parcel)
    {
        android.app.blob.BlobHandle r0;
        android.os.Parcel r1;
        java.lang.String $r2, $r5;
        byte[] $r3;
        java.lang.CharSequence $r4;
        long $l0;

        r0 := @this: android.app.blob.BlobHandle;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.app.blob.BlobHandle: java.lang.String algorithm> = $r2;

        $r3 = virtualinvoke r1.<android.os.Parcel: byte[] createByteArray()>();

        r0.<android.app.blob.BlobHandle: byte[] digest> = $r3;

        $r4 = virtualinvoke r1.<android.os.Parcel: java.lang.CharSequence readCharSequence()>();

        r0.<android.app.blob.BlobHandle: java.lang.CharSequence label> = $r4;

        $l0 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<android.app.blob.BlobHandle: long expiryTimeMillis> = $l0;

        $r5 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.app.blob.BlobHandle: java.lang.String tag> = $r5;

        return;
    }

    void <init>(android.os.Parcel, android.app.blob.BlobHandle$1)
    {
        android.app.blob.BlobHandle r0;
        android.os.Parcel r1;
        android.app.blob.BlobHandle$1 r2;

        r0 := @this: android.app.blob.BlobHandle;

        r1 := @parameter0: android.os.Parcel;

        r2 := @parameter1: android.app.blob.BlobHandle$1;

        specialinvoke r0.<android.app.blob.BlobHandle: void <init>(android.os.Parcel)>(r1);

        return;
    }

    private void <init>(java.lang.String, byte[], java.lang.CharSequence, long, java.lang.String)
    {
        android.app.blob.BlobHandle r0;
        java.lang.String r1, r4;
        byte[] r2;
        java.lang.CharSequence r3;
        long l0;

        r0 := @this: android.app.blob.BlobHandle;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: byte[];

        r3 := @parameter2: java.lang.CharSequence;

        l0 := @parameter3: long;

        r4 := @parameter4: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.app.blob.BlobHandle: java.lang.String algorithm> = r1;

        r0.<android.app.blob.BlobHandle: byte[] digest> = r2;

        r0.<android.app.blob.BlobHandle: java.lang.CharSequence label> = r3;

        r0.<android.app.blob.BlobHandle: long expiryTimeMillis> = l0;

        r0.<android.app.blob.BlobHandle: java.lang.String tag> = r4;

        return;
    }

    public static android.app.blob.BlobHandle create(java.lang.String, byte[], java.lang.CharSequence, long, java.lang.String)
    {
        byte[] r0;
        java.lang.CharSequence r1;
        long l0;
        java.lang.String r2, r4;
        android.app.blob.BlobHandle $r3;

        r4 := @parameter0: java.lang.String;

        r0 := @parameter1: byte[];

        r1 := @parameter2: java.lang.CharSequence;

        l0 := @parameter3: long;

        r2 := @parameter4: java.lang.String;

        $r3 = new android.app.blob.BlobHandle;

        specialinvoke $r3.<android.app.blob.BlobHandle: void <init>(java.lang.String,byte[],java.lang.CharSequence,long,java.lang.String)>(r4, r0, r1, l0, r2);

        virtualinvoke $r3.<android.app.blob.BlobHandle: void assertIsValid()>();

        return $r3;
    }

    public static android.app.blob.BlobHandle createFromXml(org.xmlpull.v1.XmlPullParser) throws java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String $r1, $r3, $r4;
        byte[] $r2;
        long $l0;
        android.app.blob.BlobHandle $r5;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $r1 = staticinvoke <com.android.internal.util.XmlUtils: java.lang.String readStringAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r0, "al");

        $r2 = staticinvoke <com.android.internal.util.XmlUtils: byte[] readByteArrayAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r0, "dg");

        $r3 = staticinvoke <com.android.internal.util.XmlUtils: java.lang.String readStringAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r0, "lbl");

        $l0 = staticinvoke <com.android.internal.util.XmlUtils: long readLongAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r0, "ex");

        $r4 = staticinvoke <com.android.internal.util.XmlUtils: java.lang.String readStringAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r0, "tg");

        $r5 = staticinvoke <android.app.blob.BlobHandle: android.app.blob.BlobHandle create(java.lang.String,byte[],java.lang.CharSequence,long,java.lang.String)>($r1, $r2, $r3, $l0, $r4);

        return $r5;
    }

    public static android.app.blob.BlobHandle createWithSha256(byte[], java.lang.CharSequence, long, java.lang.String)
    {
        byte[] r0;
        java.lang.CharSequence r1;
        long l0;
        java.lang.String r2;
        android.app.blob.BlobHandle $r3;

        r0 := @parameter0: byte[];

        r1 := @parameter1: java.lang.CharSequence;

        l0 := @parameter2: long;

        r2 := @parameter3: java.lang.String;

        $r3 = staticinvoke <android.app.blob.BlobHandle: android.app.blob.BlobHandle create(java.lang.String,byte[],java.lang.CharSequence,long,java.lang.String)>("SHA-256", r0, r1, l0, r2);

        return $r3;
    }

    private static java.lang.String encodeDigest(byte[])
    {
        byte[] r0;
        java.lang.String $r1;

        r0 := @parameter0: byte[];

        $r1 = staticinvoke <android.util.Base64: java.lang.String encodeToString(byte[],int)>(r0, 2);

        return $r1;
    }

    public static java.lang.String safeDigest(byte[])
    {
        java.lang.StringBuilder $r1;
        java.lang.String $r2, $r5, $r7, r9;
        int $i0, $i1;
        byte[] r8;

        r8 := @parameter0: byte[];

        r9 = staticinvoke <android.app.blob.BlobHandle: java.lang.String encodeDigest(byte[])>(r8);

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r9.<java.lang.String: java.lang.String substring(int,int)>(0, 2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("..");

        $i0 = virtualinvoke r9.<java.lang.String: int length()>();

        $i1 = $i0 - 2;

        $r5 = virtualinvoke r9.<java.lang.String: java.lang.String substring(int)>($i1);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    public void assertIsValid()
    {
        android.app.blob.BlobHandle r0;
        int i0, $i3;
        java.lang.String $r1, $r9, $r11;
        java.lang.String[] $r2;
        byte[] $r4;
        java.lang.CharSequence $r6, $r8;
        long $l1;
        boolean z1, z2;

        r0 := @this: android.app.blob.BlobHandle;

        $r2 = <android.app.blob.BlobHandle: java.lang.String[] SUPPORTED_ALGOS>;

        $r1 = r0.<android.app.blob.BlobHandle: java.lang.String algorithm>;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.String checkArgumentIsSupported(java.lang.String[],java.lang.String)>($r2, $r1);

        $r4 = r0.<android.app.blob.BlobHandle: byte[] digest>;

        staticinvoke <com.android.internal.util.Preconditions: byte[] checkByteArrayNotEmpty(byte[],java.lang.String)>($r4, "digest");

        $r6 = r0.<android.app.blob.BlobHandle: java.lang.CharSequence label>;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.CharSequence checkStringNotEmpty(java.lang.CharSequence,java.lang.Object)>($r6, "label must not be null");

        $r8 = r0.<android.app.blob.BlobHandle: java.lang.CharSequence label>;

        i0 = interfaceinvoke $r8.<java.lang.CharSequence: int length()>();

        if i0 > 100 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        staticinvoke <com.android.internal.util.Preconditions: void checkArgument(boolean,java.lang.Object)>(z1, "label too long");

        $l1 = r0.<android.app.blob.BlobHandle: long expiryTimeMillis>;

        staticinvoke <com.android.internal.util.Preconditions: long checkArgumentNonnegative(long,java.lang.String)>($l1, "expiryTimeMillis must not be negative");

        $r9 = r0.<android.app.blob.BlobHandle: java.lang.String tag>;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.CharSequence checkStringNotEmpty(java.lang.CharSequence,java.lang.Object)>($r9, "tag must not be null");

        $r11 = r0.<android.app.blob.BlobHandle: java.lang.String tag>;

        $i3 = virtualinvoke $r11.<java.lang.String: int length()>();

        if $i3 > 128 goto label3;

        z2 = 1;

        goto label4;

     label3:
        z2 = 0;

     label4:
        staticinvoke <com.android.internal.util.Preconditions: void checkArgument(boolean,java.lang.Object)>(z2, "tag too long");

        return;
    }

    public int describeContents()
    {
        android.app.blob.BlobHandle r0;

        r0 := @this: android.app.blob.BlobHandle;

        return 0;
    }

    public void dump(com.android.internal.util.IndentingPrintWriter, boolean)
    {
        android.app.blob.BlobHandle r0;
        com.android.internal.util.IndentingPrintWriter r1;
        boolean z0;
        java.lang.String $r3, $r6, $r8, $r12, $r17, $r21, $r24, $r26, r29;
        java.lang.StringBuilder $r4, $r9, $r13, $r18, $r22;
        java.lang.CharSequence $r15;
        long $l0;
        byte[] r28;

        r0 := @this: android.app.blob.BlobHandle;

        r1 := @parameter0: com.android.internal.util.IndentingPrintWriter;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label3;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("algo: ");

        $r6 = r0.<android.app.blob.BlobHandle: java.lang.String algorithm>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r8);

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("digest: ");

        r28 = r0.<android.app.blob.BlobHandle: byte[] digest>;

        if z0 == 0 goto label1;

        r29 = staticinvoke <android.app.blob.BlobHandle: java.lang.String encodeDigest(byte[])>(r28);

        goto label2;

     label1:
        r29 = staticinvoke <android.app.blob.BlobHandle: java.lang.String safeDigest(byte[])>(r28);

     label2:
        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r29);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r12);

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("label: ");

        $r15 = r0.<android.app.blob.BlobHandle: java.lang.CharSequence label>;

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15);

        $r17 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r17);

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("expiryMs: ");

        $l0 = r0.<android.app.blob.BlobHandle: long expiryTimeMillis>;

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r21);

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("tag: ");

        $r24 = r0.<android.app.blob.BlobHandle: java.lang.String tag>;

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r26);

        goto label4;

     label3:
        $r3 = virtualinvoke r0.<android.app.blob.BlobHandle: java.lang.String toString()>();

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r3);

     label4:
        return;
    }

    public boolean equals(java.lang.Object)
    {
        android.app.blob.BlobHandle r0, r12;
        boolean $z0, $z1, $z2, $z3, $z4, z5;
        java.lang.String $r1, $r2, $r6, $r8, $r9, $r10;
        byte[] $r3, $r4;
        java.lang.CharSequence $r5, $r7;
        long $l0, $l1;
        byte $b2;
        java.lang.Object r11;

        r0 := @this: android.app.blob.BlobHandle;

        r11 := @parameter0: java.lang.Object;

        z5 = 1;

        if r0 != r11 goto label1;

        return 1;

     label1:
        if r11 == null goto label5;

        $z0 = r11 instanceof android.app.blob.BlobHandle;

        if $z0 != 0 goto label2;

        goto label5;

     label2:
        r12 = (android.app.blob.BlobHandle) r11;

        $r2 = r0.<android.app.blob.BlobHandle: java.lang.String algorithm>;

        $r1 = r12.<android.app.blob.BlobHandle: java.lang.String algorithm>;

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z1 == 0 goto label3;

        $r4 = r0.<android.app.blob.BlobHandle: byte[] digest>;

        $r3 = r12.<android.app.blob.BlobHandle: byte[] digest>;

        $z2 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r4, $r3);

        if $z2 == 0 goto label3;

        $r5 = r0.<android.app.blob.BlobHandle: java.lang.CharSequence label>;

        $r6 = interfaceinvoke $r5.<java.lang.CharSequence: java.lang.String toString()>();

        $r7 = r12.<android.app.blob.BlobHandle: java.lang.CharSequence label>;

        $r8 = interfaceinvoke $r7.<java.lang.CharSequence: java.lang.String toString()>();

        $z3 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z3 == 0 goto label3;

        $l1 = r0.<android.app.blob.BlobHandle: long expiryTimeMillis>;

        $l0 = r12.<android.app.blob.BlobHandle: long expiryTimeMillis>;

        $b2 = $l1 cmp $l0;

        if $b2 != 0 goto label3;

        $r10 = r0.<android.app.blob.BlobHandle: java.lang.String tag>;

        $r9 = r12.<android.app.blob.BlobHandle: java.lang.String tag>;

        $z4 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z4 == 0 goto label3;

        goto label4;

     label3:
        z5 = 0;

     label4:
        return z5;

     label5:
        return 0;
    }

    public long getExpiryTimeMillis()
    {
        android.app.blob.BlobHandle r0;
        long $l0;

        r0 := @this: android.app.blob.BlobHandle;

        $l0 = r0.<android.app.blob.BlobHandle: long expiryTimeMillis>;

        return $l0;
    }

    public java.lang.CharSequence getLabel()
    {
        android.app.blob.BlobHandle r0;
        java.lang.CharSequence $r1;

        r0 := @this: android.app.blob.BlobHandle;

        $r1 = r0.<android.app.blob.BlobHandle: java.lang.CharSequence label>;

        return $r1;
    }

    public byte[] getSha256Digest()
    {
        android.app.blob.BlobHandle r0;
        byte[] $r1;

        r0 := @this: android.app.blob.BlobHandle;

        $r1 = r0.<android.app.blob.BlobHandle: byte[] digest>;

        return $r1;
    }

    public java.lang.String getTag()
    {
        android.app.blob.BlobHandle r0;
        java.lang.String $r1;

        r0 := @this: android.app.blob.BlobHandle;

        $r1 = r0.<android.app.blob.BlobHandle: java.lang.String tag>;

        return $r1;
    }

    public int hashCode()
    {
        android.app.blob.BlobHandle r0;
        java.lang.Object[] $r1;
        java.lang.String $r2, $r7;
        byte[] $r3;
        int $i0, $i2;
        java.lang.Integer $r4;
        java.lang.CharSequence $r5;
        long $l1;
        java.lang.Long $r6;

        r0 := @this: android.app.blob.BlobHandle;

        $r1 = newarray (java.lang.Object)[5];

        $r2 = r0.<android.app.blob.BlobHandle: java.lang.String algorithm>;

        $r1[0] = $r2;

        $r3 = r0.<android.app.blob.BlobHandle: byte[] digest>;

        $i0 = staticinvoke <java.util.Arrays: int hashCode(byte[])>($r3);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r1[1] = $r4;

        $r5 = r0.<android.app.blob.BlobHandle: java.lang.CharSequence label>;

        $r1[2] = $r5;

        $l1 = r0.<android.app.blob.BlobHandle: long expiryTimeMillis>;

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r1[3] = $r6;

        $r7 = r0.<android.app.blob.BlobHandle: java.lang.String tag>;

        $r1[4] = $r7;

        $i2 = staticinvoke <java.util.Objects: int hash(java.lang.Object[])>($r1);

        return $i2;
    }

    public boolean isExpired()
    {
        android.app.blob.BlobHandle r0;
        long l0, $l2;
        byte $b1, $b3;
        boolean z0;

        r0 := @this: android.app.blob.BlobHandle;

        l0 = r0.<android.app.blob.BlobHandle: long expiryTimeMillis>;

        $b1 = l0 cmp 0L;

        if $b1 == 0 goto label1;

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $b3 = l0 cmp $l2;

        if $b3 >= 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public java.lang.String toString()
    {
        android.app.blob.BlobHandle r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r4, $r8, $r16, $r19;
        byte[] $r7;
        java.lang.CharSequence $r11;
        long $l0;

        r0 := @this: android.app.blob.BlobHandle;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BlobHandle {algo:");

        $r4 = r0.<android.app.blob.BlobHandle: java.lang.String algorithm>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",digest:");

        $r7 = r0.<android.app.blob.BlobHandle: byte[] digest>;

        $r8 = staticinvoke <android.app.blob.BlobHandle: java.lang.String safeDigest(byte[])>($r7);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",label:");

        $r11 = r0.<android.app.blob.BlobHandle: java.lang.CharSequence label>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",expiryMs:");

        $l0 = r0.<android.app.blob.BlobHandle: long expiryTimeMillis>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",tag:");

        $r16 = r0.<android.app.blob.BlobHandle: java.lang.String tag>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r19 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r19;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.app.blob.BlobHandle r0;
        android.os.Parcel r1;
        int i0;
        java.lang.String $r2, $r5;
        byte[] $r3;
        java.lang.CharSequence $r4;
        long $l1;

        r0 := @this: android.app.blob.BlobHandle;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $r2 = r0.<android.app.blob.BlobHandle: java.lang.String algorithm>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r2);

        $r3 = r0.<android.app.blob.BlobHandle: byte[] digest>;

        virtualinvoke r1.<android.os.Parcel: void writeByteArray(byte[])>($r3);

        $r4 = r0.<android.app.blob.BlobHandle: java.lang.CharSequence label>;

        virtualinvoke r1.<android.os.Parcel: void writeCharSequence(java.lang.CharSequence)>($r4);

        $l1 = r0.<android.app.blob.BlobHandle: long expiryTimeMillis>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l1);

        $r5 = r0.<android.app.blob.BlobHandle: java.lang.String tag>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r5);

        return;
    }

    public void writeToXml(org.xmlpull.v1.XmlSerializer) throws java.io.IOException
    {
        android.app.blob.BlobHandle r0;
        org.xmlpull.v1.XmlSerializer r1;
        java.lang.String $r2, $r5;
        byte[] $r3;
        java.lang.CharSequence $r4;
        long $l0;

        r0 := @this: android.app.blob.BlobHandle;

        r1 := @parameter0: org.xmlpull.v1.XmlSerializer;

        $r2 = r0.<android.app.blob.BlobHandle: java.lang.String algorithm>;

        staticinvoke <com.android.internal.util.XmlUtils: void writeStringAttribute(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.CharSequence)>(r1, "al", $r2);

        $r3 = r0.<android.app.blob.BlobHandle: byte[] digest>;

        staticinvoke <com.android.internal.util.XmlUtils: void writeByteArrayAttribute(org.xmlpull.v1.XmlSerializer,java.lang.String,byte[])>(r1, "dg", $r3);

        $r4 = r0.<android.app.blob.BlobHandle: java.lang.CharSequence label>;

        staticinvoke <com.android.internal.util.XmlUtils: void writeStringAttribute(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.CharSequence)>(r1, "lbl", $r4);

        $l0 = r0.<android.app.blob.BlobHandle: long expiryTimeMillis>;

        staticinvoke <com.android.internal.util.XmlUtils: void writeLongAttribute(org.xmlpull.v1.XmlSerializer,java.lang.String,long)>(r1, "ex", $l0);

        $r5 = r0.<android.app.blob.BlobHandle: java.lang.String tag>;

        staticinvoke <com.android.internal.util.XmlUtils: void writeStringAttribute(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.CharSequence)>(r1, "tg", $r5);

        return;
    }
}
