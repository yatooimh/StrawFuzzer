public class android.app.blob.BlobStoreManager$Session extends java.lang.Object implements java.io.Closeable
{
    private final android.app.blob.IBlobStoreSession mSession;

    private void <init>(android.app.blob.IBlobStoreSession)
    {
        android.app.blob.BlobStoreManager$Session r0;
        android.app.blob.IBlobStoreSession r1;

        r0 := @this: android.app.blob.BlobStoreManager$Session;

        r1 := @parameter0: android.app.blob.IBlobStoreSession;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.app.blob.BlobStoreManager$Session: android.app.blob.IBlobStoreSession mSession> = r1;

        return;
    }

    void <init>(android.app.blob.IBlobStoreSession, android.app.blob.BlobStoreManager$1)
    {
        android.app.blob.BlobStoreManager$Session r0;
        android.app.blob.IBlobStoreSession r1;
        android.app.blob.BlobStoreManager$1 r2;

        r0 := @this: android.app.blob.BlobStoreManager$Session;

        r1 := @parameter0: android.app.blob.IBlobStoreSession;

        r2 := @parameter1: android.app.blob.BlobStoreManager$1;

        specialinvoke r0.<android.app.blob.BlobStoreManager$Session: void <init>(android.app.blob.IBlobStoreSession)>(r1);

        return;
    }

    public void abandon() throws java.io.IOException
    {
        android.app.blob.BlobStoreManager$Session r0;
        android.app.blob.IBlobStoreSession $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3, $r5;
        android.os.ParcelableException $r4;

        r0 := @this: android.app.blob.BlobStoreManager$Session;

     label1:
        $r1 = r0.<android.app.blob.BlobStoreManager$Session: android.app.blob.IBlobStoreSession mSession>;

        interfaceinvoke $r1.<android.app.blob.IBlobStoreSession: void abandon()>();

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

     label4:
        $r4 := @caughtexception;

        virtualinvoke $r4.<android.os.ParcelableException: void maybeRethrow(java.lang.Class)>(class "Ljava/io/IOException;");

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r4);

        throw $r5;

        catch android.os.ParcelableException from label1 to label2 with label4;
        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void allowPackageAccess(java.lang.String, byte[]) throws java.io.IOException
    {
        android.app.blob.BlobStoreManager$Session r0;
        byte[] r1;
        android.app.blob.IBlobStoreSession $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4, $r6;
        android.os.ParcelableException $r5;
        java.lang.String r7;

        r0 := @this: android.app.blob.BlobStoreManager$Session;

        r7 := @parameter0: java.lang.String;

        r1 := @parameter1: byte[];

     label1:
        $r2 = r0.<android.app.blob.BlobStoreManager$Session: android.app.blob.IBlobStoreSession mSession>;

        interfaceinvoke $r2.<android.app.blob.IBlobStoreSession: void allowPackageAccess(java.lang.String,byte[])>(r7, r1);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

     label4:
        $r5 := @caughtexception;

        virtualinvoke $r5.<android.os.ParcelableException: void maybeRethrow(java.lang.Class)>(class "Ljava/io/IOException;");

        virtualinvoke $r5.<android.os.ParcelableException: void maybeRethrow(java.lang.Class)>(class "Landroid/os/LimitExceededException;");

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r5);

        throw $r6;

        catch android.os.ParcelableException from label1 to label2 with label4;
        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void allowPublicAccess() throws java.io.IOException
    {
        android.app.blob.BlobStoreManager$Session r0;
        android.app.blob.IBlobStoreSession $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3, $r5;
        android.os.ParcelableException $r4;

        r0 := @this: android.app.blob.BlobStoreManager$Session;

     label1:
        $r1 = r0.<android.app.blob.BlobStoreManager$Session: android.app.blob.IBlobStoreSession mSession>;

        interfaceinvoke $r1.<android.app.blob.IBlobStoreSession: void allowPublicAccess()>();

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

     label4:
        $r4 := @caughtexception;

        virtualinvoke $r4.<android.os.ParcelableException: void maybeRethrow(java.lang.Class)>(class "Ljava/io/IOException;");

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r4);

        throw $r5;

        catch android.os.ParcelableException from label1 to label2 with label4;
        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void allowSameSignatureAccess() throws java.io.IOException
    {
        android.app.blob.BlobStoreManager$Session r0;
        android.app.blob.IBlobStoreSession $r1;
        android.os.ParcelableException $r2;
        java.lang.RuntimeException $r3, $r5;
        android.os.RemoteException $r4;

        r0 := @this: android.app.blob.BlobStoreManager$Session;

     label1:
        $r1 = r0.<android.app.blob.BlobStoreManager$Session: android.app.blob.IBlobStoreSession mSession>;

        interfaceinvoke $r1.<android.app.blob.IBlobStoreSession: void allowSameSignatureAccess()>();

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        $r5 = virtualinvoke $r4.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r5;

     label4:
        $r2 := @caughtexception;

        virtualinvoke $r2.<android.os.ParcelableException: void maybeRethrow(java.lang.Class)>(class "Ljava/io/IOException;");

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r2);

        throw $r3;

        catch android.os.ParcelableException from label1 to label2 with label4;
        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void close() throws java.io.IOException
    {
        android.app.blob.BlobStoreManager$Session r0;
        android.app.blob.IBlobStoreSession $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3, $r5;
        android.os.ParcelableException $r4;

        r0 := @this: android.app.blob.BlobStoreManager$Session;

     label1:
        $r1 = r0.<android.app.blob.BlobStoreManager$Session: android.app.blob.IBlobStoreSession mSession>;

        interfaceinvoke $r1.<android.app.blob.IBlobStoreSession: void close()>();

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

     label4:
        $r4 := @caughtexception;

        virtualinvoke $r4.<android.os.ParcelableException: void maybeRethrow(java.lang.Class)>(class "Ljava/io/IOException;");

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r4);

        throw $r5;

        catch android.os.ParcelableException from label1 to label2 with label4;
        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void commit(java.util.concurrent.Executor, java.util.function.Consumer) throws java.io.IOException
    {
        android.app.blob.BlobStoreManager$Session r0;
        java.util.function.Consumer r1;
        android.app.blob.IBlobStoreSession r2;
        android.app.blob.BlobStoreManager$Session$1 r3;
        android.os.ParcelableException $r4;
        java.lang.RuntimeException $r5, $r7;
        android.os.RemoteException $r6;
        java.util.concurrent.Executor r8;

        r0 := @this: android.app.blob.BlobStoreManager$Session;

        r8 := @parameter0: java.util.concurrent.Executor;

        r1 := @parameter1: java.util.function.Consumer;

     label1:
        r2 = r0.<android.app.blob.BlobStoreManager$Session: android.app.blob.IBlobStoreSession mSession>;

        r3 = new android.app.blob.BlobStoreManager$Session$1;

        specialinvoke r3.<android.app.blob.BlobStoreManager$Session$1: void <init>(android.app.blob.BlobStoreManager$Session,java.util.concurrent.Executor,java.util.function.Consumer)>(r0, r8, r1);

        interfaceinvoke r2.<android.app.blob.IBlobStoreSession: void commit(android.app.blob.IBlobCommitCallback)>(r3);

     label2:
        return;

     label3:
        $r6 := @caughtexception;

        $r7 = virtualinvoke $r6.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r7;

     label4:
        $r4 := @caughtexception;

        virtualinvoke $r4.<android.os.ParcelableException: void maybeRethrow(java.lang.Class)>(class "Ljava/io/IOException;");

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r4);

        throw $r5;

        catch android.os.ParcelableException from label1 to label2 with label4;
        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public long getSize() throws java.io.IOException
    {
        android.app.blob.BlobStoreManager$Session r0;
        long l0;
        android.app.blob.IBlobStoreSession $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3, $r5;
        android.os.ParcelableException $r4;

        r0 := @this: android.app.blob.BlobStoreManager$Session;

     label1:
        $r1 = r0.<android.app.blob.BlobStoreManager$Session: android.app.blob.IBlobStoreSession mSession>;

        l0 = interfaceinvoke $r1.<android.app.blob.IBlobStoreSession: long getSize()>();

     label2:
        return l0;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

     label4:
        $r4 := @caughtexception;

        virtualinvoke $r4.<android.os.ParcelableException: void maybeRethrow(java.lang.Class)>(class "Ljava/io/IOException;");

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r4);

        throw $r5;

        catch android.os.ParcelableException from label1 to label2 with label4;
        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isPackageAccessAllowed(java.lang.String, byte[]) throws java.io.IOException
    {
        android.app.blob.BlobStoreManager$Session r0;
        byte[] r1;
        boolean z0;
        android.app.blob.IBlobStoreSession $r2;
        android.os.ParcelableException $r3;
        java.lang.RuntimeException $r4, $r6;
        android.os.RemoteException $r5;
        java.lang.String r7;

        r0 := @this: android.app.blob.BlobStoreManager$Session;

        r7 := @parameter0: java.lang.String;

        r1 := @parameter1: byte[];

     label1:
        $r2 = r0.<android.app.blob.BlobStoreManager$Session: android.app.blob.IBlobStoreSession mSession>;

        z0 = interfaceinvoke $r2.<android.app.blob.IBlobStoreSession: boolean isPackageAccessAllowed(java.lang.String,byte[])>(r7, r1);

     label2:
        return z0;

     label3:
        $r5 := @caughtexception;

        $r6 = virtualinvoke $r5.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r6;

     label4:
        $r3 := @caughtexception;

        virtualinvoke $r3.<android.os.ParcelableException: void maybeRethrow(java.lang.Class)>(class "Ljava/io/IOException;");

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r3);

        throw $r4;

        catch android.os.ParcelableException from label1 to label2 with label4;
        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isPublicAccessAllowed() throws java.io.IOException
    {
        android.app.blob.BlobStoreManager$Session r0;
        boolean z0;
        android.app.blob.IBlobStoreSession $r1;
        android.os.ParcelableException $r2;
        java.lang.RuntimeException $r3, $r5;
        android.os.RemoteException $r4;

        r0 := @this: android.app.blob.BlobStoreManager$Session;

     label1:
        $r1 = r0.<android.app.blob.BlobStoreManager$Session: android.app.blob.IBlobStoreSession mSession>;

        z0 = interfaceinvoke $r1.<android.app.blob.IBlobStoreSession: boolean isPublicAccessAllowed()>();

     label2:
        return z0;

     label3:
        $r4 := @caughtexception;

        $r5 = virtualinvoke $r4.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r5;

     label4:
        $r2 := @caughtexception;

        virtualinvoke $r2.<android.os.ParcelableException: void maybeRethrow(java.lang.Class)>(class "Ljava/io/IOException;");

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r2);

        throw $r3;

        catch android.os.ParcelableException from label1 to label2 with label4;
        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isSameSignatureAccessAllowed() throws java.io.IOException
    {
        android.app.blob.BlobStoreManager$Session r0;
        boolean z0;
        android.app.blob.IBlobStoreSession $r1;
        android.os.ParcelableException $r2;
        java.lang.RuntimeException $r3, $r5;
        android.os.RemoteException $r4;

        r0 := @this: android.app.blob.BlobStoreManager$Session;

     label1:
        $r1 = r0.<android.app.blob.BlobStoreManager$Session: android.app.blob.IBlobStoreSession mSession>;

        z0 = interfaceinvoke $r1.<android.app.blob.IBlobStoreSession: boolean isSameSignatureAccessAllowed()>();

     label2:
        return z0;

     label3:
        $r4 := @caughtexception;

        $r5 = virtualinvoke $r4.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r5;

     label4:
        $r2 := @caughtexception;

        virtualinvoke $r2.<android.os.ParcelableException: void maybeRethrow(java.lang.Class)>(class "Ljava/io/IOException;");

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r2);

        throw $r3;

        catch android.os.ParcelableException from label1 to label2 with label4;
        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.os.ParcelFileDescriptor openRead() throws java.io.IOException
    {
        android.app.blob.BlobStoreManager$Session r0;
        android.app.blob.IBlobStoreSession $r1;
        android.os.ParcelableException $r2;
        java.lang.RuntimeException $r3, $r5;
        android.os.RemoteException $r4;
        android.os.ParcelFileDescriptor r6;

        r0 := @this: android.app.blob.BlobStoreManager$Session;

     label1:
        $r1 = r0.<android.app.blob.BlobStoreManager$Session: android.app.blob.IBlobStoreSession mSession>;

        r6 = interfaceinvoke $r1.<android.app.blob.IBlobStoreSession: android.os.ParcelFileDescriptor openRead()>();

     label2:
        return r6;

     label3:
        $r4 := @caughtexception;

        $r5 = virtualinvoke $r4.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r5;

     label4:
        $r2 := @caughtexception;

        virtualinvoke $r2.<android.os.ParcelableException: void maybeRethrow(java.lang.Class)>(class "Ljava/io/IOException;");

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r2);

        throw $r3;

        catch android.os.ParcelableException from label1 to label2 with label4;
        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.os.ParcelFileDescriptor openWrite(long, long) throws java.io.IOException
    {
        android.app.blob.BlobStoreManager$Session r0;
        long l0, l1;
        android.app.blob.IBlobStoreSession $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3, $r5;
        android.os.ParcelableException $r4;
        android.os.ParcelFileDescriptor r6;

        r0 := @this: android.app.blob.BlobStoreManager$Session;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

     label1:
        $r1 = r0.<android.app.blob.BlobStoreManager$Session: android.app.blob.IBlobStoreSession mSession>;

        r6 = interfaceinvoke $r1.<android.app.blob.IBlobStoreSession: android.os.ParcelFileDescriptor openWrite(long,long)>(l0, l1);

        virtualinvoke r6.<android.os.ParcelFileDescriptor: long seekTo(long)>(l0);

     label2:
        return r6;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

     label4:
        $r4 := @caughtexception;

        virtualinvoke $r4.<android.os.ParcelableException: void maybeRethrow(java.lang.Class)>(class "Ljava/io/IOException;");

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r4);

        throw $r5;

        catch android.os.ParcelableException from label1 to label2 with label4;
        catch android.os.RemoteException from label1 to label2 with label3;
    }
}
