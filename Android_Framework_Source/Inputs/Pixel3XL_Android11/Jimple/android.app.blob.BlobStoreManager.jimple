public class android.app.blob.BlobStoreManager extends java.lang.Object
{
    public static final int COMMIT_RESULT_ERROR;
    public static final int COMMIT_RESULT_SUCCESS;
    public static final int INVALID_RES_ID;
    private final android.content.Context mContext;
    private final android.app.blob.IBlobStoreManager mService;

    public void <init>(android.content.Context, android.app.blob.IBlobStoreManager)
    {
        android.app.blob.BlobStoreManager r0;
        android.content.Context r1;
        android.app.blob.IBlobStoreManager r2;

        r0 := @this: android.app.blob.BlobStoreManager;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.app.blob.IBlobStoreManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.app.blob.BlobStoreManager: android.content.Context mContext> = r1;

        r0.<android.app.blob.BlobStoreManager: android.app.blob.IBlobStoreManager mService> = r2;

        return;
    }

    static void lambda$waitForIdle$0(java.util.concurrent.CountDownLatch, android.os.Bundle)
    {
        java.util.concurrent.CountDownLatch r0;
        android.os.Bundle r1;

        r0 := @parameter0: java.util.concurrent.CountDownLatch;

        r1 := @parameter1: android.os.Bundle;

        virtualinvoke r0.<java.util.concurrent.CountDownLatch: void countDown()>();

        return;
    }

    public void abandonSession(long) throws java.io.IOException
    {
        android.app.blob.BlobStoreManager r0;
        long l0;
        android.content.Context $r1;
        android.app.blob.IBlobStoreManager $r2;
        java.lang.String $r3;
        android.os.RemoteException $r4;
        java.lang.RuntimeException $r5, $r7;
        android.os.ParcelableException $r6;

        r0 := @this: android.app.blob.BlobStoreManager;

        l0 := @parameter0: long;

     label1:
        $r2 = r0.<android.app.blob.BlobStoreManager: android.app.blob.IBlobStoreManager mService>;

        $r1 = r0.<android.app.blob.BlobStoreManager: android.content.Context mContext>;

        $r3 = virtualinvoke $r1.<android.content.Context: java.lang.String getOpPackageName()>();

        interfaceinvoke $r2.<android.app.blob.IBlobStoreManager: void abandonSession(long,java.lang.String)>(l0, $r3);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        $r5 = virtualinvoke $r4.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r5;

     label4:
        $r6 := @caughtexception;

        virtualinvoke $r6.<android.os.ParcelableException: void maybeRethrow(java.lang.Class)>(class "Ljava/io/IOException;");

        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r6);

        throw $r7;

        catch android.os.ParcelableException from label1 to label2 with label4;
        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void acquireLease(android.app.blob.BlobHandle, int) throws java.io.IOException
    {
        android.app.blob.BlobStoreManager r0;
        android.app.blob.BlobHandle r1;
        int i0;

        r0 := @this: android.app.blob.BlobStoreManager;

        r1 := @parameter0: android.app.blob.BlobHandle;

        i0 := @parameter1: int;

        virtualinvoke r0.<android.app.blob.BlobStoreManager: void acquireLease(android.app.blob.BlobHandle,int,long)>(r1, i0, 0L);

        return;
    }

    public void acquireLease(android.app.blob.BlobHandle, int, long) throws java.io.IOException
    {
        android.app.blob.BlobStoreManager r0;
        int i0;
        long l1;
        android.content.Context $r1;
        android.app.blob.IBlobStoreManager $r2;
        java.lang.String $r3;
        android.os.RemoteException $r4;
        java.lang.RuntimeException $r5, $r7;
        android.os.ParcelableException $r6;
        android.app.blob.BlobHandle r8;

        r0 := @this: android.app.blob.BlobStoreManager;

        r8 := @parameter0: android.app.blob.BlobHandle;

        i0 := @parameter1: int;

        l1 := @parameter2: long;

     label1:
        $r2 = r0.<android.app.blob.BlobStoreManager: android.app.blob.IBlobStoreManager mService>;

        $r1 = r0.<android.app.blob.BlobStoreManager: android.content.Context mContext>;

        $r3 = virtualinvoke $r1.<android.content.Context: java.lang.String getOpPackageName()>();

        interfaceinvoke $r2.<android.app.blob.IBlobStoreManager: void acquireLease(android.app.blob.BlobHandle,int,java.lang.CharSequence,long,java.lang.String)>(r8, i0, null, l1, $r3);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        $r5 = virtualinvoke $r4.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r5;

     label4:
        $r6 := @caughtexception;

        virtualinvoke $r6.<android.os.ParcelableException: void maybeRethrow(java.lang.Class)>(class "Ljava/io/IOException;");

        virtualinvoke $r6.<android.os.ParcelableException: void maybeRethrow(java.lang.Class)>(class "Landroid/os/LimitExceededException;");

        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r6);

        throw $r7;

        catch android.os.ParcelableException from label1 to label2 with label4;
        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void acquireLease(android.app.blob.BlobHandle, java.lang.CharSequence) throws java.io.IOException
    {
        android.app.blob.BlobStoreManager r0;
        android.app.blob.BlobHandle r1;
        java.lang.CharSequence r2;

        r0 := @this: android.app.blob.BlobStoreManager;

        r1 := @parameter0: android.app.blob.BlobHandle;

        r2 := @parameter1: java.lang.CharSequence;

        virtualinvoke r0.<android.app.blob.BlobStoreManager: void acquireLease(android.app.blob.BlobHandle,java.lang.CharSequence,long)>(r1, r2, 0L);

        return;
    }

    public void acquireLease(android.app.blob.BlobHandle, java.lang.CharSequence, long) throws java.io.IOException
    {
        android.app.blob.BlobStoreManager r0;
        java.lang.CharSequence r1;
        long l0;
        android.content.Context $r2;
        android.app.blob.IBlobStoreManager $r3;
        java.lang.String $r4;
        android.os.RemoteException $r5;
        java.lang.RuntimeException $r6, $r8;
        android.os.ParcelableException $r7;
        android.app.blob.BlobHandle r9;

        r0 := @this: android.app.blob.BlobStoreManager;

        r9 := @parameter0: android.app.blob.BlobHandle;

        r1 := @parameter1: java.lang.CharSequence;

        l0 := @parameter2: long;

     label1:
        $r3 = r0.<android.app.blob.BlobStoreManager: android.app.blob.IBlobStoreManager mService>;

        $r2 = r0.<android.app.blob.BlobStoreManager: android.content.Context mContext>;

        $r4 = virtualinvoke $r2.<android.content.Context: java.lang.String getOpPackageName()>();

        interfaceinvoke $r3.<android.app.blob.IBlobStoreManager: void acquireLease(android.app.blob.BlobHandle,int,java.lang.CharSequence,long,java.lang.String)>(r9, -1, r1, l0, $r4);

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        $r6 = virtualinvoke $r5.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r6;

     label4:
        $r7 := @caughtexception;

        virtualinvoke $r7.<android.os.ParcelableException: void maybeRethrow(java.lang.Class)>(class "Ljava/io/IOException;");

        virtualinvoke $r7.<android.os.ParcelableException: void maybeRethrow(java.lang.Class)>(class "Landroid/os/LimitExceededException;");

        $r8 = new java.lang.RuntimeException;

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r7);

        throw $r8;

        catch android.os.ParcelableException from label1 to label2 with label4;
        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public long createSession(android.app.blob.BlobHandle) throws java.io.IOException
    {
        android.app.blob.BlobStoreManager r0;
        long l0;
        android.content.Context $r1;
        android.app.blob.IBlobStoreManager $r2;
        java.lang.String $r3;
        android.os.RemoteException $r4;
        java.lang.RuntimeException $r5, $r7;
        android.os.ParcelableException $r6;
        android.app.blob.BlobHandle r8;

        r0 := @this: android.app.blob.BlobStoreManager;

        r8 := @parameter0: android.app.blob.BlobHandle;

     label1:
        $r2 = r0.<android.app.blob.BlobStoreManager: android.app.blob.IBlobStoreManager mService>;

        $r1 = r0.<android.app.blob.BlobStoreManager: android.content.Context mContext>;

        $r3 = virtualinvoke $r1.<android.content.Context: java.lang.String getOpPackageName()>();

        l0 = interfaceinvoke $r2.<android.app.blob.IBlobStoreManager: long createSession(android.app.blob.BlobHandle,java.lang.String)>(r8, $r3);

     label2:
        return l0;

     label3:
        $r4 := @caughtexception;

        $r5 = virtualinvoke $r4.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r5;

     label4:
        $r6 := @caughtexception;

        virtualinvoke $r6.<android.os.ParcelableException: void maybeRethrow(java.lang.Class)>(class "Ljava/io/IOException;");

        virtualinvoke $r6.<android.os.ParcelableException: void maybeRethrow(java.lang.Class)>(class "Landroid/os/LimitExceededException;");

        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r6);

        throw $r7;

        catch android.os.ParcelableException from label1 to label2 with label4;
        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void deleteBlob(android.app.blob.BlobInfo) throws java.io.IOException
    {
        android.app.blob.BlobStoreManager r0;
        android.app.blob.IBlobStoreManager $r1;
        long $l0;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3, $r5;
        android.os.ParcelableException $r4;
        android.app.blob.BlobInfo r6;

        r0 := @this: android.app.blob.BlobStoreManager;

        r6 := @parameter0: android.app.blob.BlobInfo;

     label1:
        $r1 = r0.<android.app.blob.BlobStoreManager: android.app.blob.IBlobStoreManager mService>;

        $l0 = virtualinvoke r6.<android.app.blob.BlobInfo: long getId()>();

        interfaceinvoke $r1.<android.app.blob.IBlobStoreManager: void deleteBlob(long)>($l0);

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

     label4:
        $r4 := @caughtexception;

        virtualinvoke $r4.<android.os.ParcelableException: void maybeRethrow(java.lang.Class)>(class "Ljava/io/IOException;");

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r4);

        throw $r5;

        catch android.os.ParcelableException from label1 to label2 with label4;
        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.app.blob.LeaseInfo getLeaseInfo(android.app.blob.BlobHandle) throws java.io.IOException
    {
        android.app.blob.BlobStoreManager r0;
        android.content.Context $r1;
        android.app.blob.IBlobStoreManager $r2;
        java.lang.String $r3;
        android.os.ParcelableException $r4;
        java.lang.RuntimeException $r5, $r7;
        android.os.RemoteException $r6;
        android.app.blob.BlobHandle r8;
        android.app.blob.LeaseInfo r9;

        r0 := @this: android.app.blob.BlobStoreManager;

        r8 := @parameter0: android.app.blob.BlobHandle;

     label1:
        $r2 = r0.<android.app.blob.BlobStoreManager: android.app.blob.IBlobStoreManager mService>;

        $r1 = r0.<android.app.blob.BlobStoreManager: android.content.Context mContext>;

        $r3 = virtualinvoke $r1.<android.content.Context: java.lang.String getOpPackageName()>();

        r9 = interfaceinvoke $r2.<android.app.blob.IBlobStoreManager: android.app.blob.LeaseInfo getLeaseInfo(android.app.blob.BlobHandle,java.lang.String)>(r8, $r3);

     label2:
        return r9;

     label3:
        $r6 := @caughtexception;

        $r7 = virtualinvoke $r6.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r7;

     label4:
        $r4 := @caughtexception;

        virtualinvoke $r4.<android.os.ParcelableException: void maybeRethrow(java.lang.Class)>(class "Ljava/io/IOException;");

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r4);

        throw $r5;

        catch android.os.ParcelableException from label1 to label2 with label4;
        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.List getLeasedBlobs() throws java.io.IOException
    {
        android.app.blob.BlobStoreManager r0;
        android.content.Context $r1;
        android.app.blob.IBlobStoreManager $r2;
        java.lang.String $r3;
        android.os.RemoteException $r4;
        java.lang.RuntimeException $r5, $r7;
        android.os.ParcelableException $r6;
        java.util.List r8;

        r0 := @this: android.app.blob.BlobStoreManager;

     label1:
        $r2 = r0.<android.app.blob.BlobStoreManager: android.app.blob.IBlobStoreManager mService>;

        $r1 = r0.<android.app.blob.BlobStoreManager: android.content.Context mContext>;

        $r3 = virtualinvoke $r1.<android.content.Context: java.lang.String getOpPackageName()>();

        r8 = interfaceinvoke $r2.<android.app.blob.IBlobStoreManager: java.util.List getLeasedBlobs(java.lang.String)>($r3);

     label2:
        return r8;

     label3:
        $r4 := @caughtexception;

        $r5 = virtualinvoke $r4.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r5;

     label4:
        $r6 := @caughtexception;

        virtualinvoke $r6.<android.os.ParcelableException: void maybeRethrow(java.lang.Class)>(class "Ljava/io/IOException;");

        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r6);

        throw $r7;

        catch android.os.ParcelableException from label1 to label2 with label4;
        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public long getRemainingLeaseQuotaBytes()
    {
        android.app.blob.BlobStoreManager r0;
        long l0;
        android.content.Context $r2;
        android.app.blob.IBlobStoreManager $r3;
        java.lang.String $r4;
        android.os.RemoteException $r5;
        java.lang.RuntimeException $r6;

        r0 := @this: android.app.blob.BlobStoreManager;

     label1:
        $r3 = r0.<android.app.blob.BlobStoreManager: android.app.blob.IBlobStoreManager mService>;

        $r2 = r0.<android.app.blob.BlobStoreManager: android.content.Context mContext>;

        $r4 = virtualinvoke $r2.<android.content.Context: java.lang.String getOpPackageName()>();

        l0 = interfaceinvoke $r3.<android.app.blob.IBlobStoreManager: long getRemainingLeaseQuotaBytes(java.lang.String)>($r4);

     label2:
        return l0;

     label3:
        $r5 := @caughtexception;

        $r6 = virtualinvoke $r5.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r6;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.os.ParcelFileDescriptor openBlob(android.app.blob.BlobHandle) throws java.io.IOException
    {
        android.app.blob.BlobStoreManager r0;
        android.content.Context $r1;
        android.app.blob.IBlobStoreManager $r2;
        java.lang.String $r3;
        android.os.ParcelableException $r4;
        java.lang.RuntimeException $r5, $r7;
        android.os.RemoteException $r6;
        android.app.blob.BlobHandle r8;
        android.os.ParcelFileDescriptor r9;

        r0 := @this: android.app.blob.BlobStoreManager;

        r8 := @parameter0: android.app.blob.BlobHandle;

     label1:
        $r2 = r0.<android.app.blob.BlobStoreManager: android.app.blob.IBlobStoreManager mService>;

        $r1 = r0.<android.app.blob.BlobStoreManager: android.content.Context mContext>;

        $r3 = virtualinvoke $r1.<android.content.Context: java.lang.String getOpPackageName()>();

        r9 = interfaceinvoke $r2.<android.app.blob.IBlobStoreManager: android.os.ParcelFileDescriptor openBlob(android.app.blob.BlobHandle,java.lang.String)>(r8, $r3);

     label2:
        return r9;

     label3:
        $r6 := @caughtexception;

        $r7 = virtualinvoke $r6.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r7;

     label4:
        $r4 := @caughtexception;

        virtualinvoke $r4.<android.os.ParcelableException: void maybeRethrow(java.lang.Class)>(class "Ljava/io/IOException;");

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r4);

        throw $r5;

        catch android.os.ParcelableException from label1 to label2 with label4;
        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.app.blob.BlobStoreManager$Session openSession(long) throws java.io.IOException
    {
        android.app.blob.BlobStoreManager r0;
        long l0;
        android.app.blob.BlobStoreManager$Session $r1;
        android.content.Context $r2;
        android.app.blob.IBlobStoreManager $r3;
        java.lang.String $r4;
        android.app.blob.IBlobStoreSession $r5;
        android.os.RemoteException $r6;
        java.lang.RuntimeException $r7, $r9;
        android.os.ParcelableException $r8;

        r0 := @this: android.app.blob.BlobStoreManager;

        l0 := @parameter0: long;

     label1:
        $r1 = new android.app.blob.BlobStoreManager$Session;

        $r3 = r0.<android.app.blob.BlobStoreManager: android.app.blob.IBlobStoreManager mService>;

        $r2 = r0.<android.app.blob.BlobStoreManager: android.content.Context mContext>;

        $r4 = virtualinvoke $r2.<android.content.Context: java.lang.String getOpPackageName()>();

        $r5 = interfaceinvoke $r3.<android.app.blob.IBlobStoreManager: android.app.blob.IBlobStoreSession openSession(long,java.lang.String)>(l0, $r4);

        specialinvoke $r1.<android.app.blob.BlobStoreManager$Session: void <init>(android.app.blob.IBlobStoreSession,android.app.blob.BlobStoreManager$1)>($r5, null);

     label2:
        return $r1;

     label3:
        $r6 := @caughtexception;

        $r7 = virtualinvoke $r6.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r7;

     label4:
        $r8 := @caughtexception;

        virtualinvoke $r8.<android.os.ParcelableException: void maybeRethrow(java.lang.Class)>(class "Ljava/io/IOException;");

        $r9 = new java.lang.RuntimeException;

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r8);

        throw $r9;

        catch android.os.ParcelableException from label1 to label2 with label4;
        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.List queryBlobsForUser(android.os.UserHandle) throws java.io.IOException
    {
        android.app.blob.BlobStoreManager r0;
        android.app.blob.IBlobStoreManager $r1;
        int $i0;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3, $r5;
        android.os.ParcelableException $r4;
        android.os.UserHandle r6;
        java.util.List r7;

        r0 := @this: android.app.blob.BlobStoreManager;

        r6 := @parameter0: android.os.UserHandle;

     label1:
        $r1 = r0.<android.app.blob.BlobStoreManager: android.app.blob.IBlobStoreManager mService>;

        $i0 = virtualinvoke r6.<android.os.UserHandle: int getIdentifier()>();

        r7 = interfaceinvoke $r1.<android.app.blob.IBlobStoreManager: java.util.List queryBlobsForUser(int)>($i0);

     label2:
        return r7;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

     label4:
        $r4 := @caughtexception;

        virtualinvoke $r4.<android.os.ParcelableException: void maybeRethrow(java.lang.Class)>(class "Ljava/io/IOException;");

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r4);

        throw $r5;

        catch android.os.ParcelableException from label1 to label2 with label4;
        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void releaseLease(android.app.blob.BlobHandle) throws java.io.IOException
    {
        android.app.blob.BlobStoreManager r0;
        android.content.Context $r1;
        android.app.blob.IBlobStoreManager $r2;
        java.lang.String $r3;
        android.os.RemoteException $r4;
        java.lang.RuntimeException $r5, $r7;
        android.os.ParcelableException $r6;
        android.app.blob.BlobHandle r8;

        r0 := @this: android.app.blob.BlobStoreManager;

        r8 := @parameter0: android.app.blob.BlobHandle;

     label1:
        $r2 = r0.<android.app.blob.BlobStoreManager: android.app.blob.IBlobStoreManager mService>;

        $r1 = r0.<android.app.blob.BlobStoreManager: android.content.Context mContext>;

        $r3 = virtualinvoke $r1.<android.content.Context: java.lang.String getOpPackageName()>();

        interfaceinvoke $r2.<android.app.blob.IBlobStoreManager: void releaseLease(android.app.blob.BlobHandle,java.lang.String)>(r8, $r3);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        $r5 = virtualinvoke $r4.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r5;

     label4:
        $r6 := @caughtexception;

        virtualinvoke $r6.<android.os.ParcelableException: void maybeRethrow(java.lang.Class)>(class "Ljava/io/IOException;");

        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r6);

        throw $r7;

        catch android.os.ParcelableException from label1 to label2 with label4;
        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void waitForIdle(long) throws java.lang.InterruptedException, java.util.concurrent.TimeoutException
    {
        android.app.blob.BlobStoreManager r0;
        long l0;
        java.util.concurrent.CountDownLatch r1;
        android.os.RemoteCallback r2;
        android.app.blob._$$Lambda$BlobStoreManager$WokCX7JCH8Z_5Nui6QQuoLrjMog r3;
        java.util.concurrent.TimeUnit $r4;
        boolean $z0;
        android.os.RemoteException $r5;
        java.lang.RuntimeException $r6, $r8;
        android.os.ParcelableException $r7;
        android.app.blob.IBlobStoreManager r9;
        java.util.concurrent.TimeoutException r10;

        r0 := @this: android.app.blob.BlobStoreManager;

        l0 := @parameter0: long;

     label1:
        r1 = new java.util.concurrent.CountDownLatch;

        specialinvoke r1.<java.util.concurrent.CountDownLatch: void <init>(int)>(1);

        r9 = r0.<android.app.blob.BlobStoreManager: android.app.blob.IBlobStoreManager mService>;

        r2 = new android.os.RemoteCallback;

        r3 = new android.app.blob._$$Lambda$BlobStoreManager$WokCX7JCH8Z_5Nui6QQuoLrjMog;

        specialinvoke r3.<android.app.blob._$$Lambda$BlobStoreManager$WokCX7JCH8Z_5Nui6QQuoLrjMog: void <init>(java.util.concurrent.CountDownLatch)>(r1);

        specialinvoke r2.<android.os.RemoteCallback: void <init>(android.os.RemoteCallback$OnResultListener)>(r3);

        interfaceinvoke r9.<android.app.blob.IBlobStoreManager: void waitForIdle(android.os.RemoteCallback)>(r2);

        $r4 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        $z0 = virtualinvoke r1.<java.util.concurrent.CountDownLatch: boolean await(long,java.util.concurrent.TimeUnit)>(l0, $r4);

        if $z0 == 0 goto label3;

     label2:
        return;

     label3:
        r10 = new java.util.concurrent.TimeoutException;

        specialinvoke r10.<java.util.concurrent.TimeoutException: void <init>(java.lang.String)>("Timed out waiting for service to become idle");

        throw r10;

     label4:
        $r5 := @caughtexception;

        $r6 = virtualinvoke $r5.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r6;

     label5:
        $r7 := @caughtexception;

        $r8 = new java.lang.RuntimeException;

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r7);

        throw $r8;

        catch android.os.ParcelableException from label1 to label2 with label5;
        catch android.os.RemoteException from label1 to label2 with label4;
        catch android.os.ParcelableException from label3 to label4 with label5;
        catch android.os.RemoteException from label3 to label4 with label4;
    }

    public static void <clinit>()
    {
        <android.app.blob.BlobStoreManager: int INVALID_RES_ID> = -1;

        <android.app.blob.BlobStoreManager: int COMMIT_RESULT_SUCCESS> = 0;

        <android.app.blob.BlobStoreManager: int COMMIT_RESULT_ERROR> = 1;

        return;
    }
}
