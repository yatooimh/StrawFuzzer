public class android.app.blob.IBlobStoreManager$Default extends java.lang.Object implements android.app.blob.IBlobStoreManager
{

    public void <init>()
    {
        android.app.blob.IBlobStoreManager$Default r0;

        r0 := @this: android.app.blob.IBlobStoreManager$Default;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void abandonSession(long, java.lang.String) throws android.os.RemoteException
    {
        android.app.blob.IBlobStoreManager$Default r0;
        long l0;
        java.lang.String r1;

        r0 := @this: android.app.blob.IBlobStoreManager$Default;

        l0 := @parameter0: long;

        r1 := @parameter1: java.lang.String;

        return;
    }

    public void acquireLease(android.app.blob.BlobHandle, int, java.lang.CharSequence, long, java.lang.String) throws android.os.RemoteException
    {
        android.app.blob.IBlobStoreManager$Default r0;
        android.app.blob.BlobHandle r1;
        int i0;
        java.lang.CharSequence r2;
        long l1;
        java.lang.String r3;

        r0 := @this: android.app.blob.IBlobStoreManager$Default;

        r1 := @parameter0: android.app.blob.BlobHandle;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.CharSequence;

        l1 := @parameter3: long;

        r3 := @parameter4: java.lang.String;

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.app.blob.IBlobStoreManager$Default r0;

        r0 := @this: android.app.blob.IBlobStoreManager$Default;

        return null;
    }

    public long createSession(android.app.blob.BlobHandle, java.lang.String) throws android.os.RemoteException
    {
        android.app.blob.IBlobStoreManager$Default r0;
        android.app.blob.BlobHandle r1;
        java.lang.String r2;

        r0 := @this: android.app.blob.IBlobStoreManager$Default;

        r1 := @parameter0: android.app.blob.BlobHandle;

        r2 := @parameter1: java.lang.String;

        return 0L;
    }

    public void deleteBlob(long) throws android.os.RemoteException
    {
        android.app.blob.IBlobStoreManager$Default r0;
        long l0;

        r0 := @this: android.app.blob.IBlobStoreManager$Default;

        l0 := @parameter0: long;

        return;
    }

    public android.app.blob.LeaseInfo getLeaseInfo(android.app.blob.BlobHandle, java.lang.String) throws android.os.RemoteException
    {
        android.app.blob.IBlobStoreManager$Default r0;
        android.app.blob.BlobHandle r1;
        java.lang.String r2;

        r0 := @this: android.app.blob.IBlobStoreManager$Default;

        r1 := @parameter0: android.app.blob.BlobHandle;

        r2 := @parameter1: java.lang.String;

        return null;
    }

    public java.util.List getLeasedBlobs(java.lang.String) throws android.os.RemoteException
    {
        android.app.blob.IBlobStoreManager$Default r0;
        java.lang.String r1;

        r0 := @this: android.app.blob.IBlobStoreManager$Default;

        r1 := @parameter0: java.lang.String;

        return null;
    }

    public long getRemainingLeaseQuotaBytes(java.lang.String) throws android.os.RemoteException
    {
        android.app.blob.IBlobStoreManager$Default r0;
        java.lang.String r1;

        r0 := @this: android.app.blob.IBlobStoreManager$Default;

        r1 := @parameter0: java.lang.String;

        return 0L;
    }

    public android.os.ParcelFileDescriptor openBlob(android.app.blob.BlobHandle, java.lang.String) throws android.os.RemoteException
    {
        android.app.blob.IBlobStoreManager$Default r0;
        android.app.blob.BlobHandle r1;
        java.lang.String r2;

        r0 := @this: android.app.blob.IBlobStoreManager$Default;

        r1 := @parameter0: android.app.blob.BlobHandle;

        r2 := @parameter1: java.lang.String;

        return null;
    }

    public android.app.blob.IBlobStoreSession openSession(long, java.lang.String) throws android.os.RemoteException
    {
        android.app.blob.IBlobStoreManager$Default r0;
        long l0;
        java.lang.String r1;

        r0 := @this: android.app.blob.IBlobStoreManager$Default;

        l0 := @parameter0: long;

        r1 := @parameter1: java.lang.String;

        return null;
    }

    public java.util.List queryBlobsForUser(int) throws android.os.RemoteException
    {
        android.app.blob.IBlobStoreManager$Default r0;
        int i0;

        r0 := @this: android.app.blob.IBlobStoreManager$Default;

        i0 := @parameter0: int;

        return null;
    }

    public void releaseLease(android.app.blob.BlobHandle, java.lang.String) throws android.os.RemoteException
    {
        android.app.blob.IBlobStoreManager$Default r0;
        android.app.blob.BlobHandle r1;
        java.lang.String r2;

        r0 := @this: android.app.blob.IBlobStoreManager$Default;

        r1 := @parameter0: android.app.blob.BlobHandle;

        r2 := @parameter1: java.lang.String;

        return;
    }

    public void waitForIdle(android.os.RemoteCallback) throws android.os.RemoteException
    {
        android.app.blob.IBlobStoreManager$Default r0;
        android.os.RemoteCallback r1;

        r0 := @this: android.app.blob.IBlobStoreManager$Default;

        r1 := @parameter0: android.os.RemoteCallback;

        return;
    }
}
