class android.app.blob.IBlobStoreManager$Stub$Proxy extends java.lang.Object implements android.app.blob.IBlobStoreManager
{
    public static android.app.blob.IBlobStoreManager sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.app.blob.IBlobStoreManager$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.app.blob.IBlobStoreManager$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.app.blob.IBlobStoreManager$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public void abandonSession(long, java.lang.String) throws android.os.RemoteException
    {
        android.app.blob.IBlobStoreManager$Stub$Proxy r0;
        long l0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.app.blob.IBlobStoreManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: android.app.blob.IBlobStoreManager$Stub$Proxy;

        l0 := @parameter0: long;

        r7 := @parameter1: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.blob.IBlobStoreManager");

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>(l0);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        $r3 = r0.<android.app.blob.IBlobStoreManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.app.blob.IBlobStoreManager$Stub: android.app.blob.IBlobStoreManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.app.blob.IBlobStoreManager$Stub: android.app.blob.IBlobStoreManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.app.blob.IBlobStoreManager: void abandonSession(long,java.lang.String)>(l0, r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void acquireLease(android.app.blob.BlobHandle, int, java.lang.CharSequence, long, java.lang.String) throws android.os.RemoteException
    {
        android.app.blob.IBlobStoreManager$Stub$Proxy r0;
        int i0;
        java.lang.CharSequence r1;
        long l1;
        java.lang.String r2;
        android.os.Parcel r3, r4;
        android.os.IBinder $r5;
        boolean $z0;
        android.app.blob.IBlobStoreManager $r6, $r7;
        java.lang.Throwable $r8, $r9, $r10, $r11, r13;
        android.app.blob.BlobHandle r12;

        r0 := @this: android.app.blob.IBlobStoreManager$Stub$Proxy;

        r12 := @parameter0: android.app.blob.BlobHandle;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.CharSequence;

        l1 := @parameter3: long;

        r2 := @parameter4: java.lang.String;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.blob.IBlobStoreManager");

     label02:
        if r12 == null goto label05;

     label03:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r12.<android.app.blob.BlobHandle: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i0);

     label07:
        if r1 == null goto label10;

     label08:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        staticinvoke <android.text.TextUtils: void writeToParcel(java.lang.CharSequence,android.os.Parcel,int)>(r1, r3, 0);

     label09:
        goto label11;

     label10:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label11:
        virtualinvoke r3.<android.os.Parcel: void writeLong(long)>(l1);

     label12:
        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        $r5 = r0.<android.app.blob.IBlobStoreManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r3, r4, 0);

        if $z0 != 0 goto label14;

        $r6 = staticinvoke <android.app.blob.IBlobStoreManager$Stub: android.app.blob.IBlobStoreManager getDefaultImpl()>();

        if $r6 == null goto label14;

        $r7 = staticinvoke <android.app.blob.IBlobStoreManager$Stub: android.app.blob.IBlobStoreManager getDefaultImpl()>();

        interfaceinvoke $r7.<android.app.blob.IBlobStoreManager: void acquireLease(android.app.blob.BlobHandle,int,java.lang.CharSequence,long,java.lang.String)>(r12, i0, r1, l1, r2);

     label13:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label14:
        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label15:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label16:
        $r10 := @caughtexception;

        r13 = $r10;

        goto label20;

     label17:
        $r9 := @caughtexception;

        r13 = $r9;

        goto label20;

     label18:
        $r11 := @caughtexception;

        r13 = $r11;

        goto label20;

     label19:
        $r8 := @caughtexception;

        r13 = $r8;

     label20:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r13;

        catch java.lang.Throwable from label01 to label02 with label19;
        catch java.lang.Throwable from label03 to label04 with label19;
        catch java.lang.Throwable from label05 to label06 with label19;
        catch java.lang.Throwable from label06 to label07 with label18;
        catch java.lang.Throwable from label08 to label09 with label18;
        catch java.lang.Throwable from label10 to label11 with label18;
        catch java.lang.Throwable from label11 to label12 with label17;
        catch java.lang.Throwable from label12 to label13 with label16;
        catch java.lang.Throwable from label14 to label15 with label16;
    }

    public android.os.IBinder asBinder()
    {
        android.app.blob.IBlobStoreManager$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.app.blob.IBlobStoreManager$Stub$Proxy;

        $r1 = r0.<android.app.blob.IBlobStoreManager$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public long createSession(android.app.blob.BlobHandle, java.lang.String) throws android.os.RemoteException
    {
        android.app.blob.IBlobStoreManager$Stub$Proxy r0;
        java.lang.String r1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.app.blob.IBlobStoreManager $r5, $r6;
        java.lang.Throwable $r7;
        android.app.blob.BlobHandle r8;
        long l0, l1;

        r0 := @this: android.app.blob.IBlobStoreManager$Stub$Proxy;

        r8 := @parameter0: android.app.blob.BlobHandle;

        r1 := @parameter1: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.blob.IBlobStoreManager");

     label02:
        if r8 == null goto label05;

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r8.<android.app.blob.BlobHandle: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r4 = r0.<android.app.blob.IBlobStoreManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r2, r3, 0);

        if $z0 != 0 goto label08;

        $r5 = staticinvoke <android.app.blob.IBlobStoreManager$Stub: android.app.blob.IBlobStoreManager getDefaultImpl()>();

        if $r5 == null goto label08;

        $r6 = staticinvoke <android.app.blob.IBlobStoreManager$Stub: android.app.blob.IBlobStoreManager getDefaultImpl()>();

        l0 = interfaceinvoke $r6.<android.app.blob.IBlobStoreManager: long createSession(android.app.blob.BlobHandle,java.lang.String)>(r8, r1);

     label07:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return l0;

     label08:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        l1 = virtualinvoke r3.<android.os.Parcel: long readLong()>();

     label09:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return l1;

     label10:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void deleteBlob(long) throws android.os.RemoteException
    {
        android.app.blob.IBlobStoreManager$Stub$Proxy r0;
        long l0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.app.blob.IBlobStoreManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.app.blob.IBlobStoreManager$Stub$Proxy;

        l0 := @parameter0: long;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.blob.IBlobStoreManager");

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>(l0);

        $r4 = r0.<android.app.blob.IBlobStoreManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(10, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.app.blob.IBlobStoreManager$Stub: android.app.blob.IBlobStoreManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.app.blob.IBlobStoreManager$Stub: android.app.blob.IBlobStoreManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.app.blob.IBlobStoreManager: void deleteBlob(long)>(l0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.app.blob.IBlobStoreManager$Stub$Proxy r0;

        r0 := @this: android.app.blob.IBlobStoreManager$Stub$Proxy;

        return "android.app.blob.IBlobStoreManager";
    }

    public android.app.blob.LeaseInfo getLeaseInfo(android.app.blob.BlobHandle, java.lang.String) throws android.os.RemoteException
    {
        android.app.blob.IBlobStoreManager$Stub$Proxy r0;
        java.lang.String r1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        int $i0;
        android.os.Parcelable$Creator $r5;
        java.lang.Object $r6;
        android.app.blob.IBlobStoreManager $r7, $r8;
        java.lang.Throwable $r9;
        android.app.blob.BlobHandle r10;
        android.app.blob.LeaseInfo r11, r12;

        r0 := @this: android.app.blob.IBlobStoreManager$Stub$Proxy;

        r10 := @parameter0: android.app.blob.BlobHandle;

        r1 := @parameter1: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.blob.IBlobStoreManager");

     label02:
        if r10 == null goto label05;

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r10.<android.app.blob.BlobHandle: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r4 = r0.<android.app.blob.IBlobStoreManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(12, r2, r3, 0);

        if $z0 != 0 goto label08;

        $r7 = staticinvoke <android.app.blob.IBlobStoreManager$Stub: android.app.blob.IBlobStoreManager getDefaultImpl()>();

        if $r7 == null goto label08;

        $r8 = staticinvoke <android.app.blob.IBlobStoreManager$Stub: android.app.blob.IBlobStoreManager getDefaultImpl()>();

        r11 = interfaceinvoke $r8.<android.app.blob.IBlobStoreManager: android.app.blob.LeaseInfo getLeaseInfo(android.app.blob.BlobHandle,java.lang.String)>(r10, r1);

     label07:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r11;

     label08:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label10;

        $r5 = <android.app.blob.LeaseInfo: android.os.Parcelable$Creator CREATOR>;

        $r6 = interfaceinvoke $r5.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r3);

        r12 = (android.app.blob.LeaseInfo) $r6;

     label09:
        goto label11;

     label10:
        r12 = null;

     label11:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r12;

     label12:
        $r9 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
    }

    public java.util.List getLeasedBlobs(java.lang.String) throws android.os.RemoteException
    {
        android.app.blob.IBlobStoreManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$Creator $r4;
        android.app.blob.IBlobStoreManager $r5, $r6;
        java.lang.Throwable $r7;
        java.lang.String r8;
        java.util.List r9;
        java.util.ArrayList r10;

        r0 := @this: android.app.blob.IBlobStoreManager$Stub$Proxy;

        r8 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.blob.IBlobStoreManager");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        $r3 = r0.<android.app.blob.IBlobStoreManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(11, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.app.blob.IBlobStoreManager$Stub: android.app.blob.IBlobStoreManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.app.blob.IBlobStoreManager$Stub: android.app.blob.IBlobStoreManager getDefaultImpl()>();

        r9 = interfaceinvoke $r6.<android.app.blob.IBlobStoreManager: java.util.List getLeasedBlobs(java.lang.String)>(r8);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $r4 = <android.app.blob.BlobHandle: android.os.Parcelable$Creator CREATOR>;

        r10 = virtualinvoke r2.<android.os.Parcel: java.util.ArrayList createTypedArrayList(android.os.Parcelable$Creator)>($r4);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public long getRemainingLeaseQuotaBytes(java.lang.String) throws android.os.RemoteException
    {
        android.app.blob.IBlobStoreManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.app.blob.IBlobStoreManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;
        long l0, l1;

        r0 := @this: android.app.blob.IBlobStoreManager$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.blob.IBlobStoreManager");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        $r3 = r0.<android.app.blob.IBlobStoreManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.app.blob.IBlobStoreManager$Stub: android.app.blob.IBlobStoreManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.app.blob.IBlobStoreManager$Stub: android.app.blob.IBlobStoreManager getDefaultImpl()>();

        l0 = interfaceinvoke $r5.<android.app.blob.IBlobStoreManager: long getRemainingLeaseQuotaBytes(java.lang.String)>(r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return l0;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        l1 = virtualinvoke r2.<android.os.Parcel: long readLong()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return l1;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.os.ParcelFileDescriptor openBlob(android.app.blob.BlobHandle, java.lang.String) throws android.os.RemoteException
    {
        android.app.blob.IBlobStoreManager$Stub$Proxy r0;
        java.lang.String r1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        int $i0;
        android.os.Parcelable$Creator $r5;
        java.lang.Object $r6;
        android.app.blob.IBlobStoreManager $r7, $r8;
        java.lang.Throwable $r9;
        android.app.blob.BlobHandle r10;
        android.os.ParcelFileDescriptor r11, r12;

        r0 := @this: android.app.blob.IBlobStoreManager$Stub$Proxy;

        r10 := @parameter0: android.app.blob.BlobHandle;

        r1 := @parameter1: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.blob.IBlobStoreManager");

     label02:
        if r10 == null goto label05;

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r10.<android.app.blob.BlobHandle: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r4 = r0.<android.app.blob.IBlobStoreManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r2, r3, 0);

        if $z0 != 0 goto label08;

        $r7 = staticinvoke <android.app.blob.IBlobStoreManager$Stub: android.app.blob.IBlobStoreManager getDefaultImpl()>();

        if $r7 == null goto label08;

        $r8 = staticinvoke <android.app.blob.IBlobStoreManager$Stub: android.app.blob.IBlobStoreManager getDefaultImpl()>();

        r11 = interfaceinvoke $r8.<android.app.blob.IBlobStoreManager: android.os.ParcelFileDescriptor openBlob(android.app.blob.BlobHandle,java.lang.String)>(r10, r1);

     label07:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r11;

     label08:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label10;

        $r5 = <android.os.ParcelFileDescriptor: android.os.Parcelable$Creator CREATOR>;

        $r6 = interfaceinvoke $r5.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r3);

        r12 = (android.os.ParcelFileDescriptor) $r6;

     label09:
        goto label11;

     label10:
        r12 = null;

     label11:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r12;

     label12:
        $r9 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
    }

    public android.app.blob.IBlobStoreSession openSession(long, java.lang.String) throws android.os.RemoteException
    {
        android.app.blob.IBlobStoreManager$Stub$Proxy r0;
        long l0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, $r4;
        boolean $z0;
        android.app.blob.IBlobStoreManager $r5, $r6;
        java.lang.Throwable $r7;
        java.lang.String r8;
        android.app.blob.IBlobStoreSession r9, r10;

        r0 := @this: android.app.blob.IBlobStoreManager$Stub$Proxy;

        l0 := @parameter0: long;

        r8 := @parameter1: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.blob.IBlobStoreManager");

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>(l0);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        $r3 = r0.<android.app.blob.IBlobStoreManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.app.blob.IBlobStoreManager$Stub: android.app.blob.IBlobStoreManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.app.blob.IBlobStoreManager$Stub: android.app.blob.IBlobStoreManager getDefaultImpl()>();

        r9 = interfaceinvoke $r6.<android.app.blob.IBlobStoreManager: android.app.blob.IBlobStoreSession openSession(long,java.lang.String)>(l0, r8);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $r4 = virtualinvoke r2.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r10 = staticinvoke <android.app.blob.IBlobStoreSession$Stub: android.app.blob.IBlobStoreSession asInterface(android.os.IBinder)>($r4);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.util.List queryBlobsForUser(int) throws android.os.RemoteException
    {
        android.app.blob.IBlobStoreManager$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$Creator $r4;
        android.app.blob.IBlobStoreManager $r5, $r6;
        java.lang.Throwable $r7;
        java.util.List r8;
        java.util.ArrayList r9;

        r0 := @this: android.app.blob.IBlobStoreManager$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.blob.IBlobStoreManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.app.blob.IBlobStoreManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(9, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.app.blob.IBlobStoreManager$Stub: android.app.blob.IBlobStoreManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.app.blob.IBlobStoreManager$Stub: android.app.blob.IBlobStoreManager getDefaultImpl()>();

        r8 = interfaceinvoke $r6.<android.app.blob.IBlobStoreManager: java.util.List queryBlobsForUser(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $r4 = <android.app.blob.BlobInfo: android.os.Parcelable$Creator CREATOR>;

        r9 = virtualinvoke r2.<android.os.Parcel: java.util.ArrayList createTypedArrayList(android.os.Parcelable$Creator)>($r4);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void releaseLease(android.app.blob.BlobHandle, java.lang.String) throws android.os.RemoteException
    {
        android.app.blob.IBlobStoreManager$Stub$Proxy r0;
        java.lang.String r1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.app.blob.IBlobStoreManager $r5, $r6;
        java.lang.Throwable $r7;
        android.app.blob.BlobHandle r8;

        r0 := @this: android.app.blob.IBlobStoreManager$Stub$Proxy;

        r8 := @parameter0: android.app.blob.BlobHandle;

        r1 := @parameter1: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.blob.IBlobStoreManager");

     label02:
        if r8 == null goto label05;

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r8.<android.app.blob.BlobHandle: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r4 = r0.<android.app.blob.IBlobStoreManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r2, r3, 0);

        if $z0 != 0 goto label08;

        $r5 = staticinvoke <android.app.blob.IBlobStoreManager$Stub: android.app.blob.IBlobStoreManager getDefaultImpl()>();

        if $r5 == null goto label08;

        $r6 = staticinvoke <android.app.blob.IBlobStoreManager$Stub: android.app.blob.IBlobStoreManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.app.blob.IBlobStoreManager: void releaseLease(android.app.blob.BlobHandle,java.lang.String)>(r8, r1);

     label07:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void waitForIdle(android.os.RemoteCallback) throws android.os.RemoteException
    {
        android.app.blob.IBlobStoreManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.app.blob.IBlobStoreManager $r4, $r5;
        java.lang.Throwable $r6;
        android.os.RemoteCallback r7;

        r0 := @this: android.app.blob.IBlobStoreManager$Stub$Proxy;

        r7 := @parameter0: android.os.RemoteCallback;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.blob.IBlobStoreManager");

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.os.RemoteCallback: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r3 = r0.<android.app.blob.IBlobStoreManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.app.blob.IBlobStoreManager$Stub: android.app.blob.IBlobStoreManager getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.app.blob.IBlobStoreManager$Stub: android.app.blob.IBlobStoreManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.app.blob.IBlobStoreManager: void waitForIdle(android.os.RemoteCallback)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }
}
