public abstract class android.app.blob.IBlobStoreManager$Stub extends android.os.Binder implements android.app.blob.IBlobStoreManager
{
    private static final java.lang.String DESCRIPTOR;
    static final int TRANSACTION_abandonSession;
    static final int TRANSACTION_acquireLease;
    static final int TRANSACTION_createSession;
    static final int TRANSACTION_deleteBlob;
    static final int TRANSACTION_getLeaseInfo;
    static final int TRANSACTION_getLeasedBlobs;
    static final int TRANSACTION_getRemainingLeaseQuotaBytes;
    static final int TRANSACTION_openBlob;
    static final int TRANSACTION_openSession;
    static final int TRANSACTION_queryBlobsForUser;
    static final int TRANSACTION_releaseLease;
    static final int TRANSACTION_waitForIdle;

    public void <init>()
    {
        android.app.blob.IBlobStoreManager$Stub r0;

        r0 := @this: android.app.blob.IBlobStoreManager$Stub;

        specialinvoke r0.<android.os.Binder: void <init>()>();

        virtualinvoke r0.<android.app.blob.IBlobStoreManager$Stub: void attachInterface(android.os.IInterface,java.lang.String)>(r0, "android.app.blob.IBlobStoreManager");

        return;
    }

    public static android.app.blob.IBlobStoreManager asInterface(android.os.IBinder)
    {
        android.os.IBinder r0;
        android.os.IInterface r1;
        android.app.blob.IBlobStoreManager$Stub$Proxy $r2;
        boolean $z0;
        android.app.blob.IBlobStoreManager $r3;

        r0 := @parameter0: android.os.IBinder;

        if r0 != null goto label1;

        return null;

     label1:
        r1 = interfaceinvoke r0.<android.os.IBinder: android.os.IInterface queryLocalInterface(java.lang.String)>("android.app.blob.IBlobStoreManager");

        if r1 == null goto label2;

        $z0 = r1 instanceof android.app.blob.IBlobStoreManager;

        if $z0 == 0 goto label2;

        $r3 = (android.app.blob.IBlobStoreManager) r1;

        return $r3;

     label2:
        $r2 = new android.app.blob.IBlobStoreManager$Stub$Proxy;

        specialinvoke $r2.<android.app.blob.IBlobStoreManager$Stub$Proxy: void <init>(android.os.IBinder)>(r0);

        return $r2;
    }

    public static android.app.blob.IBlobStoreManager getDefaultImpl()
    {
        android.app.blob.IBlobStoreManager $r0;

        $r0 = <android.app.blob.IBlobStoreManager$Stub$Proxy: android.app.blob.IBlobStoreManager sDefaultImpl>;

        return $r0;
    }

    public static java.lang.String getDefaultTransactionName(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label13;
            case 2: goto label12;
            case 3: goto label11;
            case 4: goto label10;
            case 5: goto label09;
            case 6: goto label08;
            case 7: goto label07;
            case 8: goto label06;
            case 9: goto label05;
            case 10: goto label04;
            case 11: goto label03;
            case 12: goto label02;
            default: goto label01;
        };

     label01:
        return null;

     label02:
        return "getLeaseInfo";

     label03:
        return "getLeasedBlobs";

     label04:
        return "deleteBlob";

     label05:
        return "queryBlobsForUser";

     label06:
        return "waitForIdle";

     label07:
        return "getRemainingLeaseQuotaBytes";

     label08:
        return "releaseLease";

     label09:
        return "acquireLease";

     label10:
        return "abandonSession";

     label11:
        return "openBlob";

     label12:
        return "openSession";

     label13:
        return "createSession";
    }

    public static boolean setDefaultImpl(android.app.blob.IBlobStoreManager)
    {
        android.app.blob.IBlobStoreManager r0, $r1;
        java.lang.IllegalStateException $r2;

        r0 := @parameter0: android.app.blob.IBlobStoreManager;

        $r1 = <android.app.blob.IBlobStoreManager$Stub$Proxy: android.app.blob.IBlobStoreManager sDefaultImpl>;

        if $r1 != null goto label2;

        if r0 == null goto label1;

        <android.app.blob.IBlobStoreManager$Stub$Proxy: android.app.blob.IBlobStoreManager sDefaultImpl> = r0;

        return 1;

     label1:
        return 0;

     label2:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("setDefaultImpl() called twice");

        throw $r2;
    }

    public android.os.IBinder asBinder()
    {
        android.app.blob.IBlobStoreManager$Stub r0;

        r0 := @this: android.app.blob.IBlobStoreManager$Stub;

        return r0;
    }

    public java.lang.String getTransactionName(int)
    {
        android.app.blob.IBlobStoreManager$Stub r0;
        int i0;
        java.lang.String $r1;

        r0 := @this: android.app.blob.IBlobStoreManager$Stub;

        i0 := @parameter0: int;

        $r1 = staticinvoke <android.app.blob.IBlobStoreManager$Stub: java.lang.String getDefaultTransactionName(int)>(i0);

        return $r1;
    }

    public boolean onTransact(int, android.os.Parcel, android.os.Parcel, int) throws android.os.RemoteException
    {
        android.app.blob.IBlobStoreManager$Stub r0;
        android.os.Parcel r1, r25;
        int i0, $i1, $i3, $i4, $i5, $i6, $i7, $i10, $i12, i13, i15;
        java.lang.String $r2, $r5, $r8, $r9, $r12, $r17, $r18, $r21, $r22;
        android.os.Parcelable$Creator $r3, $r6, $r10, $r13, $r15, $r19, $r23;
        java.lang.Object $r4, $r7, $r11, $r14, $r16, $r20, $r24;
        long $l2, $l8, $l9, $l11, l14, l16;
        boolean $z0;
        android.app.blob.BlobHandle r26, r31, r32, r34, r38;
        android.app.blob.LeaseInfo r27;
        java.util.List r28, r29;
        android.os.RemoteCallback r30;
        java.lang.CharSequence r33;
        android.os.ParcelFileDescriptor r35;
        android.app.blob.IBlobStoreSession r36;
        android.os.IBinder r37;

        r0 := @this: android.app.blob.IBlobStoreManager$Stub;

        i13 := @parameter0: int;

        r25 := @parameter1: android.os.Parcel;

        r1 := @parameter2: android.os.Parcel;

        i0 := @parameter3: int;

        if i13 == 1598968902 goto label34;

        tableswitch(i13)
        {
            case 1: goto label31;
            case 2: goto label28;
            case 3: goto label23;
            case 4: goto label22;
            case 5: goto label17;
            case 6: goto label14;
            case 7: goto label13;
            case 8: goto label10;
            case 9: goto label09;
            case 10: goto label08;
            case 11: goto label07;
            case 12: goto label02;
            default: goto label01;
        };

     label01:
        $z0 = specialinvoke r0.<android.os.Binder: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>(i13, r25, r1, i0);

        return $z0;

     label02:
        virtualinvoke r25.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.app.blob.IBlobStoreManager");

        $i1 = virtualinvoke r25.<android.os.Parcel: int readInt()>();

        if $i1 == 0 goto label03;

        $r3 = <android.app.blob.BlobHandle: android.os.Parcelable$Creator CREATOR>;

        $r4 = interfaceinvoke $r3.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r25);

        r26 = (android.app.blob.BlobHandle) $r4;

        goto label04;

     label03:
        r26 = null;

     label04:
        $r2 = virtualinvoke r25.<android.os.Parcel: java.lang.String readString()>();

        r27 = virtualinvoke r0.<android.app.blob.IBlobStoreManager$Stub: android.app.blob.LeaseInfo getLeaseInfo(android.app.blob.BlobHandle,java.lang.String)>(r26, $r2);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        if r27 == null goto label05;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r27.<android.app.blob.LeaseInfo: void writeToParcel(android.os.Parcel,int)>(r1, 1);

        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        return 1;

     label07:
        virtualinvoke r25.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.app.blob.IBlobStoreManager");

        $r5 = virtualinvoke r25.<android.os.Parcel: java.lang.String readString()>();

        r28 = virtualinvoke r0.<android.app.blob.IBlobStoreManager$Stub: java.util.List getLeasedBlobs(java.lang.String)>($r5);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeTypedList(java.util.List)>(r28);

        return 1;

     label08:
        virtualinvoke r25.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.app.blob.IBlobStoreManager");

        $l2 = virtualinvoke r25.<android.os.Parcel: long readLong()>();

        virtualinvoke r0.<android.app.blob.IBlobStoreManager$Stub: void deleteBlob(long)>($l2);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label09:
        virtualinvoke r25.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.app.blob.IBlobStoreManager");

        $i3 = virtualinvoke r25.<android.os.Parcel: int readInt()>();

        r29 = virtualinvoke r0.<android.app.blob.IBlobStoreManager$Stub: java.util.List queryBlobsForUser(int)>($i3);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeTypedList(java.util.List)>(r29);

        return 1;

     label10:
        virtualinvoke r25.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.app.blob.IBlobStoreManager");

        $i4 = virtualinvoke r25.<android.os.Parcel: int readInt()>();

        if $i4 == 0 goto label11;

        $r6 = <android.os.RemoteCallback: android.os.Parcelable$Creator CREATOR>;

        $r7 = interfaceinvoke $r6.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r25);

        r30 = (android.os.RemoteCallback) $r7;

        goto label12;

     label11:
        r30 = null;

     label12:
        virtualinvoke r0.<android.app.blob.IBlobStoreManager$Stub: void waitForIdle(android.os.RemoteCallback)>(r30);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label13:
        virtualinvoke r25.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.app.blob.IBlobStoreManager");

        $r8 = virtualinvoke r25.<android.os.Parcel: java.lang.String readString()>();

        l14 = virtualinvoke r0.<android.app.blob.IBlobStoreManager$Stub: long getRemainingLeaseQuotaBytes(java.lang.String)>($r8);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>(l14);

        return 1;

     label14:
        virtualinvoke r25.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.app.blob.IBlobStoreManager");

        $i5 = virtualinvoke r25.<android.os.Parcel: int readInt()>();

        if $i5 == 0 goto label15;

        $r10 = <android.app.blob.BlobHandle: android.os.Parcelable$Creator CREATOR>;

        $r11 = interfaceinvoke $r10.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r25);

        r31 = (android.app.blob.BlobHandle) $r11;

        goto label16;

     label15:
        r31 = null;

     label16:
        $r9 = virtualinvoke r25.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.app.blob.IBlobStoreManager$Stub: void releaseLease(android.app.blob.BlobHandle,java.lang.String)>(r31, $r9);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label17:
        virtualinvoke r25.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.app.blob.IBlobStoreManager");

        $i6 = virtualinvoke r25.<android.os.Parcel: int readInt()>();

        if $i6 == 0 goto label18;

        $r15 = <android.app.blob.BlobHandle: android.os.Parcelable$Creator CREATOR>;

        $r16 = interfaceinvoke $r15.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r25);

        r32 = (android.app.blob.BlobHandle) $r16;

        goto label19;

     label18:
        r32 = null;

     label19:
        i15 = virtualinvoke r25.<android.os.Parcel: int readInt()>();

        $i7 = virtualinvoke r25.<android.os.Parcel: int readInt()>();

        if $i7 == 0 goto label20;

        $r13 = <android.text.TextUtils: android.os.Parcelable$Creator CHAR_SEQUENCE_CREATOR>;

        $r14 = interfaceinvoke $r13.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r25);

        r33 = (java.lang.CharSequence) $r14;

        goto label21;

     label20:
        r33 = null;

     label21:
        $l8 = virtualinvoke r25.<android.os.Parcel: long readLong()>();

        $r12 = virtualinvoke r25.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.app.blob.IBlobStoreManager$Stub: void acquireLease(android.app.blob.BlobHandle,int,java.lang.CharSequence,long,java.lang.String)>(r32, i15, r33, $l8, $r12);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label22:
        virtualinvoke r25.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.app.blob.IBlobStoreManager");

        $l9 = virtualinvoke r25.<android.os.Parcel: long readLong()>();

        $r17 = virtualinvoke r25.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.app.blob.IBlobStoreManager$Stub: void abandonSession(long,java.lang.String)>($l9, $r17);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label23:
        virtualinvoke r25.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.app.blob.IBlobStoreManager");

        $i10 = virtualinvoke r25.<android.os.Parcel: int readInt()>();

        if $i10 == 0 goto label24;

        $r19 = <android.app.blob.BlobHandle: android.os.Parcelable$Creator CREATOR>;

        $r20 = interfaceinvoke $r19.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r25);

        r34 = (android.app.blob.BlobHandle) $r20;

        goto label25;

     label24:
        r34 = null;

     label25:
        $r18 = virtualinvoke r25.<android.os.Parcel: java.lang.String readString()>();

        r35 = virtualinvoke r0.<android.app.blob.IBlobStoreManager$Stub: android.os.ParcelFileDescriptor openBlob(android.app.blob.BlobHandle,java.lang.String)>(r34, $r18);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        if r35 == null goto label26;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r35.<android.os.ParcelFileDescriptor: void writeToParcel(android.os.Parcel,int)>(r1, 1);

        goto label27;

     label26:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label27:
        return 1;

     label28:
        virtualinvoke r25.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.app.blob.IBlobStoreManager");

        $l11 = virtualinvoke r25.<android.os.Parcel: long readLong()>();

        $r21 = virtualinvoke r25.<android.os.Parcel: java.lang.String readString()>();

        r36 = virtualinvoke r0.<android.app.blob.IBlobStoreManager$Stub: android.app.blob.IBlobStoreSession openSession(long,java.lang.String)>($l11, $r21);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        if r36 == null goto label29;

        r37 = interfaceinvoke r36.<android.app.blob.IBlobStoreSession: android.os.IBinder asBinder()>();

        goto label30;

     label29:
        r37 = null;

     label30:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r37);

        return 1;

     label31:
        virtualinvoke r25.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.app.blob.IBlobStoreManager");

        $i12 = virtualinvoke r25.<android.os.Parcel: int readInt()>();

        if $i12 == 0 goto label32;

        $r23 = <android.app.blob.BlobHandle: android.os.Parcelable$Creator CREATOR>;

        $r24 = interfaceinvoke $r23.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r25);

        r38 = (android.app.blob.BlobHandle) $r24;

        goto label33;

     label32:
        r38 = null;

     label33:
        $r22 = virtualinvoke r25.<android.os.Parcel: java.lang.String readString()>();

        l16 = virtualinvoke r0.<android.app.blob.IBlobStoreManager$Stub: long createSession(android.app.blob.BlobHandle,java.lang.String)>(r38, $r22);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>(l16);

        return 1;

     label34:
        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>("android.app.blob.IBlobStoreManager");

        return 1;
    }

    public static void <clinit>()
    {
        <android.app.blob.IBlobStoreManager$Stub: int TRANSACTION_waitForIdle> = 8;

        <android.app.blob.IBlobStoreManager$Stub: int TRANSACTION_releaseLease> = 6;

        <android.app.blob.IBlobStoreManager$Stub: int TRANSACTION_queryBlobsForUser> = 9;

        <android.app.blob.IBlobStoreManager$Stub: int TRANSACTION_openSession> = 2;

        <android.app.blob.IBlobStoreManager$Stub: int TRANSACTION_openBlob> = 3;

        <android.app.blob.IBlobStoreManager$Stub: int TRANSACTION_getRemainingLeaseQuotaBytes> = 7;

        <android.app.blob.IBlobStoreManager$Stub: int TRANSACTION_getLeasedBlobs> = 11;

        <android.app.blob.IBlobStoreManager$Stub: int TRANSACTION_getLeaseInfo> = 12;

        <android.app.blob.IBlobStoreManager$Stub: int TRANSACTION_deleteBlob> = 10;

        <android.app.blob.IBlobStoreManager$Stub: int TRANSACTION_createSession> = 1;

        <android.app.blob.IBlobStoreManager$Stub: int TRANSACTION_acquireLease> = 5;

        <android.app.blob.IBlobStoreManager$Stub: int TRANSACTION_abandonSession> = 4;

        <android.app.blob.IBlobStoreManager$Stub: java.lang.String DESCRIPTOR> = "android.app.blob.IBlobStoreManager";

        return;
    }
}
