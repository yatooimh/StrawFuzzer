class android.app.blob.IBlobStoreSession$Stub$Proxy extends java.lang.Object implements android.app.blob.IBlobStoreSession
{
    public static android.app.blob.IBlobStoreSession sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.app.blob.IBlobStoreSession$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.app.blob.IBlobStoreSession$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.app.blob.IBlobStoreSession$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public void abandon() throws android.os.RemoteException
    {
        android.app.blob.IBlobStoreSession$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.app.blob.IBlobStoreSession $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.app.blob.IBlobStoreSession$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.blob.IBlobStoreSession");

        $r4 = r0.<android.app.blob.IBlobStoreSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(11, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.app.blob.IBlobStoreSession$Stub: android.app.blob.IBlobStoreSession getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.app.blob.IBlobStoreSession$Stub: android.app.blob.IBlobStoreSession getDefaultImpl()>();

        interfaceinvoke $r6.<android.app.blob.IBlobStoreSession: void abandon()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void allowPackageAccess(java.lang.String, byte[]) throws android.os.RemoteException
    {
        android.app.blob.IBlobStoreSession$Stub$Proxy r0;
        byte[] r1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.app.blob.IBlobStoreSession $r5, $r6;
        java.lang.Throwable $r7;
        java.lang.String r8;

        r0 := @this: android.app.blob.IBlobStoreSession$Stub$Proxy;

        r8 := @parameter0: java.lang.String;

        r1 := @parameter1: byte[];

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.blob.IBlobStoreSession");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        virtualinvoke r2.<android.os.Parcel: void writeByteArray(byte[])>(r1);

        $r4 = r0.<android.app.blob.IBlobStoreSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.app.blob.IBlobStoreSession$Stub: android.app.blob.IBlobStoreSession getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.app.blob.IBlobStoreSession$Stub: android.app.blob.IBlobStoreSession getDefaultImpl()>();

        interfaceinvoke $r6.<android.app.blob.IBlobStoreSession: void allowPackageAccess(java.lang.String,byte[])>(r8, r1);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void allowPublicAccess() throws android.os.RemoteException
    {
        android.app.blob.IBlobStoreSession$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.app.blob.IBlobStoreSession $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.app.blob.IBlobStoreSession$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.blob.IBlobStoreSession");

        $r4 = r0.<android.app.blob.IBlobStoreSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.app.blob.IBlobStoreSession$Stub: android.app.blob.IBlobStoreSession getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.app.blob.IBlobStoreSession$Stub: android.app.blob.IBlobStoreSession getDefaultImpl()>();

        interfaceinvoke $r6.<android.app.blob.IBlobStoreSession: void allowPublicAccess()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void allowSameSignatureAccess() throws android.os.RemoteException
    {
        android.app.blob.IBlobStoreSession$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.app.blob.IBlobStoreSession $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.app.blob.IBlobStoreSession$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.blob.IBlobStoreSession");

        $r4 = r0.<android.app.blob.IBlobStoreSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.app.blob.IBlobStoreSession$Stub: android.app.blob.IBlobStoreSession getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.app.blob.IBlobStoreSession$Stub: android.app.blob.IBlobStoreSession getDefaultImpl()>();

        interfaceinvoke $r6.<android.app.blob.IBlobStoreSession: void allowSameSignatureAccess()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.os.IBinder asBinder()
    {
        android.app.blob.IBlobStoreSession$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.app.blob.IBlobStoreSession$Stub$Proxy;

        $r1 = r0.<android.app.blob.IBlobStoreSession$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public void close() throws android.os.RemoteException
    {
        android.app.blob.IBlobStoreSession$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.app.blob.IBlobStoreSession $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.app.blob.IBlobStoreSession$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.blob.IBlobStoreSession");

        $r4 = r0.<android.app.blob.IBlobStoreSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(10, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.app.blob.IBlobStoreSession$Stub: android.app.blob.IBlobStoreSession getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.app.blob.IBlobStoreSession$Stub: android.app.blob.IBlobStoreSession getDefaultImpl()>();

        interfaceinvoke $r6.<android.app.blob.IBlobStoreSession: void close()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void commit(android.app.blob.IBlobCommitCallback) throws android.os.RemoteException
    {
        android.app.blob.IBlobStoreSession$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.app.blob.IBlobStoreSession $r4, $r5;
        java.lang.Throwable $r6;
        android.app.blob.IBlobCommitCallback r7;

        r0 := @this: android.app.blob.IBlobStoreSession$Stub$Proxy;

        r7 := @parameter0: android.app.blob.IBlobCommitCallback;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.blob.IBlobStoreSession");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.app.blob.IBlobCommitCallback: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.app.blob.IBlobStoreSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(12, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.app.blob.IBlobStoreSession$Stub: android.app.blob.IBlobStoreSession getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.app.blob.IBlobStoreSession$Stub: android.app.blob.IBlobStoreSession getDefaultImpl()>();

        interfaceinvoke $r5.<android.app.blob.IBlobStoreSession: void commit(android.app.blob.IBlobCommitCallback)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.app.blob.IBlobStoreSession$Stub$Proxy r0;

        r0 := @this: android.app.blob.IBlobStoreSession$Stub$Proxy;

        return "android.app.blob.IBlobStoreSession";
    }

    public long getSize() throws android.os.RemoteException
    {
        android.app.blob.IBlobStoreSession$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.app.blob.IBlobStoreSession $r5, $r6;
        java.lang.Throwable $r7;
        long l0, l1;

        r0 := @this: android.app.blob.IBlobStoreSession$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.blob.IBlobStoreSession");

        $r4 = r0.<android.app.blob.IBlobStoreSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(9, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.app.blob.IBlobStoreSession$Stub: android.app.blob.IBlobStoreSession getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.app.blob.IBlobStoreSession$Stub: android.app.blob.IBlobStoreSession getDefaultImpl()>();

        l0 = interfaceinvoke $r6.<android.app.blob.IBlobStoreSession: long getSize()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return l0;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        l1 = virtualinvoke r2.<android.os.Parcel: long readLong()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return l1;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public boolean isPackageAccessAllowed(java.lang.String, byte[]) throws android.os.RemoteException
    {
        android.app.blob.IBlobStoreSession$Stub$Proxy r0;
        byte[] r1;
        android.os.Parcel r2, r3;
        android.os.IBinder r4;
        int i0;
        boolean $z0, z1, z2;
        android.app.blob.IBlobStoreSession $r5, $r6;
        java.lang.Throwable $r7;
        java.lang.String r8;

        r0 := @this: android.app.blob.IBlobStoreSession$Stub$Proxy;

        r8 := @parameter0: java.lang.String;

        r1 := @parameter1: byte[];

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.blob.IBlobStoreSession");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        virtualinvoke r2.<android.os.Parcel: void writeByteArray(byte[])>(r1);

        r4 = r0.<android.app.blob.IBlobStoreSession$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r2, r3, 0);

        if $z0 != 0 goto label5;

        $r5 = staticinvoke <android.app.blob.IBlobStoreSession$Stub: android.app.blob.IBlobStoreSession getDefaultImpl()>();

        if $r5 == null goto label5;

        $r6 = staticinvoke <android.app.blob.IBlobStoreSession$Stub: android.app.blob.IBlobStoreSession getDefaultImpl()>();

        z2 = interfaceinvoke $r6.<android.app.blob.IBlobStoreSession: boolean isPackageAccessAllowed(java.lang.String,byte[])>(r8, r1);

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isPublicAccessAllowed() throws android.os.RemoteException
    {
        android.app.blob.IBlobStoreSession$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        boolean $z0, z1, z2;
        android.app.blob.IBlobStoreSession $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: android.app.blob.IBlobStoreSession$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.blob.IBlobStoreSession");

        r6 = r0.<android.app.blob.IBlobStoreSession$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.app.blob.IBlobStoreSession$Stub: android.app.blob.IBlobStoreSession getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.app.blob.IBlobStoreSession$Stub: android.app.blob.IBlobStoreSession getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.app.blob.IBlobStoreSession: boolean isPublicAccessAllowed()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isSameSignatureAccessAllowed() throws android.os.RemoteException
    {
        android.app.blob.IBlobStoreSession$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        boolean $z0, z1, z2;
        android.app.blob.IBlobStoreSession $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: android.app.blob.IBlobStoreSession$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.blob.IBlobStoreSession");

        r6 = r0.<android.app.blob.IBlobStoreSession$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.app.blob.IBlobStoreSession$Stub: android.app.blob.IBlobStoreSession getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.app.blob.IBlobStoreSession$Stub: android.app.blob.IBlobStoreSession getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.app.blob.IBlobStoreSession: boolean isSameSignatureAccessAllowed()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public android.os.ParcelFileDescriptor openRead() throws android.os.RemoteException
    {
        android.app.blob.IBlobStoreSession$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        int $i0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.app.blob.IBlobStoreSession $r6, $r7;
        java.lang.Throwable $r8;
        android.os.ParcelFileDescriptor r9, r10;

        r0 := @this: android.app.blob.IBlobStoreSession$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.blob.IBlobStoreSession");

        $r3 = r0.<android.app.blob.IBlobStoreSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.app.blob.IBlobStoreSession$Stub: android.app.blob.IBlobStoreSession getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.app.blob.IBlobStoreSession$Stub: android.app.blob.IBlobStoreSession getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<android.app.blob.IBlobStoreSession: android.os.ParcelFileDescriptor openRead()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label5;

        $r4 = <android.os.ParcelFileDescriptor: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r10 = (android.os.ParcelFileDescriptor) $r5;

     label4:
        goto label6;

     label5:
        r10 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public android.os.ParcelFileDescriptor openWrite(long, long) throws android.os.RemoteException
    {
        android.app.blob.IBlobStoreSession$Stub$Proxy r0;
        long l0, l1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        int $i2;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.app.blob.IBlobStoreSession $r6, $r7;
        java.lang.Throwable $r8;
        android.os.ParcelFileDescriptor r9, r10;

        r0 := @this: android.app.blob.IBlobStoreSession$Stub$Proxy;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.blob.IBlobStoreSession");

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>(l0);

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>(l1);

        $r3 = r0.<android.app.blob.IBlobStoreSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.app.blob.IBlobStoreSession$Stub: android.app.blob.IBlobStoreSession getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.app.blob.IBlobStoreSession$Stub: android.app.blob.IBlobStoreSession getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<android.app.blob.IBlobStoreSession: android.os.ParcelFileDescriptor openWrite(long,long)>(l0, l1);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i2 == 0 goto label5;

        $r4 = <android.os.ParcelFileDescriptor: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r10 = (android.os.ParcelFileDescriptor) $r5;

     label4:
        goto label6;

     label5:
        r10 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }
}
