final class android.app.contentsuggestions.ContentSuggestionsManager$ClassificationsCallbackWrapper extends android.app.contentsuggestions.IClassificationsCallback$Stub
{
    private final android.app.contentsuggestions.ContentSuggestionsManager$ClassificationsCallback mCallback;
    private final java.util.concurrent.Executor mExecutor;

    void <init>(android.app.contentsuggestions.ContentSuggestionsManager$ClassificationsCallback, java.util.concurrent.Executor)
    {
        android.app.contentsuggestions.ContentSuggestionsManager$ClassificationsCallbackWrapper r0;
        android.app.contentsuggestions.ContentSuggestionsManager$ClassificationsCallback r1;
        java.util.concurrent.Executor r2;

        r0 := @this: android.app.contentsuggestions.ContentSuggestionsManager$ClassificationsCallbackWrapper;

        r1 := @parameter0: android.app.contentsuggestions.ContentSuggestionsManager$ClassificationsCallback;

        r2 := @parameter1: java.util.concurrent.Executor;

        specialinvoke r0.<android.app.contentsuggestions.IClassificationsCallback$Stub: void <init>()>();

        r0.<android.app.contentsuggestions.ContentSuggestionsManager$ClassificationsCallbackWrapper: android.app.contentsuggestions.ContentSuggestionsManager$ClassificationsCallback mCallback> = r1;

        r0.<android.app.contentsuggestions.ContentSuggestionsManager$ClassificationsCallbackWrapper: java.util.concurrent.Executor mExecutor> = r2;

        return;
    }

    public void lambda$onContentClassificationsAvailable$0$ContentSuggestionsManager$ClassificationsCallbackWrapper(int, java.util.List)
    {
        android.app.contentsuggestions.ContentSuggestionsManager$ClassificationsCallbackWrapper r0;
        int i0;
        java.util.List r1;
        android.app.contentsuggestions.ContentSuggestionsManager$ClassificationsCallback $r2;

        r0 := @this: android.app.contentsuggestions.ContentSuggestionsManager$ClassificationsCallbackWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.List;

        $r2 = r0.<android.app.contentsuggestions.ContentSuggestionsManager$ClassificationsCallbackWrapper: android.app.contentsuggestions.ContentSuggestionsManager$ClassificationsCallback mCallback>;

        interfaceinvoke $r2.<android.app.contentsuggestions.ContentSuggestionsManager$ClassificationsCallback: void onContentClassificationsAvailable(int,java.util.List)>(i0, r1);

        return;
    }

    public void onContentClassificationsAvailable(int, java.util.List)
    {
        android.app.contentsuggestions.ContentSuggestionsManager$ClassificationsCallbackWrapper r0;
        int i0;
        long l1;
        java.util.concurrent.Executor r1;
        android.app.contentsuggestions._$$Lambda$ContentSuggestionsManager$ClassificationsCallbackWrapper$bS71fhWJJl2gObzWDnBMzvYmM5w r2;
        java.lang.Throwable $r3;
        java.util.List r4;

        r0 := @this: android.app.contentsuggestions.ContentSuggestionsManager$ClassificationsCallbackWrapper;

        i0 := @parameter0: int;

        r4 := @parameter1: java.util.List;

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        r1 = r0.<android.app.contentsuggestions.ContentSuggestionsManager$ClassificationsCallbackWrapper: java.util.concurrent.Executor mExecutor>;

        r2 = new android.app.contentsuggestions._$$Lambda$ContentSuggestionsManager$ClassificationsCallbackWrapper$bS71fhWJJl2gObzWDnBMzvYmM5w;

        specialinvoke r2.<android.app.contentsuggestions._$$Lambda$ContentSuggestionsManager$ClassificationsCallbackWrapper$bS71fhWJJl2gObzWDnBMzvYmM5w: void <init>(android.app.contentsuggestions.ContentSuggestionsManager$ClassificationsCallbackWrapper,int,java.util.List)>(r0, i0, r4);

        interfaceinvoke r1.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>(r2);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return;

     label3:
        $r3 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
