public final class android.app.contentsuggestions.ContentSuggestionsManager extends java.lang.Object
{
    public static final java.lang.String EXTRA_BITMAP;
    private static final int SYNC_CALLS_TIMEOUT_MS;
    private static final java.lang.String TAG;
    private final android.app.contentsuggestions.IContentSuggestionsManager mService;
    private final int mUser;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        <android.app.contentsuggestions.ContentSuggestionsManager: int SYNC_CALLS_TIMEOUT_MS> = 5000;

        <android.app.contentsuggestions.ContentSuggestionsManager: java.lang.String EXTRA_BITMAP> = "android.contentsuggestions.extra.BITMAP";

        $r0 = class "Landroid/app/contentsuggestions/ContentSuggestionsManager;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <android.app.contentsuggestions.ContentSuggestionsManager: java.lang.String TAG> = $r1;

        return;
    }

    public void <init>(int, android.app.contentsuggestions.IContentSuggestionsManager)
    {
        android.app.contentsuggestions.ContentSuggestionsManager r0;
        int i0;
        android.app.contentsuggestions.IContentSuggestionsManager r1;

        r0 := @this: android.app.contentsuggestions.ContentSuggestionsManager;

        i0 := @parameter0: int;

        r1 := @parameter1: android.app.contentsuggestions.IContentSuggestionsManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.app.contentsuggestions.ContentSuggestionsManager: android.app.contentsuggestions.IContentSuggestionsManager mService> = r1;

        r0.<android.app.contentsuggestions.ContentSuggestionsManager: int mUser> = i0;

        return;
    }

    public void classifyContentSelections(android.app.contentsuggestions.ClassificationsRequest, java.util.concurrent.Executor, android.app.contentsuggestions.ContentSuggestionsManager$ClassificationsCallback)
    {
        android.app.contentsuggestions.ContentSuggestionsManager r0;
        java.util.concurrent.Executor r1;
        android.app.contentsuggestions.ContentSuggestionsManager$ClassificationsCallback r2;
        android.app.contentsuggestions.IContentSuggestionsManager r3;
        int i0;
        android.app.contentsuggestions.ContentSuggestionsManager$ClassificationsCallbackWrapper r4;
        java.lang.String $r5;
        android.os.RemoteException $r6;
        java.lang.RuntimeException $r7;
        android.app.contentsuggestions.ClassificationsRequest r8;

        r0 := @this: android.app.contentsuggestions.ContentSuggestionsManager;

        r8 := @parameter0: android.app.contentsuggestions.ClassificationsRequest;

        r1 := @parameter1: java.util.concurrent.Executor;

        r2 := @parameter2: android.app.contentsuggestions.ContentSuggestionsManager$ClassificationsCallback;

        r3 = r0.<android.app.contentsuggestions.ContentSuggestionsManager: android.app.contentsuggestions.IContentSuggestionsManager mService>;

        if r3 != null goto label1;

        $r5 = <android.app.contentsuggestions.ContentSuggestionsManager: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r5, "classifyContentSelections called, but no ContentSuggestionsManager configured");

        return;

     label1:
        i0 = r0.<android.app.contentsuggestions.ContentSuggestionsManager: int mUser>;

        r4 = new android.app.contentsuggestions.ContentSuggestionsManager$ClassificationsCallbackWrapper;

        specialinvoke r4.<android.app.contentsuggestions.ContentSuggestionsManager$ClassificationsCallbackWrapper: void <init>(android.app.contentsuggestions.ContentSuggestionsManager$ClassificationsCallback,java.util.concurrent.Executor)>(r2, r1);

        interfaceinvoke r3.<android.app.contentsuggestions.IContentSuggestionsManager: void classifyContentSelections(int,android.app.contentsuggestions.ClassificationsRequest,android.app.contentsuggestions.IClassificationsCallback)>(i0, r8, r4);

     label2:
        return;

     label3:
        $r6 := @caughtexception;

        $r7 = virtualinvoke $r6.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r7;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isEnabled()
    {
        android.app.contentsuggestions.ContentSuggestionsManager r0;
        int i0, $i1;
        com.android.internal.util.SyncResultReceiver $r1;
        android.app.contentsuggestions.IContentSuggestionsManager $r2, r7;
        com.android.internal.util.SyncResultReceiver$TimeoutException $r3;
        java.lang.RuntimeException $r4, $r6;
        android.os.RemoteException $r5;
        boolean z0;

        r0 := @this: android.app.contentsuggestions.ContentSuggestionsManager;

        r7 = r0.<android.app.contentsuggestions.ContentSuggestionsManager: android.app.contentsuggestions.IContentSuggestionsManager mService>;

        z0 = 0;

        if r7 != null goto label1;

        return 0;

     label1:
        $r1 = new com.android.internal.util.SyncResultReceiver;

        specialinvoke $r1.<com.android.internal.util.SyncResultReceiver: void <init>(int)>(5000);

     label2:
        $r2 = r0.<android.app.contentsuggestions.ContentSuggestionsManager: android.app.contentsuggestions.IContentSuggestionsManager mService>;

        $i1 = r0.<android.app.contentsuggestions.ContentSuggestionsManager: int mUser>;

        interfaceinvoke $r2.<android.app.contentsuggestions.IContentSuggestionsManager: void isEnabled(int,com.android.internal.os.IResultReceiver)>($i1, $r1);

        i0 = virtualinvoke $r1.<com.android.internal.util.SyncResultReceiver: int getIntResult()>();

     label3:
        if i0 == 0 goto label4;

        z0 = 1;

     label4:
        return z0;

     label5:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("Fail to get the enable status.");

        throw $r4;

     label6:
        $r5 := @caughtexception;

        $r6 = virtualinvoke $r5.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r6;

        catch android.os.RemoteException from label2 to label3 with label6;
        catch com.android.internal.util.SyncResultReceiver$TimeoutException from label2 to label3 with label5;
    }

    public void notifyInteraction(java.lang.String, android.os.Bundle)
    {
        android.app.contentsuggestions.ContentSuggestionsManager r0;
        android.os.Bundle r1;
        android.app.contentsuggestions.IContentSuggestionsManager r2;
        int $i0;
        java.lang.String $r3, r6;
        android.os.RemoteException $r4;
        java.lang.RuntimeException $r5;

        r0 := @this: android.app.contentsuggestions.ContentSuggestionsManager;

        r6 := @parameter0: java.lang.String;

        r1 := @parameter1: android.os.Bundle;

        r2 = r0.<android.app.contentsuggestions.ContentSuggestionsManager: android.app.contentsuggestions.IContentSuggestionsManager mService>;

        if r2 != null goto label1;

        $r3 = <android.app.contentsuggestions.ContentSuggestionsManager: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r3, "notifyInteraction called, but no ContentSuggestionsManager configured");

        return;

     label1:
        $i0 = r0.<android.app.contentsuggestions.ContentSuggestionsManager: int mUser>;

        interfaceinvoke r2.<android.app.contentsuggestions.IContentSuggestionsManager: void notifyInteraction(int,java.lang.String,android.os.Bundle)>($i0, r6, r1);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        $r5 = virtualinvoke $r4.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void provideContextImage(int, android.os.Bundle)
    {
        android.app.contentsuggestions.ContentSuggestionsManager r0;
        int i0, $i1;
        android.app.contentsuggestions.IContentSuggestionsManager r1;
        java.lang.String $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;
        android.os.Bundle r5;

        r0 := @this: android.app.contentsuggestions.ContentSuggestionsManager;

        i0 := @parameter0: int;

        r5 := @parameter1: android.os.Bundle;

        r1 = r0.<android.app.contentsuggestions.ContentSuggestionsManager: android.app.contentsuggestions.IContentSuggestionsManager mService>;

        if r1 != null goto label1;

        $r2 = <android.app.contentsuggestions.ContentSuggestionsManager: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r2, "provideContextImage called, but no ContentSuggestionsManager configured");

        return;

     label1:
        $i1 = r0.<android.app.contentsuggestions.ContentSuggestionsManager: int mUser>;

        interfaceinvoke r1.<android.app.contentsuggestions.IContentSuggestionsManager: void provideContextImage(int,int,android.os.Bundle)>($i1, i0, r5);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void provideContextImage(android.graphics.Bitmap, android.os.Bundle)
    {
        android.app.contentsuggestions.ContentSuggestionsManager r0;
        android.os.Bundle r1;
        android.app.contentsuggestions.IContentSuggestionsManager r2;
        int $i0;
        java.lang.String $r3;
        android.os.RemoteException $r4;
        java.lang.RuntimeException $r5;
        android.graphics.Bitmap r6;

        r0 := @this: android.app.contentsuggestions.ContentSuggestionsManager;

        r6 := @parameter0: android.graphics.Bitmap;

        r1 := @parameter1: android.os.Bundle;

        r2 = r0.<android.app.contentsuggestions.ContentSuggestionsManager: android.app.contentsuggestions.IContentSuggestionsManager mService>;

        if r2 != null goto label1;

        $r3 = <android.app.contentsuggestions.ContentSuggestionsManager: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r3, "provideContextImage called, but no ContentSuggestionsManager configured");

        return;

     label1:
        $i0 = r0.<android.app.contentsuggestions.ContentSuggestionsManager: int mUser>;

        interfaceinvoke r2.<android.app.contentsuggestions.IContentSuggestionsManager: void provideContextBitmap(int,android.graphics.Bitmap,android.os.Bundle)>($i0, r6, r1);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        $r5 = virtualinvoke $r4.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void suggestContentSelections(android.app.contentsuggestions.SelectionsRequest, java.util.concurrent.Executor, android.app.contentsuggestions.ContentSuggestionsManager$SelectionsCallback)
    {
        android.app.contentsuggestions.ContentSuggestionsManager r0;
        java.util.concurrent.Executor r1;
        android.app.contentsuggestions.ContentSuggestionsManager$SelectionsCallback r2;
        android.app.contentsuggestions.IContentSuggestionsManager r3;
        int i0;
        android.app.contentsuggestions.ContentSuggestionsManager$SelectionsCallbackWrapper r4;
        java.lang.String $r5;
        android.os.RemoteException $r6;
        java.lang.RuntimeException $r7;
        android.app.contentsuggestions.SelectionsRequest r8;

        r0 := @this: android.app.contentsuggestions.ContentSuggestionsManager;

        r8 := @parameter0: android.app.contentsuggestions.SelectionsRequest;

        r1 := @parameter1: java.util.concurrent.Executor;

        r2 := @parameter2: android.app.contentsuggestions.ContentSuggestionsManager$SelectionsCallback;

        r3 = r0.<android.app.contentsuggestions.ContentSuggestionsManager: android.app.contentsuggestions.IContentSuggestionsManager mService>;

        if r3 != null goto label1;

        $r5 = <android.app.contentsuggestions.ContentSuggestionsManager: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r5, "suggestContentSelections called, but no ContentSuggestionsManager configured");

        return;

     label1:
        i0 = r0.<android.app.contentsuggestions.ContentSuggestionsManager: int mUser>;

        r4 = new android.app.contentsuggestions.ContentSuggestionsManager$SelectionsCallbackWrapper;

        specialinvoke r4.<android.app.contentsuggestions.ContentSuggestionsManager$SelectionsCallbackWrapper: void <init>(android.app.contentsuggestions.ContentSuggestionsManager$SelectionsCallback,java.util.concurrent.Executor)>(r2, r1);

        interfaceinvoke r3.<android.app.contentsuggestions.IContentSuggestionsManager: void suggestContentSelections(int,android.app.contentsuggestions.SelectionsRequest,android.app.contentsuggestions.ISelectionsCallback)>(i0, r8, r4);

     label2:
        return;

     label3:
        $r6 := @caughtexception;

        $r7 = virtualinvoke $r6.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r7;

        catch android.os.RemoteException from label1 to label2 with label3;
    }
}
