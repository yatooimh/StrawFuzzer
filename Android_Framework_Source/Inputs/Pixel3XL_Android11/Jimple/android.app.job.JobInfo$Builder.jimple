public final class android.app.job.JobInfo$Builder extends java.lang.Object
{
    private int mBackoffPolicy;
    private boolean mBackoffPolicySet;
    private android.content.ClipData mClipData;
    private int mClipGrantFlags;
    private int mConstraintFlags;
    private android.os.PersistableBundle mExtras;
    private int mFlags;
    private long mFlexMillis;
    private boolean mHasEarlyConstraint;
    private boolean mHasLateConstraint;
    private long mInitialBackoffMillis;
    private long mIntervalMillis;
    private boolean mIsPeriodic;
    private boolean mIsPersisted;
    private final int mJobId;
    private final android.content.ComponentName mJobService;
    private long mMaxExecutionDelayMillis;
    private long mMinLatencyMillis;
    private long mNetworkDownloadBytes;
    private android.net.NetworkRequest mNetworkRequest;
    private long mNetworkUploadBytes;
    private int mPriority;
    private android.os.Bundle mTransientExtras;
    private long mTriggerContentMaxDelay;
    private long mTriggerContentUpdateDelay;
    private java.util.ArrayList mTriggerContentUris;

    public void <init>(int, android.content.ComponentName)
    {
        android.app.job.JobInfo$Builder r0;
        int i0;
        android.content.ComponentName r1;
        android.os.PersistableBundle $r2;
        android.os.Bundle $r3;

        r0 := @this: android.app.job.JobInfo$Builder;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.ComponentName;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = <android.os.PersistableBundle: android.os.PersistableBundle EMPTY>;

        r0.<android.app.job.JobInfo$Builder: android.os.PersistableBundle mExtras> = $r2;

        $r3 = <android.os.Bundle: android.os.Bundle EMPTY>;

        r0.<android.app.job.JobInfo$Builder: android.os.Bundle mTransientExtras> = $r3;

        r0.<android.app.job.JobInfo$Builder: int mPriority> = 0;

        r0.<android.app.job.JobInfo$Builder: long mNetworkDownloadBytes> = -1L;

        r0.<android.app.job.JobInfo$Builder: long mNetworkUploadBytes> = -1L;

        r0.<android.app.job.JobInfo$Builder: long mTriggerContentUpdateDelay> = -1L;

        r0.<android.app.job.JobInfo$Builder: long mTriggerContentMaxDelay> = -1L;

        r0.<android.app.job.JobInfo$Builder: long mInitialBackoffMillis> = 30000L;

        r0.<android.app.job.JobInfo$Builder: int mBackoffPolicy> = 1;

        r0.<android.app.job.JobInfo$Builder: boolean mBackoffPolicySet> = 0;

        r0.<android.app.job.JobInfo$Builder: android.content.ComponentName mJobService> = r1;

        r0.<android.app.job.JobInfo$Builder: int mJobId> = i0;

        return;
    }

    static int access$000(android.app.job.JobInfo$Builder)
    {
        android.app.job.JobInfo$Builder r0;
        int $i0;

        r0 := @parameter0: android.app.job.JobInfo$Builder;

        $i0 = r0.<android.app.job.JobInfo$Builder: int mJobId>;

        return $i0;
    }

    static android.os.PersistableBundle access$100(android.app.job.JobInfo$Builder)
    {
        android.app.job.JobInfo$Builder r0;
        android.os.PersistableBundle $r1;

        r0 := @parameter0: android.app.job.JobInfo$Builder;

        $r1 = r0.<android.app.job.JobInfo$Builder: android.os.PersistableBundle mExtras>;

        return $r1;
    }

    static android.net.NetworkRequest access$1000(android.app.job.JobInfo$Builder)
    {
        android.app.job.JobInfo$Builder r0;
        android.net.NetworkRequest $r1;

        r0 := @parameter0: android.app.job.JobInfo$Builder;

        $r1 = r0.<android.app.job.JobInfo$Builder: android.net.NetworkRequest mNetworkRequest>;

        return $r1;
    }

    static long access$1100(android.app.job.JobInfo$Builder)
    {
        android.app.job.JobInfo$Builder r0;
        long $l0;

        r0 := @parameter0: android.app.job.JobInfo$Builder;

        $l0 = r0.<android.app.job.JobInfo$Builder: long mNetworkDownloadBytes>;

        return $l0;
    }

    static long access$1200(android.app.job.JobInfo$Builder)
    {
        android.app.job.JobInfo$Builder r0;
        long $l0;

        r0 := @parameter0: android.app.job.JobInfo$Builder;

        $l0 = r0.<android.app.job.JobInfo$Builder: long mNetworkUploadBytes>;

        return $l0;
    }

    static long access$1300(android.app.job.JobInfo$Builder)
    {
        android.app.job.JobInfo$Builder r0;
        long $l0;

        r0 := @parameter0: android.app.job.JobInfo$Builder;

        $l0 = r0.<android.app.job.JobInfo$Builder: long mMinLatencyMillis>;

        return $l0;
    }

    static long access$1400(android.app.job.JobInfo$Builder)
    {
        android.app.job.JobInfo$Builder r0;
        long $l0;

        r0 := @parameter0: android.app.job.JobInfo$Builder;

        $l0 = r0.<android.app.job.JobInfo$Builder: long mMaxExecutionDelayMillis>;

        return $l0;
    }

    static boolean access$1500(android.app.job.JobInfo$Builder)
    {
        android.app.job.JobInfo$Builder r0;
        boolean $z0;

        r0 := @parameter0: android.app.job.JobInfo$Builder;

        $z0 = r0.<android.app.job.JobInfo$Builder: boolean mIsPeriodic>;

        return $z0;
    }

    static boolean access$1600(android.app.job.JobInfo$Builder)
    {
        android.app.job.JobInfo$Builder r0;
        boolean $z0;

        r0 := @parameter0: android.app.job.JobInfo$Builder;

        $z0 = r0.<android.app.job.JobInfo$Builder: boolean mIsPersisted>;

        return $z0;
    }

    static long access$1700(android.app.job.JobInfo$Builder)
    {
        android.app.job.JobInfo$Builder r0;
        long $l0;

        r0 := @parameter0: android.app.job.JobInfo$Builder;

        $l0 = r0.<android.app.job.JobInfo$Builder: long mIntervalMillis>;

        return $l0;
    }

    static long access$1800(android.app.job.JobInfo$Builder)
    {
        android.app.job.JobInfo$Builder r0;
        long $l0;

        r0 := @parameter0: android.app.job.JobInfo$Builder;

        $l0 = r0.<android.app.job.JobInfo$Builder: long mFlexMillis>;

        return $l0;
    }

    static long access$1900(android.app.job.JobInfo$Builder)
    {
        android.app.job.JobInfo$Builder r0;
        long $l0;

        r0 := @parameter0: android.app.job.JobInfo$Builder;

        $l0 = r0.<android.app.job.JobInfo$Builder: long mInitialBackoffMillis>;

        return $l0;
    }

    static android.os.Bundle access$200(android.app.job.JobInfo$Builder)
    {
        android.app.job.JobInfo$Builder r0;
        android.os.Bundle $r1;

        r0 := @parameter0: android.app.job.JobInfo$Builder;

        $r1 = r0.<android.app.job.JobInfo$Builder: android.os.Bundle mTransientExtras>;

        return $r1;
    }

    static int access$2000(android.app.job.JobInfo$Builder)
    {
        android.app.job.JobInfo$Builder r0;
        int $i0;

        r0 := @parameter0: android.app.job.JobInfo$Builder;

        $i0 = r0.<android.app.job.JobInfo$Builder: int mBackoffPolicy>;

        return $i0;
    }

    static boolean access$2100(android.app.job.JobInfo$Builder)
    {
        android.app.job.JobInfo$Builder r0;
        boolean $z0;

        r0 := @parameter0: android.app.job.JobInfo$Builder;

        $z0 = r0.<android.app.job.JobInfo$Builder: boolean mHasEarlyConstraint>;

        return $z0;
    }

    static boolean access$2200(android.app.job.JobInfo$Builder)
    {
        android.app.job.JobInfo$Builder r0;
        boolean $z0;

        r0 := @parameter0: android.app.job.JobInfo$Builder;

        $z0 = r0.<android.app.job.JobInfo$Builder: boolean mHasLateConstraint>;

        return $z0;
    }

    static int access$2300(android.app.job.JobInfo$Builder)
    {
        android.app.job.JobInfo$Builder r0;
        int $i0;

        r0 := @parameter0: android.app.job.JobInfo$Builder;

        $i0 = r0.<android.app.job.JobInfo$Builder: int mPriority>;

        return $i0;
    }

    static int access$2400(android.app.job.JobInfo$Builder)
    {
        android.app.job.JobInfo$Builder r0;
        int $i0;

        r0 := @parameter0: android.app.job.JobInfo$Builder;

        $i0 = r0.<android.app.job.JobInfo$Builder: int mFlags>;

        return $i0;
    }

    static android.content.ClipData access$300(android.app.job.JobInfo$Builder)
    {
        android.app.job.JobInfo$Builder r0;
        android.content.ClipData $r1;

        r0 := @parameter0: android.app.job.JobInfo$Builder;

        $r1 = r0.<android.app.job.JobInfo$Builder: android.content.ClipData mClipData>;

        return $r1;
    }

    static int access$400(android.app.job.JobInfo$Builder)
    {
        android.app.job.JobInfo$Builder r0;
        int $i0;

        r0 := @parameter0: android.app.job.JobInfo$Builder;

        $i0 = r0.<android.app.job.JobInfo$Builder: int mClipGrantFlags>;

        return $i0;
    }

    static android.content.ComponentName access$500(android.app.job.JobInfo$Builder)
    {
        android.app.job.JobInfo$Builder r0;
        android.content.ComponentName $r1;

        r0 := @parameter0: android.app.job.JobInfo$Builder;

        $r1 = r0.<android.app.job.JobInfo$Builder: android.content.ComponentName mJobService>;

        return $r1;
    }

    static int access$600(android.app.job.JobInfo$Builder)
    {
        android.app.job.JobInfo$Builder r0;
        int $i0;

        r0 := @parameter0: android.app.job.JobInfo$Builder;

        $i0 = r0.<android.app.job.JobInfo$Builder: int mConstraintFlags>;

        return $i0;
    }

    static java.util.ArrayList access$700(android.app.job.JobInfo$Builder)
    {
        android.app.job.JobInfo$Builder r0;
        java.util.ArrayList $r1;

        r0 := @parameter0: android.app.job.JobInfo$Builder;

        $r1 = r0.<android.app.job.JobInfo$Builder: java.util.ArrayList mTriggerContentUris>;

        return $r1;
    }

    static long access$800(android.app.job.JobInfo$Builder)
    {
        android.app.job.JobInfo$Builder r0;
        long $l0;

        r0 := @parameter0: android.app.job.JobInfo$Builder;

        $l0 = r0.<android.app.job.JobInfo$Builder: long mTriggerContentUpdateDelay>;

        return $l0;
    }

    static long access$900(android.app.job.JobInfo$Builder)
    {
        android.app.job.JobInfo$Builder r0;
        long $l0;

        r0 := @parameter0: android.app.job.JobInfo$Builder;

        $l0 = r0.<android.app.job.JobInfo$Builder: long mTriggerContentMaxDelay>;

        return $l0;
    }

    public android.app.job.JobInfo$Builder addTriggerContentUri(android.app.job.JobInfo$TriggerContentUri)
    {
        android.app.job.JobInfo$Builder r0;
        android.app.job.JobInfo$TriggerContentUri r1;
        java.util.ArrayList $r2, $r3, $r4;

        r0 := @this: android.app.job.JobInfo$Builder;

        r1 := @parameter0: android.app.job.JobInfo$TriggerContentUri;

        $r2 = r0.<android.app.job.JobInfo$Builder: java.util.ArrayList mTriggerContentUris>;

        if $r2 != null goto label1;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<android.app.job.JobInfo$Builder: java.util.ArrayList mTriggerContentUris> = $r4;

     label1:
        $r3 = r0.<android.app.job.JobInfo$Builder: java.util.ArrayList mTriggerContentUris>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        return r0;
    }

    public android.app.job.JobInfo build()
    {
        android.app.job.JobInfo$Builder r0;
        android.net.NetworkRequest r1, $r2;
        long $l0, $l6, $l8, $l10;
        byte $b1, $b7, $b9, $b11;
        java.lang.IllegalArgumentException $r3, $r5, $r6, $r8, $r10, $r12, $r13, $r14, $r16, $r19;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        int $i2, $i3, $i4, $i5;
        android.app.job.JobInfo $r4;
        java.util.ArrayList $r7, $r15;
        android.os.Bundle $r9;
        android.content.ClipData $r11;
        android.net.NetworkCapabilities $r17;
        android.net.NetworkSpecifier $r18;

        r0 := @this: android.app.job.JobInfo$Builder;

        $l0 = r0.<android.app.job.JobInfo$Builder: long mNetworkDownloadBytes>;

        $b1 = $l0 cmp 0L;

        if $b1 > 0 goto label01;

        $l10 = r0.<android.app.job.JobInfo$Builder: long mNetworkUploadBytes>;

        $b11 = $l10 cmp 0L;

        if $b11 <= 0 goto label02;

     label01:
        $r2 = r0.<android.app.job.JobInfo$Builder: android.net.NetworkRequest mNetworkRequest>;

        if $r2 == null goto label17;

     label02:
        $z0 = r0.<android.app.job.JobInfo$Builder: boolean mIsPersisted>;

        if $z0 == 0 goto label04;

        r1 = r0.<android.app.job.JobInfo$Builder: android.net.NetworkRequest mNetworkRequest>;

        if r1 == null goto label04;

        $r17 = r1.<android.net.NetworkRequest: android.net.NetworkCapabilities networkCapabilities>;

        $r18 = virtualinvoke $r17.<android.net.NetworkCapabilities: android.net.NetworkSpecifier getNetworkSpecifier()>();

        if $r18 != null goto label03;

        goto label04;

     label03:
        $r19 = new java.lang.IllegalArgumentException;

        specialinvoke $r19.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Network specifiers aren\'t supported for persistent jobs");

        throw $r19;

     label04:
        $z5 = r0.<android.app.job.JobInfo$Builder: boolean mIsPeriodic>;

        if $z5 == 0 goto label08;

        $l6 = r0.<android.app.job.JobInfo$Builder: long mMaxExecutionDelayMillis>;

        $b7 = $l6 cmp 0L;

        if $b7 != 0 goto label07;

        $l8 = r0.<android.app.job.JobInfo$Builder: long mMinLatencyMillis>;

        $b9 = $l8 cmp 0L;

        if $b9 != 0 goto label06;

        $r15 = r0.<android.app.job.JobInfo$Builder: java.util.ArrayList mTriggerContentUris>;

        if $r15 != null goto label05;

        goto label08;

     label05:
        $r16 = new java.lang.IllegalArgumentException;

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t call addTriggerContentUri() on a periodic job");

        throw $r16;

     label06:
        $r14 = new java.lang.IllegalArgumentException;

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t call setMinimumLatency() on a periodic job");

        throw $r14;

     label07:
        $r13 = new java.lang.IllegalArgumentException;

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t call setOverrideDeadline() on a periodic job.");

        throw $r13;

     label08:
        $z1 = r0.<android.app.job.JobInfo$Builder: boolean mIsPersisted>;

        if $z1 == 0 goto label12;

        $r7 = r0.<android.app.job.JobInfo$Builder: java.util.ArrayList mTriggerContentUris>;

        if $r7 != null goto label11;

        $r9 = r0.<android.app.job.JobInfo$Builder: android.os.Bundle mTransientExtras>;

        $z4 = virtualinvoke $r9.<android.os.Bundle: boolean isEmpty()>();

        if $z4 == 0 goto label10;

        $r11 = r0.<android.app.job.JobInfo$Builder: android.content.ClipData mClipData>;

        if $r11 != null goto label09;

        goto label12;

     label09:
        $r12 = new java.lang.IllegalArgumentException;

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t call setClipData() on a persisted job");

        throw $r12;

     label10:
        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t call setTransientExtras() on a persisted job");

        throw $r10;

     label11:
        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t call addTriggerContentUri() on a persisted job");

        throw $r8;

     label12:
        $i2 = r0.<android.app.job.JobInfo$Builder: int mFlags>;

        $i3 = $i2 & 2;

        if $i3 == 0 goto label14;

        $z3 = r0.<android.app.job.JobInfo$Builder: boolean mHasEarlyConstraint>;

        if $z3 != 0 goto label13;

        goto label14;

     label13:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("An important while foreground job cannot have a time delay");

        throw $r6;

     label14:
        $z2 = r0.<android.app.job.JobInfo$Builder: boolean mBackoffPolicySet>;

        if $z2 == 0 goto label16;

        $i4 = r0.<android.app.job.JobInfo$Builder: int mConstraintFlags>;

        $i5 = $i4 & 4;

        if $i5 != 0 goto label15;

        goto label16;

     label15:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("An idle mode job will not respect any back-off policy, so calling setBackoffCriteria with setRequiresDeviceIdle is an error.");

        throw $r5;

     label16:
        $r4 = new android.app.job.JobInfo;

        specialinvoke $r4.<android.app.job.JobInfo: void <init>(android.app.job.JobInfo$Builder,android.app.job.JobInfo$1)>(r0, null);

        return $r4;

     label17:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t provide estimated network usage without requiring a network");

        throw $r3;
    }

    public android.app.job.JobInfo$Builder setBackoffCriteria(long, int)
    {
        android.app.job.JobInfo$Builder r0;
        long l0, l2, l6;
        int i1, $i4;
        java.lang.String r1, $r5, $r10, $r12;
        byte $b3;
        java.lang.StringBuilder $r3;

        r0 := @this: android.app.job.JobInfo$Builder;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        l2 = staticinvoke <android.app.job.JobInfo: long getMinBackoffMillis()>();

        l6 = l0;

        $b3 = l0 cmp l2;

        if $b3 >= 0 goto label1;

        r1 = staticinvoke <android.app.job.JobInfo: java.lang.String access$2700()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested backoff ");

        $r5 = staticinvoke <android.util.TimeUtils: java.lang.String formatDuration(long)>(l0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for job ");

        $i4 = r0.<android.app.job.JobInfo$Builder: int mJobId>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is too small; raising to ");

        $r10 = staticinvoke <android.util.TimeUtils: java.lang.String formatDuration(long)>(l2);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>(r1, $r12);

        l6 = l2;

     label1:
        r0.<android.app.job.JobInfo$Builder: boolean mBackoffPolicySet> = 1;

        r0.<android.app.job.JobInfo$Builder: long mInitialBackoffMillis> = l6;

        r0.<android.app.job.JobInfo$Builder: int mBackoffPolicy> = i1;

        return r0;
    }

    public android.app.job.JobInfo$Builder setClipData(android.content.ClipData, int)
    {
        android.app.job.JobInfo$Builder r0;
        android.content.ClipData r1;
        int i0;

        r0 := @this: android.app.job.JobInfo$Builder;

        r1 := @parameter0: android.content.ClipData;

        i0 := @parameter1: int;

        r0.<android.app.job.JobInfo$Builder: android.content.ClipData mClipData> = r1;

        r0.<android.app.job.JobInfo$Builder: int mClipGrantFlags> = i0;

        return r0;
    }

    public android.app.job.JobInfo$Builder setEstimatedNetworkBytes(long, long)
    {
        android.app.job.JobInfo$Builder r0;
        long l0, l1;

        r0 := @this: android.app.job.JobInfo$Builder;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        r0.<android.app.job.JobInfo$Builder: long mNetworkDownloadBytes> = l0;

        r0.<android.app.job.JobInfo$Builder: long mNetworkUploadBytes> = l1;

        return r0;
    }

    public android.app.job.JobInfo$Builder setExtras(android.os.PersistableBundle)
    {
        android.app.job.JobInfo$Builder r0;
        android.os.PersistableBundle r1;

        r0 := @this: android.app.job.JobInfo$Builder;

        r1 := @parameter0: android.os.PersistableBundle;

        r0.<android.app.job.JobInfo$Builder: android.os.PersistableBundle mExtras> = r1;

        return r0;
    }

    public android.app.job.JobInfo$Builder setFlags(int)
    {
        android.app.job.JobInfo$Builder r0;
        int i0;

        r0 := @this: android.app.job.JobInfo$Builder;

        i0 := @parameter0: int;

        r0.<android.app.job.JobInfo$Builder: int mFlags> = i0;

        return r0;
    }

    public android.app.job.JobInfo$Builder setImportantWhileForeground(boolean)
    {
        android.app.job.JobInfo$Builder r0;
        boolean z0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.app.job.JobInfo$Builder;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $i2 = r0.<android.app.job.JobInfo$Builder: int mFlags>;

        $i3 = $i2 | 2;

        r0.<android.app.job.JobInfo$Builder: int mFlags> = $i3;

        goto label2;

     label1:
        $i0 = r0.<android.app.job.JobInfo$Builder: int mFlags>;

        $i1 = $i0 & -3;

        r0.<android.app.job.JobInfo$Builder: int mFlags> = $i1;

     label2:
        return r0;
    }

    public android.app.job.JobInfo$Builder setMinimumLatency(long)
    {
        android.app.job.JobInfo$Builder r0;
        long l0;

        r0 := @this: android.app.job.JobInfo$Builder;

        l0 := @parameter0: long;

        r0.<android.app.job.JobInfo$Builder: long mMinLatencyMillis> = l0;

        r0.<android.app.job.JobInfo$Builder: boolean mHasEarlyConstraint> = 1;

        return r0;
    }

    public android.app.job.JobInfo$Builder setOverrideDeadline(long)
    {
        android.app.job.JobInfo$Builder r0;
        long l0;

        r0 := @this: android.app.job.JobInfo$Builder;

        l0 := @parameter0: long;

        r0.<android.app.job.JobInfo$Builder: long mMaxExecutionDelayMillis> = l0;

        r0.<android.app.job.JobInfo$Builder: boolean mHasLateConstraint> = 1;

        return r0;
    }

    public android.app.job.JobInfo$Builder setPeriodic(long)
    {
        android.app.job.JobInfo$Builder r0, $r1;
        long l0;

        r0 := @this: android.app.job.JobInfo$Builder;

        l0 := @parameter0: long;

        $r1 = virtualinvoke r0.<android.app.job.JobInfo$Builder: android.app.job.JobInfo$Builder setPeriodic(long,long)>(l0, l0);

        return $r1;
    }

    public android.app.job.JobInfo$Builder setPeriodic(long, long)
    {
        android.app.job.JobInfo$Builder r0;
        long l0, $l2, $l3, $l4, l10, l11, l12, l13, l14;
        byte $b1, $b5;
        java.lang.StringBuilder $r1, $r11;
        java.lang.String $r3, $r8, $r10, $r13, $r18, $r20, r21, r23;
        int $i6, $i8;

        r0 := @this: android.app.job.JobInfo$Builder;

        l10 := @parameter0: long;

        l0 := @parameter1: long;

        l11 = staticinvoke <android.app.job.JobInfo: long getMinPeriodMillis()>();

        l12 = l10;

        $b1 = l10 cmp l11;

        if $b1 >= 0 goto label1;

        r21 = staticinvoke <android.app.job.JobInfo: java.lang.String access$2700()>();

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested interval ");

        $r13 = staticinvoke <android.util.TimeUtils: java.lang.String formatDuration(long)>(l10);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for job ");

        $i8 = r0.<android.app.job.JobInfo$Builder: int mJobId>;

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is too small; raising to ");

        $r18 = staticinvoke <android.util.TimeUtils: java.lang.String formatDuration(long)>(l11);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>(r21, $r20);

        l12 = l11;

     label1:
        $l2 = 5L * l12;

        $l3 = $l2 / 100L;

        $l4 = staticinvoke <android.app.job.JobInfo: long getMinFlexMillis()>();

        l13 = staticinvoke <java.lang.Math: long max(long,long)>($l3, $l4);

        l14 = l0;

        $b5 = l0 cmp l13;

        if $b5 >= 0 goto label2;

        r23 = staticinvoke <android.app.job.JobInfo: java.lang.String access$2700()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested flex ");

        $r3 = staticinvoke <android.util.TimeUtils: java.lang.String formatDuration(long)>(l0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for job ");

        $i6 = r0.<android.app.job.JobInfo$Builder: int mJobId>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is too small; raising to ");

        $r8 = staticinvoke <android.util.TimeUtils: java.lang.String formatDuration(long)>(l13);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>(r23, $r10);

        l14 = l13;

     label2:
        r0.<android.app.job.JobInfo$Builder: boolean mIsPeriodic> = 1;

        r0.<android.app.job.JobInfo$Builder: long mIntervalMillis> = l12;

        r0.<android.app.job.JobInfo$Builder: long mFlexMillis> = l14;

        r0.<android.app.job.JobInfo$Builder: boolean mHasLateConstraint> = 1;

        r0.<android.app.job.JobInfo$Builder: boolean mHasEarlyConstraint> = 1;

        return r0;
    }

    public android.app.job.JobInfo$Builder setPersisted(boolean)
    {
        android.app.job.JobInfo$Builder r0;
        boolean z0;

        r0 := @this: android.app.job.JobInfo$Builder;

        z0 := @parameter0: boolean;

        r0.<android.app.job.JobInfo$Builder: boolean mIsPersisted> = z0;

        return r0;
    }

    public android.app.job.JobInfo$Builder setPrefetch(boolean)
    {
        android.app.job.JobInfo$Builder r0;
        boolean z0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.app.job.JobInfo$Builder;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $i2 = r0.<android.app.job.JobInfo$Builder: int mFlags>;

        $i3 = $i2 | 4;

        r0.<android.app.job.JobInfo$Builder: int mFlags> = $i3;

        goto label2;

     label1:
        $i0 = r0.<android.app.job.JobInfo$Builder: int mFlags>;

        $i1 = $i0 & -5;

        r0.<android.app.job.JobInfo$Builder: int mFlags> = $i1;

     label2:
        return r0;
    }

    public android.app.job.JobInfo$Builder setPriority(int)
    {
        android.app.job.JobInfo$Builder r0;
        int i0;

        r0 := @this: android.app.job.JobInfo$Builder;

        i0 := @parameter0: int;

        r0.<android.app.job.JobInfo$Builder: int mPriority> = i0;

        return r0;
    }

    public android.app.job.JobInfo$Builder setRequiredNetwork(android.net.NetworkRequest)
    {
        android.app.job.JobInfo$Builder r0;
        android.net.NetworkRequest r1;

        r0 := @this: android.app.job.JobInfo$Builder;

        r1 := @parameter0: android.net.NetworkRequest;

        r0.<android.app.job.JobInfo$Builder: android.net.NetworkRequest mNetworkRequest> = r1;

        return r0;
    }

    public android.app.job.JobInfo$Builder setRequiredNetworkType(int)
    {
        android.app.job.JobInfo$Builder r0, $r9, $r11;
        int i0;
        android.net.NetworkRequest$Builder $r2;
        android.net.NetworkRequest $r10;

        r0 := @this: android.app.job.JobInfo$Builder;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;

        $r9 = virtualinvoke r0.<android.app.job.JobInfo$Builder: android.app.job.JobInfo$Builder setRequiredNetwork(android.net.NetworkRequest)>(null);

        return $r9;

     label1:
        $r2 = new android.net.NetworkRequest$Builder;

        specialinvoke $r2.<android.net.NetworkRequest$Builder: void <init>()>();

        virtualinvoke $r2.<android.net.NetworkRequest$Builder: android.net.NetworkRequest$Builder addCapability(int)>(12);

        virtualinvoke $r2.<android.net.NetworkRequest$Builder: android.net.NetworkRequest$Builder addCapability(int)>(16);

        virtualinvoke $r2.<android.net.NetworkRequest$Builder: android.net.NetworkRequest$Builder removeCapability(int)>(15);

        if i0 != 1 goto label2;

        goto label5;

     label2:
        if i0 != 2 goto label3;

        virtualinvoke $r2.<android.net.NetworkRequest$Builder: android.net.NetworkRequest$Builder addCapability(int)>(11);

        goto label5;

     label3:
        if i0 != 3 goto label4;

        virtualinvoke $r2.<android.net.NetworkRequest$Builder: android.net.NetworkRequest$Builder addCapability(int)>(18);

        goto label5;

     label4:
        if i0 != 4 goto label5;

        virtualinvoke $r2.<android.net.NetworkRequest$Builder: android.net.NetworkRequest$Builder addTransportType(int)>(0);

     label5:
        $r10 = virtualinvoke $r2.<android.net.NetworkRequest$Builder: android.net.NetworkRequest build()>();

        $r11 = virtualinvoke r0.<android.app.job.JobInfo$Builder: android.app.job.JobInfo$Builder setRequiredNetwork(android.net.NetworkRequest)>($r10);

        return $r11;
    }

    public android.app.job.JobInfo$Builder setRequiresBatteryNotLow(boolean)
    {
        android.app.job.JobInfo$Builder r0;
        boolean z0;
        int i0, $i1, $i2;
        byte b3;

        r0 := @this: android.app.job.JobInfo$Builder;

        z0 := @parameter0: boolean;

        i0 = r0.<android.app.job.JobInfo$Builder: int mConstraintFlags>;

        if z0 == 0 goto label1;

        b3 = 2;

        goto label2;

     label1:
        b3 = 0;

     label2:
        $i1 = i0 & -3;

        $i2 = $i1 | b3;

        r0.<android.app.job.JobInfo$Builder: int mConstraintFlags> = $i2;

        return r0;
    }

    public android.app.job.JobInfo$Builder setRequiresCharging(boolean)
    {
        android.app.job.JobInfo$Builder r0;
        boolean z0;
        int $i0, $i1, $i2, i3;

        r0 := @this: android.app.job.JobInfo$Builder;

        z0 := @parameter0: boolean;

        $i0 = r0.<android.app.job.JobInfo$Builder: int mConstraintFlags>;

        $i1 = $i0 & -2;

        i3 = (int) z0;

        $i2 = $i1 | i3;

        r0.<android.app.job.JobInfo$Builder: int mConstraintFlags> = $i2;

        return r0;
    }

    public android.app.job.JobInfo$Builder setRequiresDeviceIdle(boolean)
    {
        android.app.job.JobInfo$Builder r0;
        boolean z0;
        int i0, $i1, $i2;
        byte b3;

        r0 := @this: android.app.job.JobInfo$Builder;

        z0 := @parameter0: boolean;

        i0 = r0.<android.app.job.JobInfo$Builder: int mConstraintFlags>;

        if z0 == 0 goto label1;

        b3 = 4;

        goto label2;

     label1:
        b3 = 0;

     label2:
        $i1 = i0 & -5;

        $i2 = $i1 | b3;

        r0.<android.app.job.JobInfo$Builder: int mConstraintFlags> = $i2;

        return r0;
    }

    public android.app.job.JobInfo$Builder setRequiresStorageNotLow(boolean)
    {
        android.app.job.JobInfo$Builder r0;
        boolean z0;
        int i0, $i1, $i2;
        byte b3;

        r0 := @this: android.app.job.JobInfo$Builder;

        z0 := @parameter0: boolean;

        i0 = r0.<android.app.job.JobInfo$Builder: int mConstraintFlags>;

        if z0 == 0 goto label1;

        b3 = 8;

        goto label2;

     label1:
        b3 = 0;

     label2:
        $i1 = i0 & -9;

        $i2 = $i1 | b3;

        r0.<android.app.job.JobInfo$Builder: int mConstraintFlags> = $i2;

        return r0;
    }

    public android.app.job.JobInfo$Builder setTransientExtras(android.os.Bundle)
    {
        android.app.job.JobInfo$Builder r0;
        android.os.Bundle r1;

        r0 := @this: android.app.job.JobInfo$Builder;

        r1 := @parameter0: android.os.Bundle;

        r0.<android.app.job.JobInfo$Builder: android.os.Bundle mTransientExtras> = r1;

        return r0;
    }

    public android.app.job.JobInfo$Builder setTriggerContentMaxDelay(long)
    {
        android.app.job.JobInfo$Builder r0;
        long l0;

        r0 := @this: android.app.job.JobInfo$Builder;

        l0 := @parameter0: long;

        r0.<android.app.job.JobInfo$Builder: long mTriggerContentMaxDelay> = l0;

        return r0;
    }

    public android.app.job.JobInfo$Builder setTriggerContentUpdateDelay(long)
    {
        android.app.job.JobInfo$Builder r0;
        long l0;

        r0 := @this: android.app.job.JobInfo$Builder;

        l0 := @parameter0: long;

        r0.<android.app.job.JobInfo$Builder: long mTriggerContentUpdateDelay> = l0;

        return r0;
    }

    public java.lang.String summarize()
    {
        android.app.job.JobInfo$Builder r0;
        java.lang.StringBuilder $r2;
        int $i0;
        java.lang.String $r8, r10;
        android.content.ComponentName r9;

        r0 := @this: android.app.job.JobInfo$Builder;

        r9 = r0.<android.app.job.JobInfo$Builder: android.content.ComponentName mJobService>;

        if r9 == null goto label1;

        r10 = virtualinvoke r9.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        goto label2;

     label1:
        r10 = "null";

     label2:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("JobInfo.Builder{job:");

        $i0 = r0.<android.app.job.JobInfo$Builder: int mJobId>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }
}
