public final class android.app.prediction.AppPredictor extends java.lang.Object
{
    private static final java.lang.String TAG;
    private final dalvik.system.CloseGuard mCloseGuard;
    private final java.util.concurrent.atomic.AtomicBoolean mIsClosed;
    private final android.app.prediction.IPredictionManager mPredictionManager;
    private final android.util.ArrayMap mRegisteredCallbacks;
    private final android.app.prediction.AppPredictionSessionId mSessionId;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        $r0 = class "Landroid/app/prediction/AppPredictor;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <android.app.prediction.AppPredictor: java.lang.String TAG> = $r1;

        return;
    }

    void <init>(android.content.Context, android.app.prediction.AppPredictionContext)
    {
        android.app.prediction.AppPredictor r0;
        android.app.prediction.AppPredictionContext r1;
        dalvik.system.CloseGuard $r3, $r18;
        java.util.concurrent.atomic.AtomicBoolean $r4;
        android.util.ArrayMap $r5;
        android.os.IBinder $r6;
        android.app.prediction.IPredictionManager $r7, $r17;
        java.lang.StringBuilder $r8;
        java.lang.String $r9, $r13, $r16, $r20;
        java.util.UUID $r12;
        android.app.prediction.AppPredictionSessionId $r15;
        int $i0;
        android.os.RemoteException $r19;
        android.content.Context r22;

        r0 := @this: android.app.prediction.AppPredictor;

        r22 := @parameter0: android.content.Context;

        r1 := @parameter1: android.app.prediction.AppPredictionContext;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = staticinvoke <dalvik.system.CloseGuard: dalvik.system.CloseGuard get()>();

        r0.<android.app.prediction.AppPredictor: dalvik.system.CloseGuard mCloseGuard> = $r3;

        $r4 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r4.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(0);

        r0.<android.app.prediction.AppPredictor: java.util.concurrent.atomic.AtomicBoolean mIsClosed> = $r4;

        $r5 = new android.util.ArrayMap;

        specialinvoke $r5.<android.util.ArrayMap: void <init>()>();

        r0.<android.app.prediction.AppPredictor: android.util.ArrayMap mRegisteredCallbacks> = $r5;

        $r6 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("app_prediction");

        $r7 = staticinvoke <android.app.prediction.IPredictionManager$Stub: android.app.prediction.IPredictionManager asInterface(android.os.IBinder)>($r6);

        r0.<android.app.prediction.AppPredictor: android.app.prediction.IPredictionManager mPredictionManager> = $r7;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke r22.<android.content.Context: java.lang.String getPackageName()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r12 = staticinvoke <java.util.UUID: java.util.UUID randomUUID()>();

        $r13 = virtualinvoke $r12.<java.util.UUID: java.lang.String toString()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = new android.app.prediction.AppPredictionSessionId;

        $r16 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $i0 = virtualinvoke r22.<android.content.Context: int getUserId()>();

        specialinvoke $r15.<android.app.prediction.AppPredictionSessionId: void <init>(java.lang.String,int)>($r16, $i0);

        r0.<android.app.prediction.AppPredictor: android.app.prediction.AppPredictionSessionId mSessionId> = $r15;

     label1:
        $r17 = r0.<android.app.prediction.AppPredictor: android.app.prediction.IPredictionManager mPredictionManager>;

        interfaceinvoke $r17.<android.app.prediction.IPredictionManager: void createPredictionSession(android.app.prediction.AppPredictionContext,android.app.prediction.AppPredictionSessionId)>(r1, $r15);

     label2:
        goto label4;

     label3:
        $r19 := @caughtexception;

        $r20 = <android.app.prediction.AppPredictor: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r20, "Failed to create predictor", $r19);

        virtualinvoke $r19.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

     label4:
        $r18 = r0.<android.app.prediction.AppPredictor: dalvik.system.CloseGuard mCloseGuard>;

        virtualinvoke $r18.<dalvik.system.CloseGuard: void open(java.lang.String)>("close");

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void destroy()
    {
        android.app.prediction.AppPredictor r0;
        java.util.concurrent.atomic.AtomicBoolean $r2;
        boolean $z0;
        java.lang.IllegalStateException $r3;
        dalvik.system.CloseGuard $r4;
        android.app.prediction.AppPredictionSessionId $r5;
        android.app.prediction.IPredictionManager $r6;
        android.util.ArrayMap $r7;
        android.os.RemoteException $r8;
        java.lang.String $r9;

        r0 := @this: android.app.prediction.AppPredictor;

        $r2 = r0.<android.app.prediction.AppPredictor: java.util.concurrent.atomic.AtomicBoolean mIsClosed>;

        $z0 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicBoolean: boolean getAndSet(boolean)>(1);

        if $z0 != 0 goto label5;

        $r4 = r0.<android.app.prediction.AppPredictor: dalvik.system.CloseGuard mCloseGuard>;

        virtualinvoke $r4.<dalvik.system.CloseGuard: void close()>();

     label1:
        $r6 = r0.<android.app.prediction.AppPredictor: android.app.prediction.IPredictionManager mPredictionManager>;

        $r5 = r0.<android.app.prediction.AppPredictor: android.app.prediction.AppPredictionSessionId mSessionId>;

        interfaceinvoke $r6.<android.app.prediction.IPredictionManager: void onDestroyPredictionSession(android.app.prediction.AppPredictionSessionId)>($r5);

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        $r9 = <android.app.prediction.AppPredictor: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r9, "Failed to notify app target event", $r8);

        virtualinvoke $r8.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

     label4:
        $r7 = r0.<android.app.prediction.AppPredictor: android.util.ArrayMap mRegisteredCallbacks>;

        virtualinvoke $r7.<android.util.ArrayMap: void clear()>();

        return;

     label5:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This client has already been destroyed.");

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.app.prediction.AppPredictor r0;
        dalvik.system.CloseGuard $r2, $r4;
        java.util.concurrent.atomic.AtomicBoolean $r3;
        boolean $z0;
        java.lang.Throwable $r5;

        r0 := @this: android.app.prediction.AppPredictor;

     label1:
        $r2 = r0.<android.app.prediction.AppPredictor: dalvik.system.CloseGuard mCloseGuard>;

        if $r2 == null goto label2;

        $r4 = r0.<android.app.prediction.AppPredictor: dalvik.system.CloseGuard mCloseGuard>;

        virtualinvoke $r4.<dalvik.system.CloseGuard: void warnIfOpen()>();

     label2:
        $r3 = r0.<android.app.prediction.AppPredictor: java.util.concurrent.atomic.AtomicBoolean mIsClosed>;

        $z0 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        if $z0 != 0 goto label3;

        virtualinvoke r0.<android.app.prediction.AppPredictor: void destroy()>();

     label3:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        return;

     label4:
        $r5 := @caughtexception;

        specialinvoke r0.<java.lang.Object: void finalize()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public android.app.prediction.AppPredictionSessionId getSessionId()
    {
        android.app.prediction.AppPredictor r0;
        android.app.prediction.AppPredictionSessionId $r1;

        r0 := @this: android.app.prediction.AppPredictor;

        $r1 = r0.<android.app.prediction.AppPredictor: android.app.prediction.AppPredictionSessionId mSessionId>;

        return $r1;
    }

    public void notifyAppTargetEvent(android.app.prediction.AppTargetEvent)
    {
        android.app.prediction.AppPredictor r0;
        java.util.concurrent.atomic.AtomicBoolean $r1;
        boolean $z0;
        java.lang.IllegalStateException $r2;
        android.app.prediction.AppPredictionSessionId $r3;
        android.app.prediction.IPredictionManager $r4;
        android.os.RemoteException $r5;
        java.lang.String $r6;
        android.app.prediction.AppTargetEvent r8;

        r0 := @this: android.app.prediction.AppPredictor;

        r8 := @parameter0: android.app.prediction.AppTargetEvent;

        $r1 = r0.<android.app.prediction.AppPredictor: java.util.concurrent.atomic.AtomicBoolean mIsClosed>;

        $z0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        if $z0 != 0 goto label5;

     label1:
        $r4 = r0.<android.app.prediction.AppPredictor: android.app.prediction.IPredictionManager mPredictionManager>;

        $r3 = r0.<android.app.prediction.AppPredictor: android.app.prediction.AppPredictionSessionId mSessionId>;

        interfaceinvoke $r4.<android.app.prediction.IPredictionManager: void notifyAppTargetEvent(android.app.prediction.AppPredictionSessionId,android.app.prediction.AppTargetEvent)>($r3, r8);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        $r6 = <android.app.prediction.AppPredictor: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r6, "Failed to notify app target event", $r5);

        virtualinvoke $r5.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

     label4:
        return;

     label5:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This client has already been destroyed.");

        throw $r2;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void notifyLaunchLocationShown(java.lang.String, java.util.List)
    {
        android.app.prediction.AppPredictor r0;
        java.util.List r1;
        android.app.prediction.IPredictionManager r2;
        android.app.prediction.AppPredictionSessionId r3;
        android.content.pm.ParceledListSlice r4;
        java.util.concurrent.atomic.AtomicBoolean $r5;
        boolean $z0;
        java.lang.IllegalStateException $r6;
        android.os.RemoteException $r7;
        java.lang.String $r8, r10;

        r0 := @this: android.app.prediction.AppPredictor;

        r10 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.List;

        $r5 = r0.<android.app.prediction.AppPredictor: java.util.concurrent.atomic.AtomicBoolean mIsClosed>;

        $z0 = virtualinvoke $r5.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        if $z0 != 0 goto label5;

     label1:
        r2 = r0.<android.app.prediction.AppPredictor: android.app.prediction.IPredictionManager mPredictionManager>;

        r3 = r0.<android.app.prediction.AppPredictor: android.app.prediction.AppPredictionSessionId mSessionId>;

        r4 = new android.content.pm.ParceledListSlice;

        specialinvoke r4.<android.content.pm.ParceledListSlice: void <init>(java.util.List)>(r1);

        interfaceinvoke r2.<android.app.prediction.IPredictionManager: void notifyLaunchLocationShown(android.app.prediction.AppPredictionSessionId,java.lang.String,android.content.pm.ParceledListSlice)>(r3, r10, r4);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        $r8 = <android.app.prediction.AppPredictor: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r8, "Failed to notify location shown event", $r7);

        virtualinvoke $r7.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

     label4:
        return;

     label5:
        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This client has already been destroyed.");

        throw $r6;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void registerPredictionUpdates(java.util.concurrent.Executor, android.app.prediction.AppPredictor$Callback)
    {
        android.app.prediction.AppPredictor r0;
        android.app.prediction.AppPredictor$Callback r1;
        android.app.prediction.AppPredictor$CallbackWrapper r2;
        android.app.prediction._$$Lambda$1lqxDplfWlUwgBrOynX9L0oK_uA r3;
        java.util.concurrent.atomic.AtomicBoolean $r4;
        boolean $z0, $z1;
        java.lang.IllegalStateException $r5;
        android.util.ArrayMap $r6, $r10;
        android.app.prediction.AppPredictionSessionId $r8;
        android.app.prediction.IPredictionManager $r9;
        android.os.RemoteException $r12;
        java.lang.String $r13;
        java.util.concurrent.Executor r15;

        r0 := @this: android.app.prediction.AppPredictor;

        r15 := @parameter0: java.util.concurrent.Executor;

        r1 := @parameter1: android.app.prediction.AppPredictor$Callback;

        $r4 = r0.<android.app.prediction.AppPredictor: java.util.concurrent.atomic.AtomicBoolean mIsClosed>;

        $z0 = virtualinvoke $r4.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        if $z0 != 0 goto label5;

        $r6 = r0.<android.app.prediction.AppPredictor: android.util.ArrayMap mRegisteredCallbacks>;

        $z1 = virtualinvoke $r6.<android.util.ArrayMap: boolean containsKey(java.lang.Object)>(r1);

        if $z1 == 0 goto label1;

        return;

     label1:
        r2 = new android.app.prediction.AppPredictor$CallbackWrapper;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        r3 = new android.app.prediction._$$Lambda$1lqxDplfWlUwgBrOynX9L0oK_uA;

        specialinvoke r3.<android.app.prediction._$$Lambda$1lqxDplfWlUwgBrOynX9L0oK_uA: void <init>(android.app.prediction.AppPredictor$Callback)>(r1);

        specialinvoke r2.<android.app.prediction.AppPredictor$CallbackWrapper: void <init>(java.util.concurrent.Executor,java.util.function.Consumer)>(r15, r3);

        $r9 = r0.<android.app.prediction.AppPredictor: android.app.prediction.IPredictionManager mPredictionManager>;

        $r8 = r0.<android.app.prediction.AppPredictor: android.app.prediction.AppPredictionSessionId mSessionId>;

        interfaceinvoke $r9.<android.app.prediction.IPredictionManager: void registerPredictionUpdates(android.app.prediction.AppPredictionSessionId,android.app.prediction.IPredictionCallback)>($r8, r2);

        $r10 = r0.<android.app.prediction.AppPredictor: android.util.ArrayMap mRegisteredCallbacks>;

        virtualinvoke $r10.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

     label2:
        goto label4;

     label3:
        $r12 := @caughtexception;

        $r13 = <android.app.prediction.AppPredictor: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r13, "Failed to register for prediction updates", $r12);

        virtualinvoke $r12.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

     label4:
        return;

     label5:
        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This client has already been destroyed.");

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void requestPredictionUpdate()
    {
        android.app.prediction.AppPredictor r0;
        java.util.concurrent.atomic.AtomicBoolean $r2;
        boolean $z0;
        java.lang.IllegalStateException $r3;
        android.app.prediction.AppPredictionSessionId $r4;
        android.app.prediction.IPredictionManager $r5;
        android.os.RemoteException $r6;
        java.lang.String $r7;

        r0 := @this: android.app.prediction.AppPredictor;

        $r2 = r0.<android.app.prediction.AppPredictor: java.util.concurrent.atomic.AtomicBoolean mIsClosed>;

        $z0 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        if $z0 != 0 goto label5;

     label1:
        $r5 = r0.<android.app.prediction.AppPredictor: android.app.prediction.IPredictionManager mPredictionManager>;

        $r4 = r0.<android.app.prediction.AppPredictor: android.app.prediction.AppPredictionSessionId mSessionId>;

        interfaceinvoke $r5.<android.app.prediction.IPredictionManager: void requestPredictionUpdate(android.app.prediction.AppPredictionSessionId)>($r4);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        $r7 = <android.app.prediction.AppPredictor: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r7, "Failed to request prediction update", $r6);

        virtualinvoke $r6.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

     label4:
        return;

     label5:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This client has already been destroyed.");

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void sortTargets(java.util.List, java.util.concurrent.Executor, java.util.function.Consumer)
    {
        android.app.prediction.AppPredictor r0;
        java.util.concurrent.Executor r1;
        java.util.function.Consumer r2;
        android.app.prediction.IPredictionManager r3;
        android.app.prediction.AppPredictionSessionId r4;
        android.content.pm.ParceledListSlice r5;
        java.util.concurrent.atomic.AtomicBoolean $r6;
        boolean $z0;
        java.lang.IllegalStateException $r7;
        android.os.RemoteException $r8;
        java.lang.String $r9;
        java.util.List r11;
        android.app.prediction.AppPredictor$CallbackWrapper r12;

        r0 := @this: android.app.prediction.AppPredictor;

        r11 := @parameter0: java.util.List;

        r1 := @parameter1: java.util.concurrent.Executor;

        r2 := @parameter2: java.util.function.Consumer;

        $r6 = r0.<android.app.prediction.AppPredictor: java.util.concurrent.atomic.AtomicBoolean mIsClosed>;

        $z0 = virtualinvoke $r6.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        if $z0 != 0 goto label5;

     label1:
        r3 = r0.<android.app.prediction.AppPredictor: android.app.prediction.IPredictionManager mPredictionManager>;

        r4 = r0.<android.app.prediction.AppPredictor: android.app.prediction.AppPredictionSessionId mSessionId>;

        r5 = new android.content.pm.ParceledListSlice;

        specialinvoke r5.<android.content.pm.ParceledListSlice: void <init>(java.util.List)>(r11);

        r12 = new android.app.prediction.AppPredictor$CallbackWrapper;

        specialinvoke r12.<android.app.prediction.AppPredictor$CallbackWrapper: void <init>(java.util.concurrent.Executor,java.util.function.Consumer)>(r1, r2);

        interfaceinvoke r3.<android.app.prediction.IPredictionManager: void sortAppTargets(android.app.prediction.AppPredictionSessionId,android.content.pm.ParceledListSlice,android.app.prediction.IPredictionCallback)>(r4, r5, r12);

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        $r9 = <android.app.prediction.AppPredictor: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r9, "Failed to sort targets", $r8);

        virtualinvoke $r8.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

     label4:
        return;

     label5:
        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This client has already been destroyed.");

        throw $r7;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void unregisterPredictionUpdates(android.app.prediction.AppPredictor$Callback)
    {
        android.app.prediction.AppPredictor r0;
        java.util.concurrent.atomic.AtomicBoolean $r1;
        boolean $z0, $z1;
        java.lang.IllegalStateException $r2;
        android.util.ArrayMap $r3, $r4;
        java.lang.Object $r5;
        android.app.prediction.AppPredictionSessionId $r6;
        android.app.prediction.IPredictionManager $r7;
        android.os.RemoteException $r8;
        java.lang.String $r9;
        android.app.prediction.AppPredictor$Callback r11;
        android.app.prediction.AppPredictor$CallbackWrapper r12;

        r0 := @this: android.app.prediction.AppPredictor;

        r11 := @parameter0: android.app.prediction.AppPredictor$Callback;

        $r1 = r0.<android.app.prediction.AppPredictor: java.util.concurrent.atomic.AtomicBoolean mIsClosed>;

        $z0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        if $z0 != 0 goto label5;

        $r3 = r0.<android.app.prediction.AppPredictor: android.util.ArrayMap mRegisteredCallbacks>;

        $z1 = virtualinvoke $r3.<android.util.ArrayMap: boolean containsKey(java.lang.Object)>(r11);

        if $z1 != 0 goto label1;

        return;

     label1:
        $r4 = r0.<android.app.prediction.AppPredictor: android.util.ArrayMap mRegisteredCallbacks>;

        $r5 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r11);

        r12 = (android.app.prediction.AppPredictor$CallbackWrapper) $r5;

        $r7 = r0.<android.app.prediction.AppPredictor: android.app.prediction.IPredictionManager mPredictionManager>;

        $r6 = r0.<android.app.prediction.AppPredictor: android.app.prediction.AppPredictionSessionId mSessionId>;

        interfaceinvoke $r7.<android.app.prediction.IPredictionManager: void unregisterPredictionUpdates(android.app.prediction.AppPredictionSessionId,android.app.prediction.IPredictionCallback)>($r6, r12);

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        $r9 = <android.app.prediction.AppPredictor: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r9, "Failed to unregister for prediction updates", $r8);

        virtualinvoke $r8.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

     label4:
        return;

     label5:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This client has already been destroyed.");

        throw $r2;

        catch android.os.RemoteException from label1 to label2 with label3;
    }
}
