class android.app.role.IRoleController$Stub$Proxy extends java.lang.Object implements android.app.role.IRoleController
{
    public static android.app.role.IRoleController sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.app.role.IRoleController$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.app.role.IRoleController$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.app.role.IRoleController$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.app.role.IRoleController$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.app.role.IRoleController$Stub$Proxy;

        $r1 = r0.<android.app.role.IRoleController$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.app.role.IRoleController$Stub$Proxy r0;

        r0 := @this: android.app.role.IRoleController$Stub$Proxy;

        return "android.app.role.IRoleController";
    }

    public void grantDefaultRoles(android.os.RemoteCallback) throws android.os.RemoteException
    {
        android.app.role.IRoleController$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r2;
        boolean $z0;
        android.app.role.IRoleController $r3, $r4;
        java.lang.Throwable $r5;
        android.os.RemoteCallback r6;

        r0 := @this: android.app.role.IRoleController$Stub$Proxy;

        r6 := @parameter0: android.os.RemoteCallback;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.role.IRoleController");

     label2:
        if r6 == null goto label5;

     label3:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r6.<android.os.RemoteCallback: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label4:
        goto label6;

     label5:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label6:
        $r2 = r0.<android.app.role.IRoleController$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r1, null, 1);

        if $z0 != 0 goto label8;

        $r3 = staticinvoke <android.app.role.IRoleController$Stub: android.app.role.IRoleController getDefaultImpl()>();

        if $r3 == null goto label8;

        $r4 = staticinvoke <android.app.role.IRoleController$Stub: android.app.role.IRoleController getDefaultImpl()>();

        interfaceinvoke $r4.<android.app.role.IRoleController: void grantDefaultRoles(android.os.RemoteCallback)>(r6);

     label7:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void isApplicationQualifiedForRole(java.lang.String, java.lang.String, android.os.RemoteCallback) throws android.os.RemoteException
    {
        android.app.role.IRoleController$Stub$Proxy r0;
        java.lang.String r1, r8;
        android.os.RemoteCallback r2;
        android.os.Parcel r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.app.role.IRoleController $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.app.role.IRoleController$Stub$Proxy;

        r8 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.os.RemoteCallback;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.role.IRoleController");

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r1);

     label2:
        if r2 == null goto label5;

     label3:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r2.<android.os.RemoteCallback: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label4:
        goto label6;

     label5:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label6:
        $r4 = r0.<android.app.role.IRoleController$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r3, null, 1);

        if $z0 != 0 goto label8;

        $r5 = staticinvoke <android.app.role.IRoleController$Stub: android.app.role.IRoleController getDefaultImpl()>();

        if $r5 == null goto label8;

        $r6 = staticinvoke <android.app.role.IRoleController$Stub: android.app.role.IRoleController getDefaultImpl()>();

        interfaceinvoke $r6.<android.app.role.IRoleController: void isApplicationQualifiedForRole(java.lang.String,java.lang.String,android.os.RemoteCallback)>(r8, r1, r2);

     label7:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void isApplicationVisibleForRole(java.lang.String, java.lang.String, android.os.RemoteCallback) throws android.os.RemoteException
    {
        android.app.role.IRoleController$Stub$Proxy r0;
        java.lang.String r1, r8;
        android.os.RemoteCallback r2;
        android.os.Parcel r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.app.role.IRoleController $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.app.role.IRoleController$Stub$Proxy;

        r8 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.os.RemoteCallback;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.role.IRoleController");

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r1);

     label2:
        if r2 == null goto label5;

     label3:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r2.<android.os.RemoteCallback: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label4:
        goto label6;

     label5:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label6:
        $r4 = r0.<android.app.role.IRoleController$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r3, null, 1);

        if $z0 != 0 goto label8;

        $r5 = staticinvoke <android.app.role.IRoleController$Stub: android.app.role.IRoleController getDefaultImpl()>();

        if $r5 == null goto label8;

        $r6 = staticinvoke <android.app.role.IRoleController$Stub: android.app.role.IRoleController getDefaultImpl()>();

        interfaceinvoke $r6.<android.app.role.IRoleController: void isApplicationVisibleForRole(java.lang.String,java.lang.String,android.os.RemoteCallback)>(r8, r1, r2);

     label7:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void isRoleVisible(java.lang.String, android.os.RemoteCallback) throws android.os.RemoteException
    {
        android.app.role.IRoleController$Stub$Proxy r0;
        android.os.RemoteCallback r1;
        android.os.Parcel r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.app.role.IRoleController $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: android.app.role.IRoleController$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        r1 := @parameter1: android.os.RemoteCallback;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.role.IRoleController");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r7);

     label2:
        if r1 == null goto label5;

     label3:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.os.RemoteCallback: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label4:
        goto label6;

     label5:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label6:
        $r3 = r0.<android.app.role.IRoleController$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r2, null, 1);

        if $z0 != 0 goto label8;

        $r4 = staticinvoke <android.app.role.IRoleController$Stub: android.app.role.IRoleController getDefaultImpl()>();

        if $r4 == null goto label8;

        $r5 = staticinvoke <android.app.role.IRoleController$Stub: android.app.role.IRoleController getDefaultImpl()>();

        interfaceinvoke $r5.<android.app.role.IRoleController: void isRoleVisible(java.lang.String,android.os.RemoteCallback)>(r7, r1);

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void onAddRoleHolder(java.lang.String, java.lang.String, int, android.os.RemoteCallback) throws android.os.RemoteException
    {
        android.app.role.IRoleController$Stub$Proxy r0;
        java.lang.String r1, r8;
        int i0;
        android.os.RemoteCallback r2;
        android.os.Parcel r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.app.role.IRoleController $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.app.role.IRoleController$Stub$Proxy;

        r8 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r2 := @parameter3: android.os.RemoteCallback;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.role.IRoleController");

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i0);

     label2:
        if r2 == null goto label5;

     label3:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r2.<android.os.RemoteCallback: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label4:
        goto label6;

     label5:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label6:
        $r4 = r0.<android.app.role.IRoleController$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r3, null, 1);

        if $z0 != 0 goto label8;

        $r5 = staticinvoke <android.app.role.IRoleController$Stub: android.app.role.IRoleController getDefaultImpl()>();

        if $r5 == null goto label8;

        $r6 = staticinvoke <android.app.role.IRoleController$Stub: android.app.role.IRoleController getDefaultImpl()>();

        interfaceinvoke $r6.<android.app.role.IRoleController: void onAddRoleHolder(java.lang.String,java.lang.String,int,android.os.RemoteCallback)>(r8, r1, i0, r2);

     label7:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void onClearRoleHolders(java.lang.String, int, android.os.RemoteCallback) throws android.os.RemoteException
    {
        android.app.role.IRoleController$Stub$Proxy r0;
        int i0;
        android.os.RemoteCallback r1;
        android.os.Parcel r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.app.role.IRoleController $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: android.app.role.IRoleController$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 := @parameter2: android.os.RemoteCallback;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.role.IRoleController");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

     label2:
        if r1 == null goto label5;

     label3:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.os.RemoteCallback: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label4:
        goto label6;

     label5:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label6:
        $r3 = r0.<android.app.role.IRoleController$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r2, null, 1);

        if $z0 != 0 goto label8;

        $r4 = staticinvoke <android.app.role.IRoleController$Stub: android.app.role.IRoleController getDefaultImpl()>();

        if $r4 == null goto label8;

        $r5 = staticinvoke <android.app.role.IRoleController$Stub: android.app.role.IRoleController getDefaultImpl()>();

        interfaceinvoke $r5.<android.app.role.IRoleController: void onClearRoleHolders(java.lang.String,int,android.os.RemoteCallback)>(r7, i0, r1);

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void onRemoveRoleHolder(java.lang.String, java.lang.String, int, android.os.RemoteCallback) throws android.os.RemoteException
    {
        android.app.role.IRoleController$Stub$Proxy r0;
        java.lang.String r1, r8;
        int i0;
        android.os.RemoteCallback r2;
        android.os.Parcel r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.app.role.IRoleController $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.app.role.IRoleController$Stub$Proxy;

        r8 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r2 := @parameter3: android.os.RemoteCallback;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.role.IRoleController");

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i0);

     label2:
        if r2 == null goto label5;

     label3:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r2.<android.os.RemoteCallback: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label4:
        goto label6;

     label5:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label6:
        $r4 = r0.<android.app.role.IRoleController$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r3, null, 1);

        if $z0 != 0 goto label8;

        $r5 = staticinvoke <android.app.role.IRoleController$Stub: android.app.role.IRoleController getDefaultImpl()>();

        if $r5 == null goto label8;

        $r6 = staticinvoke <android.app.role.IRoleController$Stub: android.app.role.IRoleController getDefaultImpl()>();

        interfaceinvoke $r6.<android.app.role.IRoleController: void onRemoveRoleHolder(java.lang.String,java.lang.String,int,android.os.RemoteCallback)>(r8, r1, i0, r2);

     label7:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }
}
