public class android.app.role.IRoleManager$Default extends java.lang.Object implements android.app.role.IRoleManager
{

    public void <init>()
    {
        android.app.role.IRoleManager$Default r0;

        r0 := @this: android.app.role.IRoleManager$Default;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void addOnRoleHoldersChangedListenerAsUser(android.app.role.IOnRoleHoldersChangedListener, int) throws android.os.RemoteException
    {
        android.app.role.IRoleManager$Default r0;
        android.app.role.IOnRoleHoldersChangedListener r1;
        int i0;

        r0 := @this: android.app.role.IRoleManager$Default;

        r1 := @parameter0: android.app.role.IOnRoleHoldersChangedListener;

        i0 := @parameter1: int;

        return;
    }

    public void addRoleHolderAsUser(java.lang.String, java.lang.String, int, int, android.os.RemoteCallback) throws android.os.RemoteException
    {
        android.app.role.IRoleManager$Default r0;
        java.lang.String r1, r2;
        int i0, i1;
        android.os.RemoteCallback r3;

        r0 := @this: android.app.role.IRoleManager$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r3 := @parameter4: android.os.RemoteCallback;

        return;
    }

    public boolean addRoleHolderFromController(java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.app.role.IRoleManager$Default r0;
        java.lang.String r1, r2;

        r0 := @this: android.app.role.IRoleManager$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        return 0;
    }

    public android.os.IBinder asBinder()
    {
        android.app.role.IRoleManager$Default r0;

        r0 := @this: android.app.role.IRoleManager$Default;

        return null;
    }

    public void clearRoleHoldersAsUser(java.lang.String, int, int, android.os.RemoteCallback) throws android.os.RemoteException
    {
        android.app.role.IRoleManager$Default r0;
        java.lang.String r1;
        int i0, i1;
        android.os.RemoteCallback r2;

        r0 := @this: android.app.role.IRoleManager$Default;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: android.os.RemoteCallback;

        return;
    }

    public java.lang.String getDefaultSmsPackage(int) throws android.os.RemoteException
    {
        android.app.role.IRoleManager$Default r0;
        int i0;

        r0 := @this: android.app.role.IRoleManager$Default;

        i0 := @parameter0: int;

        return null;
    }

    public java.util.List getHeldRolesFromController(java.lang.String) throws android.os.RemoteException
    {
        android.app.role.IRoleManager$Default r0;
        java.lang.String r1;

        r0 := @this: android.app.role.IRoleManager$Default;

        r1 := @parameter0: java.lang.String;

        return null;
    }

    public java.util.List getRoleHoldersAsUser(java.lang.String, int) throws android.os.RemoteException
    {
        android.app.role.IRoleManager$Default r0;
        java.lang.String r1;
        int i0;

        r0 := @this: android.app.role.IRoleManager$Default;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        return null;
    }

    public boolean isRoleAvailable(java.lang.String) throws android.os.RemoteException
    {
        android.app.role.IRoleManager$Default r0;
        java.lang.String r1;

        r0 := @this: android.app.role.IRoleManager$Default;

        r1 := @parameter0: java.lang.String;

        return 0;
    }

    public boolean isRoleHeld(java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.app.role.IRoleManager$Default r0;
        java.lang.String r1, r2;

        r0 := @this: android.app.role.IRoleManager$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        return 0;
    }

    public void removeOnRoleHoldersChangedListenerAsUser(android.app.role.IOnRoleHoldersChangedListener, int) throws android.os.RemoteException
    {
        android.app.role.IRoleManager$Default r0;
        android.app.role.IOnRoleHoldersChangedListener r1;
        int i0;

        r0 := @this: android.app.role.IRoleManager$Default;

        r1 := @parameter0: android.app.role.IOnRoleHoldersChangedListener;

        i0 := @parameter1: int;

        return;
    }

    public void removeRoleHolderAsUser(java.lang.String, java.lang.String, int, int, android.os.RemoteCallback) throws android.os.RemoteException
    {
        android.app.role.IRoleManager$Default r0;
        java.lang.String r1, r2;
        int i0, i1;
        android.os.RemoteCallback r3;

        r0 := @this: android.app.role.IRoleManager$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r3 := @parameter4: android.os.RemoteCallback;

        return;
    }

    public boolean removeRoleHolderFromController(java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.app.role.IRoleManager$Default r0;
        java.lang.String r1, r2;

        r0 := @this: android.app.role.IRoleManager$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        return 0;
    }

    public void setRoleNamesFromController(java.util.List) throws android.os.RemoteException
    {
        android.app.role.IRoleManager$Default r0;
        java.util.List r1;

        r0 := @this: android.app.role.IRoleManager$Default;

        r1 := @parameter0: java.util.List;

        return;
    }
}
