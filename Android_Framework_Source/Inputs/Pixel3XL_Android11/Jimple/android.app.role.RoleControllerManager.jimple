public class android.app.role.RoleControllerManager extends java.lang.Object
{
    private static final java.lang.String LOG_TAG;
    private static final long REQUEST_TIMEOUT_MILLIS;
    private static volatile android.content.ComponentName sRemoteServiceComponentName;
    private static final android.util.SparseArray sRemoteServices;
    private static final java.lang.Object sRemoteServicesLock;
    private final com.android.internal.infra.ServiceConnector mRemoteService;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.lang.Object $r2;
        android.util.SparseArray $r3;

        <android.app.role.RoleControllerManager: long REQUEST_TIMEOUT_MILLIS> = 15000L;

        $r0 = class "Landroid/app/role/RoleControllerManager;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <android.app.role.RoleControllerManager: java.lang.String LOG_TAG> = $r1;

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        <android.app.role.RoleControllerManager: java.lang.Object sRemoteServicesLock> = $r2;

        $r3 = new android.util.SparseArray;

        specialinvoke $r3.<android.util.SparseArray: void <init>()>();

        <android.app.role.RoleControllerManager: android.util.SparseArray sRemoteServices> = $r3;

        return;
    }

    private void <init>(android.content.ComponentName, android.os.Handler, android.content.Context)
    {
        android.app.role.RoleControllerManager r0;
        android.os.Handler r1;
        java.lang.Object r2, $r5;
        int i0;
        android.app.Application r3;
        android.util.SparseArray $r4, $r8;
        android.content.Intent $r6, r16;
        android.app.role.'-$$Lambda$Z0BwIRmLFQVA4XrF_I5nxvuecWE' $r7;
        java.lang.Throwable $r9;
        android.content.ComponentName r10;
        android.content.Context r11;
        com.android.internal.infra.ServiceConnector r12, r13;
        android.app.role.RoleControllerManager$1 r17;
        java.util.function.Function r18;

        r0 := @this: android.app.role.RoleControllerManager;

        r10 := @parameter0: android.content.ComponentName;

        r1 := @parameter1: android.os.Handler;

        r11 := @parameter2: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r2 = <android.app.role.RoleControllerManager: java.lang.Object sRemoteServicesLock>;

        entermonitor r2;

     label1:
        i0 = virtualinvoke r11.<android.content.Context: int getUserId()>();

        $r4 = <android.app.role.RoleControllerManager: android.util.SparseArray sRemoteServices>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r12 = (com.android.internal.infra.ServiceConnector) $r5;

     label2:
        r13 = r12;

        if r12 != null goto label5;

     label3:
        r17 = new android.app.role.RoleControllerManager$1;

        r13 = r17;

        r3 = staticinvoke <android.app.ActivityThread: android.app.Application currentApplication()>();

        r16 = new android.content.Intent;

        specialinvoke r16.<android.content.Intent: void <init>(java.lang.String)>("android.app.role.RoleControllerService");

        $r6 = virtualinvoke r16.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>(r10);

        $r7 = <android.app.role._$$Lambda$Z0BwIRmLFQVA4XrF_I5nxvuecWE: android.app.role.'-$$Lambda$Z0BwIRmLFQVA4XrF_I5nxvuecWE' INSTANCE>;

        r18 = (java.util.function.Function) $r7;

        specialinvoke r17.<android.app.role.RoleControllerManager$1: void <init>(android.app.role.RoleControllerManager,android.content.Context,android.content.Intent,int,int,java.util.function.Function,android.os.Handler)>(r0, r3, $r6, 0, i0, r18, r1);

     label4:
        $r8 = <android.app.role.RoleControllerManager: android.util.SparseArray sRemoteServices>;

        virtualinvoke $r8.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r17);

     label5:
        r0.<android.app.role.RoleControllerManager: com.android.internal.infra.ServiceConnector mRemoteService> = r13;

        exitmonitor r2;

     label6:
        return;

     label7:
        $r9 := @caughtexception;

     label8:
        exitmonitor r2;

     label9:
        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public void <init>(android.content.Context)
    {
        android.app.role.RoleControllerManager r0;
        android.content.Context r1;
        android.content.ComponentName $r2;
        android.os.Handler $r3;

        r0 := @this: android.app.role.RoleControllerManager;

        r1 := @parameter0: android.content.Context;

        $r2 = staticinvoke <android.app.role.RoleControllerManager: android.content.ComponentName getRemoteServiceComponentName(android.content.Context)>(r1);

        $r3 = virtualinvoke r1.<android.content.Context: android.os.Handler getMainThreadHandler()>();

        specialinvoke r0.<android.app.role.RoleControllerManager: void <init>(android.content.ComponentName,android.os.Handler,android.content.Context)>($r2, $r3, r1);

        return;
    }

    public static android.app.role.RoleControllerManager createWithInitializedRemoteServiceComponentName(android.os.Handler, android.content.Context)
    {
        android.os.Handler r0;
        android.content.Context r1;
        android.app.role.RoleControllerManager $r2;
        android.content.ComponentName $r3;

        r0 := @parameter0: android.os.Handler;

        r1 := @parameter1: android.content.Context;

        $r2 = new android.app.role.RoleControllerManager;

        $r3 = <android.app.role.RoleControllerManager: android.content.ComponentName sRemoteServiceComponentName>;

        specialinvoke $r2.<android.app.role.RoleControllerManager: void <init>(android.content.ComponentName,android.os.Handler,android.content.Context)>($r3, r0, r1);

        return $r2;
    }

    private static android.content.ComponentName getRemoteServiceComponentName(android.content.Context)
    {
        android.content.Intent $r1;
        java.lang.String $r2;
        android.content.pm.ResolveInfo $r4;
        android.content.pm.ComponentInfo $r5;
        android.content.ComponentName $r6;
        android.content.Context r7;
        android.content.pm.PackageManager r8;

        r7 := @parameter0: android.content.Context;

        $r1 = new android.content.Intent;

        specialinvoke $r1.<android.content.Intent: void <init>(java.lang.String)>("android.app.role.RoleControllerService");

        r8 = virtualinvoke r7.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r2 = virtualinvoke r8.<android.content.pm.PackageManager: java.lang.String getPermissionControllerPackageName()>();

        virtualinvoke $r1.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>($r2);

        $r4 = virtualinvoke r8.<android.content.pm.PackageManager: android.content.pm.ResolveInfo resolveService(android.content.Intent,int)>($r1, 0);

        $r5 = virtualinvoke $r4.<android.content.pm.ResolveInfo: android.content.pm.ComponentInfo getComponentInfo()>();

        $r6 = virtualinvoke $r5.<android.content.pm.ComponentInfo: android.content.ComponentName getComponentName()>();

        return $r6;
    }

    public static void initializeRemoteServiceComponentName(android.content.Context)
    {
        android.content.Context r0;
        android.content.ComponentName $r1;

        r0 := @parameter0: android.content.Context;

        $r1 = staticinvoke <android.app.role.RoleControllerManager: android.content.ComponentName getRemoteServiceComponentName(android.content.Context)>(r0);

        <android.app.role.RoleControllerManager: android.content.ComponentName sRemoteServiceComponentName> = $r1;

        return;
    }

    static java.util.concurrent.CompletableFuture lambda$grantDefaultRoles$0(android.app.role.IRoleController) throws java.lang.Exception
    {
        android.app.role.IRoleController r0;
        com.android.internal.infra.AndroidFuture $r2;
        android.os.RemoteCallback $r4;
        android.app.role._$$Lambda$9DeAxmM9lUVr3_FTSefyo_BW8DY $r5;

        r0 := @parameter0: android.app.role.IRoleController;

        $r2 = new com.android.internal.infra.AndroidFuture;

        specialinvoke $r2.<com.android.internal.infra.AndroidFuture: void <init>()>();

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r2);

        $r4 = new android.os.RemoteCallback;

        $r5 = new android.app.role._$$Lambda$9DeAxmM9lUVr3_FTSefyo_BW8DY;

        specialinvoke $r5.<android.app.role._$$Lambda$9DeAxmM9lUVr3_FTSefyo_BW8DY: void <init>(com.android.internal.infra.AndroidFuture)>($r2);

        specialinvoke $r4.<android.os.RemoteCallback: void <init>(android.os.RemoteCallback$OnResultListener)>($r5);

        interfaceinvoke r0.<android.app.role.IRoleController: void grantDefaultRoles(android.os.RemoteCallback)>($r4);

        return $r2;
    }

    static java.util.concurrent.CompletableFuture lambda$isApplicationQualifiedForRole$4(java.lang.String, java.lang.String, android.app.role.IRoleController) throws java.lang.Exception
    {
        java.lang.String r0, r1;
        android.app.role.IRoleController r2;
        com.android.internal.infra.AndroidFuture $r4;
        android.os.RemoteCallback $r6;
        android.app.role._$$Lambda$9DeAxmM9lUVr3_FTSefyo_BW8DY $r7;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.app.role.IRoleController;

        $r4 = new com.android.internal.infra.AndroidFuture;

        specialinvoke $r4.<com.android.internal.infra.AndroidFuture: void <init>()>();

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r4);

        $r6 = new android.os.RemoteCallback;

        $r7 = new android.app.role._$$Lambda$9DeAxmM9lUVr3_FTSefyo_BW8DY;

        specialinvoke $r7.<android.app.role._$$Lambda$9DeAxmM9lUVr3_FTSefyo_BW8DY: void <init>(com.android.internal.infra.AndroidFuture)>($r4);

        specialinvoke $r6.<android.os.RemoteCallback: void <init>(android.os.RemoteCallback$OnResultListener)>($r7);

        interfaceinvoke r2.<android.app.role.IRoleController: void isApplicationQualifiedForRole(java.lang.String,java.lang.String,android.os.RemoteCallback)>(r0, r1, $r6);

        return $r4;
    }

    static java.util.concurrent.CompletableFuture lambda$isApplicationVisibleForRole$5(java.lang.String, java.lang.String, android.app.role.IRoleController) throws java.lang.Exception
    {
        java.lang.String r0, r1;
        android.app.role.IRoleController r2;
        com.android.internal.infra.AndroidFuture $r4;
        android.os.RemoteCallback $r6;
        android.app.role._$$Lambda$9DeAxmM9lUVr3_FTSefyo_BW8DY $r7;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.app.role.IRoleController;

        $r4 = new com.android.internal.infra.AndroidFuture;

        specialinvoke $r4.<com.android.internal.infra.AndroidFuture: void <init>()>();

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r4);

        $r6 = new android.os.RemoteCallback;

        $r7 = new android.app.role._$$Lambda$9DeAxmM9lUVr3_FTSefyo_BW8DY;

        specialinvoke $r7.<android.app.role._$$Lambda$9DeAxmM9lUVr3_FTSefyo_BW8DY: void <init>(com.android.internal.infra.AndroidFuture)>($r4);

        specialinvoke $r6.<android.os.RemoteCallback: void <init>(android.os.RemoteCallback$OnResultListener)>($r7);

        interfaceinvoke r2.<android.app.role.IRoleController: void isApplicationVisibleForRole(java.lang.String,java.lang.String,android.os.RemoteCallback)>(r0, r1, $r6);

        return $r4;
    }

    static java.util.concurrent.CompletableFuture lambda$isRoleVisible$6(java.lang.String, android.app.role.IRoleController) throws java.lang.Exception
    {
        java.lang.String r0;
        android.app.role.IRoleController r1;
        com.android.internal.infra.AndroidFuture $r3;
        android.os.RemoteCallback $r5;
        android.app.role._$$Lambda$9DeAxmM9lUVr3_FTSefyo_BW8DY $r6;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: android.app.role.IRoleController;

        $r3 = new com.android.internal.infra.AndroidFuture;

        specialinvoke $r3.<com.android.internal.infra.AndroidFuture: void <init>()>();

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r3);

        $r5 = new android.os.RemoteCallback;

        $r6 = new android.app.role._$$Lambda$9DeAxmM9lUVr3_FTSefyo_BW8DY;

        specialinvoke $r6.<android.app.role._$$Lambda$9DeAxmM9lUVr3_FTSefyo_BW8DY: void <init>(com.android.internal.infra.AndroidFuture)>($r3);

        specialinvoke $r5.<android.os.RemoteCallback: void <init>(android.os.RemoteCallback$OnResultListener)>($r6);

        interfaceinvoke r1.<android.app.role.IRoleController: void isRoleVisible(java.lang.String,android.os.RemoteCallback)>(r0, $r5);

        return $r3;
    }

    static java.util.concurrent.CompletableFuture lambda$onAddRoleHolder$1(java.lang.String, java.lang.String, int, android.app.role.IRoleController) throws java.lang.Exception
    {
        java.lang.String r0, r1;
        int i0;
        android.app.role.IRoleController r2;
        com.android.internal.infra.AndroidFuture $r4;
        android.os.RemoteCallback $r6;
        android.app.role._$$Lambda$9DeAxmM9lUVr3_FTSefyo_BW8DY $r7;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r2 := @parameter3: android.app.role.IRoleController;

        $r4 = new com.android.internal.infra.AndroidFuture;

        specialinvoke $r4.<com.android.internal.infra.AndroidFuture: void <init>()>();

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r4);

        $r6 = new android.os.RemoteCallback;

        $r7 = new android.app.role._$$Lambda$9DeAxmM9lUVr3_FTSefyo_BW8DY;

        specialinvoke $r7.<android.app.role._$$Lambda$9DeAxmM9lUVr3_FTSefyo_BW8DY: void <init>(com.android.internal.infra.AndroidFuture)>($r4);

        specialinvoke $r6.<android.os.RemoteCallback: void <init>(android.os.RemoteCallback$OnResultListener)>($r7);

        interfaceinvoke r2.<android.app.role.IRoleController: void onAddRoleHolder(java.lang.String,java.lang.String,int,android.os.RemoteCallback)>(r0, r1, i0, $r6);

        return $r4;
    }

    static java.util.concurrent.CompletableFuture lambda$onClearRoleHolders$3(java.lang.String, int, android.app.role.IRoleController) throws java.lang.Exception
    {
        java.lang.String r0;
        int i0;
        android.app.role.IRoleController r1;
        com.android.internal.infra.AndroidFuture $r3;
        android.os.RemoteCallback $r5;
        android.app.role._$$Lambda$9DeAxmM9lUVr3_FTSefyo_BW8DY $r6;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 := @parameter2: android.app.role.IRoleController;

        $r3 = new com.android.internal.infra.AndroidFuture;

        specialinvoke $r3.<com.android.internal.infra.AndroidFuture: void <init>()>();

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r3);

        $r5 = new android.os.RemoteCallback;

        $r6 = new android.app.role._$$Lambda$9DeAxmM9lUVr3_FTSefyo_BW8DY;

        specialinvoke $r6.<android.app.role._$$Lambda$9DeAxmM9lUVr3_FTSefyo_BW8DY: void <init>(com.android.internal.infra.AndroidFuture)>($r3);

        specialinvoke $r5.<android.os.RemoteCallback: void <init>(android.os.RemoteCallback$OnResultListener)>($r6);

        interfaceinvoke r1.<android.app.role.IRoleController: void onClearRoleHolders(java.lang.String,int,android.os.RemoteCallback)>(r0, i0, $r5);

        return $r3;
    }

    static java.util.concurrent.CompletableFuture lambda$onRemoveRoleHolder$2(java.lang.String, java.lang.String, int, android.app.role.IRoleController) throws java.lang.Exception
    {
        java.lang.String r0, r1;
        int i0;
        android.app.role.IRoleController r2;
        com.android.internal.infra.AndroidFuture $r4;
        android.os.RemoteCallback $r6;
        android.app.role._$$Lambda$9DeAxmM9lUVr3_FTSefyo_BW8DY $r7;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r2 := @parameter3: android.app.role.IRoleController;

        $r4 = new com.android.internal.infra.AndroidFuture;

        specialinvoke $r4.<com.android.internal.infra.AndroidFuture: void <init>()>();

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r4);

        $r6 = new android.os.RemoteCallback;

        $r7 = new android.app.role._$$Lambda$9DeAxmM9lUVr3_FTSefyo_BW8DY;

        specialinvoke $r7.<android.app.role._$$Lambda$9DeAxmM9lUVr3_FTSefyo_BW8DY: void <init>(com.android.internal.infra.AndroidFuture)>($r4);

        specialinvoke $r6.<android.os.RemoteCallback: void <init>(android.os.RemoteCallback$OnResultListener)>($r7);

        interfaceinvoke r2.<android.app.role.IRoleController: void onRemoveRoleHolder(java.lang.String,java.lang.String,int,android.os.RemoteCallback)>(r0, r1, i0, $r6);

        return $r4;
    }

    static void lambda$propagateCallback$7(java.lang.Throwable, java.lang.String, java.util.function.Consumer, android.os.Bundle)
    {
        java.lang.String r0, $r7, r12;
        java.util.function.Consumer r1;
        long l0;
        java.lang.StringBuilder r2;
        java.lang.Boolean $r3, $r8;
        java.lang.Throwable $r9, r10;
        android.os.Bundle r11;
        boolean z0;

        r10 := @parameter0: java.lang.Throwable;

        r0 := @parameter1: java.lang.String;

        r1 := @parameter2: java.util.function.Consumer;

        r11 := @parameter3: android.os.Bundle;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        z0 = 0;

        if r10 == null goto label4;

     label1:
        r12 = <android.app.role.RoleControllerManager: java.lang.String LOG_TAG>;

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error calling ");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("()");

        $r7 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>(r12, $r7, r10);

        $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        interfaceinvoke r1.<java.util.function.Consumer: void accept(java.lang.Object)>($r8);

     label2:
        goto label6;

     label3:
        $r9 := @caughtexception;

        goto label7;

     label4:
        if r11 == null goto label5;

        z0 = 1;

     label5:
        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        interfaceinvoke r1.<java.util.function.Consumer: void accept(java.lang.Object)>($r3);

     label6:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label7:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label5 to label6 with label3;
    }

    static void lambda$propagateCallback$8(java.util.concurrent.Executor, java.lang.String, java.util.function.Consumer, android.os.Bundle, java.lang.Throwable)
    {
        java.util.concurrent.Executor r0;
        java.lang.String r1;
        java.util.function.Consumer r2;
        android.os.Bundle r3;
        java.lang.Throwable r4;
        android.app.role._$$Lambda$RoleControllerManager$mCMKfoPdye0sMu6efs963HCR1Xk $r5;

        r0 := @parameter0: java.util.concurrent.Executor;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.util.function.Consumer;

        r3 := @parameter3: android.os.Bundle;

        r4 := @parameter4: java.lang.Throwable;

        $r5 = new android.app.role._$$Lambda$RoleControllerManager$mCMKfoPdye0sMu6efs963HCR1Xk;

        specialinvoke $r5.<android.app.role._$$Lambda$RoleControllerManager$mCMKfoPdye0sMu6efs963HCR1Xk: void <init>(java.lang.Throwable,java.lang.String,java.util.function.Consumer,android.os.Bundle)>(r4, r1, r2, r3);

        interfaceinvoke r0.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r5);

        return;
    }

    static void lambda$propagateCallback$9(java.lang.String, android.os.RemoteCallback, android.os.Bundle, java.lang.Throwable)
    {
        android.os.RemoteCallback r0;
        java.lang.Throwable r1, $r7;
        long l0;
        java.lang.String r2, $r6, r8;
        android.os.Bundle r9;
        java.lang.StringBuilder r10;

        r8 := @parameter0: java.lang.String;

        r0 := @parameter1: android.os.RemoteCallback;

        r9 := @parameter2: android.os.Bundle;

        r1 := @parameter3: java.lang.Throwable;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        if r1 == null goto label3;

     label1:
        r2 = <android.app.role.RoleControllerManager: java.lang.String LOG_TAG>;

        r10 = new java.lang.StringBuilder;

        specialinvoke r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error calling ");

        virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("()");

        $r6 = virtualinvoke r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>(r2, $r6, r1);

        virtualinvoke r0.<android.os.RemoteCallback: void sendResult(android.os.Bundle)>(null);

     label2:
        goto label4;

     label3:
        virtualinvoke r0.<android.os.RemoteCallback: void sendResult(android.os.Bundle)>(r9);

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label5:
        $r7 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    private void propagateCallback(com.android.internal.infra.AndroidFuture, java.lang.String, android.os.RemoteCallback)
    {
        android.app.role.RoleControllerManager r0;
        com.android.internal.infra.AndroidFuture r1, $r5;
        java.lang.String r2;
        android.os.RemoteCallback r3;
        java.util.concurrent.TimeUnit $r4;
        android.app.role._$$Lambda$RoleControllerManager$1tkryWxs4VtGp5AmGDyjpvBjC28 $r6;

        r0 := @this: android.app.role.RoleControllerManager;

        r1 := @parameter0: com.android.internal.infra.AndroidFuture;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.RemoteCallback;

        $r4 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        $r5 = virtualinvoke r1.<com.android.internal.infra.AndroidFuture: com.android.internal.infra.AndroidFuture orTimeout(long,java.util.concurrent.TimeUnit)>(15000L, $r4);

        $r6 = new android.app.role._$$Lambda$RoleControllerManager$1tkryWxs4VtGp5AmGDyjpvBjC28;

        specialinvoke $r6.<android.app.role._$$Lambda$RoleControllerManager$1tkryWxs4VtGp5AmGDyjpvBjC28: void <init>(java.lang.String,android.os.RemoteCallback)>(r2, r3);

        virtualinvoke $r5.<com.android.internal.infra.AndroidFuture: com.android.internal.infra.AndroidFuture whenComplete(java.util.function.BiConsumer)>($r6);

        return;
    }

    private void propagateCallback(com.android.internal.infra.AndroidFuture, java.lang.String, java.util.concurrent.Executor, java.util.function.Consumer)
    {
        android.app.role.RoleControllerManager r0;
        com.android.internal.infra.AndroidFuture r1, $r6;
        java.lang.String r2;
        java.util.concurrent.Executor r3;
        java.util.function.Consumer r4;
        java.util.concurrent.TimeUnit $r5;
        android.app.role._$$Lambda$RoleControllerManager$hbh627Rh8mtJykW3vb1FWR34mIQ $r7;

        r0 := @this: android.app.role.RoleControllerManager;

        r1 := @parameter0: com.android.internal.infra.AndroidFuture;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.util.concurrent.Executor;

        r4 := @parameter3: java.util.function.Consumer;

        $r5 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        $r6 = virtualinvoke r1.<com.android.internal.infra.AndroidFuture: com.android.internal.infra.AndroidFuture orTimeout(long,java.util.concurrent.TimeUnit)>(15000L, $r5);

        $r7 = new android.app.role._$$Lambda$RoleControllerManager$hbh627Rh8mtJykW3vb1FWR34mIQ;

        specialinvoke $r7.<android.app.role._$$Lambda$RoleControllerManager$hbh627Rh8mtJykW3vb1FWR34mIQ: void <init>(java.util.concurrent.Executor,java.lang.String,java.util.function.Consumer)>(r3, r2, r4);

        virtualinvoke $r6.<com.android.internal.infra.AndroidFuture: com.android.internal.infra.AndroidFuture whenComplete(java.util.function.BiConsumer)>($r7);

        return;
    }

    public void grantDefaultRoles(java.util.concurrent.Executor, java.util.function.Consumer)
    {
        android.app.role.RoleControllerManager r0;
        java.util.concurrent.Executor r1;
        java.util.function.Consumer r2;
        android.app.role.'-$$Lambda$RoleControllerManager$Jsb4ev7pHUqel8_lglNSRLiUzpg' $r3;
        com.android.internal.infra.ServiceConnector $r4;
        com.android.internal.infra.AndroidFuture $r5;
        com.android.internal.infra.ServiceConnector$Job r6;

        r0 := @this: android.app.role.RoleControllerManager;

        r1 := @parameter0: java.util.concurrent.Executor;

        r2 := @parameter1: java.util.function.Consumer;

        $r4 = r0.<android.app.role.RoleControllerManager: com.android.internal.infra.ServiceConnector mRemoteService>;

        $r3 = <android.app.role._$$Lambda$RoleControllerManager$Jsb4ev7pHUqel8_lglNSRLiUzpg: android.app.role.'-$$Lambda$RoleControllerManager$Jsb4ev7pHUqel8_lglNSRLiUzpg' INSTANCE>;

        r6 = (com.android.internal.infra.ServiceConnector$Job) $r3;

        $r5 = interfaceinvoke $r4.<com.android.internal.infra.ServiceConnector: com.android.internal.infra.AndroidFuture postAsync(com.android.internal.infra.ServiceConnector$Job)>(r6);

        specialinvoke r0.<android.app.role.RoleControllerManager: void propagateCallback(com.android.internal.infra.AndroidFuture,java.lang.String,java.util.concurrent.Executor,java.util.function.Consumer)>($r5, "grantDefaultRoles", r1, r2);

        return;
    }

    public void isApplicationQualifiedForRole(java.lang.String, java.lang.String, java.util.concurrent.Executor, java.util.function.Consumer)
    {
        android.app.role.RoleControllerManager r0;
        java.lang.String r1, r2;
        java.util.concurrent.Executor r3;
        java.util.function.Consumer r4;
        android.app.role._$$Lambda$RoleControllerManager$ReKCWj8qlXAul532f7t4g53Ivg0 $r5;
        com.android.internal.infra.ServiceConnector $r6;
        com.android.internal.infra.AndroidFuture $r7;

        r0 := @this: android.app.role.RoleControllerManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.util.concurrent.Executor;

        r4 := @parameter3: java.util.function.Consumer;

        $r6 = r0.<android.app.role.RoleControllerManager: com.android.internal.infra.ServiceConnector mRemoteService>;

        $r5 = new android.app.role._$$Lambda$RoleControllerManager$ReKCWj8qlXAul532f7t4g53Ivg0;

        specialinvoke $r5.<android.app.role._$$Lambda$RoleControllerManager$ReKCWj8qlXAul532f7t4g53Ivg0: void <init>(java.lang.String,java.lang.String)>(r1, r2);

        $r7 = interfaceinvoke $r6.<com.android.internal.infra.ServiceConnector: com.android.internal.infra.AndroidFuture postAsync(com.android.internal.infra.ServiceConnector$Job)>($r5);

        specialinvoke r0.<android.app.role.RoleControllerManager: void propagateCallback(com.android.internal.infra.AndroidFuture,java.lang.String,java.util.concurrent.Executor,java.util.function.Consumer)>($r7, "isApplicationQualifiedForRole", r3, r4);

        return;
    }

    public void isApplicationVisibleForRole(java.lang.String, java.lang.String, java.util.concurrent.Executor, java.util.function.Consumer)
    {
        android.app.role.RoleControllerManager r0;
        java.lang.String r1, r2;
        java.util.concurrent.Executor r3;
        java.util.function.Consumer r4;
        android.app.role._$$Lambda$RoleControllerManager$aq0cHbejAFqnsX1ZigMc9Dz1D5A $r5;
        com.android.internal.infra.ServiceConnector $r6;
        com.android.internal.infra.AndroidFuture $r7;

        r0 := @this: android.app.role.RoleControllerManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.util.concurrent.Executor;

        r4 := @parameter3: java.util.function.Consumer;

        $r6 = r0.<android.app.role.RoleControllerManager: com.android.internal.infra.ServiceConnector mRemoteService>;

        $r5 = new android.app.role._$$Lambda$RoleControllerManager$aq0cHbejAFqnsX1ZigMc9Dz1D5A;

        specialinvoke $r5.<android.app.role._$$Lambda$RoleControllerManager$aq0cHbejAFqnsX1ZigMc9Dz1D5A: void <init>(java.lang.String,java.lang.String)>(r1, r2);

        $r7 = interfaceinvoke $r6.<com.android.internal.infra.ServiceConnector: com.android.internal.infra.AndroidFuture postAsync(com.android.internal.infra.ServiceConnector$Job)>($r5);

        specialinvoke r0.<android.app.role.RoleControllerManager: void propagateCallback(com.android.internal.infra.AndroidFuture,java.lang.String,java.util.concurrent.Executor,java.util.function.Consumer)>($r7, "isApplicationVisibleForRole", r3, r4);

        return;
    }

    public void isRoleVisible(java.lang.String, java.util.concurrent.Executor, java.util.function.Consumer)
    {
        android.app.role.RoleControllerManager r0;
        java.lang.String r1;
        java.util.concurrent.Executor r2;
        java.util.function.Consumer r3;
        android.app.role._$$Lambda$RoleControllerManager$VsbRaGFueP4e1AEVbN4zwbUmdZU $r4;
        com.android.internal.infra.ServiceConnector $r5;
        com.android.internal.infra.AndroidFuture $r6;

        r0 := @this: android.app.role.RoleControllerManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.concurrent.Executor;

        r3 := @parameter2: java.util.function.Consumer;

        $r5 = r0.<android.app.role.RoleControllerManager: com.android.internal.infra.ServiceConnector mRemoteService>;

        $r4 = new android.app.role._$$Lambda$RoleControllerManager$VsbRaGFueP4e1AEVbN4zwbUmdZU;

        specialinvoke $r4.<android.app.role._$$Lambda$RoleControllerManager$VsbRaGFueP4e1AEVbN4zwbUmdZU: void <init>(java.lang.String)>(r1);

        $r6 = interfaceinvoke $r5.<com.android.internal.infra.ServiceConnector: com.android.internal.infra.AndroidFuture postAsync(com.android.internal.infra.ServiceConnector$Job)>($r4);

        specialinvoke r0.<android.app.role.RoleControllerManager: void propagateCallback(com.android.internal.infra.AndroidFuture,java.lang.String,java.util.concurrent.Executor,java.util.function.Consumer)>($r6, "isRoleVisible", r2, r3);

        return;
    }

    public void onAddRoleHolder(java.lang.String, java.lang.String, int, android.os.RemoteCallback)
    {
        android.app.role.RoleControllerManager r0;
        java.lang.String r1, r2;
        int i0;
        android.os.RemoteCallback r3;
        android.app.role._$$Lambda$RoleControllerManager$GiyGeOpnMIVwipW_81KV8TogKt8 $r4;
        com.android.internal.infra.ServiceConnector $r5;
        com.android.internal.infra.AndroidFuture $r6;

        r0 := @this: android.app.role.RoleControllerManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 := @parameter3: android.os.RemoteCallback;

        $r5 = r0.<android.app.role.RoleControllerManager: com.android.internal.infra.ServiceConnector mRemoteService>;

        $r4 = new android.app.role._$$Lambda$RoleControllerManager$GiyGeOpnMIVwipW_81KV8TogKt8;

        specialinvoke $r4.<android.app.role._$$Lambda$RoleControllerManager$GiyGeOpnMIVwipW_81KV8TogKt8: void <init>(java.lang.String,java.lang.String,int)>(r1, r2, i0);

        $r6 = interfaceinvoke $r5.<com.android.internal.infra.ServiceConnector: com.android.internal.infra.AndroidFuture postAsync(com.android.internal.infra.ServiceConnector$Job)>($r4);

        specialinvoke r0.<android.app.role.RoleControllerManager: void propagateCallback(com.android.internal.infra.AndroidFuture,java.lang.String,android.os.RemoteCallback)>($r6, "onAddRoleHolder", r3);

        return;
    }

    public void onClearRoleHolders(java.lang.String, int, android.os.RemoteCallback)
    {
        android.app.role.RoleControllerManager r0;
        java.lang.String r1;
        int i0;
        android.os.RemoteCallback r2;
        android.app.role._$$Lambda$RoleControllerManager$lBbpGLk6PhAvXOnY5bjXhdddZ6Q $r3;
        com.android.internal.infra.ServiceConnector $r4;
        com.android.internal.infra.AndroidFuture $r5;

        r0 := @this: android.app.role.RoleControllerManager;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.RemoteCallback;

        $r4 = r0.<android.app.role.RoleControllerManager: com.android.internal.infra.ServiceConnector mRemoteService>;

        $r3 = new android.app.role._$$Lambda$RoleControllerManager$lBbpGLk6PhAvXOnY5bjXhdddZ6Q;

        specialinvoke $r3.<android.app.role._$$Lambda$RoleControllerManager$lBbpGLk6PhAvXOnY5bjXhdddZ6Q: void <init>(java.lang.String,int)>(r1, i0);

        $r5 = interfaceinvoke $r4.<com.android.internal.infra.ServiceConnector: com.android.internal.infra.AndroidFuture postAsync(com.android.internal.infra.ServiceConnector$Job)>($r3);

        specialinvoke r0.<android.app.role.RoleControllerManager: void propagateCallback(com.android.internal.infra.AndroidFuture,java.lang.String,android.os.RemoteCallback)>($r5, "onClearRoleHolders", r2);

        return;
    }

    public void onRemoveRoleHolder(java.lang.String, java.lang.String, int, android.os.RemoteCallback)
    {
        android.app.role.RoleControllerManager r0;
        java.lang.String r1, r2;
        int i0;
        android.os.RemoteCallback r3;
        android.app.role._$$Lambda$RoleControllerManager$_qXKDWwgESwB52qfoJN7JTZsDiU $r4;
        com.android.internal.infra.ServiceConnector $r5;
        com.android.internal.infra.AndroidFuture $r6;

        r0 := @this: android.app.role.RoleControllerManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 := @parameter3: android.os.RemoteCallback;

        $r5 = r0.<android.app.role.RoleControllerManager: com.android.internal.infra.ServiceConnector mRemoteService>;

        $r4 = new android.app.role._$$Lambda$RoleControllerManager$_qXKDWwgESwB52qfoJN7JTZsDiU;

        specialinvoke $r4.<android.app.role._$$Lambda$RoleControllerManager$_qXKDWwgESwB52qfoJN7JTZsDiU: void <init>(java.lang.String,java.lang.String,int)>(r1, r2, i0);

        $r6 = interfaceinvoke $r5.<com.android.internal.infra.ServiceConnector: com.android.internal.infra.AndroidFuture postAsync(com.android.internal.infra.ServiceConnector$Job)>($r4);

        specialinvoke r0.<android.app.role.RoleControllerManager: void propagateCallback(com.android.internal.infra.AndroidFuture,java.lang.String,android.os.RemoteCallback)>($r6, "onRemoveRoleHolder", r3);

        return;
    }
}
