class android.app.role.RoleControllerService$1 extends android.app.role.IRoleController$Stub
{
    final android.app.role.RoleControllerService this$0;

    void <init>(android.app.role.RoleControllerService)
    {
        android.app.role.RoleControllerService$1 r0;
        android.app.role.RoleControllerService r1;

        r0 := @this: android.app.role.RoleControllerService$1;

        r1 := @parameter0: android.app.role.RoleControllerService;

        r0.<android.app.role.RoleControllerService$1: android.app.role.RoleControllerService this$0> = r1;

        specialinvoke r0.<android.app.role.IRoleController$Stub: void <init>()>();

        return;
    }

    private void enforceCallerSystemUid(java.lang.String)
    {
        android.app.role.RoleControllerService$1 r0;
        java.lang.String r1, $r8;
        int $i0;
        java.lang.StringBuilder $r3;
        java.lang.SecurityException $r7;

        r0 := @this: android.app.role.RoleControllerService$1;

        r1 := @parameter0: java.lang.String;

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if $i0 != 1000 goto label1;

        return;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Only the system process can call ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("()");

        $r7 = new java.lang.SecurityException;

        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.SecurityException: void <init>(java.lang.String)>($r8);

        throw $r7;
    }

    static void lambda$grantDefaultRoles$0(java.lang.Object, android.os.RemoteCallback)
    {
        java.lang.Object r0;
        android.os.RemoteCallback r1;
        android.app.role.RoleControllerService $r2;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: android.os.RemoteCallback;

        $r2 = (android.app.role.RoleControllerService) r0;

        staticinvoke <android.app.role.RoleControllerService: void access$400(android.app.role.RoleControllerService,android.os.RemoteCallback)>($r2, r1);

        return;
    }

    static void lambda$onAddRoleHolder$1(java.lang.Object, java.lang.String, java.lang.String, int, android.os.RemoteCallback)
    {
        java.lang.Object r0;
        java.lang.String r1, r2;
        int i0;
        android.os.RemoteCallback r3;
        android.app.role.RoleControllerService $r4;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        r3 := @parameter4: android.os.RemoteCallback;

        $r4 = (android.app.role.RoleControllerService) r0;

        staticinvoke <android.app.role.RoleControllerService: void access$300(android.app.role.RoleControllerService,java.lang.String,java.lang.String,int,android.os.RemoteCallback)>($r4, r1, r2, i0, r3);

        return;
    }

    static void lambda$onClearRoleHolders$3(java.lang.Object, java.lang.String, int, android.os.RemoteCallback)
    {
        java.lang.Object r0;
        java.lang.String r1;
        int i0;
        android.os.RemoteCallback r2;
        android.app.role.RoleControllerService $r3;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r2 := @parameter3: android.os.RemoteCallback;

        $r3 = (android.app.role.RoleControllerService) r0;

        staticinvoke <android.app.role.RoleControllerService: void access$100(android.app.role.RoleControllerService,java.lang.String,int,android.os.RemoteCallback)>($r3, r1, i0, r2);

        return;
    }

    static void lambda$onRemoveRoleHolder$2(java.lang.Object, java.lang.String, java.lang.String, int, android.os.RemoteCallback)
    {
        java.lang.Object r0;
        java.lang.String r1, r2;
        int i0;
        android.os.RemoteCallback r3;
        android.app.role.RoleControllerService $r4;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        r3 := @parameter4: android.os.RemoteCallback;

        $r4 = (android.app.role.RoleControllerService) r0;

        staticinvoke <android.app.role.RoleControllerService: void access$200(android.app.role.RoleControllerService,java.lang.String,java.lang.String,int,android.os.RemoteCallback)>($r4, r1, r2, i0, r3);

        return;
    }

    public void grantDefaultRoles(android.os.RemoteCallback)
    {
        android.app.role.RoleControllerService$1 r0;
        android.os.RemoteCallback r1;
        android.app.role.RoleControllerService $r3, $r5;
        android.os.Handler $r4;
        android.app.role.'-$$Lambda$RoleControllerService$1$-fmj7uDKaG3BoLl6bhtrA675gRI' $r6;
        android.os.Message $r7;
        java.util.function.BiConsumer r8;

        r0 := @this: android.app.role.RoleControllerService$1;

        r1 := @parameter0: android.os.RemoteCallback;

        specialinvoke r0.<android.app.role.RoleControllerService$1: void enforceCallerSystemUid(java.lang.String)>("grantDefaultRoles");

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, "callback cannot be null");

        $r3 = r0.<android.app.role.RoleControllerService$1: android.app.role.RoleControllerService this$0>;

        $r4 = staticinvoke <android.app.role.RoleControllerService: android.os.Handler access$000(android.app.role.RoleControllerService)>($r3);

        $r6 = <android.app.role._$$Lambda$RoleControllerService$1$_fmj7uDKaG3BoLl6bhtrA675gRI: android.app.role.'-$$Lambda$RoleControllerService$1$-fmj7uDKaG3BoLl6bhtrA675gRI' INSTANCE>;

        $r5 = r0.<android.app.role.RoleControllerService$1: android.app.role.RoleControllerService this$0>;

        r8 = (java.util.function.BiConsumer) $r6;

        $r7 = staticinvoke <com.android.internal.util.function.pooled.PooledLambda: android.os.Message obtainMessage(java.util.function.BiConsumer,java.lang.Object,java.lang.Object)>(r8, $r5, r1);

        virtualinvoke $r4.<android.os.Handler: boolean sendMessage(android.os.Message)>($r7);

        return;
    }

    public void isApplicationQualifiedForRole(java.lang.String, java.lang.String, android.os.RemoteCallback)
    {
        android.app.role.RoleControllerService$1 r0;
        java.lang.String r1, r2;
        android.os.RemoteCallback r3;
        android.app.role.RoleControllerService r4, $r8;
        boolean $z0;
        android.os.Bundle r9;

        r0 := @this: android.app.role.RoleControllerService$1;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.RemoteCallback;

        r4 = r0.<android.app.role.RoleControllerService$1: android.app.role.RoleControllerService this$0>;

        r9 = null;

        virtualinvoke r4.<android.app.role.RoleControllerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.MANAGE_ROLE_HOLDERS", null);

        staticinvoke <com.android.internal.util.Preconditions: java.lang.CharSequence checkStringNotEmpty(java.lang.CharSequence,java.lang.Object)>(r1, "roleName cannot be null or empty");

        staticinvoke <com.android.internal.util.Preconditions: java.lang.CharSequence checkStringNotEmpty(java.lang.CharSequence,java.lang.Object)>(r2, "packageName cannot be null or empty");

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r3, "callback cannot be null");

        $r8 = r0.<android.app.role.RoleControllerService$1: android.app.role.RoleControllerService this$0>;

        $z0 = virtualinvoke $r8.<android.app.role.RoleControllerService: boolean onIsApplicationQualifiedForRole(java.lang.String,java.lang.String)>(r1, r2);

        if $z0 == 0 goto label1;

        r9 = <android.os.Bundle: android.os.Bundle EMPTY>;

     label1:
        virtualinvoke r3.<android.os.RemoteCallback: void sendResult(android.os.Bundle)>(r9);

        return;
    }

    public void isApplicationVisibleForRole(java.lang.String, java.lang.String, android.os.RemoteCallback)
    {
        android.app.role.RoleControllerService$1 r0;
        java.lang.String r1, r2;
        android.os.RemoteCallback r3;
        android.app.role.RoleControllerService r4, $r8;
        boolean $z0;
        android.os.Bundle r9;

        r0 := @this: android.app.role.RoleControllerService$1;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.RemoteCallback;

        r4 = r0.<android.app.role.RoleControllerService$1: android.app.role.RoleControllerService this$0>;

        r9 = null;

        virtualinvoke r4.<android.app.role.RoleControllerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.MANAGE_ROLE_HOLDERS", null);

        staticinvoke <com.android.internal.util.Preconditions: java.lang.CharSequence checkStringNotEmpty(java.lang.CharSequence,java.lang.Object)>(r1, "roleName cannot be null or empty");

        staticinvoke <com.android.internal.util.Preconditions: java.lang.CharSequence checkStringNotEmpty(java.lang.CharSequence,java.lang.Object)>(r2, "packageName cannot be null or empty");

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r3, "callback cannot be null");

        $r8 = r0.<android.app.role.RoleControllerService$1: android.app.role.RoleControllerService this$0>;

        $z0 = virtualinvoke $r8.<android.app.role.RoleControllerService: boolean onIsApplicationVisibleForRole(java.lang.String,java.lang.String)>(r1, r2);

        if $z0 == 0 goto label1;

        r9 = <android.os.Bundle: android.os.Bundle EMPTY>;

     label1:
        virtualinvoke r3.<android.os.RemoteCallback: void sendResult(android.os.Bundle)>(r9);

        return;
    }

    public void isRoleVisible(java.lang.String, android.os.RemoteCallback)
    {
        android.app.role.RoleControllerService$1 r0;
        java.lang.String r1;
        android.os.RemoteCallback r2;
        android.app.role.RoleControllerService r3, $r6;
        boolean $z0;
        android.os.Bundle r7;

        r0 := @this: android.app.role.RoleControllerService$1;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.RemoteCallback;

        r3 = r0.<android.app.role.RoleControllerService$1: android.app.role.RoleControllerService this$0>;

        r7 = null;

        virtualinvoke r3.<android.app.role.RoleControllerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.MANAGE_ROLE_HOLDERS", null);

        staticinvoke <com.android.internal.util.Preconditions: java.lang.CharSequence checkStringNotEmpty(java.lang.CharSequence,java.lang.Object)>(r1, "roleName cannot be null or empty");

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r2, "callback cannot be null");

        $r6 = r0.<android.app.role.RoleControllerService$1: android.app.role.RoleControllerService this$0>;

        $z0 = virtualinvoke $r6.<android.app.role.RoleControllerService: boolean onIsRoleVisible(java.lang.String)>(r1);

        if $z0 == 0 goto label1;

        r7 = <android.os.Bundle: android.os.Bundle EMPTY>;

     label1:
        virtualinvoke r2.<android.os.RemoteCallback: void sendResult(android.os.Bundle)>(r7);

        return;
    }

    public void onAddRoleHolder(java.lang.String, java.lang.String, int, android.os.RemoteCallback)
    {
        android.app.role.RoleControllerService$1 r0;
        java.lang.String r1, r2;
        int i0;
        android.os.RemoteCallback r3;
        android.app.role.RoleControllerService $r7, $r10;
        android.os.Handler $r8;
        android.app.role.'-$$Lambda$RoleControllerService$1$UVI1sAWAcBnt3Enqn2IT-Lirwtk' $r9;
        java.lang.Integer $r11;
        android.os.Message $r12;
        com.android.internal.util.function.QuintConsumer r13;

        r0 := @this: android.app.role.RoleControllerService$1;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 := @parameter3: android.os.RemoteCallback;

        specialinvoke r0.<android.app.role.RoleControllerService$1: void enforceCallerSystemUid(java.lang.String)>("onAddRoleHolder");

        staticinvoke <com.android.internal.util.Preconditions: java.lang.CharSequence checkStringNotEmpty(java.lang.CharSequence,java.lang.Object)>(r1, "roleName cannot be null or empty");

        staticinvoke <com.android.internal.util.Preconditions: java.lang.CharSequence checkStringNotEmpty(java.lang.CharSequence,java.lang.Object)>(r2, "packageName cannot be null or empty");

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r3, "callback cannot be null");

        $r7 = r0.<android.app.role.RoleControllerService$1: android.app.role.RoleControllerService this$0>;

        $r8 = staticinvoke <android.app.role.RoleControllerService: android.os.Handler access$000(android.app.role.RoleControllerService)>($r7);

        $r9 = <android.app.role._$$Lambda$RoleControllerService$1$UVI1sAWAcBnt3Enqn2IT_Lirwtk: android.app.role.'-$$Lambda$RoleControllerService$1$UVI1sAWAcBnt3Enqn2IT-Lirwtk' INSTANCE>;

        $r10 = r0.<android.app.role.RoleControllerService$1: android.app.role.RoleControllerService this$0>;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        r13 = (com.android.internal.util.function.QuintConsumer) $r9;

        $r12 = staticinvoke <com.android.internal.util.function.pooled.PooledLambda: android.os.Message obtainMessage(com.android.internal.util.function.QuintConsumer,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(r13, $r10, r1, r2, $r11, r3);

        virtualinvoke $r8.<android.os.Handler: boolean sendMessage(android.os.Message)>($r12);

        return;
    }

    public void onClearRoleHolders(java.lang.String, int, android.os.RemoteCallback)
    {
        android.app.role.RoleControllerService$1 r0;
        java.lang.String r1;
        int i0;
        android.os.RemoteCallback r2;
        android.app.role.RoleControllerService $r5, $r8;
        android.os.Handler $r6;
        android.app.role.'-$$Lambda$RoleControllerService$1$dBm1t_MGyEA9yMAxoOUMOhYVmPo' $r7;
        java.lang.Integer $r9;
        android.os.Message $r10;
        com.android.internal.util.function.QuadConsumer r11;

        r0 := @this: android.app.role.RoleControllerService$1;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.RemoteCallback;

        specialinvoke r0.<android.app.role.RoleControllerService$1: void enforceCallerSystemUid(java.lang.String)>("onClearRoleHolders");

        staticinvoke <com.android.internal.util.Preconditions: java.lang.CharSequence checkStringNotEmpty(java.lang.CharSequence,java.lang.Object)>(r1, "roleName cannot be null or empty");

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r2, "callback cannot be null");

        $r5 = r0.<android.app.role.RoleControllerService$1: android.app.role.RoleControllerService this$0>;

        $r6 = staticinvoke <android.app.role.RoleControllerService: android.os.Handler access$000(android.app.role.RoleControllerService)>($r5);

        $r7 = <android.app.role._$$Lambda$RoleControllerService$1$dBm1t_MGyEA9yMAxoOUMOhYVmPo: android.app.role.'-$$Lambda$RoleControllerService$1$dBm1t_MGyEA9yMAxoOUMOhYVmPo' INSTANCE>;

        $r8 = r0.<android.app.role.RoleControllerService$1: android.app.role.RoleControllerService this$0>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        r11 = (com.android.internal.util.function.QuadConsumer) $r7;

        $r10 = staticinvoke <com.android.internal.util.function.pooled.PooledLambda: android.os.Message obtainMessage(com.android.internal.util.function.QuadConsumer,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(r11, $r8, r1, $r9, r2);

        virtualinvoke $r6.<android.os.Handler: boolean sendMessage(android.os.Message)>($r10);

        return;
    }

    public void onRemoveRoleHolder(java.lang.String, java.lang.String, int, android.os.RemoteCallback)
    {
        android.app.role.RoleControllerService$1 r0;
        java.lang.String r1, r2;
        int i0;
        android.os.RemoteCallback r3;
        android.app.role.RoleControllerService $r7, $r10;
        android.os.Handler $r8;
        android.app.role.'-$$Lambda$RoleControllerService$1$PB6H1df6VvLzUJ3hhB_75mN3u7s' $r9;
        java.lang.Integer $r11;
        android.os.Message $r12;
        com.android.internal.util.function.QuintConsumer r13;

        r0 := @this: android.app.role.RoleControllerService$1;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 := @parameter3: android.os.RemoteCallback;

        specialinvoke r0.<android.app.role.RoleControllerService$1: void enforceCallerSystemUid(java.lang.String)>("onRemoveRoleHolder");

        staticinvoke <com.android.internal.util.Preconditions: java.lang.CharSequence checkStringNotEmpty(java.lang.CharSequence,java.lang.Object)>(r1, "roleName cannot be null or empty");

        staticinvoke <com.android.internal.util.Preconditions: java.lang.CharSequence checkStringNotEmpty(java.lang.CharSequence,java.lang.Object)>(r2, "packageName cannot be null or empty");

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r3, "callback cannot be null");

        $r7 = r0.<android.app.role.RoleControllerService$1: android.app.role.RoleControllerService this$0>;

        $r8 = staticinvoke <android.app.role.RoleControllerService: android.os.Handler access$000(android.app.role.RoleControllerService)>($r7);

        $r9 = <android.app.role._$$Lambda$RoleControllerService$1$PB6H1df6VvLzUJ3hhB_75mN3u7s: android.app.role.'-$$Lambda$RoleControllerService$1$PB6H1df6VvLzUJ3hhB_75mN3u7s' INSTANCE>;

        $r10 = r0.<android.app.role.RoleControllerService$1: android.app.role.RoleControllerService this$0>;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        r13 = (com.android.internal.util.function.QuintConsumer) $r9;

        $r12 = staticinvoke <com.android.internal.util.function.pooled.PooledLambda: android.os.Message obtainMessage(com.android.internal.util.function.QuintConsumer,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(r13, $r10, r1, r2, $r11, r3);

        virtualinvoke $r8.<android.os.Handler: boolean sendMessage(android.os.Message)>($r12);

        return;
    }
}
