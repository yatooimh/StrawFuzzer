public abstract class android.app.role.RoleControllerService extends android.app.Service
{
    public static final java.lang.String SERVICE_INTERFACE;
    private android.os.Handler mWorkerHandler;
    private android.os.HandlerThread mWorkerThread;

    public void <init>()
    {
        android.app.role.RoleControllerService r0;

        r0 := @this: android.app.role.RoleControllerService;

        specialinvoke r0.<android.app.Service: void <init>()>();

        return;
    }

    static android.os.Handler access$000(android.app.role.RoleControllerService)
    {
        android.app.role.RoleControllerService r0;
        android.os.Handler $r1;

        r0 := @parameter0: android.app.role.RoleControllerService;

        $r1 = r0.<android.app.role.RoleControllerService: android.os.Handler mWorkerHandler>;

        return $r1;
    }

    static void access$100(android.app.role.RoleControllerService, java.lang.String, int, android.os.RemoteCallback)
    {
        android.app.role.RoleControllerService r0;
        java.lang.String r1;
        int i0;
        android.os.RemoteCallback r2;

        r0 := @parameter0: android.app.role.RoleControllerService;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r2 := @parameter3: android.os.RemoteCallback;

        specialinvoke r0.<android.app.role.RoleControllerService: void onClearRoleHolders(java.lang.String,int,android.os.RemoteCallback)>(r1, i0, r2);

        return;
    }

    static void access$200(android.app.role.RoleControllerService, java.lang.String, java.lang.String, int, android.os.RemoteCallback)
    {
        android.app.role.RoleControllerService r0;
        java.lang.String r1, r2;
        int i0;
        android.os.RemoteCallback r3;

        r0 := @parameter0: android.app.role.RoleControllerService;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        r3 := @parameter4: android.os.RemoteCallback;

        specialinvoke r0.<android.app.role.RoleControllerService: void onRemoveRoleHolder(java.lang.String,java.lang.String,int,android.os.RemoteCallback)>(r1, r2, i0, r3);

        return;
    }

    static void access$300(android.app.role.RoleControllerService, java.lang.String, java.lang.String, int, android.os.RemoteCallback)
    {
        android.app.role.RoleControllerService r0;
        java.lang.String r1, r2;
        int i0;
        android.os.RemoteCallback r3;

        r0 := @parameter0: android.app.role.RoleControllerService;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        r3 := @parameter4: android.os.RemoteCallback;

        specialinvoke r0.<android.app.role.RoleControllerService: void onAddRoleHolder(java.lang.String,java.lang.String,int,android.os.RemoteCallback)>(r1, r2, i0, r3);

        return;
    }

    static void access$400(android.app.role.RoleControllerService, android.os.RemoteCallback)
    {
        android.app.role.RoleControllerService r0;
        android.os.RemoteCallback r1;

        r0 := @parameter0: android.app.role.RoleControllerService;

        r1 := @parameter1: android.os.RemoteCallback;

        specialinvoke r0.<android.app.role.RoleControllerService: void grantDefaultRoles(android.os.RemoteCallback)>(r1);

        return;
    }

    private void grantDefaultRoles(android.os.RemoteCallback)
    {
        android.app.role.RoleControllerService r0;
        android.os.RemoteCallback r1;
        boolean $z0;
        android.os.Bundle r2;

        r0 := @this: android.app.role.RoleControllerService;

        r1 := @parameter0: android.os.RemoteCallback;

        $z0 = virtualinvoke r0.<android.app.role.RoleControllerService: boolean onGrantDefaultRoles()>();

        if $z0 == 0 goto label1;

        r2 = <android.os.Bundle: android.os.Bundle EMPTY>;

        goto label2;

     label1:
        r2 = null;

     label2:
        virtualinvoke r1.<android.os.RemoteCallback: void sendResult(android.os.Bundle)>(r2);

        return;
    }

    private void onAddRoleHolder(java.lang.String, java.lang.String, int, android.os.RemoteCallback)
    {
        android.app.role.RoleControllerService r0;
        java.lang.String r1, r3;
        int i0;
        android.os.RemoteCallback r2;
        boolean $z0;
        android.os.Bundle r4;

        r0 := @this: android.app.role.RoleControllerService;

        r3 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r2 := @parameter3: android.os.RemoteCallback;

        $z0 = virtualinvoke r0.<android.app.role.RoleControllerService: boolean onAddRoleHolder(java.lang.String,java.lang.String,int)>(r3, r1, i0);

        if $z0 == 0 goto label1;

        r4 = <android.os.Bundle: android.os.Bundle EMPTY>;

        goto label2;

     label1:
        r4 = null;

     label2:
        virtualinvoke r2.<android.os.RemoteCallback: void sendResult(android.os.Bundle)>(r4);

        return;
    }

    private void onClearRoleHolders(java.lang.String, int, android.os.RemoteCallback)
    {
        android.app.role.RoleControllerService r0;
        int i0;
        android.os.RemoteCallback r1;
        boolean $z0;
        java.lang.String r2;
        android.os.Bundle r3;

        r0 := @this: android.app.role.RoleControllerService;

        r2 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 := @parameter2: android.os.RemoteCallback;

        $z0 = virtualinvoke r0.<android.app.role.RoleControllerService: boolean onClearRoleHolders(java.lang.String,int)>(r2, i0);

        if $z0 == 0 goto label1;

        r3 = <android.os.Bundle: android.os.Bundle EMPTY>;

        goto label2;

     label1:
        r3 = null;

     label2:
        virtualinvoke r1.<android.os.RemoteCallback: void sendResult(android.os.Bundle)>(r3);

        return;
    }

    private void onRemoveRoleHolder(java.lang.String, java.lang.String, int, android.os.RemoteCallback)
    {
        android.app.role.RoleControllerService r0;
        java.lang.String r1, r3;
        int i0;
        android.os.RemoteCallback r2;
        boolean $z0;
        android.os.Bundle r4;

        r0 := @this: android.app.role.RoleControllerService;

        r3 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r2 := @parameter3: android.os.RemoteCallback;

        $z0 = virtualinvoke r0.<android.app.role.RoleControllerService: boolean onRemoveRoleHolder(java.lang.String,java.lang.String,int)>(r3, r1, i0);

        if $z0 == 0 goto label1;

        r4 = <android.os.Bundle: android.os.Bundle EMPTY>;

        goto label2;

     label1:
        r4 = null;

     label2:
        virtualinvoke r2.<android.os.RemoteCallback: void sendResult(android.os.Bundle)>(r4);

        return;
    }

    public abstract boolean onAddRoleHolder(java.lang.String, java.lang.String, int);

    public final android.os.IBinder onBind(android.content.Intent)
    {
        android.app.role.RoleControllerService r0;
        android.content.Intent r1;
        android.app.role.RoleControllerService$1 $r2;

        r0 := @this: android.app.role.RoleControllerService;

        r1 := @parameter0: android.content.Intent;

        $r2 = new android.app.role.RoleControllerService$1;

        specialinvoke $r2.<android.app.role.RoleControllerService$1: void <init>(android.app.role.RoleControllerService)>(r0);

        return $r2;
    }

    public abstract boolean onClearRoleHolders(java.lang.String, int);

    public void onCreate()
    {
        android.app.role.RoleControllerService r0;
        android.os.HandlerThread $r2, $r6;
        java.lang.Class $r3;
        java.lang.String $r4;
        android.os.Handler $r5;
        android.os.Looper $r7;

        r0 := @this: android.app.role.RoleControllerService;

        specialinvoke r0.<android.app.Service: void onCreate()>();

        $r2 = new android.os.HandlerThread;

        $r3 = class "Landroid/app/role/RoleControllerService;";

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getSimpleName()>();

        specialinvoke $r2.<android.os.HandlerThread: void <init>(java.lang.String)>($r4);

        r0.<android.app.role.RoleControllerService: android.os.HandlerThread mWorkerThread> = $r2;

        virtualinvoke $r2.<android.os.HandlerThread: void start()>();

        $r5 = new android.os.Handler;

        $r6 = r0.<android.app.role.RoleControllerService: android.os.HandlerThread mWorkerThread>;

        $r7 = virtualinvoke $r6.<android.os.HandlerThread: android.os.Looper getLooper()>();

        specialinvoke $r5.<android.os.Handler: void <init>(android.os.Looper)>($r7);

        r0.<android.app.role.RoleControllerService: android.os.Handler mWorkerHandler> = $r5;

        return;
    }

    public void onDestroy()
    {
        android.app.role.RoleControllerService r0;
        android.os.HandlerThread $r1;

        r0 := @this: android.app.role.RoleControllerService;

        specialinvoke r0.<android.app.Service: void onDestroy()>();

        $r1 = r0.<android.app.role.RoleControllerService: android.os.HandlerThread mWorkerThread>;

        virtualinvoke $r1.<android.os.HandlerThread: boolean quitSafely()>();

        return;
    }

    public abstract boolean onGrantDefaultRoles();

    public abstract boolean onIsApplicationQualifiedForRole(java.lang.String, java.lang.String);

    public boolean onIsApplicationVisibleForRole(java.lang.String, java.lang.String)
    {
        android.app.role.RoleControllerService r0;
        java.lang.String r1, r2;
        boolean $z0;

        r0 := @this: android.app.role.RoleControllerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r0.<android.app.role.RoleControllerService: boolean onIsApplicationQualifiedForRole(java.lang.String,java.lang.String)>(r1, r2);

        return $z0;
    }

    public abstract boolean onIsRoleVisible(java.lang.String);

    public abstract boolean onRemoveRoleHolder(java.lang.String, java.lang.String, int);

    public static void <clinit>()
    {
        <android.app.role.RoleControllerService: java.lang.String SERVICE_INTERFACE> = "android.app.role.RoleControllerService";

        return;
    }
}
