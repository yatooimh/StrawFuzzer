class android.app.servertransaction.ObjectPool extends java.lang.Object
{
    private static final int MAX_POOL_SIZE;
    private static final java.util.Map sPoolMap;
    private static final java.lang.Object sPoolSync;

    static void <clinit>()
    {
        java.lang.Object $r0;
        java.util.HashMap $r1;

        <android.app.servertransaction.ObjectPool: int MAX_POOL_SIZE> = 50;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <android.app.servertransaction.ObjectPool: java.lang.Object sPoolSync> = $r0;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        <android.app.servertransaction.ObjectPool: java.util.Map sPoolMap> = $r1;

        return;
    }

    void <init>()
    {
        android.app.servertransaction.ObjectPool r0;

        r0 := @this: android.app.servertransaction.ObjectPool;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static android.app.servertransaction.ObjectPoolItem obtain(java.lang.Class)
    {
        java.lang.Object r0, $r2, $r3;
        java.util.Map $r1;
        boolean $z0;
        int $i0, $i1;
        java.lang.Throwable $r4;
        java.lang.Class r5;
        java.util.ArrayList r6;
        android.app.servertransaction.ObjectPoolItem r7;

        r5 := @parameter0: java.lang.Class;

        r0 = <android.app.servertransaction.ObjectPool: java.lang.Object sPoolSync>;

        entermonitor r0;

     label1:
        $r1 = <android.app.servertransaction.ObjectPool: java.util.Map sPoolMap>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5);

        r6 = (java.util.ArrayList) $r2;

     label2:
        if r6 == null goto label5;

     label3:
        $z0 = virtualinvoke r6.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 != 0 goto label5;

        $i0 = virtualinvoke r6.<java.util.ArrayList: int size()>();

        $i1 = $i0 - 1;

        $r3 = virtualinvoke r6.<java.util.ArrayList: java.lang.Object remove(int)>($i1);

        r7 = (android.app.servertransaction.ObjectPoolItem) $r3;

        exitmonitor r0;

     label4:
        return r7;

     label5:
        exitmonitor r0;

     label6:
        return null;

     label7:
        $r4 := @caughtexception;

     label8:
        exitmonitor r0;

     label9:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public static void recycle(android.app.servertransaction.ObjectPoolItem)
    {
        java.lang.Object r0, $r4, $r5;
        java.util.ArrayList r1, r11;
        int i0, i1;
        java.util.Map $r2, $r6;
        java.lang.Class $r3, $r7;
        java.lang.Throwable $r9;
        android.app.servertransaction.ObjectPoolItem r10;
        java.lang.IllegalStateException r12;

        r10 := @parameter0: android.app.servertransaction.ObjectPoolItem;

        r0 = <android.app.servertransaction.ObjectPool: java.lang.Object sPoolSync>;

        entermonitor r0;

     label01:
        $r2 = <android.app.servertransaction.ObjectPool: java.util.Map sPoolMap>;

        $r3 = virtualinvoke r10.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        r1 = (java.util.ArrayList) $r4;

     label02:
        r11 = r1;

        if r1 != null goto label05;

     label03:
        r11 = new java.util.ArrayList;

        specialinvoke r11.<java.util.ArrayList: void <init>()>();

     label04:
        $r6 = <android.app.servertransaction.ObjectPool: java.util.Map sPoolMap>;

        $r7 = virtualinvoke r10.<java.lang.Object: java.lang.Class getClass()>();

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, r11);

     label05:
        i0 = virtualinvoke r11.<java.util.ArrayList: int size()>();

     label06:
        i1 = 0;

     label07:
        if i1 >= i0 goto label11;

     label08:
        $r5 = virtualinvoke r11.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        if $r5 == r10 goto label10;

     label09:
        i1 = i1 + 1;

        goto label07;

     label10:
        r12 = new java.lang.IllegalStateException;

        specialinvoke r12.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Trying to recycle already recycled item");

        throw r12;

     label11:
        if i0 >= 50 goto label13;

     label12:
        virtualinvoke r11.<java.util.ArrayList: boolean add(java.lang.Object)>(r10);

     label13:
        exitmonitor r0;

     label14:
        return;

     label15:
        $r9 := @caughtexception;

     label16:
        exitmonitor r0;

     label17:
        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label04 to label05 with label15;
        catch java.lang.Throwable from label05 to label06 with label15;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.lang.Throwable from label12 to label13 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label16 to label17 with label15;
    }
}
