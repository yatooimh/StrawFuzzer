public class android.app.servertransaction.TransactionExecutor extends java.lang.Object
{
    private static final boolean DEBUG_RESOLVER;
    private static final java.lang.String TAG;
    private android.app.servertransaction.TransactionExecutorHelper mHelper;
    private android.app.servertransaction.PendingTransactionActions mPendingActions;
    private android.app.ClientTransactionHandler mTransactionHandler;

    public void <init>(android.app.ClientTransactionHandler)
    {
        android.app.servertransaction.TransactionExecutor r0;
        android.app.ClientTransactionHandler r1;
        android.app.servertransaction.PendingTransactionActions $r2;
        android.app.servertransaction.TransactionExecutorHelper $r3;

        r0 := @this: android.app.servertransaction.TransactionExecutor;

        r1 := @parameter0: android.app.ClientTransactionHandler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new android.app.servertransaction.PendingTransactionActions;

        specialinvoke $r2.<android.app.servertransaction.PendingTransactionActions: void <init>()>();

        r0.<android.app.servertransaction.TransactionExecutor: android.app.servertransaction.PendingTransactionActions mPendingActions> = $r2;

        $r3 = new android.app.servertransaction.TransactionExecutorHelper;

        specialinvoke $r3.<android.app.servertransaction.TransactionExecutorHelper: void <init>()>();

        r0.<android.app.servertransaction.TransactionExecutor: android.app.servertransaction.TransactionExecutorHelper mHelper> = $r3;

        r0.<android.app.servertransaction.TransactionExecutor: android.app.ClientTransactionHandler mTransactionHandler> = r1;

        return;
    }

    private void cycleToPath(android.app.ActivityThread$ActivityClientRecord, int, boolean, android.app.servertransaction.ClientTransaction)
    {
        android.app.servertransaction.TransactionExecutor r0;
        android.app.ActivityThread$ActivityClientRecord r1;
        int i0, i1;
        boolean z0;
        android.app.servertransaction.ClientTransaction r2;
        android.app.servertransaction.TransactionExecutorHelper $r3;
        android.util.IntArray $r4;

        r0 := @this: android.app.servertransaction.TransactionExecutor;

        r1 := @parameter0: android.app.ActivityThread$ActivityClientRecord;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        r2 := @parameter3: android.app.servertransaction.ClientTransaction;

        i1 = virtualinvoke r1.<android.app.ActivityThread$ActivityClientRecord: int getLifecycleState()>();

        $r3 = r0.<android.app.servertransaction.TransactionExecutor: android.app.servertransaction.TransactionExecutorHelper mHelper>;

        $r4 = virtualinvoke $r3.<android.app.servertransaction.TransactionExecutorHelper: android.util.IntArray getLifecyclePath(int,int,boolean)>(i1, i0, z0);

        specialinvoke r0.<android.app.servertransaction.TransactionExecutor: void performLifecycleSequence(android.app.ActivityThread$ActivityClientRecord,android.util.IntArray,android.app.servertransaction.ClientTransaction)>(r1, $r4, r2);

        return;
    }

    private void executeLifecycleState(android.app.servertransaction.ClientTransaction)
    {
        android.app.servertransaction.TransactionExecutor r0;
        android.app.servertransaction.ClientTransaction r1;
        android.app.servertransaction.ActivityLifecycleItem r2;
        android.os.IBinder r3;
        android.app.ActivityThread$ActivityClientRecord r4;
        android.app.ClientTransactionHandler $r5, $r7, $r9;
        int $i0;
        android.app.servertransaction.PendingTransactionActions $r6, $r8;

        r0 := @this: android.app.servertransaction.TransactionExecutor;

        r1 := @parameter0: android.app.servertransaction.ClientTransaction;

        r2 = virtualinvoke r1.<android.app.servertransaction.ClientTransaction: android.app.servertransaction.ActivityLifecycleItem getLifecycleStateRequest()>();

        if r2 != null goto label1;

        return;

     label1:
        r3 = virtualinvoke r1.<android.app.servertransaction.ClientTransaction: android.os.IBinder getActivityToken()>();

        $r5 = r0.<android.app.servertransaction.TransactionExecutor: android.app.ClientTransactionHandler mTransactionHandler>;

        r4 = virtualinvoke $r5.<android.app.ClientTransactionHandler: android.app.ActivityThread$ActivityClientRecord getActivityClient(android.os.IBinder)>(r3);

        if r4 != null goto label2;

        return;

     label2:
        $i0 = virtualinvoke r2.<android.app.servertransaction.ActivityLifecycleItem: int getTargetState()>();

        specialinvoke r0.<android.app.servertransaction.TransactionExecutor: void cycleToPath(android.app.ActivityThread$ActivityClientRecord,int,boolean,android.app.servertransaction.ClientTransaction)>(r4, $i0, 1, r1);

        $r7 = r0.<android.app.servertransaction.TransactionExecutor: android.app.ClientTransactionHandler mTransactionHandler>;

        $r6 = r0.<android.app.servertransaction.TransactionExecutor: android.app.servertransaction.PendingTransactionActions mPendingActions>;

        virtualinvoke r2.<android.app.servertransaction.ActivityLifecycleItem: void execute(android.app.ClientTransactionHandler,android.os.IBinder,android.app.servertransaction.PendingTransactionActions)>($r7, r3, $r6);

        $r9 = r0.<android.app.servertransaction.TransactionExecutor: android.app.ClientTransactionHandler mTransactionHandler>;

        $r8 = r0.<android.app.servertransaction.TransactionExecutor: android.app.servertransaction.PendingTransactionActions mPendingActions>;

        virtualinvoke r2.<android.app.servertransaction.ActivityLifecycleItem: void postExecute(android.app.ClientTransactionHandler,android.os.IBinder,android.app.servertransaction.PendingTransactionActions)>($r9, r3, $r8);

        return;
    }

    private void performLifecycleSequence(android.app.ActivityThread$ActivityClientRecord, android.util.IntArray, android.app.servertransaction.ClientTransaction)
    {
        android.app.servertransaction.TransactionExecutor r0;
        android.util.IntArray r1;
        int i0, i1, $i2, $i3, i4;
        android.os.IBinder r2, $r4, $r11, $r14, $r16, $r19;
        android.app.ClientTransactionHandler $r5, $r12, $r15, $r17, $r20, $r22, r32;
        java.lang.StringBuilder $r6, $r24;
        java.lang.String $r9, $r28;
        android.app.servertransaction.PendingTransactionActions $r10, $r13, $r18, $r21;
        boolean $z0;
        java.lang.IllegalArgumentException $r27;
        android.app.ActivityThread$ActivityClientRecord r29;
        android.app.servertransaction.ClientTransaction r30;

        r0 := @this: android.app.servertransaction.TransactionExecutor;

        r29 := @parameter0: android.app.ActivityThread$ActivityClientRecord;

        r1 := @parameter1: android.util.IntArray;

        r30 := @parameter2: android.app.servertransaction.ClientTransaction;

        i0 = virtualinvoke r1.<android.util.IntArray: int size()>();

        i4 = 0;

     label01:
        if i4 >= i0 goto label11;

        i1 = virtualinvoke r1.<android.util.IntArray: int get(int)>(i4);

        tableswitch(i1)
        {
            case 1: goto label09;
            case 2: goto label08;
            case 3: goto label07;
            case 4: goto label06;
            case 5: goto label05;
            case 6: goto label04;
            case 7: goto label03;
            default: goto label02;
        };

     label02:
        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected lifecycle state: ");

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r27 = new java.lang.IllegalArgumentException;

        $r28 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r27.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r28);

        throw $r27;

     label03:
        $r5 = r0.<android.app.servertransaction.TransactionExecutor: android.app.ClientTransactionHandler mTransactionHandler>;

        $r4 = r29.<android.app.ActivityThread$ActivityClientRecord: android.os.IBinder token>;

        virtualinvoke $r5.<android.app.ClientTransactionHandler: void performRestartActivity(android.os.IBinder,boolean)>($r4, 0);

        goto label10;

     label04:
        r32 = r0.<android.app.servertransaction.TransactionExecutor: android.app.ClientTransactionHandler mTransactionHandler>;

        r2 = r29.<android.app.ActivityThread$ActivityClientRecord: android.os.IBinder token>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("performLifecycleSequence. cycling to:");

        $i2 = i0 - 1;

        $i3 = virtualinvoke r1.<android.util.IntArray: int get(int)>($i2);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r32.<android.app.ClientTransactionHandler: void handleDestroyActivity(android.os.IBinder,boolean,int,boolean,java.lang.String)>(r2, 0, 0, 0, $r9);

        goto label10;

     label05:
        $r12 = r0.<android.app.servertransaction.TransactionExecutor: android.app.ClientTransactionHandler mTransactionHandler>;

        $r11 = r29.<android.app.ActivityThread$ActivityClientRecord: android.os.IBinder token>;

        $r10 = r0.<android.app.servertransaction.TransactionExecutor: android.app.servertransaction.PendingTransactionActions mPendingActions>;

        virtualinvoke $r12.<android.app.ClientTransactionHandler: void handleStopActivity(android.os.IBinder,int,android.app.servertransaction.PendingTransactionActions,boolean,java.lang.String)>($r11, 0, $r10, 0, "LIFECYCLER_STOP_ACTIVITY");

        goto label10;

     label06:
        $r15 = r0.<android.app.servertransaction.TransactionExecutor: android.app.ClientTransactionHandler mTransactionHandler>;

        $r14 = r29.<android.app.ActivityThread$ActivityClientRecord: android.os.IBinder token>;

        $r13 = r0.<android.app.servertransaction.TransactionExecutor: android.app.servertransaction.PendingTransactionActions mPendingActions>;

        virtualinvoke $r15.<android.app.ClientTransactionHandler: void handlePauseActivity(android.os.IBinder,boolean,boolean,int,android.app.servertransaction.PendingTransactionActions,java.lang.String)>($r14, 0, 0, 0, $r13, "LIFECYCLER_PAUSE_ACTIVITY");

        goto label10;

     label07:
        $r17 = r0.<android.app.servertransaction.TransactionExecutor: android.app.ClientTransactionHandler mTransactionHandler>;

        $r16 = r29.<android.app.ActivityThread$ActivityClientRecord: android.os.IBinder token>;

        $z0 = r29.<android.app.ActivityThread$ActivityClientRecord: boolean isForward>;

        virtualinvoke $r17.<android.app.ClientTransactionHandler: void handleResumeActivity(android.os.IBinder,boolean,boolean,java.lang.String)>($r16, 0, $z0, "LIFECYCLER_RESUME_ACTIVITY");

        goto label10;

     label08:
        $r20 = r0.<android.app.servertransaction.TransactionExecutor: android.app.ClientTransactionHandler mTransactionHandler>;

        $r19 = r29.<android.app.ActivityThread$ActivityClientRecord: android.os.IBinder token>;

        $r18 = r0.<android.app.servertransaction.TransactionExecutor: android.app.servertransaction.PendingTransactionActions mPendingActions>;

        virtualinvoke $r20.<android.app.ClientTransactionHandler: void handleStartActivity(android.os.IBinder,android.app.servertransaction.PendingTransactionActions)>($r19, $r18);

        goto label10;

     label09:
        $r22 = r0.<android.app.servertransaction.TransactionExecutor: android.app.ClientTransactionHandler mTransactionHandler>;

        $r21 = r0.<android.app.servertransaction.TransactionExecutor: android.app.servertransaction.PendingTransactionActions mPendingActions>;

        virtualinvoke $r22.<android.app.ClientTransactionHandler: android.app.Activity handleLaunchActivity(android.app.ActivityThread$ActivityClientRecord,android.app.servertransaction.PendingTransactionActions,android.content.Intent)>(r29, $r21, null);

     label10:
        i4 = i4 + 1;

        goto label01;

     label11:
        return;
    }

    public void cycleToPath(android.app.ActivityThread$ActivityClientRecord, int, android.app.servertransaction.ClientTransaction)
    {
        android.app.servertransaction.TransactionExecutor r0;
        android.app.ActivityThread$ActivityClientRecord r1;
        int i0;
        android.app.servertransaction.ClientTransaction r2;

        r0 := @this: android.app.servertransaction.TransactionExecutor;

        r1 := @parameter0: android.app.ActivityThread$ActivityClientRecord;

        i0 := @parameter1: int;

        r2 := @parameter2: android.app.servertransaction.ClientTransaction;

        specialinvoke r0.<android.app.servertransaction.TransactionExecutor: void cycleToPath(android.app.ActivityThread$ActivityClientRecord,int,boolean,android.app.servertransaction.ClientTransaction)>(r1, i0, 0, r2);

        return;
    }

    public void execute(android.app.servertransaction.ClientTransaction)
    {
        android.app.servertransaction.TransactionExecutor r0;
        android.app.servertransaction.ClientTransaction r1;
        android.os.IBinder r2;
        java.util.Map r3;
        android.app.ClientTransactionHandler $r4, $r7, $r13;
        java.lang.Object $r5;
        android.app.servertransaction.ActivityLifecycleItem $r6;
        android.app.ActivityThread$ActivityClientRecord $r8;
        java.lang.StringBuilder $r9;
        java.lang.String $r10, $r14, $r16;
        android.app.servertransaction.ClientTransactionItem r18;
        android.app.servertransaction.PendingTransactionActions $r20;

        r0 := @this: android.app.servertransaction.TransactionExecutor;

        r1 := @parameter0: android.app.servertransaction.ClientTransaction;

        r2 = virtualinvoke r1.<android.app.servertransaction.ClientTransaction: android.os.IBinder getActivityToken()>();

        if r2 == null goto label2;

        $r4 = r0.<android.app.servertransaction.TransactionExecutor: android.app.ClientTransactionHandler mTransactionHandler>;

        r3 = virtualinvoke $r4.<android.app.ClientTransactionHandler: java.util.Map getActivitiesToBeDestroyed()>();

        $r5 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        r18 = (android.app.servertransaction.ClientTransactionItem) $r5;

        if r18 == null goto label2;

        $r6 = virtualinvoke r1.<android.app.servertransaction.ClientTransaction: android.app.servertransaction.ActivityLifecycleItem getLifecycleStateRequest()>();

        if $r6 != r18 goto label1;

        interfaceinvoke r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r2);

     label1:
        $r7 = r0.<android.app.servertransaction.TransactionExecutor: android.app.ClientTransactionHandler mTransactionHandler>;

        $r8 = virtualinvoke $r7.<android.app.ClientTransactionHandler: android.app.ActivityThread$ActivityClientRecord getActivityClient(android.os.IBinder)>(r2);

        if $r8 != null goto label2;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = staticinvoke <android.app.servertransaction.TransactionExecutorHelper: java.lang.String tId(android.app.servertransaction.ClientTransaction)>(r1);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skip pre-destroyed transaction:\n");

        $r13 = r0.<android.app.servertransaction.TransactionExecutor: android.app.ClientTransactionHandler mTransactionHandler>;

        $r14 = staticinvoke <android.app.servertransaction.TransactionExecutorHelper: java.lang.String transactionToString(android.app.servertransaction.ClientTransaction,android.app.ClientTransactionHandler)>(r1, $r13);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("TransactionExecutor", $r16);

        return;

     label2:
        virtualinvoke r0.<android.app.servertransaction.TransactionExecutor: void executeCallbacks(android.app.servertransaction.ClientTransaction)>(r1);

        specialinvoke r0.<android.app.servertransaction.TransactionExecutor: void executeLifecycleState(android.app.servertransaction.ClientTransaction)>(r1);

        $r20 = r0.<android.app.servertransaction.TransactionExecutor: android.app.servertransaction.PendingTransactionActions mPendingActions>;

        virtualinvoke $r20.<android.app.servertransaction.PendingTransactionActions: void clear()>();

        return;
    }

    public void executeCallbacks(android.app.servertransaction.ClientTransaction)
    {
        android.app.servertransaction.TransactionExecutor r0;
        android.app.servertransaction.ClientTransaction r1;
        java.util.List r2;
        android.os.IBinder r3;
        int i0, i1, i2, i3, $i4, i5, i6;
        boolean $z0, z1;
        android.app.ClientTransactionHandler $r4, $r8, $r10, $r11;
        java.lang.Object $r5;
        android.app.servertransaction.TransactionExecutorHelper $r6;
        android.app.servertransaction.PendingTransactionActions $r7, $r9;
        android.app.ActivityThread$ActivityClientRecord r12, r15;
        android.app.servertransaction.ActivityLifecycleItem r13;
        android.app.servertransaction.ClientTransactionItem r14;

        r0 := @this: android.app.servertransaction.TransactionExecutor;

        r1 := @parameter0: android.app.servertransaction.ClientTransaction;

        r2 = virtualinvoke r1.<android.app.servertransaction.ClientTransaction: java.util.List getCallbacks()>();

        if r2 == null goto label11;

        $z0 = interfaceinvoke r2.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label01;

        goto label11;

     label01:
        r3 = virtualinvoke r1.<android.app.servertransaction.ClientTransaction: android.os.IBinder getActivityToken()>();

        $r4 = r0.<android.app.servertransaction.TransactionExecutor: android.app.ClientTransactionHandler mTransactionHandler>;

        r12 = virtualinvoke $r4.<android.app.ClientTransactionHandler: android.app.ActivityThread$ActivityClientRecord getActivityClient(android.os.IBinder)>(r3);

        r13 = virtualinvoke r1.<android.app.servertransaction.ClientTransaction: android.app.servertransaction.ActivityLifecycleItem getLifecycleStateRequest()>();

        if r13 == null goto label02;

        i5 = virtualinvoke r13.<android.app.servertransaction.ActivityLifecycleItem: int getTargetState()>();

        goto label03;

     label02:
        i5 = -1;

     label03:
        i0 = staticinvoke <android.app.servertransaction.TransactionExecutorHelper: int lastCallbackRequestingState(android.app.servertransaction.ClientTransaction)>(r1);

        i1 = interfaceinvoke r2.<java.util.List: int size()>();

        i6 = 0;

     label04:
        if i6 >= i1 goto label10;

        $r5 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i6);

        r14 = (android.app.servertransaction.ClientTransactionItem) $r5;

        i2 = virtualinvoke r14.<android.app.servertransaction.ClientTransactionItem: int getPostExecutionState()>();

        $r6 = r0.<android.app.servertransaction.TransactionExecutor: android.app.servertransaction.TransactionExecutorHelper mHelper>;

        $i4 = virtualinvoke r14.<android.app.servertransaction.ClientTransactionItem: int getPostExecutionState()>();

        i3 = virtualinvoke $r6.<android.app.servertransaction.TransactionExecutorHelper: int getClosestPreExecutionState(android.app.ActivityThread$ActivityClientRecord,int)>(r12, $i4);

        if i3 == -1 goto label05;

        virtualinvoke r0.<android.app.servertransaction.TransactionExecutor: void cycleToPath(android.app.ActivityThread$ActivityClientRecord,int,android.app.servertransaction.ClientTransaction)>(r12, i3, r1);

     label05:
        $r8 = r0.<android.app.servertransaction.TransactionExecutor: android.app.ClientTransactionHandler mTransactionHandler>;

        $r7 = r0.<android.app.servertransaction.TransactionExecutor: android.app.servertransaction.PendingTransactionActions mPendingActions>;

        virtualinvoke r14.<android.app.servertransaction.ClientTransactionItem: void execute(android.app.ClientTransactionHandler,android.os.IBinder,android.app.servertransaction.PendingTransactionActions)>($r8, r3, $r7);

        $r10 = r0.<android.app.servertransaction.TransactionExecutor: android.app.ClientTransactionHandler mTransactionHandler>;

        $r9 = r0.<android.app.servertransaction.TransactionExecutor: android.app.servertransaction.PendingTransactionActions mPendingActions>;

        virtualinvoke r14.<android.app.servertransaction.ClientTransactionItem: void postExecute(android.app.ClientTransactionHandler,android.os.IBinder,android.app.servertransaction.PendingTransactionActions)>($r10, r3, $r9);

        r15 = r12;

        if r12 != null goto label06;

        $r11 = r0.<android.app.servertransaction.TransactionExecutor: android.app.ClientTransactionHandler mTransactionHandler>;

        r15 = virtualinvoke $r11.<android.app.ClientTransactionHandler: android.app.ActivityThread$ActivityClientRecord getActivityClient(android.os.IBinder)>(r3);

     label06:
        if i2 == -1 goto label09;

        if r15 == null goto label09;

        if i6 != i0 goto label07;

        if i5 != i2 goto label07;

        z1 = 1;

        goto label08;

     label07:
        z1 = 0;

     label08:
        specialinvoke r0.<android.app.servertransaction.TransactionExecutor: void cycleToPath(android.app.ActivityThread$ActivityClientRecord,int,boolean,android.app.servertransaction.ClientTransaction)>(r15, i2, z1, r1);

     label09:
        i6 = i6 + 1;

        r12 = r15;

        goto label04;

     label10:
        return;

     label11:
        return;
    }

    public static void <clinit>()
    {
        <android.app.servertransaction.TransactionExecutor: java.lang.String TAG> = "TransactionExecutor";

        <android.app.servertransaction.TransactionExecutor: boolean DEBUG_RESOLVER> = 0;

        return;
    }
}
