public class android.app.servertransaction.TransactionExecutorHelper extends java.lang.Object
{
    private static final int DESTRUCTION_PENALTY;
    private static final int[] ON_RESUME_PRE_EXCUTION_STATES;
    private android.util.IntArray mLifecycleSequence;

    static void <clinit>()
    {
        int[] $r0;

        <android.app.servertransaction.TransactionExecutorHelper: int DESTRUCTION_PENALTY> = 10;

        $r0 = newarray (int)[2];

        $r0[0] = 2;

        $r0[1] = 4;

        <android.app.servertransaction.TransactionExecutorHelper: int[] ON_RESUME_PRE_EXCUTION_STATES> = $r0;

        return;
    }

    public void <init>()
    {
        android.app.servertransaction.TransactionExecutorHelper r0;
        android.util.IntArray $r1;

        r0 := @this: android.app.servertransaction.TransactionExecutorHelper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new android.util.IntArray;

        specialinvoke $r1.<android.util.IntArray: void <init>(int)>(6);

        r0.<android.app.servertransaction.TransactionExecutorHelper: android.util.IntArray mLifecycleSequence> = $r1;

        return;
    }

    private static android.app.Activity getActivityForToken(android.os.IBinder, android.app.ClientTransactionHandler)
    {
        android.os.IBinder r0;
        android.app.ClientTransactionHandler r1;
        android.app.Activity $r2;

        r0 := @parameter0: android.os.IBinder;

        r1 := @parameter1: android.app.ClientTransactionHandler;

        if r0 != null goto label1;

        return null;

     label1:
        $r2 = virtualinvoke r1.<android.app.ClientTransactionHandler: android.app.Activity getActivity(android.os.IBinder)>(r0);

        return $r2;
    }

    static java.lang.String getActivityName(android.os.IBinder, android.app.ClientTransactionHandler)
    {
        android.os.IBinder r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r4, $r6;
        android.content.ComponentName $r5;
        android.app.ClientTransactionHandler r7;
        android.app.Activity r8;

        r0 := @parameter0: android.os.IBinder;

        r7 := @parameter1: android.app.ClientTransactionHandler;

        r8 = staticinvoke <android.app.servertransaction.TransactionExecutorHelper: android.app.Activity getActivityForToken(android.os.IBinder,android.app.ClientTransactionHandler)>(r0, r7);

        if r8 == null goto label1;

        $r5 = virtualinvoke r8.<android.app.Activity: android.content.ComponentName getComponentName()>();

        $r6 = virtualinvoke $r5.<android.content.ComponentName: java.lang.String getClassName()>();

        return $r6;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not found for token: ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    public static android.app.servertransaction.ActivityLifecycleItem getLifecycleRequestForCurrentState(android.app.ActivityThread$ActivityClientRecord)
    {
        int i0;
        android.app.ActivityThread$ActivityClientRecord r0;
        android.app.servertransaction.ActivityLifecycleItem r1;

        r0 := @parameter0: android.app.ActivityThread$ActivityClientRecord;

        i0 = virtualinvoke r0.<android.app.ActivityThread$ActivityClientRecord: int getLifecycleState()>();

        if i0 == 4 goto label2;

        if i0 == 5 goto label1;

        r1 = staticinvoke <android.app.servertransaction.ResumeActivityItem: android.app.servertransaction.ResumeActivityItem obtain(boolean)>(0);

        goto label3;

     label1:
        r1 = staticinvoke <android.app.servertransaction.StopActivityItem: android.app.servertransaction.StopActivityItem obtain(int)>(0);

        goto label3;

     label2:
        r1 = staticinvoke <android.app.servertransaction.PauseActivityItem: android.app.servertransaction.PauseActivityItem obtain()>();

     label3:
        return r1;
    }

    static java.lang.String getShortActivityName(android.os.IBinder, android.app.ClientTransactionHandler)
    {
        android.os.IBinder r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r4, $r6;
        android.content.ComponentName $r5;
        android.app.ClientTransactionHandler r7;
        android.app.Activity r8;

        r0 := @parameter0: android.os.IBinder;

        r7 := @parameter1: android.app.ClientTransactionHandler;

        r8 = staticinvoke <android.app.servertransaction.TransactionExecutorHelper: android.app.Activity getActivityForToken(android.os.IBinder,android.app.ClientTransactionHandler)>(r0, r7);

        if r8 == null goto label1;

        $r5 = virtualinvoke r8.<android.app.Activity: android.content.ComponentName getComponentName()>();

        $r6 = virtualinvoke $r5.<android.content.ComponentName: java.lang.String getShortClassName()>();

        return $r6;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not found for token: ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    static java.lang.String getStateName(int)
    {
        int i0;
        java.lang.StringBuilder $r1;
        java.lang.IllegalArgumentException $r4;
        java.lang.String $r5;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case -1: goto label10;
            case 0: goto label09;
            case 1: goto label08;
            case 2: goto label07;
            case 3: goto label06;
            case 4: goto label05;
            case 5: goto label04;
            case 6: goto label03;
            case 7: goto label02;
            default: goto label01;
        };

     label01:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected lifecycle state: ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r4;

     label02:
        return "ON_RESTART";

     label03:
        return "ON_DESTROY";

     label04:
        return "ON_STOP";

     label05:
        return "ON_PAUSE";

     label06:
        return "ON_RESUME";

     label07:
        return "ON_START";

     label08:
        return "ON_CREATE";

     label09:
        return "PRE_ON_CREATE";

     label10:
        return "UNDEFINED";
    }

    static int lastCallbackRequestingState(android.app.servertransaction.ClientTransaction)
    {
        int i0, $i1, $i2, i3, i4, i5, i6, i7;
        java.lang.Object $r0;
        android.app.servertransaction.ClientTransactionItem $r1;
        android.app.servertransaction.ClientTransaction r2;
        java.util.List r3;

        r2 := @parameter0: android.app.servertransaction.ClientTransaction;

        r3 = virtualinvoke r2.<android.app.servertransaction.ClientTransaction: java.util.List getCallbacks()>();

        if r3 == null goto label6;

        $i1 = interfaceinvoke r3.<java.util.List: int size()>();

        if $i1 != 0 goto label1;

        goto label6;

     label1:
        i3 = -1;

        i4 = -1;

        $i2 = interfaceinvoke r3.<java.util.List: int size()>();

        i5 = $i2 - 1;

     label2:
        if i5 < 0 goto label5;

        $r0 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i5);

        $r1 = (android.app.servertransaction.ClientTransactionItem) $r0;

        i0 = virtualinvoke $r1.<android.app.servertransaction.ClientTransactionItem: int getPostExecutionState()>();

        i6 = i3;

        i7 = i4;

        if i0 == -1 goto label4;

        if i3 == -1 goto label3;

        if i3 != i0 goto label5;

     label3:
        i6 = i0;

        i7 = i5;

     label4:
        i5 = i5 + -1;

        i3 = i6;

        i4 = i7;

        goto label2;

     label5:
        return i4;

     label6:
        return -1;
    }

    private static boolean pathInvolvesDestruction(android.util.IntArray)
    {
        android.util.IntArray r0;
        int i0, $i1, i2;

        r0 := @parameter0: android.util.IntArray;

        i0 = virtualinvoke r0.<android.util.IntArray: int size()>();

        i2 = 0;

     label1:
        if i2 >= i0 goto label3;

        $i1 = virtualinvoke r0.<android.util.IntArray: int get(int)>(i2);

        if $i1 != 6 goto label2;

        return 1;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return 0;
    }

    static java.lang.String tId(android.app.servertransaction.ClientTransaction)
    {
        android.app.servertransaction.ClientTransaction r0;
        java.lang.StringBuilder $r2;
        int $i0;
        java.lang.String $r6;

        r0 := @parameter0: android.app.servertransaction.ClientTransaction;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("tId:");

        $i0 = virtualinvoke r0.<android.app.servertransaction.ClientTransaction: int hashCode()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    static java.lang.String transactionToString(android.app.servertransaction.ClientTransaction, android.app.ClientTransactionHandler)
    {
        android.app.servertransaction.ClientTransaction r0;
        android.app.ClientTransactionHandler r1;
        java.lang.String r4, $r11, $r14, $r15;
        java.io.StringWriter $r6;
        java.io.PrintWriter $r7, $r12;
        java.lang.StringBuilder $r8;
        android.os.IBinder $r13;

        r0 := @parameter0: android.app.servertransaction.ClientTransaction;

        r1 := @parameter1: android.app.ClientTransactionHandler;

        $r6 = new java.io.StringWriter;

        specialinvoke $r6.<java.io.StringWriter: void <init>()>();

        $r7 = new java.io.PrintWriter;

        specialinvoke $r7.<java.io.PrintWriter: void <init>(java.io.Writer)>($r6);

        r4 = staticinvoke <android.app.servertransaction.TransactionExecutorHelper: java.lang.String tId(android.app.servertransaction.ClientTransaction)>(r0);

        virtualinvoke r0.<android.app.servertransaction.ClientTransaction: void dump(java.lang.String,java.io.PrintWriter)>(r4, $r7);

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Target activity: ");

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = virtualinvoke $r7.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>($r11);

        $r13 = virtualinvoke r0.<android.app.servertransaction.ClientTransaction: android.os.IBinder getActivityToken()>();

        $r14 = staticinvoke <android.app.servertransaction.TransactionExecutorHelper: java.lang.String getActivityName(android.os.IBinder,android.app.ClientTransactionHandler)>($r13, r1);

        virtualinvoke $r12.<java.io.PrintWriter: void println(java.lang.String)>($r14);

        $r15 = virtualinvoke $r6.<java.io.StringWriter: java.lang.String toString()>();

        return $r15;
    }

    public int getClosestOfStates(android.app.ActivityThread$ActivityClientRecord, int[])
    {
        android.app.servertransaction.TransactionExecutorHelper r0;
        android.app.ActivityThread$ActivityClientRecord r1;
        int[] r2;
        int i0, $i1, $i2, $i3, i4, i5, i6, i7, i8, i9;
        android.util.IntArray $r4, $r5;
        boolean $z0;

        r0 := @this: android.app.servertransaction.TransactionExecutorHelper;

        r1 := @parameter0: android.app.ActivityThread$ActivityClientRecord;

        r2 := @parameter1: int[];

        if r2 == null goto label6;

        $i1 = lengthof r2;

        if $i1 != 0 goto label1;

        goto label6;

     label1:
        i0 = virtualinvoke r1.<android.app.ActivityThread$ActivityClientRecord: int getLifecycleState()>();

        i4 = -1;

        i5 = 0;

        i6 = 2147483647;

     label2:
        $i2 = lengthof r2;

        if i5 >= $i2 goto label5;

        $i3 = r2[i5];

        virtualinvoke r0.<android.app.servertransaction.TransactionExecutorHelper: android.util.IntArray getLifecyclePath(int,int,boolean)>(i0, $i3, 0);

        $r4 = r0.<android.app.servertransaction.TransactionExecutorHelper: android.util.IntArray mLifecycleSequence>;

        i7 = virtualinvoke $r4.<android.util.IntArray: int size()>();

        i8 = i7;

        $r5 = r0.<android.app.servertransaction.TransactionExecutorHelper: android.util.IntArray mLifecycleSequence>;

        $z0 = staticinvoke <android.app.servertransaction.TransactionExecutorHelper: boolean pathInvolvesDestruction(android.util.IntArray)>($r5);

        if $z0 == 0 goto label3;

        i8 = i7 + 10;

     label3:
        i9 = i6;

        if i6 <= i8 goto label4;

        i4 = r2[i5];

        i9 = i8;

     label4:
        i5 = i5 + 1;

        i6 = i9;

        goto label2;

     label5:
        return i4;

     label6:
        return -1;
    }

    public int getClosestPreExecutionState(android.app.ActivityThread$ActivityClientRecord, int)
    {
        android.app.servertransaction.TransactionExecutorHelper r0;
        int i0, $i1;
        java.lang.StringBuilder $r1;
        java.lang.UnsupportedOperationException $r5;
        java.lang.String $r6;
        int[] $r7;
        android.app.ActivityThread$ActivityClientRecord r8;

        r0 := @this: android.app.servertransaction.TransactionExecutorHelper;

        r8 := @parameter0: android.app.ActivityThread$ActivityClientRecord;

        i0 := @parameter1: int;

        if i0 == -1 goto label2;

        if i0 != 3 goto label1;

        $r7 = <android.app.servertransaction.TransactionExecutorHelper: int[] ON_RESUME_PRE_EXCUTION_STATES>;

        $i1 = virtualinvoke r0.<android.app.servertransaction.TransactionExecutorHelper: int getClosestOfStates(android.app.ActivityThread$ActivityClientRecord,int[])>(r8, $r7);

        return $i1;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Pre-execution states for state: ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not supported.");

        $r5 = new java.lang.UnsupportedOperationException;

        $r6 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label2:
        return -1;
    }

    public android.util.IntArray getLifecyclePath(int, int, boolean)
    {
        android.app.servertransaction.TransactionExecutorHelper r0;
        int i0, $i1, $i2, $i3, i4, i5, i6, i7, i8, i9;
        boolean z0;
        android.util.IntArray r1, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r15;
        java.lang.IllegalArgumentException $r2, $r3, $r14;

        r0 := @this: android.app.servertransaction.TransactionExecutorHelper;

        i4 := @parameter0: int;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        if i4 == -1 goto label19;

        if i0 == -1 goto label19;

        if i4 == 7 goto label18;

        if i0 == 7 goto label18;

        if i0 != 0 goto label02;

        if i4 != i0 goto label01;

        goto label02;

     label01:
        $r14 = new java.lang.IllegalArgumentException;

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can only start in pre-onCreate state");

        throw $r14;

     label02:
        $r4 = r0.<android.app.servertransaction.TransactionExecutorHelper: android.util.IntArray mLifecycleSequence>;

        virtualinvoke $r4.<android.util.IntArray: void clear()>();

        if i0 < i4 goto label06;

        if i4 != 2 goto label03;

        if i0 != 5 goto label03;

        $r13 = r0.<android.app.servertransaction.TransactionExecutorHelper: android.util.IntArray mLifecycleSequence>;

        virtualinvoke $r13.<android.util.IntArray: void add(int)>(5);

        goto label16;

     label03:
        i5 = i4 + 1;

     label04:
        if i5 > i0 goto label05;

        $r12 = r0.<android.app.servertransaction.TransactionExecutorHelper: android.util.IntArray mLifecycleSequence>;

        virtualinvoke $r12.<android.util.IntArray: void add(int)>(i5);

        i5 = i5 + 1;

        goto label04;

     label05:
        goto label16;

     label06:
        if i4 != 4 goto label07;

        if i0 != 3 goto label07;

        $r11 = r0.<android.app.servertransaction.TransactionExecutorHelper: android.util.IntArray mLifecycleSequence>;

        virtualinvoke $r11.<android.util.IntArray: void add(int)>(3);

        goto label16;

     label07:
        if i4 > 5 goto label12;

        if i0 < 2 goto label12;

        i6 = i4 + 1;

     label08:
        if i6 > 5 goto label09;

        $r10 = r0.<android.app.servertransaction.TransactionExecutorHelper: android.util.IntArray mLifecycleSequence>;

        virtualinvoke $r10.<android.util.IntArray: void add(int)>(i6);

        i6 = i6 + 1;

        goto label08;

     label09:
        $r8 = r0.<android.app.servertransaction.TransactionExecutorHelper: android.util.IntArray mLifecycleSequence>;

        virtualinvoke $r8.<android.util.IntArray: void add(int)>(7);

        i7 = 2;

     label10:
        if i7 > i0 goto label11;

        $r9 = r0.<android.app.servertransaction.TransactionExecutorHelper: android.util.IntArray mLifecycleSequence>;

        virtualinvoke $r9.<android.util.IntArray: void add(int)>(i7);

        i7 = i7 + 1;

        goto label10;

     label11:
        goto label16;

     label12:
        i8 = i4 + 1;

     label13:
        if i8 > 6 goto label14;

        $r7 = r0.<android.app.servertransaction.TransactionExecutorHelper: android.util.IntArray mLifecycleSequence>;

        virtualinvoke $r7.<android.util.IntArray: void add(int)>(i8);

        i8 = i8 + 1;

        goto label13;

     label14:
        i9 = 1;

     label15:
        if i9 > i0 goto label16;

        $r6 = r0.<android.app.servertransaction.TransactionExecutorHelper: android.util.IntArray mLifecycleSequence>;

        virtualinvoke $r6.<android.util.IntArray: void add(int)>(i9);

        i9 = i9 + 1;

        goto label15;

     label16:
        if z0 == 0 goto label17;

        $r5 = r0.<android.app.servertransaction.TransactionExecutorHelper: android.util.IntArray mLifecycleSequence>;

        $i1 = virtualinvoke $r5.<android.util.IntArray: int size()>();

        if $i1 == 0 goto label17;

        r1 = r0.<android.app.servertransaction.TransactionExecutorHelper: android.util.IntArray mLifecycleSequence>;

        $i2 = virtualinvoke r1.<android.util.IntArray: int size()>();

        $i3 = $i2 - 1;

        virtualinvoke r1.<android.util.IntArray: void remove(int)>($i3);

     label17:
        $r15 = r0.<android.app.servertransaction.TransactionExecutorHelper: android.util.IntArray mLifecycleSequence>;

        return $r15;

     label18:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t start or finish in intermittent RESTART state");

        throw $r3;

     label19:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t resolve lifecycle path for undefined state");

        throw $r2;
    }
}
