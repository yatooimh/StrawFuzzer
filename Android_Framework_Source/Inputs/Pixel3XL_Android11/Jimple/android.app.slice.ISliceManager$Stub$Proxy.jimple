class android.app.slice.ISliceManager$Stub$Proxy extends java.lang.Object implements android.app.slice.ISliceManager
{
    public static android.app.slice.ISliceManager sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.app.slice.ISliceManager$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.app.slice.ISliceManager$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.app.slice.ISliceManager$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public void applyRestore(byte[], int) throws android.os.RemoteException
    {
        android.app.slice.ISliceManager$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.app.slice.ISliceManager $r4, $r5;
        java.lang.Throwable $r6;
        byte[] r7;

        r0 := @this: android.app.slice.ISliceManager$Stub$Proxy;

        r7 := @parameter0: byte[];

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.slice.ISliceManager");

        virtualinvoke r1.<android.os.Parcel: void writeByteArray(byte[])>(r7);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.app.slice.ISliceManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.app.slice.ISliceManager$Stub: android.app.slice.ISliceManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.app.slice.ISliceManager$Stub: android.app.slice.ISliceManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.app.slice.ISliceManager: void applyRestore(byte[],int)>(r7, i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.os.IBinder asBinder()
    {
        android.app.slice.ISliceManager$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.app.slice.ISliceManager$Stub$Proxy;

        $r1 = r0.<android.app.slice.ISliceManager$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public int checkSlicePermission(android.net.Uri, java.lang.String, java.lang.String, int, int, java.lang.String[]) throws android.os.RemoteException
    {
        android.app.slice.ISliceManager$Stub$Proxy r0;
        java.lang.String r1, r2;
        int i0, i1, i2, i3;
        java.lang.String[] r3;
        android.os.Parcel r4, r5;
        android.os.IBinder $r6;
        boolean $z0;
        android.app.slice.ISliceManager $r7, $r8;
        java.lang.Throwable $r9, $r10, $r11, $r12, $r13, $r14, r16;
        android.net.Uri r15;

        r0 := @this: android.app.slice.ISliceManager$Stub$Proxy;

        r15 := @parameter0: android.net.Uri;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

        i0 := @parameter4: int;

        r3 := @parameter5: java.lang.String[];

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r4.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.slice.ISliceManager");

     label02:
        if r15 == null goto label05;

     label03:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r15.<android.net.Uri: void writeToParcel(android.os.Parcel,int)>(r4, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        virtualinvoke r4.<android.os.Parcel: void writeString(java.lang.String)>(r1);

     label07:
        virtualinvoke r4.<android.os.Parcel: void writeString(java.lang.String)>(r2);

     label08:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(i1);

     label09:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(i0);

     label10:
        virtualinvoke r4.<android.os.Parcel: void writeStringArray(java.lang.String[])>(r3);

        $r6 = r0.<android.app.slice.ISliceManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(10, r4, r5, 0);

        if $z0 != 0 goto label12;

        $r7 = staticinvoke <android.app.slice.ISliceManager$Stub: android.app.slice.ISliceManager getDefaultImpl()>();

        if $r7 == null goto label12;

        $r8 = staticinvoke <android.app.slice.ISliceManager$Stub: android.app.slice.ISliceManager getDefaultImpl()>();

        i2 = interfaceinvoke $r8.<android.app.slice.ISliceManager: int checkSlicePermission(android.net.Uri,java.lang.String,java.lang.String,int,int,java.lang.String[])>(r15, r1, r2, i1, i0, r3);

     label11:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        return i2;

     label12:
        virtualinvoke r5.<android.os.Parcel: void readException()>();

        i3 = virtualinvoke r5.<android.os.Parcel: int readInt()>();

     label13:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        return i3;

     label14:
        $r10 := @caughtexception;

        r16 = $r10;

        goto label20;

     label15:
        $r11 := @caughtexception;

        r16 = $r11;

        goto label20;

     label16:
        $r12 := @caughtexception;

        r16 = $r12;

        goto label20;

     label17:
        $r14 := @caughtexception;

        r16 = $r14;

        goto label20;

     label18:
        $r13 := @caughtexception;

        r16 = $r13;

        goto label20;

     label19:
        $r9 := @caughtexception;

        r16 = $r9;

     label20:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        throw r16;

        catch java.lang.Throwable from label01 to label02 with label19;
        catch java.lang.Throwable from label03 to label04 with label19;
        catch java.lang.Throwable from label05 to label06 with label19;
        catch java.lang.Throwable from label06 to label07 with label18;
        catch java.lang.Throwable from label07 to label08 with label17;
        catch java.lang.Throwable from label08 to label09 with label16;
        catch java.lang.Throwable from label09 to label10 with label15;
        catch java.lang.Throwable from label10 to label11 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
    }

    public byte[] getBackupPayload(int) throws android.os.RemoteException
    {
        android.app.slice.ISliceManager$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.app.slice.ISliceManager $r4, $r5;
        java.lang.Throwable $r6;
        byte[] r7, r8;

        r0 := @this: android.app.slice.ISliceManager$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.slice.ISliceManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.app.slice.ISliceManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.app.slice.ISliceManager$Stub: android.app.slice.ISliceManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.app.slice.ISliceManager$Stub: android.app.slice.ISliceManager getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<android.app.slice.ISliceManager: byte[] getBackupPayload(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: byte[] createByteArray()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.app.slice.ISliceManager$Stub$Proxy r0;

        r0 := @this: android.app.slice.ISliceManager$Stub$Proxy;

        return "android.app.slice.ISliceManager";
    }

    public android.net.Uri[] getPinnedSlices(java.lang.String) throws android.os.RemoteException
    {
        android.app.slice.ISliceManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object[] $r5;
        android.app.slice.ISliceManager $r6, $r7;
        java.lang.Throwable $r8;
        java.lang.String r9;
        android.net.Uri[] r10, r11;

        r0 := @this: android.app.slice.ISliceManager$Stub$Proxy;

        r9 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.slice.ISliceManager");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r9);

        $r3 = r0.<android.app.slice.ISliceManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.app.slice.ISliceManager$Stub: android.app.slice.ISliceManager getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.app.slice.ISliceManager$Stub: android.app.slice.ISliceManager getDefaultImpl()>();

        r10 = interfaceinvoke $r7.<android.app.slice.ISliceManager: android.net.Uri[] getPinnedSlices(java.lang.String)>(r9);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $r4 = <android.net.Uri: android.os.Parcelable$Creator CREATOR>;

        $r5 = virtualinvoke r2.<android.os.Parcel: java.lang.Object[] createTypedArray(android.os.Parcelable$Creator)>($r4);

        r11 = (android.net.Uri[]) $r5;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r11;

     label5:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.app.slice.SliceSpec[] getPinnedSpecs(android.net.Uri, java.lang.String) throws android.os.RemoteException
    {
        android.app.slice.ISliceManager$Stub$Proxy r0;
        java.lang.String r1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.os.Parcelable$Creator $r5;
        java.lang.Object[] $r6;
        android.app.slice.ISliceManager $r7, $r8;
        java.lang.Throwable $r9;
        android.net.Uri r10;
        android.app.slice.SliceSpec[] r11, r12;

        r0 := @this: android.app.slice.ISliceManager$Stub$Proxy;

        r10 := @parameter0: android.net.Uri;

        r1 := @parameter1: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.slice.ISliceManager");

     label02:
        if r10 == null goto label05;

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r10.<android.net.Uri: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r4 = r0.<android.app.slice.ISliceManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r2, r3, 0);

        if $z0 != 0 goto label08;

        $r7 = staticinvoke <android.app.slice.ISliceManager$Stub: android.app.slice.ISliceManager getDefaultImpl()>();

        if $r7 == null goto label08;

        $r8 = staticinvoke <android.app.slice.ISliceManager$Stub: android.app.slice.ISliceManager getDefaultImpl()>();

        r11 = interfaceinvoke $r8.<android.app.slice.ISliceManager: android.app.slice.SliceSpec[] getPinnedSpecs(android.net.Uri,java.lang.String)>(r10, r1);

     label07:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r11;

     label08:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        $r5 = <android.app.slice.SliceSpec: android.os.Parcelable$Creator CREATOR>;

        $r6 = virtualinvoke r3.<android.os.Parcel: java.lang.Object[] createTypedArray(android.os.Parcelable$Creator)>($r5);

        r12 = (android.app.slice.SliceSpec[]) $r6;

     label09:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r12;

     label10:
        $r9 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void grantPermissionFromUser(android.net.Uri, java.lang.String, java.lang.String, boolean) throws android.os.RemoteException
    {
        android.app.slice.ISliceManager$Stub$Proxy r0;
        java.lang.String r1, r2;
        boolean z0, $z1;
        android.os.Parcel r3, r4;
        android.os.IBinder $r5;
        android.app.slice.ISliceManager $r6, $r7;
        java.lang.Throwable $r8;
        android.net.Uri r9;
        byte b0;

        r0 := @this: android.app.slice.ISliceManager$Stub$Proxy;

        r9 := @parameter0: android.net.Uri;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.slice.ISliceManager");

     label02:
        b0 = 1;

        if r9 == null goto label05;

     label03:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r9.<android.net.Uri: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r2);

     label07:
        if z0 == 0 goto label08;

        goto label09;

     label08:
        b0 = 0;

     label09:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(b0);

        $r5 = r0.<android.app.slice.ISliceManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(11, r3, r4, 0);

        if $z1 != 0 goto label11;

        $r6 = staticinvoke <android.app.slice.ISliceManager$Stub: android.app.slice.ISliceManager getDefaultImpl()>();

        if $r6 == null goto label11;

        $r7 = staticinvoke <android.app.slice.ISliceManager$Stub: android.app.slice.ISliceManager getDefaultImpl()>();

        interfaceinvoke $r7.<android.app.slice.ISliceManager: void grantPermissionFromUser(android.net.Uri,java.lang.String,java.lang.String,boolean)>(r9, r1, r2, z0);

     label10:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label11:
        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label12:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label13:
        $r8 := @caughtexception;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
    }

    public void grantSlicePermission(java.lang.String, java.lang.String, android.net.Uri) throws android.os.RemoteException
    {
        android.app.slice.ISliceManager$Stub$Proxy r0;
        java.lang.String r1, r9;
        android.net.Uri r2;
        android.os.Parcel r3, r4;
        android.os.IBinder $r5;
        boolean $z0;
        android.app.slice.ISliceManager $r6, $r7;
        java.lang.Throwable $r8;

        r0 := @this: android.app.slice.ISliceManager$Stub$Proxy;

        r9 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.net.Uri;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.slice.ISliceManager");

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r9);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r1);

     label02:
        if r2 == null goto label05;

     label03:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r2.<android.net.Uri: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r5 = r0.<android.app.slice.ISliceManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, r3, r4, 0);

        if $z0 != 0 goto label08;

        $r6 = staticinvoke <android.app.slice.ISliceManager$Stub: android.app.slice.ISliceManager getDefaultImpl()>();

        if $r6 == null goto label08;

        $r7 = staticinvoke <android.app.slice.ISliceManager$Stub: android.app.slice.ISliceManager getDefaultImpl()>();

        interfaceinvoke $r7.<android.app.slice.ISliceManager: void grantSlicePermission(java.lang.String,java.lang.String,android.net.Uri)>(r9, r1, r2);

     label07:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r8 := @caughtexception;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public boolean hasSliceAccess(java.lang.String) throws android.os.RemoteException
    {
        android.app.slice.ISliceManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder r3;
        int i0;
        boolean $z0, z1, z2;
        android.app.slice.ISliceManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: android.app.slice.ISliceManager$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.slice.ISliceManager");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        r3 = r0.<android.app.slice.ISliceManager$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r4 = staticinvoke <android.app.slice.ISliceManager$Stub: android.app.slice.ISliceManager getDefaultImpl()>();

        if $r4 == null goto label5;

        $r5 = staticinvoke <android.app.slice.ISliceManager$Stub: android.app.slice.ISliceManager getDefaultImpl()>();

        z2 = interfaceinvoke $r5.<android.app.slice.ISliceManager: boolean hasSliceAccess(java.lang.String)>(r7);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public void pinSlice(java.lang.String, android.net.Uri, android.app.slice.SliceSpec[], android.os.IBinder) throws android.os.RemoteException
    {
        android.app.slice.ISliceManager$Stub$Proxy r0;
        android.net.Uri r1;
        android.app.slice.SliceSpec[] r2;
        android.os.IBinder r3, $r6;
        android.os.Parcel r4, r5;
        boolean $z0;
        android.app.slice.ISliceManager $r7, $r8;
        java.lang.Throwable $r9;
        java.lang.String r10;

        r0 := @this: android.app.slice.ISliceManager$Stub$Proxy;

        r10 := @parameter0: java.lang.String;

        r1 := @parameter1: android.net.Uri;

        r2 := @parameter2: android.app.slice.SliceSpec[];

        r3 := @parameter3: android.os.IBinder;

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r4.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.slice.ISliceManager");

        virtualinvoke r4.<android.os.Parcel: void writeString(java.lang.String)>(r10);

     label02:
        if r1 == null goto label05;

     label03:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.net.Uri: void writeToParcel(android.os.Parcel,int)>(r4, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        virtualinvoke r4.<android.os.Parcel: void writeTypedArray(android.os.Parcelable[],int)>(r2, 0);

        virtualinvoke r4.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r3);

        $r6 = r0.<android.app.slice.ISliceManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r4, r5, 0);

        if $z0 != 0 goto label08;

        $r7 = staticinvoke <android.app.slice.ISliceManager$Stub: android.app.slice.ISliceManager getDefaultImpl()>();

        if $r7 == null goto label08;

        $r8 = staticinvoke <android.app.slice.ISliceManager$Stub: android.app.slice.ISliceManager getDefaultImpl()>();

        interfaceinvoke $r8.<android.app.slice.ISliceManager: void pinSlice(java.lang.String,android.net.Uri,android.app.slice.SliceSpec[],android.os.IBinder)>(r10, r1, r2, r3);

     label07:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r5.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r9 := @caughtexception;

        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void revokeSlicePermission(java.lang.String, java.lang.String, android.net.Uri) throws android.os.RemoteException
    {
        android.app.slice.ISliceManager$Stub$Proxy r0;
        java.lang.String r1, r9;
        android.net.Uri r2;
        android.os.Parcel r3, r4;
        android.os.IBinder $r5;
        boolean $z0;
        android.app.slice.ISliceManager $r6, $r7;
        java.lang.Throwable $r8;

        r0 := @this: android.app.slice.ISliceManager$Stub$Proxy;

        r9 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.net.Uri;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.slice.ISliceManager");

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r9);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r1);

     label02:
        if r2 == null goto label05;

     label03:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r2.<android.net.Uri: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r5 = r0.<android.app.slice.ISliceManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(9, r3, r4, 0);

        if $z0 != 0 goto label08;

        $r6 = staticinvoke <android.app.slice.ISliceManager$Stub: android.app.slice.ISliceManager getDefaultImpl()>();

        if $r6 == null goto label08;

        $r7 = staticinvoke <android.app.slice.ISliceManager$Stub: android.app.slice.ISliceManager getDefaultImpl()>();

        interfaceinvoke $r7.<android.app.slice.ISliceManager: void revokeSlicePermission(java.lang.String,java.lang.String,android.net.Uri)>(r9, r1, r2);

     label07:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r8 := @caughtexception;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void unpinSlice(java.lang.String, android.net.Uri, android.os.IBinder) throws android.os.RemoteException
    {
        android.app.slice.ISliceManager$Stub$Proxy r0;
        android.net.Uri r1;
        android.os.IBinder r2, $r5;
        android.os.Parcel r3, r4;
        boolean $z0;
        android.app.slice.ISliceManager $r6, $r7;
        java.lang.Throwable $r8;
        java.lang.String r9;

        r0 := @this: android.app.slice.ISliceManager$Stub$Proxy;

        r9 := @parameter0: java.lang.String;

        r1 := @parameter1: android.net.Uri;

        r2 := @parameter2: android.os.IBinder;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.slice.ISliceManager");

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r9);

     label02:
        if r1 == null goto label05;

     label03:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.net.Uri: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r2);

        $r5 = r0.<android.app.slice.ISliceManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r3, r4, 0);

        if $z0 != 0 goto label08;

        $r6 = staticinvoke <android.app.slice.ISliceManager$Stub: android.app.slice.ISliceManager getDefaultImpl()>();

        if $r6 == null goto label08;

        $r7 = staticinvoke <android.app.slice.ISliceManager$Stub: android.app.slice.ISliceManager getDefaultImpl()>();

        interfaceinvoke $r7.<android.app.slice.ISliceManager: void unpinSlice(java.lang.String,android.net.Uri,android.os.IBinder)>(r9, r1, r2);

     label07:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r8 := @caughtexception;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }
}
