public class android.app.slice.SliceManager extends java.lang.Object
{
    public static final java.lang.String ACTION_REQUEST_SLICE_PERMISSION;
    public static final java.lang.String CATEGORY_SLICE;
    public static final java.lang.String SLICE_METADATA_KEY;
    private static final java.lang.String TAG;
    private final android.content.Context mContext;
    private final android.app.slice.ISliceManager mService;
    private final android.os.IBinder mToken;

    public void <init>(android.content.Context, android.os.Handler) throws android.os.ServiceManager$ServiceNotFoundException
    {
        android.app.slice.SliceManager r0;
        android.content.Context r1;
        android.os.Handler r2;
        android.os.Binder $r3;
        android.os.IBinder $r4;
        android.app.slice.ISliceManager $r5;

        r0 := @this: android.app.slice.SliceManager;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.os.Handler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new android.os.Binder;

        specialinvoke $r3.<android.os.Binder: void <init>()>();

        r0.<android.app.slice.SliceManager: android.os.IBinder mToken> = $r3;

        r0.<android.app.slice.SliceManager: android.content.Context mContext> = r1;

        $r4 = staticinvoke <android.os.ServiceManager: android.os.IBinder getServiceOrThrow(java.lang.String)>("slice");

        $r5 = staticinvoke <android.app.slice.ISliceManager$Stub: android.app.slice.ISliceManager asInterface(android.os.IBinder)>($r4);

        r0.<android.app.slice.SliceManager: android.app.slice.ISliceManager mService> = $r5;

        return;
    }

    private java.lang.String getAuthority(android.content.Intent)
    {
        android.app.slice.SliceManager r0;
        android.content.Intent $r1, r8;
        boolean $z0, $z1;
        android.content.Context $r2;
        android.content.pm.PackageManager $r3;
        java.lang.Object $r4;
        android.content.pm.ResolveInfo $r5;
        android.content.pm.ProviderInfo $r6;
        java.util.List r10;
        java.lang.String r11;

        r0 := @this: android.app.slice.SliceManager;

        r8 := @parameter0: android.content.Intent;

        $r1 = new android.content.Intent;

        specialinvoke $r1.<android.content.Intent: void <init>(android.content.Intent)>(r8);

        $z0 = virtualinvoke $r1.<android.content.Intent: boolean hasCategory(java.lang.String)>("android.app.slice.category.SLICE");

        if $z0 != 0 goto label1;

        virtualinvoke $r1.<android.content.Intent: android.content.Intent addCategory(java.lang.String)>("android.app.slice.category.SLICE");

     label1:
        $r2 = r0.<android.app.slice.SliceManager: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r10 = virtualinvoke $r3.<android.content.pm.PackageManager: java.util.List queryIntentContentProviders(android.content.Intent,int)>($r1, 0);

        if r10 == null goto label2;

        $z1 = interfaceinvoke r10.<java.util.List: boolean isEmpty()>();

        if $z1 != 0 goto label2;

        $r4 = interfaceinvoke r10.<java.util.List: java.lang.Object get(int)>(0);

        $r5 = (android.content.pm.ResolveInfo) $r4;

        $r6 = $r5.<android.content.pm.ResolveInfo: android.content.pm.ProviderInfo providerInfo>;

        r11 = $r6.<android.content.pm.ProviderInfo: java.lang.String authority>;

        goto label3;

     label2:
        r11 = null;

     label3:
        return r11;
    }

    private android.net.Uri resolveStatic(android.content.Intent, android.content.ContentResolver)
    {
        android.app.slice.SliceManager r0;
        android.content.ContentResolver r1;
        android.net.Uri r2, $r15, $r19;
        android.content.ComponentName $r4;
        android.content.Context $r5;
        android.content.pm.PackageManager $r6;
        android.content.pm.ActivityInfo $r7, $r8, $r10, $r12;
        android.os.Bundle $r9, $r11, $r13;
        boolean $z0, $z1, z2;
        java.lang.String $r14, $r16, $r17, $r18;
        android.content.Intent r20;
        java.lang.Object[] $r21;
        android.content.pm.ResolveInfo r22;

        r0 := @this: android.app.slice.SliceManager;

        r20 := @parameter0: android.content.Intent;

        r1 := @parameter1: android.content.ContentResolver;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r20, "intent");

        $r4 = virtualinvoke r20.<android.content.Intent: android.content.ComponentName getComponent()>();

        if $r4 != null goto label2;

        $r18 = virtualinvoke r20.<android.content.Intent: java.lang.String getPackage()>();

        if $r18 != null goto label2;

        $r19 = virtualinvoke r20.<android.content.Intent: android.net.Uri getData()>();

        if $r19 == null goto label1;

        goto label2;

     label1:
        z2 = 0;

        goto label3;

     label2:
        z2 = 1;

     label3:
        $r21 = newarray (java.lang.Object)[1];

        $r21[0] = r20;

        staticinvoke <com.android.internal.util.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object[])>(z2, "Slice intent must be explicit %s", $r21);

        r2 = virtualinvoke r20.<android.content.Intent: android.net.Uri getData()>();

        if r2 == null goto label4;

        $r16 = "vnd.android.slice";

        $r17 = virtualinvoke r1.<android.content.ContentResolver: java.lang.String getType(android.net.Uri)>(r2);

        $z1 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>($r17);

        if $z1 == 0 goto label4;

        return r2;

     label4:
        $r5 = r0.<android.app.slice.SliceManager: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r22 = virtualinvoke $r6.<android.content.pm.PackageManager: android.content.pm.ResolveInfo resolveActivity(android.content.Intent,int)>(r20, 128);

        if r22 == null goto label5;

        $r7 = r22.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        if $r7 == null goto label5;

        $r8 = r22.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r9 = $r8.<android.content.pm.ActivityInfo: android.os.Bundle metaData>;

        if $r9 == null goto label5;

        $r10 = r22.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r11 = $r10.<android.content.pm.ActivityInfo: android.os.Bundle metaData>;

        $z0 = virtualinvoke $r11.<android.os.Bundle: boolean containsKey(java.lang.String)>("android.metadata.SLICE_URI");

        if $z0 == 0 goto label5;

        $r12 = r22.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r13 = $r12.<android.content.pm.ActivityInfo: android.os.Bundle metaData>;

        $r14 = virtualinvoke $r13.<android.os.Bundle: java.lang.String getString(java.lang.String)>("android.metadata.SLICE_URI");

        $r15 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r14);

        return $r15;

     label5:
        return null;
    }

    public android.app.slice.Slice bindSlice(android.content.Intent, java.util.List)
    {
        android.app.slice.SliceManager r0;
        android.content.Intent r1;
        java.util.List r2;
        android.util.ArraySet $r3;
        android.app.slice.Slice $r4;

        r0 := @this: android.app.slice.SliceManager;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: java.util.List;

        $r3 = new android.util.ArraySet;

        specialinvoke $r3.<android.util.ArraySet: void <init>(java.util.Collection)>(r2);

        $r4 = virtualinvoke r0.<android.app.slice.SliceManager: android.app.slice.Slice bindSlice(android.content.Intent,java.util.Set)>(r1, $r3);

        return $r4;
    }

    public android.app.slice.Slice bindSlice(android.content.Intent, java.util.Set)
    {
        android.app.slice.SliceManager r0;
        android.content.ComponentName $r2;
        android.net.Uri$Builder $r3, $r4, $r5;
        android.os.Parcelable $r6;
        java.lang.Object[] $r7, $r17;
        java.lang.String $r8, $r10, r21;
        android.app.slice.Slice $r9, r27;
        android.net.Uri $r11, r20, r22;
        java.lang.Throwable $r12, $r14;
        android.os.RemoteException $r13;
        android.content.Intent r15;
        java.util.Set r16;
        boolean z0;
        android.content.Context $r18;
        android.content.ContentResolver r19;
        android.content.ContentProviderClient r23;
        android.os.Bundle r24, r26;
        java.util.ArrayList r25;

        r0 := @this: android.app.slice.SliceManager;

        r15 := @parameter0: android.content.Intent;

        r16 := @parameter1: java.util.Set;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r15, "intent");

        $r2 = virtualinvoke r15.<android.content.Intent: android.content.ComponentName getComponent()>();

        if $r2 != null goto label02;

        $r10 = virtualinvoke r15.<android.content.Intent: java.lang.String getPackage()>();

        if $r10 != null goto label02;

        $r11 = virtualinvoke r15.<android.content.Intent: android.net.Uri getData()>();

        if $r11 == null goto label01;

        goto label02;

     label01:
        z0 = 0;

        goto label03;

     label02:
        z0 = 1;

     label03:
        $r17 = newarray (java.lang.Object)[1];

        $r17[0] = r15;

        staticinvoke <com.android.internal.util.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object[])>(z0, "Slice intent must be explicit %s", $r17);

        $r18 = r0.<android.app.slice.SliceManager: android.content.Context mContext>;

        r19 = virtualinvoke $r18.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r20 = specialinvoke r0.<android.app.slice.SliceManager: android.net.Uri resolveStatic(android.content.Intent,android.content.ContentResolver)>(r15, r19);

        if r20 == null goto label04;

        $r9 = virtualinvoke r0.<android.app.slice.SliceManager: android.app.slice.Slice bindSlice(android.net.Uri,java.util.Set)>(r20, r16);

        return $r9;

     label04:
        r21 = specialinvoke r0.<android.app.slice.SliceManager: java.lang.String getAuthority(android.content.Intent)>(r15);

        if r21 != null goto label05;

        return null;

     label05:
        $r3 = new android.net.Uri$Builder;

        specialinvoke $r3.<android.net.Uri$Builder: void <init>()>();

        $r4 = virtualinvoke $r3.<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>("content");

        $r5 = virtualinvoke $r4.<android.net.Uri$Builder: android.net.Uri$Builder authority(java.lang.String)>(r21);

        r22 = virtualinvoke $r5.<android.net.Uri$Builder: android.net.Uri build()>();

     label06:
        r23 = virtualinvoke r19.<android.content.ContentResolver: android.content.ContentProviderClient acquireUnstableContentProviderClient(android.net.Uri)>(r22);

     label07:
        if r23 != null goto label12;

     label08:
        $r7 = newarray (java.lang.Object)[1];

        $r7[0] = r22;

        $r8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unknown URI: %s", $r7);

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("SliceManager", $r8);

     label09:
        if r23 == null goto label11;

     label10:
        virtualinvoke r23.<android.content.ContentProviderClient: void close()>();

     label11:
        return null;

     label12:
        r24 = new android.os.Bundle;

        specialinvoke r24.<android.os.Bundle: void <init>()>();

        virtualinvoke r24.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("slice_intent", r15);

        r25 = new java.util.ArrayList;

        specialinvoke r25.<java.util.ArrayList: void <init>(java.util.Collection)>(r16);

        virtualinvoke r24.<android.os.Bundle: void putParcelableArrayList(java.lang.String,java.util.ArrayList)>("supported_specs", r25);

        r26 = virtualinvoke r23.<android.content.ContentProviderClient: android.os.Bundle call(java.lang.String,java.lang.String,android.os.Bundle)>("map_slice", null, r24);

     label13:
        if r26 != null goto label16;

        if r23 == null goto label15;

     label14:
        virtualinvoke r23.<android.content.ContentProviderClient: void close()>();

     label15:
        return null;

     label16:
        $r6 = virtualinvoke r26.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>("slice");

        r27 = (android.app.slice.Slice) $r6;

     label17:
        if r23 == null goto label19;

     label18:
        virtualinvoke r23.<android.content.ContentProviderClient: void close()>();

     label19:
        return r27;

     label20:
        $r12 := @caughtexception;

        if r23 == null goto label25;

     label21:
        virtualinvoke r23.<android.content.ContentProviderClient: void close()>();

     label22:
        goto label25;

     label23:
        $r14 := @caughtexception;

     label24:
        virtualinvoke $r12.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r14);

     label25:
        throw $r12;

     label26:
        $r13 := @caughtexception;

        return null;

        catch android.os.RemoteException from label06 to label07 with label26;
        catch java.lang.Throwable from label08 to label09 with label20;
        catch android.os.RemoteException from label10 to label11 with label26;
        catch java.lang.Throwable from label12 to label13 with label20;
        catch android.os.RemoteException from label14 to label15 with label26;
        catch java.lang.Throwable from label16 to label17 with label20;
        catch android.os.RemoteException from label18 to label19 with label26;
        catch java.lang.Throwable from label21 to label22 with label23;
        catch android.os.RemoteException from label24 to label25 with label26;
        catch android.os.RemoteException from label25 to label26 with label26;
    }

    public android.app.slice.Slice bindSlice(android.net.Uri, java.util.List)
    {
        android.app.slice.SliceManager r0;
        android.net.Uri r1;
        java.util.List r2;
        android.util.ArraySet $r3;
        android.app.slice.Slice $r4;

        r0 := @this: android.app.slice.SliceManager;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.util.List;

        $r3 = new android.util.ArraySet;

        specialinvoke $r3.<android.util.ArraySet: void <init>(java.util.Collection)>(r2);

        $r4 = virtualinvoke r0.<android.app.slice.SliceManager: android.app.slice.Slice bindSlice(android.net.Uri,java.util.Set)>(r1, $r3);

        return $r4;
    }

    public android.app.slice.Slice bindSlice(android.net.Uri, java.util.Set)
    {
        android.app.slice.SliceManager r0;
        android.os.Bundle r1, r16;
        android.content.Context $r3;
        android.os.Parcelable $r5;
        java.lang.Object[] $r6;
        java.lang.String $r7;
        java.lang.Throwable $r8, $r9;
        android.os.RemoteException $r10;
        android.net.Uri r11;
        java.util.Set r12;
        android.content.ContentResolver r13;
        android.content.ContentProviderClient r14;
        java.util.ArrayList r15;
        android.app.slice.Slice r17;

        r0 := @this: android.app.slice.SliceManager;

        r11 := @parameter0: android.net.Uri;

        r12 := @parameter1: java.util.Set;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r11, "uri");

        $r3 = r0.<android.app.slice.SliceManager: android.content.Context mContext>;

        r13 = virtualinvoke $r3.<android.content.Context: android.content.ContentResolver getContentResolver()>();

     label01:
        r14 = virtualinvoke r13.<android.content.ContentResolver: android.content.ContentProviderClient acquireUnstableContentProviderClient(android.net.Uri)>(r11);

     label02:
        if r14 != null goto label07;

     label03:
        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = r11;

        $r7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unknown URI: %s", $r6);

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("SliceManager", $r7);

     label04:
        if r14 == null goto label06;

     label05:
        virtualinvoke r14.<android.content.ContentProviderClient: void close()>();

     label06:
        return null;

     label07:
        r1 = new android.os.Bundle;

        specialinvoke r1.<android.os.Bundle: void <init>()>();

        virtualinvoke r1.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("slice_uri", r11);

        r15 = new java.util.ArrayList;

        specialinvoke r15.<java.util.ArrayList: void <init>(java.util.Collection)>(r12);

        virtualinvoke r1.<android.os.Bundle: void putParcelableArrayList(java.lang.String,java.util.ArrayList)>("supported_specs", r15);

        r16 = virtualinvoke r14.<android.content.ContentProviderClient: android.os.Bundle call(java.lang.String,java.lang.String,android.os.Bundle)>("bind_slice", null, r1);

        staticinvoke <android.os.Bundle: android.os.Bundle setDefusable(android.os.Bundle,boolean)>(r16, 1);

     label08:
        if r16 != null goto label11;

        if r14 == null goto label10;

     label09:
        virtualinvoke r14.<android.content.ContentProviderClient: void close()>();

     label10:
        return null;

     label11:
        $r5 = virtualinvoke r16.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>("slice");

        r17 = (android.app.slice.Slice) $r5;

     label12:
        if r14 == null goto label14;

     label13:
        virtualinvoke r14.<android.content.ContentProviderClient: void close()>();

     label14:
        return r17;

     label15:
        $r9 := @caughtexception;

        if r14 == null goto label20;

     label16:
        virtualinvoke r14.<android.content.ContentProviderClient: void close()>();

     label17:
        goto label20;

     label18:
        $r8 := @caughtexception;

     label19:
        virtualinvoke $r9.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r8);

     label20:
        throw $r9;

     label21:
        $r10 := @caughtexception;

        return null;

        catch android.os.RemoteException from label01 to label02 with label21;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch android.os.RemoteException from label05 to label06 with label21;
        catch java.lang.Throwable from label07 to label08 with label15;
        catch android.os.RemoteException from label09 to label10 with label21;
        catch java.lang.Throwable from label11 to label12 with label15;
        catch android.os.RemoteException from label13 to label14 with label21;
        catch java.lang.Throwable from label16 to label17 with label18;
        catch android.os.RemoteException from label19 to label20 with label21;
        catch android.os.RemoteException from label20 to label21 with label21;
    }

    public int checkSlicePermission(android.net.Uri, int, int)
    {
        android.app.slice.SliceManager r0;
        int i0, i1, i2;
        android.content.Context $r1;
        android.app.slice.ISliceManager $r2;
        java.lang.String $r3;
        android.os.RemoteException $r4;
        java.lang.RuntimeException $r5;
        android.net.Uri r6;

        r0 := @this: android.app.slice.SliceManager;

        r6 := @parameter0: android.net.Uri;

        i1 := @parameter1: int;

        i0 := @parameter2: int;

     label1:
        $r2 = r0.<android.app.slice.SliceManager: android.app.slice.ISliceManager mService>;

        $r1 = r0.<android.app.slice.SliceManager: android.content.Context mContext>;

        $r3 = virtualinvoke $r1.<android.content.Context: java.lang.String getPackageName()>();

        i2 = interfaceinvoke $r2.<android.app.slice.ISliceManager: int checkSlicePermission(android.net.Uri,java.lang.String,java.lang.String,int,int,java.lang.String[])>(r6, $r3, null, i1, i0, null);

     label2:
        return i2;

     label3:
        $r4 := @caughtexception;

        $r5 = virtualinvoke $r4.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void enforceSlicePermission(android.net.Uri, java.lang.String, int, int, java.lang.String[])
    {
        android.app.slice.SliceManager r0;
        int i0, i1, $i2, $i3;
        boolean $z0;
        android.content.Context $r1;
        android.app.slice.ISliceManager $r2;
        java.lang.String $r3, $r9, r13;
        android.os.RemoteException $r10;
        java.lang.RuntimeException $r11;
        android.net.Uri r12;
        java.lang.String[] r14;
        java.lang.SecurityException r15, r17;
        java.lang.StringBuilder r16;

        r0 := @this: android.app.slice.SliceManager;

        r12 := @parameter0: android.net.Uri;

        r13 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r14 := @parameter4: java.lang.String[];

     label1:
        $i2 = staticinvoke <android.os.Process: int myUid()>();

        $z0 = staticinvoke <android.os.UserHandle: boolean isSameApp(int,int)>(i1, $i2);

        if $z0 == 0 goto label3;

     label2:
        return;

     label3:
        if r13 == null goto label7;

     label4:
        $r2 = r0.<android.app.slice.SliceManager: android.app.slice.ISliceManager mService>;

        $r1 = r0.<android.app.slice.SliceManager: android.content.Context mContext>;

        $r3 = virtualinvoke $r1.<android.content.Context: java.lang.String getPackageName()>();

        $i3 = interfaceinvoke $r2.<android.app.slice.ISliceManager: int checkSlicePermission(android.net.Uri,java.lang.String,java.lang.String,int,int,java.lang.String[])>(r12, $r3, r13, i0, i1, r14);

        if $i3 == -1 goto label6;

     label5:
        return;

     label6:
        r15 = new java.lang.SecurityException;

        r16 = new java.lang.StringBuilder;

        specialinvoke r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("User ");

        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not have slice permission for ");

        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r12);

        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r9 = virtualinvoke r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r15.<java.lang.SecurityException: void <init>(java.lang.String)>($r9);

        throw r15;

     label7:
        r17 = new java.lang.SecurityException;

        specialinvoke r17.<java.lang.SecurityException: void <init>(java.lang.String)>("No pkg specified");

        throw r17;

     label8:
        $r10 := @caughtexception;

        $r11 = virtualinvoke $r10.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r11;

        catch android.os.RemoteException from label1 to label2 with label8;
        catch android.os.RemoteException from label4 to label5 with label8;
        catch android.os.RemoteException from label6 to label7 with label8;
        catch android.os.RemoteException from label7 to label8 with label8;
    }

    public java.util.List getPinnedSlices()
    {
        android.app.slice.SliceManager r0;
        android.content.Context $r1;
        android.app.slice.ISliceManager $r2;
        java.lang.String $r3;
        android.net.Uri[] $r4;
        android.os.RemoteException $r5;
        java.lang.RuntimeException $r6;
        java.util.List r7;

        r0 := @this: android.app.slice.SliceManager;

     label1:
        $r2 = r0.<android.app.slice.SliceManager: android.app.slice.ISliceManager mService>;

        $r1 = r0.<android.app.slice.SliceManager: android.content.Context mContext>;

        $r3 = virtualinvoke $r1.<android.content.Context: java.lang.String getPackageName()>();

        $r4 = interfaceinvoke $r2.<android.app.slice.ISliceManager: android.net.Uri[] getPinnedSlices(java.lang.String)>($r3);

        r7 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r4);

     label2:
        return r7;

     label3:
        $r5 := @caughtexception;

        $r6 = virtualinvoke $r5.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r6;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.Set getPinnedSpecs(android.net.Uri)
    {
        android.app.slice.SliceManager r0;
        android.util.ArraySet $r1;
        android.content.Context $r2;
        android.app.slice.ISliceManager $r3;
        java.lang.String $r4;
        android.app.slice.SliceSpec[] $r5;
        java.util.List $r6;
        android.os.RemoteException $r7;
        java.lang.RuntimeException $r8;
        android.net.Uri r9;

        r0 := @this: android.app.slice.SliceManager;

        r9 := @parameter0: android.net.Uri;

     label1:
        $r1 = new android.util.ArraySet;

        $r3 = r0.<android.app.slice.SliceManager: android.app.slice.ISliceManager mService>;

        $r2 = r0.<android.app.slice.SliceManager: android.content.Context mContext>;

        $r4 = virtualinvoke $r2.<android.content.Context: java.lang.String getPackageName()>();

        $r5 = interfaceinvoke $r3.<android.app.slice.ISliceManager: android.app.slice.SliceSpec[] getPinnedSpecs(android.net.Uri,java.lang.String)>(r9, $r4);

        $r6 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r5);

        specialinvoke $r1.<android.util.ArraySet: void <init>(java.util.Collection)>($r6);

     label2:
        return $r1;

     label3:
        $r7 := @caughtexception;

        $r8 = virtualinvoke $r7.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r8;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.Collection getSliceDescendants(android.net.Uri)
    {
        android.app.slice.SliceManager r0;
        android.os.Bundle r1, $r3;
        android.content.Context $r2;
        java.lang.Throwable $r4, $r5;
        android.os.RemoteException $r6;
        java.util.List $r7;
        android.net.Uri r8;
        android.content.ContentResolver r9;
        android.content.ContentProviderClient r10;
        java.util.ArrayList r11;

        r0 := @this: android.app.slice.SliceManager;

        r8 := @parameter0: android.net.Uri;

        $r2 = r0.<android.app.slice.SliceManager: android.content.Context mContext>;

        r9 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

     label01:
        r10 = virtualinvoke r9.<android.content.ContentResolver: android.content.ContentProviderClient acquireUnstableContentProviderClient(android.net.Uri)>(r8);

     label02:
        r1 = new android.os.Bundle;

        specialinvoke r1.<android.os.Bundle: void <init>()>();

        virtualinvoke r1.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("slice_uri", r8);

        $r3 = virtualinvoke r10.<android.content.ContentProviderClient: android.os.Bundle call(java.lang.String,java.lang.String,android.os.Bundle)>("get_descendants", null, r1);

        r11 = virtualinvoke $r3.<android.os.Bundle: java.util.ArrayList getParcelableArrayList(java.lang.String)>("slice_descendants");

     label03:
        if r10 == null goto label05;

     label04:
        virtualinvoke r10.<android.content.ContentProviderClient: void close()>();

     label05:
        return r11;

     label06:
        $r5 := @caughtexception;

        if r10 == null goto label11;

     label07:
        virtualinvoke r10.<android.content.ContentProviderClient: void close()>();

     label08:
        goto label11;

     label09:
        $r4 := @caughtexception;

     label10:
        virtualinvoke $r5.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r4);

     label11:
        throw $r5;

     label12:
        $r6 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("SliceManager", "Unable to get slice descendants", $r6);

        $r7 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r7;

        catch android.os.RemoteException from label01 to label02 with label12;
        catch java.lang.Throwable from label02 to label03 with label06;
        catch android.os.RemoteException from label04 to label05 with label12;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch android.os.RemoteException from label10 to label11 with label12;
        catch android.os.RemoteException from label11 to label12 with label12;
    }

    public void grantPermissionFromUser(android.net.Uri, java.lang.String, boolean)
    {
        android.app.slice.SliceManager r0;
        java.lang.String r1, $r4;
        boolean z0;
        android.content.Context $r2;
        android.app.slice.ISliceManager $r3;
        android.os.RemoteException $r5;
        java.lang.RuntimeException $r6;
        android.net.Uri r7;

        r0 := @this: android.app.slice.SliceManager;

        r7 := @parameter0: android.net.Uri;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

     label1:
        $r3 = r0.<android.app.slice.SliceManager: android.app.slice.ISliceManager mService>;

        $r2 = r0.<android.app.slice.SliceManager: android.content.Context mContext>;

        $r4 = virtualinvoke $r2.<android.content.Context: java.lang.String getPackageName()>();

        interfaceinvoke $r3.<android.app.slice.ISliceManager: void grantPermissionFromUser(android.net.Uri,java.lang.String,java.lang.String,boolean)>(r7, r1, $r4, z0);

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        $r6 = virtualinvoke $r5.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r6;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void grantSlicePermission(java.lang.String, android.net.Uri)
    {
        android.app.slice.SliceManager r0;
        android.net.Uri r1;
        android.content.Context $r2;
        android.app.slice.ISliceManager $r3;
        java.lang.String $r4, r7;
        android.os.RemoteException $r5;
        java.lang.RuntimeException $r6;

        r0 := @this: android.app.slice.SliceManager;

        r7 := @parameter0: java.lang.String;

        r1 := @parameter1: android.net.Uri;

     label1:
        $r3 = r0.<android.app.slice.SliceManager: android.app.slice.ISliceManager mService>;

        $r2 = r0.<android.app.slice.SliceManager: android.content.Context mContext>;

        $r4 = virtualinvoke $r2.<android.content.Context: java.lang.String getPackageName()>();

        interfaceinvoke $r3.<android.app.slice.ISliceManager: void grantSlicePermission(java.lang.String,java.lang.String,android.net.Uri)>($r4, r7, r1);

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        $r6 = virtualinvoke $r5.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r6;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean hasSliceAccess()
    {
        android.app.slice.SliceManager r0;
        boolean z0;
        android.content.Context $r2;
        android.app.slice.ISliceManager $r3;
        java.lang.String $r4;
        android.os.RemoteException $r5;
        java.lang.RuntimeException $r6;

        r0 := @this: android.app.slice.SliceManager;

     label1:
        $r3 = r0.<android.app.slice.SliceManager: android.app.slice.ISliceManager mService>;

        $r2 = r0.<android.app.slice.SliceManager: android.content.Context mContext>;

        $r4 = virtualinvoke $r2.<android.content.Context: java.lang.String getPackageName()>();

        z0 = interfaceinvoke $r3.<android.app.slice.ISliceManager: boolean hasSliceAccess(java.lang.String)>($r4);

     label2:
        return z0;

     label3:
        $r5 := @caughtexception;

        $r6 = virtualinvoke $r5.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r6;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.net.Uri mapIntentToUri(android.content.Intent)
    {
        android.app.slice.SliceManager r0;
        android.content.Context $r1;
        android.net.Uri$Builder $r2, $r3, $r4;
        android.os.Parcelable $r5;
        java.lang.Object[] $r6;
        java.lang.String $r7, r14;
        android.os.RemoteException $r8;
        java.lang.Throwable $r9, $r10;
        android.content.Intent r11;
        android.content.ContentResolver r12;
        android.net.Uri r13, r15, r19;
        android.content.ContentProviderClient r16;
        android.os.Bundle r17, r18;

        r0 := @this: android.app.slice.SliceManager;

        r11 := @parameter0: android.content.Intent;

        $r1 = r0.<android.app.slice.SliceManager: android.content.Context mContext>;

        r12 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r13 = specialinvoke r0.<android.app.slice.SliceManager: android.net.Uri resolveStatic(android.content.Intent,android.content.ContentResolver)>(r11, r12);

        if r13 == null goto label01;

        return r13;

     label01:
        r14 = specialinvoke r0.<android.app.slice.SliceManager: java.lang.String getAuthority(android.content.Intent)>(r11);

        if r14 != null goto label02;

        return null;

     label02:
        $r2 = new android.net.Uri$Builder;

        specialinvoke $r2.<android.net.Uri$Builder: void <init>()>();

        $r3 = virtualinvoke $r2.<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>("content");

        $r4 = virtualinvoke $r3.<android.net.Uri$Builder: android.net.Uri$Builder authority(java.lang.String)>(r14);

        r15 = virtualinvoke $r4.<android.net.Uri$Builder: android.net.Uri build()>();

     label03:
        r16 = virtualinvoke r12.<android.content.ContentResolver: android.content.ContentProviderClient acquireUnstableContentProviderClient(android.net.Uri)>(r15);

     label04:
        if r16 != null goto label09;

     label05:
        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = r15;

        $r7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unknown URI: %s", $r6);

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("SliceManager", $r7);

     label06:
        if r16 == null goto label08;

     label07:
        virtualinvoke r16.<android.content.ContentProviderClient: void close()>();

     label08:
        return null;

     label09:
        r17 = new android.os.Bundle;

        specialinvoke r17.<android.os.Bundle: void <init>()>();

        virtualinvoke r17.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("slice_intent", r11);

        r18 = virtualinvoke r16.<android.content.ContentProviderClient: android.os.Bundle call(java.lang.String,java.lang.String,android.os.Bundle)>("map_only", null, r17);

     label10:
        if r18 != null goto label13;

        if r16 == null goto label12;

     label11:
        virtualinvoke r16.<android.content.ContentProviderClient: void close()>();

     label12:
        return null;

     label13:
        $r5 = virtualinvoke r18.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>("slice");

        r19 = (android.net.Uri) $r5;

     label14:
        if r16 == null goto label16;

     label15:
        virtualinvoke r16.<android.content.ContentProviderClient: void close()>();

     label16:
        return r19;

     label17:
        $r9 := @caughtexception;

        if r16 == null goto label22;

     label18:
        virtualinvoke r16.<android.content.ContentProviderClient: void close()>();

     label19:
        goto label22;

     label20:
        $r10 := @caughtexception;

     label21:
        virtualinvoke $r9.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r10);

     label22:
        throw $r9;

     label23:
        $r8 := @caughtexception;

        return null;

        catch android.os.RemoteException from label03 to label04 with label23;
        catch java.lang.Throwable from label05 to label06 with label17;
        catch android.os.RemoteException from label07 to label08 with label23;
        catch java.lang.Throwable from label09 to label10 with label17;
        catch android.os.RemoteException from label11 to label12 with label23;
        catch java.lang.Throwable from label13 to label14 with label17;
        catch android.os.RemoteException from label15 to label16 with label23;
        catch java.lang.Throwable from label18 to label19 with label20;
        catch android.os.RemoteException from label21 to label22 with label23;
        catch android.os.RemoteException from label22 to label23 with label23;
    }

    public void pinSlice(android.net.Uri, java.util.List)
    {
        android.app.slice.SliceManager r0;
        android.net.Uri r1;
        java.util.List r2;
        android.util.ArraySet $r3;

        r0 := @this: android.app.slice.SliceManager;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.util.List;

        $r3 = new android.util.ArraySet;

        specialinvoke $r3.<android.util.ArraySet: void <init>(java.util.Collection)>(r2);

        virtualinvoke r0.<android.app.slice.SliceManager: void pinSlice(android.net.Uri,java.util.Set)>(r1, $r3);

        return;
    }

    public void pinSlice(android.net.Uri, java.util.Set)
    {
        android.app.slice.SliceManager r0;
        java.util.Set r1;
        android.content.Context $r2;
        android.app.slice.ISliceManager $r3;
        java.lang.String $r4;
        int $i0;
        android.app.slice.SliceSpec[] $r5, $r8;
        java.lang.Object[] $r6;
        android.os.IBinder $r7;
        android.os.RemoteException $r9;
        java.lang.RuntimeException $r10;
        android.net.Uri r11;

        r0 := @this: android.app.slice.SliceManager;

        r11 := @parameter0: android.net.Uri;

        r1 := @parameter1: java.util.Set;

     label1:
        $r3 = r0.<android.app.slice.SliceManager: android.app.slice.ISliceManager mService>;

        $r2 = r0.<android.app.slice.SliceManager: android.content.Context mContext>;

        $r4 = virtualinvoke $r2.<android.content.Context: java.lang.String getPackageName()>();

        $i0 = interfaceinvoke r1.<java.util.Set: int size()>();

        $r5 = newarray (android.app.slice.SliceSpec)[$i0];

        $r6 = interfaceinvoke r1.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r5);

        $r8 = (android.app.slice.SliceSpec[]) $r6;

        $r7 = r0.<android.app.slice.SliceManager: android.os.IBinder mToken>;

        interfaceinvoke $r3.<android.app.slice.ISliceManager: void pinSlice(java.lang.String,android.net.Uri,android.app.slice.SliceSpec[],android.os.IBinder)>($r4, r11, $r8, $r7);

     label2:
        return;

     label3:
        $r9 := @caughtexception;

        $r10 = virtualinvoke $r9.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r10;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void revokeSlicePermission(java.lang.String, android.net.Uri)
    {
        android.app.slice.SliceManager r0;
        android.net.Uri r1;
        android.content.Context $r2;
        android.app.slice.ISliceManager $r3;
        java.lang.String $r4, r7;
        android.os.RemoteException $r5;
        java.lang.RuntimeException $r6;

        r0 := @this: android.app.slice.SliceManager;

        r7 := @parameter0: java.lang.String;

        r1 := @parameter1: android.net.Uri;

     label1:
        $r3 = r0.<android.app.slice.SliceManager: android.app.slice.ISliceManager mService>;

        $r2 = r0.<android.app.slice.SliceManager: android.content.Context mContext>;

        $r4 = virtualinvoke $r2.<android.content.Context: java.lang.String getPackageName()>();

        interfaceinvoke $r3.<android.app.slice.ISliceManager: void revokeSlicePermission(java.lang.String,java.lang.String,android.net.Uri)>($r4, r7, r1);

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        $r6 = virtualinvoke $r5.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r6;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void unpinSlice(android.net.Uri)
    {
        android.app.slice.SliceManager r0;
        android.content.Context $r1;
        android.app.slice.ISliceManager $r2;
        java.lang.String $r3;
        android.os.IBinder $r4;
        android.os.RemoteException $r5;
        java.lang.RuntimeException $r6;
        android.net.Uri r7;

        r0 := @this: android.app.slice.SliceManager;

        r7 := @parameter0: android.net.Uri;

     label1:
        $r2 = r0.<android.app.slice.SliceManager: android.app.slice.ISliceManager mService>;

        $r1 = r0.<android.app.slice.SliceManager: android.content.Context mContext>;

        $r3 = virtualinvoke $r1.<android.content.Context: java.lang.String getPackageName()>();

        $r4 = r0.<android.app.slice.SliceManager: android.os.IBinder mToken>;

        interfaceinvoke $r2.<android.app.slice.ISliceManager: void unpinSlice(java.lang.String,android.net.Uri,android.os.IBinder)>($r3, r7, $r4);

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        $r6 = virtualinvoke $r5.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r6;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <android.app.slice.SliceManager: java.lang.String TAG> = "SliceManager";

        <android.app.slice.SliceManager: java.lang.String SLICE_METADATA_KEY> = "android.metadata.SLICE_URI";

        <android.app.slice.SliceManager: java.lang.String CATEGORY_SLICE> = "android.app.slice.category.SLICE";

        <android.app.slice.SliceManager: java.lang.String ACTION_REQUEST_SLICE_PERMISSION> = "com.android.intent.action.REQUEST_SLICE_PERMISSION";

        return;
    }
}
