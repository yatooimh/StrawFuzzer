public class android.app.slice.SliceMetrics extends java.lang.Object
{
    private static final java.lang.String TAG;
    private android.metrics.LogMaker mLogMaker;
    private com.android.internal.logging.MetricsLogger mMetricsLogger;

    public void <init>(android.content.Context, android.net.Uri)
    {
        android.app.slice.SliceMetrics r0;
        android.net.Uri r1;
        com.android.internal.logging.MetricsLogger $r2;
        android.metrics.LogMaker $r3, $r6;
        java.lang.String $r4, $r7;
        android.content.Context r9;

        r0 := @this: android.app.slice.SliceMetrics;

        r9 := @parameter0: android.content.Context;

        r1 := @parameter1: android.net.Uri;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new com.android.internal.logging.MetricsLogger;

        specialinvoke $r2.<com.android.internal.logging.MetricsLogger: void <init>()>();

        r0.<android.app.slice.SliceMetrics: com.android.internal.logging.MetricsLogger mMetricsLogger> = $r2;

        $r3 = new android.metrics.LogMaker;

        specialinvoke $r3.<android.metrics.LogMaker: void <init>(int)>(0);

        r0.<android.app.slice.SliceMetrics: android.metrics.LogMaker mLogMaker> = $r3;

        $r4 = virtualinvoke r1.<android.net.Uri: java.lang.String getAuthority()>();

        virtualinvoke $r3.<android.metrics.LogMaker: android.metrics.LogMaker addTaggedData(int,java.lang.Object)>(1402, $r4);

        $r6 = r0.<android.app.slice.SliceMetrics: android.metrics.LogMaker mLogMaker>;

        $r7 = virtualinvoke r1.<android.net.Uri: java.lang.String getPath()>();

        virtualinvoke $r6.<android.metrics.LogMaker: android.metrics.LogMaker addTaggedData(int,java.lang.Object)>(1403, $r7);

        return;
    }

    public void logHidden()
    {
        android.app.slice.SliceMetrics r0;
        android.metrics.LogMaker r1, $r3, $r4, $r6;
        com.android.internal.logging.MetricsLogger $r7;
        java.lang.Throwable $r8;

        r0 := @this: android.app.slice.SliceMetrics;

        r1 = r0.<android.app.slice.SliceMetrics: android.metrics.LogMaker mLogMaker>;

        entermonitor r1;

     label1:
        $r3 = r0.<android.app.slice.SliceMetrics: android.metrics.LogMaker mLogMaker>;

        $r4 = virtualinvoke $r3.<android.metrics.LogMaker: android.metrics.LogMaker setCategory(int)>(1401);

        virtualinvoke $r4.<android.metrics.LogMaker: android.metrics.LogMaker setType(int)>(2);

        $r7 = r0.<android.app.slice.SliceMetrics: com.android.internal.logging.MetricsLogger mMetricsLogger>;

        $r6 = r0.<android.app.slice.SliceMetrics: android.metrics.LogMaker mLogMaker>;

        virtualinvoke $r7.<com.android.internal.logging.MetricsLogger: void write(android.metrics.LogMaker)>($r6);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r8 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void logTouch(int, android.net.Uri)
    {
        android.app.slice.SliceMetrics r0;
        int i0;
        android.metrics.LogMaker r1, $r2, $r3, $r4, $r6, $r9;
        java.lang.String $r5, $r7;
        com.android.internal.logging.MetricsLogger $r10;
        java.lang.Throwable $r11;
        android.net.Uri r12;

        r0 := @this: android.app.slice.SliceMetrics;

        i0 := @parameter0: int;

        r12 := @parameter1: android.net.Uri;

        r1 = r0.<android.app.slice.SliceMetrics: android.metrics.LogMaker mLogMaker>;

        entermonitor r1;

     label1:
        $r2 = r0.<android.app.slice.SliceMetrics: android.metrics.LogMaker mLogMaker>;

        $r3 = virtualinvoke $r2.<android.metrics.LogMaker: android.metrics.LogMaker setCategory(int)>(1401);

        $r4 = virtualinvoke $r3.<android.metrics.LogMaker: android.metrics.LogMaker setType(int)>(4);

        $r5 = virtualinvoke r12.<android.net.Uri: java.lang.String getAuthority()>();

        $r6 = virtualinvoke $r4.<android.metrics.LogMaker: android.metrics.LogMaker addTaggedData(int,java.lang.Object)>(1404, $r5);

        $r7 = virtualinvoke r12.<android.net.Uri: java.lang.String getPath()>();

        virtualinvoke $r6.<android.metrics.LogMaker: android.metrics.LogMaker addTaggedData(int,java.lang.Object)>(1405, $r7);

        $r10 = r0.<android.app.slice.SliceMetrics: com.android.internal.logging.MetricsLogger mMetricsLogger>;

        $r9 = r0.<android.app.slice.SliceMetrics: android.metrics.LogMaker mLogMaker>;

        virtualinvoke $r10.<com.android.internal.logging.MetricsLogger: void write(android.metrics.LogMaker)>($r9);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r11 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r11;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void logVisible()
    {
        android.app.slice.SliceMetrics r0;
        android.metrics.LogMaker r1, $r3, $r4, $r6;
        com.android.internal.logging.MetricsLogger $r7;
        java.lang.Throwable $r8;

        r0 := @this: android.app.slice.SliceMetrics;

        r1 = r0.<android.app.slice.SliceMetrics: android.metrics.LogMaker mLogMaker>;

        entermonitor r1;

     label1:
        $r3 = r0.<android.app.slice.SliceMetrics: android.metrics.LogMaker mLogMaker>;

        $r4 = virtualinvoke $r3.<android.metrics.LogMaker: android.metrics.LogMaker setCategory(int)>(1401);

        virtualinvoke $r4.<android.metrics.LogMaker: android.metrics.LogMaker setType(int)>(1);

        $r7 = r0.<android.app.slice.SliceMetrics: com.android.internal.logging.MetricsLogger mMetricsLogger>;

        $r6 = r0.<android.app.slice.SliceMetrics: android.metrics.LogMaker mLogMaker>;

        virtualinvoke $r7.<com.android.internal.logging.MetricsLogger: void write(android.metrics.LogMaker)>($r6);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r8 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public static void <clinit>()
    {
        <android.app.slice.SliceMetrics: java.lang.String TAG> = "SliceMetrics";

        return;
    }
}
