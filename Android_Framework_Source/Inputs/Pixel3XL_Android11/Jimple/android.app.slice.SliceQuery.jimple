public class android.app.slice.SliceQuery extends java.lang.Object
{
    private static final java.lang.String TAG;

    public void <init>()
    {
        android.app.slice.SliceQuery r0;

        r0 := @this: android.app.slice.SliceQuery;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean compareTypes(android.app.slice.SliceItem, java.lang.String)
    {
        android.app.slice.SliceItem r0;
        java.lang.String r1, $r3, $r5, $r8, $r10, $r11, $r12;
        int $i0, $i1;
        java.lang.StringBuilder $r4;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: android.app.slice.SliceItem;

        r1 := @parameter1: java.lang.String;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 != 3 goto label1;

        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("*/*");

        if $z2 == 0 goto label1;

        return 1;

     label1:
        $r3 = virtualinvoke r0.<android.app.slice.SliceItem: java.lang.String getSubType()>();

        if $r3 != null goto label2;

        $i1 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(47);

        if $i1 >= 0 goto label2;

        $r12 = virtualinvoke r0.<android.app.slice.SliceItem: java.lang.String getFormat()>();

        $z1 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        return $z1;

     label2:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r0.<android.app.slice.SliceItem: java.lang.String getFormat()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r8 = virtualinvoke r0.<android.app.slice.SliceItem: java.lang.String getSubType()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = virtualinvoke r1.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\*", ".*");

        $z0 = virtualinvoke $r10.<java.lang.String: boolean matches(java.lang.String)>($r11);

        return $z0;
    }

    private static boolean contains(android.app.slice.SliceItem, android.app.slice.SliceItem)
    {
        android.app.slice.SliceItem r0, r1;
        java.util.stream.Stream $r2, $r4;
        android.app.slice._$$Lambda$SliceQuery$fdDPNErwIni_vCQ6k_MlGGBunoE $r3;
        java.util.Optional $r5;
        boolean $z0;

        r0 := @parameter0: android.app.slice.SliceItem;

        r1 := @parameter1: android.app.slice.SliceItem;

        if r0 == null goto label2;

        if r1 != null goto label1;

        goto label2;

     label1:
        $r2 = staticinvoke <android.app.slice.SliceQuery: java.util.stream.Stream stream(android.app.slice.SliceItem)>(r0);

        $r3 = new android.app.slice._$$Lambda$SliceQuery$fdDPNErwIni_vCQ6k_MlGGBunoE;

        specialinvoke $r3.<android.app.slice._$$Lambda$SliceQuery$fdDPNErwIni_vCQ6k_MlGGBunoE: void <init>(android.app.slice.SliceItem)>(r1);

        $r4 = interfaceinvoke $r2.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>($r3);

        $r5 = interfaceinvoke $r4.<java.util.stream.Stream: java.util.Optional findAny()>();

        $z0 = virtualinvoke $r5.<java.util.Optional: boolean isPresent()>();

        return $z0;

     label2:
        return 0;
    }

    public static android.app.slice.SliceItem find(android.app.slice.Slice, java.lang.String)
    {
        android.app.slice.Slice r0;
        java.lang.String r1;
        java.lang.String[] $r2;
        android.app.slice.SliceItem $r3;

        r0 := @parameter0: android.app.slice.Slice;

        r1 := @parameter1: java.lang.String;

        $r2 = (java.lang.String[]) null;

        $r3 = staticinvoke <android.app.slice.SliceQuery: android.app.slice.SliceItem find(android.app.slice.Slice,java.lang.String,java.lang.String[],java.lang.String[])>(r0, r1, $r2, null);

        return $r3;
    }

    public static android.app.slice.SliceItem find(android.app.slice.Slice, java.lang.String, java.lang.String, java.lang.String)
    {
        android.app.slice.Slice r0;
        java.lang.String r1, r2, r3;
        java.lang.String[] $r4, $r5;
        android.app.slice.SliceItem $r6;

        r0 := @parameter0: android.app.slice.Slice;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        $r4 = newarray (java.lang.String)[1];

        $r4[0] = r2;

        $r5 = newarray (java.lang.String)[1];

        $r5[0] = r3;

        $r6 = staticinvoke <android.app.slice.SliceQuery: android.app.slice.SliceItem find(android.app.slice.Slice,java.lang.String,java.lang.String[],java.lang.String[])>(r0, r1, $r4, $r5);

        return $r6;
    }

    public static android.app.slice.SliceItem find(android.app.slice.Slice, java.lang.String, java.lang.String[], java.lang.String[])
    {
        android.app.slice.Slice r0;
        java.lang.String r1;
        java.lang.String[] r2, r3, $r6, $r8;
        java.util.List r4;
        android.app.slice.SliceItem $r5, $r9;
        int $i0;
        java.lang.Object[] $r7;

        r0 := @parameter0: android.app.slice.Slice;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String[];

        r3 := @parameter3: java.lang.String[];

        r4 = virtualinvoke r0.<android.app.slice.Slice: java.util.List getHints()>();

        $r5 = new android.app.slice.SliceItem;

        $i0 = interfaceinvoke r4.<java.util.List: int size()>();

        $r6 = newarray (java.lang.String)[$i0];

        $r7 = interfaceinvoke r4.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r6);

        $r8 = (java.lang.String[]) $r7;

        specialinvoke $r5.<android.app.slice.SliceItem: void <init>(java.lang.Object,java.lang.String,java.lang.String,java.lang.String[])>(r0, "slice", null, $r8);

        $r9 = staticinvoke <android.app.slice.SliceQuery: android.app.slice.SliceItem find(android.app.slice.SliceItem,java.lang.String,java.lang.String[],java.lang.String[])>($r5, r1, r2, r3);

        return $r9;
    }

    public static android.app.slice.SliceItem find(android.app.slice.SliceItem, java.lang.String)
    {
        android.app.slice.SliceItem r0, $r3;
        java.lang.String r1;
        java.lang.String[] $r2;

        r0 := @parameter0: android.app.slice.SliceItem;

        r1 := @parameter1: java.lang.String;

        $r2 = (java.lang.String[]) null;

        $r3 = staticinvoke <android.app.slice.SliceQuery: android.app.slice.SliceItem find(android.app.slice.SliceItem,java.lang.String,java.lang.String[],java.lang.String[])>(r0, r1, $r2, null);

        return $r3;
    }

    public static android.app.slice.SliceItem find(android.app.slice.SliceItem, java.lang.String, java.lang.String, java.lang.String)
    {
        android.app.slice.SliceItem r0, $r6;
        java.lang.String r1, r2, r3;
        java.lang.String[] $r4, $r5;

        r0 := @parameter0: android.app.slice.SliceItem;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        $r4 = newarray (java.lang.String)[1];

        $r4[0] = r2;

        $r5 = newarray (java.lang.String)[1];

        $r5[0] = r3;

        $r6 = staticinvoke <android.app.slice.SliceQuery: android.app.slice.SliceItem find(android.app.slice.SliceItem,java.lang.String,java.lang.String[],java.lang.String[])>(r0, r1, $r4, $r5);

        return $r6;
    }

    public static android.app.slice.SliceItem find(android.app.slice.SliceItem, java.lang.String, java.lang.String[], java.lang.String[])
    {
        android.app.slice.SliceItem r0, $r9;
        java.lang.String r1;
        java.lang.String[] r2, r3;
        java.util.stream.Stream $r4, $r6;
        android.app.slice._$$Lambda$SliceQuery$cG9kHpHpv4nbm7p3sCvlkQGlqQw $r5;
        java.util.Optional $r7;
        java.lang.Object $r8;

        r0 := @parameter0: android.app.slice.SliceItem;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String[];

        r3 := @parameter3: java.lang.String[];

        $r4 = staticinvoke <android.app.slice.SliceQuery: java.util.stream.Stream stream(android.app.slice.SliceItem)>(r0);

        $r5 = new android.app.slice._$$Lambda$SliceQuery$cG9kHpHpv4nbm7p3sCvlkQGlqQw;

        specialinvoke $r5.<android.app.slice._$$Lambda$SliceQuery$cG9kHpHpv4nbm7p3sCvlkQGlqQw: void <init>(java.lang.String,java.lang.String[],java.lang.String[])>(r1, r2, r3);

        $r6 = interfaceinvoke $r4.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>($r5);

        $r7 = interfaceinvoke $r6.<java.util.stream.Stream: java.util.Optional findFirst()>();

        $r8 = virtualinvoke $r7.<java.util.Optional: java.lang.Object orElse(java.lang.Object)>(null);

        $r9 = (android.app.slice.SliceItem) $r8;

        return $r9;
    }

    public static java.util.List findAll(android.app.slice.SliceItem, java.lang.String)
    {
        android.app.slice.SliceItem r0;
        java.lang.String r1;
        java.lang.String[] $r2;
        java.util.List $r3;

        r0 := @parameter0: android.app.slice.SliceItem;

        r1 := @parameter1: java.lang.String;

        $r2 = (java.lang.String[]) null;

        $r3 = staticinvoke <android.app.slice.SliceQuery: java.util.List findAll(android.app.slice.SliceItem,java.lang.String,java.lang.String[],java.lang.String[])>(r0, r1, $r2, null);

        return $r3;
    }

    public static java.util.List findAll(android.app.slice.SliceItem, java.lang.String, java.lang.String, java.lang.String)
    {
        android.app.slice.SliceItem r0;
        java.lang.String r1, r2, r3;
        java.lang.String[] $r4, $r5;
        java.util.List $r6;

        r0 := @parameter0: android.app.slice.SliceItem;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        $r4 = newarray (java.lang.String)[1];

        $r4[0] = r2;

        $r5 = newarray (java.lang.String)[1];

        $r5[0] = r3;

        $r6 = staticinvoke <android.app.slice.SliceQuery: java.util.List findAll(android.app.slice.SliceItem,java.lang.String,java.lang.String[],java.lang.String[])>(r0, r1, $r4, $r5);

        return $r6;
    }

    public static java.util.List findAll(android.app.slice.SliceItem, java.lang.String, java.lang.String[], java.lang.String[])
    {
        android.app.slice.SliceItem r0;
        java.lang.String r1;
        java.lang.String[] r2, r3;
        java.util.stream.Stream $r4, $r6;
        android.app.slice._$$Lambda$SliceQuery$hLToAajdaMbaf8BUtZ8fpGK980E $r5;
        java.util.stream.Collector $r7;
        java.lang.Object $r8;
        java.util.List $r9;

        r0 := @parameter0: android.app.slice.SliceItem;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String[];

        r3 := @parameter3: java.lang.String[];

        $r4 = staticinvoke <android.app.slice.SliceQuery: java.util.stream.Stream stream(android.app.slice.SliceItem)>(r0);

        $r5 = new android.app.slice._$$Lambda$SliceQuery$hLToAajdaMbaf8BUtZ8fpGK980E;

        specialinvoke $r5.<android.app.slice._$$Lambda$SliceQuery$hLToAajdaMbaf8BUtZ8fpGK980E: void <init>(java.lang.String,java.lang.String[],java.lang.String[])>(r1, r2, r3);

        $r6 = interfaceinvoke $r4.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>($r5);

        $r7 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector toList()>();

        $r8 = interfaceinvoke $r6.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>($r7);

        $r9 = (java.util.List) $r8;

        return $r9;
    }

    public static android.app.slice.SliceItem findNotContaining(android.app.slice.SliceItem, java.util.List)
    {
        android.app.slice.SliceItem r0, r2, r4;
        java.util.List r1;
        int $i0;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @parameter0: android.app.slice.SliceItem;

        r1 := @parameter1: java.util.List;

        r4 = null;

     label1:
        if r4 != null goto label3;

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i0 == 0 goto label3;

        $r3 = interfaceinvoke r1.<java.util.List: java.lang.Object remove(int)>(0);

        r2 = (android.app.slice.SliceItem) $r3;

        $z0 = staticinvoke <android.app.slice.SliceQuery: boolean contains(android.app.slice.SliceItem,android.app.slice.SliceItem)>(r0, r2);

        if $z0 != 0 goto label2;

        r4 = r2;

     label2:
        goto label1;

     label3:
        return r4;
    }

    public static android.app.slice.SliceItem getPrimaryIcon(android.app.slice.Slice)
    {
        java.util.List $r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.Object $r1;
        java.lang.String $r2;
        android.app.slice.Slice r3;
        java.util.Iterator r4;
        android.app.slice.SliceItem r5, r6;

        r3 := @parameter0: android.app.slice.Slice;

        $r0 = virtualinvoke r3.<android.app.slice.Slice: java.util.List getItems()>();

        r4 = interfaceinvoke $r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r1 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (android.app.slice.SliceItem) $r1;

        $r2 = virtualinvoke r5.<android.app.slice.SliceItem: java.lang.String getFormat()>();

        $z1 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r2, "image");

        if $z1 == 0 goto label2;

        return r5;

     label2:
        $z2 = staticinvoke <android.app.slice.SliceQuery: boolean compareTypes(android.app.slice.SliceItem,java.lang.String)>(r5, "slice");

        if $z2 == 0 goto label3;

        $z6 = virtualinvoke r5.<android.app.slice.SliceItem: boolean hasHint(java.lang.String)>("list");

        if $z6 != 0 goto label4;

     label3:
        $z3 = virtualinvoke r5.<android.app.slice.SliceItem: boolean hasHint(java.lang.String)>("actions");

        if $z3 != 0 goto label4;

        $z4 = virtualinvoke r5.<android.app.slice.SliceItem: boolean hasHint(java.lang.String)>("list_item");

        if $z4 != 0 goto label4;

        $z5 = staticinvoke <android.app.slice.SliceQuery: boolean compareTypes(android.app.slice.SliceItem,java.lang.String)>(r5, "action");

        if $z5 != 0 goto label4;

        r6 = staticinvoke <android.app.slice.SliceQuery: android.app.slice.SliceItem find(android.app.slice.SliceItem,java.lang.String)>(r5, "image");

        if r6 == null goto label4;

        return r6;

     label4:
        goto label1;

     label5:
        return null;
    }

    static boolean lambda$contains$0(android.app.slice.SliceItem, android.app.slice.SliceItem)
    {
        android.app.slice.SliceItem r0, r1;
        boolean z0;

        r0 := @parameter0: android.app.slice.SliceItem;

        r1 := @parameter1: android.app.slice.SliceItem;

        if r1 != r0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    static boolean lambda$find$2(java.lang.String, java.lang.String[], java.lang.String[], android.app.slice.SliceItem)
    {
        java.lang.String r0;
        java.lang.String[] r1, r2;
        android.app.slice.SliceItem r3;
        boolean $z0, $z1, $z2, z3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String[];

        r2 := @parameter2: java.lang.String[];

        r3 := @parameter3: android.app.slice.SliceItem;

        $z0 = staticinvoke <android.app.slice.SliceQuery: boolean compareTypes(android.app.slice.SliceItem,java.lang.String)>(r3, r0);

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r3.<android.app.slice.SliceItem: boolean hasHints(java.lang.String[])>(r1);

        if $z1 == 0 goto label1;

        $z2 = virtualinvoke r3.<android.app.slice.SliceItem: boolean hasAnyHints(java.lang.String[])>(r2);

        if $z2 != 0 goto label1;

        z3 = 1;

        goto label2;

     label1:
        z3 = 0;

     label2:
        return z3;
    }

    static boolean lambda$findAll$1(java.lang.String, java.lang.String[], java.lang.String[], android.app.slice.SliceItem)
    {
        java.lang.String r0;
        java.lang.String[] r1, r2;
        android.app.slice.SliceItem r3;
        boolean $z0, $z1, $z2, z3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String[];

        r2 := @parameter2: java.lang.String[];

        r3 := @parameter3: android.app.slice.SliceItem;

        $z0 = staticinvoke <android.app.slice.SliceQuery: boolean compareTypes(android.app.slice.SliceItem,java.lang.String)>(r3, r0);

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r3.<android.app.slice.SliceItem: boolean hasHints(java.lang.String[])>(r1);

        if $z1 == 0 goto label1;

        $z2 = virtualinvoke r3.<android.app.slice.SliceItem: boolean hasAnyHints(java.lang.String[])>(r2);

        if $z2 != 0 goto label1;

        z3 = 1;

        goto label2;

     label1:
        z3 = 0;

     label2:
        return z3;
    }

    public static java.util.stream.Stream stream(android.app.slice.SliceItem)
    {
        android.app.slice.SliceItem r0;
        java.util.LinkedList $r2;
        android.app.slice.SliceQuery$1 $r3;
        java.util.Spliterator $r4;
        java.util.stream.Stream $r5;

        r0 := @parameter0: android.app.slice.SliceItem;

        $r2 = new java.util.LinkedList;

        specialinvoke $r2.<java.util.LinkedList: void <init>()>();

        interfaceinvoke $r2.<java.util.Queue: boolean add(java.lang.Object)>(r0);

        $r3 = new android.app.slice.SliceQuery$1;

        specialinvoke $r3.<android.app.slice.SliceQuery$1: void <init>(java.util.Queue)>($r2);

        $r4 = staticinvoke <java.util.Spliterators: java.util.Spliterator spliteratorUnknownSize(java.util.Iterator,int)>($r3, 0);

        $r5 = staticinvoke <java.util.stream.StreamSupport: java.util.stream.Stream stream(java.util.Spliterator,boolean)>($r4, 0);

        return $r5;
    }

    public static void <clinit>()
    {
        <android.app.slice.SliceQuery: java.lang.String TAG> = "SliceQuery";

        return;
    }
}
