public final class android.app.timezonedetector.TelephonyTimeZoneSuggestion extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    public static final int MATCH_TYPE_EMULATOR_ZONE_ID;
    public static final int MATCH_TYPE_NA;
    public static final int MATCH_TYPE_NETWORK_COUNTRY_AND_OFFSET;
    public static final int MATCH_TYPE_NETWORK_COUNTRY_ONLY;
    public static final int MATCH_TYPE_TEST_NETWORK_OFFSET_ONLY;
    public static final int QUALITY_MULTIPLE_ZONES_WITH_DIFFERENT_OFFSETS;
    public static final int QUALITY_MULTIPLE_ZONES_WITH_SAME_OFFSET;
    public static final int QUALITY_NA;
    public static final int QUALITY_SINGLE_ZONE;
    private java.util.List mDebugInfo;
    private final int mMatchType;
    private final int mQuality;
    private final int mSlotIndex;
    private final java.lang.String mZoneId;

    static void <clinit>()
    {
        android.app.timezonedetector.TelephonyTimeZoneSuggestion$1 $r0;

        <android.app.timezonedetector.TelephonyTimeZoneSuggestion: int QUALITY_SINGLE_ZONE> = 1;

        <android.app.timezonedetector.TelephonyTimeZoneSuggestion: int QUALITY_NA> = 0;

        <android.app.timezonedetector.TelephonyTimeZoneSuggestion: int QUALITY_MULTIPLE_ZONES_WITH_SAME_OFFSET> = 2;

        <android.app.timezonedetector.TelephonyTimeZoneSuggestion: int QUALITY_MULTIPLE_ZONES_WITH_DIFFERENT_OFFSETS> = 3;

        <android.app.timezonedetector.TelephonyTimeZoneSuggestion: int MATCH_TYPE_TEST_NETWORK_OFFSET_ONLY> = 5;

        <android.app.timezonedetector.TelephonyTimeZoneSuggestion: int MATCH_TYPE_NETWORK_COUNTRY_ONLY> = 2;

        <android.app.timezonedetector.TelephonyTimeZoneSuggestion: int MATCH_TYPE_NETWORK_COUNTRY_AND_OFFSET> = 3;

        <android.app.timezonedetector.TelephonyTimeZoneSuggestion: int MATCH_TYPE_NA> = 0;

        <android.app.timezonedetector.TelephonyTimeZoneSuggestion: int MATCH_TYPE_EMULATOR_ZONE_ID> = 4;

        $r0 = new android.app.timezonedetector.TelephonyTimeZoneSuggestion$1;

        specialinvoke $r0.<android.app.timezonedetector.TelephonyTimeZoneSuggestion$1: void <init>()>();

        <android.app.timezonedetector.TelephonyTimeZoneSuggestion: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    private void <init>(android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder)
    {
        android.app.timezonedetector.TelephonyTimeZoneSuggestion r0;
        int $i0, $i1, $i2;
        java.lang.String $r1;
        java.util.List $r2, $r4;
        java.util.ArrayList $r3, r6;
        android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder r5;

        r0 := @this: android.app.timezonedetector.TelephonyTimeZoneSuggestion;

        r5 := @parameter0: android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = staticinvoke <android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder: int access$100(android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder)>(r5);

        r0.<android.app.timezonedetector.TelephonyTimeZoneSuggestion: int mSlotIndex> = $i0;

        $r1 = staticinvoke <android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder: java.lang.String access$200(android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder)>(r5);

        r0.<android.app.timezonedetector.TelephonyTimeZoneSuggestion: java.lang.String mZoneId> = $r1;

        $i1 = staticinvoke <android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder: int access$300(android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder)>(r5);

        r0.<android.app.timezonedetector.TelephonyTimeZoneSuggestion: int mMatchType> = $i1;

        $i2 = staticinvoke <android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder: int access$400(android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder)>(r5);

        r0.<android.app.timezonedetector.TelephonyTimeZoneSuggestion: int mQuality> = $i2;

        $r2 = staticinvoke <android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder: java.util.List access$500(android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder)>(r5);

        if $r2 == null goto label1;

        $r3 = new java.util.ArrayList;

        $r4 = staticinvoke <android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder: java.util.List access$500(android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder)>(r5);

        specialinvoke $r3.<java.util.ArrayList: void <init>(java.util.Collection)>($r4);

        r6 = $r3;

        goto label2;

     label1:
        r6 = null;

     label2:
        r0.<android.app.timezonedetector.TelephonyTimeZoneSuggestion: java.util.List mDebugInfo> = r6;

        return;
    }

    void <init>(android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder, android.app.timezonedetector.TelephonyTimeZoneSuggestion$1)
    {
        android.app.timezonedetector.TelephonyTimeZoneSuggestion r0;
        android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder r1;
        android.app.timezonedetector.TelephonyTimeZoneSuggestion$1 r2;

        r0 := @this: android.app.timezonedetector.TelephonyTimeZoneSuggestion;

        r1 := @parameter0: android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder;

        r2 := @parameter1: android.app.timezonedetector.TelephonyTimeZoneSuggestion$1;

        specialinvoke r0.<android.app.timezonedetector.TelephonyTimeZoneSuggestion: void <init>(android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder)>(r1);

        return;
    }

    static android.app.timezonedetector.TelephonyTimeZoneSuggestion access$000(android.os.Parcel)
    {
        android.os.Parcel r0;
        android.app.timezonedetector.TelephonyTimeZoneSuggestion $r1;

        r0 := @parameter0: android.os.Parcel;

        $r1 = staticinvoke <android.app.timezonedetector.TelephonyTimeZoneSuggestion: android.app.timezonedetector.TelephonyTimeZoneSuggestion createFromParcel(android.os.Parcel)>(r0);

        return $r1;
    }

    public static android.app.timezonedetector.TelephonyTimeZoneSuggestion createEmptySuggestion(int, java.lang.String)
    {
        int i0;
        java.lang.String r0;
        android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder $r1, $r2;
        android.app.timezonedetector.TelephonyTimeZoneSuggestion $r3;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.String;

        $r1 = new android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder;

        specialinvoke $r1.<android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder: void <init>(int)>(i0);

        $r2 = virtualinvoke $r1.<android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder: android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder addDebugInfo(java.lang.String)>(r0);

        $r3 = virtualinvoke $r2.<android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder: android.app.timezonedetector.TelephonyTimeZoneSuggestion build()>();

        return $r3;
    }

    private static android.app.timezonedetector.TelephonyTimeZoneSuggestion createFromParcel(android.os.Parcel)
    {
        android.app.timezonedetector.TelephonyTimeZoneSuggestion r0;
        android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder $r1, $r3, $r4, $r5;
        int $i0, $i1, $i2;
        java.lang.String $r2;
        java.lang.Class $r6;
        java.lang.ClassLoader $r7;
        android.os.Parcel r8;
        java.util.ArrayList r9;

        r8 := @parameter0: android.os.Parcel;

        $r1 = new android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder;

        $i0 = virtualinvoke r8.<android.os.Parcel: int readInt()>();

        specialinvoke $r1.<android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder: void <init>(int)>($i0);

        $r2 = virtualinvoke r8.<android.os.Parcel: java.lang.String readString()>();

        $r3 = virtualinvoke $r1.<android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder: android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder setZoneId(java.lang.String)>($r2);

        $i1 = virtualinvoke r8.<android.os.Parcel: int readInt()>();

        $r4 = virtualinvoke $r3.<android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder: android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder setMatchType(int)>($i1);

        $i2 = virtualinvoke r8.<android.os.Parcel: int readInt()>();

        $r5 = virtualinvoke $r4.<android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder: android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder setQuality(int)>($i2);

        r0 = virtualinvoke $r5.<android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder: android.app.timezonedetector.TelephonyTimeZoneSuggestion build()>();

        $r6 = class "Landroid/app/timezonedetector/TelephonyTimeZoneSuggestion;";

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        r9 = virtualinvoke r8.<android.os.Parcel: java.util.ArrayList readArrayList(java.lang.ClassLoader)>($r7);

        if r9 == null goto label1;

        virtualinvoke r0.<android.app.timezonedetector.TelephonyTimeZoneSuggestion: void addDebugInfo(java.util.List)>(r9);

     label1:
        return r0;
    }

    public static android.app.timezonedetector.TelephonyTimeZoneSuggestion parseCommandLineArg(android.os.ShellCommand) throws java.lang.IllegalArgumentException
    {
        java.lang.String r0, $r7, $r9, $r10, $r15, $r16, r19;
        java.lang.IllegalArgumentException $r1, $r14;
        android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        android.app.timezonedetector.TelephonyTimeZoneSuggestion $r4;
        java.lang.StringBuilder $r11;
        android.os.ShellCommand r17;
        java.lang.Integer r18, r20, r21;
        byte b7;

        r17 := @parameter0: android.os.ShellCommand;

        r18 = null;

        r19 = null;

        r20 = null;

        r21 = null;

     label01:
        r0 = virtualinvoke r17.<android.os.ShellCommand: java.lang.String getNextArg()>();

        if r0 == null goto label13;

        b7 = -1;

        $i3 = virtualinvoke r0.<java.lang.String: int hashCode()>();

        lookupswitch($i3)
        {
            case -174375148: goto label06;
            case 1274807534: goto label05;
            case 2037196639: goto label04;
            case 2069298417: goto label03;
            default: goto label02;
        };

     label02:
        goto label07;

     label03:
        $z2 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("--slot_index");

        if $z2 == 0 goto label02;

        b7 = 0;

        goto label07;

     label04:
        $z3 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("--quality");

        if $z3 == 0 goto label02;

        b7 = 2;

        goto label07;

     label05:
        $z4 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("--zone_id");

        if $z4 == 0 goto label02;

        b7 = 1;

        goto label07;

     label06:
        $z5 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("--match_type");

        if $z5 == 0 goto label02;

        b7 = 3;

     label07:
        if b7 == 0 goto label11;

        if b7 == 1 goto label10;

        if b7 == 2 goto label09;

        if b7 != 3 goto label08;

        $r16 = virtualinvoke r17.<android.os.ShellCommand: java.lang.String getNextArgRequired()>();

        $i6 = staticinvoke <android.app.timezonedetector.TelephonyTimeZoneSuggestion: int parseMatchTypeCommandLineArg(java.lang.String)>($r16);

        r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        goto label12;

     label08:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown option: ");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r14 = new java.lang.IllegalArgumentException;

        $r15 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r15);

        throw $r14;

     label09:
        $r10 = virtualinvoke r17.<android.os.ShellCommand: java.lang.String getNextArgRequired()>();

        $i5 = staticinvoke <android.app.timezonedetector.TelephonyTimeZoneSuggestion: int parseQualityCommandLineArg(java.lang.String)>($r10);

        r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        goto label12;

     label10:
        r19 = virtualinvoke r17.<android.os.ShellCommand: java.lang.String getNextArgRequired()>();

        goto label12;

     label11:
        $r9 = virtualinvoke r17.<android.os.ShellCommand: java.lang.String getNextArgRequired()>();

        $i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r9);

        r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

     label12:
        goto label01;

     label13:
        if r18 == null goto label17;

        $r2 = new android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder;

        $i0 = virtualinvoke r18.<java.lang.Integer: int intValue()>();

        specialinvoke $r2.<android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder: void <init>(int)>($i0);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r19);

        if $z0 != 0 goto label14;

        $r7 = "_";

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r19);

        if $z1 != 0 goto label14;

        virtualinvoke $r2.<android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder: android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder setZoneId(java.lang.String)>(r19);

     label14:
        if r20 == null goto label15;

        $i2 = virtualinvoke r20.<java.lang.Integer: int intValue()>();

        virtualinvoke $r2.<android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder: android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder setQuality(int)>($i2);

     label15:
        if r21 == null goto label16;

        $i1 = virtualinvoke r21.<java.lang.Integer: int intValue()>();

        virtualinvoke $r2.<android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder: android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder setMatchType(int)>($i1);

     label16:
        virtualinvoke $r2.<android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder: android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder addDebugInfo(java.lang.String)>("Command line injection");

        $r4 = virtualinvoke $r2.<android.app.timezonedetector.TelephonyTimeZoneSuggestion$Builder: android.app.timezonedetector.TelephonyTimeZoneSuggestion build()>();

        return $r4;

     label17:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("No slotIndex specified.");

        throw $r1;
    }

    private static int parseMatchTypeCommandLineArg(java.lang.String)
    {
        java.lang.String r0, $r6;
        int $i0;
        boolean $z0, $z1, $z2, $z3;
        java.lang.StringBuilder $r2;
        java.lang.IllegalArgumentException $r5;
        byte b1;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int hashCode()>();

        lookupswitch($i0)
        {
            case -1592694013: goto label05;
            case 556438401: goto label04;
            case 957831062: goto label03;
            case 1336193813: goto label02;
            default: goto label01;
        };

     label01:
        goto label06;

     label02:
        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("emulator");

        if $z0 == 0 goto label01;

        b1 = 0;

        goto label07;

     label03:
        $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("country");

        if $z1 == 0 goto label01;

        b1 = 2;

        goto label07;

     label04:
        $z2 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("test_network");

        if $z2 == 0 goto label01;

        b1 = 3;

        goto label07;

     label05:
        $z3 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("country_with_offset");

        if $z3 == 0 goto label01;

        b1 = 1;

        goto label07;

     label06:
        b1 = -1;

     label07:
        if b1 == 0 goto label11;

        if b1 == 1 goto label10;

        if b1 == 2 goto label09;

        if b1 != 3 goto label08;

        return 5;

     label08:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unrecognized match_type: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label09:
        return 2;

     label10:
        return 3;

     label11:
        return 4;
    }

    private static int parseQualityCommandLineArg(java.lang.String)
    {
        java.lang.String r0, $r6;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r2;
        java.lang.IllegalArgumentException $r5;
        int i0;
        byte b1;

        r0 := @parameter0: java.lang.String;

        i0 = virtualinvoke r0.<java.lang.String: int hashCode()>();

        if i0 == -902265784 goto label4;

        if i0 == -650306251 goto label3;

        if i0 == 1611832522 goto label2;

     label1:
        goto label5;

     label2:
        $z2 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("multiple_different");

        if $z2 == 0 goto label1;

        b1 = 2;

        goto label6;

     label3:
        $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("multiple_same");

        if $z1 == 0 goto label1;

        b1 = 1;

        goto label6;

     label4:
        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("single");

        if $z0 == 0 goto label1;

        b1 = 0;

        goto label6;

     label5:
        b1 = -1;

     label6:
        if b1 == 0 goto label9;

        if b1 == 1 goto label8;

        if b1 != 2 goto label7;

        return 3;

     label7:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unrecognized quality: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label8:
        return 2;

     label9:
        return 1;
    }

    public static void printCommandLineOpts(java.io.PrintWriter)
    {
        java.io.PrintWriter r0;
        java.lang.StringBuilder $r2;
        java.lang.Class $r4;
        java.lang.String $r5, $r8;

        r0 := @parameter0: java.io.PrintWriter;

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("Telephony suggestion options:");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("  --slot_index <number>");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("  To withdraw a previous suggestion:");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("    [--zone_id \"_\"]");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("  To make a new suggestion:");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("    --zone_id <Olson ID>");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("    --quality <single|multiple_same|multiple_different>");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("    --match_type <emulator|country_with_offset|country|test_network>");

        virtualinvoke r0.<java.io.PrintWriter: void println()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("See ");

        $r4 = class "Landroid/app/timezonedetector/TelephonyTimeZoneSuggestion;";

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for more information");

        $r8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r8);

        return;
    }

    public void addDebugInfo(java.lang.String)
    {
        android.app.timezonedetector.TelephonyTimeZoneSuggestion r0;
        java.lang.String r1;
        java.util.List $r2, $r3;
        java.util.ArrayList $r4;

        r0 := @this: android.app.timezonedetector.TelephonyTimeZoneSuggestion;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.app.timezonedetector.TelephonyTimeZoneSuggestion: java.util.List mDebugInfo>;

        if $r2 != null goto label1;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<android.app.timezonedetector.TelephonyTimeZoneSuggestion: java.util.List mDebugInfo> = $r4;

     label1:
        $r3 = r0.<android.app.timezonedetector.TelephonyTimeZoneSuggestion: java.util.List mDebugInfo>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void addDebugInfo(java.util.List)
    {
        android.app.timezonedetector.TelephonyTimeZoneSuggestion r0;
        java.util.List r1, $r2, $r3;
        java.util.ArrayList $r4;
        int $i0;

        r0 := @this: android.app.timezonedetector.TelephonyTimeZoneSuggestion;

        r1 := @parameter0: java.util.List;

        $r2 = r0.<android.app.timezonedetector.TelephonyTimeZoneSuggestion: java.util.List mDebugInfo>;

        if $r2 != null goto label1;

        $r4 = new java.util.ArrayList;

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        specialinvoke $r4.<java.util.ArrayList: void <init>(int)>($i0);

        r0.<android.app.timezonedetector.TelephonyTimeZoneSuggestion: java.util.List mDebugInfo> = $r4;

     label1:
        $r3 = r0.<android.app.timezonedetector.TelephonyTimeZoneSuggestion: java.util.List mDebugInfo>;

        interfaceinvoke $r3.<java.util.List: boolean addAll(java.util.Collection)>(r1);

        return;
    }

    public int describeContents()
    {
        android.app.timezonedetector.TelephonyTimeZoneSuggestion r0;

        r0 := @this: android.app.timezonedetector.TelephonyTimeZoneSuggestion;

        return 0;
    }

    public boolean equals(java.lang.Object)
    {
        android.app.timezonedetector.TelephonyTimeZoneSuggestion r0, r6;
        java.lang.Class $r1, $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.String $r3, $r4;
        boolean $z0, z1;
        java.lang.Object r5;

        r0 := @this: android.app.timezonedetector.TelephonyTimeZoneSuggestion;

        r5 := @parameter0: java.lang.Object;

        z1 = 1;

        if r0 != r5 goto label1;

        return 1;

     label1:
        if r5 == null goto label5;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke r5.<java.lang.Object: java.lang.Class getClass()>();

        if $r1 == $r2 goto label2;

        goto label5;

     label2:
        r6 = (android.app.timezonedetector.TelephonyTimeZoneSuggestion) r5;

        $i1 = r0.<android.app.timezonedetector.TelephonyTimeZoneSuggestion: int mSlotIndex>;

        $i0 = r6.<android.app.timezonedetector.TelephonyTimeZoneSuggestion: int mSlotIndex>;

        if $i1 != $i0 goto label3;

        $i3 = r0.<android.app.timezonedetector.TelephonyTimeZoneSuggestion: int mMatchType>;

        $i2 = r6.<android.app.timezonedetector.TelephonyTimeZoneSuggestion: int mMatchType>;

        if $i3 != $i2 goto label3;

        $i5 = r0.<android.app.timezonedetector.TelephonyTimeZoneSuggestion: int mQuality>;

        $i4 = r6.<android.app.timezonedetector.TelephonyTimeZoneSuggestion: int mQuality>;

        if $i5 != $i4 goto label3;

        $r4 = r0.<android.app.timezonedetector.TelephonyTimeZoneSuggestion: java.lang.String mZoneId>;

        $r3 = r6.<android.app.timezonedetector.TelephonyTimeZoneSuggestion: java.lang.String mZoneId>;

        $z0 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r4, $r3);

        if $z0 == 0 goto label3;

        goto label4;

     label3:
        z1 = 0;

     label4:
        return z1;

     label5:
        return 0;
    }

    public java.util.List getDebugInfo()
    {
        android.app.timezonedetector.TelephonyTimeZoneSuggestion r0;
        java.util.List r1, r2;

        r0 := @this: android.app.timezonedetector.TelephonyTimeZoneSuggestion;

        r1 = r0.<android.app.timezonedetector.TelephonyTimeZoneSuggestion: java.util.List mDebugInfo>;

        if r1 != null goto label1;

        r2 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        goto label2;

     label1:
        r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(r1);

     label2:
        return r2;
    }

    public int getMatchType()
    {
        android.app.timezonedetector.TelephonyTimeZoneSuggestion r0;
        int $i0;

        r0 := @this: android.app.timezonedetector.TelephonyTimeZoneSuggestion;

        $i0 = r0.<android.app.timezonedetector.TelephonyTimeZoneSuggestion: int mMatchType>;

        return $i0;
    }

    public int getQuality()
    {
        android.app.timezonedetector.TelephonyTimeZoneSuggestion r0;
        int $i0;

        r0 := @this: android.app.timezonedetector.TelephonyTimeZoneSuggestion;

        $i0 = r0.<android.app.timezonedetector.TelephonyTimeZoneSuggestion: int mQuality>;

        return $i0;
    }

    public int getSlotIndex()
    {
        android.app.timezonedetector.TelephonyTimeZoneSuggestion r0;
        int $i0;

        r0 := @this: android.app.timezonedetector.TelephonyTimeZoneSuggestion;

        $i0 = r0.<android.app.timezonedetector.TelephonyTimeZoneSuggestion: int mSlotIndex>;

        return $i0;
    }

    public java.lang.String getZoneId()
    {
        android.app.timezonedetector.TelephonyTimeZoneSuggestion r0;
        java.lang.String $r1;

        r0 := @this: android.app.timezonedetector.TelephonyTimeZoneSuggestion;

        $r1 = r0.<android.app.timezonedetector.TelephonyTimeZoneSuggestion: java.lang.String mZoneId>;

        return $r1;
    }

    public int hashCode()
    {
        android.app.timezonedetector.TelephonyTimeZoneSuggestion r0;
        java.lang.Object[] $r1;
        int $i0, $i1, $i2, $i3;
        java.lang.Integer $r2, $r4, $r5;
        java.lang.String $r3;

        r0 := @this: android.app.timezonedetector.TelephonyTimeZoneSuggestion;

        $r1 = newarray (java.lang.Object)[4];

        $i0 = r0.<android.app.timezonedetector.TelephonyTimeZoneSuggestion: int mSlotIndex>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r1[0] = $r2;

        $r3 = r0.<android.app.timezonedetector.TelephonyTimeZoneSuggestion: java.lang.String mZoneId>;

        $r1[1] = $r3;

        $i1 = r0.<android.app.timezonedetector.TelephonyTimeZoneSuggestion: int mMatchType>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r1[2] = $r4;

        $i2 = r0.<android.app.timezonedetector.TelephonyTimeZoneSuggestion: int mQuality>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r1[3] = $r5;

        $i3 = staticinvoke <java.util.Objects: int hash(java.lang.Object[])>($r1);

        return $i3;
    }

    public java.lang.String toString()
    {
        android.app.timezonedetector.TelephonyTimeZoneSuggestion r0;
        java.lang.StringBuilder $r2;
        int $i0, $i1, $i2;
        java.lang.String $r6, $r17;
        java.util.List $r14;

        r0 := @this: android.app.timezonedetector.TelephonyTimeZoneSuggestion;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TelephonyTimeZoneSuggestion{mSlotIndex=");

        $i0 = r0.<android.app.timezonedetector.TelephonyTimeZoneSuggestion: int mSlotIndex>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mZoneId=\'");

        $r6 = r0.<android.app.timezonedetector.TelephonyTimeZoneSuggestion: java.lang.String mZoneId>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mMatchType=");

        $i1 = r0.<android.app.timezonedetector.TelephonyTimeZoneSuggestion: int mMatchType>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mQuality=");

        $i2 = r0.<android.app.timezonedetector.TelephonyTimeZoneSuggestion: int mQuality>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mDebugInfo=");

        $r14 = r0.<android.app.timezonedetector.TelephonyTimeZoneSuggestion: java.util.List mDebugInfo>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r17 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r17;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.app.timezonedetector.TelephonyTimeZoneSuggestion r0;
        android.os.Parcel r1;
        int i0, $i1, $i2, $i3;
        java.lang.String $r2;
        java.util.List $r3;

        r0 := @this: android.app.timezonedetector.TelephonyTimeZoneSuggestion;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $i1 = r0.<android.app.timezonedetector.TelephonyTimeZoneSuggestion: int mSlotIndex>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $r2 = r0.<android.app.timezonedetector.TelephonyTimeZoneSuggestion: java.lang.String mZoneId>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r2);

        $i2 = r0.<android.app.timezonedetector.TelephonyTimeZoneSuggestion: int mMatchType>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i2);

        $i3 = r0.<android.app.timezonedetector.TelephonyTimeZoneSuggestion: int mQuality>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i3);

        $r3 = r0.<android.app.timezonedetector.TelephonyTimeZoneSuggestion: java.util.List mDebugInfo>;

        virtualinvoke r1.<android.os.Parcel: void writeList(java.util.List)>($r3);

        return;
    }
}
