public class android.app.trust.TrustManager extends java.lang.Object
{
    private static final java.lang.String DATA_FLAGS;
    private static final java.lang.String DATA_MESSAGE;
    private static final int MSG_TRUST_CHANGED;
    private static final int MSG_TRUST_ERROR;
    private static final int MSG_TRUST_MANAGED_CHANGED;
    private static final java.lang.String TAG;
    private final android.os.Handler mHandler;
    private final android.app.trust.ITrustManager mService;
    private final android.util.ArrayMap mTrustListeners;

    public void <init>(android.os.IBinder)
    {
        android.app.trust.TrustManager r0;
        android.os.IBinder r1;
        android.app.trust.TrustManager$2 $r2;
        android.os.Looper $r3;
        android.app.trust.ITrustManager $r4;
        android.util.ArrayMap $r5;

        r0 := @this: android.app.trust.TrustManager;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new android.app.trust.TrustManager$2;

        $r3 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke $r2.<android.app.trust.TrustManager$2: void <init>(android.app.trust.TrustManager,android.os.Looper)>(r0, $r3);

        r0.<android.app.trust.TrustManager: android.os.Handler mHandler> = $r2;

        $r4 = staticinvoke <android.app.trust.ITrustManager$Stub: android.app.trust.ITrustManager asInterface(android.os.IBinder)>(r1);

        r0.<android.app.trust.TrustManager: android.app.trust.ITrustManager mService> = $r4;

        $r5 = new android.util.ArrayMap;

        specialinvoke $r5.<android.util.ArrayMap: void <init>()>();

        r0.<android.app.trust.TrustManager: android.util.ArrayMap mTrustListeners> = $r5;

        return;
    }

    static android.os.Handler access$000(android.app.trust.TrustManager)
    {
        android.app.trust.TrustManager r0;
        android.os.Handler $r1;

        r0 := @parameter0: android.app.trust.TrustManager;

        $r1 = r0.<android.app.trust.TrustManager: android.os.Handler mHandler>;

        return $r1;
    }

    public void clearAllBiometricRecognized(android.hardware.biometrics.BiometricSourceType)
    {
        android.app.trust.TrustManager r0;
        android.app.trust.ITrustManager $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        android.hardware.biometrics.BiometricSourceType r4;

        r0 := @this: android.app.trust.TrustManager;

        r4 := @parameter0: android.hardware.biometrics.BiometricSourceType;

     label1:
        $r1 = r0.<android.app.trust.TrustManager: android.app.trust.ITrustManager mService>;

        interfaceinvoke $r1.<android.app.trust.ITrustManager: void clearAllBiometricRecognized(android.hardware.biometrics.BiometricSourceType)>(r4);

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isTrustUsuallyManaged(int)
    {
        android.app.trust.TrustManager r0;
        int i0;
        boolean z0;
        android.app.trust.ITrustManager $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;

        r0 := @this: android.app.trust.TrustManager;

        i0 := @parameter0: int;

     label1:
        $r2 = r0.<android.app.trust.TrustManager: android.app.trust.ITrustManager mService>;

        z0 = interfaceinvoke $r2.<android.app.trust.ITrustManager: boolean isTrustUsuallyManaged(int)>(i0);

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void registerTrustListener(android.app.trust.TrustManager$TrustListener)
    {
        android.app.trust.TrustManager r0;
        android.app.trust.TrustManager$1 r1;
        android.app.trust.ITrustManager $r2;
        android.util.ArrayMap $r3;
        android.os.RemoteException $r5;
        java.lang.RuntimeException $r6;
        android.app.trust.TrustManager$TrustListener r7;

        r0 := @this: android.app.trust.TrustManager;

        r7 := @parameter0: android.app.trust.TrustManager$TrustListener;

     label1:
        r1 = new android.app.trust.TrustManager$1;

        specialinvoke r1.<android.app.trust.TrustManager$1: void <init>(android.app.trust.TrustManager,android.app.trust.TrustManager$TrustListener)>(r0, r7);

        $r2 = r0.<android.app.trust.TrustManager: android.app.trust.ITrustManager mService>;

        interfaceinvoke $r2.<android.app.trust.ITrustManager: void registerTrustListener(android.app.trust.ITrustListener)>(r1);

        $r3 = r0.<android.app.trust.TrustManager: android.util.ArrayMap mTrustListeners>;

        virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, r1);

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        $r6 = virtualinvoke $r5.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r6;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void reportEnabledTrustAgentsChanged(int)
    {
        android.app.trust.TrustManager r0;
        int i0;
        android.app.trust.ITrustManager $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;

        r0 := @this: android.app.trust.TrustManager;

        i0 := @parameter0: int;

     label1:
        $r2 = r0.<android.app.trust.TrustManager: android.app.trust.ITrustManager mService>;

        interfaceinvoke $r2.<android.app.trust.ITrustManager: void reportEnabledTrustAgentsChanged(int)>(i0);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void reportKeyguardShowingChanged()
    {
        android.app.trust.TrustManager r0;
        android.app.trust.ITrustManager $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;

        r0 := @this: android.app.trust.TrustManager;

     label1:
        $r2 = r0.<android.app.trust.TrustManager: android.app.trust.ITrustManager mService>;

        interfaceinvoke $r2.<android.app.trust.ITrustManager: void reportKeyguardShowingChanged()>();

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void reportUnlockAttempt(boolean, int)
    {
        android.app.trust.TrustManager r0;
        boolean z0;
        int i0;
        android.app.trust.ITrustManager $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;

        r0 := @this: android.app.trust.TrustManager;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

     label1:
        $r2 = r0.<android.app.trust.TrustManager: android.app.trust.ITrustManager mService>;

        interfaceinvoke $r2.<android.app.trust.ITrustManager: void reportUnlockAttempt(boolean,int)>(z0, i0);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void reportUnlockLockout(int, int)
    {
        android.app.trust.TrustManager r0;
        int i0, i1;
        android.app.trust.ITrustManager $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;

        r0 := @this: android.app.trust.TrustManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

     label1:
        $r2 = r0.<android.app.trust.TrustManager: android.app.trust.ITrustManager mService>;

        interfaceinvoke $r2.<android.app.trust.ITrustManager: void reportUnlockLockout(int,int)>(i0, i1);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setDeviceLockedForUser(int, boolean)
    {
        android.app.trust.TrustManager r0;
        int i0;
        boolean z0;
        android.app.trust.ITrustManager $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;

        r0 := @this: android.app.trust.TrustManager;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

     label1:
        $r2 = r0.<android.app.trust.TrustManager: android.app.trust.ITrustManager mService>;

        interfaceinvoke $r2.<android.app.trust.ITrustManager: void setDeviceLockedForUser(int,boolean)>(i0, z0);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void unlockedByBiometricForUser(int, android.hardware.biometrics.BiometricSourceType)
    {
        android.app.trust.TrustManager r0;
        int i0;
        android.app.trust.ITrustManager $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        android.hardware.biometrics.BiometricSourceType r4;

        r0 := @this: android.app.trust.TrustManager;

        i0 := @parameter0: int;

        r4 := @parameter1: android.hardware.biometrics.BiometricSourceType;

     label1:
        $r1 = r0.<android.app.trust.TrustManager: android.app.trust.ITrustManager mService>;

        interfaceinvoke $r1.<android.app.trust.ITrustManager: void unlockedByBiometricForUser(int,android.hardware.biometrics.BiometricSourceType)>(i0, r4);

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void unregisterTrustListener(android.app.trust.TrustManager$TrustListener)
    {
        android.app.trust.TrustManager r0;
        android.util.ArrayMap $r1;
        java.lang.Object $r2;
        android.app.trust.ITrustManager $r3;
        android.os.RemoteException $r4;
        java.lang.RuntimeException $r5;
        android.app.trust.TrustManager$TrustListener r6;
        android.app.trust.ITrustListener r7;

        r0 := @this: android.app.trust.TrustManager;

        r6 := @parameter0: android.app.trust.TrustManager$TrustListener;

        $r1 = r0.<android.app.trust.TrustManager: android.util.ArrayMap mTrustListeners>;

        $r2 = virtualinvoke $r1.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r6);

        r7 = (android.app.trust.ITrustListener) $r2;

        if r7 == null goto label4;

     label1:
        $r3 = r0.<android.app.trust.TrustManager: android.app.trust.ITrustManager mService>;

        interfaceinvoke $r3.<android.app.trust.ITrustManager: void unregisterTrustListener(android.app.trust.ITrustListener)>(r7);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = virtualinvoke $r4.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r5;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <android.app.trust.TrustManager: java.lang.String TAG> = "TrustManager";

        <android.app.trust.TrustManager: int MSG_TRUST_MANAGED_CHANGED> = 2;

        <android.app.trust.TrustManager: int MSG_TRUST_ERROR> = 3;

        <android.app.trust.TrustManager: int MSG_TRUST_CHANGED> = 1;

        <android.app.trust.TrustManager: java.lang.String DATA_MESSAGE> = "message";

        <android.app.trust.TrustManager: java.lang.String DATA_FLAGS> = "initiatedByUser";

        return;
    }
}
