public final class android.app.usage.NetworkStats extends java.lang.Object implements java.lang.AutoCloseable
{
    private static final java.lang.String TAG;
    private final dalvik.system.CloseGuard mCloseGuard;
    private final long mEndTimeStamp;
    private int mEnumerationIndex;
    private android.net.NetworkStatsHistory mHistory;
    private android.net.NetworkStatsHistory$Entry mRecycledHistoryEntry;
    private android.net.NetworkStats$Entry mRecycledSummaryEntry;
    private android.net.INetworkStatsSession mSession;
    private final long mStartTimeStamp;
    private int mState;
    private android.net.NetworkStats mSummary;
    private int mTag;
    private android.net.NetworkTemplate mTemplate;
    private int mUidOrUidIndex;
    private int[] mUids;

    void <init>(android.content.Context, android.net.NetworkTemplate, int, long, long, android.net.INetworkStatsService) throws android.os.RemoteException, java.lang.SecurityException
    {
        android.app.usage.NetworkStats r0;
        android.content.Context r1;
        android.net.NetworkTemplate r2;
        int i0;
        long l1, l2;
        android.net.INetworkStatsService r3;
        dalvik.system.CloseGuard $r4, $r7;
        java.lang.String $r5;
        android.net.INetworkStatsSession $r6;

        r0 := @this: android.app.usage.NetworkStats;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.net.NetworkTemplate;

        i0 := @parameter2: int;

        l1 := @parameter3: long;

        l2 := @parameter4: long;

        r3 := @parameter5: android.net.INetworkStatsService;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = staticinvoke <dalvik.system.CloseGuard: dalvik.system.CloseGuard get()>();

        r0.<android.app.usage.NetworkStats: dalvik.system.CloseGuard mCloseGuard> = $r4;

        r0.<android.app.usage.NetworkStats: int mTag> = 0;

        r0.<android.app.usage.NetworkStats: int mState> = -1;

        r0.<android.app.usage.NetworkStats: android.net.NetworkStats mSummary> = null;

        r0.<android.app.usage.NetworkStats: android.net.NetworkStatsHistory mHistory> = null;

        r0.<android.app.usage.NetworkStats: int mEnumerationIndex> = 0;

        r0.<android.app.usage.NetworkStats: android.net.NetworkStats$Entry mRecycledSummaryEntry> = null;

        r0.<android.app.usage.NetworkStats: android.net.NetworkStatsHistory$Entry mRecycledHistoryEntry> = null;

        $r5 = virtualinvoke r1.<android.content.Context: java.lang.String getOpPackageName()>();

        $r6 = interfaceinvoke r3.<android.net.INetworkStatsService: android.net.INetworkStatsSession openSessionForUsageStats(int,java.lang.String)>(i0, $r5);

        r0.<android.app.usage.NetworkStats: android.net.INetworkStatsSession mSession> = $r6;

        $r7 = r0.<android.app.usage.NetworkStats: dalvik.system.CloseGuard mCloseGuard>;

        virtualinvoke $r7.<dalvik.system.CloseGuard: void open(java.lang.String)>("close");

        r0.<android.app.usage.NetworkStats: android.net.NetworkTemplate mTemplate> = r2;

        r0.<android.app.usage.NetworkStats: long mStartTimeStamp> = l1;

        r0.<android.app.usage.NetworkStats: long mEndTimeStamp> = l2;

        return;
    }

    private void fillBucketFromSummaryEntry(android.app.usage.NetworkStats$Bucket)
    {
        android.app.usage.NetworkStats r0;
        android.app.usage.NetworkStats$Bucket r1;
        android.net.NetworkStats$Entry $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        int $i0, $i1, $i3, $i4, $i6, $i7, $i9, $i10, $i12, $i13, $i15, $i16;
        long $l18, $l20, $l22, $l24, $l26, $l28;

        r0 := @this: android.app.usage.NetworkStats;

        r1 := @parameter0: android.app.usage.NetworkStats$Bucket;

        $r2 = r0.<android.app.usage.NetworkStats: android.net.NetworkStats$Entry mRecycledSummaryEntry>;

        $i0 = $r2.<android.net.NetworkStats$Entry: int uid>;

        $i1 = staticinvoke <android.app.usage.NetworkStats$Bucket: int access$200(int)>($i0);

        staticinvoke <android.app.usage.NetworkStats$Bucket: int access$102(android.app.usage.NetworkStats$Bucket,int)>(r1, $i1);

        $r3 = r0.<android.app.usage.NetworkStats: android.net.NetworkStats$Entry mRecycledSummaryEntry>;

        $i3 = $r3.<android.net.NetworkStats$Entry: int tag>;

        $i4 = staticinvoke <android.app.usage.NetworkStats$Bucket: int access$400(int)>($i3);

        staticinvoke <android.app.usage.NetworkStats$Bucket: int access$302(android.app.usage.NetworkStats$Bucket,int)>(r1, $i4);

        $r4 = r0.<android.app.usage.NetworkStats: android.net.NetworkStats$Entry mRecycledSummaryEntry>;

        $i6 = $r4.<android.net.NetworkStats$Entry: int set>;

        $i7 = staticinvoke <android.app.usage.NetworkStats$Bucket: int access$600(int)>($i6);

        staticinvoke <android.app.usage.NetworkStats$Bucket: int access$502(android.app.usage.NetworkStats$Bucket,int)>(r1, $i7);

        $r5 = r0.<android.app.usage.NetworkStats: android.net.NetworkStats$Entry mRecycledSummaryEntry>;

        $i9 = $r5.<android.net.NetworkStats$Entry: int defaultNetwork>;

        $i10 = staticinvoke <android.app.usage.NetworkStats$Bucket: int access$800(int)>($i9);

        staticinvoke <android.app.usage.NetworkStats$Bucket: int access$702(android.app.usage.NetworkStats$Bucket,int)>(r1, $i10);

        $r6 = r0.<android.app.usage.NetworkStats: android.net.NetworkStats$Entry mRecycledSummaryEntry>;

        $i12 = $r6.<android.net.NetworkStats$Entry: int metered>;

        $i13 = staticinvoke <android.app.usage.NetworkStats$Bucket: int access$1000(int)>($i12);

        staticinvoke <android.app.usage.NetworkStats$Bucket: int access$902(android.app.usage.NetworkStats$Bucket,int)>(r1, $i13);

        $r7 = r0.<android.app.usage.NetworkStats: android.net.NetworkStats$Entry mRecycledSummaryEntry>;

        $i15 = $r7.<android.net.NetworkStats$Entry: int roaming>;

        $i16 = staticinvoke <android.app.usage.NetworkStats$Bucket: int access$1200(int)>($i15);

        staticinvoke <android.app.usage.NetworkStats$Bucket: int access$1102(android.app.usage.NetworkStats$Bucket,int)>(r1, $i16);

        $l18 = r0.<android.app.usage.NetworkStats: long mStartTimeStamp>;

        staticinvoke <android.app.usage.NetworkStats$Bucket: long access$1302(android.app.usage.NetworkStats$Bucket,long)>(r1, $l18);

        $l20 = r0.<android.app.usage.NetworkStats: long mEndTimeStamp>;

        staticinvoke <android.app.usage.NetworkStats$Bucket: long access$1402(android.app.usage.NetworkStats$Bucket,long)>(r1, $l20);

        $r8 = r0.<android.app.usage.NetworkStats: android.net.NetworkStats$Entry mRecycledSummaryEntry>;

        $l22 = $r8.<android.net.NetworkStats$Entry: long rxBytes>;

        staticinvoke <android.app.usage.NetworkStats$Bucket: long access$1502(android.app.usage.NetworkStats$Bucket,long)>(r1, $l22);

        $r9 = r0.<android.app.usage.NetworkStats: android.net.NetworkStats$Entry mRecycledSummaryEntry>;

        $l24 = $r9.<android.net.NetworkStats$Entry: long rxPackets>;

        staticinvoke <android.app.usage.NetworkStats$Bucket: long access$1602(android.app.usage.NetworkStats$Bucket,long)>(r1, $l24);

        $r10 = r0.<android.app.usage.NetworkStats: android.net.NetworkStats$Entry mRecycledSummaryEntry>;

        $l26 = $r10.<android.net.NetworkStats$Entry: long txBytes>;

        staticinvoke <android.app.usage.NetworkStats$Bucket: long access$1702(android.app.usage.NetworkStats$Bucket,long)>(r1, $l26);

        $r11 = r0.<android.app.usage.NetworkStats: android.net.NetworkStats$Entry mRecycledSummaryEntry>;

        $l28 = $r11.<android.net.NetworkStats$Entry: long txPackets>;

        staticinvoke <android.app.usage.NetworkStats$Bucket: long access$1802(android.app.usage.NetworkStats$Bucket,long)>(r1, $l28);

        return;
    }

    private boolean getNextHistoryBucket(android.app.usage.NetworkStats$Bucket)
    {
        android.app.usage.NetworkStats r0;
        android.app.usage.NetworkStats$Bucket r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i7, $i8, $i10;
        boolean $z0, $z1;
        android.net.NetworkStatsHistory$Entry $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        long $l15, $l17, $l18, $l19, $l21, $l23, $l25, $l27;
        android.net.NetworkStatsHistory r11, r12;

        r0 := @this: android.app.usage.NetworkStats;

        r1 := @parameter0: android.app.usage.NetworkStats$Bucket;

        if r1 == null goto label2;

        r11 = r0.<android.app.usage.NetworkStats: android.net.NetworkStatsHistory mHistory>;

        if r11 == null goto label2;

        $i1 = r0.<android.app.usage.NetworkStats: int mEnumerationIndex>;

        $i2 = virtualinvoke r11.<android.net.NetworkStatsHistory: int size()>();

        if $i1 >= $i2 goto label1;

        r12 = r0.<android.app.usage.NetworkStats: android.net.NetworkStatsHistory mHistory>;

        i0 = r0.<android.app.usage.NetworkStats: int mEnumerationIndex>;

        $i3 = i0 + 1;

        r0.<android.app.usage.NetworkStats: int mEnumerationIndex> = $i3;

        $r2 = r0.<android.app.usage.NetworkStats: android.net.NetworkStatsHistory$Entry mRecycledHistoryEntry>;

        $r3 = virtualinvoke r12.<android.net.NetworkStatsHistory: android.net.NetworkStatsHistory$Entry getValues(int,android.net.NetworkStatsHistory$Entry)>(i0, $r2);

        r0.<android.app.usage.NetworkStats: android.net.NetworkStatsHistory$Entry mRecycledHistoryEntry> = $r3;

        $i4 = specialinvoke r0.<android.app.usage.NetworkStats: int getUid()>();

        $i5 = staticinvoke <android.app.usage.NetworkStats$Bucket: int access$200(int)>($i4);

        staticinvoke <android.app.usage.NetworkStats$Bucket: int access$102(android.app.usage.NetworkStats$Bucket,int)>(r1, $i5);

        $i7 = r0.<android.app.usage.NetworkStats: int mTag>;

        $i8 = staticinvoke <android.app.usage.NetworkStats$Bucket: int access$400(int)>($i7);

        staticinvoke <android.app.usage.NetworkStats$Bucket: int access$302(android.app.usage.NetworkStats$Bucket,int)>(r1, $i8);

        $i10 = r0.<android.app.usage.NetworkStats: int mState>;

        staticinvoke <android.app.usage.NetworkStats$Bucket: int access$502(android.app.usage.NetworkStats$Bucket,int)>(r1, $i10);

        staticinvoke <android.app.usage.NetworkStats$Bucket: int access$702(android.app.usage.NetworkStats$Bucket,int)>(r1, -1);

        staticinvoke <android.app.usage.NetworkStats$Bucket: int access$902(android.app.usage.NetworkStats$Bucket,int)>(r1, -1);

        staticinvoke <android.app.usage.NetworkStats$Bucket: int access$1102(android.app.usage.NetworkStats$Bucket,int)>(r1, -1);

        $r4 = r0.<android.app.usage.NetworkStats: android.net.NetworkStatsHistory$Entry mRecycledHistoryEntry>;

        $l15 = $r4.<android.net.NetworkStatsHistory$Entry: long bucketStart>;

        staticinvoke <android.app.usage.NetworkStats$Bucket: long access$1302(android.app.usage.NetworkStats$Bucket,long)>(r1, $l15);

        $r5 = r0.<android.app.usage.NetworkStats: android.net.NetworkStatsHistory$Entry mRecycledHistoryEntry>;

        $l18 = $r5.<android.net.NetworkStatsHistory$Entry: long bucketStart>;

        $r6 = r0.<android.app.usage.NetworkStats: android.net.NetworkStatsHistory$Entry mRecycledHistoryEntry>;

        $l17 = $r6.<android.net.NetworkStatsHistory$Entry: long bucketDuration>;

        $l19 = $l18 + $l17;

        staticinvoke <android.app.usage.NetworkStats$Bucket: long access$1402(android.app.usage.NetworkStats$Bucket,long)>(r1, $l19);

        $r7 = r0.<android.app.usage.NetworkStats: android.net.NetworkStatsHistory$Entry mRecycledHistoryEntry>;

        $l21 = $r7.<android.net.NetworkStatsHistory$Entry: long rxBytes>;

        staticinvoke <android.app.usage.NetworkStats$Bucket: long access$1502(android.app.usage.NetworkStats$Bucket,long)>(r1, $l21);

        $r8 = r0.<android.app.usage.NetworkStats: android.net.NetworkStatsHistory$Entry mRecycledHistoryEntry>;

        $l23 = $r8.<android.net.NetworkStatsHistory$Entry: long rxPackets>;

        staticinvoke <android.app.usage.NetworkStats$Bucket: long access$1602(android.app.usage.NetworkStats$Bucket,long)>(r1, $l23);

        $r9 = r0.<android.app.usage.NetworkStats: android.net.NetworkStatsHistory$Entry mRecycledHistoryEntry>;

        $l25 = $r9.<android.net.NetworkStatsHistory$Entry: long txBytes>;

        staticinvoke <android.app.usage.NetworkStats$Bucket: long access$1702(android.app.usage.NetworkStats$Bucket,long)>(r1, $l25);

        $r10 = r0.<android.app.usage.NetworkStats: android.net.NetworkStatsHistory$Entry mRecycledHistoryEntry>;

        $l27 = $r10.<android.net.NetworkStatsHistory$Entry: long txPackets>;

        staticinvoke <android.app.usage.NetworkStats$Bucket: long access$1802(android.app.usage.NetworkStats$Bucket,long)>(r1, $l27);

        return 1;

     label1:
        $z0 = specialinvoke r0.<android.app.usage.NetworkStats: boolean hasNextUid()>();

        if $z0 == 0 goto label2;

        specialinvoke r0.<android.app.usage.NetworkStats: void stepHistory()>();

        $z1 = specialinvoke r0.<android.app.usage.NetworkStats: boolean getNextHistoryBucket(android.app.usage.NetworkStats$Bucket)>(r1);

        return $z1;

     label2:
        return 0;
    }

    private boolean getNextSummaryBucket(android.app.usage.NetworkStats$Bucket)
    {
        android.app.usage.NetworkStats r0;
        android.app.usage.NetworkStats$Bucket r1;
        android.net.NetworkStats r2, $r3;
        int i0, $i1, $i2, $i3;
        android.net.NetworkStats$Entry $r4, $r5;

        r0 := @this: android.app.usage.NetworkStats;

        r1 := @parameter0: android.app.usage.NetworkStats$Bucket;

        if r1 == null goto label1;

        $i1 = r0.<android.app.usage.NetworkStats: int mEnumerationIndex>;

        $r3 = r0.<android.app.usage.NetworkStats: android.net.NetworkStats mSummary>;

        $i2 = virtualinvoke $r3.<android.net.NetworkStats: int size()>();

        if $i1 >= $i2 goto label1;

        r2 = r0.<android.app.usage.NetworkStats: android.net.NetworkStats mSummary>;

        i0 = r0.<android.app.usage.NetworkStats: int mEnumerationIndex>;

        $i3 = i0 + 1;

        r0.<android.app.usage.NetworkStats: int mEnumerationIndex> = $i3;

        $r4 = r0.<android.app.usage.NetworkStats: android.net.NetworkStats$Entry mRecycledSummaryEntry>;

        $r5 = virtualinvoke r2.<android.net.NetworkStats: android.net.NetworkStats$Entry getValues(int,android.net.NetworkStats$Entry)>(i0, $r4);

        r0.<android.app.usage.NetworkStats: android.net.NetworkStats$Entry mRecycledSummaryEntry> = $r5;

        specialinvoke r0.<android.app.usage.NetworkStats: void fillBucketFromSummaryEntry(android.app.usage.NetworkStats$Bucket)>(r1);

        return 1;

     label1:
        return 0;
    }

    private int getUid()
    {
        android.app.usage.NetworkStats r0;
        int i0, $i1, $i2, $i3, $i4, $i5;
        boolean $z0;
        java.lang.StringBuilder $r1;
        int[] $r5, r9;
        java.lang.IndexOutOfBoundsException $r7;
        java.lang.String $r8;

        r0 := @this: android.app.usage.NetworkStats;

        $z0 = specialinvoke r0.<android.app.usage.NetworkStats: boolean isUidEnumeration()>();

        if $z0 == 0 goto label2;

        i0 = r0.<android.app.usage.NetworkStats: int mUidOrUidIndex>;

        if i0 < 0 goto label1;

        r9 = r0.<android.app.usage.NetworkStats: int[] mUids>;

        $i4 = lengthof r9;

        if i0 >= $i4 goto label1;

        $i5 = r9[i0];

        return $i5;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Index=");

        $i2 = r0.<android.app.usage.NetworkStats: int mUidOrUidIndex>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mUids.length=");

        $r5 = r0.<android.app.usage.NetworkStats: int[] mUids>;

        $i3 = lengthof $r5;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r7 = new java.lang.IndexOutOfBoundsException;

        $r8 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r8);

        throw $r7;

     label2:
        $i1 = r0.<android.app.usage.NetworkStats: int mUidOrUidIndex>;

        return $i1;
    }

    private boolean hasNextUid()
    {
        android.app.usage.NetworkStats r0;
        boolean z0, z1;
        int $i0, $i1, $i2;
        int[] $r1;

        r0 := @this: android.app.usage.NetworkStats;

        z0 = specialinvoke r0.<android.app.usage.NetworkStats: boolean isUidEnumeration()>();

        z1 = 1;

        if z0 == 0 goto label1;

        $i0 = r0.<android.app.usage.NetworkStats: int mUidOrUidIndex>;

        $i2 = $i0 + 1;

        $r1 = r0.<android.app.usage.NetworkStats: int[] mUids>;

        $i1 = lengthof $r1;

        if $i2 >= $i1 goto label1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    private boolean isUidEnumeration()
    {
        android.app.usage.NetworkStats r0;
        int[] $r1;
        boolean z0;

        r0 := @this: android.app.usage.NetworkStats;

        $r1 = r0.<android.app.usage.NetworkStats: int[] mUids>;

        if $r1 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private void setSingleUidTagState(int, int, int)
    {
        android.app.usage.NetworkStats r0;
        int i0, i1, i2;

        r0 := @this: android.app.usage.NetworkStats;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r0.<android.app.usage.NetworkStats: int mUidOrUidIndex> = i0;

        r0.<android.app.usage.NetworkStats: int mTag> = i1;

        r0.<android.app.usage.NetworkStats: int mState> = i2;

        return;
    }

    private void stepHistory()
    {
        android.app.usage.NetworkStats r0;
        boolean $z0;
        android.net.INetworkStatsSession $r2;
        android.net.NetworkTemplate $r3;
        int $i0;
        long $l1, $l2;
        android.net.NetworkStatsHistory $r4;
        android.os.RemoteException $r5;

        r0 := @this: android.app.usage.NetworkStats;

        $z0 = specialinvoke r0.<android.app.usage.NetworkStats: boolean hasNextUid()>();

        if $z0 == 0 goto label5;

        specialinvoke r0.<android.app.usage.NetworkStats: void stepUid()>();

        r0.<android.app.usage.NetworkStats: android.net.NetworkStatsHistory mHistory> = null;

     label1:
        $r2 = r0.<android.app.usage.NetworkStats: android.net.INetworkStatsSession mSession>;

        $r3 = r0.<android.app.usage.NetworkStats: android.net.NetworkTemplate mTemplate>;

        $i0 = specialinvoke r0.<android.app.usage.NetworkStats: int getUid()>();

        $l2 = r0.<android.app.usage.NetworkStats: long mStartTimeStamp>;

        $l1 = r0.<android.app.usage.NetworkStats: long mEndTimeStamp>;

        $r4 = interfaceinvoke $r2.<android.net.INetworkStatsSession: android.net.NetworkStatsHistory getHistoryIntervalForUid(android.net.NetworkTemplate,int,int,int,int,long,long)>($r3, $i0, -1, 0, -1, $l2, $l1);

        r0.<android.app.usage.NetworkStats: android.net.NetworkStatsHistory mHistory> = $r4;

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.Throwable)>("NetworkStats", $r5);

     label4:
        r0.<android.app.usage.NetworkStats: int mEnumerationIndex> = 0;

     label5:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private void stepUid()
    {
        android.app.usage.NetworkStats r0;
        int[] $r1;
        int $i0, $i1;

        r0 := @this: android.app.usage.NetworkStats;

        $r1 = r0.<android.app.usage.NetworkStats: int[] mUids>;

        if $r1 == null goto label1;

        $i0 = r0.<android.app.usage.NetworkStats: int mUidOrUidIndex>;

        $i1 = $i0 + 1;

        r0.<android.app.usage.NetworkStats: int mUidOrUidIndex> = $i1;

     label1:
        return;
    }

    public void close()
    {
        android.app.usage.NetworkStats r0;
        android.os.RemoteException $r1;
        android.net.INetworkStatsSession r2;
        dalvik.system.CloseGuard r4;

        r0 := @this: android.app.usage.NetworkStats;

        r2 = r0.<android.app.usage.NetworkStats: android.net.INetworkStatsSession mSession>;

        if r2 == null goto label4;

     label1:
        interfaceinvoke r2.<android.net.INetworkStatsSession: void close()>();

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.Throwable)>("NetworkStats", $r1);

     label4:
        r0.<android.app.usage.NetworkStats: android.net.INetworkStatsSession mSession> = null;

        r4 = r0.<android.app.usage.NetworkStats: dalvik.system.CloseGuard mCloseGuard>;

        if r4 == null goto label5;

        virtualinvoke r4.<dalvik.system.CloseGuard: void close()>();

     label5:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.app.usage.NetworkStats r0;
        dalvik.system.CloseGuard $r2, $r3;
        java.lang.Throwable $r4;

        r0 := @this: android.app.usage.NetworkStats;

     label1:
        $r2 = r0.<android.app.usage.NetworkStats: dalvik.system.CloseGuard mCloseGuard>;

        if $r2 == null goto label2;

        $r3 = r0.<android.app.usage.NetworkStats: dalvik.system.CloseGuard mCloseGuard>;

        virtualinvoke $r3.<dalvik.system.CloseGuard: void warnIfOpen()>();

     label2:
        virtualinvoke r0.<android.app.usage.NetworkStats: void close()>();

     label3:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        return;

     label4:
        $r4 := @caughtexception;

        specialinvoke r0.<java.lang.Object: void finalize()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
    }

    android.app.usage.NetworkStats$Bucket getDeviceSummaryForNetwork() throws android.os.RemoteException
    {
        android.app.usage.NetworkStats r0;
        android.net.NetworkStats r1;
        long $l0, $l1;
        android.net.NetworkTemplate $r2;
        android.net.INetworkStatsSession $r3;
        int $i2;
        android.app.usage.NetworkStats$Bucket $r4;

        r0 := @this: android.app.usage.NetworkStats;

        $r3 = r0.<android.app.usage.NetworkStats: android.net.INetworkStatsSession mSession>;

        $r2 = r0.<android.app.usage.NetworkStats: android.net.NetworkTemplate mTemplate>;

        $l1 = r0.<android.app.usage.NetworkStats: long mStartTimeStamp>;

        $l0 = r0.<android.app.usage.NetworkStats: long mEndTimeStamp>;

        r1 = interfaceinvoke $r3.<android.net.INetworkStatsSession: android.net.NetworkStats getDeviceSummaryForNetwork(android.net.NetworkTemplate,long,long)>($r2, $l1, $l0);

        r0.<android.app.usage.NetworkStats: android.net.NetworkStats mSummary> = r1;

        $i2 = virtualinvoke r1.<android.net.NetworkStats: int size()>();

        r0.<android.app.usage.NetworkStats: int mEnumerationIndex> = $i2;

        $r4 = virtualinvoke r0.<android.app.usage.NetworkStats: android.app.usage.NetworkStats$Bucket getSummaryAggregate()>();

        return $r4;
    }

    public boolean getNextBucket(android.app.usage.NetworkStats$Bucket)
    {
        android.app.usage.NetworkStats r0;
        android.app.usage.NetworkStats$Bucket r1;
        android.net.NetworkStats $r2;
        boolean $z0, $z1;

        r0 := @this: android.app.usage.NetworkStats;

        r1 := @parameter0: android.app.usage.NetworkStats$Bucket;

        $r2 = r0.<android.app.usage.NetworkStats: android.net.NetworkStats mSummary>;

        if $r2 == null goto label1;

        $z1 = specialinvoke r0.<android.app.usage.NetworkStats: boolean getNextSummaryBucket(android.app.usage.NetworkStats$Bucket)>(r1);

        return $z1;

     label1:
        $z0 = specialinvoke r0.<android.app.usage.NetworkStats: boolean getNextHistoryBucket(android.app.usage.NetworkStats$Bucket)>(r1);

        return $z0;
    }

    android.app.usage.NetworkStats$Bucket getSummaryAggregate()
    {
        android.app.usage.NetworkStats r0;
        android.net.NetworkStats $r2, $r6;
        android.app.usage.NetworkStats$Bucket $r3;
        android.net.NetworkStats$Entry $r4, $r5, $r8;

        r0 := @this: android.app.usage.NetworkStats;

        $r2 = r0.<android.app.usage.NetworkStats: android.net.NetworkStats mSummary>;

        if $r2 != null goto label1;

        return null;

     label1:
        $r3 = new android.app.usage.NetworkStats$Bucket;

        specialinvoke $r3.<android.app.usage.NetworkStats$Bucket: void <init>()>();

        $r4 = r0.<android.app.usage.NetworkStats: android.net.NetworkStats$Entry mRecycledSummaryEntry>;

        if $r4 != null goto label2;

        $r8 = new android.net.NetworkStats$Entry;

        specialinvoke $r8.<android.net.NetworkStats$Entry: void <init>()>();

        r0.<android.app.usage.NetworkStats: android.net.NetworkStats$Entry mRecycledSummaryEntry> = $r8;

     label2:
        $r6 = r0.<android.app.usage.NetworkStats: android.net.NetworkStats mSummary>;

        $r5 = r0.<android.app.usage.NetworkStats: android.net.NetworkStats$Entry mRecycledSummaryEntry>;

        virtualinvoke $r6.<android.net.NetworkStats: android.net.NetworkStats$Entry getTotal(android.net.NetworkStats$Entry)>($r5);

        specialinvoke r0.<android.app.usage.NetworkStats: void fillBucketFromSummaryEntry(android.app.usage.NetworkStats$Bucket)>($r3);

        return $r3;
    }

    public boolean hasNextBucket()
    {
        android.app.usage.NetworkStats r0;
        int $i0, $i1, $i2, $i3;
        boolean $z1, z2, z3;
        android.net.NetworkStats r1;
        android.net.NetworkStatsHistory r2;

        r0 := @this: android.app.usage.NetworkStats;

        r1 = r0.<android.app.usage.NetworkStats: android.net.NetworkStats mSummary>;

        z2 = 1;

        if r1 == null goto label3;

        $i2 = r0.<android.app.usage.NetworkStats: int mEnumerationIndex>;

        $i3 = virtualinvoke r1.<android.net.NetworkStats: int size()>();

        if $i2 >= $i3 goto label1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;

     label3:
        r2 = r0.<android.app.usage.NetworkStats: android.net.NetworkStatsHistory mHistory>;

        if r2 == null goto label7;

        $i0 = r0.<android.app.usage.NetworkStats: int mEnumerationIndex>;

        $i1 = virtualinvoke r2.<android.net.NetworkStatsHistory: int size()>();

        if $i0 < $i1 goto label5;

        $z1 = specialinvoke r0.<android.app.usage.NetworkStats: boolean hasNextUid()>();

        if $z1 == 0 goto label4;

        goto label5;

     label4:
        z3 = 0;

        goto label6;

     label5:
        z3 = 1;

     label6:
        return z3;

     label7:
        return 0;
    }

    void startHistoryEnumeration(int, int, int)
    {
        android.app.usage.NetworkStats r0;
        int i0, i1, i2, $i3;
        android.net.INetworkStatsSession $r2;
        android.net.NetworkTemplate $r3;
        long $l4, $l5;
        android.net.NetworkStatsHistory $r4;
        android.os.RemoteException $r5;

        r0 := @this: android.app.usage.NetworkStats;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r0.<android.app.usage.NetworkStats: android.net.NetworkStatsHistory mHistory> = null;

     label1:
        $r2 = r0.<android.app.usage.NetworkStats: android.net.INetworkStatsSession mSession>;

        $r3 = r0.<android.app.usage.NetworkStats: android.net.NetworkTemplate mTemplate>;

        $i3 = staticinvoke <android.app.usage.NetworkStats$Bucket: int access$000(int)>(i2);

        $l5 = r0.<android.app.usage.NetworkStats: long mStartTimeStamp>;

        $l4 = r0.<android.app.usage.NetworkStats: long mEndTimeStamp>;

        $r4 = interfaceinvoke $r2.<android.net.INetworkStatsSession: android.net.NetworkStatsHistory getHistoryIntervalForUid(android.net.NetworkTemplate,int,int,int,int,long,long)>($r3, i0, $i3, i1, -1, $l5, $l4);

        r0.<android.app.usage.NetworkStats: android.net.NetworkStatsHistory mHistory> = $r4;

        specialinvoke r0.<android.app.usage.NetworkStats: void setSingleUidTagState(int,int,int)>(i0, i1, i2);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.Throwable)>("NetworkStats", $r5);

     label4:
        r0.<android.app.usage.NetworkStats: int mEnumerationIndex> = 0;

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    void startSummaryEnumeration() throws android.os.RemoteException
    {
        android.app.usage.NetworkStats r0;
        long $l0, $l1;
        android.net.NetworkTemplate $r1;
        android.net.INetworkStatsSession $r2;
        android.net.NetworkStats $r3;

        r0 := @this: android.app.usage.NetworkStats;

        $r2 = r0.<android.app.usage.NetworkStats: android.net.INetworkStatsSession mSession>;

        $r1 = r0.<android.app.usage.NetworkStats: android.net.NetworkTemplate mTemplate>;

        $l1 = r0.<android.app.usage.NetworkStats: long mStartTimeStamp>;

        $l0 = r0.<android.app.usage.NetworkStats: long mEndTimeStamp>;

        $r3 = interfaceinvoke $r2.<android.net.INetworkStatsSession: android.net.NetworkStats getSummaryForAllUid(android.net.NetworkTemplate,long,long,boolean)>($r1, $l1, $l0, 0);

        r0.<android.app.usage.NetworkStats: android.net.NetworkStats mSummary> = $r3;

        r0.<android.app.usage.NetworkStats: int mEnumerationIndex> = 0;

        return;
    }

    void startUserUidEnumeration() throws android.os.RemoteException
    {
        android.app.usage.NetworkStats r0;
        int[] r1, $r6;
        int i0, i1, $i2, $i5, i7;
        android.net.INetworkStatsSession $r4, $r8;
        android.util.IntArray $r5;
        long $l3, $l4;
        android.net.NetworkTemplate $r7;
        android.os.RemoteException $r9;
        java.lang.StringBuilder $r10;
        java.lang.String $r13;
        android.net.NetworkStatsHistory r14;

        r0 := @this: android.app.usage.NetworkStats;

        $r4 = r0.<android.app.usage.NetworkStats: android.net.INetworkStatsSession mSession>;

        r1 = interfaceinvoke $r4.<android.net.INetworkStatsSession: int[] getRelevantUids()>();

        $r5 = new android.util.IntArray;

        $i2 = lengthof r1;

        specialinvoke $r5.<android.util.IntArray: void <init>(int)>($i2);

        i0 = lengthof r1;

        i7 = 0;

     label1:
        if i7 >= i0 goto label8;

        i1 = r1[i7];

     label2:
        $r8 = r0.<android.app.usage.NetworkStats: android.net.INetworkStatsSession mSession>;

        $r7 = r0.<android.app.usage.NetworkStats: android.net.NetworkTemplate mTemplate>;

        $l4 = r0.<android.app.usage.NetworkStats: long mStartTimeStamp>;

        $l3 = r0.<android.app.usage.NetworkStats: long mEndTimeStamp>;

        r14 = interfaceinvoke $r8.<android.net.INetworkStatsSession: android.net.NetworkStatsHistory getHistoryIntervalForUid(android.net.NetworkTemplate,int,int,int,int,long,long)>($r7, i1, -1, 0, -1, $l4, $l3);

     label3:
        if r14 == null goto label5;

     label4:
        $i5 = virtualinvoke r14.<android.net.NetworkStatsHistory: int size()>();

        if $i5 <= 0 goto label5;

        virtualinvoke $r5.<android.util.IntArray: void add(int)>(i1);

     label5:
        goto label7;

     label6:
        $r9 := @caughtexception;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error while getting history of uid ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("NetworkStats", $r13, $r9);

     label7:
        i7 = i7 + 1;

        goto label1;

     label8:
        $r6 = virtualinvoke $r5.<android.util.IntArray: int[] toArray()>();

        r0.<android.app.usage.NetworkStats: int[] mUids> = $r6;

        r0.<android.app.usage.NetworkStats: int mUidOrUidIndex> = -1;

        specialinvoke r0.<android.app.usage.NetworkStats: void stepHistory()>();

        return;

        catch android.os.RemoteException from label2 to label3 with label6;
        catch android.os.RemoteException from label4 to label5 with label6;
    }

    public static void <clinit>()
    {
        <android.app.usage.NetworkStats: java.lang.String TAG> = "NetworkStats";

        return;
    }
}
