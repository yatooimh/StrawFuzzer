public class android.app.usage.NetworkStatsManager extends java.lang.Object
{
    public static final int CALLBACK_LIMIT_REACHED;
    public static final int CALLBACK_RELEASED;
    private static final boolean DBG;
    public static final int FLAG_AUGMENT_WITH_SUBSCRIPTION_PLAN;
    public static final int FLAG_POLL_FORCE;
    public static final int FLAG_POLL_ON_OPEN;
    public static final long MIN_THRESHOLD_BYTES;
    private static final java.lang.String TAG;
    private final android.content.Context mContext;
    private int mFlags;
    private final android.net.INetworkStatsService mService;

    static void <clinit>()
    {
        android.util.DataUnit $r0;
        long $l0;

        <android.app.usage.NetworkStatsManager: java.lang.String TAG> = "NetworkStatsManager";

        <android.app.usage.NetworkStatsManager: int FLAG_POLL_ON_OPEN> = 1;

        <android.app.usage.NetworkStatsManager: int FLAG_POLL_FORCE> = 2;

        <android.app.usage.NetworkStatsManager: int FLAG_AUGMENT_WITH_SUBSCRIPTION_PLAN> = 4;

        <android.app.usage.NetworkStatsManager: boolean DBG> = 0;

        <android.app.usage.NetworkStatsManager: int CALLBACK_RELEASED> = 1;

        <android.app.usage.NetworkStatsManager: int CALLBACK_LIMIT_REACHED> = 0;

        $r0 = <android.util.DataUnit: android.util.DataUnit MEBIBYTES>;

        $l0 = virtualinvoke $r0.<android.util.DataUnit: long toBytes(long)>(2L);

        <android.app.usage.NetworkStatsManager: long MIN_THRESHOLD_BYTES> = $l0;

        return;
    }

    public void <init>(android.content.Context) throws android.os.ServiceManager$ServiceNotFoundException
    {
        android.app.usage.NetworkStatsManager r0;
        android.content.Context r1;
        android.os.IBinder $r2;
        android.net.INetworkStatsService $r3;

        r0 := @this: android.app.usage.NetworkStatsManager;

        r1 := @parameter0: android.content.Context;

        $r2 = staticinvoke <android.os.ServiceManager: android.os.IBinder getServiceOrThrow(java.lang.String)>("netstats");

        $r3 = staticinvoke <android.net.INetworkStatsService$Stub: android.net.INetworkStatsService asInterface(android.os.IBinder)>($r2);

        specialinvoke r0.<android.app.usage.NetworkStatsManager: void <init>(android.content.Context,android.net.INetworkStatsService)>(r1, $r3);

        return;
    }

    public void <init>(android.content.Context, android.net.INetworkStatsService)
    {
        android.app.usage.NetworkStatsManager r0;
        android.content.Context r1;
        android.net.INetworkStatsService r2;

        r0 := @this: android.app.usage.NetworkStatsManager;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.net.INetworkStatsService;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.app.usage.NetworkStatsManager: android.content.Context mContext> = r1;

        r0.<android.app.usage.NetworkStatsManager: android.net.INetworkStatsService mService> = r2;

        virtualinvoke r0.<android.app.usage.NetworkStatsManager: void setPollOnOpen(boolean)>(1);

        return;
    }

    private static android.net.NetworkTemplate createTemplate(int, java.lang.String)
    {
        int i0;
        java.lang.StringBuilder $r1;
        java.lang.String $r5, $r9, r10;
        java.lang.IllegalArgumentException $r8;
        android.net.NetworkTemplate r11;

        i0 := @parameter0: int;

        r10 := @parameter1: java.lang.String;

        if i0 == 0 goto label2;

        if i0 != 1 goto label1;

        r11 = staticinvoke <android.net.NetworkTemplate: android.net.NetworkTemplate buildTemplateWifiWildcard()>();

        goto label4;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot create template for network type ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", subscriberId \'");

        $r5 = staticinvoke <android.net.NetworkIdentity: java.lang.String scrubSubscriberId(java.lang.String)>(r10);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'.");

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r8;

     label2:
        if r10 != null goto label3;

        r11 = staticinvoke <android.net.NetworkTemplate: android.net.NetworkTemplate buildTemplateMobileWildcard()>();

        goto label4;

     label3:
        r11 = staticinvoke <android.net.NetworkTemplate: android.net.NetworkTemplate buildTemplateMobileAll(java.lang.String)>(r10);

     label4:
        return r11;
    }

    public android.app.usage.NetworkStats queryDetails(int, java.lang.String, long, long) throws java.lang.SecurityException, android.os.RemoteException
    {
        android.app.usage.NetworkStatsManager r0;
        int i0, $i3;
        long l1, l2;
        android.app.usage.NetworkStats $r1;
        android.net.INetworkStatsService $r2;
        android.content.Context $r3;
        java.lang.Throwable $r4;
        java.lang.String r5;
        android.net.NetworkTemplate r6;

        r0 := @this: android.app.usage.NetworkStatsManager;

        i0 := @parameter0: int;

        r5 := @parameter1: java.lang.String;

        l1 := @parameter2: long;

        l2 := @parameter3: long;

     label1:
        r6 = staticinvoke <android.app.usage.NetworkStatsManager: android.net.NetworkTemplate createTemplate(int,java.lang.String)>(i0, r5);

     label2:
        $r1 = new android.app.usage.NetworkStats;

        $r3 = r0.<android.app.usage.NetworkStatsManager: android.content.Context mContext>;

        $i3 = r0.<android.app.usage.NetworkStatsManager: int mFlags>;

        $r2 = r0.<android.app.usage.NetworkStatsManager: android.net.INetworkStatsService mService>;

        specialinvoke $r1.<android.app.usage.NetworkStats: void <init>(android.content.Context,android.net.NetworkTemplate,int,long,long,android.net.INetworkStatsService)>($r3, r6, $i3, l1, l2, $r2);

        virtualinvoke $r1.<android.app.usage.NetworkStats: void startUserUidEnumeration()>();

        return $r1;

     label3:
        $r4 := @caughtexception;

        return null;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    public android.app.usage.NetworkStats queryDetailsForUid(int, java.lang.String, long, long, int) throws java.lang.SecurityException
    {
        android.app.usage.NetworkStatsManager r0;
        int i0, i3;
        java.lang.String r1;
        long l1, l2;
        android.app.usage.NetworkStats $r2;

        r0 := @this: android.app.usage.NetworkStatsManager;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        l1 := @parameter2: long;

        l2 := @parameter3: long;

        i3 := @parameter4: int;

        $r2 = virtualinvoke r0.<android.app.usage.NetworkStatsManager: android.app.usage.NetworkStats queryDetailsForUidTagState(int,java.lang.String,long,long,int,int,int)>(i0, r1, l1, l2, i3, 0, -1);

        return $r2;
    }

    public android.app.usage.NetworkStats queryDetailsForUid(android.net.NetworkTemplate, long, long, int) throws java.lang.SecurityException
    {
        android.app.usage.NetworkStatsManager r0;
        android.net.NetworkTemplate r1;
        long l0, l1;
        int i2;
        android.app.usage.NetworkStats $r2;

        r0 := @this: android.app.usage.NetworkStatsManager;

        r1 := @parameter0: android.net.NetworkTemplate;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        i2 := @parameter3: int;

        $r2 = virtualinvoke r0.<android.app.usage.NetworkStatsManager: android.app.usage.NetworkStats queryDetailsForUidTagState(android.net.NetworkTemplate,long,long,int,int,int)>(r1, l0, l1, i2, 0, -1);

        return $r2;
    }

    public android.app.usage.NetworkStats queryDetailsForUidTag(int, java.lang.String, long, long, int, int) throws java.lang.SecurityException
    {
        android.app.usage.NetworkStatsManager r0;
        int i0, i3, i4;
        java.lang.String r1;
        long l1, l2;
        android.app.usage.NetworkStats $r2;

        r0 := @this: android.app.usage.NetworkStatsManager;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        l1 := @parameter2: long;

        l2 := @parameter3: long;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        $r2 = virtualinvoke r0.<android.app.usage.NetworkStatsManager: android.app.usage.NetworkStats queryDetailsForUidTagState(int,java.lang.String,long,long,int,int,int)>(i0, r1, l1, l2, i3, i4, -1);

        return $r2;
    }

    public android.app.usage.NetworkStats queryDetailsForUidTagState(int, java.lang.String, long, long, int, int, int) throws java.lang.SecurityException
    {
        android.app.usage.NetworkStatsManager r0;
        int i0, i3, i4, i5;
        java.lang.String r1;
        long l1, l2;
        android.net.NetworkTemplate $r2;
        android.app.usage.NetworkStats $r3;

        r0 := @this: android.app.usage.NetworkStatsManager;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        l1 := @parameter2: long;

        l2 := @parameter3: long;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        i5 := @parameter6: int;

        $r2 = staticinvoke <android.app.usage.NetworkStatsManager: android.net.NetworkTemplate createTemplate(int,java.lang.String)>(i0, r1);

        $r3 = virtualinvoke r0.<android.app.usage.NetworkStatsManager: android.app.usage.NetworkStats queryDetailsForUidTagState(android.net.NetworkTemplate,long,long,int,int,int)>($r2, l1, l2, i3, i4, i5);

        return $r3;
    }

    public android.app.usage.NetworkStats queryDetailsForUidTagState(android.net.NetworkTemplate, long, long, int, int, int) throws java.lang.SecurityException
    {
        android.app.usage.NetworkStatsManager r0;
        long l0, l1;
        int i2, i3, i4, $i5;
        android.net.INetworkStatsService $r1;
        android.content.Context $r2;
        android.os.RemoteException $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r11;
        android.net.NetworkTemplate r12;
        android.app.usage.NetworkStats r13;

        r0 := @this: android.app.usage.NetworkStatsManager;

        r12 := @parameter0: android.net.NetworkTemplate;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

     label1:
        r13 = new android.app.usage.NetworkStats;

        $r2 = r0.<android.app.usage.NetworkStatsManager: android.content.Context mContext>;

        $i5 = r0.<android.app.usage.NetworkStatsManager: int mFlags>;

        $r1 = r0.<android.app.usage.NetworkStatsManager: android.net.INetworkStatsService mService>;

        specialinvoke r13.<android.app.usage.NetworkStats: void <init>(android.content.Context,android.net.NetworkTemplate,int,long,long,android.net.INetworkStatsService)>($r2, r12, $i5, l0, l1, $r1);

        virtualinvoke r13.<android.app.usage.NetworkStats: void startHistoryEnumeration(int,int,int)>(i2, i3, i4);

     label2:
        return r13;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error while querying stats for uid=");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" tag=");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" state=");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        $r11 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("NetworkStatsManager", $r11, $r3);

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.app.usage.NetworkStats querySummary(int, java.lang.String, long, long) throws java.lang.SecurityException, android.os.RemoteException
    {
        android.app.usage.NetworkStatsManager r0;
        int i0;
        long l1, l2;
        android.app.usage.NetworkStats $r1;
        java.lang.Throwable $r2;
        java.lang.String r3;
        android.net.NetworkTemplate r4;

        r0 := @this: android.app.usage.NetworkStatsManager;

        i0 := @parameter0: int;

        r3 := @parameter1: java.lang.String;

        l1 := @parameter2: long;

        l2 := @parameter3: long;

     label1:
        r4 = staticinvoke <android.app.usage.NetworkStatsManager: android.net.NetworkTemplate createTemplate(int,java.lang.String)>(i0, r3);

     label2:
        $r1 = virtualinvoke r0.<android.app.usage.NetworkStatsManager: android.app.usage.NetworkStats querySummary(android.net.NetworkTemplate,long,long)>(r4, l1, l2);

        return $r1;

     label3:
        $r2 := @caughtexception;

        return null;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    public android.app.usage.NetworkStats querySummary(android.net.NetworkTemplate, long, long) throws java.lang.SecurityException, android.os.RemoteException
    {
        android.app.usage.NetworkStatsManager r0;
        long l0, l1;
        android.app.usage.NetworkStats $r1;
        android.net.INetworkStatsService $r2;
        int $i2;
        android.content.Context $r3;
        android.net.NetworkTemplate r4;

        r0 := @this: android.app.usage.NetworkStatsManager;

        r4 := @parameter0: android.net.NetworkTemplate;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        $r1 = new android.app.usage.NetworkStats;

        $r3 = r0.<android.app.usage.NetworkStatsManager: android.content.Context mContext>;

        $i2 = r0.<android.app.usage.NetworkStatsManager: int mFlags>;

        $r2 = r0.<android.app.usage.NetworkStatsManager: android.net.INetworkStatsService mService>;

        specialinvoke $r1.<android.app.usage.NetworkStats: void <init>(android.content.Context,android.net.NetworkTemplate,int,long,long,android.net.INetworkStatsService)>($r3, r4, $i2, l0, l1, $r2);

        virtualinvoke $r1.<android.app.usage.NetworkStats: void startSummaryEnumeration()>();

        return $r1;
    }

    public android.app.usage.NetworkStats$Bucket querySummaryForDevice(int, java.lang.String, long, long) throws java.lang.SecurityException, android.os.RemoteException
    {
        android.app.usage.NetworkStatsManager r0;
        int i0;
        long l1, l2;
        android.app.usage.NetworkStats$Bucket $r1;
        java.lang.Throwable $r2;
        java.lang.String r3;
        android.net.NetworkTemplate r4;

        r0 := @this: android.app.usage.NetworkStatsManager;

        i0 := @parameter0: int;

        r3 := @parameter1: java.lang.String;

        l1 := @parameter2: long;

        l2 := @parameter3: long;

     label1:
        r4 = staticinvoke <android.app.usage.NetworkStatsManager: android.net.NetworkTemplate createTemplate(int,java.lang.String)>(i0, r3);

     label2:
        $r1 = virtualinvoke r0.<android.app.usage.NetworkStatsManager: android.app.usage.NetworkStats$Bucket querySummaryForDevice(android.net.NetworkTemplate,long,long)>(r4, l1, l2);

        return $r1;

     label3:
        $r2 := @caughtexception;

        return null;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    public android.app.usage.NetworkStats$Bucket querySummaryForDevice(android.net.NetworkTemplate, long, long) throws java.lang.SecurityException, android.os.RemoteException
    {
        android.app.usage.NetworkStatsManager r0;
        long l0, l1;
        android.app.usage.NetworkStats$Bucket r1;
        android.app.usage.NetworkStats $r2;
        android.net.INetworkStatsService $r3;
        int $i2;
        android.content.Context $r4;
        android.net.NetworkTemplate r5;

        r0 := @this: android.app.usage.NetworkStatsManager;

        r5 := @parameter0: android.net.NetworkTemplate;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        $r2 = new android.app.usage.NetworkStats;

        $r4 = r0.<android.app.usage.NetworkStatsManager: android.content.Context mContext>;

        $i2 = r0.<android.app.usage.NetworkStatsManager: int mFlags>;

        $r3 = r0.<android.app.usage.NetworkStatsManager: android.net.INetworkStatsService mService>;

        specialinvoke $r2.<android.app.usage.NetworkStats: void <init>(android.content.Context,android.net.NetworkTemplate,int,long,long,android.net.INetworkStatsService)>($r4, r5, $i2, l0, l1, $r3);

        r1 = virtualinvoke $r2.<android.app.usage.NetworkStats: android.app.usage.NetworkStats$Bucket getDeviceSummaryForNetwork()>();

        virtualinvoke $r2.<android.app.usage.NetworkStats: void close()>();

        return r1;
    }

    public android.app.usage.NetworkStats$Bucket querySummaryForUser(int, java.lang.String, long, long) throws java.lang.SecurityException, android.os.RemoteException
    {
        android.app.usage.NetworkStatsManager r0;
        int i0, $i3;
        long l1, l2;
        android.app.usage.NetworkStats $r1;
        android.net.INetworkStatsService $r2;
        android.content.Context $r3;
        android.app.usage.NetworkStats$Bucket $r4;
        java.lang.Throwable $r5;
        java.lang.String r6;
        android.net.NetworkTemplate r7;

        r0 := @this: android.app.usage.NetworkStatsManager;

        i0 := @parameter0: int;

        r6 := @parameter1: java.lang.String;

        l1 := @parameter2: long;

        l2 := @parameter3: long;

     label1:
        r7 = staticinvoke <android.app.usage.NetworkStatsManager: android.net.NetworkTemplate createTemplate(int,java.lang.String)>(i0, r6);

     label2:
        $r1 = new android.app.usage.NetworkStats;

        $r3 = r0.<android.app.usage.NetworkStatsManager: android.content.Context mContext>;

        $i3 = r0.<android.app.usage.NetworkStatsManager: int mFlags>;

        $r2 = r0.<android.app.usage.NetworkStatsManager: android.net.INetworkStatsService mService>;

        specialinvoke $r1.<android.app.usage.NetworkStats: void <init>(android.content.Context,android.net.NetworkTemplate,int,long,long,android.net.INetworkStatsService)>($r3, r7, $i3, l1, l2, $r2);

        virtualinvoke $r1.<android.app.usage.NetworkStats: void startSummaryEnumeration()>();

        virtualinvoke $r1.<android.app.usage.NetworkStats: void close()>();

        $r4 = virtualinvoke $r1.<android.app.usage.NetworkStats: android.app.usage.NetworkStats$Bucket getSummaryAggregate()>();

        return $r4;

     label3:
        $r5 := @caughtexception;

        return null;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    public void registerNetworkStatsProvider(java.lang.String, android.net.netstats.provider.NetworkStatsProvider)
    {
        android.app.usage.NetworkStatsManager r0;
        android.net.netstats.provider.NetworkStatsProvider r1;
        android.net.netstats.provider.INetworkStatsProviderCallback $r2, $r5;
        android.net.INetworkStatsService $r3;
        android.net.netstats.provider.INetworkStatsProvider $r4;
        android.os.RemoteException $r6;
        java.lang.String r8;
        java.lang.IllegalArgumentException r9;

        r0 := @this: android.app.usage.NetworkStatsManager;

        r8 := @parameter0: java.lang.String;

        r1 := @parameter1: android.net.netstats.provider.NetworkStatsProvider;

     label1:
        $r2 = virtualinvoke r1.<android.net.netstats.provider.NetworkStatsProvider: android.net.netstats.provider.INetworkStatsProviderCallback getProviderCallbackBinder()>();

        if $r2 != null goto label3;

        $r3 = r0.<android.app.usage.NetworkStatsManager: android.net.INetworkStatsService mService>;

        $r4 = virtualinvoke r1.<android.net.netstats.provider.NetworkStatsProvider: android.net.netstats.provider.INetworkStatsProvider getProviderBinder()>();

        $r5 = interfaceinvoke $r3.<android.net.INetworkStatsService: android.net.netstats.provider.INetworkStatsProviderCallback registerNetworkStatsProvider(java.lang.String,android.net.netstats.provider.INetworkStatsProvider)>(r8, $r4);

        virtualinvoke r1.<android.net.netstats.provider.NetworkStatsProvider: void setProviderCallbackBinder(android.net.netstats.provider.INetworkStatsProviderCallback)>($r5);

     label2:
        goto label5;

     label3:
        r9 = new java.lang.IllegalArgumentException;

        specialinvoke r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("provider is already registered");

        throw r9;

     label4:
        $r6 := @caughtexception;

        virtualinvoke $r6.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

     label5:
        return;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch android.os.RemoteException from label3 to label4 with label4;
    }

    public void registerUsageCallback(int, java.lang.String, long, android.app.usage.NetworkStatsManager$UsageCallback)
    {
        android.app.usage.NetworkStatsManager r0;
        int i0;
        java.lang.String r1;
        long l1;
        android.app.usage.NetworkStatsManager$UsageCallback r2;

        r0 := @this: android.app.usage.NetworkStatsManager;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        l1 := @parameter2: long;

        r2 := @parameter3: android.app.usage.NetworkStatsManager$UsageCallback;

        virtualinvoke r0.<android.app.usage.NetworkStatsManager: void registerUsageCallback(int,java.lang.String,long,android.app.usage.NetworkStatsManager$UsageCallback,android.os.Handler)>(i0, r1, l1, r2, null);

        return;
    }

    public void registerUsageCallback(int, java.lang.String, long, android.app.usage.NetworkStatsManager$UsageCallback, android.os.Handler)
    {
        android.app.usage.NetworkStatsManager r0;
        int i0;
        java.lang.String r1;
        long l1;
        android.app.usage.NetworkStatsManager$UsageCallback r2;
        android.os.Handler r3;
        android.net.NetworkTemplate $r4;

        r0 := @this: android.app.usage.NetworkStatsManager;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        l1 := @parameter2: long;

        r2 := @parameter3: android.app.usage.NetworkStatsManager$UsageCallback;

        r3 := @parameter4: android.os.Handler;

        $r4 = staticinvoke <android.app.usage.NetworkStatsManager: android.net.NetworkTemplate createTemplate(int,java.lang.String)>(i0, r1);

        virtualinvoke r0.<android.app.usage.NetworkStatsManager: void registerUsageCallback(android.net.NetworkTemplate,int,long,android.app.usage.NetworkStatsManager$UsageCallback,android.os.Handler)>($r4, i0, l1, r2, r3);

        return;
    }

    public void registerUsageCallback(android.net.NetworkTemplate, int, long, android.app.usage.NetworkStatsManager$UsageCallback, android.os.Handler)
    {
        android.app.usage.NetworkStatsManager r0;
        int i0;
        long l1;
        android.app.usage.NetworkStatsManager$UsageCallback r1;
        android.net.INetworkStatsService r3;
        android.net.DataUsageRequest $r5, $r8, $r10;
        java.lang.String $r6, r17;
        android.content.Context $r7;
        android.os.RemoteException $r11;
        java.lang.RuntimeException $r12;
        android.net.NetworkTemplate r13;
        android.os.Handler r14;
        android.os.Looper r15;
        android.app.usage.NetworkStatsManager$CallbackHandler r16;
        android.os.Messenger r18;
        android.os.Binder r19;

        r0 := @this: android.app.usage.NetworkStatsManager;

        r13 := @parameter0: android.net.NetworkTemplate;

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        r1 := @parameter3: android.app.usage.NetworkStatsManager$UsageCallback;

        r14 := @parameter4: android.os.Handler;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, "UsageCallback cannot be null");

        if r14 != null goto label1;

        r15 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        goto label2;

     label1:
        r15 = virtualinvoke r14.<android.os.Handler: android.os.Looper getLooper()>();

     label2:
        $r5 = new android.net.DataUsageRequest;

        specialinvoke $r5.<android.net.DataUsageRequest: void <init>(int,android.net.NetworkTemplate,long)>(0, r13, l1);

     label3:
        r16 = new android.app.usage.NetworkStatsManager$CallbackHandler;

        $r6 = virtualinvoke r13.<android.net.NetworkTemplate: java.lang.String getSubscriberId()>();

        specialinvoke r16.<android.app.usage.NetworkStatsManager$CallbackHandler: void <init>(android.os.Looper,int,java.lang.String,android.app.usage.NetworkStatsManager$UsageCallback)>(r15, i0, $r6, r1);

        r3 = r0.<android.app.usage.NetworkStatsManager: android.net.INetworkStatsService mService>;

        $r7 = r0.<android.app.usage.NetworkStatsManager: android.content.Context mContext>;

        r17 = virtualinvoke $r7.<android.content.Context: java.lang.String getOpPackageName()>();

        r18 = new android.os.Messenger;

        specialinvoke r18.<android.os.Messenger: void <init>(android.os.Handler)>(r16);

        r19 = new android.os.Binder;

        specialinvoke r19.<android.os.Binder: void <init>()>();

        $r8 = interfaceinvoke r3.<android.net.INetworkStatsService: android.net.DataUsageRequest registerUsageCallback(java.lang.String,android.net.DataUsageRequest,android.os.Messenger,android.os.IBinder)>(r17, $r5, r18, r19);

        staticinvoke <android.app.usage.NetworkStatsManager$UsageCallback: android.net.DataUsageRequest access$002(android.app.usage.NetworkStatsManager$UsageCallback,android.net.DataUsageRequest)>(r1, $r8);

        $r10 = staticinvoke <android.app.usage.NetworkStatsManager$UsageCallback: android.net.DataUsageRequest access$000(android.app.usage.NetworkStatsManager$UsageCallback)>(r1);

        if $r10 != null goto label4;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("NetworkStatsManager", "Request from callback is null; should not happen");

     label4:
        return;

     label5:
        $r11 := @caughtexception;

        $r12 = virtualinvoke $r11.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r12;

        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public void setAugmentWithSubscriptionPlan(boolean)
    {
        android.app.usage.NetworkStatsManager r0;
        boolean z0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.app.usage.NetworkStatsManager;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $i2 = r0.<android.app.usage.NetworkStatsManager: int mFlags>;

        $i3 = $i2 | 4;

        r0.<android.app.usage.NetworkStatsManager: int mFlags> = $i3;

        goto label2;

     label1:
        $i0 = r0.<android.app.usage.NetworkStatsManager: int mFlags>;

        $i1 = $i0 & -5;

        r0.<android.app.usage.NetworkStatsManager: int mFlags> = $i1;

     label2:
        return;
    }

    public void setPollForce(boolean)
    {
        android.app.usage.NetworkStatsManager r0;
        boolean z0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.app.usage.NetworkStatsManager;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $i2 = r0.<android.app.usage.NetworkStatsManager: int mFlags>;

        $i3 = $i2 | 2;

        r0.<android.app.usage.NetworkStatsManager: int mFlags> = $i3;

        goto label2;

     label1:
        $i0 = r0.<android.app.usage.NetworkStatsManager: int mFlags>;

        $i1 = $i0 & -3;

        r0.<android.app.usage.NetworkStatsManager: int mFlags> = $i1;

     label2:
        return;
    }

    public void setPollOnOpen(boolean)
    {
        android.app.usage.NetworkStatsManager r0;
        boolean z0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.app.usage.NetworkStatsManager;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $i2 = r0.<android.app.usage.NetworkStatsManager: int mFlags>;

        $i3 = $i2 | 1;

        r0.<android.app.usage.NetworkStatsManager: int mFlags> = $i3;

        goto label2;

     label1:
        $i0 = r0.<android.app.usage.NetworkStatsManager: int mFlags>;

        $i1 = $i0 & -2;

        r0.<android.app.usage.NetworkStatsManager: int mFlags> = $i1;

     label2:
        return;
    }

    public void unregisterNetworkStatsProvider(android.net.netstats.provider.NetworkStatsProvider)
    {
        android.app.usage.NetworkStatsManager r0;
        android.net.netstats.provider.INetworkStatsProviderCallback $r1;
        android.os.RemoteException $r2;
        android.net.netstats.provider.NetworkStatsProvider r4;

        r0 := @this: android.app.usage.NetworkStatsManager;

        r4 := @parameter0: android.net.netstats.provider.NetworkStatsProvider;

     label1:
        $r1 = virtualinvoke r4.<android.net.netstats.provider.NetworkStatsProvider: android.net.netstats.provider.INetworkStatsProviderCallback getProviderCallbackBinderOrThrow()>();

        interfaceinvoke $r1.<android.net.netstats.provider.INetworkStatsProviderCallback: void unregister()>();

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void unregisterUsageCallback(android.app.usage.NetworkStatsManager$UsageCallback)
    {
        android.app.usage.NetworkStatsManager r0;
        android.net.DataUsageRequest $r1, $r2, $r4;
        int $i0;
        android.net.INetworkStatsService $r3;
        android.os.RemoteException $r5;
        java.lang.RuntimeException $r6;
        android.app.usage.NetworkStatsManager$UsageCallback r7;
        java.lang.IllegalArgumentException $r9;

        r0 := @this: android.app.usage.NetworkStatsManager;

        r7 := @parameter0: android.app.usage.NetworkStatsManager$UsageCallback;

        if r7 == null goto label4;

        $r1 = staticinvoke <android.app.usage.NetworkStatsManager$UsageCallback: android.net.DataUsageRequest access$000(android.app.usage.NetworkStatsManager$UsageCallback)>(r7);

        if $r1 == null goto label4;

        $r2 = staticinvoke <android.app.usage.NetworkStatsManager$UsageCallback: android.net.DataUsageRequest access$000(android.app.usage.NetworkStatsManager$UsageCallback)>(r7);

        $i0 = $r2.<android.net.DataUsageRequest: int requestId>;

        if $i0 == 0 goto label4;

     label1:
        $r3 = r0.<android.app.usage.NetworkStatsManager: android.net.INetworkStatsService mService>;

        $r4 = staticinvoke <android.app.usage.NetworkStatsManager$UsageCallback: android.net.DataUsageRequest access$000(android.app.usage.NetworkStatsManager$UsageCallback)>(r7);

        interfaceinvoke $r3.<android.net.INetworkStatsService: void unregisterUsageRequest(android.net.DataUsageRequest)>($r4);

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        $r6 = virtualinvoke $r5.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r6;

     label4:
        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid UsageCallback");

        throw $r9;

        catch android.os.RemoteException from label1 to label2 with label3;
    }
}
