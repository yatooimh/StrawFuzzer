public class android.appwidget.AppWidgetHost extends java.lang.Object
{
    static final int HANDLE_APP_WIDGET_REMOVED;
    static final int HANDLE_PROVIDERS_CHANGED;
    static final int HANDLE_PROVIDER_CHANGED;
    static final int HANDLE_UPDATE;
    static final int HANDLE_VIEW_DATA_CHANGED;
    static com.android.internal.appwidget.IAppWidgetService sService;
    static boolean sServiceInitialized;
    static final java.lang.Object sServiceLock;
    private final android.appwidget.AppWidgetHost$Callbacks mCallbacks;
    private java.lang.String mContextOpPackageName;
    private android.util.DisplayMetrics mDisplayMetrics;
    private final android.os.Handler mHandler;
    private final int mHostId;
    private android.widget.RemoteViews$OnClickHandler mOnClickHandler;
    private final android.util.SparseArray mViews;

    static void <clinit>()
    {
        java.lang.Object $r0;

        <android.appwidget.AppWidgetHost: int HANDLE_VIEW_DATA_CHANGED> = 4;

        <android.appwidget.AppWidgetHost: int HANDLE_UPDATE> = 1;

        <android.appwidget.AppWidgetHost: int HANDLE_PROVIDER_CHANGED> = 2;

        <android.appwidget.AppWidgetHost: int HANDLE_PROVIDERS_CHANGED> = 3;

        <android.appwidget.AppWidgetHost: int HANDLE_APP_WIDGET_REMOVED> = 5;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <android.appwidget.AppWidgetHost: java.lang.Object sServiceLock> = $r0;

        <android.appwidget.AppWidgetHost: boolean sServiceInitialized> = 0;

        return;
    }

    public void <init>(android.content.Context, int)
    {
        android.appwidget.AppWidgetHost r0;
        android.content.Context r1;
        int i0;
        android.os.Looper $r2;

        r0 := @this: android.appwidget.AppWidgetHost;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r1.<android.content.Context: android.os.Looper getMainLooper()>();

        specialinvoke r0.<android.appwidget.AppWidgetHost: void <init>(android.content.Context,int,android.widget.RemoteViews$OnClickHandler,android.os.Looper)>(r1, i0, null, $r2);

        return;
    }

    public void <init>(android.content.Context, int, android.widget.RemoteViews$OnClickHandler, android.os.Looper)
    {
        android.appwidget.AppWidgetHost r0;
        android.content.Context r1;
        int i0;
        android.widget.RemoteViews$OnClickHandler r2;
        android.os.Looper r3;
        android.util.SparseArray $r4;
        java.lang.String $r5;
        android.appwidget.AppWidgetHost$UpdateHandler $r6;
        android.appwidget.AppWidgetHost$Callbacks $r7;
        android.os.Handler $r8;
        android.content.res.Resources $r9;
        android.util.DisplayMetrics $r10;

        r0 := @this: android.appwidget.AppWidgetHost;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r2 := @parameter2: android.widget.RemoteViews$OnClickHandler;

        r3 := @parameter3: android.os.Looper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new android.util.SparseArray;

        specialinvoke $r4.<android.util.SparseArray: void <init>()>();

        r0.<android.appwidget.AppWidgetHost: android.util.SparseArray mViews> = $r4;

        $r5 = virtualinvoke r1.<android.content.Context: java.lang.String getOpPackageName()>();

        r0.<android.appwidget.AppWidgetHost: java.lang.String mContextOpPackageName> = $r5;

        r0.<android.appwidget.AppWidgetHost: int mHostId> = i0;

        r0.<android.appwidget.AppWidgetHost: android.widget.RemoteViews$OnClickHandler mOnClickHandler> = r2;

        $r6 = new android.appwidget.AppWidgetHost$UpdateHandler;

        specialinvoke $r6.<android.appwidget.AppWidgetHost$UpdateHandler: void <init>(android.appwidget.AppWidgetHost,android.os.Looper)>(r0, r3);

        r0.<android.appwidget.AppWidgetHost: android.os.Handler mHandler> = $r6;

        $r7 = new android.appwidget.AppWidgetHost$Callbacks;

        $r8 = r0.<android.appwidget.AppWidgetHost: android.os.Handler mHandler>;

        specialinvoke $r7.<android.appwidget.AppWidgetHost$Callbacks: void <init>(android.os.Handler)>($r8);

        r0.<android.appwidget.AppWidgetHost: android.appwidget.AppWidgetHost$Callbacks mCallbacks> = $r7;

        $r9 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r10 = virtualinvoke $r9.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        r0.<android.appwidget.AppWidgetHost: android.util.DisplayMetrics mDisplayMetrics> = $r10;

        staticinvoke <android.appwidget.AppWidgetHost: void bindService(android.content.Context)>(r1);

        return;
    }

    private static void bindService(android.content.Context)
    {
        java.lang.Object r0;
        boolean $z0, $z1, $z2;
        android.content.pm.PackageManager $r1;
        android.os.IBinder $r2;
        com.android.internal.appwidget.IAppWidgetService $r3;
        android.content.res.Resources $r4;
        java.lang.Throwable $r5;
        android.content.Context r6;

        r6 := @parameter0: android.content.Context;

        r0 = <android.appwidget.AppWidgetHost: java.lang.Object sServiceLock>;

        entermonitor r0;

     label1:
        $z0 = <android.appwidget.AppWidgetHost: boolean sServiceInitialized>;

        if $z0 == 0 goto label3;

        exitmonitor r0;

     label2:
        return;

     label3:
        <android.appwidget.AppWidgetHost: boolean sServiceInitialized> = 1;

        $r1 = virtualinvoke r6.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $z1 = virtualinvoke $r1.<android.content.pm.PackageManager: boolean hasSystemFeature(java.lang.String)>("android.software.app_widgets");

        if $z1 != 0 goto label5;

        $r4 = virtualinvoke r6.<android.content.Context: android.content.res.Resources getResources()>();

        $z2 = virtualinvoke $r4.<android.content.res.Resources: boolean getBoolean(int)>(17891435);

        if $z2 != 0 goto label5;

        exitmonitor r0;

     label4:
        return;

     label5:
        $r2 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("appwidget");

        $r3 = staticinvoke <com.android.internal.appwidget.IAppWidgetService$Stub: com.android.internal.appwidget.IAppWidgetService asInterface(android.os.IBinder)>($r2);

        <android.appwidget.AppWidgetHost: com.android.internal.appwidget.IAppWidgetService sService> = $r3;

        exitmonitor r0;

     label6:
        return;

     label7:
        $r5 := @caughtexception;

     label8:
        exitmonitor r0;

     label9:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public static void deleteAllHosts()
    {
        android.os.RemoteException $r0;
        java.lang.RuntimeException $r1;
        com.android.internal.appwidget.IAppWidgetService r2;

        r2 = <android.appwidget.AppWidgetHost: com.android.internal.appwidget.IAppWidgetService sService>;

        if r2 != null goto label1;

        return;

     label1:
        interfaceinvoke r2.<com.android.internal.appwidget.IAppWidgetService: void deleteAllHosts()>();

     label2:
        return;

     label3:
        $r0 := @caughtexception;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("system server dead?", $r0);

        throw $r1;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int allocateAppWidgetId()
    {
        android.appwidget.AppWidgetHost r0;
        int i0, $i1;
        java.lang.String $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        com.android.internal.appwidget.IAppWidgetService r4;

        r0 := @this: android.appwidget.AppWidgetHost;

        r4 = <android.appwidget.AppWidgetHost: com.android.internal.appwidget.IAppWidgetService sService>;

        if r4 != null goto label1;

        return -1;

     label1:
        $r1 = r0.<android.appwidget.AppWidgetHost: java.lang.String mContextOpPackageName>;

        $i1 = r0.<android.appwidget.AppWidgetHost: int mHostId>;

        i0 = interfaceinvoke r4.<com.android.internal.appwidget.IAppWidgetService: int allocateAppWidgetId(java.lang.String,int)>($r1, $i1);

     label2:
        return i0;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("system server dead?", $r2);

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    protected void clearViews()
    {
        android.appwidget.AppWidgetHost r0;
        android.util.SparseArray r1, $r3;
        java.lang.Throwable $r4;

        r0 := @this: android.appwidget.AppWidgetHost;

        r1 = r0.<android.appwidget.AppWidgetHost: android.util.SparseArray mViews>;

        entermonitor r1;

     label1:
        $r3 = r0.<android.appwidget.AppWidgetHost: android.util.SparseArray mViews>;

        virtualinvoke $r3.<android.util.SparseArray: void clear()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public final android.appwidget.AppWidgetHostView createView(android.content.Context, int, android.appwidget.AppWidgetProviderInfo)
    {
        android.appwidget.AppWidgetHost r0;
        int i0;
        com.android.internal.appwidget.IAppWidgetService $r1, $r5;
        android.widget.RemoteViews$OnClickHandler $r2;
        android.util.SparseArray $r3, r12;
        java.lang.String $r4;
        android.os.RemoteException $r6;
        java.lang.RuntimeException $r7;
        java.lang.Throwable $r8;
        android.content.Context r9;
        android.appwidget.AppWidgetProviderInfo r10;
        android.appwidget.AppWidgetHostView r11;
        android.widget.RemoteViews r13;

        r0 := @this: android.appwidget.AppWidgetHost;

        r9 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r10 := @parameter2: android.appwidget.AppWidgetProviderInfo;

        $r1 = <android.appwidget.AppWidgetHost: com.android.internal.appwidget.IAppWidgetService sService>;

        if $r1 != null goto label1;

        return null;

     label1:
        r11 = virtualinvoke r0.<android.appwidget.AppWidgetHost: android.appwidget.AppWidgetHostView onCreateView(android.content.Context,int,android.appwidget.AppWidgetProviderInfo)>(r9, i0, r10);

        $r2 = r0.<android.appwidget.AppWidgetHost: android.widget.RemoteViews$OnClickHandler mOnClickHandler>;

        virtualinvoke r11.<android.appwidget.AppWidgetHostView: void setOnClickHandler(android.widget.RemoteViews$OnClickHandler)>($r2);

        virtualinvoke r11.<android.appwidget.AppWidgetHostView: void setAppWidget(int,android.appwidget.AppWidgetProviderInfo)>(i0, r10);

        r12 = r0.<android.appwidget.AppWidgetHost: android.util.SparseArray mViews>;

        entermonitor r12;

     label2:
        $r3 = r0.<android.appwidget.AppWidgetHost: android.util.SparseArray mViews>;

        virtualinvoke $r3.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r11);

        exitmonitor r12;

     label3:
        $r5 = <android.appwidget.AppWidgetHost: com.android.internal.appwidget.IAppWidgetService sService>;

        $r4 = r0.<android.appwidget.AppWidgetHost: java.lang.String mContextOpPackageName>;

        r13 = interfaceinvoke $r5.<com.android.internal.appwidget.IAppWidgetService: android.widget.RemoteViews getAppWidgetViews(java.lang.String,int)>($r4, i0);

     label4:
        virtualinvoke r11.<android.appwidget.AppWidgetHostView: void updateAppWidget(android.widget.RemoteViews)>(r13);

        return r11;

     label5:
        $r6 := @caughtexception;

        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("system server dead?", $r6);

        throw $r7;

     label6:
        $r8 := @caughtexception;

     label7:
        exitmonitor r12;

     label8:
        throw $r8;

        catch java.lang.Throwable from label2 to label3 with label6;
        catch android.os.RemoteException from label3 to label4 with label5;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public void deleteAppWidgetId(int)
    {
        android.appwidget.AppWidgetHost r0;
        int i0;
        android.util.SparseArray r1, $r4;
        com.android.internal.appwidget.IAppWidgetService $r3, $r6;
        java.lang.String $r5;
        android.os.RemoteException $r7;
        java.lang.Throwable $r8;
        java.lang.RuntimeException r9;

        r0 := @this: android.appwidget.AppWidgetHost;

        i0 := @parameter0: int;

        $r3 = <android.appwidget.AppWidgetHost: com.android.internal.appwidget.IAppWidgetService sService>;

        if $r3 != null goto label01;

        return;

     label01:
        r1 = r0.<android.appwidget.AppWidgetHost: android.util.SparseArray mViews>;

        entermonitor r1;

     label02:
        $r4 = r0.<android.appwidget.AppWidgetHost: android.util.SparseArray mViews>;

        virtualinvoke $r4.<android.util.SparseArray: void remove(int)>(i0);

     label03:
        $r6 = <android.appwidget.AppWidgetHost: com.android.internal.appwidget.IAppWidgetService sService>;

        $r5 = r0.<android.appwidget.AppWidgetHost: java.lang.String mContextOpPackageName>;

        interfaceinvoke $r6.<com.android.internal.appwidget.IAppWidgetService: void deleteAppWidgetId(java.lang.String,int)>($r5, i0);

     label04:
        exitmonitor r1;

     label05:
        return;

     label06:
        $r7 := @caughtexception;

     label07:
        r9 = new java.lang.RuntimeException;

        specialinvoke r9.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("system server dead?", $r7);

        throw r9;

     label08:
        $r8 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r8;

        catch java.lang.Throwable from label02 to label03 with label08;
        catch android.os.RemoteException from label03 to label04 with label06;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label07 to label08 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public void deleteHost()
    {
        android.appwidget.AppWidgetHost r0;
        int $i0;
        java.lang.String $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        com.android.internal.appwidget.IAppWidgetService r4;

        r0 := @this: android.appwidget.AppWidgetHost;

        r4 = <android.appwidget.AppWidgetHost: com.android.internal.appwidget.IAppWidgetService sService>;

        if r4 != null goto label1;

        return;

     label1:
        $r1 = r0.<android.appwidget.AppWidgetHost: java.lang.String mContextOpPackageName>;

        $i0 = r0.<android.appwidget.AppWidgetHost: int mHostId>;

        interfaceinvoke r4.<com.android.internal.appwidget.IAppWidgetService: void deleteHost(java.lang.String,int)>($r1, $i0);

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("system server dead?", $r2);

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    void dispatchOnAppWidgetRemoved(int)
    {
        android.appwidget.AppWidgetHost r0;
        int i0;
        android.util.SparseArray r1, $r3;
        java.lang.Throwable $r4;

        r0 := @this: android.appwidget.AppWidgetHost;

        i0 := @parameter0: int;

        r1 = r0.<android.appwidget.AppWidgetHost: android.util.SparseArray mViews>;

        entermonitor r1;

     label1:
        $r3 = r0.<android.appwidget.AppWidgetHost: android.util.SparseArray mViews>;

        virtualinvoke $r3.<android.util.SparseArray: void remove(int)>(i0);

        exitmonitor r1;

     label2:
        virtualinvoke r0.<android.appwidget.AppWidgetHost: void onAppWidgetRemoved(int)>(i0);

        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public int[] getAppWidgetIds()
    {
        android.appwidget.AppWidgetHost r0;
        int $i0;
        java.lang.String $r1;
        int[] $r2, r6;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;
        com.android.internal.appwidget.IAppWidgetService r5;

        r0 := @this: android.appwidget.AppWidgetHost;

        r5 = <android.appwidget.AppWidgetHost: com.android.internal.appwidget.IAppWidgetService sService>;

        if r5 != null goto label1;

        $r2 = newarray (int)[0];

        return $r2;

     label1:
        $r1 = r0.<android.appwidget.AppWidgetHost: java.lang.String mContextOpPackageName>;

        $i0 = r0.<android.appwidget.AppWidgetHost: int mHostId>;

        r6 = interfaceinvoke r5.<com.android.internal.appwidget.IAppWidgetService: int[] getAppWidgetIdsForHost(java.lang.String,int)>($r1, $i0);

     label2:
        return r6;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("system server dead?", $r3);

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void onAppWidgetRemoved(int)
    {
        android.appwidget.AppWidgetHost r0;
        int i0;

        r0 := @this: android.appwidget.AppWidgetHost;

        i0 := @parameter0: int;

        return;
    }

    protected android.appwidget.AppWidgetHostView onCreateView(android.content.Context, int, android.appwidget.AppWidgetProviderInfo)
    {
        android.appwidget.AppWidgetHost r0;
        android.content.Context r1;
        int i0;
        android.appwidget.AppWidgetProviderInfo r2;
        android.appwidget.AppWidgetHostView $r3;
        android.widget.RemoteViews$OnClickHandler $r4;

        r0 := @this: android.appwidget.AppWidgetHost;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r2 := @parameter2: android.appwidget.AppWidgetProviderInfo;

        $r3 = new android.appwidget.AppWidgetHostView;

        $r4 = r0.<android.appwidget.AppWidgetHost: android.widget.RemoteViews$OnClickHandler mOnClickHandler>;

        specialinvoke $r3.<android.appwidget.AppWidgetHostView: void <init>(android.content.Context,android.widget.RemoteViews$OnClickHandler)>(r1, $r4);

        return $r3;
    }

    protected void onProviderChanged(int, android.appwidget.AppWidgetProviderInfo)
    {
        android.appwidget.AppWidgetHost r0;
        int i0;
        android.util.SparseArray r1, $r4;
        android.appwidget.AppWidgetHostView r2;
        android.util.DisplayMetrics $r3;
        java.lang.Object $r5;
        java.lang.Throwable $r6;
        android.appwidget.AppWidgetProviderInfo r7;

        r0 := @this: android.appwidget.AppWidgetHost;

        i0 := @parameter0: int;

        r7 := @parameter1: android.appwidget.AppWidgetProviderInfo;

        $r3 = r0.<android.appwidget.AppWidgetHost: android.util.DisplayMetrics mDisplayMetrics>;

        virtualinvoke r7.<android.appwidget.AppWidgetProviderInfo: void updateDimensions(android.util.DisplayMetrics)>($r3);

        r1 = r0.<android.appwidget.AppWidgetHost: android.util.SparseArray mViews>;

        entermonitor r1;

     label1:
        $r4 = r0.<android.appwidget.AppWidgetHost: android.util.SparseArray mViews>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (android.appwidget.AppWidgetHostView) $r5;

        exitmonitor r1;

     label2:
        if r2 == null goto label3;

        virtualinvoke r2.<android.appwidget.AppWidgetHostView: void resetAppWidget(android.appwidget.AppWidgetProviderInfo)>(r7);

     label3:
        return;

     label4:
        $r6 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    protected void onProvidersChanged()
    {
        android.appwidget.AppWidgetHost r0;

        r0 := @this: android.appwidget.AppWidgetHost;

        return;
    }

    public final void startAppWidgetConfigureActivityForResult(android.app.Activity, int, int, int, android.os.Bundle)
    {
        android.appwidget.AppWidgetHost r0;
        int i0, i1, i2;
        android.os.Bundle r1;
        java.lang.String $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;
        android.content.IntentSender$SendIntentException $r5;
        android.content.ActivityNotFoundException $r6, r10;
        android.app.Activity r7;
        com.android.internal.appwidget.IAppWidgetService r8;
        android.content.IntentSender r9;

        r0 := @this: android.appwidget.AppWidgetHost;

        r7 := @parameter0: android.app.Activity;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r1 := @parameter4: android.os.Bundle;

        r8 = <android.appwidget.AppWidgetHost: com.android.internal.appwidget.IAppWidgetService sService>;

        if r8 != null goto label1;

        return;

     label1:
        $r2 = r0.<android.appwidget.AppWidgetHost: java.lang.String mContextOpPackageName>;

        r9 = interfaceinvoke r8.<com.android.internal.appwidget.IAppWidgetService: android.content.IntentSender createAppWidgetConfigIntentSender(java.lang.String,int,int)>($r2, i0, i1);

     label2:
        if r9 == null goto label5;

     label3:
        virtualinvoke r7.<android.app.Activity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)>(r9, i2, null, 0, 0, 0, r1);

     label4:
        return;

     label5:
        r10 = new android.content.ActivityNotFoundException;

        specialinvoke r10.<android.content.ActivityNotFoundException: void <init>()>();

        throw r10;

     label6:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("system server dead?", $r3);

        throw $r4;

     label7:
        $r5 := @caughtexception;

        $r6 = new android.content.ActivityNotFoundException;

        specialinvoke $r6.<android.content.ActivityNotFoundException: void <init>()>();

        throw $r6;

        catch android.content.IntentSender$SendIntentException from label1 to label2 with label7;
        catch android.os.RemoteException from label1 to label2 with label6;
        catch android.content.IntentSender$SendIntentException from label3 to label4 with label7;
        catch android.os.RemoteException from label3 to label4 with label6;
        catch android.content.IntentSender$SendIntentException from label5 to label6 with label7;
        catch android.os.RemoteException from label5 to label6 with label6;
    }

    public void startListening()
    {
        android.appwidget.AppWidgetHost r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9, i10, i11;
        com.android.internal.appwidget.IAppWidgetService $r1, $r5;
        android.util.SparseArray $r2, $r10, r14;
        java.lang.String $r3;
        android.appwidget.AppWidgetHost$Callbacks $r4;
        android.content.pm.ParceledListSlice $r6;
        java.lang.Object $r7;
        android.widget.RemoteViews $r8;
        android.appwidget.AppWidgetProviderInfo $r9;
        java.lang.Throwable $r11;
        android.os.RemoteException $r12;
        java.lang.RuntimeException $r13;
        int[] r15;
        java.util.List r16;
        android.appwidget.PendingHostUpdate r17;

        r0 := @this: android.appwidget.AppWidgetHost;

        $r1 = <android.appwidget.AppWidgetHost: com.android.internal.appwidget.IAppWidgetService sService>;

        if $r1 != null goto label01;

        return;

     label01:
        r14 = r0.<android.appwidget.AppWidgetHost: android.util.SparseArray mViews>;

        entermonitor r14;

     label02:
        $r2 = r0.<android.appwidget.AppWidgetHost: android.util.SparseArray mViews>;

        i8 = virtualinvoke $r2.<android.util.SparseArray: int size()>();

        r15 = newarray (int)[i8];

     label03:
        i9 = 0;

     label04:
        if i9 >= i8 goto label07;

     label05:
        $r10 = r0.<android.appwidget.AppWidgetHost: android.util.SparseArray mViews>;

        $i7 = virtualinvoke $r10.<android.util.SparseArray: int keyAt(int)>(i9);

        r15[i9] = $i7;

     label06:
        i9 = i9 + 1;

        goto label04;

     label07:
        exitmonitor r14;

     label08:
        $r5 = <android.appwidget.AppWidgetHost: com.android.internal.appwidget.IAppWidgetService sService>;

        $r4 = r0.<android.appwidget.AppWidgetHost: android.appwidget.AppWidgetHost$Callbacks mCallbacks>;

        $r3 = r0.<android.appwidget.AppWidgetHost: java.lang.String mContextOpPackageName>;

        $i1 = r0.<android.appwidget.AppWidgetHost: int mHostId>;

        $r6 = interfaceinvoke $r5.<com.android.internal.appwidget.IAppWidgetService: android.content.pm.ParceledListSlice startListening(com.android.internal.appwidget.IAppWidgetHost,java.lang.String,int,int[])>($r4, $r3, $i1, r15);

        r16 = virtualinvoke $r6.<android.content.pm.ParceledListSlice: java.util.List getList()>();

     label09:
        i10 = interfaceinvoke r16.<java.util.List: int size()>();

        i11 = 0;

     label10:
        if i11 >= i10 goto label16;

        $r7 = interfaceinvoke r16.<java.util.List: java.lang.Object get(int)>(i11);

        r17 = (android.appwidget.PendingHostUpdate) $r7;

        i0 = r17.<android.appwidget.PendingHostUpdate: int type>;

        if i0 == 0 goto label14;

        if i0 == 1 goto label13;

        if i0 == 2 goto label12;

        if i0 == 3 goto label11;

        goto label15;

     label11:
        $i6 = r17.<android.appwidget.PendingHostUpdate: int appWidgetId>;

        virtualinvoke r0.<android.appwidget.AppWidgetHost: void dispatchOnAppWidgetRemoved(int)>($i6);

        goto label15;

     label12:
        $i5 = r17.<android.appwidget.PendingHostUpdate: int appWidgetId>;

        $i4 = r17.<android.appwidget.PendingHostUpdate: int viewId>;

        virtualinvoke r0.<android.appwidget.AppWidgetHost: void viewDataChanged(int,int)>($i5, $i4);

        goto label15;

     label13:
        $i3 = r17.<android.appwidget.PendingHostUpdate: int appWidgetId>;

        $r9 = r17.<android.appwidget.PendingHostUpdate: android.appwidget.AppWidgetProviderInfo widgetInfo>;

        virtualinvoke r0.<android.appwidget.AppWidgetHost: void onProviderChanged(int,android.appwidget.AppWidgetProviderInfo)>($i3, $r9);

        goto label15;

     label14:
        $i2 = r17.<android.appwidget.PendingHostUpdate: int appWidgetId>;

        $r8 = r17.<android.appwidget.PendingHostUpdate: android.widget.RemoteViews views>;

        virtualinvoke r0.<android.appwidget.AppWidgetHost: void updateAppWidgetView(int,android.widget.RemoteViews)>($i2, $r8);

     label15:
        i11 = i11 + 1;

        goto label10;

     label16:
        return;

     label17:
        $r12 := @caughtexception;

        $r13 = new java.lang.RuntimeException;

        specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("system server dead?", $r12);

        throw $r13;

     label18:
        $r11 := @caughtexception;

     label19:
        exitmonitor r14;

     label20:
        throw $r11;

        catch java.lang.Throwable from label02 to label03 with label18;
        catch java.lang.Throwable from label05 to label06 with label18;
        catch java.lang.Throwable from label07 to label08 with label18;
        catch android.os.RemoteException from label08 to label09 with label17;
        catch java.lang.Throwable from label19 to label20 with label18;
    }

    public void stopListening()
    {
        android.appwidget.AppWidgetHost r0;
        int $i0;
        java.lang.String $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        com.android.internal.appwidget.IAppWidgetService r4;

        r0 := @this: android.appwidget.AppWidgetHost;

        r4 = <android.appwidget.AppWidgetHost: com.android.internal.appwidget.IAppWidgetService sService>;

        if r4 != null goto label1;

        return;

     label1:
        $r1 = r0.<android.appwidget.AppWidgetHost: java.lang.String mContextOpPackageName>;

        $i0 = r0.<android.appwidget.AppWidgetHost: int mHostId>;

        interfaceinvoke r4.<com.android.internal.appwidget.IAppWidgetService: void stopListening(java.lang.String,int)>($r1, $i0);

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("system server dead?", $r2);

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    void updateAppWidgetView(int, android.widget.RemoteViews)
    {
        android.appwidget.AppWidgetHost r0;
        int i0;
        android.util.SparseArray r1, $r3;
        android.appwidget.AppWidgetHostView r2;
        java.lang.Object $r4;
        java.lang.Throwable $r5;
        android.widget.RemoteViews r6;

        r0 := @this: android.appwidget.AppWidgetHost;

        i0 := @parameter0: int;

        r6 := @parameter1: android.widget.RemoteViews;

        r1 = r0.<android.appwidget.AppWidgetHost: android.util.SparseArray mViews>;

        entermonitor r1;

     label1:
        $r3 = r0.<android.appwidget.AppWidgetHost: android.util.SparseArray mViews>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (android.appwidget.AppWidgetHostView) $r4;

        exitmonitor r1;

     label2:
        if r2 == null goto label3;

        virtualinvoke r2.<android.appwidget.AppWidgetHostView: void updateAppWidget(android.widget.RemoteViews)>(r6);

     label3:
        return;

     label4:
        $r5 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    void viewDataChanged(int, int)
    {
        android.appwidget.AppWidgetHost r0;
        int i0, i1;
        android.util.SparseArray r1, $r2;
        java.lang.Object $r3;
        java.lang.Throwable $r4;
        android.appwidget.AppWidgetHostView r5;

        r0 := @this: android.appwidget.AppWidgetHost;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = r0.<android.appwidget.AppWidgetHost: android.util.SparseArray mViews>;

        entermonitor r1;

     label1:
        $r2 = r0.<android.appwidget.AppWidgetHost: android.util.SparseArray mViews>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r5 = (android.appwidget.AppWidgetHostView) $r3;

        exitmonitor r1;

     label2:
        if r5 == null goto label3;

        virtualinvoke r5.<android.appwidget.AppWidgetHostView: void viewDataChanged(int)>(i1);

     label3:
        return;

     label4:
        $r4 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }
}
