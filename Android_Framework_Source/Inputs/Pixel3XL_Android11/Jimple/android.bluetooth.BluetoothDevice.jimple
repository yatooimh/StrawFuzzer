public final class android.bluetooth.BluetoothDevice extends java.lang.Object implements android.os.Parcelable
{
    public static final int ACCESS_ALLOWED;
    public static final int ACCESS_REJECTED;
    public static final int ACCESS_UNKNOWN;
    public static final java.lang.String ACTION_ACL_CONNECTED;
    public static final java.lang.String ACTION_ACL_DISCONNECTED;
    public static final java.lang.String ACTION_ACL_DISCONNECT_REQUESTED;
    public static final java.lang.String ACTION_ALIAS_CHANGED;
    public static final java.lang.String ACTION_BATTERY_LEVEL_CHANGED;
    public static final java.lang.String ACTION_BOND_STATE_CHANGED;
    public static final java.lang.String ACTION_CLASS_CHANGED;
    public static final java.lang.String ACTION_CONNECTION_ACCESS_CANCEL;
    public static final java.lang.String ACTION_CONNECTION_ACCESS_REPLY;
    public static final java.lang.String ACTION_CONNECTION_ACCESS_REQUEST;
    public static final java.lang.String ACTION_FOUND;
    public static final java.lang.String ACTION_MAS_INSTANCE;
    public static final java.lang.String ACTION_NAME_CHANGED;
    public static final java.lang.String ACTION_NAME_FAILED;
    public static final java.lang.String ACTION_PAIRING_CANCEL;
    public static final java.lang.String ACTION_PAIRING_REQUEST;
    public static final java.lang.String ACTION_SDP_RECORD;
    public static final java.lang.String ACTION_SILENCE_MODE_CHANGED;
    public static final java.lang.String ACTION_UUID;
    public static final int BATTERY_LEVEL_BLUETOOTH_OFF;
    public static final int BATTERY_LEVEL_UNKNOWN;
    private static final java.lang.String BLUETOOTH_BONDING_CACHE_PROPERTY;
    public static final int BOND_BONDED;
    public static final int BOND_BONDING;
    public static final int BOND_NONE;
    public static final int BOND_SUCCESS;
    public static final int CONNECTION_ACCESS_NO;
    public static final int CONNECTION_ACCESS_YES;
    private static final int CONNECTION_STATE_CONNECTED;
    private static final int CONNECTION_STATE_DISCONNECTED;
    private static final int CONNECTION_STATE_ENCRYPTED_BREDR;
    private static final int CONNECTION_STATE_ENCRYPTED_LE;
    public static final android.os.Parcelable$Creator CREATOR;
    private static final boolean DBG;
    public static final int DEVICE_TYPE_CLASSIC;
    public static final int DEVICE_TYPE_DUAL;
    public static final int DEVICE_TYPE_LE;
    public static final int DEVICE_TYPE_UNKNOWN;
    public static final int ERROR;
    public static final java.lang.String EXTRA_ACCESS_REQUEST_TYPE;
    public static final java.lang.String EXTRA_ALWAYS_ALLOWED;
    public static final java.lang.String EXTRA_BATTERY_LEVEL;
    public static final java.lang.String EXTRA_BOND_STATE;
    public static final java.lang.String EXTRA_CLASS;
    public static final java.lang.String EXTRA_CLASS_NAME;
    public static final java.lang.String EXTRA_CONNECTION_ACCESS_RESULT;
    public static final java.lang.String EXTRA_DEVICE;
    public static final java.lang.String EXTRA_MAS_INSTANCE;
    public static final java.lang.String EXTRA_NAME;
    public static final java.lang.String EXTRA_PACKAGE_NAME;
    public static final java.lang.String EXTRA_PAIRING_KEY;
    public static final java.lang.String EXTRA_PAIRING_VARIANT;
    public static final java.lang.String EXTRA_PREVIOUS_BOND_STATE;
    public static final java.lang.String EXTRA_REASON;
    public static final java.lang.String EXTRA_RSSI;
    public static final java.lang.String EXTRA_SDP_RECORD;
    public static final java.lang.String EXTRA_SDP_SEARCH_STATUS;
    public static final java.lang.String EXTRA_UUID;
    public static final int METADATA_COMPANION_APP;
    public static final int METADATA_ENHANCED_SETTINGS_UI_URI;
    public static final int METADATA_HARDWARE_VERSION;
    public static final int METADATA_IS_UNTETHERED_HEADSET;
    public static final int METADATA_MAIN_ICON;
    public static final int METADATA_MANUFACTURER_NAME;
    public static final int METADATA_MAX_LENGTH;
    public static final int METADATA_MODEL_NAME;
    public static final int METADATA_SOFTWARE_VERSION;
    public static final int METADATA_UNTETHERED_CASE_BATTERY;
    public static final int METADATA_UNTETHERED_CASE_CHARGING;
    public static final int METADATA_UNTETHERED_CASE_ICON;
    public static final int METADATA_UNTETHERED_LEFT_BATTERY;
    public static final int METADATA_UNTETHERED_LEFT_CHARGING;
    public static final int METADATA_UNTETHERED_LEFT_ICON;
    public static final int METADATA_UNTETHERED_RIGHT_BATTERY;
    public static final int METADATA_UNTETHERED_RIGHT_CHARGING;
    public static final int METADATA_UNTETHERED_RIGHT_ICON;
    public static final int PAIRING_VARIANT_CONSENT;
    public static final int PAIRING_VARIANT_DISPLAY_PASSKEY;
    public static final int PAIRING_VARIANT_DISPLAY_PIN;
    public static final int PAIRING_VARIANT_OOB_CONSENT;
    public static final int PAIRING_VARIANT_PASSKEY;
    public static final int PAIRING_VARIANT_PASSKEY_CONFIRMATION;
    public static final int PAIRING_VARIANT_PIN;
    public static final int PAIRING_VARIANT_PIN_16_DIGITS;
    public static final int PHY_LE_1M;
    public static final int PHY_LE_1M_MASK;
    public static final int PHY_LE_2M;
    public static final int PHY_LE_2M_MASK;
    public static final int PHY_LE_CODED;
    public static final int PHY_LE_CODED_MASK;
    public static final int PHY_OPTION_NO_PREFERRED;
    public static final int PHY_OPTION_S2;
    public static final int PHY_OPTION_S8;
    public static final int REQUEST_TYPE_MESSAGE_ACCESS;
    public static final int REQUEST_TYPE_PHONEBOOK_ACCESS;
    public static final int REQUEST_TYPE_PROFILE_CONNECTION;
    public static final int REQUEST_TYPE_SIM_ACCESS;
    private static final java.lang.String TAG;
    public static final int TRANSPORT_AUTO;
    public static final int TRANSPORT_BREDR;
    public static final int TRANSPORT_LE;
    public static final int UNBOND_REASON_AUTH_CANCELED;
    public static final int UNBOND_REASON_AUTH_FAILED;
    public static final int UNBOND_REASON_AUTH_REJECTED;
    public static final int UNBOND_REASON_AUTH_TIMEOUT;
    public static final int UNBOND_REASON_DISCOVERY_IN_PROGRESS;
    public static final int UNBOND_REASON_REMOTE_AUTH_CANCELED;
    public static final int UNBOND_REASON_REMOTE_DEVICE_DOWN;
    public static final int UNBOND_REASON_REMOVED;
    public static final int UNBOND_REASON_REPEATED_ATTEMPTS;
    private static volatile android.bluetooth.IBluetooth sService;
    static android.bluetooth.IBluetoothManagerCallback sStateChangeCallback;
    private final java.lang.String mAddress;
    private final android.app.PropertyInvalidatedCache mBluetoothBondCache;

    static void <clinit>()
    {
        android.bluetooth.BluetoothDevice$1 $r0;
        android.bluetooth.BluetoothDevice$2 $r1;

        <android.bluetooth.BluetoothDevice: int UNBOND_REASON_REPEATED_ATTEMPTS> = 7;

        <android.bluetooth.BluetoothDevice: int UNBOND_REASON_REMOVED> = 9;

        <android.bluetooth.BluetoothDevice: int UNBOND_REASON_REMOTE_DEVICE_DOWN> = 4;

        <android.bluetooth.BluetoothDevice: int UNBOND_REASON_REMOTE_AUTH_CANCELED> = 8;

        <android.bluetooth.BluetoothDevice: int UNBOND_REASON_DISCOVERY_IN_PROGRESS> = 5;

        <android.bluetooth.BluetoothDevice: int UNBOND_REASON_AUTH_TIMEOUT> = 6;

        <android.bluetooth.BluetoothDevice: int UNBOND_REASON_AUTH_REJECTED> = 2;

        <android.bluetooth.BluetoothDevice: int UNBOND_REASON_AUTH_FAILED> = 1;

        <android.bluetooth.BluetoothDevice: int UNBOND_REASON_AUTH_CANCELED> = 3;

        <android.bluetooth.BluetoothDevice: int TRANSPORT_LE> = 2;

        <android.bluetooth.BluetoothDevice: int TRANSPORT_BREDR> = 1;

        <android.bluetooth.BluetoothDevice: int TRANSPORT_AUTO> = 0;

        <android.bluetooth.BluetoothDevice: java.lang.String TAG> = "BluetoothDevice";

        <android.bluetooth.BluetoothDevice: int REQUEST_TYPE_SIM_ACCESS> = 4;

        <android.bluetooth.BluetoothDevice: int REQUEST_TYPE_PROFILE_CONNECTION> = 1;

        <android.bluetooth.BluetoothDevice: int REQUEST_TYPE_PHONEBOOK_ACCESS> = 2;

        <android.bluetooth.BluetoothDevice: int REQUEST_TYPE_MESSAGE_ACCESS> = 3;

        <android.bluetooth.BluetoothDevice: int PHY_OPTION_S8> = 2;

        <android.bluetooth.BluetoothDevice: int PHY_OPTION_S2> = 1;

        <android.bluetooth.BluetoothDevice: int PHY_OPTION_NO_PREFERRED> = 0;

        <android.bluetooth.BluetoothDevice: int PHY_LE_CODED_MASK> = 4;

        <android.bluetooth.BluetoothDevice: int PHY_LE_CODED> = 3;

        <android.bluetooth.BluetoothDevice: int PHY_LE_2M_MASK> = 2;

        <android.bluetooth.BluetoothDevice: int PHY_LE_2M> = 2;

        <android.bluetooth.BluetoothDevice: int PHY_LE_1M_MASK> = 1;

        <android.bluetooth.BluetoothDevice: int PHY_LE_1M> = 1;

        <android.bluetooth.BluetoothDevice: int PAIRING_VARIANT_PIN_16_DIGITS> = 7;

        <android.bluetooth.BluetoothDevice: int PAIRING_VARIANT_PIN> = 0;

        <android.bluetooth.BluetoothDevice: int PAIRING_VARIANT_PASSKEY_CONFIRMATION> = 2;

        <android.bluetooth.BluetoothDevice: int PAIRING_VARIANT_PASSKEY> = 1;

        <android.bluetooth.BluetoothDevice: int PAIRING_VARIANT_OOB_CONSENT> = 6;

        <android.bluetooth.BluetoothDevice: int PAIRING_VARIANT_DISPLAY_PIN> = 5;

        <android.bluetooth.BluetoothDevice: int PAIRING_VARIANT_DISPLAY_PASSKEY> = 4;

        <android.bluetooth.BluetoothDevice: int PAIRING_VARIANT_CONSENT> = 3;

        <android.bluetooth.BluetoothDevice: int METADATA_UNTETHERED_RIGHT_ICON> = 8;

        <android.bluetooth.BluetoothDevice: int METADATA_UNTETHERED_RIGHT_CHARGING> = 14;

        <android.bluetooth.BluetoothDevice: int METADATA_UNTETHERED_RIGHT_BATTERY> = 11;

        <android.bluetooth.BluetoothDevice: int METADATA_UNTETHERED_LEFT_ICON> = 7;

        <android.bluetooth.BluetoothDevice: int METADATA_UNTETHERED_LEFT_CHARGING> = 13;

        <android.bluetooth.BluetoothDevice: int METADATA_UNTETHERED_LEFT_BATTERY> = 10;

        <android.bluetooth.BluetoothDevice: int METADATA_UNTETHERED_CASE_ICON> = 9;

        <android.bluetooth.BluetoothDevice: int METADATA_UNTETHERED_CASE_CHARGING> = 15;

        <android.bluetooth.BluetoothDevice: int METADATA_UNTETHERED_CASE_BATTERY> = 12;

        <android.bluetooth.BluetoothDevice: int METADATA_SOFTWARE_VERSION> = 2;

        <android.bluetooth.BluetoothDevice: int METADATA_MODEL_NAME> = 1;

        <android.bluetooth.BluetoothDevice: int METADATA_MAX_LENGTH> = 2048;

        <android.bluetooth.BluetoothDevice: int METADATA_MANUFACTURER_NAME> = 0;

        <android.bluetooth.BluetoothDevice: int METADATA_MAIN_ICON> = 5;

        <android.bluetooth.BluetoothDevice: int METADATA_IS_UNTETHERED_HEADSET> = 6;

        <android.bluetooth.BluetoothDevice: int METADATA_HARDWARE_VERSION> = 3;

        <android.bluetooth.BluetoothDevice: int METADATA_ENHANCED_SETTINGS_UI_URI> = 16;

        <android.bluetooth.BluetoothDevice: int METADATA_COMPANION_APP> = 4;

        <android.bluetooth.BluetoothDevice: java.lang.String EXTRA_UUID> = "android.bluetooth.device.extra.UUID";

        <android.bluetooth.BluetoothDevice: java.lang.String EXTRA_SDP_SEARCH_STATUS> = "android.bluetooth.device.extra.SDP_SEARCH_STATUS";

        <android.bluetooth.BluetoothDevice: java.lang.String EXTRA_SDP_RECORD> = "android.bluetooth.device.extra.SDP_RECORD";

        <android.bluetooth.BluetoothDevice: java.lang.String EXTRA_RSSI> = "android.bluetooth.device.extra.RSSI";

        <android.bluetooth.BluetoothDevice: java.lang.String EXTRA_REASON> = "android.bluetooth.device.extra.REASON";

        <android.bluetooth.BluetoothDevice: java.lang.String EXTRA_PREVIOUS_BOND_STATE> = "android.bluetooth.device.extra.PREVIOUS_BOND_STATE";

        <android.bluetooth.BluetoothDevice: java.lang.String EXTRA_PAIRING_VARIANT> = "android.bluetooth.device.extra.PAIRING_VARIANT";

        <android.bluetooth.BluetoothDevice: java.lang.String EXTRA_PAIRING_KEY> = "android.bluetooth.device.extra.PAIRING_KEY";

        <android.bluetooth.BluetoothDevice: java.lang.String EXTRA_PACKAGE_NAME> = "android.bluetooth.device.extra.PACKAGE_NAME";

        <android.bluetooth.BluetoothDevice: java.lang.String EXTRA_NAME> = "android.bluetooth.device.extra.NAME";

        <android.bluetooth.BluetoothDevice: java.lang.String EXTRA_MAS_INSTANCE> = "android.bluetooth.device.extra.MAS_INSTANCE";

        <android.bluetooth.BluetoothDevice: java.lang.String EXTRA_DEVICE> = "android.bluetooth.device.extra.DEVICE";

        <android.bluetooth.BluetoothDevice: java.lang.String EXTRA_CONNECTION_ACCESS_RESULT> = "android.bluetooth.device.extra.CONNECTION_ACCESS_RESULT";

        <android.bluetooth.BluetoothDevice: java.lang.String EXTRA_CLASS_NAME> = "android.bluetooth.device.extra.CLASS_NAME";

        <android.bluetooth.BluetoothDevice: java.lang.String EXTRA_CLASS> = "android.bluetooth.device.extra.CLASS";

        <android.bluetooth.BluetoothDevice: java.lang.String EXTRA_BOND_STATE> = "android.bluetooth.device.extra.BOND_STATE";

        <android.bluetooth.BluetoothDevice: java.lang.String EXTRA_BATTERY_LEVEL> = "android.bluetooth.device.extra.BATTERY_LEVEL";

        <android.bluetooth.BluetoothDevice: java.lang.String EXTRA_ALWAYS_ALLOWED> = "android.bluetooth.device.extra.ALWAYS_ALLOWED";

        <android.bluetooth.BluetoothDevice: java.lang.String EXTRA_ACCESS_REQUEST_TYPE> = "android.bluetooth.device.extra.ACCESS_REQUEST_TYPE";

        <android.bluetooth.BluetoothDevice: int ERROR> = -2147483648;

        <android.bluetooth.BluetoothDevice: int DEVICE_TYPE_UNKNOWN> = 0;

        <android.bluetooth.BluetoothDevice: int DEVICE_TYPE_LE> = 2;

        <android.bluetooth.BluetoothDevice: int DEVICE_TYPE_DUAL> = 3;

        <android.bluetooth.BluetoothDevice: int DEVICE_TYPE_CLASSIC> = 1;

        <android.bluetooth.BluetoothDevice: boolean DBG> = 0;

        <android.bluetooth.BluetoothDevice: int CONNECTION_STATE_ENCRYPTED_LE> = 4;

        <android.bluetooth.BluetoothDevice: int CONNECTION_STATE_ENCRYPTED_BREDR> = 2;

        <android.bluetooth.BluetoothDevice: int CONNECTION_STATE_DISCONNECTED> = 0;

        <android.bluetooth.BluetoothDevice: int CONNECTION_STATE_CONNECTED> = 1;

        <android.bluetooth.BluetoothDevice: int CONNECTION_ACCESS_YES> = 1;

        <android.bluetooth.BluetoothDevice: int CONNECTION_ACCESS_NO> = 2;

        <android.bluetooth.BluetoothDevice: int BOND_SUCCESS> = 0;

        <android.bluetooth.BluetoothDevice: int BOND_NONE> = 10;

        <android.bluetooth.BluetoothDevice: int BOND_BONDING> = 11;

        <android.bluetooth.BluetoothDevice: int BOND_BONDED> = 12;

        <android.bluetooth.BluetoothDevice: java.lang.String BLUETOOTH_BONDING_CACHE_PROPERTY> = "cache_key.bluetooth.get_bond_state";

        <android.bluetooth.BluetoothDevice: int BATTERY_LEVEL_UNKNOWN> = -1;

        <android.bluetooth.BluetoothDevice: int BATTERY_LEVEL_BLUETOOTH_OFF> = -100;

        <android.bluetooth.BluetoothDevice: java.lang.String ACTION_UUID> = "android.bluetooth.device.action.UUID";

        <android.bluetooth.BluetoothDevice: java.lang.String ACTION_SILENCE_MODE_CHANGED> = "android.bluetooth.device.action.SILENCE_MODE_CHANGED";

        <android.bluetooth.BluetoothDevice: java.lang.String ACTION_SDP_RECORD> = "android.bluetooth.device.action.SDP_RECORD";

        <android.bluetooth.BluetoothDevice: java.lang.String ACTION_PAIRING_REQUEST> = "android.bluetooth.device.action.PAIRING_REQUEST";

        <android.bluetooth.BluetoothDevice: java.lang.String ACTION_PAIRING_CANCEL> = "android.bluetooth.device.action.PAIRING_CANCEL";

        <android.bluetooth.BluetoothDevice: java.lang.String ACTION_NAME_FAILED> = "android.bluetooth.device.action.NAME_FAILED";

        <android.bluetooth.BluetoothDevice: java.lang.String ACTION_NAME_CHANGED> = "android.bluetooth.device.action.NAME_CHANGED";

        <android.bluetooth.BluetoothDevice: java.lang.String ACTION_MAS_INSTANCE> = "android.bluetooth.device.action.MAS_INSTANCE";

        <android.bluetooth.BluetoothDevice: java.lang.String ACTION_FOUND> = "android.bluetooth.device.action.FOUND";

        <android.bluetooth.BluetoothDevice: java.lang.String ACTION_CONNECTION_ACCESS_REQUEST> = "android.bluetooth.device.action.CONNECTION_ACCESS_REQUEST";

        <android.bluetooth.BluetoothDevice: java.lang.String ACTION_CONNECTION_ACCESS_REPLY> = "android.bluetooth.device.action.CONNECTION_ACCESS_REPLY";

        <android.bluetooth.BluetoothDevice: java.lang.String ACTION_CONNECTION_ACCESS_CANCEL> = "android.bluetooth.device.action.CONNECTION_ACCESS_CANCEL";

        <android.bluetooth.BluetoothDevice: java.lang.String ACTION_CLASS_CHANGED> = "android.bluetooth.device.action.CLASS_CHANGED";

        <android.bluetooth.BluetoothDevice: java.lang.String ACTION_BOND_STATE_CHANGED> = "android.bluetooth.device.action.BOND_STATE_CHANGED";

        <android.bluetooth.BluetoothDevice: java.lang.String ACTION_BATTERY_LEVEL_CHANGED> = "android.bluetooth.device.action.BATTERY_LEVEL_CHANGED";

        <android.bluetooth.BluetoothDevice: java.lang.String ACTION_ALIAS_CHANGED> = "android.bluetooth.device.action.ALIAS_CHANGED";

        <android.bluetooth.BluetoothDevice: java.lang.String ACTION_ACL_DISCONNECT_REQUESTED> = "android.bluetooth.device.action.ACL_DISCONNECT_REQUESTED";

        <android.bluetooth.BluetoothDevice: java.lang.String ACTION_ACL_DISCONNECTED> = "android.bluetooth.device.action.ACL_DISCONNECTED";

        <android.bluetooth.BluetoothDevice: java.lang.String ACTION_ACL_CONNECTED> = "android.bluetooth.device.action.ACL_CONNECTED";

        <android.bluetooth.BluetoothDevice: int ACCESS_UNKNOWN> = 0;

        <android.bluetooth.BluetoothDevice: int ACCESS_REJECTED> = 2;

        <android.bluetooth.BluetoothDevice: int ACCESS_ALLOWED> = 1;

        $r0 = new android.bluetooth.BluetoothDevice$1;

        specialinvoke $r0.<android.bluetooth.BluetoothDevice$1: void <init>()>();

        <android.bluetooth.BluetoothDevice: android.bluetooth.IBluetoothManagerCallback sStateChangeCallback> = $r0;

        $r1 = new android.bluetooth.BluetoothDevice$2;

        specialinvoke $r1.<android.bluetooth.BluetoothDevice$2: void <init>()>();

        <android.bluetooth.BluetoothDevice: android.os.Parcelable$Creator CREATOR> = $r1;

        return;
    }

    void <init>(java.lang.String)
    {
        android.bluetooth.BluetoothDevice r0;
        java.lang.String r1, $r9;
        android.bluetooth.BluetoothDevice$3 $r3;
        boolean $z0;
        java.lang.StringBuilder $r5;
        java.lang.IllegalArgumentException $r8;

        r0 := @this: android.bluetooth.BluetoothDevice;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new android.bluetooth.BluetoothDevice$3;

        specialinvoke $r3.<android.bluetooth.BluetoothDevice$3: void <init>(android.bluetooth.BluetoothDevice,int,java.lang.String)>(r0, 8, "cache_key.bluetooth.get_bond_state");

        r0.<android.bluetooth.BluetoothDevice: android.app.PropertyInvalidatedCache mBluetoothBondCache> = $r3;

        staticinvoke <android.bluetooth.BluetoothDevice: android.bluetooth.IBluetooth getService()>();

        $z0 = staticinvoke <android.bluetooth.BluetoothAdapter: boolean checkBluetoothAddress(java.lang.String)>(r1);

        if $z0 == 0 goto label1;

        r0.<android.bluetooth.BluetoothDevice: java.lang.String mAddress> = r1;

        return;

     label1:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a valid Bluetooth address");

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r8;
    }

    static android.bluetooth.IBluetooth access$000()
    {
        android.bluetooth.IBluetooth $r0;

        $r0 = <android.bluetooth.BluetoothDevice: android.bluetooth.IBluetooth sService>;

        return $r0;
    }

    static android.bluetooth.IBluetooth access$002(android.bluetooth.IBluetooth)
    {
        android.bluetooth.IBluetooth r0;

        r0 := @parameter0: android.bluetooth.IBluetooth;

        <android.bluetooth.BluetoothDevice: android.bluetooth.IBluetooth sService> = r0;

        return r0;
    }

    public static byte[] convertPinToBytes(java.lang.String)
    {
        int $i0, $i1;
        java.lang.Throwable $r0;
        java.lang.String r1;
        byte[] r2;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        return null;

     label1:
        r2 = virtualinvoke r1.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

     label2:
        $i0 = lengthof r2;

        if $i0 <= 0 goto label4;

        $i1 = lengthof r2;

        if $i1 <= 16 goto label3;

        goto label4;

     label3:
        return r2;

     label4:
        return null;

     label5:
        $r0 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothDevice", "UTF-8 not supported?!?");

        return null;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label5;
    }

    static android.bluetooth.IBluetooth getService()
    {
        android.bluetooth.IBluetooth $r1, $r2, $r5;
        android.bluetooth.BluetoothAdapter $r3;
        android.bluetooth.IBluetoothManagerCallback $r4;
        java.lang.Throwable $r6;

        entermonitor class "Landroid/bluetooth/BluetoothDevice;";

     label1:
        $r1 = <android.bluetooth.BluetoothDevice: android.bluetooth.IBluetooth sService>;

        if $r1 != null goto label2;

        $r3 = staticinvoke <android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothAdapter getDefaultAdapter()>();

        $r4 = <android.bluetooth.BluetoothDevice: android.bluetooth.IBluetoothManagerCallback sStateChangeCallback>;

        $r5 = virtualinvoke $r3.<android.bluetooth.BluetoothAdapter: android.bluetooth.IBluetooth getBluetoothService(android.bluetooth.IBluetoothManagerCallback)>($r4);

        <android.bluetooth.BluetoothDevice: android.bluetooth.IBluetooth sService> = $r5;

     label2:
        exitmonitor class "Landroid/bluetooth/BluetoothDevice;";

     label3:
        $r2 = <android.bluetooth.BluetoothDevice: android.bluetooth.IBluetooth sService>;

        return $r2;

     label4:
        $r6 := @caughtexception;

     label5:
        exitmonitor class "Landroid/bluetooth/BluetoothDevice;";

     label6:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public static void invalidateBluetoothGetBondStateCache()
    {
        staticinvoke <android.app.PropertyInvalidatedCache: void invalidateCache(java.lang.String)>("cache_key.bluetooth.get_bond_state");

        return;
    }

    public boolean cancelBondProcess()
    {
        android.bluetooth.BluetoothDevice r0;
        java.lang.StringBuilder r1;
        boolean z0;
        java.lang.String $r3, $r9;
        int $i0, $i1;
        android.os.RemoteException $r10;
        android.bluetooth.IBluetooth r11;

        r0 := @this: android.bluetooth.BluetoothDevice;

        r11 = <android.bluetooth.BluetoothDevice: android.bluetooth.IBluetooth sService>;

        if r11 != null goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothDevice", "BT not enabled. Cannot cancel Remote Device bond");

        return 0;

     label1:
        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cancelBondProcess() for device ");

        $r3 = virtualinvoke r0.<android.bluetooth.BluetoothDevice: java.lang.String getAddress()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" called by pid: ");

        $i0 = staticinvoke <android.os.Process: int myPid()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" tid: ");

        $i1 = staticinvoke <android.os.Process: int myTid()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r9 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("BluetoothDevice", $r9);

        z0 = interfaceinvoke r11.<android.bluetooth.IBluetooth: boolean cancelBondProcess(android.bluetooth.BluetoothDevice)>(r0);

     label2:
        return z0;

     label3:
        $r10 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BluetoothDevice", "", $r10);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean cancelPairing()
    {
        android.bluetooth.BluetoothDevice r0;
        boolean z0;
        android.os.RemoteException $r1;
        android.bluetooth.IBluetooth r2;

        r0 := @this: android.bluetooth.BluetoothDevice;

        r2 = <android.bluetooth.BluetoothDevice: android.bluetooth.IBluetooth sService>;

        if r2 != null goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothDevice", "BT not enabled. Cannot cancel pairing");

        return 0;

     label1:
        z0 = interfaceinvoke r2.<android.bluetooth.IBluetooth: boolean cancelBondProcess(android.bluetooth.BluetoothDevice)>(r0);

     label2:
        return z0;

     label3:
        $r1 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BluetoothDevice", "", $r1);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.bluetooth.BluetoothGatt connectGatt(android.content.Context, boolean, android.bluetooth.BluetoothGattCallback)
    {
        android.bluetooth.BluetoothDevice r0;
        android.content.Context r1;
        boolean z0;
        android.bluetooth.BluetoothGattCallback r2;
        android.bluetooth.BluetoothGatt $r3;

        r0 := @this: android.bluetooth.BluetoothDevice;

        r1 := @parameter0: android.content.Context;

        z0 := @parameter1: boolean;

        r2 := @parameter2: android.bluetooth.BluetoothGattCallback;

        $r3 = virtualinvoke r0.<android.bluetooth.BluetoothDevice: android.bluetooth.BluetoothGatt connectGatt(android.content.Context,boolean,android.bluetooth.BluetoothGattCallback,int)>(r1, z0, r2, 0);

        return $r3;
    }

    public android.bluetooth.BluetoothGatt connectGatt(android.content.Context, boolean, android.bluetooth.BluetoothGattCallback, int)
    {
        android.bluetooth.BluetoothDevice r0;
        android.content.Context r1;
        boolean z0;
        android.bluetooth.BluetoothGattCallback r2;
        int i0;
        android.bluetooth.BluetoothGatt $r3;

        r0 := @this: android.bluetooth.BluetoothDevice;

        r1 := @parameter0: android.content.Context;

        z0 := @parameter1: boolean;

        r2 := @parameter2: android.bluetooth.BluetoothGattCallback;

        i0 := @parameter3: int;

        $r3 = virtualinvoke r0.<android.bluetooth.BluetoothDevice: android.bluetooth.BluetoothGatt connectGatt(android.content.Context,boolean,android.bluetooth.BluetoothGattCallback,int,int)>(r1, z0, r2, i0, 1);

        return $r3;
    }

    public android.bluetooth.BluetoothGatt connectGatt(android.content.Context, boolean, android.bluetooth.BluetoothGattCallback, int, int)
    {
        android.bluetooth.BluetoothDevice r0;
        android.content.Context r1;
        boolean z0;
        android.bluetooth.BluetoothGattCallback r2;
        int i0, i1;
        android.bluetooth.BluetoothGatt $r3;

        r0 := @this: android.bluetooth.BluetoothDevice;

        r1 := @parameter0: android.content.Context;

        z0 := @parameter1: boolean;

        r2 := @parameter2: android.bluetooth.BluetoothGattCallback;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        $r3 = virtualinvoke r0.<android.bluetooth.BluetoothDevice: android.bluetooth.BluetoothGatt connectGatt(android.content.Context,boolean,android.bluetooth.BluetoothGattCallback,int,int,android.os.Handler)>(r1, z0, r2, i0, i1, null);

        return $r3;
    }

    public android.bluetooth.BluetoothGatt connectGatt(android.content.Context, boolean, android.bluetooth.BluetoothGattCallback, int, int, android.os.Handler)
    {
        android.bluetooth.BluetoothDevice r0;
        android.content.Context r1;
        boolean z0;
        android.bluetooth.BluetoothGattCallback r2;
        int i0, i1;
        android.os.Handler r3;
        android.bluetooth.BluetoothGatt $r4;

        r0 := @this: android.bluetooth.BluetoothDevice;

        r1 := @parameter0: android.content.Context;

        z0 := @parameter1: boolean;

        r2 := @parameter2: android.bluetooth.BluetoothGattCallback;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        r3 := @parameter5: android.os.Handler;

        $r4 = virtualinvoke r0.<android.bluetooth.BluetoothDevice: android.bluetooth.BluetoothGatt connectGatt(android.content.Context,boolean,android.bluetooth.BluetoothGattCallback,int,boolean,int,android.os.Handler)>(r1, z0, r2, i0, 0, i1, r3);

        return $r4;
    }

    public android.bluetooth.BluetoothGatt connectGatt(android.content.Context, boolean, android.bluetooth.BluetoothGattCallback, int, boolean, int, android.os.Handler)
    {
        android.bluetooth.BluetoothDevice r0;
        boolean z0, z1;
        android.bluetooth.BluetoothGattCallback r1;
        int i0, i1;
        android.os.Handler r2;
        android.bluetooth.BluetoothGatt r3;
        java.lang.NullPointerException $r4;
        android.bluetooth.BluetoothAdapter $r5;
        java.lang.Boolean $r6;
        android.os.RemoteException $r7, $r8, r12;
        android.content.Context r9;
        android.bluetooth.IBluetoothManager r10;
        android.bluetooth.IBluetoothGatt r11;

        r0 := @this: android.bluetooth.BluetoothDevice;

        r9 := @parameter0: android.content.Context;

        z0 := @parameter1: boolean;

        r1 := @parameter2: android.bluetooth.BluetoothGattCallback;

        i0 := @parameter3: int;

        z1 := @parameter4: boolean;

        i1 := @parameter5: int;

        r2 := @parameter6: android.os.Handler;

        if r1 == null goto label9;

        $r5 = staticinvoke <android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothAdapter getDefaultAdapter()>();

        r10 = virtualinvoke $r5.<android.bluetooth.BluetoothAdapter: android.bluetooth.IBluetoothManager getBluetoothManager()>();

     label1:
        r11 = interfaceinvoke r10.<android.bluetooth.IBluetoothManager: android.bluetooth.IBluetoothGatt getBluetoothGatt()>();

     label2:
        if r11 != null goto label3;

        return null;

     label3:
        r3 = new android.bluetooth.BluetoothGatt;

        specialinvoke r3.<android.bluetooth.BluetoothGatt: void <init>(android.bluetooth.IBluetoothGatt,android.bluetooth.BluetoothDevice,int,boolean,int)>(r11, r0, i0, z1, i1);

     label4:
        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        virtualinvoke r3.<android.bluetooth.BluetoothGatt: boolean connect(java.lang.Boolean,android.bluetooth.BluetoothGattCallback,android.os.Handler)>($r6, r1, r2);

     label5:
        return r3;

     label6:
        $r8 := @caughtexception;

        r12 = $r8;

        goto label8;

     label7:
        $r7 := @caughtexception;

        r12 = $r7;

     label8:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BluetoothDevice", "", r12);

        return null;

     label9:
        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("callback is null");

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label7;
        catch android.os.RemoteException from label3 to label4 with label7;
        catch android.os.RemoteException from label4 to label5 with label6;
    }

    public boolean createBond()
    {
        android.bluetooth.BluetoothDevice r0;
        boolean $z0;

        r0 := @this: android.bluetooth.BluetoothDevice;

        $z0 = virtualinvoke r0.<android.bluetooth.BluetoothDevice: boolean createBond(int)>(0);

        return $z0;
    }

    public boolean createBond(int)
    {
        android.bluetooth.BluetoothDevice r0;
        int i0;
        boolean $z0;

        r0 := @this: android.bluetooth.BluetoothDevice;

        i0 := @parameter0: int;

        $z0 = virtualinvoke r0.<android.bluetooth.BluetoothDevice: boolean createBondOutOfBand(int,android.bluetooth.OobData)>(i0, null);

        return $z0;
    }

    public boolean createBondOutOfBand(int, android.bluetooth.OobData)
    {
        android.bluetooth.BluetoothDevice r0;
        int i0;
        android.bluetooth.IBluetooth r1;
        boolean z0;
        android.os.RemoteException $r2;
        android.bluetooth.OobData r3;

        r0 := @this: android.bluetooth.BluetoothDevice;

        i0 := @parameter0: int;

        r3 := @parameter1: android.bluetooth.OobData;

        r1 = <android.bluetooth.BluetoothDevice: android.bluetooth.IBluetooth sService>;

        if r1 != null goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothDevice", "BT not enabled, createBondOutOfBand failed");

        return 0;

     label1:
        z0 = interfaceinvoke r1.<android.bluetooth.IBluetooth: boolean createBond(android.bluetooth.BluetoothDevice,int,android.bluetooth.OobData)>(r0, i0, r3);

     label2:
        return z0;

     label3:
        $r2 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BluetoothDevice", "", $r2);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.bluetooth.BluetoothSocket createInsecureL2capChannel(int) throws java.io.IOException
    {
        android.bluetooth.BluetoothDevice r0;
        int i0;
        boolean $z0;
        java.io.IOException $r1;
        android.bluetooth.BluetoothSocket $r2;

        r0 := @this: android.bluetooth.BluetoothDevice;

        i0 := @parameter0: int;

        $z0 = virtualinvoke r0.<android.bluetooth.BluetoothDevice: boolean isBluetoothEnabled()>();

        if $z0 == 0 goto label1;

        $r2 = new android.bluetooth.BluetoothSocket;

        specialinvoke $r2.<android.bluetooth.BluetoothSocket: void <init>(int,int,boolean,boolean,android.bluetooth.BluetoothDevice,int,android.os.ParcelUuid)>(4, -1, 0, 0, r0, i0, null);

        return $r2;

     label1:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothDevice", "createInsecureL2capChannel: Bluetooth is not enabled");

        $r1 = new java.io.IOException;

        specialinvoke $r1.<java.io.IOException: void <init>()>();

        throw $r1;
    }

    public android.bluetooth.BluetoothSocket createInsecureL2capSocket(int) throws java.io.IOException
    {
        android.bluetooth.BluetoothDevice r0;
        int i0;
        android.bluetooth.BluetoothSocket $r1;

        r0 := @this: android.bluetooth.BluetoothDevice;

        i0 := @parameter0: int;

        $r1 = new android.bluetooth.BluetoothSocket;

        specialinvoke $r1.<android.bluetooth.BluetoothSocket: void <init>(int,int,boolean,boolean,android.bluetooth.BluetoothDevice,int,android.os.ParcelUuid)>(3, -1, 0, 0, r0, i0, null);

        return $r1;
    }

    public android.bluetooth.BluetoothSocket createInsecureRfcommSocket(int) throws java.io.IOException
    {
        android.bluetooth.BluetoothDevice r0;
        int i0;
        boolean $z0;
        java.io.IOException $r1;
        android.bluetooth.BluetoothSocket $r2;

        r0 := @this: android.bluetooth.BluetoothDevice;

        i0 := @parameter0: int;

        $z0 = virtualinvoke r0.<android.bluetooth.BluetoothDevice: boolean isBluetoothEnabled()>();

        if $z0 == 0 goto label1;

        $r2 = new android.bluetooth.BluetoothSocket;

        specialinvoke $r2.<android.bluetooth.BluetoothSocket: void <init>(int,int,boolean,boolean,android.bluetooth.BluetoothDevice,int,android.os.ParcelUuid)>(1, -1, 0, 0, r0, i0, null);

        return $r2;

     label1:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothDevice", "Bluetooth is not enabled");

        $r1 = new java.io.IOException;

        specialinvoke $r1.<java.io.IOException: void <init>()>();

        throw $r1;
    }

    public android.bluetooth.BluetoothSocket createInsecureRfcommSocketToServiceRecord(java.util.UUID) throws java.io.IOException
    {
        android.bluetooth.BluetoothDevice r0;
        java.util.UUID r1;
        boolean $z0;
        java.io.IOException $r2;
        android.bluetooth.BluetoothSocket $r3;
        android.os.ParcelUuid $r4;

        r0 := @this: android.bluetooth.BluetoothDevice;

        r1 := @parameter0: java.util.UUID;

        $z0 = virtualinvoke r0.<android.bluetooth.BluetoothDevice: boolean isBluetoothEnabled()>();

        if $z0 == 0 goto label1;

        $r3 = new android.bluetooth.BluetoothSocket;

        $r4 = new android.os.ParcelUuid;

        specialinvoke $r4.<android.os.ParcelUuid: void <init>(java.util.UUID)>(r1);

        specialinvoke $r3.<android.bluetooth.BluetoothSocket: void <init>(int,int,boolean,boolean,android.bluetooth.BluetoothDevice,int,android.os.ParcelUuid)>(1, -1, 0, 0, r0, -1, $r4);

        return $r3;

     label1:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothDevice", "Bluetooth is not enabled");

        $r2 = new java.io.IOException;

        specialinvoke $r2.<java.io.IOException: void <init>()>();

        throw $r2;
    }

    public android.bluetooth.BluetoothSocket createL2capChannel(int) throws java.io.IOException
    {
        android.bluetooth.BluetoothDevice r0;
        int i0;
        boolean $z0;
        java.io.IOException $r1;
        android.bluetooth.BluetoothSocket $r2;

        r0 := @this: android.bluetooth.BluetoothDevice;

        i0 := @parameter0: int;

        $z0 = virtualinvoke r0.<android.bluetooth.BluetoothDevice: boolean isBluetoothEnabled()>();

        if $z0 == 0 goto label1;

        $r2 = new android.bluetooth.BluetoothSocket;

        specialinvoke $r2.<android.bluetooth.BluetoothSocket: void <init>(int,int,boolean,boolean,android.bluetooth.BluetoothDevice,int,android.os.ParcelUuid)>(4, -1, 1, 1, r0, i0, null);

        return $r2;

     label1:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothDevice", "createL2capChannel: Bluetooth is not enabled");

        $r1 = new java.io.IOException;

        specialinvoke $r1.<java.io.IOException: void <init>()>();

        throw $r1;
    }

    public android.bluetooth.BluetoothSocket createL2capSocket(int) throws java.io.IOException
    {
        android.bluetooth.BluetoothDevice r0;
        int i0;
        android.bluetooth.BluetoothSocket $r1;

        r0 := @this: android.bluetooth.BluetoothDevice;

        i0 := @parameter0: int;

        $r1 = new android.bluetooth.BluetoothSocket;

        specialinvoke $r1.<android.bluetooth.BluetoothSocket: void <init>(int,int,boolean,boolean,android.bluetooth.BluetoothDevice,int,android.os.ParcelUuid)>(3, -1, 1, 1, r0, i0, null);

        return $r1;
    }

    public android.bluetooth.BluetoothSocket createRfcommSocket(int) throws java.io.IOException
    {
        android.bluetooth.BluetoothDevice r0;
        int i0;
        boolean $z0;
        java.io.IOException $r1;
        android.bluetooth.BluetoothSocket $r2;

        r0 := @this: android.bluetooth.BluetoothDevice;

        i0 := @parameter0: int;

        $z0 = virtualinvoke r0.<android.bluetooth.BluetoothDevice: boolean isBluetoothEnabled()>();

        if $z0 == 0 goto label1;

        $r2 = new android.bluetooth.BluetoothSocket;

        specialinvoke $r2.<android.bluetooth.BluetoothSocket: void <init>(int,int,boolean,boolean,android.bluetooth.BluetoothDevice,int,android.os.ParcelUuid)>(1, -1, 1, 1, r0, i0, null);

        return $r2;

     label1:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothDevice", "Bluetooth is not enabled");

        $r1 = new java.io.IOException;

        specialinvoke $r1.<java.io.IOException: void <init>()>();

        throw $r1;
    }

    public android.bluetooth.BluetoothSocket createRfcommSocketToServiceRecord(java.util.UUID) throws java.io.IOException
    {
        android.bluetooth.BluetoothDevice r0;
        java.util.UUID r1;
        boolean $z0;
        java.io.IOException $r2;
        android.bluetooth.BluetoothSocket $r3;
        android.os.ParcelUuid $r4;

        r0 := @this: android.bluetooth.BluetoothDevice;

        r1 := @parameter0: java.util.UUID;

        $z0 = virtualinvoke r0.<android.bluetooth.BluetoothDevice: boolean isBluetoothEnabled()>();

        if $z0 == 0 goto label1;

        $r3 = new android.bluetooth.BluetoothSocket;

        $r4 = new android.os.ParcelUuid;

        specialinvoke $r4.<android.os.ParcelUuid: void <init>(java.util.UUID)>(r1);

        specialinvoke $r3.<android.bluetooth.BluetoothSocket: void <init>(int,int,boolean,boolean,android.bluetooth.BluetoothDevice,int,android.os.ParcelUuid)>(1, -1, 1, 1, r0, -1, $r4);

        return $r3;

     label1:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothDevice", "Bluetooth is not enabled");

        $r2 = new java.io.IOException;

        specialinvoke $r2.<java.io.IOException: void <init>()>();

        throw $r2;
    }

    public android.bluetooth.BluetoothSocket createScoSocket() throws java.io.IOException
    {
        android.bluetooth.BluetoothDevice r0;
        boolean $z0;
        java.io.IOException $r1;
        android.bluetooth.BluetoothSocket $r2;

        r0 := @this: android.bluetooth.BluetoothDevice;

        $z0 = virtualinvoke r0.<android.bluetooth.BluetoothDevice: boolean isBluetoothEnabled()>();

        if $z0 == 0 goto label1;

        $r2 = new android.bluetooth.BluetoothSocket;

        specialinvoke $r2.<android.bluetooth.BluetoothSocket: void <init>(int,int,boolean,boolean,android.bluetooth.BluetoothDevice,int,android.os.ParcelUuid)>(2, -1, 1, 1, r0, -1, null);

        return $r2;

     label1:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothDevice", "Bluetooth is not enabled");

        $r1 = new java.io.IOException;

        specialinvoke $r1.<java.io.IOException: void <init>()>();

        throw $r1;
    }

    public int describeContents()
    {
        android.bluetooth.BluetoothDevice r0;

        r0 := @this: android.bluetooth.BluetoothDevice;

        return 0;
    }

    public void disableBluetoothGetBondStateCache()
    {
        android.bluetooth.BluetoothDevice r0;
        android.app.PropertyInvalidatedCache $r1;

        r0 := @this: android.bluetooth.BluetoothDevice;

        $r1 = r0.<android.bluetooth.BluetoothDevice: android.app.PropertyInvalidatedCache mBluetoothBondCache>;

        virtualinvoke $r1.<android.app.PropertyInvalidatedCache: void disableLocal()>();

        return;
    }

    public boolean equals(java.lang.Object)
    {
        android.bluetooth.BluetoothDevice r0, $r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        java.lang.String $r3, $r4;

        r0 := @this: android.bluetooth.BluetoothDevice;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof android.bluetooth.BluetoothDevice;

        if $z0 == 0 goto label1;

        $r3 = r0.<android.bluetooth.BluetoothDevice: java.lang.String mAddress>;

        $r2 = (android.bluetooth.BluetoothDevice) r1;

        $r4 = virtualinvoke $r2.<android.bluetooth.BluetoothDevice: java.lang.String getAddress()>();

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        return $z1;

     label1:
        return 0;
    }

    public boolean fetchUuidsWithSdp()
    {
        android.bluetooth.BluetoothDevice r0;
        boolean z0, $z1;
        android.os.RemoteException $r1;
        android.bluetooth.IBluetooth r2;

        r0 := @this: android.bluetooth.BluetoothDevice;

        r2 = <android.bluetooth.BluetoothDevice: android.bluetooth.IBluetooth sService>;

        if r2 == null goto label4;

        $z1 = virtualinvoke r0.<android.bluetooth.BluetoothDevice: boolean isBluetoothEnabled()>();

        if $z1 != 0 goto label1;

        goto label4;

     label1:
        z0 = interfaceinvoke r2.<android.bluetooth.IBluetooth: boolean fetchRemoteUuids(android.bluetooth.BluetoothDevice)>(r0);

     label2:
        return z0;

     label3:
        $r1 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BluetoothDevice", "", $r1);

        return 0;

     label4:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothDevice", "BT not enabled. Cannot fetchUuidsWithSdp");

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.lang.String getAddress()
    {
        android.bluetooth.BluetoothDevice r0;
        java.lang.String $r1;

        r0 := @this: android.bluetooth.BluetoothDevice;

        $r1 = r0.<android.bluetooth.BluetoothDevice: java.lang.String mAddress>;

        return $r1;
    }

    public java.lang.String getAlias()
    {
        android.bluetooth.BluetoothDevice r0;
        android.os.RemoteException $r1;
        android.bluetooth.IBluetooth r2;
        java.lang.String r3, r4;

        r0 := @this: android.bluetooth.BluetoothDevice;

        r2 = <android.bluetooth.BluetoothDevice: android.bluetooth.IBluetooth sService>;

        if r2 != null goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothDevice", "BT not enabled. Cannot get Remote Device Alias");

        return null;

     label1:
        r3 = interfaceinvoke r2.<android.bluetooth.IBluetooth: java.lang.String getRemoteAlias(android.bluetooth.BluetoothDevice)>(r0);

     label2:
        if r3 != null goto label5;

     label3:
        r4 = virtualinvoke r0.<android.bluetooth.BluetoothDevice: java.lang.String getName()>();

     label4:
        return r4;

     label5:
        return r3;

     label6:
        $r1 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BluetoothDevice", "", $r1);

        return null;

        catch android.os.RemoteException from label1 to label2 with label6;
        catch android.os.RemoteException from label3 to label4 with label6;
    }

    public int getBatteryLevel()
    {
        android.bluetooth.BluetoothDevice r0;
        int i0;
        android.os.RemoteException $r1;
        android.bluetooth.IBluetooth r2;

        r0 := @this: android.bluetooth.BluetoothDevice;

        r2 = <android.bluetooth.BluetoothDevice: android.bluetooth.IBluetooth sService>;

        if r2 != null goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothDevice", "Bluetooth disabled. Cannot get remote device battery level");

        return -100;

     label1:
        i0 = interfaceinvoke r2.<android.bluetooth.IBluetooth: int getBatteryLevel(android.bluetooth.BluetoothDevice)>(r0);

     label2:
        return i0;

     label3:
        $r1 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BluetoothDevice", "", $r1);

        return -1;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.bluetooth.BluetoothClass getBluetoothClass()
    {
        android.bluetooth.BluetoothDevice r0;
        int i0;
        android.bluetooth.BluetoothClass $r1;
        android.os.RemoteException $r2;
        android.bluetooth.IBluetooth r3;

        r0 := @this: android.bluetooth.BluetoothDevice;

        r3 = <android.bluetooth.BluetoothDevice: android.bluetooth.IBluetooth sService>;

        if r3 != null goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothDevice", "BT not enabled. Cannot get Bluetooth Class");

        return null;

     label1:
        i0 = interfaceinvoke r3.<android.bluetooth.IBluetooth: int getRemoteClass(android.bluetooth.BluetoothDevice)>(r0);

     label2:
        if i0 != -16777216 goto label3;

        return null;

     label3:
        $r1 = new android.bluetooth.BluetoothClass;

        specialinvoke $r1.<android.bluetooth.BluetoothClass: void <init>(int)>(i0);

     label4:
        return $r1;

     label5:
        $r2 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BluetoothDevice", "", $r2);

        return null;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public int getBondState()
    {
        android.bluetooth.BluetoothDevice r0;
        int i0;
        android.bluetooth.IBluetooth $r2;
        android.app.PropertyInvalidatedCache $r3;
        java.lang.Object $r4;
        java.lang.Integer $r5;
        java.lang.RuntimeException $r6;
        java.lang.Throwable $r7;
        boolean $z0;

        r0 := @this: android.bluetooth.BluetoothDevice;

        $r2 = <android.bluetooth.BluetoothDevice: android.bluetooth.IBluetooth sService>;

        if $r2 != null goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothDevice", "BT not enabled. Cannot get bond state");

        return 10;

     label1:
        $r3 = r0.<android.bluetooth.BluetoothDevice: android.app.PropertyInvalidatedCache mBluetoothBondCache>;

        $r4 = virtualinvoke $r3.<android.app.PropertyInvalidatedCache: java.lang.Object query(java.lang.Object)>(r0);

        $r5 = (java.lang.Integer) $r4;

        i0 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

     label2:
        return i0;

     label3:
        $r6 := @caughtexception;

        $r7 = virtualinvoke $r6.<java.lang.RuntimeException: java.lang.Throwable getCause()>();

        $z0 = $r7 instanceof android.os.RemoteException;

        if $z0 == 0 goto label4;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BluetoothDevice", "", $r6);

        return 10;

     label4:
        throw $r6;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public int getMessageAccessPermission()
    {
        android.bluetooth.BluetoothDevice r0;
        int i0;
        android.os.RemoteException $r1;
        android.bluetooth.IBluetooth r2;

        r0 := @this: android.bluetooth.BluetoothDevice;

        r2 = <android.bluetooth.BluetoothDevice: android.bluetooth.IBluetooth sService>;

        if r2 != null goto label1;

        return 0;

     label1:
        i0 = interfaceinvoke r2.<android.bluetooth.IBluetooth: int getMessageAccessPermission(android.bluetooth.BluetoothDevice)>(r0);

     label2:
        return i0;

     label3:
        $r1 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BluetoothDevice", "", $r1);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public byte[] getMetadata(int)
    {
        android.bluetooth.BluetoothDevice r0;
        int i0;
        android.os.RemoteException $r1;
        android.bluetooth.IBluetooth r2;
        byte[] r3;

        r0 := @this: android.bluetooth.BluetoothDevice;

        i0 := @parameter0: int;

        r2 = <android.bluetooth.BluetoothDevice: android.bluetooth.IBluetooth sService>;

        if r2 != null goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothDevice", "Bluetooth is not enabled. Cannot get metadata");

        return null;

     label1:
        r3 = interfaceinvoke r2.<android.bluetooth.IBluetooth: byte[] getMetadata(android.bluetooth.BluetoothDevice,int)>(r0, i0);

     label2:
        return r3;

     label3:
        $r1 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BluetoothDevice", "getMetadata fail", $r1);

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.lang.String getName()
    {
        android.bluetooth.BluetoothDevice r0;
        android.os.RemoteException $r1;
        android.bluetooth.IBluetooth r2;
        java.lang.String r3, r4;

        r0 := @this: android.bluetooth.BluetoothDevice;

        r2 = <android.bluetooth.BluetoothDevice: android.bluetooth.IBluetooth sService>;

        if r2 != null goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothDevice", "BT not enabled. Cannot get Remote Device name");

        return null;

     label1:
        r3 = interfaceinvoke r2.<android.bluetooth.IBluetooth: java.lang.String getRemoteName(android.bluetooth.BluetoothDevice)>(r0);

     label2:
        if r3 == null goto label5;

     label3:
        r4 = virtualinvoke r3.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("[\\t\\n\\r]+", " ");

     label4:
        return r4;

     label5:
        return null;

     label6:
        $r1 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BluetoothDevice", "", $r1);

        return null;

        catch android.os.RemoteException from label1 to label2 with label6;
        catch android.os.RemoteException from label3 to label4 with label6;
    }

    public int getPhonebookAccessPermission()
    {
        android.bluetooth.BluetoothDevice r0;
        int i0;
        android.os.RemoteException $r1;
        android.bluetooth.IBluetooth r2;

        r0 := @this: android.bluetooth.BluetoothDevice;

        r2 = <android.bluetooth.BluetoothDevice: android.bluetooth.IBluetooth sService>;

        if r2 != null goto label1;

        return 0;

     label1:
        i0 = interfaceinvoke r2.<android.bluetooth.IBluetooth: int getPhonebookAccessPermission(android.bluetooth.BluetoothDevice)>(r0);

     label2:
        return i0;

     label3:
        $r1 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BluetoothDevice", "", $r1);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int getSimAccessPermission()
    {
        android.bluetooth.BluetoothDevice r0;
        int i0;
        android.os.RemoteException $r1;
        android.bluetooth.IBluetooth r2;

        r0 := @this: android.bluetooth.BluetoothDevice;

        r2 = <android.bluetooth.BluetoothDevice: android.bluetooth.IBluetooth sService>;

        if r2 != null goto label1;

        return 0;

     label1:
        i0 = interfaceinvoke r2.<android.bluetooth.IBluetooth: int getSimAccessPermission(android.bluetooth.BluetoothDevice)>(r0);

     label2:
        return i0;

     label3:
        $r1 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BluetoothDevice", "", $r1);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int getType()
    {
        android.bluetooth.BluetoothDevice r0;
        int i0;
        android.os.RemoteException $r1;
        android.bluetooth.IBluetooth r2;

        r0 := @this: android.bluetooth.BluetoothDevice;

        r2 = <android.bluetooth.BluetoothDevice: android.bluetooth.IBluetooth sService>;

        if r2 != null goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothDevice", "BT not enabled. Cannot get Remote Device type");

        return 0;

     label1:
        i0 = interfaceinvoke r2.<android.bluetooth.IBluetooth: int getRemoteType(android.bluetooth.BluetoothDevice)>(r0);

     label2:
        return i0;

     label3:
        $r1 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BluetoothDevice", "", $r1);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.os.ParcelUuid[] getUuids()
    {
        android.bluetooth.BluetoothDevice r0;
        boolean $z0;
        android.os.RemoteException $r1;
        android.bluetooth.IBluetooth r2;
        android.os.ParcelUuid[] r3;

        r0 := @this: android.bluetooth.BluetoothDevice;

        r2 = <android.bluetooth.BluetoothDevice: android.bluetooth.IBluetooth sService>;

        if r2 == null goto label4;

        $z0 = virtualinvoke r0.<android.bluetooth.BluetoothDevice: boolean isBluetoothEnabled()>();

        if $z0 != 0 goto label1;

        goto label4;

     label1:
        r3 = interfaceinvoke r2.<android.bluetooth.IBluetooth: android.os.ParcelUuid[] getRemoteUuids(android.bluetooth.BluetoothDevice)>(r0);

     label2:
        return r3;

     label3:
        $r1 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BluetoothDevice", "", $r1);

        return null;

     label4:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothDevice", "BT not enabled. Cannot get remote device Uuids");

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int hashCode()
    {
        android.bluetooth.BluetoothDevice r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: android.bluetooth.BluetoothDevice;

        $r1 = r0.<android.bluetooth.BluetoothDevice: java.lang.String mAddress>;

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        return $i0;
    }

    boolean isBluetoothEnabled()
    {
        android.bluetooth.BluetoothDevice r0;
        android.bluetooth.BluetoothAdapter r1;
        boolean $z1, z2;

        r0 := @this: android.bluetooth.BluetoothDevice;

        r1 = staticinvoke <android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothAdapter getDefaultAdapter()>();

        z2 = 0;

        if r1 == null goto label1;

        z2 = 0;

        $z1 = virtualinvoke r1.<android.bluetooth.BluetoothAdapter: boolean isEnabled()>();

        if $z1 == 0 goto label1;

        z2 = 1;

     label1:
        return z2;
    }

    public boolean isBondingInitiatedLocally()
    {
        android.bluetooth.BluetoothDevice r0;
        boolean z0;
        android.os.RemoteException $r1;
        android.bluetooth.IBluetooth r2;

        r0 := @this: android.bluetooth.BluetoothDevice;

        r2 = <android.bluetooth.BluetoothDevice: android.bluetooth.IBluetooth sService>;

        if r2 != null goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothDevice", "BT not enabled, isBondingInitiatedLocally failed");

        return 0;

     label1:
        z0 = interfaceinvoke r2.<android.bluetooth.IBluetooth: boolean isBondingInitiatedLocally(android.bluetooth.BluetoothDevice)>(r0);

     label2:
        return z0;

     label3:
        $r1 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BluetoothDevice", "", $r1);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isConnected()
    {
        android.bluetooth.BluetoothDevice r0;
        int i0;
        android.os.RemoteException $r1;
        android.bluetooth.IBluetooth r2;
        boolean z0;

        r0 := @this: android.bluetooth.BluetoothDevice;

        r2 = <android.bluetooth.BluetoothDevice: android.bluetooth.IBluetooth sService>;

        z0 = 0;

        if r2 != null goto label1;

        return 0;

     label1:
        i0 = interfaceinvoke r2.<android.bluetooth.IBluetooth: int getConnectionState(android.bluetooth.BluetoothDevice)>(r0);

     label2:
        if i0 == 0 goto label3;

        z0 = 1;

     label3:
        return z0;

     label4:
        $r1 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BluetoothDevice", "", $r1);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public boolean isEncrypted()
    {
        android.bluetooth.BluetoothDevice r0;
        int i0;
        android.os.RemoteException $r1;
        android.bluetooth.IBluetooth r2;
        boolean z0;

        r0 := @this: android.bluetooth.BluetoothDevice;

        r2 = <android.bluetooth.BluetoothDevice: android.bluetooth.IBluetooth sService>;

        z0 = 0;

        if r2 != null goto label1;

        return 0;

     label1:
        i0 = interfaceinvoke r2.<android.bluetooth.IBluetooth: int getConnectionState(android.bluetooth.BluetoothDevice)>(r0);

     label2:
        if i0 <= 1 goto label3;

        z0 = 1;

     label3:
        return z0;

     label4:
        $r1 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BluetoothDevice", "", $r1);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public boolean isInSilenceMode()
    {
        android.bluetooth.BluetoothDevice r0;
        boolean z0;
        java.lang.IllegalStateException $r1;
        android.os.RemoteException $r2;
        android.bluetooth.IBluetooth r3;

        r0 := @this: android.bluetooth.BluetoothDevice;

        r3 = <android.bluetooth.BluetoothDevice: android.bluetooth.IBluetooth sService>;

        if r3 == null goto label4;

     label1:
        z0 = interfaceinvoke r3.<android.bluetooth.IBluetooth: boolean getSilenceMode(android.bluetooth.BluetoothDevice)>(r0);

     label2:
        return z0;

     label3:
        $r2 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BluetoothDevice", "isInSilenceMode fail", $r2);

        return 0;

     label4:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Bluetooth is not turned ON");

        throw $r1;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean removeBond()
    {
        android.bluetooth.BluetoothDevice r0;
        android.bluetooth.IBluetooth r1;
        boolean z0;
        java.lang.String $r3, $r9;
        int $i0, $i1;
        android.os.RemoteException $r10;
        java.lang.StringBuilder r11;

        r0 := @this: android.bluetooth.BluetoothDevice;

        r1 = <android.bluetooth.BluetoothDevice: android.bluetooth.IBluetooth sService>;

        if r1 != null goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothDevice", "BT not enabled. Cannot remove Remote Device bond");

        return 0;

     label1:
        r11 = new java.lang.StringBuilder;

        specialinvoke r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("removeBond() for device ");

        $r3 = virtualinvoke r0.<android.bluetooth.BluetoothDevice: java.lang.String getAddress()>();

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" called by pid: ");

        $i0 = staticinvoke <android.os.Process: int myPid()>();

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" tid: ");

        $i1 = staticinvoke <android.os.Process: int myTid()>();

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r9 = virtualinvoke r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("BluetoothDevice", $r9);

        z0 = interfaceinvoke r1.<android.bluetooth.IBluetooth: boolean removeBond(android.bluetooth.BluetoothDevice)>(r0);

     label2:
        return z0;

     label3:
        $r10 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BluetoothDevice", "", $r10);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean sdpSearch(android.os.ParcelUuid)
    {
        android.bluetooth.BluetoothDevice r0;
        android.bluetooth.IBluetooth r1;
        boolean z0;
        android.os.RemoteException $r2;
        android.os.ParcelUuid r3;

        r0 := @this: android.bluetooth.BluetoothDevice;

        r3 := @parameter0: android.os.ParcelUuid;

        r1 = <android.bluetooth.BluetoothDevice: android.bluetooth.IBluetooth sService>;

        if r1 != null goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothDevice", "BT not enabled. Cannot query remote device sdp records");

        return 0;

     label1:
        z0 = interfaceinvoke r1.<android.bluetooth.IBluetooth: boolean sdpSearch(android.bluetooth.BluetoothDevice,android.os.ParcelUuid)>(r0, r3);

     label2:
        return z0;

     label3:
        $r2 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BluetoothDevice", "", $r2);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean setAlias(java.lang.String)
    {
        android.bluetooth.BluetoothDevice r0;
        android.bluetooth.IBluetooth r1;
        boolean z0;
        android.os.RemoteException $r2;
        java.lang.String r3;

        r0 := @this: android.bluetooth.BluetoothDevice;

        r3 := @parameter0: java.lang.String;

        r1 = <android.bluetooth.BluetoothDevice: android.bluetooth.IBluetooth sService>;

        if r1 != null goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothDevice", "BT not enabled. Cannot set Remote Device name");

        return 0;

     label1:
        z0 = interfaceinvoke r1.<android.bluetooth.IBluetooth: boolean setRemoteAlias(android.bluetooth.BluetoothDevice,java.lang.String)>(r0, r3);

     label2:
        return z0;

     label3:
        $r2 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BluetoothDevice", "", $r2);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean setDeviceOutOfBandData(byte[], byte[])
    {
        android.bluetooth.BluetoothDevice r0;
        byte[] r1, r2;

        r0 := @this: android.bluetooth.BluetoothDevice;

        r1 := @parameter0: byte[];

        r2 := @parameter1: byte[];

        return 0;
    }

    public boolean setMessageAccessPermission(int)
    {
        android.bluetooth.BluetoothDevice r0;
        int i0;
        boolean z0;
        java.lang.StringBuilder $r1;
        java.lang.IllegalArgumentException $r4;
        java.lang.String $r5;
        android.os.RemoteException $r6;
        android.bluetooth.IBluetooth r8;

        r0 := @this: android.bluetooth.BluetoothDevice;

        i0 := @parameter0: int;

        if i0 == 1 goto label2;

        if i0 == 2 goto label2;

        if i0 != 0 goto label1;

        goto label2;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("is not a valid AccessPermission value");

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r4;

     label2:
        r8 = <android.bluetooth.BluetoothDevice: android.bluetooth.IBluetooth sService>;

        if r8 != null goto label3;

        return 0;

     label3:
        z0 = interfaceinvoke r8.<android.bluetooth.IBluetooth: boolean setMessageAccessPermission(android.bluetooth.BluetoothDevice,int)>(r0, i0);

     label4:
        return z0;

     label5:
        $r6 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BluetoothDevice", "", $r6);

        return 0;

        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public boolean setMetadata(int, byte[])
    {
        android.bluetooth.BluetoothDevice r0;
        int i0, $i1, $i2;
        boolean z0;
        java.lang.StringBuilder $r1;
        java.lang.IllegalArgumentException $r6;
        java.lang.String $r7;
        android.os.RemoteException $r8;
        byte[] r9;
        android.bluetooth.IBluetooth r10;

        r0 := @this: android.bluetooth.BluetoothDevice;

        i0 := @parameter0: int;

        r9 := @parameter1: byte[];

        r10 = <android.bluetooth.BluetoothDevice: android.bluetooth.IBluetooth sService>;

        if r10 != null goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothDevice", "Bluetooth is not enabled. Cannot set metadata");

        return 0;

     label1:
        $i1 = lengthof r9;

        if $i1 > 2048 goto label5;

     label2:
        z0 = interfaceinvoke r10.<android.bluetooth.IBluetooth: boolean setMetadata(android.bluetooth.BluetoothDevice,int,byte[])>(r0, i0, r9);

     label3:
        return z0;

     label4:
        $r8 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BluetoothDevice", "setMetadata fail", $r8);

        return 0;

     label5:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("value length is ");

        $i2 = lengthof r9;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", should not over ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(2048);

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r6;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    public boolean setPairingConfirmation(boolean)
    {
        android.bluetooth.BluetoothDevice r0;
        android.os.RemoteException $r1;
        boolean z0, z1;
        android.bluetooth.IBluetooth r2;

        r0 := @this: android.bluetooth.BluetoothDevice;

        z0 := @parameter0: boolean;

        r2 = <android.bluetooth.BluetoothDevice: android.bluetooth.IBluetooth sService>;

        if r2 != null goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothDevice", "BT not enabled. Cannot set pairing confirmation");

        return 0;

     label1:
        z1 = interfaceinvoke r2.<android.bluetooth.IBluetooth: boolean setPairingConfirmation(android.bluetooth.BluetoothDevice,boolean)>(r0, z0);

     label2:
        return z1;

     label3:
        $r1 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BluetoothDevice", "", $r1);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean setPhonebookAccessPermission(int)
    {
        android.bluetooth.BluetoothDevice r0;
        int i0;
        boolean z0;
        android.os.RemoteException $r1;
        android.bluetooth.IBluetooth r2;

        r0 := @this: android.bluetooth.BluetoothDevice;

        i0 := @parameter0: int;

        r2 = <android.bluetooth.BluetoothDevice: android.bluetooth.IBluetooth sService>;

        if r2 != null goto label1;

        return 0;

     label1:
        z0 = interfaceinvoke r2.<android.bluetooth.IBluetooth: boolean setPhonebookAccessPermission(android.bluetooth.BluetoothDevice,int)>(r0, i0);

     label2:
        return z0;

     label3:
        $r1 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BluetoothDevice", "", $r1);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean setPin(java.lang.String)
    {
        android.bluetooth.BluetoothDevice r0;
        boolean $z0;
        java.lang.String r1;
        byte[] r2;

        r0 := @this: android.bluetooth.BluetoothDevice;

        r1 := @parameter0: java.lang.String;

        r2 = staticinvoke <android.bluetooth.BluetoothDevice: byte[] convertPinToBytes(java.lang.String)>(r1);

        if r2 != null goto label1;

        return 0;

     label1:
        $z0 = virtualinvoke r0.<android.bluetooth.BluetoothDevice: boolean setPin(byte[])>(r2);

        return $z0;
    }

    public boolean setPin(byte[])
    {
        android.bluetooth.BluetoothDevice r0;
        android.bluetooth.IBluetooth r1;
        boolean z0;
        int $i0;
        android.os.RemoteException $r2;
        byte[] r3;

        r0 := @this: android.bluetooth.BluetoothDevice;

        r3 := @parameter0: byte[];

        r1 = <android.bluetooth.BluetoothDevice: android.bluetooth.IBluetooth sService>;

        if r1 != null goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothDevice", "BT not enabled. Cannot set Remote Device pin");

        return 0;

     label1:
        $i0 = lengthof r3;

        z0 = interfaceinvoke r1.<android.bluetooth.IBluetooth: boolean setPin(android.bluetooth.BluetoothDevice,boolean,int,byte[])>(r0, 1, $i0, r3);

     label2:
        return z0;

     label3:
        $r2 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BluetoothDevice", "", $r2);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean setSilenceMode(boolean)
    {
        android.bluetooth.BluetoothDevice r0;
        java.lang.IllegalStateException $r1;
        android.os.RemoteException $r2;
        boolean z0, z1;
        android.bluetooth.IBluetooth r3;

        r0 := @this: android.bluetooth.BluetoothDevice;

        z0 := @parameter0: boolean;

        r3 = <android.bluetooth.BluetoothDevice: android.bluetooth.IBluetooth sService>;

        if r3 == null goto label4;

     label1:
        z1 = interfaceinvoke r3.<android.bluetooth.IBluetooth: boolean setSilenceMode(android.bluetooth.BluetoothDevice,boolean)>(r0, z0);

     label2:
        return z1;

     label3:
        $r2 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BluetoothDevice", "setSilenceMode fail", $r2);

        return 0;

     label4:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Bluetooth is not turned ON");

        throw $r1;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean setSimAccessPermission(int)
    {
        android.bluetooth.BluetoothDevice r0;
        int i0;
        boolean z0;
        android.os.RemoteException $r1;
        android.bluetooth.IBluetooth r2;

        r0 := @this: android.bluetooth.BluetoothDevice;

        i0 := @parameter0: int;

        r2 = <android.bluetooth.BluetoothDevice: android.bluetooth.IBluetooth sService>;

        if r2 != null goto label1;

        return 0;

     label1:
        z0 = interfaceinvoke r2.<android.bluetooth.IBluetooth: boolean setSimAccessPermission(android.bluetooth.BluetoothDevice,int)>(r0, i0);

     label2:
        return z0;

     label3:
        $r1 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BluetoothDevice", "", $r1);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.lang.String toString()
    {
        android.bluetooth.BluetoothDevice r0;
        java.lang.String $r1;

        r0 := @this: android.bluetooth.BluetoothDevice;

        $r1 = r0.<android.bluetooth.BluetoothDevice: java.lang.String mAddress>;

        return $r1;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.bluetooth.BluetoothDevice r0;
        android.os.Parcel r1;
        int i0;
        java.lang.String $r2;

        r0 := @this: android.bluetooth.BluetoothDevice;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $r2 = r0.<android.bluetooth.BluetoothDevice: java.lang.String mAddress>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r2);

        return;
    }
}
