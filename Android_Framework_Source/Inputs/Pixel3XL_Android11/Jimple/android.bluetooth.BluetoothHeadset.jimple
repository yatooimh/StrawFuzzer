public final class android.bluetooth.BluetoothHeadset extends java.lang.Object implements android.bluetooth.BluetoothProfile
{
    public static final java.lang.String ACTION_ACTIVE_DEVICE_CHANGED;
    public static final java.lang.String ACTION_AUDIO_STATE_CHANGED;
    public static final java.lang.String ACTION_CONNECTION_STATE_CHANGED;
    public static final java.lang.String ACTION_HF_INDICATORS_VALUE_CHANGED;
    public static final java.lang.String ACTION_VENDOR_SPECIFIC_HEADSET_EVENT;
    public static final int AT_CMD_TYPE_ACTION;
    public static final int AT_CMD_TYPE_BASIC;
    public static final int AT_CMD_TYPE_READ;
    public static final int AT_CMD_TYPE_SET;
    public static final int AT_CMD_TYPE_TEST;
    private static final boolean DBG;
    public static final java.lang.String EXTRA_HF_INDICATORS_IND_ID;
    public static final java.lang.String EXTRA_HF_INDICATORS_IND_VALUE;
    public static final java.lang.String EXTRA_VENDOR_SPECIFIC_HEADSET_EVENT_ARGS;
    public static final java.lang.String EXTRA_VENDOR_SPECIFIC_HEADSET_EVENT_CMD;
    public static final java.lang.String EXTRA_VENDOR_SPECIFIC_HEADSET_EVENT_CMD_TYPE;
    private static final int MESSAGE_HEADSET_SERVICE_CONNECTED;
    private static final int MESSAGE_HEADSET_SERVICE_DISCONNECTED;
    public static final int STATE_AUDIO_CONNECTED;
    public static final int STATE_AUDIO_CONNECTING;
    public static final int STATE_AUDIO_DISCONNECTED;
    private static final java.lang.String TAG;
    private static final boolean VDBG;
    public static final java.lang.String VENDOR_RESULT_CODE_COMMAND_ANDROID;
    public static final java.lang.String VENDOR_SPECIFIC_HEADSET_EVENT_COMPANY_ID_CATEGORY;
    public static final java.lang.String VENDOR_SPECIFIC_HEADSET_EVENT_IPHONEACCEV;
    public static final int VENDOR_SPECIFIC_HEADSET_EVENT_IPHONEACCEV_BATTERY_LEVEL;
    public static final java.lang.String VENDOR_SPECIFIC_HEADSET_EVENT_XAPL;
    public static final java.lang.String VENDOR_SPECIFIC_HEADSET_EVENT_XEVENT;
    public static final java.lang.String VENDOR_SPECIFIC_HEADSET_EVENT_XEVENT_BATTERY_LEVEL;
    private android.bluetooth.BluetoothAdapter mAdapter;
    private final android.bluetooth.IBluetoothStateChangeCallback mBluetoothStateChangeCallback;
    private final android.bluetooth.IBluetoothProfileServiceConnection mConnection;
    private android.content.Context mContext;
    private final android.os.Handler mHandler;
    private volatile android.bluetooth.IBluetoothHeadset mService;
    private android.bluetooth.BluetoothProfile$ServiceListener mServiceListener;

    void <init>(android.content.Context, android.bluetooth.BluetoothProfile$ServiceListener)
    {
        android.bluetooth.BluetoothHeadset r0;
        android.bluetooth.BluetoothProfile$ServiceListener r1;
        android.bluetooth.BluetoothHeadset$1 $r2;
        android.bluetooth.BluetoothHeadset$2 $r3;
        android.bluetooth.BluetoothHeadset$3 $r4;
        android.os.Looper $r5;
        android.bluetooth.IBluetoothStateChangeCallback $r6;
        android.os.RemoteException $r7;
        android.content.Context r8;
        android.bluetooth.BluetoothAdapter r9;
        android.bluetooth.IBluetoothManager r10;

        r0 := @this: android.bluetooth.BluetoothHeadset;

        r8 := @parameter0: android.content.Context;

        r1 := @parameter1: android.bluetooth.BluetoothProfile$ServiceListener;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new android.bluetooth.BluetoothHeadset$1;

        specialinvoke $r2.<android.bluetooth.BluetoothHeadset$1: void <init>(android.bluetooth.BluetoothHeadset)>(r0);

        r0.<android.bluetooth.BluetoothHeadset: android.bluetooth.IBluetoothStateChangeCallback mBluetoothStateChangeCallback> = $r2;

        $r3 = new android.bluetooth.BluetoothHeadset$2;

        specialinvoke $r3.<android.bluetooth.BluetoothHeadset$2: void <init>(android.bluetooth.BluetoothHeadset)>(r0);

        r0.<android.bluetooth.BluetoothHeadset: android.bluetooth.IBluetoothProfileServiceConnection mConnection> = $r3;

        $r4 = new android.bluetooth.BluetoothHeadset$3;

        $r5 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke $r4.<android.bluetooth.BluetoothHeadset$3: void <init>(android.bluetooth.BluetoothHeadset,android.os.Looper)>(r0, $r5);

        r0.<android.bluetooth.BluetoothHeadset: android.os.Handler mHandler> = $r4;

        r0.<android.bluetooth.BluetoothHeadset: android.content.Context mContext> = r8;

        r0.<android.bluetooth.BluetoothHeadset: android.bluetooth.BluetoothProfile$ServiceListener mServiceListener> = r1;

        r9 = staticinvoke <android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothAdapter getDefaultAdapter()>();

        r0.<android.bluetooth.BluetoothHeadset: android.bluetooth.BluetoothAdapter mAdapter> = r9;

        r10 = virtualinvoke r9.<android.bluetooth.BluetoothAdapter: android.bluetooth.IBluetoothManager getBluetoothManager()>();

        if r10 == null goto label4;

     label1:
        $r6 = r0.<android.bluetooth.BluetoothHeadset: android.bluetooth.IBluetoothStateChangeCallback mBluetoothStateChangeCallback>;

        interfaceinvoke r10.<android.bluetooth.IBluetoothManager: void registerStateChangeCallback(android.bluetooth.IBluetoothStateChangeCallback)>($r6);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BluetoothHeadset", "", $r7);

     label4:
        specialinvoke r0.<android.bluetooth.BluetoothHeadset: boolean doBind()>();

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    static void access$000(android.bluetooth.BluetoothHeadset)
    {
        android.bluetooth.BluetoothHeadset r0;

        r0 := @parameter0: android.bluetooth.BluetoothHeadset;

        specialinvoke r0.<android.bluetooth.BluetoothHeadset: void doUnbind()>();

        return;
    }

    static boolean access$100(android.bluetooth.BluetoothHeadset)
    {
        android.bluetooth.BluetoothHeadset r0;
        boolean $z0;

        r0 := @parameter0: android.bluetooth.BluetoothHeadset;

        $z0 = specialinvoke r0.<android.bluetooth.BluetoothHeadset: boolean doBind()>();

        return $z0;
    }

    static android.bluetooth.IBluetoothHeadset access$202(android.bluetooth.BluetoothHeadset, android.bluetooth.IBluetoothHeadset)
    {
        android.bluetooth.BluetoothHeadset r0;
        android.bluetooth.IBluetoothHeadset r1;

        r0 := @parameter0: android.bluetooth.BluetoothHeadset;

        r1 := @parameter1: android.bluetooth.IBluetoothHeadset;

        r0.<android.bluetooth.BluetoothHeadset: android.bluetooth.IBluetoothHeadset mService> = r1;

        return r1;
    }

    static android.os.Handler access$300(android.bluetooth.BluetoothHeadset)
    {
        android.bluetooth.BluetoothHeadset r0;
        android.os.Handler $r1;

        r0 := @parameter0: android.bluetooth.BluetoothHeadset;

        $r1 = r0.<android.bluetooth.BluetoothHeadset: android.os.Handler mHandler>;

        return $r1;
    }

    static android.bluetooth.BluetoothProfile$ServiceListener access$400(android.bluetooth.BluetoothHeadset)
    {
        android.bluetooth.BluetoothHeadset r0;
        android.bluetooth.BluetoothProfile$ServiceListener $r1;

        r0 := @parameter0: android.bluetooth.BluetoothHeadset;

        $r1 = r0.<android.bluetooth.BluetoothHeadset: android.bluetooth.BluetoothProfile$ServiceListener mServiceListener>;

        return $r1;
    }

    private boolean doBind()
    {
        android.bluetooth.BluetoothHeadset r0;
        android.bluetooth.IBluetoothProfileServiceConnection r1, $r4;
        boolean z0;
        android.bluetooth.BluetoothAdapter $r2;
        android.bluetooth.IBluetoothManager $r3;
        java.lang.Throwable $r5;
        android.os.RemoteException $r6;
        android.bluetooth.IBluetoothHeadset r7;

        r0 := @this: android.bluetooth.BluetoothHeadset;

        r1 = r0.<android.bluetooth.BluetoothHeadset: android.bluetooth.IBluetoothProfileServiceConnection mConnection>;

        entermonitor r1;

     label01:
        r7 = r0.<android.bluetooth.BluetoothHeadset: android.bluetooth.IBluetoothHeadset mService>;

     label02:
        if r7 != null goto label08;

     label03:
        $r2 = r0.<android.bluetooth.BluetoothHeadset: android.bluetooth.BluetoothAdapter mAdapter>;

        $r3 = virtualinvoke $r2.<android.bluetooth.BluetoothAdapter: android.bluetooth.IBluetoothManager getBluetoothManager()>();

        $r4 = r0.<android.bluetooth.BluetoothHeadset: android.bluetooth.IBluetoothProfileServiceConnection mConnection>;

        z0 = interfaceinvoke $r3.<android.bluetooth.IBluetoothManager: boolean bindBluetoothProfileService(int,android.bluetooth.IBluetoothProfileServiceConnection)>(1, $r4);

     label04:
        exitmonitor r1;

     label05:
        return z0;

     label06:
        $r6 := @caughtexception;

     label07:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BluetoothHeadset", "Unable to bind HeadsetService", $r6);

     label08:
        exitmonitor r1;

     label09:
        return 0;

     label10:
        $r5 := @caughtexception;

     label11:
        exitmonitor r1;

     label12:
        throw $r5;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch android.os.RemoteException from label03 to label04 with label06;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    private void doUnbind()
    {
        android.bluetooth.BluetoothHeadset r0;
        android.bluetooth.IBluetoothProfileServiceConnection r1, $r4;
        android.bluetooth.BluetoothAdapter $r2;
        android.bluetooth.IBluetoothManager $r3;
        android.os.RemoteException $r5;
        java.lang.Throwable $r6, $r7;
        android.bluetooth.IBluetoothHeadset r8;

        r0 := @this: android.bluetooth.BluetoothHeadset;

        r1 = r0.<android.bluetooth.BluetoothHeadset: android.bluetooth.IBluetoothProfileServiceConnection mConnection>;

        entermonitor r1;

     label01:
        r8 = r0.<android.bluetooth.BluetoothHeadset: android.bluetooth.IBluetoothHeadset mService>;

     label02:
        if r8 == null goto label12;

     label03:
        $r2 = r0.<android.bluetooth.BluetoothHeadset: android.bluetooth.BluetoothAdapter mAdapter>;

        $r3 = virtualinvoke $r2.<android.bluetooth.BluetoothAdapter: android.bluetooth.IBluetoothManager getBluetoothManager()>();

        $r4 = r0.<android.bluetooth.BluetoothHeadset: android.bluetooth.IBluetoothProfileServiceConnection mConnection>;

        interfaceinvoke $r3.<android.bluetooth.IBluetoothManager: void unbindBluetoothProfileService(int,android.bluetooth.IBluetoothProfileServiceConnection)>(1, $r4);

     label04:
        r0.<android.bluetooth.BluetoothHeadset: android.bluetooth.IBluetoothHeadset mService> = null;

     label05:
        goto label12;

     label06:
        $r7 := @caughtexception;

        goto label10;

     label07:
        $r5 := @caughtexception;

     label08:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BluetoothHeadset", "Unable to unbind HeadsetService", $r5);

     label09:
        goto label04;

     label10:
        r0.<android.bluetooth.BluetoothHeadset: android.bluetooth.IBluetoothHeadset mService> = null;

     label11:
        throw $r7;

     label12:
        exitmonitor r1;

     label13:
        return;

     label14:
        $r6 := @caughtexception;

     label15:
        exitmonitor r1;

     label16:
        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch android.os.RemoteException from label03 to label04 with label07;
        catch java.lang.Throwable from label03 to label04 with label06;
        catch java.lang.Throwable from label04 to label05 with label14;
        catch java.lang.Throwable from label08 to label09 with label06;
        catch java.lang.Throwable from label10 to label11 with label14;
        catch java.lang.Throwable from label11 to label12 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label15 to label16 with label14;
    }

    public static boolean isBluetoothVoiceDialingEnabled(android.content.Context)
    {
        android.content.Context r0;
        android.content.res.Resources $r1;
        boolean $z0;

        r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        $z0 = virtualinvoke $r1.<android.content.res.Resources: boolean getBoolean(int)>(17891383);

        return $z0;
    }

    private boolean isDisabled()
    {
        android.bluetooth.BluetoothHeadset r0;
        android.bluetooth.BluetoothAdapter $r1;
        int $i0;
        boolean z0;

        r0 := @this: android.bluetooth.BluetoothHeadset;

        $r1 = r0.<android.bluetooth.BluetoothHeadset: android.bluetooth.BluetoothAdapter mAdapter>;

        $i0 = virtualinvoke $r1.<android.bluetooth.BluetoothAdapter: int getState()>();

        if $i0 != 10 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private boolean isEnabled()
    {
        android.bluetooth.BluetoothHeadset r0;
        android.bluetooth.BluetoothAdapter $r1;
        int $i0;
        boolean z0;

        r0 := @this: android.bluetooth.BluetoothHeadset;

        $r1 = r0.<android.bluetooth.BluetoothHeadset: android.bluetooth.BluetoothAdapter mAdapter>;

        $i0 = virtualinvoke $r1.<android.bluetooth.BluetoothAdapter: int getState()>();

        if $i0 != 12 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public static boolean isInbandRingingSupported(android.content.Context)
    {
        android.content.Context r0;
        android.content.res.Resources $r1;
        boolean $z0;

        r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        $z0 = virtualinvoke $r1.<android.content.res.Resources: boolean getBoolean(int)>(17891379);

        return $z0;
    }

    private static boolean isValidDevice(android.bluetooth.BluetoothDevice)
    {
        android.bluetooth.BluetoothDevice r0;
        java.lang.String $r1;
        boolean $z0, z1;

        r0 := @parameter0: android.bluetooth.BluetoothDevice;

        if r0 == null goto label1;

        $r1 = virtualinvoke r0.<android.bluetooth.BluetoothDevice: java.lang.String getAddress()>();

        $z0 = staticinvoke <android.bluetooth.BluetoothAdapter: boolean checkBluetoothAddress(java.lang.String)>($r1);

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    private static void log(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("BluetoothHeadset", r0);

        return;
    }

    public void clccResponse(int, int, int, int, boolean, java.lang.String, int)
    {
        android.bluetooth.BluetoothHeadset r0;
        int i0, i1, i2, i3, i4;
        boolean z0, $z1;
        android.bluetooth.IBluetoothHeadset r1;
        java.lang.Throwable $r2;
        java.lang.String $r3, $r5, r6;
        android.os.RemoteException $r4;

        r0 := @this: android.bluetooth.BluetoothHeadset;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        z0 := @parameter4: boolean;

        r6 := @parameter5: java.lang.String;

        i4 := @parameter6: int;

        r1 = r0.<android.bluetooth.BluetoothHeadset: android.bluetooth.IBluetoothHeadset mService>;

        if r1 == null goto label4;

        $z1 = specialinvoke r0.<android.bluetooth.BluetoothHeadset: boolean isEnabled()>();

        if $z1 == 0 goto label4;

     label1:
        interfaceinvoke r1.<android.bluetooth.IBluetoothHeadset: void clccResponse(int,int,int,int,boolean,java.lang.String,int)>(i0, i1, i2, i3, z0, r6, i4);

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        $r5 = virtualinvoke $r4.<android.os.RemoteException: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHeadset", $r5);

        goto label2;

     label4:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHeadset", "Proxy not attached to service");

        $r2 = new java.lang.Throwable;

        specialinvoke $r2.<java.lang.Throwable: void <init>()>();

        $r3 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r2);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("BluetoothHeadset", $r3);

     label5:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    void close()
    {
        android.bluetooth.BluetoothHeadset r0;
        android.bluetooth.BluetoothAdapter $r1;
        android.bluetooth.IBluetoothStateChangeCallback $r2;
        android.os.RemoteException $r3;
        android.bluetooth.IBluetoothManager r4;

        r0 := @this: android.bluetooth.BluetoothHeadset;

        $r1 = r0.<android.bluetooth.BluetoothHeadset: android.bluetooth.BluetoothAdapter mAdapter>;

        r4 = virtualinvoke $r1.<android.bluetooth.BluetoothAdapter: android.bluetooth.IBluetoothManager getBluetoothManager()>();

        if r4 == null goto label4;

     label1:
        $r2 = r0.<android.bluetooth.BluetoothHeadset: android.bluetooth.IBluetoothStateChangeCallback mBluetoothStateChangeCallback>;

        interfaceinvoke r4.<android.bluetooth.IBluetoothManager: void unregisterStateChangeCallback(android.bluetooth.IBluetoothStateChangeCallback)>($r2);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BluetoothHeadset", "", $r3);

     label4:
        r0.<android.bluetooth.BluetoothHeadset: android.bluetooth.BluetoothProfile$ServiceListener mServiceListener> = null;

        specialinvoke r0.<android.bluetooth.BluetoothHeadset: void doUnbind()>();

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean connect(android.bluetooth.BluetoothDevice)
    {
        android.bluetooth.BluetoothHeadset r0;
        boolean z0, $z1, $z2;
        java.lang.StringBuilder $r1;
        java.lang.String $r5, $r8;
        android.os.RemoteException $r6;
        java.lang.Throwable $r7;
        android.bluetooth.BluetoothDevice r9;
        android.bluetooth.IBluetoothHeadset r11;

        r0 := @this: android.bluetooth.BluetoothHeadset;

        r9 := @parameter0: android.bluetooth.BluetoothDevice;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("connect(");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r9);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.bluetooth.BluetoothHeadset: void log(java.lang.String)>($r5);

        r11 = r0.<android.bluetooth.BluetoothHeadset: android.bluetooth.IBluetoothHeadset mService>;

        if r11 == null goto label4;

        $z1 = specialinvoke r0.<android.bluetooth.BluetoothHeadset: boolean isEnabled()>();

        if $z1 == 0 goto label4;

        $z2 = staticinvoke <android.bluetooth.BluetoothHeadset: boolean isValidDevice(android.bluetooth.BluetoothDevice)>(r9);

        if $z2 == 0 goto label4;

     label1:
        z0 = interfaceinvoke r11.<android.bluetooth.IBluetoothHeadset: boolean connect(android.bluetooth.BluetoothDevice)>(r9);

     label2:
        return z0;

     label3:
        $r6 := @caughtexception;

        $r7 = new java.lang.Throwable;

        specialinvoke $r7.<java.lang.Throwable: void <init>()>();

        $r8 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r7);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHeadset", $r8);

        return 0;

     label4:
        if r11 != null goto label5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHeadset", "Proxy not attached to service");

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean connectAudio()
    {
        android.bluetooth.BluetoothHeadset r0;
        boolean z0, $z1;
        java.lang.Throwable $r1;
        java.lang.String $r2, $r4;
        android.os.RemoteException $r3;
        android.bluetooth.IBluetoothHeadset r5;

        r0 := @this: android.bluetooth.BluetoothHeadset;

        r5 = r0.<android.bluetooth.BluetoothHeadset: android.bluetooth.IBluetoothHeadset mService>;

        if r5 == null goto label4;

        $z1 = specialinvoke r0.<android.bluetooth.BluetoothHeadset: boolean isEnabled()>();

        if $z1 == 0 goto label4;

     label1:
        z0 = interfaceinvoke r5.<android.bluetooth.IBluetoothHeadset: boolean connectAudio()>();

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHeadset", $r4);

        goto label5;

     label4:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHeadset", "Proxy not attached to service");

        $r1 = new java.lang.Throwable;

        specialinvoke $r1.<java.lang.Throwable: void <init>()>();

        $r2 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r1);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("BluetoothHeadset", $r2);

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean disconnect(android.bluetooth.BluetoothDevice)
    {
        android.bluetooth.BluetoothHeadset r0;
        boolean z0, $z1, $z2;
        java.lang.StringBuilder $r1;
        java.lang.String $r5, $r8;
        android.os.RemoteException $r6;
        java.lang.Throwable $r7;
        android.bluetooth.BluetoothDevice r9;
        android.bluetooth.IBluetoothHeadset r11;

        r0 := @this: android.bluetooth.BluetoothHeadset;

        r9 := @parameter0: android.bluetooth.BluetoothDevice;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("disconnect(");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r9);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.bluetooth.BluetoothHeadset: void log(java.lang.String)>($r5);

        r11 = r0.<android.bluetooth.BluetoothHeadset: android.bluetooth.IBluetoothHeadset mService>;

        if r11 == null goto label4;

        $z1 = specialinvoke r0.<android.bluetooth.BluetoothHeadset: boolean isEnabled()>();

        if $z1 == 0 goto label4;

        $z2 = staticinvoke <android.bluetooth.BluetoothHeadset: boolean isValidDevice(android.bluetooth.BluetoothDevice)>(r9);

        if $z2 == 0 goto label4;

     label1:
        z0 = interfaceinvoke r11.<android.bluetooth.IBluetoothHeadset: boolean disconnect(android.bluetooth.BluetoothDevice)>(r9);

     label2:
        return z0;

     label3:
        $r6 := @caughtexception;

        $r7 = new java.lang.Throwable;

        specialinvoke $r7.<java.lang.Throwable: void <init>()>();

        $r8 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r7);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHeadset", $r8);

        return 0;

     label4:
        if r11 != null goto label5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHeadset", "Proxy not attached to service");

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean disconnectAudio()
    {
        android.bluetooth.BluetoothHeadset r0;
        boolean z0, $z1;
        java.lang.Throwable $r1;
        java.lang.String $r2, $r4;
        android.os.RemoteException $r3;
        android.bluetooth.IBluetoothHeadset r5;

        r0 := @this: android.bluetooth.BluetoothHeadset;

        r5 = r0.<android.bluetooth.BluetoothHeadset: android.bluetooth.IBluetoothHeadset mService>;

        if r5 == null goto label4;

        $z1 = specialinvoke r0.<android.bluetooth.BluetoothHeadset: boolean isEnabled()>();

        if $z1 == 0 goto label4;

     label1:
        z0 = interfaceinvoke r5.<android.bluetooth.IBluetoothHeadset: boolean disconnectAudio()>();

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHeadset", $r4);

        goto label5;

     label4:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHeadset", "Proxy not attached to service");

        $r1 = new java.lang.Throwable;

        specialinvoke $r1.<java.lang.Throwable: void <init>()>();

        $r2 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r1);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("BluetoothHeadset", $r2);

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.bluetooth.BluetoothDevice getActiveDevice()
    {
        android.bluetooth.BluetoothHeadset r0;
        android.bluetooth.IBluetoothHeadset r1;
        boolean $z0;
        android.os.RemoteException $r2;
        java.lang.Throwable $r3;
        java.lang.String $r4;
        android.bluetooth.BluetoothDevice r5;

        r0 := @this: android.bluetooth.BluetoothHeadset;

        r1 = r0.<android.bluetooth.BluetoothHeadset: android.bluetooth.IBluetoothHeadset mService>;

        if r1 == null goto label4;

        $z0 = specialinvoke r0.<android.bluetooth.BluetoothHeadset: boolean isEnabled()>();

        if $z0 == 0 goto label4;

     label1:
        r5 = interfaceinvoke r1.<android.bluetooth.IBluetoothHeadset: android.bluetooth.BluetoothDevice getActiveDevice()>();

     label2:
        return r5;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.Throwable;

        specialinvoke $r3.<java.lang.Throwable: void <init>()>();

        $r4 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r3);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHeadset", $r4);

     label4:
        if r1 != null goto label5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHeadset", "Proxy not attached to service");

     label5:
        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean getAudioRouteAllowed()
    {
        android.bluetooth.BluetoothHeadset r0;
        boolean z0, $z1;
        java.lang.Throwable $r1;
        java.lang.String $r2, $r4;
        android.os.RemoteException $r3;
        android.bluetooth.IBluetoothHeadset r5;

        r0 := @this: android.bluetooth.BluetoothHeadset;

        r5 = r0.<android.bluetooth.BluetoothHeadset: android.bluetooth.IBluetoothHeadset mService>;

        if r5 == null goto label4;

        $z1 = specialinvoke r0.<android.bluetooth.BluetoothHeadset: boolean isEnabled()>();

        if $z1 == 0 goto label4;

     label1:
        z0 = interfaceinvoke r5.<android.bluetooth.IBluetoothHeadset: boolean getAudioRouteAllowed()>();

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHeadset", $r4);

        goto label5;

     label4:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHeadset", "Proxy not attached to service");

        $r1 = new java.lang.Throwable;

        specialinvoke $r1.<java.lang.Throwable: void <init>()>();

        $r2 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r1);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("BluetoothHeadset", $r2);

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int getAudioState(android.bluetooth.BluetoothDevice)
    {
        android.bluetooth.BluetoothHeadset r0;
        android.bluetooth.IBluetoothHeadset r1;
        int i0;
        java.lang.Throwable $r2;
        java.lang.String $r3, $r5;
        boolean $z0;
        android.os.RemoteException $r4;
        android.bluetooth.BluetoothDevice r6;

        r0 := @this: android.bluetooth.BluetoothHeadset;

        r6 := @parameter0: android.bluetooth.BluetoothDevice;

        r1 = r0.<android.bluetooth.BluetoothHeadset: android.bluetooth.IBluetoothHeadset mService>;

        if r1 == null goto label4;

        $z0 = specialinvoke r0.<android.bluetooth.BluetoothHeadset: boolean isDisabled()>();

        if $z0 != 0 goto label4;

     label1:
        i0 = interfaceinvoke r1.<android.bluetooth.IBluetoothHeadset: int getAudioState(android.bluetooth.BluetoothDevice)>(r6);

     label2:
        return i0;

     label3:
        $r4 := @caughtexception;

        $r5 = virtualinvoke $r4.<android.os.RemoteException: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHeadset", $r5);

        goto label5;

     label4:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHeadset", "Proxy not attached to service");

        $r2 = new java.lang.Throwable;

        specialinvoke $r2.<java.lang.Throwable: void <init>()>();

        $r3 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r2);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("BluetoothHeadset", $r3);

     label5:
        return 10;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.List getConnectedDevices()
    {
        android.bluetooth.BluetoothHeadset r0;
        java.util.ArrayList $r1, $r5;
        boolean $z0;
        android.os.RemoteException $r2;
        java.lang.Throwable $r3;
        java.lang.String $r4;
        android.bluetooth.IBluetoothHeadset r6;
        java.util.List r7;

        r0 := @this: android.bluetooth.BluetoothHeadset;

        r6 = r0.<android.bluetooth.BluetoothHeadset: android.bluetooth.IBluetoothHeadset mService>;

        if r6 == null goto label4;

        $z0 = specialinvoke r0.<android.bluetooth.BluetoothHeadset: boolean isEnabled()>();

        if $z0 == 0 goto label4;

     label1:
        r7 = interfaceinvoke r6.<android.bluetooth.IBluetoothHeadset: java.util.List getConnectedDevices()>();

     label2:
        return r7;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.Throwable;

        specialinvoke $r3.<java.lang.Throwable: void <init>()>();

        $r4 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r3);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHeadset", $r4);

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        return $r5;

     label4:
        if r6 != null goto label5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHeadset", "Proxy not attached to service");

     label5:
        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        return $r1;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int getConnectionPolicy(android.bluetooth.BluetoothDevice)
    {
        android.bluetooth.BluetoothHeadset r0;
        android.bluetooth.IBluetoothHeadset r1;
        int i0;
        boolean $z0, $z1;
        android.os.RemoteException $r2;
        java.lang.Throwable $r3;
        java.lang.String $r4;
        android.bluetooth.BluetoothDevice r5;

        r0 := @this: android.bluetooth.BluetoothHeadset;

        r5 := @parameter0: android.bluetooth.BluetoothDevice;

        r1 = r0.<android.bluetooth.BluetoothHeadset: android.bluetooth.IBluetoothHeadset mService>;

        if r1 == null goto label4;

        $z0 = specialinvoke r0.<android.bluetooth.BluetoothHeadset: boolean isEnabled()>();

        if $z0 == 0 goto label4;

        $z1 = staticinvoke <android.bluetooth.BluetoothHeadset: boolean isValidDevice(android.bluetooth.BluetoothDevice)>(r5);

        if $z1 == 0 goto label4;

     label1:
        i0 = interfaceinvoke r1.<android.bluetooth.IBluetoothHeadset: int getConnectionPolicy(android.bluetooth.BluetoothDevice)>(r5);

     label2:
        return i0;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.Throwable;

        specialinvoke $r3.<java.lang.Throwable: void <init>()>();

        $r4 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r3);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHeadset", $r4);

        return 0;

     label4:
        if r1 != null goto label5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHeadset", "Proxy not attached to service");

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int getConnectionState(android.bluetooth.BluetoothDevice)
    {
        android.bluetooth.BluetoothHeadset r0;
        android.bluetooth.IBluetoothHeadset r1;
        int i0;
        boolean $z0, $z1;
        android.os.RemoteException $r2;
        java.lang.Throwable $r3;
        java.lang.String $r4;
        android.bluetooth.BluetoothDevice r5;

        r0 := @this: android.bluetooth.BluetoothHeadset;

        r5 := @parameter0: android.bluetooth.BluetoothDevice;

        r1 = r0.<android.bluetooth.BluetoothHeadset: android.bluetooth.IBluetoothHeadset mService>;

        if r1 == null goto label4;

        $z0 = specialinvoke r0.<android.bluetooth.BluetoothHeadset: boolean isEnabled()>();

        if $z0 == 0 goto label4;

        $z1 = staticinvoke <android.bluetooth.BluetoothHeadset: boolean isValidDevice(android.bluetooth.BluetoothDevice)>(r5);

        if $z1 == 0 goto label4;

     label1:
        i0 = interfaceinvoke r1.<android.bluetooth.IBluetoothHeadset: int getConnectionState(android.bluetooth.BluetoothDevice)>(r5);

     label2:
        return i0;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.Throwable;

        specialinvoke $r3.<java.lang.Throwable: void <init>()>();

        $r4 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r3);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHeadset", $r4);

        return 0;

     label4:
        if r1 != null goto label5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHeadset", "Proxy not attached to service");

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.List getDevicesMatchingConnectionStates(int[])
    {
        android.bluetooth.BluetoothHeadset r0;
        android.bluetooth.IBluetoothHeadset r1;
        java.util.ArrayList $r2, $r6;
        boolean $z0;
        android.os.RemoteException $r3;
        java.lang.Throwable $r4;
        java.lang.String $r5;
        int[] r7;
        java.util.List r8;

        r0 := @this: android.bluetooth.BluetoothHeadset;

        r7 := @parameter0: int[];

        r1 = r0.<android.bluetooth.BluetoothHeadset: android.bluetooth.IBluetoothHeadset mService>;

        if r1 == null goto label4;

        $z0 = specialinvoke r0.<android.bluetooth.BluetoothHeadset: boolean isEnabled()>();

        if $z0 == 0 goto label4;

     label1:
        r8 = interfaceinvoke r1.<android.bluetooth.IBluetoothHeadset: java.util.List getDevicesMatchingConnectionStates(int[])>(r7);

     label2:
        return r8;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.Throwable;

        specialinvoke $r4.<java.lang.Throwable: void <init>()>();

        $r5 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r4);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHeadset", $r5);

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        return $r6;

     label4:
        if r1 != null goto label5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHeadset", "Proxy not attached to service");

     label5:
        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        return $r2;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int getPriority(android.bluetooth.BluetoothDevice)
    {
        android.bluetooth.BluetoothHeadset r0;
        android.bluetooth.IBluetoothHeadset r1;
        int i0, $i2;
        boolean $z0, $z1;
        android.os.RemoteException $r2;
        java.lang.Throwable $r3;
        java.lang.String $r4;
        android.bluetooth.BluetoothDevice r5;

        r0 := @this: android.bluetooth.BluetoothHeadset;

        r5 := @parameter0: android.bluetooth.BluetoothDevice;

        r1 = r0.<android.bluetooth.BluetoothHeadset: android.bluetooth.IBluetoothHeadset mService>;

        if r1 == null goto label4;

        $z0 = specialinvoke r0.<android.bluetooth.BluetoothHeadset: boolean isEnabled()>();

        if $z0 == 0 goto label4;

        $z1 = staticinvoke <android.bluetooth.BluetoothHeadset: boolean isValidDevice(android.bluetooth.BluetoothDevice)>(r5);

        if $z1 == 0 goto label4;

     label1:
        $i2 = interfaceinvoke r1.<android.bluetooth.IBluetoothHeadset: int getPriority(android.bluetooth.BluetoothDevice)>(r5);

        i0 = staticinvoke <android.bluetooth.BluetoothAdapter: int connectionPolicyToPriority(int)>($i2);

     label2:
        return i0;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.Throwable;

        specialinvoke $r3.<java.lang.Throwable: void <init>()>();

        $r4 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r3);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHeadset", $r4);

        return 0;

     label4:
        if r1 != null goto label5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHeadset", "Proxy not attached to service");

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isAudioConnected(android.bluetooth.BluetoothDevice)
    {
        android.bluetooth.BluetoothHeadset r0;
        android.bluetooth.IBluetoothHeadset r1;
        boolean z0, $z1, $z2;
        android.os.RemoteException $r2;
        java.lang.Throwable $r3;
        java.lang.String $r4;
        android.bluetooth.BluetoothDevice r5;

        r0 := @this: android.bluetooth.BluetoothHeadset;

        r5 := @parameter0: android.bluetooth.BluetoothDevice;

        r1 = r0.<android.bluetooth.BluetoothHeadset: android.bluetooth.IBluetoothHeadset mService>;

        if r1 == null goto label4;

        $z1 = specialinvoke r0.<android.bluetooth.BluetoothHeadset: boolean isEnabled()>();

        if $z1 == 0 goto label4;

        $z2 = staticinvoke <android.bluetooth.BluetoothHeadset: boolean isValidDevice(android.bluetooth.BluetoothDevice)>(r5);

        if $z2 == 0 goto label4;

     label1:
        z0 = interfaceinvoke r1.<android.bluetooth.IBluetoothHeadset: boolean isAudioConnected(android.bluetooth.BluetoothDevice)>(r5);

     label2:
        return z0;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.Throwable;

        specialinvoke $r3.<java.lang.Throwable: void <init>()>();

        $r4 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r3);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHeadset", $r4);

     label4:
        if r1 != null goto label5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHeadset", "Proxy not attached to service");

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isAudioOn()
    {
        android.bluetooth.BluetoothHeadset r0;
        android.bluetooth.IBluetoothHeadset r1;
        boolean z0, $z1;
        android.os.RemoteException $r3;
        java.lang.Throwable $r4;
        java.lang.String $r5;

        r0 := @this: android.bluetooth.BluetoothHeadset;

        r1 = r0.<android.bluetooth.BluetoothHeadset: android.bluetooth.IBluetoothHeadset mService>;

        if r1 == null goto label4;

        $z1 = specialinvoke r0.<android.bluetooth.BluetoothHeadset: boolean isEnabled()>();

        if $z1 == 0 goto label4;

     label1:
        z0 = interfaceinvoke r1.<android.bluetooth.IBluetoothHeadset: boolean isAudioOn()>();

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.Throwable;

        specialinvoke $r4.<java.lang.Throwable: void <init>()>();

        $r5 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r4);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHeadset", $r5);

     label4:
        if r1 != null goto label5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHeadset", "Proxy not attached to service");

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isInbandRingingEnabled()
    {
        android.bluetooth.BluetoothHeadset r0;
        android.bluetooth.IBluetoothHeadset r1;
        boolean z0, $z1;
        android.os.RemoteException $r3;
        java.lang.Throwable $r4;
        java.lang.String $r5;

        r0 := @this: android.bluetooth.BluetoothHeadset;

        staticinvoke <android.bluetooth.BluetoothHeadset: void log(java.lang.String)>("isInbandRingingEnabled()");

        r1 = r0.<android.bluetooth.BluetoothHeadset: android.bluetooth.IBluetoothHeadset mService>;

        if r1 == null goto label4;

        $z1 = specialinvoke r0.<android.bluetooth.BluetoothHeadset: boolean isEnabled()>();

        if $z1 == 0 goto label4;

     label1:
        z0 = interfaceinvoke r1.<android.bluetooth.IBluetoothHeadset: boolean isInbandRingingEnabled()>();

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.Throwable;

        specialinvoke $r4.<java.lang.Throwable: void <init>()>();

        $r5 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r4);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHeadset", $r5);

     label4:
        if r1 != null goto label5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHeadset", "Proxy not attached to service");

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void phoneStateChanged(int, int, int, java.lang.String, int, java.lang.String)
    {
        android.bluetooth.BluetoothHeadset r0;
        int i0, i1, i2, i3;
        java.lang.String r1, $r4, $r6, r7;
        android.bluetooth.IBluetoothHeadset r2;
        java.lang.Throwable $r3;
        boolean $z0;
        android.os.RemoteException $r5;

        r0 := @this: android.bluetooth.BluetoothHeadset;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r7 := @parameter3: java.lang.String;

        i3 := @parameter4: int;

        r1 := @parameter5: java.lang.String;

        r2 = r0.<android.bluetooth.BluetoothHeadset: android.bluetooth.IBluetoothHeadset mService>;

        if r2 == null goto label4;

        $z0 = specialinvoke r0.<android.bluetooth.BluetoothHeadset: boolean isEnabled()>();

        if $z0 == 0 goto label4;

     label1:
        interfaceinvoke r2.<android.bluetooth.IBluetoothHeadset: void phoneStateChanged(int,int,int,java.lang.String,int,java.lang.String)>(i0, i1, i2, r7, i3, r1);

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        $r6 = virtualinvoke $r5.<android.os.RemoteException: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHeadset", $r6);

        goto label2;

     label4:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHeadset", "Proxy not attached to service");

        $r3 = new java.lang.Throwable;

        specialinvoke $r3.<java.lang.Throwable: void <init>()>();

        $r4 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r3);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("BluetoothHeadset", $r4);

     label5:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean sendVendorSpecificResultCode(android.bluetooth.BluetoothDevice, java.lang.String, java.lang.String)
    {
        android.bluetooth.BluetoothHeadset r0;
        java.lang.String r1, r2, $r7;
        android.bluetooth.IBluetoothHeadset r3;
        boolean z0, $z1, $z2;
        java.lang.IllegalArgumentException $r4;
        android.os.RemoteException $r5;
        java.lang.Throwable $r6;
        android.bluetooth.BluetoothDevice r8;

        r0 := @this: android.bluetooth.BluetoothHeadset;

        r8 := @parameter0: android.bluetooth.BluetoothDevice;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        staticinvoke <android.bluetooth.BluetoothHeadset: void log(java.lang.String)>("sendVendorSpecificResultCode()");

        if r1 == null goto label6;

        r3 = r0.<android.bluetooth.BluetoothHeadset: android.bluetooth.IBluetoothHeadset mService>;

        if r3 == null goto label4;

        $z1 = specialinvoke r0.<android.bluetooth.BluetoothHeadset: boolean isEnabled()>();

        if $z1 == 0 goto label4;

        $z2 = staticinvoke <android.bluetooth.BluetoothHeadset: boolean isValidDevice(android.bluetooth.BluetoothDevice)>(r8);

        if $z2 == 0 goto label4;

     label1:
        z0 = interfaceinvoke r3.<android.bluetooth.IBluetoothHeadset: boolean sendVendorSpecificResultCode(android.bluetooth.BluetoothDevice,java.lang.String,java.lang.String)>(r8, r1, r2);

     label2:
        return z0;

     label3:
        $r5 := @caughtexception;

        $r6 = new java.lang.Throwable;

        specialinvoke $r6.<java.lang.Throwable: void <init>()>();

        $r7 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r6);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHeadset", $r7);

     label4:
        if r3 != null goto label5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHeadset", "Proxy not attached to service");

     label5:
        return 0;

     label6:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("command is null");

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean setActiveDevice(android.bluetooth.BluetoothDevice)
    {
        android.bluetooth.BluetoothHeadset r0;
        boolean z0, $z1, $z2;
        java.lang.StringBuilder $r1;
        java.lang.String $r4, $r7;
        android.os.RemoteException $r5;
        java.lang.Throwable $r6;
        android.bluetooth.BluetoothDevice r8;
        android.bluetooth.IBluetoothHeadset r10;

        r0 := @this: android.bluetooth.BluetoothHeadset;

        r8 := @parameter0: android.bluetooth.BluetoothDevice;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setActiveDevice: ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r8);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("BluetoothHeadset", $r4);

        r10 = r0.<android.bluetooth.BluetoothHeadset: android.bluetooth.IBluetoothHeadset mService>;

        if r10 == null goto label4;

        $z1 = specialinvoke r0.<android.bluetooth.BluetoothHeadset: boolean isEnabled()>();

        if $z1 == 0 goto label4;

        if r8 == null goto label1;

        $z2 = staticinvoke <android.bluetooth.BluetoothHeadset: boolean isValidDevice(android.bluetooth.BluetoothDevice)>(r8);

        if $z2 == 0 goto label4;

     label1:
        z0 = interfaceinvoke r10.<android.bluetooth.IBluetoothHeadset: boolean setActiveDevice(android.bluetooth.BluetoothDevice)>(r8);

     label2:
        return z0;

     label3:
        $r5 := @caughtexception;

        $r6 = new java.lang.Throwable;

        specialinvoke $r6.<java.lang.Throwable: void <init>()>();

        $r7 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r6);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHeadset", $r7);

     label4:
        if r10 != null goto label5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHeadset", "Proxy not attached to service");

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setAudioRouteAllowed(boolean)
    {
        android.bluetooth.BluetoothHeadset r0;
        boolean z0, $z1;
        java.lang.Throwable $r1;
        java.lang.String $r2, $r4;
        android.os.RemoteException $r3;
        android.bluetooth.IBluetoothHeadset r5;

        r0 := @this: android.bluetooth.BluetoothHeadset;

        z0 := @parameter0: boolean;

        r5 = r0.<android.bluetooth.BluetoothHeadset: android.bluetooth.IBluetoothHeadset mService>;

        if r5 == null goto label4;

        $z1 = specialinvoke r0.<android.bluetooth.BluetoothHeadset: boolean isEnabled()>();

        if $z1 == 0 goto label4;

     label1:
        interfaceinvoke r5.<android.bluetooth.IBluetoothHeadset: void setAudioRouteAllowed(boolean)>(z0);

     label2:
        goto label5;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHeadset", $r4);

        goto label2;

     label4:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHeadset", "Proxy not attached to service");

        $r1 = new java.lang.Throwable;

        specialinvoke $r1.<java.lang.Throwable: void <init>()>();

        $r2 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r1);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("BluetoothHeadset", $r2);

     label5:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean setConnectionPolicy(android.bluetooth.BluetoothDevice, int)
    {
        android.bluetooth.BluetoothHeadset r0;
        int i0;
        boolean z0, $z1, $z2;
        java.lang.StringBuilder $r1;
        java.lang.String $r7, $r10;
        android.os.RemoteException $r8;
        java.lang.Throwable $r9;
        android.bluetooth.BluetoothDevice r11;
        android.bluetooth.IBluetoothHeadset r13;

        r0 := @this: android.bluetooth.BluetoothHeadset;

        r11 := @parameter0: android.bluetooth.BluetoothDevice;

        i0 := @parameter1: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setConnectionPolicy(");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r11);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r7 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.bluetooth.BluetoothHeadset: void log(java.lang.String)>($r7);

        r13 = r0.<android.bluetooth.BluetoothHeadset: android.bluetooth.IBluetoothHeadset mService>;

        if r13 == null goto label4;

        $z1 = specialinvoke r0.<android.bluetooth.BluetoothHeadset: boolean isEnabled()>();

        if $z1 == 0 goto label4;

        $z2 = staticinvoke <android.bluetooth.BluetoothHeadset: boolean isValidDevice(android.bluetooth.BluetoothDevice)>(r11);

        if $z2 == 0 goto label4;

        if i0 == 0 goto label1;

        if i0 == 100 goto label1;

        return 0;

     label1:
        z0 = interfaceinvoke r13.<android.bluetooth.IBluetoothHeadset: boolean setConnectionPolicy(android.bluetooth.BluetoothDevice,int)>(r11, i0);

     label2:
        return z0;

     label3:
        $r8 := @caughtexception;

        $r9 = new java.lang.Throwable;

        specialinvoke $r9.<java.lang.Throwable: void <init>()>();

        $r10 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r9);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHeadset", $r10);

        return 0;

     label4:
        if r13 != null goto label5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHeadset", "Proxy not attached to service");

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setForceScoAudio(boolean)
    {
        android.bluetooth.BluetoothHeadset r0;
        boolean z0, $z1;
        java.lang.Throwable $r1;
        java.lang.String $r2, $r4;
        android.os.RemoteException $r3;
        android.bluetooth.IBluetoothHeadset r5;

        r0 := @this: android.bluetooth.BluetoothHeadset;

        z0 := @parameter0: boolean;

        r5 = r0.<android.bluetooth.BluetoothHeadset: android.bluetooth.IBluetoothHeadset mService>;

        if r5 == null goto label4;

        $z1 = specialinvoke r0.<android.bluetooth.BluetoothHeadset: boolean isEnabled()>();

        if $z1 == 0 goto label4;

     label1:
        interfaceinvoke r5.<android.bluetooth.IBluetoothHeadset: void setForceScoAudio(boolean)>(z0);

     label2:
        goto label5;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHeadset", $r4);

        goto label2;

     label4:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHeadset", "Proxy not attached to service");

        $r1 = new java.lang.Throwable;

        specialinvoke $r1.<java.lang.Throwable: void <init>()>();

        $r2 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r1);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("BluetoothHeadset", $r2);

     label5:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean setPriority(android.bluetooth.BluetoothDevice, int)
    {
        android.bluetooth.BluetoothHeadset r0;
        int i0, $i2;
        boolean z0, $z1, $z2;
        java.lang.StringBuilder $r1;
        java.lang.String $r7, $r10;
        android.os.RemoteException $r8;
        java.lang.Throwable $r9;
        android.bluetooth.BluetoothDevice r11;
        android.bluetooth.IBluetoothHeadset r13;

        r0 := @this: android.bluetooth.BluetoothHeadset;

        r11 := @parameter0: android.bluetooth.BluetoothDevice;

        i0 := @parameter1: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setPriority(");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r11);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r7 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.bluetooth.BluetoothHeadset: void log(java.lang.String)>($r7);

        r13 = r0.<android.bluetooth.BluetoothHeadset: android.bluetooth.IBluetoothHeadset mService>;

        if r13 == null goto label4;

        $z1 = specialinvoke r0.<android.bluetooth.BluetoothHeadset: boolean isEnabled()>();

        if $z1 == 0 goto label4;

        $z2 = staticinvoke <android.bluetooth.BluetoothHeadset: boolean isValidDevice(android.bluetooth.BluetoothDevice)>(r11);

        if $z2 == 0 goto label4;

        if i0 == 0 goto label1;

        if i0 == 100 goto label1;

        return 0;

     label1:
        $i2 = staticinvoke <android.bluetooth.BluetoothAdapter: int priorityToConnectionPolicy(int)>(i0);

        z0 = interfaceinvoke r13.<android.bluetooth.IBluetoothHeadset: boolean setPriority(android.bluetooth.BluetoothDevice,int)>(r11, $i2);

     label2:
        return z0;

     label3:
        $r8 := @caughtexception;

        $r9 = new java.lang.Throwable;

        specialinvoke $r9.<java.lang.Throwable: void <init>()>();

        $r10 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r9);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHeadset", $r10);

        return 0;

     label4:
        if r13 != null goto label5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHeadset", "Proxy not attached to service");

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean startScoUsingVirtualVoiceCall()
    {
        android.bluetooth.BluetoothHeadset r0;
        boolean z0, $z1;
        java.lang.Throwable $r1;
        java.lang.String $r2, $r4;
        android.os.RemoteException $r3;
        android.bluetooth.IBluetoothHeadset r5;

        r0 := @this: android.bluetooth.BluetoothHeadset;

        staticinvoke <android.bluetooth.BluetoothHeadset: void log(java.lang.String)>("startScoUsingVirtualVoiceCall()");

        r5 = r0.<android.bluetooth.BluetoothHeadset: android.bluetooth.IBluetoothHeadset mService>;

        if r5 == null goto label4;

        $z1 = specialinvoke r0.<android.bluetooth.BluetoothHeadset: boolean isEnabled()>();

        if $z1 == 0 goto label4;

     label1:
        z0 = interfaceinvoke r5.<android.bluetooth.IBluetoothHeadset: boolean startScoUsingVirtualVoiceCall()>();

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHeadset", $r4);

        goto label5;

     label4:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHeadset", "Proxy not attached to service");

        $r1 = new java.lang.Throwable;

        specialinvoke $r1.<java.lang.Throwable: void <init>()>();

        $r2 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r1);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("BluetoothHeadset", $r2);

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean startVoiceRecognition(android.bluetooth.BluetoothDevice)
    {
        android.bluetooth.BluetoothHeadset r0;
        android.bluetooth.IBluetoothHeadset r1;
        boolean z0, $z1, $z2;
        android.os.RemoteException $r2;
        java.lang.Throwable $r3;
        java.lang.String $r4;
        android.bluetooth.BluetoothDevice r5;

        r0 := @this: android.bluetooth.BluetoothHeadset;

        r5 := @parameter0: android.bluetooth.BluetoothDevice;

        staticinvoke <android.bluetooth.BluetoothHeadset: void log(java.lang.String)>("startVoiceRecognition()");

        r1 = r0.<android.bluetooth.BluetoothHeadset: android.bluetooth.IBluetoothHeadset mService>;

        if r1 == null goto label4;

        $z1 = specialinvoke r0.<android.bluetooth.BluetoothHeadset: boolean isEnabled()>();

        if $z1 == 0 goto label4;

        $z2 = staticinvoke <android.bluetooth.BluetoothHeadset: boolean isValidDevice(android.bluetooth.BluetoothDevice)>(r5);

        if $z2 == 0 goto label4;

     label1:
        z0 = interfaceinvoke r1.<android.bluetooth.IBluetoothHeadset: boolean startVoiceRecognition(android.bluetooth.BluetoothDevice)>(r5);

     label2:
        return z0;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.Throwable;

        specialinvoke $r3.<java.lang.Throwable: void <init>()>();

        $r4 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r3);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHeadset", $r4);

     label4:
        if r1 != null goto label5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHeadset", "Proxy not attached to service");

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean stopScoUsingVirtualVoiceCall()
    {
        android.bluetooth.BluetoothHeadset r0;
        boolean z0, $z1;
        java.lang.Throwable $r1;
        java.lang.String $r2, $r4;
        android.os.RemoteException $r3;
        android.bluetooth.IBluetoothHeadset r5;

        r0 := @this: android.bluetooth.BluetoothHeadset;

        staticinvoke <android.bluetooth.BluetoothHeadset: void log(java.lang.String)>("stopScoUsingVirtualVoiceCall()");

        r5 = r0.<android.bluetooth.BluetoothHeadset: android.bluetooth.IBluetoothHeadset mService>;

        if r5 == null goto label4;

        $z1 = specialinvoke r0.<android.bluetooth.BluetoothHeadset: boolean isEnabled()>();

        if $z1 == 0 goto label4;

     label1:
        z0 = interfaceinvoke r5.<android.bluetooth.IBluetoothHeadset: boolean stopScoUsingVirtualVoiceCall()>();

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHeadset", $r4);

        goto label5;

     label4:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHeadset", "Proxy not attached to service");

        $r1 = new java.lang.Throwable;

        specialinvoke $r1.<java.lang.Throwable: void <init>()>();

        $r2 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r1);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("BluetoothHeadset", $r2);

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean stopVoiceRecognition(android.bluetooth.BluetoothDevice)
    {
        android.bluetooth.BluetoothHeadset r0;
        android.bluetooth.IBluetoothHeadset r1;
        boolean z0, $z1, $z2;
        android.os.RemoteException $r2;
        java.lang.Throwable $r3;
        java.lang.String $r4;
        android.bluetooth.BluetoothDevice r5;

        r0 := @this: android.bluetooth.BluetoothHeadset;

        r5 := @parameter0: android.bluetooth.BluetoothDevice;

        staticinvoke <android.bluetooth.BluetoothHeadset: void log(java.lang.String)>("stopVoiceRecognition()");

        r1 = r0.<android.bluetooth.BluetoothHeadset: android.bluetooth.IBluetoothHeadset mService>;

        if r1 == null goto label4;

        $z1 = specialinvoke r0.<android.bluetooth.BluetoothHeadset: boolean isEnabled()>();

        if $z1 == 0 goto label4;

        $z2 = staticinvoke <android.bluetooth.BluetoothHeadset: boolean isValidDevice(android.bluetooth.BluetoothDevice)>(r5);

        if $z2 == 0 goto label4;

     label1:
        z0 = interfaceinvoke r1.<android.bluetooth.IBluetoothHeadset: boolean stopVoiceRecognition(android.bluetooth.BluetoothDevice)>(r5);

     label2:
        return z0;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.Throwable;

        specialinvoke $r3.<java.lang.Throwable: void <init>()>();

        $r4 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r3);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHeadset", $r4);

     label4:
        if r1 != null goto label5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHeadset", "Proxy not attached to service");

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <android.bluetooth.BluetoothHeadset: java.lang.String VENDOR_SPECIFIC_HEADSET_EVENT_XEVENT_BATTERY_LEVEL> = "BATTERY";

        <android.bluetooth.BluetoothHeadset: java.lang.String VENDOR_SPECIFIC_HEADSET_EVENT_XEVENT> = "+XEVENT";

        <android.bluetooth.BluetoothHeadset: java.lang.String VENDOR_SPECIFIC_HEADSET_EVENT_XAPL> = "+XAPL";

        <android.bluetooth.BluetoothHeadset: int VENDOR_SPECIFIC_HEADSET_EVENT_IPHONEACCEV_BATTERY_LEVEL> = 1;

        <android.bluetooth.BluetoothHeadset: java.lang.String VENDOR_SPECIFIC_HEADSET_EVENT_IPHONEACCEV> = "+IPHONEACCEV";

        <android.bluetooth.BluetoothHeadset: java.lang.String VENDOR_SPECIFIC_HEADSET_EVENT_COMPANY_ID_CATEGORY> = "android.bluetooth.headset.intent.category.companyid";

        <android.bluetooth.BluetoothHeadset: java.lang.String VENDOR_RESULT_CODE_COMMAND_ANDROID> = "+ANDROID";

        <android.bluetooth.BluetoothHeadset: boolean VDBG> = 0;

        <android.bluetooth.BluetoothHeadset: java.lang.String TAG> = "BluetoothHeadset";

        <android.bluetooth.BluetoothHeadset: int STATE_AUDIO_DISCONNECTED> = 10;

        <android.bluetooth.BluetoothHeadset: int STATE_AUDIO_CONNECTING> = 11;

        <android.bluetooth.BluetoothHeadset: int STATE_AUDIO_CONNECTED> = 12;

        <android.bluetooth.BluetoothHeadset: int MESSAGE_HEADSET_SERVICE_DISCONNECTED> = 101;

        <android.bluetooth.BluetoothHeadset: int MESSAGE_HEADSET_SERVICE_CONNECTED> = 100;

        <android.bluetooth.BluetoothHeadset: java.lang.String EXTRA_VENDOR_SPECIFIC_HEADSET_EVENT_CMD_TYPE> = "android.bluetooth.headset.extra.VENDOR_SPECIFIC_HEADSET_EVENT_CMD_TYPE";

        <android.bluetooth.BluetoothHeadset: java.lang.String EXTRA_VENDOR_SPECIFIC_HEADSET_EVENT_CMD> = "android.bluetooth.headset.extra.VENDOR_SPECIFIC_HEADSET_EVENT_CMD";

        <android.bluetooth.BluetoothHeadset: java.lang.String EXTRA_VENDOR_SPECIFIC_HEADSET_EVENT_ARGS> = "android.bluetooth.headset.extra.VENDOR_SPECIFIC_HEADSET_EVENT_ARGS";

        <android.bluetooth.BluetoothHeadset: java.lang.String EXTRA_HF_INDICATORS_IND_VALUE> = "android.bluetooth.headset.extra.HF_INDICATORS_IND_VALUE";

        <android.bluetooth.BluetoothHeadset: java.lang.String EXTRA_HF_INDICATORS_IND_ID> = "android.bluetooth.headset.extra.HF_INDICATORS_IND_ID";

        <android.bluetooth.BluetoothHeadset: boolean DBG> = 1;

        <android.bluetooth.BluetoothHeadset: int AT_CMD_TYPE_TEST> = 1;

        <android.bluetooth.BluetoothHeadset: int AT_CMD_TYPE_SET> = 2;

        <android.bluetooth.BluetoothHeadset: int AT_CMD_TYPE_READ> = 0;

        <android.bluetooth.BluetoothHeadset: int AT_CMD_TYPE_BASIC> = 3;

        <android.bluetooth.BluetoothHeadset: int AT_CMD_TYPE_ACTION> = 4;

        <android.bluetooth.BluetoothHeadset: java.lang.String ACTION_VENDOR_SPECIFIC_HEADSET_EVENT> = "android.bluetooth.headset.action.VENDOR_SPECIFIC_HEADSET_EVENT";

        <android.bluetooth.BluetoothHeadset: java.lang.String ACTION_HF_INDICATORS_VALUE_CHANGED> = "android.bluetooth.headset.action.HF_INDICATORS_VALUE_CHANGED";

        <android.bluetooth.BluetoothHeadset: java.lang.String ACTION_CONNECTION_STATE_CHANGED> = "android.bluetooth.headset.profile.action.CONNECTION_STATE_CHANGED";

        <android.bluetooth.BluetoothHeadset: java.lang.String ACTION_AUDIO_STATE_CHANGED> = "android.bluetooth.headset.profile.action.AUDIO_STATE_CHANGED";

        <android.bluetooth.BluetoothHeadset: java.lang.String ACTION_ACTIVE_DEVICE_CHANGED> = "android.bluetooth.headset.profile.action.ACTIVE_DEVICE_CHANGED";

        return;
    }
}
