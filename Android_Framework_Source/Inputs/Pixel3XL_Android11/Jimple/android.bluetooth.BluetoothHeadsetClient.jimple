public final class android.bluetooth.BluetoothHeadsetClient extends java.lang.Object implements android.bluetooth.BluetoothProfile
{
    public static final java.lang.String ACTION_AG_EVENT;
    public static final java.lang.String ACTION_AUDIO_STATE_CHANGED;
    public static final java.lang.String ACTION_CALL_CHANGED;
    public static final java.lang.String ACTION_CONNECTION_STATE_CHANGED;
    public static final java.lang.String ACTION_LAST_VTAG;
    public static final java.lang.String ACTION_RESULT;
    public static final int ACTION_RESULT_ERROR;
    public static final int ACTION_RESULT_ERROR_BLACKLISTED;
    public static final int ACTION_RESULT_ERROR_BUSY;
    public static final int ACTION_RESULT_ERROR_CME;
    public static final int ACTION_RESULT_ERROR_DELAYED;
    public static final int ACTION_RESULT_ERROR_NO_ANSWER;
    public static final int ACTION_RESULT_ERROR_NO_CARRIER;
    public static final int ACTION_RESULT_OK;
    public static final java.lang.String ACTION_VENDOR_SPECIFIC_HEADSETCLIENT_EVENT;
    public static final int CALL_ACCEPT_HOLD;
    public static final int CALL_ACCEPT_NONE;
    public static final int CALL_ACCEPT_TERMINATE;
    public static final int CME_CORPORATE_PERSONALIZATION_PIN_REQUIRED;
    public static final int CME_CORPORATE_PERSONALIZATION_PUK_REQUIRED;
    public static final int CME_DIAL_STRING_TOO_LONG;
    public static final int CME_EAP_NOT_SUPPORTED;
    public static final int CME_EMERGENCY_SERVICE_ONLY;
    public static final int CME_HIDDEN_KEY_REQUIRED;
    public static final int CME_INCORRECT_PARAMETERS;
    public static final int CME_INCORRECT_PASSWORD;
    public static final int CME_INVALID_CHARACTER_IN_DIAL_STRING;
    public static final int CME_INVALID_CHARACTER_IN_TEXT_STRING;
    public static final int CME_INVALID_INDEX;
    public static final int CME_MEMORY_FAILURE;
    public static final int CME_MEMORY_FULL;
    public static final int CME_NETWORK_PERSONALIZATION_PIN_REQUIRED;
    public static final int CME_NETWORK_PERSONALIZATION_PUK_REQUIRED;
    public static final int CME_NETWORK_SUBSET_PERSONALIZATION_PIN_REQUIRED;
    public static final int CME_NETWORK_SUBSET_PERSONALIZATION_PUK_REQUIRED;
    public static final int CME_NETWORK_TIMEOUT;
    public static final int CME_NOT_FOUND;
    public static final int CME_NOT_SUPPORTED_FOR_VOIP;
    public static final int CME_NO_CONNECTION_TO_PHONE;
    public static final int CME_NO_NETWORK_SERVICE;
    public static final int CME_NO_SIMULTANOUS_VOIP_CS_CALLS;
    public static final int CME_OPERATION_NOT_ALLOWED;
    public static final int CME_OPERATION_NOT_SUPPORTED;
    public static final int CME_PHFSIM_PIN_REQUIRED;
    public static final int CME_PHFSIM_PUK_REQUIRED;
    public static final int CME_PHONE_FAILURE;
    public static final int CME_PHSIM_PIN_REQUIRED;
    public static final int CME_SERVICE_PROVIDER_PERSONALIZATION_PIN_REQUIRED;
    public static final int CME_SERVICE_PROVIDER_PERSONALIZATION_PUK_REQUIRED;
    public static final int CME_SIM_BUSY;
    public static final int CME_SIM_FAILURE;
    public static final int CME_SIM_NOT_INSERTED;
    public static final int CME_SIM_PIN2_REQUIRED;
    public static final int CME_SIM_PIN_REQUIRED;
    public static final int CME_SIM_PUK2_REQUIRED;
    public static final int CME_SIM_PUK_REQUIRED;
    public static final int CME_SIM_WRONG;
    public static final int CME_SIP_RESPONSE_CODE;
    public static final int CME_TEXT_STRING_TOO_LONG;
    private static final boolean DBG;
    public static final java.lang.String EXTRA_AG_FEATURE_3WAY_CALLING;
    public static final java.lang.String EXTRA_AG_FEATURE_ACCEPT_HELD_OR_WAITING_CALL;
    public static final java.lang.String EXTRA_AG_FEATURE_ATTACH_NUMBER_TO_VT;
    public static final java.lang.String EXTRA_AG_FEATURE_ECC;
    public static final java.lang.String EXTRA_AG_FEATURE_MERGE;
    public static final java.lang.String EXTRA_AG_FEATURE_MERGE_AND_DETACH;
    public static final java.lang.String EXTRA_AG_FEATURE_REJECT_CALL;
    public static final java.lang.String EXTRA_AG_FEATURE_RELEASE_AND_ACCEPT;
    public static final java.lang.String EXTRA_AG_FEATURE_RELEASE_HELD_OR_WAITING_CALL;
    public static final java.lang.String EXTRA_AG_FEATURE_RESPONSE_AND_HOLD;
    public static final java.lang.String EXTRA_AG_FEATURE_VOICE_RECOGNITION;
    public static final java.lang.String EXTRA_AUDIO_WBS;
    public static final java.lang.String EXTRA_BATTERY_LEVEL;
    public static final java.lang.String EXTRA_CALL;
    public static final java.lang.String EXTRA_CME_CODE;
    public static final java.lang.String EXTRA_IN_BAND_RING;
    public static final java.lang.String EXTRA_NETWORK_ROAMING;
    public static final java.lang.String EXTRA_NETWORK_SIGNAL_STRENGTH;
    public static final java.lang.String EXTRA_NETWORK_STATUS;
    public static final java.lang.String EXTRA_NUMBER;
    public static final java.lang.String EXTRA_OPERATOR_NAME;
    public static final java.lang.String EXTRA_RESULT_CODE;
    public static final java.lang.String EXTRA_SUBSCRIBER_INFO;
    public static final java.lang.String EXTRA_VENDOR_EVENT_CODE;
    public static final java.lang.String EXTRA_VENDOR_EVENT_FULL_ARGS;
    public static final java.lang.String EXTRA_VENDOR_ID;
    public static final java.lang.String EXTRA_VOICE_RECOGNITION;
    public static final int STATE_AUDIO_CONNECTED;
    public static final int STATE_AUDIO_CONNECTING;
    public static final int STATE_AUDIO_DISCONNECTED;
    private static final java.lang.String TAG;
    private static final boolean VDBG;
    private android.bluetooth.BluetoothAdapter mAdapter;
    private final android.bluetooth.BluetoothProfileConnector mProfileConnector;

    void <init>(android.content.Context, android.bluetooth.BluetoothProfile$ServiceListener)
    {
        android.bluetooth.BluetoothHeadsetClient r0;
        android.content.Context r1;
        android.bluetooth.BluetoothProfile$ServiceListener r2;
        android.bluetooth.BluetoothHeadsetClient$1 $r3;
        java.lang.Class $r4;
        java.lang.String $r5;
        android.bluetooth.BluetoothAdapter $r6;
        android.bluetooth.BluetoothProfileConnector $r7;

        r0 := @this: android.bluetooth.BluetoothHeadsetClient;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.bluetooth.BluetoothProfile$ServiceListener;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new android.bluetooth.BluetoothHeadsetClient$1;

        $r4 = class "Landroid/bluetooth/IBluetoothHeadsetClient;";

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        specialinvoke $r3.<android.bluetooth.BluetoothHeadsetClient$1: void <init>(android.bluetooth.BluetoothHeadsetClient,android.bluetooth.BluetoothProfile,int,java.lang.String,java.lang.String)>(r0, r0, 16, "BluetoothHeadsetClient", $r5);

        r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.BluetoothProfileConnector mProfileConnector> = $r3;

        $r6 = staticinvoke <android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothAdapter getDefaultAdapter()>();

        r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.BluetoothAdapter mAdapter> = $r6;

        $r7 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.BluetoothProfileConnector mProfileConnector>;

        virtualinvoke $r7.<android.bluetooth.BluetoothProfileConnector: void connect(android.content.Context,android.bluetooth.BluetoothProfile$ServiceListener)>(r1, r2);

        return;
    }

    private android.bluetooth.IBluetoothHeadsetClient getService()
    {
        android.bluetooth.BluetoothHeadsetClient r0;
        android.bluetooth.BluetoothProfileConnector $r1;
        java.lang.Object $r2;
        android.bluetooth.IBluetoothHeadsetClient $r3;

        r0 := @this: android.bluetooth.BluetoothHeadsetClient;

        $r1 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.BluetoothProfileConnector mProfileConnector>;

        $r2 = virtualinvoke $r1.<android.bluetooth.BluetoothProfileConnector: java.lang.Object getService()>();

        $r3 = (android.bluetooth.IBluetoothHeadsetClient) $r2;

        return $r3;
    }

    private boolean isEnabled()
    {
        android.bluetooth.BluetoothHeadsetClient r0;
        android.bluetooth.BluetoothAdapter $r1;
        int $i0;
        boolean z0;

        r0 := @this: android.bluetooth.BluetoothHeadsetClient;

        $r1 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.BluetoothAdapter mAdapter>;

        $i0 = virtualinvoke $r1.<android.bluetooth.BluetoothAdapter: int getState()>();

        if $i0 != 12 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private static boolean isValidDevice(android.bluetooth.BluetoothDevice)
    {
        android.bluetooth.BluetoothDevice r0;
        java.lang.String $r1;
        boolean $z0, z1;

        r0 := @parameter0: android.bluetooth.BluetoothDevice;

        if r0 == null goto label1;

        $r1 = virtualinvoke r0.<android.bluetooth.BluetoothDevice: java.lang.String getAddress()>();

        $z0 = staticinvoke <android.bluetooth.BluetoothAdapter: boolean checkBluetoothAddress(java.lang.String)>($r1);

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    private static void log(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", r0);

        return;
    }

    public boolean acceptCall(android.bluetooth.BluetoothDevice, int)
    {
        android.bluetooth.BluetoothHeadsetClient r0;
        int i0;
        android.bluetooth.IBluetoothHeadsetClient r1;
        boolean z0, $z1, $z2;
        android.os.RemoteException $r2;
        java.lang.Throwable $r3;
        java.lang.String $r4;
        android.bluetooth.BluetoothDevice r5;

        r0 := @this: android.bluetooth.BluetoothHeadsetClient;

        r5 := @parameter0: android.bluetooth.BluetoothDevice;

        i0 := @parameter1: int;

        staticinvoke <android.bluetooth.BluetoothHeadsetClient: void log(java.lang.String)>("acceptCall()");

        r1 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient getService()>();

        if r1 == null goto label4;

        $z1 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: boolean isEnabled()>();

        if $z1 == 0 goto label4;

        $z2 = staticinvoke <android.bluetooth.BluetoothHeadsetClient: boolean isValidDevice(android.bluetooth.BluetoothDevice)>(r5);

        if $z2 == 0 goto label4;

     label1:
        z0 = interfaceinvoke r1.<android.bluetooth.IBluetoothHeadsetClient: boolean acceptCall(android.bluetooth.BluetoothDevice,int)>(r5, i0);

     label2:
        return z0;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.Throwable;

        specialinvoke $r3.<java.lang.Throwable: void <init>()>();

        $r4 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r3);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", $r4);

     label4:
        if r1 != null goto label5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", "Proxy not attached to service");

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    void close()
    {
        android.bluetooth.BluetoothHeadsetClient r0;
        android.bluetooth.BluetoothProfileConnector $r1;

        r0 := @this: android.bluetooth.BluetoothHeadsetClient;

        $r1 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.BluetoothProfileConnector mProfileConnector>;

        virtualinvoke $r1.<android.bluetooth.BluetoothProfileConnector: void disconnect()>();

        return;
    }

    public boolean connect(android.bluetooth.BluetoothDevice)
    {
        android.bluetooth.BluetoothHeadsetClient r0;
        boolean z0, $z1, $z2;
        java.lang.StringBuilder $r1;
        java.lang.String $r5, $r8;
        android.os.RemoteException $r6;
        java.lang.Throwable $r7;
        android.bluetooth.BluetoothDevice r9;
        android.bluetooth.IBluetoothHeadsetClient r11;

        r0 := @this: android.bluetooth.BluetoothHeadsetClient;

        r9 := @parameter0: android.bluetooth.BluetoothDevice;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("connect(");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r9);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.bluetooth.BluetoothHeadsetClient: void log(java.lang.String)>($r5);

        r11 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient getService()>();

        if r11 == null goto label4;

        $z1 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: boolean isEnabled()>();

        if $z1 == 0 goto label4;

        $z2 = staticinvoke <android.bluetooth.BluetoothHeadsetClient: boolean isValidDevice(android.bluetooth.BluetoothDevice)>(r9);

        if $z2 == 0 goto label4;

     label1:
        z0 = interfaceinvoke r11.<android.bluetooth.IBluetoothHeadsetClient: boolean connect(android.bluetooth.BluetoothDevice)>(r9);

     label2:
        return z0;

     label3:
        $r6 := @caughtexception;

        $r7 = new java.lang.Throwable;

        specialinvoke $r7.<java.lang.Throwable: void <init>()>();

        $r8 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r7);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", $r8);

        return 0;

     label4:
        if r11 != null goto label5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", "Proxy not attached to service");

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean connectAudio(android.bluetooth.BluetoothDevice)
    {
        android.bluetooth.BluetoothHeadsetClient r0;
        android.bluetooth.IBluetoothHeadsetClient r1;
        boolean z0, $z1;
        java.lang.Throwable $r2;
        java.lang.String $r3, $r5;
        android.os.RemoteException $r4;
        android.bluetooth.BluetoothDevice r6;

        r0 := @this: android.bluetooth.BluetoothHeadsetClient;

        r6 := @parameter0: android.bluetooth.BluetoothDevice;

        r1 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient getService()>();

        if r1 == null goto label4;

        $z1 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: boolean isEnabled()>();

        if $z1 == 0 goto label4;

     label1:
        z0 = interfaceinvoke r1.<android.bluetooth.IBluetoothHeadsetClient: boolean connectAudio(android.bluetooth.BluetoothDevice)>(r6);

     label2:
        return z0;

     label3:
        $r4 := @caughtexception;

        $r5 = virtualinvoke $r4.<android.os.RemoteException: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", $r5);

        goto label5;

     label4:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", "Proxy not attached to service");

        $r2 = new java.lang.Throwable;

        specialinvoke $r2.<java.lang.Throwable: void <init>()>();

        $r3 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r2);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", $r3);

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.bluetooth.BluetoothHeadsetClientCall dial(android.bluetooth.BluetoothDevice, java.lang.String)
    {
        android.bluetooth.BluetoothHeadsetClient r0;
        java.lang.String r1, $r5;
        android.bluetooth.IBluetoothHeadsetClient r2;
        boolean $z0, $z1;
        android.os.RemoteException $r3;
        java.lang.Throwable $r4;
        android.bluetooth.BluetoothDevice r6;
        android.bluetooth.BluetoothHeadsetClientCall r7;

        r0 := @this: android.bluetooth.BluetoothHeadsetClient;

        r6 := @parameter0: android.bluetooth.BluetoothDevice;

        r1 := @parameter1: java.lang.String;

        staticinvoke <android.bluetooth.BluetoothHeadsetClient: void log(java.lang.String)>("dial()");

        r2 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient getService()>();

        if r2 == null goto label4;

        $z0 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: boolean isEnabled()>();

        if $z0 == 0 goto label4;

        $z1 = staticinvoke <android.bluetooth.BluetoothHeadsetClient: boolean isValidDevice(android.bluetooth.BluetoothDevice)>(r6);

        if $z1 == 0 goto label4;

     label1:
        r7 = interfaceinvoke r2.<android.bluetooth.IBluetoothHeadsetClient: android.bluetooth.BluetoothHeadsetClientCall dial(android.bluetooth.BluetoothDevice,java.lang.String)>(r6, r1);

     label2:
        return r7;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.Throwable;

        specialinvoke $r4.<java.lang.Throwable: void <init>()>();

        $r5 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r4);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", $r5);

     label4:
        if r2 != null goto label5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", "Proxy not attached to service");

     label5:
        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean disconnect(android.bluetooth.BluetoothDevice)
    {
        android.bluetooth.BluetoothHeadsetClient r0;
        boolean z0, $z1, $z2;
        java.lang.StringBuilder $r1;
        java.lang.String $r5, $r8;
        android.os.RemoteException $r6;
        java.lang.Throwable $r7;
        android.bluetooth.BluetoothDevice r9;
        android.bluetooth.IBluetoothHeadsetClient r11;

        r0 := @this: android.bluetooth.BluetoothHeadsetClient;

        r9 := @parameter0: android.bluetooth.BluetoothDevice;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("disconnect(");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r9);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.bluetooth.BluetoothHeadsetClient: void log(java.lang.String)>($r5);

        r11 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient getService()>();

        if r11 == null goto label4;

        $z1 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: boolean isEnabled()>();

        if $z1 == 0 goto label4;

        $z2 = staticinvoke <android.bluetooth.BluetoothHeadsetClient: boolean isValidDevice(android.bluetooth.BluetoothDevice)>(r9);

        if $z2 == 0 goto label4;

     label1:
        z0 = interfaceinvoke r11.<android.bluetooth.IBluetoothHeadsetClient: boolean disconnect(android.bluetooth.BluetoothDevice)>(r9);

     label2:
        return z0;

     label3:
        $r6 := @caughtexception;

        $r7 = new java.lang.Throwable;

        specialinvoke $r7.<java.lang.Throwable: void <init>()>();

        $r8 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r7);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", $r8);

        return 0;

     label4:
        if r11 != null goto label5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", "Proxy not attached to service");

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean disconnectAudio(android.bluetooth.BluetoothDevice)
    {
        android.bluetooth.BluetoothHeadsetClient r0;
        android.bluetooth.IBluetoothHeadsetClient r1;
        boolean z0, $z1;
        java.lang.Throwable $r2;
        java.lang.String $r3, $r5;
        android.os.RemoteException $r4;
        android.bluetooth.BluetoothDevice r6;

        r0 := @this: android.bluetooth.BluetoothHeadsetClient;

        r6 := @parameter0: android.bluetooth.BluetoothDevice;

        r1 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient getService()>();

        if r1 == null goto label4;

        $z1 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: boolean isEnabled()>();

        if $z1 == 0 goto label4;

     label1:
        z0 = interfaceinvoke r1.<android.bluetooth.IBluetoothHeadsetClient: boolean disconnectAudio(android.bluetooth.BluetoothDevice)>(r6);

     label2:
        return z0;

     label3:
        $r4 := @caughtexception;

        $r5 = virtualinvoke $r4.<android.os.RemoteException: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", $r5);

        goto label5;

     label4:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", "Proxy not attached to service");

        $r2 = new java.lang.Throwable;

        specialinvoke $r2.<java.lang.Throwable: void <init>()>();

        $r3 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r2);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", $r3);

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean enterPrivateMode(android.bluetooth.BluetoothDevice, int)
    {
        android.bluetooth.BluetoothHeadsetClient r0;
        int i0;
        android.bluetooth.IBluetoothHeadsetClient r1;
        boolean z0, $z1, $z2;
        android.os.RemoteException $r2;
        java.lang.Throwable $r3;
        java.lang.String $r4;
        android.bluetooth.BluetoothDevice r5;

        r0 := @this: android.bluetooth.BluetoothHeadsetClient;

        r5 := @parameter0: android.bluetooth.BluetoothDevice;

        i0 := @parameter1: int;

        staticinvoke <android.bluetooth.BluetoothHeadsetClient: void log(java.lang.String)>("enterPrivateMode()");

        r1 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient getService()>();

        if r1 == null goto label4;

        $z1 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: boolean isEnabled()>();

        if $z1 == 0 goto label4;

        $z2 = staticinvoke <android.bluetooth.BluetoothHeadsetClient: boolean isValidDevice(android.bluetooth.BluetoothDevice)>(r5);

        if $z2 == 0 goto label4;

     label1:
        z0 = interfaceinvoke r1.<android.bluetooth.IBluetoothHeadsetClient: boolean enterPrivateMode(android.bluetooth.BluetoothDevice,int)>(r5, i0);

     label2:
        return z0;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.Throwable;

        specialinvoke $r3.<java.lang.Throwable: void <init>()>();

        $r4 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r3);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", $r4);

     label4:
        if r1 != null goto label5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", "Proxy not attached to service");

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean explicitCallTransfer(android.bluetooth.BluetoothDevice)
    {
        android.bluetooth.BluetoothHeadsetClient r0;
        android.bluetooth.IBluetoothHeadsetClient r1;
        boolean z0, $z1, $z2;
        android.os.RemoteException $r2;
        java.lang.Throwable $r3;
        java.lang.String $r4;
        android.bluetooth.BluetoothDevice r5;

        r0 := @this: android.bluetooth.BluetoothHeadsetClient;

        r5 := @parameter0: android.bluetooth.BluetoothDevice;

        staticinvoke <android.bluetooth.BluetoothHeadsetClient: void log(java.lang.String)>("explicitCallTransfer()");

        r1 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient getService()>();

        if r1 == null goto label4;

        $z1 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: boolean isEnabled()>();

        if $z1 == 0 goto label4;

        $z2 = staticinvoke <android.bluetooth.BluetoothHeadsetClient: boolean isValidDevice(android.bluetooth.BluetoothDevice)>(r5);

        if $z2 == 0 goto label4;

     label1:
        z0 = interfaceinvoke r1.<android.bluetooth.IBluetoothHeadsetClient: boolean explicitCallTransfer(android.bluetooth.BluetoothDevice)>(r5);

     label2:
        return z0;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.Throwable;

        specialinvoke $r3.<java.lang.Throwable: void <init>()>();

        $r4 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r3);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", $r4);

     label4:
        if r1 != null goto label5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", "Proxy not attached to service");

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean getAudioRouteAllowed(android.bluetooth.BluetoothDevice)
    {
        android.bluetooth.BluetoothHeadsetClient r0;
        android.bluetooth.IBluetoothHeadsetClient r1;
        boolean z0, $z1;
        java.lang.Throwable $r2;
        java.lang.String $r3, $r5;
        android.os.RemoteException $r4;
        android.bluetooth.BluetoothDevice r6;

        r0 := @this: android.bluetooth.BluetoothHeadsetClient;

        r6 := @parameter0: android.bluetooth.BluetoothDevice;

        r1 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient getService()>();

        if r1 == null goto label4;

        $z1 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: boolean isEnabled()>();

        if $z1 == 0 goto label4;

     label1:
        z0 = interfaceinvoke r1.<android.bluetooth.IBluetoothHeadsetClient: boolean getAudioRouteAllowed(android.bluetooth.BluetoothDevice)>(r6);

     label2:
        return z0;

     label3:
        $r4 := @caughtexception;

        $r5 = virtualinvoke $r4.<android.os.RemoteException: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", $r5);

        goto label5;

     label4:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", "Proxy not attached to service");

        $r2 = new java.lang.Throwable;

        specialinvoke $r2.<java.lang.Throwable: void <init>()>();

        $r3 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r2);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", $r3);

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int getAudioState(android.bluetooth.BluetoothDevice)
    {
        android.bluetooth.BluetoothHeadsetClient r0;
        android.bluetooth.IBluetoothHeadsetClient r1;
        int i0;
        java.lang.Throwable $r2;
        java.lang.String $r3, $r5;
        boolean $z0;
        android.os.RemoteException $r4;
        android.bluetooth.BluetoothDevice r6;

        r0 := @this: android.bluetooth.BluetoothHeadsetClient;

        r6 := @parameter0: android.bluetooth.BluetoothDevice;

        r1 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient getService()>();

        if r1 == null goto label4;

        $z0 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: boolean isEnabled()>();

        if $z0 == 0 goto label4;

     label1:
        i0 = interfaceinvoke r1.<android.bluetooth.IBluetoothHeadsetClient: int getAudioState(android.bluetooth.BluetoothDevice)>(r6);

     label2:
        return i0;

     label3:
        $r4 := @caughtexception;

        $r5 = virtualinvoke $r4.<android.os.RemoteException: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", $r5);

        goto label5;

     label4:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", "Proxy not attached to service");

        $r2 = new java.lang.Throwable;

        specialinvoke $r2.<java.lang.Throwable: void <init>()>();

        $r3 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r2);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", $r3);

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.List getConnectedDevices()
    {
        android.bluetooth.BluetoothHeadsetClient r0;
        java.util.ArrayList $r1, $r5;
        boolean $z0;
        android.os.RemoteException $r2;
        java.lang.Throwable $r3;
        java.lang.String $r4;
        android.bluetooth.IBluetoothHeadsetClient r6;
        java.util.List r7;

        r0 := @this: android.bluetooth.BluetoothHeadsetClient;

        r6 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient getService()>();

        if r6 == null goto label4;

        $z0 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: boolean isEnabled()>();

        if $z0 == 0 goto label4;

     label1:
        r7 = interfaceinvoke r6.<android.bluetooth.IBluetoothHeadsetClient: java.util.List getConnectedDevices()>();

     label2:
        return r7;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.Throwable;

        specialinvoke $r3.<java.lang.Throwable: void <init>()>();

        $r4 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r3);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", $r4);

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        return $r5;

     label4:
        if r6 != null goto label5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", "Proxy not attached to service");

     label5:
        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        return $r1;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int getConnectionPolicy(android.bluetooth.BluetoothDevice)
    {
        android.bluetooth.BluetoothHeadsetClient r0;
        android.bluetooth.IBluetoothHeadsetClient r1;
        int i0;
        boolean $z0, $z1;
        android.os.RemoteException $r2;
        java.lang.Throwable $r3;
        java.lang.String $r4;
        android.bluetooth.BluetoothDevice r5;

        r0 := @this: android.bluetooth.BluetoothHeadsetClient;

        r5 := @parameter0: android.bluetooth.BluetoothDevice;

        r1 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient getService()>();

        if r1 == null goto label4;

        $z0 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: boolean isEnabled()>();

        if $z0 == 0 goto label4;

        $z1 = staticinvoke <android.bluetooth.BluetoothHeadsetClient: boolean isValidDevice(android.bluetooth.BluetoothDevice)>(r5);

        if $z1 == 0 goto label4;

     label1:
        i0 = interfaceinvoke r1.<android.bluetooth.IBluetoothHeadsetClient: int getConnectionPolicy(android.bluetooth.BluetoothDevice)>(r5);

     label2:
        return i0;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.Throwable;

        specialinvoke $r3.<java.lang.Throwable: void <init>()>();

        $r4 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r3);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", $r4);

        return 0;

     label4:
        if r1 != null goto label5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", "Proxy not attached to service");

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int getConnectionState(android.bluetooth.BluetoothDevice)
    {
        android.bluetooth.BluetoothHeadsetClient r0;
        android.bluetooth.IBluetoothHeadsetClient r1;
        int i0;
        boolean $z0, $z1;
        android.os.RemoteException $r2;
        java.lang.Throwable $r3;
        java.lang.String $r4;
        android.bluetooth.BluetoothDevice r5;

        r0 := @this: android.bluetooth.BluetoothHeadsetClient;

        r5 := @parameter0: android.bluetooth.BluetoothDevice;

        r1 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient getService()>();

        if r1 == null goto label4;

        $z0 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: boolean isEnabled()>();

        if $z0 == 0 goto label4;

        $z1 = staticinvoke <android.bluetooth.BluetoothHeadsetClient: boolean isValidDevice(android.bluetooth.BluetoothDevice)>(r5);

        if $z1 == 0 goto label4;

     label1:
        i0 = interfaceinvoke r1.<android.bluetooth.IBluetoothHeadsetClient: int getConnectionState(android.bluetooth.BluetoothDevice)>(r5);

     label2:
        return i0;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.Throwable;

        specialinvoke $r3.<java.lang.Throwable: void <init>()>();

        $r4 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r3);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", $r4);

        return 0;

     label4:
        if r1 != null goto label5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", "Proxy not attached to service");

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.os.Bundle getCurrentAgEvents(android.bluetooth.BluetoothDevice)
    {
        android.bluetooth.BluetoothHeadsetClient r0;
        android.bluetooth.IBluetoothHeadsetClient r1;
        boolean $z0, $z1;
        android.os.RemoteException $r2;
        java.lang.Throwable $r3;
        java.lang.String $r4;
        android.bluetooth.BluetoothDevice r5;
        android.os.Bundle r6;

        r0 := @this: android.bluetooth.BluetoothHeadsetClient;

        r5 := @parameter0: android.bluetooth.BluetoothDevice;

        staticinvoke <android.bluetooth.BluetoothHeadsetClient: void log(java.lang.String)>("getCurrentCalls()");

        r1 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient getService()>();

        if r1 == null goto label4;

        $z0 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: boolean isEnabled()>();

        if $z0 == 0 goto label4;

        $z1 = staticinvoke <android.bluetooth.BluetoothHeadsetClient: boolean isValidDevice(android.bluetooth.BluetoothDevice)>(r5);

        if $z1 == 0 goto label4;

     label1:
        r6 = interfaceinvoke r1.<android.bluetooth.IBluetoothHeadsetClient: android.os.Bundle getCurrentAgEvents(android.bluetooth.BluetoothDevice)>(r5);

     label2:
        return r6;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.Throwable;

        specialinvoke $r3.<java.lang.Throwable: void <init>()>();

        $r4 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r3);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", $r4);

     label4:
        if r1 != null goto label5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", "Proxy not attached to service");

     label5:
        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.os.Bundle getCurrentAgFeatures(android.bluetooth.BluetoothDevice)
    {
        android.bluetooth.BluetoothHeadsetClient r0;
        android.bluetooth.IBluetoothHeadsetClient r1;
        java.lang.Throwable $r2;
        java.lang.String $r3, $r5;
        boolean $z0;
        android.os.RemoteException $r4;
        android.bluetooth.BluetoothDevice r6;
        android.os.Bundle r7;

        r0 := @this: android.bluetooth.BluetoothHeadsetClient;

        r6 := @parameter0: android.bluetooth.BluetoothDevice;

        r1 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient getService()>();

        if r1 == null goto label4;

        $z0 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: boolean isEnabled()>();

        if $z0 == 0 goto label4;

     label1:
        r7 = interfaceinvoke r1.<android.bluetooth.IBluetoothHeadsetClient: android.os.Bundle getCurrentAgFeatures(android.bluetooth.BluetoothDevice)>(r6);

     label2:
        return r7;

     label3:
        $r4 := @caughtexception;

        $r5 = virtualinvoke $r4.<android.os.RemoteException: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", $r5);

        goto label5;

     label4:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", "Proxy not attached to service");

        $r2 = new java.lang.Throwable;

        specialinvoke $r2.<java.lang.Throwable: void <init>()>();

        $r3 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r2);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", $r3);

     label5:
        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.List getCurrentCalls(android.bluetooth.BluetoothDevice)
    {
        android.bluetooth.BluetoothHeadsetClient r0;
        android.bluetooth.IBluetoothHeadsetClient r1;
        boolean $z0, $z1;
        android.os.RemoteException $r2;
        java.lang.Throwable $r3;
        java.lang.String $r4;
        android.bluetooth.BluetoothDevice r5;
        java.util.List r6;

        r0 := @this: android.bluetooth.BluetoothHeadsetClient;

        r5 := @parameter0: android.bluetooth.BluetoothDevice;

        staticinvoke <android.bluetooth.BluetoothHeadsetClient: void log(java.lang.String)>("getCurrentCalls()");

        r1 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient getService()>();

        if r1 == null goto label4;

        $z0 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: boolean isEnabled()>();

        if $z0 == 0 goto label4;

        $z1 = staticinvoke <android.bluetooth.BluetoothHeadsetClient: boolean isValidDevice(android.bluetooth.BluetoothDevice)>(r5);

        if $z1 == 0 goto label4;

     label1:
        r6 = interfaceinvoke r1.<android.bluetooth.IBluetoothHeadsetClient: java.util.List getCurrentCalls(android.bluetooth.BluetoothDevice)>(r5);

     label2:
        return r6;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.Throwable;

        specialinvoke $r3.<java.lang.Throwable: void <init>()>();

        $r4 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r3);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", $r4);

     label4:
        if r1 != null goto label5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", "Proxy not attached to service");

     label5:
        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.List getDevicesMatchingConnectionStates(int[])
    {
        android.bluetooth.BluetoothHeadsetClient r0;
        android.bluetooth.IBluetoothHeadsetClient r1;
        java.util.ArrayList $r2, $r6;
        boolean $z0;
        android.os.RemoteException $r3;
        java.lang.Throwable $r4;
        java.lang.String $r5;
        int[] r7;
        java.util.List r8;

        r0 := @this: android.bluetooth.BluetoothHeadsetClient;

        r7 := @parameter0: int[];

        r1 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient getService()>();

        if r1 == null goto label4;

        $z0 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: boolean isEnabled()>();

        if $z0 == 0 goto label4;

     label1:
        r8 = interfaceinvoke r1.<android.bluetooth.IBluetoothHeadsetClient: java.util.List getDevicesMatchingConnectionStates(int[])>(r7);

     label2:
        return r8;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.Throwable;

        specialinvoke $r4.<java.lang.Throwable: void <init>()>();

        $r5 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r4);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", $r5);

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        return $r6;

     label4:
        if r1 != null goto label5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", "Proxy not attached to service");

     label5:
        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        return $r2;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean getLastVoiceTagNumber(android.bluetooth.BluetoothDevice)
    {
        android.bluetooth.BluetoothHeadsetClient r0;
        android.bluetooth.IBluetoothHeadsetClient r1;
        boolean z0, $z1, $z2;
        android.os.RemoteException $r2;
        java.lang.Throwable $r3;
        java.lang.String $r4;
        android.bluetooth.BluetoothDevice r5;

        r0 := @this: android.bluetooth.BluetoothHeadsetClient;

        r5 := @parameter0: android.bluetooth.BluetoothDevice;

        staticinvoke <android.bluetooth.BluetoothHeadsetClient: void log(java.lang.String)>("getLastVoiceTagNumber()");

        r1 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient getService()>();

        if r1 == null goto label4;

        $z1 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: boolean isEnabled()>();

        if $z1 == 0 goto label4;

        $z2 = staticinvoke <android.bluetooth.BluetoothHeadsetClient: boolean isValidDevice(android.bluetooth.BluetoothDevice)>(r5);

        if $z2 == 0 goto label4;

     label1:
        z0 = interfaceinvoke r1.<android.bluetooth.IBluetoothHeadsetClient: boolean getLastVoiceTagNumber(android.bluetooth.BluetoothDevice)>(r5);

     label2:
        return z0;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.Throwable;

        specialinvoke $r3.<java.lang.Throwable: void <init>()>();

        $r4 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r3);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", $r4);

     label4:
        if r1 != null goto label5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", "Proxy not attached to service");

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int getPriority(android.bluetooth.BluetoothDevice)
    {
        android.bluetooth.BluetoothHeadsetClient r0;
        android.bluetooth.BluetoothDevice r1;
        int $i0, $i1;

        r0 := @this: android.bluetooth.BluetoothHeadsetClient;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        $i0 = virtualinvoke r0.<android.bluetooth.BluetoothHeadsetClient: int getConnectionPolicy(android.bluetooth.BluetoothDevice)>(r1);

        $i1 = staticinvoke <android.bluetooth.BluetoothAdapter: int connectionPolicyToPriority(int)>($i0);

        return $i1;
    }

    public boolean holdCall(android.bluetooth.BluetoothDevice)
    {
        android.bluetooth.BluetoothHeadsetClient r0;
        android.bluetooth.IBluetoothHeadsetClient r1;
        boolean z0, $z1, $z2;
        android.os.RemoteException $r2;
        java.lang.Throwable $r3;
        java.lang.String $r4;
        android.bluetooth.BluetoothDevice r5;

        r0 := @this: android.bluetooth.BluetoothHeadsetClient;

        r5 := @parameter0: android.bluetooth.BluetoothDevice;

        staticinvoke <android.bluetooth.BluetoothHeadsetClient: void log(java.lang.String)>("holdCall()");

        r1 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient getService()>();

        if r1 == null goto label4;

        $z1 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: boolean isEnabled()>();

        if $z1 == 0 goto label4;

        $z2 = staticinvoke <android.bluetooth.BluetoothHeadsetClient: boolean isValidDevice(android.bluetooth.BluetoothDevice)>(r5);

        if $z2 == 0 goto label4;

     label1:
        z0 = interfaceinvoke r1.<android.bluetooth.IBluetoothHeadsetClient: boolean holdCall(android.bluetooth.BluetoothDevice)>(r5);

     label2:
        return z0;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.Throwable;

        specialinvoke $r3.<java.lang.Throwable: void <init>()>();

        $r4 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r3);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", $r4);

     label4:
        if r1 != null goto label5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", "Proxy not attached to service");

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean rejectCall(android.bluetooth.BluetoothDevice)
    {
        android.bluetooth.BluetoothHeadsetClient r0;
        android.bluetooth.IBluetoothHeadsetClient r1;
        boolean z0, $z1, $z2;
        android.os.RemoteException $r2;
        java.lang.Throwable $r3;
        java.lang.String $r4;
        android.bluetooth.BluetoothDevice r5;

        r0 := @this: android.bluetooth.BluetoothHeadsetClient;

        r5 := @parameter0: android.bluetooth.BluetoothDevice;

        staticinvoke <android.bluetooth.BluetoothHeadsetClient: void log(java.lang.String)>("rejectCall()");

        r1 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient getService()>();

        if r1 == null goto label4;

        $z1 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: boolean isEnabled()>();

        if $z1 == 0 goto label4;

        $z2 = staticinvoke <android.bluetooth.BluetoothHeadsetClient: boolean isValidDevice(android.bluetooth.BluetoothDevice)>(r5);

        if $z2 == 0 goto label4;

     label1:
        z0 = interfaceinvoke r1.<android.bluetooth.IBluetoothHeadsetClient: boolean rejectCall(android.bluetooth.BluetoothDevice)>(r5);

     label2:
        return z0;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.Throwable;

        specialinvoke $r3.<java.lang.Throwable: void <init>()>();

        $r4 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r3);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", $r4);

     label4:
        if r1 != null goto label5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", "Proxy not attached to service");

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean sendDTMF(android.bluetooth.BluetoothDevice, byte)
    {
        android.bluetooth.BluetoothHeadsetClient r0;
        byte b0;
        android.bluetooth.IBluetoothHeadsetClient r1;
        boolean z0, $z1, $z2;
        android.os.RemoteException $r2;
        java.lang.Throwable $r3;
        java.lang.String $r4;
        android.bluetooth.BluetoothDevice r5;

        r0 := @this: android.bluetooth.BluetoothHeadsetClient;

        r5 := @parameter0: android.bluetooth.BluetoothDevice;

        b0 := @parameter1: byte;

        staticinvoke <android.bluetooth.BluetoothHeadsetClient: void log(java.lang.String)>("sendDTMF()");

        r1 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient getService()>();

        if r1 == null goto label4;

        $z1 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: boolean isEnabled()>();

        if $z1 == 0 goto label4;

        $z2 = staticinvoke <android.bluetooth.BluetoothHeadsetClient: boolean isValidDevice(android.bluetooth.BluetoothDevice)>(r5);

        if $z2 == 0 goto label4;

     label1:
        z0 = interfaceinvoke r1.<android.bluetooth.IBluetoothHeadsetClient: boolean sendDTMF(android.bluetooth.BluetoothDevice,byte)>(r5, b0);

     label2:
        return z0;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.Throwable;

        specialinvoke $r3.<java.lang.Throwable: void <init>()>();

        $r4 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r3);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", $r4);

     label4:
        if r1 != null goto label5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", "Proxy not attached to service");

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean sendVendorAtCommand(android.bluetooth.BluetoothDevice, int, java.lang.String)
    {
        android.bluetooth.BluetoothHeadsetClient r0;
        int i0;
        java.lang.String r1, $r5;
        android.bluetooth.IBluetoothHeadsetClient r2;
        boolean z0, $z1, $z2;
        android.os.RemoteException $r3;
        java.lang.Throwable $r4;
        android.bluetooth.BluetoothDevice r6;

        r0 := @this: android.bluetooth.BluetoothHeadsetClient;

        r6 := @parameter0: android.bluetooth.BluetoothDevice;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        staticinvoke <android.bluetooth.BluetoothHeadsetClient: void log(java.lang.String)>("sendVendorSpecificCommand()");

        r2 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient getService()>();

        if r2 == null goto label4;

        $z1 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: boolean isEnabled()>();

        if $z1 == 0 goto label4;

        $z2 = staticinvoke <android.bluetooth.BluetoothHeadsetClient: boolean isValidDevice(android.bluetooth.BluetoothDevice)>(r6);

        if $z2 == 0 goto label4;

     label1:
        z0 = interfaceinvoke r2.<android.bluetooth.IBluetoothHeadsetClient: boolean sendVendorAtCommand(android.bluetooth.BluetoothDevice,int,java.lang.String)>(r6, i0, r1);

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.Throwable;

        specialinvoke $r4.<java.lang.Throwable: void <init>()>();

        $r5 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r4);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", $r5);

     label4:
        if r2 != null goto label5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", "Proxy not attached to service");

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setAudioRouteAllowed(android.bluetooth.BluetoothDevice, boolean)
    {
        android.bluetooth.BluetoothHeadsetClient r0;
        boolean z0, $z1;
        android.bluetooth.IBluetoothHeadsetClient r1;
        java.lang.Throwable $r2;
        java.lang.String $r3, $r5;
        android.os.RemoteException $r4;
        android.bluetooth.BluetoothDevice r6;

        r0 := @this: android.bluetooth.BluetoothHeadsetClient;

        r6 := @parameter0: android.bluetooth.BluetoothDevice;

        z0 := @parameter1: boolean;

        r1 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient getService()>();

        if r1 == null goto label4;

        $z1 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: boolean isEnabled()>();

        if $z1 == 0 goto label4;

     label1:
        interfaceinvoke r1.<android.bluetooth.IBluetoothHeadsetClient: void setAudioRouteAllowed(android.bluetooth.BluetoothDevice,boolean)>(r6, z0);

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        $r5 = virtualinvoke $r4.<android.os.RemoteException: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", $r5);

        goto label2;

     label4:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", "Proxy not attached to service");

        $r2 = new java.lang.Throwable;

        specialinvoke $r2.<java.lang.Throwable: void <init>()>();

        $r3 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r2);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", $r3);

     label5:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean setConnectionPolicy(android.bluetooth.BluetoothDevice, int)
    {
        android.bluetooth.BluetoothHeadsetClient r0;
        int i0;
        boolean z0, $z1, $z2;
        java.lang.StringBuilder $r1;
        java.lang.String $r7, $r10;
        android.os.RemoteException $r8;
        java.lang.Throwable $r9;
        android.bluetooth.BluetoothDevice r11;
        android.bluetooth.IBluetoothHeadsetClient r13;

        r0 := @this: android.bluetooth.BluetoothHeadsetClient;

        r11 := @parameter0: android.bluetooth.BluetoothDevice;

        i0 := @parameter1: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setConnectionPolicy(");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r11);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r7 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.bluetooth.BluetoothHeadsetClient: void log(java.lang.String)>($r7);

        r13 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient getService()>();

        if r13 == null goto label4;

        $z1 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: boolean isEnabled()>();

        if $z1 == 0 goto label4;

        $z2 = staticinvoke <android.bluetooth.BluetoothHeadsetClient: boolean isValidDevice(android.bluetooth.BluetoothDevice)>(r11);

        if $z2 == 0 goto label4;

        if i0 == 0 goto label1;

        if i0 == 100 goto label1;

        return 0;

     label1:
        z0 = interfaceinvoke r13.<android.bluetooth.IBluetoothHeadsetClient: boolean setConnectionPolicy(android.bluetooth.BluetoothDevice,int)>(r11, i0);

     label2:
        return z0;

     label3:
        $r8 := @caughtexception;

        $r9 = new java.lang.Throwable;

        specialinvoke $r9.<java.lang.Throwable: void <init>()>();

        $r10 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r9);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", $r10);

        return 0;

     label4:
        if r13 != null goto label5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", "Proxy not attached to service");

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean setPriority(android.bluetooth.BluetoothDevice, int)
    {
        android.bluetooth.BluetoothHeadsetClient r0;
        android.bluetooth.BluetoothDevice r1;
        int i0, $i1;
        java.lang.StringBuilder $r3;
        java.lang.String $r9;
        boolean $z0;

        r0 := @this: android.bluetooth.BluetoothHeadsetClient;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        i0 := @parameter1: int;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setPriority(");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.bluetooth.BluetoothHeadsetClient: void log(java.lang.String)>($r9);

        $i1 = staticinvoke <android.bluetooth.BluetoothAdapter: int priorityToConnectionPolicy(int)>(i0);

        $z0 = virtualinvoke r0.<android.bluetooth.BluetoothHeadsetClient: boolean setConnectionPolicy(android.bluetooth.BluetoothDevice,int)>(r1, $i1);

        return $z0;
    }

    public boolean startVoiceRecognition(android.bluetooth.BluetoothDevice)
    {
        android.bluetooth.BluetoothHeadsetClient r0;
        android.bluetooth.IBluetoothHeadsetClient r1;
        boolean z0, $z1, $z2;
        android.os.RemoteException $r2;
        java.lang.Throwable $r3;
        java.lang.String $r4;
        android.bluetooth.BluetoothDevice r5;

        r0 := @this: android.bluetooth.BluetoothHeadsetClient;

        r5 := @parameter0: android.bluetooth.BluetoothDevice;

        staticinvoke <android.bluetooth.BluetoothHeadsetClient: void log(java.lang.String)>("startVoiceRecognition()");

        r1 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient getService()>();

        if r1 == null goto label4;

        $z1 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: boolean isEnabled()>();

        if $z1 == 0 goto label4;

        $z2 = staticinvoke <android.bluetooth.BluetoothHeadsetClient: boolean isValidDevice(android.bluetooth.BluetoothDevice)>(r5);

        if $z2 == 0 goto label4;

     label1:
        z0 = interfaceinvoke r1.<android.bluetooth.IBluetoothHeadsetClient: boolean startVoiceRecognition(android.bluetooth.BluetoothDevice)>(r5);

     label2:
        return z0;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.Throwable;

        specialinvoke $r3.<java.lang.Throwable: void <init>()>();

        $r4 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r3);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", $r4);

     label4:
        if r1 != null goto label5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", "Proxy not attached to service");

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean stopVoiceRecognition(android.bluetooth.BluetoothDevice)
    {
        android.bluetooth.BluetoothHeadsetClient r0;
        android.bluetooth.IBluetoothHeadsetClient r1;
        boolean z0, $z1, $z2;
        android.os.RemoteException $r2;
        java.lang.Throwable $r3;
        java.lang.String $r4;
        android.bluetooth.BluetoothDevice r5;

        r0 := @this: android.bluetooth.BluetoothHeadsetClient;

        r5 := @parameter0: android.bluetooth.BluetoothDevice;

        staticinvoke <android.bluetooth.BluetoothHeadsetClient: void log(java.lang.String)>("stopVoiceRecognition()");

        r1 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient getService()>();

        if r1 == null goto label4;

        $z1 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: boolean isEnabled()>();

        if $z1 == 0 goto label4;

        $z2 = staticinvoke <android.bluetooth.BluetoothHeadsetClient: boolean isValidDevice(android.bluetooth.BluetoothDevice)>(r5);

        if $z2 == 0 goto label4;

     label1:
        z0 = interfaceinvoke r1.<android.bluetooth.IBluetoothHeadsetClient: boolean stopVoiceRecognition(android.bluetooth.BluetoothDevice)>(r5);

     label2:
        return z0;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.Throwable;

        specialinvoke $r3.<java.lang.Throwable: void <init>()>();

        $r4 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r3);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", $r4);

     label4:
        if r1 != null goto label5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", "Proxy not attached to service");

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean terminateCall(android.bluetooth.BluetoothDevice, android.bluetooth.BluetoothHeadsetClientCall)
    {
        android.bluetooth.BluetoothHeadsetClient r0;
        android.bluetooth.BluetoothHeadsetClientCall r1;
        android.bluetooth.IBluetoothHeadsetClient r2;
        boolean z0, $z1, $z2;
        android.os.RemoteException $r3;
        java.lang.Throwable $r4;
        java.lang.String $r5;
        android.bluetooth.BluetoothDevice r6;

        r0 := @this: android.bluetooth.BluetoothHeadsetClient;

        r6 := @parameter0: android.bluetooth.BluetoothDevice;

        r1 := @parameter1: android.bluetooth.BluetoothHeadsetClientCall;

        staticinvoke <android.bluetooth.BluetoothHeadsetClient: void log(java.lang.String)>("terminateCall()");

        r2 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient getService()>();

        if r2 == null goto label4;

        $z1 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: boolean isEnabled()>();

        if $z1 == 0 goto label4;

        $z2 = staticinvoke <android.bluetooth.BluetoothHeadsetClient: boolean isValidDevice(android.bluetooth.BluetoothDevice)>(r6);

        if $z2 == 0 goto label4;

     label1:
        z0 = interfaceinvoke r2.<android.bluetooth.IBluetoothHeadsetClient: boolean terminateCall(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHeadsetClientCall)>(r6, r1);

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.Throwable;

        specialinvoke $r4.<java.lang.Throwable: void <init>()>();

        $r5 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r4);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", $r5);

     label4:
        if r2 != null goto label5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", "Proxy not attached to service");

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <android.bluetooth.BluetoothHeadsetClient: boolean VDBG> = 0;

        <android.bluetooth.BluetoothHeadsetClient: java.lang.String TAG> = "BluetoothHeadsetClient";

        <android.bluetooth.BluetoothHeadsetClient: int STATE_AUDIO_DISCONNECTED> = 0;

        <android.bluetooth.BluetoothHeadsetClient: int STATE_AUDIO_CONNECTING> = 1;

        <android.bluetooth.BluetoothHeadsetClient: int STATE_AUDIO_CONNECTED> = 2;

        <android.bluetooth.BluetoothHeadsetClient: java.lang.String EXTRA_VOICE_RECOGNITION> = "android.bluetooth.headsetclient.extra.VOICE_RECOGNITION";

        <android.bluetooth.BluetoothHeadsetClient: java.lang.String EXTRA_VENDOR_ID> = "android.bluetooth.headsetclient.extra.VENDOR_ID";

        <android.bluetooth.BluetoothHeadsetClient: java.lang.String EXTRA_VENDOR_EVENT_FULL_ARGS> = "android.bluetooth.headsetclient.extra.VENDOR_EVENT_FULL_ARGS";

        <android.bluetooth.BluetoothHeadsetClient: java.lang.String EXTRA_VENDOR_EVENT_CODE> = "android.bluetooth.headsetclient.extra.VENDOR_EVENT_CODE";

        <android.bluetooth.BluetoothHeadsetClient: java.lang.String EXTRA_SUBSCRIBER_INFO> = "android.bluetooth.headsetclient.extra.SUBSCRIBER_INFO";

        <android.bluetooth.BluetoothHeadsetClient: java.lang.String EXTRA_RESULT_CODE> = "android.bluetooth.headsetclient.extra.RESULT_CODE";

        <android.bluetooth.BluetoothHeadsetClient: java.lang.String EXTRA_OPERATOR_NAME> = "android.bluetooth.headsetclient.extra.OPERATOR_NAME";

        <android.bluetooth.BluetoothHeadsetClient: java.lang.String EXTRA_NUMBER> = "android.bluetooth.headsetclient.extra.NUMBER";

        <android.bluetooth.BluetoothHeadsetClient: java.lang.String EXTRA_NETWORK_STATUS> = "android.bluetooth.headsetclient.extra.NETWORK_STATUS";

        <android.bluetooth.BluetoothHeadsetClient: java.lang.String EXTRA_NETWORK_SIGNAL_STRENGTH> = "android.bluetooth.headsetclient.extra.NETWORK_SIGNAL_STRENGTH";

        <android.bluetooth.BluetoothHeadsetClient: java.lang.String EXTRA_NETWORK_ROAMING> = "android.bluetooth.headsetclient.extra.NETWORK_ROAMING";

        <android.bluetooth.BluetoothHeadsetClient: java.lang.String EXTRA_IN_BAND_RING> = "android.bluetooth.headsetclient.extra.IN_BAND_RING";

        <android.bluetooth.BluetoothHeadsetClient: java.lang.String EXTRA_CME_CODE> = "android.bluetooth.headsetclient.extra.CME_CODE";

        <android.bluetooth.BluetoothHeadsetClient: java.lang.String EXTRA_CALL> = "android.bluetooth.headsetclient.extra.CALL";

        <android.bluetooth.BluetoothHeadsetClient: java.lang.String EXTRA_BATTERY_LEVEL> = "android.bluetooth.headsetclient.extra.BATTERY_LEVEL";

        <android.bluetooth.BluetoothHeadsetClient: java.lang.String EXTRA_AUDIO_WBS> = "android.bluetooth.headsetclient.extra.AUDIO_WBS";

        <android.bluetooth.BluetoothHeadsetClient: java.lang.String EXTRA_AG_FEATURE_VOICE_RECOGNITION> = "android.bluetooth.headsetclient.extra.EXTRA_AG_FEATURE_VOICE_RECOGNITION";

        <android.bluetooth.BluetoothHeadsetClient: java.lang.String EXTRA_AG_FEATURE_RESPONSE_AND_HOLD> = "android.bluetooth.headsetclient.extra.EXTRA_AG_FEATURE_RESPONSE_AND_HOLD";

        <android.bluetooth.BluetoothHeadsetClient: java.lang.String EXTRA_AG_FEATURE_RELEASE_HELD_OR_WAITING_CALL> = "android.bluetooth.headsetclient.extra.EXTRA_AG_FEATURE_RELEASE_HELD_OR_WAITING_CALL";

        <android.bluetooth.BluetoothHeadsetClient: java.lang.String EXTRA_AG_FEATURE_RELEASE_AND_ACCEPT> = "android.bluetooth.headsetclient.extra.EXTRA_AG_FEATURE_RELEASE_AND_ACCEPT";

        <android.bluetooth.BluetoothHeadsetClient: java.lang.String EXTRA_AG_FEATURE_REJECT_CALL> = "android.bluetooth.headsetclient.extra.EXTRA_AG_FEATURE_REJECT_CALL";

        <android.bluetooth.BluetoothHeadsetClient: java.lang.String EXTRA_AG_FEATURE_MERGE_AND_DETACH> = "android.bluetooth.headsetclient.extra.EXTRA_AG_FEATURE_MERGE_AND_DETACH";

        <android.bluetooth.BluetoothHeadsetClient: java.lang.String EXTRA_AG_FEATURE_MERGE> = "android.bluetooth.headsetclient.extra.EXTRA_AG_FEATURE_MERGE";

        <android.bluetooth.BluetoothHeadsetClient: java.lang.String EXTRA_AG_FEATURE_ECC> = "android.bluetooth.headsetclient.extra.EXTRA_AG_FEATURE_ECC";

        <android.bluetooth.BluetoothHeadsetClient: java.lang.String EXTRA_AG_FEATURE_ATTACH_NUMBER_TO_VT> = "android.bluetooth.headsetclient.extra.EXTRA_AG_FEATURE_ATTACH_NUMBER_TO_VT";

        <android.bluetooth.BluetoothHeadsetClient: java.lang.String EXTRA_AG_FEATURE_ACCEPT_HELD_OR_WAITING_CALL> = "android.bluetooth.headsetclient.extra.EXTRA_AG_FEATURE_ACCEPT_HELD_OR_WAITING_CALL";

        <android.bluetooth.BluetoothHeadsetClient: java.lang.String EXTRA_AG_FEATURE_3WAY_CALLING> = "android.bluetooth.headsetclient.extra.EXTRA_AG_FEATURE_3WAY_CALLING";

        <android.bluetooth.BluetoothHeadsetClient: boolean DBG> = 1;

        <android.bluetooth.BluetoothHeadsetClient: int CME_TEXT_STRING_TOO_LONG> = 24;

        <android.bluetooth.BluetoothHeadsetClient: int CME_SIP_RESPONSE_CODE> = 35;

        <android.bluetooth.BluetoothHeadsetClient: int CME_SIM_WRONG> = 15;

        <android.bluetooth.BluetoothHeadsetClient: int CME_SIM_PUK_REQUIRED> = 12;

        <android.bluetooth.BluetoothHeadsetClient: int CME_SIM_PUK2_REQUIRED> = 18;

        <android.bluetooth.BluetoothHeadsetClient: int CME_SIM_PIN_REQUIRED> = 11;

        <android.bluetooth.BluetoothHeadsetClient: int CME_SIM_PIN2_REQUIRED> = 17;

        <android.bluetooth.BluetoothHeadsetClient: int CME_SIM_NOT_INSERTED> = 10;

        <android.bluetooth.BluetoothHeadsetClient: int CME_SIM_FAILURE> = 13;

        <android.bluetooth.BluetoothHeadsetClient: int CME_SIM_BUSY> = 14;

        <android.bluetooth.BluetoothHeadsetClient: int CME_SERVICE_PROVIDER_PERSONALIZATION_PUK_REQUIRED> = 45;

        <android.bluetooth.BluetoothHeadsetClient: int CME_SERVICE_PROVIDER_PERSONALIZATION_PIN_REQUIRED> = 44;

        <android.bluetooth.BluetoothHeadsetClient: int CME_PHSIM_PIN_REQUIRED> = 5;

        <android.bluetooth.BluetoothHeadsetClient: int CME_PHONE_FAILURE> = 0;

        <android.bluetooth.BluetoothHeadsetClient: int CME_PHFSIM_PUK_REQUIRED> = 7;

        <android.bluetooth.BluetoothHeadsetClient: int CME_PHFSIM_PIN_REQUIRED> = 6;

        <android.bluetooth.BluetoothHeadsetClient: int CME_OPERATION_NOT_SUPPORTED> = 4;

        <android.bluetooth.BluetoothHeadsetClient: int CME_OPERATION_NOT_ALLOWED> = 3;

        <android.bluetooth.BluetoothHeadsetClient: int CME_NO_SIMULTANOUS_VOIP_CS_CALLS> = 33;

        <android.bluetooth.BluetoothHeadsetClient: int CME_NO_NETWORK_SERVICE> = 30;

        <android.bluetooth.BluetoothHeadsetClient: int CME_NO_CONNECTION_TO_PHONE> = 1;

        <android.bluetooth.BluetoothHeadsetClient: int CME_NOT_SUPPORTED_FOR_VOIP> = 34;

        <android.bluetooth.BluetoothHeadsetClient: int CME_NOT_FOUND> = 22;

        <android.bluetooth.BluetoothHeadsetClient: int CME_NETWORK_TIMEOUT> = 31;

        <android.bluetooth.BluetoothHeadsetClient: int CME_NETWORK_SUBSET_PERSONALIZATION_PUK_REQUIRED> = 43;

        <android.bluetooth.BluetoothHeadsetClient: int CME_NETWORK_SUBSET_PERSONALIZATION_PIN_REQUIRED> = 42;

        <android.bluetooth.BluetoothHeadsetClient: int CME_NETWORK_PERSONALIZATION_PUK_REQUIRED> = 41;

        <android.bluetooth.BluetoothHeadsetClient: int CME_NETWORK_PERSONALIZATION_PIN_REQUIRED> = 40;

        <android.bluetooth.BluetoothHeadsetClient: int CME_MEMORY_FULL> = 20;

        <android.bluetooth.BluetoothHeadsetClient: int CME_MEMORY_FAILURE> = 23;

        <android.bluetooth.BluetoothHeadsetClient: int CME_INVALID_INDEX> = 21;

        <android.bluetooth.BluetoothHeadsetClient: int CME_INVALID_CHARACTER_IN_TEXT_STRING> = 25;

        <android.bluetooth.BluetoothHeadsetClient: int CME_INVALID_CHARACTER_IN_DIAL_STRING> = 27;

        <android.bluetooth.BluetoothHeadsetClient: int CME_INCORRECT_PASSWORD> = 16;

        <android.bluetooth.BluetoothHeadsetClient: int CME_INCORRECT_PARAMETERS> = 50;

        <android.bluetooth.BluetoothHeadsetClient: int CME_HIDDEN_KEY_REQUIRED> = 48;

        <android.bluetooth.BluetoothHeadsetClient: int CME_EMERGENCY_SERVICE_ONLY> = 32;

        <android.bluetooth.BluetoothHeadsetClient: int CME_EAP_NOT_SUPPORTED> = 49;

        <android.bluetooth.BluetoothHeadsetClient: int CME_DIAL_STRING_TOO_LONG> = 26;

        <android.bluetooth.BluetoothHeadsetClient: int CME_CORPORATE_PERSONALIZATION_PUK_REQUIRED> = 47;

        <android.bluetooth.BluetoothHeadsetClient: int CME_CORPORATE_PERSONALIZATION_PIN_REQUIRED> = 46;

        <android.bluetooth.BluetoothHeadsetClient: int CALL_ACCEPT_TERMINATE> = 2;

        <android.bluetooth.BluetoothHeadsetClient: int CALL_ACCEPT_NONE> = 0;

        <android.bluetooth.BluetoothHeadsetClient: int CALL_ACCEPT_HOLD> = 1;

        <android.bluetooth.BluetoothHeadsetClient: java.lang.String ACTION_VENDOR_SPECIFIC_HEADSETCLIENT_EVENT> = "android.bluetooth.headsetclient.profile.action.VENDOR_SPECIFIC_EVENT";

        <android.bluetooth.BluetoothHeadsetClient: int ACTION_RESULT_OK> = 0;

        <android.bluetooth.BluetoothHeadsetClient: int ACTION_RESULT_ERROR_NO_CARRIER> = 2;

        <android.bluetooth.BluetoothHeadsetClient: int ACTION_RESULT_ERROR_NO_ANSWER> = 4;

        <android.bluetooth.BluetoothHeadsetClient: int ACTION_RESULT_ERROR_DELAYED> = 5;

        <android.bluetooth.BluetoothHeadsetClient: int ACTION_RESULT_ERROR_CME> = 7;

        <android.bluetooth.BluetoothHeadsetClient: int ACTION_RESULT_ERROR_BUSY> = 3;

        <android.bluetooth.BluetoothHeadsetClient: int ACTION_RESULT_ERROR_BLACKLISTED> = 6;

        <android.bluetooth.BluetoothHeadsetClient: int ACTION_RESULT_ERROR> = 1;

        <android.bluetooth.BluetoothHeadsetClient: java.lang.String ACTION_RESULT> = "android.bluetooth.headsetclient.profile.action.RESULT";

        <android.bluetooth.BluetoothHeadsetClient: java.lang.String ACTION_LAST_VTAG> = "android.bluetooth.headsetclient.profile.action.LAST_VTAG";

        <android.bluetooth.BluetoothHeadsetClient: java.lang.String ACTION_CONNECTION_STATE_CHANGED> = "android.bluetooth.headsetclient.profile.action.CONNECTION_STATE_CHANGED";

        <android.bluetooth.BluetoothHeadsetClient: java.lang.String ACTION_CALL_CHANGED> = "android.bluetooth.headsetclient.profile.action.AG_CALL_CHANGED";

        <android.bluetooth.BluetoothHeadsetClient: java.lang.String ACTION_AUDIO_STATE_CHANGED> = "android.bluetooth.headsetclient.profile.action.AUDIO_STATE_CHANGED";

        <android.bluetooth.BluetoothHeadsetClient: java.lang.String ACTION_AG_EVENT> = "android.bluetooth.headsetclient.profile.action.AG_EVENT";

        return;
    }
}
