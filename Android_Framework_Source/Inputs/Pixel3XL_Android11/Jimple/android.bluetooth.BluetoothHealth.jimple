public final class android.bluetooth.BluetoothHealth extends java.lang.Object implements android.bluetooth.BluetoothProfile
{
    public static final int APP_CONFIG_REGISTRATION_FAILURE;
    public static final int APP_CONFIG_REGISTRATION_SUCCESS;
    public static final int APP_CONFIG_UNREGISTRATION_FAILURE;
    public static final int APP_CONFIG_UNREGISTRATION_SUCCESS;
    public static final int CHANNEL_TYPE_RELIABLE;
    public static final int CHANNEL_TYPE_STREAMING;
    public static final int SINK_ROLE;
    public static final int SOURCE_ROLE;
    public static final int STATE_CHANNEL_CONNECTED;
    public static final int STATE_CHANNEL_CONNECTING;
    public static final int STATE_CHANNEL_DISCONNECTED;
    public static final int STATE_CHANNEL_DISCONNECTING;
    private static final java.lang.String TAG;

    void <init>()
    {
        android.bluetooth.BluetoothHealth r0;

        r0 := @this: android.bluetooth.BluetoothHealth;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean connectChannelToSource(android.bluetooth.BluetoothDevice, android.bluetooth.BluetoothHealthAppConfiguration)
    {
        android.bluetooth.BluetoothHealth r0;
        android.bluetooth.BluetoothDevice r1;
        android.bluetooth.BluetoothHealthAppConfiguration r2;

        r0 := @this: android.bluetooth.BluetoothHealth;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        r2 := @parameter1: android.bluetooth.BluetoothHealthAppConfiguration;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHealth", "connectChannelToSource(): BluetoothHealth is deprecated");

        return 0;
    }

    public boolean disconnectChannel(android.bluetooth.BluetoothDevice, android.bluetooth.BluetoothHealthAppConfiguration, int)
    {
        android.bluetooth.BluetoothHealth r0;
        android.bluetooth.BluetoothDevice r1;
        android.bluetooth.BluetoothHealthAppConfiguration r2;
        int i0;

        r0 := @this: android.bluetooth.BluetoothHealth;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        r2 := @parameter1: android.bluetooth.BluetoothHealthAppConfiguration;

        i0 := @parameter2: int;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHealth", "disconnectChannel(): BluetoothHealth is deprecated");

        return 0;
    }

    public java.util.List getConnectedDevices()
    {
        android.bluetooth.BluetoothHealth r0;
        java.util.ArrayList $r1;

        r0 := @this: android.bluetooth.BluetoothHealth;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHealth", "getConnectedDevices(): BluetoothHealth is deprecated");

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        return $r1;
    }

    public int getConnectionState(android.bluetooth.BluetoothDevice)
    {
        android.bluetooth.BluetoothHealth r0;
        android.bluetooth.BluetoothDevice r1;

        r0 := @this: android.bluetooth.BluetoothHealth;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHealth", "getConnectionState(): BluetoothHealth is deprecated");

        return 0;
    }

    public java.util.List getDevicesMatchingConnectionStates(int[])
    {
        android.bluetooth.BluetoothHealth r0;
        int[] r1;
        java.util.ArrayList $r2;

        r0 := @this: android.bluetooth.BluetoothHealth;

        r1 := @parameter0: int[];

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHealth", "getDevicesMatchingConnectionStates(): BluetoothHealth is deprecated");

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        return $r2;
    }

    public android.os.ParcelFileDescriptor getMainChannelFd(android.bluetooth.BluetoothDevice, android.bluetooth.BluetoothHealthAppConfiguration)
    {
        android.bluetooth.BluetoothHealth r0;
        android.bluetooth.BluetoothDevice r1;
        android.bluetooth.BluetoothHealthAppConfiguration r2;

        r0 := @this: android.bluetooth.BluetoothHealth;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        r2 := @parameter1: android.bluetooth.BluetoothHealthAppConfiguration;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHealth", "getMainChannelFd(): BluetoothHealth is deprecated");

        return null;
    }

    public boolean registerSinkAppConfiguration(java.lang.String, int, android.bluetooth.BluetoothHealthCallback)
    {
        android.bluetooth.BluetoothHealth r0;
        java.lang.String r1;
        int i0;
        android.bluetooth.BluetoothHealthCallback r2;

        r0 := @this: android.bluetooth.BluetoothHealth;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: android.bluetooth.BluetoothHealthCallback;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHealth", "registerSinkAppConfiguration(): BluetoothHealth is deprecated");

        return 0;
    }

    public boolean unregisterAppConfiguration(android.bluetooth.BluetoothHealthAppConfiguration)
    {
        android.bluetooth.BluetoothHealth r0;
        android.bluetooth.BluetoothHealthAppConfiguration r1;

        r0 := @this: android.bluetooth.BluetoothHealth;

        r1 := @parameter0: android.bluetooth.BluetoothHealthAppConfiguration;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHealth", "unregisterAppConfiguration(): BluetoothHealth is deprecated");

        return 0;
    }

    public static void <clinit>()
    {
        <android.bluetooth.BluetoothHealth: java.lang.String TAG> = "BluetoothHealth";

        <android.bluetooth.BluetoothHealth: int STATE_CHANNEL_DISCONNECTING> = 3;

        <android.bluetooth.BluetoothHealth: int STATE_CHANNEL_DISCONNECTED> = 0;

        <android.bluetooth.BluetoothHealth: int STATE_CHANNEL_CONNECTING> = 1;

        <android.bluetooth.BluetoothHealth: int STATE_CHANNEL_CONNECTED> = 2;

        <android.bluetooth.BluetoothHealth: int SOURCE_ROLE> = 1;

        <android.bluetooth.BluetoothHealth: int SINK_ROLE> = 2;

        <android.bluetooth.BluetoothHealth: int CHANNEL_TYPE_STREAMING> = 11;

        <android.bluetooth.BluetoothHealth: int CHANNEL_TYPE_RELIABLE> = 10;

        <android.bluetooth.BluetoothHealth: int APP_CONFIG_UNREGISTRATION_SUCCESS> = 2;

        <android.bluetooth.BluetoothHealth: int APP_CONFIG_UNREGISTRATION_FAILURE> = 3;

        <android.bluetooth.BluetoothHealth: int APP_CONFIG_REGISTRATION_SUCCESS> = 0;

        <android.bluetooth.BluetoothHealth: int APP_CONFIG_REGISTRATION_FAILURE> = 1;

        return;
    }
}
