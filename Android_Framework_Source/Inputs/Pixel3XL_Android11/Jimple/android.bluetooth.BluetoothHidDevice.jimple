public final class android.bluetooth.BluetoothHidDevice extends java.lang.Object implements android.bluetooth.BluetoothProfile
{
    public static final java.lang.String ACTION_CONNECTION_STATE_CHANGED;
    private static final boolean DBG;
    public static final byte ERROR_RSP_INVALID_PARAM;
    public static final byte ERROR_RSP_INVALID_RPT_ID;
    public static final byte ERROR_RSP_NOT_READY;
    public static final byte ERROR_RSP_SUCCESS;
    public static final byte ERROR_RSP_UNKNOWN;
    public static final byte ERROR_RSP_UNSUPPORTED_REQ;
    public static final byte PROTOCOL_BOOT_MODE;
    public static final byte PROTOCOL_REPORT_MODE;
    public static final byte REPORT_TYPE_FEATURE;
    public static final byte REPORT_TYPE_INPUT;
    public static final byte REPORT_TYPE_OUTPUT;
    public static final byte SUBCLASS1_COMBO;
    public static final byte SUBCLASS1_KEYBOARD;
    public static final byte SUBCLASS1_MOUSE;
    public static final byte SUBCLASS1_NONE;
    public static final byte SUBCLASS2_CARD_READER;
    public static final byte SUBCLASS2_DIGITIZER_TABLET;
    public static final byte SUBCLASS2_GAMEPAD;
    public static final byte SUBCLASS2_JOYSTICK;
    public static final byte SUBCLASS2_REMOTE_CONTROL;
    public static final byte SUBCLASS2_SENSING_DEVICE;
    public static final byte SUBCLASS2_UNCATEGORIZED;
    private static final java.lang.String TAG;
    private android.bluetooth.BluetoothAdapter mAdapter;
    private final android.bluetooth.BluetoothProfileConnector mProfileConnector;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        <android.bluetooth.BluetoothHidDevice: byte SUBCLASS2_UNCATEGORIZED> = 0;

        <android.bluetooth.BluetoothHidDevice: byte SUBCLASS2_SENSING_DEVICE> = 4;

        <android.bluetooth.BluetoothHidDevice: byte SUBCLASS2_REMOTE_CONTROL> = 3;

        <android.bluetooth.BluetoothHidDevice: byte SUBCLASS2_JOYSTICK> = 1;

        <android.bluetooth.BluetoothHidDevice: byte SUBCLASS2_GAMEPAD> = 2;

        <android.bluetooth.BluetoothHidDevice: byte SUBCLASS2_DIGITIZER_TABLET> = 5;

        <android.bluetooth.BluetoothHidDevice: byte SUBCLASS2_CARD_READER> = 6;

        <android.bluetooth.BluetoothHidDevice: byte SUBCLASS1_NONE> = 0;

        <android.bluetooth.BluetoothHidDevice: byte SUBCLASS1_MOUSE> = -128;

        <android.bluetooth.BluetoothHidDevice: byte SUBCLASS1_KEYBOARD> = 64;

        <android.bluetooth.BluetoothHidDevice: byte SUBCLASS1_COMBO> = -64;

        <android.bluetooth.BluetoothHidDevice: byte REPORT_TYPE_OUTPUT> = 2;

        <android.bluetooth.BluetoothHidDevice: byte REPORT_TYPE_INPUT> = 1;

        <android.bluetooth.BluetoothHidDevice: byte REPORT_TYPE_FEATURE> = 3;

        <android.bluetooth.BluetoothHidDevice: byte PROTOCOL_REPORT_MODE> = 1;

        <android.bluetooth.BluetoothHidDevice: byte PROTOCOL_BOOT_MODE> = 0;

        <android.bluetooth.BluetoothHidDevice: byte ERROR_RSP_UNSUPPORTED_REQ> = 3;

        <android.bluetooth.BluetoothHidDevice: byte ERROR_RSP_UNKNOWN> = 14;

        <android.bluetooth.BluetoothHidDevice: byte ERROR_RSP_SUCCESS> = 0;

        <android.bluetooth.BluetoothHidDevice: byte ERROR_RSP_NOT_READY> = 1;

        <android.bluetooth.BluetoothHidDevice: byte ERROR_RSP_INVALID_RPT_ID> = 2;

        <android.bluetooth.BluetoothHidDevice: byte ERROR_RSP_INVALID_PARAM> = 4;

        <android.bluetooth.BluetoothHidDevice: boolean DBG> = 0;

        <android.bluetooth.BluetoothHidDevice: java.lang.String ACTION_CONNECTION_STATE_CHANGED> = "android.bluetooth.hiddevice.profile.action.CONNECTION_STATE_CHANGED";

        $r0 = class "Landroid/bluetooth/BluetoothHidDevice;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <android.bluetooth.BluetoothHidDevice: java.lang.String TAG> = $r1;

        return;
    }

    void <init>(android.content.Context, android.bluetooth.BluetoothProfile$ServiceListener)
    {
        android.bluetooth.BluetoothHidDevice r0;
        android.content.Context r1;
        android.bluetooth.BluetoothProfile$ServiceListener r2;
        android.bluetooth.BluetoothHidDevice$1 $r3;
        java.lang.Class $r4;
        java.lang.String $r5;
        android.bluetooth.BluetoothAdapter $r6;
        android.bluetooth.BluetoothProfileConnector $r7;

        r0 := @this: android.bluetooth.BluetoothHidDevice;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.bluetooth.BluetoothProfile$ServiceListener;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new android.bluetooth.BluetoothHidDevice$1;

        $r4 = class "Landroid/bluetooth/IBluetoothHidDevice;";

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        specialinvoke $r3.<android.bluetooth.BluetoothHidDevice$1: void <init>(android.bluetooth.BluetoothHidDevice,android.bluetooth.BluetoothProfile,int,java.lang.String,java.lang.String)>(r0, r0, 19, "BluetoothHidDevice", $r5);

        r0.<android.bluetooth.BluetoothHidDevice: android.bluetooth.BluetoothProfileConnector mProfileConnector> = $r3;

        $r6 = staticinvoke <android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothAdapter getDefaultAdapter()>();

        r0.<android.bluetooth.BluetoothHidDevice: android.bluetooth.BluetoothAdapter mAdapter> = $r6;

        $r7 = r0.<android.bluetooth.BluetoothHidDevice: android.bluetooth.BluetoothProfileConnector mProfileConnector>;

        virtualinvoke $r7.<android.bluetooth.BluetoothProfileConnector: void connect(android.content.Context,android.bluetooth.BluetoothProfile$ServiceListener)>(r1, r2);

        return;
    }

    private android.bluetooth.IBluetoothHidDevice getService()
    {
        android.bluetooth.BluetoothHidDevice r0;
        android.bluetooth.BluetoothProfileConnector $r1;
        java.lang.Object $r2;
        android.bluetooth.IBluetoothHidDevice $r3;

        r0 := @this: android.bluetooth.BluetoothHidDevice;

        $r1 = r0.<android.bluetooth.BluetoothHidDevice: android.bluetooth.BluetoothProfileConnector mProfileConnector>;

        $r2 = virtualinvoke $r1.<android.bluetooth.BluetoothProfileConnector: java.lang.Object getService()>();

        $r3 = (android.bluetooth.IBluetoothHidDevice) $r2;

        return $r3;
    }

    private boolean isEnabled()
    {
        android.bluetooth.BluetoothHidDevice r0;
        android.bluetooth.BluetoothAdapter $r1;
        int $i0;

        r0 := @this: android.bluetooth.BluetoothHidDevice;

        $r1 = r0.<android.bluetooth.BluetoothHidDevice: android.bluetooth.BluetoothAdapter mAdapter>;

        $i0 = virtualinvoke $r1.<android.bluetooth.BluetoothAdapter: int getState()>();

        if $i0 != 12 goto label1;

        return 1;

     label1:
        return 0;
    }

    private boolean isValidDevice(android.bluetooth.BluetoothDevice)
    {
        android.bluetooth.BluetoothHidDevice r0;
        android.bluetooth.BluetoothDevice r1;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: android.bluetooth.BluetoothHidDevice;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        if r1 != null goto label1;

        return 0;

     label1:
        $r2 = virtualinvoke r1.<android.bluetooth.BluetoothDevice: java.lang.String getAddress()>();

        $z0 = staticinvoke <android.bluetooth.BluetoothAdapter: boolean checkBluetoothAddress(java.lang.String)>($r2);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    private static void log(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        return;
    }

    void close()
    {
        android.bluetooth.BluetoothHidDevice r0;
        android.bluetooth.BluetoothProfileConnector $r1;

        r0 := @this: android.bluetooth.BluetoothHidDevice;

        $r1 = r0.<android.bluetooth.BluetoothHidDevice: android.bluetooth.BluetoothProfileConnector mProfileConnector>;

        virtualinvoke $r1.<android.bluetooth.BluetoothProfileConnector: void disconnect()>();

        return;
    }

    public boolean connect(android.bluetooth.BluetoothDevice)
    {
        android.bluetooth.BluetoothHidDevice r0;
        android.bluetooth.IBluetoothHidDevice r1;
        java.lang.String $r2, $r4, $r5;
        android.os.RemoteException $r3;
        android.bluetooth.BluetoothDevice r6;
        boolean z1, z2;

        r0 := @this: android.bluetooth.BluetoothHidDevice;

        r6 := @parameter0: android.bluetooth.BluetoothDevice;

        z1 = 0;

        r1 = specialinvoke r0.<android.bluetooth.BluetoothHidDevice: android.bluetooth.IBluetoothHidDevice getService()>();

        if r1 == null goto label5;

     label1:
        z2 = interfaceinvoke r1.<android.bluetooth.IBluetoothHidDevice: boolean connect(android.bluetooth.BluetoothDevice)>(r6);

     label2:
        z1 = z2;

     label3:
        goto label6;

     label4:
        $r3 := @caughtexception;

        $r4 = <android.bluetooth.BluetoothHidDevice: java.lang.String TAG>;

        $r5 = virtualinvoke $r3.<android.os.RemoteException: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r4, $r5);

        goto label3;

     label5:
        $r2 = <android.bluetooth.BluetoothHidDevice: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r2, "Proxy not attached to service");

        z1 = 0;

     label6:
        return z1;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public boolean disconnect(android.bluetooth.BluetoothDevice)
    {
        android.bluetooth.BluetoothHidDevice r0;
        android.bluetooth.IBluetoothHidDevice r1;
        java.lang.String $r2, $r4, $r5;
        android.os.RemoteException $r3;
        android.bluetooth.BluetoothDevice r6;
        boolean z1, z2;

        r0 := @this: android.bluetooth.BluetoothHidDevice;

        r6 := @parameter0: android.bluetooth.BluetoothDevice;

        z1 = 0;

        r1 = specialinvoke r0.<android.bluetooth.BluetoothHidDevice: android.bluetooth.IBluetoothHidDevice getService()>();

        if r1 == null goto label5;

     label1:
        z2 = interfaceinvoke r1.<android.bluetooth.IBluetoothHidDevice: boolean disconnect(android.bluetooth.BluetoothDevice)>(r6);

     label2:
        z1 = z2;

     label3:
        goto label6;

     label4:
        $r3 := @caughtexception;

        $r4 = <android.bluetooth.BluetoothHidDevice: java.lang.String TAG>;

        $r5 = virtualinvoke $r3.<android.os.RemoteException: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r4, $r5);

        goto label3;

     label5:
        $r2 = <android.bluetooth.BluetoothHidDevice: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r2, "Proxy not attached to service");

        z1 = 0;

     label6:
        return z1;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public java.util.List getConnectedDevices()
    {
        android.bluetooth.BluetoothHidDevice r0;
        java.lang.String $r1, $r4, $r5;
        java.util.ArrayList $r2;
        android.os.RemoteException $r3;
        android.bluetooth.IBluetoothHidDevice r6;
        java.util.List r7;

        r0 := @this: android.bluetooth.BluetoothHidDevice;

        r6 = specialinvoke r0.<android.bluetooth.BluetoothHidDevice: android.bluetooth.IBluetoothHidDevice getService()>();

        if r6 == null goto label4;

     label1:
        r7 = interfaceinvoke r6.<android.bluetooth.IBluetoothHidDevice: java.util.List getConnectedDevices()>();

     label2:
        return r7;

     label3:
        $r3 := @caughtexception;

        $r4 = <android.bluetooth.BluetoothHidDevice: java.lang.String TAG>;

        $r5 = virtualinvoke $r3.<android.os.RemoteException: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r4, $r5);

        goto label5;

     label4:
        $r1 = <android.bluetooth.BluetoothHidDevice: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r1, "Proxy not attached to service");

     label5:
        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        return $r2;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int getConnectionState(android.bluetooth.BluetoothDevice)
    {
        android.bluetooth.BluetoothHidDevice r0;
        android.bluetooth.IBluetoothHidDevice r1;
        int i0;
        java.lang.String $r2, $r4, $r5;
        android.os.RemoteException $r3;
        android.bluetooth.BluetoothDevice r6;

        r0 := @this: android.bluetooth.BluetoothHidDevice;

        r6 := @parameter0: android.bluetooth.BluetoothDevice;

        r1 = specialinvoke r0.<android.bluetooth.BluetoothHidDevice: android.bluetooth.IBluetoothHidDevice getService()>();

        if r1 == null goto label4;

     label1:
        i0 = interfaceinvoke r1.<android.bluetooth.IBluetoothHidDevice: int getConnectionState(android.bluetooth.BluetoothDevice)>(r6);

     label2:
        return i0;

     label3:
        $r3 := @caughtexception;

        $r4 = <android.bluetooth.BluetoothHidDevice: java.lang.String TAG>;

        $r5 = virtualinvoke $r3.<android.os.RemoteException: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r4, $r5);

        goto label5;

     label4:
        $r2 = <android.bluetooth.BluetoothHidDevice: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r2, "Proxy not attached to service");

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.List getDevicesMatchingConnectionStates(int[])
    {
        android.bluetooth.BluetoothHidDevice r0;
        android.bluetooth.IBluetoothHidDevice r1;
        java.lang.String $r2, $r5, $r6;
        java.util.ArrayList $r3;
        android.os.RemoteException $r4;
        int[] r7;
        java.util.List r8;

        r0 := @this: android.bluetooth.BluetoothHidDevice;

        r7 := @parameter0: int[];

        r1 = specialinvoke r0.<android.bluetooth.BluetoothHidDevice: android.bluetooth.IBluetoothHidDevice getService()>();

        if r1 == null goto label4;

     label1:
        r8 = interfaceinvoke r1.<android.bluetooth.IBluetoothHidDevice: java.util.List getDevicesMatchingConnectionStates(int[])>(r7);

     label2:
        return r8;

     label3:
        $r4 := @caughtexception;

        $r5 = <android.bluetooth.BluetoothHidDevice: java.lang.String TAG>;

        $r6 = virtualinvoke $r4.<android.os.RemoteException: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r5, $r6);

        goto label5;

     label4:
        $r2 = <android.bluetooth.BluetoothHidDevice: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r2, "Proxy not attached to service");

     label5:
        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        return $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.lang.String getUserAppName()
    {
        android.bluetooth.BluetoothHidDevice r0;
        java.lang.String $r1, $r3, $r4, r6;
        android.os.RemoteException $r2;
        android.bluetooth.IBluetoothHidDevice r5;

        r0 := @this: android.bluetooth.BluetoothHidDevice;

        r5 = specialinvoke r0.<android.bluetooth.BluetoothHidDevice: android.bluetooth.IBluetoothHidDevice getService()>();

        if r5 == null goto label4;

     label1:
        r6 = interfaceinvoke r5.<android.bluetooth.IBluetoothHidDevice: java.lang.String getUserAppName()>();

     label2:
        return r6;

     label3:
        $r2 := @caughtexception;

        $r3 = <android.bluetooth.BluetoothHidDevice: java.lang.String TAG>;

        $r4 = virtualinvoke $r2.<android.os.RemoteException: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r3, $r4);

        goto label5;

     label4:
        $r1 = <android.bluetooth.BluetoothHidDevice: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r1, "Proxy not attached to service");

     label5:
        return "";

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean registerApp(android.bluetooth.BluetoothHidDeviceAppSdpSettings, android.bluetooth.BluetoothHidDeviceAppQosSettings, android.bluetooth.BluetoothHidDeviceAppQosSettings, java.util.concurrent.Executor, android.bluetooth.BluetoothHidDevice$Callback)
    {
        android.bluetooth.BluetoothHidDevice r0;
        android.bluetooth.BluetoothHidDeviceAppQosSettings r1, r2;
        java.util.concurrent.Executor r3;
        android.bluetooth.BluetoothHidDevice$Callback r4;
        android.bluetooth.IBluetoothHidDevice r5;
        android.bluetooth.BluetoothHidDevice$CallbackWrapper r6;
        java.lang.IllegalArgumentException $r7, $r8, $r9;
        java.lang.String $r10, $r12, $r13;
        android.os.RemoteException $r11;
        android.bluetooth.BluetoothHidDeviceAppSdpSettings r14;
        boolean z1, z2;

        r0 := @this: android.bluetooth.BluetoothHidDevice;

        r14 := @parameter0: android.bluetooth.BluetoothHidDeviceAppSdpSettings;

        r1 := @parameter1: android.bluetooth.BluetoothHidDeviceAppQosSettings;

        r2 := @parameter2: android.bluetooth.BluetoothHidDeviceAppQosSettings;

        r3 := @parameter3: java.util.concurrent.Executor;

        r4 := @parameter4: android.bluetooth.BluetoothHidDevice$Callback;

        z1 = 0;

        if r14 == null goto label9;

        if r3 == null goto label8;

        if r4 == null goto label7;

        r5 = specialinvoke r0.<android.bluetooth.BluetoothHidDevice: android.bluetooth.IBluetoothHidDevice getService()>();

        if r5 == null goto label5;

     label1:
        r6 = new android.bluetooth.BluetoothHidDevice$CallbackWrapper;

        specialinvoke r6.<android.bluetooth.BluetoothHidDevice$CallbackWrapper: void <init>(java.util.concurrent.Executor,android.bluetooth.BluetoothHidDevice$Callback)>(r3, r4);

        z2 = interfaceinvoke r5.<android.bluetooth.IBluetoothHidDevice: boolean registerApp(android.bluetooth.BluetoothHidDeviceAppSdpSettings,android.bluetooth.BluetoothHidDeviceAppQosSettings,android.bluetooth.BluetoothHidDeviceAppQosSettings,android.bluetooth.IBluetoothHidDeviceCallback)>(r14, r1, r2, r6);

     label2:
        z1 = z2;

     label3:
        goto label6;

     label4:
        $r11 := @caughtexception;

        $r12 = <android.bluetooth.BluetoothHidDevice: java.lang.String TAG>;

        $r13 = virtualinvoke $r11.<android.os.RemoteException: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r12, $r13);

        goto label3;

     label5:
        $r10 = <android.bluetooth.BluetoothHidDevice: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r10, "Proxy not attached to service");

        z1 = 0;

     label6:
        return z1;

     label7:
        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("callback parameter cannot be null");

        throw $r9;

     label8:
        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("executor parameter cannot be null");

        throw $r8;

     label9:
        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("sdp parameter cannot be null");

        throw $r7;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public boolean replyReport(android.bluetooth.BluetoothDevice, byte, byte, byte[])
    {
        android.bluetooth.BluetoothHidDevice r0;
        byte b0, b1;
        byte[] r1;
        android.bluetooth.IBluetoothHidDevice r2;
        java.lang.String $r3, $r5, $r6;
        android.os.RemoteException $r4;
        android.bluetooth.BluetoothDevice r7;
        boolean z1, z2;

        r0 := @this: android.bluetooth.BluetoothHidDevice;

        r7 := @parameter0: android.bluetooth.BluetoothDevice;

        b0 := @parameter1: byte;

        b1 := @parameter2: byte;

        r1 := @parameter3: byte[];

        z1 = 0;

        r2 = specialinvoke r0.<android.bluetooth.BluetoothHidDevice: android.bluetooth.IBluetoothHidDevice getService()>();

        if r2 == null goto label5;

     label1:
        z2 = interfaceinvoke r2.<android.bluetooth.IBluetoothHidDevice: boolean replyReport(android.bluetooth.BluetoothDevice,byte,byte,byte[])>(r7, b0, b1, r1);

     label2:
        z1 = z2;

     label3:
        goto label6;

     label4:
        $r4 := @caughtexception;

        $r5 = <android.bluetooth.BluetoothHidDevice: java.lang.String TAG>;

        $r6 = virtualinvoke $r4.<android.os.RemoteException: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r5, $r6);

        goto label3;

     label5:
        $r3 = <android.bluetooth.BluetoothHidDevice: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r3, "Proxy not attached to service");

        z1 = 0;

     label6:
        return z1;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public boolean reportError(android.bluetooth.BluetoothDevice, byte)
    {
        android.bluetooth.BluetoothHidDevice r0;
        byte b0;
        android.bluetooth.IBluetoothHidDevice r1;
        java.lang.String $r2, $r4, $r5;
        android.os.RemoteException $r3;
        android.bluetooth.BluetoothDevice r6;
        boolean z1, z2;

        r0 := @this: android.bluetooth.BluetoothHidDevice;

        r6 := @parameter0: android.bluetooth.BluetoothDevice;

        b0 := @parameter1: byte;

        z1 = 0;

        r1 = specialinvoke r0.<android.bluetooth.BluetoothHidDevice: android.bluetooth.IBluetoothHidDevice getService()>();

        if r1 == null goto label5;

     label1:
        z2 = interfaceinvoke r1.<android.bluetooth.IBluetoothHidDevice: boolean reportError(android.bluetooth.BluetoothDevice,byte)>(r6, b0);

     label2:
        z1 = z2;

     label3:
        goto label6;

     label4:
        $r3 := @caughtexception;

        $r4 = <android.bluetooth.BluetoothHidDevice: java.lang.String TAG>;

        $r5 = virtualinvoke $r3.<android.os.RemoteException: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r4, $r5);

        goto label3;

     label5:
        $r2 = <android.bluetooth.BluetoothHidDevice: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r2, "Proxy not attached to service");

        z1 = 0;

     label6:
        return z1;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public boolean sendReport(android.bluetooth.BluetoothDevice, int, byte[])
    {
        android.bluetooth.BluetoothHidDevice r0;
        int i0;
        byte[] r1;
        android.bluetooth.IBluetoothHidDevice r2;
        java.lang.String $r3, $r5, $r6;
        android.os.RemoteException $r4;
        android.bluetooth.BluetoothDevice r7;
        boolean z1, z2;

        r0 := @this: android.bluetooth.BluetoothHidDevice;

        r7 := @parameter0: android.bluetooth.BluetoothDevice;

        i0 := @parameter1: int;

        r1 := @parameter2: byte[];

        z1 = 0;

        r2 = specialinvoke r0.<android.bluetooth.BluetoothHidDevice: android.bluetooth.IBluetoothHidDevice getService()>();

        if r2 == null goto label5;

     label1:
        z2 = interfaceinvoke r2.<android.bluetooth.IBluetoothHidDevice: boolean sendReport(android.bluetooth.BluetoothDevice,int,byte[])>(r7, i0, r1);

     label2:
        z1 = z2;

     label3:
        goto label6;

     label4:
        $r4 := @caughtexception;

        $r5 = <android.bluetooth.BluetoothHidDevice: java.lang.String TAG>;

        $r6 = virtualinvoke $r4.<android.os.RemoteException: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r5, $r6);

        goto label3;

     label5:
        $r3 = <android.bluetooth.BluetoothHidDevice: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r3, "Proxy not attached to service");

        z1 = 0;

     label6:
        return z1;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public boolean setConnectionPolicy(android.bluetooth.BluetoothDevice, int)
    {
        android.bluetooth.BluetoothHidDevice r0;
        int i0;
        java.lang.StringBuilder $r1, $r10;
        java.lang.String $r7, $r8, $r13, $r15, r20;
        boolean $z0, $z1, $z2;
        android.os.RemoteException $r9;
        java.lang.Throwable $r12;
        android.bluetooth.BluetoothDevice r16;
        android.bluetooth.IBluetoothHidDevice r18;

        r0 := @this: android.bluetooth.BluetoothHidDevice;

        r16 := @parameter0: android.bluetooth.BluetoothDevice;

        i0 := @parameter1: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setConnectionPolicy(");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r16);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r7 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.bluetooth.BluetoothHidDevice: void log(java.lang.String)>($r7);

     label1:
        r18 = specialinvoke r0.<android.bluetooth.BluetoothHidDevice: android.bluetooth.IBluetoothHidDevice getService()>();

     label2:
        if r18 == null goto label6;

     label3:
        $z0 = specialinvoke r0.<android.bluetooth.BluetoothHidDevice: boolean isEnabled()>();

        if $z0 == 0 goto label6;

        $z1 = specialinvoke r0.<android.bluetooth.BluetoothHidDevice: boolean isValidDevice(android.bluetooth.BluetoothDevice)>(r16);

        if $z1 == 0 goto label6;

     label4:
        if i0 == 0 goto label5;

        if i0 == 100 goto label5;

        return 0;

     label5:
        $z2 = interfaceinvoke r18.<android.bluetooth.IBluetoothHidDevice: boolean setConnectionPolicy(android.bluetooth.BluetoothDevice,int)>(r16, i0);

        return $z2;

     label6:
        if r18 != null goto label8;

     label7:
        $r8 = <android.bluetooth.BluetoothHidDevice: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r8, "Proxy not attached to service");

     label8:
        return 0;

     label9:
        $r9 := @caughtexception;

        r20 = <android.bluetooth.BluetoothHidDevice: java.lang.String TAG>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Stack:");

        $r12 = new java.lang.Throwable;

        specialinvoke $r12.<java.lang.Throwable: void <init>()>();

        $r13 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r12);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(r20, $r15);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label9;
        catch android.os.RemoteException from label3 to label4 with label9;
        catch android.os.RemoteException from label5 to label6 with label9;
        catch android.os.RemoteException from label7 to label8 with label9;
    }

    public boolean unregisterApp()
    {
        android.bluetooth.BluetoothHidDevice r0;
        java.lang.String $r1, $r3, $r4;
        android.os.RemoteException $r2;
        boolean z1, z2;
        android.bluetooth.IBluetoothHidDevice r5;

        r0 := @this: android.bluetooth.BluetoothHidDevice;

        z1 = 0;

        r5 = specialinvoke r0.<android.bluetooth.BluetoothHidDevice: android.bluetooth.IBluetoothHidDevice getService()>();

        if r5 == null goto label5;

     label1:
        z2 = interfaceinvoke r5.<android.bluetooth.IBluetoothHidDevice: boolean unregisterApp()>();

     label2:
        z1 = z2;

     label3:
        goto label6;

     label4:
        $r2 := @caughtexception;

        $r3 = <android.bluetooth.BluetoothHidDevice: java.lang.String TAG>;

        $r4 = virtualinvoke $r2.<android.os.RemoteException: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r3, $r4);

        goto label3;

     label5:
        $r1 = <android.bluetooth.BluetoothHidDevice: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r1, "Proxy not attached to service");

        z1 = 0;

     label6:
        return z1;

        catch android.os.RemoteException from label1 to label2 with label4;
    }
}
