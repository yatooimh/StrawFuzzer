public class android.bluetooth.SdpRecord extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    private final byte[] mRawData;
    private final int mRawSize;

    static void <clinit>()
    {
        android.bluetooth.SdpRecord$1 $r0;

        $r0 = new android.bluetooth.SdpRecord$1;

        specialinvoke $r0.<android.bluetooth.SdpRecord$1: void <init>()>();

        <android.bluetooth.SdpRecord: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    public void <init>(int, byte[])
    {
        android.bluetooth.SdpRecord r0;
        int i0;
        byte[] r1;

        r0 := @this: android.bluetooth.SdpRecord;

        i0 := @parameter0: int;

        r1 := @parameter1: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.bluetooth.SdpRecord: byte[] mRawData> = r1;

        r0.<android.bluetooth.SdpRecord: int mRawSize> = i0;

        return;
    }

    public void <init>(android.os.Parcel)
    {
        android.bluetooth.SdpRecord r0;
        android.os.Parcel r1;
        int i0;
        byte[] r2;

        r0 := @this: android.bluetooth.SdpRecord;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.bluetooth.SdpRecord: int mRawSize> = i0;

        r2 = newarray (byte)[i0];

        r0.<android.bluetooth.SdpRecord: byte[] mRawData> = r2;

        virtualinvoke r1.<android.os.Parcel: void readByteArray(byte[])>(r2);

        return;
    }

    public int describeContents()
    {
        android.bluetooth.SdpRecord r0;

        r0 := @this: android.bluetooth.SdpRecord;

        return 0;
    }

    public byte[] getRawData()
    {
        android.bluetooth.SdpRecord r0;
        byte[] $r1;

        r0 := @this: android.bluetooth.SdpRecord;

        $r1 = r0.<android.bluetooth.SdpRecord: byte[] mRawData>;

        return $r1;
    }

    public int getRawSize()
    {
        android.bluetooth.SdpRecord r0;
        int $i0;

        r0 := @this: android.bluetooth.SdpRecord;

        $i0 = r0.<android.bluetooth.SdpRecord: int mRawSize>;

        return $i0;
    }

    public java.lang.String toString()
    {
        android.bluetooth.SdpRecord r0;
        java.lang.StringBuilder $r2;
        byte[] $r4;
        java.lang.String $r5, $r10;
        int $i0;

        r0 := @this: android.bluetooth.SdpRecord;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BluetoothSdpRecord [rawData=");

        $r4 = r0.<android.bluetooth.SdpRecord: byte[] mRawData>;

        $r5 = staticinvoke <java.util.Arrays: java.lang.String toString(byte[])>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", rawSize=");

        $i0 = r0.<android.bluetooth.SdpRecord: int mRawSize>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r10 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.bluetooth.SdpRecord r0;
        android.os.Parcel r1;
        int i0, $i1;
        byte[] $r2;

        r0 := @this: android.bluetooth.SdpRecord;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $i1 = r0.<android.bluetooth.SdpRecord: int mRawSize>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $r2 = r0.<android.bluetooth.SdpRecord: byte[] mRawData>;

        virtualinvoke r1.<android.os.Parcel: void writeByteArray(byte[])>($r2);

        return;
    }
}
