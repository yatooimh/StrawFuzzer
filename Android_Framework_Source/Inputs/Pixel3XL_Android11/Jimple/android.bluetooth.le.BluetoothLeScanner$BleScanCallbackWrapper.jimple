class android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper extends android.bluetooth.le.IScannerCallback$Stub
{
    private static final int REGISTRATION_CALLBACK_TIMEOUT_MILLIS;
    private android.bluetooth.IBluetoothGatt mBluetoothGatt;
    private final java.util.List mFilters;
    private java.util.List mResultStorages;
    private final android.bluetooth.le.ScanCallback mScanCallback;
    private int mScannerId;
    private android.bluetooth.le.ScanSettings mSettings;
    private final android.os.WorkSource mWorkSource;
    final android.bluetooth.le.BluetoothLeScanner this$0;

    public void <init>(android.bluetooth.le.BluetoothLeScanner, android.bluetooth.IBluetoothGatt, java.util.List, android.bluetooth.le.ScanSettings, android.os.WorkSource, android.bluetooth.le.ScanCallback, java.util.List)
    {
        android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper r0;
        android.bluetooth.le.BluetoothLeScanner r1;
        android.bluetooth.IBluetoothGatt r2;
        java.util.List r3, r7;
        android.bluetooth.le.ScanSettings r4;
        android.os.WorkSource r5;
        android.bluetooth.le.ScanCallback r6;

        r0 := @this: android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper;

        r1 := @parameter0: android.bluetooth.le.BluetoothLeScanner;

        r2 := @parameter1: android.bluetooth.IBluetoothGatt;

        r3 := @parameter2: java.util.List;

        r4 := @parameter3: android.bluetooth.le.ScanSettings;

        r5 := @parameter4: android.os.WorkSource;

        r6 := @parameter5: android.bluetooth.le.ScanCallback;

        r7 := @parameter6: java.util.List;

        r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: android.bluetooth.le.BluetoothLeScanner this$0> = r1;

        specialinvoke r0.<android.bluetooth.le.IScannerCallback$Stub: void <init>()>();

        r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: android.bluetooth.IBluetoothGatt mBluetoothGatt> = r2;

        r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: java.util.List mFilters> = r3;

        r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: android.bluetooth.le.ScanSettings mSettings> = r4;

        r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: android.os.WorkSource mWorkSource> = r5;

        r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: android.bluetooth.le.ScanCallback mScanCallback> = r6;

        r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: int mScannerId> = 0;

        r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: java.util.List mResultStorages> = r7;

        return;
    }

    static android.bluetooth.le.ScanCallback access$400(android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper)
    {
        android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper r0;
        android.bluetooth.le.ScanCallback $r1;

        r0 := @parameter0: android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper;

        $r1 = r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: android.bluetooth.le.ScanCallback mScanCallback>;

        return $r1;
    }

    void flushPendingBatchResults()
    {
        android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper r0;
        int $i0, $i1, $i2;
        android.bluetooth.IBluetoothGatt $r1;
        java.lang.String $r4;
        java.lang.Throwable $r5;
        android.os.RemoteException $r6;
        java.lang.StringBuilder r7;

        r0 := @this: android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper;

        entermonitor r0;

     label01:
        $i0 = r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: int mScannerId>;

        if $i0 > 0 goto label03;

        r7 = new java.lang.StringBuilder;

        specialinvoke r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error state, mLeHandle: ");

        $i2 = r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: int mScannerId>;

        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r4 = virtualinvoke r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothLeScanner", $r4);

        exitmonitor r0;

     label02:
        return;

     label03:
        $r1 = r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: android.bluetooth.IBluetoothGatt mBluetoothGatt>;

        $i1 = r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: int mScannerId>;

        interfaceinvoke $r1.<android.bluetooth.IBluetoothGatt: void flushPendingBatchResults(int)>($i1);

     label04:
        goto label07;

     label05:
        $r6 := @caughtexception;

     label06:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BluetoothLeScanner", "Failed to get pending scan results", $r6);

     label07:
        exitmonitor r0;

     label08:
        return;

     label09:
        $r5 := @caughtexception;

     label10:
        exitmonitor r0;

     label11:
        throw $r5;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch android.os.RemoteException from label03 to label04 with label05;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public void onBatchScanResults(java.util.List)
    {
        android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper r0;
        java.util.List r1;
        android.os.Handler $r2;
        android.os.Looper $r3;
        android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper$2 $r4;

        r0 := @this: android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper;

        r1 := @parameter0: java.util.List;

        $r2 = new android.os.Handler;

        $r3 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke $r2.<android.os.Handler: void <init>(android.os.Looper)>($r3);

        $r4 = new android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper$2;

        specialinvoke $r4.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper$2: void <init>(android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper,java.util.List)>(r0, r1);

        virtualinvoke $r2.<android.os.Handler: boolean post(java.lang.Runnable)>($r4);

        return;
    }

    public void onFoundOrLost(boolean, android.bluetooth.le.ScanResult)
    {
        android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper r0;
        boolean z0;
        int $i0;
        android.os.Handler $r1;
        android.os.Looper $r2;
        android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper$3 $r3;
        java.lang.Throwable $r4;
        android.bluetooth.le.ScanResult r5;

        r0 := @this: android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper;

        z0 := @parameter0: boolean;

        r5 := @parameter1: android.bluetooth.le.ScanResult;

        entermonitor r0;

     label1:
        $i0 = r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: int mScannerId>;

        if $i0 > 0 goto label3;

        exitmonitor r0;

     label2:
        return;

     label3:
        exitmonitor r0;

     label4:
        $r1 = new android.os.Handler;

        $r2 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke $r1.<android.os.Handler: void <init>(android.os.Looper)>($r2);

        $r3 = new android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper$3;

        specialinvoke $r3.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper$3: void <init>(android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper,boolean,android.bluetooth.le.ScanResult)>(r0, z0, r5);

        virtualinvoke $r1.<android.os.Handler: boolean post(java.lang.Runnable)>($r3);

        return;

     label5:
        $r4 := @caughtexception;

     label6:
        exitmonitor r0;

     label7:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public void onScanManagerErrorCallback(int)
    {
        android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper r0;
        int i0, $i1;
        android.bluetooth.le.ScanCallback $r2;
        android.bluetooth.le.BluetoothLeScanner $r3;
        java.lang.Throwable $r4;

        r0 := @this: android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper;

        i0 := @parameter0: int;

        entermonitor r0;

     label1:
        $i1 = r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: int mScannerId>;

        if $i1 > 0 goto label3;

        exitmonitor r0;

     label2:
        return;

     label3:
        exitmonitor r0;

     label4:
        $r3 = r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: android.bluetooth.le.BluetoothLeScanner this$0>;

        $r2 = r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: android.bluetooth.le.ScanCallback mScanCallback>;

        staticinvoke <android.bluetooth.le.BluetoothLeScanner: void access$000(android.bluetooth.le.BluetoothLeScanner,android.bluetooth.le.ScanCallback,int)>($r3, $r2, i0);

        return;

     label5:
        $r4 := @caughtexception;

     label6:
        exitmonitor r0;

     label7:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public void onScanResult(android.bluetooth.le.ScanResult)
    {
        android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper r0;
        int $i0;
        android.os.Handler $r1;
        android.os.Looper $r2;
        android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper$1 $r3;
        java.lang.Throwable $r4;
        android.bluetooth.le.ScanResult r5;

        r0 := @this: android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper;

        r5 := @parameter0: android.bluetooth.le.ScanResult;

        entermonitor r0;

     label1:
        $i0 = r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: int mScannerId>;

        if $i0 > 0 goto label3;

        exitmonitor r0;

     label2:
        return;

     label3:
        exitmonitor r0;

     label4:
        $r1 = new android.os.Handler;

        $r2 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke $r1.<android.os.Handler: void <init>(android.os.Looper)>($r2);

        $r3 = new android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper$1;

        specialinvoke $r3.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper$1: void <init>(android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper,android.bluetooth.le.ScanResult)>(r0, r5);

        virtualinvoke $r1.<android.os.Handler: boolean post(java.lang.Runnable)>($r3);

        return;

     label5:
        $r4 := @caughtexception;

     label6:
        exitmonitor r0;

     label7:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public void onScannerRegistered(int, int)
    {
        android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper r0;
        int i0, i1, $i2, $i4;
        java.lang.StringBuilder r1, $r2;
        java.lang.String $r9, $r15, $r17, $r23;
        android.bluetooth.le.BluetoothLeScanner $r10, $r16;
        android.bluetooth.IBluetoothGatt $r11, $r18;
        android.bluetooth.le.ScanSettings $r12;
        java.util.List $r13, $r14;
        java.lang.Throwable $r19;
        android.os.RemoteException $r20;

        r0 := @this: android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onScannerRegistered() - status=");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" scannerId=");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mScannerId=");

        $i2 = r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: int mScannerId>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r9 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("BluetoothLeScanner", $r9);

        entermonitor r0;

        if i0 != 0 goto label09;

     label01:
        $i4 = r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: int mScannerId>;

        if $i4 != -1 goto label03;

        $r18 = r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: android.bluetooth.IBluetoothGatt mBluetoothGatt>;

        interfaceinvoke $r18.<android.bluetooth.IBluetoothGatt: void unregisterScanner(int)>(i1);

     label02:
        goto label04;

     label03:
        r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: int mScannerId> = i1;

        $r11 = r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: android.bluetooth.IBluetoothGatt mBluetoothGatt>;

        $r12 = r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: android.bluetooth.le.ScanSettings mSettings>;

        $r13 = r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: java.util.List mFilters>;

        $r14 = r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: java.util.List mResultStorages>;

        $r10 = r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: android.bluetooth.le.BluetoothLeScanner this$0>;

        $r15 = staticinvoke <android.bluetooth.le.BluetoothLeScanner: java.lang.String access$200(android.bluetooth.le.BluetoothLeScanner)>($r10);

        $r16 = r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: android.bluetooth.le.BluetoothLeScanner this$0>;

        $r17 = staticinvoke <android.bluetooth.le.BluetoothLeScanner: java.lang.String access$300(android.bluetooth.le.BluetoothLeScanner)>($r16);

        interfaceinvoke $r11.<android.bluetooth.IBluetoothGatt: void startScan(int,android.bluetooth.le.ScanSettings,java.util.List,java.util.List,java.lang.String,java.lang.String)>(i1, $r12, $r13, $r14, $r15, $r17);

     label04:
        goto label13;

     label05:
        $r19 := @caughtexception;

        goto label15;

     label06:
        $r20 := @caughtexception;

     label07:
        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("fail to start le scan: ");

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r20);

        $r23 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothLeScanner", $r23);

        r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: int mScannerId> = -1;

     label08:
        goto label04;

     label09:
        if i0 != 6 goto label12;

     label10:
        r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: int mScannerId> = -2;

     label11:
        goto label13;

     label12:
        r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: int mScannerId> = -1;

     label13:
        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

        exitmonitor r0;

     label14:
        return;

     label15:
        exitmonitor r0;

     label16:
        throw $r19;

        catch android.os.RemoteException from label01 to label02 with label06;
        catch java.lang.Throwable from label01 to label02 with label05;
        catch android.os.RemoteException from label03 to label04 with label06;
        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label07 to label08 with label05;
        catch java.lang.Throwable from label10 to label11 with label05;
        catch java.lang.Throwable from label12 to label13 with label05;
        catch java.lang.Throwable from label13 to label14 with label05;
        catch java.lang.Throwable from label15 to label16 with label05;
    }

    public void startRegistration()
    {
        android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper r0;
        int i0, $i1, $i2, $i3, $i4;
        android.os.WorkSource $r1;
        android.bluetooth.IBluetoothGatt $r2;
        android.bluetooth.le.ScanCallback $r3, $r7, $r10;
        android.bluetooth.le.BluetoothLeScanner $r4, $r5, $r11;
        java.util.Map $r6;
        java.lang.Throwable $r9, $r12;

        r0 := @this: android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper;

        entermonitor r0;

     label01:
        $i1 = r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: int mScannerId>;

        if $i1 == -1 goto label15;

        i0 = r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: int mScannerId>;

     label02:
        if i0 != -2 goto label03;

        goto label15;

     label03:
        $r2 = r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: android.bluetooth.IBluetoothGatt mBluetoothGatt>;

        $r1 = r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: android.os.WorkSource mWorkSource>;

        interfaceinvoke $r2.<android.bluetooth.IBluetoothGatt: void registerScanner(android.bluetooth.le.IScannerCallback,android.os.WorkSource)>(r0, $r1);

        virtualinvoke r0.<java.lang.Object: void wait(long)>(2000L);

     label04:
        goto label07;

     label05:
        $r9 := @caughtexception;

     label06:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BluetoothLeScanner", "application registeration exception", $r9);

        $r11 = r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: android.bluetooth.le.BluetoothLeScanner this$0>;

        $r10 = r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: android.bluetooth.le.ScanCallback mScanCallback>;

        staticinvoke <android.bluetooth.le.BluetoothLeScanner: void access$000(android.bluetooth.le.BluetoothLeScanner,android.bluetooth.le.ScanCallback,int)>($r11, $r10, 3);

     label07:
        $i2 = r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: int mScannerId>;

        if $i2 <= 0 goto label09;

        $r5 = r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: android.bluetooth.le.BluetoothLeScanner this$0>;

        $r6 = staticinvoke <android.bluetooth.le.BluetoothLeScanner: java.util.Map access$100(android.bluetooth.le.BluetoothLeScanner)>($r5);

        $r7 = r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: android.bluetooth.le.ScanCallback mScanCallback>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, r0);

     label08:
        goto label13;

     label09:
        $i3 = r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: int mScannerId>;

        if $i3 != 0 goto label10;

        r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: int mScannerId> = -1;

     label10:
        $i4 = r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: int mScannerId>;

        if $i4 != -2 goto label12;

        exitmonitor r0;

     label11:
        return;

     label12:
        $r4 = r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: android.bluetooth.le.BluetoothLeScanner this$0>;

        $r3 = r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: android.bluetooth.le.ScanCallback mScanCallback>;

        staticinvoke <android.bluetooth.le.BluetoothLeScanner: void access$000(android.bluetooth.le.BluetoothLeScanner,android.bluetooth.le.ScanCallback,int)>($r4, $r3, 2);

     label13:
        exitmonitor r0;

     label14:
        return;

     label15:
        exitmonitor r0;

     label16:
        return;

     label17:
        $r12 := @caughtexception;

     label18:
        exitmonitor r0;

     label19:
        throw $r12;

        catch java.lang.Throwable from label01 to label02 with label17;
        catch java.lang.InterruptedException from label03 to label04 with label05;
        catch android.os.RemoteException from label03 to label04 with label05;
        catch java.lang.Throwable from label03 to label04 with label17;
        catch java.lang.Throwable from label06 to label07 with label17;
        catch java.lang.Throwable from label07 to label08 with label17;
        catch java.lang.Throwable from label09 to label10 with label17;
        catch java.lang.Throwable from label10 to label11 with label17;
        catch java.lang.Throwable from label12 to label13 with label17;
        catch java.lang.Throwable from label13 to label14 with label17;
        catch java.lang.Throwable from label15 to label16 with label17;
        catch java.lang.Throwable from label18 to label19 with label17;
    }

    public void stopLeScan()
    {
        android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper r0;
        int $i0, $i1, $i2, $i3;
        android.bluetooth.IBluetoothGatt $r1, $r2;
        java.lang.String $r5;
        android.os.RemoteException $r6;
        java.lang.Throwable $r7;
        java.lang.StringBuilder r8;

        r0 := @this: android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper;

        entermonitor r0;

     label01:
        $i0 = r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: int mScannerId>;

        if $i0 > 0 goto label03;

        r8 = new java.lang.StringBuilder;

        specialinvoke r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error state, mLeHandle: ");

        $i3 = r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: int mScannerId>;

        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r5 = virtualinvoke r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothLeScanner", $r5);

        exitmonitor r0;

     label02:
        return;

     label03:
        $r1 = r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: android.bluetooth.IBluetoothGatt mBluetoothGatt>;

        $i1 = r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: int mScannerId>;

        interfaceinvoke $r1.<android.bluetooth.IBluetoothGatt: void stopScan(int)>($i1);

        $r2 = r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: android.bluetooth.IBluetoothGatt mBluetoothGatt>;

        $i2 = r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: int mScannerId>;

        interfaceinvoke $r2.<android.bluetooth.IBluetoothGatt: void unregisterScanner(int)>($i2);

     label04:
        goto label07;

     label05:
        $r6 := @caughtexception;

     label06:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BluetoothLeScanner", "Failed to stop scan and unregister", $r6);

     label07:
        r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: int mScannerId> = -1;

        exitmonitor r0;

     label08:
        return;

     label09:
        $r7 := @caughtexception;

     label10:
        exitmonitor r0;

     label11:
        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch android.os.RemoteException from label03 to label04 with label05;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public static void <clinit>()
    {
        <android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: int REGISTRATION_CALLBACK_TIMEOUT_MILLIS> = 2000;

        return;
    }
}
