public final class android.bluetooth.le.BluetoothLeScanner extends java.lang.Object
{
    private static final boolean DBG;
    public static final java.lang.String EXTRA_CALLBACK_TYPE;
    public static final java.lang.String EXTRA_ERROR_CODE;
    public static final java.lang.String EXTRA_LIST_SCAN_RESULT;
    private static final java.lang.String TAG;
    private static final boolean VDBG;
    private android.bluetooth.BluetoothAdapter mBluetoothAdapter;
    private final android.bluetooth.IBluetoothManager mBluetoothManager;
    private final java.lang.String mFeatureId;
    private final android.os.Handler mHandler;
    private final java.util.Map mLeScanClients;
    private final java.lang.String mOpPackageName;

    public void <init>(android.bluetooth.IBluetoothManager, java.lang.String, java.lang.String)
    {
        android.bluetooth.le.BluetoothLeScanner r0;
        android.bluetooth.IBluetoothManager r1;
        java.lang.String r2, r3;
        android.bluetooth.BluetoothAdapter $r4;
        android.os.Handler $r5;
        android.os.Looper $r6;
        java.util.HashMap $r7;

        r0 := @this: android.bluetooth.le.BluetoothLeScanner;

        r1 := @parameter0: android.bluetooth.IBluetoothManager;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.bluetooth.le.BluetoothLeScanner: android.bluetooth.IBluetoothManager mBluetoothManager> = r1;

        $r4 = staticinvoke <android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothAdapter getDefaultAdapter()>();

        r0.<android.bluetooth.le.BluetoothLeScanner: android.bluetooth.BluetoothAdapter mBluetoothAdapter> = $r4;

        $r5 = new android.os.Handler;

        $r6 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke $r5.<android.os.Handler: void <init>(android.os.Looper)>($r6);

        r0.<android.bluetooth.le.BluetoothLeScanner: android.os.Handler mHandler> = $r5;

        $r7 = new java.util.HashMap;

        specialinvoke $r7.<java.util.HashMap: void <init>()>();

        r0.<android.bluetooth.le.BluetoothLeScanner: java.util.Map mLeScanClients> = $r7;

        r0.<android.bluetooth.le.BluetoothLeScanner: java.lang.String mOpPackageName> = r2;

        r0.<android.bluetooth.le.BluetoothLeScanner: java.lang.String mFeatureId> = r3;

        return;
    }

    static void access$000(android.bluetooth.le.BluetoothLeScanner, android.bluetooth.le.ScanCallback, int)
    {
        android.bluetooth.le.BluetoothLeScanner r0;
        android.bluetooth.le.ScanCallback r1;
        int i0;

        r0 := @parameter0: android.bluetooth.le.BluetoothLeScanner;

        r1 := @parameter1: android.bluetooth.le.ScanCallback;

        i0 := @parameter2: int;

        specialinvoke r0.<android.bluetooth.le.BluetoothLeScanner: void postCallbackError(android.bluetooth.le.ScanCallback,int)>(r1, i0);

        return;
    }

    static java.util.Map access$100(android.bluetooth.le.BluetoothLeScanner)
    {
        android.bluetooth.le.BluetoothLeScanner r0;
        java.util.Map $r1;

        r0 := @parameter0: android.bluetooth.le.BluetoothLeScanner;

        $r1 = r0.<android.bluetooth.le.BluetoothLeScanner: java.util.Map mLeScanClients>;

        return $r1;
    }

    static java.lang.String access$200(android.bluetooth.le.BluetoothLeScanner)
    {
        android.bluetooth.le.BluetoothLeScanner r0;
        java.lang.String $r1;

        r0 := @parameter0: android.bluetooth.le.BluetoothLeScanner;

        $r1 = r0.<android.bluetooth.le.BluetoothLeScanner: java.lang.String mOpPackageName>;

        return $r1;
    }

    static java.lang.String access$300(android.bluetooth.le.BluetoothLeScanner)
    {
        android.bluetooth.le.BluetoothLeScanner r0;
        java.lang.String $r1;

        r0 := @parameter0: android.bluetooth.le.BluetoothLeScanner;

        $r1 = r0.<android.bluetooth.le.BluetoothLeScanner: java.lang.String mFeatureId>;

        return $r1;
    }

    private boolean isHardwareResourcesAvailableForScan(android.bluetooth.le.ScanSettings)
    {
        android.bluetooth.le.BluetoothLeScanner r0;
        android.bluetooth.le.ScanSettings r1;
        int i0, $i1, $i2;
        android.bluetooth.BluetoothAdapter $r2, $r3;
        boolean $z0, $z1, z2;

        r0 := @this: android.bluetooth.le.BluetoothLeScanner;

        r1 := @parameter0: android.bluetooth.le.ScanSettings;

        i0 = virtualinvoke r1.<android.bluetooth.le.ScanSettings: int getCallbackType()>();

        z2 = 1;

        $i1 = i0 & 2;

        if $i1 != 0 goto label2;

        $i2 = i0 & 4;

        if $i2 == 0 goto label1;

        goto label2;

     label1:
        return 1;

     label2:
        $r2 = r0.<android.bluetooth.le.BluetoothLeScanner: android.bluetooth.BluetoothAdapter mBluetoothAdapter>;

        $z0 = virtualinvoke $r2.<android.bluetooth.BluetoothAdapter: boolean isOffloadedFilteringSupported()>();

        if $z0 == 0 goto label3;

        $r3 = r0.<android.bluetooth.le.BluetoothLeScanner: android.bluetooth.BluetoothAdapter mBluetoothAdapter>;

        $z1 = virtualinvoke $r3.<android.bluetooth.BluetoothAdapter: boolean isHardwareTrackingFiltersAvailable()>();

        if $z1 == 0 goto label3;

        goto label4;

     label3:
        z2 = 0;

     label4:
        return z2;
    }

    private boolean isSettingsAndFilterComboAllowed(android.bluetooth.le.ScanSettings, java.util.List)
    {
        android.bluetooth.le.BluetoothLeScanner r0;
        java.util.List r1;
        int $i0, $i1;
        boolean $z0, $z1;
        java.lang.Object $r2;
        android.bluetooth.le.ScanFilter $r3;
        android.bluetooth.le.ScanSettings r4;
        java.util.Iterator r5;

        r0 := @this: android.bluetooth.le.BluetoothLeScanner;

        r4 := @parameter0: android.bluetooth.le.ScanSettings;

        r1 := @parameter1: java.util.List;

        $i0 = virtualinvoke r4.<android.bluetooth.le.ScanSettings: int getCallbackType()>();

        $i1 = $i0 & 6;

        if $i1 == 0 goto label4;

        if r1 != null goto label1;

        return 0;

     label1:
        r5 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r2 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (android.bluetooth.le.ScanFilter) $r2;

        $z1 = virtualinvoke $r3.<android.bluetooth.le.ScanFilter: boolean isAllFieldsEmpty()>();

        if $z1 == 0 goto label3;

        return 0;

     label3:
        goto label2;

     label4:
        return 1;
    }

    private boolean isSettingsConfigAllowedForScan(android.bluetooth.le.ScanSettings)
    {
        android.bluetooth.le.BluetoothLeScanner r0;
        android.bluetooth.le.ScanSettings r1;
        android.bluetooth.BluetoothAdapter $r2;
        boolean $z0;
        int $i0;
        long $l1;
        byte $b2;

        r0 := @this: android.bluetooth.le.BluetoothLeScanner;

        r1 := @parameter0: android.bluetooth.le.ScanSettings;

        $r2 = r0.<android.bluetooth.le.BluetoothLeScanner: android.bluetooth.BluetoothAdapter mBluetoothAdapter>;

        $z0 = virtualinvoke $r2.<android.bluetooth.BluetoothAdapter: boolean isOffloadedFilteringSupported()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $i0 = virtualinvoke r1.<android.bluetooth.le.ScanSettings: int getCallbackType()>();

        if $i0 != 1 goto label2;

        $l1 = virtualinvoke r1.<android.bluetooth.le.ScanSettings: long getReportDelayMillis()>();

        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    private void postCallbackError(android.bluetooth.le.ScanCallback, int)
    {
        android.bluetooth.le.BluetoothLeScanner r0;
        android.bluetooth.le.ScanCallback r1;
        int i0;
        android.bluetooth.le.BluetoothLeScanner$1 $r2;
        android.os.Handler $r3;

        r0 := @this: android.bluetooth.le.BluetoothLeScanner;

        r1 := @parameter0: android.bluetooth.le.ScanCallback;

        i0 := @parameter1: int;

        $r3 = r0.<android.bluetooth.le.BluetoothLeScanner: android.os.Handler mHandler>;

        $r2 = new android.bluetooth.le.BluetoothLeScanner$1;

        specialinvoke $r2.<android.bluetooth.le.BluetoothLeScanner$1: void <init>(android.bluetooth.le.BluetoothLeScanner,android.bluetooth.le.ScanCallback,int)>(r0, r1, i0);

        virtualinvoke $r3.<android.os.Handler: boolean post(java.lang.Runnable)>($r2);

        return;
    }

    private int postCallbackErrorOrReturn(android.bluetooth.le.ScanCallback, int)
    {
        android.bluetooth.le.BluetoothLeScanner r0;
        android.bluetooth.le.ScanCallback r1;
        int i0;

        r0 := @this: android.bluetooth.le.BluetoothLeScanner;

        r1 := @parameter0: android.bluetooth.le.ScanCallback;

        i0 := @parameter1: int;

        if r1 != null goto label1;

        return i0;

     label1:
        specialinvoke r0.<android.bluetooth.le.BluetoothLeScanner: void postCallbackError(android.bluetooth.le.ScanCallback,int)>(r1, i0);

        return 0;
    }

    private int startScan(java.util.List, android.bluetooth.le.ScanSettings, android.os.WorkSource, android.bluetooth.le.ScanCallback, android.app.PendingIntent, java.util.List)
    {
        android.bluetooth.le.BluetoothLeScanner r0;
        android.bluetooth.le.ScanSettings r1;
        android.os.WorkSource r2;
        android.bluetooth.le.ScanCallback r3;
        java.util.List r4, r17;
        java.util.Map r5, $r11;
        android.bluetooth.BluetoothAdapter $r6;
        java.lang.IllegalArgumentException $r7, $r12;
        android.bluetooth.IBluetoothManager $r8;
        boolean $z0, $z1, $z2, $z3;
        java.lang.String $r9, $r10;
        java.lang.Throwable $r13, $r16, r20;
        android.os.RemoteException $r14, $r15;
        android.app.PendingIntent r18;
        int i0, i1, i2, i3, i4;
        android.bluetooth.IBluetoothGatt r19;
        android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper r22;

        r0 := @this: android.bluetooth.le.BluetoothLeScanner;

        r17 := @parameter0: java.util.List;

        r1 := @parameter1: android.bluetooth.le.ScanSettings;

        r2 := @parameter2: android.os.WorkSource;

        r3 := @parameter3: android.bluetooth.le.ScanCallback;

        r18 := @parameter4: android.app.PendingIntent;

        r4 := @parameter5: java.util.List;

        $r6 = r0.<android.bluetooth.le.BluetoothLeScanner: android.bluetooth.BluetoothAdapter mBluetoothAdapter>;

        staticinvoke <android.bluetooth.le.BluetoothLeUtils: void checkAdapterStateOn(android.bluetooth.BluetoothAdapter)>($r6);

        if r3 != null goto label02;

        if r18 == null goto label01;

        goto label02;

     label01:
        $r12 = new java.lang.IllegalArgumentException;

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("callback is null");

        throw $r12;

     label02:
        if r1 == null goto label30;

        r5 = r0.<android.bluetooth.le.BluetoothLeScanner: java.util.Map mLeScanClients>;

        entermonitor r5;

        if r3 == null goto label05;

     label03:
        $r11 = r0.<android.bluetooth.le.BluetoothLeScanner: java.util.Map mLeScanClients>;

        $z3 = interfaceinvoke $r11.<java.util.Map: boolean containsKey(java.lang.Object)>(r3);

        if $z3 == 0 goto label05;

        i0 = specialinvoke r0.<android.bluetooth.le.BluetoothLeScanner: int postCallbackErrorOrReturn(android.bluetooth.le.ScanCallback,int)>(r3, 1);

        exitmonitor r5;

     label04:
        return i0;

     label05:
        $r8 = r0.<android.bluetooth.le.BluetoothLeScanner: android.bluetooth.IBluetoothManager mBluetoothManager>;

        r19 = interfaceinvoke $r8.<android.bluetooth.IBluetoothManager: android.bluetooth.IBluetoothGatt getBluetoothGatt()>();

     label06:
        goto label09;

     label07:
        $r16 := @caughtexception;

        r20 = $r16;

        goto label27;

     label08:
        $r15 := @caughtexception;

        r19 = null;

     label09:
        if r19 != null goto label12;

     label10:
        i1 = specialinvoke r0.<android.bluetooth.le.BluetoothLeScanner: int postCallbackErrorOrReturn(android.bluetooth.le.ScanCallback,int)>(r3, 3);

        exitmonitor r5;

     label11:
        return i1;

     label12:
        $z0 = specialinvoke r0.<android.bluetooth.le.BluetoothLeScanner: boolean isSettingsConfigAllowedForScan(android.bluetooth.le.ScanSettings)>(r1);

        if $z0 != 0 goto label14;

        i2 = specialinvoke r0.<android.bluetooth.le.BluetoothLeScanner: int postCallbackErrorOrReturn(android.bluetooth.le.ScanCallback,int)>(r3, 4);

        exitmonitor r5;

     label13:
        return i2;

     label14:
        $z1 = specialinvoke r0.<android.bluetooth.le.BluetoothLeScanner: boolean isHardwareResourcesAvailableForScan(android.bluetooth.le.ScanSettings)>(r1);

        if $z1 != 0 goto label16;

        i3 = specialinvoke r0.<android.bluetooth.le.BluetoothLeScanner: int postCallbackErrorOrReturn(android.bluetooth.le.ScanCallback,int)>(r3, 5);

        exitmonitor r5;

     label15:
        return i3;

     label16:
        $z2 = specialinvoke r0.<android.bluetooth.le.BluetoothLeScanner: boolean isSettingsAndFilterComboAllowed(android.bluetooth.le.ScanSettings,java.util.List)>(r1, r17);

        if $z2 != 0 goto label18;

        i4 = specialinvoke r0.<android.bluetooth.le.BluetoothLeScanner: int postCallbackErrorOrReturn(android.bluetooth.le.ScanCallback,int)>(r3, 4);

        exitmonitor r5;

     label17:
        return i4;

     label18:
        if r3 == null goto label21;

     label19:
        r22 = new android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper;

        specialinvoke r22.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: void <init>(android.bluetooth.le.BluetoothLeScanner,android.bluetooth.IBluetoothGatt,java.util.List,android.bluetooth.le.ScanSettings,android.os.WorkSource,android.bluetooth.le.ScanCallback,java.util.List)>(r0, r19, r17, r1, r2, r3, r4);

        virtualinvoke r22.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: void startRegistration()>();

     label20:
        goto label22;

     label21:
        $r10 = r0.<android.bluetooth.le.BluetoothLeScanner: java.lang.String mOpPackageName>;

        $r9 = r0.<android.bluetooth.le.BluetoothLeScanner: java.lang.String mFeatureId>;

        interfaceinvoke r19.<android.bluetooth.IBluetoothGatt: void startScanForIntent(android.app.PendingIntent,android.bluetooth.le.ScanSettings,java.util.List,java.lang.String,java.lang.String)>(r18, r1, r17, $r10, $r9);

     label22:
        exitmonitor r5;

     label23:
        return 0;

     label24:
        $r14 := @caughtexception;

     label25:
        exitmonitor r5;

     label26:
        return 3;

     label27:
        exitmonitor r5;

     label28:
        throw r20;

     label29:
        $r13 := @caughtexception;

        r20 = $r13;

        goto label27;

     label30:
        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("settings is null");

        throw $r7;

        catch java.lang.Throwable from label03 to label04 with label07;
        catch android.os.RemoteException from label05 to label06 with label08;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label10 to label11 with label07;
        catch java.lang.Throwable from label12 to label13 with label07;
        catch java.lang.Throwable from label14 to label15 with label07;
        catch java.lang.Throwable from label16 to label17 with label29;
        catch java.lang.Throwable from label19 to label20 with label29;
        catch android.os.RemoteException from label21 to label22 with label24;
        catch java.lang.Throwable from label21 to label22 with label29;
        catch java.lang.Throwable from label22 to label23 with label29;
        catch java.lang.Throwable from label25 to label26 with label29;
        catch java.lang.Throwable from label27 to label28 with label29;
    }

    public void cleanup()
    {
        android.bluetooth.le.BluetoothLeScanner r0;
        java.util.Map $r1;

        r0 := @this: android.bluetooth.le.BluetoothLeScanner;

        $r1 = r0.<android.bluetooth.le.BluetoothLeScanner: java.util.Map mLeScanClients>;

        interfaceinvoke $r1.<java.util.Map: void clear()>();

        return;
    }

    public void flushPendingScanResults(android.bluetooth.le.ScanCallback)
    {
        android.bluetooth.le.BluetoothLeScanner r0;
        java.util.Map r1, $r4;
        android.bluetooth.BluetoothAdapter $r2;
        java.lang.IllegalArgumentException $r3;
        java.lang.Object $r5;
        java.lang.Throwable $r6;
        android.bluetooth.le.ScanCallback r7;
        android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper r8;

        r0 := @this: android.bluetooth.le.BluetoothLeScanner;

        r7 := @parameter0: android.bluetooth.le.ScanCallback;

        $r2 = r0.<android.bluetooth.le.BluetoothLeScanner: android.bluetooth.BluetoothAdapter mBluetoothAdapter>;

        staticinvoke <android.bluetooth.le.BluetoothLeUtils: void checkAdapterStateOn(android.bluetooth.BluetoothAdapter)>($r2);

        if r7 == null goto label10;

        r1 = r0.<android.bluetooth.le.BluetoothLeScanner: java.util.Map mLeScanClients>;

        entermonitor r1;

     label01:
        $r4 = r0.<android.bluetooth.le.BluetoothLeScanner: java.util.Map mLeScanClients>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r7);

        r8 = (android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper) $r5;

     label02:
        if r8 != null goto label05;

     label03:
        exitmonitor r1;

     label04:
        return;

     label05:
        virtualinvoke r8.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: void flushPendingBatchResults()>();

        exitmonitor r1;

     label06:
        return;

     label07:
        $r6 := @caughtexception;

     label08:
        exitmonitor r1;

     label09:
        throw $r6;

     label10:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("callback cannot be null!");

        throw $r3;

        catch java.lang.Throwable from label01 to label02 with label07;
        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
    }

    public int startScan(java.util.List, android.bluetooth.le.ScanSettings, android.app.PendingIntent)
    {
        android.bluetooth.le.BluetoothLeScanner r0;
        java.util.List r1;
        android.app.PendingIntent r2;
        android.bluetooth.le.ScanSettings$Builder $r3;
        int $i0;
        android.bluetooth.le.ScanSettings r4;

        r0 := @this: android.bluetooth.le.BluetoothLeScanner;

        r1 := @parameter0: java.util.List;

        r4 := @parameter1: android.bluetooth.le.ScanSettings;

        r2 := @parameter2: android.app.PendingIntent;

        if r4 == null goto label1;

        goto label2;

     label1:
        $r3 = new android.bluetooth.le.ScanSettings$Builder;

        specialinvoke $r3.<android.bluetooth.le.ScanSettings$Builder: void <init>()>();

        r4 = virtualinvoke $r3.<android.bluetooth.le.ScanSettings$Builder: android.bluetooth.le.ScanSettings build()>();

     label2:
        $i0 = specialinvoke r0.<android.bluetooth.le.BluetoothLeScanner: int startScan(java.util.List,android.bluetooth.le.ScanSettings,android.os.WorkSource,android.bluetooth.le.ScanCallback,android.app.PendingIntent,java.util.List)>(r1, r4, null, null, r2, null);

        return $i0;
    }

    public void startScan(android.bluetooth.le.ScanCallback)
    {
        android.bluetooth.le.BluetoothLeScanner r0;
        android.bluetooth.le.ScanCallback r1;
        android.bluetooth.le.ScanSettings$Builder $r2;
        android.bluetooth.le.ScanSettings $r3;

        r0 := @this: android.bluetooth.le.BluetoothLeScanner;

        r1 := @parameter0: android.bluetooth.le.ScanCallback;

        $r2 = new android.bluetooth.le.ScanSettings$Builder;

        specialinvoke $r2.<android.bluetooth.le.ScanSettings$Builder: void <init>()>();

        $r3 = virtualinvoke $r2.<android.bluetooth.le.ScanSettings$Builder: android.bluetooth.le.ScanSettings build()>();

        virtualinvoke r0.<android.bluetooth.le.BluetoothLeScanner: void startScan(java.util.List,android.bluetooth.le.ScanSettings,android.bluetooth.le.ScanCallback)>(null, $r3, r1);

        return;
    }

    public void startScan(java.util.List, android.bluetooth.le.ScanSettings, android.bluetooth.le.ScanCallback)
    {
        android.bluetooth.le.BluetoothLeScanner r0;
        java.util.List r1;
        android.bluetooth.le.ScanSettings r2;
        android.bluetooth.le.ScanCallback r3;

        r0 := @this: android.bluetooth.le.BluetoothLeScanner;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: android.bluetooth.le.ScanSettings;

        r3 := @parameter2: android.bluetooth.le.ScanCallback;

        specialinvoke r0.<android.bluetooth.le.BluetoothLeScanner: int startScan(java.util.List,android.bluetooth.le.ScanSettings,android.os.WorkSource,android.bluetooth.le.ScanCallback,android.app.PendingIntent,java.util.List)>(r1, r2, null, r3, null, null);

        return;
    }

    public void startScanFromSource(android.os.WorkSource, android.bluetooth.le.ScanCallback)
    {
        android.bluetooth.le.BluetoothLeScanner r0;
        android.os.WorkSource r1;
        android.bluetooth.le.ScanCallback r2;
        android.bluetooth.le.ScanSettings$Builder $r3;
        android.bluetooth.le.ScanSettings $r4;

        r0 := @this: android.bluetooth.le.BluetoothLeScanner;

        r1 := @parameter0: android.os.WorkSource;

        r2 := @parameter1: android.bluetooth.le.ScanCallback;

        $r3 = new android.bluetooth.le.ScanSettings$Builder;

        specialinvoke $r3.<android.bluetooth.le.ScanSettings$Builder: void <init>()>();

        $r4 = virtualinvoke $r3.<android.bluetooth.le.ScanSettings$Builder: android.bluetooth.le.ScanSettings build()>();

        virtualinvoke r0.<android.bluetooth.le.BluetoothLeScanner: void startScanFromSource(java.util.List,android.bluetooth.le.ScanSettings,android.os.WorkSource,android.bluetooth.le.ScanCallback)>(null, $r4, r1, r2);

        return;
    }

    public void startScanFromSource(java.util.List, android.bluetooth.le.ScanSettings, android.os.WorkSource, android.bluetooth.le.ScanCallback)
    {
        android.bluetooth.le.BluetoothLeScanner r0;
        java.util.List r1;
        android.bluetooth.le.ScanSettings r2;
        android.os.WorkSource r3;
        android.bluetooth.le.ScanCallback r4;

        r0 := @this: android.bluetooth.le.BluetoothLeScanner;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: android.bluetooth.le.ScanSettings;

        r3 := @parameter2: android.os.WorkSource;

        r4 := @parameter3: android.bluetooth.le.ScanCallback;

        specialinvoke r0.<android.bluetooth.le.BluetoothLeScanner: int startScan(java.util.List,android.bluetooth.le.ScanSettings,android.os.WorkSource,android.bluetooth.le.ScanCallback,android.app.PendingIntent,java.util.List)>(r1, r2, r3, r4, null, null);

        return;
    }

    public void startTruncatedScan(java.util.List, android.bluetooth.le.ScanSettings, android.bluetooth.le.ScanCallback)
    {
        android.bluetooth.le.BluetoothLeScanner r0;
        android.bluetooth.le.ScanSettings r1;
        android.bluetooth.le.ScanCallback r2;
        int i0;
        android.bluetooth.le.TruncatedFilter r5;
        java.util.ArrayList $r6, $r7;
        boolean $z0;
        java.lang.Object $r8;
        android.bluetooth.le.ScanFilter $r9;
        java.util.List $r10, r11;
        java.util.Iterator r12;

        r0 := @this: android.bluetooth.le.BluetoothLeScanner;

        r11 := @parameter0: java.util.List;

        r1 := @parameter1: android.bluetooth.le.ScanSettings;

        r2 := @parameter2: android.bluetooth.le.ScanCallback;

        i0 = interfaceinvoke r11.<java.util.List: int size()>();

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>(int)>(i0);

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>(int)>(i0);

        r12 = interfaceinvoke r11.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r8 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>();

        r5 = (android.bluetooth.le.TruncatedFilter) $r8;

        $r9 = virtualinvoke r5.<android.bluetooth.le.TruncatedFilter: android.bluetooth.le.ScanFilter getFilter()>();

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r9);

        $r10 = virtualinvoke r5.<android.bluetooth.le.TruncatedFilter: java.util.List getStorageDescriptors()>();

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r10);

        goto label1;

     label2:
        specialinvoke r0.<android.bluetooth.le.BluetoothLeScanner: int startScan(java.util.List,android.bluetooth.le.ScanSettings,android.os.WorkSource,android.bluetooth.le.ScanCallback,android.app.PendingIntent,java.util.List)>($r6, r1, null, r2, null, $r7);

        return;
    }

    public void stopScan(android.app.PendingIntent)
    {
        android.bluetooth.le.BluetoothLeScanner r0;
        android.bluetooth.BluetoothAdapter $r1;
        android.bluetooth.IBluetoothManager $r2;
        android.bluetooth.IBluetoothGatt $r3;
        java.lang.String $r4;
        android.os.RemoteException $r5;
        android.app.PendingIntent r6;

        r0 := @this: android.bluetooth.le.BluetoothLeScanner;

        r6 := @parameter0: android.app.PendingIntent;

        $r1 = r0.<android.bluetooth.le.BluetoothLeScanner: android.bluetooth.BluetoothAdapter mBluetoothAdapter>;

        staticinvoke <android.bluetooth.le.BluetoothLeUtils: void checkAdapterStateOn(android.bluetooth.BluetoothAdapter)>($r1);

     label1:
        $r2 = r0.<android.bluetooth.le.BluetoothLeScanner: android.bluetooth.IBluetoothManager mBluetoothManager>;

        $r3 = interfaceinvoke $r2.<android.bluetooth.IBluetoothManager: android.bluetooth.IBluetoothGatt getBluetoothGatt()>();

        $r4 = r0.<android.bluetooth.le.BluetoothLeScanner: java.lang.String mOpPackageName>;

        interfaceinvoke $r3.<android.bluetooth.IBluetoothGatt: void stopScanForIntent(android.app.PendingIntent,java.lang.String)>(r6, $r4);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void stopScan(android.bluetooth.le.ScanCallback)
    {
        android.bluetooth.le.BluetoothLeScanner r0;
        java.util.Map r1, $r3;
        android.bluetooth.BluetoothAdapter $r2;
        java.lang.Object $r4;
        java.lang.Throwable $r5;
        android.bluetooth.le.ScanCallback r6;
        android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper r7;

        r0 := @this: android.bluetooth.le.BluetoothLeScanner;

        r6 := @parameter0: android.bluetooth.le.ScanCallback;

        $r2 = r0.<android.bluetooth.le.BluetoothLeScanner: android.bluetooth.BluetoothAdapter mBluetoothAdapter>;

        staticinvoke <android.bluetooth.le.BluetoothLeUtils: void checkAdapterStateOn(android.bluetooth.BluetoothAdapter)>($r2);

        r1 = r0.<android.bluetooth.le.BluetoothLeScanner: java.util.Map mLeScanClients>;

        entermonitor r1;

     label1:
        $r3 = r0.<android.bluetooth.le.BluetoothLeScanner: java.util.Map mLeScanClients>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r6);

        r7 = (android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper) $r4;

     label2:
        if r7 != null goto label5;

     label3:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("BluetoothLeScanner", "could not find callback wrapper");

        exitmonitor r1;

     label4:
        return;

     label5:
        virtualinvoke r7.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: void stopLeScan()>();

        exitmonitor r1;

     label6:
        return;

     label7:
        $r5 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public static void <clinit>()
    {
        <android.bluetooth.le.BluetoothLeScanner: boolean VDBG> = 0;

        <android.bluetooth.le.BluetoothLeScanner: java.lang.String TAG> = "BluetoothLeScanner";

        <android.bluetooth.le.BluetoothLeScanner: java.lang.String EXTRA_LIST_SCAN_RESULT> = "android.bluetooth.le.extra.LIST_SCAN_RESULT";

        <android.bluetooth.le.BluetoothLeScanner: java.lang.String EXTRA_ERROR_CODE> = "android.bluetooth.le.extra.ERROR_CODE";

        <android.bluetooth.le.BluetoothLeScanner: java.lang.String EXTRA_CALLBACK_TYPE> = "android.bluetooth.le.extra.CALLBACK_TYPE";

        <android.bluetooth.le.BluetoothLeScanner: boolean DBG> = 1;

        return;
    }
}
