public final class android.bluetooth.le.PeriodicAdvertisingManager extends java.lang.Object
{
    private static final int SKIP_MAX;
    private static final int SKIP_MIN;
    private static final int SYNC_STARTING;
    private static final java.lang.String TAG;
    private static final int TIMEOUT_MAX;
    private static final int TIMEOUT_MIN;
    private android.bluetooth.BluetoothAdapter mBluetoothAdapter;
    private final android.bluetooth.IBluetoothManager mBluetoothManager;
    java.util.Map mCallbackWrappers;

    public void <init>(android.bluetooth.IBluetoothManager)
    {
        android.bluetooth.le.PeriodicAdvertisingManager r0;
        android.bluetooth.IBluetoothManager r1;
        android.bluetooth.BluetoothAdapter $r2;
        java.util.IdentityHashMap $r3;

        r0 := @this: android.bluetooth.le.PeriodicAdvertisingManager;

        r1 := @parameter0: android.bluetooth.IBluetoothManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.bluetooth.le.PeriodicAdvertisingManager: android.bluetooth.IBluetoothManager mBluetoothManager> = r1;

        $r2 = staticinvoke <android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothAdapter getDefaultAdapter()>();

        r0.<android.bluetooth.le.PeriodicAdvertisingManager: android.bluetooth.BluetoothAdapter mBluetoothAdapter> = $r2;

        $r3 = new java.util.IdentityHashMap;

        specialinvoke $r3.<java.util.IdentityHashMap: void <init>()>();

        r0.<android.bluetooth.le.PeriodicAdvertisingManager: java.util.Map mCallbackWrappers> = $r3;

        return;
    }

    private android.bluetooth.le.IPeriodicAdvertisingCallback wrap(android.bluetooth.le.PeriodicAdvertisingCallback, android.os.Handler)
    {
        android.bluetooth.le.PeriodicAdvertisingManager r0;
        android.bluetooth.le.PeriodicAdvertisingCallback r1;
        android.os.Handler r2;
        android.bluetooth.le.PeriodicAdvertisingManager$1 $r3;

        r0 := @this: android.bluetooth.le.PeriodicAdvertisingManager;

        r1 := @parameter0: android.bluetooth.le.PeriodicAdvertisingCallback;

        r2 := @parameter1: android.os.Handler;

        $r3 = new android.bluetooth.le.PeriodicAdvertisingManager$1;

        specialinvoke $r3.<android.bluetooth.le.PeriodicAdvertisingManager$1: void <init>(android.bluetooth.le.PeriodicAdvertisingManager,android.os.Handler,android.bluetooth.le.PeriodicAdvertisingCallback)>(r0, r2, r1);

        return $r3;
    }

    public void registerSync(android.bluetooth.le.ScanResult, int, int, android.bluetooth.le.PeriodicAdvertisingCallback)
    {
        android.bluetooth.le.PeriodicAdvertisingManager r0;
        android.bluetooth.le.ScanResult r1;
        int i0, i1;
        android.bluetooth.le.PeriodicAdvertisingCallback r2;

        r0 := @this: android.bluetooth.le.PeriodicAdvertisingManager;

        r1 := @parameter0: android.bluetooth.le.ScanResult;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: android.bluetooth.le.PeriodicAdvertisingCallback;

        virtualinvoke r0.<android.bluetooth.le.PeriodicAdvertisingManager: void registerSync(android.bluetooth.le.ScanResult,int,int,android.bluetooth.le.PeriodicAdvertisingCallback,android.os.Handler)>(r1, i0, i1, r2, null);

        return;
    }

    public void registerSync(android.bluetooth.le.ScanResult, int, int, android.bluetooth.le.PeriodicAdvertisingCallback, android.os.Handler)
    {
        android.bluetooth.le.PeriodicAdvertisingManager r0;
        int i0, i1, $i2, $i4;
        android.bluetooth.le.PeriodicAdvertisingCallback r1;
        android.bluetooth.IBluetoothGatt r2;
        java.lang.IllegalArgumentException $r3, $r4, $r5, $r6, $r7;
        android.bluetooth.IBluetoothManager $r8;
        java.util.Map $r9;
        android.os.Handler $r11, r17, r18;
        android.os.Looper $r12;
        android.os.RemoteException $r13, $r15;
        android.bluetooth.BluetoothDevice $r14;
        android.bluetooth.le.ScanResult r16;
        android.bluetooth.le.IPeriodicAdvertisingCallback r19;

        r0 := @this: android.bluetooth.le.PeriodicAdvertisingManager;

        r16 := @parameter0: android.bluetooth.le.ScanResult;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: android.bluetooth.le.PeriodicAdvertisingCallback;

        r17 := @parameter4: android.os.Handler;

        if r1 == null goto label12;

        if r16 == null goto label11;

        $i2 = virtualinvoke r16.<android.bluetooth.le.ScanResult: int getAdvertisingSid()>();

        if $i2 == 255 goto label10;

        if i0 < 0 goto label09;

        if i0 > 499 goto label09;

        if i1 < 10 goto label08;

        if i1 > 16384 goto label08;

     label01:
        $r8 = r0.<android.bluetooth.le.PeriodicAdvertisingManager: android.bluetooth.IBluetoothManager mBluetoothManager>;

        r2 = interfaceinvoke $r8.<android.bluetooth.IBluetoothManager: android.bluetooth.IBluetoothGatt getBluetoothGatt()>();

     label02:
        r18 = r17;

        if r17 != null goto label03;

        $r11 = new android.os.Handler;

        $r12 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke $r11.<android.os.Handler: void <init>(android.os.Looper)>($r12);

        r18 = $r11;

     label03:
        r19 = specialinvoke r0.<android.bluetooth.le.PeriodicAdvertisingManager: android.bluetooth.le.IPeriodicAdvertisingCallback wrap(android.bluetooth.le.PeriodicAdvertisingCallback,android.os.Handler)>(r1, r18);

        $r9 = r0.<android.bluetooth.le.PeriodicAdvertisingManager: java.util.Map mCallbackWrappers>;

        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r19);

     label04:
        interfaceinvoke r2.<android.bluetooth.IBluetoothGatt: void registerSync(android.bluetooth.le.ScanResult,int,int,android.bluetooth.le.IPeriodicAdvertisingCallback)>(r16, i0, i1, r19);

     label05:
        return;

     label06:
        $r15 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("PeriodicAdvertisingManager", "Failed to register sync - ", $r15);

        return;

     label07:
        $r13 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("PeriodicAdvertisingManager", "Failed to get Bluetooth gatt - ", $r13);

        $r14 = virtualinvoke r16.<android.bluetooth.le.ScanResult: android.bluetooth.BluetoothDevice getDevice()>();

        $i4 = virtualinvoke r16.<android.bluetooth.le.ScanResult: int getAdvertisingSid()>();

        virtualinvoke r1.<android.bluetooth.le.PeriodicAdvertisingCallback: void onSyncEstablished(int,android.bluetooth.BluetoothDevice,int,int,int,int)>(0, $r14, $i4, i0, i1, 2);

        return;

     label08:
        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("timeout must be between 10 and 16384");

        throw $r7;

     label09:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("timeout must be between 10 and 16384");

        throw $r6;

     label10:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("scanResult must contain a valid sid");

        throw $r5;

     label11:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("scanResult can\'t be null");

        throw $r4;

     label12:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("callback can\'t be null");

        throw $r3;

        catch android.os.RemoteException from label01 to label02 with label07;
        catch android.os.RemoteException from label04 to label05 with label06;
    }

    public void unregisterSync(android.bluetooth.le.PeriodicAdvertisingCallback)
    {
        android.bluetooth.le.PeriodicAdvertisingManager r0;
        android.bluetooth.IBluetoothGatt r1;
        java.lang.IllegalArgumentException $r2, $r6;
        android.bluetooth.IBluetoothManager $r3;
        java.util.Map $r4;
        java.lang.Object $r5;
        android.os.RemoteException $r7, $r8;
        android.bluetooth.le.PeriodicAdvertisingCallback r9;
        android.bluetooth.le.IPeriodicAdvertisingCallback r10;

        r0 := @this: android.bluetooth.le.PeriodicAdvertisingManager;

        r9 := @parameter0: android.bluetooth.le.PeriodicAdvertisingCallback;

        if r9 == null goto label8;

     label1:
        $r3 = r0.<android.bluetooth.le.PeriodicAdvertisingManager: android.bluetooth.IBluetoothManager mBluetoothManager>;

        r1 = interfaceinvoke $r3.<android.bluetooth.IBluetoothManager: android.bluetooth.IBluetoothGatt getBluetoothGatt()>();

     label2:
        $r4 = r0.<android.bluetooth.le.PeriodicAdvertisingManager: java.util.Map mCallbackWrappers>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r9);

        r10 = (android.bluetooth.le.IPeriodicAdvertisingCallback) $r5;

        if r10 == null goto label6;

     label3:
        interfaceinvoke r1.<android.bluetooth.IBluetoothGatt: void unregisterSync(android.bluetooth.le.IPeriodicAdvertisingCallback)>(r10);

     label4:
        return;

     label5:
        $r7 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("PeriodicAdvertisingManager", "Failed to cancel sync creation - ", $r7);

        return;

     label6:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("callback was not properly registered");

        throw $r6;

     label7:
        $r8 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("PeriodicAdvertisingManager", "Failed to get Bluetooth gatt - ", $r8);

        return;

     label8:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("callback can\'t be null");

        throw $r2;

        catch android.os.RemoteException from label1 to label2 with label7;
        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public static void <clinit>()
    {
        <android.bluetooth.le.PeriodicAdvertisingManager: int TIMEOUT_MIN> = 10;

        <android.bluetooth.le.PeriodicAdvertisingManager: int TIMEOUT_MAX> = 16384;

        <android.bluetooth.le.PeriodicAdvertisingManager: java.lang.String TAG> = "PeriodicAdvertisingManager";

        <android.bluetooth.le.PeriodicAdvertisingManager: int SYNC_STARTING> = -1;

        <android.bluetooth.le.PeriodicAdvertisingManager: int SKIP_MIN> = 0;

        <android.bluetooth.le.PeriodicAdvertisingManager: int SKIP_MAX> = 499;

        return;
    }
}
