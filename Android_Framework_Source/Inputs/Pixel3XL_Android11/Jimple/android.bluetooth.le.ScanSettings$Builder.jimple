public final class android.bluetooth.le.ScanSettings$Builder extends java.lang.Object
{
    private int mCallbackType;
    private boolean mLegacy;
    private int mMatchMode;
    private int mNumOfMatchesPerFilter;
    private int mPhy;
    private long mReportDelayMillis;
    private int mScanMode;
    private int mScanResultType;

    public void <init>()
    {
        android.bluetooth.le.ScanSettings$Builder r0;

        r0 := @this: android.bluetooth.le.ScanSettings$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.bluetooth.le.ScanSettings$Builder: int mScanMode> = 0;

        r0.<android.bluetooth.le.ScanSettings$Builder: int mCallbackType> = 1;

        r0.<android.bluetooth.le.ScanSettings$Builder: int mScanResultType> = 0;

        r0.<android.bluetooth.le.ScanSettings$Builder: long mReportDelayMillis> = 0L;

        r0.<android.bluetooth.le.ScanSettings$Builder: int mMatchMode> = 1;

        r0.<android.bluetooth.le.ScanSettings$Builder: int mNumOfMatchesPerFilter> = 3;

        r0.<android.bluetooth.le.ScanSettings$Builder: boolean mLegacy> = 1;

        r0.<android.bluetooth.le.ScanSettings$Builder: int mPhy> = 255;

        return;
    }

    private boolean isValidCallbackType(int)
    {
        android.bluetooth.le.ScanSettings$Builder r0;
        int i0;
        boolean z0;

        r0 := @this: android.bluetooth.le.ScanSettings$Builder;

        i0 := @parameter0: int;

        z0 = 1;

        if i0 == 1 goto label4;

        if i0 == 2 goto label4;

        if i0 != 4 goto label1;

        goto label4;

     label1:
        if i0 != 6 goto label2;

        goto label3;

     label2:
        z0 = 0;

     label3:
        return z0;

     label4:
        return 1;
    }

    public android.bluetooth.le.ScanSettings build()
    {
        android.bluetooth.le.ScanSettings$Builder r0;
        android.bluetooth.le.ScanSettings $r1;
        int $i0, $i1, $i2, $i4, $i5, $i6;
        boolean $z0;
        long $l3;

        r0 := @this: android.bluetooth.le.ScanSettings$Builder;

        $r1 = new android.bluetooth.le.ScanSettings;

        $i6 = r0.<android.bluetooth.le.ScanSettings$Builder: int mScanMode>;

        $i5 = r0.<android.bluetooth.le.ScanSettings$Builder: int mCallbackType>;

        $i4 = r0.<android.bluetooth.le.ScanSettings$Builder: int mScanResultType>;

        $l3 = r0.<android.bluetooth.le.ScanSettings$Builder: long mReportDelayMillis>;

        $i2 = r0.<android.bluetooth.le.ScanSettings$Builder: int mMatchMode>;

        $i1 = r0.<android.bluetooth.le.ScanSettings$Builder: int mNumOfMatchesPerFilter>;

        $z0 = r0.<android.bluetooth.le.ScanSettings$Builder: boolean mLegacy>;

        $i0 = r0.<android.bluetooth.le.ScanSettings$Builder: int mPhy>;

        specialinvoke $r1.<android.bluetooth.le.ScanSettings: void <init>(int,int,int,long,int,int,boolean,int,android.bluetooth.le.ScanSettings$1)>($i6, $i5, $i4, $l3, $i2, $i1, $z0, $i0, null);

        return $r1;
    }

    public android.bluetooth.le.ScanSettings$Builder setCallbackType(int)
    {
        android.bluetooth.le.ScanSettings$Builder r0;
        int i0;
        boolean $z0;
        java.lang.StringBuilder $r2;
        java.lang.IllegalArgumentException $r5;
        java.lang.String $r6;

        r0 := @this: android.bluetooth.le.ScanSettings$Builder;

        i0 := @parameter0: int;

        $z0 = specialinvoke r0.<android.bluetooth.le.ScanSettings$Builder: boolean isValidCallbackType(int)>(i0);

        if $z0 == 0 goto label1;

        r0.<android.bluetooth.le.ScanSettings$Builder: int mCallbackType> = i0;

        return r0;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid callback type - ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r5;
    }

    public android.bluetooth.le.ScanSettings$Builder setLegacy(boolean)
    {
        android.bluetooth.le.ScanSettings$Builder r0;
        boolean z0;

        r0 := @this: android.bluetooth.le.ScanSettings$Builder;

        z0 := @parameter0: boolean;

        r0.<android.bluetooth.le.ScanSettings$Builder: boolean mLegacy> = z0;

        return r0;
    }

    public android.bluetooth.le.ScanSettings$Builder setMatchMode(int)
    {
        android.bluetooth.le.ScanSettings$Builder r0;
        int i0;
        java.lang.StringBuilder $r2;
        java.lang.IllegalArgumentException $r5;
        java.lang.String $r6;

        r0 := @this: android.bluetooth.le.ScanSettings$Builder;

        i0 := @parameter0: int;

        if i0 < 1 goto label1;

        if i0 > 2 goto label1;

        r0.<android.bluetooth.le.ScanSettings$Builder: int mMatchMode> = i0;

        return r0;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid matchMode ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r5;
    }

    public android.bluetooth.le.ScanSettings$Builder setNumOfMatches(int)
    {
        android.bluetooth.le.ScanSettings$Builder r0;
        int i0;
        java.lang.StringBuilder $r2;
        java.lang.IllegalArgumentException $r5;
        java.lang.String $r6;

        r0 := @this: android.bluetooth.le.ScanSettings$Builder;

        i0 := @parameter0: int;

        if i0 < 1 goto label1;

        if i0 > 3 goto label1;

        r0.<android.bluetooth.le.ScanSettings$Builder: int mNumOfMatchesPerFilter> = i0;

        return r0;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid numOfMatches ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r5;
    }

    public android.bluetooth.le.ScanSettings$Builder setPhy(int)
    {
        android.bluetooth.le.ScanSettings$Builder r0;
        int i0;

        r0 := @this: android.bluetooth.le.ScanSettings$Builder;

        i0 := @parameter0: int;

        r0.<android.bluetooth.le.ScanSettings$Builder: int mPhy> = i0;

        return r0;
    }

    public android.bluetooth.le.ScanSettings$Builder setReportDelay(long)
    {
        android.bluetooth.le.ScanSettings$Builder r0;
        long l0;
        byte $b1;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: android.bluetooth.le.ScanSettings$Builder;

        l0 := @parameter0: long;

        $b1 = l0 cmp 0L;

        if $b1 < 0 goto label1;

        r0.<android.bluetooth.le.ScanSettings$Builder: long mReportDelayMillis> = l0;

        return r0;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("reportDelay must be > 0");

        throw $r1;
    }

    public android.bluetooth.le.ScanSettings$Builder setScanMode(int)
    {
        android.bluetooth.le.ScanSettings$Builder r0;
        int i0;
        java.lang.StringBuilder $r2;
        java.lang.IllegalArgumentException $r5;
        java.lang.String $r6;

        r0 := @this: android.bluetooth.le.ScanSettings$Builder;

        i0 := @parameter0: int;

        if i0 < -1 goto label1;

        if i0 > 2 goto label1;

        r0.<android.bluetooth.le.ScanSettings$Builder: int mScanMode> = i0;

        return r0;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid scan mode ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r5;
    }

    public android.bluetooth.le.ScanSettings$Builder setScanResultType(int)
    {
        android.bluetooth.le.ScanSettings$Builder r0;
        int i0;
        java.lang.StringBuilder $r2;
        java.lang.IllegalArgumentException $r5;
        java.lang.String $r6;

        r0 := @this: android.bluetooth.le.ScanSettings$Builder;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        if i0 > 1 goto label1;

        r0.<android.bluetooth.le.ScanSettings$Builder: int mScanResultType> = i0;

        return r0;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid scanResultType - ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r5;
    }
}
