public final class android.companion.CompanionDeviceManager extends java.lang.Object
{
    public static final java.lang.String COMPANION_DEVICE_DISCOVERY_PACKAGE_NAME;
    private static final boolean DEBUG;
    public static final java.lang.String EXTRA_DEVICE;
    private static final java.lang.String LOG_TAG;
    private final android.content.Context mContext;
    private final android.companion.ICompanionDeviceManager mService;

    public void <init>(android.companion.ICompanionDeviceManager, android.content.Context)
    {
        android.companion.CompanionDeviceManager r0;
        android.companion.ICompanionDeviceManager r1;
        android.content.Context r2;

        r0 := @this: android.companion.CompanionDeviceManager;

        r1 := @parameter0: android.companion.ICompanionDeviceManager;

        r2 := @parameter1: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.companion.CompanionDeviceManager: android.companion.ICompanionDeviceManager mService> = r1;

        r0.<android.companion.CompanionDeviceManager: android.content.Context mContext> = r2;

        return;
    }

    static android.app.Activity access$100(android.companion.CompanionDeviceManager)
    {
        android.companion.CompanionDeviceManager r0;
        android.app.Activity $r1;

        r0 := @parameter0: android.companion.CompanionDeviceManager;

        $r1 = specialinvoke r0.<android.companion.CompanionDeviceManager: android.app.Activity getActivity()>();

        return $r1;
    }

    static java.lang.String access$200(android.companion.CompanionDeviceManager)
    {
        android.companion.CompanionDeviceManager r0;
        java.lang.String $r1;

        r0 := @parameter0: android.companion.CompanionDeviceManager;

        $r1 = specialinvoke r0.<android.companion.CompanionDeviceManager: java.lang.String getCallingPackage()>();

        return $r1;
    }

    static android.companion.ICompanionDeviceManager access$300(android.companion.CompanionDeviceManager)
    {
        android.companion.CompanionDeviceManager r0;
        android.companion.ICompanionDeviceManager $r1;

        r0 := @parameter0: android.companion.CompanionDeviceManager;

        $r1 = r0.<android.companion.CompanionDeviceManager: android.companion.ICompanionDeviceManager mService>;

        return $r1;
    }

    private boolean checkFeaturePresent()
    {
        android.companion.CompanionDeviceManager r0;
        android.companion.ICompanionDeviceManager $r1;
        boolean z0;

        r0 := @this: android.companion.CompanionDeviceManager;

        $r1 = r0.<android.companion.CompanionDeviceManager: android.companion.ICompanionDeviceManager mService>;

        if $r1 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private android.app.Activity getActivity()
    {
        android.companion.CompanionDeviceManager r0;
        android.content.Context $r1;
        android.app.Activity $r2;

        r0 := @this: android.companion.CompanionDeviceManager;

        $r1 = r0.<android.companion.CompanionDeviceManager: android.content.Context mContext>;

        $r2 = (android.app.Activity) $r1;

        return $r2;
    }

    private java.lang.String getCallingPackage()
    {
        android.companion.CompanionDeviceManager r0;
        android.content.Context $r1;
        java.lang.String $r2;

        r0 := @this: android.companion.CompanionDeviceManager;

        $r1 = r0.<android.companion.CompanionDeviceManager: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.String getPackageName()>();

        return $r2;
    }

    public void associate(android.companion.AssociationRequest, android.companion.CompanionDeviceManager$Callback, android.os.Handler)
    {
        android.companion.CompanionDeviceManager r0;
        android.companion.CompanionDeviceManager$Callback r1;
        android.os.Handler r2, $r7;
        android.companion.ICompanionDeviceManager r3;
        android.companion.CompanionDeviceManager$CallbackProxy r4;
        boolean $z0;
        java.lang.String $r8;
        android.os.RemoteException $r9;
        java.lang.RuntimeException $r10;
        android.companion.AssociationRequest r11;

        r0 := @this: android.companion.CompanionDeviceManager;

        r11 := @parameter0: android.companion.AssociationRequest;

        r1 := @parameter1: android.companion.CompanionDeviceManager$Callback;

        r2 := @parameter2: android.os.Handler;

        $z0 = specialinvoke r0.<android.companion.CompanionDeviceManager: boolean checkFeaturePresent()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r11, "Request cannot be null");

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, "Callback cannot be null");

     label2:
        r3 = r0.<android.companion.CompanionDeviceManager: android.companion.ICompanionDeviceManager mService>;

        r4 = new android.companion.CompanionDeviceManager$CallbackProxy;

        $r7 = staticinvoke <android.os.Handler: android.os.Handler mainIfNull(android.os.Handler)>(r2);

        specialinvoke r4.<android.companion.CompanionDeviceManager$CallbackProxy: void <init>(android.companion.CompanionDeviceManager,android.companion.AssociationRequest,android.companion.CompanionDeviceManager$Callback,android.os.Handler,android.companion.CompanionDeviceManager$1)>(r0, r11, r1, $r7, null);

        $r8 = specialinvoke r0.<android.companion.CompanionDeviceManager: java.lang.String getCallingPackage()>();

        interfaceinvoke r3.<android.companion.ICompanionDeviceManager: void associate(android.companion.AssociationRequest,android.companion.IFindDeviceCallback,java.lang.String)>(r11, r4, $r8);

     label3:
        return;

     label4:
        $r9 := @caughtexception;

        $r10 = virtualinvoke $r9.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r10;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    public void disassociate(java.lang.String)
    {
        android.companion.CompanionDeviceManager r0;
        boolean $z0;
        android.companion.ICompanionDeviceManager $r1;
        java.lang.String $r2, r5;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;

        r0 := @this: android.companion.CompanionDeviceManager;

        r5 := @parameter0: java.lang.String;

        $z0 = specialinvoke r0.<android.companion.CompanionDeviceManager: boolean checkFeaturePresent()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = r0.<android.companion.CompanionDeviceManager: android.companion.ICompanionDeviceManager mService>;

        $r2 = specialinvoke r0.<android.companion.CompanionDeviceManager: java.lang.String getCallingPackage()>();

        interfaceinvoke $r1.<android.companion.ICompanionDeviceManager: void disassociate(java.lang.String,java.lang.String)>(r5, $r2);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.List getAssociations()
    {
        android.companion.CompanionDeviceManager r0;
        boolean $z0;
        android.companion.ICompanionDeviceManager $r1;
        java.lang.String $r2;
        android.content.Context $r3;
        int $i0;
        java.util.List $r4, r7;
        android.os.RemoteException $r5;
        java.lang.RuntimeException $r6;

        r0 := @this: android.companion.CompanionDeviceManager;

        $z0 = specialinvoke r0.<android.companion.CompanionDeviceManager: boolean checkFeaturePresent()>();

        if $z0 != 0 goto label1;

        $r4 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r4;

     label1:
        $r1 = r0.<android.companion.CompanionDeviceManager: android.companion.ICompanionDeviceManager mService>;

        $r2 = specialinvoke r0.<android.companion.CompanionDeviceManager: java.lang.String getCallingPackage()>();

        $r3 = r0.<android.companion.CompanionDeviceManager: android.content.Context mContext>;

        $i0 = virtualinvoke $r3.<android.content.Context: int getUserId()>();

        r7 = interfaceinvoke $r1.<android.companion.ICompanionDeviceManager: java.util.List getAssociations(java.lang.String,int)>($r2, $i0);

     label2:
        return r7;

     label3:
        $r5 := @caughtexception;

        $r6 = virtualinvoke $r5.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r6;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean hasNotificationAccess(android.content.ComponentName)
    {
        android.companion.CompanionDeviceManager r0;
        boolean z0, $z1;
        android.companion.ICompanionDeviceManager $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        android.content.ComponentName r4;

        r0 := @this: android.companion.CompanionDeviceManager;

        r4 := @parameter0: android.content.ComponentName;

        $z1 = specialinvoke r0.<android.companion.CompanionDeviceManager: boolean checkFeaturePresent()>();

        if $z1 != 0 goto label1;

        return 0;

     label1:
        $r1 = r0.<android.companion.CompanionDeviceManager: android.companion.ICompanionDeviceManager mService>;

        z0 = interfaceinvoke $r1.<android.companion.ICompanionDeviceManager: boolean hasNotificationAccess(android.content.ComponentName)>(r4);

     label2:
        return z0;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isDeviceAssociatedForWifiConnection(java.lang.String, android.net.MacAddress, android.os.UserHandle)
    {
        android.companion.CompanionDeviceManager r0;
        android.net.MacAddress r1;
        android.os.UserHandle r2;
        boolean z0, $z1;
        android.companion.ICompanionDeviceManager $r6;
        java.lang.String $r7, r10;
        int $i0;
        android.os.RemoteException $r8;
        java.lang.RuntimeException $r9;

        r0 := @this: android.companion.CompanionDeviceManager;

        r10 := @parameter0: java.lang.String;

        r1 := @parameter1: android.net.MacAddress;

        r2 := @parameter2: android.os.UserHandle;

        $z1 = specialinvoke r0.<android.companion.CompanionDeviceManager: boolean checkFeaturePresent()>();

        if $z1 != 0 goto label1;

        return 0;

     label1:
        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r10, "package name cannot be null");

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, "mac address cannot be null");

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r2, "user cannot be null");

     label2:
        $r6 = r0.<android.companion.CompanionDeviceManager: android.companion.ICompanionDeviceManager mService>;

        $r7 = virtualinvoke r1.<android.net.MacAddress: java.lang.String toString()>();

        $i0 = virtualinvoke r2.<android.os.UserHandle: int getIdentifier()>();

        z0 = interfaceinvoke $r6.<android.companion.ICompanionDeviceManager: boolean isDeviceAssociatedForWifiConnection(java.lang.String,java.lang.String,int)>(r10, $r7, $i0);

     label3:
        return z0;

     label4:
        $r8 := @caughtexception;

        $r9 = virtualinvoke $r8.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r9;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    public void requestNotificationAccess(android.content.ComponentName)
    {
        android.companion.CompanionDeviceManager r0;
        boolean $z0;
        android.companion.ICompanionDeviceManager $r1;
        android.app.PendingIntent $r2;
        android.content.Context $r3;
        android.content.IntentSender$SendIntentException $r4;
        java.lang.RuntimeException $r5, $r7;
        android.os.RemoteException $r6;
        android.content.ComponentName r8;
        android.content.IntentSender r9;

        r0 := @this: android.companion.CompanionDeviceManager;

        r8 := @parameter0: android.content.ComponentName;

        $z0 = specialinvoke r0.<android.companion.CompanionDeviceManager: boolean checkFeaturePresent()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = r0.<android.companion.CompanionDeviceManager: android.companion.ICompanionDeviceManager mService>;

        $r2 = interfaceinvoke $r1.<android.companion.ICompanionDeviceManager: android.app.PendingIntent requestNotificationAccess(android.content.ComponentName)>(r8);

        r9 = virtualinvoke $r2.<android.app.PendingIntent: android.content.IntentSender getIntentSender()>();

        $r3 = r0.<android.companion.CompanionDeviceManager: android.content.Context mContext>;

        virtualinvoke $r3.<android.content.Context: void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int)>(r9, null, 0, 0, 0);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r4);

        throw $r5;

     label4:
        $r6 := @caughtexception;

        $r7 = virtualinvoke $r6.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r7;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch android.content.IntentSender$SendIntentException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <android.companion.CompanionDeviceManager: java.lang.String LOG_TAG> = "CompanionDeviceManager";

        <android.companion.CompanionDeviceManager: java.lang.String EXTRA_DEVICE> = "android.companion.extra.DEVICE";

        <android.companion.CompanionDeviceManager: boolean DEBUG> = 0;

        <android.companion.CompanionDeviceManager: java.lang.String COMPANION_DEVICE_DISCOVERY_PACKAGE_NAME> = "com.android.companiondevicemanager";

        return;
    }
}
