public final class android.companion.WifiDeviceFilter$Builder extends java.lang.Object
{
    private android.net.MacAddress mBssid;
    private android.net.MacAddress mBssidMask;
    private long mBuilderFieldsSet;
    private java.util.regex.Pattern mNamePattern;

    public void <init>()
    {
        android.companion.WifiDeviceFilter$Builder r0;

        r0 := @this: android.companion.WifiDeviceFilter$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.companion.WifiDeviceFilter$Builder: long mBuilderFieldsSet> = 0L;

        return;
    }

    private void checkNotUsed()
    {
        android.companion.WifiDeviceFilter$Builder r0;
        long $l0, $l1;
        byte $b2;
        java.lang.IllegalStateException $r1;

        r0 := @this: android.companion.WifiDeviceFilter$Builder;

        $l0 = r0.<android.companion.WifiDeviceFilter$Builder: long mBuilderFieldsSet>;

        $l1 = $l0 & 8L;

        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label1;

        return;

     label1:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This Builder should not be reused. Use a new Builder instance instead");

        throw $r1;
    }

    public android.companion.WifiDeviceFilter build()
    {
        android.companion.WifiDeviceFilter$Builder r0;
        long l0, $l1, $l2, $l4, $l5, $l7, $l8;
        byte $b3, $b6, $b9;
        android.companion.WifiDeviceFilter $r1;
        android.net.MacAddress $r2, $r3, $r5;
        java.util.regex.Pattern $r4;

        r0 := @this: android.companion.WifiDeviceFilter$Builder;

        specialinvoke r0.<android.companion.WifiDeviceFilter$Builder: void checkNotUsed()>();

        $l1 = r0.<android.companion.WifiDeviceFilter$Builder: long mBuilderFieldsSet>;

        l0 = $l1 | 8L;

        r0.<android.companion.WifiDeviceFilter$Builder: long mBuilderFieldsSet> = l0;

        $l2 = l0 & 1L;

        $b3 = $l2 cmp 0L;

        if $b3 != 0 goto label1;

        r0.<android.companion.WifiDeviceFilter$Builder: java.util.regex.Pattern mNamePattern> = null;

     label1:
        $l4 = r0.<android.companion.WifiDeviceFilter$Builder: long mBuilderFieldsSet>;

        $l5 = $l4 & 2L;

        $b6 = $l5 cmp 0L;

        if $b6 != 0 goto label2;

        r0.<android.companion.WifiDeviceFilter$Builder: android.net.MacAddress mBssid> = null;

     label2:
        $l7 = r0.<android.companion.WifiDeviceFilter$Builder: long mBuilderFieldsSet>;

        $l8 = $l7 & 4L;

        $b9 = $l8 cmp 0L;

        if $b9 != 0 goto label3;

        $r5 = <android.net.MacAddress: android.net.MacAddress BROADCAST_ADDRESS>;

        r0.<android.companion.WifiDeviceFilter$Builder: android.net.MacAddress mBssidMask> = $r5;

     label3:
        $r1 = new android.companion.WifiDeviceFilter;

        $r4 = r0.<android.companion.WifiDeviceFilter$Builder: java.util.regex.Pattern mNamePattern>;

        $r3 = r0.<android.companion.WifiDeviceFilter$Builder: android.net.MacAddress mBssid>;

        $r2 = r0.<android.companion.WifiDeviceFilter$Builder: android.net.MacAddress mBssidMask>;

        specialinvoke $r1.<android.companion.WifiDeviceFilter: void <init>(java.util.regex.Pattern,android.net.MacAddress,android.net.MacAddress)>($r4, $r3, $r2);

        return $r1;
    }

    public android.companion.WifiDeviceFilter$Builder setBssid(android.net.MacAddress)
    {
        android.companion.WifiDeviceFilter$Builder r0;
        android.net.MacAddress r1;
        long $l0, $l1;

        r0 := @this: android.companion.WifiDeviceFilter$Builder;

        r1 := @parameter0: android.net.MacAddress;

        specialinvoke r0.<android.companion.WifiDeviceFilter$Builder: void checkNotUsed()>();

        $l0 = r0.<android.companion.WifiDeviceFilter$Builder: long mBuilderFieldsSet>;

        $l1 = $l0 | 2L;

        r0.<android.companion.WifiDeviceFilter$Builder: long mBuilderFieldsSet> = $l1;

        r0.<android.companion.WifiDeviceFilter$Builder: android.net.MacAddress mBssid> = r1;

        return r0;
    }

    public android.companion.WifiDeviceFilter$Builder setBssidMask(android.net.MacAddress)
    {
        android.companion.WifiDeviceFilter$Builder r0;
        android.net.MacAddress r1;
        long $l0, $l1;

        r0 := @this: android.companion.WifiDeviceFilter$Builder;

        r1 := @parameter0: android.net.MacAddress;

        specialinvoke r0.<android.companion.WifiDeviceFilter$Builder: void checkNotUsed()>();

        $l0 = r0.<android.companion.WifiDeviceFilter$Builder: long mBuilderFieldsSet>;

        $l1 = $l0 | 4L;

        r0.<android.companion.WifiDeviceFilter$Builder: long mBuilderFieldsSet> = $l1;

        r0.<android.companion.WifiDeviceFilter$Builder: android.net.MacAddress mBssidMask> = r1;

        return r0;
    }

    public android.companion.WifiDeviceFilter$Builder setNamePattern(java.util.regex.Pattern)
    {
        android.companion.WifiDeviceFilter$Builder r0;
        java.util.regex.Pattern r1;
        long $l0, $l1;

        r0 := @this: android.companion.WifiDeviceFilter$Builder;

        r1 := @parameter0: java.util.regex.Pattern;

        specialinvoke r0.<android.companion.WifiDeviceFilter$Builder: void checkNotUsed()>();

        $l0 = r0.<android.companion.WifiDeviceFilter$Builder: long mBuilderFieldsSet>;

        $l1 = $l0 | 1L;

        r0.<android.companion.WifiDeviceFilter$Builder: long mBuilderFieldsSet> = $l1;

        r0.<android.companion.WifiDeviceFilter$Builder: java.util.regex.Pattern mNamePattern> = r1;

        return r0;
    }
}
