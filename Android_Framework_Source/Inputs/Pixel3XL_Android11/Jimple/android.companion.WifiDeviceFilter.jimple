public final class android.companion.WifiDeviceFilter extends java.lang.Object implements android.companion.DeviceFilter
{
    public static final android.os.Parcelable$Creator CREATOR;
    static com.android.internal.util.Parcelling sParcellingForNamePattern;
    private android.net.MacAddress mBssid;
    private android.net.MacAddress mBssidMask;
    private java.util.regex.Pattern mNamePattern;

    static void <clinit>()
    {
        com.android.internal.util.Parcelling r0, $r3;
        android.companion.WifiDeviceFilter$1 $r1;
        com.android.internal.util.Parcelling$BuiltIn$ForPattern $r2;

        r0 = staticinvoke <com.android.internal.util.Parcelling$Cache: com.android.internal.util.Parcelling get(java.lang.Class)>(class "Lcom/android/internal/util/Parcelling$BuiltIn$ForPattern;");

        <android.companion.WifiDeviceFilter: com.android.internal.util.Parcelling sParcellingForNamePattern> = r0;

        if r0 != null goto label1;

        $r2 = new com.android.internal.util.Parcelling$BuiltIn$ForPattern;

        specialinvoke $r2.<com.android.internal.util.Parcelling$BuiltIn$ForPattern: void <init>()>();

        $r3 = staticinvoke <com.android.internal.util.Parcelling$Cache: com.android.internal.util.Parcelling put(com.android.internal.util.Parcelling)>($r2);

        <android.companion.WifiDeviceFilter: com.android.internal.util.Parcelling sParcellingForNamePattern> = $r3;

     label1:
        $r1 = new android.companion.WifiDeviceFilter$1;

        specialinvoke $r1.<android.companion.WifiDeviceFilter$1: void <init>()>();

        <android.companion.WifiDeviceFilter: android.os.Parcelable$Creator CREATOR> = $r1;

        return;
    }

    void <init>(android.os.Parcel)
    {
        android.companion.WifiDeviceFilter r0;
        byte b0, $b1;
        java.util.regex.Pattern r1;
        android.net.MacAddress $r2, r10, r11;
        com.android.internal.util.Parcelling $r3;
        java.lang.Object $r4, $r6, $r8;
        android.os.Parcelable$Creator $r5, $r7;
        android.os.Parcel r9;

        r0 := @this: android.companion.WifiDeviceFilter;

        r9 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.companion.WifiDeviceFilter: java.util.regex.Pattern mNamePattern> = null;

        r0.<android.companion.WifiDeviceFilter: android.net.MacAddress mBssid> = null;

        $r2 = <android.net.MacAddress: android.net.MacAddress BROADCAST_ADDRESS>;

        r0.<android.companion.WifiDeviceFilter: android.net.MacAddress mBssidMask> = $r2;

        b0 = virtualinvoke r9.<android.os.Parcel: byte readByte()>();

        $r3 = <android.companion.WifiDeviceFilter: com.android.internal.util.Parcelling sParcellingForNamePattern>;

        $r4 = interfaceinvoke $r3.<com.android.internal.util.Parcelling: java.lang.Object unparcel(android.os.Parcel)>(r9);

        r1 = (java.util.regex.Pattern) $r4;

        $b1 = b0 & 2;

        if $b1 != 0 goto label1;

        r10 = null;

        goto label2;

     label1:
        $r5 = <android.net.MacAddress: android.os.Parcelable$Creator CREATOR>;

        $r6 = virtualinvoke r9.<android.os.Parcel: java.lang.Object readTypedObject(android.os.Parcelable$Creator)>($r5);

        r10 = (android.net.MacAddress) $r6;

     label2:
        $r7 = <android.net.MacAddress: android.os.Parcelable$Creator CREATOR>;

        $r8 = virtualinvoke r9.<android.os.Parcel: java.lang.Object readTypedObject(android.os.Parcelable$Creator)>($r7);

        r11 = (android.net.MacAddress) $r8;

        r0.<android.companion.WifiDeviceFilter: java.util.regex.Pattern mNamePattern> = r1;

        r0.<android.companion.WifiDeviceFilter: android.net.MacAddress mBssid> = r10;

        r0.<android.companion.WifiDeviceFilter: android.net.MacAddress mBssidMask> = r11;

        staticinvoke <com.android.internal.util.AnnotationValidations: void validate(java.lang.Class,android.'annotation'.NonNull,java.lang.Object)>(class "Landroid/annotation/NonNull;", null, r11);

        return;
    }

    void <init>(java.util.regex.Pattern, android.net.MacAddress, android.net.MacAddress)
    {
        android.companion.WifiDeviceFilter r0;
        java.util.regex.Pattern r1;
        android.net.MacAddress r2, r3, $r4;

        r0 := @this: android.companion.WifiDeviceFilter;

        r1 := @parameter0: java.util.regex.Pattern;

        r2 := @parameter1: android.net.MacAddress;

        r3 := @parameter2: android.net.MacAddress;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.companion.WifiDeviceFilter: java.util.regex.Pattern mNamePattern> = null;

        r0.<android.companion.WifiDeviceFilter: android.net.MacAddress mBssid> = null;

        $r4 = <android.net.MacAddress: android.net.MacAddress BROADCAST_ADDRESS>;

        r0.<android.companion.WifiDeviceFilter: android.net.MacAddress mBssidMask> = $r4;

        r0.<android.companion.WifiDeviceFilter: java.util.regex.Pattern mNamePattern> = r1;

        r0.<android.companion.WifiDeviceFilter: android.net.MacAddress mBssid> = r2;

        r0.<android.companion.WifiDeviceFilter: android.net.MacAddress mBssidMask> = r3;

        staticinvoke <com.android.internal.util.AnnotationValidations: void validate(java.lang.Class,android.'annotation'.NonNull,java.lang.Object)>(class "Landroid/annotation/NonNull;", null, r3);

        return;
    }

    private void __metadata()
    {
        android.companion.WifiDeviceFilter r0;

        r0 := @this: android.companion.WifiDeviceFilter;

        return;
    }

    public int describeContents()
    {
        android.companion.WifiDeviceFilter r0;

        r0 := @this: android.companion.WifiDeviceFilter;

        return 0;
    }

    public boolean equals(java.lang.Object)
    {
        android.companion.WifiDeviceFilter r0, r10;
        java.lang.Class $r1, $r2;
        java.util.regex.Pattern $r3, $r4;
        boolean $z0, $z1, $z2, z3;
        android.net.MacAddress $r5, $r6, $r7, $r8;
        java.lang.Object r9;

        r0 := @this: android.companion.WifiDeviceFilter;

        r9 := @parameter0: java.lang.Object;

        z3 = 1;

        if r0 != r9 goto label1;

        return 1;

     label1:
        if r9 == null goto label5;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke r9.<java.lang.Object: java.lang.Class getClass()>();

        if $r1 == $r2 goto label2;

        goto label5;

     label2:
        r10 = (android.companion.WifiDeviceFilter) r9;

        $r4 = r0.<android.companion.WifiDeviceFilter: java.util.regex.Pattern mNamePattern>;

        $r3 = r10.<android.companion.WifiDeviceFilter: java.util.regex.Pattern mNamePattern>;

        $z0 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r4, $r3);

        if $z0 == 0 goto label3;

        $r6 = r0.<android.companion.WifiDeviceFilter: android.net.MacAddress mBssid>;

        $r5 = r10.<android.companion.WifiDeviceFilter: android.net.MacAddress mBssid>;

        $z1 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r6, $r5);

        if $z1 == 0 goto label3;

        $r8 = r0.<android.companion.WifiDeviceFilter: android.net.MacAddress mBssidMask>;

        $r7 = r10.<android.companion.WifiDeviceFilter: android.net.MacAddress mBssidMask>;

        $z2 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r8, $r7);

        if $z2 == 0 goto label3;

        goto label4;

     label3:
        z3 = 0;

     label4:
        return z3;

     label5:
        return 0;
    }

    public android.net.MacAddress getBssid()
    {
        android.companion.WifiDeviceFilter r0;
        android.net.MacAddress $r1;

        r0 := @this: android.companion.WifiDeviceFilter;

        $r1 = r0.<android.companion.WifiDeviceFilter: android.net.MacAddress mBssid>;

        return $r1;
    }

    public android.net.MacAddress getBssidMask()
    {
        android.companion.WifiDeviceFilter r0;
        android.net.MacAddress $r1;

        r0 := @this: android.companion.WifiDeviceFilter;

        $r1 = r0.<android.companion.WifiDeviceFilter: android.net.MacAddress mBssidMask>;

        return $r1;
    }

    public java.lang.String getDeviceDisplayName(android.net.wifi.ScanResult)
    {
        android.companion.WifiDeviceFilter r0;
        android.net.wifi.ScanResult r1;
        java.lang.String $r2;

        r0 := @this: android.companion.WifiDeviceFilter;

        r1 := @parameter0: android.net.wifi.ScanResult;

        $r2 = staticinvoke <android.companion.BluetoothDeviceFilterUtils: java.lang.String getDeviceDisplayNameInternal(android.net.wifi.ScanResult)>(r1);

        return $r2;
    }

    public volatile java.lang.String getDeviceDisplayName(android.os.Parcelable)
    {
        android.companion.WifiDeviceFilter r0;
        android.os.Parcelable r1;
        android.net.wifi.ScanResult $r2;
        java.lang.String $r3;

        r0 := @this: android.companion.WifiDeviceFilter;

        r1 := @parameter0: android.os.Parcelable;

        $r2 = (android.net.wifi.ScanResult) r1;

        $r3 = virtualinvoke r0.<android.companion.WifiDeviceFilter: java.lang.String getDeviceDisplayName(android.net.wifi.ScanResult)>($r2);

        return $r3;
    }

    public int getMediumType()
    {
        android.companion.WifiDeviceFilter r0;

        r0 := @this: android.companion.WifiDeviceFilter;

        return 2;
    }

    public java.util.regex.Pattern getNamePattern()
    {
        android.companion.WifiDeviceFilter r0;
        java.util.regex.Pattern $r1;

        r0 := @this: android.companion.WifiDeviceFilter;

        $r1 = r0.<android.companion.WifiDeviceFilter: java.util.regex.Pattern mNamePattern>;

        return $r1;
    }

    public int hashCode()
    {
        android.companion.WifiDeviceFilter r0;
        java.util.regex.Pattern $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        android.net.MacAddress $r2, $r3;

        r0 := @this: android.companion.WifiDeviceFilter;

        $i0 = 1 * 31;

        $r1 = r0.<android.companion.WifiDeviceFilter: java.util.regex.Pattern mNamePattern>;

        $i1 = staticinvoke <java.util.Objects: int hashCode(java.lang.Object)>($r1);

        $i2 = $i0 + $i1;

        $i3 = $i2 * 31;

        $r2 = r0.<android.companion.WifiDeviceFilter: android.net.MacAddress mBssid>;

        $i4 = staticinvoke <java.util.Objects: int hashCode(java.lang.Object)>($r2);

        $i5 = $i3 + $i4;

        $i6 = $i5 * 31;

        $r3 = r0.<android.companion.WifiDeviceFilter: android.net.MacAddress mBssidMask>;

        $i7 = staticinvoke <java.util.Objects: int hashCode(java.lang.Object)>($r3);

        $i8 = $i6 + $i7;

        return $i8;
    }

    public boolean matches(android.net.wifi.ScanResult)
    {
        android.companion.WifiDeviceFilter r0;
        android.net.wifi.ScanResult r1;
        java.util.regex.Pattern $r2;
        boolean $z0, $z1, z2;
        android.net.MacAddress $r3, $r5, $r6, $r7;
        java.lang.String $r4;

        r0 := @this: android.companion.WifiDeviceFilter;

        r1 := @parameter0: android.net.wifi.ScanResult;

        $r2 = virtualinvoke r0.<android.companion.WifiDeviceFilter: java.util.regex.Pattern getNamePattern()>();

        $z0 = staticinvoke <android.companion.BluetoothDeviceFilterUtils: boolean matchesName(java.util.regex.Pattern,android.net.wifi.ScanResult)>($r2, r1);

        if $z0 == 0 goto label2;

        $r3 = r0.<android.companion.WifiDeviceFilter: android.net.MacAddress mBssid>;

        if $r3 == null goto label1;

        $r4 = r1.<android.net.wifi.ScanResult: java.lang.String BSSID>;

        $r5 = staticinvoke <android.net.MacAddress: android.net.MacAddress fromString(java.lang.String)>($r4);

        $r7 = r0.<android.companion.WifiDeviceFilter: android.net.MacAddress mBssid>;

        $r6 = r0.<android.companion.WifiDeviceFilter: android.net.MacAddress mBssidMask>;

        $z1 = virtualinvoke $r5.<android.net.MacAddress: boolean matches(android.net.MacAddress,android.net.MacAddress)>($r7, $r6);

        if $z1 == 0 goto label2;

     label1:
        z2 = 1;

        goto label3;

     label2:
        z2 = 0;

     label3:
        return z2;
    }

    public volatile boolean matches(android.os.Parcelable)
    {
        android.companion.WifiDeviceFilter r0;
        android.os.Parcelable r1;
        android.net.wifi.ScanResult $r2;
        boolean $z0;

        r0 := @this: android.companion.WifiDeviceFilter;

        r1 := @parameter0: android.os.Parcelable;

        $r2 = (android.net.wifi.ScanResult) r1;

        $z0 = virtualinvoke r0.<android.companion.WifiDeviceFilter: boolean matches(android.net.wifi.ScanResult)>($r2);

        return $z0;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.companion.WifiDeviceFilter r0;
        android.os.Parcel r1;
        int i0;
        android.net.MacAddress r2, $r4, $r7;
        java.util.regex.Pattern $r3, $r5;
        com.android.internal.util.Parcelling $r6;
        byte $b1, b2, b3, b4;
        boolean $z0;

        r0 := @this: android.companion.WifiDeviceFilter;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        b2 = 0;

        $r3 = r0.<android.companion.WifiDeviceFilter: java.util.regex.Pattern mNamePattern>;

        if $r3 == null goto label1;

        $z0 = 0 | 1;

        b2 = (byte) $z0;

     label1:
        b3 = b2;

        $r4 = r0.<android.companion.WifiDeviceFilter: android.net.MacAddress mBssid>;

        if $r4 == null goto label2;

        $b1 = b2 | 2;

        b4 = (byte) $b1;

        b3 = b4;

     label2:
        virtualinvoke r1.<android.os.Parcel: void writeByte(byte)>(b3);

        $r6 = <android.companion.WifiDeviceFilter: com.android.internal.util.Parcelling sParcellingForNamePattern>;

        $r5 = r0.<android.companion.WifiDeviceFilter: java.util.regex.Pattern mNamePattern>;

        interfaceinvoke $r6.<com.android.internal.util.Parcelling: void parcel(java.lang.Object,android.os.Parcel,int)>($r5, r1, i0);

        r2 = r0.<android.companion.WifiDeviceFilter: android.net.MacAddress mBssid>;

        if r2 == null goto label3;

        virtualinvoke r1.<android.os.Parcel: void writeTypedObject(android.os.Parcelable,int)>(r2, i0);

     label3:
        $r7 = r0.<android.companion.WifiDeviceFilter: android.net.MacAddress mBssidMask>;

        virtualinvoke r1.<android.os.Parcel: void writeTypedObject(android.os.Parcelable,int)>($r7, i0);

        return;
    }
}
