class android.content.AbstractThreadedSyncAdapter$SyncThread extends java.lang.Thread
{
    private final android.accounts.Account mAccount;
    private final java.lang.String mAuthority;
    private final android.os.Bundle mExtras;
    private final android.content.SyncContext mSyncContext;
    private final android.accounts.Account mThreadsKey;
    final android.content.AbstractThreadedSyncAdapter this$0;

    private void <init>(android.content.AbstractThreadedSyncAdapter, java.lang.String, android.content.SyncContext, java.lang.String, android.accounts.Account, android.os.Bundle)
    {
        android.content.AbstractThreadedSyncAdapter$SyncThread r0;
        android.content.AbstractThreadedSyncAdapter r1;
        java.lang.String r2, r4;
        android.content.SyncContext r3;
        android.accounts.Account r5, $r7;
        android.os.Bundle r6;

        r0 := @this: android.content.AbstractThreadedSyncAdapter$SyncThread;

        r1 := @parameter0: android.content.AbstractThreadedSyncAdapter;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.content.SyncContext;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: android.accounts.Account;

        r6 := @parameter5: android.os.Bundle;

        r0.<android.content.AbstractThreadedSyncAdapter$SyncThread: android.content.AbstractThreadedSyncAdapter this$0> = r1;

        specialinvoke r0.<java.lang.Thread: void <init>(java.lang.String)>(r2);

        r0.<android.content.AbstractThreadedSyncAdapter$SyncThread: android.content.SyncContext mSyncContext> = r3;

        r0.<android.content.AbstractThreadedSyncAdapter$SyncThread: java.lang.String mAuthority> = r4;

        r0.<android.content.AbstractThreadedSyncAdapter$SyncThread: android.accounts.Account mAccount> = r5;

        r0.<android.content.AbstractThreadedSyncAdapter$SyncThread: android.os.Bundle mExtras> = r6;

        $r7 = staticinvoke <android.content.AbstractThreadedSyncAdapter: android.accounts.Account access$200(android.content.AbstractThreadedSyncAdapter,android.accounts.Account)>(r1, r5);

        r0.<android.content.AbstractThreadedSyncAdapter$SyncThread: android.accounts.Account mThreadsKey> = $r7;

        return;
    }

    void <init>(android.content.AbstractThreadedSyncAdapter, java.lang.String, android.content.SyncContext, java.lang.String, android.accounts.Account, android.os.Bundle, android.content.AbstractThreadedSyncAdapter$1)
    {
        android.content.AbstractThreadedSyncAdapter$SyncThread r0;
        android.content.AbstractThreadedSyncAdapter r1;
        java.lang.String r2, r4;
        android.content.SyncContext r3;
        android.accounts.Account r5;
        android.os.Bundle r6;
        android.content.AbstractThreadedSyncAdapter$1 r7;

        r0 := @this: android.content.AbstractThreadedSyncAdapter$SyncThread;

        r1 := @parameter0: android.content.AbstractThreadedSyncAdapter;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.content.SyncContext;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: android.accounts.Account;

        r6 := @parameter5: android.os.Bundle;

        r7 := @parameter6: android.content.AbstractThreadedSyncAdapter$1;

        specialinvoke r0.<android.content.AbstractThreadedSyncAdapter$SyncThread: void <init>(android.content.AbstractThreadedSyncAdapter,java.lang.String,android.content.SyncContext,java.lang.String,android.accounts.Account,android.os.Bundle)>(r1, r2, r3, r4, r5, r6);

        return;
    }

    static android.accounts.Account access$1000(android.content.AbstractThreadedSyncAdapter$SyncThread)
    {
        android.content.AbstractThreadedSyncAdapter$SyncThread r0;
        android.accounts.Account $r1;

        r0 := @parameter0: android.content.AbstractThreadedSyncAdapter$SyncThread;

        $r1 = r0.<android.content.AbstractThreadedSyncAdapter$SyncThread: android.accounts.Account mAccount>;

        return $r1;
    }

    static android.content.SyncContext access$800(android.content.AbstractThreadedSyncAdapter$SyncThread)
    {
        android.content.AbstractThreadedSyncAdapter$SyncThread r0;
        android.content.SyncContext $r1;

        r0 := @parameter0: android.content.AbstractThreadedSyncAdapter$SyncThread;

        $r1 = r0.<android.content.AbstractThreadedSyncAdapter$SyncThread: android.content.SyncContext mSyncContext>;

        return $r1;
    }

    static java.lang.String access$900(android.content.AbstractThreadedSyncAdapter$SyncThread)
    {
        android.content.AbstractThreadedSyncAdapter$SyncThread r0;
        java.lang.String $r1;

        r0 := @parameter0: android.content.AbstractThreadedSyncAdapter$SyncThread;

        $r1 = r0.<android.content.AbstractThreadedSyncAdapter$SyncThread: java.lang.String mAuthority>;

        return $r1;
    }

    private boolean isCanceled()
    {
        android.content.AbstractThreadedSyncAdapter$SyncThread r0;
        java.lang.Thread $r1;
        boolean $z0;

        r0 := @this: android.content.AbstractThreadedSyncAdapter$SyncThread;

        $r1 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $z0 = virtualinvoke $r1.<java.lang.Thread: boolean isInterrupted()>();

        return $z0;
    }

    public void run()
    {
        android.content.AbstractThreadedSyncAdapter$SyncThread r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14;
        java.lang.String $r2, $r7, $r13, $r24;
        android.content.SyncResult $r3;
        android.content.AbstractThreadedSyncAdapter $r4, $r8, $r9, $r16, $r17, $r18, $r27, $r28, $r29, $r37, $r38;
        android.content.Context $r5;
        android.content.ContentResolver $r6;
        java.util.HashMap $r10, $r19, $r30, $r39;
        android.accounts.Account $r11, $r15, $r20, $r26, $r31, $r40;
        android.content.SyncContext $r12, $r21, $r32, $r41;
        android.os.Bundle $r14, $r25;
        java.lang.Throwable $r23, $r33, $r34, $r35, $r36, $r42, $r43, $r44, $r45, $r46, r53, r54, r55;
        android.content.ContentProviderClient r47, r50;
        java.lang.Object r48, r51, r57, r59;

        r0 := @this: android.content.AbstractThreadedSyncAdapter$SyncThread;

        staticinvoke <android.os.Process: void setThreadPriority(int)>(10);

        $z0 = staticinvoke <android.content.AbstractThreadedSyncAdapter: boolean access$100()>();

        if $z0 == 0 goto label01;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("SyncAdapter", "Thread started");

     label01:
        $r2 = r0.<android.content.AbstractThreadedSyncAdapter$SyncThread: java.lang.String mAuthority>;

        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(128L, $r2);

        $r3 = new android.content.SyncResult;

        specialinvoke $r3.<android.content.SyncResult: void <init>()>();

        r47 = null;

     label02:
        $z1 = specialinvoke r0.<android.content.AbstractThreadedSyncAdapter$SyncThread: boolean isCanceled()>();

        if $z1 == 0 goto label16;

     label03:
        r47 = null;

     label04:
        $z6 = staticinvoke <android.content.AbstractThreadedSyncAdapter: boolean access$100()>();

        if $z6 == 0 goto label07;

     label05:
        r47 = null;

     label06:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("SyncAdapter", "Already canceled");

     label07:
        staticinvoke <android.os.Trace: void traceEnd(long)>(128L);

        goto label08;

     label08:
        $z7 = specialinvoke r0.<android.content.AbstractThreadedSyncAdapter$SyncThread: boolean isCanceled()>();

        if $z7 != 0 goto label09;

        $r21 = r0.<android.content.AbstractThreadedSyncAdapter$SyncThread: android.content.SyncContext mSyncContext>;

        virtualinvoke $r21.<android.content.SyncContext: void onFinished(android.content.SyncResult)>($r3);

     label09:
        $r17 = r0.<android.content.AbstractThreadedSyncAdapter$SyncThread: android.content.AbstractThreadedSyncAdapter this$0>;

        r48 = staticinvoke <android.content.AbstractThreadedSyncAdapter: java.lang.Object access$300(android.content.AbstractThreadedSyncAdapter)>($r17);

        entermonitor r48;

     label10:
        $r18 = r0.<android.content.AbstractThreadedSyncAdapter$SyncThread: android.content.AbstractThreadedSyncAdapter this$0>;

        $r19 = staticinvoke <android.content.AbstractThreadedSyncAdapter: java.util.HashMap access$400(android.content.AbstractThreadedSyncAdapter)>($r18);

        $r20 = r0.<android.content.AbstractThreadedSyncAdapter$SyncThread: android.accounts.Account mThreadsKey>;

        virtualinvoke $r19.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r20);

        exitmonitor r48;

     label11:
        $z8 = staticinvoke <android.content.AbstractThreadedSyncAdapter: boolean access$100()>();

        if $z8 == 0 goto label12;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("SyncAdapter", "Thread finished");

     label12:
        return;

     label13:
        $r43 := @caughtexception;

     label14:
        exitmonitor r48;

     label15:
        throw $r43;

     label16:
        r47 = null;

     label17:
        $z2 = staticinvoke <android.content.AbstractThreadedSyncAdapter: boolean access$100()>();

        if $z2 == 0 goto label20;

     label18:
        r47 = null;

     label19:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("SyncAdapter", "Calling onPerformSync...");

     label20:
        r47 = null;

     label21:
        $r4 = r0.<android.content.AbstractThreadedSyncAdapter$SyncThread: android.content.AbstractThreadedSyncAdapter this$0>;

        $r5 = staticinvoke <android.content.AbstractThreadedSyncAdapter: android.content.Context access$1300(android.content.AbstractThreadedSyncAdapter)>($r4);

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r7 = r0.<android.content.AbstractThreadedSyncAdapter$SyncThread: java.lang.String mAuthority>;

        r50 = virtualinvoke $r6.<android.content.ContentResolver: android.content.ContentProviderClient acquireContentProviderClient(java.lang.String)>($r7);

     label22:
        if r50 == null goto label25;

     label23:
        $r16 = r0.<android.content.AbstractThreadedSyncAdapter$SyncThread: android.content.AbstractThreadedSyncAdapter this$0>;

        $r15 = r0.<android.content.AbstractThreadedSyncAdapter$SyncThread: android.accounts.Account mAccount>;

        $r14 = r0.<android.content.AbstractThreadedSyncAdapter$SyncThread: android.os.Bundle mExtras>;

        $r13 = r0.<android.content.AbstractThreadedSyncAdapter$SyncThread: java.lang.String mAuthority>;

        virtualinvoke $r16.<android.content.AbstractThreadedSyncAdapter: void onPerformSync(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)>($r15, $r14, $r13, r50, $r3);

     label24:
        goto label26;

     label25:
        $r3.<android.content.SyncResult: boolean databaseError> = 1;

     label26:
        $z3 = staticinvoke <android.content.AbstractThreadedSyncAdapter: boolean access$100()>();

        if $z3 == 0 goto label27;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("SyncAdapter", "onPerformSync done");

     label27:
        staticinvoke <android.os.Trace: void traceEnd(long)>(128L);

        if r50 == null goto label28;

        virtualinvoke r50.<android.content.ContentProviderClient: boolean release()>();

     label28:
        $z4 = specialinvoke r0.<android.content.AbstractThreadedSyncAdapter$SyncThread: boolean isCanceled()>();

        if $z4 != 0 goto label29;

        $r12 = r0.<android.content.AbstractThreadedSyncAdapter$SyncThread: android.content.SyncContext mSyncContext>;

        virtualinvoke $r12.<android.content.SyncContext: void onFinished(android.content.SyncResult)>($r3);

     label29:
        $r8 = r0.<android.content.AbstractThreadedSyncAdapter$SyncThread: android.content.AbstractThreadedSyncAdapter this$0>;

        r51 = staticinvoke <android.content.AbstractThreadedSyncAdapter: java.lang.Object access$300(android.content.AbstractThreadedSyncAdapter)>($r8);

        entermonitor r51;

     label30:
        $r9 = r0.<android.content.AbstractThreadedSyncAdapter$SyncThread: android.content.AbstractThreadedSyncAdapter this$0>;

        $r10 = staticinvoke <android.content.AbstractThreadedSyncAdapter: java.util.HashMap access$400(android.content.AbstractThreadedSyncAdapter)>($r9);

        $r11 = r0.<android.content.AbstractThreadedSyncAdapter$SyncThread: android.accounts.Account mThreadsKey>;

        virtualinvoke $r10.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r11);

        exitmonitor r51;

     label31:
        $z5 = staticinvoke <android.content.AbstractThreadedSyncAdapter: boolean access$100()>();

        if $z5 == 0 goto label60;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("SyncAdapter", "Thread finished");

        goto label60;

     label32:
        $r35 := @caughtexception;

     label33:
        exitmonitor r51;

     label34:
        throw $r35;

     label35:
        $r44 := @caughtexception;

        r53 = $r44;

        goto label64;

     label36:
        $r45 := @caughtexception;

        r54 = $r45;

        goto label40;

     label37:
        $r34 := @caughtexception;

        r55 = $r34;

        goto label47;

     label38:
        $r36 := @caughtexception;

        r50 = r47;

        r53 = $r36;

        goto label64;

     label39:
        $r33 := @caughtexception;

        r54 = $r33;

        r50 = null;

     label40:
        r47 = r50;

     label41:
        $z12 = staticinvoke <android.content.AbstractThreadedSyncAdapter: boolean access$100()>();

        if $z12 == 0 goto label44;

     label42:
        r47 = r50;

     label43:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("SyncAdapter", "caught exception", r54);

     label44:
        r47 = r50;

     label45:
        throw r54;

     label46:
        $r23 := @caughtexception;

        r55 = $r23;

        r50 = null;

     label47:
        r47 = r50;

     label48:
        $z9 = staticinvoke <android.content.AbstractThreadedSyncAdapter: boolean access$100()>();

        if $z9 == 0 goto label51;

     label49:
        r47 = r50;

     label50:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("SyncAdapter", "SecurityException", r55);

     label51:
        r47 = r50;

     label52:
        $r27 = r0.<android.content.AbstractThreadedSyncAdapter$SyncThread: android.content.AbstractThreadedSyncAdapter this$0>;

        $r26 = r0.<android.content.AbstractThreadedSyncAdapter$SyncThread: android.accounts.Account mAccount>;

        $r25 = r0.<android.content.AbstractThreadedSyncAdapter$SyncThread: android.os.Bundle mExtras>;

        $r24 = r0.<android.content.AbstractThreadedSyncAdapter$SyncThread: java.lang.String mAuthority>;

        virtualinvoke $r27.<android.content.AbstractThreadedSyncAdapter: void onSecurityException(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.SyncResult)>($r26, $r25, $r24, $r3);

     label53:
        r47 = r50;

     label54:
        $r3.<android.content.SyncResult: boolean databaseError> = 1;

     label55:
        staticinvoke <android.os.Trace: void traceEnd(long)>(128L);

        if r50 == null goto label56;

        virtualinvoke r50.<android.content.ContentProviderClient: boolean release()>();

     label56:
        $z10 = specialinvoke r0.<android.content.AbstractThreadedSyncAdapter$SyncThread: boolean isCanceled()>();

        if $z10 != 0 goto label57;

        $r32 = r0.<android.content.AbstractThreadedSyncAdapter$SyncThread: android.content.SyncContext mSyncContext>;

        virtualinvoke $r32.<android.content.SyncContext: void onFinished(android.content.SyncResult)>($r3);

     label57:
        $r28 = r0.<android.content.AbstractThreadedSyncAdapter$SyncThread: android.content.AbstractThreadedSyncAdapter this$0>;

        r57 = staticinvoke <android.content.AbstractThreadedSyncAdapter: java.lang.Object access$300(android.content.AbstractThreadedSyncAdapter)>($r28);

        entermonitor r57;

     label58:
        $r29 = r0.<android.content.AbstractThreadedSyncAdapter$SyncThread: android.content.AbstractThreadedSyncAdapter this$0>;

        $r30 = staticinvoke <android.content.AbstractThreadedSyncAdapter: java.util.HashMap access$400(android.content.AbstractThreadedSyncAdapter)>($r29);

        $r31 = r0.<android.content.AbstractThreadedSyncAdapter$SyncThread: android.accounts.Account mThreadsKey>;

        virtualinvoke $r30.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r31);

        exitmonitor r57;

     label59:
        $z11 = staticinvoke <android.content.AbstractThreadedSyncAdapter: boolean access$100()>();

        if $z11 == 0 goto label60;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("SyncAdapter", "Thread finished");

     label60:
        return;

     label61:
        $r42 := @caughtexception;

     label62:
        exitmonitor r57;

     label63:
        throw $r42;

     label64:
        staticinvoke <android.os.Trace: void traceEnd(long)>(128L);

        if r50 == null goto label65;

        virtualinvoke r50.<android.content.ContentProviderClient: boolean release()>();

     label65:
        $z13 = specialinvoke r0.<android.content.AbstractThreadedSyncAdapter$SyncThread: boolean isCanceled()>();

        if $z13 != 0 goto label66;

        $r41 = r0.<android.content.AbstractThreadedSyncAdapter$SyncThread: android.content.SyncContext mSyncContext>;

        virtualinvoke $r41.<android.content.SyncContext: void onFinished(android.content.SyncResult)>($r3);

     label66:
        $r37 = r0.<android.content.AbstractThreadedSyncAdapter$SyncThread: android.content.AbstractThreadedSyncAdapter this$0>;

        r59 = staticinvoke <android.content.AbstractThreadedSyncAdapter: java.lang.Object access$300(android.content.AbstractThreadedSyncAdapter)>($r37);

        entermonitor r59;

     label67:
        $r38 = r0.<android.content.AbstractThreadedSyncAdapter$SyncThread: android.content.AbstractThreadedSyncAdapter this$0>;

        $r39 = staticinvoke <android.content.AbstractThreadedSyncAdapter: java.util.HashMap access$400(android.content.AbstractThreadedSyncAdapter)>($r38);

        $r40 = r0.<android.content.AbstractThreadedSyncAdapter$SyncThread: android.accounts.Account mThreadsKey>;

        virtualinvoke $r39.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r40);

        exitmonitor r59;

     label68:
        $z14 = staticinvoke <android.content.AbstractThreadedSyncAdapter: boolean access$100()>();

        if $z14 == 0 goto label69;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("SyncAdapter", "Thread finished");

     label69:
        throw r53;

     label70:
        $r46 := @caughtexception;

     label71:
        exitmonitor r59;

     label72:
        throw $r46;

        catch java.lang.SecurityException from label02 to label03 with label46;
        catch java.lang.RuntimeException from label02 to label03 with label39;
        catch java.lang.Error from label02 to label03 with label39;
        catch java.lang.Throwable from label02 to label03 with label38;
        catch java.lang.SecurityException from label04 to label05 with label46;
        catch java.lang.RuntimeException from label04 to label05 with label39;
        catch java.lang.Error from label04 to label05 with label39;
        catch java.lang.Throwable from label04 to label05 with label38;
        catch java.lang.SecurityException from label06 to label07 with label46;
        catch java.lang.RuntimeException from label06 to label07 with label39;
        catch java.lang.Error from label06 to label07 with label39;
        catch java.lang.Throwable from label06 to label07 with label38;
        catch java.lang.Throwable from label10 to label11 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
        catch java.lang.SecurityException from label17 to label18 with label46;
        catch java.lang.RuntimeException from label17 to label18 with label39;
        catch java.lang.Error from label17 to label18 with label39;
        catch java.lang.Throwable from label17 to label18 with label38;
        catch java.lang.SecurityException from label19 to label20 with label46;
        catch java.lang.RuntimeException from label19 to label20 with label39;
        catch java.lang.Error from label19 to label20 with label39;
        catch java.lang.Throwable from label19 to label20 with label38;
        catch java.lang.SecurityException from label21 to label22 with label46;
        catch java.lang.RuntimeException from label21 to label22 with label39;
        catch java.lang.Error from label21 to label22 with label39;
        catch java.lang.Throwable from label21 to label22 with label38;
        catch java.lang.SecurityException from label23 to label24 with label37;
        catch java.lang.RuntimeException from label23 to label24 with label36;
        catch java.lang.Error from label23 to label24 with label36;
        catch java.lang.Throwable from label23 to label24 with label35;
        catch java.lang.SecurityException from label25 to label26 with label37;
        catch java.lang.RuntimeException from label25 to label26 with label36;
        catch java.lang.Error from label25 to label26 with label36;
        catch java.lang.Throwable from label25 to label26 with label35;
        catch java.lang.SecurityException from label26 to label27 with label37;
        catch java.lang.RuntimeException from label26 to label27 with label36;
        catch java.lang.Error from label26 to label27 with label36;
        catch java.lang.Throwable from label26 to label27 with label35;
        catch java.lang.Throwable from label30 to label31 with label32;
        catch java.lang.Throwable from label33 to label34 with label32;
        catch java.lang.Throwable from label41 to label42 with label38;
        catch java.lang.Throwable from label43 to label44 with label38;
        catch java.lang.Throwable from label45 to label46 with label38;
        catch java.lang.Throwable from label48 to label49 with label38;
        catch java.lang.Throwable from label50 to label51 with label38;
        catch java.lang.Throwable from label52 to label53 with label38;
        catch java.lang.Throwable from label54 to label55 with label38;
        catch java.lang.Throwable from label58 to label59 with label61;
        catch java.lang.Throwable from label62 to label63 with label61;
        catch java.lang.Throwable from label67 to label68 with label70;
        catch java.lang.Throwable from label71 to label72 with label70;
    }
}
