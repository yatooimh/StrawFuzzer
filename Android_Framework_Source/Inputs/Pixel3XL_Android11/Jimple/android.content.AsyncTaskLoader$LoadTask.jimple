final class android.content.AsyncTaskLoader$LoadTask extends android.os.AsyncTask implements java.lang.Runnable
{
    private final java.util.concurrent.CountDownLatch mDone;
    final android.content.AsyncTaskLoader this$0;
    boolean waiting;

    void <init>(android.content.AsyncTaskLoader)
    {
        android.content.AsyncTaskLoader$LoadTask r0;
        android.content.AsyncTaskLoader r1;
        java.util.concurrent.CountDownLatch $r2;

        r0 := @this: android.content.AsyncTaskLoader$LoadTask;

        r1 := @parameter0: android.content.AsyncTaskLoader;

        r0.<android.content.AsyncTaskLoader$LoadTask: android.content.AsyncTaskLoader this$0> = r1;

        specialinvoke r0.<android.os.AsyncTask: void <init>()>();

        $r2 = new java.util.concurrent.CountDownLatch;

        specialinvoke $r2.<java.util.concurrent.CountDownLatch: void <init>(int)>(1);

        r0.<android.content.AsyncTaskLoader$LoadTask: java.util.concurrent.CountDownLatch mDone> = $r2;

        return;
    }

    protected volatile java.lang.Object doInBackground(java.lang.Object[])
    {
        android.content.AsyncTaskLoader$LoadTask r0;
        java.lang.Object[] r1;
        java.lang.Void[] $r2;
        java.lang.Object $r3;

        r0 := @this: android.content.AsyncTaskLoader$LoadTask;

        r1 := @parameter0: java.lang.Object[];

        $r2 = (java.lang.Void[]) r1;

        $r3 = virtualinvoke r0.<android.content.AsyncTaskLoader$LoadTask: java.lang.Object doInBackground(java.lang.Void[])>($r2);

        return $r3;
    }

    protected transient java.lang.Object doInBackground(java.lang.Void[])
    {
        android.content.AsyncTaskLoader$LoadTask r0;
        android.content.AsyncTaskLoader $r1;
        android.os.OperationCanceledException $r2;
        boolean $z0;
        java.lang.Void[] r3;
        java.lang.Object r4;

        r0 := @this: android.content.AsyncTaskLoader$LoadTask;

        r3 := @parameter0: java.lang.Void[];

     label1:
        $r1 = r0.<android.content.AsyncTaskLoader$LoadTask: android.content.AsyncTaskLoader this$0>;

        r4 = virtualinvoke $r1.<android.content.AsyncTaskLoader: java.lang.Object onLoadInBackground()>();

     label2:
        return r4;

     label3:
        $r2 := @caughtexception;

        $z0 = virtualinvoke r0.<android.content.AsyncTaskLoader$LoadTask: boolean isCancelled()>();

        if $z0 == 0 goto label4;

        return null;

     label4:
        throw $r2;

        catch android.os.OperationCanceledException from label1 to label2 with label3;
    }

    protected void onCancelled(java.lang.Object)
    {
        android.content.AsyncTaskLoader$LoadTask r0;
        android.content.AsyncTaskLoader $r1;
        java.util.concurrent.CountDownLatch $r2, $r4;
        java.lang.Throwable $r3;
        java.lang.Object r5;

        r0 := @this: android.content.AsyncTaskLoader$LoadTask;

        r5 := @parameter0: java.lang.Object;

     label1:
        $r1 = r0.<android.content.AsyncTaskLoader$LoadTask: android.content.AsyncTaskLoader this$0>;

        virtualinvoke $r1.<android.content.AsyncTaskLoader: void dispatchOnCancelled(android.content.AsyncTaskLoader$LoadTask,java.lang.Object)>(r0, r5);

     label2:
        $r2 = r0.<android.content.AsyncTaskLoader$LoadTask: java.util.concurrent.CountDownLatch mDone>;

        virtualinvoke $r2.<java.util.concurrent.CountDownLatch: void countDown()>();

        return;

     label3:
        $r3 := @caughtexception;

        $r4 = r0.<android.content.AsyncTaskLoader$LoadTask: java.util.concurrent.CountDownLatch mDone>;

        virtualinvoke $r4.<java.util.concurrent.CountDownLatch: void countDown()>();

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    protected void onPostExecute(java.lang.Object)
    {
        android.content.AsyncTaskLoader$LoadTask r0;
        android.content.AsyncTaskLoader $r1;
        java.util.concurrent.CountDownLatch $r2, $r4;
        java.lang.Throwable $r3;
        java.lang.Object r5;

        r0 := @this: android.content.AsyncTaskLoader$LoadTask;

        r5 := @parameter0: java.lang.Object;

     label1:
        $r1 = r0.<android.content.AsyncTaskLoader$LoadTask: android.content.AsyncTaskLoader this$0>;

        virtualinvoke $r1.<android.content.AsyncTaskLoader: void dispatchOnLoadComplete(android.content.AsyncTaskLoader$LoadTask,java.lang.Object)>(r0, r5);

     label2:
        $r2 = r0.<android.content.AsyncTaskLoader$LoadTask: java.util.concurrent.CountDownLatch mDone>;

        virtualinvoke $r2.<java.util.concurrent.CountDownLatch: void countDown()>();

        return;

     label3:
        $r3 := @caughtexception;

        $r4 = r0.<android.content.AsyncTaskLoader$LoadTask: java.util.concurrent.CountDownLatch mDone>;

        virtualinvoke $r4.<java.util.concurrent.CountDownLatch: void countDown()>();

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void run()
    {
        android.content.AsyncTaskLoader$LoadTask r0;
        android.content.AsyncTaskLoader $r1;

        r0 := @this: android.content.AsyncTaskLoader$LoadTask;

        r0.<android.content.AsyncTaskLoader$LoadTask: boolean waiting> = 0;

        $r1 = r0.<android.content.AsyncTaskLoader$LoadTask: android.content.AsyncTaskLoader this$0>;

        virtualinvoke $r1.<android.content.AsyncTaskLoader: void executePendingTask()>();

        return;
    }

    public void waitForLoader()
    {
        android.content.AsyncTaskLoader$LoadTask r0;
        java.util.concurrent.CountDownLatch $r2;
        java.lang.Throwable $r3;

        r0 := @this: android.content.AsyncTaskLoader$LoadTask;

     label1:
        $r2 = r0.<android.content.AsyncTaskLoader$LoadTask: java.util.concurrent.CountDownLatch mDone>;

        virtualinvoke $r2.<java.util.concurrent.CountDownLatch: void await()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

     label4:
        return;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }
}
