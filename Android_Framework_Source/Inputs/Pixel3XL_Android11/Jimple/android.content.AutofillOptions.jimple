public final class android.content.AutofillOptions extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    private static final java.lang.String TAG;
    public long appDisabledExpiration;
    public boolean augmentedAutofillEnabled;
    public final boolean compatModeEnabled;
    public android.util.ArrayMap disabledActivities;
    public final int loggingLevel;
    public android.util.ArraySet whitelistedActivitiesForAugmentedAutofill;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        android.content.AutofillOptions$1 $r2;

        $r0 = class "Landroid/content/AutofillOptions;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <android.content.AutofillOptions: java.lang.String TAG> = $r1;

        $r2 = new android.content.AutofillOptions$1;

        specialinvoke $r2.<android.content.AutofillOptions$1: void <init>()>();

        <android.content.AutofillOptions: android.os.Parcelable$Creator CREATOR> = $r2;

        return;
    }

    public void <init>(int, boolean)
    {
        android.content.AutofillOptions r0;
        int i0;
        boolean z0;

        r0 := @this: android.content.AutofillOptions;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.content.AutofillOptions: int loggingLevel> = i0;

        r0.<android.content.AutofillOptions: boolean compatModeEnabled> = z0;

        return;
    }

    public static android.content.AutofillOptions forWhitelistingItself()
    {
        java.lang.IllegalStateException $r1;
        android.app.Application $r2;
        java.lang.String $r3, $r7, $r15, r17, r18, r20;
        boolean $z0;
        java.lang.StringBuilder $r4, $r10;
        java.lang.SecurityException $r8;
        android.content.AutofillOptions $r9;
        android.app.ActivityThread r16;

        r16 = staticinvoke <android.app.ActivityThread: android.app.ActivityThread currentActivityThread()>();

        if r16 == null goto label2;

        $r2 = virtualinvoke r16.<android.app.ActivityThread: android.app.Application getApplication()>();

        r17 = virtualinvoke $r2.<android.app.Application: java.lang.String getPackageName()>();

        $r3 = "android.autofillservice.cts";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r17);

        if $z0 == 0 goto label1;

        $r9 = new android.content.AutofillOptions;

        specialinvoke $r9.<android.content.AutofillOptions: void <init>(int,boolean)>(4, 1);

        $r9.<android.content.AutofillOptions: boolean augmentedAutofillEnabled> = 1;

        r18 = <android.content.AutofillOptions: java.lang.String TAG>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("forWhitelistingItself(");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r17);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("): ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r15 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>(r18, $r15);

        return $r9;

     label1:
        r20 = <android.content.AutofillOptions: java.lang.String TAG>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("forWhitelistingItself(): called by ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r17);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(r20, $r7);

        $r8 = new java.lang.SecurityException;

        specialinvoke $r8.<java.lang.SecurityException: void <init>(java.lang.String)>("Thou shall not pass!");

        throw $r8;

     label2:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No ActivityThread");

        throw $r1;
    }

    public int describeContents()
    {
        android.content.AutofillOptions r0;

        r0 := @this: android.content.AutofillOptions;

        return 0;
    }

    public void dumpShort(java.io.PrintWriter)
    {
        android.content.AutofillOptions r0;
        java.io.PrintWriter r1;
        int $i0;
        boolean $z0, $z1;
        android.util.ArraySet $r2, $r5;
        long $l1;
        android.util.ArrayMap $r3, $r4;

        r0 := @this: android.content.AutofillOptions;

        r1 := @parameter0: java.io.PrintWriter;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("logLvl=");

        $i0 = r0.<android.content.AutofillOptions: int loggingLevel>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i0);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(", compatMode=");

        $z0 = r0.<android.content.AutofillOptions: boolean compatModeEnabled>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z0);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(", augmented=");

        $z1 = r0.<android.content.AutofillOptions: boolean augmentedAutofillEnabled>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z1);

        $r2 = r0.<android.content.AutofillOptions: android.util.ArraySet whitelistedActivitiesForAugmentedAutofill>;

        if $r2 == null goto label1;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(", whitelistedActivitiesForAugmentedAutofill=");

        $r5 = r0.<android.content.AutofillOptions: android.util.ArraySet whitelistedActivitiesForAugmentedAutofill>;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.Object)>($r5);

     label1:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(", appDisabledExpiration=");

        $l1 = r0.<android.content.AutofillOptions: long appDisabledExpiration>;

        virtualinvoke r1.<java.io.PrintWriter: void print(long)>($l1);

        $r3 = r0.<android.content.AutofillOptions: android.util.ArrayMap disabledActivities>;

        if $r3 == null goto label2;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(", disabledActivities=");

        $r4 = r0.<android.content.AutofillOptions: android.util.ArrayMap disabledActivities>;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.Object)>($r4);

     label2:
        return;
    }

    public boolean isAugmentedAutofillEnabled(android.content.Context)
    {
        android.content.AutofillOptions r0;
        boolean z0, $z1, z2;
        android.content.ComponentName r1;
        android.content.Context r2;
        android.view.autofill.AutofillManager$AutofillClient r3;
        android.util.ArraySet r4;

        r0 := @this: android.content.AutofillOptions;

        r2 := @parameter0: android.content.Context;

        z0 = r0.<android.content.AutofillOptions: boolean augmentedAutofillEnabled>;

        z2 = 0;

        if z0 != 0 goto label1;

        return 0;

     label1:
        r3 = virtualinvoke r2.<android.content.Context: android.view.autofill.AutofillManager$AutofillClient getAutofillClient()>();

        if r3 != null goto label2;

        return 0;

     label2:
        r1 = interfaceinvoke r3.<android.view.autofill.AutofillManager$AutofillClient: android.content.ComponentName autofillClientGetComponentName()>();

        r4 = r0.<android.content.AutofillOptions: android.util.ArraySet whitelistedActivitiesForAugmentedAutofill>;

        if r4 == null goto label3;

        $z1 = virtualinvoke r4.<android.util.ArraySet: boolean contains(java.lang.Object)>(r1);

        if $z1 == 0 goto label4;

     label3:
        z2 = 1;

     label4:
        return z2;
    }

    public boolean isAutofillDisabledLocked(android.content.ComponentName)
    {
        android.content.AutofillOptions r0;
        long l0, $l1, $l3;
        byte $b2, $b4;
        java.lang.Object $r1;
        android.util.ArrayMap $r2, r6;
        android.content.ComponentName r4;
        java.lang.String r5;
        java.lang.Long r7;

        r0 := @this: android.content.AutofillOptions;

        r4 := @parameter0: android.content.ComponentName;

        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        r5 = virtualinvoke r4.<android.content.ComponentName: java.lang.String flattenToString()>();

        $l1 = r0.<android.content.AutofillOptions: long appDisabledExpiration>;

        $b2 = $l1 cmp l0;

        if $b2 < 0 goto label1;

        return 1;

     label1:
        r6 = r0.<android.content.AutofillOptions: android.util.ArrayMap disabledActivities>;

        if r6 == null goto label3;

        $r1 = virtualinvoke r6.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r5);

        r7 = (java.lang.Long) $r1;

        if r7 == null goto label3;

        $l3 = virtualinvoke r7.<java.lang.Long: long longValue()>();

        $b4 = $l3 cmp l0;

        if $b4 < 0 goto label2;

        return 1;

     label2:
        $r2 = r0.<android.content.AutofillOptions: android.util.ArrayMap disabledActivities>;

        virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r5);

     label3:
        r0.<android.content.AutofillOptions: long appDisabledExpiration> = 0L;

        return 0;
    }

    public java.lang.String toString()
    {
        android.content.AutofillOptions r0;
        java.lang.StringBuilder $r2;
        int $i0;
        boolean $z0, $z1;
        long $l1;
        java.lang.String $r12;

        r0 := @this: android.content.AutofillOptions;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AutofillOptions [loggingLevel=");

        $i0 = r0.<android.content.AutofillOptions: int loggingLevel>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", compatMode=");

        $z0 = r0.<android.content.AutofillOptions: boolean compatModeEnabled>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", augmentedAutofillEnabled=");

        $z1 = r0.<android.content.AutofillOptions: boolean augmentedAutofillEnabled>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", appDisabledExpiration=");

        $l1 = r0.<android.content.AutofillOptions: long appDisabledExpiration>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r12 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.content.AutofillOptions r0;
        android.os.Parcel r1;
        int $i0, i3, i4, i5;
        boolean $z0, $z1;
        android.util.ArraySet $r2;
        long $l1, $l2;
        android.util.ArrayMap $r3, $r5, r8;
        java.lang.Object $r4, $r6;
        java.lang.Long $r7;
        java.lang.String r9;

        r0 := @this: android.content.AutofillOptions;

        r1 := @parameter0: android.os.Parcel;

        i3 := @parameter1: int;

        $i0 = r0.<android.content.AutofillOptions: int loggingLevel>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i0);

        $z0 = r0.<android.content.AutofillOptions: boolean compatModeEnabled>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z0);

        $z1 = r0.<android.content.AutofillOptions: boolean augmentedAutofillEnabled>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z1);

        $r2 = r0.<android.content.AutofillOptions: android.util.ArraySet whitelistedActivitiesForAugmentedAutofill>;

        virtualinvoke r1.<android.os.Parcel: void writeArraySet(android.util.ArraySet)>($r2);

        $l1 = r0.<android.content.AutofillOptions: long appDisabledExpiration>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l1);

        r8 = r0.<android.content.AutofillOptions: android.util.ArrayMap disabledActivities>;

        if r8 == null goto label1;

        i4 = virtualinvoke r8.<android.util.ArrayMap: int size()>();

        goto label2;

     label1:
        i4 = 0;

     label2:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i4);

        if i4 <= 0 goto label4;

        i5 = 0;

     label3:
        if i5 >= i4 goto label4;

        $r3 = r0.<android.content.AutofillOptions: android.util.ArrayMap disabledActivities>;

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i5);

        r9 = (java.lang.String) $r4;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r9);

        $r5 = r0.<android.content.AutofillOptions: android.util.ArrayMap disabledActivities>;

        $r6 = virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r9);

        $r7 = (java.lang.Long) $r6;

        $l2 = virtualinvoke $r7.<java.lang.Long: long longValue()>();

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l2);

        i5 = i5 + 1;

        goto label3;

     label4:
        return;
    }
}
