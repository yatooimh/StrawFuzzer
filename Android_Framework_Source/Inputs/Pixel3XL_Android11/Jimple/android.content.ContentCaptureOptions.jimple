public final class android.content.ContentCaptureOptions extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    private static final java.lang.String TAG;
    public final int idleFlushingFrequencyMs;
    public final boolean lite;
    public final int logHistorySize;
    public final int loggingLevel;
    public final int maxBufferSize;
    public final int textChangeFlushingFrequencyMs;
    public final android.util.ArraySet whitelistedComponents;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        android.content.ContentCaptureOptions$1 $r2;

        $r0 = class "Landroid/content/ContentCaptureOptions;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <android.content.ContentCaptureOptions: java.lang.String TAG> = $r1;

        $r2 = new android.content.ContentCaptureOptions$1;

        specialinvoke $r2.<android.content.ContentCaptureOptions$1: void <init>()>();

        <android.content.ContentCaptureOptions: android.os.Parcelable$Creator CREATOR> = $r2;

        return;
    }

    public void <init>(int)
    {
        android.content.ContentCaptureOptions r0;
        int i0;

        r0 := @this: android.content.ContentCaptureOptions;

        i0 := @parameter0: int;

        specialinvoke r0.<android.content.ContentCaptureOptions: void <init>(boolean,int,int,int,int,int,android.util.ArraySet)>(1, i0, 0, 0, 0, 0, null);

        return;
    }

    public void <init>(int, int, int, int, int, android.util.ArraySet)
    {
        android.content.ContentCaptureOptions r0;
        int i0, i1, i2, i3, i4;
        android.util.ArraySet r1;

        r0 := @this: android.content.ContentCaptureOptions;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        r1 := @parameter5: android.util.ArraySet;

        specialinvoke r0.<android.content.ContentCaptureOptions: void <init>(boolean,int,int,int,int,int,android.util.ArraySet)>(0, i0, i1, i2, i3, i4, r1);

        return;
    }

    public void <init>(android.util.ArraySet)
    {
        android.content.ContentCaptureOptions r0;
        android.util.ArraySet r1;

        r0 := @this: android.content.ContentCaptureOptions;

        r1 := @parameter0: android.util.ArraySet;

        specialinvoke r0.<android.content.ContentCaptureOptions: void <init>(int,int,int,int,int,android.util.ArraySet)>(2, 500, 5000, 1000, 10, r1);

        return;
    }

    private void <init>(boolean, int, int, int, int, int, android.util.ArraySet)
    {
        android.content.ContentCaptureOptions r0;
        boolean z0;
        int i0, i1, i2, i3, i4;
        android.util.ArraySet r1;

        r0 := @this: android.content.ContentCaptureOptions;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        r1 := @parameter6: android.util.ArraySet;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.content.ContentCaptureOptions: boolean lite> = z0;

        r0.<android.content.ContentCaptureOptions: int loggingLevel> = i0;

        r0.<android.content.ContentCaptureOptions: int maxBufferSize> = i1;

        r0.<android.content.ContentCaptureOptions: int idleFlushingFrequencyMs> = i2;

        r0.<android.content.ContentCaptureOptions: int textChangeFlushingFrequencyMs> = i3;

        r0.<android.content.ContentCaptureOptions: int logHistorySize> = i4;

        r0.<android.content.ContentCaptureOptions: android.util.ArraySet whitelistedComponents> = r1;

        return;
    }

    public static android.content.ContentCaptureOptions forWhitelistingItself()
    {
        java.lang.IllegalStateException $r1;
        android.app.Application $r2;
        java.lang.String $r3, $r7, $r15, r17, r18, r20;
        boolean $z0;
        java.lang.StringBuilder $r4, $r10;
        java.lang.SecurityException $r8;
        android.content.ContentCaptureOptions $r9;
        android.app.ActivityThread r16;

        r16 = staticinvoke <android.app.ActivityThread: android.app.ActivityThread currentActivityThread()>();

        if r16 == null goto label2;

        $r2 = virtualinvoke r16.<android.app.ActivityThread: android.app.Application getApplication()>();

        r17 = virtualinvoke $r2.<android.app.Application: java.lang.String getPackageName()>();

        $r3 = "android.contentcaptureservice.cts";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r17);

        if $z0 == 0 goto label1;

        $r9 = new android.content.ContentCaptureOptions;

        specialinvoke $r9.<android.content.ContentCaptureOptions: void <init>(android.util.ArraySet)>(null);

        r18 = <android.content.ContentCaptureOptions: java.lang.String TAG>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("forWhitelistingItself(");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r17);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("): ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r15 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>(r18, $r15);

        return $r9;

     label1:
        r20 = <android.content.ContentCaptureOptions: java.lang.String TAG>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("forWhitelistingItself(): called by ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r17);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(r20, $r7);

        $r8 = new java.lang.SecurityException;

        specialinvoke $r8.<java.lang.SecurityException: void <init>(java.lang.String)>("Thou shall not pass!");

        throw $r8;

     label2:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No ActivityThread");

        throw $r1;
    }

    public int describeContents()
    {
        android.content.ContentCaptureOptions r0;

        r0 := @this: android.content.ContentCaptureOptions;

        return 0;
    }

    public void dumpShort(java.io.PrintWriter)
    {
        android.content.ContentCaptureOptions r0;
        java.io.PrintWriter r1;
        int $i0, $i1, $i2, $i3, $i4;
        boolean $z0;
        android.util.ArraySet $r2, $r3;

        r0 := @this: android.content.ContentCaptureOptions;

        r1 := @parameter0: java.io.PrintWriter;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("logLvl=");

        $i0 = r0.<android.content.ContentCaptureOptions: int loggingLevel>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i0);

        $z0 = r0.<android.content.ContentCaptureOptions: boolean lite>;

        if $z0 == 0 goto label1;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(", lite");

        return;

     label1:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(", bufferSize=");

        $i1 = r0.<android.content.ContentCaptureOptions: int maxBufferSize>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i1);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(", idle=");

        $i2 = r0.<android.content.ContentCaptureOptions: int idleFlushingFrequencyMs>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(", textIdle=");

        $i3 = r0.<android.content.ContentCaptureOptions: int textChangeFlushingFrequencyMs>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i3);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(", logSize=");

        $i4 = r0.<android.content.ContentCaptureOptions: int logHistorySize>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i4);

        $r2 = r0.<android.content.ContentCaptureOptions: android.util.ArraySet whitelistedComponents>;

        if $r2 == null goto label2;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(", whitelisted=");

        $r3 = r0.<android.content.ContentCaptureOptions: android.util.ArraySet whitelistedComponents>;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.Object)>($r3);

     label2:
        return;
    }

    public boolean isWhitelisted(android.content.Context)
    {
        android.content.ContentCaptureOptions r0;
        android.content.Context r1;
        java.lang.String r2, $r9;
        android.util.ArraySet $r3, $r4;
        android.content.ComponentName $r5;
        boolean $z0;
        java.lang.StringBuilder $r6;
        android.view.contentcapture.ContentCaptureManager$ContentCaptureClient r10;

        r0 := @this: android.content.ContentCaptureOptions;

        r1 := @parameter0: android.content.Context;

        $r3 = r0.<android.content.ContentCaptureOptions: android.util.ArraySet whitelistedComponents>;

        if $r3 != null goto label1;

        return 1;

     label1:
        r10 = virtualinvoke r1.<android.content.Context: android.view.contentcapture.ContentCaptureManager$ContentCaptureClient getContentCaptureClient()>();

        if r10 != null goto label2;

        r2 = <android.content.ContentCaptureOptions: java.lang.String TAG>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isWhitelisted(): no ContentCaptureClient on ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>(r2, $r9);

        return 0;

     label2:
        $r4 = r0.<android.content.ContentCaptureOptions: android.util.ArraySet whitelistedComponents>;

        $r5 = interfaceinvoke r10.<android.view.contentcapture.ContentCaptureManager$ContentCaptureClient: android.content.ComponentName contentCaptureClientGetComponentName()>();

        $z0 = virtualinvoke $r4.<android.util.ArraySet: boolean contains(java.lang.Object)>($r5);

        return $z0;
    }

    public java.lang.String toString()
    {
        android.content.ContentCaptureOptions r0;
        boolean $z0;
        java.lang.StringBuilder $r1, $r18;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.util.ArraySet $r12, $r16;
        java.lang.String $r14, $r22;

        r0 := @this: android.content.ContentCaptureOptions;

        $z0 = r0.<android.content.ContentCaptureOptions: boolean lite>;

        if $z0 == 0 goto label1;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ContentCaptureOptions [loggingLevel=");

        $i5 = r0.<android.content.ContentCaptureOptions: int loggingLevel>;

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (lite)]");

        $r22 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r22;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("ContentCaptureOptions [");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("loggingLevel=");

        $i0 = r0.<android.content.ContentCaptureOptions: int loggingLevel>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", maxBufferSize=");

        $i1 = r0.<android.content.ContentCaptureOptions: int maxBufferSize>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", idleFlushingFrequencyMs=");

        $i2 = r0.<android.content.ContentCaptureOptions: int idleFlushingFrequencyMs>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", textChangeFlushingFrequencyMs=");

        $i3 = r0.<android.content.ContentCaptureOptions: int textChangeFlushingFrequencyMs>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", logHistorySize=");

        $i4 = r0.<android.content.ContentCaptureOptions: int logHistorySize>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r12 = r0.<android.content.ContentCaptureOptions: android.util.ArraySet whitelistedComponents>;

        if $r12 == null goto label2;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", whitelisted=");

        $r16 = r0.<android.content.ContentCaptureOptions: android.util.ArraySet whitelistedComponents>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

     label2:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        $r14 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r14;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.content.ContentCaptureOptions r0;
        android.os.Parcel r1;
        int i0, $i1, $i2, $i3, $i4, $i5;
        boolean $z0, $z1;
        android.util.ArraySet $r2;

        r0 := @this: android.content.ContentCaptureOptions;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $z0 = r0.<android.content.ContentCaptureOptions: boolean lite>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z0);

        $i1 = r0.<android.content.ContentCaptureOptions: int loggingLevel>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $z1 = r0.<android.content.ContentCaptureOptions: boolean lite>;

        if $z1 == 0 goto label1;

        return;

     label1:
        $i2 = r0.<android.content.ContentCaptureOptions: int maxBufferSize>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i2);

        $i3 = r0.<android.content.ContentCaptureOptions: int idleFlushingFrequencyMs>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i3);

        $i4 = r0.<android.content.ContentCaptureOptions: int textChangeFlushingFrequencyMs>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i4);

        $i5 = r0.<android.content.ContentCaptureOptions: int logHistorySize>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i5);

        $r2 = r0.<android.content.ContentCaptureOptions: android.util.ArraySet whitelistedComponents>;

        virtualinvoke r1.<android.os.Parcel: void writeArraySet(android.util.ArraySet)>($r2);

        return;
    }
}
