public abstract class android.content.ContentProvider extends java.lang.Object implements android.content.ContentInterface, android.content.ComponentCallbacks2
{
    private static final java.lang.String TAG;
    private java.lang.String[] mAuthorities;
    private java.lang.String mAuthority;
    private java.lang.ThreadLocal mCallingPackage;
    private android.content.Context mContext;
    private boolean mExported;
    private int mMyUid;
    private boolean mNoPerms;
    private android.content.pm.PathPermission[] mPathPermissions;
    private java.lang.String mReadPermission;
    private boolean mSingleUser;
    private android.content.ContentProvider$Transport mTransport;
    private java.lang.String mWritePermission;

    public void <init>()
    {
        android.content.ContentProvider r0;
        android.content.ContentProvider$Transport $r1;

        r0 := @this: android.content.ContentProvider;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.content.ContentProvider: android.content.Context mContext> = null;

        $r1 = new android.content.ContentProvider$Transport;

        specialinvoke $r1.<android.content.ContentProvider$Transport: void <init>(android.content.ContentProvider)>(r0);

        r0.<android.content.ContentProvider: android.content.ContentProvider$Transport mTransport> = $r1;

        return;
    }

    public void <init>(android.content.Context, java.lang.String, java.lang.String, android.content.pm.PathPermission[])
    {
        android.content.ContentProvider r0;
        android.content.Context r1;
        java.lang.String r2, r3;
        android.content.pm.PathPermission[] r4;
        android.content.ContentProvider$Transport $r5;

        r0 := @this: android.content.ContentProvider;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.content.pm.PathPermission[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.content.ContentProvider: android.content.Context mContext> = null;

        $r5 = new android.content.ContentProvider$Transport;

        specialinvoke $r5.<android.content.ContentProvider$Transport: void <init>(android.content.ContentProvider)>(r0);

        r0.<android.content.ContentProvider: android.content.ContentProvider$Transport mTransport> = $r5;

        r0.<android.content.ContentProvider: android.content.Context mContext> = r1;

        r0.<android.content.ContentProvider: java.lang.String mReadPermission> = r2;

        r0.<android.content.ContentProvider: java.lang.String mWritePermission> = r3;

        r0.<android.content.ContentProvider: android.content.pm.PathPermission[] mPathPermissions> = r4;

        return;
    }

    static android.net.Uri access$000(android.content.ContentProvider, android.net.Uri)
    {
        android.content.ContentProvider r0;
        android.net.Uri r1, $r2;

        r0 := @parameter0: android.content.ContentProvider;

        r1 := @parameter1: android.net.Uri;

        $r2 = specialinvoke r0.<android.content.ContentProvider: android.net.Uri maybeGetUriWithoutUserId(android.net.Uri)>(r1);

        return $r2;
    }

    static android.util.Pair access$100(android.content.ContentProvider, android.util.Pair)
    {
        android.content.ContentProvider r0;
        android.util.Pair r1, $r2;

        r0 := @parameter0: android.content.ContentProvider;

        r1 := @parameter1: android.util.Pair;

        $r2 = specialinvoke r0.<android.content.ContentProvider: android.util.Pair setCallingPackage(android.util.Pair)>(r1);

        return $r2;
    }

    static void access$200(android.content.ContentProvider, java.lang.String) throws java.lang.SecurityException
    {
        android.content.ContentProvider r0;
        java.lang.String r1;

        r0 := @parameter0: android.content.ContentProvider;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<android.content.ContentProvider: void validateIncomingAuthority(java.lang.String)>(r1);

        return;
    }

    private void attachInfo(android.content.Context, android.content.pm.ProviderInfo, boolean)
    {
        android.content.ContentProvider r0;
        android.content.Context r1, $r5;
        android.content.pm.ProviderInfo r2;
        android.content.ContentProvider$Transport r3;
        java.lang.ThreadLocal $r4;
        java.lang.Class $r6;
        java.lang.String $r7, $r8, $r9, $r11;
        boolean $z1, $z2, z3, z4, $z5;
        android.content.pm.PathPermission[] $r10;
        int $i0, $i1, $i2;
        java.lang.Object $r12;
        android.app.AppOpsManager $r13;

        r0 := @this: android.content.ContentProvider;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.pm.ProviderInfo;

        z3 := @parameter2: boolean;

        r0.<android.content.ContentProvider: boolean mNoPerms> = z3;

        $r4 = new java.lang.ThreadLocal;

        specialinvoke $r4.<java.lang.ThreadLocal: void <init>()>();

        r0.<android.content.ContentProvider: java.lang.ThreadLocal mCallingPackage> = $r4;

        $r5 = r0.<android.content.ContentProvider: android.content.Context mContext>;

        if $r5 != null goto label6;

        r0.<android.content.ContentProvider: android.content.Context mContext> = r1;

        if r1 == null goto label1;

        r3 = r0.<android.content.ContentProvider: android.content.ContentProvider$Transport mTransport>;

        if r3 == null goto label1;

        $r12 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("appops");

        $r13 = (android.app.AppOpsManager) $r12;

        r3.<android.content.ContentProvider$Transport: android.app.AppOpsManager mAppOpsManager> = $r13;

     label1:
        $i2 = staticinvoke <android.os.Process: int myUid()>();

        r0.<android.content.ContentProvider: int mMyUid> = $i2;

        if r2 == null goto label4;

        $r8 = r2.<android.content.pm.ProviderInfo: java.lang.String readPermission>;

        virtualinvoke r0.<android.content.ContentProvider: void setReadPermission(java.lang.String)>($r8);

        $r9 = r2.<android.content.pm.ProviderInfo: java.lang.String writePermission>;

        virtualinvoke r0.<android.content.ContentProvider: void setWritePermission(java.lang.String)>($r9);

        $r10 = r2.<android.content.pm.ProviderInfo: android.content.pm.PathPermission[] pathPermissions>;

        virtualinvoke r0.<android.content.ContentProvider: void setPathPermissions(android.content.pm.PathPermission[])>($r10);

        $z2 = r2.<android.content.pm.ProviderInfo: boolean exported>;

        r0.<android.content.ContentProvider: boolean mExported> = $z2;

        $i0 = r2.<android.content.pm.ProviderInfo: int flags>;

        $i1 = $i0 & 1073741824;

        if $i1 == 0 goto label2;

        z4 = 1;

        goto label3;

     label2:
        z4 = 0;

     label3:
        r0.<android.content.ContentProvider: boolean mSingleUser> = z4;

        $r11 = r2.<android.content.pm.ProviderInfo: java.lang.String authority>;

        virtualinvoke r0.<android.content.ContentProvider: void setAuthorities(java.lang.String)>($r11);

     label4:
        $z5 = <android.os.Build: boolean IS_DEBUGGABLE>;

        if $z5 == 0 goto label5;

        $r6 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getSimpleName()>();

        $z1 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>($r7, 2);

        virtualinvoke r0.<android.content.ContentProvider: void setTransportLoggingEnabled(boolean)>($z1);

     label5:
        virtualinvoke r0.<android.content.ContentProvider: boolean onCreate()>();

     label6:
        return;
    }

    private int checkPermissionAndAppOp(java.lang.String, java.lang.String, java.lang.String, android.os.IBinder)
    {
        android.content.ContentProvider r0;
        java.lang.String r1, r2, r3;
        android.os.IBinder r4;
        android.content.Context $r5;
        int $i0, $i1, $i2, $i3, $i4;
        android.content.ContentProvider$Transport $r6;

        r0 := @this: android.content.ContentProvider;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.os.IBinder;

        $r5 = virtualinvoke r0.<android.content.ContentProvider: android.content.Context getContext()>();

        $i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i2 = virtualinvoke $r5.<android.content.Context: int checkPermission(java.lang.String,int,int,android.os.IBinder)>(r1, $i0, $i1, r4);

        if $i2 == 0 goto label1;

        return 2;

     label1:
        $r6 = r0.<android.content.ContentProvider: android.content.ContentProvider$Transport mTransport>;

        $i3 = staticinvoke <android.app.AppOpsManager: int permissionToOpCode(java.lang.String)>(r1);

        $i4 = staticinvoke <android.content.ContentProvider$Transport: int access$300(android.content.ContentProvider$Transport,java.lang.String,java.lang.String,int)>($r6, r2, r3, $i3);

        return $i4;
    }

    public static android.content.ContentProvider coerceToLocalContentProvider(android.content.IContentProvider)
    {
        android.content.IContentProvider r0;
        boolean $z0;
        android.content.ContentProvider$Transport $r1;
        android.content.ContentProvider $r2;

        r0 := @parameter0: android.content.IContentProvider;

        $z0 = r0 instanceof android.content.ContentProvider$Transport;

        if $z0 == 0 goto label1;

        $r1 = (android.content.ContentProvider$Transport) r0;

        $r2 = virtualinvoke $r1.<android.content.ContentProvider$Transport: android.content.ContentProvider getContentProvider()>();

        return $r2;

     label1:
        return null;
    }

    public static java.lang.String getAuthorityWithoutUserId(java.lang.String)
    {
        java.lang.String r0, $r1;
        int $i0, $i1;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        $i0 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int)>(64);

        $i1 = $i0 + 1;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i1);

        return $r1;
    }

    public static android.net.Uri getUriWithoutUserId(android.net.Uri)
    {
        android.net.Uri r0, $r5;
        android.net.Uri$Builder r1;
        java.lang.String $r2, $r3;

        r0 := @parameter0: android.net.Uri;

        if r0 != null goto label1;

        return null;

     label1:
        r1 = virtualinvoke r0.<android.net.Uri: android.net.Uri$Builder buildUpon()>();

        $r2 = virtualinvoke r0.<android.net.Uri: java.lang.String getAuthority()>();

        $r3 = staticinvoke <android.content.ContentProvider: java.lang.String getAuthorityWithoutUserId(java.lang.String)>($r2);

        virtualinvoke r1.<android.net.Uri$Builder: android.net.Uri$Builder authority(java.lang.String)>($r3);

        $r5 = virtualinvoke r1.<android.net.Uri$Builder: android.net.Uri build()>();

        return $r5;
    }

    public static android.os.UserHandle getUserHandleFromUri(android.net.Uri)
    {
        android.net.Uri r0;
        android.os.UserHandle $r1, $r2;
        int $i0, $i1;

        r0 := @parameter0: android.net.Uri;

        $r1 = staticinvoke <android.os.Process: android.os.UserHandle myUserHandle()>();

        $i0 = virtualinvoke $r1.<android.os.UserHandle: int getIdentifier()>();

        $i1 = staticinvoke <android.content.ContentProvider: int getUserIdFromUri(android.net.Uri,int)>(r0, $i0);

        $r2 = staticinvoke <android.os.UserHandle: android.os.UserHandle of(int)>($i1);

        return $r2;
    }

    public static int getUserIdFromAuthority(java.lang.String)
    {
        java.lang.String r0;
        int $i0;

        r0 := @parameter0: java.lang.String;

        $i0 = staticinvoke <android.content.ContentProvider: int getUserIdFromAuthority(java.lang.String,int)>(r0, -2);

        return $i0;
    }

    public static int getUserIdFromAuthority(java.lang.String, int)
    {
        int i0, i2, i3;
        java.lang.Throwable $r0;
        java.lang.String r1, r2;

        r1 := @parameter0: java.lang.String;

        i2 := @parameter1: int;

        if r1 != null goto label1;

        return i2;

     label1:
        i0 = virtualinvoke r1.<java.lang.String: int lastIndexOf(int)>(64);

        if i0 != -1 goto label2;

        return i2;

     label2:
        r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

     label3:
        i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r2);

     label4:
        return i3;

     label5:
        $r0 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ContentProvider", "Error parsing userId.", $r0);

        return -10000;

        catch java.lang.NumberFormatException from label3 to label4 with label5;
    }

    public static int getUserIdFromUri(android.net.Uri)
    {
        android.net.Uri r0;
        int $i0;

        r0 := @parameter0: android.net.Uri;

        $i0 = staticinvoke <android.content.ContentProvider: int getUserIdFromUri(android.net.Uri,int)>(r0, -2);

        return $i0;
    }

    public static int getUserIdFromUri(android.net.Uri, int)
    {
        android.net.Uri r0;
        int i0, $i1;
        java.lang.String $r1;

        r0 := @parameter0: android.net.Uri;

        i0 := @parameter1: int;

        if r0 != null goto label1;

        return i0;

     label1:
        $r1 = virtualinvoke r0.<android.net.Uri: java.lang.String getAuthority()>();

        $i1 = staticinvoke <android.content.ContentProvider: int getUserIdFromAuthority(java.lang.String,int)>($r1, i0);

        return $i1;
    }

    public static android.net.Uri maybeAddUserId(android.net.Uri, int)
    {
        android.net.Uri r0, $r13;
        int i0;
        android.net.Uri$Builder r1;
        java.lang.String $r3, $r4, $r9, $r11;
        boolean $z0, $z1;
        java.lang.StringBuilder $r5;

        r0 := @parameter0: android.net.Uri;

        i0 := @parameter1: int;

        if r0 != null goto label1;

        return null;

     label1:
        if i0 == -2 goto label2;

        $r3 = "content";

        $r4 = virtualinvoke r0.<android.net.Uri: java.lang.String getScheme()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label2;

        $z1 = staticinvoke <android.content.ContentProvider: boolean uriHasUserId(android.net.Uri)>(r0);

        if $z1 != 0 goto label2;

        r1 = virtualinvoke r0.<android.net.Uri: android.net.Uri$Builder buildUpon()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@");

        $r9 = virtualinvoke r0.<android.net.Uri: java.lang.String getEncodedAuthority()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<android.net.Uri$Builder: android.net.Uri$Builder encodedAuthority(java.lang.String)>($r11);

        $r13 = virtualinvoke r1.<android.net.Uri$Builder: android.net.Uri build()>();

        return $r13;

     label2:
        return r0;
    }

    private android.net.Uri maybeGetUriWithoutUserId(android.net.Uri)
    {
        android.content.ContentProvider r0;
        android.net.Uri r1, $r2;
        boolean $z0;

        r0 := @this: android.content.ContentProvider;

        r1 := @parameter0: android.net.Uri;

        $z0 = r0.<android.content.ContentProvider: boolean mSingleUser>;

        if $z0 == 0 goto label1;

        return r1;

     label1:
        $r2 = staticinvoke <android.content.ContentProvider: android.net.Uri getUriWithoutUserId(android.net.Uri)>(r1);

        return $r2;
    }

    private android.util.Pair setCallingPackage(android.util.Pair)
    {
        android.content.ContentProvider r0;
        android.util.Pair r1, r2;
        java.lang.ThreadLocal $r3, $r5;
        java.lang.Object $r4;

        r0 := @this: android.content.ContentProvider;

        r1 := @parameter0: android.util.Pair;

        $r3 = r0.<android.content.ContentProvider: java.lang.ThreadLocal mCallingPackage>;

        $r4 = virtualinvoke $r3.<java.lang.ThreadLocal: java.lang.Object get()>();

        r2 = (android.util.Pair) $r4;

        $r5 = r0.<android.content.ContentProvider: java.lang.ThreadLocal mCallingPackage>;

        virtualinvoke $r5.<java.lang.ThreadLocal: void set(java.lang.Object)>(r1);

        virtualinvoke r0.<android.content.ContentProvider: void onCallingPackageChanged()>();

        return r2;
    }

    public static boolean uriHasUserId(android.net.Uri)
    {
        android.net.Uri r0;
        java.lang.String $r1;
        boolean $z0, $z1;

        r0 := @parameter0: android.net.Uri;

        if r0 != null goto label1;

        return 0;

     label1:
        $r1 = virtualinvoke r0.<android.net.Uri: java.lang.String getUserInfo()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        $z1 = $z0 ^ 1;

        return $z1;
    }

    private void validateIncomingAuthority(java.lang.String) throws java.lang.SecurityException
    {
        android.content.ContentProvider r0;
        java.lang.String $r1, $r6, $r10, $r15, r17, r19, r21;
        boolean $z0;
        java.lang.StringBuilder $r2, $r7, $r13;
        java.lang.String[] $r9;
        java.lang.SecurityException $r12;

        r0 := @this: android.content.ContentProvider;

        r17 := @parameter0: java.lang.String;

        $r1 = staticinvoke <android.content.ContentProvider: java.lang.String getAuthorityWithoutUserId(java.lang.String)>(r17);

        $z0 = virtualinvoke r0.<android.content.ContentProvider: boolean matchesOurAuthorities(java.lang.String)>($r1);

        if $z0 != 0 goto label3;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The authority ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r17);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not match the one of the contentProvider: ");

        r19 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = r0.<android.content.ContentProvider: java.lang.String mAuthority>;

        if $r6 == null goto label1;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19);

        $r15 = r0.<android.content.ContentProvider: java.lang.String mAuthority>;

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        r21 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label2;

     label1:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19);

        $r9 = r0.<android.content.ContentProvider: java.lang.String[] mAuthorities>;

        $r10 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>($r9);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        r21 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        $r12 = new java.lang.SecurityException;

        specialinvoke $r12.<java.lang.SecurityException: void <init>(java.lang.String)>(r21);

        throw $r12;

     label3:
        return;
    }

    public android.content.ContentProviderResult[] applyBatch(java.lang.String, java.util.ArrayList) throws android.content.OperationApplicationException
    {
        android.content.ContentProvider r0;
        java.lang.String r1;
        java.util.ArrayList r2;
        android.content.ContentProviderResult[] $r3;

        r0 := @this: android.content.ContentProvider;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.ArrayList;

        $r3 = virtualinvoke r0.<android.content.ContentProvider: android.content.ContentProviderResult[] applyBatch(java.util.ArrayList)>(r2);

        return $r3;
    }

    public android.content.ContentProviderResult[] applyBatch(java.util.ArrayList) throws android.content.OperationApplicationException
    {
        android.content.ContentProvider r0;
        java.util.ArrayList r1;
        int i0, i1;
        android.content.ContentProviderResult[] r2;
        java.lang.Object $r3;
        android.content.ContentProviderOperation $r4;
        android.content.ContentProviderResult $r5;

        r0 := @this: android.content.ContentProvider;

        r1 := @parameter0: java.util.ArrayList;

        i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        r2 = newarray (android.content.ContentProviderResult)[i0];

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r3 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r4 = (android.content.ContentProviderOperation) $r3;

        $r5 = virtualinvoke $r4.<android.content.ContentProviderOperation: android.content.ContentProviderResult apply(android.content.ContentProvider,android.content.ContentProviderResult[],int)>(r0, r2, i1);

        r2[i1] = $r5;

        i1 = i1 + 1;

        goto label1;

     label2:
        return r2;
    }

    public void attachInfo(android.content.Context, android.content.pm.ProviderInfo)
    {
        android.content.ContentProvider r0;
        android.content.Context r1;
        android.content.pm.ProviderInfo r2;

        r0 := @this: android.content.ContentProvider;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.pm.ProviderInfo;

        specialinvoke r0.<android.content.ContentProvider: void attachInfo(android.content.Context,android.content.pm.ProviderInfo,boolean)>(r1, r2, 0);

        return;
    }

    public void attachInfoForTesting(android.content.Context, android.content.pm.ProviderInfo)
    {
        android.content.ContentProvider r0;
        android.content.Context r1;
        android.content.pm.ProviderInfo r2;

        r0 := @this: android.content.ContentProvider;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.pm.ProviderInfo;

        specialinvoke r0.<android.content.ContentProvider: void attachInfo(android.content.Context,android.content.pm.ProviderInfo,boolean)>(r1, r2, 1);

        return;
    }

    public int bulkInsert(android.net.Uri, android.content.ContentValues[])
    {
        android.content.ContentProvider r0;
        android.net.Uri r1;
        android.content.ContentValues[] r2;
        int i0, i1;
        android.content.ContentValues $r3;

        r0 := @this: android.content.ContentProvider;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.content.ContentValues[];

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r3 = r2[i1];

        virtualinvoke r0.<android.content.ContentProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>(r1, $r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        return i0;
    }

    public android.os.Bundle call(java.lang.String, java.lang.String, android.os.Bundle)
    {
        android.content.ContentProvider r0;
        java.lang.String r1, r2;
        android.os.Bundle r3;

        r0 := @this: android.content.ContentProvider;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.Bundle;

        return null;
    }

    public android.os.Bundle call(java.lang.String, java.lang.String, java.lang.String, android.os.Bundle)
    {
        android.content.ContentProvider r0;
        java.lang.String r1, r2, r3;
        android.os.Bundle r4, $r5;

        r0 := @this: android.content.ContentProvider;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.os.Bundle;

        $r5 = virtualinvoke r0.<android.content.ContentProvider: android.os.Bundle call(java.lang.String,java.lang.String,android.os.Bundle)>(r2, r3, r4);

        return $r5;
    }

    public android.net.Uri canonicalize(android.net.Uri)
    {
        android.content.ContentProvider r0;
        android.net.Uri r1;

        r0 := @this: android.content.ContentProvider;

        r1 := @parameter0: android.net.Uri;

        return null;
    }

    public int checkUriPermission(android.net.Uri, int, int)
    {
        android.content.ContentProvider r0;
        android.net.Uri r1;
        int i0, i1;

        r0 := @this: android.content.ContentProvider;

        r1 := @parameter0: android.net.Uri;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        return -1;
    }

    boolean checkUser(int, int, android.content.Context)
    {
        android.content.ContentProvider r0;
        int i0, i1, i2, i3, $i4, $i5;
        android.content.Context r1;
        boolean $z0, z1;

        r0 := @this: android.content.ContentProvider;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.content.Context;

        i2 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i1);

        i3 = virtualinvoke r1.<android.content.Context: int getUserId()>();

        z1 = 1;

        if i2 == i3 goto label4;

        $z0 = r0.<android.content.ContentProvider: boolean mSingleUser>;

        if $z0 == 0 goto label1;

        goto label4;

     label1:
        $i4 = virtualinvoke r1.<android.content.Context: int checkPermission(java.lang.String,int,int)>("android.permission.INTERACT_ACROSS_USERS", i0, i1);

        if $i4 == 0 goto label3;

        $i5 = virtualinvoke r1.<android.content.Context: int checkPermission(java.lang.String,int,int)>("android.permission.INTERACT_ACROSS_USERS_FULL", i0, i1);

        if $i5 != 0 goto label2;

        goto label3;

     label2:
        z1 = 0;

        goto label3;

     label3:
        return z1;

     label4:
        return 1;
    }

    public final android.content.ContentProvider$CallingIdentity clearCallingIdentity()
    {
        android.content.ContentProvider r0;
        android.content.ContentProvider$CallingIdentity $r1;
        long $l0;
        android.util.Pair $r2;

        r0 := @this: android.content.ContentProvider;

        $r1 = new android.content.ContentProvider$CallingIdentity;

        $l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        $r2 = specialinvoke r0.<android.content.ContentProvider: android.util.Pair setCallingPackage(android.util.Pair)>(null);

        specialinvoke $r1.<android.content.ContentProvider$CallingIdentity: void <init>(android.content.ContentProvider,long,android.util.Pair)>(r0, $l0, $r2);

        return $r1;
    }

    public int delete(android.net.Uri, android.os.Bundle)
    {
        android.content.ContentProvider r0;
        android.net.Uri r1;
        java.lang.String $r2;
        java.lang.String[] $r3;
        int $i0;
        android.os.Bundle r4;

        r0 := @this: android.content.ContentProvider;

        r1 := @parameter0: android.net.Uri;

        r4 := @parameter1: android.os.Bundle;

        if r4 == null goto label1;

        goto label2;

     label1:
        r4 = <android.os.Bundle: android.os.Bundle EMPTY>;

     label2:
        $r2 = virtualinvoke r4.<android.os.Bundle: java.lang.String getString(java.lang.String)>("android:query-arg-sql-selection");

        $r3 = virtualinvoke r4.<android.os.Bundle: java.lang.String[] getStringArray(java.lang.String)>("android:query-arg-sql-selection-args");

        $i0 = virtualinvoke r0.<android.content.ContentProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])>(r1, $r2, $r3);

        return $i0;
    }

    public abstract int delete(android.net.Uri, java.lang.String, java.lang.String[]);

    public void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        android.content.ContentProvider r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;

        r0 := @this: android.content.ContentProvider;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("nothing to dump");

        return;
    }

    protected int enforceReadPermissionInner(android.net.Uri, java.lang.String, java.lang.String, android.os.IBinder) throws java.lang.SecurityException
    {
        android.content.ContentProvider r0;
        android.net.Uri r1, r28;
        android.os.IBinder r2;
        android.content.Context r3;
        int i0, i1, i2, i3, $i4, $i5, i6, i7, i8, i9, $i10;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, z7, $z8;
        java.lang.String r4, r6, r8, $r9, $r10, r24, r25, r26, r27, r30, $r34, $r36;
        android.content.pm.PathPermission[] r5;
        android.content.pm.PathPermission r7;
        java.lang.StringBuilder $r20, $r31;
        java.lang.Class $r33;
        java.lang.SecurityException $r35;

        r0 := @this: android.content.ContentProvider;

        r1 := @parameter0: android.net.Uri;

        r24 := @parameter1: java.lang.String;

        r25 := @parameter2: java.lang.String;

        r2 := @parameter3: android.os.IBinder;

        r3 = virtualinvoke r0.<android.content.ContentProvider: android.content.Context getContext()>();

        i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        r26 = null;

        i6 = 0;

        $i4 = r0.<android.content.ContentProvider: int mMyUid>;

        z0 = staticinvoke <android.os.UserHandle: boolean isSameApp(int,int)>(i1, $i4);

        i7 = 0;

        if z0 == 0 goto label01;

        return 0;

     label01:
        $z1 = r0.<android.content.ContentProvider: boolean mExported>;

        if $z1 == 0 goto label12;

        $z5 = virtualinvoke r0.<android.content.ContentProvider: boolean checkUser(int,int,android.content.Context)>(i0, i1, r3);

        if $z5 == 0 goto label12;

        r4 = virtualinvoke r0.<android.content.ContentProvider: java.lang.String getReadPermission()>();

        if r4 == null goto label03;

        i8 = specialinvoke r0.<android.content.ContentProvider: int checkPermissionAndAppOp(java.lang.String,java.lang.String,java.lang.String,android.os.IBinder)>(r4, r24, r25, r2);

        if i8 != 0 goto label02;

        return 0;

     label02:
        r26 = r4;

        i6 = staticinvoke <java.lang.Math: int max(int,int)>(0, i8);

     label03:
        if r4 != null goto label04;

        z7 = 1;

        goto label05;

     label04:
        z7 = 0;

     label05:
        r5 = virtualinvoke r0.<android.content.ContentProvider: android.content.pm.PathPermission[] getPathPermissions()>();

        if r5 == null goto label10;

        r6 = virtualinvoke r1.<android.net.Uri: java.lang.String getPath()>();

        i2 = lengthof r5;

     label06:
        if i7 >= i2 goto label09;

        r7 = r5[i7];

        r8 = virtualinvoke r7.<android.content.pm.PathPermission: java.lang.String getReadPermission()>();

        if r8 == null goto label08;

        $z6 = virtualinvoke r7.<android.content.pm.PathPermission: boolean match(java.lang.String)>(r6);

        if $z6 == 0 goto label08;

        i3 = specialinvoke r0.<android.content.ContentProvider: int checkPermissionAndAppOp(java.lang.String,java.lang.String,java.lang.String,android.os.IBinder)>(r8, r24, r25, r2);

        if i3 != 0 goto label07;

        return 0;

     label07:
        z7 = 0;

        i6 = staticinvoke <java.lang.Math: int max(int,int)>(i6, i3);

        r26 = r8;

        goto label08;

     label08:
        i7 = i7 + 1;

        goto label06;

     label09:
        goto label10;

     label10:
        if z7 == 0 goto label11;

        return 0;

     label11:
        r27 = r26;

        goto label13;

     label12:
        r27 = null;

        i6 = 0;

     label13:
        i9 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i1);

        $z8 = r0.<android.content.ContentProvider: boolean mSingleUser>;

        if $z8 == 0 goto label14;

        $i5 = r0.<android.content.ContentProvider: int mMyUid>;

        $z4 = staticinvoke <android.os.UserHandle: boolean isSameUser(int,int)>($i5, i1);

        if $z4 != 0 goto label14;

        r28 = staticinvoke <android.content.ContentProvider: android.net.Uri maybeAddUserId(android.net.Uri,int)>(r1, i9);

        goto label15;

     label14:
        r28 = r1;

     label15:
        $i10 = virtualinvoke r3.<android.content.Context: int checkUriPermission(android.net.Uri,int,int,int,android.os.IBinder)>(r28, i0, i1, 1, r2);

        if $i10 != 0 goto label16;

        return 0;

     label16:
        if i6 != 1 goto label17;

        return 1;

     label17:
        $r10 = "android.permission.MANAGE_DOCUMENTS";

        $r9 = r0.<android.content.ContentProvider: java.lang.String mReadPermission>;

        $z2 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z2 != 0 goto label19;

        $z3 = r0.<android.content.ContentProvider: boolean mExported>;

        if $z3 == 0 goto label18;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires ");

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r27);

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", or grantUriPermission()");

        r30 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label20;

     label18:
        r30 = " requires the provider be exported, or grantUriPermission()";

        goto label20;

     label19:
        r30 = " requires that you obtain access using ACTION_OPEN_DOCUMENT or related APIs";

     label20:
        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: reading ");

        $r33 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r34 = virtualinvoke $r33.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" uri ");

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from pid=");

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r30);

        $r35 = new java.lang.SecurityException;

        $r36 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r35.<java.lang.SecurityException: void <init>(java.lang.String)>($r36);

        throw $r35;
    }

    protected int enforceWritePermissionInner(android.net.Uri, java.lang.String, java.lang.String, android.os.IBinder) throws java.lang.SecurityException
    {
        android.content.ContentProvider r0;
        android.net.Uri r1;
        android.os.IBinder r2;
        android.content.Context r3;
        int i0, i1, i2, i3, $i4, i5, i6, i7, $i8;
        java.lang.String r4, r6, r8, $r12, $r22, r27, r28, r29, r30, r32;
        android.content.pm.PathPermission[] r5;
        android.content.pm.PathPermission r7;
        boolean $z0, $z1, $z2, $z3, $z4, z5;
        java.lang.StringBuilder $r9, $r23;
        java.lang.Class $r11;
        java.lang.SecurityException $r21;

        r0 := @this: android.content.ContentProvider;

        r1 := @parameter0: android.net.Uri;

        r27 := @parameter1: java.lang.String;

        r28 := @parameter2: java.lang.String;

        r2 := @parameter3: android.os.IBinder;

        r3 = virtualinvoke r0.<android.content.ContentProvider: android.content.Context getContext()>();

        i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        r29 = null;

        i5 = 0;

        $i4 = r0.<android.content.ContentProvider: int mMyUid>;

        $z0 = staticinvoke <android.os.UserHandle: boolean isSameApp(int,int)>(i1, $i4);

        if $z0 == 0 goto label01;

        return 0;

     label01:
        $z1 = r0.<android.content.ContentProvider: boolean mExported>;

        if $z1 == 0 goto label12;

        $z3 = virtualinvoke r0.<android.content.ContentProvider: boolean checkUser(int,int,android.content.Context)>(i0, i1, r3);

        if $z3 == 0 goto label12;

        r4 = virtualinvoke r0.<android.content.ContentProvider: java.lang.String getWritePermission()>();

        if r4 == null goto label03;

        i6 = specialinvoke r0.<android.content.ContentProvider: int checkPermissionAndAppOp(java.lang.String,java.lang.String,java.lang.String,android.os.IBinder)>(r4, r27, r28, r2);

        if i6 != 0 goto label02;

        return 0;

     label02:
        r29 = r4;

        i5 = staticinvoke <java.lang.Math: int max(int,int)>(0, i6);

     label03:
        if r4 != null goto label04;

        z5 = 1;

        goto label05;

     label04:
        z5 = 0;

     label05:
        r5 = virtualinvoke r0.<android.content.ContentProvider: android.content.pm.PathPermission[] getPathPermissions()>();

        if r5 == null goto label10;

        r6 = virtualinvoke r1.<android.net.Uri: java.lang.String getPath()>();

        i2 = lengthof r5;

        i7 = 0;

     label06:
        if i7 >= i2 goto label09;

        r7 = r5[i7];

        r8 = virtualinvoke r7.<android.content.pm.PathPermission: java.lang.String getWritePermission()>();

        if r8 == null goto label08;

        $z4 = virtualinvoke r7.<android.content.pm.PathPermission: boolean match(java.lang.String)>(r6);

        if $z4 == 0 goto label08;

        i3 = specialinvoke r0.<android.content.ContentProvider: int checkPermissionAndAppOp(java.lang.String,java.lang.String,java.lang.String,android.os.IBinder)>(r8, r27, r28, r2);

        if i3 != 0 goto label07;

        return 0;

     label07:
        z5 = 0;

        i5 = staticinvoke <java.lang.Math: int max(int,int)>(i5, i3);

        r29 = r8;

        goto label08;

     label08:
        i7 = i7 + 1;

        goto label06;

     label09:
        goto label10;

     label10:
        if z5 == 0 goto label11;

        return 0;

     label11:
        r30 = r29;

        goto label13;

     label12:
        r30 = null;

        i5 = 0;

     label13:
        $i8 = virtualinvoke r3.<android.content.Context: int checkUriPermission(android.net.Uri,int,int,int,android.os.IBinder)>(r1, i0, i1, 2, r2);

        if $i8 != 0 goto label14;

        return 0;

     label14:
        if i5 != 1 goto label15;

        return 1;

     label15:
        $z2 = r0.<android.content.ContentProvider: boolean mExported>;

        if $z2 == 0 goto label16;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires ");

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r30);

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", or grantUriPermission()");

        r32 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label17;

     label16:
        r32 = " requires the provider be exported, or grantUriPermission()";

     label17:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: writing ");

        $r11 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r12 = virtualinvoke $r11.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" uri ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from pid=");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r32);

        $r21 = new java.lang.SecurityException;

        $r22 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r21.<java.lang.SecurityException: void <init>(java.lang.String)>($r22);

        throw $r21;
    }

    public android.app.AppOpsManager getAppOpsManager()
    {
        android.content.ContentProvider r0;
        android.content.ContentProvider$Transport $r1;
        android.app.AppOpsManager $r2;

        r0 := @this: android.content.ContentProvider;

        $r1 = r0.<android.content.ContentProvider: android.content.ContentProvider$Transport mTransport>;

        $r2 = $r1.<android.content.ContentProvider$Transport: android.app.AppOpsManager mAppOpsManager>;

        return $r2;
    }

    public final java.lang.String getCallingAttributionTag()
    {
        android.content.ContentProvider r0;
        android.util.Pair r1;
        java.lang.ThreadLocal $r2;
        java.lang.Object $r3, $r4;
        java.lang.String $r5;

        r0 := @this: android.content.ContentProvider;

        $r2 = r0.<android.content.ContentProvider: java.lang.ThreadLocal mCallingPackage>;

        $r3 = virtualinvoke $r2.<java.lang.ThreadLocal: java.lang.Object get()>();

        r1 = (android.util.Pair) $r3;

        if r1 == null goto label1;

        $r4 = r1.<android.util.Pair: java.lang.Object second>;

        $r5 = (java.lang.String) $r4;

        return $r5;

     label1:
        return null;
    }

    public final java.lang.String getCallingFeatureId()
    {
        android.content.ContentProvider r0;
        java.lang.String $r1;

        r0 := @this: android.content.ContentProvider;

        $r1 = virtualinvoke r0.<android.content.ContentProvider: java.lang.String getCallingAttributionTag()>();

        return $r1;
    }

    public final java.lang.String getCallingPackage()
    {
        android.content.ContentProvider r0;
        android.util.Pair r1;
        java.lang.ThreadLocal $r2;
        java.lang.Object $r3, $r6, $r8;
        android.content.ContentProvider$Transport $r4;
        android.app.AppOpsManager $r5;
        int $i0;
        java.lang.String $r7, $r9;

        r0 := @this: android.content.ContentProvider;

        $r2 = r0.<android.content.ContentProvider: java.lang.ThreadLocal mCallingPackage>;

        $r3 = virtualinvoke $r2.<java.lang.ThreadLocal: java.lang.Object get()>();

        r1 = (android.util.Pair) $r3;

        if r1 == null goto label1;

        $r4 = r0.<android.content.ContentProvider: android.content.ContentProvider$Transport mTransport>;

        $r5 = $r4.<android.content.ContentProvider$Transport: android.app.AppOpsManager mAppOpsManager>;

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r6 = r1.<android.util.Pair: java.lang.Object first>;

        $r7 = (java.lang.String) $r6;

        virtualinvoke $r5.<android.app.AppOpsManager: void checkPackage(int,java.lang.String)>($i0, $r7);

        $r8 = r1.<android.util.Pair: java.lang.Object first>;

        $r9 = (java.lang.String) $r8;

        return $r9;

     label1:
        return null;
    }

    public final java.lang.String getCallingPackageUnchecked()
    {
        android.content.ContentProvider r0;
        android.util.Pair r1;
        java.lang.ThreadLocal $r2;
        java.lang.Object $r3, $r4;
        java.lang.String $r5;

        r0 := @this: android.content.ContentProvider;

        $r2 = r0.<android.content.ContentProvider: java.lang.ThreadLocal mCallingPackage>;

        $r3 = virtualinvoke $r2.<java.lang.ThreadLocal: java.lang.Object get()>();

        r1 = (android.util.Pair) $r3;

        if r1 == null goto label1;

        $r4 = r1.<android.util.Pair: java.lang.Object first>;

        $r5 = (java.lang.String) $r4;

        return $r5;

     label1:
        return null;
    }

    public final android.content.Context getContext()
    {
        android.content.ContentProvider r0;
        android.content.Context $r1;

        r0 := @this: android.content.ContentProvider;

        $r1 = r0.<android.content.ContentProvider: android.content.Context mContext>;

        return $r1;
    }

    public android.content.IContentProvider getIContentProvider()
    {
        android.content.ContentProvider r0;
        android.content.ContentProvider$Transport $r1;

        r0 := @this: android.content.ContentProvider;

        $r1 = r0.<android.content.ContentProvider: android.content.ContentProvider$Transport mTransport>;

        return $r1;
    }

    public final android.content.pm.PathPermission[] getPathPermissions()
    {
        android.content.ContentProvider r0;
        android.content.pm.PathPermission[] $r1;

        r0 := @this: android.content.ContentProvider;

        $r1 = r0.<android.content.ContentProvider: android.content.pm.PathPermission[] mPathPermissions>;

        return $r1;
    }

    public final java.lang.String getReadPermission()
    {
        android.content.ContentProvider r0;
        java.lang.String $r1;

        r0 := @this: android.content.ContentProvider;

        $r1 = r0.<android.content.ContentProvider: java.lang.String mReadPermission>;

        return $r1;
    }

    public java.lang.String[] getStreamTypes(android.net.Uri, java.lang.String)
    {
        android.content.ContentProvider r0;
        android.net.Uri r1;
        java.lang.String r2;

        r0 := @this: android.content.ContentProvider;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String;

        return null;
    }

    public abstract java.lang.String getType(android.net.Uri);

    public final java.lang.String getWritePermission()
    {
        android.content.ContentProvider r0;
        java.lang.String $r1;

        r0 := @this: android.content.ContentProvider;

        $r1 = r0.<android.content.ContentProvider: java.lang.String mWritePermission>;

        return $r1;
    }

    public abstract android.net.Uri insert(android.net.Uri, android.content.ContentValues);

    public android.net.Uri insert(android.net.Uri, android.content.ContentValues, android.os.Bundle)
    {
        android.content.ContentProvider r0;
        android.net.Uri r1, $r4;
        android.content.ContentValues r2;
        android.os.Bundle r3;

        r0 := @this: android.content.ContentProvider;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.content.ContentValues;

        r3 := @parameter2: android.os.Bundle;

        $r4 = virtualinvoke r0.<android.content.ContentProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>(r1, r2);

        return $r4;
    }

    protected boolean isTemporary()
    {
        android.content.ContentProvider r0;

        r0 := @this: android.content.ContentProvider;

        return 0;
    }

    protected final boolean matchesOurAuthorities(java.lang.String)
    {
        android.content.ContentProvider r0;
        java.lang.String r1, $r3, r4;
        int i0, i1;
        java.lang.String[] $r2, r5;
        boolean $z0, $z1;

        r0 := @this: android.content.ContentProvider;

        r1 := @parameter0: java.lang.String;

        r4 = r0.<android.content.ContentProvider: java.lang.String mAuthority>;

        if r4 == null goto label1;

        $z1 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        return $z1;

     label1:
        r5 = r0.<android.content.ContentProvider: java.lang.String[] mAuthorities>;

        if r5 == null goto label4;

        i0 = lengthof r5;

        i1 = 0;

     label2:
        if i1 >= i0 goto label4;

        $r2 = r0.<android.content.ContentProvider: java.lang.String[] mAuthorities>;

        $r3 = $r2[i1];

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label3;

        return 1;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        return 0;
    }

    public void onCallingPackageChanged()
    {
        android.content.ContentProvider r0;

        r0 := @this: android.content.ContentProvider;

        return;
    }

    public void onConfigurationChanged(android.content.res.Configuration)
    {
        android.content.ContentProvider r0;
        android.content.res.Configuration r1;

        r0 := @this: android.content.ContentProvider;

        r1 := @parameter0: android.content.res.Configuration;

        return;
    }

    public abstract boolean onCreate();

    public void onLowMemory()
    {
        android.content.ContentProvider r0;

        r0 := @this: android.content.ContentProvider;

        return;
    }

    public void onTrimMemory(int)
    {
        android.content.ContentProvider r0;
        int i0;

        r0 := @this: android.content.ContentProvider;

        i0 := @parameter0: int;

        return;
    }

    public android.content.res.AssetFileDescriptor openAssetFile(android.net.Uri, java.lang.String) throws java.io.FileNotFoundException
    {
        android.content.ContentProvider r0;
        java.lang.String r1;
        android.content.res.AssetFileDescriptor $r2, r5;
        android.net.Uri r3;
        android.os.ParcelFileDescriptor r4;

        r0 := @this: android.content.ContentProvider;

        r3 := @parameter0: android.net.Uri;

        r1 := @parameter1: java.lang.String;

        r4 = virtualinvoke r0.<android.content.ContentProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)>(r3, r1);

        if r4 == null goto label1;

        $r2 = new android.content.res.AssetFileDescriptor;

        specialinvoke $r2.<android.content.res.AssetFileDescriptor: void <init>(android.os.ParcelFileDescriptor,long,long)>(r4, 0L, -1L);

        r5 = $r2;

        goto label2;

     label1:
        r5 = null;

     label2:
        return r5;
    }

    public android.content.res.AssetFileDescriptor openAssetFile(android.net.Uri, java.lang.String, android.os.CancellationSignal) throws java.io.FileNotFoundException
    {
        android.content.ContentProvider r0;
        android.net.Uri r1;
        java.lang.String r2;
        android.os.CancellationSignal r3;
        android.content.res.AssetFileDescriptor $r4;

        r0 := @this: android.content.ContentProvider;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.CancellationSignal;

        $r4 = virtualinvoke r0.<android.content.ContentProvider: android.content.res.AssetFileDescriptor openAssetFile(android.net.Uri,java.lang.String)>(r1, r2);

        return $r4;
    }

    public android.os.ParcelFileDescriptor openFile(android.net.Uri, java.lang.String) throws java.io.FileNotFoundException
    {
        android.content.ContentProvider r0;
        android.net.Uri r1;
        java.lang.StringBuilder $r2;
        java.io.FileNotFoundException $r5;
        java.lang.String $r6, r7;

        r0 := @this: android.content.ContentProvider;

        r1 := @parameter0: android.net.Uri;

        r7 := @parameter1: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No files supported by provider at ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r5 = new java.io.FileNotFoundException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r6);

        throw $r5;
    }

    public android.os.ParcelFileDescriptor openFile(android.net.Uri, java.lang.String, android.os.CancellationSignal) throws java.io.FileNotFoundException
    {
        android.content.ContentProvider r0;
        android.net.Uri r1;
        java.lang.String r2;
        android.os.CancellationSignal r3;
        android.os.ParcelFileDescriptor $r4;

        r0 := @this: android.content.ContentProvider;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.CancellationSignal;

        $r4 = virtualinvoke r0.<android.content.ContentProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)>(r1, r2);

        return $r4;
    }

    protected final android.os.ParcelFileDescriptor openFileHelper(android.net.Uri, java.lang.String) throws java.io.FileNotFoundException
    {
        android.content.ContentProvider r0;
        android.database.Cursor r1;
        java.lang.String[] $r2;
        java.io.FileNotFoundException $r3, $r9, $r14;
        java.io.File $r4;
        android.os.ParcelFileDescriptor $r5;
        java.lang.StringBuilder $r6, $r11;
        java.lang.String $r10, $r15, r17, r20;
        android.net.Uri r16;
        int i0, i1, i2;

        r0 := @this: android.content.ContentProvider;

        r16 := @parameter0: android.net.Uri;

        r17 := @parameter1: java.lang.String;

        $r2 = newarray (java.lang.String)[1];

        $r2[0] = "_data";

        r1 = virtualinvoke r0.<android.content.ContentProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r16, $r2, null, null, null);

        if r1 == null goto label1;

        i0 = interfaceinvoke r1.<android.database.Cursor: int getCount()>();

        goto label2;

     label1:
        i0 = 0;

     label2:
        if i0 == 1 goto label5;

        if r1 == null goto label3;

        interfaceinvoke r1.<android.database.Cursor: void close()>();

     label3:
        if i0 != 0 goto label4;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No entry for ");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r16);

        $r14 = new java.io.FileNotFoundException;

        $r15 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r15);

        throw $r14;

     label4:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Multiple items at ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r16);

        $r9 = new java.io.FileNotFoundException;

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r10);

        throw $r9;

     label5:
        interfaceinvoke r1.<android.database.Cursor: boolean moveToFirst()>();

        i1 = interfaceinvoke r1.<android.database.Cursor: int getColumnIndex(java.lang.String)>("_data");

        if i1 < 0 goto label6;

        r20 = interfaceinvoke r1.<android.database.Cursor: java.lang.String getString(int)>(i1);

        goto label7;

     label6:
        r20 = null;

     label7:
        interfaceinvoke r1.<android.database.Cursor: void close()>();

        if r20 == null goto label8;

        i2 = staticinvoke <android.os.ParcelFileDescriptor: int parseMode(java.lang.String)>(r17);

        $r4 = new java.io.File;

        specialinvoke $r4.<java.io.File: void <init>(java.lang.String)>(r20);

        $r5 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor open(java.io.File,int)>($r4, i2);

        return $r5;

     label8:
        $r3 = new java.io.FileNotFoundException;

        specialinvoke $r3.<java.io.FileNotFoundException: void <init>(java.lang.String)>("Column _data not found.");

        throw $r3;
    }

    public android.os.ParcelFileDescriptor openPipeHelper(android.net.Uri, java.lang.String, android.os.Bundle, java.lang.Object, android.content.ContentProvider$PipeDataWriter) throws java.io.FileNotFoundException
    {
        android.content.ContentProvider r0;
        java.lang.String r1;
        android.os.Bundle r2;
        java.lang.Object r3;
        android.content.ContentProvider$PipeDataWriter r4;
        android.os.ParcelFileDescriptor[] r5;
        android.content.ContentProvider$1 r6;
        java.lang.Object[] $r7;
        java.util.concurrent.Executor $r8;
        java.lang.Throwable $r10;
        java.io.FileNotFoundException $r11;
        android.net.Uri r12;
        android.os.ParcelFileDescriptor r13;

        r0 := @this: android.content.ContentProvider;

        r12 := @parameter0: android.net.Uri;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.os.Bundle;

        r3 := @parameter3: java.lang.Object;

        r4 := @parameter4: android.content.ContentProvider$PipeDataWriter;

     label1:
        r5 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor[] createPipe()>();

        r6 = new android.content.ContentProvider$1;

        specialinvoke r6.<android.content.ContentProvider$1: void <init>(android.content.ContentProvider,android.content.ContentProvider$PipeDataWriter,android.os.ParcelFileDescriptor[],android.net.Uri,java.lang.String,android.os.Bundle,java.lang.Object)>(r0, r4, r5, r12, r1, r2, r3);

        $r8 = <android.os.AsyncTask: java.util.concurrent.Executor THREAD_POOL_EXECUTOR>;

        $r7 = (java.lang.Object[]) null;

        virtualinvoke r6.<android.os.AsyncTask: android.os.AsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>($r8, $r7);

     label2:
        r13 = r5[0];

        return r13;

     label3:
        $r10 := @caughtexception;

        $r11 = new java.io.FileNotFoundException;

        specialinvoke $r11.<java.io.FileNotFoundException: void <init>(java.lang.String)>("failure making pipe");

        throw $r11;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public android.content.res.AssetFileDescriptor openTypedAssetFile(android.net.Uri, java.lang.String, android.os.Bundle) throws java.io.FileNotFoundException
    {
        android.content.ContentProvider r0;
        android.net.Uri r1;
        java.lang.String r2, $r3, $r10, r14;
        boolean $z0, $z1;
        java.lang.StringBuilder $r4;
        java.io.FileNotFoundException $r9;
        android.content.res.AssetFileDescriptor $r11, $r12;
        android.os.Bundle r13;

        r0 := @this: android.content.ContentProvider;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String;

        r13 := @parameter2: android.os.Bundle;

        $r3 = "*/*";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z0 == 0 goto label1;

        $r12 = virtualinvoke r0.<android.content.ContentProvider: android.content.res.AssetFileDescriptor openAssetFile(android.net.Uri,java.lang.String)>(r1, "r");

        return $r12;

     label1:
        r14 = virtualinvoke r0.<android.content.ContentProvider: java.lang.String getType(android.net.Uri)>(r1);

        if r14 == null goto label2;

        $z1 = staticinvoke <android.content.ClipDescription: boolean compareMimeTypes(java.lang.String,java.lang.String)>(r14, r2);

        if $z1 == 0 goto label2;

        $r11 = virtualinvoke r0.<android.content.ContentProvider: android.content.res.AssetFileDescriptor openAssetFile(android.net.Uri,java.lang.String)>(r1, "r");

        return $r11;

     label2:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t open ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" as type ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r9 = new java.io.FileNotFoundException;

        $r10 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r10);

        throw $r9;
    }

    public android.content.res.AssetFileDescriptor openTypedAssetFile(android.net.Uri, java.lang.String, android.os.Bundle, android.os.CancellationSignal) throws java.io.FileNotFoundException
    {
        android.content.ContentProvider r0;
        android.net.Uri r1;
        java.lang.String r2;
        android.os.Bundle r3;
        android.os.CancellationSignal r4;
        android.content.res.AssetFileDescriptor $r5;

        r0 := @this: android.content.ContentProvider;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.Bundle;

        r4 := @parameter3: android.os.CancellationSignal;

        $r5 = virtualinvoke r0.<android.content.ContentProvider: android.content.res.AssetFileDescriptor openTypedAssetFile(android.net.Uri,java.lang.String,android.os.Bundle)>(r1, r2, r3);

        return $r5;
    }

    public android.database.Cursor query(android.net.Uri, java.lang.String[], android.os.Bundle, android.os.CancellationSignal)
    {
        android.content.ContentProvider r0;
        android.net.Uri r1;
        java.lang.String[] r2, $r8;
        android.os.CancellationSignal r3;
        java.lang.String r4, r6, $r7;
        boolean $z0;
        android.os.Bundle r5;
        android.database.Cursor $r9;

        r0 := @this: android.content.ContentProvider;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String[];

        r5 := @parameter2: android.os.Bundle;

        r3 := @parameter3: android.os.CancellationSignal;

        if r5 == null goto label1;

        goto label2;

     label1:
        r5 = <android.os.Bundle: android.os.Bundle EMPTY>;

     label2:
        r4 = virtualinvoke r5.<android.os.Bundle: java.lang.String getString(java.lang.String)>("android:query-arg-sql-sort-order");

        r6 = r4;

        if r4 != null goto label3;

        r6 = r4;

        $z0 = virtualinvoke r5.<android.os.Bundle: boolean containsKey(java.lang.String)>("android:query-arg-sort-columns");

        if $z0 == 0 goto label3;

        r6 = staticinvoke <android.content.ContentResolver: java.lang.String createSqlSortClause(android.os.Bundle)>(r5);

     label3:
        $r7 = virtualinvoke r5.<android.os.Bundle: java.lang.String getString(java.lang.String)>("android:query-arg-sql-selection");

        $r8 = virtualinvoke r5.<android.os.Bundle: java.lang.String[] getStringArray(java.lang.String)>("android:query-arg-sql-selection-args");

        $r9 = virtualinvoke r0.<android.content.ContentProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)>(r1, r2, $r7, $r8, r6, r3);

        return $r9;
    }

    public abstract android.database.Cursor query(android.net.Uri, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String);

    public android.database.Cursor query(android.net.Uri, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String, android.os.CancellationSignal)
    {
        android.content.ContentProvider r0;
        android.net.Uri r1;
        java.lang.String[] r2, r4;
        java.lang.String r3, r5;
        android.os.CancellationSignal r6;
        android.database.Cursor $r7;

        r0 := @this: android.content.ContentProvider;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String[];

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String[];

        r5 := @parameter4: java.lang.String;

        r6 := @parameter5: android.os.CancellationSignal;

        $r7 = virtualinvoke r0.<android.content.ContentProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r1, r2, r3, r4, r5);

        return $r7;
    }

    public boolean refresh(android.net.Uri, android.os.Bundle, android.os.CancellationSignal)
    {
        android.content.ContentProvider r0;
        android.net.Uri r1;
        android.os.Bundle r2;
        android.os.CancellationSignal r3;

        r0 := @this: android.content.ContentProvider;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.os.Bundle;

        r3 := @parameter2: android.os.CancellationSignal;

        return 0;
    }

    public android.net.Uri rejectInsert(android.net.Uri, android.content.ContentValues)
    {
        android.content.ContentProvider r0;
        android.net.Uri r1, $r5;
        android.content.ContentValues r2;
        android.net.Uri$Builder $r3, $r4;

        r0 := @this: android.content.ContentProvider;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.content.ContentValues;

        $r3 = virtualinvoke r1.<android.net.Uri: android.net.Uri$Builder buildUpon()>();

        $r4 = virtualinvoke $r3.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>("0");

        $r5 = virtualinvoke $r4.<android.net.Uri$Builder: android.net.Uri build()>();

        return $r5;
    }

    public final android.content.Context requireContext()
    {
        android.content.ContentProvider r0;
        android.content.Context r1;
        java.lang.IllegalStateException $r2;

        r0 := @this: android.content.ContentProvider;

        r1 = virtualinvoke r0.<android.content.ContentProvider: android.content.Context getContext()>();

        if r1 == null goto label1;

        return r1;

     label1:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot find context from the provider.");

        throw $r2;
    }

    public final void restoreCallingIdentity(android.content.ContentProvider$CallingIdentity)
    {
        android.content.ContentProvider r0;
        android.content.ContentProvider$CallingIdentity r1;
        long $l0;
        android.util.Pair $r2;
        java.lang.ThreadLocal $r3;

        r0 := @this: android.content.ContentProvider;

        r1 := @parameter0: android.content.ContentProvider$CallingIdentity;

        $l0 = r1.<android.content.ContentProvider$CallingIdentity: long binderToken>;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>($l0);

        $r3 = r0.<android.content.ContentProvider: java.lang.ThreadLocal mCallingPackage>;

        $r2 = r1.<android.content.ContentProvider$CallingIdentity: android.util.Pair callingPackage>;

        virtualinvoke $r3.<java.lang.ThreadLocal: void set(java.lang.Object)>($r2);

        return;
    }

    public final void setAppOps(int, int)
    {
        android.content.ContentProvider r0;
        int i0, i1;
        boolean $z0;
        android.content.ContentProvider$Transport $r1, $r2;

        r0 := @this: android.content.ContentProvider;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = r0.<android.content.ContentProvider: boolean mNoPerms>;

        if $z0 != 0 goto label1;

        $r1 = r0.<android.content.ContentProvider: android.content.ContentProvider$Transport mTransport>;

        $r1.<android.content.ContentProvider$Transport: int mReadOp> = i0;

        $r2 = r0.<android.content.ContentProvider: android.content.ContentProvider$Transport mTransport>;

        $r2.<android.content.ContentProvider$Transport: int mWriteOp> = i1;

     label1:
        return;
    }

    protected final void setAuthorities(java.lang.String)
    {
        android.content.ContentProvider r0;
        java.lang.String r1;
        int $i0;
        java.lang.String[] $r2;

        r0 := @this: android.content.ContentProvider;

        r1 := @parameter0: java.lang.String;

        if r1 == null goto label2;

        $i0 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(59);

        if $i0 != -1 goto label1;

        r0.<android.content.ContentProvider: java.lang.String mAuthority> = r1;

        r0.<android.content.ContentProvider: java.lang.String[] mAuthorities> = null;

        goto label2;

     label1:
        r0.<android.content.ContentProvider: java.lang.String mAuthority> = null;

        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(";");

        r0.<android.content.ContentProvider: java.lang.String[] mAuthorities> = $r2;

     label2:
        return;
    }

    protected final void setPathPermissions(android.content.pm.PathPermission[])
    {
        android.content.ContentProvider r0;
        android.content.pm.PathPermission[] r1;

        r0 := @this: android.content.ContentProvider;

        r1 := @parameter0: android.content.pm.PathPermission[];

        r0.<android.content.ContentProvider: android.content.pm.PathPermission[] mPathPermissions> = r1;

        return;
    }

    protected final void setReadPermission(java.lang.String)
    {
        android.content.ContentProvider r0;
        java.lang.String r1;

        r0 := @this: android.content.ContentProvider;

        r1 := @parameter0: java.lang.String;

        r0.<android.content.ContentProvider: java.lang.String mReadPermission> = r1;

        return;
    }

    public final void setTransportLoggingEnabled(boolean)
    {
        android.content.ContentProvider r0;
        boolean z0;
        android.content.ContentProvider$Transport r1;
        android.content.LoggingContentInterface $r2;
        java.lang.Class $r3;
        java.lang.String $r4;

        r0 := @this: android.content.ContentProvider;

        z0 := @parameter0: boolean;

        r1 = r0.<android.content.ContentProvider: android.content.ContentProvider$Transport mTransport>;

        if r1 != null goto label1;

        return;

     label1:
        if z0 == 0 goto label2;

        $r2 = new android.content.LoggingContentInterface;

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getSimpleName()>();

        specialinvoke $r2.<android.content.LoggingContentInterface: void <init>(java.lang.String,android.content.ContentInterface)>($r4, r0);

        r1.<android.content.ContentProvider$Transport: android.content.ContentInterface mInterface> = $r2;

        goto label3;

     label2:
        r1.<android.content.ContentProvider$Transport: android.content.ContentInterface mInterface> = r0;

     label3:
        return;
    }

    protected final void setWritePermission(java.lang.String)
    {
        android.content.ContentProvider r0;
        java.lang.String r1;

        r0 := @this: android.content.ContentProvider;

        r1 := @parameter0: java.lang.String;

        r0.<android.content.ContentProvider: java.lang.String mWritePermission> = r1;

        return;
    }

    public void shutdown()
    {
        android.content.ContentProvider r0;

        r0 := @this: android.content.ContentProvider;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ContentProvider", "implement ContentProvider shutdown() to make sure all database connections are gracefully shutdown");

        return;
    }

    public android.net.Uri uncanonicalize(android.net.Uri)
    {
        android.content.ContentProvider r0;
        android.net.Uri r1;

        r0 := @this: android.content.ContentProvider;

        r1 := @parameter0: android.net.Uri;

        return r1;
    }

    public int update(android.net.Uri, android.content.ContentValues, android.os.Bundle)
    {
        android.content.ContentProvider r0;
        android.net.Uri r1;
        android.content.ContentValues r2;
        java.lang.String $r3;
        java.lang.String[] $r4;
        int $i0;
        android.os.Bundle r5;

        r0 := @this: android.content.ContentProvider;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.content.ContentValues;

        r5 := @parameter2: android.os.Bundle;

        if r5 == null goto label1;

        goto label2;

     label1:
        r5 = <android.os.Bundle: android.os.Bundle EMPTY>;

     label2:
        $r3 = virtualinvoke r5.<android.os.Bundle: java.lang.String getString(java.lang.String)>("android:query-arg-sql-selection");

        $r4 = virtualinvoke r5.<android.os.Bundle: java.lang.String[] getStringArray(java.lang.String)>("android:query-arg-sql-selection-args");

        $i0 = virtualinvoke r0.<android.content.ContentProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>(r1, r2, $r3, $r4);

        return $i0;
    }

    public abstract int update(android.net.Uri, android.content.ContentValues, java.lang.String, java.lang.String[]);

    public android.net.Uri validateIncomingUri(android.net.Uri) throws java.lang.SecurityException
    {
        android.content.ContentProvider r0;
        int i0, $i1, $i3, $i4;
        android.net.Uri r1, r21;
        boolean $z0;
        android.net.Uri$Builder $r2, $r4;
        java.lang.String $r3, $r11, $r20, r22, r24;
        java.lang.StringBuilder $r5, $r13;
        android.content.Context $r12, $r15;
        java.lang.SecurityException $r19;

        r0 := @this: android.content.ContentProvider;

        r21 := @parameter0: android.net.Uri;

        r22 = virtualinvoke r21.<android.net.Uri: java.lang.String getAuthority()>();

        $z0 = r0.<android.content.ContentProvider: boolean mSingleUser>;

        if $z0 != 0 goto label2;

        i0 = staticinvoke <android.content.ContentProvider: int getUserIdFromAuthority(java.lang.String,int)>(r22, -2);

        if i0 == -2 goto label2;

        $r12 = r0.<android.content.ContentProvider: android.content.Context mContext>;

        $i3 = virtualinvoke $r12.<android.content.Context: int getUserId()>();

        if i0 != $i3 goto label1;

        goto label2;

     label1:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("trying to query a ContentProvider in user ");

        $r15 = r0.<android.content.ContentProvider: android.content.Context mContext>;

        $i4 = virtualinvoke $r15.<android.content.Context: int getUserId()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with a uri belonging to user ");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r19 = new java.lang.SecurityException;

        $r20 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<java.lang.SecurityException: void <init>(java.lang.String)>($r20);

        throw $r19;

     label2:
        specialinvoke r0.<android.content.ContentProvider: void validateIncomingAuthority(java.lang.String)>(r22);

        r24 = virtualinvoke r21.<android.net.Uri: java.lang.String getEncodedPath()>();

        if r24 == null goto label3;

        $i1 = virtualinvoke r24.<java.lang.String: int indexOf(java.lang.String)>("//");

        if $i1 == -1 goto label3;

        $r2 = virtualinvoke r21.<android.net.Uri: android.net.Uri$Builder buildUpon()>();

        $r3 = virtualinvoke r24.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("//+", "/");

        $r4 = virtualinvoke $r2.<android.net.Uri$Builder: android.net.Uri$Builder encodedPath(java.lang.String)>($r3);

        r1 = virtualinvoke $r4.<android.net.Uri$Builder: android.net.Uri build()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Normalized ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r21);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to avoid possible security issues");

        $r11 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ContentProvider", $r11);

        return r1;

     label3:
        return r21;
    }

    public static void <clinit>()
    {
        <android.content.ContentProvider: java.lang.String TAG> = "ContentProvider";

        return;
    }
}
