public class android.content.ContentProviderOperation$Builder extends java.lang.Object
{
    private final java.lang.String mArg;
    private boolean mExceptionAllowed;
    private java.lang.Integer mExpectedCount;
    private android.util.ArrayMap mExtras;
    private final java.lang.String mMethod;
    private java.lang.String mSelection;
    private android.util.SparseArray mSelectionArgs;
    private final int mType;
    private final android.net.Uri mUri;
    private android.util.ArrayMap mValues;
    private boolean mYieldAllowed;

    private void <init>(int, android.net.Uri)
    {
        android.content.ContentProviderOperation$Builder r0;
        int i0;
        android.net.Uri r1;

        r0 := @this: android.content.ContentProviderOperation$Builder;

        i0 := @parameter0: int;

        r1 := @parameter1: android.net.Uri;

        specialinvoke r0.<android.content.ContentProviderOperation$Builder: void <init>(int,android.net.Uri,java.lang.String,java.lang.String)>(i0, r1, null, null);

        return;
    }

    void <init>(int, android.net.Uri, android.content.ContentProviderOperation$1)
    {
        android.content.ContentProviderOperation$Builder r0;
        int i0;
        android.net.Uri r1;
        android.content.ContentProviderOperation$1 r2;

        r0 := @this: android.content.ContentProviderOperation$Builder;

        i0 := @parameter0: int;

        r1 := @parameter1: android.net.Uri;

        r2 := @parameter2: android.content.ContentProviderOperation$1;

        specialinvoke r0.<android.content.ContentProviderOperation$Builder: void <init>(int,android.net.Uri)>(i0, r1);

        return;
    }

    private void <init>(int, android.net.Uri, java.lang.String, java.lang.String)
    {
        android.content.ContentProviderOperation$Builder r0;
        int i0;
        android.net.Uri r1, $r5;
        java.lang.String r2, r3;

        r0 := @this: android.content.ContentProviderOperation$Builder;

        i0 := @parameter0: int;

        r1 := @parameter1: android.net.Uri;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.content.ContentProviderOperation$Builder: int mType> = i0;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r5 = (android.net.Uri) r1;

        r0.<android.content.ContentProviderOperation$Builder: android.net.Uri mUri> = $r5;

        r0.<android.content.ContentProviderOperation$Builder: java.lang.String mMethod> = r2;

        r0.<android.content.ContentProviderOperation$Builder: java.lang.String mArg> = r3;

        return;
    }

    void <init>(int, android.net.Uri, java.lang.String, java.lang.String, android.content.ContentProviderOperation$1)
    {
        android.content.ContentProviderOperation$Builder r0;
        int i0;
        android.net.Uri r1;
        java.lang.String r2, r3;
        android.content.ContentProviderOperation$1 r4;

        r0 := @this: android.content.ContentProviderOperation$Builder;

        i0 := @parameter0: int;

        r1 := @parameter1: android.net.Uri;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: android.content.ContentProviderOperation$1;

        specialinvoke r0.<android.content.ContentProviderOperation$Builder: void <init>(int,android.net.Uri,java.lang.String,java.lang.String)>(i0, r1, r2, r3);

        return;
    }

    static int access$000(android.content.ContentProviderOperation$Builder)
    {
        android.content.ContentProviderOperation$Builder r0;
        int $i0;

        r0 := @parameter0: android.content.ContentProviderOperation$Builder;

        $i0 = r0.<android.content.ContentProviderOperation$Builder: int mType>;

        return $i0;
    }

    static android.net.Uri access$100(android.content.ContentProviderOperation$Builder)
    {
        android.content.ContentProviderOperation$Builder r0;
        android.net.Uri $r1;

        r0 := @parameter0: android.content.ContentProviderOperation$Builder;

        $r1 = r0.<android.content.ContentProviderOperation$Builder: android.net.Uri mUri>;

        return $r1;
    }

    static boolean access$1000(android.content.ContentProviderOperation$Builder)
    {
        android.content.ContentProviderOperation$Builder r0;
        boolean $z0;

        r0 := @parameter0: android.content.ContentProviderOperation$Builder;

        $z0 = r0.<android.content.ContentProviderOperation$Builder: boolean mExceptionAllowed>;

        return $z0;
    }

    static java.lang.String access$200(android.content.ContentProviderOperation$Builder)
    {
        android.content.ContentProviderOperation$Builder r0;
        java.lang.String $r1;

        r0 := @parameter0: android.content.ContentProviderOperation$Builder;

        $r1 = r0.<android.content.ContentProviderOperation$Builder: java.lang.String mMethod>;

        return $r1;
    }

    static java.lang.String access$300(android.content.ContentProviderOperation$Builder)
    {
        android.content.ContentProviderOperation$Builder r0;
        java.lang.String $r1;

        r0 := @parameter0: android.content.ContentProviderOperation$Builder;

        $r1 = r0.<android.content.ContentProviderOperation$Builder: java.lang.String mArg>;

        return $r1;
    }

    static android.util.ArrayMap access$400(android.content.ContentProviderOperation$Builder)
    {
        android.content.ContentProviderOperation$Builder r0;
        android.util.ArrayMap $r1;

        r0 := @parameter0: android.content.ContentProviderOperation$Builder;

        $r1 = r0.<android.content.ContentProviderOperation$Builder: android.util.ArrayMap mValues>;

        return $r1;
    }

    static android.util.ArrayMap access$500(android.content.ContentProviderOperation$Builder)
    {
        android.content.ContentProviderOperation$Builder r0;
        android.util.ArrayMap $r1;

        r0 := @parameter0: android.content.ContentProviderOperation$Builder;

        $r1 = r0.<android.content.ContentProviderOperation$Builder: android.util.ArrayMap mExtras>;

        return $r1;
    }

    static java.lang.String access$600(android.content.ContentProviderOperation$Builder)
    {
        android.content.ContentProviderOperation$Builder r0;
        java.lang.String $r1;

        r0 := @parameter0: android.content.ContentProviderOperation$Builder;

        $r1 = r0.<android.content.ContentProviderOperation$Builder: java.lang.String mSelection>;

        return $r1;
    }

    static android.util.SparseArray access$700(android.content.ContentProviderOperation$Builder)
    {
        android.content.ContentProviderOperation$Builder r0;
        android.util.SparseArray $r1;

        r0 := @parameter0: android.content.ContentProviderOperation$Builder;

        $r1 = r0.<android.content.ContentProviderOperation$Builder: android.util.SparseArray mSelectionArgs>;

        return $r1;
    }

    static java.lang.Integer access$800(android.content.ContentProviderOperation$Builder)
    {
        android.content.ContentProviderOperation$Builder r0;
        java.lang.Integer $r1;

        r0 := @parameter0: android.content.ContentProviderOperation$Builder;

        $r1 = r0.<android.content.ContentProviderOperation$Builder: java.lang.Integer mExpectedCount>;

        return $r1;
    }

    static boolean access$900(android.content.ContentProviderOperation$Builder)
    {
        android.content.ContentProviderOperation$Builder r0;
        boolean $z0;

        r0 := @parameter0: android.content.ContentProviderOperation$Builder;

        $z0 = r0.<android.content.ContentProviderOperation$Builder: boolean mYieldAllowed>;

        return $z0;
    }

    private void assertExtrasAllowed()
    {
        android.content.ContentProviderOperation$Builder r0;
        int i0, $i1;
        java.lang.StringBuilder $r2;
        java.lang.String $r4, $r7;
        java.lang.IllegalArgumentException $r6;

        r0 := @this: android.content.ContentProviderOperation$Builder;

        i0 = r0.<android.content.ContentProviderOperation$Builder: int mType>;

        if i0 == 1 goto label2;

        if i0 == 2 goto label2;

        if i0 == 3 goto label2;

        if i0 == 4 goto label2;

        if i0 != 5 goto label1;

        goto label2;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Extras not supported for ");

        $i1 = r0.<android.content.ContentProviderOperation$Builder: int mType>;

        $r4 = staticinvoke <android.content.ContentProviderOperation: java.lang.String typeToString(int)>($i1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r6;

     label2:
        return;
    }

    private void assertSelectionAllowed()
    {
        android.content.ContentProviderOperation$Builder r0;
        int i0, $i1;
        java.lang.StringBuilder $r2;
        java.lang.String $r4, $r7;
        java.lang.IllegalArgumentException $r6;

        r0 := @this: android.content.ContentProviderOperation$Builder;

        i0 = r0.<android.content.ContentProviderOperation$Builder: int mType>;

        if i0 == 2 goto label2;

        if i0 == 3 goto label2;

        if i0 != 4 goto label1;

        goto label2;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Selection not supported for ");

        $i1 = r0.<android.content.ContentProviderOperation$Builder: int mType>;

        $r4 = staticinvoke <android.content.ContentProviderOperation: java.lang.String typeToString(int)>($i1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r6;

     label2:
        return;
    }

    private void assertValuesAllowed()
    {
        android.content.ContentProviderOperation$Builder r0;
        int i0, $i1;
        java.lang.StringBuilder $r2;
        java.lang.String $r4, $r7;
        java.lang.IllegalArgumentException $r6;

        r0 := @this: android.content.ContentProviderOperation$Builder;

        i0 = r0.<android.content.ContentProviderOperation$Builder: int mType>;

        if i0 == 1 goto label2;

        if i0 == 2 goto label2;

        if i0 != 4 goto label1;

        goto label2;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Values not supported for ");

        $i1 = r0.<android.content.ContentProviderOperation$Builder: int mType>;

        $r4 = staticinvoke <android.content.ContentProviderOperation: java.lang.String typeToString(int)>($i1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r6;

     label2:
        return;
    }

    private void ensureExtras()
    {
        android.content.ContentProviderOperation$Builder r0;
        android.util.ArrayMap $r1, $r2;

        r0 := @this: android.content.ContentProviderOperation$Builder;

        $r1 = r0.<android.content.ContentProviderOperation$Builder: android.util.ArrayMap mExtras>;

        if $r1 != null goto label1;

        $r2 = new android.util.ArrayMap;

        specialinvoke $r2.<android.util.ArrayMap: void <init>()>();

        r0.<android.content.ContentProviderOperation$Builder: android.util.ArrayMap mExtras> = $r2;

     label1:
        return;
    }

    private void ensureSelectionArgs()
    {
        android.content.ContentProviderOperation$Builder r0;
        android.util.SparseArray $r1, $r2;

        r0 := @this: android.content.ContentProviderOperation$Builder;

        $r1 = r0.<android.content.ContentProviderOperation$Builder: android.util.SparseArray mSelectionArgs>;

        if $r1 != null goto label1;

        $r2 = new android.util.SparseArray;

        specialinvoke $r2.<android.util.SparseArray: void <init>()>();

        r0.<android.content.ContentProviderOperation$Builder: android.util.SparseArray mSelectionArgs> = $r2;

     label1:
        return;
    }

    private void ensureValues()
    {
        android.content.ContentProviderOperation$Builder r0;
        android.util.ArrayMap $r1, $r2;

        r0 := @this: android.content.ContentProviderOperation$Builder;

        $r1 = r0.<android.content.ContentProviderOperation$Builder: android.util.ArrayMap mValues>;

        if $r1 != null goto label1;

        $r2 = new android.util.ArrayMap;

        specialinvoke $r2.<android.util.ArrayMap: void <init>()>();

        r0.<android.content.ContentProviderOperation$Builder: android.util.ArrayMap mValues> = $r2;

     label1:
        return;
    }

    private void setExtra(java.lang.String, java.lang.Object)
    {
        android.content.ContentProviderOperation$Builder r0;
        java.lang.String r1;
        java.lang.Object r2, $r4;
        boolean z0, z1;
        android.util.ArrayMap $r3, $r5;

        r0 := @this: android.content.ContentProviderOperation$Builder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<android.content.ContentProviderOperation$Builder: void ensureExtras()>();

        $r3 = r0.<android.content.ContentProviderOperation$Builder: android.util.ArrayMap mExtras>;

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        z0 = $r4 instanceof android.content.ContentProviderOperation$BackReference;

        z1 = r2 instanceof android.content.ContentProviderOperation$BackReference;

        if z0 == 0 goto label1;

        if z1 == 0 goto label2;

     label1:
        $r5 = r0.<android.content.ContentProviderOperation$Builder: android.util.ArrayMap mExtras>;

        virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

     label2:
        return;
    }

    private void setSelectionArg(int, java.lang.Object)
    {
        android.content.ContentProviderOperation$Builder r0;
        int i0;
        java.lang.Object r1, $r3;
        boolean z0, z1;
        android.util.SparseArray $r2, $r4;

        r0 := @this: android.content.ContentProviderOperation$Builder;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        specialinvoke r0.<android.content.ContentProviderOperation$Builder: void ensureSelectionArgs()>();

        $r2 = r0.<android.content.ContentProviderOperation$Builder: android.util.SparseArray mSelectionArgs>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        z0 = $r3 instanceof android.content.ContentProviderOperation$BackReference;

        z1 = r1 instanceof android.content.ContentProviderOperation$BackReference;

        if z0 == 0 goto label1;

        if z1 == 0 goto label2;

     label1:
        $r4 = r0.<android.content.ContentProviderOperation$Builder: android.util.SparseArray mSelectionArgs>;

        virtualinvoke $r4.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r1);

     label2:
        return;
    }

    private void setValue(java.lang.String, java.lang.Object)
    {
        android.content.ContentProviderOperation$Builder r0;
        java.lang.String r1;
        java.lang.Object r2, $r4;
        boolean z0, z1;
        android.util.ArrayMap $r3, $r5;

        r0 := @this: android.content.ContentProviderOperation$Builder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<android.content.ContentProviderOperation$Builder: void ensureValues()>();

        $r3 = r0.<android.content.ContentProviderOperation$Builder: android.util.ArrayMap mValues>;

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        z0 = $r4 instanceof android.content.ContentProviderOperation$BackReference;

        z1 = r2 instanceof android.content.ContentProviderOperation$BackReference;

        if z0 == 0 goto label1;

        if z1 == 0 goto label2;

     label1:
        $r5 = r0.<android.content.ContentProviderOperation$Builder: android.util.ArrayMap mValues>;

        virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

     label2:
        return;
    }

    public android.content.ContentProviderOperation build()
    {
        android.content.ContentProviderOperation$Builder r0;
        int $i0, $i1;
        android.content.ContentProviderOperation $r1;
        java.lang.Integer $r2;
        java.lang.IllegalArgumentException $r3, $r4;
        boolean $z0, $z1;
        android.util.ArrayMap r5, r6;

        r0 := @this: android.content.ContentProviderOperation$Builder;

        $i0 = r0.<android.content.ContentProviderOperation$Builder: int mType>;

        if $i0 != 2 goto label2;

        r5 = r0.<android.content.ContentProviderOperation$Builder: android.util.ArrayMap mValues>;

        if r5 == null goto label1;

        $z1 = virtualinvoke r5.<android.util.ArrayMap: boolean isEmpty()>();

        if $z1 != 0 goto label1;

        goto label2;

     label1:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Empty values");

        throw $r4;

     label2:
        $i1 = r0.<android.content.ContentProviderOperation$Builder: int mType>;

        if $i1 != 4 goto label6;

        r6 = r0.<android.content.ContentProviderOperation$Builder: android.util.ArrayMap mValues>;

        if r6 == null goto label3;

        $z0 = virtualinvoke r6.<android.util.ArrayMap: boolean isEmpty()>();

        if $z0 == 0 goto label4;

     label3:
        $r2 = r0.<android.content.ContentProviderOperation$Builder: java.lang.Integer mExpectedCount>;

        if $r2 == null goto label5;

     label4:
        goto label6;

     label5:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Empty values");

        throw $r3;

     label6:
        $r1 = new android.content.ContentProviderOperation;

        specialinvoke $r1.<android.content.ContentProviderOperation: void <init>(android.content.ContentProviderOperation$Builder,android.content.ContentProviderOperation$1)>(r0, null);

        return $r1;
    }

    public android.content.ContentProviderOperation$Builder withExceptionAllowed(boolean)
    {
        android.content.ContentProviderOperation$Builder r0;
        boolean z0;

        r0 := @this: android.content.ContentProviderOperation$Builder;

        z0 := @parameter0: boolean;

        r0.<android.content.ContentProviderOperation$Builder: boolean mExceptionAllowed> = z0;

        return r0;
    }

    public android.content.ContentProviderOperation$Builder withExpectedCount(int)
    {
        android.content.ContentProviderOperation$Builder r0;
        int i0, i1;
        java.lang.IllegalArgumentException $r1;
        java.lang.Integer $r2;

        r0 := @this: android.content.ContentProviderOperation$Builder;

        i0 := @parameter0: int;

        i1 = r0.<android.content.ContentProviderOperation$Builder: int mType>;

        if i1 == 2 goto label2;

        if i1 == 3 goto label2;

        if i1 != 4 goto label1;

        goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("only updates, deletes, and asserts can have expected counts");

        throw $r1;

     label2:
        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        r0.<android.content.ContentProviderOperation$Builder: java.lang.Integer mExpectedCount> = $r2;

        return r0;
    }

    public android.content.ContentProviderOperation$Builder withExtra(java.lang.String, java.lang.Object)
    {
        android.content.ContentProviderOperation$Builder r0;
        java.lang.String r1;
        java.lang.Object r2;

        r0 := @this: android.content.ContentProviderOperation$Builder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<android.content.ContentProviderOperation$Builder: void assertExtrasAllowed()>();

        specialinvoke r0.<android.content.ContentProviderOperation$Builder: void setExtra(java.lang.String,java.lang.Object)>(r1, r2);

        return r0;
    }

    public android.content.ContentProviderOperation$Builder withExtraBackReference(java.lang.String, int)
    {
        android.content.ContentProviderOperation$Builder r0;
        java.lang.String r1;
        int i0;
        android.content.ContentProviderOperation$BackReference $r2;

        r0 := @this: android.content.ContentProviderOperation$Builder;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<android.content.ContentProviderOperation$Builder: void assertExtrasAllowed()>();

        $r2 = new android.content.ContentProviderOperation$BackReference;

        specialinvoke $r2.<android.content.ContentProviderOperation$BackReference: void <init>(int,java.lang.String,android.content.ContentProviderOperation$1)>(i0, null, null);

        specialinvoke r0.<android.content.ContentProviderOperation$Builder: void setExtra(java.lang.String,java.lang.Object)>(r1, $r2);

        return r0;
    }

    public android.content.ContentProviderOperation$Builder withExtraBackReference(java.lang.String, int, java.lang.String)
    {
        android.content.ContentProviderOperation$Builder r0;
        java.lang.String r1, r2;
        int i0;
        android.content.ContentProviderOperation$BackReference $r3;

        r0 := @this: android.content.ContentProviderOperation$Builder;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        specialinvoke r0.<android.content.ContentProviderOperation$Builder: void assertExtrasAllowed()>();

        $r3 = new android.content.ContentProviderOperation$BackReference;

        specialinvoke $r3.<android.content.ContentProviderOperation$BackReference: void <init>(int,java.lang.String,android.content.ContentProviderOperation$1)>(i0, r2, null);

        specialinvoke r0.<android.content.ContentProviderOperation$Builder: void setExtra(java.lang.String,java.lang.Object)>(r1, $r3);

        return r0;
    }

    public android.content.ContentProviderOperation$Builder withExtras(android.os.Bundle)
    {
        android.content.ContentProviderOperation$Builder r0;
        android.os.Bundle r1;
        java.util.Iterator r2;
        java.lang.String r3;
        java.util.Set $r4;
        boolean $z0;
        java.lang.Object $r5, $r6;

        r0 := @this: android.content.ContentProviderOperation$Builder;

        r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<android.content.ContentProviderOperation$Builder: void assertExtrasAllowed()>();

        specialinvoke r0.<android.content.ContentProviderOperation$Builder: void ensureExtras()>();

        $r4 = virtualinvoke r1.<android.os.Bundle: java.util.Set keySet()>();

        r2 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.String) $r5;

        $r6 = virtualinvoke r1.<android.os.Bundle: java.lang.Object get(java.lang.String)>(r3);

        specialinvoke r0.<android.content.ContentProviderOperation$Builder: void setExtra(java.lang.String,java.lang.Object)>(r3, $r6);

        goto label1;

     label2:
        return r0;
    }

    public android.content.ContentProviderOperation$Builder withFailureAllowed(boolean)
    {
        android.content.ContentProviderOperation$Builder r0, $r1;
        boolean z0;

        r0 := @this: android.content.ContentProviderOperation$Builder;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation$Builder withExceptionAllowed(boolean)>(z0);

        return $r1;
    }

    public android.content.ContentProviderOperation$Builder withSelection(java.lang.String, java.lang.String[])
    {
        android.content.ContentProviderOperation$Builder r0;
        java.lang.String r1, $r3;
        java.lang.String[] r2;
        int $i0, i1;

        r0 := @this: android.content.ContentProviderOperation$Builder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String[];

        specialinvoke r0.<android.content.ContentProviderOperation$Builder: void assertSelectionAllowed()>();

        r0.<android.content.ContentProviderOperation$Builder: java.lang.String mSelection> = r1;

        if r2 == null goto label2;

        specialinvoke r0.<android.content.ContentProviderOperation$Builder: void ensureSelectionArgs()>();

        i1 = 0;

     label1:
        $i0 = lengthof r2;

        if i1 >= $i0 goto label2;

        $r3 = r2[i1];

        specialinvoke r0.<android.content.ContentProviderOperation$Builder: void setSelectionArg(int,java.lang.Object)>(i1, $r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        return r0;
    }

    public android.content.ContentProviderOperation$Builder withSelectionBackReference(int, int)
    {
        android.content.ContentProviderOperation$Builder r0;
        int i0, i1;
        android.content.ContentProviderOperation$BackReference $r1;

        r0 := @this: android.content.ContentProviderOperation$Builder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<android.content.ContentProviderOperation$Builder: void assertSelectionAllowed()>();

        $r1 = new android.content.ContentProviderOperation$BackReference;

        specialinvoke $r1.<android.content.ContentProviderOperation$BackReference: void <init>(int,java.lang.String,android.content.ContentProviderOperation$1)>(i1, null, null);

        specialinvoke r0.<android.content.ContentProviderOperation$Builder: void setSelectionArg(int,java.lang.Object)>(i0, $r1);

        return r0;
    }

    public android.content.ContentProviderOperation$Builder withSelectionBackReference(int, int, java.lang.String)
    {
        android.content.ContentProviderOperation$Builder r0;
        int i0, i1;
        java.lang.String r1;
        android.content.ContentProviderOperation$BackReference $r2;

        r0 := @this: android.content.ContentProviderOperation$Builder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        specialinvoke r0.<android.content.ContentProviderOperation$Builder: void assertSelectionAllowed()>();

        $r2 = new android.content.ContentProviderOperation$BackReference;

        specialinvoke $r2.<android.content.ContentProviderOperation$BackReference: void <init>(int,java.lang.String,android.content.ContentProviderOperation$1)>(i1, r1, null);

        specialinvoke r0.<android.content.ContentProviderOperation$Builder: void setSelectionArg(int,java.lang.Object)>(i0, $r2);

        return r0;
    }

    public android.content.ContentProviderOperation$Builder withValue(java.lang.String, java.lang.Object)
    {
        android.content.ContentProviderOperation$Builder r0;
        java.lang.Object r1;
        boolean $z0;
        java.lang.StringBuilder $r2;
        java.lang.Class $r4;
        java.lang.String $r5, $r8, r9;
        java.lang.IllegalArgumentException $r7;

        r0 := @this: android.content.ContentProviderOperation$Builder;

        r9 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Object;

        specialinvoke r0.<android.content.ContentProviderOperation$Builder: void assertValuesAllowed()>();

        $z0 = staticinvoke <android.content.ContentValues: boolean isSupportedValue(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        specialinvoke r0.<android.content.ContentProviderOperation$Builder: void setValue(java.lang.String,java.lang.Object)>(r9, r1);

        return r0;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bad value type: ");

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r7;
    }

    public android.content.ContentProviderOperation$Builder withValueBackReference(java.lang.String, int)
    {
        android.content.ContentProviderOperation$Builder r0;
        java.lang.String r1;
        int i0;
        android.content.ContentProviderOperation$BackReference $r2;

        r0 := @this: android.content.ContentProviderOperation$Builder;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<android.content.ContentProviderOperation$Builder: void assertValuesAllowed()>();

        $r2 = new android.content.ContentProviderOperation$BackReference;

        specialinvoke $r2.<android.content.ContentProviderOperation$BackReference: void <init>(int,java.lang.String,android.content.ContentProviderOperation$1)>(i0, null, null);

        specialinvoke r0.<android.content.ContentProviderOperation$Builder: void setValue(java.lang.String,java.lang.Object)>(r1, $r2);

        return r0;
    }

    public android.content.ContentProviderOperation$Builder withValueBackReference(java.lang.String, int, java.lang.String)
    {
        android.content.ContentProviderOperation$Builder r0;
        java.lang.String r1, r2;
        int i0;
        android.content.ContentProviderOperation$BackReference $r3;

        r0 := @this: android.content.ContentProviderOperation$Builder;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        specialinvoke r0.<android.content.ContentProviderOperation$Builder: void assertValuesAllowed()>();

        $r3 = new android.content.ContentProviderOperation$BackReference;

        specialinvoke $r3.<android.content.ContentProviderOperation$BackReference: void <init>(int,java.lang.String,android.content.ContentProviderOperation$1)>(i0, r2, null);

        specialinvoke r0.<android.content.ContentProviderOperation$Builder: void setValue(java.lang.String,java.lang.Object)>(r1, $r3);

        return r0;
    }

    public android.content.ContentProviderOperation$Builder withValueBackReferences(android.content.ContentValues)
    {
        android.content.ContentProviderOperation$Builder r0;
        int $i0, $i1, i2;
        java.lang.Object $r1, $r4;
        android.content.ContentProviderOperation$BackReference $r2;
        java.lang.String $r3;
        java.lang.Integer $r5;
        android.content.ContentValues r6;
        android.util.ArrayMap r7;

        r0 := @this: android.content.ContentProviderOperation$Builder;

        r6 := @parameter0: android.content.ContentValues;

        specialinvoke r0.<android.content.ContentProviderOperation$Builder: void assertValuesAllowed()>();

        r7 = virtualinvoke r6.<android.content.ContentValues: android.util.ArrayMap getValues()>();

        i2 = 0;

     label1:
        $i0 = virtualinvoke r7.<android.util.ArrayMap: int size()>();

        if i2 >= $i0 goto label2;

        $r1 = virtualinvoke r7.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i2);

        $r3 = (java.lang.String) $r1;

        $r2 = new android.content.ContentProviderOperation$BackReference;

        $r4 = virtualinvoke r7.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i2);

        $r5 = (java.lang.Integer) $r4;

        $i1 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        specialinvoke $r2.<android.content.ContentProviderOperation$BackReference: void <init>(int,java.lang.String,android.content.ContentProviderOperation$1)>($i1, null, null);

        specialinvoke r0.<android.content.ContentProviderOperation$Builder: void setValue(java.lang.String,java.lang.Object)>($r3, $r2);

        i2 = i2 + 1;

        goto label1;

     label2:
        return r0;
    }

    public android.content.ContentProviderOperation$Builder withValues(android.content.ContentValues)
    {
        android.content.ContentProviderOperation$Builder r0;
        int $i0, i1;
        java.lang.Object $r1, $r3;
        java.lang.String $r2;
        android.content.ContentValues r4;
        android.util.ArrayMap r5;

        r0 := @this: android.content.ContentProviderOperation$Builder;

        r4 := @parameter0: android.content.ContentValues;

        specialinvoke r0.<android.content.ContentProviderOperation$Builder: void assertValuesAllowed()>();

        specialinvoke r0.<android.content.ContentProviderOperation$Builder: void ensureValues()>();

        r5 = virtualinvoke r4.<android.content.ContentValues: android.util.ArrayMap getValues()>();

        i1 = 0;

     label1:
        $i0 = virtualinvoke r5.<android.util.ArrayMap: int size()>();

        if i1 >= $i0 goto label2;

        $r1 = virtualinvoke r5.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i1);

        $r2 = (java.lang.String) $r1;

        $r3 = virtualinvoke r5.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i1);

        specialinvoke r0.<android.content.ContentProviderOperation$Builder: void setValue(java.lang.String,java.lang.Object)>($r2, $r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        return r0;
    }

    public android.content.ContentProviderOperation$Builder withYieldAllowed(boolean)
    {
        android.content.ContentProviderOperation$Builder r0;
        boolean z0;

        r0 := @this: android.content.ContentProviderOperation$Builder;

        z0 := @parameter0: boolean;

        r0.<android.content.ContentProviderOperation$Builder: boolean mYieldAllowed> = z0;

        return r0;
    }
}
