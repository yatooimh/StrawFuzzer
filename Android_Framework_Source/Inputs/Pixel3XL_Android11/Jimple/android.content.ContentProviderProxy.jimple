final class android.content.ContentProviderProxy extends java.lang.Object implements android.content.IContentProvider
{
    private android.os.IBinder mRemote;

    public void <init>(android.os.IBinder)
    {
        android.content.ContentProviderProxy r0;
        android.os.IBinder r1;

        r0 := @this: android.content.ContentProviderProxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.content.ContentProviderProxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.content.ContentProviderResult[] applyBatch(java.lang.String, java.lang.String, java.lang.String, java.util.ArrayList) throws android.os.RemoteException, android.content.OperationApplicationException
    {
        android.content.ContentProviderProxy r0;
        java.lang.String r1, r2, r12;
        java.util.ArrayList r3;
        android.os.Parcel r4, r5;
        int $i0;
        boolean $z0;
        android.os.IBinder $r6;
        android.os.Parcelable$Creator $r7;
        java.lang.Object[] $r8;
        java.lang.Object $r9;
        android.content.ContentProviderOperation $r10;
        java.lang.Throwable $r11;
        java.util.Iterator r13;
        android.content.ContentProviderResult[] r14;

        r0 := @this: android.content.ContentProviderProxy;

        r12 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.util.ArrayList;

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r4.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.IContentProvider");

        virtualinvoke r4.<android.os.Parcel: void writeString(java.lang.String)>(r12);

        virtualinvoke r4.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r4.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        $i0 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>($i0);

        r13 = virtualinvoke r3.<java.util.ArrayList: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r9 = interfaceinvoke r13.<java.util.Iterator: java.lang.Object next()>();

        $r10 = (android.content.ContentProviderOperation) $r9;

        virtualinvoke $r10.<android.content.ContentProviderOperation: void writeToParcel(android.os.Parcel,int)>(r4, 0);

     label3:
        goto label2;

     label4:
        $r6 = r0.<android.content.ContentProviderProxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(20, r4, r5, 0);

        staticinvoke <android.database.DatabaseUtils: void readExceptionWithOperationApplicationExceptionFromParcel(android.os.Parcel)>(r5);

        $r7 = <android.content.ContentProviderResult: android.os.Parcelable$Creator CREATOR>;

        $r8 = virtualinvoke r5.<android.os.Parcel: java.lang.Object[] createTypedArray(android.os.Parcelable$Creator)>($r7);

        r14 = (android.content.ContentProviderResult[]) $r8;

     label5:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        return r14;

     label6:
        $r11 := @caughtexception;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        throw $r11;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public android.os.IBinder asBinder()
    {
        android.content.ContentProviderProxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.content.ContentProviderProxy;

        $r1 = r0.<android.content.ContentProviderProxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public int bulkInsert(java.lang.String, java.lang.String, android.net.Uri, android.content.ContentValues[]) throws android.os.RemoteException
    {
        android.content.ContentProviderProxy r0;
        java.lang.String r1, r8;
        android.net.Uri r2;
        android.content.ContentValues[] r3;
        android.os.Parcel r4, r5;
        int i0;
        android.os.IBinder $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.content.ContentProviderProxy;

        r8 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.net.Uri;

        r3 := @parameter3: android.content.ContentValues[];

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r4.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.IContentProvider");

        virtualinvoke r4.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        virtualinvoke r4.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r2.<android.net.Uri: void writeToParcel(android.os.Parcel,int)>(r4, 0);

        virtualinvoke r4.<android.os.Parcel: void writeTypedArray(android.os.Parcelable[],int)>(r3, 0);

        $r6 = r0.<android.content.ContentProviderProxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(13, r4, r5, 0);

        staticinvoke <android.database.DatabaseUtils: void readExceptionFromParcel(android.os.Parcel)>(r5);

        i0 = virtualinvoke r5.<android.os.Parcel: int readInt()>();

     label2:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        return i0;

     label3:
        $r7 := @caughtexception;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public android.os.Bundle call(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, android.os.Bundle) throws android.os.RemoteException
    {
        android.content.ContentProviderProxy r0;
        java.lang.String r1, r2, r3, r4, r10;
        android.os.Bundle r5, r11;
        android.os.Parcel r6, r7;
        android.os.IBinder $r8;
        java.lang.Throwable $r9;

        r0 := @this: android.content.ContentProviderProxy;

        r10 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String;

        r5 := @parameter5: android.os.Bundle;

        r6 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r7 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r6.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.IContentProvider");

        virtualinvoke r6.<android.os.Parcel: void writeString(java.lang.String)>(r10);

        virtualinvoke r6.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r6.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        virtualinvoke r6.<android.os.Parcel: void writeString(java.lang.String)>(r3);

        virtualinvoke r6.<android.os.Parcel: void writeString(java.lang.String)>(r4);

        virtualinvoke r6.<android.os.Parcel: void writeBundle(android.os.Bundle)>(r5);

        $r8 = r0.<android.content.ContentProviderProxy: android.os.IBinder mRemote>;

        interfaceinvoke $r8.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(21, r6, r7, 0);

        staticinvoke <android.database.DatabaseUtils: void readExceptionFromParcel(android.os.Parcel)>(r7);

        r11 = virtualinvoke r7.<android.os.Parcel: android.os.Bundle readBundle()>();

     label2:
        virtualinvoke r6.<android.os.Parcel: void recycle()>();

        virtualinvoke r7.<android.os.Parcel: void recycle()>();

        return r11;

     label3:
        $r9 := @caughtexception;

        virtualinvoke r6.<android.os.Parcel: void recycle()>();

        virtualinvoke r7.<android.os.Parcel: void recycle()>();

        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public android.net.Uri canonicalize(java.lang.String, java.lang.String, android.net.Uri) throws android.os.RemoteException
    {
        android.content.ContentProviderProxy r0;
        java.lang.String r1, r9;
        android.net.Uri r2, r10;
        android.os.Parcel r3, r4;
        android.os.IBinder $r5;
        android.os.Parcelable$Creator $r6;
        java.lang.Object $r7;
        java.lang.Throwable $r8;

        r0 := @this: android.content.ContentProviderProxy;

        r9 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.net.Uri;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.IContentProvider");

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r9);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r2.<android.net.Uri: void writeToParcel(android.os.Parcel,int)>(r3, 0);

        $r5 = r0.<android.content.ContentProviderProxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(25, r3, r4, 0);

        staticinvoke <android.database.DatabaseUtils: void readExceptionFromParcel(android.os.Parcel)>(r4);

        $r6 = <android.net.Uri: android.os.Parcelable$Creator CREATOR>;

        $r7 = interfaceinvoke $r6.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r4);

        r10 = (android.net.Uri) $r7;

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        return r10;

     label3:
        $r8 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void canonicalizeAsync(java.lang.String, java.lang.String, android.net.Uri, android.os.RemoteCallback) throws android.os.RemoteException
    {
        android.content.ContentProviderProxy r0;
        java.lang.String r1, r7;
        android.net.Uri r2;
        android.os.RemoteCallback r3;
        android.os.Parcel r4;
        android.os.IBinder $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.content.ContentProviderProxy;

        r7 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.net.Uri;

        r3 := @parameter3: android.os.RemoteCallback;

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r4.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.IContentProvider");

        virtualinvoke r4.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        virtualinvoke r4.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r2.<android.net.Uri: void writeToParcel(android.os.Parcel,int)>(r4, 0);

        virtualinvoke r3.<android.os.RemoteCallback: void writeToParcel(android.os.Parcel,int)>(r4, 0);

        $r5 = r0.<android.content.ContentProviderProxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(30, r4, null, 1);

     label2:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r6 := @caughtexception;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public int checkUriPermission(java.lang.String, java.lang.String, android.net.Uri, int, int) throws android.os.RemoteException
    {
        android.content.ContentProviderProxy r0;
        java.lang.String r1, r7;
        android.net.Uri r2;
        int i0, i1, i2;
        android.os.Parcel r3, r4;
        android.os.IBinder $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.content.ContentProviderProxy;

        r7 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.net.Uri;

        i1 := @parameter3: int;

        i0 := @parameter4: int;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.IContentProvider");

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r2.<android.net.Uri: void writeToParcel(android.os.Parcel,int)>(r3, 0);

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i0);

        $r5 = r0.<android.content.ContentProviderProxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(28, r3, r4, 0);

        staticinvoke <android.database.DatabaseUtils: void readExceptionFromParcel(android.os.Parcel)>(r4);

        i2 = virtualinvoke r4.<android.os.Parcel: int readInt()>();

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        return i2;

     label3:
        $r6 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public android.os.ICancellationSignal createCancellationSignal() throws android.os.RemoteException
    {
        android.content.ContentProviderProxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, $r4;
        java.lang.Throwable $r5;
        android.os.ICancellationSignal r6;

        r0 := @this: android.content.ContentProviderProxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.IContentProvider");

        $r3 = r0.<android.content.ContentProviderProxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(24, r1, r2, 0);

        staticinvoke <android.database.DatabaseUtils: void readExceptionFromParcel(android.os.Parcel)>(r2);

     label2:
        $r4 = virtualinvoke r2.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r6 = staticinvoke <android.os.ICancellationSignal$Stub: android.os.ICancellationSignal asInterface(android.os.IBinder)>($r4);

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r6;

     label4:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public int delete(java.lang.String, java.lang.String, android.net.Uri, android.os.Bundle) throws android.os.RemoteException
    {
        android.content.ContentProviderProxy r0;
        java.lang.String r1, r8;
        android.net.Uri r2;
        android.os.Bundle r3;
        android.os.Parcel r4, r5;
        int i0;
        android.os.IBinder $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.content.ContentProviderProxy;

        r8 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.net.Uri;

        r3 := @parameter3: android.os.Bundle;

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r4.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.IContentProvider");

        virtualinvoke r4.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        virtualinvoke r4.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r2.<android.net.Uri: void writeToParcel(android.os.Parcel,int)>(r4, 0);

        virtualinvoke r4.<android.os.Parcel: void writeBundle(android.os.Bundle)>(r3);

        $r6 = r0.<android.content.ContentProviderProxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r4, r5, 0);

        staticinvoke <android.database.DatabaseUtils: void readExceptionFromParcel(android.os.Parcel)>(r5);

        i0 = virtualinvoke r5.<android.os.Parcel: int readInt()>();

     label2:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        return i0;

     label3:
        $r7 := @caughtexception;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public java.lang.String[] getStreamTypes(android.net.Uri, java.lang.String) throws android.os.RemoteException
    {
        android.content.ContentProviderProxy r0;
        java.lang.String r1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        java.lang.Throwable $r5;
        android.net.Uri r6;
        java.lang.String[] r7;

        r0 := @this: android.content.ContentProviderProxy;

        r6 := @parameter0: android.net.Uri;

        r1 := @parameter1: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.IContentProvider");

        virtualinvoke r6.<android.net.Uri: void writeToParcel(android.os.Parcel,int)>(r2, 0);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r4 = r0.<android.content.ContentProviderProxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(22, r2, r3, 0);

        staticinvoke <android.database.DatabaseUtils: void readExceptionFromParcel(android.os.Parcel)>(r3);

        r7 = virtualinvoke r3.<android.os.Parcel: java.lang.String[] createStringArray()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public java.lang.String getType(android.net.Uri) throws android.os.RemoteException
    {
        android.content.ContentProviderProxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        java.lang.Throwable $r4;
        android.net.Uri r5;
        java.lang.String r6;

        r0 := @this: android.content.ContentProviderProxy;

        r5 := @parameter0: android.net.Uri;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.IContentProvider");

        virtualinvoke r5.<android.net.Uri: void writeToParcel(android.os.Parcel,int)>(r1, 0);

        $r3 = r0.<android.content.ContentProviderProxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r1, r2, 0);

        staticinvoke <android.database.DatabaseUtils: void readExceptionFromParcel(android.os.Parcel)>(r2);

        r6 = virtualinvoke r2.<android.os.Parcel: java.lang.String readString()>();

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r6;

     label3:
        $r4 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void getTypeAsync(android.net.Uri, android.os.RemoteCallback) throws android.os.RemoteException
    {
        android.content.ContentProviderProxy r0;
        android.os.RemoteCallback r1;
        android.os.Parcel r2;
        android.os.IBinder $r3;
        java.lang.Throwable $r4;
        android.net.Uri r5;

        r0 := @this: android.content.ContentProviderProxy;

        r5 := @parameter0: android.net.Uri;

        r1 := @parameter1: android.os.RemoteCallback;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.IContentProvider");

        virtualinvoke r5.<android.net.Uri: void writeToParcel(android.os.Parcel,int)>(r2, 0);

        virtualinvoke r1.<android.os.RemoteCallback: void writeToParcel(android.os.Parcel,int)>(r2, 0);

        $r3 = r0.<android.content.ContentProviderProxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(29, r2, null, 1);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r4 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public android.net.Uri insert(java.lang.String, java.lang.String, android.net.Uri, android.content.ContentValues, android.os.Bundle) throws android.os.RemoteException
    {
        android.content.ContentProviderProxy r0;
        java.lang.String r1, r11;
        android.net.Uri r2, r12;
        android.content.ContentValues r3;
        android.os.Bundle r4;
        android.os.Parcel r5, r6;
        android.os.IBinder $r7;
        android.os.Parcelable$Creator $r8;
        java.lang.Object $r9;
        java.lang.Throwable $r10;

        r0 := @this: android.content.ContentProviderProxy;

        r11 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.net.Uri;

        r3 := @parameter3: android.content.ContentValues;

        r4 := @parameter4: android.os.Bundle;

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r6 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r5.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.IContentProvider");

        virtualinvoke r5.<android.os.Parcel: void writeString(java.lang.String)>(r11);

        virtualinvoke r5.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r2.<android.net.Uri: void writeToParcel(android.os.Parcel,int)>(r5, 0);

        virtualinvoke r3.<android.content.ContentValues: void writeToParcel(android.os.Parcel,int)>(r5, 0);

        virtualinvoke r5.<android.os.Parcel: void writeBundle(android.os.Bundle)>(r4);

        $r7 = r0.<android.content.ContentProviderProxy: android.os.IBinder mRemote>;

        interfaceinvoke $r7.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r5, r6, 0);

        staticinvoke <android.database.DatabaseUtils: void readExceptionFromParcel(android.os.Parcel)>(r6);

        $r8 = <android.net.Uri: android.os.Parcelable$Creator CREATOR>;

        $r9 = interfaceinvoke $r8.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r6);

        r12 = (android.net.Uri) $r9;

     label2:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r6.<android.os.Parcel: void recycle()>();

        return r12;

     label3:
        $r10 := @caughtexception;

        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r6.<android.os.Parcel: void recycle()>();

        throw $r10;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public android.content.res.AssetFileDescriptor openAssetFile(java.lang.String, java.lang.String, android.net.Uri, java.lang.String, android.os.ICancellationSignal) throws android.os.RemoteException, java.io.FileNotFoundException
    {
        android.content.ContentProviderProxy r0;
        android.net.Uri r1;
        java.lang.String r2, r10, r11;
        android.os.ICancellationSignal r3;
        android.os.Parcel r4, r5;
        android.os.IBinder $r6, r12;
        int $i0;
        android.os.Parcelable$Creator $r7;
        java.lang.Object $r8;
        java.lang.Throwable $r9;
        android.content.res.AssetFileDescriptor r13;

        r0 := @this: android.content.ContentProviderProxy;

        r10 := @parameter0: java.lang.String;

        r11 := @parameter1: java.lang.String;

        r1 := @parameter2: android.net.Uri;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: android.os.ICancellationSignal;

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r4.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.IContentProvider");

        virtualinvoke r4.<android.os.Parcel: void writeString(java.lang.String)>(r10);

        virtualinvoke r4.<android.os.Parcel: void writeString(java.lang.String)>(r11);

        virtualinvoke r1.<android.net.Uri: void writeToParcel(android.os.Parcel,int)>(r4, 0);

        virtualinvoke r4.<android.os.Parcel: void writeString(java.lang.String)>(r2);

     label02:
        if r3 == null goto label05;

     label03:
        r12 = interfaceinvoke r3.<android.os.ICancellationSignal: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r12 = null;

     label06:
        virtualinvoke r4.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r12);

        $r6 = r0.<android.content.ContentProviderProxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(15, r4, r5, 0);

        staticinvoke <android.database.DatabaseUtils: void readExceptionWithFileNotFoundExceptionFromParcel(android.os.Parcel)>(r5);

     label07:
        r13 = null;

     label08:
        $i0 = virtualinvoke r5.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label09;

        $r7 = <android.content.res.AssetFileDescriptor: android.os.Parcelable$Creator CREATOR>;

        $r8 = interfaceinvoke $r7.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r5);

        r13 = (android.content.res.AssetFileDescriptor) $r8;

     label09:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        return r13;

     label10:
        $r9 := @caughtexception;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public android.os.ParcelFileDescriptor openFile(java.lang.String, java.lang.String, android.net.Uri, java.lang.String, android.os.ICancellationSignal, android.os.IBinder) throws android.os.RemoteException, java.io.FileNotFoundException
    {
        android.content.ContentProviderProxy r0;
        android.net.Uri r1;
        java.lang.String r2, r11, r12;
        android.os.ICancellationSignal r3;
        android.os.IBinder r4, $r7, r13;
        android.os.Parcel r5, r6;
        int $i0;
        android.os.Parcelable$Creator $r8;
        java.lang.Object $r9;
        java.lang.Throwable $r10;
        android.os.ParcelFileDescriptor r14;

        r0 := @this: android.content.ContentProviderProxy;

        r11 := @parameter0: java.lang.String;

        r12 := @parameter1: java.lang.String;

        r1 := @parameter2: android.net.Uri;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: android.os.ICancellationSignal;

        r4 := @parameter5: android.os.IBinder;

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r6 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r5.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.IContentProvider");

        virtualinvoke r5.<android.os.Parcel: void writeString(java.lang.String)>(r11);

        virtualinvoke r5.<android.os.Parcel: void writeString(java.lang.String)>(r12);

        virtualinvoke r1.<android.net.Uri: void writeToParcel(android.os.Parcel,int)>(r5, 0);

        virtualinvoke r5.<android.os.Parcel: void writeString(java.lang.String)>(r2);

     label02:
        if r3 == null goto label05;

     label03:
        r13 = interfaceinvoke r3.<android.os.ICancellationSignal: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r13 = null;

     label06:
        virtualinvoke r5.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r13);

        virtualinvoke r5.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r4);

        $r7 = r0.<android.content.ContentProviderProxy: android.os.IBinder mRemote>;

        interfaceinvoke $r7.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(14, r5, r6, 0);

        staticinvoke <android.database.DatabaseUtils: void readExceptionWithFileNotFoundExceptionFromParcel(android.os.Parcel)>(r6);

     label07:
        r14 = null;

     label08:
        $i0 = virtualinvoke r6.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label09;

        $r8 = <android.os.ParcelFileDescriptor: android.os.Parcelable$Creator CREATOR>;

        $r9 = interfaceinvoke $r8.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r6);

        r14 = (android.os.ParcelFileDescriptor) $r9;

     label09:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r6.<android.os.Parcel: void recycle()>();

        return r14;

     label10:
        $r10 := @caughtexception;

        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r6.<android.os.Parcel: void recycle()>();

        throw $r10;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public android.content.res.AssetFileDescriptor openTypedAssetFile(java.lang.String, java.lang.String, android.net.Uri, java.lang.String, android.os.Bundle, android.os.ICancellationSignal) throws android.os.RemoteException, java.io.FileNotFoundException
    {
        android.content.ContentProviderProxy r0;
        android.net.Uri r1;
        java.lang.String r2, r11, r12;
        android.os.Bundle r3;
        android.os.ICancellationSignal r4;
        android.os.Parcel r5, r6;
        android.os.IBinder $r7, r13;
        int $i0;
        android.os.Parcelable$Creator $r8;
        java.lang.Object $r9;
        java.lang.Throwable $r10;
        android.content.res.AssetFileDescriptor r14;

        r0 := @this: android.content.ContentProviderProxy;

        r11 := @parameter0: java.lang.String;

        r12 := @parameter1: java.lang.String;

        r1 := @parameter2: android.net.Uri;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: android.os.Bundle;

        r4 := @parameter5: android.os.ICancellationSignal;

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r6 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r5.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.IContentProvider");

        virtualinvoke r5.<android.os.Parcel: void writeString(java.lang.String)>(r11);

        virtualinvoke r5.<android.os.Parcel: void writeString(java.lang.String)>(r12);

        virtualinvoke r1.<android.net.Uri: void writeToParcel(android.os.Parcel,int)>(r5, 0);

        virtualinvoke r5.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        virtualinvoke r5.<android.os.Parcel: void writeBundle(android.os.Bundle)>(r3);

     label02:
        if r4 == null goto label05;

     label03:
        r13 = interfaceinvoke r4.<android.os.ICancellationSignal: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r13 = null;

     label06:
        virtualinvoke r5.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r13);

        $r7 = r0.<android.content.ContentProviderProxy: android.os.IBinder mRemote>;

        interfaceinvoke $r7.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(23, r5, r6, 0);

        staticinvoke <android.database.DatabaseUtils: void readExceptionWithFileNotFoundExceptionFromParcel(android.os.Parcel)>(r6);

     label07:
        r14 = null;

     label08:
        $i0 = virtualinvoke r6.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label09;

        $r8 = <android.content.res.AssetFileDescriptor: android.os.Parcelable$Creator CREATOR>;

        $r9 = interfaceinvoke $r8.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r6);

        r14 = (android.content.res.AssetFileDescriptor) $r9;

     label09:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r6.<android.os.Parcel: void recycle()>();

        return r14;

     label10:
        $r10 := @caughtexception;

        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r6.<android.os.Parcel: void recycle()>();

        throw $r10;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public android.database.Cursor query(java.lang.String, java.lang.String, android.net.Uri, java.lang.String[], android.os.Bundle, android.os.ICancellationSignal) throws android.os.RemoteException
    {
        android.content.ContentProviderProxy r0;
        android.os.Bundle r1;
        android.os.ICancellationSignal r2;
        android.os.Parcel r4, r5;
        android.database.BulkCursorToCursorAdaptor $r6, r26;
        android.database.IContentObserver $r7;
        android.os.IBinder $r8, $r9, r22, r24, r25;
        int $i0, i1, i2;
        android.os.Parcelable$Creator $r10;
        java.lang.Object $r11;
        android.database.IBulkCursor $r12, $r13;
        java.lang.String $r14, r18, r19;
        android.os.RemoteException $r15;
        java.lang.RuntimeException $r16;
        java.lang.Throwable $r17;
        android.net.Uri r20;
        java.lang.String[] r21;
        android.database.BulkCursorDescriptor r23;

        r0 := @this: android.content.ContentProviderProxy;

        r18 := @parameter0: java.lang.String;

        r19 := @parameter1: java.lang.String;

        r20 := @parameter2: android.net.Uri;

        r21 := @parameter3: java.lang.String[];

        r1 := @parameter4: android.os.Bundle;

        r2 := @parameter5: android.os.ICancellationSignal;

        $r6 = new android.database.BulkCursorToCursorAdaptor;

        specialinvoke $r6.<android.database.BulkCursorToCursorAdaptor: void <init>()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r4.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.IContentProvider");

        virtualinvoke r4.<android.os.Parcel: void writeString(java.lang.String)>(r18);

        virtualinvoke r4.<android.os.Parcel: void writeString(java.lang.String)>(r19);

        virtualinvoke r20.<android.net.Uri: void writeToParcel(android.os.Parcel,int)>(r4, 0);

     label02:
        i1 = 0;

        if r21 == null goto label04;

     label03:
        i1 = lengthof r21;

     label04:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(i1);

     label05:
        i2 = 0;

     label06:
        if i2 >= i1 goto label09;

     label07:
        $r14 = r21[i2];

        virtualinvoke r4.<android.os.Parcel: void writeString(java.lang.String)>($r14);

     label08:
        i2 = i2 + 1;

        goto label06;

     label09:
        virtualinvoke r4.<android.os.Parcel: void writeBundle(android.os.Bundle)>(r1);

        $r7 = virtualinvoke $r6.<android.database.BulkCursorToCursorAdaptor: android.database.IContentObserver getObserver()>();

        $r8 = interfaceinvoke $r7.<android.database.IContentObserver: android.os.IBinder asBinder()>();

        virtualinvoke r4.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r8);

     label10:
        if r2 == null goto label13;

     label11:
        r22 = interfaceinvoke r2.<android.os.ICancellationSignal: android.os.IBinder asBinder()>();

     label12:
        goto label14;

     label13:
        r22 = null;

     label14:
        virtualinvoke r4.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r22);

        $r9 = r0.<android.content.ContentProviderProxy: android.os.IBinder mRemote>;

        interfaceinvoke $r9.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r4, r5, 0);

        staticinvoke <android.database.DatabaseUtils: void readExceptionFromParcel(android.os.Parcel)>(r5);

        $i0 = virtualinvoke r5.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label19;

        $r10 = <android.database.BulkCursorDescriptor: android.os.Parcelable$Creator CREATOR>;

        $r11 = interfaceinvoke $r10.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r5);

        r23 = (android.database.BulkCursorDescriptor) $r11;

        r24 = r0.<android.content.ContentProviderProxy: android.os.IBinder mRemote>;

     label15:
        r25 = null;

     label16:
        $r12 = r23.<android.database.BulkCursorDescriptor: android.database.IBulkCursor cursor>;

        if $r12 == null goto label17;

        $r13 = r23.<android.database.BulkCursorDescriptor: android.database.IBulkCursor cursor>;

        r25 = interfaceinvoke $r13.<android.database.IBulkCursor: android.os.IBinder asBinder()>();

     label17:
        staticinvoke <android.os.Binder: void copyAllowBlocking(android.os.IBinder,android.os.IBinder)>(r24, r25);

        virtualinvoke $r6.<android.database.BulkCursorToCursorAdaptor: void initialize(android.database.BulkCursorDescriptor)>(r23);

     label18:
        r26 = $r6;

        goto label21;

     label19:
        virtualinvoke $r6.<android.database.BulkCursorToCursorAdaptor: void close()>();

     label20:
        r26 = null;

     label21:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        return r26;

     label22:
        $r17 := @caughtexception;

        goto label29;

     label23:
        $r16 := @caughtexception;

     label24:
        virtualinvoke $r6.<android.database.BulkCursorToCursorAdaptor: void close()>();

     label25:
        throw $r16;

     label26:
        $r15 := @caughtexception;

     label27:
        virtualinvoke $r6.<android.database.BulkCursorToCursorAdaptor: void close()>();

     label28:
        throw $r15;

     label29:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        throw $r17;

        catch android.os.RemoteException from label01 to label02 with label26;
        catch java.lang.RuntimeException from label01 to label02 with label23;
        catch java.lang.Throwable from label01 to label02 with label22;
        catch android.os.RemoteException from label03 to label04 with label26;
        catch java.lang.RuntimeException from label03 to label04 with label23;
        catch java.lang.Throwable from label03 to label04 with label22;
        catch android.os.RemoteException from label04 to label05 with label26;
        catch java.lang.RuntimeException from label04 to label05 with label23;
        catch java.lang.Throwable from label04 to label05 with label22;
        catch android.os.RemoteException from label07 to label08 with label26;
        catch java.lang.RuntimeException from label07 to label08 with label23;
        catch java.lang.Throwable from label07 to label08 with label22;
        catch android.os.RemoteException from label09 to label10 with label26;
        catch java.lang.RuntimeException from label09 to label10 with label23;
        catch java.lang.Throwable from label09 to label10 with label22;
        catch android.os.RemoteException from label11 to label12 with label26;
        catch java.lang.RuntimeException from label11 to label12 with label23;
        catch java.lang.Throwable from label11 to label12 with label22;
        catch android.os.RemoteException from label14 to label15 with label26;
        catch java.lang.RuntimeException from label14 to label15 with label23;
        catch java.lang.Throwable from label14 to label15 with label22;
        catch android.os.RemoteException from label16 to label17 with label26;
        catch java.lang.RuntimeException from label16 to label17 with label23;
        catch java.lang.Throwable from label16 to label17 with label22;
        catch android.os.RemoteException from label17 to label18 with label26;
        catch java.lang.RuntimeException from label17 to label18 with label23;
        catch java.lang.Throwable from label17 to label18 with label22;
        catch android.os.RemoteException from label19 to label20 with label26;
        catch java.lang.RuntimeException from label19 to label20 with label23;
        catch java.lang.Throwable from label19 to label20 with label22;
        catch java.lang.Throwable from label24 to label25 with label22;
        catch java.lang.Throwable from label25 to label26 with label22;
        catch java.lang.Throwable from label27 to label28 with label22;
        catch java.lang.Throwable from label28 to label29 with label22;
    }

    public boolean refresh(java.lang.String, java.lang.String, android.net.Uri, android.os.Bundle, android.os.ICancellationSignal) throws android.os.RemoteException
    {
        android.content.ContentProviderProxy r0;
        java.lang.String r1, r9;
        android.net.Uri r2;
        android.os.Bundle r3;
        android.os.ICancellationSignal r4;
        android.os.Parcel r5, r6;
        int i0;
        android.os.IBinder $r7, r10;
        java.lang.Throwable $r8;
        boolean z1;

        r0 := @this: android.content.ContentProviderProxy;

        r9 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.net.Uri;

        r3 := @parameter3: android.os.Bundle;

        r4 := @parameter4: android.os.ICancellationSignal;

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r6 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r5.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.IContentProvider");

        virtualinvoke r5.<android.os.Parcel: void writeString(java.lang.String)>(r9);

        virtualinvoke r5.<android.os.Parcel: void writeString(java.lang.String)>(r1);

     label02:
        z1 = 0;

     label03:
        virtualinvoke r2.<android.net.Uri: void writeToParcel(android.os.Parcel,int)>(r5, 0);

        virtualinvoke r5.<android.os.Parcel: void writeBundle(android.os.Bundle)>(r3);

     label04:
        if r4 == null goto label07;

     label05:
        r10 = interfaceinvoke r4.<android.os.ICancellationSignal: android.os.IBinder asBinder()>();

     label06:
        goto label08;

     label07:
        r10 = null;

     label08:
        virtualinvoke r5.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r10);

        $r7 = r0.<android.content.ContentProviderProxy: android.os.IBinder mRemote>;

        interfaceinvoke $r7.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(27, r5, r6, 0);

        staticinvoke <android.database.DatabaseUtils: void readExceptionFromParcel(android.os.Parcel)>(r6);

        i0 = virtualinvoke r6.<android.os.Parcel: int readInt()>();

     label09:
        if i0 != 0 goto label10;

        z1 = 1;

     label10:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r6.<android.os.Parcel: void recycle()>();

        return z1;

     label11:
        $r8 := @caughtexception;

        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r6.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label08 to label09 with label11;
    }

    public android.net.Uri uncanonicalize(java.lang.String, java.lang.String, android.net.Uri) throws android.os.RemoteException
    {
        android.content.ContentProviderProxy r0;
        java.lang.String r1, r9;
        android.net.Uri r2, r10;
        android.os.Parcel r3, r4;
        android.os.IBinder $r5;
        android.os.Parcelable$Creator $r6;
        java.lang.Object $r7;
        java.lang.Throwable $r8;

        r0 := @this: android.content.ContentProviderProxy;

        r9 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.net.Uri;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.IContentProvider");

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r9);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r2.<android.net.Uri: void writeToParcel(android.os.Parcel,int)>(r3, 0);

        $r5 = r0.<android.content.ContentProviderProxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(26, r3, r4, 0);

        staticinvoke <android.database.DatabaseUtils: void readExceptionFromParcel(android.os.Parcel)>(r4);

        $r6 = <android.net.Uri: android.os.Parcelable$Creator CREATOR>;

        $r7 = interfaceinvoke $r6.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r4);

        r10 = (android.net.Uri) $r7;

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        return r10;

     label3:
        $r8 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public int update(java.lang.String, java.lang.String, android.net.Uri, android.content.ContentValues, android.os.Bundle) throws android.os.RemoteException
    {
        android.content.ContentProviderProxy r0;
        java.lang.String r1, r9;
        android.net.Uri r2;
        android.content.ContentValues r3;
        android.os.Bundle r4;
        android.os.Parcel r5, r6;
        int i0;
        android.os.IBinder $r7;
        java.lang.Throwable $r8;

        r0 := @this: android.content.ContentProviderProxy;

        r9 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.net.Uri;

        r3 := @parameter3: android.content.ContentValues;

        r4 := @parameter4: android.os.Bundle;

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r6 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r5.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.IContentProvider");

        virtualinvoke r5.<android.os.Parcel: void writeString(java.lang.String)>(r9);

        virtualinvoke r5.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r2.<android.net.Uri: void writeToParcel(android.os.Parcel,int)>(r5, 0);

        virtualinvoke r3.<android.content.ContentValues: void writeToParcel(android.os.Parcel,int)>(r5, 0);

        virtualinvoke r5.<android.os.Parcel: void writeBundle(android.os.Bundle)>(r4);

        $r7 = r0.<android.content.ContentProviderProxy: android.os.IBinder mRemote>;

        interfaceinvoke $r7.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(10, r5, r6, 0);

        staticinvoke <android.database.DatabaseUtils: void readExceptionFromParcel(android.os.Parcel)>(r6);

        i0 = virtualinvoke r6.<android.os.Parcel: int readInt()>();

     label2:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r6.<android.os.Parcel: void recycle()>();

        return i0;

     label3:
        $r8 := @caughtexception;

        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r6.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
