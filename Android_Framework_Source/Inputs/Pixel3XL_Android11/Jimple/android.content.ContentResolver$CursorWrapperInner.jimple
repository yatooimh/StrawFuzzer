final class android.content.ContentResolver$CursorWrapperInner extends android.database.CrossProcessCursorWrapper
{
    private final dalvik.system.CloseGuard mCloseGuard;
    private final android.content.IContentProvider mContentProvider;
    private final java.util.concurrent.atomic.AtomicBoolean mProviderReleased;
    final android.content.ContentResolver this$0;

    void <init>(android.content.ContentResolver, android.database.Cursor, android.content.IContentProvider)
    {
        android.content.ContentResolver$CursorWrapperInner r0;
        android.database.Cursor r1;
        android.content.IContentProvider r2;
        java.util.concurrent.atomic.AtomicBoolean $r3;
        android.content.ContentResolver r4;
        dalvik.system.CloseGuard r5;

        r0 := @this: android.content.ContentResolver$CursorWrapperInner;

        r4 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: android.database.Cursor;

        r2 := @parameter2: android.content.IContentProvider;

        r0.<android.content.ContentResolver$CursorWrapperInner: android.content.ContentResolver this$0> = r4;

        specialinvoke r0.<android.database.CrossProcessCursorWrapper: void <init>(android.database.Cursor)>(r1);

        $r3 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r3.<java.util.concurrent.atomic.AtomicBoolean: void <init>()>();

        r0.<android.content.ContentResolver$CursorWrapperInner: java.util.concurrent.atomic.AtomicBoolean mProviderReleased> = $r3;

        r5 = staticinvoke <dalvik.system.CloseGuard: dalvik.system.CloseGuard get()>();

        r0.<android.content.ContentResolver$CursorWrapperInner: dalvik.system.CloseGuard mCloseGuard> = r5;

        r0.<android.content.ContentResolver$CursorWrapperInner: android.content.IContentProvider mContentProvider> = r2;

        virtualinvoke r5.<dalvik.system.CloseGuard: void open(java.lang.String)>("close");

        return;
    }

    public void close()
    {
        android.content.ContentResolver$CursorWrapperInner r0;
        dalvik.system.CloseGuard $r1;
        java.util.concurrent.atomic.AtomicBoolean $r2;
        boolean $z0;
        android.content.IContentProvider $r3;
        android.content.ContentResolver $r4;

        r0 := @this: android.content.ContentResolver$CursorWrapperInner;

        $r1 = r0.<android.content.ContentResolver$CursorWrapperInner: dalvik.system.CloseGuard mCloseGuard>;

        virtualinvoke $r1.<dalvik.system.CloseGuard: void close()>();

        specialinvoke r0.<android.database.CrossProcessCursorWrapper: void close()>();

        $r2 = r0.<android.content.ContentResolver$CursorWrapperInner: java.util.concurrent.atomic.AtomicBoolean mProviderReleased>;

        $z0 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicBoolean: boolean compareAndSet(boolean,boolean)>(0, 1);

        if $z0 == 0 goto label1;

        $r4 = r0.<android.content.ContentResolver$CursorWrapperInner: android.content.ContentResolver this$0>;

        $r3 = r0.<android.content.ContentResolver$CursorWrapperInner: android.content.IContentProvider mContentProvider>;

        virtualinvoke $r4.<android.content.ContentResolver: boolean releaseProvider(android.content.IContentProvider)>($r3);

     label1:
        return;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.content.ContentResolver$CursorWrapperInner r0;
        dalvik.system.CloseGuard $r2, $r3;
        java.lang.Throwable $r4;

        r0 := @this: android.content.ContentResolver$CursorWrapperInner;

     label1:
        $r2 = r0.<android.content.ContentResolver$CursorWrapperInner: dalvik.system.CloseGuard mCloseGuard>;

        if $r2 == null goto label2;

        $r3 = r0.<android.content.ContentResolver$CursorWrapperInner: dalvik.system.CloseGuard mCloseGuard>;

        virtualinvoke $r3.<dalvik.system.CloseGuard: void warnIfOpen()>();

     label2:
        virtualinvoke r0.<android.content.ContentResolver$CursorWrapperInner: void close()>();

     label3:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        return;

     label4:
        $r4 := @caughtexception;

        specialinvoke r0.<java.lang.Object: void finalize()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
    }
}
