final class android.content.ContentResolver$ParcelFileDescriptorInner extends android.os.ParcelFileDescriptor
{
    private final android.content.IContentProvider mContentProvider;
    private final java.util.concurrent.atomic.AtomicBoolean mProviderReleased;
    final android.content.ContentResolver this$0;

    void <init>(android.content.ContentResolver, android.os.ParcelFileDescriptor, android.content.IContentProvider)
    {
        android.content.ContentResolver$ParcelFileDescriptorInner r0;
        android.content.ContentResolver r1;
        android.os.ParcelFileDescriptor r2;
        android.content.IContentProvider r3;
        java.util.concurrent.atomic.AtomicBoolean $r4;

        r0 := @this: android.content.ContentResolver$ParcelFileDescriptorInner;

        r1 := @parameter0: android.content.ContentResolver;

        r2 := @parameter1: android.os.ParcelFileDescriptor;

        r3 := @parameter2: android.content.IContentProvider;

        r0.<android.content.ContentResolver$ParcelFileDescriptorInner: android.content.ContentResolver this$0> = r1;

        specialinvoke r0.<android.os.ParcelFileDescriptor: void <init>(android.os.ParcelFileDescriptor)>(r2);

        $r4 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r4.<java.util.concurrent.atomic.AtomicBoolean: void <init>()>();

        r0.<android.content.ContentResolver$ParcelFileDescriptorInner: java.util.concurrent.atomic.AtomicBoolean mProviderReleased> = $r4;

        r0.<android.content.ContentResolver$ParcelFileDescriptorInner: android.content.IContentProvider mContentProvider> = r3;

        return;
    }

    public void releaseResources()
    {
        android.content.ContentResolver$ParcelFileDescriptorInner r0;
        java.util.concurrent.atomic.AtomicBoolean $r1;
        boolean $z0;
        android.content.IContentProvider $r2;
        android.content.ContentResolver $r3;

        r0 := @this: android.content.ContentResolver$ParcelFileDescriptorInner;

        $r1 = r0.<android.content.ContentResolver$ParcelFileDescriptorInner: java.util.concurrent.atomic.AtomicBoolean mProviderReleased>;

        $z0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: boolean compareAndSet(boolean,boolean)>(0, 1);

        if $z0 == 0 goto label1;

        $r3 = r0.<android.content.ContentResolver$ParcelFileDescriptorInner: android.content.ContentResolver this$0>;

        $r2 = r0.<android.content.ContentResolver$ParcelFileDescriptorInner: android.content.IContentProvider mContentProvider>;

        virtualinvoke $r3.<android.content.ContentResolver: boolean releaseProvider(android.content.IContentProvider)>($r2);

     label1:
        return;
    }
}
