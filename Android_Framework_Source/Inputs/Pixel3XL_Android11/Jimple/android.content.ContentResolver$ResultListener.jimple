abstract class android.content.ContentResolver$ResultListener extends java.lang.Object implements android.os.RemoteCallback$OnResultListener
{
    public boolean done;
    public java.lang.RuntimeException exception;
    public java.lang.Object result;

    private void <init>()
    {
        android.content.ContentResolver$ResultListener r0;

        r0 := @this: android.content.ContentResolver$ResultListener;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(android.content.ContentResolver$1)
    {
        android.content.ContentResolver$ResultListener r0;
        android.content.ContentResolver$1 r1;

        r0 := @this: android.content.ContentResolver$ResultListener;

        r1 := @parameter0: android.content.ContentResolver$1;

        specialinvoke r0.<android.content.ContentResolver$ResultListener: void <init>()>();

        return;
    }

    protected abstract java.lang.Object getResultFromBundle(android.os.Bundle);

    public void onResult(android.os.Bundle)
    {
        android.content.ContentResolver$ResultListener r0;
        android.os.Parcelable $r1;
        java.lang.Object $r2;
        boolean $z0;
        java.lang.RuntimeException $r3, r8;
        java.lang.Throwable $r4, r7;
        android.os.Bundle r5;
        android.os.ParcelableException r6;

        r0 := @this: android.content.ContentResolver$ResultListener;

        r5 := @parameter0: android.os.Bundle;

        entermonitor r0;

     label01:
        $r1 = virtualinvoke r5.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>("error");

        r6 = (android.os.ParcelableException) $r1;

     label02:
        if r6 == null goto label07;

     label03:
        r7 = virtualinvoke r6.<android.os.ParcelableException: java.lang.Throwable getCause()>();

        $z0 = r7 instanceof java.lang.RuntimeException;

        if $z0 == 0 goto label05;

        $r3 = (java.lang.RuntimeException) r7;

        r0.<android.content.ContentResolver$ResultListener: java.lang.RuntimeException exception> = $r3;

     label04:
        goto label06;

     label05:
        r8 = new java.lang.RuntimeException;

        specialinvoke r8.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r7);

        r0.<android.content.ContentResolver$ResultListener: java.lang.RuntimeException exception> = r8;

     label06:
        goto label08;

     label07:
        $r2 = virtualinvoke r0.<android.content.ContentResolver$ResultListener: java.lang.Object getResultFromBundle(android.os.Bundle)>(r5);

        r0.<android.content.ContentResolver$ResultListener: java.lang.Object result> = $r2;

     label08:
        r0.<android.content.ContentResolver$ResultListener: boolean done> = 1;

        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

        exitmonitor r0;

     label09:
        return;

     label10:
        $r4 := @caughtexception;

     label11:
        exitmonitor r0;

     label12:
        throw $r4;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public void waitForResult(long)
    {
        android.content.ContentResolver$ResultListener r0;
        long l0;
        boolean z0;
        java.lang.Throwable $r1, $r2;

        r0 := @this: android.content.ContentResolver$ResultListener;

        l0 := @parameter0: long;

        entermonitor r0;

     label01:
        z0 = r0.<android.content.ContentResolver$ResultListener: boolean done>;

     label02:
        if z0 != 0 goto label06;

     label03:
        virtualinvoke r0.<java.lang.Object: void wait(long)>(l0);

     label04:
        goto label06;

     label05:
        $r2 := @caughtexception;

     label06:
        exitmonitor r0;

     label07:
        return;

     label08:
        $r1 := @caughtexception;

     label09:
        exitmonitor r0;

     label10:
        throw $r1;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.InterruptedException from label03 to label04 with label05;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }
}
