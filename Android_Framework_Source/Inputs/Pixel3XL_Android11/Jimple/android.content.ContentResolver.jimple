public abstract class android.content.ContentResolver extends java.lang.Object implements android.content.ContentInterface
{
    public static final android.content.Intent ACTION_SYNC_CONN_STATUS_CHANGED;
    public static final java.lang.String ANY_CURSOR_ITEM_TYPE;
    public static final int CONTENT_PROVIDER_PUBLISH_TIMEOUT_MILLIS;
    public static final int CONTENT_PROVIDER_READY_TIMEOUT_MILLIS;
    private static final int CONTENT_PROVIDER_TIMEOUT_MILLIS;
    public static final java.lang.String CONTENT_SERVICE_NAME;
    public static final java.lang.String CURSOR_DIR_BASE_TYPE;
    public static final java.lang.String CURSOR_ITEM_BASE_TYPE;
    public static final boolean DEPRECATE_DATA_COLUMNS;
    public static final java.lang.String DEPRECATE_DATA_PREFIX;
    private static final boolean ENABLE_CONTENT_SAMPLE;
    public static final java.lang.String EXTRA_HONORED_ARGS;
    public static final java.lang.String EXTRA_REFRESH_SUPPORTED;
    public static final java.lang.String EXTRA_SIZE;
    public static final java.lang.String EXTRA_TOTAL_COUNT;
    public static final java.lang.String MIME_TYPE_DEFAULT;
    public static final int NOTIFY_DELETE;
    public static final int NOTIFY_INSERT;
    public static final int NOTIFY_NO_DELAY;
    public static final int NOTIFY_SKIP_NOTIFY_FOR_DESCENDANTS;
    public static final int NOTIFY_SYNC_TO_NETWORK;
    public static final int NOTIFY_UPDATE;
    public static final java.lang.String QUERY_ARG_GROUP_COLUMNS;
    public static final java.lang.String QUERY_ARG_LIMIT;
    public static final java.lang.String QUERY_ARG_OFFSET;
    public static final java.lang.String QUERY_ARG_SORT_COLLATION;
    public static final java.lang.String QUERY_ARG_SORT_COLUMNS;
    public static final java.lang.String QUERY_ARG_SORT_DIRECTION;
    public static final java.lang.String QUERY_ARG_SORT_LOCALE;
    public static final java.lang.String QUERY_ARG_SQL_GROUP_BY;
    public static final java.lang.String QUERY_ARG_SQL_HAVING;
    public static final java.lang.String QUERY_ARG_SQL_LIMIT;
    public static final java.lang.String QUERY_ARG_SQL_SELECTION;
    public static final java.lang.String QUERY_ARG_SQL_SELECTION_ARGS;
    public static final java.lang.String QUERY_ARG_SQL_SORT_ORDER;
    public static final int QUERY_SORT_DIRECTION_ASCENDING;
    public static final int QUERY_SORT_DIRECTION_DESCENDING;
    public static final java.lang.String REMOTE_CALLBACK_ERROR;
    public static final java.lang.String REMOTE_CALLBACK_RESULT;
    private static final int REMOTE_CONTENT_PROVIDER_TIMEOUT_MILLIS;
    public static final java.lang.String SCHEME_ANDROID_RESOURCE;
    public static final java.lang.String SCHEME_CONTENT;
    public static final java.lang.String SCHEME_FILE;
    private static final int SLOW_THRESHOLD_MILLIS;
    public static final int SYNC_ERROR_AUTHENTICATION;
    public static final int SYNC_ERROR_CONFLICT;
    public static final int SYNC_ERROR_INTERNAL;
    public static final int SYNC_ERROR_IO;
    private static final java.lang.String[] SYNC_ERROR_NAMES;
    public static final int SYNC_ERROR_PARSE;
    public static final int SYNC_ERROR_SYNC_ALREADY_IN_PROGRESS;
    public static final int SYNC_ERROR_TOO_MANY_DELETIONS;
    public static final int SYNC_ERROR_TOO_MANY_RETRIES;
    public static final int SYNC_EXEMPTION_NONE;
    public static final int SYNC_EXEMPTION_PROMOTE_BUCKET;
    public static final int SYNC_EXEMPTION_PROMOTE_BUCKET_WITH_TEMP;
    public static final java.lang.String SYNC_EXTRAS_ACCOUNT;
    public static final java.lang.String SYNC_EXTRAS_DISALLOW_METERED;
    public static final java.lang.String SYNC_EXTRAS_DISCARD_LOCAL_DELETIONS;
    public static final java.lang.String SYNC_EXTRAS_DO_NOT_RETRY;
    public static final java.lang.String SYNC_EXTRAS_EXPECTED_DOWNLOAD;
    public static final java.lang.String SYNC_EXTRAS_EXPECTED_UPLOAD;
    public static final java.lang.String SYNC_EXTRAS_EXPEDITED;
    public static final java.lang.String SYNC_EXTRAS_FORCE;
    public static final java.lang.String SYNC_EXTRAS_IGNORE_BACKOFF;
    public static final java.lang.String SYNC_EXTRAS_IGNORE_SETTINGS;
    public static final java.lang.String SYNC_EXTRAS_INITIALIZE;
    public static final java.lang.String SYNC_EXTRAS_MANUAL;
    public static final java.lang.String SYNC_EXTRAS_OVERRIDE_TOO_MANY_DELETIONS;
    public static final java.lang.String SYNC_EXTRAS_PRIORITY;
    public static final java.lang.String SYNC_EXTRAS_REQUIRE_CHARGING;
    public static final java.lang.String SYNC_EXTRAS_UPLOAD;
    public static final int SYNC_OBSERVER_TYPE_ACTIVE;
    public static final int SYNC_OBSERVER_TYPE_ALL;
    public static final int SYNC_OBSERVER_TYPE_PENDING;
    public static final int SYNC_OBSERVER_TYPE_SETTINGS;
    public static final int SYNC_OBSERVER_TYPE_STATUS;
    public static final java.lang.String SYNC_VIRTUAL_EXTRAS_EXEMPTION_FLAG;
    private static final java.lang.String TAG;
    private static volatile android.content.IContentService sContentService;
    final java.lang.String mAttributionTag;
    private final android.content.Context mContext;
    final java.lang.String mPackageName;
    private final java.util.Random mRandom;
    final int mTargetSdkVersion;
    final android.content.ContentInterface mWrapped;

    static void <clinit>()
    {
        boolean $z0;
        android.content.Intent $r0;
        java.lang.String[] $r1;

        <android.content.ContentResolver: java.lang.String TAG> = "ContentResolver";

        <android.content.ContentResolver: java.lang.String SYNC_VIRTUAL_EXTRAS_EXEMPTION_FLAG> = "v_exemption";

        <android.content.ContentResolver: int SYNC_OBSERVER_TYPE_STATUS> = 8;

        <android.content.ContentResolver: int SYNC_OBSERVER_TYPE_SETTINGS> = 1;

        <android.content.ContentResolver: int SYNC_OBSERVER_TYPE_PENDING> = 2;

        <android.content.ContentResolver: int SYNC_OBSERVER_TYPE_ALL> = 2147483647;

        <android.content.ContentResolver: int SYNC_OBSERVER_TYPE_ACTIVE> = 4;

        <android.content.ContentResolver: java.lang.String SYNC_EXTRAS_UPLOAD> = "upload";

        <android.content.ContentResolver: java.lang.String SYNC_EXTRAS_REQUIRE_CHARGING> = "require_charging";

        <android.content.ContentResolver: java.lang.String SYNC_EXTRAS_PRIORITY> = "sync_priority";

        <android.content.ContentResolver: java.lang.String SYNC_EXTRAS_OVERRIDE_TOO_MANY_DELETIONS> = "deletions_override";

        <android.content.ContentResolver: java.lang.String SYNC_EXTRAS_MANUAL> = "force";

        <android.content.ContentResolver: java.lang.String SYNC_EXTRAS_INITIALIZE> = "initialize";

        <android.content.ContentResolver: java.lang.String SYNC_EXTRAS_IGNORE_SETTINGS> = "ignore_settings";

        <android.content.ContentResolver: java.lang.String SYNC_EXTRAS_IGNORE_BACKOFF> = "ignore_backoff";

        <android.content.ContentResolver: java.lang.String SYNC_EXTRAS_FORCE> = "force";

        <android.content.ContentResolver: java.lang.String SYNC_EXTRAS_EXPEDITED> = "expedited";

        <android.content.ContentResolver: java.lang.String SYNC_EXTRAS_EXPECTED_UPLOAD> = "expected_upload";

        <android.content.ContentResolver: java.lang.String SYNC_EXTRAS_EXPECTED_DOWNLOAD> = "expected_download";

        <android.content.ContentResolver: java.lang.String SYNC_EXTRAS_DO_NOT_RETRY> = "do_not_retry";

        <android.content.ContentResolver: java.lang.String SYNC_EXTRAS_DISCARD_LOCAL_DELETIONS> = "discard_deletions";

        <android.content.ContentResolver: java.lang.String SYNC_EXTRAS_DISALLOW_METERED> = "allow_metered";

        <android.content.ContentResolver: java.lang.String SYNC_EXTRAS_ACCOUNT> = "account";

        <android.content.ContentResolver: int SYNC_EXEMPTION_PROMOTE_BUCKET_WITH_TEMP> = 2;

        <android.content.ContentResolver: int SYNC_EXEMPTION_PROMOTE_BUCKET> = 1;

        <android.content.ContentResolver: int SYNC_EXEMPTION_NONE> = 0;

        <android.content.ContentResolver: int SYNC_ERROR_TOO_MANY_RETRIES> = 7;

        <android.content.ContentResolver: int SYNC_ERROR_TOO_MANY_DELETIONS> = 6;

        <android.content.ContentResolver: int SYNC_ERROR_SYNC_ALREADY_IN_PROGRESS> = 1;

        <android.content.ContentResolver: int SYNC_ERROR_PARSE> = 4;

        <android.content.ContentResolver: int SYNC_ERROR_IO> = 3;

        <android.content.ContentResolver: int SYNC_ERROR_INTERNAL> = 8;

        <android.content.ContentResolver: int SYNC_ERROR_CONFLICT> = 5;

        <android.content.ContentResolver: int SYNC_ERROR_AUTHENTICATION> = 2;

        <android.content.ContentResolver: int SLOW_THRESHOLD_MILLIS> = 500;

        <android.content.ContentResolver: java.lang.String SCHEME_FILE> = "file";

        <android.content.ContentResolver: java.lang.String SCHEME_CONTENT> = "content";

        <android.content.ContentResolver: java.lang.String SCHEME_ANDROID_RESOURCE> = "android.resource";

        <android.content.ContentResolver: int REMOTE_CONTENT_PROVIDER_TIMEOUT_MILLIS> = 23000;

        <android.content.ContentResolver: java.lang.String REMOTE_CALLBACK_RESULT> = "result";

        <android.content.ContentResolver: java.lang.String REMOTE_CALLBACK_ERROR> = "error";

        <android.content.ContentResolver: int QUERY_SORT_DIRECTION_DESCENDING> = 1;

        <android.content.ContentResolver: int QUERY_SORT_DIRECTION_ASCENDING> = 0;

        <android.content.ContentResolver: java.lang.String QUERY_ARG_SQL_SORT_ORDER> = "android:query-arg-sql-sort-order";

        <android.content.ContentResolver: java.lang.String QUERY_ARG_SQL_SELECTION_ARGS> = "android:query-arg-sql-selection-args";

        <android.content.ContentResolver: java.lang.String QUERY_ARG_SQL_SELECTION> = "android:query-arg-sql-selection";

        <android.content.ContentResolver: java.lang.String QUERY_ARG_SQL_LIMIT> = "android:query-arg-sql-limit";

        <android.content.ContentResolver: java.lang.String QUERY_ARG_SQL_HAVING> = "android:query-arg-sql-having";

        <android.content.ContentResolver: java.lang.String QUERY_ARG_SQL_GROUP_BY> = "android:query-arg-sql-group-by";

        <android.content.ContentResolver: java.lang.String QUERY_ARG_SORT_LOCALE> = "android:query-arg-sort-locale";

        <android.content.ContentResolver: java.lang.String QUERY_ARG_SORT_DIRECTION> = "android:query-arg-sort-direction";

        <android.content.ContentResolver: java.lang.String QUERY_ARG_SORT_COLUMNS> = "android:query-arg-sort-columns";

        <android.content.ContentResolver: java.lang.String QUERY_ARG_SORT_COLLATION> = "android:query-arg-sort-collation";

        <android.content.ContentResolver: java.lang.String QUERY_ARG_OFFSET> = "android:query-arg-offset";

        <android.content.ContentResolver: java.lang.String QUERY_ARG_LIMIT> = "android:query-arg-limit";

        <android.content.ContentResolver: java.lang.String QUERY_ARG_GROUP_COLUMNS> = "android:query-arg-group-columns";

        <android.content.ContentResolver: int NOTIFY_UPDATE> = 8;

        <android.content.ContentResolver: int NOTIFY_SYNC_TO_NETWORK> = 1;

        <android.content.ContentResolver: int NOTIFY_SKIP_NOTIFY_FOR_DESCENDANTS> = 2;

        <android.content.ContentResolver: int NOTIFY_NO_DELAY> = 32768;

        <android.content.ContentResolver: int NOTIFY_INSERT> = 4;

        <android.content.ContentResolver: int NOTIFY_DELETE> = 16;

        <android.content.ContentResolver: java.lang.String MIME_TYPE_DEFAULT> = "application/octet-stream";

        <android.content.ContentResolver: java.lang.String EXTRA_TOTAL_COUNT> = "android.content.extra.TOTAL_COUNT";

        <android.content.ContentResolver: java.lang.String EXTRA_SIZE> = "android.content.extra.SIZE";

        <android.content.ContentResolver: java.lang.String EXTRA_REFRESH_SUPPORTED> = "android.content.extra.REFRESH_SUPPORTED";

        <android.content.ContentResolver: java.lang.String EXTRA_HONORED_ARGS> = "android.content.extra.HONORED_ARGS";

        <android.content.ContentResolver: boolean ENABLE_CONTENT_SAMPLE> = 0;

        <android.content.ContentResolver: java.lang.String DEPRECATE_DATA_PREFIX> = "/mnt/content/";

        <android.content.ContentResolver: java.lang.String CURSOR_ITEM_BASE_TYPE> = "vnd.android.cursor.item";

        <android.content.ContentResolver: java.lang.String CURSOR_DIR_BASE_TYPE> = "vnd.android.cursor.dir";

        <android.content.ContentResolver: java.lang.String CONTENT_SERVICE_NAME> = "content";

        <android.content.ContentResolver: int CONTENT_PROVIDER_TIMEOUT_MILLIS> = 3000;

        <android.content.ContentResolver: int CONTENT_PROVIDER_READY_TIMEOUT_MILLIS> = 20000;

        <android.content.ContentResolver: int CONTENT_PROVIDER_PUBLISH_TIMEOUT_MILLIS> = 10000;

        <android.content.ContentResolver: java.lang.String ANY_CURSOR_ITEM_TYPE> = "vnd.android.cursor.item/*";

        $z0 = staticinvoke <android.os.storage.StorageManager: boolean hasIsolatedStorage()>();

        <android.content.ContentResolver: boolean DEPRECATE_DATA_COLUMNS> = $z0;

        $r0 = new android.content.Intent;

        specialinvoke $r0.<android.content.Intent: void <init>(java.lang.String)>("com.android.sync.SYNC_CONN_STATUS_CHANGED");

        <android.content.ContentResolver: android.content.Intent ACTION_SYNC_CONN_STATUS_CHANGED> = $r0;

        $r1 = newarray (java.lang.String)[8];

        $r1[0] = "already-in-progress";

        $r1[1] = "authentication-error";

        $r1[2] = "io-error";

        $r1[3] = "parse-error";

        $r1[4] = "conflict";

        $r1[5] = "too-many-deletions";

        $r1[6] = "too-many-retries";

        $r1[7] = "internal-error";

        <android.content.ContentResolver: java.lang.String[] SYNC_ERROR_NAMES> = $r1;

        return;
    }

    public void <init>(android.content.Context)
    {
        android.content.ContentResolver r0;
        android.content.Context r1;

        r0 := @this: android.content.ContentResolver;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.content.ContentResolver: void <init>(android.content.Context,android.content.ContentInterface)>(r1, null);

        return;
    }

    public void <init>(android.content.Context, android.content.ContentInterface)
    {
        android.content.ContentResolver r0;
        android.content.ContentInterface r1;
        java.util.Random $r2;
        java.lang.String $r3, $r5;
        android.content.Context $r4, $r6, r8;
        android.content.pm.ApplicationInfo $r7;
        int $i0;

        r0 := @this: android.content.ContentResolver;

        r8 := @parameter0: android.content.Context;

        r1 := @parameter1: android.content.ContentInterface;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.Random;

        specialinvoke $r2.<java.util.Random: void <init>()>();

        r0.<android.content.ContentResolver: java.util.Random mRandom> = $r2;

        if r8 == null goto label1;

        goto label2;

     label1:
        r8 = staticinvoke <android.app.ActivityThread: android.app.Application currentApplication()>();

     label2:
        r0.<android.content.ContentResolver: android.content.Context mContext> = r8;

        $r3 = virtualinvoke r8.<android.content.Context: java.lang.String getOpPackageName()>();

        r0.<android.content.ContentResolver: java.lang.String mPackageName> = $r3;

        $r4 = r0.<android.content.ContentResolver: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: java.lang.String getAttributionTag()>();

        r0.<android.content.ContentResolver: java.lang.String mAttributionTag> = $r5;

        $r6 = r0.<android.content.ContentResolver: android.content.Context mContext>;

        $r7 = virtualinvoke $r6.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $i0 = $r7.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        r0.<android.content.ContentResolver: int mTargetSdkVersion> = $i0;

        r0.<android.content.ContentResolver: android.content.ContentInterface mWrapped> = r1;

        return;
    }

    public static void addPeriodicSync(android.accounts.Account, java.lang.String, android.os.Bundle, long)
    {
        java.lang.String r0;
        android.os.Bundle r1;
        long l0;
        boolean $z0;
        java.lang.IllegalArgumentException $r2;
        android.content.IContentService $r3;
        android.os.RemoteException $r4;
        java.lang.RuntimeException $r5;
        android.accounts.Account r6;

        r6 := @parameter0: android.accounts.Account;

        r0 := @parameter1: java.lang.String;

        r1 := @parameter2: android.os.Bundle;

        l0 := @parameter3: long;

        staticinvoke <android.content.ContentResolver: void validateSyncExtrasBundle(android.os.Bundle)>(r1);

        $z0 = staticinvoke <android.content.ContentResolver: boolean invalidPeriodicExtras(android.os.Bundle)>(r1);

        if $z0 != 0 goto label4;

     label1:
        $r3 = staticinvoke <android.content.ContentResolver: android.content.IContentService getContentService()>();

        interfaceinvoke $r3.<android.content.IContentService: void addPeriodicSync(android.accounts.Account,java.lang.String,android.os.Bundle,long)>(r6, r0, r1, l0);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        $r5 = virtualinvoke $r4.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r5;

     label4:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("illegal extras were set");

        throw $r2;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static java.lang.Object addStatusChangeListener(int, android.content.SyncStatusObserver)
    {
        int i0;
        android.content.ContentResolver$2 r0;
        java.lang.IllegalArgumentException $r1;
        android.content.IContentService $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;
        android.content.SyncStatusObserver r5;

        i0 := @parameter0: int;

        r5 := @parameter1: android.content.SyncStatusObserver;

        if r5 == null goto label4;

     label1:
        r0 = new android.content.ContentResolver$2;

        specialinvoke r0.<android.content.ContentResolver$2: void <init>(android.content.SyncStatusObserver)>(r5);

        $r2 = staticinvoke <android.content.ContentResolver: android.content.IContentService getContentService()>();

        interfaceinvoke $r2.<android.content.IContentService: void addStatusChangeListener(int,android.content.ISyncStatusObserver)>(i0, r0);

     label2:
        return r0;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

     label4:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("you passed in a null callback");

        throw $r1;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static void cancelSync(android.accounts.Account, java.lang.String)
    {
        java.lang.String r0;
        android.content.IContentService $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        android.accounts.Account r4;

        r4 := @parameter0: android.accounts.Account;

        r0 := @parameter1: java.lang.String;

     label1:
        $r1 = staticinvoke <android.content.ContentResolver: android.content.IContentService getContentService()>();

        interfaceinvoke $r1.<android.content.IContentService: void cancelSync(android.accounts.Account,java.lang.String,android.content.ComponentName)>(r4, r0, null);

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static void cancelSync(android.content.SyncRequest)
    {
        java.lang.IllegalArgumentException $r0;
        android.content.IContentService $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        android.content.SyncRequest r4;

        r4 := @parameter0: android.content.SyncRequest;

        if r4 == null goto label4;

     label1:
        $r1 = staticinvoke <android.content.ContentResolver: android.content.IContentService getContentService()>();

        interfaceinvoke $r1.<android.content.IContentService: void cancelRequest(android.content.SyncRequest)>(r4);

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

     label4:
        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("request cannot be null");

        throw $r0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static void cancelSyncAsUser(android.accounts.Account, java.lang.String, int)
    {
        java.lang.String r0;
        int i0;
        android.content.IContentService $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        android.accounts.Account r4;

        r4 := @parameter0: android.accounts.Account;

        r0 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

     label1:
        $r1 = staticinvoke <android.content.ContentResolver: android.content.IContentService getContentService()>();

        interfaceinvoke $r1.<android.content.IContentService: void cancelSyncAsUser(android.accounts.Account,java.lang.String,android.content.ComponentName,int)>(r4, r0, null, i0);

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static android.os.Bundle createSqlQueryBundle(java.lang.String, java.lang.String[])
    {
        java.lang.String r0;
        java.lang.String[] r1;
        android.os.Bundle $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String[];

        $r2 = staticinvoke <android.content.ContentResolver: android.os.Bundle createSqlQueryBundle(java.lang.String,java.lang.String[],java.lang.String)>(r0, r1, null);

        return $r2;
    }

    public static android.os.Bundle createSqlQueryBundle(java.lang.String, java.lang.String[], java.lang.String)
    {
        java.lang.String r0, r2;
        java.lang.String[] r1;
        android.os.Bundle $r4;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String[];

        r2 := @parameter2: java.lang.String;

        if r0 != null goto label1;

        if r1 != null goto label1;

        if r2 != null goto label1;

        return null;

     label1:
        $r4 = new android.os.Bundle;

        specialinvoke $r4.<android.os.Bundle: void <init>()>();

        if r0 == null goto label2;

        virtualinvoke $r4.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("android:query-arg-sql-selection", r0);

     label2:
        if r1 == null goto label3;

        virtualinvoke $r4.<android.os.Bundle: void putStringArray(java.lang.String,java.lang.String[])>("android:query-arg-sql-selection-args", r1);

     label3:
        if r2 == null goto label4;

        virtualinvoke $r4.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("android:query-arg-sql-sort-order", r2);

     label4:
        return $r4;
    }

    public static java.lang.String createSqlSortClause(android.os.Bundle)
    {
        java.lang.String r0, r14, r16;
        java.lang.IllegalArgumentException $r1, $r8;
        int $i0, i1, i2;
        java.lang.StringBuilder $r2, $r5, $r9;
        android.os.Bundle r12;
        java.lang.String[] r13;

        r12 := @parameter0: android.os.Bundle;

        r13 = virtualinvoke r12.<android.os.Bundle: java.lang.String[] getStringArray(java.lang.String)>("android:query-arg-sort-columns");

        if r13 == null goto label6;

        $i0 = lengthof r13;

        if $i0 == 0 goto label6;

        r0 = staticinvoke <android.text.TextUtils: java.lang.String join(java.lang.CharSequence,java.lang.Object[])>(", ", r13);

        i1 = virtualinvoke r12.<android.os.Bundle: int getInt(java.lang.String,int)>("android:query-arg-sort-collation", 3);

        if i1 == 0 goto label1;

        r14 = r0;

        if i1 != 1 goto label2;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" COLLATE NOCASE");

        r14 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        i2 = virtualinvoke r12.<android.os.Bundle: int getInt(java.lang.String,int)>("android:query-arg-sort-direction", -2147483648);

        r16 = r14;

        if i2 == -2147483648 goto label5;

        if i2 == 0 goto label4;

        if i2 != 1 goto label3;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r14);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" DESC");

        r16 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label5;

     label3:
        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unsupported sort direction value. See ContentResolver documentation for details.");

        throw $r8;

     label4:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r14);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ASC");

        r16 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label5:
        return r16;

     label6:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t create sort clause without columns.");

        throw $r1;
    }

    public static android.net.Uri decodeFromFile(java.io.File)
    {
        java.io.File r0;
        java.lang.String $r1;
        android.net.Uri $r2;

        r0 := @parameter0: java.io.File;

        $r1 = virtualinvoke r0.<java.io.File: java.lang.String getAbsolutePath()>();

        $r2 = staticinvoke <android.content.ContentResolver: android.net.Uri translateDeprecatedDataPath(java.lang.String)>($r1);

        return $r2;
    }

    public static java.io.File encodeToFile(android.net.Uri)
    {
        android.net.Uri r0;
        java.io.File $r1;
        java.lang.String $r2;

        r0 := @parameter0: android.net.Uri;

        $r1 = new java.io.File;

        $r2 = staticinvoke <android.content.ContentResolver: java.lang.String translateDeprecatedDataPath(android.net.Uri)>(r0);

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>($r2);

        return $r1;
    }

    public static android.content.IContentService getContentService()
    {
        android.content.IContentService $r0, $r2, $r3, $r4;
        android.os.IBinder $r1;

        $r0 = <android.content.ContentResolver: android.content.IContentService sContentService>;

        if $r0 == null goto label1;

        $r4 = <android.content.ContentResolver: android.content.IContentService sContentService>;

        return $r4;

     label1:
        $r1 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("content");

        $r2 = staticinvoke <android.content.IContentService$Stub: android.content.IContentService asInterface(android.os.IBinder)>($r1);

        <android.content.ContentResolver: android.content.IContentService sContentService> = $r2;

        $r3 = <android.content.ContentResolver: android.content.IContentService sContentService>;

        return $r3;
    }

    public static android.content.SyncInfo getCurrentSync()
    {
        android.content.IContentService $r0;
        boolean $z0;
        java.lang.Object $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        java.util.List r4;
        android.content.SyncInfo r5;

     label1:
        $r0 = staticinvoke <android.content.ContentResolver: android.content.IContentService getContentService()>();

        r4 = interfaceinvoke $r0.<android.content.IContentService: java.util.List getCurrentSyncs()>();

        $z0 = interfaceinvoke r4.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label3;

     label2:
        return null;

     label3:
        $r1 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(0);

        r5 = (android.content.SyncInfo) $r1;

     label4:
        return r5;

     label5:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public static java.util.List getCurrentSyncs()
    {
        android.content.IContentService $r0;
        android.os.RemoteException $r1;
        java.lang.RuntimeException $r2;
        java.util.List r3;

     label1:
        $r0 = staticinvoke <android.content.ContentResolver: android.content.IContentService getContentService()>();

        r3 = interfaceinvoke $r0.<android.content.IContentService: java.util.List getCurrentSyncs()>();

     label2:
        return r3;

     label3:
        $r1 := @caughtexception;

        $r2 = virtualinvoke $r1.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r2;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static java.util.List getCurrentSyncsAsUser(int)
    {
        int i0;
        android.content.IContentService $r0;
        android.os.RemoteException $r1;
        java.lang.RuntimeException $r2;
        java.util.List r3;

        i0 := @parameter0: int;

     label1:
        $r0 = staticinvoke <android.content.ContentResolver: android.content.IContentService getContentService()>();

        r3 = interfaceinvoke $r0.<android.content.IContentService: java.util.List getCurrentSyncsAsUser(int)>(i0);

     label2:
        return r3;

     label3:
        $r1 := @caughtexception;

        $r2 = virtualinvoke $r1.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r2;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static int getIsSyncable(android.accounts.Account, java.lang.String)
    {
        java.lang.String r0;
        int i0;
        android.content.IContentService $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        android.accounts.Account r4;

        r4 := @parameter0: android.accounts.Account;

        r0 := @parameter1: java.lang.String;

     label1:
        $r1 = staticinvoke <android.content.ContentResolver: android.content.IContentService getContentService()>();

        i0 = interfaceinvoke $r1.<android.content.IContentService: int getIsSyncable(android.accounts.Account,java.lang.String)>(r4, r0);

     label2:
        return i0;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static int getIsSyncableAsUser(android.accounts.Account, java.lang.String, int)
    {
        java.lang.String r0;
        android.content.IContentService $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        android.accounts.Account r4;
        int i0, i1;

        r4 := @parameter0: android.accounts.Account;

        r0 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

     label1:
        $r1 = staticinvoke <android.content.ContentResolver: android.content.IContentService getContentService()>();

        i1 = interfaceinvoke $r1.<android.content.IContentService: int getIsSyncableAsUser(android.accounts.Account,java.lang.String,int)>(r4, r0, i0);

     label2:
        return i1;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static boolean getMasterSyncAutomatically()
    {
        boolean z0;
        android.content.IContentService $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;

     label1:
        $r1 = staticinvoke <android.content.ContentResolver: android.content.IContentService getContentService()>();

        z0 = interfaceinvoke $r1.<android.content.IContentService: boolean getMasterSyncAutomatically()>();

     label2:
        return z0;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static boolean getMasterSyncAutomaticallyAsUser(int)
    {
        int i0;
        boolean z0;
        android.content.IContentService $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;

        i0 := @parameter0: int;

     label1:
        $r1 = staticinvoke <android.content.ContentResolver: android.content.IContentService getContentService()>();

        z0 = interfaceinvoke $r1.<android.content.IContentService: boolean getMasterSyncAutomaticallyAsUser(int)>(i0);

     label2:
        return z0;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static java.util.List getPeriodicSyncs(android.accounts.Account, java.lang.String)
    {
        java.lang.String r0;
        android.content.IContentService $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        android.accounts.Account r4;
        java.util.List r5;

        r4 := @parameter0: android.accounts.Account;

        r0 := @parameter1: java.lang.String;

     label1:
        $r1 = staticinvoke <android.content.ContentResolver: android.content.IContentService getContentService()>();

        r5 = interfaceinvoke $r1.<android.content.IContentService: java.util.List getPeriodicSyncs(android.accounts.Account,java.lang.String,android.content.ComponentName)>(r4, r0, null);

     label2:
        return r5;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static java.lang.String[] getSyncAdapterPackagesForAuthorityAsUser(java.lang.String, int)
    {
        int i0;
        android.content.IContentService $r0;
        android.os.RemoteException $r1;
        java.lang.RuntimeException $r2;
        java.lang.String r3;
        java.lang.String[] r4;

        r3 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

     label1:
        $r0 = staticinvoke <android.content.ContentResolver: android.content.IContentService getContentService()>();

        r4 = interfaceinvoke $r0.<android.content.IContentService: java.lang.String[] getSyncAdapterPackagesForAuthorityAsUser(java.lang.String,int)>(r3, i0);

     label2:
        return r4;

     label3:
        $r1 := @caughtexception;

        $r2 = virtualinvoke $r1.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r2;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static android.content.SyncAdapterType[] getSyncAdapterTypes()
    {
        android.content.IContentService $r0;
        android.os.RemoteException $r1;
        java.lang.RuntimeException $r2;
        android.content.SyncAdapterType[] r3;

     label1:
        $r0 = staticinvoke <android.content.ContentResolver: android.content.IContentService getContentService()>();

        r3 = interfaceinvoke $r0.<android.content.IContentService: android.content.SyncAdapterType[] getSyncAdapterTypes()>();

     label2:
        return r3;

     label3:
        $r1 := @caughtexception;

        $r2 = virtualinvoke $r1.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r2;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static android.content.SyncAdapterType[] getSyncAdapterTypesAsUser(int)
    {
        int i0;
        android.content.IContentService $r0;
        android.os.RemoteException $r1;
        java.lang.RuntimeException $r2;
        android.content.SyncAdapterType[] r3;

        i0 := @parameter0: int;

     label1:
        $r0 = staticinvoke <android.content.ContentResolver: android.content.IContentService getContentService()>();

        r3 = interfaceinvoke $r0.<android.content.IContentService: android.content.SyncAdapterType[] getSyncAdapterTypesAsUser(int)>(i0);

     label2:
        return r3;

     label3:
        $r1 := @caughtexception;

        $r2 = virtualinvoke $r1.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r2;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static boolean getSyncAutomatically(android.accounts.Account, java.lang.String)
    {
        java.lang.String r0;
        boolean z0;
        android.content.IContentService $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        android.accounts.Account r4;

        r4 := @parameter0: android.accounts.Account;

        r0 := @parameter1: java.lang.String;

     label1:
        $r1 = staticinvoke <android.content.ContentResolver: android.content.IContentService getContentService()>();

        z0 = interfaceinvoke $r1.<android.content.IContentService: boolean getSyncAutomatically(android.accounts.Account,java.lang.String)>(r4, r0);

     label2:
        return z0;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static boolean getSyncAutomaticallyAsUser(android.accounts.Account, java.lang.String, int)
    {
        java.lang.String r0;
        int i0;
        boolean z0;
        android.content.IContentService $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        android.accounts.Account r4;

        r4 := @parameter0: android.accounts.Account;

        r0 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

     label1:
        $r1 = staticinvoke <android.content.ContentResolver: android.content.IContentService getContentService()>();

        z0 = interfaceinvoke $r1.<android.content.IContentService: boolean getSyncAutomaticallyAsUser(android.accounts.Account,java.lang.String,int)>(r4, r0, i0);

     label2:
        return z0;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static android.content.SyncStatusInfo getSyncStatus(android.accounts.Account, java.lang.String)
    {
        java.lang.String r0;
        android.content.IContentService $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        android.accounts.Account r4;
        android.content.SyncStatusInfo r5;

        r4 := @parameter0: android.accounts.Account;

        r0 := @parameter1: java.lang.String;

     label1:
        $r1 = staticinvoke <android.content.ContentResolver: android.content.IContentService getContentService()>();

        r5 = interfaceinvoke $r1.<android.content.IContentService: android.content.SyncStatusInfo getSyncStatus(android.accounts.Account,java.lang.String,android.content.ComponentName)>(r4, r0, null);

     label2:
        return r5;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static android.content.SyncStatusInfo getSyncStatusAsUser(android.accounts.Account, java.lang.String, int)
    {
        java.lang.String r0;
        int i0;
        android.content.IContentService $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        android.accounts.Account r4;
        android.content.SyncStatusInfo r5;

        r4 := @parameter0: android.accounts.Account;

        r0 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

     label1:
        $r1 = staticinvoke <android.content.ContentResolver: android.content.IContentService getContentService()>();

        r5 = interfaceinvoke $r1.<android.content.IContentService: android.content.SyncStatusInfo getSyncStatusAsUser(android.accounts.Account,java.lang.String,android.content.ComponentName,int)>(r4, r0, null, i0);

     label2:
        return r5;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static android.os.Bundle includeSqlSelectionArgs(android.os.Bundle, java.lang.String, java.lang.String[])
    {
        android.os.Bundle r0;
        java.lang.String r1;
        java.lang.String[] r2;

        r0 := @parameter0: android.os.Bundle;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String[];

        if r1 == null goto label1;

        virtualinvoke r0.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("android:query-arg-sql-selection", r1);

     label1:
        if r2 == null goto label2;

        virtualinvoke r0.<android.os.Bundle: void putStringArray(java.lang.String,java.lang.String[])>("android:query-arg-sql-selection-args", r2);

     label2:
        return r0;
    }

    public static boolean invalidPeriodicExtras(android.os.Bundle)
    {
        android.os.Bundle r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;

        r0 := @parameter0: android.os.Bundle;

        $z0 = virtualinvoke r0.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>("force", 0);

        if $z0 != 0 goto label2;

        $z1 = virtualinvoke r0.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>("do_not_retry", 0);

        if $z1 != 0 goto label2;

        $z2 = virtualinvoke r0.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>("ignore_backoff", 0);

        if $z2 != 0 goto label2;

        $z3 = virtualinvoke r0.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>("ignore_settings", 0);

        if $z3 != 0 goto label2;

        $z4 = virtualinvoke r0.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>("initialize", 0);

        if $z4 != 0 goto label2;

        $z5 = virtualinvoke r0.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>("force", 0);

        if $z5 != 0 goto label2;

        $z6 = virtualinvoke r0.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>("expedited", 0);

        if $z6 == 0 goto label1;

        goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    public static boolean isSyncActive(android.accounts.Account, java.lang.String)
    {
        java.lang.String r0;
        boolean z0;
        java.lang.IllegalArgumentException $r1, $r2;
        android.content.IContentService $r3;
        android.os.RemoteException $r4;
        java.lang.RuntimeException $r5;
        android.accounts.Account r6;

        r6 := @parameter0: android.accounts.Account;

        r0 := @parameter1: java.lang.String;

        if r6 == null goto label5;

        if r0 == null goto label4;

     label1:
        $r3 = staticinvoke <android.content.ContentResolver: android.content.IContentService getContentService()>();

        z0 = interfaceinvoke $r3.<android.content.IContentService: boolean isSyncActive(android.accounts.Account,java.lang.String,android.content.ComponentName)>(r6, r0, null);

     label2:
        return z0;

     label3:
        $r4 := @caughtexception;

        $r5 = virtualinvoke $r4.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r5;

     label4:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("authority must not be null");

        throw $r2;

     label5:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("account must not be null");

        throw $r1;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static boolean isSyncPending(android.accounts.Account, java.lang.String)
    {
        android.accounts.Account r0;
        java.lang.String r1;
        int $i0;
        boolean $z0;

        r0 := @parameter0: android.accounts.Account;

        r1 := @parameter1: java.lang.String;

        $i0 = staticinvoke <android.os.UserHandle: int myUserId()>();

        $z0 = staticinvoke <android.content.ContentResolver: boolean isSyncPendingAsUser(android.accounts.Account,java.lang.String,int)>(r0, r1, $i0);

        return $z0;
    }

    public static boolean isSyncPendingAsUser(android.accounts.Account, java.lang.String, int)
    {
        java.lang.String r0;
        int i0;
        boolean z0;
        android.content.IContentService $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        android.accounts.Account r4;

        r4 := @parameter0: android.accounts.Account;

        r0 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

     label1:
        $r1 = staticinvoke <android.content.ContentResolver: android.content.IContentService getContentService()>();

        z0 = interfaceinvoke $r1.<android.content.IContentService: boolean isSyncPendingAsUser(android.accounts.Account,java.lang.String,android.content.ComponentName,int)>(r4, r0, null, i0);

     label2:
        return z0;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    static android.content.res.AssetFileDescriptor lambda$loadThumbnail$0(android.content.ContentInterface, android.net.Uri, android.os.Bundle, android.os.CancellationSignal, android.system.Int32Ref) throws java.lang.Exception
    {
        android.os.Bundle r0, r6;
        android.os.CancellationSignal r1;
        android.system.Int32Ref r2;
        android.content.ContentInterface r3;
        android.net.Uri r4;
        android.content.res.AssetFileDescriptor r5;
        int i0;

        r3 := @parameter0: android.content.ContentInterface;

        r4 := @parameter1: android.net.Uri;

        r0 := @parameter2: android.os.Bundle;

        r1 := @parameter3: android.os.CancellationSignal;

        r2 := @parameter4: android.system.Int32Ref;

        r5 = interfaceinvoke r3.<android.content.ContentInterface: android.content.res.AssetFileDescriptor openTypedAssetFile(android.net.Uri,java.lang.String,android.os.Bundle,android.os.CancellationSignal)>(r4, "image/*", r0, r1);

        r6 = virtualinvoke r5.<android.content.res.AssetFileDescriptor: android.os.Bundle getExtras()>();

        i0 = 0;

        if r6 == null goto label1;

        i0 = virtualinvoke r6.<android.os.Bundle: int getInt(java.lang.String,int)>("android.provider.extra.ORIENTATION", 0);

     label1:
        r2.<android.system.Int32Ref: int value> = i0;

        return r5;
    }

    static void lambda$loadThumbnail$1(int, android.os.CancellationSignal, android.util.Size, android.graphics.ImageDecoder, android.graphics.ImageDecoder$ImageInfo, android.graphics.ImageDecoder$Source)
    {
        android.os.CancellationSignal r0;
        android.util.Size r1, $r5, $r6;
        android.graphics.ImageDecoder r2;
        android.graphics.ImageDecoder$ImageInfo r3;
        android.graphics.ImageDecoder$Source r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7;

        i6 := @parameter0: int;

        r0 := @parameter1: android.os.CancellationSignal;

        r1 := @parameter2: android.util.Size;

        r2 := @parameter3: android.graphics.ImageDecoder;

        r3 := @parameter4: android.graphics.ImageDecoder$ImageInfo;

        r4 := @parameter5: android.graphics.ImageDecoder$Source;

        virtualinvoke r2.<android.graphics.ImageDecoder: void setAllocator(int)>(i6);

        if r0 == null goto label1;

        virtualinvoke r0.<android.os.CancellationSignal: void throwIfCanceled()>();

     label1:
        $r5 = virtualinvoke r3.<android.graphics.ImageDecoder$ImageInfo: android.util.Size getSize()>();

        $i0 = virtualinvoke $r5.<android.util.Size: int getWidth()>();

        $i1 = virtualinvoke r1.<android.util.Size: int getWidth()>();

        $i2 = $i0 / $i1;

        $r6 = virtualinvoke r3.<android.graphics.ImageDecoder$ImageInfo: android.util.Size getSize()>();

        $i3 = virtualinvoke $r6.<android.util.Size: int getHeight()>();

        $i4 = virtualinvoke r1.<android.util.Size: int getHeight()>();

        $i5 = $i3 / $i4;

        i7 = staticinvoke <java.lang.Math: int max(int,int)>($i2, $i5);

        if i7 <= 1 goto label2;

        virtualinvoke r2.<android.graphics.ImageDecoder: void setTargetSampleSize(int)>(i7);

     label2:
        return;
    }

    public static android.graphics.Bitmap loadThumbnail(android.content.ContentInterface, android.net.Uri, android.util.Size, android.os.CancellationSignal, int) throws java.io.IOException
    {
        android.util.Size r0;
        android.os.CancellationSignal r1;
        int i0, $i1, $i2, $i3, $i4, i5, i6;
        android.os.Bundle $r7;
        android.graphics.Point $r8;
        android.system.Int32Ref $r9;
        android.content._$$Lambda$ContentResolver$7ILY1SWNxC2xhk_fQUG6tAXW9Ik $r10;
        android.graphics.ImageDecoder$Source $r11;
        android.content._$$Lambda$ContentResolver$RVw7W0M7r0cGmbYi8rAG5GKxq4M $r12;
        android.graphics.Matrix $r13;
        float $f0, $f1, $f2;
        android.content.ContentInterface r14;
        android.net.Uri r15;
        android.graphics.Bitmap r16, r17;

        r14 := @parameter0: android.content.ContentInterface;

        r15 := @parameter1: android.net.Uri;

        r0 := @parameter2: android.util.Size;

        r1 := @parameter3: android.os.CancellationSignal;

        i5 := @parameter4: int;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r14);

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r15);

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r0);

        $r7 = new android.os.Bundle;

        specialinvoke $r7.<android.os.Bundle: void <init>()>();

        $r8 = staticinvoke <android.graphics.Point: android.graphics.Point convert(android.util.Size)>(r0);

        virtualinvoke $r7.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("android.content.extra.SIZE", $r8);

        $r9 = new android.system.Int32Ref;

        specialinvoke $r9.<android.system.Int32Ref: void <init>(int)>(0);

        $r10 = new android.content._$$Lambda$ContentResolver$7ILY1SWNxC2xhk_fQUG6tAXW9Ik;

        specialinvoke $r10.<android.content._$$Lambda$ContentResolver$7ILY1SWNxC2xhk_fQUG6tAXW9Ik: void <init>(android.content.ContentInterface,android.net.Uri,android.os.Bundle,android.os.CancellationSignal,android.system.Int32Ref)>(r14, r15, $r7, r1, $r9);

        $r11 = staticinvoke <android.graphics.ImageDecoder: android.graphics.ImageDecoder$Source createSource(java.util.concurrent.Callable)>($r10);

        $r12 = new android.content._$$Lambda$ContentResolver$RVw7W0M7r0cGmbYi8rAG5GKxq4M;

        specialinvoke $r12.<android.content._$$Lambda$ContentResolver$RVw7W0M7r0cGmbYi8rAG5GKxq4M: void <init>(int,android.os.CancellationSignal,android.util.Size)>(i5, r1, r0);

        r16 = staticinvoke <android.graphics.ImageDecoder: android.graphics.Bitmap decodeBitmap(android.graphics.ImageDecoder$Source,android.graphics.ImageDecoder$OnHeaderDecodedListener)>($r11, $r12);

        r17 = r16;

        $i1 = $r9.<android.system.Int32Ref: int value>;

        if $i1 == 0 goto label1;

        i6 = virtualinvoke r16.<android.graphics.Bitmap: int getWidth()>();

        i0 = virtualinvoke r16.<android.graphics.Bitmap: int getHeight()>();

        $r13 = new android.graphics.Matrix;

        specialinvoke $r13.<android.graphics.Matrix: void <init>()>();

        $i2 = $r9.<android.system.Int32Ref: int value>;

        $f2 = (float) $i2;

        $i3 = i6 / 2;

        $f1 = (float) $i3;

        $i4 = i0 / 2;

        $f0 = (float) $i4;

        virtualinvoke $r13.<android.graphics.Matrix: void setRotate(float,float,float)>($f2, $f1, $f0);

        r17 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>(r16, 0, 0, i6, i0, $r13, 0);

     label1:
        return r17;
    }

    private void maybeLogQueryToEventLog(long, android.net.Uri, java.lang.String[], android.os.Bundle)
    {
        android.content.ContentResolver r0;
        long l0;
        android.net.Uri r1;
        java.lang.String[] r2;
        android.os.Bundle r3;

        r0 := @this: android.content.ContentResolver;

        l0 := @parameter0: long;

        r1 := @parameter1: android.net.Uri;

        r2 := @parameter2: java.lang.String[];

        r3 := @parameter3: android.os.Bundle;

        return;
    }

    private void maybeLogUpdateToEventLog(long, android.net.Uri, java.lang.String, java.lang.String)
    {
        android.content.ContentResolver r0;
        long l0;
        android.net.Uri r1;
        java.lang.String r2, r3;

        r0 := @this: android.content.ContentResolver;

        l0 := @parameter0: long;

        r1 := @parameter1: android.net.Uri;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        return;
    }

    public static void onDbCorruption(java.lang.String, java.lang.String, java.lang.Throwable)
    {
        java.lang.String r0, $r3, r6;
        java.lang.Throwable r1;
        android.content.IContentService $r2;
        android.os.RemoteException $r4;

        r6 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.Throwable;

     label1:
        $r2 = staticinvoke <android.content.ContentResolver: android.content.IContentService getContentService()>();

        $r3 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>(r1);

        interfaceinvoke $r2.<android.content.IContentService: void onDbCorruption(java.lang.String,java.lang.String,java.lang.String)>(r6, r0, $r3);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r4.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static void removePeriodicSync(android.accounts.Account, java.lang.String, android.os.Bundle)
    {
        java.lang.String r0;
        android.os.Bundle r1;
        android.content.IContentService $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;
        android.accounts.Account r5;

        r5 := @parameter0: android.accounts.Account;

        r0 := @parameter1: java.lang.String;

        r1 := @parameter2: android.os.Bundle;

        staticinvoke <android.content.ContentResolver: void validateSyncExtrasBundle(android.os.Bundle)>(r1);

     label1:
        $r2 = staticinvoke <android.content.ContentResolver: android.content.IContentService getContentService()>();

        interfaceinvoke $r2.<android.content.IContentService: void removePeriodicSync(android.accounts.Account,java.lang.String,android.os.Bundle)>(r5, r0, r1);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static void removeStatusChangeListener(java.lang.Object)
    {
        java.lang.IllegalArgumentException $r0;
        android.content.IContentService $r1;
        android.content.ISyncStatusObserver$Stub $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;
        java.lang.Object r5;

        r5 := @parameter0: java.lang.Object;

        if r5 == null goto label4;

     label1:
        $r1 = staticinvoke <android.content.ContentResolver: android.content.IContentService getContentService()>();

        $r2 = (android.content.ISyncStatusObserver$Stub) r5;

        interfaceinvoke $r1.<android.content.IContentService: void removeStatusChangeListener(android.content.ISyncStatusObserver)>($r2);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

     label4:
        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("you passed in a null handle");

        throw $r0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static void requestSync(android.accounts.Account, java.lang.String, android.os.Bundle)
    {
        android.accounts.Account r0;
        java.lang.String r1;
        android.os.Bundle r2;
        int $i0;

        r0 := @parameter0: android.accounts.Account;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.os.Bundle;

        $i0 = staticinvoke <android.os.UserHandle: int myUserId()>();

        staticinvoke <android.content.ContentResolver: void requestSyncAsUser(android.accounts.Account,java.lang.String,int,android.os.Bundle)>(r0, r1, $i0, r2);

        return;
    }

    public static void requestSync(android.content.SyncRequest)
    {
        android.content.IContentService $r0;
        java.lang.String $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        android.content.SyncRequest r4;

        r4 := @parameter0: android.content.SyncRequest;

     label1:
        $r0 = staticinvoke <android.content.ContentResolver: android.content.IContentService getContentService()>();

        $r1 = staticinvoke <android.app.ActivityThread: java.lang.String currentPackageName()>();

        interfaceinvoke $r0.<android.content.IContentService: void sync(android.content.SyncRequest,java.lang.String)>(r4, $r1);

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static void requestSyncAsUser(android.accounts.Account, java.lang.String, int, android.os.Bundle)
    {
        java.lang.String r0, $r8;
        int i0;
        android.os.Bundle r1;
        java.lang.IllegalArgumentException $r2;
        android.content.SyncRequest$Builder $r3, $r4, $r5, $r6;
        android.content.IContentService $r7;
        android.os.RemoteException $r9;
        java.lang.RuntimeException $r10;
        android.accounts.Account r11;
        android.content.SyncRequest r12;

        r11 := @parameter0: android.accounts.Account;

        r0 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r1 := @parameter3: android.os.Bundle;

        if r1 == null goto label4;

        $r3 = new android.content.SyncRequest$Builder;

        specialinvoke $r3.<android.content.SyncRequest$Builder: void <init>()>();

        $r4 = virtualinvoke $r3.<android.content.SyncRequest$Builder: android.content.SyncRequest$Builder setSyncAdapter(android.accounts.Account,java.lang.String)>(r11, r0);

        $r5 = virtualinvoke $r4.<android.content.SyncRequest$Builder: android.content.SyncRequest$Builder setExtras(android.os.Bundle)>(r1);

        $r6 = virtualinvoke $r5.<android.content.SyncRequest$Builder: android.content.SyncRequest$Builder syncOnce()>();

        r12 = virtualinvoke $r6.<android.content.SyncRequest$Builder: android.content.SyncRequest build()>();

     label1:
        $r7 = staticinvoke <android.content.ContentResolver: android.content.IContentService getContentService()>();

        $r8 = staticinvoke <android.app.ActivityThread: java.lang.String currentPackageName()>();

        interfaceinvoke $r7.<android.content.IContentService: void syncAsUser(android.content.SyncRequest,int,java.lang.String)>(r12, i0, $r8);

     label2:
        return;

     label3:
        $r9 := @caughtexception;

        $r10 = virtualinvoke $r9.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r10;

     label4:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Must specify extras.");

        throw $r2;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private int samplePercentForDuration(long)
    {
        android.content.ContentResolver r0;
        long l0, $l2, $l3;
        byte $b1;
        int $i4, $i5;

        r0 := @this: android.content.ContentResolver;

        l0 := @parameter0: long;

        $b1 = l0 cmp 500L;

        if $b1 < 0 goto label1;

        return 100;

     label1:
        $l2 = 100L * l0;

        $l3 = $l2 / 500L;

        $i4 = (int) $l3;

        $i5 = $i4 + 1;

        return $i5;
    }

    public static void setIsSyncable(android.accounts.Account, java.lang.String, int)
    {
        java.lang.String r0;
        int i0;
        android.content.IContentService $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        android.accounts.Account r4;

        r4 := @parameter0: android.accounts.Account;

        r0 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

     label1:
        $r1 = staticinvoke <android.content.ContentResolver: android.content.IContentService getContentService()>();

        interfaceinvoke $r1.<android.content.IContentService: void setIsSyncable(android.accounts.Account,java.lang.String,int)>(r4, r0, i0);

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static void setIsSyncableAsUser(android.accounts.Account, java.lang.String, int, int)
    {
        java.lang.String r0;
        int i0, i1;
        android.content.IContentService $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        android.accounts.Account r4;

        r4 := @parameter0: android.accounts.Account;

        r0 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

     label1:
        $r1 = staticinvoke <android.content.ContentResolver: android.content.IContentService getContentService()>();

        interfaceinvoke $r1.<android.content.IContentService: void setIsSyncableAsUser(android.accounts.Account,java.lang.String,int,int)>(r4, r0, i0, i1);

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static void setMasterSyncAutomatically(boolean)
    {
        boolean z0;
        int $i0;

        z0 := @parameter0: boolean;

        $i0 = staticinvoke <android.os.UserHandle: int myUserId()>();

        staticinvoke <android.content.ContentResolver: void setMasterSyncAutomaticallyAsUser(boolean,int)>(z0, $i0);

        return;
    }

    public static void setMasterSyncAutomaticallyAsUser(boolean, int)
    {
        boolean z0;
        int i0;
        android.content.IContentService $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

     label1:
        $r1 = staticinvoke <android.content.ContentResolver: android.content.IContentService getContentService()>();

        interfaceinvoke $r1.<android.content.IContentService: void setMasterSyncAutomaticallyAsUser(boolean,int)>(z0, i0);

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static void setSyncAutomatically(android.accounts.Account, java.lang.String, boolean)
    {
        android.accounts.Account r0;
        java.lang.String r1;
        boolean z0;
        int $i0;

        r0 := @parameter0: android.accounts.Account;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $i0 = staticinvoke <android.os.UserHandle: int myUserId()>();

        staticinvoke <android.content.ContentResolver: void setSyncAutomaticallyAsUser(android.accounts.Account,java.lang.String,boolean,int)>(r0, r1, z0, $i0);

        return;
    }

    public static void setSyncAutomaticallyAsUser(android.accounts.Account, java.lang.String, boolean, int)
    {
        java.lang.String r0;
        boolean z0;
        int i0;
        android.content.IContentService $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        android.accounts.Account r4;

        r4 := @parameter0: android.accounts.Account;

        r0 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        i0 := @parameter3: int;

     label1:
        $r1 = staticinvoke <android.content.ContentResolver: android.content.IContentService getContentService()>();

        interfaceinvoke $r1.<android.content.IContentService: void setSyncAutomaticallyAsUser(android.accounts.Account,java.lang.String,boolean,int)>(r4, r0, z0, i0);

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static int syncErrorStringToInt(java.lang.String)
    {
        java.lang.String r0, $r3, $r8;
        int i0, $i1, i3, i4;
        java.lang.String[] $r1, $r2;
        boolean $z0;
        java.lang.Throwable $r4;
        java.lang.StringBuilder $r5;

        r0 := @parameter0: java.lang.String;

        i3 = 0;

        $r1 = <android.content.ContentResolver: java.lang.String[] SYNC_ERROR_NAMES>;

        i0 = lengthof $r1;

     label1:
        if i3 >= i0 goto label3;

        $r2 = <android.content.ContentResolver: java.lang.String[] SYNC_ERROR_NAMES>;

        $r3 = $r2[i3];

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label2;

        $i1 = i3 + 1;

        return $i1;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        if r0 == null goto label7;

     label4:
        i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r0);

     label5:
        return i4;

     label6:
        $r4 := @caughtexception;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("error parsing sync error: ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ContentResolver", $r8);

     label7:
        return 0;

        catch java.lang.NumberFormatException from label4 to label5 with label6;
    }

    public static java.lang.String syncErrorToString(int)
    {
        int i0, $i1, $i2;
        java.lang.String[] r0;
        java.lang.String $r1, $r2;

        i0 := @parameter0: int;

        if i0 < 1 goto label2;

        r0 = <android.content.ContentResolver: java.lang.String[] SYNC_ERROR_NAMES>;

        $i1 = lengthof r0;

        if i0 <= $i1 goto label1;

        goto label2;

     label1:
        $i2 = i0 - 1;

        $r2 = r0[$i2];

        return $r2;

     label2:
        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);

        return $r1;
    }

    public static android.net.Uri translateDeprecatedDataPath(java.lang.String)
    {
        java.lang.StringBuilder $r1;
        java.lang.String $r3, $r4, $r10, r12, r13;
        int $i0;
        android.net.Uri$Builder $r6, $r7, $r8;
        android.net.Uri $r9, $r11;

        r12 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("//");

        $r3 = "/mnt/content/";

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        $r4 = virtualinvoke r12.<java.lang.String: java.lang.String substring(int)>($i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        r13 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = new android.net.Uri$Builder;

        specialinvoke $r6.<android.net.Uri$Builder: void <init>()>();

        $r7 = virtualinvoke $r6.<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>("content");

        $r8 = virtualinvoke $r7.<android.net.Uri$Builder: android.net.Uri$Builder encodedOpaquePart(java.lang.String)>(r13);

        $r9 = virtualinvoke $r8.<android.net.Uri$Builder: android.net.Uri build()>();

        $r10 = virtualinvoke $r9.<android.net.Uri: java.lang.String toString()>();

        $r11 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r10);

        return $r11;
    }

    public static java.lang.String translateDeprecatedDataPath(android.net.Uri)
    {
        android.net.Uri r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r4, $r5, $r7;

        r0 := @parameter0: android.net.Uri;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/mnt/content/");

        $r4 = virtualinvoke r0.<android.net.Uri: java.lang.String getEncodedSchemeSpecificPart()>();

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int)>(2);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    public static void validateSyncExtrasBundle(android.os.Bundle)
    {
        java.lang.Object r0, $r2;
        java.util.Set $r1;
        java.lang.String $r3, $r6, $r8;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.lang.Class $r5;
        java.lang.RuntimeException $r9;
        java.lang.IllegalArgumentException $r10, r14;
        java.lang.Throwable $r11;
        android.os.Bundle r12;
        java.util.Iterator r13;
        java.lang.StringBuilder r15;

        r12 := @parameter0: android.os.Bundle;

     label01:
        $r1 = virtualinvoke r12.<android.os.Bundle: java.util.Set keySet()>();

        r13 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label02:
        $z7 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label19;

        $r2 = interfaceinvoke r13.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (java.lang.String) $r2;

        r0 = virtualinvoke r12.<android.os.Bundle: java.lang.Object get(java.lang.String)>($r3);

     label03:
        if r0 != null goto label04;

        goto label02;

     label04:
        $z0 = r0 instanceof java.lang.Long;

        if $z0 == 0 goto label06;

     label05:
        goto label02;

     label06:
        $z1 = r0 instanceof java.lang.Integer;

        if $z1 == 0 goto label08;

     label07:
        goto label02;

     label08:
        $z2 = r0 instanceof java.lang.Boolean;

        if $z2 == 0 goto label10;

     label09:
        goto label02;

     label10:
        $z3 = r0 instanceof java.lang.Float;

        if $z3 == 0 goto label12;

     label11:
        goto label02;

     label12:
        $z4 = r0 instanceof java.lang.Double;

        if $z4 == 0 goto label14;

     label13:
        goto label02;

     label14:
        $z5 = r0 instanceof java.lang.String;

        if $z5 == 0 goto label16;

     label15:
        goto label02;

     label16:
        $z6 = r0 instanceof android.accounts.Account;

        if $z6 == 0 goto label18;

     label17:
        goto label02;

     label18:
        r14 = new java.lang.IllegalArgumentException;

        r15 = new java.lang.StringBuilder;

        specialinvoke r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unexpected value type: ");

        $r5 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw r14;

     label19:
        return;

     label20:
        $r9 := @caughtexception;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>("error unparceling Bundle", $r9);

        throw $r10;

     label21:
        $r11 := @caughtexception;

        throw $r11;

        catch java.lang.IllegalArgumentException from label01 to label02 with label21;
        catch java.lang.RuntimeException from label01 to label02 with label20;
        catch java.lang.IllegalArgumentException from label02 to label03 with label21;
        catch java.lang.RuntimeException from label02 to label03 with label20;
        catch java.lang.IllegalArgumentException from label04 to label05 with label21;
        catch java.lang.RuntimeException from label04 to label05 with label20;
        catch java.lang.IllegalArgumentException from label06 to label07 with label21;
        catch java.lang.RuntimeException from label06 to label07 with label20;
        catch java.lang.IllegalArgumentException from label08 to label09 with label21;
        catch java.lang.RuntimeException from label08 to label09 with label20;
        catch java.lang.IllegalArgumentException from label10 to label11 with label21;
        catch java.lang.RuntimeException from label10 to label11 with label20;
        catch java.lang.IllegalArgumentException from label12 to label13 with label21;
        catch java.lang.RuntimeException from label12 to label13 with label20;
        catch java.lang.IllegalArgumentException from label14 to label15 with label21;
        catch java.lang.RuntimeException from label14 to label15 with label20;
        catch java.lang.IllegalArgumentException from label16 to label17 with label21;
        catch java.lang.RuntimeException from label16 to label17 with label20;
        catch java.lang.IllegalArgumentException from label18 to label19 with label21;
        catch java.lang.RuntimeException from label18 to label19 with label20;
    }

    public static android.content.ContentResolver wrap(android.content.ContentInterface)
    {
        android.content.ContentInterface r0;
        android.content.ContentResolver$1 $r2;

        r0 := @parameter0: android.content.ContentInterface;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r0);

        $r2 = new android.content.ContentResolver$1;

        specialinvoke $r2.<android.content.ContentResolver$1: void <init>(android.content.Context,android.content.ContentInterface)>(null, r0);

        return $r2;
    }

    public static android.content.ContentResolver wrap(android.content.ContentProvider)
    {
        android.content.ContentProvider r0;
        android.content.ContentResolver $r1;

        r0 := @parameter0: android.content.ContentProvider;

        $r1 = staticinvoke <android.content.ContentResolver: android.content.ContentResolver wrap(android.content.ContentInterface)>(r0);

        return $r1;
    }

    public static android.content.ContentResolver wrap(android.content.ContentProviderClient)
    {
        android.content.ContentProviderClient r0;
        android.content.ContentResolver $r1;

        r0 := @parameter0: android.content.ContentProviderClient;

        $r1 = staticinvoke <android.content.ContentResolver: android.content.ContentResolver wrap(android.content.ContentInterface)>(r0);

        return $r1;
    }

    public final android.content.ContentProviderClient acquireContentProviderClient(android.net.Uri)
    {
        android.content.ContentResolver r0;
        android.net.Uri r1;
        android.content.IContentProvider r2;
        android.content.ContentProviderClient $r4;
        java.lang.String $r5;

        r0 := @this: android.content.ContentResolver;

        r1 := @parameter0: android.net.Uri;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, "uri");

        r2 = virtualinvoke r0.<android.content.ContentResolver: android.content.IContentProvider acquireProvider(android.net.Uri)>(r1);

        if r2 == null goto label1;

        $r4 = new android.content.ContentProviderClient;

        $r5 = virtualinvoke r1.<android.net.Uri: java.lang.String getAuthority()>();

        specialinvoke $r4.<android.content.ContentProviderClient: void <init>(android.content.ContentResolver,android.content.IContentProvider,java.lang.String,boolean)>(r0, r2, $r5, 1);

        return $r4;

     label1:
        return null;
    }

    public final android.content.ContentProviderClient acquireContentProviderClient(java.lang.String)
    {
        android.content.ContentResolver r0;
        java.lang.String r1;
        android.content.IContentProvider r2;
        android.content.ContentProviderClient $r4;

        r0 := @this: android.content.ContentResolver;

        r1 := @parameter0: java.lang.String;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, "name");

        r2 = virtualinvoke r0.<android.content.ContentResolver: android.content.IContentProvider acquireProvider(java.lang.String)>(r1);

        if r2 == null goto label1;

        $r4 = new android.content.ContentProviderClient;

        specialinvoke $r4.<android.content.ContentProviderClient: void <init>(android.content.ContentResolver,android.content.IContentProvider,java.lang.String,boolean)>(r0, r2, r1, 1);

        return $r4;

     label1:
        return null;
    }

    protected android.content.IContentProvider acquireExistingProvider(android.content.Context, java.lang.String)
    {
        android.content.ContentResolver r0;
        android.content.Context r1;
        java.lang.String r2;
        android.content.IContentProvider $r3;

        r0 := @this: android.content.ContentResolver;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<android.content.ContentResolver: android.content.IContentProvider acquireProvider(android.content.Context,java.lang.String)>(r1, r2);

        return $r3;
    }

    public final android.content.IContentProvider acquireExistingProvider(android.net.Uri)
    {
        android.content.ContentResolver r0;
        java.lang.String $r1, $r2, r6;
        boolean $z0;
        android.content.Context $r3;
        android.content.IContentProvider $r4;
        android.net.Uri r5;

        r0 := @this: android.content.ContentResolver;

        r5 := @parameter0: android.net.Uri;

        $r1 = "content";

        $r2 = virtualinvoke r5.<android.net.Uri: java.lang.String getScheme()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label1;

        return null;

     label1:
        r6 = virtualinvoke r5.<android.net.Uri: java.lang.String getAuthority()>();

        if r6 == null goto label2;

        $r3 = r0.<android.content.ContentResolver: android.content.Context mContext>;

        $r4 = virtualinvoke r0.<android.content.ContentResolver: android.content.IContentProvider acquireExistingProvider(android.content.Context,java.lang.String)>($r3, r6);

        return $r4;

     label2:
        return null;
    }

    protected abstract android.content.IContentProvider acquireProvider(android.content.Context, java.lang.String);

    public final android.content.IContentProvider acquireProvider(android.net.Uri)
    {
        android.content.ContentResolver r0;
        java.lang.String $r1, $r2, r6;
        boolean $z0;
        android.content.Context $r3;
        android.content.IContentProvider $r4;
        android.net.Uri r5;

        r0 := @this: android.content.ContentResolver;

        r5 := @parameter0: android.net.Uri;

        $r1 = "content";

        $r2 = virtualinvoke r5.<android.net.Uri: java.lang.String getScheme()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label1;

        return null;

     label1:
        r6 = virtualinvoke r5.<android.net.Uri: java.lang.String getAuthority()>();

        if r6 == null goto label2;

        $r3 = r0.<android.content.ContentResolver: android.content.Context mContext>;

        $r4 = virtualinvoke r0.<android.content.ContentResolver: android.content.IContentProvider acquireProvider(android.content.Context,java.lang.String)>($r3, r6);

        return $r4;

     label2:
        return null;
    }

    public final android.content.IContentProvider acquireProvider(java.lang.String)
    {
        android.content.ContentResolver r0;
        java.lang.String r1;
        android.content.Context $r2;
        android.content.IContentProvider $r3;

        r0 := @this: android.content.ContentResolver;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<android.content.ContentResolver: android.content.Context mContext>;

        $r3 = virtualinvoke r0.<android.content.ContentResolver: android.content.IContentProvider acquireProvider(android.content.Context,java.lang.String)>($r2, r1);

        return $r3;
    }

    public final android.content.ContentProviderClient acquireUnstableContentProviderClient(android.net.Uri)
    {
        android.content.ContentResolver r0;
        android.net.Uri r1;
        android.content.IContentProvider r2;
        android.content.ContentProviderClient $r4;
        java.lang.String $r5;

        r0 := @this: android.content.ContentResolver;

        r1 := @parameter0: android.net.Uri;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, "uri");

        r2 = virtualinvoke r0.<android.content.ContentResolver: android.content.IContentProvider acquireUnstableProvider(android.net.Uri)>(r1);

        if r2 == null goto label1;

        $r4 = new android.content.ContentProviderClient;

        $r5 = virtualinvoke r1.<android.net.Uri: java.lang.String getAuthority()>();

        specialinvoke $r4.<android.content.ContentProviderClient: void <init>(android.content.ContentResolver,android.content.IContentProvider,java.lang.String,boolean)>(r0, r2, $r5, 0);

        return $r4;

     label1:
        return null;
    }

    public final android.content.ContentProviderClient acquireUnstableContentProviderClient(java.lang.String)
    {
        android.content.ContentResolver r0;
        java.lang.String r1;
        android.content.IContentProvider r2;
        android.content.ContentProviderClient $r4;

        r0 := @this: android.content.ContentResolver;

        r1 := @parameter0: java.lang.String;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, "name");

        r2 = virtualinvoke r0.<android.content.ContentResolver: android.content.IContentProvider acquireUnstableProvider(java.lang.String)>(r1);

        if r2 == null goto label1;

        $r4 = new android.content.ContentProviderClient;

        specialinvoke $r4.<android.content.ContentProviderClient: void <init>(android.content.ContentResolver,android.content.IContentProvider,java.lang.String,boolean)>(r0, r2, r1, 0);

        return $r4;

     label1:
        return null;
    }

    protected abstract android.content.IContentProvider acquireUnstableProvider(android.content.Context, java.lang.String);

    public final android.content.IContentProvider acquireUnstableProvider(android.net.Uri)
    {
        android.content.ContentResolver r0;
        android.net.Uri r1;
        java.lang.String $r2, $r3, $r4, $r6;
        boolean $z0;
        android.content.Context $r5;
        android.content.IContentProvider $r7;

        r0 := @this: android.content.ContentResolver;

        r1 := @parameter0: android.net.Uri;

        $r2 = "content";

        $r3 = virtualinvoke r1.<android.net.Uri: java.lang.String getScheme()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r4 = virtualinvoke r1.<android.net.Uri: java.lang.String getAuthority()>();

        if $r4 == null goto label2;

        $r5 = r0.<android.content.ContentResolver: android.content.Context mContext>;

        $r6 = virtualinvoke r1.<android.net.Uri: java.lang.String getAuthority()>();

        $r7 = virtualinvoke r0.<android.content.ContentResolver: android.content.IContentProvider acquireUnstableProvider(android.content.Context,java.lang.String)>($r5, $r6);

        return $r7;

     label2:
        return null;
    }

    public final android.content.IContentProvider acquireUnstableProvider(java.lang.String)
    {
        android.content.ContentResolver r0;
        java.lang.String r1;
        android.content.Context $r2;
        android.content.IContentProvider $r3;

        r0 := @this: android.content.ContentResolver;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<android.content.ContentResolver: android.content.Context mContext>;

        $r3 = virtualinvoke r0.<android.content.ContentResolver: android.content.IContentProvider acquireUnstableProvider(android.content.Context,java.lang.String)>($r2, r1);

        return $r3;
    }

    public void appNotRespondingViaProvider(android.content.IContentProvider)
    {
        android.content.ContentResolver r0;
        android.content.IContentProvider r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: android.content.ContentResolver;

        r1 := @parameter0: android.content.IContentProvider;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("appNotRespondingViaProvider");

        throw $r2;
    }

    public android.content.ContentProviderResult[] applyBatch(java.lang.String, java.util.ArrayList) throws android.os.RemoteException, android.content.OperationApplicationException
    {
        android.content.ContentResolver r0;
        android.content.ContentProviderClient r1;
        android.content.ContentInterface $r4, $r10;
        java.lang.StringBuilder $r5;
        java.lang.IllegalArgumentException $r8;
        java.lang.String $r9, r13;
        java.lang.Throwable $r11;
        android.os.RemoteException $r12;
        java.util.ArrayList r14;
        android.content.ContentProviderResult[] r15, r16;

        r0 := @this: android.content.ContentResolver;

        r13 := @parameter0: java.lang.String;

        r14 := @parameter1: java.util.ArrayList;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r13, "authority");

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r14, "operations");

     label1:
        $r4 = r0.<android.content.ContentResolver: android.content.ContentInterface mWrapped>;

        if $r4 == null goto label3;

        $r10 = r0.<android.content.ContentResolver: android.content.ContentInterface mWrapped>;

        r15 = interfaceinvoke $r10.<android.content.ContentInterface: android.content.ContentProviderResult[] applyBatch(java.lang.String,java.util.ArrayList)>(r13, r14);

     label2:
        return r15;

     label3:
        r1 = virtualinvoke r0.<android.content.ContentResolver: android.content.ContentProviderClient acquireContentProviderClient(java.lang.String)>(r13);

        if r1 == null goto label7;

     label4:
        r16 = virtualinvoke r1.<android.content.ContentProviderClient: android.content.ContentProviderResult[] applyBatch(java.util.ArrayList)>(r14);

     label5:
        virtualinvoke r1.<android.content.ContentProviderClient: boolean release()>();

        return r16;

     label6:
        $r11 := @caughtexception;

        virtualinvoke r1.<android.content.ContentProviderClient: boolean release()>();

        throw $r11;

     label7:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown authority ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r8;

     label8:
        $r12 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public final int bulkInsert(android.net.Uri, android.content.ContentValues[])
    {
        android.content.ContentResolver r0;
        android.content.IContentProvider r1;
        long l0, $l1, $l2;
        android.content.ContentInterface $r4, $r12;
        java.lang.StringBuilder $r5;
        java.lang.IllegalArgumentException $r8;
        java.lang.String $r9, $r10, $r11;
        java.lang.Throwable $r13;
        android.os.RemoteException $r14, $r15;
        android.net.Uri r16;
        android.content.ContentValues[] r17;
        int i3, i4;

        r0 := @this: android.content.ContentResolver;

        r16 := @parameter0: android.net.Uri;

        r17 := @parameter1: android.content.ContentValues[];

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r16, "url");

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r17, "values");

     label1:
        $r4 = r0.<android.content.ContentResolver: android.content.ContentInterface mWrapped>;

        if $r4 == null goto label3;

        $r12 = r0.<android.content.ContentResolver: android.content.ContentInterface mWrapped>;

        i3 = interfaceinvoke $r12.<android.content.ContentInterface: int bulkInsert(android.net.Uri,android.content.ContentValues[])>(r16, r17);

     label2:
        return i3;

     label3:
        r1 = virtualinvoke r0.<android.content.ContentResolver: android.content.IContentProvider acquireProvider(android.net.Uri)>(r16);

        if r1 == null goto label8;

     label4:
        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r11 = r0.<android.content.ContentResolver: java.lang.String mPackageName>;

        $r10 = r0.<android.content.ContentResolver: java.lang.String mAttributionTag>;

        i4 = interfaceinvoke r1.<android.content.IContentProvider: int bulkInsert(java.lang.String,java.lang.String,android.net.Uri,android.content.ContentValues[])>($r11, $r10, r16, r17);

        $l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l2 = $l1 - l0;

        specialinvoke r0.<android.content.ContentResolver: void maybeLogUpdateToEventLog(long,android.net.Uri,java.lang.String,java.lang.String)>($l2, r16, "bulkinsert", null);

     label5:
        virtualinvoke r0.<android.content.ContentResolver: boolean releaseProvider(android.content.IContentProvider)>(r1);

        return i4;

     label6:
        $r13 := @caughtexception;

        virtualinvoke r0.<android.content.ContentResolver: boolean releaseProvider(android.content.IContentProvider)>(r1);

        throw $r13;

     label7:
        $r14 := @caughtexception;

        virtualinvoke r0.<android.content.ContentResolver: boolean releaseProvider(android.content.IContentProvider)>(r1);

        return 0;

     label8:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown URL ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r16);

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r8;

     label9:
        $r15 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label9;
        catch android.os.RemoteException from label4 to label5 with label7;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public final android.os.Bundle call(android.net.Uri, java.lang.String, java.lang.String, android.os.Bundle)
    {
        android.content.ContentResolver r0;
        android.net.Uri r1;
        java.lang.String r2, r3, $r5;
        android.os.Bundle r4, $r6;

        r0 := @this: android.content.ContentResolver;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.os.Bundle;

        $r5 = virtualinvoke r1.<android.net.Uri: java.lang.String getAuthority()>();

        $r6 = virtualinvoke r0.<android.content.ContentResolver: android.os.Bundle call(java.lang.String,java.lang.String,java.lang.String,android.os.Bundle)>($r5, r2, r3, r4);

        return $r6;
    }

    public final android.os.Bundle call(java.lang.String, java.lang.String, java.lang.String, android.os.Bundle)
    {
        android.content.ContentResolver r0;
        java.lang.String r1, $r11, $r12, $r13, r19, r20;
        android.os.Bundle r2, r21, r22;
        android.content.IContentProvider r3;
        android.content.ContentInterface $r6, $r15;
        java.lang.StringBuilder $r7;
        java.lang.IllegalArgumentException $r10;
        android.os.RemoteException $r16, $r18;
        java.lang.Throwable $r17;

        r0 := @this: android.content.ContentResolver;

        r19 := @parameter0: java.lang.String;

        r20 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: android.os.Bundle;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r19, "authority");

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r20, "method");

     label1:
        $r6 = r0.<android.content.ContentResolver: android.content.ContentInterface mWrapped>;

        if $r6 == null goto label3;

        $r15 = r0.<android.content.ContentResolver: android.content.ContentInterface mWrapped>;

        r21 = interfaceinvoke $r15.<android.content.ContentInterface: android.os.Bundle call(java.lang.String,java.lang.String,java.lang.String,android.os.Bundle)>(r19, r20, r1, r2);

     label2:
        return r21;

     label3:
        r3 = virtualinvoke r0.<android.content.ContentResolver: android.content.IContentProvider acquireProvider(java.lang.String)>(r19);

        if r3 == null goto label8;

     label4:
        $r13 = r0.<android.content.ContentResolver: java.lang.String mPackageName>;

        $r12 = r0.<android.content.ContentResolver: java.lang.String mAttributionTag>;

        r22 = interfaceinvoke r3.<android.content.IContentProvider: android.os.Bundle call(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.os.Bundle)>($r13, $r12, r19, r20, r1, r2);

        staticinvoke <android.os.Bundle: android.os.Bundle setDefusable(android.os.Bundle,boolean)>(r22, 1);

     label5:
        virtualinvoke r0.<android.content.ContentResolver: boolean releaseProvider(android.content.IContentProvider)>(r3);

        return r22;

     label6:
        $r17 := @caughtexception;

        virtualinvoke r0.<android.content.ContentResolver: boolean releaseProvider(android.content.IContentProvider)>(r3);

        throw $r17;

     label7:
        $r16 := @caughtexception;

        virtualinvoke r0.<android.content.ContentResolver: boolean releaseProvider(android.content.IContentProvider)>(r3);

        return null;

     label8:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown authority ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19);

        $r10 = new java.lang.IllegalArgumentException;

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r10;

     label9:
        $r18 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label9;
        catch android.os.RemoteException from label4 to label5 with label7;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public void cancelSync(android.net.Uri)
    {
        android.content.ContentResolver r0;
        android.net.Uri r1;
        java.lang.String r2;

        r0 := @this: android.content.ContentResolver;

        r1 := @parameter0: android.net.Uri;

        if r1 == null goto label1;

        r2 = virtualinvoke r1.<android.net.Uri: java.lang.String getAuthority()>();

        goto label2;

     label1:
        r2 = null;

     label2:
        staticinvoke <android.content.ContentResolver: void cancelSync(android.accounts.Account,java.lang.String)>(null, r2);

        return;
    }

    public final android.net.Uri canonicalize(android.net.Uri)
    {
        android.content.ContentResolver r0;
        android.content.IContentProvider r1;
        android.content.ContentResolver$UriResultListener r2;
        java.lang.String r3, r4;
        android.os.RemoteCallback r5;
        android.content.ContentInterface $r7, $r11;
        java.lang.RuntimeException $r8, $r9;
        java.lang.Object $r10;
        android.os.RemoteException $r12, $r14;
        java.lang.Throwable $r13;
        android.net.Uri r15, r16, r17;

        r0 := @this: android.content.ContentResolver;

        r15 := @parameter0: android.net.Uri;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r15, "url");

     label1:
        $r7 = r0.<android.content.ContentResolver: android.content.ContentInterface mWrapped>;

        if $r7 == null goto label3;

        $r11 = r0.<android.content.ContentResolver: android.content.ContentInterface mWrapped>;

        r16 = interfaceinvoke $r11.<android.content.ContentInterface: android.net.Uri canonicalize(android.net.Uri)>(r15);

     label2:
        return r16;

     label3:
        r1 = virtualinvoke r0.<android.content.ContentResolver: android.content.IContentProvider acquireProvider(android.net.Uri)>(r15);

        if r1 != null goto label4;

        return null;

     label4:
        r2 = new android.content.ContentResolver$UriResultListener;

        specialinvoke r2.<android.content.ContentResolver$UriResultListener: void <init>(android.content.ContentResolver$1)>(null);

        r3 = r0.<android.content.ContentResolver: java.lang.String mPackageName>;

        r4 = r0.<android.content.ContentResolver: java.lang.String mAttributionTag>;

        r5 = new android.os.RemoteCallback;

        specialinvoke r5.<android.os.RemoteCallback: void <init>(android.os.RemoteCallback$OnResultListener)>(r2);

        interfaceinvoke r1.<android.content.IContentProvider: void canonicalizeAsync(java.lang.String,java.lang.String,android.net.Uri,android.os.RemoteCallback)>(r3, r4, r15, r5);

        virtualinvoke r2.<android.content.ContentResolver$UriResultListener: void waitForResult(long)>(3000L);

        $r8 = r2.<android.content.ContentResolver$UriResultListener: java.lang.RuntimeException exception>;

        if $r8 != null goto label6;

        $r10 = r2.<android.content.ContentResolver$UriResultListener: java.lang.Object result>;

        r17 = (android.net.Uri) $r10;

     label5:
        virtualinvoke r0.<android.content.ContentResolver: boolean releaseProvider(android.content.IContentProvider)>(r1);

        return r17;

     label6:
        $r9 = r2.<android.content.ContentResolver$UriResultListener: java.lang.RuntimeException exception>;

        throw $r9;

     label7:
        $r13 := @caughtexception;

        virtualinvoke r0.<android.content.ContentResolver: boolean releaseProvider(android.content.IContentProvider)>(r1);

        throw $r13;

     label8:
        $r14 := @caughtexception;

        virtualinvoke r0.<android.content.ContentResolver: boolean releaseProvider(android.content.IContentProvider)>(r1);

        return null;

     label9:
        $r12 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label9;
        catch android.os.RemoteException from label4 to label5 with label8;
        catch java.lang.Throwable from label4 to label5 with label7;
        catch android.os.RemoteException from label6 to label7 with label8;
        catch java.lang.Throwable from label6 to label7 with label7;
    }

    public final android.net.Uri canonicalizeOrElse(android.net.Uri)
    {
        android.content.ContentResolver r0;
        android.net.Uri r1, r2;

        r0 := @this: android.content.ContentResolver;

        r2 := @parameter0: android.net.Uri;

        r1 = virtualinvoke r0.<android.content.ContentResolver: android.net.Uri canonicalize(android.net.Uri)>(r2);

        if r1 == null goto label1;

        r2 = r1;

        goto label1;

     label1:
        return r2;
    }

    public int checkUriPermission(android.net.Uri, int, int)
    {
        android.content.ContentResolver r0;
        int i0, i1, i2, i3;
        android.content.ContentInterface $r2, $r3;
        java.lang.Throwable $r4, $r5;
        android.os.RemoteException $r6, $r7;
        android.net.Uri r8;
        android.content.ContentProviderClient r9;

        r0 := @this: android.content.ContentResolver;

        r8 := @parameter0: android.net.Uri;

        i1 := @parameter1: int;

        i0 := @parameter2: int;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r8, "uri");

     label01:
        $r2 = r0.<android.content.ContentResolver: android.content.ContentInterface mWrapped>;

        if $r2 == null goto label03;

        $r3 = r0.<android.content.ContentResolver: android.content.ContentInterface mWrapped>;

        i2 = interfaceinvoke $r3.<android.content.ContentInterface: int checkUriPermission(android.net.Uri,int,int)>(r8, i1, i0);

     label02:
        return i2;

     label03:
        r9 = virtualinvoke r0.<android.content.ContentResolver: android.content.ContentProviderClient acquireUnstableContentProviderClient(android.net.Uri)>(r8);

     label04:
        i3 = virtualinvoke r9.<android.content.ContentProviderClient: int checkUriPermission(android.net.Uri,int,int)>(r8, i1, i0);

     label05:
        if r9 == null goto label07;

     label06:
        virtualinvoke r9.<android.content.ContentProviderClient: void close()>();

     label07:
        return i3;

     label08:
        $r4 := @caughtexception;

        if r9 == null goto label13;

     label09:
        virtualinvoke r9.<android.content.ContentProviderClient: void close()>();

     label10:
        goto label13;

     label11:
        $r5 := @caughtexception;

     label12:
        virtualinvoke $r4.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r5);

     label13:
        throw $r4;

     label14:
        $r6 := @caughtexception;

        return -1;

     label15:
        $r7 := @caughtexception;

        return -1;

        catch android.os.RemoteException from label01 to label02 with label15;
        catch android.os.RemoteException from label03 to label04 with label14;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch android.os.RemoteException from label06 to label07 with label14;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch android.os.RemoteException from label12 to label13 with label14;
        catch android.os.RemoteException from label13 to label14 with label14;
    }

    public final int delete(android.net.Uri, android.os.Bundle)
    {
        android.content.ContentResolver r0;
        android.content.IContentProvider r1;
        long l0, $l1, $l2;
        android.content.ContentInterface $r3, $r11;
        java.lang.StringBuilder $r4;
        java.lang.IllegalArgumentException $r7;
        java.lang.String $r8, $r9, $r10;
        android.os.RemoteException $r12, $r14;
        java.lang.Throwable $r13;
        android.net.Uri r15;
        android.os.Bundle r16;
        int i3, i4;

        r0 := @this: android.content.ContentResolver;

        r15 := @parameter0: android.net.Uri;

        r16 := @parameter1: android.os.Bundle;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r15, "url");

     label1:
        $r3 = r0.<android.content.ContentResolver: android.content.ContentInterface mWrapped>;

        if $r3 == null goto label3;

        $r11 = r0.<android.content.ContentResolver: android.content.ContentInterface mWrapped>;

        i3 = interfaceinvoke $r11.<android.content.ContentInterface: int delete(android.net.Uri,android.os.Bundle)>(r15, r16);

     label2:
        return i3;

     label3:
        r1 = virtualinvoke r0.<android.content.ContentResolver: android.content.IContentProvider acquireProvider(android.net.Uri)>(r15);

        if r1 == null goto label8;

     label4:
        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r10 = r0.<android.content.ContentResolver: java.lang.String mPackageName>;

        $r9 = r0.<android.content.ContentResolver: java.lang.String mAttributionTag>;

        i4 = interfaceinvoke r1.<android.content.IContentProvider: int delete(java.lang.String,java.lang.String,android.net.Uri,android.os.Bundle)>($r10, $r9, r15, r16);

        $l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l2 = $l1 - l0;

        specialinvoke r0.<android.content.ContentResolver: void maybeLogUpdateToEventLog(long,android.net.Uri,java.lang.String,java.lang.String)>($l2, r15, "delete", null);

     label5:
        virtualinvoke r0.<android.content.ContentResolver: boolean releaseProvider(android.content.IContentProvider)>(r1);

        return i4;

     label6:
        $r13 := @caughtexception;

        virtualinvoke r0.<android.content.ContentResolver: boolean releaseProvider(android.content.IContentProvider)>(r1);

        throw $r13;

     label7:
        $r12 := @caughtexception;

        virtualinvoke r0.<android.content.ContentResolver: boolean releaseProvider(android.content.IContentProvider)>(r1);

        return -1;

     label8:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown URL ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r15);

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r7;

     label9:
        $r14 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label9;
        catch android.os.RemoteException from label4 to label5 with label7;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public final int delete(android.net.Uri, java.lang.String, java.lang.String[])
    {
        android.content.ContentResolver r0;
        android.net.Uri r1;
        java.lang.String r2;
        java.lang.String[] r3;
        android.os.Bundle $r4;
        int $i0;

        r0 := @this: android.content.ContentResolver;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String[];

        $r4 = staticinvoke <android.content.ContentResolver: android.os.Bundle createSqlQueryBundle(java.lang.String,java.lang.String[])>(r2, r3);

        $i0 = virtualinvoke r0.<android.content.ContentResolver: int delete(android.net.Uri,android.os.Bundle)>(r1, $r4);

        return $i0;
    }

    public java.lang.String getAttributionTag()
    {
        android.content.ContentResolver r0;
        java.lang.String $r1;

        r0 := @this: android.content.ContentResolver;

        $r1 = r0.<android.content.ContentResolver: java.lang.String mAttributionTag>;

        return $r1;
    }

    public android.os.Bundle getCache(android.net.Uri)
    {
        android.content.ContentResolver r0;
        android.content.IContentService $r1;
        android.content.Context $r2, $r4, $r5;
        java.lang.String $r3;
        int $i0;
        java.lang.ClassLoader $r6;
        android.os.RemoteException $r7;
        java.lang.RuntimeException $r8;
        android.net.Uri r9;
        android.os.Bundle r10;

        r0 := @this: android.content.ContentResolver;

        r9 := @parameter0: android.net.Uri;

     label1:
        $r1 = staticinvoke <android.content.ContentResolver: android.content.IContentService getContentService()>();

        $r2 = r0.<android.content.ContentResolver: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.String getPackageName()>();

        $r4 = r0.<android.content.ContentResolver: android.content.Context mContext>;

        $i0 = virtualinvoke $r4.<android.content.Context: int getUserId()>();

        r10 = interfaceinvoke $r1.<android.content.IContentService: android.os.Bundle getCache(java.lang.String,android.net.Uri,int)>($r3, r9, $i0);

     label2:
        if r10 == null goto label4;

     label3:
        $r5 = r0.<android.content.ContentResolver: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: java.lang.ClassLoader getClassLoader()>();

        virtualinvoke r10.<android.os.Bundle: void setClassLoader(java.lang.ClassLoader)>($r6);

     label4:
        return r10;

     label5:
        $r7 := @caughtexception;

        $r8 = virtualinvoke $r7.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r8;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public java.util.List getOutgoingPersistedUriPermissions()
    {
        android.content.ContentResolver r0;
        android.app.IUriGrantsManager $r1;
        java.lang.String $r2;
        android.content.pm.ParceledListSlice $r3;
        android.os.RemoteException $r4;
        java.lang.RuntimeException $r5;
        java.util.List r6;

        r0 := @this: android.content.ContentResolver;

     label1:
        $r1 = staticinvoke <android.app.UriGrantsManager: android.app.IUriGrantsManager getService()>();

        $r2 = r0.<android.content.ContentResolver: java.lang.String mPackageName>;

        $r3 = interfaceinvoke $r1.<android.app.IUriGrantsManager: android.content.pm.ParceledListSlice getUriPermissions(java.lang.String,boolean,boolean)>($r2, 0, 1);

        r6 = virtualinvoke $r3.<android.content.pm.ParceledListSlice: java.util.List getList()>();

     label2:
        return r6;

     label3:
        $r4 := @caughtexception;

        $r5 = virtualinvoke $r4.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.List getOutgoingUriPermissions()
    {
        android.content.ContentResolver r0;
        android.app.IUriGrantsManager $r1;
        java.lang.String $r2;
        android.content.pm.ParceledListSlice $r3;
        android.os.RemoteException $r4;
        java.lang.RuntimeException $r5;
        java.util.List r6;

        r0 := @this: android.content.ContentResolver;

     label1:
        $r1 = staticinvoke <android.app.UriGrantsManager: android.app.IUriGrantsManager getService()>();

        $r2 = r0.<android.content.ContentResolver: java.lang.String mPackageName>;

        $r3 = interfaceinvoke $r1.<android.app.IUriGrantsManager: android.content.pm.ParceledListSlice getUriPermissions(java.lang.String,boolean,boolean)>($r2, 0, 0);

        r6 = virtualinvoke $r3.<android.content.pm.ParceledListSlice: java.util.List getList()>();

     label2:
        return r6;

     label3:
        $r4 := @caughtexception;

        $r5 = virtualinvoke $r4.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.lang.String getPackageName()
    {
        android.content.ContentResolver r0;
        java.lang.String $r1;

        r0 := @this: android.content.ContentResolver;

        $r1 = r0.<android.content.ContentResolver: java.lang.String mPackageName>;

        return $r1;
    }

    public java.util.List getPersistedUriPermissions()
    {
        android.content.ContentResolver r0;
        android.app.IUriGrantsManager $r1;
        java.lang.String $r2;
        android.content.pm.ParceledListSlice $r3;
        android.os.RemoteException $r4;
        java.lang.RuntimeException $r5;
        java.util.List r6;

        r0 := @this: android.content.ContentResolver;

     label1:
        $r1 = staticinvoke <android.app.UriGrantsManager: android.app.IUriGrantsManager getService()>();

        $r2 = r0.<android.content.ContentResolver: java.lang.String mPackageName>;

        $r3 = interfaceinvoke $r1.<android.app.IUriGrantsManager: android.content.pm.ParceledListSlice getUriPermissions(java.lang.String,boolean,boolean)>($r2, 1, 1);

        r6 = virtualinvoke $r3.<android.content.pm.ParceledListSlice: java.util.List getList()>();

     label2:
        return r6;

     label3:
        $r4 := @caughtexception;

        $r5 = virtualinvoke $r4.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.content.ContentResolver$OpenResourceIdResult getResourceId(android.net.Uri) throws java.io.FileNotFoundException
    {
        android.content.ContentResolver r0;
        java.lang.String r1, $r7, $r14, $r19, $r21, $r23, $r28, $r31, $r37, $r43;
        java.util.List r2;
        boolean $z0;
        java.lang.StringBuilder $r3, $r10, $r15, $r24, $r33, $r39;
        java.io.FileNotFoundException $r6, $r13, $r18, $r27, $r36, $r42;
        android.content.Context $r8;
        android.content.pm.PackageManager $r9;
        java.lang.Object $r20, $r22, $r30;
        android.content.ContentResolver$OpenResourceIdResult $r29;
        java.lang.Throwable $r32;
        android.content.pm.PackageManager$NameNotFoundException $r38;
        android.net.Uri r44;
        android.content.res.Resources r45;
        int i0, i1;

        r0 := @this: android.content.ContentResolver;

        r44 := @parameter0: android.net.Uri;

        r1 = virtualinvoke r44.<android.net.Uri: java.lang.String getAuthority()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 != 0 goto label12;

     label01:
        $r8 = r0.<android.content.ContentResolver: android.content.Context mContext>;

        $r9 = virtualinvoke $r8.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r45 = virtualinvoke $r9.<android.content.pm.PackageManager: android.content.res.Resources getResourcesForApplication(java.lang.String)>(r1);

     label02:
        r2 = virtualinvoke r44.<android.net.Uri: java.util.List getPathSegments()>();

        if r2 == null goto label10;

        i0 = interfaceinvoke r2.<java.util.List: int size()>();

        if i0 != 1 goto label06;

     label03:
        $r30 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(0);

        $r31 = (java.lang.String) $r30;

        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r31);

     label04:
        goto label07;

     label05:
        $r32 := @caughtexception;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Single path segment is not a resource ID: ");

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r44);

        $r36 = new java.io.FileNotFoundException;

        $r37 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r36.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r37);

        throw $r36;

     label06:
        if i0 != 2 goto label09;

        $r20 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(1);

        $r21 = (java.lang.String) $r20;

        $r22 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(0);

        $r23 = (java.lang.String) $r22;

        i1 = virtualinvoke r45.<android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>($r21, $r23, r1);

     label07:
        if i1 == 0 goto label08;

        $r29 = new android.content.ContentResolver$OpenResourceIdResult;

        specialinvoke $r29.<android.content.ContentResolver$OpenResourceIdResult: void <init>(android.content.ContentResolver)>(r0);

        $r29.<android.content.ContentResolver$OpenResourceIdResult: android.content.res.Resources r> = r45;

        $r29.<android.content.ContentResolver$OpenResourceIdResult: int id> = i1;

        return $r29;

     label08:
        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No resource found for: ");

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r44);

        $r27 = new java.io.FileNotFoundException;

        $r28 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r27.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r28);

        throw $r27;

     label09:
        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("More than two path segments: ");

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r44);

        $r18 = new java.io.FileNotFoundException;

        $r19 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r19);

        throw $r18;

     label10:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No path: ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r44);

        $r13 = new java.io.FileNotFoundException;

        $r14 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r14);

        throw $r13;

     label11:
        $r38 := @caughtexception;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No package found for authority: ");

        virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r44);

        $r42 = new java.io.FileNotFoundException;

        $r43 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r42.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r43);

        throw $r42;

     label12:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No authority: ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r44);

        $r6 = new java.io.FileNotFoundException;

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r7);

        throw $r6;

        catch android.content.pm.PackageManager$NameNotFoundException from label01 to label02 with label11;
        catch java.lang.NumberFormatException from label03 to label04 with label05;
    }

    public java.lang.String[] getStreamTypes(android.net.Uri, java.lang.String)
    {
        android.content.ContentResolver r0;
        java.lang.String r1;
        android.content.IContentProvider r2;
        android.content.ContentInterface $r5, $r6;
        android.os.RemoteException $r7, $r9;
        java.lang.Throwable $r8;
        android.net.Uri r10;
        java.lang.String[] r11, r12;

        r0 := @this: android.content.ContentResolver;

        r10 := @parameter0: android.net.Uri;

        r1 := @parameter1: java.lang.String;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r10, "url");

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, "mimeTypeFilter");

     label1:
        $r5 = r0.<android.content.ContentResolver: android.content.ContentInterface mWrapped>;

        if $r5 == null goto label3;

        $r6 = r0.<android.content.ContentResolver: android.content.ContentInterface mWrapped>;

        r11 = interfaceinvoke $r6.<android.content.ContentInterface: java.lang.String[] getStreamTypes(android.net.Uri,java.lang.String)>(r10, r1);

     label2:
        return r11;

     label3:
        r2 = virtualinvoke r0.<android.content.ContentResolver: android.content.IContentProvider acquireProvider(android.net.Uri)>(r10);

        if r2 != null goto label4;

        return null;

     label4:
        r12 = interfaceinvoke r2.<android.content.IContentProvider: java.lang.String[] getStreamTypes(android.net.Uri,java.lang.String)>(r10, r1);

     label5:
        virtualinvoke r0.<android.content.ContentResolver: boolean releaseProvider(android.content.IContentProvider)>(r2);

        return r12;

     label6:
        $r8 := @caughtexception;

        virtualinvoke r0.<android.content.ContentResolver: boolean releaseProvider(android.content.IContentProvider)>(r2);

        throw $r8;

     label7:
        $r7 := @caughtexception;

        virtualinvoke r0.<android.content.ContentResolver: boolean releaseProvider(android.content.IContentProvider)>(r2);

        return null;

     label8:
        $r9 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label8;
        catch android.os.RemoteException from label4 to label5 with label7;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public int getTargetSdkVersion()
    {
        android.content.ContentResolver r0;
        int $i0;

        r0 := @this: android.content.ContentResolver;

        $i0 = r0.<android.content.ContentResolver: int mTargetSdkVersion>;

        return $i0;
    }

    public final java.lang.String getType(android.net.Uri)
    {
        android.content.ContentResolver r0;
        android.net.Uri r1, r35;
        int i0;
        android.content.ContentInterface $r3, $r13;
        java.lang.String $r4, $r5, $r9, $r21, $r24, $r29, $r32, r36, r40;
        boolean $z0;
        java.lang.RuntimeException $r6, $r7, $r10, $r11;
        java.lang.Object $r8, $r12;
        java.lang.Throwable $r14;
        android.os.RemoteException $r15, $r33, $r34;
        java.lang.Exception $r16, $r25;
        java.lang.StringBuilder $r17, r43;
        android.content.IContentProvider r37;
        android.content.ContentResolver$StringResultListener r38, r45;
        android.os.RemoteCallback r39, r47;
        android.app.IActivityManager r46;

        r0 := @this: android.content.ContentResolver;

        r35 := @parameter0: android.net.Uri;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r35, "url");

     label01:
        $r3 = r0.<android.content.ContentResolver: android.content.ContentInterface mWrapped>;

        if $r3 == null goto label03;

        $r13 = r0.<android.content.ContentResolver: android.content.ContentInterface mWrapped>;

        r36 = interfaceinvoke $r13.<android.content.ContentInterface: java.lang.String getType(android.net.Uri)>(r35);

     label02:
        return r36;

     label03:
        r37 = virtualinvoke r0.<android.content.ContentResolver: android.content.IContentProvider acquireExistingProvider(android.net.Uri)>(r35);

        if r37 == null goto label13;

     label04:
        r38 = new android.content.ContentResolver$StringResultListener;

        specialinvoke r38.<android.content.ContentResolver$StringResultListener: void <init>(android.content.ContentResolver$1)>(null);

        r39 = new android.os.RemoteCallback;

        specialinvoke r39.<android.os.RemoteCallback: void <init>(android.os.RemoteCallback$OnResultListener)>(r38);

        interfaceinvoke r37.<android.content.IContentProvider: void getTypeAsync(android.net.Uri,android.os.RemoteCallback)>(r35, r39);

        virtualinvoke r38.<android.content.ContentResolver$StringResultListener: void waitForResult(long)>(3000L);

        $r10 = r38.<android.content.ContentResolver$StringResultListener: java.lang.RuntimeException exception>;

        if $r10 != null goto label06;

        $r12 = r38.<android.content.ContentResolver$StringResultListener: java.lang.Object result>;

        r40 = (java.lang.String) $r12;

     label05:
        virtualinvoke r0.<android.content.ContentResolver: boolean releaseProvider(android.content.IContentProvider)>(r37);

        return r40;

     label06:
        $r11 = r38.<android.content.ContentResolver$StringResultListener: java.lang.RuntimeException exception>;

        throw $r11;

     label07:
        $r14 := @caughtexception;

        goto label11;

     label08:
        $r25 := @caughtexception;

     label09:
        r43 = new java.lang.StringBuilder;

        specialinvoke r43.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to get type for: ");

        virtualinvoke r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r35);

        virtualinvoke r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r29 = virtualinvoke $r25.<java.lang.Exception: java.lang.String getMessage()>();

        virtualinvoke r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        virtualinvoke r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r32 = virtualinvoke r43.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ContentResolver", $r32);

     label10:
        virtualinvoke r0.<android.content.ContentResolver: boolean releaseProvider(android.content.IContentProvider)>(r37);

        return null;

     label11:
        virtualinvoke r0.<android.content.ContentResolver: boolean releaseProvider(android.content.IContentProvider)>(r37);

        throw $r14;

     label12:
        $r34 := @caughtexception;

        virtualinvoke r0.<android.content.ContentResolver: boolean releaseProvider(android.content.IContentProvider)>(r37);

        return null;

     label13:
        $r4 = "content";

        $r5 = virtualinvoke r35.<android.net.Uri: java.lang.String getScheme()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 != 0 goto label14;

        return null;

     label14:
        r45 = new android.content.ContentResolver$StringResultListener;

        specialinvoke r45.<android.content.ContentResolver$StringResultListener: void <init>(android.content.ContentResolver$1)>(null);

        r46 = staticinvoke <android.app.ActivityManager: android.app.IActivityManager getService()>();

        r1 = staticinvoke <android.content.ContentProvider: android.net.Uri getUriWithoutUserId(android.net.Uri)>(r35);

        i0 = virtualinvoke r0.<android.content.ContentResolver: int resolveUserId(android.net.Uri)>(r35);

        r47 = new android.os.RemoteCallback;

        specialinvoke r47.<android.os.RemoteCallback: void <init>(android.os.RemoteCallback$OnResultListener)>(r45);

        interfaceinvoke r46.<android.app.IActivityManager: void getProviderMimeTypeAsync(android.net.Uri,int,android.os.RemoteCallback)>(r1, i0, r47);

        virtualinvoke r45.<android.content.ContentResolver$StringResultListener: void waitForResult(long)>(23000L);

        $r6 = r45.<android.content.ContentResolver$StringResultListener: java.lang.RuntimeException exception>;

        if $r6 != null goto label15;

        $r8 = r45.<android.content.ContentResolver$StringResultListener: java.lang.Object result>;

        $r9 = (java.lang.String) $r8;

        return $r9;

     label15:
        $r7 = r45.<android.content.ContentResolver$StringResultListener: java.lang.RuntimeException exception>;

        throw $r7;

     label16:
        $r16 := @caughtexception;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to get type for: ");

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r35);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r21 = virtualinvoke $r16.<java.lang.Exception: java.lang.String getMessage()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r24 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ContentResolver", $r24);

        return null;

     label17:
        $r33 := @caughtexception;

        return null;

     label18:
        $r15 := @caughtexception;

        return null;

        catch android.os.RemoteException from label01 to label02 with label18;
        catch android.os.RemoteException from label04 to label05 with label12;
        catch java.lang.Exception from label04 to label05 with label08;
        catch java.lang.Throwable from label04 to label05 with label07;
        catch android.os.RemoteException from label06 to label07 with label12;
        catch java.lang.Exception from label06 to label07 with label08;
        catch java.lang.Throwable from label06 to label07 with label07;
        catch java.lang.Throwable from label09 to label10 with label07;
        catch android.os.RemoteException from label14 to label15 with label17;
        catch java.lang.Exception from label14 to label15 with label16;
        catch android.os.RemoteException from label15 to label16 with label17;
        catch java.lang.Exception from label15 to label16 with label16;
    }

    public android.graphics.drawable.Drawable getTypeDrawable(java.lang.String)
    {
        android.content.ContentResolver r0;
        java.lang.String r1;
        android.content.ContentResolver$MimeTypeInfo $r2;
        android.graphics.drawable.Icon $r3;
        android.content.Context $r4;
        android.graphics.drawable.Drawable $r5;

        r0 := @this: android.content.ContentResolver;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<android.content.ContentResolver: android.content.ContentResolver$MimeTypeInfo getTypeInfo(java.lang.String)>(r1);

        $r3 = virtualinvoke $r2.<android.content.ContentResolver$MimeTypeInfo: android.graphics.drawable.Icon getIcon()>();

        $r4 = r0.<android.content.ContentResolver: android.content.Context mContext>;

        $r5 = virtualinvoke $r3.<android.graphics.drawable.Icon: android.graphics.drawable.Drawable loadDrawable(android.content.Context)>($r4);

        return $r5;
    }

    public final android.content.ContentResolver$MimeTypeInfo getTypeInfo(java.lang.String)
    {
        android.content.ContentResolver r0;
        java.lang.String r1;
        android.content.ContentResolver$MimeTypeInfo $r3;

        r0 := @this: android.content.ContentResolver;

        r1 := @parameter0: java.lang.String;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r3 = staticinvoke <com.android.internal.util.MimeIconUtils: android.content.ContentResolver$MimeTypeInfo getTypeInfo(java.lang.String)>(r1);

        return $r3;
    }

    public int getUserId()
    {
        android.content.ContentResolver r0;
        android.content.Context $r1;
        int $i0;

        r0 := @this: android.content.ContentResolver;

        $r1 = r0.<android.content.ContentResolver: android.content.Context mContext>;

        $i0 = virtualinvoke $r1.<android.content.Context: int getUserId()>();

        return $i0;
    }

    public final android.net.Uri insert(android.net.Uri, android.content.ContentValues)
    {
        android.content.ContentResolver r0;
        android.net.Uri r1, $r3;
        android.content.ContentValues r2;

        r0 := @this: android.content.ContentResolver;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.content.ContentValues;

        $r3 = virtualinvoke r0.<android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues,android.os.Bundle)>(r1, r2, null);

        return $r3;
    }

    public final android.net.Uri insert(android.net.Uri, android.content.ContentValues, android.os.Bundle)
    {
        android.content.ContentResolver r0;
        android.os.Bundle r1;
        long l0, $l1, $l2;
        android.content.ContentInterface $r3, r17;
        java.lang.StringBuilder $r4;
        java.lang.IllegalArgumentException $r7;
        java.lang.String $r8, $r9, $r10;
        android.os.RemoteException $r11, $r12, $r13;
        java.lang.Throwable $r14;
        android.net.Uri r15, r18, r21;
        android.content.ContentValues r16;
        android.content.IContentProvider r20;

        r0 := @this: android.content.ContentResolver;

        r15 := @parameter0: android.net.Uri;

        r16 := @parameter1: android.content.ContentValues;

        r1 := @parameter2: android.os.Bundle;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r15, "url");

     label01:
        $r3 = r0.<android.content.ContentResolver: android.content.ContentInterface mWrapped>;

        if $r3 == null goto label05;

        r17 = r0.<android.content.ContentResolver: android.content.ContentInterface mWrapped>;

     label02:
        r18 = interfaceinvoke r17.<android.content.ContentInterface: android.net.Uri insert(android.net.Uri,android.content.ContentValues,android.os.Bundle)>(r15, r16, r1);

     label03:
        return r18;

     label04:
        $r13 := @caughtexception;

        goto label12;

     label05:
        r20 = virtualinvoke r0.<android.content.ContentResolver: android.content.IContentProvider acquireProvider(android.net.Uri)>(r15);

        if r20 == null goto label10;

     label06:
        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r10 = r0.<android.content.ContentResolver: java.lang.String mPackageName>;

        $r9 = r0.<android.content.ContentResolver: java.lang.String mAttributionTag>;

        r21 = interfaceinvoke r20.<android.content.IContentProvider: android.net.Uri insert(java.lang.String,java.lang.String,android.net.Uri,android.content.ContentValues,android.os.Bundle)>($r10, $r9, r15, r16, r1);

        $l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l2 = $l1 - l0;

        specialinvoke r0.<android.content.ContentResolver: void maybeLogUpdateToEventLog(long,android.net.Uri,java.lang.String,java.lang.String)>($l2, r15, "insert", null);

     label07:
        virtualinvoke r0.<android.content.ContentResolver: boolean releaseProvider(android.content.IContentProvider)>(r20);

        return r21;

     label08:
        $r14 := @caughtexception;

        virtualinvoke r0.<android.content.ContentResolver: boolean releaseProvider(android.content.IContentProvider)>(r20);

        throw $r14;

     label09:
        $r12 := @caughtexception;

        virtualinvoke r0.<android.content.ContentResolver: boolean releaseProvider(android.content.IContentProvider)>(r20);

        return null;

     label10:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown URL ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r15);

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r7;

     label11:
        $r11 := @caughtexception;

     label12:
        return null;

        catch android.os.RemoteException from label01 to label02 with label11;
        catch android.os.RemoteException from label02 to label03 with label04;
        catch android.os.RemoteException from label06 to label07 with label09;
        catch java.lang.Throwable from label06 to label07 with label08;
    }

    public android.graphics.Bitmap loadThumbnail(android.net.Uri, android.util.Size, android.os.CancellationSignal) throws java.io.IOException
    {
        android.content.ContentResolver r0;
        android.net.Uri r1;
        android.util.Size r2;
        android.os.CancellationSignal r3;
        android.graphics.Bitmap $r4;

        r0 := @this: android.content.ContentResolver;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.util.Size;

        r3 := @parameter2: android.os.CancellationSignal;

        $r4 = staticinvoke <android.content.ContentResolver: android.graphics.Bitmap loadThumbnail(android.content.ContentInterface,android.net.Uri,android.util.Size,android.os.CancellationSignal,int)>(r0, r1, r2, r3, 1);

        return $r4;
    }

    public void notifyChange(android.net.Uri, android.database.ContentObserver)
    {
        android.content.ContentResolver r0;
        android.net.Uri r1;
        android.database.ContentObserver r2;

        r0 := @this: android.content.ContentResolver;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.database.ContentObserver;

        virtualinvoke r0.<android.content.ContentResolver: void notifyChange(android.net.Uri,android.database.ContentObserver,boolean)>(r1, r2, 1);

        return;
    }

    public void notifyChange(android.net.Uri, android.database.ContentObserver, int)
    {
        android.content.ContentResolver r0;
        android.net.Uri r1, $r4;
        android.database.ContentObserver r2;
        int i0, $i1, $i2;
        android.content.Context $r5;

        r0 := @this: android.content.ContentResolver;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.database.ContentObserver;

        i0 := @parameter2: int;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, "uri");

        $r4 = staticinvoke <android.content.ContentProvider: android.net.Uri getUriWithoutUserId(android.net.Uri)>(r1);

        $r5 = r0.<android.content.ContentResolver: android.content.Context mContext>;

        $i1 = virtualinvoke $r5.<android.content.Context: int getUserId()>();

        $i2 = staticinvoke <android.content.ContentProvider: int getUserIdFromUri(android.net.Uri,int)>(r1, $i1);

        virtualinvoke r0.<android.content.ContentResolver: void notifyChange(android.net.Uri,android.database.ContentObserver,int,int)>($r4, r2, i0, $i2);

        return;
    }

    public void notifyChange(android.net.Uri, android.database.ContentObserver, int, int)
    {
        android.content.ContentResolver r0;
        android.net.Uri r1;
        android.database.ContentObserver r2;
        int i0, i1;
        android.net.Uri[] $r3;

        r0 := @this: android.content.ContentResolver;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.database.ContentObserver;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r3 = newarray (android.net.Uri)[1];

        $r3[0] = r1;

        virtualinvoke r0.<android.content.ContentResolver: void notifyChange(android.net.Uri[],android.database.ContentObserver,int,int)>($r3, r2, i0, i1);

        return;
    }

    public void notifyChange(android.net.Uri, android.database.ContentObserver, boolean)
    {
        android.content.ContentResolver r0;
        android.net.Uri r1;
        android.database.ContentObserver r2;
        boolean z0;
        int i0;

        r0 := @this: android.content.ContentResolver;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.database.ContentObserver;

        z0 := @parameter2: boolean;

        i0 = (int) z0;

        virtualinvoke r0.<android.content.ContentResolver: void notifyChange(android.net.Uri,android.database.ContentObserver,int)>(r1, r2, i0);

        return;
    }

    public void notifyChange(android.net.Uri, android.database.ContentObserver, boolean, int)
    {
        android.content.ContentResolver r0;
        android.net.Uri r1;
        android.database.ContentObserver r2;
        boolean z0;
        int i0, i1;

        r0 := @this: android.content.ContentResolver;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.database.ContentObserver;

        z0 := @parameter2: boolean;

        i0 := @parameter3: int;

        i1 = (int) z0;

        virtualinvoke r0.<android.content.ContentResolver: void notifyChange(android.net.Uri,android.database.ContentObserver,int,int)>(r1, r2, i1, i0);

        return;
    }

    public void notifyChange(java.lang.Iterable, android.database.ContentObserver, int)
    {
        android.content.ContentResolver r0;
        java.lang.Iterable r1;
        android.database.ContentObserver r2;
        int i0;
        java.util.ArrayList $r4;
        android.content._$$Lambda$TxJXFacN6KB_OTXom31IyFcSl48 $r6;

        r0 := @this: android.content.ContentResolver;

        r1 := @parameter0: java.lang.Iterable;

        r2 := @parameter1: android.database.ContentObserver;

        i0 := @parameter2: int;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r4);

        $r6 = new android.content._$$Lambda$TxJXFacN6KB_OTXom31IyFcSl48;

        specialinvoke $r6.<android.content._$$Lambda$TxJXFacN6KB_OTXom31IyFcSl48: void <init>(java.util.Collection)>($r4);

        interfaceinvoke r1.<java.lang.Iterable: void forEach(java.util.function.Consumer)>($r6);

        virtualinvoke r0.<android.content.ContentResolver: void notifyChange(java.util.Collection,android.database.ContentObserver,int)>($r4, r2, i0);

        return;
    }

    public void notifyChange(java.util.Collection, android.database.ContentObserver, int)
    {
        android.content.ContentResolver r0;
        android.database.ContentObserver r1;
        int i0, i1, $i2, $i3, $i4, i5, i6;
        java.util.Iterator r3;
        android.net.Uri r4, $r15;
        java.util.ArrayList r5, $r16, r18, r19;
        android.util.SparseArray $r7;
        boolean $z0;
        java.lang.Object $r8, $r12, $r14;
        android.net.Uri[] $r9, $r11;
        java.lang.Object[] $r10;
        android.content.Context $r13;
        java.util.Collection r17;

        r0 := @this: android.content.ContentResolver;

        r17 := @parameter0: java.util.Collection;

        r1 := @parameter1: android.database.ContentObserver;

        i0 := @parameter2: int;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r17, "uris");

        $r7 = new android.util.SparseArray;

        specialinvoke $r7.<android.util.SparseArray: void <init>()>();

        r3 = interfaceinvoke r17.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r12 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (android.net.Uri) $r12;

        $r13 = r0.<android.content.ContentResolver: android.content.Context mContext>;

        $i4 = virtualinvoke $r13.<android.content.Context: int getUserId()>();

        i5 = staticinvoke <android.content.ContentProvider: int getUserIdFromUri(android.net.Uri,int)>(r4, $i4);

        $r14 = virtualinvoke $r7.<android.util.SparseArray: java.lang.Object get(int)>(i5);

        r5 = (java.util.ArrayList) $r14;

        r18 = r5;

        if r5 != null goto label2;

        $r16 = new java.util.ArrayList;

        specialinvoke $r16.<java.util.ArrayList: void <init>()>();

        r18 = $r16;

        virtualinvoke $r7.<android.util.SparseArray: void put(int,java.lang.Object)>(i5, $r16);

     label2:
        $r15 = staticinvoke <android.content.ContentProvider: android.net.Uri getUriWithoutUserId(android.net.Uri)>(r4);

        virtualinvoke r18.<java.util.ArrayList: boolean add(java.lang.Object)>($r15);

        goto label1;

     label3:
        i6 = 0;

     label4:
        $i2 = virtualinvoke $r7.<android.util.SparseArray: int size()>();

        if i6 >= $i2 goto label5;

        i1 = virtualinvoke $r7.<android.util.SparseArray: int keyAt(int)>(i6);

        $r8 = virtualinvoke $r7.<android.util.SparseArray: java.lang.Object valueAt(int)>(i6);

        r19 = (java.util.ArrayList) $r8;

        $i3 = virtualinvoke r19.<java.util.ArrayList: int size()>();

        $r9 = newarray (android.net.Uri)[$i3];

        $r10 = virtualinvoke r19.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r9);

        $r11 = (android.net.Uri[]) $r10;

        virtualinvoke r0.<android.content.ContentResolver: void notifyChange(android.net.Uri[],android.database.ContentObserver,int,int)>($r11, r1, i0, i1);

        i6 = i6 + 1;

        goto label4;

     label5:
        return;
    }

    public void notifyChange(android.net.Uri[], android.database.ContentObserver, int, int)
    {
        android.content.ContentResolver r0;
        android.database.ContentObserver r1;
        int i0, i1, $i2;
        android.content.IContentService r2;
        boolean $z0, z1;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;
        android.net.Uri[] r5;
        android.database.IContentObserver r6;
        android.content.Context $r7;
        java.lang.String $r8;

        r0 := @this: android.content.ContentResolver;

        r5 := @parameter0: android.net.Uri[];

        r1 := @parameter1: android.database.ContentObserver;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

     label01:
        r2 = staticinvoke <android.content.ContentResolver: android.content.IContentService getContentService()>();

     label02:
        if r1 != null goto label03;

        r6 = null;

        goto label04;

     label03:
        r6 = virtualinvoke r1.<android.database.ContentObserver: android.database.IContentObserver getContentObserver()>();

     label04:
        if r1 == null goto label07;

     label05:
        $z0 = virtualinvoke r1.<android.database.ContentObserver: boolean deliverSelfNotifications()>();

        if $z0 == 0 goto label07;

     label06:
        z1 = 1;

        goto label08;

     label07:
        z1 = 0;

     label08:
        $i2 = r0.<android.content.ContentResolver: int mTargetSdkVersion>;

        $r7 = r0.<android.content.ContentResolver: android.content.Context mContext>;

        $r8 = virtualinvoke $r7.<android.content.Context: java.lang.String getPackageName()>();

        interfaceinvoke r2.<android.content.IContentService: void notifyChange(android.net.Uri[],android.database.IContentObserver,boolean,int,int,int,java.lang.String)>(r5, r6, z1, i0, i1, $i2, $r8);

     label09:
        return;

     label10:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label01 to label02 with label10;
        catch android.os.RemoteException from label03 to label04 with label10;
        catch android.os.RemoteException from label05 to label06 with label10;
        catch android.os.RemoteException from label08 to label09 with label10;
    }

    public final android.content.res.AssetFileDescriptor openAssetFile(android.net.Uri, java.lang.String, android.os.CancellationSignal) throws java.io.FileNotFoundException
    {
        android.content.ContentResolver r0;
        java.lang.String r1;
        android.os.CancellationSignal r2;
        android.content.ContentInterface $r3, $r5;
        android.content.res.AssetFileDescriptor $r4, r8;
        android.os.RemoteException $r6;
        android.net.Uri r7;

        r0 := @this: android.content.ContentResolver;

        r7 := @parameter0: android.net.Uri;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.os.CancellationSignal;

     label1:
        $r3 = r0.<android.content.ContentResolver: android.content.ContentInterface mWrapped>;

        if $r3 == null goto label3;

        $r5 = r0.<android.content.ContentResolver: android.content.ContentInterface mWrapped>;

        r8 = interfaceinvoke $r5.<android.content.ContentInterface: android.content.res.AssetFileDescriptor openAssetFile(android.net.Uri,java.lang.String,android.os.CancellationSignal)>(r7, r1, r2);

     label2:
        return r8;

     label3:
        $r4 = virtualinvoke r0.<android.content.ContentResolver: android.content.res.AssetFileDescriptor openAssetFileDescriptor(android.net.Uri,java.lang.String,android.os.CancellationSignal)>(r7, r1, r2);

        return $r4;

     label4:
        $r6 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public final android.content.res.AssetFileDescriptor openAssetFileDescriptor(android.net.Uri, java.lang.String) throws java.io.FileNotFoundException
    {
        android.content.ContentResolver r0;
        android.net.Uri r1;
        java.lang.String r2;
        android.content.res.AssetFileDescriptor $r3;

        r0 := @this: android.content.ContentResolver;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<android.content.ContentResolver: android.content.res.AssetFileDescriptor openAssetFileDescriptor(android.net.Uri,java.lang.String,android.os.CancellationSignal)>(r1, r2, null);

        return $r3;
    }

    public final android.content.res.AssetFileDescriptor openAssetFileDescriptor(android.net.Uri, java.lang.String, android.os.CancellationSignal) throws java.io.FileNotFoundException
    {
        android.content.ContentResolver r0;
        android.os.CancellationSignal r1;
        android.content.res.AssetFileDescriptor r2, $r13, $r14, $r15, r40, r43, r54;
        android.content.ContentInterface $r3, $r24;
        java.lang.String $r4, $r5, $r6, $r9, $r10, $r11, $r17, $r19, $r22, $r28, $r30, $r35, $r36, $r37, r39, r41;
        boolean $z0, $z1, $z2, $z3;
        java.lang.StringBuilder $r7, $r20, $r26, r62, r64;
        java.io.FileNotFoundException $r8, $r21, $r27, r61, r63;
        android.os.ParcelFileDescriptor $r12, $r18;
        long $l0, $l1;
        java.io.File $r16;
        int $i2, $i3;
        android.content.res.Resources $r23;
        android.content.res.Resources$NotFoundException $r25;
        android.os.RemoteException $r29, $r33;
        java.lang.Throwable $r31, $r32;
        android.os.DeadObjectException $r34;
        android.net.Uri r38;
        android.content.ContentResolver$OpenResourceIdResult r42;
        android.content.IContentProvider r46, r47, r48, r49, r50, r51, r52, r57, r58;
        android.os.ICancellationSignal r53;
        android.content.ContentResolver$ParcelFileDescriptorInner r59;

        r0 := @this: android.content.ContentResolver;

        r38 := @parameter0: android.net.Uri;

        r39 := @parameter1: java.lang.String;

        r1 := @parameter2: android.os.CancellationSignal;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r38, "uri");

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r39, "mode");

     label01:
        $r3 = r0.<android.content.ContentResolver: android.content.ContentInterface mWrapped>;

        if $r3 == null goto label03;

        $r24 = r0.<android.content.ContentResolver: android.content.ContentInterface mWrapped>;

        r40 = interfaceinvoke $r24.<android.content.ContentInterface: android.content.res.AssetFileDescriptor openAssetFile(android.net.Uri,java.lang.String,android.os.CancellationSignal)>(r38, r39, r1);

     label02:
        return r40;

     label03:
        r41 = virtualinvoke r38.<android.net.Uri: java.lang.String getScheme()>();

        $r4 = "android.resource";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r41);

        if $z0 == 0 goto label08;

        $r19 = "r";

        $z3 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>(r39);

        if $z3 == 0 goto label07;

        r42 = virtualinvoke r0.<android.content.ContentResolver: android.content.ContentResolver$OpenResourceIdResult getResourceId(android.net.Uri)>(r38);

     label04:
        $r23 = r42.<android.content.ContentResolver$OpenResourceIdResult: android.content.res.Resources r>;

        $i3 = r42.<android.content.ContentResolver$OpenResourceIdResult: int id>;

        r43 = virtualinvoke $r23.<android.content.res.Resources: android.content.res.AssetFileDescriptor openRawResourceFd(int)>($i3);

     label05:
        return r43;

     label06:
        $r25 := @caughtexception;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Resource does not exist: ");

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r38);

        $r27 = new java.io.FileNotFoundException;

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r27.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r28);

        throw $r27;

     label07:
        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t write resources: ");

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r38);

        $r21 = new java.io.FileNotFoundException;

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r21.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r22);

        throw $r21;

     label08:
        $r5 = "file";

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r41);

        if $z1 == 0 goto label09;

        $r15 = new android.content.res.AssetFileDescriptor;

        $r16 = new java.io.File;

        $r17 = virtualinvoke r38.<android.net.Uri: java.lang.String getPath()>();

        specialinvoke $r16.<java.io.File: void <init>(java.lang.String)>($r17);

        $i2 = staticinvoke <android.os.ParcelFileDescriptor: int parseMode(java.lang.String)>(r39);

        $r18 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor open(java.io.File,int)>($r16, $i2);

        specialinvoke $r15.<android.content.res.AssetFileDescriptor: void <init>(android.os.ParcelFileDescriptor,long,long)>($r18, 0L, -1L);

        return $r15;

     label09:
        $r6 = "r";

        $z2 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r39);

        if $z2 == 0 goto label10;

        $r14 = virtualinvoke r0.<android.content.ContentResolver: android.content.res.AssetFileDescriptor openTypedAssetFileDescriptor(android.net.Uri,java.lang.String,android.os.Bundle,android.os.CancellationSignal)>(r38, "*/*", null, r1);

        return $r14;

     label10:
        r46 = virtualinvoke r0.<android.content.ContentResolver: android.content.IContentProvider acquireUnstableProvider(android.net.Uri)>(r38);

        if r46 == null goto label87;

        if r1 == null goto label17;

        r47 = r46;

        r48 = null;

        r49 = r46;

        r50 = null;

        r51 = r46;

        r52 = null;

     label11:
        virtualinvoke r1.<android.os.CancellationSignal: void throwIfCanceled()>();

     label12:
        r47 = r46;

        r48 = null;

        r49 = r46;

        r50 = null;

        r51 = r46;

        r52 = null;

     label13:
        r53 = interfaceinvoke r46.<android.content.IContentProvider: android.os.ICancellationSignal createCancellationSignal()>();

     label14:
        r47 = r46;

        r48 = null;

        r49 = r46;

        r50 = null;

        r51 = r46;

        r52 = null;

     label15:
        virtualinvoke r1.<android.os.CancellationSignal: void setRemote(android.os.ICancellationSignal)>(r53);

     label16:
        goto label18;

     label17:
        r53 = null;

     label18:
        r47 = r46;

        r48 = null;

        r49 = r46;

        r50 = null;

        r51 = r46;

        r52 = null;

     label19:
        $r11 = r0.<android.content.ContentResolver: java.lang.String mPackageName>;

        $r10 = r0.<android.content.ContentResolver: java.lang.String mAttributionTag>;

        r2 = interfaceinvoke r46.<android.content.IContentProvider: android.content.res.AssetFileDescriptor openAssetFile(java.lang.String,java.lang.String,android.net.Uri,java.lang.String,android.os.ICancellationSignal)>($r11, $r10, r38, r39, r53);

     label20:
        if r2 != null goto label24;

        if r1 == null goto label21;

        virtualinvoke r1.<android.os.CancellationSignal: void setRemote(android.os.ICancellationSignal)>(null);

     label21:
        goto label22;

     label22:
        if r46 == null goto label23;

        virtualinvoke r0.<android.content.ContentResolver: boolean releaseUnstableProvider(android.content.IContentProvider)>(r46);

     label23:
        return null;

     label24:
        r54 = r2;

        r52 = null;

        goto label39;

     label25:
        $r32 := @caughtexception;

        goto label83;

     label26:
        $r31 := @caughtexception;

        goto label67;

     label27:
        $r29 := @caughtexception;

        goto label69;

     label28:
        $r34 := @caughtexception;

        r47 = r46;

        r48 = null;

        r49 = r46;

        r50 = null;

        r51 = r46;

        r52 = null;

     label29:
        virtualinvoke r0.<android.content.ContentResolver: void unstableProviderDied(android.content.IContentProvider)>(r46);

     label30:
        r47 = r46;

        r48 = null;

        r49 = r46;

        r50 = null;

        r51 = r46;

        r52 = null;

     label31:
        r57 = virtualinvoke r0.<android.content.ContentResolver: android.content.IContentProvider acquireProvider(android.net.Uri)>(r38);

     label32:
        if r57 == null goto label53;

        r47 = r46;

        r48 = r57;

        r49 = r46;

        r50 = r57;

        r51 = r46;

        r52 = r57;

     label33:
        $r37 = r0.<android.content.ContentResolver: java.lang.String mPackageName>;

        $r36 = r0.<android.content.ContentResolver: java.lang.String mAttributionTag>;

        r54 = interfaceinvoke r57.<android.content.IContentProvider: android.content.res.AssetFileDescriptor openAssetFile(java.lang.String,java.lang.String,android.net.Uri,java.lang.String,android.os.ICancellationSignal)>($r37, $r36, r38, r39, r53);

     label34:
        if r54 != null goto label38;

        if r1 == null goto label35;

        virtualinvoke r1.<android.os.CancellationSignal: void setRemote(android.os.ICancellationSignal)>(null);

     label35:
        if r57 == null goto label36;

        virtualinvoke r0.<android.content.ContentResolver: boolean releaseProvider(android.content.IContentProvider)>(r57);

     label36:
        if r46 == null goto label37;

        virtualinvoke r0.<android.content.ContentResolver: boolean releaseUnstableProvider(android.content.IContentProvider)>(r46);

     label37:
        return null;

     label38:
        r52 = r57;

     label39:
        r58 = r52;

        if r52 != null goto label41;

        r47 = r46;

        r48 = r52;

        r49 = r46;

        r50 = r52;

        r51 = r46;

     label40:
        r58 = virtualinvoke r0.<android.content.ContentResolver: android.content.IContentProvider acquireProvider(android.net.Uri)>(r38);

     label41:
        r47 = r46;

        r48 = r58;

        r49 = r46;

        r50 = r58;

        r51 = r46;

        r52 = r58;

     label42:
        virtualinvoke r0.<android.content.ContentResolver: boolean releaseUnstableProvider(android.content.IContentProvider)>(r46);

     label43:
        r47 = null;

        r48 = r58;

        r49 = null;

        r50 = r58;

        r51 = null;

        r52 = r58;

     label44:
        r59 = new android.content.ContentResolver$ParcelFileDescriptorInner;

     label45:
        r47 = null;

        r48 = r58;

        r49 = null;

        r50 = r58;

        r51 = null;

        r52 = r58;

     label46:
        $r12 = virtualinvoke r54.<android.content.res.AssetFileDescriptor: android.os.ParcelFileDescriptor getParcelFileDescriptor()>();

        specialinvoke r59.<android.content.ContentResolver$ParcelFileDescriptorInner: void <init>(android.content.ContentResolver,android.os.ParcelFileDescriptor,android.content.IContentProvider)>(r0, $r12, r58);

     label47:
        r50 = null;

        r52 = null;

        r48 = null;

        r47 = null;

        r49 = null;

        r51 = null;

     label48:
        $r13 = new android.content.res.AssetFileDescriptor;

        $l0 = virtualinvoke r54.<android.content.res.AssetFileDescriptor: long getStartOffset()>();

        $l1 = virtualinvoke r54.<android.content.res.AssetFileDescriptor: long getDeclaredLength()>();

        specialinvoke $r13.<android.content.res.AssetFileDescriptor: void <init>(android.os.ParcelFileDescriptor,long,long)>(r59, $l0, $l1);

     label49:
        if r1 == null goto label50;

        virtualinvoke r1.<android.os.CancellationSignal: void setRemote(android.os.ICancellationSignal)>(null);

     label50:
        goto label51;

     label51:
        goto label52;

     label52:
        return $r13;

     label53:
        r47 = r46;

        r48 = r57;

        r49 = r46;

        r50 = r57;

        r51 = r46;

        r52 = r57;

     label54:
        r61 = new java.io.FileNotFoundException;

     label55:
        r47 = r46;

        r48 = r57;

        r49 = r46;

        r50 = r57;

        r51 = r46;

        r52 = r57;

     label56:
        r62 = new java.lang.StringBuilder;

     label57:
        r47 = r46;

        r48 = r57;

        r49 = r46;

        r50 = r57;

        r51 = r46;

        r52 = r57;

     label58:
        specialinvoke r62.<java.lang.StringBuilder: void <init>()>();

     label59:
        r47 = r46;

        r48 = r57;

        r49 = r46;

        r50 = r57;

        r51 = r46;

        r52 = r57;

     label60:
        virtualinvoke r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No content provider: ");

     label61:
        r47 = r46;

        r48 = r57;

        r49 = r46;

        r50 = r57;

        r51 = r46;

        r52 = r57;

     label62:
        virtualinvoke r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r38);

     label63:
        r47 = r46;

        r48 = r57;

        r49 = r46;

        r50 = r57;

        r51 = r46;

        r52 = r57;

     label64:
        $r35 = virtualinvoke r62.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r61.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r35);

     label65:
        r47 = r46;

        r48 = r57;

        r49 = r46;

        r50 = r57;

        r51 = r46;

        r52 = r57;

     label66:
        throw r61;

     label67:
        r47 = r49;

        r48 = r50;

     label68:
        throw $r31;

     label69:
        r47 = r51;

        r48 = r52;

     label70:
        r63 = new java.io.FileNotFoundException;

     label71:
        r47 = r51;

        r48 = r52;

     label72:
        r64 = new java.lang.StringBuilder;

     label73:
        r47 = r51;

        r48 = r52;

     label74:
        specialinvoke r64.<java.lang.StringBuilder: void <init>()>();

     label75:
        r47 = r51;

        r48 = r52;

     label76:
        virtualinvoke r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed opening content provider: ");

     label77:
        r47 = r51;

        r48 = r52;

     label78:
        virtualinvoke r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r38);

     label79:
        r47 = r51;

        r48 = r52;

     label80:
        $r30 = virtualinvoke r64.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r63.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r30);

     label81:
        r47 = r51;

        r48 = r52;

     label82:
        throw r63;

     label83:
        if r1 == null goto label84;

        virtualinvoke r1.<android.os.CancellationSignal: void setRemote(android.os.ICancellationSignal)>(null);

     label84:
        if r48 == null goto label85;

        virtualinvoke r0.<android.content.ContentResolver: boolean releaseProvider(android.content.IContentProvider)>(r48);

     label85:
        if r47 == null goto label86;

        virtualinvoke r0.<android.content.ContentResolver: boolean releaseUnstableProvider(android.content.IContentProvider)>(r47);

     label86:
        throw $r32;

     label87:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No content provider: ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r38);

        $r8 = new java.io.FileNotFoundException;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r9);

        throw $r8;

     label88:
        $r33 := @caughtexception;

        return null;

        catch android.os.RemoteException from label01 to label02 with label88;
        catch android.content.res.Resources$NotFoundException from label04 to label05 with label06;
        catch android.os.RemoteException from label11 to label12 with label27;
        catch java.io.FileNotFoundException from label11 to label12 with label26;
        catch java.lang.Throwable from label11 to label12 with label25;
        catch android.os.RemoteException from label13 to label14 with label27;
        catch java.io.FileNotFoundException from label13 to label14 with label26;
        catch java.lang.Throwable from label13 to label14 with label25;
        catch android.os.RemoteException from label15 to label16 with label27;
        catch java.io.FileNotFoundException from label15 to label16 with label26;
        catch java.lang.Throwable from label15 to label16 with label25;
        catch android.os.DeadObjectException from label19 to label20 with label28;
        catch android.os.RemoteException from label19 to label20 with label27;
        catch java.io.FileNotFoundException from label19 to label20 with label26;
        catch java.lang.Throwable from label19 to label20 with label25;
        catch android.os.RemoteException from label29 to label30 with label27;
        catch java.io.FileNotFoundException from label29 to label30 with label26;
        catch java.lang.Throwable from label29 to label30 with label25;
        catch android.os.RemoteException from label31 to label32 with label27;
        catch java.io.FileNotFoundException from label31 to label32 with label26;
        catch java.lang.Throwable from label31 to label32 with label25;
        catch android.os.RemoteException from label33 to label34 with label27;
        catch java.io.FileNotFoundException from label33 to label34 with label26;
        catch java.lang.Throwable from label33 to label34 with label25;
        catch android.os.RemoteException from label40 to label41 with label27;
        catch java.io.FileNotFoundException from label40 to label41 with label26;
        catch java.lang.Throwable from label40 to label41 with label25;
        catch android.os.RemoteException from label42 to label43 with label27;
        catch java.io.FileNotFoundException from label42 to label43 with label26;
        catch java.lang.Throwable from label42 to label43 with label25;
        catch android.os.RemoteException from label44 to label45 with label27;
        catch java.io.FileNotFoundException from label44 to label45 with label26;
        catch java.lang.Throwable from label44 to label45 with label25;
        catch android.os.RemoteException from label46 to label47 with label27;
        catch java.io.FileNotFoundException from label46 to label47 with label26;
        catch java.lang.Throwable from label46 to label47 with label25;
        catch android.os.RemoteException from label48 to label49 with label27;
        catch java.io.FileNotFoundException from label48 to label49 with label26;
        catch java.lang.Throwable from label48 to label49 with label25;
        catch android.os.RemoteException from label54 to label55 with label27;
        catch java.io.FileNotFoundException from label54 to label55 with label26;
        catch java.lang.Throwable from label54 to label55 with label25;
        catch android.os.RemoteException from label56 to label57 with label27;
        catch java.io.FileNotFoundException from label56 to label57 with label26;
        catch java.lang.Throwable from label56 to label57 with label25;
        catch android.os.RemoteException from label58 to label59 with label27;
        catch java.io.FileNotFoundException from label58 to label59 with label26;
        catch java.lang.Throwable from label58 to label59 with label25;
        catch android.os.RemoteException from label60 to label61 with label27;
        catch java.io.FileNotFoundException from label60 to label61 with label26;
        catch java.lang.Throwable from label60 to label61 with label25;
        catch android.os.RemoteException from label62 to label63 with label27;
        catch java.io.FileNotFoundException from label62 to label63 with label26;
        catch java.lang.Throwable from label62 to label63 with label25;
        catch android.os.RemoteException from label64 to label65 with label27;
        catch java.io.FileNotFoundException from label64 to label65 with label26;
        catch java.lang.Throwable from label64 to label65 with label25;
        catch android.os.RemoteException from label66 to label67 with label27;
        catch java.io.FileNotFoundException from label66 to label67 with label26;
        catch java.lang.Throwable from label66 to label67 with label25;
        catch java.lang.Throwable from label68 to label69 with label25;
        catch java.lang.Throwable from label70 to label71 with label25;
        catch java.lang.Throwable from label72 to label73 with label25;
        catch java.lang.Throwable from label74 to label75 with label25;
        catch java.lang.Throwable from label76 to label77 with label25;
        catch java.lang.Throwable from label78 to label79 with label25;
        catch java.lang.Throwable from label80 to label81 with label25;
        catch java.lang.Throwable from label82 to label83 with label25;
    }

    public final android.os.ParcelFileDescriptor openFile(android.net.Uri, java.lang.String, android.os.CancellationSignal) throws java.io.FileNotFoundException
    {
        android.content.ContentResolver r0;
        java.lang.String r1;
        android.os.CancellationSignal r2;
        android.content.ContentInterface $r3, $r5;
        android.os.ParcelFileDescriptor $r4, r8;
        android.os.RemoteException $r6;
        android.net.Uri r7;

        r0 := @this: android.content.ContentResolver;

        r7 := @parameter0: android.net.Uri;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.os.CancellationSignal;

     label1:
        $r3 = r0.<android.content.ContentResolver: android.content.ContentInterface mWrapped>;

        if $r3 == null goto label3;

        $r5 = r0.<android.content.ContentResolver: android.content.ContentInterface mWrapped>;

        r8 = interfaceinvoke $r5.<android.content.ContentInterface: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String,android.os.CancellationSignal)>(r7, r1, r2);

     label2:
        return r8;

     label3:
        $r4 = virtualinvoke r0.<android.content.ContentResolver: android.os.ParcelFileDescriptor openFileDescriptor(android.net.Uri,java.lang.String,android.os.CancellationSignal)>(r7, r1, r2);

        return $r4;

     label4:
        $r6 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public final android.os.ParcelFileDescriptor openFileDescriptor(android.net.Uri, java.lang.String) throws java.io.FileNotFoundException
    {
        android.content.ContentResolver r0;
        android.net.Uri r1;
        java.lang.String r2;
        android.os.ParcelFileDescriptor $r3;

        r0 := @this: android.content.ContentResolver;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<android.content.ContentResolver: android.os.ParcelFileDescriptor openFileDescriptor(android.net.Uri,java.lang.String,android.os.CancellationSignal)>(r1, r2, null);

        return $r3;
    }

    public final android.os.ParcelFileDescriptor openFileDescriptor(android.net.Uri, java.lang.String, android.os.CancellationSignal) throws java.io.FileNotFoundException
    {
        android.content.ContentResolver r0;
        java.lang.String r1;
        android.os.CancellationSignal r2;
        android.content.ContentInterface $r3, $r6;
        long $l0;
        byte $b1;
        java.io.FileNotFoundException $r4;
        android.os.ParcelFileDescriptor $r5, r10;
        android.os.RemoteException $r7;
        java.lang.Throwable $r8;
        android.net.Uri r9;
        android.content.res.AssetFileDescriptor r11;

        r0 := @this: android.content.ContentResolver;

        r9 := @parameter0: android.net.Uri;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.os.CancellationSignal;

     label1:
        $r3 = r0.<android.content.ContentResolver: android.content.ContentInterface mWrapped>;

        if $r3 == null goto label3;

        $r6 = r0.<android.content.ContentResolver: android.content.ContentInterface mWrapped>;

        r10 = interfaceinvoke $r6.<android.content.ContentInterface: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String,android.os.CancellationSignal)>(r9, r1, r2);

     label2:
        return r10;

     label3:
        r11 = virtualinvoke r0.<android.content.ContentResolver: android.content.res.AssetFileDescriptor openAssetFileDescriptor(android.net.Uri,java.lang.String,android.os.CancellationSignal)>(r9, r1, r2);

        if r11 != null goto label4;

        return null;

     label4:
        $l0 = virtualinvoke r11.<android.content.res.AssetFileDescriptor: long getDeclaredLength()>();

        $b1 = $l0 cmp 0L;

        if $b1 >= 0 goto label5;

        $r5 = virtualinvoke r11.<android.content.res.AssetFileDescriptor: android.os.ParcelFileDescriptor getParcelFileDescriptor()>();

        return $r5;

     label5:
        virtualinvoke r11.<android.content.res.AssetFileDescriptor: void close()>();

     label6:
        goto label8;

     label7:
        $r8 := @caughtexception;

     label8:
        $r4 = new java.io.FileNotFoundException;

        specialinvoke $r4.<java.io.FileNotFoundException: void <init>(java.lang.String)>("Not a whole file");

        throw $r4;

     label9:
        $r7 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label9;
        catch java.io.IOException from label5 to label6 with label7;
    }

    public final java.io.InputStream openInputStream(android.net.Uri) throws java.io.FileNotFoundException
    {
        android.content.ContentResolver r0;
        android.content.res.AssetFileDescriptor r1;
        java.lang.String $r2, $r3, $r5, $r10, r14;
        boolean $z0, $z1;
        java.io.FileInputStream $r4, r18;
        int $i0;
        android.content.res.Resources $r6;
        android.content.res.Resources$NotFoundException $r7;
        java.lang.StringBuilder $r8;
        java.io.FileNotFoundException $r9, $r12;
        java.lang.Throwable $r11;
        android.net.Uri r13;
        android.content.ContentResolver$OpenResourceIdResult r15;
        java.io.InputStream r16;

        r0 := @this: android.content.ContentResolver;

        r13 := @parameter0: android.net.Uri;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r13, "uri");

        r14 = virtualinvoke r13.<android.net.Uri: java.lang.String getScheme()>();

        $r2 = "android.resource";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r14);

        if $z0 == 0 goto label4;

        r15 = virtualinvoke r0.<android.content.ContentResolver: android.content.ContentResolver$OpenResourceIdResult getResourceId(android.net.Uri)>(r13);

     label1:
        $r6 = r15.<android.content.ContentResolver$OpenResourceIdResult: android.content.res.Resources r>;

        $i0 = r15.<android.content.ContentResolver$OpenResourceIdResult: int id>;

        r16 = virtualinvoke $r6.<android.content.res.Resources: java.io.InputStream openRawResource(int)>($i0);

     label2:
        return r16;

     label3:
        $r7 := @caughtexception;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Resource does not exist: ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r13);

        $r9 = new java.io.FileNotFoundException;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r10);

        throw $r9;

     label4:
        $r3 = "file";

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r14);

        if $z1 == 0 goto label5;

        $r4 = new java.io.FileInputStream;

        $r5 = virtualinvoke r13.<android.net.Uri: java.lang.String getPath()>();

        specialinvoke $r4.<java.io.FileInputStream: void <init>(java.lang.String)>($r5);

        return $r4;

     label5:
        r1 = virtualinvoke r0.<android.content.ContentResolver: android.content.res.AssetFileDescriptor openAssetFileDescriptor(android.net.Uri,java.lang.String,android.os.CancellationSignal)>(r13, "r", null);

        r18 = null;

        if r1 == null goto label9;

     label6:
        r18 = virtualinvoke r1.<android.content.res.AssetFileDescriptor: java.io.FileInputStream createInputStream()>();

     label7:
        goto label9;

     label8:
        $r11 := @caughtexception;

        $r12 = new java.io.FileNotFoundException;

        specialinvoke $r12.<java.io.FileNotFoundException: void <init>(java.lang.String)>("Unable to create stream");

        throw $r12;

     label9:
        return r18;

        catch android.content.res.Resources$NotFoundException from label1 to label2 with label3;
        catch java.io.IOException from label6 to label7 with label8;
    }

    public final java.io.OutputStream openOutputStream(android.net.Uri) throws java.io.FileNotFoundException
    {
        android.content.ContentResolver r0;
        android.net.Uri r1;
        java.io.OutputStream $r2;

        r0 := @this: android.content.ContentResolver;

        r1 := @parameter0: android.net.Uri;

        $r2 = virtualinvoke r0.<android.content.ContentResolver: java.io.OutputStream openOutputStream(android.net.Uri,java.lang.String)>(r1, "w");

        return $r2;
    }

    public final java.io.OutputStream openOutputStream(android.net.Uri, java.lang.String) throws java.io.FileNotFoundException
    {
        android.content.ContentResolver r0;
        java.lang.Throwable $r1;
        java.io.FileNotFoundException $r2;
        android.net.Uri r3;
        java.lang.String r4;
        android.content.res.AssetFileDescriptor r5;
        java.io.FileOutputStream r6;

        r0 := @this: android.content.ContentResolver;

        r3 := @parameter0: android.net.Uri;

        r4 := @parameter1: java.lang.String;

        r5 = virtualinvoke r0.<android.content.ContentResolver: android.content.res.AssetFileDescriptor openAssetFileDescriptor(android.net.Uri,java.lang.String,android.os.CancellationSignal)>(r3, r4, null);

        r6 = null;

        if r5 == null goto label4;

     label1:
        r6 = virtualinvoke r5.<android.content.res.AssetFileDescriptor: java.io.FileOutputStream createOutputStream()>();

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

        $r2 = new java.io.FileNotFoundException;

        specialinvoke $r2.<java.io.FileNotFoundException: void <init>(java.lang.String)>("Unable to create stream");

        throw $r2;

     label4:
        return r6;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public final android.content.res.AssetFileDescriptor openTypedAssetFile(android.net.Uri, java.lang.String, android.os.Bundle, android.os.CancellationSignal) throws java.io.FileNotFoundException
    {
        android.content.ContentResolver r0;
        java.lang.String r1;
        android.os.Bundle r2;
        android.os.CancellationSignal r3;
        android.content.ContentInterface $r4, $r6;
        android.content.res.AssetFileDescriptor $r5, r9;
        android.os.RemoteException $r7;
        android.net.Uri r8;

        r0 := @this: android.content.ContentResolver;

        r8 := @parameter0: android.net.Uri;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.os.Bundle;

        r3 := @parameter3: android.os.CancellationSignal;

     label1:
        $r4 = r0.<android.content.ContentResolver: android.content.ContentInterface mWrapped>;

        if $r4 == null goto label3;

        $r6 = r0.<android.content.ContentResolver: android.content.ContentInterface mWrapped>;

        r9 = interfaceinvoke $r6.<android.content.ContentInterface: android.content.res.AssetFileDescriptor openTypedAssetFile(android.net.Uri,java.lang.String,android.os.Bundle,android.os.CancellationSignal)>(r8, r1, r2, r3);

     label2:
        return r9;

     label3:
        $r5 = virtualinvoke r0.<android.content.ContentResolver: android.content.res.AssetFileDescriptor openTypedAssetFileDescriptor(android.net.Uri,java.lang.String,android.os.Bundle,android.os.CancellationSignal)>(r8, r1, r2, r3);

        return $r5;

     label4:
        $r7 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public final android.content.res.AssetFileDescriptor openTypedAssetFileDescriptor(android.net.Uri, java.lang.String, android.os.Bundle) throws java.io.FileNotFoundException
    {
        android.content.ContentResolver r0;
        android.net.Uri r1;
        java.lang.String r2;
        android.os.Bundle r3;
        android.content.res.AssetFileDescriptor $r4;

        r0 := @this: android.content.ContentResolver;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.Bundle;

        $r4 = virtualinvoke r0.<android.content.ContentResolver: android.content.res.AssetFileDescriptor openTypedAssetFileDescriptor(android.net.Uri,java.lang.String,android.os.Bundle,android.os.CancellationSignal)>(r1, r2, r3, null);

        return $r4;
    }

    public final android.content.res.AssetFileDescriptor openTypedAssetFileDescriptor(android.net.Uri, java.lang.String, android.os.Bundle, android.os.CancellationSignal) throws java.io.FileNotFoundException
    {
        android.content.ContentResolver r0;
        android.os.CancellationSignal r1;
        android.os.ICancellationSignal r2, r45;
        android.content.ContentInterface $r3, r36;
        java.lang.StringBuilder $r4, r62, r64;
        java.io.FileNotFoundException $r5, r61, r63;
        java.lang.String $r6, $r13, r34, r49, r50, r56, r57, $r65;
        android.os.ParcelFileDescriptor $r7;
        android.content.res.AssetFileDescriptor $r8, r37, r51;
        long $l0, $l1;
        android.os.Bundle $r9, r35;
        java.lang.Throwable $r10, $r11, $r15, $r17, $r18, $r20, $r21, $r24, $r26, $r28, $r30, $r31, r46, r47;
        android.os.DeadObjectException $r12, $r32;
        android.os.RemoteException $r14, $r16, $r19, $r22, $r23, $r25, $r27, $r29;
        android.net.Uri r33;
        android.content.IContentProvider r38, r39, r40, r41, r42, r43, r44, r48, r52, r53, r54, r55, r58;
        android.content.ContentResolver$ParcelFileDescriptorInner r59;

        r0 := @this: android.content.ContentResolver;

        r33 := @parameter0: android.net.Uri;

        r34 := @parameter1: java.lang.String;

        r35 := @parameter2: android.os.Bundle;

        r1 := @parameter3: android.os.CancellationSignal;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r33, "uri");

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r34, "mimeType");

     label001:
        $r3 = r0.<android.content.ContentResolver: android.content.ContentInterface mWrapped>;

        if $r3 == null goto label005;

        r36 = r0.<android.content.ContentResolver: android.content.ContentInterface mWrapped>;

     label002:
        r37 = interfaceinvoke r36.<android.content.ContentInterface: android.content.res.AssetFileDescriptor openTypedAssetFile(android.net.Uri,java.lang.String,android.os.Bundle,android.os.CancellationSignal)>(r33, r34, r35, r1);

     label003:
        return r37;

     label004:
        $r23 := @caughtexception;

        goto label102;

     label005:
        r38 = virtualinvoke r0.<android.content.ContentResolver: android.content.IContentProvider acquireUnstableProvider(android.net.Uri)>(r33);

        if r38 == null goto label100;

        if r1 == null goto label015;

        r39 = null;

        r40 = r38;

        r41 = null;

        r42 = r38;

        r43 = null;

        r44 = r38;

     label006:
        virtualinvoke r1.<android.os.CancellationSignal: void throwIfCanceled()>();

     label007:
        r39 = null;

        r40 = r38;

        r41 = null;

        r42 = r38;

        r43 = null;

        r44 = r38;

     label008:
        r2 = interfaceinvoke r38.<android.content.IContentProvider: android.os.ICancellationSignal createCancellationSignal()>();

     label009:
        r39 = null;

        r40 = r38;

        r41 = null;

        r42 = r38;

        r43 = null;

        r44 = r38;

     label010:
        virtualinvoke r1.<android.os.CancellationSignal: void setRemote(android.os.ICancellationSignal)>(r2);

     label011:
        r45 = r2;

        goto label016;

     label012:
        $r17 := @caughtexception;

        r46 = $r17;

        r38 = r40;

        goto label096;

     label013:
        $r11 := @caughtexception;

        r47 = $r11;

        r39 = r41;

        r38 = r42;

        goto label079;

     label014:
        $r29 := @caughtexception;

        r48 = r43;

        r38 = r44;

        goto label082;

     label015:
        r45 = null;

     label016:
        r49 = r0.<android.content.ContentResolver: java.lang.String mPackageName>;

        r50 = r0.<android.content.ContentResolver: java.lang.String mAttributionTag>;

     label017:
        r51 = interfaceinvoke r38.<android.content.IContentProvider: android.content.res.AssetFileDescriptor openTypedAssetFile(java.lang.String,java.lang.String,android.net.Uri,java.lang.String,android.os.Bundle,android.os.ICancellationSignal)>(r49, r50, r33, r34, r35, r45);

     label018:
        if r51 != null goto label022;

        if r1 == null goto label019;

        virtualinvoke r1.<android.os.CancellationSignal: void setRemote(android.os.ICancellationSignal)>(null);

     label019:
        goto label020;

     label020:
        if r38 == null goto label021;

        virtualinvoke r0.<android.content.ContentResolver: boolean releaseUnstableProvider(android.content.IContentProvider)>(r38);

     label021:
        return null;

     label022:
        r52 = null;

        goto label043;

     label023:
        $r20 := @caughtexception;

        r46 = $r20;

        r39 = null;

        goto label096;

     label024:
        $r10 := @caughtexception;

        r47 = $r10;

        r39 = null;

        goto label079;

     label025:
        $r22 := @caughtexception;

        r48 = null;

        goto label082;

     label026:
        $r12 := @caughtexception;

        goto label031;

     label027:
        $r18 := @caughtexception;

        r46 = $r18;

        r39 = null;

        goto label096;

     label028:
        $r31 := @caughtexception;

        r47 = $r31;

        r39 = null;

        goto label079;

     label029:
        $r27 := @caughtexception;

        r48 = null;

        goto label082;

     label030:
        $r32 := @caughtexception;

     label031:
        r53 = null;

        r54 = null;

        r55 = null;

     label032:
        virtualinvoke r0.<android.content.ContentResolver: void unstableProviderDied(android.content.IContentProvider)>(r38);

     label033:
        r53 = null;

        r54 = null;

        r55 = null;

     label034:
        r39 = virtualinvoke r0.<android.content.ContentResolver: android.content.IContentProvider acquireProvider(android.net.Uri)>(r33);

     label035:
        if r39 == null goto label063;

     label036:
        r56 = r0.<android.content.ContentResolver: java.lang.String mPackageName>;

        r57 = r0.<android.content.ContentResolver: java.lang.String mAttributionTag>;

     label037:
        r51 = interfaceinvoke r39.<android.content.IContentProvider: android.content.res.AssetFileDescriptor openTypedAssetFile(java.lang.String,java.lang.String,android.net.Uri,java.lang.String,android.os.Bundle,android.os.ICancellationSignal)>(r56, r57, r33, r34, r35, r45);

     label038:
        if r51 != null goto label042;

        if r1 == null goto label039;

        virtualinvoke r1.<android.os.CancellationSignal: void setRemote(android.os.ICancellationSignal)>(null);

     label039:
        if r39 == null goto label040;

        virtualinvoke r0.<android.content.ContentResolver: boolean releaseProvider(android.content.IContentProvider)>(r39);

     label040:
        if r38 == null goto label041;

        virtualinvoke r0.<android.content.ContentResolver: boolean releaseUnstableProvider(android.content.IContentProvider)>(r38);

     label041:
        return null;

     label042:
        r52 = r39;

     label043:
        r58 = r52;

        if r52 != null goto label045;

        r39 = r52;

        r40 = r38;

        r41 = r52;

        r42 = r38;

        r43 = r52;

        r44 = r38;

     label044:
        r58 = virtualinvoke r0.<android.content.ContentResolver: android.content.IContentProvider acquireProvider(android.net.Uri)>(r33);

     label045:
        r39 = r58;

        r40 = r38;

        r41 = r58;

        r42 = r38;

        r43 = r58;

        r44 = r38;

     label046:
        virtualinvoke r0.<android.content.ContentResolver: boolean releaseUnstableProvider(android.content.IContentProvider)>(r38);

     label047:
        r39 = r58;

        r40 = null;

        r41 = r58;

        r42 = null;

        r43 = r58;

        r44 = null;

     label048:
        r59 = new android.content.ContentResolver$ParcelFileDescriptorInner;

     label049:
        r39 = r58;

        r40 = null;

        r41 = r58;

        r42 = null;

        r43 = r58;

        r44 = null;

     label050:
        $r7 = virtualinvoke r51.<android.content.res.AssetFileDescriptor: android.os.ParcelFileDescriptor getParcelFileDescriptor()>();

        specialinvoke r59.<android.content.ContentResolver$ParcelFileDescriptorInner: void <init>(android.content.ContentResolver,android.os.ParcelFileDescriptor,android.content.IContentProvider)>(r0, $r7, r58);

     label051:
        r41 = null;

        r43 = null;

        r39 = null;

        r40 = null;

        r42 = null;

        r44 = null;

     label052:
        $r8 = new android.content.res.AssetFileDescriptor;

        $l0 = virtualinvoke r51.<android.content.res.AssetFileDescriptor: long getStartOffset()>();

        $l1 = virtualinvoke r51.<android.content.res.AssetFileDescriptor: long getDeclaredLength()>();

        $r9 = virtualinvoke r51.<android.content.res.AssetFileDescriptor: android.os.Bundle getExtras()>();

        specialinvoke $r8.<android.content.res.AssetFileDescriptor: void <init>(android.os.ParcelFileDescriptor,long,long,android.os.Bundle)>(r59, $l0, $l1, $r9);

     label053:
        if r1 == null goto label054;

        virtualinvoke r1.<android.os.CancellationSignal: void setRemote(android.os.ICancellationSignal)>(null);

     label054:
        goto label055;

     label055:
        goto label056;

     label056:
        return $r8;

     label057:
        $r24 := @caughtexception;

        r46 = $r24;

        goto label096;

     label058:
        $r28 := @caughtexception;

        r47 = $r28;

        goto label079;

     label059:
        $r19 := @caughtexception;

        r48 = r39;

        goto label082;

     label060:
        $r26 := @caughtexception;

        r46 = $r26;

        goto label096;

     label061:
        $r21 := @caughtexception;

        r47 = $r21;

        goto label079;

     label062:
        $r14 := @caughtexception;

        r48 = r39;

        goto label082;

     label063:
        r53 = r39;

        r54 = r39;

        r55 = r39;

     label064:
        r61 = new java.io.FileNotFoundException;

     label065:
        r53 = r39;

        r54 = r39;

        r55 = r39;

     label066:
        r62 = new java.lang.StringBuilder;

     label067:
        r53 = r39;

        r54 = r39;

        r55 = r39;

     label068:
        specialinvoke r62.<java.lang.StringBuilder: void <init>()>();

     label069:
        r53 = r39;

        r54 = r39;

        r55 = r39;

     label070:
        virtualinvoke r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No content provider: ");

     label071:
        r53 = r39;

        r54 = r39;

        r55 = r39;

     label072:
        virtualinvoke r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r33);

     label073:
        r53 = r39;

        r54 = r39;

        r55 = r39;

     label074:
        $r13 = virtualinvoke r62.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r61.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r13);

     label075:
        r53 = r39;

        r54 = r39;

        r55 = r39;

     label076:
        throw r61;

     label077:
        $r15 := @caughtexception;

        r46 = $r15;

        r39 = r53;

        goto label096;

     label078:
        $r30 := @caughtexception;

        r47 = $r30;

        r39 = r54;

     label079:
        r40 = r38;

     label080:
        throw r47;

     label081:
        $r25 := @caughtexception;

        r48 = r55;

     label082:
        r39 = r48;

        r40 = r38;

     label083:
        r63 = new java.io.FileNotFoundException;

     label084:
        r39 = r48;

        r40 = r38;

     label085:
        r64 = new java.lang.StringBuilder;

     label086:
        r39 = r48;

        r40 = r38;

     label087:
        specialinvoke r64.<java.lang.StringBuilder: void <init>()>();

     label088:
        r39 = r48;

        r40 = r38;

     label089:
        virtualinvoke r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed opening content provider: ");

     label090:
        r39 = r48;

        r40 = r38;

     label091:
        virtualinvoke r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r33);

     label092:
        r39 = r48;

        r40 = r38;

     label093:
        $r65 = virtualinvoke r64.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r63.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r65);

     label094:
        r39 = r48;

        r40 = r38;

     label095:
        throw r63;

     label096:
        if r1 == null goto label097;

        virtualinvoke r1.<android.os.CancellationSignal: void setRemote(android.os.ICancellationSignal)>(null);

     label097:
        if r39 == null goto label098;

        virtualinvoke r0.<android.content.ContentResolver: boolean releaseProvider(android.content.IContentProvider)>(r39);

     label098:
        if r38 == null goto label099;

        virtualinvoke r0.<android.content.ContentResolver: boolean releaseUnstableProvider(android.content.IContentProvider)>(r38);

     label099:
        throw r46;

     label100:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No content provider: ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r33);

        $r5 = new java.io.FileNotFoundException;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label101:
        $r16 := @caughtexception;

     label102:
        return null;

        catch android.os.RemoteException from label001 to label002 with label101;
        catch android.os.RemoteException from label002 to label003 with label004;
        catch android.os.RemoteException from label006 to label007 with label014;
        catch java.io.FileNotFoundException from label006 to label007 with label013;
        catch java.lang.Throwable from label006 to label007 with label012;
        catch android.os.RemoteException from label008 to label009 with label014;
        catch java.io.FileNotFoundException from label008 to label009 with label013;
        catch java.lang.Throwable from label008 to label009 with label012;
        catch android.os.RemoteException from label010 to label011 with label014;
        catch java.io.FileNotFoundException from label010 to label011 with label013;
        catch java.lang.Throwable from label010 to label011 with label012;
        catch android.os.DeadObjectException from label016 to label017 with label030;
        catch android.os.RemoteException from label016 to label017 with label029;
        catch java.io.FileNotFoundException from label016 to label017 with label028;
        catch java.lang.Throwable from label016 to label017 with label027;
        catch android.os.DeadObjectException from label017 to label018 with label026;
        catch android.os.RemoteException from label017 to label018 with label025;
        catch java.io.FileNotFoundException from label017 to label018 with label024;
        catch java.lang.Throwable from label017 to label018 with label023;
        catch android.os.RemoteException from label032 to label033 with label081;
        catch java.io.FileNotFoundException from label032 to label033 with label078;
        catch java.lang.Throwable from label032 to label033 with label077;
        catch android.os.RemoteException from label034 to label035 with label081;
        catch java.io.FileNotFoundException from label034 to label035 with label078;
        catch java.lang.Throwable from label034 to label035 with label077;
        catch android.os.RemoteException from label036 to label037 with label062;
        catch java.io.FileNotFoundException from label036 to label037 with label061;
        catch java.lang.Throwable from label036 to label037 with label060;
        catch android.os.RemoteException from label037 to label038 with label059;
        catch java.io.FileNotFoundException from label037 to label038 with label058;
        catch java.lang.Throwable from label037 to label038 with label057;
        catch android.os.RemoteException from label044 to label045 with label014;
        catch java.io.FileNotFoundException from label044 to label045 with label013;
        catch java.lang.Throwable from label044 to label045 with label012;
        catch android.os.RemoteException from label046 to label047 with label014;
        catch java.io.FileNotFoundException from label046 to label047 with label013;
        catch java.lang.Throwable from label046 to label047 with label012;
        catch android.os.RemoteException from label048 to label049 with label014;
        catch java.io.FileNotFoundException from label048 to label049 with label013;
        catch java.lang.Throwable from label048 to label049 with label012;
        catch android.os.RemoteException from label050 to label051 with label014;
        catch java.io.FileNotFoundException from label050 to label051 with label013;
        catch java.lang.Throwable from label050 to label051 with label012;
        catch android.os.RemoteException from label052 to label053 with label014;
        catch java.io.FileNotFoundException from label052 to label053 with label013;
        catch java.lang.Throwable from label052 to label053 with label012;
        catch android.os.RemoteException from label064 to label065 with label081;
        catch java.io.FileNotFoundException from label064 to label065 with label078;
        catch java.lang.Throwable from label064 to label065 with label077;
        catch android.os.RemoteException from label066 to label067 with label081;
        catch java.io.FileNotFoundException from label066 to label067 with label078;
        catch java.lang.Throwable from label066 to label067 with label077;
        catch android.os.RemoteException from label068 to label069 with label081;
        catch java.io.FileNotFoundException from label068 to label069 with label078;
        catch java.lang.Throwable from label068 to label069 with label077;
        catch android.os.RemoteException from label070 to label071 with label081;
        catch java.io.FileNotFoundException from label070 to label071 with label078;
        catch java.lang.Throwable from label070 to label071 with label077;
        catch android.os.RemoteException from label072 to label073 with label081;
        catch java.io.FileNotFoundException from label072 to label073 with label078;
        catch java.lang.Throwable from label072 to label073 with label077;
        catch android.os.RemoteException from label074 to label075 with label081;
        catch java.io.FileNotFoundException from label074 to label075 with label078;
        catch java.lang.Throwable from label074 to label075 with label077;
        catch android.os.RemoteException from label076 to label077 with label081;
        catch java.io.FileNotFoundException from label076 to label077 with label078;
        catch java.lang.Throwable from label076 to label077 with label077;
        catch java.lang.Throwable from label080 to label081 with label012;
        catch java.lang.Throwable from label083 to label084 with label012;
        catch java.lang.Throwable from label085 to label086 with label012;
        catch java.lang.Throwable from label087 to label088 with label012;
        catch java.lang.Throwable from label089 to label090 with label012;
        catch java.lang.Throwable from label091 to label092 with label012;
        catch java.lang.Throwable from label093 to label094 with label012;
        catch java.lang.Throwable from label095 to label096 with label012;
    }

    public void putCache(android.net.Uri, android.os.Bundle)
    {
        android.content.ContentResolver r0;
        android.os.Bundle r1;
        android.content.IContentService $r2;
        android.content.Context $r3, $r5;
        java.lang.String $r4;
        int $i0;
        android.os.RemoteException $r6;
        java.lang.RuntimeException $r7;
        android.net.Uri r8;

        r0 := @this: android.content.ContentResolver;

        r8 := @parameter0: android.net.Uri;

        r1 := @parameter1: android.os.Bundle;

     label1:
        $r2 = staticinvoke <android.content.ContentResolver: android.content.IContentService getContentService()>();

        $r3 = r0.<android.content.ContentResolver: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.String getPackageName()>();

        $r5 = r0.<android.content.ContentResolver: android.content.Context mContext>;

        $i0 = virtualinvoke $r5.<android.content.Context: int getUserId()>();

        interfaceinvoke $r2.<android.content.IContentService: void putCache(java.lang.String,android.net.Uri,android.os.Bundle,int)>($r4, r8, r1, $i0);

     label2:
        return;

     label3:
        $r6 := @caughtexception;

        $r7 = virtualinvoke $r6.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r7;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public final android.database.Cursor query(android.net.Uri, java.lang.String[], android.os.Bundle, android.os.CancellationSignal)
    {
        android.content.ContentResolver r0;
        android.os.CancellationSignal r1;
        android.content.IContentProvider r2, r27, r28, r31, r33, r35, r38;
        long l0, l1, $l2;
        java.lang.String $r3, $r4, $r12, $r13;
        android.content.ContentResolver$CursorWrapperInner $r5;
        android.os.RemoteException $r7, $r15, $r16, $r18, $r19, $r20;
        java.lang.Throwable $r8, $r9, $r10, $r17, r32;
        android.os.DeadObjectException $r11;
        android.net.Uri r21;
        java.lang.String[] r22;
        android.os.Bundle r23;
        android.content.ContentInterface r24, r25;
        android.database.Cursor r26, r30, r34, r36, r37;
        android.os.ICancellationSignal r29;

        r0 := @this: android.content.ContentResolver;

        r21 := @parameter0: android.net.Uri;

        r22 := @parameter1: java.lang.String[];

        r23 := @parameter2: android.os.Bundle;

        r1 := @parameter3: android.os.CancellationSignal;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r21, "uri");

     label01:
        r24 = r0.<android.content.ContentResolver: android.content.ContentInterface mWrapped>;

     label02:
        if r24 == null goto label07;

     label03:
        r25 = r0.<android.content.ContentResolver: android.content.ContentInterface mWrapped>;

     label04:
        r26 = interfaceinvoke r25.<android.content.ContentInterface: android.database.Cursor query(android.net.Uri,java.lang.String[],android.os.Bundle,android.os.CancellationSignal)>(r21, r22, r23, r1);

     label05:
        return r26;

     label06:
        $r7 := @caughtexception;

        goto label62;

     label07:
        r2 = virtualinvoke r0.<android.content.ContentResolver: android.content.IContentProvider acquireUnstableProvider(android.net.Uri)>(r21);

        if r2 != null goto label08;

        return null;

     label08:
        r27 = null;

        r28 = null;

     label09:
        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

     label10:
        if r1 == null goto label13;

     label11:
        virtualinvoke r1.<android.os.CancellationSignal: void throwIfCanceled()>();

        r29 = interfaceinvoke r2.<android.content.IContentProvider: android.os.ICancellationSignal createCancellationSignal()>();

        virtualinvoke r1.<android.os.CancellationSignal: void setRemote(android.os.ICancellationSignal)>(r29);

     label12:
        goto label14;

     label13:
        r29 = null;

     label14:
        $r4 = r0.<android.content.ContentResolver: java.lang.String mPackageName>;

        $r3 = r0.<android.content.ContentResolver: java.lang.String mAttributionTag>;

        r30 = interfaceinvoke r2.<android.content.IContentProvider: android.database.Cursor query(java.lang.String,java.lang.String,android.net.Uri,java.lang.String[],android.os.Bundle,android.os.ICancellationSignal)>($r4, $r3, r21, r22, r23, r29);

     label15:
        r31 = null;

        goto label30;

     label16:
        $r9 := @caughtexception;

        r32 = $r9;

        r33 = null;

        r34 = null;

        goto label50;

     label17:
        $r18 := @caughtexception;

        r35 = null;

        r36 = null;

        goto label56;

     label18:
        $r11 := @caughtexception;

        r27 = null;

        r28 = null;

     label19:
        virtualinvoke r0.<android.content.ContentResolver: void unstableProviderDied(android.content.IContentProvider)>(r2);

     label20:
        r27 = null;

        r28 = null;

     label21:
        r31 = virtualinvoke r0.<android.content.ContentResolver: android.content.IContentProvider acquireProvider(android.net.Uri)>(r21);

     label22:
        if r31 != null goto label27;

        goto label23;

     label23:
        if r1 == null goto label24;

        virtualinvoke r1.<android.os.CancellationSignal: void setRemote(android.os.ICancellationSignal)>(null);

     label24:
        if r2 == null goto label25;

        virtualinvoke r0.<android.content.ContentResolver: boolean releaseUnstableProvider(android.content.IContentProvider)>(r2);

     label25:
        if r31 == null goto label26;

        virtualinvoke r0.<android.content.ContentResolver: boolean releaseProvider(android.content.IContentProvider)>(r31);

     label26:
        return null;

     label27:
        r27 = r31;

        r28 = r31;

     label28:
        $r13 = r0.<android.content.ContentResolver: java.lang.String mPackageName>;

        $r12 = r0.<android.content.ContentResolver: java.lang.String mAttributionTag>;

        r37 = interfaceinvoke r31.<android.content.IContentProvider: android.database.Cursor query(java.lang.String,java.lang.String,android.net.Uri,java.lang.String[],android.os.Bundle,android.os.ICancellationSignal)>($r13, $r12, r21, r22, r23, r29);

     label29:
        r30 = r37;

     label30:
        if r30 != null goto label35;

        if r30 == null goto label31;

        interfaceinvoke r30.<android.database.Cursor: void close()>();

     label31:
        if r1 == null goto label32;

        virtualinvoke r1.<android.os.CancellationSignal: void setRemote(android.os.ICancellationSignal)>(null);

     label32:
        if r2 == null goto label33;

        virtualinvoke r0.<android.content.ContentResolver: boolean releaseUnstableProvider(android.content.IContentProvider)>(r2);

     label33:
        if r31 == null goto label34;

        virtualinvoke r0.<android.content.ContentResolver: boolean releaseProvider(android.content.IContentProvider)>(r31);

     label34:
        return null;

     label35:
        interfaceinvoke r30.<android.database.Cursor: int getCount()>();

        l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

     label36:
        $l2 = l1 - l0;

        specialinvoke r0.<android.content.ContentResolver: void maybeLogQueryToEventLog(long,android.net.Uri,java.lang.String[],android.os.Bundle)>($l2, r21, r22, r23);

     label37:
        if r31 == null goto label38;

        r38 = r31;

        goto label39;

     label38:
        r38 = virtualinvoke r0.<android.content.ContentResolver: android.content.IContentProvider acquireProvider(android.net.Uri)>(r21);

     label39:
        $r5 = new android.content.ContentResolver$CursorWrapperInner;

        specialinvoke $r5.<android.content.ContentResolver$CursorWrapperInner: void <init>(android.content.ContentResolver,android.database.Cursor,android.content.IContentProvider)>(r0, r30, r38);

     label40:
        goto label41;

     label41:
        if r1 == null goto label42;

        virtualinvoke r1.<android.os.CancellationSignal: void setRemote(android.os.ICancellationSignal)>(null);

     label42:
        if r2 == null goto label43;

        virtualinvoke r0.<android.content.ContentResolver: boolean releaseUnstableProvider(android.content.IContentProvider)>(r2);

     label43:
        goto label44;

     label44:
        return $r5;

     label45:
        $r17 := @caughtexception;

        r32 = $r17;

        r33 = r31;

        r34 = r30;

        goto label50;

     label46:
        $r15 := @caughtexception;

        r35 = r31;

        r36 = r30;

        goto label56;

     label47:
        $r8 := @caughtexception;

        r32 = $r8;

        r33 = r31;

        r34 = r30;

        goto label50;

     label48:
        $r20 := @caughtexception;

        r35 = r31;

        r36 = r30;

        goto label56;

     label49:
        $r10 := @caughtexception;

        r32 = $r10;

        r34 = null;

        r33 = r27;

     label50:
        if r34 == null goto label51;

        interfaceinvoke r34.<android.database.Cursor: void close()>();

     label51:
        if r1 == null goto label52;

        virtualinvoke r1.<android.os.CancellationSignal: void setRemote(android.os.ICancellationSignal)>(null);

     label52:
        if r2 == null goto label53;

        virtualinvoke r0.<android.content.ContentResolver: boolean releaseUnstableProvider(android.content.IContentProvider)>(r2);

     label53:
        if r33 == null goto label54;

        virtualinvoke r0.<android.content.ContentResolver: boolean releaseProvider(android.content.IContentProvider)>(r33);

     label54:
        throw r32;

     label55:
        $r16 := @caughtexception;

        r36 = null;

        r35 = r28;

     label56:
        if r36 == null goto label57;

        interfaceinvoke r36.<android.database.Cursor: void close()>();

     label57:
        if r1 == null goto label58;

        virtualinvoke r1.<android.os.CancellationSignal: void setRemote(android.os.ICancellationSignal)>(null);

     label58:
        if r2 == null goto label59;

        virtualinvoke r0.<android.content.ContentResolver: boolean releaseUnstableProvider(android.content.IContentProvider)>(r2);

     label59:
        if r35 == null goto label60;

        virtualinvoke r0.<android.content.ContentResolver: boolean releaseProvider(android.content.IContentProvider)>(r35);

     label60:
        return null;

     label61:
        $r19 := @caughtexception;

     label62:
        return null;

        catch android.os.RemoteException from label01 to label02 with label61;
        catch android.os.RemoteException from label03 to label04 with label06;
        catch android.os.RemoteException from label04 to label05 with label61;
        catch android.os.RemoteException from label09 to label10 with label55;
        catch java.lang.Throwable from label09 to label10 with label49;
        catch android.os.RemoteException from label11 to label12 with label17;
        catch java.lang.Throwable from label11 to label12 with label16;
        catch android.os.DeadObjectException from label14 to label15 with label18;
        catch android.os.RemoteException from label14 to label15 with label17;
        catch java.lang.Throwable from label14 to label15 with label16;
        catch android.os.RemoteException from label19 to label20 with label55;
        catch java.lang.Throwable from label19 to label20 with label49;
        catch android.os.RemoteException from label21 to label22 with label55;
        catch java.lang.Throwable from label21 to label22 with label49;
        catch android.os.RemoteException from label28 to label29 with label55;
        catch java.lang.Throwable from label28 to label29 with label49;
        catch android.os.RemoteException from label35 to label36 with label48;
        catch java.lang.Throwable from label35 to label36 with label47;
        catch android.os.RemoteException from label36 to label37 with label46;
        catch java.lang.Throwable from label36 to label37 with label45;
        catch android.os.RemoteException from label38 to label39 with label46;
        catch java.lang.Throwable from label38 to label39 with label45;
        catch android.os.RemoteException from label39 to label40 with label46;
        catch java.lang.Throwable from label39 to label40 with label45;
    }

    public final android.database.Cursor query(android.net.Uri, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String)
    {
        android.content.ContentResolver r0;
        android.net.Uri r1;
        java.lang.String[] r2, r4;
        java.lang.String r3, r5;
        android.database.Cursor $r6;

        r0 := @this: android.content.ContentResolver;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String[];

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String[];

        r5 := @parameter4: java.lang.String;

        $r6 = virtualinvoke r0.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)>(r1, r2, r3, r4, r5, null);

        return $r6;
    }

    public final android.database.Cursor query(android.net.Uri, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String, android.os.CancellationSignal)
    {
        android.content.ContentResolver r0;
        android.net.Uri r1;
        java.lang.String[] r2, r4;
        java.lang.String r3, r5;
        android.os.CancellationSignal r6;
        android.os.Bundle $r7;
        android.database.Cursor $r8;

        r0 := @this: android.content.ContentResolver;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String[];

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String[];

        r5 := @parameter4: java.lang.String;

        r6 := @parameter5: android.os.CancellationSignal;

        $r7 = staticinvoke <android.content.ContentResolver: android.os.Bundle createSqlQueryBundle(java.lang.String,java.lang.String[],java.lang.String)>(r3, r4, r5);

        $r8 = virtualinvoke r0.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],android.os.Bundle,android.os.CancellationSignal)>(r1, r2, $r7, r6);

        return $r8;
    }

    public final boolean refresh(android.net.Uri, android.os.Bundle, android.os.CancellationSignal)
    {
        android.content.ContentResolver r0;
        android.os.Bundle r1;
        android.content.IContentProvider r2;
        android.os.ICancellationSignal r3, r14;
        android.content.ContentInterface $r5, $r8;
        java.lang.String $r6, $r7;
        android.os.RemoteException $r9, $r11;
        java.lang.Throwable $r10;
        android.net.Uri r12;
        android.os.CancellationSignal r13;
        boolean z3, z4;

        r0 := @this: android.content.ContentResolver;

        r12 := @parameter0: android.net.Uri;

        r1 := @parameter1: android.os.Bundle;

        r13 := @parameter2: android.os.CancellationSignal;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r12, "url");

     label01:
        $r5 = r0.<android.content.ContentResolver: android.content.ContentInterface mWrapped>;

        if $r5 == null goto label03;

        $r8 = r0.<android.content.ContentResolver: android.content.ContentInterface mWrapped>;

        z3 = interfaceinvoke $r8.<android.content.ContentInterface: boolean refresh(android.net.Uri,android.os.Bundle,android.os.CancellationSignal)>(r12, r1, r13);

     label02:
        return z3;

     label03:
        r2 = virtualinvoke r0.<android.content.ContentResolver: android.content.IContentProvider acquireProvider(android.net.Uri)>(r12);

        if r2 != null goto label04;

        return 0;

     label04:
        if r13 == null goto label07;

     label05:
        virtualinvoke r13.<android.os.CancellationSignal: void throwIfCanceled()>();

        r3 = interfaceinvoke r2.<android.content.IContentProvider: android.os.ICancellationSignal createCancellationSignal()>();

        virtualinvoke r13.<android.os.CancellationSignal: void setRemote(android.os.ICancellationSignal)>(r3);

     label06:
        r14 = r3;

        goto label08;

     label07:
        r14 = null;

     label08:
        $r7 = r0.<android.content.ContentResolver: java.lang.String mPackageName>;

        $r6 = r0.<android.content.ContentResolver: java.lang.String mAttributionTag>;

        z4 = interfaceinvoke r2.<android.content.IContentProvider: boolean refresh(java.lang.String,java.lang.String,android.net.Uri,android.os.Bundle,android.os.ICancellationSignal)>($r7, $r6, r12, r1, r14);

     label09:
        virtualinvoke r0.<android.content.ContentResolver: boolean releaseProvider(android.content.IContentProvider)>(r2);

        return z4;

     label10:
        $r10 := @caughtexception;

        virtualinvoke r0.<android.content.ContentResolver: boolean releaseProvider(android.content.IContentProvider)>(r2);

        throw $r10;

     label11:
        $r11 := @caughtexception;

        virtualinvoke r0.<android.content.ContentResolver: boolean releaseProvider(android.content.IContentProvider)>(r2);

        return 0;

     label12:
        $r9 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label01 to label02 with label12;
        catch android.os.RemoteException from label05 to label06 with label11;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch android.os.RemoteException from label08 to label09 with label11;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public final void registerContentObserver(android.net.Uri, boolean, android.database.ContentObserver)
    {
        android.content.ContentResolver r0;
        android.net.Uri r1, $r5;
        boolean z0;
        android.database.ContentObserver r2;
        android.content.Context $r6;
        int $i0, $i1;

        r0 := @this: android.content.ContentResolver;

        r1 := @parameter0: android.net.Uri;

        z0 := @parameter1: boolean;

        r2 := @parameter2: android.database.ContentObserver;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, "uri");

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r2, "observer");

        $r5 = staticinvoke <android.content.ContentProvider: android.net.Uri getUriWithoutUserId(android.net.Uri)>(r1);

        $r6 = r0.<android.content.ContentResolver: android.content.Context mContext>;

        $i0 = virtualinvoke $r6.<android.content.Context: int getUserId()>();

        $i1 = staticinvoke <android.content.ContentProvider: int getUserIdFromUri(android.net.Uri,int)>(r1, $i0);

        virtualinvoke r0.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver,int)>($r5, z0, r2, $i1);

        return;
    }

    public final void registerContentObserver(android.net.Uri, boolean, android.database.ContentObserver, int)
    {
        android.content.ContentResolver r0;
        boolean z0;
        android.database.ContentObserver r1;
        int i0, $i1;
        android.content.IContentService $r2;
        android.database.IContentObserver $r3;
        android.os.RemoteException $r4;
        java.lang.RuntimeException $r5;
        android.net.Uri r6;

        r0 := @this: android.content.ContentResolver;

        r6 := @parameter0: android.net.Uri;

        z0 := @parameter1: boolean;

        r1 := @parameter2: android.database.ContentObserver;

        i0 := @parameter3: int;

     label1:
        $r2 = staticinvoke <android.content.ContentResolver: android.content.IContentService getContentService()>();

        $r3 = virtualinvoke r1.<android.database.ContentObserver: android.database.IContentObserver getContentObserver()>();

        $i1 = r0.<android.content.ContentResolver: int mTargetSdkVersion>;

        interfaceinvoke $r2.<android.content.IContentService: void registerContentObserver(android.net.Uri,boolean,android.database.IContentObserver,int,int)>(r6, z0, $r3, i0, $i1);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        $r5 = virtualinvoke $r4.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void releasePersistableUriPermission(android.net.Uri, int)
    {
        android.content.ContentResolver r0;
        int i0, $i1;
        android.app.IUriGrantsManager $r2;
        android.net.Uri $r3, r6;
        android.os.RemoteException $r4;
        java.lang.RuntimeException $r5;

        r0 := @this: android.content.ContentResolver;

        r6 := @parameter0: android.net.Uri;

        i0 := @parameter1: int;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r6, "uri");

     label1:
        $r2 = staticinvoke <android.app.UriGrantsManager: android.app.IUriGrantsManager getService()>();

        $r3 = staticinvoke <android.content.ContentProvider: android.net.Uri getUriWithoutUserId(android.net.Uri)>(r6);

        $i1 = virtualinvoke r0.<android.content.ContentResolver: int resolveUserId(android.net.Uri)>(r6);

        interfaceinvoke $r2.<android.app.IUriGrantsManager: void releasePersistableUriPermission(android.net.Uri,int,java.lang.String,int)>($r3, i0, null, $i1);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        $r5 = virtualinvoke $r4.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public abstract boolean releaseProvider(android.content.IContentProvider);

    public abstract boolean releaseUnstableProvider(android.content.IContentProvider);

    public int resolveUserId(android.net.Uri)
    {
        android.content.ContentResolver r0;
        android.net.Uri r1;
        android.content.Context $r2;
        int $i0, $i1;

        r0 := @this: android.content.ContentResolver;

        r1 := @parameter0: android.net.Uri;

        $r2 = r0.<android.content.ContentResolver: android.content.Context mContext>;

        $i0 = virtualinvoke $r2.<android.content.Context: int getUserId()>();

        $i1 = staticinvoke <android.content.ContentProvider: int getUserIdFromUri(android.net.Uri,int)>(r1, $i0);

        return $i1;
    }

    public void startSync(android.net.Uri, android.os.Bundle)
    {
        android.content.ContentResolver r0;
        android.os.Bundle r1;
        java.lang.String r2, r6;
        boolean $z0;
        android.accounts.Account $r3, r5;
        android.net.Uri r4;

        r0 := @this: android.content.ContentResolver;

        r4 := @parameter0: android.net.Uri;

        r1 := @parameter1: android.os.Bundle;

        r5 = null;

        if r1 == null goto label2;

        r2 = virtualinvoke r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("account");

        r5 = null;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z0 != 0 goto label1;

        $r3 = new android.accounts.Account;

        specialinvoke $r3.<android.accounts.Account: void <init>(java.lang.String,java.lang.String)>(r2, "com.google");

        r5 = $r3;

     label1:
        virtualinvoke r1.<android.os.Bundle: void remove(java.lang.String)>("account");

     label2:
        if r4 == null goto label3;

        r6 = virtualinvoke r4.<android.net.Uri: java.lang.String getAuthority()>();

        goto label4;

     label3:
        r6 = null;

     label4:
        staticinvoke <android.content.ContentResolver: void requestSync(android.accounts.Account,java.lang.String,android.os.Bundle)>(r5, r6, r1);

        return;
    }

    public void takePersistableUriPermission(android.net.Uri, int)
    {
        android.content.ContentResolver r0;
        int i0, $i1;
        android.app.IUriGrantsManager $r2;
        android.net.Uri $r3, r6;
        android.os.RemoteException $r4;
        java.lang.RuntimeException $r5;

        r0 := @this: android.content.ContentResolver;

        r6 := @parameter0: android.net.Uri;

        i0 := @parameter1: int;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r6, "uri");

     label1:
        $r2 = staticinvoke <android.app.UriGrantsManager: android.app.IUriGrantsManager getService()>();

        $r3 = staticinvoke <android.content.ContentProvider: android.net.Uri getUriWithoutUserId(android.net.Uri)>(r6);

        $i1 = virtualinvoke r0.<android.content.ContentResolver: int resolveUserId(android.net.Uri)>(r6);

        interfaceinvoke $r2.<android.app.IUriGrantsManager: void takePersistableUriPermission(android.net.Uri,int,java.lang.String,int)>($r3, i0, null, $i1);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        $r5 = virtualinvoke $r4.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void takePersistableUriPermission(java.lang.String, android.net.Uri, int)
    {
        android.content.ContentResolver r0;
        android.net.Uri r1, $r5;
        int i0, $i1;
        android.app.IUriGrantsManager $r4;
        android.os.RemoteException $r6;
        java.lang.RuntimeException $r7;
        java.lang.String r8;

        r0 := @this: android.content.ContentResolver;

        r8 := @parameter0: java.lang.String;

        r1 := @parameter1: android.net.Uri;

        i0 := @parameter2: int;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r8, "toPackage");

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, "uri");

     label1:
        $r4 = staticinvoke <android.app.UriGrantsManager: android.app.IUriGrantsManager getService()>();

        $r5 = staticinvoke <android.content.ContentProvider: android.net.Uri getUriWithoutUserId(android.net.Uri)>(r1);

        $i1 = virtualinvoke r0.<android.content.ContentResolver: int resolveUserId(android.net.Uri)>(r1);

        interfaceinvoke $r4.<android.app.IUriGrantsManager: void takePersistableUriPermission(android.net.Uri,int,java.lang.String,int)>($r5, i0, r8, $i1);

     label2:
        return;

     label3:
        $r6 := @caughtexception;

        $r7 = virtualinvoke $r6.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r7;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public final android.net.Uri uncanonicalize(android.net.Uri)
    {
        android.content.ContentResolver r0;
        android.content.IContentProvider r1;
        android.content.ContentInterface $r3, $r6;
        java.lang.String $r4, $r5;
        android.os.RemoteException $r7, $r9;
        java.lang.Throwable $r8;
        android.net.Uri r10, r11, r12;

        r0 := @this: android.content.ContentResolver;

        r10 := @parameter0: android.net.Uri;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r10, "url");

     label1:
        $r3 = r0.<android.content.ContentResolver: android.content.ContentInterface mWrapped>;

        if $r3 == null goto label3;

        $r6 = r0.<android.content.ContentResolver: android.content.ContentInterface mWrapped>;

        r11 = interfaceinvoke $r6.<android.content.ContentInterface: android.net.Uri uncanonicalize(android.net.Uri)>(r10);

     label2:
        return r11;

     label3:
        r1 = virtualinvoke r0.<android.content.ContentResolver: android.content.IContentProvider acquireProvider(android.net.Uri)>(r10);

        if r1 != null goto label4;

        return null;

     label4:
        $r5 = r0.<android.content.ContentResolver: java.lang.String mPackageName>;

        $r4 = r0.<android.content.ContentResolver: java.lang.String mAttributionTag>;

        r12 = interfaceinvoke r1.<android.content.IContentProvider: android.net.Uri uncanonicalize(java.lang.String,java.lang.String,android.net.Uri)>($r5, $r4, r10);

     label5:
        virtualinvoke r0.<android.content.ContentResolver: boolean releaseProvider(android.content.IContentProvider)>(r1);

        return r12;

     label6:
        $r8 := @caughtexception;

        virtualinvoke r0.<android.content.ContentResolver: boolean releaseProvider(android.content.IContentProvider)>(r1);

        throw $r8;

     label7:
        $r7 := @caughtexception;

        virtualinvoke r0.<android.content.ContentResolver: boolean releaseProvider(android.content.IContentProvider)>(r1);

        return null;

     label8:
        $r9 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label8;
        catch android.os.RemoteException from label4 to label5 with label7;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public final void unregisterContentObserver(android.database.ContentObserver)
    {
        android.content.ContentResolver r0;
        android.content.IContentService $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;
        android.database.ContentObserver r5;
        android.database.IContentObserver r6;

        r0 := @this: android.content.ContentResolver;

        r5 := @parameter0: android.database.ContentObserver;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r5, "observer");

     label1:
        r6 = virtualinvoke r5.<android.database.ContentObserver: android.database.IContentObserver releaseContentObserver()>();

     label2:
        if r6 == null goto label4;

     label3:
        $r2 = staticinvoke <android.content.ContentResolver: android.content.IContentService getContentService()>();

        interfaceinvoke $r2.<android.content.IContentService: void unregisterContentObserver(android.database.IContentObserver)>(r6);

     label4:
        return;

     label5:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public abstract void unstableProviderDied(android.content.IContentProvider);

    public final int update(android.net.Uri, android.content.ContentValues, android.os.Bundle)
    {
        android.content.ContentResolver r0;
        android.os.Bundle r1;
        long l0, $l1, $l2;
        android.content.ContentInterface $r3, r17;
        java.lang.StringBuilder $r4;
        java.lang.IllegalArgumentException $r7;
        java.lang.String $r8, $r9, $r10;
        java.lang.Throwable $r11;
        android.os.RemoteException $r12, $r13, $r14;
        android.net.Uri r15;
        android.content.ContentValues r16;
        int i3, i4;
        android.content.IContentProvider r19;

        r0 := @this: android.content.ContentResolver;

        r15 := @parameter0: android.net.Uri;

        r16 := @parameter1: android.content.ContentValues;

        r1 := @parameter2: android.os.Bundle;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r15, "uri");

     label01:
        $r3 = r0.<android.content.ContentResolver: android.content.ContentInterface mWrapped>;

        if $r3 == null goto label05;

        r17 = r0.<android.content.ContentResolver: android.content.ContentInterface mWrapped>;

     label02:
        i3 = interfaceinvoke r17.<android.content.ContentInterface: int update(android.net.Uri,android.content.ContentValues,android.os.Bundle)>(r15, r16, r1);

     label03:
        return i3;

     label04:
        $r12 := @caughtexception;

        goto label12;

     label05:
        r19 = virtualinvoke r0.<android.content.ContentResolver: android.content.IContentProvider acquireProvider(android.net.Uri)>(r15);

        if r19 == null goto label10;

     label06:
        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r10 = r0.<android.content.ContentResolver: java.lang.String mPackageName>;

        $r9 = r0.<android.content.ContentResolver: java.lang.String mAttributionTag>;

        i4 = interfaceinvoke r19.<android.content.IContentProvider: int update(java.lang.String,java.lang.String,android.net.Uri,android.content.ContentValues,android.os.Bundle)>($r10, $r9, r15, r16, r1);

        $l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l2 = $l1 - l0;

        specialinvoke r0.<android.content.ContentResolver: void maybeLogUpdateToEventLog(long,android.net.Uri,java.lang.String,java.lang.String)>($l2, r15, "update", null);

     label07:
        virtualinvoke r0.<android.content.ContentResolver: boolean releaseProvider(android.content.IContentProvider)>(r19);

        return i4;

     label08:
        $r11 := @caughtexception;

        virtualinvoke r0.<android.content.ContentResolver: boolean releaseProvider(android.content.IContentProvider)>(r19);

        throw $r11;

     label09:
        $r14 := @caughtexception;

        virtualinvoke r0.<android.content.ContentResolver: boolean releaseProvider(android.content.IContentProvider)>(r19);

        return -1;

     label10:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown URI ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r15);

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r7;

     label11:
        $r13 := @caughtexception;

     label12:
        return 0;

        catch android.os.RemoteException from label01 to label02 with label11;
        catch android.os.RemoteException from label02 to label03 with label04;
        catch android.os.RemoteException from label06 to label07 with label09;
        catch java.lang.Throwable from label06 to label07 with label08;
    }

    public final int update(android.net.Uri, android.content.ContentValues, java.lang.String, java.lang.String[])
    {
        android.content.ContentResolver r0;
        android.net.Uri r1;
        android.content.ContentValues r2;
        java.lang.String r3;
        java.lang.String[] r4;
        android.os.Bundle $r5;
        int $i0;

        r0 := @this: android.content.ContentResolver;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.content.ContentValues;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String[];

        $r5 = staticinvoke <android.content.ContentResolver: android.os.Bundle createSqlQueryBundle(java.lang.String,java.lang.String[])>(r3, r4);

        $i0 = virtualinvoke r0.<android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,android.os.Bundle)>(r1, r2, $r5);

        return $i0;
    }
}
