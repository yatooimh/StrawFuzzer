public abstract class android.content.Context extends java.lang.Object
{
    public static final java.lang.String ACCESSIBILITY_SERVICE;
    public static final java.lang.String ACCOUNT_SERVICE;
    public static final java.lang.String ACTIVITY_SERVICE;
    public static final java.lang.String ACTIVITY_TASK_SERVICE;
    public static final java.lang.String ADB_SERVICE;
    public static final java.lang.String ALARM_SERVICE;
    public static final java.lang.String APPWIDGET_SERVICE;
    public static final java.lang.String APP_BINDING_SERVICE;
    public static final java.lang.String APP_INTEGRITY_SERVICE;
    public static final java.lang.String APP_OPS_SERVICE;
    public static final java.lang.String APP_PREDICTION_SERVICE;
    public static final java.lang.String ATTENTION_SERVICE;
    public static final java.lang.String AUDIO_SERVICE;
    public static final java.lang.String AUTH_SERVICE;
    public static final java.lang.String AUTOFILL_MANAGER_SERVICE;
    public static final java.lang.String BACKUP_SERVICE;
    public static final java.lang.String BATTERY_SERVICE;
    public static final java.lang.String BATTERY_STATS_SERVICE;
    public static final int BIND_ABOVE_CLIENT;
    public static final int BIND_ADJUST_WITH_ACTIVITY;
    public static final int BIND_ALLOW_BACKGROUND_ACTIVITY_STARTS;
    public static final int BIND_ALLOW_INSTANT;
    public static final int BIND_ALLOW_OOM_MANAGEMENT;
    public static final int BIND_ALLOW_WHITELIST_MANAGEMENT;
    public static final int BIND_AUTO_CREATE;
    public static final int BIND_DEBUG_UNBIND;
    public static final int BIND_EXTERNAL_SERVICE;
    public static final int BIND_FOREGROUND_SERVICE;
    public static final int BIND_FOREGROUND_SERVICE_WHILE_AWAKE;
    public static final int BIND_IMPORTANT;
    public static final int BIND_IMPORTANT_BACKGROUND;
    public static final int BIND_INCLUDE_CAPABILITIES;
    public static final int BIND_NOT_FOREGROUND;
    public static final int BIND_NOT_PERCEPTIBLE;
    public static final int BIND_NOT_VISIBLE;
    public static final int BIND_REDUCTION_FLAGS;
    public static final int BIND_RESTRICT_ASSOCIATIONS;
    public static final int BIND_SCHEDULE_LIKE_TOP_APP;
    public static final int BIND_SHOWING_UI;
    public static final int BIND_TREAT_LIKE_ACTIVITY;
    public static final int BIND_VISIBLE;
    public static final int BIND_WAIVE_PRIORITY;
    public static final java.lang.String BIOMETRIC_SERVICE;
    public static final java.lang.String BLOB_STORE_SERVICE;
    public static final java.lang.String BLUETOOTH_SERVICE;
    public static final java.lang.String BUGREPORT_SERVICE;
    public static final java.lang.String CAMERA_SERVICE;
    public static final java.lang.String CAPTIONING_SERVICE;
    public static final java.lang.String CARRIER_CONFIG_SERVICE;
    public static final java.lang.String CLIPBOARD_SERVICE;
    public static final java.lang.String COLOR_DISPLAY_SERVICE;
    public static final java.lang.String COMPANION_DEVICE_SERVICE;
    public static final java.lang.String CONNECTIVITY_DIAGNOSTICS_SERVICE;
    public static final java.lang.String CONNECTIVITY_SERVICE;
    public static final java.lang.String CONSUMER_IR_SERVICE;
    public static final java.lang.String CONTENT_CAPTURE_MANAGER_SERVICE;
    public static final java.lang.String CONTENT_SUGGESTIONS_SERVICE;
    public static final java.lang.String CONTEXTHUB_SERVICE;
    public static final int CONTEXT_CREDENTIAL_PROTECTED_STORAGE;
    public static final int CONTEXT_DEVICE_PROTECTED_STORAGE;
    public static final int CONTEXT_IGNORE_SECURITY;
    public static final int CONTEXT_INCLUDE_CODE;
    public static final int CONTEXT_REGISTER_PACKAGE;
    public static final int CONTEXT_RESTRICTED;
    public static final java.lang.String COUNTRY_DETECTOR;
    public static final java.lang.String CROSS_PROFILE_APPS_SERVICE;
    public static final java.lang.String DATA_LOADER_MANAGER_SERVICE;
    public static final java.lang.String DEVICE_IDENTIFIERS_SERVICE;
    public static final java.lang.String DEVICE_IDLE_CONTROLLER;
    public static final java.lang.String DEVICE_POLICY_SERVICE;
    public static final java.lang.String DISPLAY_SERVICE;
    public static final java.lang.String DOWNLOAD_SERVICE;
    public static final java.lang.String DREAM_SERVICE;
    public static final java.lang.String DROPBOX_SERVICE;
    public static final java.lang.String DYNAMIC_SYSTEM_SERVICE;
    public static final java.lang.String ETHERNET_SERVICE;
    public static final java.lang.String EUICC_CARD_SERVICE;
    public static final java.lang.String EUICC_SERVICE;
    public static final java.lang.String FACE_SERVICE;
    public static final java.lang.String FILE_INTEGRITY_SERVICE;
    public static final java.lang.String FINGERPRINT_SERVICE;
    public static final java.lang.String GATEKEEPER_SERVICE;
    public static final java.lang.String HARDWARE_PROPERTIES_SERVICE;
    public static final java.lang.String HDMI_CONTROL_SERVICE;
    public static final java.lang.String IDMAP_SERVICE;
    public static final java.lang.String INCIDENT_COMPANION_SERVICE;
    public static final java.lang.String INCIDENT_SERVICE;
    public static final java.lang.String INCREMENTAL_SERVICE;
    public static final java.lang.String INPUT_METHOD_SERVICE;
    public static final java.lang.String INPUT_SERVICE;
    public static final java.lang.String IPSEC_SERVICE;
    public static final java.lang.String IRIS_SERVICE;
    public static final java.lang.String JOB_SCHEDULER_SERVICE;
    public static final java.lang.String KEYGUARD_SERVICE;
    public static final java.lang.String LAUNCHER_APPS_SERVICE;
    public static final java.lang.String LAYOUT_INFLATER_SERVICE;
    public static final java.lang.String LIGHTS_SERVICE;
    public static final java.lang.String LOCATION_SERVICE;
    public static final java.lang.String LOWPAN_SERVICE;
    public static final java.lang.String MEDIA_PROJECTION_SERVICE;
    public static final java.lang.String MEDIA_ROUTER_SERVICE;
    public static final java.lang.String MEDIA_SESSION_SERVICE;
    public static final java.lang.String MIDI_SERVICE;
    public static final java.lang.String MMS_SERVICE;
    public static final int MODE_APPEND;
    public static final int MODE_ENABLE_WRITE_AHEAD_LOGGING;
    public static final int MODE_MULTI_PROCESS;
    public static final int MODE_NO_LOCALIZED_COLLATORS;
    public static final int MODE_PRIVATE;
    public static final int MODE_WORLD_READABLE;
    public static final int MODE_WORLD_WRITEABLE;
    public static final java.lang.String NETD_SERVICE;
    public static final java.lang.String NETWORKMANAGEMENT_SERVICE;
    public static final java.lang.String NETWORK_POLICY_SERVICE;
    public static final java.lang.String NETWORK_SCORE_SERVICE;
    public static final java.lang.String NETWORK_STACK_SERVICE;
    public static final java.lang.String NETWORK_STATS_SERVICE;
    public static final java.lang.String NETWORK_WATCHLIST_SERVICE;
    public static final java.lang.String NFC_SERVICE;
    public static final java.lang.String NOTIFICATION_SERVICE;
    public static final java.lang.String NSD_SERVICE;
    public static final java.lang.String OEM_LOCK_SERVICE;
    public static final java.lang.String OVERLAY_SERVICE;
    public static final java.lang.String PERMISSION_CONTROLLER_SERVICE;
    public static final java.lang.String PERMISSION_SERVICE;
    public static final java.lang.String PERSISTENT_DATA_BLOCK_SERVICE;
    public static final java.lang.String PLATFORM_COMPAT_NATIVE_SERVICE;
    public static final java.lang.String PLATFORM_COMPAT_SERVICE;
    public static final java.lang.String POWER_SERVICE;
    public static final java.lang.String POWER_WHITELIST_MANAGER;
    public static final java.lang.String PRINT_SERVICE;
    public static final java.lang.String RADIO_SERVICE;
    public static final int RECEIVER_VISIBLE_TO_INSTANT_APPS;
    public static final java.lang.String RECOVERY_SERVICE;
    public static final java.lang.String RESTRICTIONS_SERVICE;
    public static final java.lang.String ROLE_CONTROLLER_SERVICE;
    public static final java.lang.String ROLE_SERVICE;
    public static final java.lang.String ROLLBACK_SERVICE;
    public static final java.lang.String SEARCH_SERVICE;
    public static final java.lang.String SECURE_ELEMENT_SERVICE;
    public static final java.lang.String SENSOR_PRIVACY_SERVICE;
    public static final java.lang.String SENSOR_SERVICE;
    public static final java.lang.String SERIAL_SERVICE;
    public static final java.lang.String SHORTCUT_SERVICE;
    public static final java.lang.String SIP_SERVICE;
    public static final java.lang.String SLICE_SERVICE;
    public static final java.lang.String SOUND_TRIGGER_MIDDLEWARE_SERVICE;
    public static final java.lang.String SOUND_TRIGGER_SERVICE;
    public static final java.lang.String STATS_COMPANION_SERVICE;
    public static final java.lang.String STATS_MANAGER;
    public static final java.lang.String STATS_MANAGER_SERVICE;
    public static final java.lang.String STATUS_BAR_SERVICE;
    public static final java.lang.String STORAGE_SERVICE;
    public static final java.lang.String STORAGE_STATS_SERVICE;
    public static final java.lang.String SYSTEM_CONFIG_SERVICE;
    public static final java.lang.String SYSTEM_HEALTH_SERVICE;
    public static final java.lang.String SYSTEM_UPDATE_SERVICE;
    public static final java.lang.String TELECOM_SERVICE;
    public static final java.lang.String TELEPHONY_IMS_SERVICE;
    public static final java.lang.String TELEPHONY_RCS_MESSAGE_SERVICE;
    public static final java.lang.String TELEPHONY_REGISTRY_SERVICE;
    public static final java.lang.String TELEPHONY_SERVICE;
    public static final java.lang.String TELEPHONY_SUBSCRIPTION_SERVICE;
    public static final java.lang.String TEST_NETWORK_SERVICE;
    public static final java.lang.String TETHERING_SERVICE;
    public static final java.lang.String TEXT_CLASSIFICATION_SERVICE;
    public static final java.lang.String TEXT_SERVICES_MANAGER_SERVICE;
    public static final java.lang.String THERMAL_SERVICE;
    public static final java.lang.String TIME_DETECTOR_SERVICE;
    public static final java.lang.String TIME_ZONE_DETECTOR_SERVICE;
    public static final java.lang.String TIME_ZONE_RULES_MANAGER_SERVICE;
    public static final java.lang.String TRUST_SERVICE;
    public static final java.lang.String TV_INPUT_SERVICE;
    public static final java.lang.String TV_TUNER_RESOURCE_MGR_SERVICE;
    public static final java.lang.String UI_MODE_SERVICE;
    public static final java.lang.String UPDATE_LOCK_SERVICE;
    public static final java.lang.String URI_GRANTS_SERVICE;
    public static final java.lang.String USAGE_STATS_SERVICE;
    public static final java.lang.String USB_SERVICE;
    public static final java.lang.String USER_SERVICE;
    public static final java.lang.String VIBRATOR_SERVICE;
    public static final java.lang.String VOICE_INTERACTION_MANAGER_SERVICE;
    public static final java.lang.String VPN_MANAGEMENT_SERVICE;
    public static final java.lang.String VR_SERVICE;
    public static final java.lang.String WALLPAPER_SERVICE;
    public static final java.lang.String WIFI_AWARE_SERVICE;
    public static final java.lang.String WIFI_NL80211_SERVICE;
    public static final java.lang.String WIFI_P2P_SERVICE;
    public static final java.lang.String WIFI_RTT_RANGING_SERVICE;
    public static final java.lang.String WIFI_RTT_SERVICE;
    public static final java.lang.String WIFI_SCANNING_SERVICE;
    public static final java.lang.String WIFI_SERVICE;
    public static final java.lang.String WINDOW_SERVICE;
    private static int sLastAutofillId;

    static void <clinit>()
    {
        <android.content.Context: java.lang.String WINDOW_SERVICE> = "window";

        <android.content.Context: java.lang.String WIFI_SERVICE> = "wifi";

        <android.content.Context: java.lang.String WIFI_SCANNING_SERVICE> = "wifiscanner";

        <android.content.Context: java.lang.String WIFI_RTT_SERVICE> = "rttmanager";

        <android.content.Context: java.lang.String WIFI_RTT_RANGING_SERVICE> = "wifirtt";

        <android.content.Context: java.lang.String WIFI_P2P_SERVICE> = "wifip2p";

        <android.content.Context: java.lang.String WIFI_NL80211_SERVICE> = "wifinl80211";

        <android.content.Context: java.lang.String WIFI_AWARE_SERVICE> = "wifiaware";

        <android.content.Context: java.lang.String WALLPAPER_SERVICE> = "wallpaper";

        <android.content.Context: java.lang.String VR_SERVICE> = "vrmanager";

        <android.content.Context: java.lang.String VPN_MANAGEMENT_SERVICE> = "vpn_management";

        <android.content.Context: java.lang.String VOICE_INTERACTION_MANAGER_SERVICE> = "voiceinteraction";

        <android.content.Context: java.lang.String VIBRATOR_SERVICE> = "vibrator";

        <android.content.Context: java.lang.String USER_SERVICE> = "user";

        <android.content.Context: java.lang.String USB_SERVICE> = "usb";

        <android.content.Context: java.lang.String USAGE_STATS_SERVICE> = "usagestats";

        <android.content.Context: java.lang.String URI_GRANTS_SERVICE> = "uri_grants";

        <android.content.Context: java.lang.String UPDATE_LOCK_SERVICE> = "updatelock";

        <android.content.Context: java.lang.String UI_MODE_SERVICE> = "uimode";

        <android.content.Context: java.lang.String TV_TUNER_RESOURCE_MGR_SERVICE> = "tv_tuner_resource_mgr";

        <android.content.Context: java.lang.String TV_INPUT_SERVICE> = "tv_input";

        <android.content.Context: java.lang.String TRUST_SERVICE> = "trust";

        <android.content.Context: java.lang.String TIME_ZONE_RULES_MANAGER_SERVICE> = "timezone";

        <android.content.Context: java.lang.String TIME_ZONE_DETECTOR_SERVICE> = "time_zone_detector";

        <android.content.Context: java.lang.String TIME_DETECTOR_SERVICE> = "time_detector";

        <android.content.Context: java.lang.String THERMAL_SERVICE> = "thermalservice";

        <android.content.Context: java.lang.String TEXT_SERVICES_MANAGER_SERVICE> = "textservices";

        <android.content.Context: java.lang.String TEXT_CLASSIFICATION_SERVICE> = "textclassification";

        <android.content.Context: java.lang.String TETHERING_SERVICE> = "tethering";

        <android.content.Context: java.lang.String TEST_NETWORK_SERVICE> = "test_network";

        <android.content.Context: java.lang.String TELEPHONY_SUBSCRIPTION_SERVICE> = "telephony_subscription_service";

        <android.content.Context: java.lang.String TELEPHONY_SERVICE> = "phone";

        <android.content.Context: java.lang.String TELEPHONY_REGISTRY_SERVICE> = "telephony_registry";

        <android.content.Context: java.lang.String TELEPHONY_RCS_MESSAGE_SERVICE> = "ircsmessage";

        <android.content.Context: java.lang.String TELEPHONY_IMS_SERVICE> = "telephony_ims";

        <android.content.Context: java.lang.String TELECOM_SERVICE> = "telecom";

        <android.content.Context: java.lang.String SYSTEM_UPDATE_SERVICE> = "system_update";

        <android.content.Context: java.lang.String SYSTEM_HEALTH_SERVICE> = "systemhealth";

        <android.content.Context: java.lang.String SYSTEM_CONFIG_SERVICE> = "system_config";

        <android.content.Context: java.lang.String STORAGE_STATS_SERVICE> = "storagestats";

        <android.content.Context: java.lang.String STORAGE_SERVICE> = "storage";

        <android.content.Context: java.lang.String STATUS_BAR_SERVICE> = "statusbar";

        <android.content.Context: java.lang.String STATS_MANAGER_SERVICE> = "statsmanager";

        <android.content.Context: java.lang.String STATS_MANAGER> = "stats";

        <android.content.Context: java.lang.String STATS_COMPANION_SERVICE> = "statscompanion";

        <android.content.Context: java.lang.String SOUND_TRIGGER_SERVICE> = "soundtrigger";

        <android.content.Context: java.lang.String SOUND_TRIGGER_MIDDLEWARE_SERVICE> = "soundtrigger_middleware";

        <android.content.Context: java.lang.String SLICE_SERVICE> = "slice";

        <android.content.Context: java.lang.String SIP_SERVICE> = "sip";

        <android.content.Context: java.lang.String SHORTCUT_SERVICE> = "shortcut";

        <android.content.Context: java.lang.String SERIAL_SERVICE> = "serial";

        <android.content.Context: java.lang.String SENSOR_SERVICE> = "sensor";

        <android.content.Context: java.lang.String SENSOR_PRIVACY_SERVICE> = "sensor_privacy";

        <android.content.Context: java.lang.String SECURE_ELEMENT_SERVICE> = "secure_element";

        <android.content.Context: java.lang.String SEARCH_SERVICE> = "search";

        <android.content.Context: java.lang.String ROLLBACK_SERVICE> = "rollback";

        <android.content.Context: java.lang.String ROLE_SERVICE> = "role";

        <android.content.Context: java.lang.String ROLE_CONTROLLER_SERVICE> = "role_controller";

        <android.content.Context: java.lang.String RESTRICTIONS_SERVICE> = "restrictions";

        <android.content.Context: java.lang.String RECOVERY_SERVICE> = "recovery";

        <android.content.Context: int RECEIVER_VISIBLE_TO_INSTANT_APPS> = 1;

        <android.content.Context: java.lang.String RADIO_SERVICE> = "broadcastradio";

        <android.content.Context: java.lang.String PRINT_SERVICE> = "print";

        <android.content.Context: java.lang.String POWER_WHITELIST_MANAGER> = "power_whitelist";

        <android.content.Context: java.lang.String POWER_SERVICE> = "power";

        <android.content.Context: java.lang.String PLATFORM_COMPAT_SERVICE> = "platform_compat";

        <android.content.Context: java.lang.String PLATFORM_COMPAT_NATIVE_SERVICE> = "platform_compat_native";

        <android.content.Context: java.lang.String PERSISTENT_DATA_BLOCK_SERVICE> = "persistent_data_block";

        <android.content.Context: java.lang.String PERMISSION_SERVICE> = "permission";

        <android.content.Context: java.lang.String PERMISSION_CONTROLLER_SERVICE> = "permission_controller";

        <android.content.Context: java.lang.String OVERLAY_SERVICE> = "overlay";

        <android.content.Context: java.lang.String OEM_LOCK_SERVICE> = "oem_lock";

        <android.content.Context: java.lang.String NSD_SERVICE> = "servicediscovery";

        <android.content.Context: java.lang.String NOTIFICATION_SERVICE> = "notification";

        <android.content.Context: java.lang.String NFC_SERVICE> = "nfc";

        <android.content.Context: java.lang.String NETWORK_WATCHLIST_SERVICE> = "network_watchlist";

        <android.content.Context: java.lang.String NETWORK_STATS_SERVICE> = "netstats";

        <android.content.Context: java.lang.String NETWORK_STACK_SERVICE> = "network_stack";

        <android.content.Context: java.lang.String NETWORK_SCORE_SERVICE> = "network_score";

        <android.content.Context: java.lang.String NETWORK_POLICY_SERVICE> = "netpolicy";

        <android.content.Context: java.lang.String NETWORKMANAGEMENT_SERVICE> = "network_management";

        <android.content.Context: java.lang.String NETD_SERVICE> = "netd";

        <android.content.Context: int MODE_WORLD_WRITEABLE> = 2;

        <android.content.Context: int MODE_WORLD_READABLE> = 1;

        <android.content.Context: int MODE_PRIVATE> = 0;

        <android.content.Context: int MODE_NO_LOCALIZED_COLLATORS> = 16;

        <android.content.Context: int MODE_MULTI_PROCESS> = 4;

        <android.content.Context: int MODE_ENABLE_WRITE_AHEAD_LOGGING> = 8;

        <android.content.Context: int MODE_APPEND> = 32768;

        <android.content.Context: java.lang.String MMS_SERVICE> = "mms";

        <android.content.Context: java.lang.String MIDI_SERVICE> = "midi";

        <android.content.Context: java.lang.String MEDIA_SESSION_SERVICE> = "media_session";

        <android.content.Context: java.lang.String MEDIA_ROUTER_SERVICE> = "media_router";

        <android.content.Context: java.lang.String MEDIA_PROJECTION_SERVICE> = "media_projection";

        <android.content.Context: java.lang.String LOWPAN_SERVICE> = "lowpan";

        <android.content.Context: java.lang.String LOCATION_SERVICE> = "location";

        <android.content.Context: java.lang.String LIGHTS_SERVICE> = "lights";

        <android.content.Context: java.lang.String LAYOUT_INFLATER_SERVICE> = "layout_inflater";

        <android.content.Context: java.lang.String LAUNCHER_APPS_SERVICE> = "launcherapps";

        <android.content.Context: java.lang.String KEYGUARD_SERVICE> = "keyguard";

        <android.content.Context: java.lang.String JOB_SCHEDULER_SERVICE> = "jobscheduler";

        <android.content.Context: java.lang.String IRIS_SERVICE> = "iris";

        <android.content.Context: java.lang.String IPSEC_SERVICE> = "ipsec";

        <android.content.Context: java.lang.String INPUT_SERVICE> = "input";

        <android.content.Context: java.lang.String INPUT_METHOD_SERVICE> = "input_method";

        <android.content.Context: java.lang.String INCREMENTAL_SERVICE> = "incremental";

        <android.content.Context: java.lang.String INCIDENT_SERVICE> = "incident";

        <android.content.Context: java.lang.String INCIDENT_COMPANION_SERVICE> = "incidentcompanion";

        <android.content.Context: java.lang.String IDMAP_SERVICE> = "idmap";

        <android.content.Context: java.lang.String HDMI_CONTROL_SERVICE> = "hdmi_control";

        <android.content.Context: java.lang.String HARDWARE_PROPERTIES_SERVICE> = "hardware_properties";

        <android.content.Context: java.lang.String GATEKEEPER_SERVICE> = "android.service.gatekeeper.IGateKeeperService";

        <android.content.Context: java.lang.String FINGERPRINT_SERVICE> = "fingerprint";

        <android.content.Context: java.lang.String FILE_INTEGRITY_SERVICE> = "file_integrity";

        <android.content.Context: java.lang.String FACE_SERVICE> = "face";

        <android.content.Context: java.lang.String EUICC_SERVICE> = "euicc";

        <android.content.Context: java.lang.String EUICC_CARD_SERVICE> = "euicc_card";

        <android.content.Context: java.lang.String ETHERNET_SERVICE> = "ethernet";

        <android.content.Context: java.lang.String DYNAMIC_SYSTEM_SERVICE> = "dynamic_system";

        <android.content.Context: java.lang.String DROPBOX_SERVICE> = "dropbox";

        <android.content.Context: java.lang.String DREAM_SERVICE> = "dream";

        <android.content.Context: java.lang.String DOWNLOAD_SERVICE> = "download";

        <android.content.Context: java.lang.String DISPLAY_SERVICE> = "display";

        <android.content.Context: java.lang.String DEVICE_POLICY_SERVICE> = "device_policy";

        <android.content.Context: java.lang.String DEVICE_IDLE_CONTROLLER> = "deviceidle";

        <android.content.Context: java.lang.String DEVICE_IDENTIFIERS_SERVICE> = "device_identifiers";

        <android.content.Context: java.lang.String DATA_LOADER_MANAGER_SERVICE> = "dataloader_manager";

        <android.content.Context: java.lang.String CROSS_PROFILE_APPS_SERVICE> = "crossprofileapps";

        <android.content.Context: java.lang.String COUNTRY_DETECTOR> = "country_detector";

        <android.content.Context: int CONTEXT_RESTRICTED> = 4;

        <android.content.Context: int CONTEXT_REGISTER_PACKAGE> = 1073741824;

        <android.content.Context: int CONTEXT_INCLUDE_CODE> = 1;

        <android.content.Context: int CONTEXT_IGNORE_SECURITY> = 2;

        <android.content.Context: int CONTEXT_DEVICE_PROTECTED_STORAGE> = 8;

        <android.content.Context: int CONTEXT_CREDENTIAL_PROTECTED_STORAGE> = 16;

        <android.content.Context: java.lang.String CONTEXTHUB_SERVICE> = "contexthub";

        <android.content.Context: java.lang.String CONTENT_SUGGESTIONS_SERVICE> = "content_suggestions";

        <android.content.Context: java.lang.String CONTENT_CAPTURE_MANAGER_SERVICE> = "content_capture";

        <android.content.Context: java.lang.String CONSUMER_IR_SERVICE> = "consumer_ir";

        <android.content.Context: java.lang.String CONNECTIVITY_SERVICE> = "connectivity";

        <android.content.Context: java.lang.String CONNECTIVITY_DIAGNOSTICS_SERVICE> = "connectivity_diagnostics";

        <android.content.Context: java.lang.String COMPANION_DEVICE_SERVICE> = "companiondevice";

        <android.content.Context: java.lang.String COLOR_DISPLAY_SERVICE> = "color_display";

        <android.content.Context: java.lang.String CLIPBOARD_SERVICE> = "clipboard";

        <android.content.Context: java.lang.String CARRIER_CONFIG_SERVICE> = "carrier_config";

        <android.content.Context: java.lang.String CAPTIONING_SERVICE> = "captioning";

        <android.content.Context: java.lang.String CAMERA_SERVICE> = "camera";

        <android.content.Context: java.lang.String BUGREPORT_SERVICE> = "bugreport";

        <android.content.Context: java.lang.String BLUETOOTH_SERVICE> = "bluetooth";

        <android.content.Context: java.lang.String BLOB_STORE_SERVICE> = "blob_store";

        <android.content.Context: java.lang.String BIOMETRIC_SERVICE> = "biometric";

        <android.content.Context: int BIND_WAIVE_PRIORITY> = 32;

        <android.content.Context: int BIND_VISIBLE> = 268435456;

        <android.content.Context: int BIND_TREAT_LIKE_ACTIVITY> = 134217728;

        <android.content.Context: int BIND_SHOWING_UI> = 536870912;

        <android.content.Context: int BIND_SCHEDULE_LIKE_TOP_APP> = 524288;

        <android.content.Context: int BIND_RESTRICT_ASSOCIATIONS> = 2097152;

        <android.content.Context: int BIND_REDUCTION_FLAGS> = 1073742128;

        <android.content.Context: int BIND_NOT_VISIBLE> = 1073741824;

        <android.content.Context: int BIND_NOT_PERCEPTIBLE> = 256;

        <android.content.Context: int BIND_NOT_FOREGROUND> = 4;

        <android.content.Context: int BIND_INCLUDE_CAPABILITIES> = 4096;

        <android.content.Context: int BIND_IMPORTANT_BACKGROUND> = 8388608;

        <android.content.Context: int BIND_IMPORTANT> = 64;

        <android.content.Context: int BIND_FOREGROUND_SERVICE_WHILE_AWAKE> = 33554432;

        <android.content.Context: int BIND_FOREGROUND_SERVICE> = 67108864;

        <android.content.Context: int BIND_EXTERNAL_SERVICE> = -2147483648;

        <android.content.Context: int BIND_DEBUG_UNBIND> = 2;

        <android.content.Context: int BIND_AUTO_CREATE> = 1;

        <android.content.Context: int BIND_ALLOW_WHITELIST_MANAGEMENT> = 16777216;

        <android.content.Context: int BIND_ALLOW_OOM_MANAGEMENT> = 16;

        <android.content.Context: int BIND_ALLOW_INSTANT> = 4194304;

        <android.content.Context: int BIND_ALLOW_BACKGROUND_ACTIVITY_STARTS> = 1048576;

        <android.content.Context: int BIND_ADJUST_WITH_ACTIVITY> = 128;

        <android.content.Context: int BIND_ABOVE_CLIENT> = 8;

        <android.content.Context: java.lang.String BATTERY_STATS_SERVICE> = "batterystats";

        <android.content.Context: java.lang.String BATTERY_SERVICE> = "batterymanager";

        <android.content.Context: java.lang.String BACKUP_SERVICE> = "backup";

        <android.content.Context: java.lang.String AUTOFILL_MANAGER_SERVICE> = "autofill";

        <android.content.Context: java.lang.String AUTH_SERVICE> = "auth";

        <android.content.Context: java.lang.String AUDIO_SERVICE> = "audio";

        <android.content.Context: java.lang.String ATTENTION_SERVICE> = "attention";

        <android.content.Context: java.lang.String APP_PREDICTION_SERVICE> = "app_prediction";

        <android.content.Context: java.lang.String APP_OPS_SERVICE> = "appops";

        <android.content.Context: java.lang.String APP_INTEGRITY_SERVICE> = "app_integrity";

        <android.content.Context: java.lang.String APP_BINDING_SERVICE> = "app_binding";

        <android.content.Context: java.lang.String APPWIDGET_SERVICE> = "appwidget";

        <android.content.Context: java.lang.String ALARM_SERVICE> = "alarm";

        <android.content.Context: java.lang.String ADB_SERVICE> = "adb";

        <android.content.Context: java.lang.String ACTIVITY_TASK_SERVICE> = "activity_task";

        <android.content.Context: java.lang.String ACTIVITY_SERVICE> = "activity";

        <android.content.Context: java.lang.String ACCOUNT_SERVICE> = "account";

        <android.content.Context: java.lang.String ACCESSIBILITY_SERVICE> = "accessibility";

        <android.content.Context: int sLastAutofillId> = -1;

        return;
    }

    public void <init>()
    {
        android.content.Context r0;

        r0 := @this: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void assertRuntimeOverlayThemable()
    {
        android.content.Context r0;
        android.content.res.Resources $r1, $r2;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: android.content.Context;

        $r1 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r2 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>();

        if $r1 == $r2 goto label1;

        return;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Non-UI context used to display UI; get a UI context from ActivityThread#getSystemUiContext()");

        throw $r3;
    }

    public boolean bindIsolatedService(android.content.Intent, int, java.lang.String, java.util.concurrent.Executor, android.content.ServiceConnection)
    {
        android.content.Context r0;
        android.content.Intent r1;
        int i0;
        java.lang.String r2;
        java.util.concurrent.Executor r3;
        android.content.ServiceConnection r4;
        java.lang.RuntimeException $r5;

        r0 := @this: android.content.Context;

        r1 := @parameter0: android.content.Intent;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.util.concurrent.Executor;

        r4 := @parameter4: android.content.ServiceConnection;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>("Not implemented. Must override in a subclass.");

        throw $r5;
    }

    public boolean bindService(android.content.Intent, int, java.util.concurrent.Executor, android.content.ServiceConnection)
    {
        android.content.Context r0;
        android.content.Intent r1;
        int i0;
        java.util.concurrent.Executor r2;
        android.content.ServiceConnection r3;
        java.lang.RuntimeException $r4;

        r0 := @this: android.content.Context;

        r1 := @parameter0: android.content.Intent;

        i0 := @parameter1: int;

        r2 := @parameter2: java.util.concurrent.Executor;

        r3 := @parameter3: android.content.ServiceConnection;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("Not implemented. Must override in a subclass.");

        throw $r4;
    }

    public abstract boolean bindService(android.content.Intent, android.content.ServiceConnection, int);

    public boolean bindServiceAsUser(android.content.Intent, android.content.ServiceConnection, int, android.os.Handler, android.os.UserHandle)
    {
        android.content.Context r0;
        android.content.Intent r1;
        android.content.ServiceConnection r2;
        int i0;
        android.os.Handler r3;
        android.os.UserHandle r4;
        java.lang.RuntimeException $r5;

        r0 := @this: android.content.Context;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: android.content.ServiceConnection;

        i0 := @parameter2: int;

        r3 := @parameter3: android.os.Handler;

        r4 := @parameter4: android.os.UserHandle;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>("Not implemented. Must override in a subclass.");

        throw $r5;
    }

    public boolean bindServiceAsUser(android.content.Intent, android.content.ServiceConnection, int, android.os.UserHandle)
    {
        android.content.Context r0;
        android.content.Intent r1;
        android.content.ServiceConnection r2;
        int i0;
        android.os.UserHandle r3;
        java.lang.RuntimeException $r4;

        r0 := @this: android.content.Context;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: android.content.ServiceConnection;

        i0 := @parameter2: int;

        r3 := @parameter3: android.os.UserHandle;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("Not implemented. Must override in a subclass.");

        throw $r4;
    }

    public abstract boolean canLoadUnsafeResources();

    public boolean canStartActivityForResult()
    {
        android.content.Context r0;

        r0 := @this: android.content.Context;

        return 0;
    }

    public abstract int checkCallingOrSelfPermission(java.lang.String);

    public abstract int checkCallingOrSelfUriPermission(android.net.Uri, int);

    public abstract int checkCallingPermission(java.lang.String);

    public abstract int checkCallingUriPermission(android.net.Uri, int);

    public abstract int checkPermission(java.lang.String, int, int);

    public abstract int checkPermission(java.lang.String, int, int, android.os.IBinder);

    public abstract int checkSelfPermission(java.lang.String);

    public abstract int checkUriPermission(android.net.Uri, int, int, int);

    public abstract int checkUriPermission(android.net.Uri, int, int, int, android.os.IBinder);

    public abstract int checkUriPermission(android.net.Uri, java.lang.String, java.lang.String, int, int, int);

    public abstract void clearWallpaper() throws java.io.IOException;

    public abstract android.content.Context createApplicationContext(android.content.pm.ApplicationInfo, int) throws android.content.pm.PackageManager$NameNotFoundException;

    public android.content.Context createAttributionContext(java.lang.String)
    {
        android.content.Context r0;
        java.lang.String r1;
        java.lang.RuntimeException $r2;

        r0 := @this: android.content.Context;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Not implemented. Must override in a subclass.");

        throw $r2;
    }

    public abstract android.content.Context createConfigurationContext(android.content.res.Configuration);

    public android.content.Context createContextAsUser(android.os.UserHandle, int)
    {
        android.content.Context r0;
        android.os.UserHandle r1;
        int i0;
        boolean $z0;
        java.lang.IllegalStateException $r2;

        r0 := @this: android.content.Context;

        r1 := @parameter0: android.os.UserHandle;

        i0 := @parameter1: int;

        $z0 = <android.os.Build: boolean IS_ENG>;

        if $z0 != 0 goto label1;

        return r0;

     label1:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("createContextAsUser not overridden!");

        throw $r2;
    }

    public abstract android.content.Context createContextForSplit(java.lang.String) throws android.content.pm.PackageManager$NameNotFoundException;

    public abstract android.content.Context createCredentialProtectedStorageContext();

    public abstract android.content.Context createDeviceProtectedStorageContext();

    public abstract android.content.Context createDisplayContext(android.view.Display);

    public android.content.Context createFeatureContext(java.lang.String)
    {
        android.content.Context r0, $r2;
        java.lang.String r1;

        r0 := @this: android.content.Context;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<android.content.Context: android.content.Context createAttributionContext(java.lang.String)>(r1);

        return $r2;
    }

    public abstract android.content.Context createPackageContext(java.lang.String, int) throws android.content.pm.PackageManager$NameNotFoundException;

    public android.content.Context createPackageContextAsUser(java.lang.String, int, android.os.UserHandle) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.content.Context r0;
        java.lang.String r1;
        int i0;
        android.os.UserHandle r2;
        boolean $z0;
        java.lang.IllegalStateException $r3;

        r0 := @this: android.content.Context;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.UserHandle;

        $z0 = <android.os.Build: boolean IS_ENG>;

        if $z0 != 0 goto label1;

        return r0;

     label1:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("createPackageContextAsUser not overridden!");

        throw $r3;
    }

    public android.content.Context createWindowContext(int, android.os.Bundle)
    {
        android.content.Context r0;
        int i0;
        android.os.Bundle r1;
        java.lang.RuntimeException $r2;

        r0 := @this: android.content.Context;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Bundle;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Not implemented. Must override in a subclass.");

        throw $r2;
    }

    public abstract java.lang.String[] databaseList();

    public abstract boolean deleteDatabase(java.lang.String);

    public abstract boolean deleteFile(java.lang.String);

    public abstract boolean deleteSharedPreferences(java.lang.String);

    public abstract void enforceCallingOrSelfPermission(java.lang.String, java.lang.String);

    public abstract void enforceCallingOrSelfUriPermission(android.net.Uri, int, java.lang.String);

    public abstract void enforceCallingPermission(java.lang.String, java.lang.String);

    public abstract void enforceCallingUriPermission(android.net.Uri, int, java.lang.String);

    public abstract void enforcePermission(java.lang.String, int, int, java.lang.String);

    public abstract void enforceUriPermission(android.net.Uri, int, int, int, java.lang.String);

    public abstract void enforceUriPermission(android.net.Uri, java.lang.String, java.lang.String, int, int, int, java.lang.String);

    public abstract java.lang.String[] fileList();

    public android.os.IBinder getActivityToken()
    {
        android.content.Context r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.content.Context;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Not implemented. Must override in a subclass.");

        throw $r1;
    }

    public abstract android.content.Context getApplicationContext();

    public abstract android.content.pm.ApplicationInfo getApplicationInfo();

    public abstract android.content.res.AssetManager getAssets();

    public java.lang.String getAttributionTag()
    {
        android.content.Context r0;

        r0 := @this: android.content.Context;

        return null;
    }

    public android.view.autofill.AutofillManager$AutofillClient getAutofillClient()
    {
        android.content.Context r0;

        r0 := @this: android.content.Context;

        return null;
    }

    public android.content.AutofillOptions getAutofillOptions()
    {
        android.content.Context r0;

        r0 := @this: android.content.Context;

        return null;
    }

    public abstract java.lang.String getBasePackageName();

    public abstract java.io.File getCacheDir();

    public abstract java.lang.ClassLoader getClassLoader();

    public abstract java.io.File getCodeCacheDir();

    public final int getColor(int)
    {
        android.content.Context r0;
        int i0, $i1;
        android.content.res.Resources $r1;
        android.content.res.Resources$Theme $r2;

        r0 := @this: android.content.Context;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke r0.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $i1 = virtualinvoke $r1.<android.content.res.Resources: int getColor(int,android.content.res.Resources$Theme)>(i0, $r2);

        return $i1;
    }

    public final android.content.res.ColorStateList getColorStateList(int)
    {
        android.content.Context r0;
        int i0;
        android.content.res.Resources $r1;
        android.content.res.Resources$Theme $r2;
        android.content.res.ColorStateList $r3;

        r0 := @this: android.content.Context;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke r0.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $r3 = virtualinvoke $r1.<android.content.res.Resources: android.content.res.ColorStateList getColorStateList(int,android.content.res.Resources$Theme)>(i0, $r2);

        return $r3;
    }

    public android.view.contentcapture.ContentCaptureManager$ContentCaptureClient getContentCaptureClient()
    {
        android.content.Context r0;

        r0 := @this: android.content.Context;

        return null;
    }

    public android.content.ContentCaptureOptions getContentCaptureOptions()
    {
        android.content.Context r0;

        r0 := @this: android.content.Context;

        return null;
    }

    public abstract android.content.ContentResolver getContentResolver();

    public java.io.File getCrateDir(java.lang.String)
    {
        android.content.Context r0;
        java.lang.String r1;
        java.lang.RuntimeException $r2;

        r0 := @this: android.content.Context;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Not implemented. Must override in a subclass.");

        throw $r2;
    }

    public abstract java.io.File getDataDir();

    public abstract java.io.File getDatabasePath(java.lang.String);

    public abstract java.io.File getDir(java.lang.String, int);

    public android.view.Display getDisplay()
    {
        android.content.Context r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.content.Context;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Not implemented. Must override in a subclass.");

        throw $r1;
    }

    public abstract android.view.DisplayAdjustments getDisplayAdjustments(int);

    public abstract int getDisplayId();

    public android.view.Display getDisplayNoVerify()
    {
        android.content.Context r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.content.Context;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Not implemented. Must override in a subclass.");

        throw $r1;
    }

    public final android.graphics.drawable.Drawable getDrawable(int)
    {
        android.content.Context r0;
        int i0;
        android.content.res.Resources $r1;
        android.content.res.Resources$Theme $r2;
        android.graphics.drawable.Drawable $r3;

        r0 := @this: android.content.Context;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke r0.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $r3 = virtualinvoke $r1.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources$Theme)>(i0, $r2);

        return $r3;
    }

    public abstract java.io.File getExternalCacheDir();

    public abstract java.io.File[] getExternalCacheDirs();

    public abstract java.io.File getExternalFilesDir(java.lang.String);

    public abstract java.io.File[] getExternalFilesDirs(java.lang.String);

    public abstract java.io.File[] getExternalMediaDirs();

    public java.lang.String getFeatureId()
    {
        android.content.Context r0;
        java.lang.String $r1;

        r0 := @this: android.content.Context;

        $r1 = virtualinvoke r0.<android.content.Context: java.lang.String getAttributionTag()>();

        return $r1;
    }

    public abstract java.io.File getFileStreamPath(java.lang.String);

    public abstract java.io.File getFilesDir();

    public android.app.IApplicationThread getIApplicationThread()
    {
        android.content.Context r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.content.Context;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Not implemented. Must override in a subclass.");

        throw $r1;
    }

    public java.util.concurrent.Executor getMainExecutor()
    {
        android.content.Context r0;
        android.os.HandlerExecutor $r1;
        android.os.Handler $r2;
        android.os.Looper $r3;

        r0 := @this: android.content.Context;

        $r1 = new android.os.HandlerExecutor;

        $r2 = new android.os.Handler;

        $r3 = virtualinvoke r0.<android.content.Context: android.os.Looper getMainLooper()>();

        specialinvoke $r2.<android.os.Handler: void <init>(android.os.Looper)>($r3);

        specialinvoke $r1.<android.os.HandlerExecutor: void <init>(android.os.Handler)>($r2);

        return $r1;
    }

    public abstract android.os.Looper getMainLooper();

    public android.os.Handler getMainThreadHandler()
    {
        android.content.Context r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.content.Context;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Not implemented. Must override in a subclass.");

        throw $r1;
    }

    public int getNextAutofillId()
    {
        android.content.Context r0;
        int i0, $i1, $i2;

        r0 := @this: android.content.Context;

        $i1 = <android.content.Context: int sLastAutofillId>;

        if $i1 != 1073741822 goto label1;

        <android.content.Context: int sLastAutofillId> = -1;

     label1:
        $i2 = <android.content.Context: int sLastAutofillId>;

        i0 = $i2 + 1;

        <android.content.Context: int sLastAutofillId> = i0;

        return i0;
    }

    public abstract java.io.File getNoBackupFilesDir();

    public abstract java.io.File getObbDir();

    public abstract java.io.File[] getObbDirs();

    public java.lang.String getOpPackageName()
    {
        android.content.Context r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.content.Context;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Not implemented. Must override in a subclass.");

        throw $r1;
    }

    public abstract java.lang.String getPackageCodePath();

    public abstract android.content.pm.PackageManager getPackageManager();

    public abstract java.lang.String getPackageName();

    public abstract java.lang.String getPackageResourcePath();

    public abstract java.io.File getPreloadsFileCache();

    public abstract android.content.res.Resources getResources();

    public android.app.IServiceConnection getServiceDispatcher(android.content.ServiceConnection, android.os.Handler, int)
    {
        android.content.Context r0;
        android.content.ServiceConnection r1;
        android.os.Handler r2;
        int i0;
        java.lang.RuntimeException $r3;

        r0 := @this: android.content.Context;

        r1 := @parameter0: android.content.ServiceConnection;

        r2 := @parameter1: android.os.Handler;

        i0 := @parameter2: int;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Not implemented. Must override in a subclass.");

        throw $r3;
    }

    public abstract android.content.SharedPreferences getSharedPreferences(java.io.File, int);

    public abstract android.content.SharedPreferences getSharedPreferences(java.lang.String, int);

    public abstract java.io.File getSharedPreferencesPath(java.lang.String);

    public java.io.File getSharedPrefsFile(java.lang.String)
    {
        android.content.Context r0;
        java.lang.String r1;
        java.io.File $r2;

        r0 := @this: android.content.Context;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<android.content.Context: java.io.File getSharedPreferencesPath(java.lang.String)>(r1);

        return $r2;
    }

    public final java.lang.String getString(int)
    {
        android.content.Context r0;
        int i0;
        android.content.res.Resources $r1;
        java.lang.String $r2;

        r0 := @this: android.content.Context;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke $r1.<android.content.res.Resources: java.lang.String getString(int)>(i0);

        return $r2;
    }

    public final transient java.lang.String getString(int, java.lang.Object[])
    {
        android.content.Context r0;
        int i0;
        java.lang.Object[] r1;
        android.content.res.Resources $r2;
        java.lang.String $r3;

        r0 := @this: android.content.Context;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object[];

        $r2 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>(i0, r1);

        return $r3;
    }

    public final java.lang.Object getSystemService(java.lang.Class)
    {
        android.content.Context r0;
        java.lang.Class r1;
        java.lang.String r2;
        java.lang.Object r3;

        r0 := @this: android.content.Context;

        r1 := @parameter0: java.lang.Class;

        r2 = virtualinvoke r0.<android.content.Context: java.lang.String getSystemServiceName(java.lang.Class)>(r1);

        if r2 == null goto label1;

        r3 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>(r2);

        goto label2;

     label1:
        r3 = null;

     label2:
        return r3;
    }

    public abstract java.lang.Object getSystemService(java.lang.String);

    public abstract java.lang.String getSystemServiceName(java.lang.Class);

    public final java.lang.CharSequence getText(int)
    {
        android.content.Context r0;
        int i0;
        android.content.res.Resources $r1;
        java.lang.CharSequence $r2;

        r0 := @this: android.content.Context;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke $r1.<android.content.res.Resources: java.lang.CharSequence getText(int)>(i0);

        return $r2;
    }

    public abstract android.content.res.Resources$Theme getTheme();

    public int getThemeResId()
    {
        android.content.Context r0;

        r0 := @this: android.content.Context;

        return 0;
    }

    public android.os.UserHandle getUser()
    {
        android.content.Context r0;
        android.os.UserHandle $r1;

        r0 := @this: android.content.Context;

        $r1 = staticinvoke <android.os.Process: android.os.UserHandle myUserHandle()>();

        return $r1;
    }

    public int getUserId()
    {
        android.content.Context r0;
        int $i0;

        r0 := @this: android.content.Context;

        $i0 = staticinvoke <android.os.UserHandle: int myUserId()>();

        return $i0;
    }

    public abstract android.graphics.drawable.Drawable getWallpaper();

    public abstract int getWallpaperDesiredMinimumHeight();

    public abstract int getWallpaperDesiredMinimumWidth();

    public abstract void grantUriPermission(java.lang.String, android.net.Uri, int);

    public final boolean isAutofillCompatibilityEnabled()
    {
        android.content.Context r0;
        android.content.AutofillOptions r1;
        boolean $z0, z1;

        r0 := @this: android.content.Context;

        r1 = virtualinvoke r0.<android.content.Context: android.content.AutofillOptions getAutofillOptions()>();

        if r1 == null goto label1;

        $z0 = r1.<android.content.AutofillOptions: boolean compatModeEnabled>;

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public abstract boolean isCredentialProtectedStorage();

    public abstract boolean isDeviceProtectedStorage();

    public boolean isRestricted()
    {
        android.content.Context r0;

        r0 := @this: android.content.Context;

        return 0;
    }

    public boolean isUiContext()
    {
        android.content.Context r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.content.Context;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Not implemented. Must override in a subclass.");

        throw $r1;
    }

    public abstract boolean moveDatabaseFrom(android.content.Context, java.lang.String);

    public abstract boolean moveSharedPreferencesFrom(android.content.Context, java.lang.String);

    public final android.content.res.TypedArray obtainStyledAttributes(int, int[]) throws android.content.res.Resources$NotFoundException
    {
        android.content.Context r0;
        int i0;
        int[] r1;
        android.content.res.Resources$Theme $r2;
        android.content.res.TypedArray $r3;

        r0 := @this: android.content.Context;

        i0 := @parameter0: int;

        r1 := @parameter1: int[];

        $r2 = virtualinvoke r0.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources$Theme: android.content.res.TypedArray obtainStyledAttributes(int,int[])>(i0, r1);

        return $r3;
    }

    public final android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet, int[])
    {
        android.content.Context r0;
        android.util.AttributeSet r1;
        int[] r2;
        android.content.res.Resources$Theme $r3;
        android.content.res.TypedArray $r4;

        r0 := @this: android.content.Context;

        r1 := @parameter0: android.util.AttributeSet;

        r2 := @parameter1: int[];

        $r3 = virtualinvoke r0.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $r4 = virtualinvoke $r3.<android.content.res.Resources$Theme: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r1, r2, 0, 0);

        return $r4;
    }

    public final android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet, int[], int, int)
    {
        android.content.Context r0;
        android.util.AttributeSet r1;
        int[] r2;
        int i0, i1;
        android.content.res.Resources$Theme $r3;
        android.content.res.TypedArray $r4;

        r0 := @this: android.content.Context;

        r1 := @parameter0: android.util.AttributeSet;

        r2 := @parameter1: int[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r3 = virtualinvoke r0.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $r4 = virtualinvoke $r3.<android.content.res.Resources$Theme: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r1, r2, i0, i1);

        return $r4;
    }

    public final android.content.res.TypedArray obtainStyledAttributes(int[])
    {
        android.content.Context r0;
        int[] r1;
        android.content.res.Resources$Theme $r2;
        android.content.res.TypedArray $r3;

        r0 := @this: android.content.Context;

        r1 := @parameter0: int[];

        $r2 = virtualinvoke r0.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources$Theme: android.content.res.TypedArray obtainStyledAttributes(int[])>(r1);

        return $r3;
    }

    public abstract java.io.FileInputStream openFileInput(java.lang.String) throws java.io.FileNotFoundException;

    public abstract java.io.FileOutputStream openFileOutput(java.lang.String, int) throws java.io.FileNotFoundException;

    public abstract android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String, int, android.database.sqlite.SQLiteDatabase$CursorFactory);

    public abstract android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String, int, android.database.sqlite.SQLiteDatabase$CursorFactory, android.database.DatabaseErrorHandler);

    public abstract android.graphics.drawable.Drawable peekWallpaper();

    public void registerComponentCallbacks(android.content.ComponentCallbacks)
    {
        android.content.Context r0, $r2;
        android.content.ComponentCallbacks r1;

        r0 := @this: android.content.Context;

        r1 := @parameter0: android.content.ComponentCallbacks;

        $r2 = virtualinvoke r0.<android.content.Context: android.content.Context getApplicationContext()>();

        virtualinvoke $r2.<android.content.Context: void registerComponentCallbacks(android.content.ComponentCallbacks)>(r1);

        return;
    }

    public abstract android.content.Intent registerReceiver(android.content.BroadcastReceiver, android.content.IntentFilter);

    public abstract android.content.Intent registerReceiver(android.content.BroadcastReceiver, android.content.IntentFilter, int);

    public abstract android.content.Intent registerReceiver(android.content.BroadcastReceiver, android.content.IntentFilter, java.lang.String, android.os.Handler);

    public abstract android.content.Intent registerReceiver(android.content.BroadcastReceiver, android.content.IntentFilter, java.lang.String, android.os.Handler, int);

    public abstract android.content.Intent registerReceiverAsUser(android.content.BroadcastReceiver, android.os.UserHandle, android.content.IntentFilter, java.lang.String, android.os.Handler);

    public android.content.Intent registerReceiverForAllUsers(android.content.BroadcastReceiver, android.content.IntentFilter, java.lang.String, android.os.Handler)
    {
        android.content.Context r0;
        android.content.BroadcastReceiver r1;
        android.content.IntentFilter r2;
        java.lang.String r3;
        android.os.Handler r4;
        java.lang.RuntimeException $r5;

        r0 := @this: android.content.Context;

        r1 := @parameter0: android.content.BroadcastReceiver;

        r2 := @parameter1: android.content.IntentFilter;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.os.Handler;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>("Not implemented. Must override in a subclass.");

        throw $r5;
    }

    public abstract void reloadSharedPreferences();

    public abstract void removeStickyBroadcast(android.content.Intent);

    public abstract void removeStickyBroadcastAsUser(android.content.Intent, android.os.UserHandle);

    public abstract void revokeUriPermission(android.net.Uri, int);

    public abstract void revokeUriPermission(java.lang.String, android.net.Uri, int);

    public abstract void sendBroadcast(android.content.Intent);

    public abstract void sendBroadcast(android.content.Intent, java.lang.String);

    public abstract void sendBroadcast(android.content.Intent, java.lang.String, int);

    public abstract void sendBroadcast(android.content.Intent, java.lang.String, android.os.Bundle);

    public abstract void sendBroadcastAsUser(android.content.Intent, android.os.UserHandle);

    public abstract void sendBroadcastAsUser(android.content.Intent, android.os.UserHandle, java.lang.String);

    public abstract void sendBroadcastAsUser(android.content.Intent, android.os.UserHandle, java.lang.String, int);

    public abstract void sendBroadcastAsUser(android.content.Intent, android.os.UserHandle, java.lang.String, android.os.Bundle);

    public abstract void sendBroadcastAsUserMultiplePermissions(android.content.Intent, android.os.UserHandle, java.lang.String[]);

    public void sendBroadcastMultiplePermissions(android.content.Intent, java.lang.String[])
    {
        android.content.Context r0;
        android.content.Intent r1;
        java.lang.String[] r2;
        java.lang.RuntimeException $r3;

        r0 := @this: android.content.Context;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: java.lang.String[];

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Not implemented. Must override in a subclass.");

        throw $r3;
    }

    public void sendBroadcastWithMultiplePermissions(android.content.Intent, java.lang.String[])
    {
        android.content.Context r0;
        android.content.Intent r1;
        java.lang.String[] r2;

        r0 := @this: android.content.Context;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: java.lang.String[];

        virtualinvoke r0.<android.content.Context: void sendBroadcastMultiplePermissions(android.content.Intent,java.lang.String[])>(r1, r2);

        return;
    }

    public void sendOrderedBroadcast(android.content.Intent, int, java.lang.String, java.lang.String, android.content.BroadcastReceiver, android.os.Handler, java.lang.String, android.os.Bundle, android.os.Bundle)
    {
        android.content.Context r0;
        android.content.Intent r1;
        int i0;
        java.lang.String r2, r3, r6;
        android.content.BroadcastReceiver r4;
        android.os.Handler r5;
        android.os.Bundle r7, r8;
        java.lang.RuntimeException $r9;

        r0 := @this: android.content.Context;

        r1 := @parameter0: android.content.Intent;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: android.content.BroadcastReceiver;

        r5 := @parameter5: android.os.Handler;

        r6 := @parameter6: java.lang.String;

        r7 := @parameter7: android.os.Bundle;

        r8 := @parameter8: android.os.Bundle;

        $r9 = new java.lang.RuntimeException;

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String)>("Not implemented. Must override in a subclass.");

        throw $r9;
    }

    public abstract void sendOrderedBroadcast(android.content.Intent, java.lang.String);

    public abstract void sendOrderedBroadcast(android.content.Intent, java.lang.String, int, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle);

    public abstract void sendOrderedBroadcast(android.content.Intent, java.lang.String, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle);

    public abstract void sendOrderedBroadcast(android.content.Intent, java.lang.String, android.os.Bundle, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle);

    public void sendOrderedBroadcast(android.content.Intent, java.lang.String, java.lang.String, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle)
    {
        android.content.Context r0;
        android.content.Intent r1;
        java.lang.String r2, r3, r6;
        android.content.BroadcastReceiver r4;
        android.os.Handler r5;
        int i0;
        android.os.Bundle r7;
        java.lang.RuntimeException $r8;

        r0 := @this: android.content.Context;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.content.BroadcastReceiver;

        r5 := @parameter4: android.os.Handler;

        i0 := @parameter5: int;

        r6 := @parameter6: java.lang.String;

        r7 := @parameter7: android.os.Bundle;

        $r8 = new java.lang.RuntimeException;

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>("Not implemented. Must override in a subclass.");

        throw $r8;
    }

    public abstract void sendOrderedBroadcastAsUser(android.content.Intent, android.os.UserHandle, java.lang.String, int, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle);

    public abstract void sendOrderedBroadcastAsUser(android.content.Intent, android.os.UserHandle, java.lang.String, int, android.os.Bundle, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle);

    public abstract void sendOrderedBroadcastAsUser(android.content.Intent, android.os.UserHandle, java.lang.String, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle);

    public abstract void sendStickyBroadcast(android.content.Intent);

    public abstract void sendStickyBroadcastAsUser(android.content.Intent, android.os.UserHandle);

    public abstract void sendStickyBroadcastAsUser(android.content.Intent, android.os.UserHandle, android.os.Bundle);

    public abstract void sendStickyOrderedBroadcast(android.content.Intent, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle);

    public abstract void sendStickyOrderedBroadcastAsUser(android.content.Intent, android.os.UserHandle, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle);

    public void setAutofillClient(android.view.autofill.AutofillManager$AutofillClient)
    {
        android.content.Context r0;
        android.view.autofill.AutofillManager$AutofillClient r1;

        r0 := @this: android.content.Context;

        r1 := @parameter0: android.view.autofill.AutofillManager$AutofillClient;

        return;
    }

    public void setAutofillOptions(android.content.AutofillOptions)
    {
        android.content.Context r0;
        android.content.AutofillOptions r1;

        r0 := @this: android.content.Context;

        r1 := @parameter0: android.content.AutofillOptions;

        return;
    }

    public void setContentCaptureOptions(android.content.ContentCaptureOptions)
    {
        android.content.Context r0;
        android.content.ContentCaptureOptions r1;

        r0 := @this: android.content.Context;

        r1 := @parameter0: android.content.ContentCaptureOptions;

        return;
    }

    public abstract void setTheme(int);

    public abstract void setWallpaper(android.graphics.Bitmap) throws java.io.IOException;

    public abstract void setWallpaper(java.io.InputStream) throws java.io.IOException;

    public abstract void startActivities(android.content.Intent[]);

    public abstract void startActivities(android.content.Intent[], android.os.Bundle);

    public int startActivitiesAsUser(android.content.Intent[], android.os.Bundle, android.os.UserHandle)
    {
        android.content.Context r0;
        android.content.Intent[] r1;
        android.os.Bundle r2;
        android.os.UserHandle r3;
        java.lang.RuntimeException $r4;

        r0 := @this: android.content.Context;

        r1 := @parameter0: android.content.Intent[];

        r2 := @parameter1: android.os.Bundle;

        r3 := @parameter2: android.os.UserHandle;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("Not implemented. Must override in a subclass.");

        throw $r4;
    }

    public abstract void startActivity(android.content.Intent);

    public abstract void startActivity(android.content.Intent, android.os.Bundle);

    public void startActivityAsUser(android.content.Intent, android.os.Bundle, android.os.UserHandle)
    {
        android.content.Context r0;
        android.content.Intent r1;
        android.os.Bundle r2;
        android.os.UserHandle r3;
        java.lang.RuntimeException $r4;

        r0 := @this: android.content.Context;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: android.os.Bundle;

        r3 := @parameter2: android.os.UserHandle;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("Not implemented. Must override in a subclass.");

        throw $r4;
    }

    public void startActivityAsUser(android.content.Intent, android.os.UserHandle)
    {
        android.content.Context r0;
        android.content.Intent r1;
        android.os.UserHandle r2;
        java.lang.RuntimeException $r3;

        r0 := @this: android.content.Context;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: android.os.UserHandle;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Not implemented. Must override in a subclass.");

        throw $r3;
    }

    public void startActivityForResult(java.lang.String, android.content.Intent, int, android.os.Bundle)
    {
        android.content.Context r0;
        java.lang.String r1;
        android.content.Intent r2;
        int i0;
        android.os.Bundle r3;
        java.lang.RuntimeException $r4;

        r0 := @this: android.content.Context;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.content.Intent;

        i0 := @parameter2: int;

        r3 := @parameter3: android.os.Bundle;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("This method is only implemented for Activity-based Contexts. Check canStartActivityForResult() before calling.");

        throw $r4;
    }

    public abstract android.content.ComponentName startForegroundService(android.content.Intent);

    public abstract android.content.ComponentName startForegroundServiceAsUser(android.content.Intent, android.os.UserHandle);

    public abstract boolean startInstrumentation(android.content.ComponentName, java.lang.String, android.os.Bundle);

    public abstract void startIntentSender(android.content.IntentSender, android.content.Intent, int, int, int) throws android.content.IntentSender$SendIntentException;

    public abstract void startIntentSender(android.content.IntentSender, android.content.Intent, int, int, int, android.os.Bundle) throws android.content.IntentSender$SendIntentException;

    public abstract android.content.ComponentName startService(android.content.Intent);

    public abstract android.content.ComponentName startServiceAsUser(android.content.Intent, android.os.UserHandle);

    public abstract boolean stopService(android.content.Intent);

    public abstract boolean stopServiceAsUser(android.content.Intent, android.os.UserHandle);

    public abstract void unbindService(android.content.ServiceConnection);

    public void unregisterComponentCallbacks(android.content.ComponentCallbacks)
    {
        android.content.Context r0, $r2;
        android.content.ComponentCallbacks r1;

        r0 := @this: android.content.Context;

        r1 := @parameter0: android.content.ComponentCallbacks;

        $r2 = virtualinvoke r0.<android.content.Context: android.content.Context getApplicationContext()>();

        virtualinvoke $r2.<android.content.Context: void unregisterComponentCallbacks(android.content.ComponentCallbacks)>(r1);

        return;
    }

    public abstract void unregisterReceiver(android.content.BroadcastReceiver);

    public abstract void updateDisplay(int);

    public void updateServiceGroup(android.content.ServiceConnection, int, int)
    {
        android.content.Context r0;
        android.content.ServiceConnection r1;
        int i0, i1;
        java.lang.RuntimeException $r2;

        r0 := @this: android.content.Context;

        r1 := @parameter0: android.content.ServiceConnection;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Not implemented. Must override in a subclass.");

        throw $r2;
    }
}
