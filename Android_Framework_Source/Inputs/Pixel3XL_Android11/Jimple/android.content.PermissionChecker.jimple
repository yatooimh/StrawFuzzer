public final class android.content.PermissionChecker extends java.lang.Object
{
    public static final int PERMISSION_GRANTED;
    public static final int PERMISSION_HARD_DENIED;
    public static final int PERMISSION_SOFT_DENIED;
    public static final int PID_UNKNOWN;

    private void <init>()
    {
        android.content.PermissionChecker r0;

        r0 := @this: android.content.PermissionChecker;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static int checkAppOpPermission(android.content.Context, java.lang.String, int, int, java.lang.String, java.lang.String, java.lang.String, boolean)
    {
        android.content.Context r0;
        java.lang.String r1, r2, r3, r4, r5;
        int i0, $i2, i3, i4;
        boolean z0;
        android.app.AppOpsManager r6;
        java.lang.Object $r7;
        byte b5;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        i3 := @parameter2: int;

        i0 := @parameter3: int;

        r2 := @parameter4: java.lang.String;

        r3 := @parameter5: java.lang.String;

        r4 := @parameter6: java.lang.String;

        z0 := @parameter7: boolean;

        r5 = staticinvoke <android.app.AppOpsManager: java.lang.String permissionToOp(java.lang.String)>(r1);

        if r5 == null goto label8;

        if r2 != null goto label1;

        goto label8;

     label1:
        $r7 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/app/AppOpsManager;");

        r6 = (android.app.AppOpsManager) $r7;

        if z0 == 0 goto label2;

        i4 = virtualinvoke r6.<android.app.AppOpsManager: int noteProxyOpNoThrow(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)>(r5, r2, i0, r3, r4);

        goto label3;

     label2:
        i4 = virtualinvoke r6.<android.app.AppOpsManager: int unsafeCheckOpRawNoThrow(java.lang.String,int,java.lang.String)>(r5, i0, r2);

     label3:
        if i4 == 0 goto label7;

        if i4 == 3 goto label4;

        if i4 == 4 goto label7;

        return -1;

     label4:
        $i2 = virtualinvoke r0.<android.content.Context: int checkPermission(java.lang.String,int,int)>(r1, i3, i0);

        if $i2 != 0 goto label5;

        b5 = 0;

        goto label6;

     label5:
        b5 = -1;

     label6:
        return b5;

     label7:
        return 0;

     label8:
        return -1;
    }

    public static int checkCallingOrSelfPermissionForDataDelivery(android.content.Context, java.lang.String, java.lang.String, java.lang.String)
    {
        android.content.Context r0;
        java.lang.String r1, r2, r3, r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        $i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i1 = staticinvoke <android.os.Process: int myPid()>();

        if $i0 != $i1 goto label1;

        r4 = virtualinvoke r0.<android.content.Context: java.lang.String getPackageName()>();

        goto label2;

     label1:
        r4 = null;

     label2:
        $i2 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i3 = staticinvoke <android.os.Process: int myPid()>();

        if $i2 != $i3 goto label3;

        r3 = virtualinvoke r0.<android.content.Context: java.lang.String getAttributionTag()>();

        goto label3;

     label3:
        $i4 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i5 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i6 = staticinvoke <android.content.PermissionChecker: int checkPermissionForDataDelivery(android.content.Context,java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String)>(r0, r1, $i4, $i5, r4, r3, r2);

        return $i6;
    }

    public static int checkCallingOrSelfPermissionForPreflight(android.content.Context, java.lang.String)
    {
        android.content.Context r0;
        java.lang.String r1, r2;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        $i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i1 = staticinvoke <android.os.Process: int myPid()>();

        if $i0 != $i1 goto label1;

        r2 = virtualinvoke r0.<android.content.Context: java.lang.String getPackageName()>();

        goto label2;

     label1:
        r2 = null;

     label2:
        $i2 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i4 = staticinvoke <android.content.PermissionChecker: int checkPermissionForPreflight(android.content.Context,java.lang.String,int,int,java.lang.String)>(r0, r1, $i2, $i3, r2);

        return $i4;
    }

    public static int checkCallingPermissionForDataDelivery(android.content.Context, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        android.content.Context r0;
        java.lang.String r1, r2, r3, r4;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String;

        $i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i1 = staticinvoke <android.os.Process: int myPid()>();

        if $i0 != $i1 goto label1;

        return -1;

     label1:
        $i2 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i4 = staticinvoke <android.content.PermissionChecker: int checkPermissionForDataDelivery(android.content.Context,java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String)>(r0, r1, $i2, $i3, r2, r3, r4);

        return $i4;
    }

    public static int checkCallingPermissionForPreflight(android.content.Context, java.lang.String, java.lang.String)
    {
        android.content.Context r0;
        java.lang.String r1, r2;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i1 = staticinvoke <android.os.Process: int myPid()>();

        if $i0 != $i1 goto label1;

        return -1;

     label1:
        $i2 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i4 = staticinvoke <android.content.PermissionChecker: int checkPermissionForPreflight(android.content.Context,java.lang.String,int,int,java.lang.String)>(r0, r1, $i2, $i3, r2);

        return $i4;
    }

    static int checkPermissionCommon(android.content.Context, java.lang.String, int, int, java.lang.String, java.lang.String, java.lang.String, boolean)
    {
        java.lang.String r0, r1, r2, r8;
        int i0, i1, $i2, $i3, $i4, $i5;
        boolean z0, $z1, $z2;
        java.lang.String[] r3;
        android.content.pm.PackageManager $r4, r9;
        android.content.pm.PackageManager$NameNotFoundException $r5, $r6;
        android.content.Context r7;
        android.content.pm.PermissionInfo r10;

        r7 := @parameter0: android.content.Context;

        r0 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r8 := @parameter4: java.lang.String;

        r1 := @parameter5: java.lang.String;

        r2 := @parameter6: java.lang.String;

        z0 := @parameter7: boolean;

     label1:
        r9 = virtualinvoke r7.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

     label2:
        r10 = virtualinvoke r9.<android.content.pm.PackageManager: android.content.pm.PermissionInfo getPermissionInfo(java.lang.String,int)>(r0, 0);

     label3:
        if r8 != null goto label4;

        $r4 = virtualinvoke r7.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r3 = virtualinvoke $r4.<android.content.pm.PackageManager: java.lang.String[] getPackagesForUid(int)>(i1);

        if r3 == null goto label4;

        $i5 = lengthof r3;

        if $i5 <= 0 goto label4;

        r8 = r3[0];

        goto label4;

     label4:
        $z2 = virtualinvoke r10.<android.content.pm.PermissionInfo: boolean isAppOp()>();

        if $z2 == 0 goto label5;

        $i4 = staticinvoke <android.content.PermissionChecker: int checkAppOpPermission(android.content.Context,java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String,boolean)>(r7, r0, i0, i1, r8, r1, r2, z0);

        return $i4;

     label5:
        $z1 = virtualinvoke r10.<android.content.pm.PermissionInfo: boolean isRuntime()>();

        if $z1 == 0 goto label6;

        $i3 = staticinvoke <android.content.PermissionChecker: int checkRuntimePermission(android.content.Context,java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String,boolean)>(r7, r0, i0, i1, r8, r1, r2, z0);

        return $i3;

     label6:
        $i2 = virtualinvoke r7.<android.content.Context: int checkPermission(java.lang.String,int,int)>(r0, i0, i1);

        return $i2;

     label7:
        $r5 := @caughtexception;

        goto label9;

     label8:
        $r6 := @caughtexception;

     label9:
        return -1;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label8;
        catch android.content.pm.PackageManager$NameNotFoundException from label2 to label3 with label7;
    }

    public static int checkPermissionForDataDelivery(android.content.Context, java.lang.String, int, int, java.lang.String, java.lang.String, java.lang.String)
    {
        android.content.Context r0;
        java.lang.String r1, r2, r3, r4;
        int i0, i1, $i2;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r2 := @parameter4: java.lang.String;

        r3 := @parameter5: java.lang.String;

        r4 := @parameter6: java.lang.String;

        $i2 = staticinvoke <android.content.PermissionChecker: int checkPermissionCommon(android.content.Context,java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String,boolean)>(r0, r1, i0, i1, r2, r3, r4, 1);

        return $i2;
    }

    public static int checkPermissionForPreflight(android.content.Context, java.lang.String, int, int, java.lang.String)
    {
        android.content.Context r0;
        java.lang.String r1, r2;
        int i0, i1, $i2;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r2 := @parameter4: java.lang.String;

        $i2 = staticinvoke <android.content.PermissionChecker: int checkPermissionCommon(android.content.Context,java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String,boolean)>(r0, r1, i0, i1, r2, null, null, 0);

        return $i2;
    }

    private static int checkRuntimePermission(android.content.Context, java.lang.String, int, int, java.lang.String, java.lang.String, java.lang.String, boolean)
    {
        int i0, $i1, i2, i3;
        java.lang.String r0, r1, r2, r5, r6;
        boolean z0;
        java.lang.Object $r3;
        android.content.Context r4;
        android.app.AppOpsManager r7;

        r4 := @parameter0: android.content.Context;

        r5 := @parameter1: java.lang.String;

        i2 := @parameter2: int;

        i0 := @parameter3: int;

        r0 := @parameter4: java.lang.String;

        r1 := @parameter5: java.lang.String;

        r2 := @parameter6: java.lang.String;

        z0 := @parameter7: boolean;

        $i1 = virtualinvoke r4.<android.content.Context: int checkPermission(java.lang.String,int,int)>(r5, i2, i0);

        if $i1 != -1 goto label1;

        return -1;

     label1:
        r6 = staticinvoke <android.app.AppOpsManager: java.lang.String permissionToOp(java.lang.String)>(r5);

        if r6 == null goto label6;

        if r0 != null goto label2;

        goto label6;

     label2:
        $r3 = virtualinvoke r4.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/app/AppOpsManager;");

        r7 = (android.app.AppOpsManager) $r3;

        if z0 == 0 goto label3;

        i3 = virtualinvoke r7.<android.app.AppOpsManager: int noteProxyOpNoThrow(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)>(r6, r0, i0, r1, r2);

        goto label4;

     label3:
        i3 = virtualinvoke r7.<android.app.AppOpsManager: int unsafeCheckOpRawNoThrow(java.lang.String,int,java.lang.String)>(r6, i0, r0);

     label4:
        if i3 == 0 goto label5;

        if i3 == 4 goto label5;

        return -2;

     label5:
        return 0;

     label6:
        return 0;
    }

    public static int checkSelfPermissionForDataDelivery(android.content.Context, java.lang.String, java.lang.String)
    {
        android.content.Context r0;
        java.lang.String r1, r2, $r3, $r4;
        int $i0, $i1, $i2;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $i0 = staticinvoke <android.os.Process: int myPid()>();

        $i1 = staticinvoke <android.os.Process: int myUid()>();

        $r3 = virtualinvoke r0.<android.content.Context: java.lang.String getPackageName()>();

        $r4 = virtualinvoke r0.<android.content.Context: java.lang.String getAttributionTag()>();

        $i2 = staticinvoke <android.content.PermissionChecker: int checkPermissionForDataDelivery(android.content.Context,java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String)>(r0, r1, $i0, $i1, $r3, $r4, r2);

        return $i2;
    }

    public static int checkSelfPermissionForPreflight(android.content.Context, java.lang.String)
    {
        android.content.Context r0;
        java.lang.String r1, $r2;
        int $i0, $i1, $i2;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        $i0 = staticinvoke <android.os.Process: int myPid()>();

        $i1 = staticinvoke <android.os.Process: int myUid()>();

        $r2 = virtualinvoke r0.<android.content.Context: java.lang.String getPackageName()>();

        $i2 = staticinvoke <android.content.PermissionChecker: int checkPermissionForPreflight(android.content.Context,java.lang.String,int,int,java.lang.String)>(r0, r1, $i0, $i1, $r2);

        return $i2;
    }

    public static void <clinit>()
    {
        <android.content.PermissionChecker: int PID_UNKNOWN> = -1;

        <android.content.PermissionChecker: int PERMISSION_SOFT_DENIED> = -2;

        <android.content.PermissionChecker: int PERMISSION_HARD_DENIED> = -1;

        <android.content.PermissionChecker: int PERMISSION_GRANTED> = 0;

        return;
    }
}
