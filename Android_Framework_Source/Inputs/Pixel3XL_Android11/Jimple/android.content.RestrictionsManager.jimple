public class android.content.RestrictionsManager extends java.lang.Object
{
    public static final java.lang.String ACTION_PERMISSION_RESPONSE_RECEIVED;
    public static final java.lang.String ACTION_REQUEST_LOCAL_APPROVAL;
    public static final java.lang.String ACTION_REQUEST_PERMISSION;
    public static final java.lang.String EXTRA_PACKAGE_NAME;
    public static final java.lang.String EXTRA_REQUEST_BUNDLE;
    public static final java.lang.String EXTRA_REQUEST_ID;
    public static final java.lang.String EXTRA_REQUEST_TYPE;
    public static final java.lang.String EXTRA_RESPONSE_BUNDLE;
    public static final java.lang.String META_DATA_APP_RESTRICTIONS;
    public static final java.lang.String REQUEST_KEY_APPROVE_LABEL;
    public static final java.lang.String REQUEST_KEY_DATA;
    public static final java.lang.String REQUEST_KEY_DENY_LABEL;
    public static final java.lang.String REQUEST_KEY_ICON;
    public static final java.lang.String REQUEST_KEY_ID;
    public static final java.lang.String REQUEST_KEY_MESSAGE;
    public static final java.lang.String REQUEST_KEY_NEW_REQUEST;
    public static final java.lang.String REQUEST_KEY_TITLE;
    public static final java.lang.String REQUEST_TYPE_APPROVAL;
    public static final java.lang.String RESPONSE_KEY_ERROR_CODE;
    public static final java.lang.String RESPONSE_KEY_MESSAGE;
    public static final java.lang.String RESPONSE_KEY_RESPONSE_TIMESTAMP;
    public static final java.lang.String RESPONSE_KEY_RESULT;
    public static final int RESULT_APPROVED;
    public static final int RESULT_DENIED;
    public static final int RESULT_ERROR;
    public static final int RESULT_ERROR_BAD_REQUEST;
    public static final int RESULT_ERROR_INTERNAL;
    public static final int RESULT_ERROR_NETWORK;
    public static final int RESULT_NO_RESPONSE;
    public static final int RESULT_UNKNOWN_REQUEST;
    private static final java.lang.String TAG;
    private static final java.lang.String TAG_RESTRICTION;
    private final android.content.Context mContext;
    private final android.content.IRestrictionsManager mService;

    public void <init>(android.content.Context, android.content.IRestrictionsManager)
    {
        android.content.RestrictionsManager r0;
        android.content.Context r1;
        android.content.IRestrictionsManager r2;

        r0 := @this: android.content.RestrictionsManager;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.IRestrictionsManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.content.RestrictionsManager: android.content.Context mContext> = r1;

        r0.<android.content.RestrictionsManager: android.content.IRestrictionsManager mService> = r2;

        return;
    }

    private static android.os.Bundle addRestrictionToBundle(android.os.Bundle, android.content.RestrictionEntry)
    {
        android.content.RestrictionEntry r0, $r4;
        android.content.RestrictionEntry[] r1, r2, $r8;
        int $i0, $i1, $i2, $i4, $i5, i6;
        java.lang.String $r3, $r10, $r11, $r12, $r14, $r15, $r16, $r21;
        java.util.List $r5, $r9;
        android.os.Bundle $r6, $r7, r22, r25;
        java.lang.String[] $r13;
        boolean $z0;
        java.lang.StringBuilder $r17;
        java.lang.IllegalArgumentException $r20;
        android.os.Bundle[] r24;

        r22 := @parameter0: android.os.Bundle;

        r0 := @parameter1: android.content.RestrictionEntry;

        $i0 = virtualinvoke r0.<android.content.RestrictionEntry: int getType()>();

        tableswitch($i0)
        {
            case 0: goto label11;
            case 1: goto label10;
            case 2: goto label09;
            case 3: goto label09;
            case 4: goto label09;
            case 5: goto label08;
            case 6: goto label11;
            case 7: goto label07;
            case 8: goto label02;
            default: goto label01;
        };

     label01:
        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported restrictionEntry type: ");

        $i5 = virtualinvoke r0.<android.content.RestrictionEntry: int getType()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r20 = new java.lang.IllegalArgumentException;

        $r21 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r20.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r21);

        throw $r20;

     label02:
        r1 = virtualinvoke r0.<android.content.RestrictionEntry: android.content.RestrictionEntry[] getRestrictions()>();

        $i1 = lengthof r1;

        r24 = newarray (android.os.Bundle)[$i1];

        i6 = 0;

     label03:
        $i2 = lengthof r1;

        if i6 >= $i2 goto label06;

        $r4 = r1[i6];

        r2 = virtualinvoke $r4.<android.content.RestrictionEntry: android.content.RestrictionEntry[] getRestrictions()>();

        if r2 != null goto label04;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("RestrictionsManager", "addRestrictionToBundle: Non-bundle entry found in bundle array");

        $r7 = new android.os.Bundle;

        specialinvoke $r7.<android.os.Bundle: void <init>()>();

        r24[i6] = $r7;

        goto label05;

     label04:
        $r5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r2);

        $r6 = staticinvoke <android.content.RestrictionsManager: android.os.Bundle convertRestrictionsToBundle(java.util.List)>($r5);

        r24[i6] = $r6;

     label05:
        i6 = i6 + 1;

        goto label03;

     label06:
        $r3 = virtualinvoke r0.<android.content.RestrictionEntry: java.lang.String getKey()>();

        virtualinvoke r22.<android.os.Bundle: void putParcelableArray(java.lang.String,android.os.Parcelable[])>($r3, r24);

        goto label12;

     label07:
        $r8 = virtualinvoke r0.<android.content.RestrictionEntry: android.content.RestrictionEntry[] getRestrictions()>();

        $r9 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r8);

        r25 = staticinvoke <android.content.RestrictionsManager: android.os.Bundle convertRestrictionsToBundle(java.util.List)>($r9);

        $r10 = virtualinvoke r0.<android.content.RestrictionEntry: java.lang.String getKey()>();

        virtualinvoke r22.<android.os.Bundle: void putBundle(java.lang.String,android.os.Bundle)>($r10, r25);

        goto label12;

     label08:
        $r11 = virtualinvoke r0.<android.content.RestrictionEntry: java.lang.String getKey()>();

        $i4 = virtualinvoke r0.<android.content.RestrictionEntry: int getIntValue()>();

        virtualinvoke r22.<android.os.Bundle: void putInt(java.lang.String,int)>($r11, $i4);

        goto label12;

     label09:
        $r12 = virtualinvoke r0.<android.content.RestrictionEntry: java.lang.String getKey()>();

        $r13 = virtualinvoke r0.<android.content.RestrictionEntry: java.lang.String[] getAllSelectedStrings()>();

        virtualinvoke r22.<android.os.Bundle: void putStringArray(java.lang.String,java.lang.String[])>($r12, $r13);

        goto label12;

     label10:
        $r14 = virtualinvoke r0.<android.content.RestrictionEntry: java.lang.String getKey()>();

        $z0 = virtualinvoke r0.<android.content.RestrictionEntry: boolean getSelectedState()>();

        virtualinvoke r22.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>($r14, $z0);

        goto label12;

     label11:
        $r15 = virtualinvoke r0.<android.content.RestrictionEntry: java.lang.String getKey()>();

        $r16 = virtualinvoke r0.<android.content.RestrictionEntry: java.lang.String getSelectedString()>();

        virtualinvoke r22.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>($r15, $r16);

     label12:
        return r22;
    }

    public static android.os.Bundle convertRestrictionsToBundle(java.util.List)
    {
        android.os.Bundle $r1;
        boolean $z0;
        java.lang.Object $r2;
        android.content.RestrictionEntry $r3;
        java.util.List r5;
        java.util.Iterator r6;

        r5 := @parameter0: java.util.List;

        $r1 = new android.os.Bundle;

        specialinvoke $r1.<android.os.Bundle: void <init>()>();

        r6 = interfaceinvoke r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (android.content.RestrictionEntry) $r2;

        staticinvoke <android.content.RestrictionsManager: android.os.Bundle addRestrictionToBundle(android.os.Bundle,android.content.RestrictionEntry)>($r1, $r3);

        goto label1;

     label2:
        return $r1;
    }

    private java.util.List loadManifestRestrictions(java.lang.String, android.content.res.XmlResourceParser)
    {
        android.content.RestrictionsManager r0;
        android.content.Context r1, $r3;
        android.content.RestrictionEntry r2;
        java.util.ArrayList $r4;
        java.lang.Throwable $r5, $r11;
        java.lang.StringBuilder $r6, $r12;
        java.lang.String $r9, $r15, r16;
        android.content.pm.PackageManager$NameNotFoundException $r10;
        android.content.res.XmlResourceParser r17;
        int i2;

        r0 := @this: android.content.RestrictionsManager;

        r16 := @parameter0: java.lang.String;

        r17 := @parameter1: android.content.res.XmlResourceParser;

     label01:
        $r3 = r0.<android.content.RestrictionsManager: android.content.Context mContext>;

        r1 = virtualinvoke $r3.<android.content.Context: android.content.Context createPackageContext(java.lang.String,int)>(r16, 0);

     label02:
        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

     label03:
        i2 = interfaceinvoke r17.<android.content.res.XmlResourceParser: int next()>();

     label04:
        if i2 == 1 goto label10;

        if i2 != 2 goto label08;

     label05:
        r2 = specialinvoke r0.<android.content.RestrictionsManager: android.content.RestrictionEntry loadRestrictionElement(android.content.Context,android.content.res.XmlResourceParser)>(r1, r17);

     label06:
        if r2 == null goto label08;

     label07:
        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

     label08:
        i2 = interfaceinvoke r17.<android.content.res.XmlResourceParser: int next()>();

     label09:
        goto label04;

     label10:
        return $r4;

     label11:
        $r5 := @caughtexception;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Reading restriction metadata for ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("RestrictionsManager", $r9, $r5);

        return null;

     label12:
        $r11 := @caughtexception;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Reading restriction metadata for ");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("RestrictionsManager", $r15, $r11);

        return null;

     label13:
        $r10 := @caughtexception;

        return null;

        catch android.content.pm.PackageManager$NameNotFoundException from label01 to label02 with label13;
        catch org.xmlpull.v1.XmlPullParserException from label03 to label04 with label12;
        catch java.io.IOException from label03 to label04 with label11;
        catch org.xmlpull.v1.XmlPullParserException from label05 to label06 with label12;
        catch java.io.IOException from label05 to label06 with label11;
        catch org.xmlpull.v1.XmlPullParserException from label07 to label08 with label12;
        catch java.io.IOException from label07 to label08 with label11;
        catch org.xmlpull.v1.XmlPullParserException from label08 to label09 with label12;
        catch java.io.IOException from label08 to label09 with label11;
    }

    private android.content.RestrictionEntry loadRestriction(android.content.Context, android.content.res.TypedArray, android.content.res.XmlResourceParser) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        android.content.RestrictionsManager r0;
        android.content.res.XmlResourceParser r1;
        java.lang.String r2, r3, r4, $r15, $r19, $r22, $r26;
        int i0, $i1, $i2, $i5, i9, i10, i11, i12;
        android.content.RestrictionEntry $r6, r32;
        java.util.ArrayList $r7;
        boolean $z0, $z2;
        android.content.RestrictionEntry[] $r8, $r10;
        java.lang.Object[] $r9;
        java.lang.StringBuilder $r11, $r16, $r23;
        android.content.res.Resources $r20;
        java.lang.String[] $r21;
        android.content.Context r27;
        android.content.res.TypedArray r28;

        r0 := @this: android.content.RestrictionsManager;

        r27 := @parameter0: android.content.Context;

        r28 := @parameter1: android.content.res.TypedArray;

        r1 := @parameter2: android.content.res.XmlResourceParser;

        r2 = virtualinvoke r28.<android.content.res.TypedArray: java.lang.String getString(int)>(3);

        i9 = virtualinvoke r28.<android.content.res.TypedArray: int getInt(int,int)>(6, -1);

        r3 = virtualinvoke r28.<android.content.res.TypedArray: java.lang.String getString(int)>(2);

        r4 = virtualinvoke r28.<android.content.res.TypedArray: java.lang.String getString(int)>(0);

        i10 = virtualinvoke r28.<android.content.res.TypedArray: int getResourceId(int,int)>(1, 0);

        i0 = virtualinvoke r28.<android.content.res.TypedArray: int getResourceId(int,int)>(5, 0);

        if i9 != -1 goto label01;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("RestrictionsManager", "restrictionType cannot be omitted");

        return null;

     label01:
        if r2 != null goto label02;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("RestrictionsManager", "key cannot be omitted");

        return null;

     label02:
        $r6 = new android.content.RestrictionEntry;

        specialinvoke $r6.<android.content.RestrictionEntry: void <init>(int,java.lang.String)>(i9, r2);

        virtualinvoke $r6.<android.content.RestrictionEntry: void setTitle(java.lang.String)>(r3);

        virtualinvoke $r6.<android.content.RestrictionEntry: void setDescription(java.lang.String)>(r4);

        if i10 == 0 goto label03;

        virtualinvoke $r6.<android.content.RestrictionEntry: void setChoiceEntries(android.content.Context,int)>(r27, i10);

     label03:
        if i0 == 0 goto label04;

        virtualinvoke $r6.<android.content.RestrictionEntry: void setChoiceValues(android.content.Context,int)>(r27, i0);

     label04:
        tableswitch(i9)
        {
            case 0: goto label14;
            case 1: goto label13;
            case 2: goto label14;
            case 3: goto label05;
            case 4: goto label12;
            case 5: goto label11;
            case 6: goto label14;
            case 7: goto label06;
            case 8: goto label06;
            default: goto label05;
        };

     label05:
        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown restriction type ");

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i9);

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("RestrictionsManager", $r26);

        goto label15;

     label06:
        i11 = interfaceinvoke r1.<android.content.res.XmlResourceParser: int getDepth()>();

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

     label07:
        $z0 = staticinvoke <com.android.internal.util.XmlUtils: boolean nextElementWithin(org.xmlpull.v1.XmlPullParser,int)>(r1, i11);

        if $z0 == 0 goto label10;

        r32 = specialinvoke r0.<android.content.RestrictionsManager: android.content.RestrictionEntry loadRestrictionElement(android.content.Context,android.content.res.XmlResourceParser)>(r27, r1);

        if r32 != null goto label08;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Child entry cannot be loaded for bundle restriction ");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("RestrictionsManager", $r19);

        goto label09;

     label08:
        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>(r32);

        if i9 != 8 goto label09;

        $i2 = virtualinvoke r32.<android.content.RestrictionEntry: int getType()>();

        if $i2 == 7 goto label09;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bundle_array ");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" can only contain entries of type bundle");

        $r15 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("RestrictionsManager", $r15);

     label09:
        goto label07;

     label10:
        $i1 = interfaceinvoke $r7.<java.util.List: int size()>();

        $r8 = newarray (android.content.RestrictionEntry)[$i1];

        $r9 = interfaceinvoke $r7.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r8);

        $r10 = (android.content.RestrictionEntry[]) $r9;

        virtualinvoke $r6.<android.content.RestrictionEntry: void setRestrictions(android.content.RestrictionEntry[])>($r10);

        goto label15;

     label11:
        $i5 = virtualinvoke r28.<android.content.res.TypedArray: int getInt(int,int)>(4, 0);

        virtualinvoke $r6.<android.content.RestrictionEntry: void setIntValue(int)>($i5);

        goto label15;

     label12:
        i12 = virtualinvoke r28.<android.content.res.TypedArray: int getResourceId(int,int)>(4, 0);

        if i12 == 0 goto label15;

        $r20 = virtualinvoke r27.<android.content.Context: android.content.res.Resources getResources()>();

        $r21 = virtualinvoke $r20.<android.content.res.Resources: java.lang.String[] getStringArray(int)>(i12);

        virtualinvoke $r6.<android.content.RestrictionEntry: void setAllSelectedStrings(java.lang.String[])>($r21);

        goto label15;

     label13:
        $z2 = virtualinvoke r28.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(4, 0);

        virtualinvoke $r6.<android.content.RestrictionEntry: void setSelectedState(boolean)>($z2);

        goto label15;

     label14:
        $r22 = virtualinvoke r28.<android.content.res.TypedArray: java.lang.String getString(int)>(4);

        virtualinvoke $r6.<android.content.RestrictionEntry: void setSelectedString(java.lang.String)>($r22);

     label15:
        return $r6;
    }

    private android.content.RestrictionEntry loadRestrictionElement(android.content.Context, android.content.res.XmlResourceParser) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        android.content.RestrictionsManager r0;
        android.content.Context r1;
        android.content.res.XmlResourceParser r2;
        android.util.AttributeSet r3;
        java.lang.String $r4;
        boolean $z0;
        int[] $r5;
        android.content.res.TypedArray $r6;
        android.content.RestrictionEntry $r7;

        r0 := @this: android.content.RestrictionsManager;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.res.XmlResourceParser;

        $r4 = interfaceinvoke r2.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("restriction");

        if $z0 == 0 goto label1;

        r3 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>(r2);

        if r3 == null goto label1;

        $r5 = <com.android.internal.R$styleable: int[] RestrictionEntry>;

        $r6 = virtualinvoke r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>(r3, $r5);

        $r7 = specialinvoke r0.<android.content.RestrictionsManager: android.content.RestrictionEntry loadRestriction(android.content.Context,android.content.res.TypedArray,android.content.res.XmlResourceParser)>(r1, $r6, r2);

        return $r7;

     label1:
        return null;
    }

    public android.content.Intent createLocalApprovalIntent()
    {
        android.content.RestrictionsManager r0;
        android.content.IRestrictionsManager $r1, $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;
        android.content.Intent r5;

        r0 := @this: android.content.RestrictionsManager;

     label1:
        $r1 = r0.<android.content.RestrictionsManager: android.content.IRestrictionsManager mService>;

        if $r1 == null goto label3;

        $r2 = r0.<android.content.RestrictionsManager: android.content.IRestrictionsManager mService>;

        r5 = interfaceinvoke $r2.<android.content.IRestrictionsManager: android.content.Intent createLocalApprovalIntent()>();

     label2:
        return r5;

     label3:
        return null;

     label4:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public android.os.Bundle getApplicationRestrictions()
    {
        android.content.RestrictionsManager r0;
        android.content.IRestrictionsManager $r1, $r3;
        android.content.Context $r2;
        java.lang.String $r4;
        android.os.RemoteException $r5;
        java.lang.RuntimeException $r6;
        android.os.Bundle r7;

        r0 := @this: android.content.RestrictionsManager;

     label1:
        $r1 = r0.<android.content.RestrictionsManager: android.content.IRestrictionsManager mService>;

        if $r1 == null goto label3;

        $r3 = r0.<android.content.RestrictionsManager: android.content.IRestrictionsManager mService>;

        $r2 = r0.<android.content.RestrictionsManager: android.content.Context mContext>;

        $r4 = virtualinvoke $r2.<android.content.Context: java.lang.String getPackageName()>();

        r7 = interfaceinvoke $r3.<android.content.IRestrictionsManager: android.os.Bundle getApplicationRestrictions(java.lang.String)>($r4);

     label2:
        return r7;

     label3:
        return null;

     label4:
        $r5 := @caughtexception;

        $r6 = virtualinvoke $r5.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r6;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public java.util.List getManifestRestrictions(java.lang.String)
    {
        android.content.RestrictionsManager r0;
        java.lang.String r1, $r14;
        android.content.Context $r2, $r5;
        android.content.pm.PackageManager $r3, $r6;
        android.os.Bundle $r4;
        boolean $z0;
        android.content.res.XmlResourceParser $r7;
        java.util.List $r8;
        android.content.pm.PackageManager$NameNotFoundException $r9;
        java.lang.StringBuilder $r10;
        java.lang.IllegalArgumentException $r13;
        android.content.pm.ApplicationInfo r15;

        r0 := @this: android.content.RestrictionsManager;

        r1 := @parameter0: java.lang.String;

     label1:
        $r2 = r0.<android.content.RestrictionsManager: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r15 = virtualinvoke $r3.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>(r1, 128);

     label2:
        if r15 == null goto label4;

        $r4 = r15.<android.content.pm.ApplicationInfo: android.os.Bundle metaData>;

        $z0 = virtualinvoke $r4.<android.os.Bundle: boolean containsKey(java.lang.String)>("android.content.APP_RESTRICTIONS");

        if $z0 != 0 goto label3;

        goto label4;

     label3:
        $r5 = r0.<android.content.RestrictionsManager: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r7 = virtualinvoke r15.<android.content.pm.ApplicationInfo: android.content.res.XmlResourceParser loadXmlMetaData(android.content.pm.PackageManager,java.lang.String)>($r6, "android.content.APP_RESTRICTIONS");

        $r8 = specialinvoke r0.<android.content.RestrictionsManager: java.util.List loadManifestRestrictions(java.lang.String,android.content.res.XmlResourceParser)>(r1, $r7);

        return $r8;

     label4:
        return null;

     label5:
        $r9 := @caughtexception;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No such package ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r13 = new java.lang.IllegalArgumentException;

        $r14 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r14);

        throw $r13;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label5;
    }

    public boolean hasRestrictionsProvider()
    {
        android.content.RestrictionsManager r0;
        boolean z0;
        android.content.IRestrictionsManager $r2, $r3;
        android.os.RemoteException $r4;
        java.lang.RuntimeException $r5;

        r0 := @this: android.content.RestrictionsManager;

     label1:
        $r2 = r0.<android.content.RestrictionsManager: android.content.IRestrictionsManager mService>;

        if $r2 == null goto label3;

        $r3 = r0.<android.content.RestrictionsManager: android.content.IRestrictionsManager mService>;

        z0 = interfaceinvoke $r3.<android.content.IRestrictionsManager: boolean hasRestrictionsProvider()>();

     label2:
        return z0;

     label3:
        return 0;

     label4:
        $r4 := @caughtexception;

        $r5 = virtualinvoke $r4.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public void notifyPermissionResponse(java.lang.String, android.os.PersistableBundle)
    {
        android.content.RestrictionsManager r0;
        android.os.PersistableBundle r1;
        java.lang.NullPointerException $r2, $r3;
        boolean $z0, $z1;
        java.lang.IllegalArgumentException $r4, $r5;
        android.content.IRestrictionsManager $r6, $r7;
        android.os.RemoteException $r8;
        java.lang.RuntimeException $r9;
        java.lang.String r10;

        r0 := @this: android.content.RestrictionsManager;

        r10 := @parameter0: java.lang.String;

        r1 := @parameter1: android.os.PersistableBundle;

        if r10 == null goto label7;

        if r1 == null goto label6;

        $z0 = virtualinvoke r1.<android.os.PersistableBundle: boolean containsKey(java.lang.String)>("android.request.id");

        if $z0 == 0 goto label5;

        $z1 = virtualinvoke r1.<android.os.PersistableBundle: boolean containsKey(java.lang.String)>("android.response.result");

        if $z1 == 0 goto label4;

     label1:
        $r6 = r0.<android.content.RestrictionsManager: android.content.IRestrictionsManager mService>;

        if $r6 == null goto label2;

        $r7 = r0.<android.content.RestrictionsManager: android.content.IRestrictionsManager mService>;

        interfaceinvoke $r7.<android.content.IRestrictionsManager: void notifyPermissionResponse(java.lang.String,android.os.PersistableBundle)>(r10, r1);

     label2:
        return;

     label3:
        $r8 := @caughtexception;

        $r9 = virtualinvoke $r8.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r9;

     label4:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("RESPONSE_KEY_RESULT must be specified");

        throw $r5;

     label5:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("REQUEST_KEY_ID must be specified");

        throw $r4;

     label6:
        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("request cannot be null");

        throw $r3;

     label7:
        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("packageName cannot be null");

        throw $r2;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void requestPermission(java.lang.String, java.lang.String, android.os.PersistableBundle)
    {
        android.content.RestrictionsManager r0;
        java.lang.String r1, $r9, r12;
        android.os.PersistableBundle r2;
        java.lang.NullPointerException $r3, $r4, $r5;
        android.content.IRestrictionsManager $r6, $r8;
        android.content.Context $r7;
        android.os.RemoteException $r10;
        java.lang.RuntimeException $r11;

        r0 := @this: android.content.RestrictionsManager;

        r12 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.os.PersistableBundle;

        if r12 == null goto label6;

        if r1 == null goto label5;

        if r2 == null goto label4;

     label1:
        $r6 = r0.<android.content.RestrictionsManager: android.content.IRestrictionsManager mService>;

        if $r6 == null goto label2;

        $r8 = r0.<android.content.RestrictionsManager: android.content.IRestrictionsManager mService>;

        $r7 = r0.<android.content.RestrictionsManager: android.content.Context mContext>;

        $r9 = virtualinvoke $r7.<android.content.Context: java.lang.String getPackageName()>();

        interfaceinvoke $r8.<android.content.IRestrictionsManager: void requestPermission(java.lang.String,java.lang.String,java.lang.String,android.os.PersistableBundle)>($r9, r12, r1, r2);

     label2:
        return;

     label3:
        $r10 := @caughtexception;

        $r11 = virtualinvoke $r10.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r11;

     label4:
        $r5 = new java.lang.NullPointerException;

        specialinvoke $r5.<java.lang.NullPointerException: void <init>(java.lang.String)>("request cannot be null");

        throw $r5;

     label5:
        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("requestId cannot be null");

        throw $r4;

     label6:
        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("requestType cannot be null");

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <android.content.RestrictionsManager: java.lang.String TAG_RESTRICTION> = "restriction";

        <android.content.RestrictionsManager: java.lang.String TAG> = "RestrictionsManager";

        <android.content.RestrictionsManager: int RESULT_UNKNOWN_REQUEST> = 4;

        <android.content.RestrictionsManager: int RESULT_NO_RESPONSE> = 3;

        <android.content.RestrictionsManager: int RESULT_ERROR_NETWORK> = 2;

        <android.content.RestrictionsManager: int RESULT_ERROR_INTERNAL> = 3;

        <android.content.RestrictionsManager: int RESULT_ERROR_BAD_REQUEST> = 1;

        <android.content.RestrictionsManager: int RESULT_ERROR> = 5;

        <android.content.RestrictionsManager: int RESULT_DENIED> = 2;

        <android.content.RestrictionsManager: int RESULT_APPROVED> = 1;

        <android.content.RestrictionsManager: java.lang.String RESPONSE_KEY_RESULT> = "android.response.result";

        <android.content.RestrictionsManager: java.lang.String RESPONSE_KEY_RESPONSE_TIMESTAMP> = "android.response.timestamp";

        <android.content.RestrictionsManager: java.lang.String RESPONSE_KEY_MESSAGE> = "android.response.msg";

        <android.content.RestrictionsManager: java.lang.String RESPONSE_KEY_ERROR_CODE> = "android.response.errorcode";

        <android.content.RestrictionsManager: java.lang.String REQUEST_TYPE_APPROVAL> = "android.request.type.approval";

        <android.content.RestrictionsManager: java.lang.String REQUEST_KEY_TITLE> = "android.request.title";

        <android.content.RestrictionsManager: java.lang.String REQUEST_KEY_NEW_REQUEST> = "android.request.new_request";

        <android.content.RestrictionsManager: java.lang.String REQUEST_KEY_MESSAGE> = "android.request.mesg";

        <android.content.RestrictionsManager: java.lang.String REQUEST_KEY_ID> = "android.request.id";

        <android.content.RestrictionsManager: java.lang.String REQUEST_KEY_ICON> = "android.request.icon";

        <android.content.RestrictionsManager: java.lang.String REQUEST_KEY_DENY_LABEL> = "android.request.deny_label";

        <android.content.RestrictionsManager: java.lang.String REQUEST_KEY_DATA> = "android.request.data";

        <android.content.RestrictionsManager: java.lang.String REQUEST_KEY_APPROVE_LABEL> = "android.request.approve_label";

        <android.content.RestrictionsManager: java.lang.String META_DATA_APP_RESTRICTIONS> = "android.content.APP_RESTRICTIONS";

        <android.content.RestrictionsManager: java.lang.String EXTRA_RESPONSE_BUNDLE> = "android.content.extra.RESPONSE_BUNDLE";

        <android.content.RestrictionsManager: java.lang.String EXTRA_REQUEST_TYPE> = "android.content.extra.REQUEST_TYPE";

        <android.content.RestrictionsManager: java.lang.String EXTRA_REQUEST_ID> = "android.content.extra.REQUEST_ID";

        <android.content.RestrictionsManager: java.lang.String EXTRA_REQUEST_BUNDLE> = "android.content.extra.REQUEST_BUNDLE";

        <android.content.RestrictionsManager: java.lang.String EXTRA_PACKAGE_NAME> = "android.content.extra.PACKAGE_NAME";

        <android.content.RestrictionsManager: java.lang.String ACTION_REQUEST_PERMISSION> = "android.content.action.REQUEST_PERMISSION";

        <android.content.RestrictionsManager: java.lang.String ACTION_REQUEST_LOCAL_APPROVAL> = "android.content.action.REQUEST_LOCAL_APPROVAL";

        <android.content.RestrictionsManager: java.lang.String ACTION_PERMISSION_RESPONSE_RECEIVED> = "android.content.action.PERMISSION_RESPONSE_RECEIVED";

        return;
    }
}
