class android.content.SearchRecentSuggestionsProvider$DatabaseHelper extends android.database.sqlite.SQLiteOpenHelper
{
    private int mNewVersion;

    public void <init>(android.content.Context, int)
    {
        android.content.SearchRecentSuggestionsProvider$DatabaseHelper r0;
        android.content.Context r1;
        int i0;

        r0 := @this: android.content.SearchRecentSuggestionsProvider$DatabaseHelper;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        specialinvoke r0.<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>(r1, "suggestions.db", null, i0);

        r0.<android.content.SearchRecentSuggestionsProvider$DatabaseHelper: int mNewVersion> = i0;

        return;
    }

    public void onCreate(android.database.sqlite.SQLiteDatabase)
    {
        android.content.SearchRecentSuggestionsProvider$DatabaseHelper r0;
        android.database.sqlite.SQLiteDatabase r1;
        java.lang.StringBuilder $r3;
        int $i0, $i1;
        java.lang.String $r6;

        r0 := @this: android.content.SearchRecentSuggestionsProvider$DatabaseHelper;

        r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CREATE TABLE suggestions (_id INTEGER PRIMARY KEY,display1 TEXT UNIQUE ON CONFLICT REPLACE");

        $i0 = r0.<android.content.SearchRecentSuggestionsProvider$DatabaseHelper: int mNewVersion>;

        $i1 = $i0 & 2;

        if $i1 == 0 goto label1;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",display2 TEXT");

     label1:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",query TEXT,date LONG);");

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>($r6);

        return;
    }

    public void onUpgrade(android.database.sqlite.SQLiteDatabase, int, int)
    {
        android.content.SearchRecentSuggestionsProvider$DatabaseHelper r0;
        android.database.sqlite.SQLiteDatabase r1;
        int i0, i1;
        java.lang.StringBuilder $r3;
        java.lang.String $r9;

        r0 := @this: android.content.SearchRecentSuggestionsProvider$DatabaseHelper;

        r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Upgrading database from version ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", which will destroy all old data");

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("SuggestionsProvider", $r9);

        virtualinvoke r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("DROP TABLE IF EXISTS suggestions");

        virtualinvoke r0.<android.content.SearchRecentSuggestionsProvider$DatabaseHelper: void onCreate(android.database.sqlite.SQLiteDatabase)>(r1);

        return;
    }
}
