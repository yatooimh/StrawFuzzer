final class android.content.UndoManager$UndoState extends java.lang.Object
{
    private boolean mCanMerge;
    private final int mCommitId;
    private boolean mExecuted;
    private java.lang.CharSequence mLabel;
    private final android.content.UndoManager mManager;
    private final java.util.ArrayList mOperations;
    private java.util.ArrayList mRecent;

    void <init>(android.content.UndoManager, int)
    {
        android.content.UndoManager$UndoState r0;
        android.content.UndoManager r1;
        int i0;
        java.util.ArrayList $r2;

        r0 := @this: android.content.UndoManager$UndoState;

        r1 := @parameter0: android.content.UndoManager;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<android.content.UndoManager$UndoState: java.util.ArrayList mOperations> = $r2;

        r0.<android.content.UndoManager$UndoState: boolean mCanMerge> = 1;

        r0.<android.content.UndoManager$UndoState: android.content.UndoManager mManager> = r1;

        r0.<android.content.UndoManager$UndoState: int mCommitId> = i0;

        return;
    }

    void <init>(android.content.UndoManager, android.os.Parcel, java.lang.ClassLoader)
    {
        android.content.UndoManager$UndoState r0;
        android.os.Parcel r1;
        java.lang.ClassLoader r2;
        int i0, $i1, $i2, $i3, i4;
        android.content.UndoOwner r3;
        java.util.ArrayList $r4, $r10;
        android.os.Parcelable$Creator $r5;
        java.lang.Object $r6;
        java.lang.CharSequence $r7;
        android.content.UndoManager $r8, r11;
        android.os.Parcelable $r9;
        boolean z2, z3;
        android.content.UndoOperation r12;

        r0 := @this: android.content.UndoManager$UndoState;

        r11 := @parameter0: android.content.UndoManager;

        r1 := @parameter1: android.os.Parcel;

        r2 := @parameter2: java.lang.ClassLoader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<android.content.UndoManager$UndoState: java.util.ArrayList mOperations> = $r4;

        r0.<android.content.UndoManager$UndoState: boolean mCanMerge> = 1;

        r0.<android.content.UndoManager$UndoState: android.content.UndoManager mManager> = r11;

        $i1 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.content.UndoManager$UndoState: int mCommitId> = $i1;

        $i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i2 == 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        r0.<android.content.UndoManager$UndoState: boolean mCanMerge> = z2;

        $i3 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i3 == 0 goto label3;

        z3 = 1;

        goto label4;

     label3:
        z3 = 0;

     label4:
        r0.<android.content.UndoManager$UndoState: boolean mExecuted> = z3;

        $r5 = <android.text.TextUtils: android.os.Parcelable$Creator CHAR_SEQUENCE_CREATOR>;

        $r6 = interfaceinvoke $r5.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        $r7 = (java.lang.CharSequence) $r6;

        r0.<android.content.UndoManager$UndoState: java.lang.CharSequence mLabel> = $r7;

        i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        i4 = 0;

     label5:
        if i4 >= i0 goto label6;

        $r8 = r0.<android.content.UndoManager$UndoState: android.content.UndoManager mManager>;

        r3 = virtualinvoke $r8.<android.content.UndoManager: android.content.UndoOwner restoreOwner(android.os.Parcel)>(r1);

        $r9 = virtualinvoke r1.<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)>(r2);

        r12 = (android.content.UndoOperation) $r9;

        r12.<android.content.UndoOperation: android.content.UndoOwner mOwner> = r3;

        $r10 = r0.<android.content.UndoManager$UndoState: java.util.ArrayList mOperations>;

        virtualinvoke $r10.<java.util.ArrayList: boolean add(java.lang.Object)>(r12);

        i4 = i4 + 1;

        goto label5;

     label6:
        return;
    }

    void addOperation(android.content.UndoOperation)
    {
        android.content.UndoManager$UndoState r0;
        java.util.ArrayList $r1, $r7, $r8, $r9;
        boolean $z0;
        java.lang.StringBuilder $r2;
        java.lang.IllegalStateException $r5;
        java.lang.String $r6;
        int $i0, $i1;
        android.content.UndoOperation r10;
        android.content.UndoOwner r12;

        r0 := @this: android.content.UndoManager$UndoState;

        r10 := @parameter0: android.content.UndoOperation;

        $r1 = r0.<android.content.UndoManager$UndoState: java.util.ArrayList mOperations>;

        $z0 = virtualinvoke $r1.<java.util.ArrayList: boolean contains(java.lang.Object)>(r10);

        if $z0 != 0 goto label2;

        $r7 = r0.<android.content.UndoManager$UndoState: java.util.ArrayList mOperations>;

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>(r10);

        $r8 = r0.<android.content.UndoManager$UndoState: java.util.ArrayList mRecent>;

        if $r8 != null goto label1;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r0.<android.content.UndoManager$UndoState: java.util.ArrayList mRecent> = $r9;

        virtualinvoke $r9.<java.util.ArrayList: boolean add(java.lang.Object)>(r10);

     label1:
        r12 = r10.<android.content.UndoOperation: android.content.UndoOwner mOwner>;

        $i0 = r12.<android.content.UndoOwner: int mOpCount>;

        $i1 = $i0 + 1;

        r12.<android.content.UndoOwner: int mOpCount> = $i1;

        return;

     label2:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Already holds ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r10);

        $r5 = new java.lang.IllegalStateException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6);

        throw $r5;
    }

    boolean canMerge()
    {
        android.content.UndoManager$UndoState r0;
        boolean $z0, $z1, z2;

        r0 := @this: android.content.UndoManager$UndoState;

        $z0 = r0.<android.content.UndoManager$UndoState: boolean mCanMerge>;

        if $z0 == 0 goto label1;

        $z1 = r0.<android.content.UndoManager$UndoState: boolean mExecuted>;

        if $z1 != 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;
    }

    void commit()
    {
        android.content.UndoManager$UndoState r0;
        java.util.ArrayList r1, $r2;
        java.lang.Object $r3;
        android.content.UndoOperation $r4;
        int i0, i1;

        r0 := @this: android.content.UndoManager$UndoState;

        r1 = r0.<android.content.UndoManager$UndoState: java.util.ArrayList mRecent>;

        if r1 == null goto label1;

        i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        goto label2;

     label1:
        i0 = 0;

     label2:
        i1 = 0;

     label3:
        if i1 >= i0 goto label4;

        $r2 = r0.<android.content.UndoManager$UndoState: java.util.ArrayList mRecent>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r4 = (android.content.UndoOperation) $r3;

        virtualinvoke $r4.<android.content.UndoOperation: void commit()>();

        i1 = i1 + 1;

        goto label3;

     label4:
        r0.<android.content.UndoManager$UndoState: java.util.ArrayList mRecent> = null;

        return;
    }

    int countOperations()
    {
        android.content.UndoManager$UndoState r0;
        java.util.ArrayList $r1;
        int $i0;

        r0 := @this: android.content.UndoManager$UndoState;

        $r1 = r0.<android.content.UndoManager$UndoState: java.util.ArrayList mOperations>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        return $i0;
    }

    void destroy()
    {
        android.content.UndoManager$UndoState r0;
        android.content.UndoOwner r1;
        java.util.ArrayList $r3, $r4, $r11;
        int $i0, $i1, $i2, $i3, $i4, i5;
        java.lang.Object $r5, $r12;
        android.content.UndoOperation $r6;
        java.lang.StringBuilder $r7;
        java.lang.IllegalStateException $r14;
        java.lang.String $r15;
        android.content.UndoManager $r16;

        r0 := @this: android.content.UndoManager$UndoState;

        $r3 = r0.<android.content.UndoManager$UndoState: java.util.ArrayList mOperations>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i5 = $i0 - 1;

     label1:
        if i5 < 0 goto label4;

        $r4 = r0.<android.content.UndoManager$UndoState: java.util.ArrayList mOperations>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        $r6 = (android.content.UndoOperation) $r5;

        r1 = $r6.<android.content.UndoOperation: android.content.UndoOwner mOwner>;

        $i1 = r1.<android.content.UndoOwner: int mOpCount>;

        $i2 = $i1 - 1;

        r1.<android.content.UndoOwner: int mOpCount> = $i2;

        $i3 = r1.<android.content.UndoOwner: int mOpCount>;

        if $i3 > 0 goto label3;

        $i4 = r1.<android.content.UndoOwner: int mOpCount>;

        if $i4 < 0 goto label2;

        $r16 = r0.<android.content.UndoManager$UndoState: android.content.UndoManager mManager>;

        virtualinvoke $r16.<android.content.UndoManager: void removeOwner(android.content.UndoOwner)>(r1);

        goto label3;

     label2:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Underflow of op count on owner ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in op ");

        $r11 = r0.<android.content.UndoManager$UndoState: java.util.ArrayList mOperations>;

        $r12 = virtualinvoke $r11.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r14 = new java.lang.IllegalStateException;

        $r15 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r15);

        throw $r14;

     label3:
        i5 = i5 + -1;

        goto label1;

     label4:
        return;
    }

    int getCommitId()
    {
        android.content.UndoManager$UndoState r0;
        int $i0;

        r0 := @this: android.content.UndoManager$UndoState;

        $i0 = r0.<android.content.UndoManager$UndoState: int mCommitId>;

        return $i0;
    }

    java.lang.CharSequence getLabel()
    {
        android.content.UndoManager$UndoState r0;
        java.lang.CharSequence $r1;

        r0 := @this: android.content.UndoManager$UndoState;

        $r1 = r0.<android.content.UndoManager$UndoState: java.lang.CharSequence mLabel>;

        return $r1;
    }

    android.content.UndoOperation getLastOperation(java.lang.Class, android.content.UndoOwner)
    {
        android.content.UndoManager$UndoState r0;
        android.content.UndoOwner r1, $r6;
        java.util.ArrayList $r2, $r3, $r7;
        java.lang.Object $r4, $r8;
        java.lang.Class $r5, r9;
        int $i0, i1, i2;
        android.content.UndoOperation r10, r11;

        r0 := @this: android.content.UndoManager$UndoState;

        r9 := @parameter0: java.lang.Class;

        r1 := @parameter1: android.content.UndoOwner;

        $r2 = r0.<android.content.UndoManager$UndoState: java.util.ArrayList mOperations>;

        i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if r9 != null goto label2;

        if r1 != null goto label2;

        r10 = null;

        if i1 <= 0 goto label1;

        $r7 = r0.<android.content.UndoManager$UndoState: java.util.ArrayList mOperations>;

        $i0 = i1 - 1;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        r10 = (android.content.UndoOperation) $r8;

     label1:
        return r10;

     label2:
        i2 = i1 + -1;

     label3:
        if i2 < 0 goto label6;

        $r3 = r0.<android.content.UndoManager$UndoState: java.util.ArrayList mOperations>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r11 = (android.content.UndoOperation) $r4;

        if r1 == null goto label4;

        $r6 = virtualinvoke r11.<android.content.UndoOperation: android.content.UndoOwner getOwner()>();

        if $r6 == r1 goto label4;

        i2 = i2 + -1;

        goto label3;

     label4:
        if r9 == null goto label5;

        $r5 = virtualinvoke r11.<java.lang.Object: java.lang.Class getClass()>();

        if $r5 == r9 goto label5;

        return null;

     label5:
        return r11;

     label6:
        return null;
    }

    boolean hasData()
    {
        android.content.UndoManager$UndoState r0;
        java.util.ArrayList $r1, $r2;
        int $i0, i1;
        java.lang.Object $r3;
        android.content.UndoOperation $r4;
        boolean $z0;

        r0 := @this: android.content.UndoManager$UndoState;

        $r1 = r0.<android.content.UndoManager$UndoState: java.util.ArrayList mOperations>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label3;

        $r2 = r0.<android.content.UndoManager$UndoState: java.util.ArrayList mOperations>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r4 = (android.content.UndoOperation) $r3;

        $z0 = virtualinvoke $r4.<android.content.UndoOperation: boolean hasData()>();

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + -1;

        goto label1;

     label3:
        return 0;
    }

    boolean hasMultipleOwners()
    {
        android.content.UndoManager$UndoState r0;
        int i0, i1;
        android.content.UndoOwner r1, $r9;
        java.util.ArrayList $r2, $r3, $r6;
        java.lang.Object $r4, $r7;
        android.content.UndoOperation $r5, $r8;

        r0 := @this: android.content.UndoManager$UndoState;

        $r2 = r0.<android.content.UndoManager$UndoState: java.util.ArrayList mOperations>;

        i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if i0 > 1 goto label1;

        return 0;

     label1:
        $r3 = r0.<android.content.UndoManager$UndoState: java.util.ArrayList mOperations>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r5 = (android.content.UndoOperation) $r4;

        r1 = virtualinvoke $r5.<android.content.UndoOperation: android.content.UndoOwner getOwner()>();

        i1 = 1;

     label2:
        if i1 >= i0 goto label4;

        $r6 = r0.<android.content.UndoManager$UndoState: java.util.ArrayList mOperations>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r8 = (android.content.UndoOperation) $r7;

        $r9 = virtualinvoke $r8.<android.content.UndoOperation: android.content.UndoOwner getOwner()>();

        if $r9 == r1 goto label3;

        return 1;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        return 0;
    }

    boolean hasOperation(android.content.UndoOwner)
    {
        android.content.UndoManager$UndoState r0;
        android.content.UndoOwner r1, $r6;
        int i0, i1;
        java.util.ArrayList $r2, $r3;
        java.lang.Object $r4;
        android.content.UndoOperation $r5;
        boolean z0;

        r0 := @this: android.content.UndoManager$UndoState;

        r1 := @parameter0: android.content.UndoOwner;

        $r2 = r0.<android.content.UndoManager$UndoState: java.util.ArrayList mOperations>;

        i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        z0 = 0;

        if r1 != null goto label2;

        if i0 == 0 goto label1;

        z0 = 1;

     label1:
        return z0;

     label2:
        i1 = 0;

     label3:
        if i1 >= i0 goto label5;

        $r3 = r0.<android.content.UndoManager$UndoState: java.util.ArrayList mOperations>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r5 = (android.content.UndoOperation) $r4;

        $r6 = virtualinvoke $r5.<android.content.UndoOperation: android.content.UndoOwner getOwner()>();

        if $r6 != r1 goto label4;

        return 1;

     label4:
        i1 = i1 + 1;

        goto label3;

     label5:
        return 0;
    }

    void makeExecuted()
    {
        android.content.UndoManager$UndoState r0;

        r0 := @this: android.content.UndoManager$UndoState;

        r0.<android.content.UndoManager$UndoState: boolean mExecuted> = 1;

        return;
    }

    boolean matchOwner(android.content.UndoOwner)
    {
        android.content.UndoManager$UndoState r0;
        android.content.UndoOwner r1;
        java.util.ArrayList $r2, $r3;
        int $i0, i1;
        java.lang.Object $r4;
        android.content.UndoOperation $r5;
        boolean $z0;

        r0 := @this: android.content.UndoManager$UndoState;

        r1 := @parameter0: android.content.UndoOwner;

        $r2 = r0.<android.content.UndoManager$UndoState: java.util.ArrayList mOperations>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label3;

        $r3 = r0.<android.content.UndoManager$UndoState: java.util.ArrayList mOperations>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r5 = (android.content.UndoOperation) $r4;

        $z0 = virtualinvoke $r5.<android.content.UndoOperation: boolean matchOwner(android.content.UndoOwner)>(r1);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + -1;

        goto label1;

     label3:
        return 0;
    }

    void redo()
    {
        android.content.UndoManager$UndoState r0;
        int i0, i1;
        java.util.ArrayList $r1, $r2;
        java.lang.Object $r3;
        android.content.UndoOperation $r4;

        r0 := @this: android.content.UndoManager$UndoState;

        $r1 = r0.<android.content.UndoManager$UndoState: java.util.ArrayList mOperations>;

        i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r2 = r0.<android.content.UndoManager$UndoState: java.util.ArrayList mOperations>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r4 = (android.content.UndoOperation) $r3;

        virtualinvoke $r4.<android.content.UndoOperation: void redo()>();

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    boolean setCanMerge(boolean)
    {
        android.content.UndoManager$UndoState r0;
        boolean z0, $z1;

        r0 := @this: android.content.UndoManager$UndoState;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $z1 = r0.<android.content.UndoManager$UndoState: boolean mExecuted>;

        if $z1 == 0 goto label1;

        return 0;

     label1:
        r0.<android.content.UndoManager$UndoState: boolean mCanMerge> = z0;

        return 1;
    }

    void setLabel(java.lang.CharSequence)
    {
        android.content.UndoManager$UndoState r0;
        java.lang.CharSequence r1;

        r0 := @this: android.content.UndoManager$UndoState;

        r1 := @parameter0: java.lang.CharSequence;

        r0.<android.content.UndoManager$UndoState: java.lang.CharSequence mLabel> = r1;

        return;
    }

    void undo()
    {
        android.content.UndoManager$UndoState r0;
        java.util.ArrayList $r1, $r2;
        int $i0, i1;
        java.lang.Object $r3;
        android.content.UndoOperation $r4;

        r0 := @this: android.content.UndoManager$UndoState;

        $r1 = r0.<android.content.UndoManager$UndoState: java.util.ArrayList mOperations>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label2;

        $r2 = r0.<android.content.UndoManager$UndoState: java.util.ArrayList mOperations>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r4 = (android.content.UndoOperation) $r3;

        virtualinvoke $r4.<android.content.UndoOperation: void undo()>();

        i1 = i1 + -1;

        goto label1;

     label2:
        return;
    }

    void updateLabel(java.lang.CharSequence)
    {
        android.content.UndoManager$UndoState r0;
        java.lang.CharSequence r1, $r2;

        r0 := @this: android.content.UndoManager$UndoState;

        r1 := @parameter0: java.lang.CharSequence;

        $r2 = r0.<android.content.UndoManager$UndoState: java.lang.CharSequence mLabel>;

        if $r2 == null goto label1;

        r0.<android.content.UndoManager$UndoState: java.lang.CharSequence mLabel> = r1;

     label1:
        return;
    }

    void writeToParcel(android.os.Parcel)
    {
        android.content.UndoManager$UndoState r0;
        android.os.Parcel r1;
        int i0, $i1, i2, i3, i4;
        android.content.UndoOperation r2;
        java.util.ArrayList $r3, $r6, $r7;
        java.lang.IllegalStateException $r4;
        boolean $z0, $z1;
        java.lang.CharSequence $r5;
        java.lang.Object $r8;
        android.content.UndoOwner $r9;
        android.content.UndoManager $r10;

        r0 := @this: android.content.UndoManager$UndoState;

        r1 := @parameter0: android.os.Parcel;

        $r3 = r0.<android.content.UndoManager$UndoState: java.util.ArrayList mRecent>;

        if $r3 != null goto label3;

        $i1 = r0.<android.content.UndoManager$UndoState: int mCommitId>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $z0 = r0.<android.content.UndoManager$UndoState: boolean mCanMerge>;

        i3 = (int) $z0;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i3);

        $z1 = r0.<android.content.UndoManager$UndoState: boolean mExecuted>;

        i4 = (int) $z1;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i4);

        $r5 = r0.<android.content.UndoManager$UndoState: java.lang.CharSequence mLabel>;

        staticinvoke <android.text.TextUtils: void writeToParcel(java.lang.CharSequence,android.os.Parcel,int)>($r5, r1, 0);

        $r6 = r0.<android.content.UndoManager$UndoState: java.util.ArrayList mOperations>;

        i0 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        i2 = 0;

     label1:
        if i2 >= i0 goto label2;

        $r7 = r0.<android.content.UndoManager$UndoState: java.util.ArrayList mOperations>;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r2 = (android.content.UndoOperation) $r8;

        $r10 = r0.<android.content.UndoManager$UndoState: android.content.UndoManager mManager>;

        $r9 = r2.<android.content.UndoOperation: android.content.UndoOwner mOwner>;

        virtualinvoke $r10.<android.content.UndoManager: void saveOwner(android.content.UndoOwner,android.os.Parcel)>($r9, r1);

        virtualinvoke r1.<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>(r2, 0);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;

     label3:
        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Can\'t save state before committing");

        throw $r4;
    }
}
