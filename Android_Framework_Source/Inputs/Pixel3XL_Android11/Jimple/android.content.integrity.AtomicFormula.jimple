public abstract class android.content.integrity.AtomicFormula extends android.content.integrity.IntegrityFormula
{
    public static final int APP_CERTIFICATE;
    public static final int EQ;
    public static final int GT;
    public static final int GTE;
    public static final int INSTALLER_CERTIFICATE;
    public static final int INSTALLER_NAME;
    public static final int PACKAGE_NAME;
    public static final int PRE_INSTALLED;
    public static final int STAMP_CERTIFICATE_HASH;
    public static final int STAMP_TRUSTED;
    public static final int VERSION_CODE;
    private final int mKey;

    public void <init>(int)
    {
        android.content.integrity.AtomicFormula r0;
        int i0;
        boolean $z0;
        java.lang.Object[] $r1;
        java.lang.Integer $r2;
        java.lang.String $r3;

        r0 := @this: android.content.integrity.AtomicFormula;

        i0 := @parameter0: int;

        specialinvoke r0.<android.content.integrity.IntegrityFormula: void <init>()>();

        $z0 = staticinvoke <android.content.integrity.AtomicFormula: boolean isValidKey(int)>(i0);

        $r1 = newarray (java.lang.Object)[1];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r1[0] = $r2;

        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unknown key: %d", $r1);

        staticinvoke <com.android.internal.util.Preconditions: void checkArgument(boolean,java.lang.Object)>($z0, $r3);

        r0.<android.content.integrity.AtomicFormula: int mKey> = i0;

        return;
    }

    private static boolean isValidKey(int)
    {
        int i0;
        boolean z1;

        i0 := @parameter0: int;

        z1 = 1;

        if i0 == 0 goto label2;

        z1 = 1;

        if i0 == 1 goto label2;

        z1 = 1;

        if i0 == 4 goto label2;

        z1 = 1;

        if i0 == 2 goto label2;

        z1 = 1;

        if i0 == 3 goto label2;

        z1 = 1;

        if i0 == 5 goto label2;

        z1 = 1;

        if i0 == 6 goto label2;

        if i0 != 7 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    static java.lang.String keyToString(int)
    {
        int i0;
        java.lang.StringBuilder $r1;
        java.lang.IllegalArgumentException $r4;
        java.lang.String $r5;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label9;
            case 1: goto label8;
            case 2: goto label7;
            case 3: goto label6;
            case 4: goto label5;
            case 5: goto label4;
            case 6: goto label3;
            case 7: goto label2;
            default: goto label1;
        };

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown key ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r4;

     label2:
        return "STAMP_CERTIFICATE_HASH";

     label3:
        return "STAMP_TRUSTED";

     label4:
        return "PRE_INSTALLED";

     label5:
        return "VERSION_CODE";

     label6:
        return "INSTALLER_CERTIFICATE";

     label7:
        return "INSTALLER_NAME";

     label8:
        return "APP_CERTIFICATE";

     label9:
        return "PACKAGE_NAME";
    }

    static java.lang.String operatorToString(int)
    {
        int i0;
        java.lang.StringBuilder $r1;
        java.lang.IllegalArgumentException $r4;
        java.lang.String $r5;

        i0 := @parameter0: int;

        if i0 == 0 goto label3;

        if i0 == 1 goto label2;

        if i0 != 2 goto label1;

        return "GTE";

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown operator ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r4;

     label2:
        return "GT";

     label3:
        return "EQ";
    }

    public int getKey()
    {
        android.content.integrity.AtomicFormula r0;
        int $i0;

        r0 := @this: android.content.integrity.AtomicFormula;

        $i0 = r0.<android.content.integrity.AtomicFormula: int mKey>;

        return $i0;
    }

    public static void <clinit>()
    {
        <android.content.integrity.AtomicFormula: int VERSION_CODE> = 4;

        <android.content.integrity.AtomicFormula: int STAMP_TRUSTED> = 6;

        <android.content.integrity.AtomicFormula: int STAMP_CERTIFICATE_HASH> = 7;

        <android.content.integrity.AtomicFormula: int PRE_INSTALLED> = 5;

        <android.content.integrity.AtomicFormula: int PACKAGE_NAME> = 0;

        <android.content.integrity.AtomicFormula: int INSTALLER_NAME> = 2;

        <android.content.integrity.AtomicFormula: int INSTALLER_CERTIFICATE> = 3;

        <android.content.integrity.AtomicFormula: int GTE> = 2;

        <android.content.integrity.AtomicFormula: int GT> = 1;

        <android.content.integrity.AtomicFormula: int EQ> = 0;

        <android.content.integrity.AtomicFormula: int APP_CERTIFICATE> = 1;

        return;
    }
}
