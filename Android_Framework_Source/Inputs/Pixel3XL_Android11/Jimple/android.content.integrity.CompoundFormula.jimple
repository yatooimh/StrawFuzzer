public final class android.content.integrity.CompoundFormula extends android.content.integrity.IntegrityFormula implements android.os.Parcelable
{
    public static final int AND;
    public static final android.os.Parcelable$Creator CREATOR;
    public static final int NOT;
    public static final int OR;
    private final int mConnector;
    private final java.util.List mFormulas;

    static void <clinit>()
    {
        android.content.integrity.CompoundFormula$1 $r0;

        <android.content.integrity.CompoundFormula: int OR> = 1;

        <android.content.integrity.CompoundFormula: int NOT> = 2;

        <android.content.integrity.CompoundFormula: int AND> = 0;

        $r0 = new android.content.integrity.CompoundFormula$1;

        specialinvoke $r0.<android.content.integrity.CompoundFormula$1: void <init>()>();

        <android.content.integrity.CompoundFormula: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    public void <init>(int, java.util.List)
    {
        android.content.integrity.CompoundFormula r0;
        int i0;
        java.util.List r1, $r5;
        boolean $z0;
        java.lang.Object[] $r2;
        java.lang.Integer $r3;
        java.lang.String $r4;

        r0 := @this: android.content.integrity.CompoundFormula;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.List;

        specialinvoke r0.<android.content.integrity.IntegrityFormula: void <init>()>();

        $z0 = staticinvoke <android.content.integrity.CompoundFormula: boolean isValidConnector(int)>(i0);

        $r2 = newarray (java.lang.Object)[1];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r2[0] = $r3;

        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unknown connector: %d", $r2);

        staticinvoke <com.android.internal.util.Preconditions: void checkArgument(boolean,java.lang.Object)>($z0, $r4);

        staticinvoke <android.content.integrity.CompoundFormula: void validateFormulas(int,java.util.List)>(i0, r1);

        r0.<android.content.integrity.CompoundFormula: int mConnector> = i0;

        $r5 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(r1);

        r0.<android.content.integrity.CompoundFormula: java.util.List mFormulas> = $r5;

        return;
    }

    void <init>(android.os.Parcel)
    {
        android.content.integrity.CompoundFormula r0;
        android.os.Parcel r1;
        int i0, $i1, $i2, i3;
        java.lang.StringBuilder $r3;
        java.lang.String $r6;
        java.util.ArrayList $r7;
        java.util.List $r8, $r9;
        android.content.integrity.IntegrityFormula $r10;
        boolean z1;

        r0 := @this: android.content.integrity.CompoundFormula;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<android.content.integrity.IntegrityFormula: void <init>()>();

        $i1 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.content.integrity.CompoundFormula: int mConnector> = $i1;

        i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if i0 < 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Must have non-negative length. Got ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.internal.util.Preconditions: void checkArgument(boolean,java.lang.Object)>(z1, $r6);

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>(int)>(i0);

        r0.<android.content.integrity.CompoundFormula: java.util.List mFormulas> = $r7;

        i3 = 0;

     label3:
        if i3 >= i0 goto label4;

        $r9 = r0.<android.content.integrity.CompoundFormula: java.util.List mFormulas>;

        $r10 = staticinvoke <android.content.integrity.IntegrityFormula: android.content.integrity.IntegrityFormula readFromParcel(android.os.Parcel)>(r1);

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>($r10);

        i3 = i3 + 1;

        goto label3;

     label4:
        $i2 = r0.<android.content.integrity.CompoundFormula: int mConnector>;

        $r8 = r0.<android.content.integrity.CompoundFormula: java.util.List mFormulas>;

        staticinvoke <android.content.integrity.CompoundFormula: void validateFormulas(int,java.util.List)>($i2, $r8);

        return;
    }

    private static java.lang.String connectorToString(int)
    {
        int i0;
        java.lang.StringBuilder $r1;
        java.lang.IllegalArgumentException $r4;
        java.lang.String $r5;

        i0 := @parameter0: int;

        if i0 == 0 goto label3;

        if i0 == 1 goto label2;

        if i0 != 2 goto label1;

        return "NOT";

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown connector ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r4;

     label2:
        return "OR";

     label3:
        return "AND";
    }

    private static boolean isValidConnector(int)
    {
        int i0;
        boolean z1;

        i0 := @parameter0: int;

        z1 = 1;

        if i0 == 0 goto label2;

        z1 = 1;

        if i0 == 1 goto label2;

        if i0 != 2 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    static boolean lambda$isAppCertificateFormula$2(android.content.integrity.IntegrityFormula)
    {
        android.content.integrity.IntegrityFormula r0;
        boolean $z0;

        r0 := @parameter0: android.content.integrity.IntegrityFormula;

        $z0 = virtualinvoke r0.<android.content.integrity.IntegrityFormula: boolean isAppCertificateFormula()>();

        return $z0;
    }

    static boolean lambda$isInstallerFormula$3(android.content.integrity.IntegrityFormula)
    {
        android.content.integrity.IntegrityFormula r0;
        boolean $z0;

        r0 := @parameter0: android.content.integrity.IntegrityFormula;

        $z0 = virtualinvoke r0.<android.content.integrity.IntegrityFormula: boolean isInstallerFormula()>();

        return $z0;
    }

    static boolean lambda$matches$0(android.content.integrity.AppInstallMetadata, android.content.integrity.IntegrityFormula)
    {
        android.content.integrity.AppInstallMetadata r0;
        android.content.integrity.IntegrityFormula r1;
        boolean $z0;

        r0 := @parameter0: android.content.integrity.AppInstallMetadata;

        r1 := @parameter1: android.content.integrity.IntegrityFormula;

        $z0 = virtualinvoke r1.<android.content.integrity.IntegrityFormula: boolean matches(android.content.integrity.AppInstallMetadata)>(r0);

        return $z0;
    }

    static boolean lambda$matches$1(android.content.integrity.AppInstallMetadata, android.content.integrity.IntegrityFormula)
    {
        android.content.integrity.AppInstallMetadata r0;
        android.content.integrity.IntegrityFormula r1;
        boolean $z0;

        r0 := @parameter0: android.content.integrity.AppInstallMetadata;

        r1 := @parameter1: android.content.integrity.IntegrityFormula;

        $z0 = virtualinvoke r1.<android.content.integrity.IntegrityFormula: boolean matches(android.content.integrity.AppInstallMetadata)>(r0);

        return $z0;
    }

    private static void validateFormulas(int, java.util.List)
    {
        int i0, $i1, $i2;
        java.util.List r0;
        java.lang.Object[] $r1, $r4;
        java.lang.String $r2, $r3, $r5, $r6;
        boolean z0, z1;

        i0 := @parameter0: int;

        r0 := @parameter1: java.util.List;

        if i0 == 0 goto label4;

        if i0 == 1 goto label4;

        if i0 == 2 goto label1;

        goto label7;

     label1:
        $i2 = interfaceinvoke r0.<java.util.List: int size()>();

        if $i2 != 1 goto label2;

        z0 = 1;

        goto label3;

     label2:
        z0 = 0;

     label3:
        $r4 = newarray (java.lang.Object)[1];

        $r5 = staticinvoke <android.content.integrity.CompoundFormula: java.lang.String connectorToString(int)>(i0);

        $r4[0] = $r5;

        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Connector %s must have 1 formula only", $r4);

        staticinvoke <com.android.internal.util.Preconditions: void checkArgument(boolean,java.lang.Object)>(z0, $r6);

        goto label7;

     label4:
        $i1 = interfaceinvoke r0.<java.util.List: int size()>();

        if $i1 < 2 goto label5;

        z1 = 1;

        goto label6;

     label5:
        z1 = 0;

     label6:
        $r1 = newarray (java.lang.Object)[1];

        $r2 = staticinvoke <android.content.integrity.CompoundFormula: java.lang.String connectorToString(int)>(i0);

        $r1[0] = $r2;

        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Connector %s must have at least 2 formulas", $r1);

        staticinvoke <com.android.internal.util.Preconditions: void checkArgument(boolean,java.lang.Object)>(z1, $r3);

     label7:
        return;
    }

    public int describeContents()
    {
        android.content.integrity.CompoundFormula r0;

        r0 := @this: android.content.integrity.CompoundFormula;

        return 0;
    }

    public boolean equals(java.lang.Object)
    {
        android.content.integrity.CompoundFormula r0, r6;
        java.lang.Class $r1, $r2;
        int $i0, $i1;
        java.util.List $r3, $r4;
        boolean $z0, z1;
        java.lang.Object r5;

        r0 := @this: android.content.integrity.CompoundFormula;

        r5 := @parameter0: java.lang.Object;

        z1 = 1;

        if r0 != r5 goto label1;

        return 1;

     label1:
        if r5 == null goto label5;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke r5.<java.lang.Object: java.lang.Class getClass()>();

        if $r1 == $r2 goto label2;

        goto label5;

     label2:
        r6 = (android.content.integrity.CompoundFormula) r5;

        $i1 = r0.<android.content.integrity.CompoundFormula: int mConnector>;

        $i0 = r6.<android.content.integrity.CompoundFormula: int mConnector>;

        if $i1 != $i0 goto label3;

        $r4 = r0.<android.content.integrity.CompoundFormula: java.util.List mFormulas>;

        $r3 = r6.<android.content.integrity.CompoundFormula: java.util.List mFormulas>;

        $z0 = interfaceinvoke $r4.<java.util.List: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label3;

        goto label4;

     label3:
        z1 = 0;

     label4:
        return z1;

     label5:
        return 0;
    }

    public int getConnector()
    {
        android.content.integrity.CompoundFormula r0;
        int $i0;

        r0 := @this: android.content.integrity.CompoundFormula;

        $i0 = r0.<android.content.integrity.CompoundFormula: int mConnector>;

        return $i0;
    }

    public java.util.List getFormulas()
    {
        android.content.integrity.CompoundFormula r0;
        java.util.List $r1;

        r0 := @this: android.content.integrity.CompoundFormula;

        $r1 = r0.<android.content.integrity.CompoundFormula: java.util.List mFormulas>;

        return $r1;
    }

    public int getTag()
    {
        android.content.integrity.CompoundFormula r0;

        r0 := @this: android.content.integrity.CompoundFormula;

        return 0;
    }

    public int hashCode()
    {
        android.content.integrity.CompoundFormula r0;
        java.lang.Object[] $r1;
        int $i0, $i1;
        java.lang.Integer $r2;
        java.util.List $r3;

        r0 := @this: android.content.integrity.CompoundFormula;

        $r1 = newarray (java.lang.Object)[2];

        $i0 = r0.<android.content.integrity.CompoundFormula: int mConnector>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r1[0] = $r2;

        $r3 = r0.<android.content.integrity.CompoundFormula: java.util.List mFormulas>;

        $r1[1] = $r3;

        $i1 = staticinvoke <java.util.Objects: int hash(java.lang.Object[])>($r1);

        return $i1;
    }

    public boolean isAppCertificateFormula()
    {
        android.content.integrity.CompoundFormula r0;
        java.util.List $r1;
        java.util.stream.Stream $r2;
        android.content.integrity.'-$$Lambda$CompoundFormula$M-8xxsgv81_KQXrkqgoTu52hdSc' $r3;
        boolean $z0;
        java.util.function.Predicate r4;

        r0 := @this: android.content.integrity.CompoundFormula;

        $r1 = virtualinvoke r0.<android.content.integrity.CompoundFormula: java.util.List getFormulas()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.stream.Stream stream()>();

        $r3 = <android.content.integrity._$$Lambda$CompoundFormula$M_8xxsgv81_KQXrkqgoTu52hdSc: android.content.integrity.'-$$Lambda$CompoundFormula$M-8xxsgv81_KQXrkqgoTu52hdSc' INSTANCE>;

        r4 = (java.util.function.Predicate) $r3;

        $z0 = interfaceinvoke $r2.<java.util.stream.Stream: boolean anyMatch(java.util.function.Predicate)>(r4);

        return $z0;
    }

    public boolean isInstallerFormula()
    {
        android.content.integrity.CompoundFormula r0;
        java.util.List $r1;
        java.util.stream.Stream $r2;
        android.content.integrity.'-$$Lambda$CompoundFormula$uDdqwcHo8K9__Cad__RPzb-jKiw' $r3;
        boolean $z0;
        java.util.function.Predicate r4;

        r0 := @this: android.content.integrity.CompoundFormula;

        $r1 = virtualinvoke r0.<android.content.integrity.CompoundFormula: java.util.List getFormulas()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.stream.Stream stream()>();

        $r3 = <android.content.integrity._$$Lambda$CompoundFormula$uDdqwcHo8K9__Cad__RPzb_jKiw: android.content.integrity.'-$$Lambda$CompoundFormula$uDdqwcHo8K9__Cad__RPzb-jKiw' INSTANCE>;

        r4 = (java.util.function.Predicate) $r3;

        $z0 = interfaceinvoke $r2.<java.util.stream.Stream: boolean anyMatch(java.util.function.Predicate)>(r4);

        return $z0;
    }

    public boolean matches(android.content.integrity.AppInstallMetadata)
    {
        android.content.integrity.CompoundFormula r0;
        int i0, $i1;
        java.util.List $r1, $r4, $r12;
        java.util.stream.Stream $r2, $r5;
        android.content.integrity._$$Lambda$CompoundFormula$eA9NEY6uQ5Etti30l5BCpddAf1g $r3;
        boolean $z0, $z1, $z2, $z3;
        android.content.integrity._$$Lambda$CompoundFormula$pW6rbPB_I2Vr7qv1hY_yfhAK2Fc $r6;
        java.lang.StringBuilder $r7;
        java.lang.IllegalArgumentException $r10;
        java.lang.String $r11;
        java.lang.Object $r13;
        android.content.integrity.IntegrityFormula $r14;
        android.content.integrity.AppInstallMetadata r15;

        r0 := @this: android.content.integrity.CompoundFormula;

        r15 := @parameter0: android.content.integrity.AppInstallMetadata;

        i0 = virtualinvoke r0.<android.content.integrity.CompoundFormula: int getConnector()>();

        if i0 == 0 goto label3;

        if i0 == 1 goto label2;

        if i0 != 2 goto label1;

        $r12 = virtualinvoke r0.<android.content.integrity.CompoundFormula: java.util.List getFormulas()>();

        $r13 = interfaceinvoke $r12.<java.util.List: java.lang.Object get(int)>(0);

        $r14 = (android.content.integrity.IntegrityFormula) $r13;

        $z2 = virtualinvoke $r14.<android.content.integrity.IntegrityFormula: boolean matches(android.content.integrity.AppInstallMetadata)>(r15);

        $z3 = $z2 ^ 1;

        return $z3;

     label1:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown connector ");

        $i1 = virtualinvoke r0.<android.content.integrity.CompoundFormula: int getConnector()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r10 = new java.lang.IllegalArgumentException;

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r10;

     label2:
        $r4 = virtualinvoke r0.<android.content.integrity.CompoundFormula: java.util.List getFormulas()>();

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.stream.Stream stream()>();

        $r6 = new android.content.integrity._$$Lambda$CompoundFormula$pW6rbPB_I2Vr7qv1hY_yfhAK2Fc;

        specialinvoke $r6.<android.content.integrity._$$Lambda$CompoundFormula$pW6rbPB_I2Vr7qv1hY_yfhAK2Fc: void <init>(android.content.integrity.AppInstallMetadata)>(r15);

        $z1 = interfaceinvoke $r5.<java.util.stream.Stream: boolean anyMatch(java.util.function.Predicate)>($r6);

        return $z1;

     label3:
        $r1 = virtualinvoke r0.<android.content.integrity.CompoundFormula: java.util.List getFormulas()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.stream.Stream stream()>();

        $r3 = new android.content.integrity._$$Lambda$CompoundFormula$eA9NEY6uQ5Etti30l5BCpddAf1g;

        specialinvoke $r3.<android.content.integrity._$$Lambda$CompoundFormula$eA9NEY6uQ5Etti30l5BCpddAf1g: void <init>(android.content.integrity.AppInstallMetadata)>(r15);

        $z0 = interfaceinvoke $r2.<java.util.stream.Stream: boolean allMatch(java.util.function.Predicate)>($r3);

        return $z0;
    }

    public java.lang.String toString()
    {
        android.content.integrity.CompoundFormula r0;
        java.lang.StringBuilder $r2;
        java.util.List $r3, $r4, $r6, $r19;
        int $i0, $i1, $i2, $i3, i4;
        java.lang.String $r5, $r9, $r12, $r13, $r16, $r17, $r22;
        java.lang.Object $r7, $r20;
        android.content.integrity.IntegrityFormula $r8, $r21;
        java.lang.Object[] $r11, $r15;

        r0 := @this: android.content.integrity.CompoundFormula;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = r0.<android.content.integrity.CompoundFormula: java.util.List mFormulas>;

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        if $i0 != 1 goto label1;

        $r15 = newarray (java.lang.Object)[1];

        $i3 = r0.<android.content.integrity.CompoundFormula: int mConnector>;

        $r16 = staticinvoke <android.content.integrity.CompoundFormula: java.lang.String connectorToString(int)>($i3);

        $r15[0] = $r16;

        $r17 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s ", $r15);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = r0.<android.content.integrity.CompoundFormula: java.util.List mFormulas>;

        $r20 = interfaceinvoke $r19.<java.util.List: java.lang.Object get(int)>(0);

        $r21 = (android.content.integrity.IntegrityFormula) $r20;

        $r22 = virtualinvoke $r21.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        goto label4;

     label1:
        i4 = 0;

     label2:
        $r4 = r0.<android.content.integrity.CompoundFormula: java.util.List mFormulas>;

        $i1 = interfaceinvoke $r4.<java.util.List: int size()>();

        if i4 >= $i1 goto label4;

        if i4 <= 0 goto label3;

        $r11 = newarray (java.lang.Object)[1];

        $i2 = r0.<android.content.integrity.CompoundFormula: int mConnector>;

        $r12 = staticinvoke <android.content.integrity.CompoundFormula: java.lang.String connectorToString(int)>($i2);

        $r11[0] = $r12;

        $r13 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(" %s ", $r11);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

     label3:
        $r6 = r0.<android.content.integrity.CompoundFormula: java.util.List mFormulas>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i4);

        $r8 = (android.content.integrity.IntegrityFormula) $r7;

        $r9 = virtualinvoke $r8.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        i4 = i4 + 1;

        goto label2;

     label4:
        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.content.integrity.CompoundFormula r0;
        android.os.Parcel r1;
        int i0, $i1, $i2;
        java.util.Iterator r2;
        java.util.List $r3, $r4;
        boolean $z0;
        java.lang.Object $r5;
        android.content.integrity.IntegrityFormula $r6;

        r0 := @this: android.content.integrity.CompoundFormula;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $i1 = r0.<android.content.integrity.CompoundFormula: int mConnector>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $r3 = r0.<android.content.integrity.CompoundFormula: java.util.List mFormulas>;

        $i2 = interfaceinvoke $r3.<java.util.List: int size()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i2);

        $r4 = r0.<android.content.integrity.CompoundFormula: java.util.List mFormulas>;

        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (android.content.integrity.IntegrityFormula) $r5;

        staticinvoke <android.content.integrity.IntegrityFormula: void writeToParcel(android.content.integrity.IntegrityFormula,android.os.Parcel,int)>($r6, r1, i0);

        goto label1;

     label2:
        return;
    }
}
