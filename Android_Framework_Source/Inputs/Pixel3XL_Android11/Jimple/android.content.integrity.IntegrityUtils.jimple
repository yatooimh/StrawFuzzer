public class android.content.integrity.IntegrityUtils extends java.lang.Object
{
    private static final char[] HEX_CHARS;

    static void <clinit>()
    {
        java.lang.String $r0;
        char[] $r1;

        $r0 = "0123456789ABCDEF";

        $r1 = virtualinvoke $r0.<java.lang.String: char[] toCharArray()>();

        <android.content.integrity.IntegrityUtils: char[] HEX_CHARS> = $r1;

        return;
    }

    public void <init>()
    {
        android.content.integrity.IntegrityUtils r0;

        r0 := @this: android.content.integrity.IntegrityUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static char decToHex(int)
    {
        int i0, $i1;
        java.lang.StringBuilder $r0;
        java.lang.IllegalArgumentException $r3;
        java.lang.String $r4;
        char $c2;
        char[] r5;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        r5 = <android.content.integrity.IntegrityUtils: char[] HEX_CHARS>;

        $i1 = lengthof r5;

        if i0 >= $i1 goto label1;

        $c2 = r5[i0];

        return $c2;

     label1:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid dec value to be converted to hex digit ");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r3;
    }

    public static byte[] getBytesFromHexDigest(java.lang.String)
    {
        java.lang.String r0, $r5;
        char c0, c1;
        int $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i15, $i16;
        java.lang.StringBuilder $r1;
        byte $b13, $b14;
        boolean z0;
        byte[] r7;

        r0 := @parameter0: java.lang.String;

        $i2 = virtualinvoke r0.<java.lang.String: int length()>();

        $i3 = $i2 % 2;

        if $i3 != 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid hex encoding ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": must have even length");

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.internal.util.Preconditions: void checkArgument(boolean,java.lang.Object)>(z0, $r5);

        $i4 = virtualinvoke r0.<java.lang.String: int length()>();

        $i5 = $i4 / 2;

        r7 = newarray (byte)[$i5];

        i15 = 0;

     label3:
        $i16 = lengthof r7;

        if i15 >= $i16 goto label4;

        $i6 = i15 * 2;

        c0 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i6);

        $i7 = i15 * 2;

        $i8 = $i7 + 1;

        c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i8);

        $i9 = staticinvoke <android.content.integrity.IntegrityUtils: int hexToDec(int)>(c0);

        $i10 = $i9 << 4;

        $i11 = staticinvoke <android.content.integrity.IntegrityUtils: int hexToDec(int)>(c1);

        $i12 = $i10 | $i11;

        $b13 = (byte) $i12;

        $b14 = (byte) $b13;

        r7[i15] = $b14;

        i15 = i15 + 1;

        goto label3;

     label4:
        return r7;
    }

    public static java.lang.String getHexDigest(byte[])
    {
        byte[] r0;
        char[] r1;
        byte b0, b1, $b5, $b6, $b10;
        int $i2, $i3, $i4, $i7, $i9, $i11, i13;
        java.lang.String $r2;
        char $c8, $c12;

        r0 := @parameter0: byte[];

        $i2 = lengthof r0;

        $i3 = $i2 * 2;

        r1 = newarray (char)[$i3];

        i13 = 0;

     label1:
        $i4 = lengthof r0;

        if i13 >= $i4 goto label2;

        b0 = r0[i13];

        b1 = r0[i13];

        $i7 = i13 * 2;

        $b5 = b0 >>> 4;

        $b6 = $b5 & 15;

        $c8 = staticinvoke <android.content.integrity.IntegrityUtils: char decToHex(int)>($b6);

        r1[$i7] = $c8;

        $i9 = i13 * 2;

        $i11 = $i9 + 1;

        $b10 = b1 & 15;

        $c12 = staticinvoke <android.content.integrity.IntegrityUtils: char decToHex(int)>($b10);

        r1[$i11] = $c12;

        i13 = i13 + 1;

        goto label1;

     label2:
        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(char[])>(r1);

        return $r2;
    }

    private static int hexToDec(int)
    {
        int i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.StringBuilder $r1;
        java.lang.IllegalArgumentException $r4;
        java.lang.String $r5;

        i0 := @parameter0: int;

        if i0 < 48 goto label1;

        if i0 > 57 goto label1;

        $i5 = i0 - 48;

        return $i5;

     label1:
        if i0 < 97 goto label2;

        if i0 > 102 goto label2;

        $i3 = i0 - 97;

        $i4 = $i3 + 10;

        return $i4;

     label2:
        if i0 < 65 goto label3;

        if i0 > 70 goto label3;

        $i1 = i0 - 65;

        $i2 = $i1 + 10;

        return $i2;

     label3:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid hex char ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r4;
    }
}
