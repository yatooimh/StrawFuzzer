public abstract class android.content.om.IOverlayManager$Stub extends android.os.Binder implements android.content.om.IOverlayManager
{
    private static final java.lang.String DESCRIPTOR;
    static final int TRANSACTION_getAllOverlays;
    static final int TRANSACTION_getDefaultOverlayPackages;
    static final int TRANSACTION_getOverlayInfo;
    static final int TRANSACTION_getOverlayInfosForTarget;
    static final int TRANSACTION_invalidateCachesForOverlay;
    static final int TRANSACTION_setEnabled;
    static final int TRANSACTION_setEnabledExclusive;
    static final int TRANSACTION_setEnabledExclusiveInCategory;
    static final int TRANSACTION_setHighestPriority;
    static final int TRANSACTION_setLowestPriority;
    static final int TRANSACTION_setPriority;

    public void <init>()
    {
        android.content.om.IOverlayManager$Stub r0;

        r0 := @this: android.content.om.IOverlayManager$Stub;

        specialinvoke r0.<android.os.Binder: void <init>()>();

        virtualinvoke r0.<android.content.om.IOverlayManager$Stub: void attachInterface(android.os.IInterface,java.lang.String)>(r0, "android.content.om.IOverlayManager");

        return;
    }

    public static android.content.om.IOverlayManager asInterface(android.os.IBinder)
    {
        android.os.IBinder r0;
        android.os.IInterface r1;
        android.content.om.IOverlayManager$Stub$Proxy $r2;
        boolean $z0;
        android.content.om.IOverlayManager $r3;

        r0 := @parameter0: android.os.IBinder;

        if r0 != null goto label1;

        return null;

     label1:
        r1 = interfaceinvoke r0.<android.os.IBinder: android.os.IInterface queryLocalInterface(java.lang.String)>("android.content.om.IOverlayManager");

        if r1 == null goto label2;

        $z0 = r1 instanceof android.content.om.IOverlayManager;

        if $z0 == 0 goto label2;

        $r3 = (android.content.om.IOverlayManager) r1;

        return $r3;

     label2:
        $r2 = new android.content.om.IOverlayManager$Stub$Proxy;

        specialinvoke $r2.<android.content.om.IOverlayManager$Stub$Proxy: void <init>(android.os.IBinder)>(r0);

        return $r2;
    }

    public static android.content.om.IOverlayManager getDefaultImpl()
    {
        android.content.om.IOverlayManager $r0;

        $r0 = <android.content.om.IOverlayManager$Stub$Proxy: android.content.om.IOverlayManager sDefaultImpl>;

        return $r0;
    }

    public static java.lang.String getDefaultTransactionName(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label12;
            case 2: goto label11;
            case 3: goto label10;
            case 4: goto label09;
            case 5: goto label08;
            case 6: goto label07;
            case 7: goto label06;
            case 8: goto label05;
            case 9: goto label04;
            case 10: goto label03;
            case 11: goto label02;
            default: goto label01;
        };

     label01:
        return null;

     label02:
        return "invalidateCachesForOverlay";

     label03:
        return "getDefaultOverlayPackages";

     label04:
        return "setLowestPriority";

     label05:
        return "setHighestPriority";

     label06:
        return "setPriority";

     label07:
        return "setEnabledExclusiveInCategory";

     label08:
        return "setEnabledExclusive";

     label09:
        return "setEnabled";

     label10:
        return "getOverlayInfo";

     label11:
        return "getOverlayInfosForTarget";

     label12:
        return "getAllOverlays";
    }

    public static boolean setDefaultImpl(android.content.om.IOverlayManager)
    {
        android.content.om.IOverlayManager r0, $r1;
        java.lang.IllegalStateException $r2;

        r0 := @parameter0: android.content.om.IOverlayManager;

        $r1 = <android.content.om.IOverlayManager$Stub$Proxy: android.content.om.IOverlayManager sDefaultImpl>;

        if $r1 != null goto label2;

        if r0 == null goto label1;

        <android.content.om.IOverlayManager$Stub$Proxy: android.content.om.IOverlayManager sDefaultImpl> = r0;

        return 1;

     label1:
        return 0;

     label2:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("setDefaultImpl() called twice");

        throw $r2;
    }

    public android.os.IBinder asBinder()
    {
        android.content.om.IOverlayManager$Stub r0;

        r0 := @this: android.content.om.IOverlayManager$Stub;

        return r0;
    }

    public java.lang.String getTransactionName(int)
    {
        android.content.om.IOverlayManager$Stub r0;
        int i0;
        java.lang.String $r1;

        r0 := @this: android.content.om.IOverlayManager$Stub;

        i0 := @parameter0: int;

        $r1 = staticinvoke <android.content.om.IOverlayManager$Stub: java.lang.String getDefaultTransactionName(int)>(i0);

        return $r1;
    }

    public boolean onTransact(int, android.os.Parcel, android.os.Parcel, int) throws android.os.RemoteException
    {
        android.content.om.IOverlayManager$Stub r0;
        android.os.Parcel r1, r10;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, i14, i15, i16, i17, i18, i19;
        java.lang.String $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, r12, r13;
        boolean $z1, z2, z3, z4, z5, z6, z7, z8, z9;
        java.lang.String[] r11;
        android.content.om.OverlayInfo r14;
        java.util.List r15;
        java.util.Map r16;

        r0 := @this: android.content.om.IOverlayManager$Stub;

        i13 := @parameter0: int;

        r10 := @parameter1: android.os.Parcel;

        r1 := @parameter2: android.os.Parcel;

        i0 := @parameter3: int;

        if i13 == 1598968902 goto label17;

        z2 = 0;

        tableswitch(i13)
        {
            case 1: goto label16;
            case 2: goto label15;
            case 3: goto label12;
            case 4: goto label10;
            case 5: goto label08;
            case 6: goto label07;
            case 7: goto label06;
            case 8: goto label05;
            case 9: goto label04;
            case 10: goto label03;
            case 11: goto label02;
            default: goto label01;
        };

     label01:
        $z1 = specialinvoke r0.<android.os.Binder: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>(i13, r10, r1, i0);

        return $z1;

     label02:
        virtualinvoke r10.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.content.om.IOverlayManager");

        $r2 = virtualinvoke r10.<android.os.Parcel: java.lang.String readString()>();

        $i1 = virtualinvoke r10.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.content.om.IOverlayManager$Stub: void invalidateCachesForOverlay(java.lang.String,int)>($r2, $i1);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label03:
        virtualinvoke r10.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.content.om.IOverlayManager");

        r11 = virtualinvoke r0.<android.content.om.IOverlayManager$Stub: java.lang.String[] getDefaultOverlayPackages()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeStringArray(java.lang.String[])>(r11);

        return 1;

     label04:
        virtualinvoke r10.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.content.om.IOverlayManager");

        $r3 = virtualinvoke r10.<android.os.Parcel: java.lang.String readString()>();

        $i2 = virtualinvoke r10.<android.os.Parcel: int readInt()>();

        z3 = virtualinvoke r0.<android.content.om.IOverlayManager$Stub: boolean setLowestPriority(java.lang.String,int)>($r3, $i2);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i14 = (int) z3;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i14);

        return 1;

     label05:
        virtualinvoke r10.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.content.om.IOverlayManager");

        $r4 = virtualinvoke r10.<android.os.Parcel: java.lang.String readString()>();

        $i3 = virtualinvoke r10.<android.os.Parcel: int readInt()>();

        z4 = virtualinvoke r0.<android.content.om.IOverlayManager$Stub: boolean setHighestPriority(java.lang.String,int)>($r4, $i3);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i15 = (int) z4;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i15);

        return 1;

     label06:
        virtualinvoke r10.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.content.om.IOverlayManager");

        $r5 = virtualinvoke r10.<android.os.Parcel: java.lang.String readString()>();

        $r6 = virtualinvoke r10.<android.os.Parcel: java.lang.String readString()>();

        $i4 = virtualinvoke r10.<android.os.Parcel: int readInt()>();

        z5 = virtualinvoke r0.<android.content.om.IOverlayManager$Stub: boolean setPriority(java.lang.String,java.lang.String,int)>($r5, $r6, $i4);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i16 = (int) z5;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i16);

        return 1;

     label07:
        virtualinvoke r10.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.content.om.IOverlayManager");

        $r7 = virtualinvoke r10.<android.os.Parcel: java.lang.String readString()>();

        $i5 = virtualinvoke r10.<android.os.Parcel: int readInt()>();

        z6 = virtualinvoke r0.<android.content.om.IOverlayManager$Stub: boolean setEnabledExclusiveInCategory(java.lang.String,int)>($r7, $i5);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i17 = (int) z6;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i17);

        return 1;

     label08:
        virtualinvoke r10.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.content.om.IOverlayManager");

        r12 = virtualinvoke r10.<android.os.Parcel: java.lang.String readString()>();

        $i6 = virtualinvoke r10.<android.os.Parcel: int readInt()>();

        if $i6 == 0 goto label09;

        z2 = 1;

     label09:
        $i7 = virtualinvoke r10.<android.os.Parcel: int readInt()>();

        z7 = virtualinvoke r0.<android.content.om.IOverlayManager$Stub: boolean setEnabledExclusive(java.lang.String,boolean,int)>(r12, z2, $i7);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i18 = (int) z7;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i18);

        return 1;

     label10:
        virtualinvoke r10.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.content.om.IOverlayManager");

        r13 = virtualinvoke r10.<android.os.Parcel: java.lang.String readString()>();

        z8 = 0;

        $i8 = virtualinvoke r10.<android.os.Parcel: int readInt()>();

        if $i8 == 0 goto label11;

        z8 = 1;

     label11:
        $i9 = virtualinvoke r10.<android.os.Parcel: int readInt()>();

        z9 = virtualinvoke r0.<android.content.om.IOverlayManager$Stub: boolean setEnabled(java.lang.String,boolean,int)>(r13, z8, $i9);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i19 = (int) z9;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i19);

        return 1;

     label12:
        virtualinvoke r10.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.content.om.IOverlayManager");

        $r8 = virtualinvoke r10.<android.os.Parcel: java.lang.String readString()>();

        $i10 = virtualinvoke r10.<android.os.Parcel: int readInt()>();

        r14 = virtualinvoke r0.<android.content.om.IOverlayManager$Stub: android.content.om.OverlayInfo getOverlayInfo(java.lang.String,int)>($r8, $i10);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        if r14 == null goto label13;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r14.<android.content.om.OverlayInfo: void writeToParcel(android.os.Parcel,int)>(r1, 1);

        goto label14;

     label13:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label14:
        return 1;

     label15:
        virtualinvoke r10.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.content.om.IOverlayManager");

        $r9 = virtualinvoke r10.<android.os.Parcel: java.lang.String readString()>();

        $i11 = virtualinvoke r10.<android.os.Parcel: int readInt()>();

        r15 = virtualinvoke r0.<android.content.om.IOverlayManager$Stub: java.util.List getOverlayInfosForTarget(java.lang.String,int)>($r9, $i11);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeList(java.util.List)>(r15);

        return 1;

     label16:
        virtualinvoke r10.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.content.om.IOverlayManager");

        $i12 = virtualinvoke r10.<android.os.Parcel: int readInt()>();

        r16 = virtualinvoke r0.<android.content.om.IOverlayManager$Stub: java.util.Map getAllOverlays(int)>($i12);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeMap(java.util.Map)>(r16);

        return 1;

     label17:
        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>("android.content.om.IOverlayManager");

        return 1;
    }

    public static void <clinit>()
    {
        <android.content.om.IOverlayManager$Stub: int TRANSACTION_setPriority> = 7;

        <android.content.om.IOverlayManager$Stub: int TRANSACTION_setLowestPriority> = 9;

        <android.content.om.IOverlayManager$Stub: int TRANSACTION_setHighestPriority> = 8;

        <android.content.om.IOverlayManager$Stub: int TRANSACTION_setEnabledExclusiveInCategory> = 6;

        <android.content.om.IOverlayManager$Stub: int TRANSACTION_setEnabledExclusive> = 5;

        <android.content.om.IOverlayManager$Stub: int TRANSACTION_setEnabled> = 4;

        <android.content.om.IOverlayManager$Stub: int TRANSACTION_invalidateCachesForOverlay> = 11;

        <android.content.om.IOverlayManager$Stub: int TRANSACTION_getOverlayInfosForTarget> = 2;

        <android.content.om.IOverlayManager$Stub: int TRANSACTION_getOverlayInfo> = 3;

        <android.content.om.IOverlayManager$Stub: int TRANSACTION_getDefaultOverlayPackages> = 10;

        <android.content.om.IOverlayManager$Stub: int TRANSACTION_getAllOverlays> = 1;

        <android.content.om.IOverlayManager$Stub: java.lang.String DESCRIPTOR> = "android.content.om.IOverlayManager";

        return;
    }
}
