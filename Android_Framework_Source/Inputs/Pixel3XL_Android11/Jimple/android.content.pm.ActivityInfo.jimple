public class android.content.pm.ActivityInfo extends android.content.pm.ComponentInfo implements android.os.Parcelable
{
    public static final int COLOR_MODE_DEFAULT;
    public static final int COLOR_MODE_HDR;
    public static final int COLOR_MODE_WIDE_COLOR_GAMUT;
    public static final int CONFIG_ASSETS_PATHS;
    public static final int CONFIG_COLOR_MODE;
    public static final int CONFIG_DENSITY;
    public static final int CONFIG_FONT_SCALE;
    public static final int CONFIG_KEYBOARD;
    public static final int CONFIG_KEYBOARD_HIDDEN;
    public static final int CONFIG_LAYOUT_DIRECTION;
    public static final int CONFIG_LOCALE;
    public static final int CONFIG_MCC;
    public static final int CONFIG_MNC;
    public static int[] CONFIG_NATIVE_BITS;
    public static final int CONFIG_NAVIGATION;
    public static final int CONFIG_ORIENTATION;
    public static final int CONFIG_SCREEN_LAYOUT;
    public static final int CONFIG_SCREEN_SIZE;
    public static final int CONFIG_SMALLEST_SCREEN_SIZE;
    public static final int CONFIG_TOUCHSCREEN;
    public static final int CONFIG_UI_MODE;
    public static final int CONFIG_WINDOW_CONFIGURATION;
    public static final android.os.Parcelable$Creator CREATOR;
    public static final int DOCUMENT_LAUNCH_ALWAYS;
    public static final int DOCUMENT_LAUNCH_INTO_EXISTING;
    public static final int DOCUMENT_LAUNCH_NEVER;
    public static final int DOCUMENT_LAUNCH_NONE;
    public static final int FLAG_ALLOW_EMBEDDED;
    public static final int FLAG_ALLOW_TASK_REPARENTING;
    public static final int FLAG_ALWAYS_FOCUSABLE;
    public static final int FLAG_ALWAYS_RETAIN_TASK_STATE;
    public static final int FLAG_AUTO_REMOVE_FROM_RECENTS;
    public static final int FLAG_CLEAR_TASK_ON_LAUNCH;
    public static final int FLAG_ENABLE_VR_MODE;
    public static final int FLAG_EXCLUDE_FROM_RECENTS;
    public static final int FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;
    public static final int FLAG_FINISH_ON_TASK_LAUNCH;
    public static final int FLAG_HARDWARE_ACCELERATED;
    public static final int FLAG_IMMERSIVE;
    public static final int FLAG_IMPLICITLY_VISIBLE_TO_INSTANT_APP;
    public static final int FLAG_INHERIT_SHOW_WHEN_LOCKED;
    public static final int FLAG_MULTIPROCESS;
    public static final int FLAG_NO_HISTORY;
    public static final int FLAG_PREFER_MINIMAL_POST_PROCESSING;
    public static final int FLAG_RELINQUISH_TASK_IDENTITY;
    public static final int FLAG_RESUME_WHILE_PAUSING;
    public static final int FLAG_SHOW_FOR_ALL_USERS;
    public static final int FLAG_SHOW_WHEN_LOCKED;
    public static final int FLAG_SINGLE_USER;
    public static final int FLAG_STATE_NOT_NEEDED;
    public static final int FLAG_SUPPORTS_PICTURE_IN_PICTURE;
    public static final int FLAG_SYSTEM_USER_ONLY;
    public static final int FLAG_TURN_SCREEN_ON;
    public static final int FLAG_VISIBLE_TO_INSTANT_APP;
    public static final int LAUNCH_MULTIPLE;
    public static final int LAUNCH_SINGLE_INSTANCE;
    public static final int LAUNCH_SINGLE_TASK;
    public static final int LAUNCH_SINGLE_TOP;
    public static final int LOCK_TASK_LAUNCH_MODE_ALWAYS;
    public static final int LOCK_TASK_LAUNCH_MODE_DEFAULT;
    public static final int LOCK_TASK_LAUNCH_MODE_IF_WHITELISTED;
    public static final int LOCK_TASK_LAUNCH_MODE_NEVER;
    public static final int PERSIST_ACROSS_REBOOTS;
    public static final int PERSIST_NEVER;
    public static final int PERSIST_ROOT_ONLY;
    public static final int RESIZE_MODE_FORCE_RESIZABLE_LANDSCAPE_ONLY;
    public static final int RESIZE_MODE_FORCE_RESIZABLE_PORTRAIT_ONLY;
    public static final int RESIZE_MODE_FORCE_RESIZABLE_PRESERVE_ORIENTATION;
    public static final int RESIZE_MODE_FORCE_RESIZEABLE;
    public static final int RESIZE_MODE_RESIZEABLE;
    public static final int RESIZE_MODE_RESIZEABLE_AND_PIPABLE_DEPRECATED;
    public static final int RESIZE_MODE_RESIZEABLE_VIA_SDK_VERSION;
    public static final int RESIZE_MODE_UNRESIZEABLE;
    public static final int SCREEN_ORIENTATION_BEHIND;
    public static final int SCREEN_ORIENTATION_FULL_SENSOR;
    public static final int SCREEN_ORIENTATION_FULL_USER;
    public static final int SCREEN_ORIENTATION_LANDSCAPE;
    public static final int SCREEN_ORIENTATION_LOCKED;
    public static final int SCREEN_ORIENTATION_NOSENSOR;
    public static final int SCREEN_ORIENTATION_PORTRAIT;
    public static final int SCREEN_ORIENTATION_REVERSE_LANDSCAPE;
    public static final int SCREEN_ORIENTATION_REVERSE_PORTRAIT;
    public static final int SCREEN_ORIENTATION_SENSOR;
    public static final int SCREEN_ORIENTATION_SENSOR_LANDSCAPE;
    public static final int SCREEN_ORIENTATION_SENSOR_PORTRAIT;
    public static final int SCREEN_ORIENTATION_UNSET;
    public static final int SCREEN_ORIENTATION_UNSPECIFIED;
    public static final int SCREEN_ORIENTATION_USER;
    public static final int SCREEN_ORIENTATION_USER_LANDSCAPE;
    public static final int SCREEN_ORIENTATION_USER_PORTRAIT;
    public static final int UIOPTION_SPLIT_ACTION_BAR_WHEN_NARROW;
    public int colorMode;
    public int configChanges;
    public int documentLaunchMode;
    public int flags;
    public int launchMode;
    public java.lang.String launchToken;
    public int lockTaskLaunchMode;
    public float maxAspectRatio;
    public int maxRecents;
    public float minAspectRatio;
    public java.lang.String parentActivityName;
    public java.lang.String permission;
    public int persistableMode;
    public int privateFlags;
    public java.lang.String requestedVrComponent;
    public int resizeMode;
    public int rotationAnimation;
    public int screenOrientation;
    public int softInputMode;
    public boolean supportsSizeChanges;
    public java.lang.String targetActivity;
    public java.lang.String taskAffinity;
    public int theme;
    public int uiOptions;
    public android.content.pm.ActivityInfo$WindowLayout windowLayout;

    static void <clinit>()
    {
        int[] $r0;
        android.content.pm.ActivityInfo$1 $r1;

        <android.content.pm.ActivityInfo: int UIOPTION_SPLIT_ACTION_BAR_WHEN_NARROW> = 1;

        <android.content.pm.ActivityInfo: int SCREEN_ORIENTATION_USER_PORTRAIT> = 12;

        <android.content.pm.ActivityInfo: int SCREEN_ORIENTATION_USER_LANDSCAPE> = 11;

        <android.content.pm.ActivityInfo: int SCREEN_ORIENTATION_USER> = 2;

        <android.content.pm.ActivityInfo: int SCREEN_ORIENTATION_UNSPECIFIED> = -1;

        <android.content.pm.ActivityInfo: int SCREEN_ORIENTATION_UNSET> = -2;

        <android.content.pm.ActivityInfo: int SCREEN_ORIENTATION_SENSOR_PORTRAIT> = 7;

        <android.content.pm.ActivityInfo: int SCREEN_ORIENTATION_SENSOR_LANDSCAPE> = 6;

        <android.content.pm.ActivityInfo: int SCREEN_ORIENTATION_SENSOR> = 4;

        <android.content.pm.ActivityInfo: int SCREEN_ORIENTATION_REVERSE_PORTRAIT> = 9;

        <android.content.pm.ActivityInfo: int SCREEN_ORIENTATION_REVERSE_LANDSCAPE> = 8;

        <android.content.pm.ActivityInfo: int SCREEN_ORIENTATION_PORTRAIT> = 1;

        <android.content.pm.ActivityInfo: int SCREEN_ORIENTATION_NOSENSOR> = 5;

        <android.content.pm.ActivityInfo: int SCREEN_ORIENTATION_LOCKED> = 14;

        <android.content.pm.ActivityInfo: int SCREEN_ORIENTATION_LANDSCAPE> = 0;

        <android.content.pm.ActivityInfo: int SCREEN_ORIENTATION_FULL_USER> = 13;

        <android.content.pm.ActivityInfo: int SCREEN_ORIENTATION_FULL_SENSOR> = 10;

        <android.content.pm.ActivityInfo: int SCREEN_ORIENTATION_BEHIND> = 3;

        <android.content.pm.ActivityInfo: int RESIZE_MODE_UNRESIZEABLE> = 0;

        <android.content.pm.ActivityInfo: int RESIZE_MODE_RESIZEABLE_VIA_SDK_VERSION> = 1;

        <android.content.pm.ActivityInfo: int RESIZE_MODE_RESIZEABLE_AND_PIPABLE_DEPRECATED> = 3;

        <android.content.pm.ActivityInfo: int RESIZE_MODE_RESIZEABLE> = 2;

        <android.content.pm.ActivityInfo: int RESIZE_MODE_FORCE_RESIZEABLE> = 4;

        <android.content.pm.ActivityInfo: int RESIZE_MODE_FORCE_RESIZABLE_PRESERVE_ORIENTATION> = 7;

        <android.content.pm.ActivityInfo: int RESIZE_MODE_FORCE_RESIZABLE_PORTRAIT_ONLY> = 6;

        <android.content.pm.ActivityInfo: int RESIZE_MODE_FORCE_RESIZABLE_LANDSCAPE_ONLY> = 5;

        <android.content.pm.ActivityInfo: int PERSIST_ROOT_ONLY> = 0;

        <android.content.pm.ActivityInfo: int PERSIST_NEVER> = 1;

        <android.content.pm.ActivityInfo: int PERSIST_ACROSS_REBOOTS> = 2;

        <android.content.pm.ActivityInfo: int LOCK_TASK_LAUNCH_MODE_NEVER> = 1;

        <android.content.pm.ActivityInfo: int LOCK_TASK_LAUNCH_MODE_IF_WHITELISTED> = 3;

        <android.content.pm.ActivityInfo: int LOCK_TASK_LAUNCH_MODE_DEFAULT> = 0;

        <android.content.pm.ActivityInfo: int LOCK_TASK_LAUNCH_MODE_ALWAYS> = 2;

        <android.content.pm.ActivityInfo: int LAUNCH_SINGLE_TOP> = 1;

        <android.content.pm.ActivityInfo: int LAUNCH_SINGLE_TASK> = 2;

        <android.content.pm.ActivityInfo: int LAUNCH_SINGLE_INSTANCE> = 3;

        <android.content.pm.ActivityInfo: int LAUNCH_MULTIPLE> = 0;

        <android.content.pm.ActivityInfo: int FLAG_VISIBLE_TO_INSTANT_APP> = 1048576;

        <android.content.pm.ActivityInfo: int FLAG_TURN_SCREEN_ON> = 16777216;

        <android.content.pm.ActivityInfo: int FLAG_SYSTEM_USER_ONLY> = 536870912;

        <android.content.pm.ActivityInfo: int FLAG_SUPPORTS_PICTURE_IN_PICTURE> = 4194304;

        <android.content.pm.ActivityInfo: int FLAG_STATE_NOT_NEEDED> = 16;

        <android.content.pm.ActivityInfo: int FLAG_SINGLE_USER> = 1073741824;

        <android.content.pm.ActivityInfo: int FLAG_SHOW_WHEN_LOCKED> = 8388608;

        <android.content.pm.ActivityInfo: int FLAG_SHOW_FOR_ALL_USERS> = 1024;

        <android.content.pm.ActivityInfo: int FLAG_RESUME_WHILE_PAUSING> = 16384;

        <android.content.pm.ActivityInfo: int FLAG_RELINQUISH_TASK_IDENTITY> = 4096;

        <android.content.pm.ActivityInfo: int FLAG_PREFER_MINIMAL_POST_PROCESSING> = 33554432;

        <android.content.pm.ActivityInfo: int FLAG_NO_HISTORY> = 128;

        <android.content.pm.ActivityInfo: int FLAG_MULTIPROCESS> = 1;

        <android.content.pm.ActivityInfo: int FLAG_INHERIT_SHOW_WHEN_LOCKED> = 1;

        <android.content.pm.ActivityInfo: int FLAG_IMPLICITLY_VISIBLE_TO_INSTANT_APP> = 2097152;

        <android.content.pm.ActivityInfo: int FLAG_IMMERSIVE> = 2048;

        <android.content.pm.ActivityInfo: int FLAG_HARDWARE_ACCELERATED> = 512;

        <android.content.pm.ActivityInfo: int FLAG_FINISH_ON_TASK_LAUNCH> = 2;

        <android.content.pm.ActivityInfo: int FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS> = 256;

        <android.content.pm.ActivityInfo: int FLAG_EXCLUDE_FROM_RECENTS> = 32;

        <android.content.pm.ActivityInfo: int FLAG_ENABLE_VR_MODE> = 32768;

        <android.content.pm.ActivityInfo: int FLAG_CLEAR_TASK_ON_LAUNCH> = 4;

        <android.content.pm.ActivityInfo: int FLAG_AUTO_REMOVE_FROM_RECENTS> = 8192;

        <android.content.pm.ActivityInfo: int FLAG_ALWAYS_RETAIN_TASK_STATE> = 8;

        <android.content.pm.ActivityInfo: int FLAG_ALWAYS_FOCUSABLE> = 262144;

        <android.content.pm.ActivityInfo: int FLAG_ALLOW_TASK_REPARENTING> = 64;

        <android.content.pm.ActivityInfo: int FLAG_ALLOW_EMBEDDED> = -2147483648;

        <android.content.pm.ActivityInfo: int DOCUMENT_LAUNCH_NONE> = 0;

        <android.content.pm.ActivityInfo: int DOCUMENT_LAUNCH_NEVER> = 3;

        <android.content.pm.ActivityInfo: int DOCUMENT_LAUNCH_INTO_EXISTING> = 1;

        <android.content.pm.ActivityInfo: int DOCUMENT_LAUNCH_ALWAYS> = 2;

        <android.content.pm.ActivityInfo: int CONFIG_WINDOW_CONFIGURATION> = 536870912;

        <android.content.pm.ActivityInfo: int CONFIG_UI_MODE> = 512;

        <android.content.pm.ActivityInfo: int CONFIG_TOUCHSCREEN> = 8;

        <android.content.pm.ActivityInfo: int CONFIG_SMALLEST_SCREEN_SIZE> = 2048;

        <android.content.pm.ActivityInfo: int CONFIG_SCREEN_SIZE> = 1024;

        <android.content.pm.ActivityInfo: int CONFIG_SCREEN_LAYOUT> = 256;

        <android.content.pm.ActivityInfo: int CONFIG_ORIENTATION> = 128;

        <android.content.pm.ActivityInfo: int CONFIG_NAVIGATION> = 64;

        <android.content.pm.ActivityInfo: int CONFIG_MNC> = 2;

        <android.content.pm.ActivityInfo: int CONFIG_MCC> = 1;

        <android.content.pm.ActivityInfo: int CONFIG_LOCALE> = 4;

        <android.content.pm.ActivityInfo: int CONFIG_LAYOUT_DIRECTION> = 8192;

        <android.content.pm.ActivityInfo: int CONFIG_KEYBOARD_HIDDEN> = 32;

        <android.content.pm.ActivityInfo: int CONFIG_KEYBOARD> = 16;

        <android.content.pm.ActivityInfo: int CONFIG_FONT_SCALE> = 1073741824;

        <android.content.pm.ActivityInfo: int CONFIG_DENSITY> = 4096;

        <android.content.pm.ActivityInfo: int CONFIG_COLOR_MODE> = 16384;

        <android.content.pm.ActivityInfo: int CONFIG_ASSETS_PATHS> = -2147483648;

        <android.content.pm.ActivityInfo: int COLOR_MODE_WIDE_COLOR_GAMUT> = 1;

        <android.content.pm.ActivityInfo: int COLOR_MODE_HDR> = 2;

        <android.content.pm.ActivityInfo: int COLOR_MODE_DEFAULT> = 0;

        $r0 = newarray (int)[15];

        $r0[0] = 2;

        $r0[1] = 1;

        $r0[2] = 4;

        $r0[3] = 8;

        $r0[4] = 16;

        $r0[5] = 32;

        $r0[6] = 64;

        $r0[7] = 128;

        $r0[8] = 2048;

        $r0[9] = 4096;

        $r0[10] = 512;

        $r0[11] = 8192;

        $r0[12] = 256;

        $r0[13] = 16384;

        $r0[14] = 65536;

        <android.content.pm.ActivityInfo: int[] CONFIG_NATIVE_BITS> = $r0;

        $r1 = new android.content.pm.ActivityInfo$1;

        specialinvoke $r1.<android.content.pm.ActivityInfo$1: void <init>()>();

        <android.content.pm.ActivityInfo: android.os.Parcelable$Creator CREATOR> = $r1;

        return;
    }

    public void <init>()
    {
        android.content.pm.ActivityInfo r0;

        r0 := @this: android.content.pm.ActivityInfo;

        specialinvoke r0.<android.content.pm.ComponentInfo: void <init>()>();

        r0.<android.content.pm.ActivityInfo: int resizeMode> = 2;

        r0.<android.content.pm.ActivityInfo: int colorMode> = 0;

        r0.<android.content.pm.ActivityInfo: int screenOrientation> = -1;

        r0.<android.content.pm.ActivityInfo: int uiOptions> = 0;

        r0.<android.content.pm.ActivityInfo: int rotationAnimation> = -1;

        return;
    }

    public void <init>(android.content.pm.ActivityInfo)
    {
        android.content.pm.ActivityInfo r0, r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        java.lang.String $r2, $r3, $r4, $r5, $r7;
        android.content.pm.ActivityInfo$WindowLayout $r6;
        float $f0, $f1;
        boolean $z0;

        r0 := @this: android.content.pm.ActivityInfo;

        r1 := @parameter0: android.content.pm.ActivityInfo;

        specialinvoke r0.<android.content.pm.ComponentInfo: void <init>(android.content.pm.ComponentInfo)>(r1);

        r0.<android.content.pm.ActivityInfo: int resizeMode> = 2;

        r0.<android.content.pm.ActivityInfo: int colorMode> = 0;

        r0.<android.content.pm.ActivityInfo: int screenOrientation> = -1;

        r0.<android.content.pm.ActivityInfo: int uiOptions> = 0;

        r0.<android.content.pm.ActivityInfo: int rotationAnimation> = -1;

        $i0 = r1.<android.content.pm.ActivityInfo: int theme>;

        r0.<android.content.pm.ActivityInfo: int theme> = $i0;

        $i1 = r1.<android.content.pm.ActivityInfo: int launchMode>;

        r0.<android.content.pm.ActivityInfo: int launchMode> = $i1;

        $i2 = r1.<android.content.pm.ActivityInfo: int documentLaunchMode>;

        r0.<android.content.pm.ActivityInfo: int documentLaunchMode> = $i2;

        $r2 = r1.<android.content.pm.ActivityInfo: java.lang.String permission>;

        r0.<android.content.pm.ActivityInfo: java.lang.String permission> = $r2;

        $r3 = r1.<android.content.pm.ActivityInfo: java.lang.String taskAffinity>;

        r0.<android.content.pm.ActivityInfo: java.lang.String taskAffinity> = $r3;

        $r4 = r1.<android.content.pm.ActivityInfo: java.lang.String targetActivity>;

        r0.<android.content.pm.ActivityInfo: java.lang.String targetActivity> = $r4;

        $i3 = r1.<android.content.pm.ActivityInfo: int flags>;

        r0.<android.content.pm.ActivityInfo: int flags> = $i3;

        $i4 = r1.<android.content.pm.ActivityInfo: int privateFlags>;

        r0.<android.content.pm.ActivityInfo: int privateFlags> = $i4;

        $i5 = r1.<android.content.pm.ActivityInfo: int screenOrientation>;

        r0.<android.content.pm.ActivityInfo: int screenOrientation> = $i5;

        $i6 = r1.<android.content.pm.ActivityInfo: int configChanges>;

        r0.<android.content.pm.ActivityInfo: int configChanges> = $i6;

        $i7 = r1.<android.content.pm.ActivityInfo: int softInputMode>;

        r0.<android.content.pm.ActivityInfo: int softInputMode> = $i7;

        $i8 = r1.<android.content.pm.ActivityInfo: int uiOptions>;

        r0.<android.content.pm.ActivityInfo: int uiOptions> = $i8;

        $r5 = r1.<android.content.pm.ActivityInfo: java.lang.String parentActivityName>;

        r0.<android.content.pm.ActivityInfo: java.lang.String parentActivityName> = $r5;

        $i9 = r1.<android.content.pm.ActivityInfo: int maxRecents>;

        r0.<android.content.pm.ActivityInfo: int maxRecents> = $i9;

        $i10 = r1.<android.content.pm.ActivityInfo: int lockTaskLaunchMode>;

        r0.<android.content.pm.ActivityInfo: int lockTaskLaunchMode> = $i10;

        $r6 = r1.<android.content.pm.ActivityInfo: android.content.pm.ActivityInfo$WindowLayout windowLayout>;

        r0.<android.content.pm.ActivityInfo: android.content.pm.ActivityInfo$WindowLayout windowLayout> = $r6;

        $i11 = r1.<android.content.pm.ActivityInfo: int resizeMode>;

        r0.<android.content.pm.ActivityInfo: int resizeMode> = $i11;

        $r7 = r1.<android.content.pm.ActivityInfo: java.lang.String requestedVrComponent>;

        r0.<android.content.pm.ActivityInfo: java.lang.String requestedVrComponent> = $r7;

        $i12 = r1.<android.content.pm.ActivityInfo: int rotationAnimation>;

        r0.<android.content.pm.ActivityInfo: int rotationAnimation> = $i12;

        $i13 = r1.<android.content.pm.ActivityInfo: int colorMode>;

        r0.<android.content.pm.ActivityInfo: int colorMode> = $i13;

        $f0 = r1.<android.content.pm.ActivityInfo: float maxAspectRatio>;

        r0.<android.content.pm.ActivityInfo: float maxAspectRatio> = $f0;

        $f1 = r1.<android.content.pm.ActivityInfo: float minAspectRatio>;

        r0.<android.content.pm.ActivityInfo: float minAspectRatio> = $f1;

        $z0 = r1.<android.content.pm.ActivityInfo: boolean supportsSizeChanges>;

        r0.<android.content.pm.ActivityInfo: boolean supportsSizeChanges> = $z0;

        return;
    }

    private void <init>(android.os.Parcel)
    {
        android.content.pm.ActivityInfo r0;
        android.os.Parcel r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        java.lang.String $r2, $r3, $r4, $r5, $r6, $r7;
        float $f0, $f1;
        boolean $z0;
        android.content.pm.ActivityInfo$WindowLayout $r8;

        r0 := @this: android.content.pm.ActivityInfo;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<android.content.pm.ComponentInfo: void <init>(android.os.Parcel)>(r1);

        r0.<android.content.pm.ActivityInfo: int resizeMode> = 2;

        r0.<android.content.pm.ActivityInfo: int colorMode> = 0;

        r0.<android.content.pm.ActivityInfo: int screenOrientation> = -1;

        r0.<android.content.pm.ActivityInfo: int uiOptions> = 0;

        r0.<android.content.pm.ActivityInfo: int rotationAnimation> = -1;

        $i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.content.pm.ActivityInfo: int theme> = $i0;

        $i1 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.content.pm.ActivityInfo: int launchMode> = $i1;

        $i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.content.pm.ActivityInfo: int documentLaunchMode> = $i2;

        $r2 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString8()>();

        r0.<android.content.pm.ActivityInfo: java.lang.String permission> = $r2;

        $r3 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString8()>();

        r0.<android.content.pm.ActivityInfo: java.lang.String taskAffinity> = $r3;

        $r4 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString8()>();

        r0.<android.content.pm.ActivityInfo: java.lang.String targetActivity> = $r4;

        $r5 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString8()>();

        r0.<android.content.pm.ActivityInfo: java.lang.String launchToken> = $r5;

        $i3 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.content.pm.ActivityInfo: int flags> = $i3;

        $i4 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.content.pm.ActivityInfo: int privateFlags> = $i4;

        $i5 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.content.pm.ActivityInfo: int screenOrientation> = $i5;

        $i6 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.content.pm.ActivityInfo: int configChanges> = $i6;

        $i7 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.content.pm.ActivityInfo: int softInputMode> = $i7;

        $i8 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.content.pm.ActivityInfo: int uiOptions> = $i8;

        $r6 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString8()>();

        r0.<android.content.pm.ActivityInfo: java.lang.String parentActivityName> = $r6;

        $i9 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.content.pm.ActivityInfo: int persistableMode> = $i9;

        $i10 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.content.pm.ActivityInfo: int maxRecents> = $i10;

        $i11 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.content.pm.ActivityInfo: int lockTaskLaunchMode> = $i11;

        $i12 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i12 != 1 goto label1;

        $r8 = new android.content.pm.ActivityInfo$WindowLayout;

        specialinvoke $r8.<android.content.pm.ActivityInfo$WindowLayout: void <init>(android.os.Parcel)>(r1);

        r0.<android.content.pm.ActivityInfo: android.content.pm.ActivityInfo$WindowLayout windowLayout> = $r8;

     label1:
        $i13 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.content.pm.ActivityInfo: int resizeMode> = $i13;

        $r7 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString8()>();

        r0.<android.content.pm.ActivityInfo: java.lang.String requestedVrComponent> = $r7;

        $i14 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.content.pm.ActivityInfo: int rotationAnimation> = $i14;

        $i15 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.content.pm.ActivityInfo: int colorMode> = $i15;

        $f0 = virtualinvoke r1.<android.os.Parcel: float readFloat()>();

        r0.<android.content.pm.ActivityInfo: float maxAspectRatio> = $f0;

        $f1 = virtualinvoke r1.<android.os.Parcel: float readFloat()>();

        r0.<android.content.pm.ActivityInfo: float minAspectRatio> = $f1;

        $z0 = virtualinvoke r1.<android.os.Parcel: boolean readBoolean()>();

        r0.<android.content.pm.ActivityInfo: boolean supportsSizeChanges> = $z0;

        return;
    }

    void <init>(android.os.Parcel, android.content.pm.ActivityInfo$1)
    {
        android.content.pm.ActivityInfo r0;
        android.os.Parcel r1;
        android.content.pm.ActivityInfo$1 r2;

        r0 := @this: android.content.pm.ActivityInfo;

        r1 := @parameter0: android.os.Parcel;

        r2 := @parameter1: android.content.pm.ActivityInfo$1;

        specialinvoke r0.<android.content.pm.ActivityInfo: void <init>(android.os.Parcel)>(r1);

        return;
    }

    public static int activityInfoConfigJavaToNative(int)
    {
        int i0, $i1, $i2, $i3, $i4, i5, i6, i7;
        int[] r0;

        i0 := @parameter0: int;

        i5 = 0;

        i6 = 0;

     label1:
        r0 = <android.content.pm.ActivityInfo: int[] CONFIG_NATIVE_BITS>;

        $i1 = lengthof r0;

        if i6 >= $i1 goto label3;

        i7 = i5;

        $i2 = 1 << i6;

        $i3 = $i2 & i0;

        if $i3 == 0 goto label2;

        $i4 = r0[i6];

        i7 = i5 | $i4;

     label2:
        i6 = i6 + 1;

        i5 = i7;

        goto label1;

     label3:
        return i5;
    }

    public static int activityInfoConfigNativeToJava(int)
    {
        int i0, $i1, $i2, $i3, $i4, i5, i6, i7;
        int[] r0;

        i0 := @parameter0: int;

        i5 = 0;

        i6 = 0;

     label1:
        r0 = <android.content.pm.ActivityInfo: int[] CONFIG_NATIVE_BITS>;

        $i1 = lengthof r0;

        if i6 >= $i1 goto label3;

        i7 = i5;

        $i2 = r0[i6];

        $i3 = $i2 & i0;

        if $i3 == 0 goto label2;

        $i4 = 1 << i6;

        i7 = i5 | $i4;

     label2:
        i6 = i6 + 1;

        i5 = i7;

        goto label1;

     label3:
        return i5;
    }

    public static java.lang.String colorModeToString(int)
    {
        int i0;
        java.lang.String $r0;

        i0 := @parameter0: int;

        if i0 == 0 goto label3;

        if i0 == 1 goto label2;

        if i0 == 2 goto label1;

        $r0 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        return $r0;

     label1:
        return "COLOR_MODE_HDR";

     label2:
        return "COLOR_MODE_WIDE_COLOR_GAMUT";

     label3:
        return "COLOR_MODE_DEFAULT";
    }

    public static boolean isFixedOrientationLandscape(int)
    {
        int i0;
        boolean z0;

        i0 := @parameter0: int;

        if i0 == 0 goto label2;

        if i0 == 6 goto label2;

        if i0 == 8 goto label2;

        if i0 != 11 goto label1;

        goto label2;

     label1:
        z0 = 0;

        goto label3;

     label2:
        z0 = 1;

     label3:
        return z0;
    }

    public static boolean isFixedOrientationPortrait(int)
    {
        int i0;
        boolean z1;

        i0 := @parameter0: int;

        z1 = 1;

        if i0 == 1 goto label2;

        z1 = 1;

        if i0 == 7 goto label2;

        z1 = 1;

        if i0 == 9 goto label2;

        if i0 != 12 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public static boolean isPreserveOrientationMode(int)
    {
        int i0;
        boolean z0;

        i0 := @parameter0: int;

        if i0 == 6 goto label2;

        if i0 == 5 goto label2;

        if i0 != 7 goto label1;

        goto label2;

     label1:
        z0 = 0;

        goto label3;

     label2:
        z0 = 1;

     label3:
        return z0;
    }

    public static boolean isResizeableMode(int)
    {
        int i0;
        boolean z1;

        i0 := @parameter0: int;

        z1 = 1;

        if i0 == 2 goto label2;

        z1 = 1;

        if i0 == 4 goto label2;

        z1 = 1;

        if i0 == 6 goto label2;

        z1 = 1;

        if i0 == 5 goto label2;

        z1 = 1;

        if i0 == 7 goto label2;

        if i0 != 1 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public static boolean isTranslucentOrFloating(android.content.res.TypedArray)
    {
        android.content.res.TypedArray r0;
        boolean z0, $z1, z2;

        r0 := @parameter0: android.content.res.TypedArray;

        z2 = 0;

        z0 = virtualinvoke r0.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(5, 0);

        $z1 = virtualinvoke r0.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(4, 0);

        if $z1 != 0 goto label1;

        if z0 == 0 goto label2;

     label1:
        z2 = 1;

     label2:
        return z2;
    }

    public static final java.lang.String lockTaskLaunchModeToString(int)
    {
        int i0;
        java.lang.StringBuilder $r1;
        java.lang.String $r4;

        i0 := @parameter0: int;

        if i0 == 0 goto label4;

        if i0 == 1 goto label3;

        if i0 == 2 goto label2;

        if i0 == 3 goto label1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unknown=");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;

     label1:
        return "LOCK_TASK_LAUNCH_MODE_IF_WHITELISTED";

     label2:
        return "LOCK_TASK_LAUNCH_MODE_ALWAYS";

     label3:
        return "LOCK_TASK_LAUNCH_MODE_NEVER";

     label4:
        return "LOCK_TASK_LAUNCH_MODE_DEFAULT";
    }

    private java.lang.String persistableModeToString()
    {
        android.content.pm.ActivityInfo r0;
        int i0, $i1;
        java.lang.StringBuilder $r2;
        java.lang.String $r5;

        r0 := @this: android.content.pm.ActivityInfo;

        i0 = r0.<android.content.pm.ActivityInfo: int persistableMode>;

        if i0 == 0 goto label3;

        if i0 == 1 goto label2;

        if i0 == 2 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UNKNOWN=");

        $i1 = r0.<android.content.pm.ActivityInfo: int persistableMode>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;

     label1:
        return "PERSIST_ACROSS_REBOOTS";

     label2:
        return "PERSIST_NEVER";

     label3:
        return "PERSIST_ROOT_ONLY";
    }

    public static java.lang.String resizeModeToString(int)
    {
        int i0;
        java.lang.StringBuilder $r1;
        java.lang.String $r4;

        i0 := @parameter0: int;

        if i0 == 0 goto label7;

        if i0 == 1 goto label6;

        if i0 == 2 goto label5;

        if i0 == 4 goto label4;

        if i0 == 5 goto label3;

        if i0 == 6 goto label2;

        if i0 == 7 goto label1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unknown=");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;

     label1:
        return "RESIZE_MODE_FORCE_RESIZABLE_PRESERVE_ORIENTATION";

     label2:
        return "RESIZE_MODE_FORCE_RESIZABLE_PORTRAIT_ONLY";

     label3:
        return "RESIZE_MODE_FORCE_RESIZABLE_LANDSCAPE_ONLY";

     label4:
        return "RESIZE_MODE_FORCE_RESIZEABLE";

     label5:
        return "RESIZE_MODE_RESIZEABLE";

     label6:
        return "RESIZE_MODE_RESIZEABLE_VIA_SDK_VERSION";

     label7:
        return "RESIZE_MODE_UNRESIZEABLE";
    }

    public static java.lang.String screenOrientationToString(int)
    {
        int i0;
        java.lang.String $r0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case -2: goto label18;
            case -1: goto label17;
            case 0: goto label16;
            case 1: goto label15;
            case 2: goto label14;
            case 3: goto label13;
            case 4: goto label12;
            case 5: goto label11;
            case 6: goto label10;
            case 7: goto label09;
            case 8: goto label08;
            case 9: goto label07;
            case 10: goto label06;
            case 11: goto label05;
            case 12: goto label04;
            case 13: goto label03;
            case 14: goto label02;
            default: goto label01;
        };

     label01:
        $r0 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        return $r0;

     label02:
        return "SCREEN_ORIENTATION_LOCKED";

     label03:
        return "SCREEN_ORIENTATION_FULL_USER";

     label04:
        return "SCREEN_ORIENTATION_USER_PORTRAIT";

     label05:
        return "SCREEN_ORIENTATION_USER_LANDSCAPE";

     label06:
        return "SCREEN_ORIENTATION_FULL_SENSOR";

     label07:
        return "SCREEN_ORIENTATION_REVERSE_PORTRAIT";

     label08:
        return "SCREEN_ORIENTATION_REVERSE_LANDSCAPE";

     label09:
        return "SCREEN_ORIENTATION_SENSOR_PORTRAIT";

     label10:
        return "SCREEN_ORIENTATION_SENSOR_LANDSCAPE";

     label11:
        return "SCREEN_ORIENTATION_NOSENSOR";

     label12:
        return "SCREEN_ORIENTATION_SENSOR";

     label13:
        return "SCREEN_ORIENTATION_BEHIND";

     label14:
        return "SCREEN_ORIENTATION_USER";

     label15:
        return "SCREEN_ORIENTATION_PORTRAIT";

     label16:
        return "SCREEN_ORIENTATION_LANDSCAPE";

     label17:
        return "SCREEN_ORIENTATION_UNSPECIFIED";

     label18:
        return "SCREEN_ORIENTATION_UNSET";
    }

    public int describeContents()
    {
        android.content.pm.ActivityInfo r0;

        r0 := @this: android.content.pm.ActivityInfo;

        return 0;
    }

    public void dump(android.util.Printer, java.lang.String)
    {
        android.content.pm.ActivityInfo r0;
        android.util.Printer r1;
        java.lang.String r2;

        r0 := @this: android.content.pm.ActivityInfo;

        r1 := @parameter0: android.util.Printer;

        r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<android.content.pm.ActivityInfo: void dump(android.util.Printer,java.lang.String,int)>(r1, r2, 3);

        return;
    }

    public void dump(android.util.Printer, java.lang.String, int)
    {
        android.content.pm.ActivityInfo r0;
        android.util.Printer r1;
        java.lang.String r2, $r3, $r24, $r26, $r27, $r31, $r36, $r41, $r45, $r47, $r65, $r69, $r71, $r75, $r77, $r81, $r84, $r87, $r89, $r93, $r95, $r100, $r101, $r102, $r103, $r106, $r107, $r108;
        int i0, $i1, $i2, $i3, $i4, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25;
        android.content.pm.ActivityInfo$WindowLayout $r20, $r51, $r54, $r57, $r60, $r63;
        java.lang.StringBuilder $r21, $r28, $r32, $r37, $r42, $r48, $r66, $r72, $r78, $r90, $r98, $r104;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        byte $b5, $b6;
        boolean $z0;

        r0 := @this: android.content.pm.ActivityInfo;

        r1 := @parameter0: android.util.Printer;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        specialinvoke r0.<android.content.pm.ComponentInfo: void dumpFront(android.util.Printer,java.lang.String)>(r1, r2);

        $r3 = r0.<android.content.pm.ActivityInfo: java.lang.String permission>;

        if $r3 == null goto label01;

        $r90 = new java.lang.StringBuilder;

        specialinvoke $r90.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("permission=");

        $r93 = r0.<android.content.pm.ActivityInfo: java.lang.String permission>;

        virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r93);

        $r95 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r1.<android.util.Printer: void println(java.lang.String)>($r95);

     label01:
        $i1 = i0 & 1;

        if $i1 == 0 goto label02;

        $r78 = new java.lang.StringBuilder;

        specialinvoke $r78.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("taskAffinity=");

        $r81 = r0.<android.content.pm.ActivityInfo: java.lang.String taskAffinity>;

        virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r81);

        virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" targetActivity=");

        $r84 = r0.<android.content.pm.ActivityInfo: java.lang.String targetActivity>;

        virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r84);

        virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" persistableMode=");

        $r87 = specialinvoke r0.<android.content.pm.ActivityInfo: java.lang.String persistableModeToString()>();

        virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r87);

        $r89 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r1.<android.util.Printer: void println(java.lang.String)>($r89);

     label02:
        $i2 = r0.<android.content.pm.ActivityInfo: int launchMode>;

        if $i2 != 0 goto label03;

        $i14 = r0.<android.content.pm.ActivityInfo: int flags>;

        if $i14 != 0 goto label03;

        $i15 = r0.<android.content.pm.ActivityInfo: int privateFlags>;

        if $i15 != 0 goto label03;

        $i16 = r0.<android.content.pm.ActivityInfo: int theme>;

        if $i16 == 0 goto label04;

     label03:
        $r98 = new java.lang.StringBuilder;

        specialinvoke $r98.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("launchMode=");

        $i17 = r0.<android.content.pm.ActivityInfo: int launchMode>;

        virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i17);

        virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" flags=0x");

        $i18 = r0.<android.content.pm.ActivityInfo: int flags>;

        $r100 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i18);

        virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r100);

        virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" privateFlags=0x");

        $i19 = r0.<android.content.pm.ActivityInfo: int privateFlags>;

        $r101 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i19);

        virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r101);

        virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" theme=0x");

        $i20 = r0.<android.content.pm.ActivityInfo: int theme>;

        $r102 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i20);

        virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r102);

        $r103 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r1.<android.util.Printer: void println(java.lang.String)>($r103);

     label04:
        $i21 = r0.<android.content.pm.ActivityInfo: int screenOrientation>;

        if $i21 != -1 goto label05;

        $i12 = r0.<android.content.pm.ActivityInfo: int configChanges>;

        if $i12 != 0 goto label05;

        $i13 = r0.<android.content.pm.ActivityInfo: int softInputMode>;

        if $i13 == 0 goto label06;

     label05:
        $r104 = new java.lang.StringBuilder;

        specialinvoke $r104.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("screenOrientation=");

        $i22 = r0.<android.content.pm.ActivityInfo: int screenOrientation>;

        virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i22);

        virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" configChanges=0x");

        $i23 = r0.<android.content.pm.ActivityInfo: int configChanges>;

        $r106 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i23);

        virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r106);

        virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" softInputMode=0x");

        $i24 = r0.<android.content.pm.ActivityInfo: int softInputMode>;

        $r107 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i24);

        virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r107);

        $r108 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r1.<android.util.Printer: void println(java.lang.String)>($r108);

     label06:
        $i25 = r0.<android.content.pm.ActivityInfo: int uiOptions>;

        if $i25 == 0 goto label07;

        $r72 = new java.lang.StringBuilder;

        specialinvoke $r72.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" uiOptions=0x");

        $i11 = r0.<android.content.pm.ActivityInfo: int uiOptions>;

        $r75 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i11);

        virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r75);

        $r77 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r1.<android.util.Printer: void println(java.lang.String)>($r77);

     label07:
        $i3 = i0 & 1;

        if $i3 == 0 goto label08;

        $r66 = new java.lang.StringBuilder;

        specialinvoke $r66.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lockTaskLaunchMode=");

        $i10 = r0.<android.content.pm.ActivityInfo: int lockTaskLaunchMode>;

        $r69 = staticinvoke <android.content.pm.ActivityInfo: java.lang.String lockTaskLaunchModeToString(int)>($i10);

        virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r69);

        $r71 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r1.<android.util.Printer: void println(java.lang.String)>($r71);

     label08:
        $r20 = r0.<android.content.pm.ActivityInfo: android.content.pm.ActivityInfo$WindowLayout windowLayout>;

        if $r20 == null goto label09;

        $r48 = new java.lang.StringBuilder;

        specialinvoke $r48.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("windowLayout=");

        $r51 = r0.<android.content.pm.ActivityInfo: android.content.pm.ActivityInfo$WindowLayout windowLayout>;

        $i7 = $r51.<android.content.pm.ActivityInfo$WindowLayout: int width>;

        virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("|");

        $r54 = r0.<android.content.pm.ActivityInfo: android.content.pm.ActivityInfo$WindowLayout windowLayout>;

        $f4 = $r54.<android.content.pm.ActivityInfo$WindowLayout: float widthFraction>;

        virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f4);

        virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r57 = r0.<android.content.pm.ActivityInfo: android.content.pm.ActivityInfo$WindowLayout windowLayout>;

        $i8 = $r57.<android.content.pm.ActivityInfo$WindowLayout: int height>;

        virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("|");

        $r60 = r0.<android.content.pm.ActivityInfo: android.content.pm.ActivityInfo$WindowLayout windowLayout>;

        $f5 = $r60.<android.content.pm.ActivityInfo$WindowLayout: float heightFraction>;

        virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f5);

        virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r63 = r0.<android.content.pm.ActivityInfo: android.content.pm.ActivityInfo$WindowLayout windowLayout>;

        $i9 = $r63.<android.content.pm.ActivityInfo$WindowLayout: int gravity>;

        virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r65 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r1.<android.util.Printer: void println(java.lang.String)>($r65);

     label09:
        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("resizeMode=");

        $i4 = r0.<android.content.pm.ActivityInfo: int resizeMode>;

        $r24 = staticinvoke <android.content.pm.ActivityInfo: java.lang.String resizeModeToString(int)>($i4);

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r1.<android.util.Printer: void println(java.lang.String)>($r26);

        $r27 = r0.<android.content.pm.ActivityInfo: java.lang.String requestedVrComponent>;

        if $r27 == null goto label10;

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("requestedVrComponent=");

        $r45 = r0.<android.content.pm.ActivityInfo: java.lang.String requestedVrComponent>;

        virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45);

        $r47 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r1.<android.util.Printer: void println(java.lang.String)>($r47);

     label10:
        $f0 = r0.<android.content.pm.ActivityInfo: float maxAspectRatio>;

        $b5 = $f0 cmpl 0.0F;

        if $b5 == 0 goto label11;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("maxAspectRatio=");

        $f3 = r0.<android.content.pm.ActivityInfo: float maxAspectRatio>;

        virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f3);

        $r41 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r1.<android.util.Printer: void println(java.lang.String)>($r41);

     label11:
        $f1 = r0.<android.content.pm.ActivityInfo: float minAspectRatio>;

        $b6 = $f1 cmpl 0.0F;

        if $b6 == 0 goto label12;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("minAspectRatio=");

        $f2 = r0.<android.content.pm.ActivityInfo: float minAspectRatio>;

        virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f2);

        $r36 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r1.<android.util.Printer: void println(java.lang.String)>($r36);

     label12:
        $z0 = r0.<android.content.pm.ActivityInfo: boolean supportsSizeChanges>;

        if $z0 == 0 goto label13;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("supportsSizeChanges=true");

        $r31 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r1.<android.util.Printer: void println(java.lang.String)>($r31);

     label13:
        specialinvoke r0.<android.content.pm.ComponentInfo: void dumpBack(android.util.Printer,java.lang.String,int)>(r1, r2, i0);

        return;
    }

    public int getRealConfigChanged()
    {
        android.content.pm.ActivityInfo r0;
        android.content.pm.ApplicationInfo $r1;
        int $i0, $i1, $i2, i3;

        r0 := @this: android.content.pm.ActivityInfo;

        $r1 = r0.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i0 = $r1.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i0 >= 13 goto label1;

        $i1 = r0.<android.content.pm.ActivityInfo: int configChanges>;

        $i2 = $i1 | 1024;

        i3 = $i2 | 2048;

        goto label2;

     label1:
        i3 = r0.<android.content.pm.ActivityInfo: int configChanges>;

     label2:
        return i3;
    }

    public final int getThemeResource()
    {
        android.content.pm.ActivityInfo r0;
        android.content.pm.ApplicationInfo $r1;
        int i0;

        r0 := @this: android.content.pm.ActivityInfo;

        i0 = r0.<android.content.pm.ActivityInfo: int theme>;

        if i0 == 0 goto label1;

        goto label2;

     label1:
        $r1 = r0.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        i0 = $r1.<android.content.pm.ApplicationInfo: int theme>;

     label2:
        return i0;
    }

    public boolean hasFixedAspectRatio()
    {
        android.content.pm.ActivityInfo r0;
        float $f0, $f1;
        byte $b0, $b1;
        boolean z0;

        r0 := @this: android.content.pm.ActivityInfo;

        $f0 = r0.<android.content.pm.ActivityInfo: float maxAspectRatio>;

        $b0 = $f0 cmpl 0.0F;

        if $b0 != 0 goto label2;

        $f1 = r0.<android.content.pm.ActivityInfo: float minAspectRatio>;

        $b1 = $f1 cmpl 0.0F;

        if $b1 == 0 goto label1;

        goto label2;

     label1:
        z0 = 0;

        goto label3;

     label2:
        z0 = 1;

     label3:
        return z0;
    }

    public boolean isFixedOrientation()
    {
        android.content.pm.ActivityInfo r0;
        boolean $z0, $z1, z2;
        int $i0;

        r0 := @this: android.content.pm.ActivityInfo;

        $z0 = virtualinvoke r0.<android.content.pm.ActivityInfo: boolean isFixedOrientationLandscape()>();

        if $z0 != 0 goto label2;

        $z1 = virtualinvoke r0.<android.content.pm.ActivityInfo: boolean isFixedOrientationPortrait()>();

        if $z1 != 0 goto label2;

        $i0 = r0.<android.content.pm.ActivityInfo: int screenOrientation>;

        if $i0 != 14 goto label1;

        goto label2;

     label1:
        z2 = 0;

        goto label3;

     label2:
        z2 = 1;

     label3:
        return z2;
    }

    boolean isFixedOrientationLandscape()
    {
        android.content.pm.ActivityInfo r0;
        int $i0;
        boolean $z0;

        r0 := @this: android.content.pm.ActivityInfo;

        $i0 = r0.<android.content.pm.ActivityInfo: int screenOrientation>;

        $z0 = staticinvoke <android.content.pm.ActivityInfo: boolean isFixedOrientationLandscape(int)>($i0);

        return $z0;
    }

    boolean isFixedOrientationPortrait()
    {
        android.content.pm.ActivityInfo r0;
        int $i0;
        boolean $z0;

        r0 := @this: android.content.pm.ActivityInfo;

        $i0 = r0.<android.content.pm.ActivityInfo: int screenOrientation>;

        $z0 = staticinvoke <android.content.pm.ActivityInfo: boolean isFixedOrientationPortrait(int)>($i0);

        return $z0;
    }

    public boolean supportsPictureInPicture()
    {
        android.content.pm.ActivityInfo r0;
        int $i0, $i1;
        boolean z0;

        r0 := @this: android.content.pm.ActivityInfo;

        $i0 = r0.<android.content.pm.ActivityInfo: int flags>;

        $i1 = $i0 & 4194304;

        if $i1 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public java.lang.String toString()
    {
        android.content.pm.ActivityInfo r0;
        java.lang.StringBuilder $r2;
        int $i0;
        java.lang.String $r4, $r7, $r10;

        r0 := @this: android.content.pm.ActivityInfo;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ActivityInfo{");

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r7 = r0.<android.content.pm.ActivityInfo: java.lang.String name>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r10 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.content.pm.ActivityInfo r0;
        android.os.Parcel r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        java.lang.String $r2, $r3, $r4, $r5, $r6, $r8;
        android.content.pm.ActivityInfo$WindowLayout $r7, $r9;
        float $f0, $f1;
        boolean $z0;

        r0 := @this: android.content.pm.ActivityInfo;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        specialinvoke r0.<android.content.pm.ComponentInfo: void writeToParcel(android.os.Parcel,int)>(r1, i0);

        $i1 = r0.<android.content.pm.ActivityInfo: int theme>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $i2 = r0.<android.content.pm.ActivityInfo: int launchMode>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i2);

        $i3 = r0.<android.content.pm.ActivityInfo: int documentLaunchMode>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i3);

        $r2 = r0.<android.content.pm.ActivityInfo: java.lang.String permission>;

        virtualinvoke r1.<android.os.Parcel: void writeString8(java.lang.String)>($r2);

        $r3 = r0.<android.content.pm.ActivityInfo: java.lang.String taskAffinity>;

        virtualinvoke r1.<android.os.Parcel: void writeString8(java.lang.String)>($r3);

        $r4 = r0.<android.content.pm.ActivityInfo: java.lang.String targetActivity>;

        virtualinvoke r1.<android.os.Parcel: void writeString8(java.lang.String)>($r4);

        $r5 = r0.<android.content.pm.ActivityInfo: java.lang.String launchToken>;

        virtualinvoke r1.<android.os.Parcel: void writeString8(java.lang.String)>($r5);

        $i4 = r0.<android.content.pm.ActivityInfo: int flags>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i4);

        $i5 = r0.<android.content.pm.ActivityInfo: int privateFlags>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i5);

        $i6 = r0.<android.content.pm.ActivityInfo: int screenOrientation>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i6);

        $i7 = r0.<android.content.pm.ActivityInfo: int configChanges>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i7);

        $i8 = r0.<android.content.pm.ActivityInfo: int softInputMode>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i8);

        $i9 = r0.<android.content.pm.ActivityInfo: int uiOptions>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i9);

        $r6 = r0.<android.content.pm.ActivityInfo: java.lang.String parentActivityName>;

        virtualinvoke r1.<android.os.Parcel: void writeString8(java.lang.String)>($r6);

        $i10 = r0.<android.content.pm.ActivityInfo: int persistableMode>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i10);

        $i11 = r0.<android.content.pm.ActivityInfo: int maxRecents>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i11);

        $i12 = r0.<android.content.pm.ActivityInfo: int lockTaskLaunchMode>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i12);

        $r7 = r0.<android.content.pm.ActivityInfo: android.content.pm.ActivityInfo$WindowLayout windowLayout>;

        if $r7 == null goto label1;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r9 = r0.<android.content.pm.ActivityInfo: android.content.pm.ActivityInfo$WindowLayout windowLayout>;

        virtualinvoke $r9.<android.content.pm.ActivityInfo$WindowLayout: void writeToParcel(android.os.Parcel)>(r1);

        goto label2;

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label2:
        $i13 = r0.<android.content.pm.ActivityInfo: int resizeMode>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i13);

        $r8 = r0.<android.content.pm.ActivityInfo: java.lang.String requestedVrComponent>;

        virtualinvoke r1.<android.os.Parcel: void writeString8(java.lang.String)>($r8);

        $i14 = r0.<android.content.pm.ActivityInfo: int rotationAnimation>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i14);

        $i15 = r0.<android.content.pm.ActivityInfo: int colorMode>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i15);

        $f0 = r0.<android.content.pm.ActivityInfo: float maxAspectRatio>;

        virtualinvoke r1.<android.os.Parcel: void writeFloat(float)>($f0);

        $f1 = r0.<android.content.pm.ActivityInfo: float minAspectRatio>;

        virtualinvoke r1.<android.os.Parcel: void writeFloat(float)>($f1);

        $z0 = r0.<android.content.pm.ActivityInfo: boolean supportsSizeChanges>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z0);

        return;
    }
}
