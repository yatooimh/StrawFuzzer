class android.content.pm.IDataLoader$Stub$Proxy extends java.lang.Object implements android.content.pm.IDataLoader
{
    public static android.content.pm.IDataLoader sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.content.pm.IDataLoader$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.content.pm.IDataLoader$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.content.pm.IDataLoader$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.content.pm.IDataLoader$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.content.pm.IDataLoader$Stub$Proxy;

        $r1 = r0.<android.content.pm.IDataLoader$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public void create(int, android.content.pm.DataLoaderParamsParcel, android.content.pm.FileSystemControlParcel, android.content.pm.IDataLoaderStatusListener) throws android.os.RemoteException
    {
        android.content.pm.IDataLoader$Stub$Proxy r0;
        int i0;
        android.content.pm.FileSystemControlParcel r1;
        android.content.pm.IDataLoaderStatusListener r2;
        android.os.Parcel r3;
        android.os.IBinder $r4, r9;
        boolean $z0;
        android.content.pm.IDataLoader $r5, $r6;
        java.lang.Throwable $r7;
        android.content.pm.DataLoaderParamsParcel r8;

        r0 := @this: android.content.pm.IDataLoader$Stub$Proxy;

        i0 := @parameter0: int;

        r8 := @parameter1: android.content.pm.DataLoaderParamsParcel;

        r1 := @parameter2: android.content.pm.FileSystemControlParcel;

        r2 := @parameter3: android.content.pm.IDataLoaderStatusListener;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.pm.IDataLoader");

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i0);

     label02:
        if r8 == null goto label05;

     label03:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r8.<android.content.pm.DataLoaderParamsParcel: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        if r1 == null goto label09;

     label07:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.content.pm.FileSystemControlParcel: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label08:
        goto label10;

     label09:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label10:
        if r2 == null goto label13;

     label11:
        r9 = interfaceinvoke r2.<android.content.pm.IDataLoaderStatusListener: android.os.IBinder asBinder()>();

     label12:
        goto label14;

     label13:
        r9 = null;

     label14:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r9);

        $r4 = r0.<android.content.pm.IDataLoader$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r3, null, 1);

        if $z0 != 0 goto label16;

        $r5 = staticinvoke <android.content.pm.IDataLoader$Stub: android.content.pm.IDataLoader getDefaultImpl()>();

        if $r5 == null goto label16;

        $r6 = staticinvoke <android.content.pm.IDataLoader$Stub: android.content.pm.IDataLoader getDefaultImpl()>();

        interfaceinvoke $r6.<android.content.pm.IDataLoader: void create(int,android.content.pm.DataLoaderParamsParcel,android.content.pm.FileSystemControlParcel,android.content.pm.IDataLoaderStatusListener)>(i0, r8, r1, r2);

     label15:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label16:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label17:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label17;
        catch java.lang.Throwable from label03 to label04 with label17;
        catch java.lang.Throwable from label05 to label06 with label17;
        catch java.lang.Throwable from label07 to label08 with label17;
        catch java.lang.Throwable from label09 to label10 with label17;
        catch java.lang.Throwable from label11 to label12 with label17;
        catch java.lang.Throwable from label14 to label15 with label17;
    }

    public void destroy(int) throws android.os.RemoteException
    {
        android.content.pm.IDataLoader$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        boolean $z0;
        android.content.pm.IDataLoader $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.content.pm.IDataLoader$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.pm.IDataLoader");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.content.pm.IDataLoader$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r1, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.content.pm.IDataLoader$Stub: android.content.pm.IDataLoader getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.content.pm.IDataLoader$Stub: android.content.pm.IDataLoader getDefaultImpl()>();

        interfaceinvoke $r5.<android.content.pm.IDataLoader: void destroy(int)>(i0);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.content.pm.IDataLoader$Stub$Proxy r0;

        r0 := @this: android.content.pm.IDataLoader$Stub$Proxy;

        return "android.content.pm.IDataLoader";
    }

    public void prepareImage(int, android.content.pm.InstallationFileParcel[], java.lang.String[]) throws android.os.RemoteException
    {
        android.content.pm.IDataLoader$Stub$Proxy r0;
        int i0;
        java.lang.String[] r1;
        android.os.Parcel r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.content.pm.IDataLoader $r4, $r5;
        java.lang.Throwable $r6;
        android.content.pm.InstallationFileParcel[] r7;

        r0 := @this: android.content.pm.IDataLoader$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: android.content.pm.InstallationFileParcel[];

        r1 := @parameter2: java.lang.String[];

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.pm.IDataLoader");

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeTypedArray(android.os.Parcelable[],int)>(r7, 0);

        virtualinvoke r2.<android.os.Parcel: void writeStringArray(java.lang.String[])>(r1);

        $r3 = r0.<android.content.pm.IDataLoader$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r2, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.content.pm.IDataLoader$Stub: android.content.pm.IDataLoader getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.content.pm.IDataLoader$Stub: android.content.pm.IDataLoader getDefaultImpl()>();

        interfaceinvoke $r5.<android.content.pm.IDataLoader: void prepareImage(int,android.content.pm.InstallationFileParcel[],java.lang.String[])>(i0, r7, r1);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void start(int) throws android.os.RemoteException
    {
        android.content.pm.IDataLoader$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        boolean $z0;
        android.content.pm.IDataLoader $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.content.pm.IDataLoader$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.pm.IDataLoader");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.content.pm.IDataLoader$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r1, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.content.pm.IDataLoader$Stub: android.content.pm.IDataLoader getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.content.pm.IDataLoader$Stub: android.content.pm.IDataLoader getDefaultImpl()>();

        interfaceinvoke $r5.<android.content.pm.IDataLoader: void start(int)>(i0);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void stop(int) throws android.os.RemoteException
    {
        android.content.pm.IDataLoader$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        boolean $z0;
        android.content.pm.IDataLoader $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.content.pm.IDataLoader$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.pm.IDataLoader");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.content.pm.IDataLoader$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r1, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.content.pm.IDataLoader$Stub: android.content.pm.IDataLoader getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.content.pm.IDataLoader$Stub: android.content.pm.IDataLoader getDefaultImpl()>();

        interfaceinvoke $r5.<android.content.pm.IDataLoader: void stop(int)>(i0);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }
}
