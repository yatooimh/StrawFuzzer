class android.content.pm.IDataLoaderManager$Stub$Proxy extends java.lang.Object implements android.content.pm.IDataLoaderManager
{
    public static android.content.pm.IDataLoaderManager sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.content.pm.IDataLoaderManager$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.content.pm.IDataLoaderManager$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.content.pm.IDataLoaderManager$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.content.pm.IDataLoaderManager$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.content.pm.IDataLoaderManager$Stub$Proxy;

        $r1 = r0.<android.content.pm.IDataLoaderManager$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public boolean bindToDataLoader(int, android.content.pm.DataLoaderParamsParcel, android.content.pm.IDataLoaderStatusListener) throws android.os.RemoteException
    {
        android.content.pm.IDataLoaderManager$Stub$Proxy r0;
        android.content.pm.IDataLoaderStatusListener r1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4, r9;
        boolean $z0, z1, z2;
        android.content.pm.IDataLoaderManager $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1;
        android.content.pm.DataLoaderParamsParcel r8;

        r0 := @this: android.content.pm.IDataLoaderManager$Stub$Proxy;

        i0 := @parameter0: int;

        r8 := @parameter1: android.content.pm.DataLoaderParamsParcel;

        r1 := @parameter2: android.content.pm.IDataLoaderStatusListener;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.pm.IDataLoaderManager");

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

     label02:
        z1 = 1;

        if r8 == null goto label05;

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r8.<android.content.pm.DataLoaderParamsParcel: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        if r1 == null goto label09;

     label07:
        r9 = interfaceinvoke r1.<android.content.pm.IDataLoaderStatusListener: android.os.IBinder asBinder()>();

     label08:
        goto label10;

     label09:
        r9 = null;

     label10:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r9);

        $r4 = r0.<android.content.pm.IDataLoaderManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r2, r3, 0);

        if $z0 != 0 goto label12;

        $r5 = staticinvoke <android.content.pm.IDataLoaderManager$Stub: android.content.pm.IDataLoaderManager getDefaultImpl()>();

        if $r5 == null goto label12;

        $r6 = staticinvoke <android.content.pm.IDataLoaderManager$Stub: android.content.pm.IDataLoaderManager getDefaultImpl()>();

        z2 = interfaceinvoke $r6.<android.content.pm.IDataLoaderManager: boolean bindToDataLoader(int,android.content.pm.DataLoaderParamsParcel,android.content.pm.IDataLoaderStatusListener)>(i0, r8, r1);

     label11:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return z2;

     label12:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

     label13:
        if i1 == 0 goto label14;

        goto label15;

     label14:
        z1 = 0;

     label15:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return z1;

     label16:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label16;
        catch java.lang.Throwable from label03 to label04 with label16;
        catch java.lang.Throwable from label05 to label06 with label16;
        catch java.lang.Throwable from label07 to label08 with label16;
        catch java.lang.Throwable from label10 to label11 with label16;
        catch java.lang.Throwable from label12 to label13 with label16;
    }

    public android.content.pm.IDataLoader getDataLoader(int) throws android.os.RemoteException
    {
        android.content.pm.IDataLoaderManager$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, $r4;
        boolean $z0;
        android.content.pm.IDataLoaderManager $r5, $r6;
        java.lang.Throwable $r7;
        android.content.pm.IDataLoader r8, r9;

        r0 := @this: android.content.pm.IDataLoaderManager$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.pm.IDataLoaderManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.content.pm.IDataLoaderManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.content.pm.IDataLoaderManager$Stub: android.content.pm.IDataLoaderManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.content.pm.IDataLoaderManager$Stub: android.content.pm.IDataLoaderManager getDefaultImpl()>();

        r8 = interfaceinvoke $r6.<android.content.pm.IDataLoaderManager: android.content.pm.IDataLoader getDataLoader(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $r4 = virtualinvoke r2.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r9 = staticinvoke <android.content.pm.IDataLoader$Stub: android.content.pm.IDataLoader asInterface(android.os.IBinder)>($r4);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.content.pm.IDataLoaderManager$Stub$Proxy r0;

        r0 := @this: android.content.pm.IDataLoaderManager$Stub$Proxy;

        return "android.content.pm.IDataLoaderManager";
    }

    public void unbindFromDataLoader(int) throws android.os.RemoteException
    {
        android.content.pm.IDataLoaderManager$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.content.pm.IDataLoaderManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.content.pm.IDataLoaderManager$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.pm.IDataLoaderManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.content.pm.IDataLoaderManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.content.pm.IDataLoaderManager$Stub: android.content.pm.IDataLoaderManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.content.pm.IDataLoaderManager$Stub: android.content.pm.IDataLoaderManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.content.pm.IDataLoaderManager: void unbindFromDataLoader(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }
}
