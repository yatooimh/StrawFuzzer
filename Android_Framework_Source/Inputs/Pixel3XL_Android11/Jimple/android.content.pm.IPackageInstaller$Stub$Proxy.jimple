class android.content.pm.IPackageInstaller$Stub$Proxy extends java.lang.Object implements android.content.pm.IPackageInstaller
{
    public static android.content.pm.IPackageInstaller sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.content.pm.IPackageInstaller$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.content.pm.IPackageInstaller$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.content.pm.IPackageInstaller$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public void abandonSession(int) throws android.os.RemoteException
    {
        android.content.pm.IPackageInstaller$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.content.pm.IPackageInstaller $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.content.pm.IPackageInstaller$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.pm.IPackageInstaller");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.content.pm.IPackageInstaller$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.content.pm.IPackageInstaller$Stub: android.content.pm.IPackageInstaller getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.content.pm.IPackageInstaller$Stub: android.content.pm.IPackageInstaller getDefaultImpl()>();

        interfaceinvoke $r6.<android.content.pm.IPackageInstaller: void abandonSession(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.os.IBinder asBinder()
    {
        android.content.pm.IPackageInstaller$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.content.pm.IPackageInstaller$Stub$Proxy;

        $r1 = r0.<android.content.pm.IPackageInstaller$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public void bypassNextStagedInstallerCheck(boolean) throws android.os.RemoteException
    {
        android.content.pm.IPackageInstaller$Stub$Proxy r0;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        android.content.pm.IPackageInstaller $r5, $r6;
        java.lang.Throwable $r7;
        byte b0;

        r0 := @this: android.content.pm.IPackageInstaller$Stub$Proxy;

        z0 := @parameter0: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.pm.IPackageInstaller");

     label2:
        if z0 == 0 goto label3;

        b0 = 1;

        goto label4;

     label3:
        b0 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b0);

        $r4 = r0.<android.content.pm.IPackageInstaller$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(16, r1, r2, 0);

        if $z1 != 0 goto label6;

        $r5 = staticinvoke <android.content.pm.IPackageInstaller$Stub: android.content.pm.IPackageInstaller getDefaultImpl()>();

        if $r5 == null goto label6;

        $r6 = staticinvoke <android.content.pm.IPackageInstaller$Stub: android.content.pm.IPackageInstaller getDefaultImpl()>();

        interfaceinvoke $r6.<android.content.pm.IPackageInstaller: void bypassNextStagedInstallerCheck(boolean)>(z0);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public int createSession(android.content.pm.PackageInstaller$SessionParams, java.lang.String, int) throws android.os.RemoteException
    {
        android.content.pm.IPackageInstaller$Stub$Proxy r0;
        java.lang.String r1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.content.pm.IPackageInstaller $r5, $r6;
        java.lang.Throwable $r7;
        android.content.pm.PackageInstaller$SessionParams r8;
        int i0, i1, i2;

        r0 := @this: android.content.pm.IPackageInstaller$Stub$Proxy;

        r8 := @parameter0: android.content.pm.PackageInstaller$SessionParams;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.pm.IPackageInstaller");

     label02:
        if r8 == null goto label05;

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r8.<android.content.pm.PackageInstaller$SessionParams: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.content.pm.IPackageInstaller$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r2, r3, 0);

        if $z0 != 0 goto label08;

        $r5 = staticinvoke <android.content.pm.IPackageInstaller$Stub: android.content.pm.IPackageInstaller getDefaultImpl()>();

        if $r5 == null goto label08;

        $r6 = staticinvoke <android.content.pm.IPackageInstaller$Stub: android.content.pm.IPackageInstaller getDefaultImpl()>();

        i1 = interfaceinvoke $r6.<android.content.pm.IPackageInstaller: int createSession(android.content.pm.PackageInstaller$SessionParams,java.lang.String,int)>(r8, r1, i0);

     label07:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return i1;

     label08:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

     label09:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return i2;

     label10:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public android.content.pm.ParceledListSlice getAllSessions(int) throws android.os.RemoteException
    {
        android.content.pm.IPackageInstaller$Stub$Proxy r0;
        int i0, $i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$ClassLoaderCreator $r4;
        java.lang.Object $r5;
        android.content.pm.IPackageInstaller $r6, $r7;
        java.lang.Throwable $r8;
        android.content.pm.ParceledListSlice r9, r10;

        r0 := @this: android.content.pm.IPackageInstaller$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.pm.IPackageInstaller");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.content.pm.IPackageInstaller$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.content.pm.IPackageInstaller$Stub: android.content.pm.IPackageInstaller getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.content.pm.IPackageInstaller$Stub: android.content.pm.IPackageInstaller getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<android.content.pm.IPackageInstaller: android.content.pm.ParceledListSlice getAllSessions(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i1 == 0 goto label5;

        $r4 = <android.content.pm.ParceledListSlice: android.os.Parcelable$ClassLoaderCreator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$ClassLoaderCreator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r10 = (android.content.pm.ParceledListSlice) $r5;

     label4:
        goto label6;

     label5:
        r10 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.content.pm.IPackageInstaller$Stub$Proxy r0;

        r0 := @this: android.content.pm.IPackageInstaller$Stub$Proxy;

        return "android.content.pm.IPackageInstaller";
    }

    public android.content.pm.ParceledListSlice getMySessions(java.lang.String, int) throws android.os.RemoteException
    {
        android.content.pm.IPackageInstaller$Stub$Proxy r0;
        int i0, $i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$ClassLoaderCreator $r4;
        java.lang.Object $r5;
        android.content.pm.IPackageInstaller $r6, $r7;
        java.lang.Throwable $r8;
        java.lang.String r9;
        android.content.pm.ParceledListSlice r10, r11;

        r0 := @this: android.content.pm.IPackageInstaller$Stub$Proxy;

        r9 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.pm.IPackageInstaller");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r9);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.content.pm.IPackageInstaller$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.content.pm.IPackageInstaller$Stub: android.content.pm.IPackageInstaller getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.content.pm.IPackageInstaller$Stub: android.content.pm.IPackageInstaller getDefaultImpl()>();

        r10 = interfaceinvoke $r7.<android.content.pm.IPackageInstaller: android.content.pm.ParceledListSlice getMySessions(java.lang.String,int)>(r9, i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i1 == 0 goto label5;

        $r4 = <android.content.pm.ParceledListSlice: android.os.Parcelable$ClassLoaderCreator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$ClassLoaderCreator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r11 = (android.content.pm.ParceledListSlice) $r5;

     label4:
        goto label6;

     label5:
        r11 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r11;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public android.content.pm.PackageInstaller$SessionInfo getSessionInfo(int) throws android.os.RemoteException
    {
        android.content.pm.IPackageInstaller$Stub$Proxy r0;
        int i0, $i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.content.pm.IPackageInstaller $r6, $r7;
        java.lang.Throwable $r8;
        android.content.pm.PackageInstaller$SessionInfo r9, r10;

        r0 := @this: android.content.pm.IPackageInstaller$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.pm.IPackageInstaller");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.content.pm.IPackageInstaller$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.content.pm.IPackageInstaller$Stub: android.content.pm.IPackageInstaller getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.content.pm.IPackageInstaller$Stub: android.content.pm.IPackageInstaller getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<android.content.pm.IPackageInstaller: android.content.pm.PackageInstaller$SessionInfo getSessionInfo(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i1 == 0 goto label5;

        $r4 = <android.content.pm.PackageInstaller$SessionInfo: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r10 = (android.content.pm.PackageInstaller$SessionInfo) $r5;

     label4:
        goto label6;

     label5:
        r10 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public android.content.pm.ParceledListSlice getStagedSessions() throws android.os.RemoteException
    {
        android.content.pm.IPackageInstaller$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        int $i0;
        android.os.Parcelable$ClassLoaderCreator $r4;
        java.lang.Object $r5;
        android.content.pm.IPackageInstaller $r6, $r7;
        java.lang.Throwable $r8;
        android.content.pm.ParceledListSlice r9, r10;

        r0 := @this: android.content.pm.IPackageInstaller$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.pm.IPackageInstaller");

        $r3 = r0.<android.content.pm.IPackageInstaller$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(9, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.content.pm.IPackageInstaller$Stub: android.content.pm.IPackageInstaller getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.content.pm.IPackageInstaller$Stub: android.content.pm.IPackageInstaller getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<android.content.pm.IPackageInstaller: android.content.pm.ParceledListSlice getStagedSessions()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label5;

        $r4 = <android.content.pm.ParceledListSlice: android.os.Parcelable$ClassLoaderCreator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$ClassLoaderCreator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r10 = (android.content.pm.ParceledListSlice) $r5;

     label4:
        goto label6;

     label5:
        r10 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public void installExistingPackage(java.lang.String, int, int, android.content.IntentSender, int, java.util.List) throws android.os.RemoteException
    {
        android.content.pm.IPackageInstaller$Stub$Proxy r0;
        int i0, i1, i2;
        android.content.IntentSender r1;
        java.util.List r2;
        android.os.Parcel r3, r4;
        android.os.IBinder $r5;
        boolean $z0;
        android.content.pm.IPackageInstaller $r6, $r7;
        java.lang.Throwable $r8, $r9, $r10, $r11, $r12, $r13, r15;
        java.lang.String r14;

        r0 := @this: android.content.pm.IPackageInstaller$Stub$Proxy;

        r14 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: android.content.IntentSender;

        i2 := @parameter4: int;

        r2 := @parameter5: java.util.List;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.pm.IPackageInstaller");

     label02:
        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r14);

     label03:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i0);

     label04:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i1);

     label05:
        if r1 == null goto label08;

     label06:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.content.IntentSender: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label07:
        goto label09;

     label08:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label09:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i2);

     label10:
        virtualinvoke r3.<android.os.Parcel: void writeStringList(java.util.List)>(r2);

        $r5 = r0.<android.content.pm.IPackageInstaller$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(14, r3, r4, 0);

        if $z0 != 0 goto label12;

        $r6 = staticinvoke <android.content.pm.IPackageInstaller$Stub: android.content.pm.IPackageInstaller getDefaultImpl()>();

        if $r6 == null goto label12;

        $r7 = staticinvoke <android.content.pm.IPackageInstaller$Stub: android.content.pm.IPackageInstaller getDefaultImpl()>();

        interfaceinvoke $r7.<android.content.pm.IPackageInstaller: void installExistingPackage(java.lang.String,int,int,android.content.IntentSender,int,java.util.List)>(r14, i0, i1, r1, i2, r2);

     label11:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label12:
        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label13:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label14:
        $r9 := @caughtexception;

        r15 = $r9;

        goto label20;

     label15:
        $r8 := @caughtexception;

        r15 = $r8;

        goto label20;

     label16:
        $r13 := @caughtexception;

        r15 = $r13;

        goto label20;

     label17:
        $r11 := @caughtexception;

        r15 = $r11;

        goto label20;

     label18:
        $r10 := @caughtexception;

        r15 = $r10;

        goto label20;

     label19:
        $r12 := @caughtexception;

        r15 = $r12;

     label20:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r15;

        catch java.lang.Throwable from label01 to label02 with label19;
        catch java.lang.Throwable from label02 to label03 with label18;
        catch java.lang.Throwable from label03 to label04 with label17;
        catch java.lang.Throwable from label04 to label05 with label16;
        catch java.lang.Throwable from label06 to label07 with label16;
        catch java.lang.Throwable from label08 to label09 with label16;
        catch java.lang.Throwable from label09 to label10 with label15;
        catch java.lang.Throwable from label10 to label11 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
    }

    public android.content.pm.IPackageInstallerSession openSession(int) throws android.os.RemoteException
    {
        android.content.pm.IPackageInstaller$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, $r4;
        boolean $z0;
        android.content.pm.IPackageInstaller $r5, $r6;
        java.lang.Throwable $r7;
        android.content.pm.IPackageInstallerSession r8, r9;

        r0 := @this: android.content.pm.IPackageInstaller$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.pm.IPackageInstaller");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.content.pm.IPackageInstaller$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.content.pm.IPackageInstaller$Stub: android.content.pm.IPackageInstaller getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.content.pm.IPackageInstaller$Stub: android.content.pm.IPackageInstaller getDefaultImpl()>();

        r8 = interfaceinvoke $r6.<android.content.pm.IPackageInstaller: android.content.pm.IPackageInstallerSession openSession(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $r4 = virtualinvoke r2.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r9 = staticinvoke <android.content.pm.IPackageInstallerSession$Stub: android.content.pm.IPackageInstallerSession asInterface(android.os.IBinder)>($r4);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void registerCallback(android.content.pm.IPackageInstallerCallback, int) throws android.os.RemoteException
    {
        android.content.pm.IPackageInstaller$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.content.pm.IPackageInstaller $r4, $r5;
        java.lang.Throwable $r6;
        android.content.pm.IPackageInstallerCallback r7;

        r0 := @this: android.content.pm.IPackageInstaller$Stub$Proxy;

        r7 := @parameter0: android.content.pm.IPackageInstallerCallback;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.pm.IPackageInstaller");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.content.pm.IPackageInstallerCallback: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.content.pm.IPackageInstaller$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(10, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.content.pm.IPackageInstaller$Stub: android.content.pm.IPackageInstaller getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.content.pm.IPackageInstaller$Stub: android.content.pm.IPackageInstaller getDefaultImpl()>();

        interfaceinvoke $r5.<android.content.pm.IPackageInstaller: void registerCallback(android.content.pm.IPackageInstallerCallback,int)>(r7, i0);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void setPermissionsResult(int, boolean) throws android.os.RemoteException
    {
        android.content.pm.IPackageInstaller$Stub$Proxy r0;
        int i0;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        android.content.pm.IPackageInstaller $r5, $r6;
        java.lang.Throwable $r7;
        byte b1;

        r0 := @this: android.content.pm.IPackageInstaller$Stub$Proxy;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.pm.IPackageInstaller");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label2:
        if z0 == 0 goto label3;

        b1 = 1;

        goto label4;

     label3:
        b1 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b1);

        $r4 = r0.<android.content.pm.IPackageInstaller$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(15, r1, r2, 0);

        if $z1 != 0 goto label6;

        $r5 = staticinvoke <android.content.pm.IPackageInstaller$Stub: android.content.pm.IPackageInstaller getDefaultImpl()>();

        if $r5 == null goto label6;

        $r6 = staticinvoke <android.content.pm.IPackageInstaller$Stub: android.content.pm.IPackageInstaller getDefaultImpl()>();

        interfaceinvoke $r6.<android.content.pm.IPackageInstaller: void setPermissionsResult(int,boolean)>(i0, z0);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void uninstall(android.content.pm.VersionedPackage, java.lang.String, int, android.content.IntentSender, int) throws android.os.RemoteException
    {
        android.content.pm.IPackageInstaller$Stub$Proxy r0;
        java.lang.String r1;
        int i0, i1;
        android.content.IntentSender r2;
        android.os.Parcel r3, r4;
        android.os.IBinder $r5;
        boolean $z0;
        android.content.pm.IPackageInstaller $r6, $r7;
        java.lang.Throwable $r8;
        android.content.pm.VersionedPackage r9;

        r0 := @this: android.content.pm.IPackageInstaller$Stub$Proxy;

        r9 := @parameter0: android.content.pm.VersionedPackage;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r2 := @parameter3: android.content.IntentSender;

        i1 := @parameter4: int;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.pm.IPackageInstaller");

     label02:
        if r9 == null goto label05;

     label03:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r9.<android.content.pm.VersionedPackage: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i0);

     label07:
        if r2 == null goto label10;

     label08:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r2.<android.content.IntentSender: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label09:
        goto label11;

     label10:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label11:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i1);

        $r5 = r0.<android.content.pm.IPackageInstaller$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(12, r3, r4, 0);

        if $z0 != 0 goto label13;

        $r6 = staticinvoke <android.content.pm.IPackageInstaller$Stub: android.content.pm.IPackageInstaller getDefaultImpl()>();

        if $r6 == null goto label13;

        $r7 = staticinvoke <android.content.pm.IPackageInstaller$Stub: android.content.pm.IPackageInstaller getDefaultImpl()>();

        interfaceinvoke $r7.<android.content.pm.IPackageInstaller: void uninstall(android.content.pm.VersionedPackage,java.lang.String,int,android.content.IntentSender,int)>(r9, r1, i0, r2, i1);

     label12:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label13:
        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label14:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label15:
        $r8 := @caughtexception;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label05 to label06 with label15;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.lang.Throwable from label11 to label12 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
    }

    public void uninstallExistingPackage(android.content.pm.VersionedPackage, java.lang.String, android.content.IntentSender, int) throws android.os.RemoteException
    {
        android.content.pm.IPackageInstaller$Stub$Proxy r0;
        java.lang.String r1;
        android.content.IntentSender r2;
        int i0;
        android.os.Parcel r3, r4;
        android.os.IBinder $r5;
        boolean $z0;
        android.content.pm.IPackageInstaller $r6, $r7;
        java.lang.Throwable $r8;
        android.content.pm.VersionedPackage r9;

        r0 := @this: android.content.pm.IPackageInstaller$Stub$Proxy;

        r9 := @parameter0: android.content.pm.VersionedPackage;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.content.IntentSender;

        i0 := @parameter3: int;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.pm.IPackageInstaller");

     label02:
        if r9 == null goto label05;

     label03:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r9.<android.content.pm.VersionedPackage: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r1);

     label07:
        if r2 == null goto label10;

     label08:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r2.<android.content.IntentSender: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label09:
        goto label11;

     label10:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label11:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i0);

        $r5 = r0.<android.content.pm.IPackageInstaller$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(13, r3, r4, 0);

        if $z0 != 0 goto label13;

        $r6 = staticinvoke <android.content.pm.IPackageInstaller$Stub: android.content.pm.IPackageInstaller getDefaultImpl()>();

        if $r6 == null goto label13;

        $r7 = staticinvoke <android.content.pm.IPackageInstaller$Stub: android.content.pm.IPackageInstaller getDefaultImpl()>();

        interfaceinvoke $r7.<android.content.pm.IPackageInstaller: void uninstallExistingPackage(android.content.pm.VersionedPackage,java.lang.String,android.content.IntentSender,int)>(r9, r1, r2, i0);

     label12:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label13:
        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label14:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label15:
        $r8 := @caughtexception;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label05 to label06 with label15;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.lang.Throwable from label11 to label12 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
    }

    public void unregisterCallback(android.content.pm.IPackageInstallerCallback) throws android.os.RemoteException
    {
        android.content.pm.IPackageInstaller$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.content.pm.IPackageInstaller $r4, $r5;
        java.lang.Throwable $r6;
        android.content.pm.IPackageInstallerCallback r7;

        r0 := @this: android.content.pm.IPackageInstaller$Stub$Proxy;

        r7 := @parameter0: android.content.pm.IPackageInstallerCallback;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.pm.IPackageInstaller");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.content.pm.IPackageInstallerCallback: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.content.pm.IPackageInstaller$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(11, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.content.pm.IPackageInstaller$Stub: android.content.pm.IPackageInstaller getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.content.pm.IPackageInstaller$Stub: android.content.pm.IPackageInstaller getDefaultImpl()>();

        interfaceinvoke $r5.<android.content.pm.IPackageInstaller: void unregisterCallback(android.content.pm.IPackageInstallerCallback)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void updateSessionAppIcon(int, android.graphics.Bitmap) throws android.os.RemoteException
    {
        android.content.pm.IPackageInstaller$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.content.pm.IPackageInstaller $r4, $r5;
        java.lang.Throwable $r6;
        android.graphics.Bitmap r7;

        r0 := @this: android.content.pm.IPackageInstaller$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: android.graphics.Bitmap;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.pm.IPackageInstaller");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.graphics.Bitmap: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r3 = r0.<android.content.pm.IPackageInstaller$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.content.pm.IPackageInstaller$Stub: android.content.pm.IPackageInstaller getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.content.pm.IPackageInstaller$Stub: android.content.pm.IPackageInstaller getDefaultImpl()>();

        interfaceinvoke $r5.<android.content.pm.IPackageInstaller: void updateSessionAppIcon(int,android.graphics.Bitmap)>(i0, r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void updateSessionAppLabel(int, java.lang.String) throws android.os.RemoteException
    {
        android.content.pm.IPackageInstaller$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.content.pm.IPackageInstaller $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: android.content.pm.IPackageInstaller$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.pm.IPackageInstaller");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        $r3 = r0.<android.content.pm.IPackageInstaller$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.content.pm.IPackageInstaller$Stub: android.content.pm.IPackageInstaller getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.content.pm.IPackageInstaller$Stub: android.content.pm.IPackageInstaller getDefaultImpl()>();

        interfaceinvoke $r5.<android.content.pm.IPackageInstaller: void updateSessionAppLabel(int,java.lang.String)>(i0, r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }
}
