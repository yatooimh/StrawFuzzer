class android.content.pm.IPackageInstallerSession$Stub$Proxy extends java.lang.Object implements android.content.pm.IPackageInstallerSession
{
    public static android.content.pm.IPackageInstallerSession sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.content.pm.IPackageInstallerSession$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.content.pm.IPackageInstallerSession$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.content.pm.IPackageInstallerSession$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public void abandon() throws android.os.RemoteException
    {
        android.content.pm.IPackageInstallerSession$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.content.pm.IPackageInstallerSession $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.content.pm.IPackageInstallerSession$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.pm.IPackageInstallerSession");

        $r4 = r0.<android.content.pm.IPackageInstallerSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(11, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.content.pm.IPackageInstallerSession$Stub: android.content.pm.IPackageInstallerSession getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.content.pm.IPackageInstallerSession$Stub: android.content.pm.IPackageInstallerSession getDefaultImpl()>();

        interfaceinvoke $r6.<android.content.pm.IPackageInstallerSession: void abandon()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void addChildSessionId(int) throws android.os.RemoteException
    {
        android.content.pm.IPackageInstallerSession$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.content.pm.IPackageInstallerSession $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.content.pm.IPackageInstallerSession$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.pm.IPackageInstallerSession");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.content.pm.IPackageInstallerSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(17, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.content.pm.IPackageInstallerSession$Stub: android.content.pm.IPackageInstallerSession getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.content.pm.IPackageInstallerSession$Stub: android.content.pm.IPackageInstallerSession getDefaultImpl()>();

        interfaceinvoke $r6.<android.content.pm.IPackageInstallerSession: void addChildSessionId(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void addClientProgress(float) throws android.os.RemoteException
    {
        android.content.pm.IPackageInstallerSession$Stub$Proxy r0;
        float f0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.content.pm.IPackageInstallerSession $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.content.pm.IPackageInstallerSession$Stub$Proxy;

        f0 := @parameter0: float;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.pm.IPackageInstallerSession");

        virtualinvoke r1.<android.os.Parcel: void writeFloat(float)>(f0);

        $r4 = r0.<android.content.pm.IPackageInstallerSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.content.pm.IPackageInstallerSession$Stub: android.content.pm.IPackageInstallerSession getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.content.pm.IPackageInstallerSession$Stub: android.content.pm.IPackageInstallerSession getDefaultImpl()>();

        interfaceinvoke $r6.<android.content.pm.IPackageInstallerSession: void addClientProgress(float)>(f0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void addFile(int, java.lang.String, long, byte[], byte[]) throws android.os.RemoteException
    {
        android.content.pm.IPackageInstallerSession$Stub$Proxy r0;
        int i0;
        long l1;
        byte[] r1, r2;
        android.os.Parcel r3, r4;
        android.os.IBinder $r5;
        boolean $z0;
        android.content.pm.IPackageInstallerSession $r6, $r7;
        java.lang.Throwable $r8, $r9, $r10, $r11, $r12, $r13, r15;
        java.lang.String r14;

        r0 := @this: android.content.pm.IPackageInstallerSession$Stub$Proxy;

        i0 := @parameter0: int;

        r14 := @parameter1: java.lang.String;

        l1 := @parameter2: long;

        r1 := @parameter3: byte[];

        r2 := @parameter4: byte[];

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.pm.IPackageInstallerSession");

     label02:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i0);

     label03:
        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r14);

     label04:
        virtualinvoke r3.<android.os.Parcel: void writeLong(long)>(l1);

     label05:
        virtualinvoke r3.<android.os.Parcel: void writeByteArray(byte[])>(r1);

     label06:
        virtualinvoke r3.<android.os.Parcel: void writeByteArray(byte[])>(r2);

        $r5 = r0.<android.content.pm.IPackageInstallerSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(13, r3, r4, 0);

        if $z0 != 0 goto label08;

        $r6 = staticinvoke <android.content.pm.IPackageInstallerSession$Stub: android.content.pm.IPackageInstallerSession getDefaultImpl()>();

        if $r6 == null goto label08;

        $r7 = staticinvoke <android.content.pm.IPackageInstallerSession$Stub: android.content.pm.IPackageInstallerSession getDefaultImpl()>();

        interfaceinvoke $r7.<android.content.pm.IPackageInstallerSession: void addFile(int,java.lang.String,long,byte[],byte[])>(i0, r14, l1, r1, r2);

     label07:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r12 := @caughtexception;

        r15 = $r12;

        goto label16;

     label11:
        $r11 := @caughtexception;

        r15 = $r11;

        goto label16;

     label12:
        $r9 := @caughtexception;

        r15 = $r9;

        goto label16;

     label13:
        $r10 := @caughtexception;

        r15 = $r10;

        goto label16;

     label14:
        $r8 := @caughtexception;

        r15 = $r8;

        goto label16;

     label15:
        $r13 := @caughtexception;

        r15 = $r13;

     label16:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r15;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label02 to label03 with label14;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public android.os.IBinder asBinder()
    {
        android.content.pm.IPackageInstallerSession$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.content.pm.IPackageInstallerSession$Stub$Proxy;

        $r1 = r0.<android.content.pm.IPackageInstallerSession$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public void close() throws android.os.RemoteException
    {
        android.content.pm.IPackageInstallerSession$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.content.pm.IPackageInstallerSession $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.content.pm.IPackageInstallerSession$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.pm.IPackageInstallerSession");

        $r4 = r0.<android.content.pm.IPackageInstallerSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.content.pm.IPackageInstallerSession$Stub: android.content.pm.IPackageInstallerSession getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.content.pm.IPackageInstallerSession$Stub: android.content.pm.IPackageInstallerSession getDefaultImpl()>();

        interfaceinvoke $r6.<android.content.pm.IPackageInstallerSession: void close()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void commit(android.content.IntentSender, boolean) throws android.os.RemoteException
    {
        android.content.pm.IPackageInstallerSession$Stub$Proxy r0;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        android.content.pm.IPackageInstallerSession $r4, $r5;
        java.lang.Throwable $r6;
        android.content.IntentSender r7;
        byte b0;

        r0 := @this: android.content.pm.IPackageInstallerSession$Stub$Proxy;

        r7 := @parameter0: android.content.IntentSender;

        z0 := @parameter1: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.pm.IPackageInstallerSession");

     label02:
        b0 = 1;

        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.content.IntentSender: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        if z0 == 0 goto label07;

        goto label08;

     label07:
        b0 = 0;

     label08:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b0);

        $r3 = r0.<android.content.pm.IPackageInstallerSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(9, r1, r2, 0);

        if $z1 != 0 goto label10;

        $r4 = staticinvoke <android.content.pm.IPackageInstallerSession$Stub: android.content.pm.IPackageInstallerSession getDefaultImpl()>();

        if $r4 == null goto label10;

        $r5 = staticinvoke <android.content.pm.IPackageInstallerSession$Stub: android.content.pm.IPackageInstallerSession getDefaultImpl()>();

        interfaceinvoke $r5.<android.content.pm.IPackageInstallerSession: void commit(android.content.IntentSender,boolean)>(r7, z0);

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label11:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label12:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
    }

    public int[] getChildSessionIds() throws android.os.RemoteException
    {
        android.content.pm.IPackageInstallerSession$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.content.pm.IPackageInstallerSession $r4, $r5;
        java.lang.Throwable $r6;
        int[] r7, r8;

        r0 := @this: android.content.pm.IPackageInstallerSession$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.pm.IPackageInstallerSession");

        $r3 = r0.<android.content.pm.IPackageInstallerSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(16, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.content.pm.IPackageInstallerSession$Stub: android.content.pm.IPackageInstallerSession getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.content.pm.IPackageInstallerSession$Stub: android.content.pm.IPackageInstallerSession getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<android.content.pm.IPackageInstallerSession: int[] getChildSessionIds()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: int[] createIntArray()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.content.pm.DataLoaderParamsParcel getDataLoaderParams() throws android.os.RemoteException
    {
        android.content.pm.IPackageInstallerSession$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        int $i0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.content.pm.IPackageInstallerSession $r6, $r7;
        java.lang.Throwable $r8;
        android.content.pm.DataLoaderParamsParcel r9, r10;

        r0 := @this: android.content.pm.IPackageInstallerSession$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.pm.IPackageInstallerSession");

        $r3 = r0.<android.content.pm.IPackageInstallerSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(12, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.content.pm.IPackageInstallerSession$Stub: android.content.pm.IPackageInstallerSession getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.content.pm.IPackageInstallerSession$Stub: android.content.pm.IPackageInstallerSession getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<android.content.pm.IPackageInstallerSession: android.content.pm.DataLoaderParamsParcel getDataLoaderParams()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label5;

        $r4 = <android.content.pm.DataLoaderParamsParcel: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r10 = (android.content.pm.DataLoaderParamsParcel) $r5;

     label4:
        goto label6;

     label5:
        r10 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.content.pm.IPackageInstallerSession$Stub$Proxy r0;

        r0 := @this: android.content.pm.IPackageInstallerSession$Stub$Proxy;

        return "android.content.pm.IPackageInstallerSession";
    }

    public java.lang.String[] getNames() throws android.os.RemoteException
    {
        android.content.pm.IPackageInstallerSession$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.content.pm.IPackageInstallerSession $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String[] r7, r8;

        r0 := @this: android.content.pm.IPackageInstallerSession$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.pm.IPackageInstallerSession");

        $r3 = r0.<android.content.pm.IPackageInstallerSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.content.pm.IPackageInstallerSession$Stub: android.content.pm.IPackageInstallerSession getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.content.pm.IPackageInstallerSession$Stub: android.content.pm.IPackageInstallerSession getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<android.content.pm.IPackageInstallerSession: java.lang.String[] getNames()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: java.lang.String[] createStringArray()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int getParentSessionId() throws android.os.RemoteException
    {
        android.content.pm.IPackageInstallerSession$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.content.pm.IPackageInstallerSession $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1;

        r0 := @this: android.content.pm.IPackageInstallerSession$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.pm.IPackageInstallerSession");

        $r4 = r0.<android.content.pm.IPackageInstallerSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(19, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.content.pm.IPackageInstallerSession$Stub: android.content.pm.IPackageInstallerSession getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.content.pm.IPackageInstallerSession$Stub: android.content.pm.IPackageInstallerSession getDefaultImpl()>();

        i0 = interfaceinvoke $r6.<android.content.pm.IPackageInstallerSession: int getParentSessionId()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i0;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public boolean isMultiPackage() throws android.os.RemoteException
    {
        android.content.pm.IPackageInstallerSession$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        boolean $z0, z1, z2;
        android.content.pm.IPackageInstallerSession $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: android.content.pm.IPackageInstallerSession$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.pm.IPackageInstallerSession");

        r6 = r0.<android.content.pm.IPackageInstallerSession$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(15, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.content.pm.IPackageInstallerSession$Stub: android.content.pm.IPackageInstallerSession getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.content.pm.IPackageInstallerSession$Stub: android.content.pm.IPackageInstallerSession getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.content.pm.IPackageInstallerSession: boolean isMultiPackage()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isStaged() throws android.os.RemoteException
    {
        android.content.pm.IPackageInstallerSession$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        boolean $z0, z1, z2;
        android.content.pm.IPackageInstallerSession $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: android.content.pm.IPackageInstallerSession$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.pm.IPackageInstallerSession");

        r6 = r0.<android.content.pm.IPackageInstallerSession$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(20, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.content.pm.IPackageInstallerSession$Stub: android.content.pm.IPackageInstallerSession getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.content.pm.IPackageInstallerSession$Stub: android.content.pm.IPackageInstallerSession getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.content.pm.IPackageInstallerSession: boolean isStaged()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public android.os.ParcelFileDescriptor openRead(java.lang.String) throws android.os.RemoteException
    {
        android.content.pm.IPackageInstallerSession$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        int $i0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.content.pm.IPackageInstallerSession $r6, $r7;
        java.lang.Throwable $r8;
        java.lang.String r9;
        android.os.ParcelFileDescriptor r10, r11;

        r0 := @this: android.content.pm.IPackageInstallerSession$Stub$Proxy;

        r9 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.pm.IPackageInstallerSession");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r9);

        $r3 = r0.<android.content.pm.IPackageInstallerSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.content.pm.IPackageInstallerSession$Stub: android.content.pm.IPackageInstallerSession getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.content.pm.IPackageInstallerSession$Stub: android.content.pm.IPackageInstallerSession getDefaultImpl()>();

        r10 = interfaceinvoke $r7.<android.content.pm.IPackageInstallerSession: android.os.ParcelFileDescriptor openRead(java.lang.String)>(r9);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label5;

        $r4 = <android.os.ParcelFileDescriptor: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r11 = (android.os.ParcelFileDescriptor) $r5;

     label4:
        goto label6;

     label5:
        r11 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r11;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public android.os.ParcelFileDescriptor openWrite(java.lang.String, long, long) throws android.os.RemoteException
    {
        android.content.pm.IPackageInstallerSession$Stub$Proxy r0;
        long l0, l1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        int $i2;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.content.pm.IPackageInstallerSession $r6, $r7;
        java.lang.Throwable $r8;
        java.lang.String r9;
        android.os.ParcelFileDescriptor r10, r11;

        r0 := @this: android.content.pm.IPackageInstallerSession$Stub$Proxy;

        r9 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.pm.IPackageInstallerSession");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r9);

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>(l0);

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>(l1);

        $r3 = r0.<android.content.pm.IPackageInstallerSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.content.pm.IPackageInstallerSession$Stub: android.content.pm.IPackageInstallerSession getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.content.pm.IPackageInstallerSession$Stub: android.content.pm.IPackageInstallerSession getDefaultImpl()>();

        r10 = interfaceinvoke $r7.<android.content.pm.IPackageInstallerSession: android.os.ParcelFileDescriptor openWrite(java.lang.String,long,long)>(r9, l0, l1);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i2 == 0 goto label5;

        $r4 = <android.os.ParcelFileDescriptor: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r11 = (android.os.ParcelFileDescriptor) $r5;

     label4:
        goto label6;

     label5:
        r11 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r11;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public void removeChildSessionId(int) throws android.os.RemoteException
    {
        android.content.pm.IPackageInstallerSession$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.content.pm.IPackageInstallerSession $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.content.pm.IPackageInstallerSession$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.pm.IPackageInstallerSession");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.content.pm.IPackageInstallerSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(18, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.content.pm.IPackageInstallerSession$Stub: android.content.pm.IPackageInstallerSession getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.content.pm.IPackageInstallerSession$Stub: android.content.pm.IPackageInstallerSession getDefaultImpl()>();

        interfaceinvoke $r6.<android.content.pm.IPackageInstallerSession: void removeChildSessionId(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void removeFile(int, java.lang.String) throws android.os.RemoteException
    {
        android.content.pm.IPackageInstallerSession$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.content.pm.IPackageInstallerSession $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: android.content.pm.IPackageInstallerSession$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.pm.IPackageInstallerSession");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        $r3 = r0.<android.content.pm.IPackageInstallerSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(14, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.content.pm.IPackageInstallerSession$Stub: android.content.pm.IPackageInstallerSession getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.content.pm.IPackageInstallerSession$Stub: android.content.pm.IPackageInstallerSession getDefaultImpl()>();

        interfaceinvoke $r5.<android.content.pm.IPackageInstallerSession: void removeFile(int,java.lang.String)>(i0, r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void removeSplit(java.lang.String) throws android.os.RemoteException
    {
        android.content.pm.IPackageInstallerSession$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.content.pm.IPackageInstallerSession $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: android.content.pm.IPackageInstallerSession$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.pm.IPackageInstallerSession");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        $r3 = r0.<android.content.pm.IPackageInstallerSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.content.pm.IPackageInstallerSession$Stub: android.content.pm.IPackageInstallerSession getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.content.pm.IPackageInstallerSession$Stub: android.content.pm.IPackageInstallerSession getDefaultImpl()>();

        interfaceinvoke $r5.<android.content.pm.IPackageInstallerSession: void removeSplit(java.lang.String)>(r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void setClientProgress(float) throws android.os.RemoteException
    {
        android.content.pm.IPackageInstallerSession$Stub$Proxy r0;
        float f0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.content.pm.IPackageInstallerSession $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.content.pm.IPackageInstallerSession$Stub$Proxy;

        f0 := @parameter0: float;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.pm.IPackageInstallerSession");

        virtualinvoke r1.<android.os.Parcel: void writeFloat(float)>(f0);

        $r4 = r0.<android.content.pm.IPackageInstallerSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.content.pm.IPackageInstallerSession$Stub: android.content.pm.IPackageInstallerSession getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.content.pm.IPackageInstallerSession$Stub: android.content.pm.IPackageInstallerSession getDefaultImpl()>();

        interfaceinvoke $r6.<android.content.pm.IPackageInstallerSession: void setClientProgress(float)>(f0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void transfer(java.lang.String) throws android.os.RemoteException
    {
        android.content.pm.IPackageInstallerSession$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.content.pm.IPackageInstallerSession $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: android.content.pm.IPackageInstallerSession$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.pm.IPackageInstallerSession");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        $r3 = r0.<android.content.pm.IPackageInstallerSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(10, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.content.pm.IPackageInstallerSession$Stub: android.content.pm.IPackageInstallerSession getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.content.pm.IPackageInstallerSession$Stub: android.content.pm.IPackageInstallerSession getDefaultImpl()>();

        interfaceinvoke $r5.<android.content.pm.IPackageInstallerSession: void transfer(java.lang.String)>(r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void write(java.lang.String, long, long, android.os.ParcelFileDescriptor) throws android.os.RemoteException
    {
        android.content.pm.IPackageInstallerSession$Stub$Proxy r0;
        long l0, l1;
        android.os.ParcelFileDescriptor r1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.content.pm.IPackageInstallerSession $r5, $r6;
        java.lang.Throwable $r7, $r8, $r9, $r10, r12;
        java.lang.String r11;

        r0 := @this: android.content.pm.IPackageInstallerSession$Stub$Proxy;

        r11 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        r1 := @parameter3: android.os.ParcelFileDescriptor;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.pm.IPackageInstallerSession");

     label02:
        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r11);

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeLong(long)>(l0);

     label04:
        virtualinvoke r2.<android.os.Parcel: void writeLong(long)>(l1);

     label05:
        if r1 == null goto label08;

     label06:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.os.ParcelFileDescriptor: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label07:
        goto label09;

     label08:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label09:
        $r4 = r0.<android.content.pm.IPackageInstallerSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r2, r3, 0);

        if $z0 != 0 goto label11;

        $r5 = staticinvoke <android.content.pm.IPackageInstallerSession$Stub: android.content.pm.IPackageInstallerSession getDefaultImpl()>();

        if $r5 == null goto label11;

        $r6 = staticinvoke <android.content.pm.IPackageInstallerSession$Stub: android.content.pm.IPackageInstallerSession getDefaultImpl()>();

        interfaceinvoke $r6.<android.content.pm.IPackageInstallerSession: void write(java.lang.String,long,long,android.os.ParcelFileDescriptor)>(r11, l0, l1, r1);

     label10:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label11:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label12:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label13:
        $r9 := @caughtexception;

        r12 = $r9;

        goto label17;

     label14:
        $r7 := @caughtexception;

        r12 = $r7;

        goto label17;

     label15:
        $r10 := @caughtexception;

        r12 = $r10;

        goto label17;

     label16:
        $r8 := @caughtexception;

        r12 = $r8;

     label17:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r12;

        catch java.lang.Throwable from label01 to label02 with label16;
        catch java.lang.Throwable from label02 to label03 with label15;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Throwable from label04 to label05 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
    }
}
