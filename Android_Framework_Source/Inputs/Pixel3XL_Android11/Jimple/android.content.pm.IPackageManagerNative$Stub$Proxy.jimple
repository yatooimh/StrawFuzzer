class android.content.pm.IPackageManagerNative$Stub$Proxy extends java.lang.Object implements android.content.pm.IPackageManagerNative
{
    public static android.content.pm.IPackageManagerNative sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.content.pm.IPackageManagerNative$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.content.pm.IPackageManagerNative$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.content.pm.IPackageManagerNative$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.content.pm.IPackageManagerNative$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.content.pm.IPackageManagerNative$Stub$Proxy;

        $r1 = r0.<android.content.pm.IPackageManagerNative$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public java.lang.String[] getAllPackages() throws android.os.RemoteException
    {
        android.content.pm.IPackageManagerNative$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.content.pm.IPackageManagerNative $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String[] r7, r8;

        r0 := @this: android.content.pm.IPackageManagerNative$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.pm.IPackageManagerNative");

        $r3 = r0.<android.content.pm.IPackageManagerNative$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.content.pm.IPackageManagerNative$Stub: android.content.pm.IPackageManagerNative getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.content.pm.IPackageManagerNative$Stub: android.content.pm.IPackageManagerNative getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<android.content.pm.IPackageManagerNative: java.lang.String[] getAllPackages()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: java.lang.String[] createStringArray()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String getInstallerForPackage(java.lang.String) throws android.os.RemoteException
    {
        android.content.pm.IPackageManagerNative$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.content.pm.IPackageManagerNative $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7, r8, r9;

        r0 := @this: android.content.pm.IPackageManagerNative$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.pm.IPackageManagerNative");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        $r3 = r0.<android.content.pm.IPackageManagerNative$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.content.pm.IPackageManagerNative$Stub: android.content.pm.IPackageManagerNative getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.content.pm.IPackageManagerNative$Stub: android.content.pm.IPackageManagerNative getDefaultImpl()>();

        r8 = interfaceinvoke $r5.<android.content.pm.IPackageManagerNative: java.lang.String getInstallerForPackage(java.lang.String)>(r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r9 = virtualinvoke r2.<android.os.Parcel: java.lang.String readString()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.content.pm.IPackageManagerNative$Stub$Proxy r0;

        r0 := @this: android.content.pm.IPackageManagerNative$Stub$Proxy;

        return "android.content.pm.IPackageManagerNative";
    }

    public int getLocationFlags(java.lang.String) throws android.os.RemoteException
    {
        android.content.pm.IPackageManagerNative$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.content.pm.IPackageManagerNative $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;
        int i0, i1;

        r0 := @this: android.content.pm.IPackageManagerNative$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.pm.IPackageManagerNative");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        $r3 = r0.<android.content.pm.IPackageManagerNative$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.content.pm.IPackageManagerNative$Stub: android.content.pm.IPackageManagerNative getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.content.pm.IPackageManagerNative$Stub: android.content.pm.IPackageManagerNative getDefaultImpl()>();

        i0 = interfaceinvoke $r5.<android.content.pm.IPackageManagerNative: int getLocationFlags(java.lang.String)>(r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i0;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String getModuleMetadataPackageName() throws android.os.RemoteException
    {
        android.content.pm.IPackageManagerNative$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.content.pm.IPackageManagerNative $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7, r8;

        r0 := @this: android.content.pm.IPackageManagerNative$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.pm.IPackageManagerNative");

        $r3 = r0.<android.content.pm.IPackageManagerNative$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.content.pm.IPackageManagerNative$Stub: android.content.pm.IPackageManagerNative getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.content.pm.IPackageManagerNative$Stub: android.content.pm.IPackageManagerNative getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<android.content.pm.IPackageManagerNative: java.lang.String getModuleMetadataPackageName()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: java.lang.String readString()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String[] getNamesForUids(int[]) throws android.os.RemoteException
    {
        android.content.pm.IPackageManagerNative$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.content.pm.IPackageManagerNative $r4, $r5;
        java.lang.Throwable $r6;
        int[] r7;
        java.lang.String[] r8, r9;

        r0 := @this: android.content.pm.IPackageManagerNative$Stub$Proxy;

        r7 := @parameter0: int[];

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.pm.IPackageManagerNative");

        virtualinvoke r1.<android.os.Parcel: void writeIntArray(int[])>(r7);

        $r3 = r0.<android.content.pm.IPackageManagerNative$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.content.pm.IPackageManagerNative$Stub: android.content.pm.IPackageManagerNative getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.content.pm.IPackageManagerNative$Stub: android.content.pm.IPackageManagerNative getDefaultImpl()>();

        r8 = interfaceinvoke $r5.<android.content.pm.IPackageManagerNative: java.lang.String[] getNamesForUids(int[])>(r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r9 = virtualinvoke r2.<android.os.Parcel: java.lang.String[] createStringArray()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int getTargetSdkVersionForPackage(java.lang.String) throws android.os.RemoteException
    {
        android.content.pm.IPackageManagerNative$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.content.pm.IPackageManagerNative $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;
        int i0, i1;

        r0 := @this: android.content.pm.IPackageManagerNative$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.pm.IPackageManagerNative");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        $r3 = r0.<android.content.pm.IPackageManagerNative$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.content.pm.IPackageManagerNative$Stub: android.content.pm.IPackageManagerNative getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.content.pm.IPackageManagerNative$Stub: android.content.pm.IPackageManagerNative getDefaultImpl()>();

        i0 = interfaceinvoke $r5.<android.content.pm.IPackageManagerNative: int getTargetSdkVersionForPackage(java.lang.String)>(r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i0;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public long getVersionCodeForPackage(java.lang.String) throws android.os.RemoteException
    {
        android.content.pm.IPackageManagerNative$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.content.pm.IPackageManagerNative $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;
        long l0, l1;

        r0 := @this: android.content.pm.IPackageManagerNative$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.pm.IPackageManagerNative");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        $r3 = r0.<android.content.pm.IPackageManagerNative$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.content.pm.IPackageManagerNative$Stub: android.content.pm.IPackageManagerNative getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.content.pm.IPackageManagerNative$Stub: android.content.pm.IPackageManagerNative getDefaultImpl()>();

        l0 = interfaceinvoke $r5.<android.content.pm.IPackageManagerNative: long getVersionCodeForPackage(java.lang.String)>(r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return l0;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        l1 = virtualinvoke r2.<android.os.Parcel: long readLong()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return l1;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public boolean[] isAudioPlaybackCaptureAllowed(java.lang.String[]) throws android.os.RemoteException
    {
        android.content.pm.IPackageManagerNative$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.content.pm.IPackageManagerNative $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String[] r7;
        boolean[] r8, r9;

        r0 := @this: android.content.pm.IPackageManagerNative$Stub$Proxy;

        r7 := @parameter0: java.lang.String[];

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.pm.IPackageManagerNative");

        virtualinvoke r1.<android.os.Parcel: void writeStringArray(java.lang.String[])>(r7);

        $r3 = r0.<android.content.pm.IPackageManagerNative$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.content.pm.IPackageManagerNative$Stub: android.content.pm.IPackageManagerNative getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.content.pm.IPackageManagerNative$Stub: android.content.pm.IPackageManagerNative getDefaultImpl()>();

        r8 = interfaceinvoke $r5.<android.content.pm.IPackageManagerNative: boolean[] isAudioPlaybackCaptureAllowed(java.lang.String[])>(r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r9 = virtualinvoke r2.<android.os.Parcel: boolean[] createBooleanArray()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void registerPackageChangeObserver(android.content.pm.IPackageChangeObserver) throws android.os.RemoteException
    {
        android.content.pm.IPackageManagerNative$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.content.pm.IPackageManagerNative $r4, $r5;
        java.lang.Throwable $r6;
        android.content.pm.IPackageChangeObserver r7;

        r0 := @this: android.content.pm.IPackageManagerNative$Stub$Proxy;

        r7 := @parameter0: android.content.pm.IPackageChangeObserver;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.pm.IPackageManagerNative");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.content.pm.IPackageChangeObserver: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.content.pm.IPackageManagerNative$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(9, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.content.pm.IPackageManagerNative$Stub: android.content.pm.IPackageManagerNative getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.content.pm.IPackageManagerNative$Stub: android.content.pm.IPackageManagerNative getDefaultImpl()>();

        interfaceinvoke $r5.<android.content.pm.IPackageManagerNative: void registerPackageChangeObserver(android.content.pm.IPackageChangeObserver)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void unregisterPackageChangeObserver(android.content.pm.IPackageChangeObserver) throws android.os.RemoteException
    {
        android.content.pm.IPackageManagerNative$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.content.pm.IPackageManagerNative $r4, $r5;
        java.lang.Throwable $r6;
        android.content.pm.IPackageChangeObserver r7;

        r0 := @this: android.content.pm.IPackageManagerNative$Stub$Proxy;

        r7 := @parameter0: android.content.pm.IPackageChangeObserver;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.pm.IPackageManagerNative");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.content.pm.IPackageChangeObserver: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.content.pm.IPackageManagerNative$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(10, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.content.pm.IPackageManagerNative$Stub: android.content.pm.IPackageManagerNative getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.content.pm.IPackageManagerNative$Stub: android.content.pm.IPackageManagerNative getDefaultImpl()>();

        interfaceinvoke $r5.<android.content.pm.IPackageManagerNative: void unregisterPackageChangeObserver(android.content.pm.IPackageChangeObserver)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }
}
