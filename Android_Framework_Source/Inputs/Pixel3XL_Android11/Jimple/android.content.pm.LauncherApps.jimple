public class android.content.pm.LauncherApps extends java.lang.Object
{
    public static final java.lang.String ACTION_CONFIRM_PIN_APPWIDGET;
    public static final java.lang.String ACTION_CONFIRM_PIN_SHORTCUT;
    static final boolean DEBUG;
    public static final java.lang.String EXTRA_PIN_ITEM_REQUEST;
    public static final int FLAG_CACHE_BUBBLE_SHORTCUTS;
    public static final int FLAG_CACHE_NOTIFICATION_SHORTCUTS;
    static final java.lang.String TAG;
    private android.content.pm.IOnAppsChangedListener$Stub mAppsChangedListener;
    private final java.util.List mCallbacks;
    private final android.content.Context mContext;
    private final java.util.List mDelegates;
    private final android.content.pm.PackageManager mPm;
    private final android.content.pm.ILauncherApps mService;
    private final java.util.Map mShortcutChangeCallbacks;
    private final android.os.UserManager mUserManager;

    public void <init>(android.content.Context)
    {
        android.content.pm.LauncherApps r0;
        android.content.Context r1;
        android.os.IBinder $r2;
        android.content.pm.ILauncherApps $r3;

        r0 := @this: android.content.pm.LauncherApps;

        r1 := @parameter0: android.content.Context;

        $r2 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("launcherapps");

        $r3 = staticinvoke <android.content.pm.ILauncherApps$Stub: android.content.pm.ILauncherApps asInterface(android.os.IBinder)>($r2);

        specialinvoke r0.<android.content.pm.LauncherApps: void <init>(android.content.Context,android.content.pm.ILauncherApps)>(r1, $r3);

        return;
    }

    public void <init>(android.content.Context, android.content.pm.ILauncherApps)
    {
        android.content.pm.LauncherApps r0;
        android.content.Context r1;
        android.content.pm.ILauncherApps r2;
        java.util.ArrayList $r3, $r4;
        java.util.HashMap $r5;
        android.content.pm.LauncherApps$1 $r6;
        android.content.pm.PackageManager $r7;
        java.lang.Object $r8;
        android.os.UserManager $r9;

        r0 := @this: android.content.pm.LauncherApps;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.pm.ILauncherApps;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<android.content.pm.LauncherApps: java.util.List mCallbacks> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<android.content.pm.LauncherApps: java.util.List mDelegates> = $r4;

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        r0.<android.content.pm.LauncherApps: java.util.Map mShortcutChangeCallbacks> = $r5;

        $r6 = new android.content.pm.LauncherApps$1;

        specialinvoke $r6.<android.content.pm.LauncherApps$1: void <init>(android.content.pm.LauncherApps)>(r0);

        r0.<android.content.pm.LauncherApps: android.content.pm.IOnAppsChangedListener$Stub mAppsChangedListener> = $r6;

        r0.<android.content.pm.LauncherApps: android.content.Context mContext> = r1;

        r0.<android.content.pm.LauncherApps: android.content.pm.ILauncherApps mService> = r2;

        $r7 = virtualinvoke r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r0.<android.content.pm.LauncherApps: android.content.pm.PackageManager mPm> = $r7;

        $r8 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/os/UserManager;");

        $r9 = (android.os.UserManager) $r8;

        r0.<android.content.pm.LauncherApps: android.os.UserManager mUserManager> = $r9;

        return;
    }

    static java.util.List access$100(android.content.pm.LauncherApps)
    {
        android.content.pm.LauncherApps r0;
        java.util.List $r1;

        r0 := @parameter0: android.content.pm.LauncherApps;

        $r1 = r0.<android.content.pm.LauncherApps: java.util.List mCallbacks>;

        return $r1;
    }

    private void addCallbackLocked(android.content.pm.LauncherApps$Callback, android.os.Handler)
    {
        android.content.pm.LauncherApps r0;
        android.os.Handler r1, $r5, r7;
        android.content.pm.LauncherApps$CallbackMessageHandler $r2;
        android.os.Looper $r3;
        java.util.List $r4;
        android.content.pm.LauncherApps$Callback r6;

        r0 := @this: android.content.pm.LauncherApps;

        r6 := @parameter0: android.content.pm.LauncherApps$Callback;

        r1 := @parameter1: android.os.Handler;

        specialinvoke r0.<android.content.pm.LauncherApps: void removeCallbackLocked(android.content.pm.LauncherApps$Callback)>(r6);

        r7 = r1;

        if r1 != null goto label1;

        $r5 = new android.os.Handler;

        specialinvoke $r5.<android.os.Handler: void <init>()>();

        r7 = $r5;

     label1:
        $r2 = new android.content.pm.LauncherApps$CallbackMessageHandler;

        $r3 = virtualinvoke r7.<android.os.Handler: android.os.Looper getLooper()>();

        specialinvoke $r2.<android.content.pm.LauncherApps$CallbackMessageHandler: void <init>(android.os.Looper,android.content.pm.LauncherApps$Callback)>($r3, r6);

        $r4 = r0.<android.content.pm.LauncherApps: java.util.List mCallbacks>;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r2);

        return;
    }

    private java.util.List convertToActivityList(android.content.pm.ParceledListSlice, android.os.UserHandle)
    {
        android.content.pm.LauncherApps r0;
        android.os.UserHandle r1;
        java.util.Iterator r3;
        java.util.ArrayList $r4;
        java.util.List $r5, $r10;
        boolean $z0;
        java.lang.Object $r6;
        android.content.pm.LauncherActivityInfo $r7;
        android.content.pm.ActivityInfo $r8;
        android.content.Context $r9;
        android.content.pm.ParceledListSlice r11;
        android.content.pm.ResolveInfo r12;

        r0 := @this: android.content.pm.LauncherApps;

        r11 := @parameter0: android.content.pm.ParceledListSlice;

        r1 := @parameter1: android.os.UserHandle;

        if r11 != null goto label1;

        $r10 = <java.util.Collections: java.util.List EMPTY_LIST>;

        return $r10;

     label1:
        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        $r5 = virtualinvoke r11.<android.content.pm.ParceledListSlice: java.util.List getList()>();

        r3 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r12 = (android.content.pm.ResolveInfo) $r6;

        $r7 = new android.content.pm.LauncherActivityInfo;

        $r9 = r0.<android.content.pm.LauncherApps: android.content.Context mContext>;

        $r8 = r12.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        specialinvoke $r7.<android.content.pm.LauncherActivityInfo: void <init>(android.content.Context,android.content.pm.ActivityInfo,android.os.UserHandle)>($r9, $r8, r1);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        goto label2;

     label3:
        return $r4;
    }

    private int findCallbackLocked(android.content.pm.LauncherApps$Callback)
    {
        android.content.pm.LauncherApps r0;
        android.content.pm.LauncherApps$Callback r1, $r7;
        int i0, i1;
        java.lang.IllegalArgumentException $r2;
        java.util.List $r3, $r4;
        java.lang.Object $r5;
        android.content.pm.LauncherApps$CallbackMessageHandler $r6;

        r0 := @this: android.content.pm.LauncherApps;

        r1 := @parameter0: android.content.pm.LauncherApps$Callback;

        if r1 == null goto label4;

        $r3 = r0.<android.content.pm.LauncherApps: java.util.List mCallbacks>;

        i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r4 = r0.<android.content.pm.LauncherApps: java.util.List mCallbacks>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i1);

        $r6 = (android.content.pm.LauncherApps$CallbackMessageHandler) $r5;

        $r7 = staticinvoke <android.content.pm.LauncherApps$CallbackMessageHandler: android.content.pm.LauncherApps$Callback access$000(android.content.pm.LauncherApps$CallbackMessageHandler)>($r6);

        if $r7 != r1 goto label2;

        return i1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return -1;

     label4:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Callback cannot be null");

        throw $r2;
    }

    private android.os.ParcelFileDescriptor getShortcutIconFd(java.lang.String, java.lang.String, int)
    {
        android.content.pm.LauncherApps r0;
        java.lang.String r1, $r4, r7;
        int i0;
        android.content.Context $r2;
        android.content.pm.ILauncherApps $r3;
        android.os.RemoteException $r5;
        java.lang.RuntimeException $r6;
        android.os.ParcelFileDescriptor r8;

        r0 := @this: android.content.pm.LauncherApps;

        r7 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

     label1:
        $r3 = r0.<android.content.pm.LauncherApps: android.content.pm.ILauncherApps mService>;

        $r2 = r0.<android.content.pm.LauncherApps: android.content.Context mContext>;

        $r4 = virtualinvoke $r2.<android.content.Context: java.lang.String getPackageName()>();

        r8 = interfaceinvoke $r3.<android.content.pm.ILauncherApps: android.os.ParcelFileDescriptor getShortcutIconFd(java.lang.String,java.lang.String,java.lang.String,int)>($r4, r7, r1, i0);

     label2:
        return r8;

     label3:
        $r5 := @caughtexception;

        $r6 = virtualinvoke $r5.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r6;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private java.lang.String getShortcutIconUri(java.lang.String, java.lang.String, int)
    {
        android.content.pm.LauncherApps r0;
        java.lang.String r1, $r4, r7, r8;
        int i0;
        android.content.Context $r2;
        android.content.pm.ILauncherApps $r3;
        android.os.RemoteException $r5;
        java.lang.RuntimeException $r6;

        r0 := @this: android.content.pm.LauncherApps;

        r7 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

     label1:
        $r3 = r0.<android.content.pm.LauncherApps: android.content.pm.ILauncherApps mService>;

        $r2 = r0.<android.content.pm.LauncherApps: android.content.Context mContext>;

        $r4 = virtualinvoke $r2.<android.content.Context: java.lang.String getPackageName()>();

        r8 = interfaceinvoke $r3.<android.content.pm.ILauncherApps: java.lang.String getShortcutIconUri(java.lang.String,java.lang.String,java.lang.String,int)>($r4, r7, r1, i0);

     label2:
        return r8;

     label3:
        $r5 := @caughtexception;

        $r6 = virtualinvoke $r5.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r6;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private android.os.ParcelFileDescriptor getUriShortcutIconFd(java.lang.String, java.lang.String, int)
    {
        android.content.pm.LauncherApps r0;
        int i0;
        android.content.Context $r1;
        android.content.ContentResolver $r2;
        android.net.Uri $r3;
        java.lang.Throwable $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r8, r9, r10, r11;
        android.os.ParcelFileDescriptor r12;

        r0 := @this: android.content.pm.LauncherApps;

        r9 := @parameter0: java.lang.String;

        r10 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r11 = specialinvoke r0.<android.content.pm.LauncherApps: java.lang.String getShortcutIconUri(java.lang.String,java.lang.String,int)>(r9, r10, i0);

        if r11 != null goto label1;

        return null;

     label1:
        $r1 = r0.<android.content.pm.LauncherApps: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r3 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>(r11);

        r12 = virtualinvoke $r2.<android.content.ContentResolver: android.os.ParcelFileDescriptor openFileDescriptor(android.net.Uri,java.lang.String)>($r3, "r");

     label2:
        return r12;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Icon file not found: ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("LauncherApps", $r8);

        return null;

        catch java.io.FileNotFoundException from label1 to label2 with label3;
    }

    private android.graphics.drawable.Drawable loadDrawableFromFileDescriptor(android.os.ParcelFileDescriptor, boolean)
    {
        android.content.pm.LauncherApps r0;
        boolean z0;
        android.graphics.Bitmap r1;
        java.io.FileDescriptor $r2;
        android.content.Context $r3;
        android.content.res.Resources $r4;
        android.graphics.drawable.AdaptiveIconDrawable $r5;
        java.lang.Throwable $r6, $r7, $r8, $r9, $r10;
        android.os.ParcelFileDescriptor r11;
        android.graphics.drawable.BitmapDrawable r12;

        r0 := @this: android.content.pm.LauncherApps;

        r11 := @parameter0: android.os.ParcelFileDescriptor;

        z0 := @parameter1: boolean;

        if r11 != null goto label01;

        return null;

     label01:
        $r2 = virtualinvoke r11.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        r1 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeFileDescriptor(java.io.FileDescriptor)>($r2);

     label02:
        if r1 == null goto label14;

     label03:
        r12 = new android.graphics.drawable.BitmapDrawable;

        $r3 = r0.<android.content.pm.LauncherApps: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.res.Resources getResources()>();

        specialinvoke r12.<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap)>($r4, r1);

     label04:
        if z0 == 0 goto label10;

     label05:
        $r5 = new android.graphics.drawable.AdaptiveIconDrawable;

        specialinvoke $r5.<android.graphics.drawable.AdaptiveIconDrawable: void <init>(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>(null, r12);

     label06:
        virtualinvoke r11.<android.os.ParcelFileDescriptor: void close()>();

     label07:
        goto label09;

     label08:
        $r9 := @caughtexception;

     label09:
        return $r5;

     label10:
        virtualinvoke r11.<android.os.ParcelFileDescriptor: void close()>();

     label11:
        goto label13;

     label12:
        $r10 := @caughtexception;

     label13:
        return r12;

     label14:
        virtualinvoke r11.<android.os.ParcelFileDescriptor: void close()>();

     label15:
        goto label17;

     label16:
        $r7 := @caughtexception;

     label17:
        return null;

     label18:
        $r8 := @caughtexception;

     label19:
        virtualinvoke r11.<android.os.ParcelFileDescriptor: void close()>();

     label20:
        goto label22;

     label21:
        $r6 := @caughtexception;

     label22:
        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label18;
        catch java.lang.Throwable from label03 to label04 with label18;
        catch java.lang.Throwable from label05 to label06 with label18;
        catch java.io.IOException from label06 to label07 with label08;
        catch java.io.IOException from label10 to label11 with label12;
        catch java.io.IOException from label14 to label15 with label16;
        catch java.io.IOException from label19 to label20 with label21;
    }

    private android.graphics.drawable.Drawable loadDrawableResourceFromPackage(java.lang.String, int, android.os.UserHandle, int)
    {
        android.content.pm.LauncherApps r0;
        int i0, i1;
        android.os.UserHandle r1;
        android.content.Context $r2;
        android.content.pm.PackageManager $r3;
        android.content.res.Resources $r4;
        java.lang.Exception $r5;
        java.lang.String r6;
        android.content.pm.ApplicationInfo r7;
        android.graphics.drawable.Drawable r8;

        r0 := @this: android.content.pm.LauncherApps;

        r6 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 := @parameter2: android.os.UserHandle;

        i1 := @parameter3: int;

        if i0 != 0 goto label1;

        return null;

     label1:
        r7 = virtualinvoke r0.<android.content.pm.LauncherApps: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int,android.os.UserHandle)>(r6, 0, r1);

        $r2 = r0.<android.content.pm.LauncherApps: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r4 = virtualinvoke $r3.<android.content.pm.PackageManager: android.content.res.Resources getResourcesForApplication(android.content.pm.ApplicationInfo)>(r7);

        r8 = virtualinvoke $r4.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawableForDensity(int,int)>(i0, i1);

     label2:
        return r8;

     label3:
        $r5 := @caughtexception;

        return null;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label3;
        catch android.content.res.Resources$NotFoundException from label1 to label2 with label3;
    }

    private void logErrorForInvalidProfileAccess(android.os.UserHandle)
    {
        android.content.pm.LauncherApps r0;
        android.os.UserHandle r1;
        int $i0, $i1, $i2;
        android.os.UserManager $r2;
        boolean $z0;
        android.content.Context $r3;

        r0 := @this: android.content.pm.LauncherApps;

        r1 := @parameter0: android.os.UserHandle;

        $i0 = staticinvoke <android.os.UserHandle: int myUserId()>();

        $i1 = virtualinvoke r1.<android.os.UserHandle: int getIdentifier()>();

        if $i0 == $i1 goto label1;

        $r2 = r0.<android.content.pm.LauncherApps: android.os.UserManager mUserManager>;

        $z0 = virtualinvoke $r2.<android.os.UserManager: boolean isManagedProfile()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<android.content.pm.LauncherApps: android.content.Context mContext>;

        $i2 = virtualinvoke $r3.<android.content.Context: int checkSelfPermission(java.lang.String)>("android.permission.INTERACT_ACROSS_USERS_FULL");

        if $i2 == 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("LauncherApps", "Accessing other profiles/users from managed profile is no longer allowed.");

     label1:
        return;
    }

    private java.util.List maybeUpdateDisabledMessage(java.util.List)
    {
        android.content.pm.LauncherApps r0;
        java.util.List r1;
        android.content.pm.ShortcutInfo r2;
        java.lang.String r3;
        int $i0, $i1, i2;
        java.lang.Object $r4;
        android.content.Context $r5;

        r0 := @this: android.content.pm.LauncherApps;

        r1 := @parameter0: java.util.List;

        if r1 != null goto label1;

        return null;

     label1:
        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        i2 = $i0 - 1;

     label2:
        if i2 < 0 goto label4;

        $r4 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i2);

        r2 = (android.content.pm.ShortcutInfo) $r4;

        $r5 = r0.<android.content.pm.LauncherApps: android.content.Context mContext>;

        $i1 = virtualinvoke r2.<android.content.pm.ShortcutInfo: int getDisabledReason()>();

        r3 = staticinvoke <android.content.pm.ShortcutInfo: java.lang.String getDisabledReasonForRestoreIssue(android.content.Context,int)>($r5, $i1);

        if r3 == null goto label3;

        virtualinvoke r2.<android.content.pm.ShortcutInfo: void setDisabledMessage(java.lang.String)>(r3);

     label3:
        i2 = i2 + -1;

        goto label2;

     label4:
        return r1;
    }

    private void removeCallbackLocked(android.content.pm.LauncherApps$Callback)
    {
        android.content.pm.LauncherApps r0;
        android.content.pm.LauncherApps$Callback r1;
        int i0;
        java.util.List $r2;

        r0 := @this: android.content.pm.LauncherApps;

        r1 := @parameter0: android.content.pm.LauncherApps$Callback;

        i0 = specialinvoke r0.<android.content.pm.LauncherApps: int findCallbackLocked(android.content.pm.LauncherApps$Callback)>(r1);

        if i0 < 0 goto label1;

        $r2 = r0.<android.content.pm.LauncherApps: java.util.List mCallbacks>;

        interfaceinvoke $r2.<java.util.List: java.lang.Object remove(int)>(i0);

     label1:
        return;
    }

    private void startShortcut(java.lang.String, java.lang.String, android.graphics.Rect, android.os.Bundle, int)
    {
        android.content.pm.LauncherApps r0;
        java.lang.String r1, $r6, r9;
        android.graphics.Rect r2;
        android.os.Bundle r3;
        int i0;
        android.content.Context $r4;
        android.content.pm.ILauncherApps $r5;
        boolean $z0;
        android.os.RemoteException $r7;
        java.lang.RuntimeException $r8;
        android.content.ActivityNotFoundException r10;

        r0 := @this: android.content.pm.LauncherApps;

        r9 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.graphics.Rect;

        r3 := @parameter3: android.os.Bundle;

        i0 := @parameter4: int;

     label1:
        $r5 = r0.<android.content.pm.LauncherApps: android.content.pm.ILauncherApps mService>;

        $r4 = r0.<android.content.pm.LauncherApps: android.content.Context mContext>;

        $r6 = virtualinvoke $r4.<android.content.Context: java.lang.String getPackageName()>();

        $z0 = interfaceinvoke $r5.<android.content.pm.ILauncherApps: boolean startShortcut(java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.graphics.Rect,android.os.Bundle,int)>($r6, r9, null, r1, r2, r3, i0);

        if $z0 == 0 goto label3;

     label2:
        return;

     label3:
        r10 = new android.content.ActivityNotFoundException;

        specialinvoke r10.<android.content.ActivityNotFoundException: void <init>(java.lang.String)>("Shortcut could not be started");

        throw r10;

     label4:
        $r7 := @caughtexception;

        $r8 = virtualinvoke $r7.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r8;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch android.os.RemoteException from label3 to label4 with label4;
    }

    public void cacheShortcuts(java.lang.String, java.util.List, android.os.UserHandle, int)
    {
        android.content.pm.LauncherApps r0;
        java.util.List r1;
        android.os.UserHandle r2;
        int i0;
        android.content.Context $r3;
        android.content.pm.ILauncherApps $r4;
        java.lang.String $r5, r8;
        android.os.RemoteException $r6;
        java.lang.RuntimeException $r7;

        r0 := @this: android.content.pm.LauncherApps;

        r8 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.List;

        r2 := @parameter2: android.os.UserHandle;

        i0 := @parameter3: int;

        specialinvoke r0.<android.content.pm.LauncherApps: void logErrorForInvalidProfileAccess(android.os.UserHandle)>(r2);

     label1:
        $r4 = r0.<android.content.pm.LauncherApps: android.content.pm.ILauncherApps mService>;

        $r3 = r0.<android.content.pm.LauncherApps: android.content.Context mContext>;

        $r5 = virtualinvoke $r3.<android.content.Context: java.lang.String getPackageName()>();

        interfaceinvoke $r4.<android.content.pm.ILauncherApps: void cacheShortcuts(java.lang.String,java.lang.String,java.util.List,android.os.UserHandle,int)>($r5, r8, r1, r2, i0);

     label2:
        return;

     label3:
        $r6 := @caughtexception;

        $r7 = virtualinvoke $r6.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r7;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.List getActivityList(java.lang.String, android.os.UserHandle)
    {
        android.content.pm.LauncherApps r0;
        android.os.UserHandle r1;
        android.content.Context $r2;
        android.content.pm.ILauncherApps $r3;
        java.lang.String $r4, r8;
        android.content.pm.ParceledListSlice $r5;
        android.os.RemoteException $r6;
        java.lang.RuntimeException $r7;
        java.util.List r9;

        r0 := @this: android.content.pm.LauncherApps;

        r8 := @parameter0: java.lang.String;

        r1 := @parameter1: android.os.UserHandle;

        specialinvoke r0.<android.content.pm.LauncherApps: void logErrorForInvalidProfileAccess(android.os.UserHandle)>(r1);

     label1:
        $r3 = r0.<android.content.pm.LauncherApps: android.content.pm.ILauncherApps mService>;

        $r2 = r0.<android.content.pm.LauncherApps: android.content.Context mContext>;

        $r4 = virtualinvoke $r2.<android.content.Context: java.lang.String getPackageName()>();

        $r5 = interfaceinvoke $r3.<android.content.pm.ILauncherApps: android.content.pm.ParceledListSlice getLauncherActivities(java.lang.String,java.lang.String,android.os.UserHandle)>($r4, r8, r1);

        r9 = specialinvoke r0.<android.content.pm.LauncherApps: java.util.List convertToActivityList(android.content.pm.ParceledListSlice,android.os.UserHandle)>($r5, r1);

     label2:
        return r9;

     label3:
        $r6 := @caughtexception;

        $r7 = virtualinvoke $r6.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r7;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.List getAllPackageInstallerSessions()
    {
        android.content.pm.LauncherApps r0;
        android.content.Context $r1;
        android.content.pm.ILauncherApps $r2;
        java.lang.String $r3;
        android.content.pm.ParceledListSlice $r4;
        android.os.RemoteException $r5;
        java.lang.RuntimeException $r6;
        java.util.List r7;

        r0 := @this: android.content.pm.LauncherApps;

     label1:
        $r2 = r0.<android.content.pm.LauncherApps: android.content.pm.ILauncherApps mService>;

        $r1 = r0.<android.content.pm.LauncherApps: android.content.Context mContext>;

        $r3 = virtualinvoke $r1.<android.content.Context: java.lang.String getPackageName()>();

        $r4 = interfaceinvoke $r2.<android.content.pm.ILauncherApps: android.content.pm.ParceledListSlice getAllSessions(java.lang.String)>($r3);

        r7 = virtualinvoke $r4.<android.content.pm.ParceledListSlice: java.util.List getList()>();

     label2:
        return r7;

     label3:
        $r5 := @caughtexception;

        $r6 = virtualinvoke $r5.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r6;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.content.pm.LauncherApps$AppUsageLimit getAppUsageLimit(java.lang.String, android.os.UserHandle)
    {
        android.content.pm.LauncherApps r0;
        android.os.UserHandle r1;
        android.content.Context $r2;
        android.content.pm.ILauncherApps $r3;
        java.lang.String $r4, r7;
        android.os.RemoteException $r5;
        java.lang.RuntimeException $r6;
        android.content.pm.LauncherApps$AppUsageLimit r8;

        r0 := @this: android.content.pm.LauncherApps;

        r7 := @parameter0: java.lang.String;

        r1 := @parameter1: android.os.UserHandle;

     label1:
        $r3 = r0.<android.content.pm.LauncherApps: android.content.pm.ILauncherApps mService>;

        $r2 = r0.<android.content.pm.LauncherApps: android.content.Context mContext>;

        $r4 = virtualinvoke $r2.<android.content.Context: java.lang.String getPackageName()>();

        r8 = interfaceinvoke $r3.<android.content.pm.ILauncherApps: android.content.pm.LauncherApps$AppUsageLimit getAppUsageLimit(java.lang.String,java.lang.String,android.os.UserHandle)>($r4, r7, r1);

     label2:
        return r8;

     label3:
        $r5 := @caughtexception;

        $r6 = virtualinvoke $r5.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r6;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String, int, android.os.UserHandle) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.content.pm.LauncherApps r0;
        int i0, $i1;
        android.os.UserHandle r1;
        android.content.pm.PackageManager$NameNotFoundException r2;
        android.content.Context $r5;
        android.content.pm.ILauncherApps $r6;
        java.lang.String $r7, $r12, r15;
        android.os.RemoteException $r13;
        java.lang.RuntimeException $r14;
        android.content.pm.ApplicationInfo r16;
        java.lang.StringBuilder r17;

        r0 := @this: android.content.pm.LauncherApps;

        r15 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 := @parameter2: android.os.UserHandle;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r15, "packageName");

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, "user");

        specialinvoke r0.<android.content.pm.LauncherApps: void logErrorForInvalidProfileAccess(android.os.UserHandle)>(r1);

     label1:
        $r6 = r0.<android.content.pm.LauncherApps: android.content.pm.ILauncherApps mService>;

        $r5 = r0.<android.content.pm.LauncherApps: android.content.Context mContext>;

        $r7 = virtualinvoke $r5.<android.content.Context: java.lang.String getPackageName()>();

        r16 = interfaceinvoke $r6.<android.content.pm.ILauncherApps: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,java.lang.String,int,android.os.UserHandle)>($r7, r15, i0, r1);

     label2:
        if r16 == null goto label3;

        return r16;

     label3:
        r2 = new android.content.pm.PackageManager$NameNotFoundException;

        r17 = new java.lang.StringBuilder;

        specialinvoke r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not found for user ");

        $i1 = virtualinvoke r1.<android.os.UserHandle: int getIdentifier()>();

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r12 = virtualinvoke r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r2.<android.content.pm.PackageManager$NameNotFoundException: void <init>(java.lang.String)>($r12);

        throw r2;

     label4:
        $r13 := @caughtexception;

        $r14 = virtualinvoke $r13.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r14;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch android.os.RemoteException from label3 to label4 with label4;
    }

    public android.content.pm.LauncherApps$PinItemRequest getPinItemRequest(android.content.Intent)
    {
        android.content.pm.LauncherApps r0;
        android.content.Intent r1;
        android.os.Parcelable $r2;
        android.content.pm.LauncherApps$PinItemRequest $r3;

        r0 := @this: android.content.pm.LauncherApps;

        r1 := @parameter0: android.content.Intent;

        $r2 = virtualinvoke r1.<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>("android.content.pm.extra.PIN_ITEM_REQUEST");

        $r3 = (android.content.pm.LauncherApps$PinItemRequest) $r2;

        return $r3;
    }

    public java.util.List getProfiles()
    {
        android.content.pm.LauncherApps r0;
        android.os.UserManager $r2, $r3;
        boolean $z0;
        java.util.List $r4;
        java.util.ArrayList $r5;
        android.os.UserHandle $r6;

        r0 := @this: android.content.pm.LauncherApps;

        $r2 = r0.<android.content.pm.LauncherApps: android.os.UserManager mUserManager>;

        $z0 = virtualinvoke $r2.<android.os.UserManager: boolean isManagedProfile()>();

        if $z0 == 0 goto label1;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>(int)>(1);

        $r6 = staticinvoke <android.os.Process: android.os.UserHandle myUserHandle()>();

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r6);

        return $r5;

     label1:
        $r3 = r0.<android.content.pm.LauncherApps: android.os.UserManager mUserManager>;

        $r4 = virtualinvoke $r3.<android.os.UserManager: java.util.List getUserProfiles()>();

        return $r4;
    }

    public android.graphics.drawable.Drawable getShortcutBadgedIconDrawable(android.content.pm.ShortcutInfo, int)
    {
        android.content.pm.LauncherApps r0;
        int i0;
        android.graphics.drawable.Drawable r1, r6;
        android.content.Context $r2;
        android.content.pm.PackageManager $r3;
        android.os.UserHandle $r4;
        android.content.pm.ShortcutInfo r5;

        r0 := @this: android.content.pm.LauncherApps;

        r5 := @parameter0: android.content.pm.ShortcutInfo;

        i0 := @parameter1: int;

        r1 = virtualinvoke r0.<android.content.pm.LauncherApps: android.graphics.drawable.Drawable getShortcutIconDrawable(android.content.pm.ShortcutInfo,int)>(r5, i0);

        if r1 != null goto label1;

        r6 = null;

        goto label2;

     label1:
        $r2 = r0.<android.content.pm.LauncherApps: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r4 = virtualinvoke r5.<android.content.pm.ShortcutInfo: android.os.UserHandle getUserHandle()>();

        r6 = virtualinvoke $r3.<android.content.pm.PackageManager: android.graphics.drawable.Drawable getUserBadgedIcon(android.graphics.drawable.Drawable,android.os.UserHandle)>(r1, $r4);

     label2:
        return r6;
    }

    public android.content.IntentSender getShortcutConfigActivityIntent(android.content.pm.LauncherActivityInfo)
    {
        android.content.pm.LauncherApps r0;
        android.content.Context $r1;
        android.content.pm.ILauncherApps $r2;
        java.lang.String $r3;
        android.content.ComponentName $r4;
        android.os.UserHandle $r5;
        android.os.RemoteException $r6;
        java.lang.RuntimeException $r7;
        android.content.pm.LauncherActivityInfo r8;
        android.content.IntentSender r9;

        r0 := @this: android.content.pm.LauncherApps;

        r8 := @parameter0: android.content.pm.LauncherActivityInfo;

     label1:
        $r2 = r0.<android.content.pm.LauncherApps: android.content.pm.ILauncherApps mService>;

        $r1 = r0.<android.content.pm.LauncherApps: android.content.Context mContext>;

        $r3 = virtualinvoke $r1.<android.content.Context: java.lang.String getPackageName()>();

        $r4 = virtualinvoke r8.<android.content.pm.LauncherActivityInfo: android.content.ComponentName getComponentName()>();

        $r5 = virtualinvoke r8.<android.content.pm.LauncherActivityInfo: android.os.UserHandle getUser()>();

        r9 = interfaceinvoke $r2.<android.content.pm.ILauncherApps: android.content.IntentSender getShortcutConfigActivityIntent(java.lang.String,android.content.ComponentName,android.os.UserHandle)>($r3, $r4, $r5);

     label2:
        return r9;

     label3:
        $r6 := @caughtexception;

        $r7 = virtualinvoke $r6.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r7;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.List getShortcutConfigActivityList(java.lang.String, android.os.UserHandle)
    {
        android.content.pm.LauncherApps r0;
        android.os.UserHandle r1;
        android.content.Context $r2;
        android.content.pm.ILauncherApps $r3;
        java.lang.String $r4, r8;
        android.content.pm.ParceledListSlice $r5;
        android.os.RemoteException $r6;
        java.lang.RuntimeException $r7;
        java.util.List r9;

        r0 := @this: android.content.pm.LauncherApps;

        r8 := @parameter0: java.lang.String;

        r1 := @parameter1: android.os.UserHandle;

        specialinvoke r0.<android.content.pm.LauncherApps: void logErrorForInvalidProfileAccess(android.os.UserHandle)>(r1);

     label1:
        $r3 = r0.<android.content.pm.LauncherApps: android.content.pm.ILauncherApps mService>;

        $r2 = r0.<android.content.pm.LauncherApps: android.content.Context mContext>;

        $r4 = virtualinvoke $r2.<android.content.Context: java.lang.String getPackageName()>();

        $r5 = interfaceinvoke $r3.<android.content.pm.ILauncherApps: android.content.pm.ParceledListSlice getShortcutConfigActivities(java.lang.String,java.lang.String,android.os.UserHandle)>($r4, r8, r1);

        r9 = specialinvoke r0.<android.content.pm.LauncherApps: java.util.List convertToActivityList(android.content.pm.ParceledListSlice,android.os.UserHandle)>($r5, r1);

     label2:
        return r9;

     label3:
        $r6 := @caughtexception;

        $r7 = virtualinvoke $r6.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r7;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.graphics.drawable.Icon getShortcutIcon(android.content.pm.ShortcutInfo)
    {
        android.content.pm.LauncherApps r0;
        android.graphics.Bitmap r1;
        boolean $z0, $z1, $z2, $z3, $z4;
        android.graphics.drawable.Icon $r2, $r4, $r7, $r8, r17, r19;
        java.lang.String $r3, $r5, $r6, r24;
        int $i0, $i1;
        java.io.FileDescriptor $r9;
        java.lang.Throwable $r10, $r11, $r12, $r13, $r14;
        android.content.pm.ShortcutInfo r15;
        android.os.ParcelFileDescriptor r16;

        r0 := @this: android.content.pm.LauncherApps;

        r15 := @parameter0: android.content.pm.ShortcutInfo;

        $z0 = virtualinvoke r15.<android.content.pm.ShortcutInfo: boolean hasIconFile()>();

        if $z0 == 0 goto label22;

        r16 = virtualinvoke r0.<android.content.pm.LauncherApps: android.os.ParcelFileDescriptor getShortcutIconFd(android.content.pm.ShortcutInfo)>(r15);

        if r16 != null goto label01;

        return null;

     label01:
        $r9 = virtualinvoke r16.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        r1 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeFileDescriptor(java.io.FileDescriptor)>($r9);

     label02:
        if r1 == null goto label13;

     label03:
        $z4 = virtualinvoke r15.<android.content.pm.ShortcutInfo: boolean hasAdaptiveBitmap()>();

        if $z4 == 0 goto label08;

        r17 = staticinvoke <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)>(r1);

     label04:
        virtualinvoke r16.<android.os.ParcelFileDescriptor: void close()>();

     label05:
        goto label07;

     label06:
        $r14 := @caughtexception;

     label07:
        return r17;

     label08:
        r19 = staticinvoke <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithBitmap(android.graphics.Bitmap)>(r1);

     label09:
        virtualinvoke r16.<android.os.ParcelFileDescriptor: void close()>();

     label10:
        goto label12;

     label11:
        $r13 := @caughtexception;

     label12:
        return r19;

     label13:
        virtualinvoke r16.<android.os.ParcelFileDescriptor: void close()>();

     label14:
        goto label16;

     label15:
        $r10 := @caughtexception;

     label16:
        return null;

     label17:
        $r11 := @caughtexception;

     label18:
        virtualinvoke r16.<android.os.ParcelFileDescriptor: void close()>();

     label19:
        goto label21;

     label20:
        $r12 := @caughtexception;

     label21:
        throw $r11;

     label22:
        $z1 = virtualinvoke r15.<android.content.pm.ShortcutInfo: boolean hasIconUri()>();

        if $z1 == 0 goto label25;

        $r5 = virtualinvoke r15.<android.content.pm.ShortcutInfo: java.lang.String getPackage()>();

        $r6 = virtualinvoke r15.<android.content.pm.ShortcutInfo: java.lang.String getId()>();

        $i1 = virtualinvoke r15.<android.content.pm.ShortcutInfo: int getUserId()>();

        r24 = specialinvoke r0.<android.content.pm.LauncherApps: java.lang.String getShortcutIconUri(java.lang.String,java.lang.String,int)>($r5, $r6, $i1);

        if r24 != null goto label23;

        return null;

     label23:
        $z3 = virtualinvoke r15.<android.content.pm.ShortcutInfo: boolean hasAdaptiveBitmap()>();

        if $z3 == 0 goto label24;

        $r8 = staticinvoke <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmapContentUri(java.lang.String)>(r24);

        return $r8;

     label24:
        $r7 = staticinvoke <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithContentUri(java.lang.String)>(r24);

        return $r7;

     label25:
        $z2 = virtualinvoke r15.<android.content.pm.ShortcutInfo: boolean hasIconResource()>();

        if $z2 == 0 goto label26;

        $r3 = virtualinvoke r15.<android.content.pm.ShortcutInfo: java.lang.String getPackage()>();

        $i0 = virtualinvoke r15.<android.content.pm.ShortcutInfo: int getIconResourceId()>();

        $r4 = staticinvoke <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithResource(java.lang.String,int)>($r3, $i0);

        return $r4;

     label26:
        $r2 = virtualinvoke r15.<android.content.pm.ShortcutInfo: android.graphics.drawable.Icon getIcon()>();

        return $r2;

        catch java.lang.Throwable from label01 to label02 with label17;
        catch java.lang.Throwable from label03 to label04 with label17;
        catch java.io.IOException from label04 to label05 with label06;
        catch java.lang.Throwable from label08 to label09 with label17;
        catch java.io.IOException from label09 to label10 with label11;
        catch java.io.IOException from label13 to label14 with label15;
        catch java.io.IOException from label18 to label19 with label20;
    }

    public android.graphics.drawable.Drawable getShortcutIconDrawable(android.content.pm.ShortcutInfo, int)
    {
        android.content.pm.LauncherApps r0;
        android.content.pm.ShortcutInfo r1;
        int i0, i1, $i2, $i3;
        android.graphics.drawable.Icon r2, $r3;
        boolean $z0, $z1, $z2, $z3, $z4;
        android.content.Context $r4;
        android.graphics.drawable.Drawable $r5, $r8, $r11, $r13, $r15;
        java.lang.String $r6, $r9;
        android.os.UserHandle $r7, $r10;
        android.os.ParcelFileDescriptor $r12, $r14;

        r0 := @this: android.content.pm.LauncherApps;

        r1 := @parameter0: android.content.pm.ShortcutInfo;

        i0 := @parameter1: int;

        $z0 = virtualinvoke r1.<android.content.pm.ShortcutInfo: boolean hasIconFile()>();

        if $z0 == 0 goto label1;

        $r14 = virtualinvoke r0.<android.content.pm.LauncherApps: android.os.ParcelFileDescriptor getShortcutIconFd(android.content.pm.ShortcutInfo)>(r1);

        $z4 = virtualinvoke r1.<android.content.pm.ShortcutInfo: boolean hasAdaptiveBitmap()>();

        $r15 = specialinvoke r0.<android.content.pm.LauncherApps: android.graphics.drawable.Drawable loadDrawableFromFileDescriptor(android.os.ParcelFileDescriptor,boolean)>($r14, $z4);

        return $r15;

     label1:
        $z1 = virtualinvoke r1.<android.content.pm.ShortcutInfo: boolean hasIconUri()>();

        if $z1 == 0 goto label2;

        $r12 = virtualinvoke r0.<android.content.pm.LauncherApps: android.os.ParcelFileDescriptor getUriShortcutIconFd(android.content.pm.ShortcutInfo)>(r1);

        $z3 = virtualinvoke r1.<android.content.pm.ShortcutInfo: boolean hasAdaptiveBitmap()>();

        $r13 = specialinvoke r0.<android.content.pm.LauncherApps: android.graphics.drawable.Drawable loadDrawableFromFileDescriptor(android.os.ParcelFileDescriptor,boolean)>($r12, $z3);

        return $r13;

     label2:
        $z2 = virtualinvoke r1.<android.content.pm.ShortcutInfo: boolean hasIconResource()>();

        if $z2 == 0 goto label3;

        $r9 = virtualinvoke r1.<android.content.pm.ShortcutInfo: java.lang.String getPackage()>();

        $i3 = virtualinvoke r1.<android.content.pm.ShortcutInfo: int getIconResourceId()>();

        $r10 = virtualinvoke r1.<android.content.pm.ShortcutInfo: android.os.UserHandle getUserHandle()>();

        $r11 = specialinvoke r0.<android.content.pm.LauncherApps: android.graphics.drawable.Drawable loadDrawableResourceFromPackage(java.lang.String,int,android.os.UserHandle,int)>($r9, $i3, $r10, i0);

        return $r11;

     label3:
        $r3 = virtualinvoke r1.<android.content.pm.ShortcutInfo: android.graphics.drawable.Icon getIcon()>();

        if $r3 == null goto label6;

        r2 = virtualinvoke r1.<android.content.pm.ShortcutInfo: android.graphics.drawable.Icon getIcon()>();

        i1 = virtualinvoke r2.<android.graphics.drawable.Icon: int getType()>();

        if i1 == 1 goto label5;

        if i1 == 2 goto label4;

        if i1 == 5 goto label5;

        return null;

     label4:
        $r6 = virtualinvoke r1.<android.content.pm.ShortcutInfo: java.lang.String getPackage()>();

        $i2 = virtualinvoke r2.<android.graphics.drawable.Icon: int getResId()>();

        $r7 = virtualinvoke r1.<android.content.pm.ShortcutInfo: android.os.UserHandle getUserHandle()>();

        $r8 = specialinvoke r0.<android.content.pm.LauncherApps: android.graphics.drawable.Drawable loadDrawableResourceFromPackage(java.lang.String,int,android.os.UserHandle,int)>($r6, $i2, $r7, i0);

        return $r8;

     label5:
        $r4 = r0.<android.content.pm.LauncherApps: android.content.Context mContext>;

        $r5 = virtualinvoke r2.<android.graphics.drawable.Icon: android.graphics.drawable.Drawable loadDrawable(android.content.Context)>($r4);

        return $r5;

     label6:
        return null;
    }

    public android.os.ParcelFileDescriptor getShortcutIconFd(android.content.pm.ShortcutInfo)
    {
        android.content.pm.LauncherApps r0;
        android.content.pm.ShortcutInfo r1;
        java.lang.String $r2, $r3;
        int $i0;
        android.os.ParcelFileDescriptor $r4;

        r0 := @this: android.content.pm.LauncherApps;

        r1 := @parameter0: android.content.pm.ShortcutInfo;

        $r2 = virtualinvoke r1.<android.content.pm.ShortcutInfo: java.lang.String getPackage()>();

        $r3 = virtualinvoke r1.<android.content.pm.ShortcutInfo: java.lang.String getId()>();

        $i0 = virtualinvoke r1.<android.content.pm.ShortcutInfo: int getUserId()>();

        $r4 = specialinvoke r0.<android.content.pm.LauncherApps: android.os.ParcelFileDescriptor getShortcutIconFd(java.lang.String,java.lang.String,int)>($r2, $r3, $i0);

        return $r4;
    }

    public android.os.ParcelFileDescriptor getShortcutIconFd(java.lang.String, java.lang.String, android.os.UserHandle)
    {
        android.content.pm.LauncherApps r0;
        java.lang.String r1, r2;
        android.os.UserHandle r3;
        int $i0;
        android.os.ParcelFileDescriptor $r4;

        r0 := @this: android.content.pm.LauncherApps;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.UserHandle;

        $i0 = virtualinvoke r3.<android.os.UserHandle: int getIdentifier()>();

        $r4 = specialinvoke r0.<android.content.pm.LauncherApps: android.os.ParcelFileDescriptor getShortcutIconFd(java.lang.String,java.lang.String,int)>(r1, r2, $i0);

        return $r4;
    }

    public int getShortcutIconResId(android.content.pm.ShortcutInfo)
    {
        android.content.pm.LauncherApps r0;
        android.content.pm.ShortcutInfo r1;
        int $i0;

        r0 := @this: android.content.pm.LauncherApps;

        r1 := @parameter0: android.content.pm.ShortcutInfo;

        $i0 = virtualinvoke r1.<android.content.pm.ShortcutInfo: int getIconResourceId()>();

        return $i0;
    }

    public int getShortcutIconResId(java.lang.String, java.lang.String, android.os.UserHandle)
    {
        android.content.pm.LauncherApps r0;
        java.lang.String r1, r12;
        android.os.UserHandle r2;
        android.content.pm.LauncherApps$ShortcutQuery $r4;
        java.lang.String[] $r6;
        java.util.List $r7, r13;
        int $i0, i1;
        java.lang.Object $r10;
        android.content.pm.ShortcutInfo $r11;

        r0 := @this: android.content.pm.LauncherApps;

        r12 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.os.UserHandle;

        $r4 = new android.content.pm.LauncherApps$ShortcutQuery;

        specialinvoke $r4.<android.content.pm.LauncherApps$ShortcutQuery: void <init>()>();

        virtualinvoke $r4.<android.content.pm.LauncherApps$ShortcutQuery: android.content.pm.LauncherApps$ShortcutQuery setPackage(java.lang.String)>(r12);

        i1 = 0;

        $r6 = newarray (java.lang.String)[1];

        $r6[0] = r1;

        $r7 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r6);

        virtualinvoke $r4.<android.content.pm.LauncherApps$ShortcutQuery: android.content.pm.LauncherApps$ShortcutQuery setShortcutIds(java.util.List)>($r7);

        virtualinvoke $r4.<android.content.pm.LauncherApps$ShortcutQuery: android.content.pm.LauncherApps$ShortcutQuery setQueryFlags(int)>(27);

        r13 = virtualinvoke r0.<android.content.pm.LauncherApps: java.util.List getShortcuts(android.content.pm.LauncherApps$ShortcutQuery,android.os.UserHandle)>($r4, r2);

        $i0 = interfaceinvoke r13.<java.util.List: int size()>();

        if $i0 <= 0 goto label1;

        $r10 = interfaceinvoke r13.<java.util.List: java.lang.Object get(int)>(0);

        $r11 = (android.content.pm.ShortcutInfo) $r10;

        i1 = virtualinvoke $r11.<android.content.pm.ShortcutInfo: int getIconResourceId()>();

     label1:
        return i1;
    }

    public java.util.List getShortcutInfo(java.lang.String, java.util.List, android.os.UserHandle)
    {
        android.content.pm.LauncherApps r0;
        java.lang.String r1;
        java.util.List r2, $r9;
        android.os.UserHandle r3;
        android.content.pm.LauncherApps$ShortcutQuery $r5;

        r0 := @this: android.content.pm.LauncherApps;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: android.os.UserHandle;

        $r5 = new android.content.pm.LauncherApps$ShortcutQuery;

        specialinvoke $r5.<android.content.pm.LauncherApps$ShortcutQuery: void <init>()>();

        virtualinvoke $r5.<android.content.pm.LauncherApps$ShortcutQuery: android.content.pm.LauncherApps$ShortcutQuery setPackage(java.lang.String)>(r1);

        virtualinvoke $r5.<android.content.pm.LauncherApps$ShortcutQuery: android.content.pm.LauncherApps$ShortcutQuery setShortcutIds(java.util.List)>(r2);

        virtualinvoke $r5.<android.content.pm.LauncherApps$ShortcutQuery: android.content.pm.LauncherApps$ShortcutQuery setQueryFlags(int)>(27);

        $r9 = virtualinvoke r0.<android.content.pm.LauncherApps: java.util.List getShortcuts(android.content.pm.LauncherApps$ShortcutQuery,android.os.UserHandle)>($r5, r3);

        return $r9;
    }

    public java.util.List getShortcuts(android.content.pm.LauncherApps$ShortcutQuery, android.os.UserHandle)
    {
        android.content.pm.LauncherApps r0;
        android.os.UserHandle r1;
        android.content.pm.ILauncherApps r2;
        java.lang.String r3;
        android.content.pm.ShortcutQueryWrapper r4;
        android.content.Context $r5;
        android.content.pm.ParceledListSlice $r6;
        java.util.List $r7, r11;
        android.os.RemoteException $r8;
        java.lang.RuntimeException $r9;
        android.content.pm.LauncherApps$ShortcutQuery r10;

        r0 := @this: android.content.pm.LauncherApps;

        r10 := @parameter0: android.content.pm.LauncherApps$ShortcutQuery;

        r1 := @parameter1: android.os.UserHandle;

        specialinvoke r0.<android.content.pm.LauncherApps: void logErrorForInvalidProfileAccess(android.os.UserHandle)>(r1);

     label1:
        r2 = r0.<android.content.pm.LauncherApps: android.content.pm.ILauncherApps mService>;

        $r5 = r0.<android.content.pm.LauncherApps: android.content.Context mContext>;

        r3 = virtualinvoke $r5.<android.content.Context: java.lang.String getPackageName()>();

        r4 = new android.content.pm.ShortcutQueryWrapper;

        specialinvoke r4.<android.content.pm.ShortcutQueryWrapper: void <init>(android.content.pm.LauncherApps$ShortcutQuery)>(r10);

        $r6 = interfaceinvoke r2.<android.content.pm.ILauncherApps: android.content.pm.ParceledListSlice getShortcuts(java.lang.String,android.content.pm.ShortcutQueryWrapper,android.os.UserHandle)>(r3, r4, r1);

        $r7 = virtualinvoke $r6.<android.content.pm.ParceledListSlice: java.util.List getList()>();

        r11 = specialinvoke r0.<android.content.pm.LauncherApps: java.util.List maybeUpdateDisabledMessage(java.util.List)>($r7);

     label2:
        return r11;

     label3:
        $r8 := @caughtexception;

        $r9 = virtualinvoke $r8.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r9;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.os.Bundle getSuspendedPackageLauncherExtras(java.lang.String, android.os.UserHandle)
    {
        android.content.pm.LauncherApps r0;
        android.os.UserHandle r1;
        android.content.pm.ILauncherApps $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;
        java.lang.String r5;
        android.os.Bundle r6;

        r0 := @this: android.content.pm.LauncherApps;

        r5 := @parameter0: java.lang.String;

        r1 := @parameter1: android.os.UserHandle;

        specialinvoke r0.<android.content.pm.LauncherApps: void logErrorForInvalidProfileAccess(android.os.UserHandle)>(r1);

     label1:
        $r2 = r0.<android.content.pm.LauncherApps: android.content.pm.ILauncherApps mService>;

        r6 = interfaceinvoke $r2.<android.content.pm.ILauncherApps: android.os.Bundle getSuspendedPackageLauncherExtras(java.lang.String,android.os.UserHandle)>(r5, r1);

     label2:
        return r6;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.os.ParcelFileDescriptor getUriShortcutIconFd(android.content.pm.ShortcutInfo)
    {
        android.content.pm.LauncherApps r0;
        android.content.pm.ShortcutInfo r1;
        java.lang.String $r2, $r3;
        int $i0;
        android.os.ParcelFileDescriptor $r4;

        r0 := @this: android.content.pm.LauncherApps;

        r1 := @parameter0: android.content.pm.ShortcutInfo;

        $r2 = virtualinvoke r1.<android.content.pm.ShortcutInfo: java.lang.String getPackage()>();

        $r3 = virtualinvoke r1.<android.content.pm.ShortcutInfo: java.lang.String getId()>();

        $i0 = virtualinvoke r1.<android.content.pm.ShortcutInfo: int getUserId()>();

        $r4 = specialinvoke r0.<android.content.pm.LauncherApps: android.os.ParcelFileDescriptor getUriShortcutIconFd(java.lang.String,java.lang.String,int)>($r2, $r3, $i0);

        return $r4;
    }

    public boolean hasShortcutHostPermission()
    {
        android.content.pm.LauncherApps r0;
        boolean z0;
        android.content.Context $r2;
        android.content.pm.ILauncherApps $r3;
        java.lang.String $r4;
        android.os.RemoteException $r5;
        java.lang.RuntimeException $r6;

        r0 := @this: android.content.pm.LauncherApps;

     label1:
        $r3 = r0.<android.content.pm.LauncherApps: android.content.pm.ILauncherApps mService>;

        $r2 = r0.<android.content.pm.LauncherApps: android.content.Context mContext>;

        $r4 = virtualinvoke $r2.<android.content.Context: java.lang.String getPackageName()>();

        z0 = interfaceinvoke $r3.<android.content.pm.ILauncherApps: boolean hasShortcutHostPermission(java.lang.String)>($r4);

     label2:
        return z0;

     label3:
        $r5 := @caughtexception;

        $r6 = virtualinvoke $r5.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r6;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isActivityEnabled(android.content.ComponentName, android.os.UserHandle)
    {
        android.content.pm.LauncherApps r0;
        android.os.UserHandle r1;
        boolean z0;
        android.content.Context $r2;
        android.content.pm.ILauncherApps $r3;
        java.lang.String $r4;
        android.os.RemoteException $r5;
        java.lang.RuntimeException $r6;
        android.content.ComponentName r7;

        r0 := @this: android.content.pm.LauncherApps;

        r7 := @parameter0: android.content.ComponentName;

        r1 := @parameter1: android.os.UserHandle;

        specialinvoke r0.<android.content.pm.LauncherApps: void logErrorForInvalidProfileAccess(android.os.UserHandle)>(r1);

     label1:
        $r3 = r0.<android.content.pm.LauncherApps: android.content.pm.ILauncherApps mService>;

        $r2 = r0.<android.content.pm.LauncherApps: android.content.Context mContext>;

        $r4 = virtualinvoke $r2.<android.content.Context: java.lang.String getPackageName()>();

        z0 = interfaceinvoke $r3.<android.content.pm.ILauncherApps: boolean isActivityEnabled(java.lang.String,android.content.ComponentName,android.os.UserHandle)>($r4, r7, r1);

     label2:
        return z0;

     label3:
        $r5 := @caughtexception;

        $r6 = virtualinvoke $r5.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r6;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isPackageEnabled(java.lang.String, android.os.UserHandle)
    {
        android.content.pm.LauncherApps r0;
        android.os.UserHandle r1;
        boolean z0;
        android.content.Context $r2;
        android.content.pm.ILauncherApps $r3;
        java.lang.String $r4, r7;
        android.os.RemoteException $r5;
        java.lang.RuntimeException $r6;

        r0 := @this: android.content.pm.LauncherApps;

        r7 := @parameter0: java.lang.String;

        r1 := @parameter1: android.os.UserHandle;

        specialinvoke r0.<android.content.pm.LauncherApps: void logErrorForInvalidProfileAccess(android.os.UserHandle)>(r1);

     label1:
        $r3 = r0.<android.content.pm.LauncherApps: android.content.pm.ILauncherApps mService>;

        $r2 = r0.<android.content.pm.LauncherApps: android.content.Context mContext>;

        $r4 = virtualinvoke $r2.<android.content.Context: java.lang.String getPackageName()>();

        z0 = interfaceinvoke $r3.<android.content.pm.ILauncherApps: boolean isPackageEnabled(java.lang.String,java.lang.String,android.os.UserHandle)>($r4, r7, r1);

     label2:
        return z0;

     label3:
        $r5 := @caughtexception;

        $r6 = virtualinvoke $r5.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r6;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void pinShortcuts(java.lang.String, java.util.List, android.os.UserHandle)
    {
        android.content.pm.LauncherApps r0;
        java.util.List r1;
        android.os.UserHandle r2;
        android.content.Context $r3;
        android.content.pm.ILauncherApps $r4;
        java.lang.String $r5, r8;
        android.os.RemoteException $r6;
        java.lang.RuntimeException $r7;

        r0 := @this: android.content.pm.LauncherApps;

        r8 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.List;

        r2 := @parameter2: android.os.UserHandle;

        specialinvoke r0.<android.content.pm.LauncherApps: void logErrorForInvalidProfileAccess(android.os.UserHandle)>(r2);

     label1:
        $r4 = r0.<android.content.pm.LauncherApps: android.content.pm.ILauncherApps mService>;

        $r3 = r0.<android.content.pm.LauncherApps: android.content.Context mContext>;

        $r5 = virtualinvoke $r3.<android.content.Context: java.lang.String getPackageName()>();

        interfaceinvoke $r4.<android.content.pm.ILauncherApps: void pinShortcuts(java.lang.String,java.lang.String,java.util.List,android.os.UserHandle)>($r5, r8, r1, r2);

     label2:
        return;

     label3:
        $r6 := @caughtexception;

        $r7 = virtualinvoke $r6.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r7;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void registerCallback(android.content.pm.LauncherApps$Callback)
    {
        android.content.pm.LauncherApps r0;
        android.content.pm.LauncherApps$Callback r1;

        r0 := @this: android.content.pm.LauncherApps;

        r1 := @parameter0: android.content.pm.LauncherApps$Callback;

        virtualinvoke r0.<android.content.pm.LauncherApps: void registerCallback(android.content.pm.LauncherApps$Callback,android.os.Handler)>(r1, null);

        return;
    }

    public void registerCallback(android.content.pm.LauncherApps$Callback, android.os.Handler)
    {
        android.content.pm.LauncherApps r0;
        android.os.Handler r1;
        int $i0, $i1;
        java.util.List $r2;
        android.content.Context $r3;
        android.content.pm.ILauncherApps $r4;
        java.lang.String $r5;
        android.content.pm.IOnAppsChangedListener$Stub $r6;
        android.os.RemoteException $r7;
        java.lang.RuntimeException $r8;
        java.lang.Throwable $r9;
        android.content.pm.LauncherApps$Callback r10;
        boolean z0;

        r0 := @this: android.content.pm.LauncherApps;

        r10 := @parameter0: android.content.pm.LauncherApps$Callback;

        r1 := @parameter1: android.os.Handler;

        entermonitor r0;

        if r10 == null goto label10;

     label01:
        $i0 = specialinvoke r0.<android.content.pm.LauncherApps: int findCallbackLocked(android.content.pm.LauncherApps$Callback)>(r10);

        if $i0 >= 0 goto label10;

        $r2 = r0.<android.content.pm.LauncherApps: java.util.List mCallbacks>;

        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i1 != 0 goto label03;

     label02:
        z0 = 1;

        goto label04;

     label03:
        z0 = 0;

     label04:
        specialinvoke r0.<android.content.pm.LauncherApps: void addCallbackLocked(android.content.pm.LauncherApps$Callback,android.os.Handler)>(r10, r1);

     label05:
        if z0 == 0 goto label10;

     label06:
        $r4 = r0.<android.content.pm.LauncherApps: android.content.pm.ILauncherApps mService>;

        $r3 = r0.<android.content.pm.LauncherApps: android.content.Context mContext>;

        $r5 = virtualinvoke $r3.<android.content.Context: java.lang.String getPackageName()>();

        $r6 = r0.<android.content.pm.LauncherApps: android.content.pm.IOnAppsChangedListener$Stub mAppsChangedListener>;

        interfaceinvoke $r4.<android.content.pm.ILauncherApps: void addOnAppsChangedListener(java.lang.String,android.content.pm.IOnAppsChangedListener)>($r5, $r6);

     label07:
        goto label10;

     label08:
        $r7 := @caughtexception;

     label09:
        $r8 = virtualinvoke $r7.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r8;

     label10:
        exitmonitor r0;

     label11:
        return;

     label12:
        $r9 := @caughtexception;

     label13:
        exitmonitor r0;

     label14:
        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch android.os.RemoteException from label06 to label07 with label08;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label09 to label10 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public void registerPackageInstallerSessionCallback(java.util.concurrent.Executor, android.content.pm.PackageInstaller$SessionCallback)
    {
        android.content.pm.LauncherApps r0;
        android.content.pm.PackageInstaller$SessionCallback r1;
        java.util.List r2, $r8;
        android.content.pm.PackageInstaller$SessionCallbackDelegate r3;
        java.lang.NullPointerException $r4;
        android.content.Context $r5;
        android.content.pm.ILauncherApps $r6;
        java.lang.String $r7;
        android.os.RemoteException $r9;
        java.lang.RuntimeException $r10;
        java.lang.Throwable $r11;
        java.util.concurrent.Executor r12;

        r0 := @this: android.content.pm.LauncherApps;

        r12 := @parameter0: java.util.concurrent.Executor;

        r1 := @parameter1: android.content.pm.PackageInstaller$SessionCallback;

        if r12 == null goto label11;

        r2 = r0.<android.content.pm.LauncherApps: java.util.List mDelegates>;

        entermonitor r2;

     label01:
        r3 = new android.content.pm.PackageInstaller$SessionCallbackDelegate;

        specialinvoke r3.<android.content.pm.PackageInstaller$SessionCallbackDelegate: void <init>(android.content.pm.PackageInstaller$SessionCallback,java.util.concurrent.Executor)>(r1, r12);

     label02:
        $r6 = r0.<android.content.pm.LauncherApps: android.content.pm.ILauncherApps mService>;

        $r5 = r0.<android.content.pm.LauncherApps: android.content.Context mContext>;

        $r7 = virtualinvoke $r5.<android.content.Context: java.lang.String getPackageName()>();

        interfaceinvoke $r6.<android.content.pm.ILauncherApps: void registerPackageInstallerCallback(java.lang.String,android.content.pm.IPackageInstallerCallback)>($r7, r3);

     label03:
        $r8 = r0.<android.content.pm.LauncherApps: java.util.List mDelegates>;

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>(r3);

     label04:
        exitmonitor r2;

     label05:
        return;

     label06:
        $r9 := @caughtexception;

     label07:
        $r10 = virtualinvoke $r9.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r10;

     label08:
        $r11 := @caughtexception;

     label09:
        exitmonitor r2;

     label10:
        throw $r11;

     label11:
        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("Executor must not be null");

        throw $r4;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch android.os.RemoteException from label02 to label03 with label06;
        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label07 to label08 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public void registerShortcutChangeCallback(android.content.pm.LauncherApps$ShortcutChangeCallback, android.content.pm.LauncherApps$ShortcutQuery, java.util.concurrent.Executor)
    {
        android.content.pm.LauncherApps r0;
        android.content.pm.LauncherApps$ShortcutQuery r1;
        java.util.Map r2, r4;
        android.content.pm.LauncherApps$ShortcutChangeCallbackProxy r3;
        android.content.Context $r9;
        android.os.RemoteException $r10;
        java.lang.RuntimeException $r11;
        java.lang.Throwable $r12;
        android.content.pm.LauncherApps$ShortcutChangeCallback r13;
        java.util.concurrent.Executor r14;
        android.util.Pair r15;
        android.content.pm.ILauncherApps r16;
        java.lang.String r17;
        android.content.pm.ShortcutQueryWrapper r18;

        r0 := @this: android.content.pm.LauncherApps;

        r13 := @parameter0: android.content.pm.LauncherApps$ShortcutChangeCallback;

        r1 := @parameter1: android.content.pm.LauncherApps$ShortcutQuery;

        r14 := @parameter2: java.util.concurrent.Executor;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r13, "Callback cannot be null");

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, "Query cannot be null");

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r14, "Executor cannot be null");

        r2 = r0.<android.content.pm.LauncherApps: java.util.Map mShortcutChangeCallbacks>;

        entermonitor r2;

     label1:
        r3 = new android.content.pm.LauncherApps$ShortcutChangeCallbackProxy;

        specialinvoke r3.<android.content.pm.LauncherApps$ShortcutChangeCallbackProxy: void <init>(java.util.concurrent.Executor,android.content.pm.LauncherApps$ShortcutChangeCallback)>(r14, r13);

        r4 = r0.<android.content.pm.LauncherApps: java.util.Map mShortcutChangeCallbacks>;

        r15 = new android.util.Pair;

        specialinvoke r15.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>(r14, r3);

        interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r13, r15);

     label2:
        r16 = r0.<android.content.pm.LauncherApps: android.content.pm.ILauncherApps mService>;

        $r9 = r0.<android.content.pm.LauncherApps: android.content.Context mContext>;

        r17 = virtualinvoke $r9.<android.content.Context: java.lang.String getPackageName()>();

        r18 = new android.content.pm.ShortcutQueryWrapper;

        specialinvoke r18.<android.content.pm.ShortcutQueryWrapper: void <init>(android.content.pm.LauncherApps$ShortcutQuery)>(r1);

        interfaceinvoke r16.<android.content.pm.ILauncherApps: void registerShortcutChangeCallback(java.lang.String,android.content.pm.ShortcutQueryWrapper,android.content.pm.IShortcutChangeCallback)>(r17, r18, r3);

     label3:
        exitmonitor r2;

     label4:
        return;

     label5:
        $r10 := @caughtexception;

     label6:
        $r11 = virtualinvoke $r10.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r11;

     label7:
        $r12 := @caughtexception;

     label8:
        exitmonitor r2;

     label9:
        throw $r12;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch android.os.RemoteException from label2 to label3 with label5;
        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label6 to label7 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public android.content.pm.LauncherActivityInfo resolveActivity(android.content.Intent, android.os.UserHandle)
    {
        android.content.pm.LauncherApps r0;
        android.os.UserHandle r1;
        android.content.Context $r2, $r7;
        android.content.pm.ILauncherApps $r3;
        java.lang.String $r4;
        android.content.ComponentName $r5;
        android.content.pm.LauncherActivityInfo $r6;
        android.os.RemoteException $r8;
        java.lang.RuntimeException $r9;
        android.content.Intent r10;
        android.content.pm.ActivityInfo r11;

        r0 := @this: android.content.pm.LauncherApps;

        r10 := @parameter0: android.content.Intent;

        r1 := @parameter1: android.os.UserHandle;

        specialinvoke r0.<android.content.pm.LauncherApps: void logErrorForInvalidProfileAccess(android.os.UserHandle)>(r1);

     label1:
        $r3 = r0.<android.content.pm.LauncherApps: android.content.pm.ILauncherApps mService>;

        $r2 = r0.<android.content.pm.LauncherApps: android.content.Context mContext>;

        $r4 = virtualinvoke $r2.<android.content.Context: java.lang.String getPackageName()>();

        $r5 = virtualinvoke r10.<android.content.Intent: android.content.ComponentName getComponent()>();

        r11 = interfaceinvoke $r3.<android.content.pm.ILauncherApps: android.content.pm.ActivityInfo resolveActivity(java.lang.String,android.content.ComponentName,android.os.UserHandle)>($r4, $r5, r1);

     label2:
        if r11 == null goto label5;

     label3:
        $r6 = new android.content.pm.LauncherActivityInfo;

        $r7 = r0.<android.content.pm.LauncherApps: android.content.Context mContext>;

        specialinvoke $r6.<android.content.pm.LauncherActivityInfo: void <init>(android.content.Context,android.content.pm.ActivityInfo,android.os.UserHandle)>($r7, r11, r1);

     label4:
        return $r6;

     label5:
        return null;

     label6:
        $r8 := @caughtexception;

        $r9 = virtualinvoke $r8.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r9;

        catch android.os.RemoteException from label1 to label2 with label6;
        catch android.os.RemoteException from label3 to label4 with label6;
    }

    public boolean shouldHideFromSuggestions(java.lang.String, android.os.UserHandle)
    {
        android.content.pm.LauncherApps r0;
        android.os.UserHandle r1;
        boolean z0;
        android.content.pm.ILauncherApps $r4;
        android.os.RemoteException $r5;
        java.lang.RuntimeException $r6;
        java.lang.String r7;

        r0 := @this: android.content.pm.LauncherApps;

        r7 := @parameter0: java.lang.String;

        r1 := @parameter1: android.os.UserHandle;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r7, "packageName");

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, "user");

     label1:
        $r4 = r0.<android.content.pm.LauncherApps: android.content.pm.ILauncherApps mService>;

        z0 = interfaceinvoke $r4.<android.content.pm.ILauncherApps: boolean shouldHideFromSuggestions(java.lang.String,android.os.UserHandle)>(r7, r1);

     label2:
        return z0;

     label3:
        $r5 := @caughtexception;

        $r6 = virtualinvoke $r5.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r6;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void startAppDetailsActivity(android.content.ComponentName, android.os.UserHandle, android.graphics.Rect, android.os.Bundle)
    {
        android.content.pm.LauncherApps r0;
        android.os.UserHandle r1;
        android.graphics.Rect r2;
        android.os.Bundle r3;
        android.content.Context $r4, $r7, $r9;
        android.content.pm.ILauncherApps $r5;
        android.app.IApplicationThread $r6;
        java.lang.String $r8, $r10;
        android.os.RemoteException $r11;
        java.lang.RuntimeException $r12;
        android.content.ComponentName r13;

        r0 := @this: android.content.pm.LauncherApps;

        r13 := @parameter0: android.content.ComponentName;

        r1 := @parameter1: android.os.UserHandle;

        r2 := @parameter2: android.graphics.Rect;

        r3 := @parameter3: android.os.Bundle;

        specialinvoke r0.<android.content.pm.LauncherApps: void logErrorForInvalidProfileAccess(android.os.UserHandle)>(r1);

     label1:
        $r5 = r0.<android.content.pm.LauncherApps: android.content.pm.ILauncherApps mService>;

        $r4 = r0.<android.content.pm.LauncherApps: android.content.Context mContext>;

        $r6 = virtualinvoke $r4.<android.content.Context: android.app.IApplicationThread getIApplicationThread()>();

        $r7 = r0.<android.content.pm.LauncherApps: android.content.Context mContext>;

        $r8 = virtualinvoke $r7.<android.content.Context: java.lang.String getPackageName()>();

        $r9 = r0.<android.content.pm.LauncherApps: android.content.Context mContext>;

        $r10 = virtualinvoke $r9.<android.content.Context: java.lang.String getAttributionTag()>();

        interfaceinvoke $r5.<android.content.pm.ILauncherApps: void showAppDetailsAsUser(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.ComponentName,android.graphics.Rect,android.os.Bundle,android.os.UserHandle)>($r6, $r8, $r10, r13, r2, r3, r1);

     label2:
        return;

     label3:
        $r11 := @caughtexception;

        $r12 = virtualinvoke $r11.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r12;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void startMainActivity(android.content.ComponentName, android.os.UserHandle, android.graphics.Rect, android.os.Bundle)
    {
        android.content.pm.LauncherApps r0;
        android.os.UserHandle r1;
        android.graphics.Rect r2;
        android.os.Bundle r3;
        android.content.Context $r4, $r7, $r9;
        android.content.pm.ILauncherApps $r5;
        android.app.IApplicationThread $r6;
        java.lang.String $r8, $r10;
        android.os.RemoteException $r11;
        java.lang.RuntimeException $r12;
        android.content.ComponentName r13;

        r0 := @this: android.content.pm.LauncherApps;

        r13 := @parameter0: android.content.ComponentName;

        r1 := @parameter1: android.os.UserHandle;

        r2 := @parameter2: android.graphics.Rect;

        r3 := @parameter3: android.os.Bundle;

        specialinvoke r0.<android.content.pm.LauncherApps: void logErrorForInvalidProfileAccess(android.os.UserHandle)>(r1);

     label1:
        $r5 = r0.<android.content.pm.LauncherApps: android.content.pm.ILauncherApps mService>;

        $r4 = r0.<android.content.pm.LauncherApps: android.content.Context mContext>;

        $r6 = virtualinvoke $r4.<android.content.Context: android.app.IApplicationThread getIApplicationThread()>();

        $r7 = r0.<android.content.pm.LauncherApps: android.content.Context mContext>;

        $r8 = virtualinvoke $r7.<android.content.Context: java.lang.String getPackageName()>();

        $r9 = r0.<android.content.pm.LauncherApps: android.content.Context mContext>;

        $r10 = virtualinvoke $r9.<android.content.Context: java.lang.String getAttributionTag()>();

        interfaceinvoke $r5.<android.content.pm.ILauncherApps: void startActivityAsUser(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.ComponentName,android.graphics.Rect,android.os.Bundle,android.os.UserHandle)>($r6, $r8, $r10, r13, r2, r3, r1);

     label2:
        return;

     label3:
        $r11 := @caughtexception;

        $r12 = virtualinvoke $r11.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r12;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void startPackageInstallerSessionDetailsActivity(android.content.pm.PackageInstaller$SessionInfo, android.graphics.Rect, android.os.Bundle)
    {
        android.content.pm.LauncherApps r0;
        android.graphics.Rect r1;
        android.os.Bundle r2;
        android.content.Context $r3, $r6, $r8;
        android.content.pm.ILauncherApps $r4;
        android.app.IApplicationThread $r5;
        java.lang.String $r7, $r9;
        android.os.UserHandle $r10;
        android.os.RemoteException $r11;
        java.lang.RuntimeException $r12;
        android.content.pm.PackageInstaller$SessionInfo r13;

        r0 := @this: android.content.pm.LauncherApps;

        r13 := @parameter0: android.content.pm.PackageInstaller$SessionInfo;

        r1 := @parameter1: android.graphics.Rect;

        r2 := @parameter2: android.os.Bundle;

     label1:
        $r4 = r0.<android.content.pm.LauncherApps: android.content.pm.ILauncherApps mService>;

        $r3 = r0.<android.content.pm.LauncherApps: android.content.Context mContext>;

        $r5 = virtualinvoke $r3.<android.content.Context: android.app.IApplicationThread getIApplicationThread()>();

        $r6 = r0.<android.content.pm.LauncherApps: android.content.Context mContext>;

        $r7 = virtualinvoke $r6.<android.content.Context: java.lang.String getPackageName()>();

        $r8 = r0.<android.content.pm.LauncherApps: android.content.Context mContext>;

        $r9 = virtualinvoke $r8.<android.content.Context: java.lang.String getAttributionTag()>();

        $r10 = virtualinvoke r13.<android.content.pm.PackageInstaller$SessionInfo: android.os.UserHandle getUser()>();

        interfaceinvoke $r4.<android.content.pm.ILauncherApps: void startSessionDetailsActivityAsUser(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.pm.PackageInstaller$SessionInfo,android.graphics.Rect,android.os.Bundle,android.os.UserHandle)>($r5, $r7, $r9, r13, r1, r2, $r10);

     label2:
        return;

     label3:
        $r11 := @caughtexception;

        $r12 = virtualinvoke $r11.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r12;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void startShortcut(android.content.pm.ShortcutInfo, android.graphics.Rect, android.os.Bundle)
    {
        android.content.pm.LauncherApps r0;
        android.content.pm.ShortcutInfo r1;
        android.graphics.Rect r2;
        android.os.Bundle r3;
        java.lang.String $r4, $r5;
        int $i0;

        r0 := @this: android.content.pm.LauncherApps;

        r1 := @parameter0: android.content.pm.ShortcutInfo;

        r2 := @parameter1: android.graphics.Rect;

        r3 := @parameter2: android.os.Bundle;

        $r4 = virtualinvoke r1.<android.content.pm.ShortcutInfo: java.lang.String getPackage()>();

        $r5 = virtualinvoke r1.<android.content.pm.ShortcutInfo: java.lang.String getId()>();

        $i0 = virtualinvoke r1.<android.content.pm.ShortcutInfo: int getUserId()>();

        specialinvoke r0.<android.content.pm.LauncherApps: void startShortcut(java.lang.String,java.lang.String,android.graphics.Rect,android.os.Bundle,int)>($r4, $r5, r2, r3, $i0);

        return;
    }

    public void startShortcut(java.lang.String, java.lang.String, android.graphics.Rect, android.os.Bundle, android.os.UserHandle)
    {
        android.content.pm.LauncherApps r0;
        java.lang.String r1, r2;
        android.graphics.Rect r3;
        android.os.Bundle r4;
        android.os.UserHandle r5;
        int $i0;

        r0 := @this: android.content.pm.LauncherApps;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.graphics.Rect;

        r4 := @parameter3: android.os.Bundle;

        r5 := @parameter4: android.os.UserHandle;

        specialinvoke r0.<android.content.pm.LauncherApps: void logErrorForInvalidProfileAccess(android.os.UserHandle)>(r5);

        $i0 = virtualinvoke r5.<android.os.UserHandle: int getIdentifier()>();

        specialinvoke r0.<android.content.pm.LauncherApps: void startShortcut(java.lang.String,java.lang.String,android.graphics.Rect,android.os.Bundle,int)>(r1, r2, r3, r4, $i0);

        return;
    }

    public void uncacheShortcuts(java.lang.String, java.util.List, android.os.UserHandle, int)
    {
        android.content.pm.LauncherApps r0;
        java.util.List r1;
        android.os.UserHandle r2;
        int i0;
        android.content.Context $r3;
        android.content.pm.ILauncherApps $r4;
        java.lang.String $r5, r8;
        android.os.RemoteException $r6;
        java.lang.RuntimeException $r7;

        r0 := @this: android.content.pm.LauncherApps;

        r8 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.List;

        r2 := @parameter2: android.os.UserHandle;

        i0 := @parameter3: int;

        specialinvoke r0.<android.content.pm.LauncherApps: void logErrorForInvalidProfileAccess(android.os.UserHandle)>(r2);

     label1:
        $r4 = r0.<android.content.pm.LauncherApps: android.content.pm.ILauncherApps mService>;

        $r3 = r0.<android.content.pm.LauncherApps: android.content.Context mContext>;

        $r5 = virtualinvoke $r3.<android.content.Context: java.lang.String getPackageName()>();

        interfaceinvoke $r4.<android.content.pm.ILauncherApps: void uncacheShortcuts(java.lang.String,java.lang.String,java.util.List,android.os.UserHandle,int)>($r5, r8, r1, r2, i0);

     label2:
        return;

     label3:
        $r6 := @caughtexception;

        $r7 = virtualinvoke $r6.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r7;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void unregisterCallback(android.content.pm.LauncherApps$Callback)
    {
        android.content.pm.LauncherApps r0;
        int i0;
        java.util.List $r1;
        android.content.pm.IOnAppsChangedListener$Stub $r2;
        android.content.pm.ILauncherApps $r3;
        java.lang.Throwable $r4;
        android.os.RemoteException $r5;
        java.lang.RuntimeException $r6;
        android.content.pm.LauncherApps$Callback r7;

        r0 := @this: android.content.pm.LauncherApps;

        r7 := @parameter0: android.content.pm.LauncherApps$Callback;

        entermonitor r0;

     label01:
        specialinvoke r0.<android.content.pm.LauncherApps: void removeCallbackLocked(android.content.pm.LauncherApps$Callback)>(r7);

        $r1 = r0.<android.content.pm.LauncherApps: java.util.List mCallbacks>;

        i0 = interfaceinvoke $r1.<java.util.List: int size()>();

     label02:
        if i0 != 0 goto label07;

     label03:
        $r3 = r0.<android.content.pm.LauncherApps: android.content.pm.ILauncherApps mService>;

        $r2 = r0.<android.content.pm.LauncherApps: android.content.pm.IOnAppsChangedListener$Stub mAppsChangedListener>;

        interfaceinvoke $r3.<android.content.pm.ILauncherApps: void removeOnAppsChangedListener(android.content.pm.IOnAppsChangedListener)>($r2);

     label04:
        goto label07;

     label05:
        $r5 := @caughtexception;

     label06:
        $r6 = virtualinvoke $r5.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r6;

     label07:
        exitmonitor r0;

     label08:
        return;

     label09:
        $r4 := @caughtexception;

     label10:
        exitmonitor r0;

     label11:
        throw $r4;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch android.os.RemoteException from label03 to label04 with label05;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public void unregisterPackageInstallerSessionCallback(android.content.pm.PackageInstaller$SessionCallback)
    {
        android.content.pm.LauncherApps r0;
        java.util.List r1, $r4;
        java.util.Iterator r2;
        android.content.pm.PackageInstaller$SessionCallbackDelegate r3;
        boolean $z0;
        java.lang.Object $r5;
        android.content.pm.PackageInstaller$SessionCallback $r6, $r9, r11;
        android.content.pm.PackageManager $r7;
        android.content.pm.PackageInstaller $r8;
        java.lang.Throwable $r10;

        r0 := @this: android.content.pm.LauncherApps;

        r11 := @parameter0: android.content.pm.PackageInstaller$SessionCallback;

        r1 = r0.<android.content.pm.LauncherApps: java.util.List mDelegates>;

        entermonitor r1;

     label1:
        $r4 = r0.<android.content.pm.LauncherApps: java.util.List mDelegates>;

        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.content.pm.PackageInstaller$SessionCallbackDelegate) $r5;

        $r6 = r3.<android.content.pm.PackageInstaller$SessionCallbackDelegate: android.content.pm.PackageInstaller$SessionCallback mCallback>;

        if $r6 != r11 goto label3;

        $r7 = r0.<android.content.pm.LauncherApps: android.content.pm.PackageManager mPm>;

        $r8 = virtualinvoke $r7.<android.content.pm.PackageManager: android.content.pm.PackageInstaller getPackageInstaller()>();

        $r9 = r3.<android.content.pm.PackageInstaller$SessionCallbackDelegate: android.content.pm.PackageInstaller$SessionCallback mCallback>;

        virtualinvoke $r8.<android.content.pm.PackageInstaller: void unregisterSessionCallback(android.content.pm.PackageInstaller$SessionCallback)>($r9);

        interfaceinvoke r2.<java.util.Iterator: void remove()>();

     label3:
        goto label2;

     label4:
        exitmonitor r1;

     label5:
        return;

     label6:
        $r10 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r10;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public void unregisterShortcutChangeCallback(android.content.pm.LauncherApps$ShortcutChangeCallback)
    {
        android.content.pm.LauncherApps r0;
        java.util.Map r1, $r3, $r4;
        boolean $z0;
        java.lang.Object $r5, $r7;
        android.util.Pair $r6;
        android.content.Context $r8;
        android.content.pm.ILauncherApps $r9;
        java.lang.String $r10;
        android.os.RemoteException $r11;
        java.lang.RuntimeException $r12;
        java.lang.Throwable $r13;
        android.content.pm.LauncherApps$ShortcutChangeCallback r14;
        android.content.pm.IShortcutChangeCallback r15;

        r0 := @this: android.content.pm.LauncherApps;

        r14 := @parameter0: android.content.pm.LauncherApps$ShortcutChangeCallback;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r14, "Callback cannot be null");

        r1 = r0.<android.content.pm.LauncherApps: java.util.Map mShortcutChangeCallbacks>;

        entermonitor r1;

     label01:
        $r3 = r0.<android.content.pm.LauncherApps: java.util.Map mShortcutChangeCallbacks>;

        $z0 = interfaceinvoke $r3.<java.util.Map: boolean containsKey(java.lang.Object)>(r14);

        if $z0 == 0 goto label06;

        $r4 = r0.<android.content.pm.LauncherApps: java.util.Map mShortcutChangeCallbacks>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r14);

        $r6 = (android.util.Pair) $r5;

        $r7 = $r6.<android.util.Pair: java.lang.Object second>;

        r15 = (android.content.pm.IShortcutChangeCallback) $r7;

     label02:
        $r9 = r0.<android.content.pm.LauncherApps: android.content.pm.ILauncherApps mService>;

        $r8 = r0.<android.content.pm.LauncherApps: android.content.Context mContext>;

        $r10 = virtualinvoke $r8.<android.content.Context: java.lang.String getPackageName()>();

        interfaceinvoke $r9.<android.content.pm.ILauncherApps: void unregisterShortcutChangeCallback(java.lang.String,android.content.pm.IShortcutChangeCallback)>($r10, r15);

     label03:
        goto label06;

     label04:
        $r11 := @caughtexception;

     label05:
        $r12 = virtualinvoke $r11.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r12;

     label06:
        exitmonitor r1;

     label07:
        return;

     label08:
        $r13 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r13;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch android.os.RemoteException from label02 to label03 with label04;
        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public static void <clinit>()
    {
        <android.content.pm.LauncherApps: java.lang.String TAG> = "LauncherApps";

        <android.content.pm.LauncherApps: int FLAG_CACHE_NOTIFICATION_SHORTCUTS> = 0;

        <android.content.pm.LauncherApps: int FLAG_CACHE_BUBBLE_SHORTCUTS> = 1;

        <android.content.pm.LauncherApps: java.lang.String EXTRA_PIN_ITEM_REQUEST> = "android.content.pm.extra.PIN_ITEM_REQUEST";

        <android.content.pm.LauncherApps: boolean DEBUG> = 0;

        <android.content.pm.LauncherApps: java.lang.String ACTION_CONFIRM_PIN_SHORTCUT> = "android.content.pm.action.CONFIRM_PIN_SHORTCUT";

        <android.content.pm.LauncherApps: java.lang.String ACTION_CONFIRM_PIN_APPWIDGET> = "android.content.pm.action.CONFIRM_PIN_APPWIDGET";

        return;
    }
}
