public class android.content.pm.PackageInstaller$SessionInfo extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    public static final int INVALID_ID;
    private static final int[] NO_SESSIONS;
    public static final int STAGED_SESSION_ACTIVATION_FAILED;
    public static final int STAGED_SESSION_NO_ERROR;
    public static final int STAGED_SESSION_UNKNOWN;
    public static final int STAGED_SESSION_VERIFICATION_FAILED;
    public boolean active;
    public android.graphics.Bitmap appIcon;
    public java.lang.CharSequence appLabel;
    public java.lang.String appPackageName;
    public int autoRevokePermissionsMode;
    public int[] childSessionIds;
    public long createdMillis;
    public boolean forceQueryable;
    public java.lang.String[] grantedRuntimePermissions;
    public int installFlags;
    public int installLocation;
    public int installReason;
    public java.lang.String installerPackageName;
    public boolean isCommitted;
    public boolean isMultiPackage;
    public boolean isStaged;
    public boolean isStagedSessionApplied;
    public boolean isStagedSessionFailed;
    public boolean isStagedSessionReady;
    private int mStagedSessionErrorCode;
    private java.lang.String mStagedSessionErrorMessage;
    public int mode;
    public int originatingUid;
    public android.net.Uri originatingUri;
    public int parentSessionId;
    public float progress;
    public android.net.Uri referrerUri;
    public java.lang.String resolvedBaseCodePath;
    public int rollbackDataPolicy;
    public boolean sealed;
    public int sessionId;
    public long sizeBytes;
    public long updatedMillis;
    public int userId;
    public java.util.List whitelistedRestrictedPermissions;

    static void <clinit>()
    {
        int[] $r0;
        android.content.pm.PackageInstaller$SessionInfo$1 $r1;

        <android.content.pm.PackageInstaller$SessionInfo: int STAGED_SESSION_VERIFICATION_FAILED> = 1;

        <android.content.pm.PackageInstaller$SessionInfo: int STAGED_SESSION_UNKNOWN> = 3;

        <android.content.pm.PackageInstaller$SessionInfo: int STAGED_SESSION_NO_ERROR> = 0;

        <android.content.pm.PackageInstaller$SessionInfo: int STAGED_SESSION_ACTIVATION_FAILED> = 2;

        <android.content.pm.PackageInstaller$SessionInfo: int INVALID_ID> = -1;

        $r0 = newarray (int)[0];

        <android.content.pm.PackageInstaller$SessionInfo: int[] NO_SESSIONS> = $r0;

        $r1 = new android.content.pm.PackageInstaller$SessionInfo$1;

        specialinvoke $r1.<android.content.pm.PackageInstaller$SessionInfo$1: void <init>()>();

        <android.content.pm.PackageInstaller$SessionInfo: android.os.Parcelable$Creator CREATOR> = $r1;

        return;
    }

    public void <init>()
    {
        android.content.pm.PackageInstaller$SessionInfo r0;
        int[] $r1;

        r0 := @this: android.content.pm.PackageInstaller$SessionInfo;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.content.pm.PackageInstaller$SessionInfo: int autoRevokePermissionsMode> = 3;

        r0.<android.content.pm.PackageInstaller$SessionInfo: int parentSessionId> = -1;

        $r1 = <android.content.pm.PackageInstaller$SessionInfo: int[] NO_SESSIONS>;

        r0.<android.content.pm.PackageInstaller$SessionInfo: int[] childSessionIds> = $r1;

        return;
    }

    public void <init>(android.os.Parcel)
    {
        android.content.pm.PackageInstaller$SessionInfo r0;
        android.os.Parcel r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        int[] r2, $r3, $r17;
        java.lang.String $r4, $r5, $r6, $r9, $r16;
        float $f0;
        long $l6, $l14;
        android.os.Parcelable $r7, $r10, $r12;
        android.graphics.Bitmap $r8;
        android.net.Uri $r11, $r13;
        java.lang.String[] $r14;
        java.util.ArrayList $r15;
        boolean $z1, $z2, $z3, $z4, $z5, $z6, $z7, z8, z9;

        r0 := @this: android.content.pm.PackageInstaller$SessionInfo;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.content.pm.PackageInstaller$SessionInfo: int autoRevokePermissionsMode> = 3;

        r0.<android.content.pm.PackageInstaller$SessionInfo: int parentSessionId> = -1;

        $r3 = <android.content.pm.PackageInstaller$SessionInfo: int[] NO_SESSIONS>;

        r0.<android.content.pm.PackageInstaller$SessionInfo: int[] childSessionIds> = $r3;

        $i1 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.content.pm.PackageInstaller$SessionInfo: int sessionId> = $i1;

        $i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.content.pm.PackageInstaller$SessionInfo: int userId> = $i2;

        $r4 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.content.pm.PackageInstaller$SessionInfo: java.lang.String installerPackageName> = $r4;

        $r5 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.content.pm.PackageInstaller$SessionInfo: java.lang.String resolvedBaseCodePath> = $r5;

        $f0 = virtualinvoke r1.<android.os.Parcel: float readFloat()>();

        r0.<android.content.pm.PackageInstaller$SessionInfo: float progress> = $f0;

        i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if i0 == 0 goto label1;

        z8 = 1;

        goto label2;

     label1:
        z8 = 0;

     label2:
        r0.<android.content.pm.PackageInstaller$SessionInfo: boolean sealed> = z8;

        $i3 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i3 == 0 goto label3;

        z9 = 1;

        goto label4;

     label3:
        z9 = 0;

     label4:
        r0.<android.content.pm.PackageInstaller$SessionInfo: boolean active> = z9;

        $i4 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.content.pm.PackageInstaller$SessionInfo: int mode> = $i4;

        $i5 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.content.pm.PackageInstaller$SessionInfo: int installReason> = $i5;

        $l6 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<android.content.pm.PackageInstaller$SessionInfo: long sizeBytes> = $l6;

        $r6 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.content.pm.PackageInstaller$SessionInfo: java.lang.String appPackageName> = $r6;

        $r7 = virtualinvoke r1.<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)>(null);

        $r8 = (android.graphics.Bitmap) $r7;

        r0.<android.content.pm.PackageInstaller$SessionInfo: android.graphics.Bitmap appIcon> = $r8;

        $r9 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.content.pm.PackageInstaller$SessionInfo: java.lang.CharSequence appLabel> = $r9;

        $i7 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.content.pm.PackageInstaller$SessionInfo: int installLocation> = $i7;

        $r10 = virtualinvoke r1.<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)>(null);

        $r11 = (android.net.Uri) $r10;

        r0.<android.content.pm.PackageInstaller$SessionInfo: android.net.Uri originatingUri> = $r11;

        $i8 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.content.pm.PackageInstaller$SessionInfo: int originatingUid> = $i8;

        $r12 = virtualinvoke r1.<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)>(null);

        $r13 = (android.net.Uri) $r12;

        r0.<android.content.pm.PackageInstaller$SessionInfo: android.net.Uri referrerUri> = $r13;

        $r14 = virtualinvoke r1.<android.os.Parcel: java.lang.String[] readStringArray()>();

        r0.<android.content.pm.PackageInstaller$SessionInfo: java.lang.String[] grantedRuntimePermissions> = $r14;

        $r15 = virtualinvoke r1.<android.os.Parcel: java.util.ArrayList createStringArrayList()>();

        r0.<android.content.pm.PackageInstaller$SessionInfo: java.util.List whitelistedRestrictedPermissions> = $r15;

        $i9 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.content.pm.PackageInstaller$SessionInfo: int autoRevokePermissionsMode> = $i9;

        $i10 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.content.pm.PackageInstaller$SessionInfo: int installFlags> = $i10;

        $z1 = virtualinvoke r1.<android.os.Parcel: boolean readBoolean()>();

        r0.<android.content.pm.PackageInstaller$SessionInfo: boolean isMultiPackage> = $z1;

        $z2 = virtualinvoke r1.<android.os.Parcel: boolean readBoolean()>();

        r0.<android.content.pm.PackageInstaller$SessionInfo: boolean isStaged> = $z2;

        $z3 = virtualinvoke r1.<android.os.Parcel: boolean readBoolean()>();

        r0.<android.content.pm.PackageInstaller$SessionInfo: boolean forceQueryable> = $z3;

        $i11 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.content.pm.PackageInstaller$SessionInfo: int parentSessionId> = $i11;

        r2 = virtualinvoke r1.<android.os.Parcel: int[] createIntArray()>();

        r0.<android.content.pm.PackageInstaller$SessionInfo: int[] childSessionIds> = r2;

        if r2 != null goto label5;

        $r17 = <android.content.pm.PackageInstaller$SessionInfo: int[] NO_SESSIONS>;

        r0.<android.content.pm.PackageInstaller$SessionInfo: int[] childSessionIds> = $r17;

     label5:
        $z4 = virtualinvoke r1.<android.os.Parcel: boolean readBoolean()>();

        r0.<android.content.pm.PackageInstaller$SessionInfo: boolean isStagedSessionApplied> = $z4;

        $z5 = virtualinvoke r1.<android.os.Parcel: boolean readBoolean()>();

        r0.<android.content.pm.PackageInstaller$SessionInfo: boolean isStagedSessionReady> = $z5;

        $z6 = virtualinvoke r1.<android.os.Parcel: boolean readBoolean()>();

        r0.<android.content.pm.PackageInstaller$SessionInfo: boolean isStagedSessionFailed> = $z6;

        $i12 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.content.pm.PackageInstaller$SessionInfo: int mStagedSessionErrorCode> = $i12;

        $r16 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.content.pm.PackageInstaller$SessionInfo: java.lang.String mStagedSessionErrorMessage> = $r16;

        $z7 = virtualinvoke r1.<android.os.Parcel: boolean readBoolean()>();

        r0.<android.content.pm.PackageInstaller$SessionInfo: boolean isCommitted> = $z7;

        $i13 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.content.pm.PackageInstaller$SessionInfo: int rollbackDataPolicy> = $i13;

        $l14 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<android.content.pm.PackageInstaller$SessionInfo: long createdMillis> = $l14;

        return;
    }

    private void checkSessionIsStaged()
    {
        android.content.pm.PackageInstaller$SessionInfo r0;
        boolean $z0;
        java.lang.IllegalStateException $r1;

        r0 := @this: android.content.pm.PackageInstaller$SessionInfo;

        $z0 = r0.<android.content.pm.PackageInstaller$SessionInfo: boolean isStaged>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Session is not marked as staged.");

        throw $r1;
    }

    public android.content.Intent createDetailsIntent()
    {
        android.content.pm.PackageInstaller$SessionInfo r0;
        android.content.Intent $r2;
        int $i0;
        java.lang.String $r4;

        r0 := @this: android.content.pm.PackageInstaller$SessionInfo;

        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>(java.lang.String)>("android.content.pm.action.SESSION_DETAILS");

        $i0 = r0.<android.content.pm.PackageInstaller$SessionInfo: int sessionId>;

        virtualinvoke $r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.content.pm.extra.SESSION_ID", $i0);

        $r4 = r0.<android.content.pm.PackageInstaller$SessionInfo: java.lang.String installerPackageName>;

        virtualinvoke $r2.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>($r4);

        virtualinvoke $r2.<android.content.Intent: android.content.Intent setFlags(int)>(268435456);

        return $r2;
    }

    public int describeContents()
    {
        android.content.pm.PackageInstaller$SessionInfo r0;

        r0 := @this: android.content.pm.PackageInstaller$SessionInfo;

        return 0;
    }

    public boolean getAllocateAggressive()
    {
        android.content.pm.PackageInstaller$SessionInfo r0;
        int $i0, $i1;
        boolean z0;

        r0 := @this: android.content.pm.PackageInstaller$SessionInfo;

        $i0 = r0.<android.content.pm.PackageInstaller$SessionInfo: int installFlags>;

        $i1 = $i0 & 32768;

        if $i1 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean getAllowDowngrade()
    {
        android.content.pm.PackageInstaller$SessionInfo r0;
        boolean $z0;

        r0 := @this: android.content.pm.PackageInstaller$SessionInfo;

        $z0 = virtualinvoke r0.<android.content.pm.PackageInstaller$SessionInfo: boolean getRequestDowngrade()>();

        return $z0;
    }

    public android.graphics.Bitmap getAppIcon()
    {
        android.content.pm.PackageInstaller$SessionInfo r0, r7;
        android.graphics.Bitmap $r1, $r2, r8;
        android.content.pm.IPackageManager $r3;
        android.content.pm.IPackageInstaller $r4;
        int $i0;
        android.os.RemoteException $r5;
        java.lang.RuntimeException $r6;

        r0 := @this: android.content.pm.PackageInstaller$SessionInfo;

        $r1 = r0.<android.content.pm.PackageInstaller$SessionInfo: android.graphics.Bitmap appIcon>;

        if $r1 != null goto label9;

     label1:
        $r3 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        $r4 = interfaceinvoke $r3.<android.content.pm.IPackageManager: android.content.pm.IPackageInstaller getPackageInstaller()>();

        $i0 = r0.<android.content.pm.PackageInstaller$SessionInfo: int sessionId>;

        r7 = interfaceinvoke $r4.<android.content.pm.IPackageInstaller: android.content.pm.PackageInstaller$SessionInfo getSessionInfo(int)>($i0);

     label2:
        if r7 == null goto label5;

     label3:
        r8 = r7.<android.content.pm.PackageInstaller$SessionInfo: android.graphics.Bitmap appIcon>;

     label4:
        goto label6;

     label5:
        r8 = null;

     label6:
        r0.<android.content.pm.PackageInstaller$SessionInfo: android.graphics.Bitmap appIcon> = r8;

     label7:
        goto label9;

     label8:
        $r5 := @caughtexception;

        $r6 = virtualinvoke $r5.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r6;

     label9:
        $r2 = r0.<android.content.pm.PackageInstaller$SessionInfo: android.graphics.Bitmap appIcon>;

        return $r2;

        catch android.os.RemoteException from label1 to label2 with label8;
        catch android.os.RemoteException from label3 to label4 with label8;
        catch android.os.RemoteException from label6 to label7 with label8;
    }

    public java.lang.CharSequence getAppLabel()
    {
        android.content.pm.PackageInstaller$SessionInfo r0;
        java.lang.CharSequence $r1;

        r0 := @this: android.content.pm.PackageInstaller$SessionInfo;

        $r1 = r0.<android.content.pm.PackageInstaller$SessionInfo: java.lang.CharSequence appLabel>;

        return $r1;
    }

    public java.lang.String getAppPackageName()
    {
        android.content.pm.PackageInstaller$SessionInfo r0;
        java.lang.String $r1;

        r0 := @this: android.content.pm.PackageInstaller$SessionInfo;

        $r1 = r0.<android.content.pm.PackageInstaller$SessionInfo: java.lang.String appPackageName>;

        return $r1;
    }

    public int getAutoRevokePermissionsMode()
    {
        android.content.pm.PackageInstaller$SessionInfo r0;
        int $i0;

        r0 := @this: android.content.pm.PackageInstaller$SessionInfo;

        $i0 = r0.<android.content.pm.PackageInstaller$SessionInfo: int autoRevokePermissionsMode>;

        return $i0;
    }

    public int[] getChildSessionIds()
    {
        android.content.pm.PackageInstaller$SessionInfo r0;
        int[] $r1;

        r0 := @this: android.content.pm.PackageInstaller$SessionInfo;

        $r1 = r0.<android.content.pm.PackageInstaller$SessionInfo: int[] childSessionIds>;

        return $r1;
    }

    public long getCreatedMillis()
    {
        android.content.pm.PackageInstaller$SessionInfo r0;
        long $l0;

        r0 := @this: android.content.pm.PackageInstaller$SessionInfo;

        $l0 = r0.<android.content.pm.PackageInstaller$SessionInfo: long createdMillis>;

        return $l0;
    }

    public android.content.Intent getDetailsIntent()
    {
        android.content.pm.PackageInstaller$SessionInfo r0;
        android.content.Intent $r1;

        r0 := @this: android.content.pm.PackageInstaller$SessionInfo;

        $r1 = virtualinvoke r0.<android.content.pm.PackageInstaller$SessionInfo: android.content.Intent createDetailsIntent()>();

        return $r1;
    }

    public boolean getDontKillApp()
    {
        android.content.pm.PackageInstaller$SessionInfo r0;
        int $i0, $i1;
        boolean z0;

        r0 := @this: android.content.pm.PackageInstaller$SessionInfo;

        $i0 = r0.<android.content.pm.PackageInstaller$SessionInfo: int installFlags>;

        $i1 = $i0 & 4096;

        if $i1 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean getEnableRollback()
    {
        android.content.pm.PackageInstaller$SessionInfo r0;
        int $i0, $i1;
        boolean z0;

        r0 := @this: android.content.pm.PackageInstaller$SessionInfo;

        $i0 = r0.<android.content.pm.PackageInstaller$SessionInfo: int installFlags>;

        $i1 = $i0 & 262144;

        if $i1 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public java.lang.String[] getGrantedRuntimePermissions()
    {
        android.content.pm.PackageInstaller$SessionInfo r0;
        java.lang.String[] $r1;

        r0 := @this: android.content.pm.PackageInstaller$SessionInfo;

        $r1 = r0.<android.content.pm.PackageInstaller$SessionInfo: java.lang.String[] grantedRuntimePermissions>;

        return $r1;
    }

    public boolean getInstallAsFullApp(boolean)
    {
        android.content.pm.PackageInstaller$SessionInfo r0;
        int $i0, $i1;
        boolean z0, z1;

        r0 := @this: android.content.pm.PackageInstaller$SessionInfo;

        z0 := @parameter0: boolean;

        $i0 = r0.<android.content.pm.PackageInstaller$SessionInfo: int installFlags>;

        $i1 = $i0 & 16384;

        if $i1 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public boolean getInstallAsInstantApp(boolean)
    {
        android.content.pm.PackageInstaller$SessionInfo r0;
        int $i0, $i1;
        boolean z0, z1;

        r0 := @this: android.content.pm.PackageInstaller$SessionInfo;

        z0 := @parameter0: boolean;

        $i0 = r0.<android.content.pm.PackageInstaller$SessionInfo: int installFlags>;

        $i1 = $i0 & 2048;

        if $i1 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public boolean getInstallAsVirtualPreload()
    {
        android.content.pm.PackageInstaller$SessionInfo r0;
        int $i0, $i1;
        boolean z0;

        r0 := @this: android.content.pm.PackageInstaller$SessionInfo;

        $i0 = r0.<android.content.pm.PackageInstaller$SessionInfo: int installFlags>;

        $i1 = $i0 & 65536;

        if $i1 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public int getInstallLocation()
    {
        android.content.pm.PackageInstaller$SessionInfo r0;
        int $i0;

        r0 := @this: android.content.pm.PackageInstaller$SessionInfo;

        $i0 = r0.<android.content.pm.PackageInstaller$SessionInfo: int installLocation>;

        return $i0;
    }

    public int getInstallReason()
    {
        android.content.pm.PackageInstaller$SessionInfo r0;
        int $i0;

        r0 := @this: android.content.pm.PackageInstaller$SessionInfo;

        $i0 = r0.<android.content.pm.PackageInstaller$SessionInfo: int installReason>;

        return $i0;
    }

    public java.lang.String getInstallerPackageName()
    {
        android.content.pm.PackageInstaller$SessionInfo r0;
        java.lang.String $r1;

        r0 := @this: android.content.pm.PackageInstaller$SessionInfo;

        $r1 = r0.<android.content.pm.PackageInstaller$SessionInfo: java.lang.String installerPackageName>;

        return $r1;
    }

    public int getMode()
    {
        android.content.pm.PackageInstaller$SessionInfo r0;
        int $i0;

        r0 := @this: android.content.pm.PackageInstaller$SessionInfo;

        $i0 = r0.<android.content.pm.PackageInstaller$SessionInfo: int mode>;

        return $i0;
    }

    public int getOriginatingUid()
    {
        android.content.pm.PackageInstaller$SessionInfo r0;
        int $i0;

        r0 := @this: android.content.pm.PackageInstaller$SessionInfo;

        $i0 = r0.<android.content.pm.PackageInstaller$SessionInfo: int originatingUid>;

        return $i0;
    }

    public android.net.Uri getOriginatingUri()
    {
        android.content.pm.PackageInstaller$SessionInfo r0;
        android.net.Uri $r1;

        r0 := @this: android.content.pm.PackageInstaller$SessionInfo;

        $r1 = r0.<android.content.pm.PackageInstaller$SessionInfo: android.net.Uri originatingUri>;

        return $r1;
    }

    public int getParentSessionId()
    {
        android.content.pm.PackageInstaller$SessionInfo r0;
        int $i0;

        r0 := @this: android.content.pm.PackageInstaller$SessionInfo;

        $i0 = r0.<android.content.pm.PackageInstaller$SessionInfo: int parentSessionId>;

        return $i0;
    }

    public float getProgress()
    {
        android.content.pm.PackageInstaller$SessionInfo r0;
        float $f0;

        r0 := @this: android.content.pm.PackageInstaller$SessionInfo;

        $f0 = r0.<android.content.pm.PackageInstaller$SessionInfo: float progress>;

        return $f0;
    }

    public android.net.Uri getReferrerUri()
    {
        android.content.pm.PackageInstaller$SessionInfo r0;
        android.net.Uri $r1;

        r0 := @this: android.content.pm.PackageInstaller$SessionInfo;

        $r1 = r0.<android.content.pm.PackageInstaller$SessionInfo: android.net.Uri referrerUri>;

        return $r1;
    }

    public boolean getRequestDowngrade()
    {
        android.content.pm.PackageInstaller$SessionInfo r0;
        int $i0, $i1;
        boolean z0;

        r0 := @this: android.content.pm.PackageInstaller$SessionInfo;

        $i0 = r0.<android.content.pm.PackageInstaller$SessionInfo: int installFlags>;

        $i1 = $i0 & 128;

        if $i1 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public int getRollbackDataPolicy()
    {
        android.content.pm.PackageInstaller$SessionInfo r0;
        int $i0;

        r0 := @this: android.content.pm.PackageInstaller$SessionInfo;

        $i0 = r0.<android.content.pm.PackageInstaller$SessionInfo: int rollbackDataPolicy>;

        return $i0;
    }

    public int getSessionId()
    {
        android.content.pm.PackageInstaller$SessionInfo r0;
        int $i0;

        r0 := @this: android.content.pm.PackageInstaller$SessionInfo;

        $i0 = r0.<android.content.pm.PackageInstaller$SessionInfo: int sessionId>;

        return $i0;
    }

    public long getSize()
    {
        android.content.pm.PackageInstaller$SessionInfo r0;
        long $l0;

        r0 := @this: android.content.pm.PackageInstaller$SessionInfo;

        $l0 = r0.<android.content.pm.PackageInstaller$SessionInfo: long sizeBytes>;

        return $l0;
    }

    public int getStagedSessionErrorCode()
    {
        android.content.pm.PackageInstaller$SessionInfo r0;
        int $i0;

        r0 := @this: android.content.pm.PackageInstaller$SessionInfo;

        specialinvoke r0.<android.content.pm.PackageInstaller$SessionInfo: void checkSessionIsStaged()>();

        $i0 = r0.<android.content.pm.PackageInstaller$SessionInfo: int mStagedSessionErrorCode>;

        return $i0;
    }

    public java.lang.String getStagedSessionErrorMessage()
    {
        android.content.pm.PackageInstaller$SessionInfo r0;
        java.lang.String $r1;

        r0 := @this: android.content.pm.PackageInstaller$SessionInfo;

        specialinvoke r0.<android.content.pm.PackageInstaller$SessionInfo: void checkSessionIsStaged()>();

        $r1 = r0.<android.content.pm.PackageInstaller$SessionInfo: java.lang.String mStagedSessionErrorMessage>;

        return $r1;
    }

    public long getUpdatedMillis()
    {
        android.content.pm.PackageInstaller$SessionInfo r0;
        long $l0;

        r0 := @this: android.content.pm.PackageInstaller$SessionInfo;

        $l0 = r0.<android.content.pm.PackageInstaller$SessionInfo: long updatedMillis>;

        return $l0;
    }

    public android.os.UserHandle getUser()
    {
        android.content.pm.PackageInstaller$SessionInfo r0;
        android.os.UserHandle $r1;
        int $i0;

        r0 := @this: android.content.pm.PackageInstaller$SessionInfo;

        $r1 = new android.os.UserHandle;

        $i0 = r0.<android.content.pm.PackageInstaller$SessionInfo: int userId>;

        specialinvoke $r1.<android.os.UserHandle: void <init>(int)>($i0);

        return $r1;
    }

    public java.util.Set getWhitelistedRestrictedPermissions()
    {
        android.content.pm.PackageInstaller$SessionInfo r0;
        int $i0, $i1;
        java.util.List $r1, $r4;
        java.util.Set $r2, $r5;
        android.util.ArraySet $r3;

        r0 := @this: android.content.pm.PackageInstaller$SessionInfo;

        $i0 = r0.<android.content.pm.PackageInstaller$SessionInfo: int installFlags>;

        $i1 = $i0 & 4194304;

        if $i1 == 0 goto label1;

        $r5 = <android.content.pm.PackageInstaller$SessionParams: java.util.Set RESTRICTED_PERMISSIONS_ALL>;

        return $r5;

     label1:
        $r1 = r0.<android.content.pm.PackageInstaller$SessionInfo: java.util.List whitelistedRestrictedPermissions>;

        if $r1 == null goto label2;

        $r3 = new android.util.ArraySet;

        $r4 = r0.<android.content.pm.PackageInstaller$SessionInfo: java.util.List whitelistedRestrictedPermissions>;

        specialinvoke $r3.<android.util.ArraySet: void <init>(java.util.Collection)>($r4);

        return $r3;

     label2:
        $r2 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();

        return $r2;
    }

    public boolean hasParentSessionId()
    {
        android.content.pm.PackageInstaller$SessionInfo r0;
        int $i0;
        boolean z0;

        r0 := @this: android.content.pm.PackageInstaller$SessionInfo;

        $i0 = r0.<android.content.pm.PackageInstaller$SessionInfo: int parentSessionId>;

        if $i0 == -1 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isActive()
    {
        android.content.pm.PackageInstaller$SessionInfo r0;
        boolean $z0;

        r0 := @this: android.content.pm.PackageInstaller$SessionInfo;

        $z0 = r0.<android.content.pm.PackageInstaller$SessionInfo: boolean active>;

        return $z0;
    }

    public boolean isCommitted()
    {
        android.content.pm.PackageInstaller$SessionInfo r0;
        boolean $z0;

        r0 := @this: android.content.pm.PackageInstaller$SessionInfo;

        $z0 = r0.<android.content.pm.PackageInstaller$SessionInfo: boolean isCommitted>;

        return $z0;
    }

    public boolean isForceQueryable()
    {
        android.content.pm.PackageInstaller$SessionInfo r0;
        boolean $z0;

        r0 := @this: android.content.pm.PackageInstaller$SessionInfo;

        $z0 = r0.<android.content.pm.PackageInstaller$SessionInfo: boolean forceQueryable>;

        return $z0;
    }

    public boolean isMultiPackage()
    {
        android.content.pm.PackageInstaller$SessionInfo r0;
        boolean $z0;

        r0 := @this: android.content.pm.PackageInstaller$SessionInfo;

        $z0 = r0.<android.content.pm.PackageInstaller$SessionInfo: boolean isMultiPackage>;

        return $z0;
    }

    public boolean isOpen()
    {
        android.content.pm.PackageInstaller$SessionInfo r0;
        boolean $z0;

        r0 := @this: android.content.pm.PackageInstaller$SessionInfo;

        $z0 = virtualinvoke r0.<android.content.pm.PackageInstaller$SessionInfo: boolean isActive()>();

        return $z0;
    }

    public boolean isSealed()
    {
        android.content.pm.PackageInstaller$SessionInfo r0;
        boolean $z0;

        r0 := @this: android.content.pm.PackageInstaller$SessionInfo;

        $z0 = r0.<android.content.pm.PackageInstaller$SessionInfo: boolean sealed>;

        return $z0;
    }

    public boolean isStaged()
    {
        android.content.pm.PackageInstaller$SessionInfo r0;
        boolean $z0;

        r0 := @this: android.content.pm.PackageInstaller$SessionInfo;

        $z0 = r0.<android.content.pm.PackageInstaller$SessionInfo: boolean isStaged>;

        return $z0;
    }

    public boolean isStagedSessionActive()
    {
        android.content.pm.PackageInstaller$SessionInfo r0;
        boolean $z0, $z1, $z2, $z3, $z4, z5;

        r0 := @this: android.content.pm.PackageInstaller$SessionInfo;

        $z0 = r0.<android.content.pm.PackageInstaller$SessionInfo: boolean isStaged>;

        if $z0 == 0 goto label1;

        $z1 = r0.<android.content.pm.PackageInstaller$SessionInfo: boolean isCommitted>;

        if $z1 == 0 goto label1;

        $z2 = r0.<android.content.pm.PackageInstaller$SessionInfo: boolean isStagedSessionApplied>;

        if $z2 != 0 goto label1;

        $z3 = r0.<android.content.pm.PackageInstaller$SessionInfo: boolean isStagedSessionFailed>;

        if $z3 != 0 goto label1;

        $z4 = virtualinvoke r0.<android.content.pm.PackageInstaller$SessionInfo: boolean hasParentSessionId()>();

        if $z4 != 0 goto label1;

        z5 = 1;

        goto label2;

     label1:
        z5 = 0;

     label2:
        return z5;
    }

    public boolean isStagedSessionApplied()
    {
        android.content.pm.PackageInstaller$SessionInfo r0;
        boolean $z0;

        r0 := @this: android.content.pm.PackageInstaller$SessionInfo;

        specialinvoke r0.<android.content.pm.PackageInstaller$SessionInfo: void checkSessionIsStaged()>();

        $z0 = r0.<android.content.pm.PackageInstaller$SessionInfo: boolean isStagedSessionApplied>;

        return $z0;
    }

    public boolean isStagedSessionFailed()
    {
        android.content.pm.PackageInstaller$SessionInfo r0;
        boolean $z0;

        r0 := @this: android.content.pm.PackageInstaller$SessionInfo;

        specialinvoke r0.<android.content.pm.PackageInstaller$SessionInfo: void checkSessionIsStaged()>();

        $z0 = r0.<android.content.pm.PackageInstaller$SessionInfo: boolean isStagedSessionFailed>;

        return $z0;
    }

    public boolean isStagedSessionReady()
    {
        android.content.pm.PackageInstaller$SessionInfo r0;
        boolean $z0;

        r0 := @this: android.content.pm.PackageInstaller$SessionInfo;

        specialinvoke r0.<android.content.pm.PackageInstaller$SessionInfo: void checkSessionIsStaged()>();

        $z0 = r0.<android.content.pm.PackageInstaller$SessionInfo: boolean isStagedSessionReady>;

        return $z0;
    }

    public void setStagedSessionErrorCode(int, java.lang.String)
    {
        android.content.pm.PackageInstaller$SessionInfo r0;
        int i0;
        java.lang.String r1;

        r0 := @this: android.content.pm.PackageInstaller$SessionInfo;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r0.<android.content.pm.PackageInstaller$SessionInfo: int mStagedSessionErrorCode> = i0;

        r0.<android.content.pm.PackageInstaller$SessionInfo: java.lang.String mStagedSessionErrorMessage> = r1;

        return;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.content.pm.PackageInstaller$SessionInfo r0;
        android.os.Parcel r1;
        int i0, $i1, $i2, $i3, $i4, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i14, i15;
        java.lang.String $r2, $r3, $r4, $r11, r13;
        float $f0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        long $l5, $l13;
        android.graphics.Bitmap $r5;
        android.net.Uri $r6, $r7;
        java.lang.String[] $r8;
        java.util.List $r9;
        int[] $r10;
        java.lang.CharSequence r12;

        r0 := @this: android.content.pm.PackageInstaller$SessionInfo;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $i1 = r0.<android.content.pm.PackageInstaller$SessionInfo: int sessionId>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $i2 = r0.<android.content.pm.PackageInstaller$SessionInfo: int userId>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i2);

        $r2 = r0.<android.content.pm.PackageInstaller$SessionInfo: java.lang.String installerPackageName>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r2);

        $r3 = r0.<android.content.pm.PackageInstaller$SessionInfo: java.lang.String resolvedBaseCodePath>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r3);

        $f0 = r0.<android.content.pm.PackageInstaller$SessionInfo: float progress>;

        virtualinvoke r1.<android.os.Parcel: void writeFloat(float)>($f0);

        $z0 = r0.<android.content.pm.PackageInstaller$SessionInfo: boolean sealed>;

        i14 = (int) $z0;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i14);

        $z1 = r0.<android.content.pm.PackageInstaller$SessionInfo: boolean active>;

        i15 = (int) $z1;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i15);

        $i3 = r0.<android.content.pm.PackageInstaller$SessionInfo: int mode>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i3);

        $i4 = r0.<android.content.pm.PackageInstaller$SessionInfo: int installReason>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i4);

        $l5 = r0.<android.content.pm.PackageInstaller$SessionInfo: long sizeBytes>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l5);

        $r4 = r0.<android.content.pm.PackageInstaller$SessionInfo: java.lang.String appPackageName>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r4);

        $r5 = r0.<android.content.pm.PackageInstaller$SessionInfo: android.graphics.Bitmap appIcon>;

        virtualinvoke r1.<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>($r5, i0);

        r12 = r0.<android.content.pm.PackageInstaller$SessionInfo: java.lang.CharSequence appLabel>;

        if r12 == null goto label1;

        r13 = interfaceinvoke r12.<java.lang.CharSequence: java.lang.String toString()>();

        goto label2;

     label1:
        r13 = null;

     label2:
        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r13);

        $i6 = r0.<android.content.pm.PackageInstaller$SessionInfo: int installLocation>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i6);

        $r6 = r0.<android.content.pm.PackageInstaller$SessionInfo: android.net.Uri originatingUri>;

        virtualinvoke r1.<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>($r6, i0);

        $i7 = r0.<android.content.pm.PackageInstaller$SessionInfo: int originatingUid>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i7);

        $r7 = r0.<android.content.pm.PackageInstaller$SessionInfo: android.net.Uri referrerUri>;

        virtualinvoke r1.<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>($r7, i0);

        $r8 = r0.<android.content.pm.PackageInstaller$SessionInfo: java.lang.String[] grantedRuntimePermissions>;

        virtualinvoke r1.<android.os.Parcel: void writeStringArray(java.lang.String[])>($r8);

        $r9 = r0.<android.content.pm.PackageInstaller$SessionInfo: java.util.List whitelistedRestrictedPermissions>;

        virtualinvoke r1.<android.os.Parcel: void writeStringList(java.util.List)>($r9);

        $i8 = r0.<android.content.pm.PackageInstaller$SessionInfo: int autoRevokePermissionsMode>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i8);

        $i9 = r0.<android.content.pm.PackageInstaller$SessionInfo: int installFlags>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i9);

        $z2 = r0.<android.content.pm.PackageInstaller$SessionInfo: boolean isMultiPackage>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z2);

        $z3 = r0.<android.content.pm.PackageInstaller$SessionInfo: boolean isStaged>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z3);

        $z4 = r0.<android.content.pm.PackageInstaller$SessionInfo: boolean forceQueryable>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z4);

        $i10 = r0.<android.content.pm.PackageInstaller$SessionInfo: int parentSessionId>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i10);

        $r10 = r0.<android.content.pm.PackageInstaller$SessionInfo: int[] childSessionIds>;

        virtualinvoke r1.<android.os.Parcel: void writeIntArray(int[])>($r10);

        $z5 = r0.<android.content.pm.PackageInstaller$SessionInfo: boolean isStagedSessionApplied>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z5);

        $z6 = r0.<android.content.pm.PackageInstaller$SessionInfo: boolean isStagedSessionReady>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z6);

        $z7 = r0.<android.content.pm.PackageInstaller$SessionInfo: boolean isStagedSessionFailed>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z7);

        $i11 = r0.<android.content.pm.PackageInstaller$SessionInfo: int mStagedSessionErrorCode>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i11);

        $r11 = r0.<android.content.pm.PackageInstaller$SessionInfo: java.lang.String mStagedSessionErrorMessage>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r11);

        $z8 = r0.<android.content.pm.PackageInstaller$SessionInfo: boolean isCommitted>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z8);

        $i12 = r0.<android.content.pm.PackageInstaller$SessionInfo: int rollbackDataPolicy>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i12);

        $l13 = r0.<android.content.pm.PackageInstaller$SessionInfo: long createdMillis>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l13);

        return;
    }
}
