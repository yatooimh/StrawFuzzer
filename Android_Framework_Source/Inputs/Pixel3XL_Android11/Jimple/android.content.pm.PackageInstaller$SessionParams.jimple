public class android.content.pm.PackageInstaller$SessionParams extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    public static final int MAX_PACKAGE_NAME_LENGTH;
    public static final int MODE_FULL_INSTALL;
    public static final int MODE_INHERIT_EXISTING;
    public static final int MODE_INVALID;
    public static final java.util.Set RESTRICTED_PERMISSIONS_ALL;
    public static final int UID_UNKNOWN;
    public java.lang.String abiOverride;
    public android.graphics.Bitmap appIcon;
    public long appIconLastModified;
    public java.lang.String appLabel;
    public java.lang.String appPackageName;
    public int autoRevokePermissionsMode;
    public android.content.pm.DataLoaderParams dataLoaderParams;
    public boolean forceQueryableOverride;
    public java.lang.String[] grantedRuntimePermissions;
    public int installFlags;
    public int installLocation;
    public int installReason;
    public java.lang.String installerPackageName;
    public boolean isMultiPackage;
    public boolean isStaged;
    public int mode;
    public int originatingUid;
    public android.net.Uri originatingUri;
    public android.net.Uri referrerUri;
    public long requiredInstalledVersionCode;
    public int rollbackDataPolicy;
    public long sizeBytes;
    public java.lang.String volumeUuid;
    public java.util.List whitelistedRestrictedPermissions;

    static void <clinit>()
    {
        android.util.ArraySet $r0;
        android.content.pm.PackageInstaller$SessionParams$1 $r1;

        <android.content.pm.PackageInstaller$SessionParams: int UID_UNKNOWN> = -1;

        <android.content.pm.PackageInstaller$SessionParams: int MODE_INVALID> = -1;

        <android.content.pm.PackageInstaller$SessionParams: int MODE_INHERIT_EXISTING> = 2;

        <android.content.pm.PackageInstaller$SessionParams: int MODE_FULL_INSTALL> = 1;

        <android.content.pm.PackageInstaller$SessionParams: int MAX_PACKAGE_NAME_LENGTH> = 255;

        $r0 = new android.util.ArraySet;

        specialinvoke $r0.<android.util.ArraySet: void <init>()>();

        <android.content.pm.PackageInstaller$SessionParams: java.util.Set RESTRICTED_PERMISSIONS_ALL> = $r0;

        $r1 = new android.content.pm.PackageInstaller$SessionParams$1;

        specialinvoke $r1.<android.content.pm.PackageInstaller$SessionParams$1: void <init>()>();

        <android.content.pm.PackageInstaller$SessionParams: android.os.Parcelable$Creator CREATOR> = $r1;

        return;
    }

    public void <init>(int)
    {
        android.content.pm.PackageInstaller$SessionParams r0;
        int i0;

        r0 := @this: android.content.pm.PackageInstaller$SessionParams;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.content.pm.PackageInstaller$SessionParams: int mode> = -1;

        r0.<android.content.pm.PackageInstaller$SessionParams: int installFlags> = 4194304;

        r0.<android.content.pm.PackageInstaller$SessionParams: int installLocation> = 1;

        r0.<android.content.pm.PackageInstaller$SessionParams: int installReason> = 0;

        r0.<android.content.pm.PackageInstaller$SessionParams: long sizeBytes> = -1L;

        r0.<android.content.pm.PackageInstaller$SessionParams: long appIconLastModified> = -1L;

        r0.<android.content.pm.PackageInstaller$SessionParams: int originatingUid> = -1;

        r0.<android.content.pm.PackageInstaller$SessionParams: int autoRevokePermissionsMode> = 3;

        r0.<android.content.pm.PackageInstaller$SessionParams: long requiredInstalledVersionCode> = -1L;

        r0.<android.content.pm.PackageInstaller$SessionParams: int rollbackDataPolicy> = 0;

        r0.<android.content.pm.PackageInstaller$SessionParams: int mode> = i0;

        return;
    }

    public void <init>(android.os.Parcel)
    {
        android.content.pm.PackageInstaller$SessionParams r0;
        android.os.Parcel r1;
        android.content.pm.DataLoaderParamsParcel r2;
        int $i0, $i1, $i2, $i3, $i5, $i6, $i8;
        long $l4, $l7;
        java.lang.String $r3, $r6, $r11, $r12, $r15;
        android.os.Parcelable $r4, $r7, $r9, $r18;
        android.graphics.Bitmap $r5;
        android.net.Uri $r8, $r10;
        java.lang.String[] $r13;
        java.util.ArrayList $r14;
        boolean $z0, $z1, $z2;
        java.lang.Class $r16;
        java.lang.ClassLoader $r17;
        android.content.pm.DataLoaderParams $r19;

        r0 := @this: android.content.pm.PackageInstaller$SessionParams;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.content.pm.PackageInstaller$SessionParams: int mode> = -1;

        r0.<android.content.pm.PackageInstaller$SessionParams: int installFlags> = 4194304;

        r0.<android.content.pm.PackageInstaller$SessionParams: int installLocation> = 1;

        r0.<android.content.pm.PackageInstaller$SessionParams: int installReason> = 0;

        r0.<android.content.pm.PackageInstaller$SessionParams: long sizeBytes> = -1L;

        r0.<android.content.pm.PackageInstaller$SessionParams: long appIconLastModified> = -1L;

        r0.<android.content.pm.PackageInstaller$SessionParams: int originatingUid> = -1;

        r0.<android.content.pm.PackageInstaller$SessionParams: int autoRevokePermissionsMode> = 3;

        r0.<android.content.pm.PackageInstaller$SessionParams: long requiredInstalledVersionCode> = -1L;

        r0.<android.content.pm.PackageInstaller$SessionParams: int rollbackDataPolicy> = 0;

        $i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.content.pm.PackageInstaller$SessionParams: int mode> = $i0;

        $i1 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.content.pm.PackageInstaller$SessionParams: int installFlags> = $i1;

        $i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.content.pm.PackageInstaller$SessionParams: int installLocation> = $i2;

        $i3 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.content.pm.PackageInstaller$SessionParams: int installReason> = $i3;

        $l4 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<android.content.pm.PackageInstaller$SessionParams: long sizeBytes> = $l4;

        $r3 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.content.pm.PackageInstaller$SessionParams: java.lang.String appPackageName> = $r3;

        $r4 = virtualinvoke r1.<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)>(null);

        $r5 = (android.graphics.Bitmap) $r4;

        r0.<android.content.pm.PackageInstaller$SessionParams: android.graphics.Bitmap appIcon> = $r5;

        $r6 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.content.pm.PackageInstaller$SessionParams: java.lang.String appLabel> = $r6;

        $r7 = virtualinvoke r1.<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)>(null);

        $r8 = (android.net.Uri) $r7;

        r0.<android.content.pm.PackageInstaller$SessionParams: android.net.Uri originatingUri> = $r8;

        $i5 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.content.pm.PackageInstaller$SessionParams: int originatingUid> = $i5;

        $r9 = virtualinvoke r1.<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)>(null);

        $r10 = (android.net.Uri) $r9;

        r0.<android.content.pm.PackageInstaller$SessionParams: android.net.Uri referrerUri> = $r10;

        $r11 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.content.pm.PackageInstaller$SessionParams: java.lang.String abiOverride> = $r11;

        $r12 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.content.pm.PackageInstaller$SessionParams: java.lang.String volumeUuid> = $r12;

        $r13 = virtualinvoke r1.<android.os.Parcel: java.lang.String[] readStringArray()>();

        r0.<android.content.pm.PackageInstaller$SessionParams: java.lang.String[] grantedRuntimePermissions> = $r13;

        $r14 = virtualinvoke r1.<android.os.Parcel: java.util.ArrayList createStringArrayList()>();

        r0.<android.content.pm.PackageInstaller$SessionParams: java.util.List whitelistedRestrictedPermissions> = $r14;

        $i6 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.content.pm.PackageInstaller$SessionParams: int autoRevokePermissionsMode> = $i6;

        $r15 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.content.pm.PackageInstaller$SessionParams: java.lang.String installerPackageName> = $r15;

        $z0 = virtualinvoke r1.<android.os.Parcel: boolean readBoolean()>();

        r0.<android.content.pm.PackageInstaller$SessionParams: boolean isMultiPackage> = $z0;

        $z1 = virtualinvoke r1.<android.os.Parcel: boolean readBoolean()>();

        r0.<android.content.pm.PackageInstaller$SessionParams: boolean isStaged> = $z1;

        $z2 = virtualinvoke r1.<android.os.Parcel: boolean readBoolean()>();

        r0.<android.content.pm.PackageInstaller$SessionParams: boolean forceQueryableOverride> = $z2;

        $l7 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<android.content.pm.PackageInstaller$SessionParams: long requiredInstalledVersionCode> = $l7;

        $r16 = class "Landroid/content/pm/DataLoaderParamsParcel;";

        $r17 = virtualinvoke $r16.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r18 = virtualinvoke r1.<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)>($r17);

        r2 = (android.content.pm.DataLoaderParamsParcel) $r18;

        if r2 == null goto label1;

        $r19 = new android.content.pm.DataLoaderParams;

        specialinvoke $r19.<android.content.pm.DataLoaderParams: void <init>(android.content.pm.DataLoaderParamsParcel)>(r2);

        r0.<android.content.pm.PackageInstaller$SessionParams: android.content.pm.DataLoaderParams dataLoaderParams> = $r19;

     label1:
        $i8 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.content.pm.PackageInstaller$SessionParams: int rollbackDataPolicy> = $i8;

        return;
    }

    public boolean areHiddenOptionsSet()
    {
        android.content.pm.PackageInstaller$SessionParams r0;
        int i0, $i1;
        java.lang.String $r1, $r2;
        boolean z0;

        r0 := @this: android.content.pm.PackageInstaller$SessionParams;

        i0 = r0.<android.content.pm.PackageInstaller$SessionParams: int installFlags>;

        $i1 = 1169536 & i0;

        if $i1 != i0 goto label2;

        $r1 = r0.<android.content.pm.PackageInstaller$SessionParams: java.lang.String abiOverride>;

        if $r1 != null goto label2;

        $r2 = r0.<android.content.pm.PackageInstaller$SessionParams: java.lang.String volumeUuid>;

        if $r2 == null goto label1;

        goto label2;

     label1:
        z0 = 0;

        goto label3;

     label2:
        z0 = 1;

     label3:
        return z0;
    }

    public android.content.pm.PackageInstaller$SessionParams copy()
    {
        android.content.pm.PackageInstaller$SessionParams r0, $r2;
        int $i0, $i1, $i2, $i3, $i5, $i6, $i8;
        long $l4, $l7;
        java.lang.String $r3, $r5, $r8, $r9, $r12;
        android.graphics.Bitmap $r4;
        android.net.Uri $r6, $r7;
        java.lang.String[] $r10;
        java.util.List $r11;
        boolean $z0, $z1, $z2;
        android.content.pm.DataLoaderParams $r13;

        r0 := @this: android.content.pm.PackageInstaller$SessionParams;

        $r2 = new android.content.pm.PackageInstaller$SessionParams;

        $i0 = r0.<android.content.pm.PackageInstaller$SessionParams: int mode>;

        specialinvoke $r2.<android.content.pm.PackageInstaller$SessionParams: void <init>(int)>($i0);

        $i1 = r0.<android.content.pm.PackageInstaller$SessionParams: int installFlags>;

        $r2.<android.content.pm.PackageInstaller$SessionParams: int installFlags> = $i1;

        $i2 = r0.<android.content.pm.PackageInstaller$SessionParams: int installLocation>;

        $r2.<android.content.pm.PackageInstaller$SessionParams: int installLocation> = $i2;

        $i3 = r0.<android.content.pm.PackageInstaller$SessionParams: int installReason>;

        $r2.<android.content.pm.PackageInstaller$SessionParams: int installReason> = $i3;

        $l4 = r0.<android.content.pm.PackageInstaller$SessionParams: long sizeBytes>;

        $r2.<android.content.pm.PackageInstaller$SessionParams: long sizeBytes> = $l4;

        $r3 = r0.<android.content.pm.PackageInstaller$SessionParams: java.lang.String appPackageName>;

        $r2.<android.content.pm.PackageInstaller$SessionParams: java.lang.String appPackageName> = $r3;

        $r4 = r0.<android.content.pm.PackageInstaller$SessionParams: android.graphics.Bitmap appIcon>;

        $r2.<android.content.pm.PackageInstaller$SessionParams: android.graphics.Bitmap appIcon> = $r4;

        $r5 = r0.<android.content.pm.PackageInstaller$SessionParams: java.lang.String appLabel>;

        $r2.<android.content.pm.PackageInstaller$SessionParams: java.lang.String appLabel> = $r5;

        $r6 = r0.<android.content.pm.PackageInstaller$SessionParams: android.net.Uri originatingUri>;

        $r2.<android.content.pm.PackageInstaller$SessionParams: android.net.Uri originatingUri> = $r6;

        $i5 = r0.<android.content.pm.PackageInstaller$SessionParams: int originatingUid>;

        $r2.<android.content.pm.PackageInstaller$SessionParams: int originatingUid> = $i5;

        $r7 = r0.<android.content.pm.PackageInstaller$SessionParams: android.net.Uri referrerUri>;

        $r2.<android.content.pm.PackageInstaller$SessionParams: android.net.Uri referrerUri> = $r7;

        $r8 = r0.<android.content.pm.PackageInstaller$SessionParams: java.lang.String abiOverride>;

        $r2.<android.content.pm.PackageInstaller$SessionParams: java.lang.String abiOverride> = $r8;

        $r9 = r0.<android.content.pm.PackageInstaller$SessionParams: java.lang.String volumeUuid>;

        $r2.<android.content.pm.PackageInstaller$SessionParams: java.lang.String volumeUuid> = $r9;

        $r10 = r0.<android.content.pm.PackageInstaller$SessionParams: java.lang.String[] grantedRuntimePermissions>;

        $r2.<android.content.pm.PackageInstaller$SessionParams: java.lang.String[] grantedRuntimePermissions> = $r10;

        $r11 = r0.<android.content.pm.PackageInstaller$SessionParams: java.util.List whitelistedRestrictedPermissions>;

        $r2.<android.content.pm.PackageInstaller$SessionParams: java.util.List whitelistedRestrictedPermissions> = $r11;

        $i6 = r0.<android.content.pm.PackageInstaller$SessionParams: int autoRevokePermissionsMode>;

        $r2.<android.content.pm.PackageInstaller$SessionParams: int autoRevokePermissionsMode> = $i6;

        $r12 = r0.<android.content.pm.PackageInstaller$SessionParams: java.lang.String installerPackageName>;

        $r2.<android.content.pm.PackageInstaller$SessionParams: java.lang.String installerPackageName> = $r12;

        $z0 = r0.<android.content.pm.PackageInstaller$SessionParams: boolean isMultiPackage>;

        $r2.<android.content.pm.PackageInstaller$SessionParams: boolean isMultiPackage> = $z0;

        $z1 = r0.<android.content.pm.PackageInstaller$SessionParams: boolean isStaged>;

        $r2.<android.content.pm.PackageInstaller$SessionParams: boolean isStaged> = $z1;

        $z2 = r0.<android.content.pm.PackageInstaller$SessionParams: boolean forceQueryableOverride>;

        $r2.<android.content.pm.PackageInstaller$SessionParams: boolean forceQueryableOverride> = $z2;

        $l7 = r0.<android.content.pm.PackageInstaller$SessionParams: long requiredInstalledVersionCode>;

        $r2.<android.content.pm.PackageInstaller$SessionParams: long requiredInstalledVersionCode> = $l7;

        $r13 = r0.<android.content.pm.PackageInstaller$SessionParams: android.content.pm.DataLoaderParams dataLoaderParams>;

        $r2.<android.content.pm.PackageInstaller$SessionParams: android.content.pm.DataLoaderParams dataLoaderParams> = $r13;

        $i8 = r0.<android.content.pm.PackageInstaller$SessionParams: int rollbackDataPolicy>;

        $r2.<android.content.pm.PackageInstaller$SessionParams: int rollbackDataPolicy> = $i8;

        return $r2;
    }

    public int describeContents()
    {
        android.content.pm.PackageInstaller$SessionParams r0;

        r0 := @this: android.content.pm.PackageInstaller$SessionParams;

        return 0;
    }

    public void dump(com.android.internal.util.IndentingPrintWriter)
    {
        android.content.pm.PackageInstaller$SessionParams r0;
        com.android.internal.util.IndentingPrintWriter r1;
        int $i0, $i1, $i2, $i4, $i5, $i7;
        java.lang.Integer $r2, $r5, $r18, $r30, $r44;
        long $l3, $l6;
        java.lang.Long $r7, $r40;
        java.lang.String $r9, $r14, $r22, $r24, $r32;
        android.graphics.Bitmap $r11;
        java.lang.Boolean $r12, $r34, $r36, $r38;
        android.net.Uri $r16, $r20;
        java.lang.String[] $r26;
        java.util.List $r28;
        boolean $z0, $z1, $z2, z3;
        android.content.pm.DataLoaderParams $r42;

        r0 := @this: android.content.pm.PackageInstaller$SessionParams;

        r1 := @parameter0: com.android.internal.util.IndentingPrintWriter;

        $i0 = r0.<android.content.pm.PackageInstaller$SessionParams: int mode>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter printPair(java.lang.String,java.lang.Object)>("mode", $r2);

        $i1 = r0.<android.content.pm.PackageInstaller$SessionParams: int installFlags>;

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter printHexPair(java.lang.String,int)>("installFlags", $i1);

        $i2 = r0.<android.content.pm.PackageInstaller$SessionParams: int installLocation>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter printPair(java.lang.String,java.lang.Object)>("installLocation", $r5);

        $l3 = r0.<android.content.pm.PackageInstaller$SessionParams: long sizeBytes>;

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter printPair(java.lang.String,java.lang.Object)>("sizeBytes", $r7);

        $r9 = r0.<android.content.pm.PackageInstaller$SessionParams: java.lang.String appPackageName>;

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter printPair(java.lang.String,java.lang.Object)>("appPackageName", $r9);

        $r11 = r0.<android.content.pm.PackageInstaller$SessionParams: android.graphics.Bitmap appIcon>;

        if $r11 == null goto label1;

        z3 = 1;

        goto label2;

     label1:
        z3 = 0;

     label2:
        $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z3);

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter printPair(java.lang.String,java.lang.Object)>("appIcon", $r12);

        $r14 = r0.<android.content.pm.PackageInstaller$SessionParams: java.lang.String appLabel>;

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter printPair(java.lang.String,java.lang.Object)>("appLabel", $r14);

        $r16 = r0.<android.content.pm.PackageInstaller$SessionParams: android.net.Uri originatingUri>;

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter printPair(java.lang.String,java.lang.Object)>("originatingUri", $r16);

        $i4 = r0.<android.content.pm.PackageInstaller$SessionParams: int originatingUid>;

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter printPair(java.lang.String,java.lang.Object)>("originatingUid", $r18);

        $r20 = r0.<android.content.pm.PackageInstaller$SessionParams: android.net.Uri referrerUri>;

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter printPair(java.lang.String,java.lang.Object)>("referrerUri", $r20);

        $r22 = r0.<android.content.pm.PackageInstaller$SessionParams: java.lang.String abiOverride>;

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter printPair(java.lang.String,java.lang.Object)>("abiOverride", $r22);

        $r24 = r0.<android.content.pm.PackageInstaller$SessionParams: java.lang.String volumeUuid>;

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter printPair(java.lang.String,java.lang.Object)>("volumeUuid", $r24);

        $r26 = r0.<android.content.pm.PackageInstaller$SessionParams: java.lang.String[] grantedRuntimePermissions>;

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter printPair(java.lang.String,java.lang.Object[])>("grantedRuntimePermissions", $r26);

        $r28 = r0.<android.content.pm.PackageInstaller$SessionParams: java.util.List whitelistedRestrictedPermissions>;

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter printPair(java.lang.String,java.lang.Object)>("whitelistedRestrictedPermissions", $r28);

        $i5 = r0.<android.content.pm.PackageInstaller$SessionParams: int autoRevokePermissionsMode>;

        $r30 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter printPair(java.lang.String,java.lang.Object)>("autoRevokePermissions", $r30);

        $r32 = r0.<android.content.pm.PackageInstaller$SessionParams: java.lang.String installerPackageName>;

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter printPair(java.lang.String,java.lang.Object)>("installerPackageName", $r32);

        $z0 = r0.<android.content.pm.PackageInstaller$SessionParams: boolean isMultiPackage>;

        $r34 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter printPair(java.lang.String,java.lang.Object)>("isMultiPackage", $r34);

        $z1 = r0.<android.content.pm.PackageInstaller$SessionParams: boolean isStaged>;

        $r36 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter printPair(java.lang.String,java.lang.Object)>("isStaged", $r36);

        $z2 = r0.<android.content.pm.PackageInstaller$SessionParams: boolean forceQueryableOverride>;

        $r38 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2);

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter printPair(java.lang.String,java.lang.Object)>("forceQueryable", $r38);

        $l6 = r0.<android.content.pm.PackageInstaller$SessionParams: long requiredInstalledVersionCode>;

        $r40 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l6);

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter printPair(java.lang.String,java.lang.Object)>("requiredInstalledVersionCode", $r40);

        $r42 = r0.<android.content.pm.PackageInstaller$SessionParams: android.content.pm.DataLoaderParams dataLoaderParams>;

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter printPair(java.lang.String,java.lang.Object)>("dataLoaderParams", $r42);

        $i7 = r0.<android.content.pm.PackageInstaller$SessionParams: int rollbackDataPolicy>;

        $r44 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter printPair(java.lang.String,java.lang.Object)>("rollbackDataPolicy", $r44);

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println()>();

        return;
    }

    public boolean getEnableRollback()
    {
        android.content.pm.PackageInstaller$SessionParams r0;
        int $i0, $i1;
        boolean z0;

        r0 := @this: android.content.pm.PackageInstaller$SessionParams;

        $i0 = r0.<android.content.pm.PackageInstaller$SessionParams: int installFlags>;

        $i1 = $i0 & 262144;

        if $i1 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public void setAllocateAggressive(boolean)
    {
        android.content.pm.PackageInstaller$SessionParams r0;
        boolean z0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.content.pm.PackageInstaller$SessionParams;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $i2 = r0.<android.content.pm.PackageInstaller$SessionParams: int installFlags>;

        $i3 = $i2 | 32768;

        r0.<android.content.pm.PackageInstaller$SessionParams: int installFlags> = $i3;

        goto label2;

     label1:
        $i0 = r0.<android.content.pm.PackageInstaller$SessionParams: int installFlags>;

        $i1 = $i0 & -32769;

        r0.<android.content.pm.PackageInstaller$SessionParams: int installFlags> = $i1;

     label2:
        return;
    }

    public void setAllowDowngrade(boolean)
    {
        android.content.pm.PackageInstaller$SessionParams r0;
        boolean z0;

        r0 := @this: android.content.pm.PackageInstaller$SessionParams;

        z0 := @parameter0: boolean;

        virtualinvoke r0.<android.content.pm.PackageInstaller$SessionParams: void setRequestDowngrade(boolean)>(z0);

        return;
    }

    public void setAppIcon(android.graphics.Bitmap)
    {
        android.content.pm.PackageInstaller$SessionParams r0;
        android.graphics.Bitmap r1;

        r0 := @this: android.content.pm.PackageInstaller$SessionParams;

        r1 := @parameter0: android.graphics.Bitmap;

        r0.<android.content.pm.PackageInstaller$SessionParams: android.graphics.Bitmap appIcon> = r1;

        return;
    }

    public void setAppLabel(java.lang.CharSequence)
    {
        android.content.pm.PackageInstaller$SessionParams r0;
        java.lang.CharSequence r1;
        java.lang.String r2;

        r0 := @this: android.content.pm.PackageInstaller$SessionParams;

        r1 := @parameter0: java.lang.CharSequence;

        if r1 == null goto label1;

        r2 = interfaceinvoke r1.<java.lang.CharSequence: java.lang.String toString()>();

        goto label2;

     label1:
        r2 = null;

     label2:
        r0.<android.content.pm.PackageInstaller$SessionParams: java.lang.String appLabel> = r2;

        return;
    }

    public void setAppPackageName(java.lang.String)
    {
        android.content.pm.PackageInstaller$SessionParams r0;
        java.lang.String r1;

        r0 := @this: android.content.pm.PackageInstaller$SessionParams;

        r1 := @parameter0: java.lang.String;

        r0.<android.content.pm.PackageInstaller$SessionParams: java.lang.String appPackageName> = r1;

        return;
    }

    public void setAutoRevokePermissionsMode(boolean)
    {
        android.content.pm.PackageInstaller$SessionParams r0;
        boolean z0, $z1;
        int i0;

        r0 := @this: android.content.pm.PackageInstaller$SessionParams;

        z0 := @parameter0: boolean;

        $z1 = z0 ^ 1;

        i0 = (int) $z1;

        r0.<android.content.pm.PackageInstaller$SessionParams: int autoRevokePermissionsMode> = i0;

        return;
    }

    public void setDataLoaderParams(android.content.pm.DataLoaderParams)
    {
        android.content.pm.PackageInstaller$SessionParams r0;
        android.content.pm.DataLoaderParams r1;

        r0 := @this: android.content.pm.PackageInstaller$SessionParams;

        r1 := @parameter0: android.content.pm.DataLoaderParams;

        r0.<android.content.pm.PackageInstaller$SessionParams: android.content.pm.DataLoaderParams dataLoaderParams> = r1;

        return;
    }

    public void setDontKillApp(boolean)
    {
        android.content.pm.PackageInstaller$SessionParams r0;
        boolean z0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.content.pm.PackageInstaller$SessionParams;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $i2 = r0.<android.content.pm.PackageInstaller$SessionParams: int installFlags>;

        $i3 = $i2 | 4096;

        r0.<android.content.pm.PackageInstaller$SessionParams: int installFlags> = $i3;

        goto label2;

     label1:
        $i0 = r0.<android.content.pm.PackageInstaller$SessionParams: int installFlags>;

        $i1 = $i0 & -4097;

        r0.<android.content.pm.PackageInstaller$SessionParams: int installFlags> = $i1;

     label2:
        return;
    }

    public void setEnableRollback(boolean)
    {
        android.content.pm.PackageInstaller$SessionParams r0;
        boolean z0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.content.pm.PackageInstaller$SessionParams;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $i2 = r0.<android.content.pm.PackageInstaller$SessionParams: int installFlags>;

        $i3 = $i2 | 262144;

        r0.<android.content.pm.PackageInstaller$SessionParams: int installFlags> = $i3;

        goto label2;

     label1:
        $i0 = r0.<android.content.pm.PackageInstaller$SessionParams: int installFlags>;

        $i1 = $i0 & -262145;

        r0.<android.content.pm.PackageInstaller$SessionParams: int installFlags> = $i1;

     label2:
        r0.<android.content.pm.PackageInstaller$SessionParams: int rollbackDataPolicy> = 0;

        return;
    }

    public void setEnableRollback(boolean, int)
    {
        android.content.pm.PackageInstaller$SessionParams r0;
        boolean z0;
        int i0, $i1, $i2, $i3, $i4;

        r0 := @this: android.content.pm.PackageInstaller$SessionParams;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        if z0 == 0 goto label1;

        $i3 = r0.<android.content.pm.PackageInstaller$SessionParams: int installFlags>;

        $i4 = $i3 | 262144;

        r0.<android.content.pm.PackageInstaller$SessionParams: int installFlags> = $i4;

        goto label2;

     label1:
        $i1 = r0.<android.content.pm.PackageInstaller$SessionParams: int installFlags>;

        $i2 = $i1 & -262145;

        r0.<android.content.pm.PackageInstaller$SessionParams: int installFlags> = $i2;

     label2:
        r0.<android.content.pm.PackageInstaller$SessionParams: int rollbackDataPolicy> = i0;

        return;
    }

    public void setForceQueryable()
    {
        android.content.pm.PackageInstaller$SessionParams r0;

        r0 := @this: android.content.pm.PackageInstaller$SessionParams;

        r0.<android.content.pm.PackageInstaller$SessionParams: boolean forceQueryableOverride> = 1;

        return;
    }

    public void setGrantedRuntimePermissions(java.lang.String[])
    {
        android.content.pm.PackageInstaller$SessionParams r0;
        java.lang.String[] r1;
        int $i0, $i1;

        r0 := @this: android.content.pm.PackageInstaller$SessionParams;

        r1 := @parameter0: java.lang.String[];

        $i0 = r0.<android.content.pm.PackageInstaller$SessionParams: int installFlags>;

        $i1 = $i0 | 256;

        r0.<android.content.pm.PackageInstaller$SessionParams: int installFlags> = $i1;

        r0.<android.content.pm.PackageInstaller$SessionParams: java.lang.String[] grantedRuntimePermissions> = r1;

        return;
    }

    public void setInstallAsApex()
    {
        android.content.pm.PackageInstaller$SessionParams r0;
        int $i0, $i1;

        r0 := @this: android.content.pm.PackageInstaller$SessionParams;

        $i0 = r0.<android.content.pm.PackageInstaller$SessionParams: int installFlags>;

        $i1 = $i0 | 131072;

        r0.<android.content.pm.PackageInstaller$SessionParams: int installFlags> = $i1;

        return;
    }

    public void setInstallAsInstantApp(boolean)
    {
        android.content.pm.PackageInstaller$SessionParams r0;
        boolean z0;
        int $i0, $i1, $i2, $i3, i4, i5;

        r0 := @this: android.content.pm.PackageInstaller$SessionParams;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $i2 = r0.<android.content.pm.PackageInstaller$SessionParams: int installFlags>;

        i4 = $i2 | 2048;

        r0.<android.content.pm.PackageInstaller$SessionParams: int installFlags> = i4;

        $i3 = i4 & -16385;

        r0.<android.content.pm.PackageInstaller$SessionParams: int installFlags> = $i3;

        goto label2;

     label1:
        $i0 = r0.<android.content.pm.PackageInstaller$SessionParams: int installFlags>;

        i5 = $i0 & -2049;

        r0.<android.content.pm.PackageInstaller$SessionParams: int installFlags> = i5;

        $i1 = i5 | 16384;

        r0.<android.content.pm.PackageInstaller$SessionParams: int installFlags> = $i1;

     label2:
        return;
    }

    public void setInstallAsVirtualPreload()
    {
        android.content.pm.PackageInstaller$SessionParams r0;
        int $i0, $i1;

        r0 := @this: android.content.pm.PackageInstaller$SessionParams;

        $i0 = r0.<android.content.pm.PackageInstaller$SessionParams: int installFlags>;

        $i1 = $i0 | 65536;

        r0.<android.content.pm.PackageInstaller$SessionParams: int installFlags> = $i1;

        return;
    }

    public void setInstallFlagsForcePermissionPrompt()
    {
        android.content.pm.PackageInstaller$SessionParams r0;
        int $i0, $i1;

        r0 := @this: android.content.pm.PackageInstaller$SessionParams;

        $i0 = r0.<android.content.pm.PackageInstaller$SessionParams: int installFlags>;

        $i1 = $i0 | 1024;

        r0.<android.content.pm.PackageInstaller$SessionParams: int installFlags> = $i1;

        return;
    }

    public void setInstallLocation(int)
    {
        android.content.pm.PackageInstaller$SessionParams r0;
        int i0;

        r0 := @this: android.content.pm.PackageInstaller$SessionParams;

        i0 := @parameter0: int;

        r0.<android.content.pm.PackageInstaller$SessionParams: int installLocation> = i0;

        return;
    }

    public void setInstallReason(int)
    {
        android.content.pm.PackageInstaller$SessionParams r0;
        int i0;

        r0 := @this: android.content.pm.PackageInstaller$SessionParams;

        i0 := @parameter0: int;

        r0.<android.content.pm.PackageInstaller$SessionParams: int installReason> = i0;

        return;
    }

    public void setInstallerPackageName(java.lang.String)
    {
        android.content.pm.PackageInstaller$SessionParams r0;
        java.lang.String r1;

        r0 := @this: android.content.pm.PackageInstaller$SessionParams;

        r1 := @parameter0: java.lang.String;

        r0.<android.content.pm.PackageInstaller$SessionParams: java.lang.String installerPackageName> = r1;

        return;
    }

    public void setMultiPackage()
    {
        android.content.pm.PackageInstaller$SessionParams r0;

        r0 := @this: android.content.pm.PackageInstaller$SessionParams;

        r0.<android.content.pm.PackageInstaller$SessionParams: boolean isMultiPackage> = 1;

        return;
    }

    public void setOriginatingUid(int)
    {
        android.content.pm.PackageInstaller$SessionParams r0;
        int i0;

        r0 := @this: android.content.pm.PackageInstaller$SessionParams;

        i0 := @parameter0: int;

        r0.<android.content.pm.PackageInstaller$SessionParams: int originatingUid> = i0;

        return;
    }

    public void setOriginatingUri(android.net.Uri)
    {
        android.content.pm.PackageInstaller$SessionParams r0;
        android.net.Uri r1;

        r0 := @this: android.content.pm.PackageInstaller$SessionParams;

        r1 := @parameter0: android.net.Uri;

        r0.<android.content.pm.PackageInstaller$SessionParams: android.net.Uri originatingUri> = r1;

        return;
    }

    public void setReferrerUri(android.net.Uri)
    {
        android.content.pm.PackageInstaller$SessionParams r0;
        android.net.Uri r1;

        r0 := @this: android.content.pm.PackageInstaller$SessionParams;

        r1 := @parameter0: android.net.Uri;

        r0.<android.content.pm.PackageInstaller$SessionParams: android.net.Uri referrerUri> = r1;

        return;
    }

    public void setRequestDowngrade(boolean)
    {
        android.content.pm.PackageInstaller$SessionParams r0;
        boolean z0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.content.pm.PackageInstaller$SessionParams;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $i2 = r0.<android.content.pm.PackageInstaller$SessionParams: int installFlags>;

        $i3 = $i2 | 128;

        r0.<android.content.pm.PackageInstaller$SessionParams: int installFlags> = $i3;

        goto label2;

     label1:
        $i0 = r0.<android.content.pm.PackageInstaller$SessionParams: int installFlags>;

        $i1 = $i0 & -129;

        r0.<android.content.pm.PackageInstaller$SessionParams: int installFlags> = $i1;

     label2:
        return;
    }

    public void setRequiredInstalledVersionCode(long)
    {
        android.content.pm.PackageInstaller$SessionParams r0;
        long l0;

        r0 := @this: android.content.pm.PackageInstaller$SessionParams;

        l0 := @parameter0: long;

        r0.<android.content.pm.PackageInstaller$SessionParams: long requiredInstalledVersionCode> = l0;

        return;
    }

    public void setSize(long)
    {
        android.content.pm.PackageInstaller$SessionParams r0;
        long l0;

        r0 := @this: android.content.pm.PackageInstaller$SessionParams;

        l0 := @parameter0: long;

        r0.<android.content.pm.PackageInstaller$SessionParams: long sizeBytes> = l0;

        return;
    }

    public void setStaged()
    {
        android.content.pm.PackageInstaller$SessionParams r0;

        r0 := @this: android.content.pm.PackageInstaller$SessionParams;

        r0.<android.content.pm.PackageInstaller$SessionParams: boolean isStaged> = 1;

        return;
    }

    public void setWhitelistedRestrictedPermissions(java.util.Set)
    {
        android.content.pm.PackageInstaller$SessionParams r0;
        java.util.Set r1, r3;
        int $i0, $i1, $i2, $i3;
        java.util.ArrayList $r2, r4;

        r0 := @this: android.content.pm.PackageInstaller$SessionParams;

        r3 := @parameter0: java.util.Set;

        r1 = <android.content.pm.PackageInstaller$SessionParams: java.util.Set RESTRICTED_PERMISSIONS_ALL>;

        if r3 != r1 goto label1;

        $i2 = r0.<android.content.pm.PackageInstaller$SessionParams: int installFlags>;

        $i3 = $i2 | 4194304;

        r0.<android.content.pm.PackageInstaller$SessionParams: int installFlags> = $i3;

        r0.<android.content.pm.PackageInstaller$SessionParams: java.util.List whitelistedRestrictedPermissions> = null;

        goto label4;

     label1:
        $i0 = r0.<android.content.pm.PackageInstaller$SessionParams: int installFlags>;

        $i1 = $i0 & -4194305;

        r0.<android.content.pm.PackageInstaller$SessionParams: int installFlags> = $i1;

        if r3 == null goto label2;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>(java.util.Collection)>(r3);

        r4 = $r2;

        goto label3;

     label2:
        r4 = null;

     label3:
        r0.<android.content.pm.PackageInstaller$SessionParams: java.util.List whitelistedRestrictedPermissions> = r4;

     label4:
        return;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.content.pm.PackageInstaller$SessionParams r0;
        android.os.Parcel r1;
        int i0, $i1, $i2, $i3, $i4, $i6, $i7, $i9;
        android.content.pm.DataLoaderParams r2;
        long $l5, $l8;
        java.lang.String $r3, $r5, $r8, $r9, $r12;
        android.graphics.Bitmap $r4;
        android.net.Uri $r6, $r7;
        java.lang.String[] $r10;
        java.util.List $r11;
        boolean $z0, $z1, $z2;
        android.content.pm.DataLoaderParamsParcel $r13;

        r0 := @this: android.content.pm.PackageInstaller$SessionParams;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $i1 = r0.<android.content.pm.PackageInstaller$SessionParams: int mode>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $i2 = r0.<android.content.pm.PackageInstaller$SessionParams: int installFlags>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i2);

        $i3 = r0.<android.content.pm.PackageInstaller$SessionParams: int installLocation>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i3);

        $i4 = r0.<android.content.pm.PackageInstaller$SessionParams: int installReason>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i4);

        $l5 = r0.<android.content.pm.PackageInstaller$SessionParams: long sizeBytes>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l5);

        $r3 = r0.<android.content.pm.PackageInstaller$SessionParams: java.lang.String appPackageName>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r3);

        $r4 = r0.<android.content.pm.PackageInstaller$SessionParams: android.graphics.Bitmap appIcon>;

        virtualinvoke r1.<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>($r4, i0);

        $r5 = r0.<android.content.pm.PackageInstaller$SessionParams: java.lang.String appLabel>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r5);

        $r6 = r0.<android.content.pm.PackageInstaller$SessionParams: android.net.Uri originatingUri>;

        virtualinvoke r1.<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>($r6, i0);

        $i6 = r0.<android.content.pm.PackageInstaller$SessionParams: int originatingUid>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i6);

        $r7 = r0.<android.content.pm.PackageInstaller$SessionParams: android.net.Uri referrerUri>;

        virtualinvoke r1.<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>($r7, i0);

        $r8 = r0.<android.content.pm.PackageInstaller$SessionParams: java.lang.String abiOverride>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r8);

        $r9 = r0.<android.content.pm.PackageInstaller$SessionParams: java.lang.String volumeUuid>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r9);

        $r10 = r0.<android.content.pm.PackageInstaller$SessionParams: java.lang.String[] grantedRuntimePermissions>;

        virtualinvoke r1.<android.os.Parcel: void writeStringArray(java.lang.String[])>($r10);

        $r11 = r0.<android.content.pm.PackageInstaller$SessionParams: java.util.List whitelistedRestrictedPermissions>;

        virtualinvoke r1.<android.os.Parcel: void writeStringList(java.util.List)>($r11);

        $i7 = r0.<android.content.pm.PackageInstaller$SessionParams: int autoRevokePermissionsMode>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i7);

        $r12 = r0.<android.content.pm.PackageInstaller$SessionParams: java.lang.String installerPackageName>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r12);

        $z0 = r0.<android.content.pm.PackageInstaller$SessionParams: boolean isMultiPackage>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z0);

        $z1 = r0.<android.content.pm.PackageInstaller$SessionParams: boolean isStaged>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z1);

        $z2 = r0.<android.content.pm.PackageInstaller$SessionParams: boolean forceQueryableOverride>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z2);

        $l8 = r0.<android.content.pm.PackageInstaller$SessionParams: long requiredInstalledVersionCode>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l8);

        r2 = r0.<android.content.pm.PackageInstaller$SessionParams: android.content.pm.DataLoaderParams dataLoaderParams>;

        if r2 == null goto label1;

        $r13 = virtualinvoke r2.<android.content.pm.DataLoaderParams: android.content.pm.DataLoaderParamsParcel getData()>();

        virtualinvoke r1.<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>($r13, i0);

        goto label2;

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>(null, i0);

     label2:
        $i9 = r0.<android.content.pm.PackageInstaller$SessionParams: int rollbackDataPolicy>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i9);

        return;
    }
}
