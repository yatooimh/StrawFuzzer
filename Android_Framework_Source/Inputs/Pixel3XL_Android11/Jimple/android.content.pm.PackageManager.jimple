public abstract class android.content.pm.PackageManager extends java.lang.Object
{
    public static final java.lang.String ACTION_REQUEST_PERMISSIONS;
    public static final boolean APPLY_DEFAULT_TO_DEVICE_PROTECTED_STORAGE;
    public static final java.lang.String APP_DETAILS_ACTIVITY_CLASS_NAME;
    public static final boolean APP_ENUMERATION_ENABLED_BY_DEFAULT;
    public static final int CERT_INPUT_RAW_X509;
    public static final int CERT_INPUT_SHA256;
    public static final int COMPONENT_ENABLED_STATE_DEFAULT;
    public static final int COMPONENT_ENABLED_STATE_DISABLED;
    public static final int COMPONENT_ENABLED_STATE_DISABLED_UNTIL_USED;
    public static final int COMPONENT_ENABLED_STATE_DISABLED_USER;
    public static final int COMPONENT_ENABLED_STATE_ENABLED;
    public static final int DELETE_ALL_USERS;
    public static final int DELETE_CHATTY;
    public static final int DELETE_DONT_KILL_APP;
    public static final int DELETE_FAILED_ABORTED;
    public static final int DELETE_FAILED_DEVICE_POLICY_MANAGER;
    public static final int DELETE_FAILED_INTERNAL_ERROR;
    public static final int DELETE_FAILED_OWNER_BLOCKED;
    public static final int DELETE_FAILED_USED_SHARED_LIBRARY;
    public static final int DELETE_FAILED_USER_RESTRICTED;
    public static final int DELETE_KEEP_DATA;
    public static final int DELETE_SUCCEEDED;
    public static final int DELETE_SYSTEM_APP;
    public static final int DONT_KILL_APP;
    public static final java.lang.String EXTRA_FAILURE_EXISTING_PACKAGE;
    public static final java.lang.String EXTRA_FAILURE_EXISTING_PERMISSION;
    public static final java.lang.String EXTRA_INTENT_FILTER_VERIFICATION_HOSTS;
    public static final java.lang.String EXTRA_INTENT_FILTER_VERIFICATION_ID;
    public static final java.lang.String EXTRA_INTENT_FILTER_VERIFICATION_PACKAGE_NAME;
    public static final java.lang.String EXTRA_INTENT_FILTER_VERIFICATION_URI_SCHEME;
    public static final java.lang.String EXTRA_MOVE_ID;
    public static final java.lang.String EXTRA_REQUEST_PERMISSIONS_NAMES;
    public static final java.lang.String EXTRA_REQUEST_PERMISSIONS_RESULTS;
    public static final java.lang.String EXTRA_VERIFICATION_ID;
    public static final java.lang.String EXTRA_VERIFICATION_INSTALLER_PACKAGE;
    public static final java.lang.String EXTRA_VERIFICATION_INSTALLER_UID;
    public static final java.lang.String EXTRA_VERIFICATION_INSTALL_FLAGS;
    public static final java.lang.String EXTRA_VERIFICATION_LONG_VERSION_CODE;
    public static final java.lang.String EXTRA_VERIFICATION_PACKAGE_NAME;
    public static final java.lang.String EXTRA_VERIFICATION_RESULT;
    public static final java.lang.String EXTRA_VERIFICATION_ROOT_HASH;
    public static final java.lang.String EXTRA_VERIFICATION_URI;
    public static final java.lang.String EXTRA_VERIFICATION_VERSION_CODE;
    public static final java.lang.String FEATURE_ACTIVITIES_ON_SECONDARY_DISPLAYS;
    public static final java.lang.String FEATURE_ADOPTABLE_STORAGE;
    public static final java.lang.String FEATURE_APP_ENUMERATION;
    public static final java.lang.String FEATURE_APP_WIDGETS;
    public static final java.lang.String FEATURE_ASSIST_GESTURE;
    public static final java.lang.String FEATURE_AUDIO_LOW_LATENCY;
    public static final java.lang.String FEATURE_AUDIO_OUTPUT;
    public static final java.lang.String FEATURE_AUDIO_PRO;
    public static final java.lang.String FEATURE_AUTOFILL;
    public static final java.lang.String FEATURE_AUTOMOTIVE;
    public static final java.lang.String FEATURE_BACKUP;
    public static final java.lang.String FEATURE_BLUETOOTH;
    public static final java.lang.String FEATURE_BLUETOOTH_LE;
    public static final java.lang.String FEATURE_BROADCAST_RADIO;
    public static final java.lang.String FEATURE_CAMERA;
    public static final java.lang.String FEATURE_CAMERA_ANY;
    public static final java.lang.String FEATURE_CAMERA_AR;
    public static final java.lang.String FEATURE_CAMERA_AUTOFOCUS;
    public static final java.lang.String FEATURE_CAMERA_CAPABILITY_MANUAL_POST_PROCESSING;
    public static final java.lang.String FEATURE_CAMERA_CAPABILITY_MANUAL_SENSOR;
    public static final java.lang.String FEATURE_CAMERA_CAPABILITY_RAW;
    public static final java.lang.String FEATURE_CAMERA_CONCURRENT;
    public static final java.lang.String FEATURE_CAMERA_EXTERNAL;
    public static final java.lang.String FEATURE_CAMERA_FLASH;
    public static final java.lang.String FEATURE_CAMERA_FRONT;
    public static final java.lang.String FEATURE_CAMERA_LEVEL_FULL;
    public static final java.lang.String FEATURE_CANT_SAVE_STATE;
    public static final java.lang.String FEATURE_COMPANION_DEVICE_SETUP;
    public static final java.lang.String FEATURE_CONNECTION_SERVICE;
    public static final java.lang.String FEATURE_CONSUMER_IR;
    public static final java.lang.String FEATURE_CONTEXT_HUB;
    public static final java.lang.String FEATURE_CONTROLS;
    public static final java.lang.String FEATURE_CTS;
    public static final java.lang.String FEATURE_DEVICE_ADMIN;
    public static final java.lang.String FEATURE_DEVICE_ID_ATTESTATION;
    public static final java.lang.String FEATURE_DEVICE_UNIQUE_ATTESTATION;
    public static final java.lang.String FEATURE_EMBEDDED;
    public static final java.lang.String FEATURE_ETHERNET;
    public static final java.lang.String FEATURE_FACE;
    public static final java.lang.String FEATURE_FAKETOUCH;
    public static final java.lang.String FEATURE_FAKETOUCH_MULTITOUCH_DISTINCT;
    public static final java.lang.String FEATURE_FAKETOUCH_MULTITOUCH_JAZZHAND;
    public static final java.lang.String FEATURE_FILE_BASED_ENCRYPTION;
    public static final java.lang.String FEATURE_FINGERPRINT;
    public static final java.lang.String FEATURE_FREEFORM_WINDOW_MANAGEMENT;
    public static final java.lang.String FEATURE_GAMEPAD;
    public static final java.lang.String FEATURE_HDMI_CEC;
    public static final java.lang.String FEATURE_HIFI_SENSORS;
    public static final java.lang.String FEATURE_HOME_SCREEN;
    public static final java.lang.String FEATURE_INCREMENTAL_DELIVERY;
    public static final java.lang.String FEATURE_INPUT_METHODS;
    public static final java.lang.String FEATURE_IPSEC_TUNNELS;
    public static final java.lang.String FEATURE_IRIS;
    public static final java.lang.String FEATURE_LEANBACK;
    public static final java.lang.String FEATURE_LEANBACK_ONLY;
    public static final java.lang.String FEATURE_LIVE_TV;
    public static final java.lang.String FEATURE_LIVE_WALLPAPER;
    public static final java.lang.String FEATURE_LOCATION;
    public static final java.lang.String FEATURE_LOCATION_GPS;
    public static final java.lang.String FEATURE_LOCATION_NETWORK;
    public static final java.lang.String FEATURE_LOWPAN;
    public static final java.lang.String FEATURE_MANAGED_PROFILES;
    public static final java.lang.String FEATURE_MANAGED_USERS;
    public static final java.lang.String FEATURE_MICROPHONE;
    public static final java.lang.String FEATURE_MIDI;
    public static final java.lang.String FEATURE_NFC;
    public static final java.lang.String FEATURE_NFC_ANY;
    public static final java.lang.String FEATURE_NFC_BEAM;
    public static final java.lang.String FEATURE_NFC_HCE;
    public static final java.lang.String FEATURE_NFC_HOST_CARD_EMULATION;
    public static final java.lang.String FEATURE_NFC_HOST_CARD_EMULATION_NFCF;
    public static final java.lang.String FEATURE_NFC_OFF_HOST_CARD_EMULATION_ESE;
    public static final java.lang.String FEATURE_NFC_OFF_HOST_CARD_EMULATION_UICC;
    public static final java.lang.String FEATURE_OPENGLES_EXTENSION_PACK;
    public static final java.lang.String FEATURE_PC;
    public static final java.lang.String FEATURE_PICTURE_IN_PICTURE;
    public static final java.lang.String FEATURE_PRINTING;
    public static final java.lang.String FEATURE_RAM_LOW;
    public static final java.lang.String FEATURE_RAM_NORMAL;
    public static final java.lang.String FEATURE_REBOOT_ESCROW;
    public static final java.lang.String FEATURE_SCREEN_LANDSCAPE;
    public static final java.lang.String FEATURE_SCREEN_PORTRAIT;
    public static final java.lang.String FEATURE_SECURELY_REMOVES_USERS;
    public static final java.lang.String FEATURE_SECURE_LOCK_SCREEN;
    public static final java.lang.String FEATURE_SENSOR_ACCELEROMETER;
    public static final java.lang.String FEATURE_SENSOR_AMBIENT_TEMPERATURE;
    public static final java.lang.String FEATURE_SENSOR_BAROMETER;
    public static final java.lang.String FEATURE_SENSOR_COMPASS;
    public static final java.lang.String FEATURE_SENSOR_GYROSCOPE;
    public static final java.lang.String FEATURE_SENSOR_HEART_RATE;
    public static final java.lang.String FEATURE_SENSOR_HEART_RATE_ECG;
    public static final java.lang.String FEATURE_SENSOR_HINGE_ANGLE;
    public static final java.lang.String FEATURE_SENSOR_LIGHT;
    public static final java.lang.String FEATURE_SENSOR_PROXIMITY;
    public static final java.lang.String FEATURE_SENSOR_RELATIVE_HUMIDITY;
    public static final java.lang.String FEATURE_SENSOR_STEP_COUNTER;
    public static final java.lang.String FEATURE_SENSOR_STEP_DETECTOR;
    public static final java.lang.String FEATURE_SE_OMAPI_ESE;
    public static final java.lang.String FEATURE_SE_OMAPI_SD;
    public static final java.lang.String FEATURE_SE_OMAPI_UICC;
    public static final java.lang.String FEATURE_SIP;
    public static final java.lang.String FEATURE_SIP_VOIP;
    public static final java.lang.String FEATURE_SLICES_DISABLED;
    public static final java.lang.String FEATURE_STRONGBOX_KEYSTORE;
    public static final java.lang.String FEATURE_TELEPHONY;
    public static final java.lang.String FEATURE_TELEPHONY_CARRIERLOCK;
    public static final java.lang.String FEATURE_TELEPHONY_CDMA;
    public static final java.lang.String FEATURE_TELEPHONY_EUICC;
    public static final java.lang.String FEATURE_TELEPHONY_GSM;
    public static final java.lang.String FEATURE_TELEPHONY_IMS;
    public static final java.lang.String FEATURE_TELEPHONY_MBMS;
    public static final java.lang.String FEATURE_TELEVISION;
    public static final java.lang.String FEATURE_TOUCHSCREEN;
    public static final java.lang.String FEATURE_TOUCHSCREEN_MULTITOUCH;
    public static final java.lang.String FEATURE_TOUCHSCREEN_MULTITOUCH_DISTINCT;
    public static final java.lang.String FEATURE_TOUCHSCREEN_MULTITOUCH_JAZZHAND;
    public static final java.lang.String FEATURE_TUNER;
    public static final java.lang.String FEATURE_USB_ACCESSORY;
    public static final java.lang.String FEATURE_USB_HOST;
    public static final java.lang.String FEATURE_VERIFIED_BOOT;
    public static final java.lang.String FEATURE_VOICE_RECOGNIZERS;
    public static final java.lang.String FEATURE_VR_HEADTRACKING;
    public static final java.lang.String FEATURE_VR_MODE;
    public static final java.lang.String FEATURE_VR_MODE_HIGH_PERFORMANCE;
    public static final java.lang.String FEATURE_VULKAN_DEQP_LEVEL;
    public static final java.lang.String FEATURE_VULKAN_HARDWARE_COMPUTE;
    public static final java.lang.String FEATURE_VULKAN_HARDWARE_LEVEL;
    public static final java.lang.String FEATURE_VULKAN_HARDWARE_VERSION;
    public static final java.lang.String FEATURE_WATCH;
    public static final java.lang.String FEATURE_WEBVIEW;
    public static final java.lang.String FEATURE_WIFI;
    public static final java.lang.String FEATURE_WIFI_AWARE;
    public static final java.lang.String FEATURE_WIFI_DIRECT;
    public static final java.lang.String FEATURE_WIFI_PASSPOINT;
    public static final java.lang.String FEATURE_WIFI_RTT;
    public static final long FILTER_APPLICATION_QUERY;
    public static final int FLAGS_PERMISSION_RESERVED_PERMISSION_CONTROLLER;
    public static final int FLAGS_PERMISSION_RESTRICTION_ANY_EXEMPT;
    public static final int FLAG_PERMISSION_APPLY_RESTRICTION;
    public static final int FLAG_PERMISSION_AUTO_REVOKED;
    public static final int FLAG_PERMISSION_GRANTED_BY_DEFAULT;
    public static final int FLAG_PERMISSION_GRANTED_BY_ROLE;
    public static final int FLAG_PERMISSION_ONE_TIME;
    public static final int FLAG_PERMISSION_POLICY_FIXED;
    public static final int FLAG_PERMISSION_RESTRICTION_INSTALLER_EXEMPT;
    public static final int FLAG_PERMISSION_RESTRICTION_SYSTEM_EXEMPT;
    public static final int FLAG_PERMISSION_RESTRICTION_UPGRADE_EXEMPT;
    public static final int FLAG_PERMISSION_REVIEW_REQUIRED;
    public static final int FLAG_PERMISSION_REVOKED_COMPAT;
    public static final int FLAG_PERMISSION_REVOKE_ON_UPGRADE;
    public static final int FLAG_PERMISSION_REVOKE_WHEN_REQUESTED;
    public static final int FLAG_PERMISSION_SYSTEM_FIXED;
    public static final int FLAG_PERMISSION_USER_FIXED;
    public static final int FLAG_PERMISSION_USER_SENSITIVE_WHEN_DENIED;
    public static final int FLAG_PERMISSION_USER_SENSITIVE_WHEN_GRANTED;
    public static final int FLAG_PERMISSION_USER_SET;
    public static final int FLAG_PERMISSION_WHITELIST_INSTALLER;
    public static final int FLAG_PERMISSION_WHITELIST_SYSTEM;
    public static final int FLAG_PERMISSION_WHITELIST_UPGRADE;
    public static final int GET_ACTIVITIES;
    public static final int GET_CONFIGURATIONS;
    public static final int GET_DISABLED_COMPONENTS;
    public static final int GET_DISABLED_UNTIL_USED_COMPONENTS;
    public static final int GET_GIDS;
    public static final int GET_INSTRUMENTATION;
    public static final int GET_INTENT_FILTERS;
    public static final int GET_META_DATA;
    public static final int GET_PERMISSIONS;
    public static final int GET_PROVIDERS;
    public static final int GET_RECEIVERS;
    public static final int GET_RESOLVED_FILTER;
    public static final int GET_SERVICES;
    public static final int GET_SHARED_LIBRARY_FILES;
    public static final int GET_SIGNATURES;
    public static final int GET_SIGNING_CERTIFICATES;
    public static final int GET_UNINSTALLED_PACKAGES;
    public static final int GET_URI_PERMISSION_PATTERNS;
    public static final int INSTALL_ALLOCATE_AGGRESSIVE;
    public static final int INSTALL_ALLOW_DOWNGRADE;
    public static final int INSTALL_ALLOW_TEST;
    public static final int INSTALL_ALL_USERS;
    public static final int INSTALL_ALL_WHITELIST_RESTRICTED_PERMISSIONS;
    public static final int INSTALL_APEX;
    public static final int INSTALL_DISABLE_VERIFICATION;
    public static final int INSTALL_DONT_KILL_APP;
    public static final int INSTALL_DRY_RUN;
    public static final int INSTALL_ENABLE_ROLLBACK;
    public static final int INSTALL_FAILED_ABORTED;
    public static final int INSTALL_FAILED_ALREADY_EXISTS;
    public static final int INSTALL_FAILED_BAD_DEX_METADATA;
    public static final int INSTALL_FAILED_BAD_SIGNATURE;
    public static final int INSTALL_FAILED_CONFLICTING_PROVIDER;
    public static final int INSTALL_FAILED_CONTAINER_ERROR;
    public static final int INSTALL_FAILED_CPU_ABI_INCOMPATIBLE;
    public static final int INSTALL_FAILED_DEXOPT;
    public static final int INSTALL_FAILED_DUPLICATE_PACKAGE;
    public static final int INSTALL_FAILED_DUPLICATE_PERMISSION;
    public static final int INSTALL_FAILED_INSTANT_APP_INVALID;
    public static final int INSTALL_FAILED_INSUFFICIENT_STORAGE;
    public static final int INSTALL_FAILED_INTERNAL_ERROR;
    public static final int INSTALL_FAILED_INVALID_APK;
    public static final int INSTALL_FAILED_INVALID_INSTALL_LOCATION;
    public static final int INSTALL_FAILED_INVALID_URI;
    public static final int INSTALL_FAILED_MEDIA_UNAVAILABLE;
    public static final int INSTALL_FAILED_MISSING_FEATURE;
    public static final int INSTALL_FAILED_MISSING_SHARED_LIBRARY;
    public static final int INSTALL_FAILED_MISSING_SPLIT;
    public static final int INSTALL_FAILED_MULTIPACKAGE_INCONSISTENCY;
    public static final int INSTALL_FAILED_NEWER_SDK;
    public static final int INSTALL_FAILED_NO_MATCHING_ABIS;
    public static final int INSTALL_FAILED_NO_SHARED_USER;
    public static final int INSTALL_FAILED_OLDER_SDK;
    public static final int INSTALL_FAILED_OTHER_STAGED_SESSION_IN_PROGRESS;
    public static final int INSTALL_FAILED_PACKAGE_CHANGED;
    public static final int INSTALL_FAILED_PERMISSION_MODEL_DOWNGRADE;
    public static final int INSTALL_FAILED_PROCESS_NOT_DEFINED;
    public static final int INSTALL_FAILED_REPLACE_COULDNT_DELETE;
    public static final int INSTALL_FAILED_SANDBOX_VERSION_DOWNGRADE;
    public static final int INSTALL_FAILED_SHARED_USER_INCOMPATIBLE;
    public static final int INSTALL_FAILED_TEST_ONLY;
    public static final int INSTALL_FAILED_UID_CHANGED;
    public static final int INSTALL_FAILED_UPDATE_INCOMPATIBLE;
    public static final int INSTALL_FAILED_USER_RESTRICTED;
    public static final int INSTALL_FAILED_VERIFICATION_FAILURE;
    public static final int INSTALL_FAILED_VERIFICATION_TIMEOUT;
    public static final int INSTALL_FAILED_VERSION_DOWNGRADE;
    public static final int INSTALL_FAILED_WRONG_INSTALLED_VERSION;
    public static final int INSTALL_FORCE_PERMISSION_PROMPT;
    public static final int INSTALL_FORCE_VOLUME_UUID;
    public static final int INSTALL_FROM_ADB;
    public static final int INSTALL_FULL_APP;
    public static final int INSTALL_GRANT_RUNTIME_PERMISSIONS;
    public static final int INSTALL_INSTANT_APP;
    public static final int INSTALL_INTERNAL;
    public static final int INSTALL_PARSE_FAILED_BAD_MANIFEST;
    public static final int INSTALL_PARSE_FAILED_BAD_PACKAGE_NAME;
    public static final int INSTALL_PARSE_FAILED_BAD_SHARED_USER_ID;
    public static final int INSTALL_PARSE_FAILED_CERTIFICATE_ENCODING;
    public static final int INSTALL_PARSE_FAILED_INCONSISTENT_CERTIFICATES;
    public static final int INSTALL_PARSE_FAILED_MANIFEST_EMPTY;
    public static final int INSTALL_PARSE_FAILED_MANIFEST_MALFORMED;
    public static final int INSTALL_PARSE_FAILED_NOT_APK;
    public static final int INSTALL_PARSE_FAILED_NO_CERTIFICATES;
    public static final int INSTALL_PARSE_FAILED_ONLY_COREAPP_ALLOWED;
    public static final int INSTALL_PARSE_FAILED_RESOURCES_ARSC_COMPRESSED;
    public static final int INSTALL_PARSE_FAILED_SKIPPED;
    public static final int INSTALL_PARSE_FAILED_UNEXPECTED_EXCEPTION;
    public static final int INSTALL_REASON_DEVICE_RESTORE;
    public static final int INSTALL_REASON_DEVICE_SETUP;
    public static final int INSTALL_REASON_POLICY;
    public static final int INSTALL_REASON_ROLLBACK;
    public static final int INSTALL_REASON_UNKNOWN;
    public static final int INSTALL_REASON_USER;
    public static final int INSTALL_REPLACE_EXISTING;
    public static final int INSTALL_REQUEST_DOWNGRADE;
    public static final int INSTALL_STAGED;
    public static final int INSTALL_SUCCEEDED;
    public static final int INSTALL_UNKNOWN;
    public static final int INSTALL_VIRTUAL_PRELOAD;
    public static final int INTENT_FILTER_DOMAIN_VERIFICATION_STATUS_ALWAYS;
    public static final int INTENT_FILTER_DOMAIN_VERIFICATION_STATUS_ALWAYS_ASK;
    public static final int INTENT_FILTER_DOMAIN_VERIFICATION_STATUS_ASK;
    public static final int INTENT_FILTER_DOMAIN_VERIFICATION_STATUS_NEVER;
    public static final int INTENT_FILTER_DOMAIN_VERIFICATION_STATUS_UNDEFINED;
    public static final int INTENT_FILTER_VERIFICATION_FAILURE;
    public static final int INTENT_FILTER_VERIFICATION_SUCCESS;
    public static final int MASK_PERMISSION_FLAGS;
    public static final int MASK_PERMISSION_FLAGS_ALL;
    public static final int MATCH_ALL;
    public static final int MATCH_ANY_USER;
    public static final int MATCH_APEX;
    public static final int MATCH_DEBUG_TRIAGED_MISSING;
    public static final int MATCH_DEFAULT_ONLY;
    public static final int MATCH_DIRECT_BOOT_AUTO;
    public static final int MATCH_DIRECT_BOOT_AWARE;
    public static final int MATCH_DIRECT_BOOT_UNAWARE;
    public static final int MATCH_DISABLED_COMPONENTS;
    public static final int MATCH_DISABLED_UNTIL_USED_COMPONENTS;
    public static final int MATCH_EXPLICITLY_VISIBLE_ONLY;
    public static final int MATCH_FACTORY_ONLY;
    public static final int MATCH_HIDDEN_UNTIL_INSTALLED_COMPONENTS;
    public static final int MATCH_INSTANT;
    public static final int MATCH_KNOWN_PACKAGES;
    public static final int MATCH_STATIC_SHARED_LIBRARIES;
    public static final int MATCH_SYSTEM_ONLY;
    public static final int MATCH_UNINSTALLED_PACKAGES;
    public static final int MATCH_VISIBLE_TO_INSTANT_APP_ONLY;
    public static final long MAXIMUM_VERIFICATION_TIMEOUT;
    public static final int MODULE_APEX_NAME;
    public static final int MOVE_EXTERNAL_MEDIA;
    public static final int MOVE_FAILED_3RD_PARTY_NOT_ALLOWED_ON_INTERNAL;
    public static final int MOVE_FAILED_DEVICE_ADMIN;
    public static final int MOVE_FAILED_DOESNT_EXIST;
    public static final int MOVE_FAILED_INSUFFICIENT_STORAGE;
    public static final int MOVE_FAILED_INTERNAL_ERROR;
    public static final int MOVE_FAILED_INVALID_LOCATION;
    public static final int MOVE_FAILED_LOCKED_USER;
    public static final int MOVE_FAILED_OPERATION_PENDING;
    public static final int MOVE_FAILED_SYSTEM_PACKAGE;
    public static final int MOVE_INTERNAL;
    public static final int MOVE_SUCCEEDED;
    public static final int NOTIFY_PACKAGE_USE_ACTIVITY;
    public static final int NOTIFY_PACKAGE_USE_BACKUP;
    public static final int NOTIFY_PACKAGE_USE_BROADCAST_RECEIVER;
    public static final int NOTIFY_PACKAGE_USE_CONTENT_PROVIDER;
    public static final int NOTIFY_PACKAGE_USE_CROSS_PACKAGE;
    public static final int NOTIFY_PACKAGE_USE_FOREGROUND_SERVICE;
    public static final int NOTIFY_PACKAGE_USE_INSTRUMENTATION;
    public static final int NOTIFY_PACKAGE_USE_REASONS_COUNT;
    public static final int NOTIFY_PACKAGE_USE_SERVICE;
    public static final int NO_NATIVE_LIBRARIES;
    public static final int ONLY_IF_NO_MATCH_FOUND;
    public static final int PERMISSION_DENIED;
    public static final int PERMISSION_GRANTED;
    public static final int RESTRICTION_HIDE_FROM_SUGGESTIONS;
    public static final int RESTRICTION_HIDE_NOTIFICATIONS;
    public static final int RESTRICTION_NONE;
    public static final int SIGNATURE_FIRST_NOT_SIGNED;
    public static final int SIGNATURE_MATCH;
    public static final int SIGNATURE_NEITHER_SIGNED;
    public static final int SIGNATURE_NO_MATCH;
    public static final int SIGNATURE_SECOND_NOT_SIGNED;
    public static final int SIGNATURE_UNKNOWN_PACKAGE;
    public static final int SKIP_CURRENT_PROFILE;
    public static final int SYNCHRONOUS;
    public static final int SYSTEM_APP_STATE_HIDDEN_UNTIL_INSTALLED_HIDDEN;
    public static final int SYSTEM_APP_STATE_HIDDEN_UNTIL_INSTALLED_VISIBLE;
    public static final int SYSTEM_APP_STATE_INSTALLED;
    public static final int SYSTEM_APP_STATE_UNINSTALLED;
    public static final java.lang.String SYSTEM_SHARED_LIBRARY_SERVICES;
    public static final java.lang.String SYSTEM_SHARED_LIBRARY_SHARED;
    private static final java.lang.String TAG;
    public static final int UNINSTALL_REASON_UNKNOWN;
    public static final int UNINSTALL_REASON_USER_TYPE;
    public static final int VERIFICATION_ALLOW;
    public static final int VERIFICATION_ALLOW_WITHOUT_SUFFICIENT;
    public static final int VERIFICATION_REJECT;
    public static final int VERSION_CODE_HIGHEST;
    private static final android.app.PropertyInvalidatedCache sApplicationInfoCache;
    private static final android.app.PropertyInvalidatedCache$AutoCorker sCacheAutoCorker;
    private static final android.app.PropertyInvalidatedCache sPackageInfoCache;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        android.content.pm.PackageManager$1 $r2;
        android.app.PropertyInvalidatedCache$AutoCorker $r3;
        android.content.pm.PackageManager$2 $r4;

        <android.content.pm.PackageManager: int VERSION_CODE_HIGHEST> = -1;

        <android.content.pm.PackageManager: int VERIFICATION_REJECT> = -1;

        <android.content.pm.PackageManager: int VERIFICATION_ALLOW_WITHOUT_SUFFICIENT> = 2;

        <android.content.pm.PackageManager: int VERIFICATION_ALLOW> = 1;

        <android.content.pm.PackageManager: int UNINSTALL_REASON_USER_TYPE> = 1;

        <android.content.pm.PackageManager: int UNINSTALL_REASON_UNKNOWN> = 0;

        <android.content.pm.PackageManager: java.lang.String TAG> = "PackageManager";

        <android.content.pm.PackageManager: java.lang.String SYSTEM_SHARED_LIBRARY_SHARED> = "android.ext.shared";

        <android.content.pm.PackageManager: java.lang.String SYSTEM_SHARED_LIBRARY_SERVICES> = "android.ext.services";

        <android.content.pm.PackageManager: int SYSTEM_APP_STATE_UNINSTALLED> = 3;

        <android.content.pm.PackageManager: int SYSTEM_APP_STATE_INSTALLED> = 2;

        <android.content.pm.PackageManager: int SYSTEM_APP_STATE_HIDDEN_UNTIL_INSTALLED_VISIBLE> = 1;

        <android.content.pm.PackageManager: int SYSTEM_APP_STATE_HIDDEN_UNTIL_INSTALLED_HIDDEN> = 0;

        <android.content.pm.PackageManager: int SYNCHRONOUS> = 2;

        <android.content.pm.PackageManager: int SKIP_CURRENT_PROFILE> = 2;

        <android.content.pm.PackageManager: int SIGNATURE_UNKNOWN_PACKAGE> = -4;

        <android.content.pm.PackageManager: int SIGNATURE_SECOND_NOT_SIGNED> = -2;

        <android.content.pm.PackageManager: int SIGNATURE_NO_MATCH> = -3;

        <android.content.pm.PackageManager: int SIGNATURE_NEITHER_SIGNED> = 1;

        <android.content.pm.PackageManager: int SIGNATURE_MATCH> = 0;

        <android.content.pm.PackageManager: int SIGNATURE_FIRST_NOT_SIGNED> = -1;

        <android.content.pm.PackageManager: int RESTRICTION_NONE> = 0;

        <android.content.pm.PackageManager: int RESTRICTION_HIDE_NOTIFICATIONS> = 2;

        <android.content.pm.PackageManager: int RESTRICTION_HIDE_FROM_SUGGESTIONS> = 1;

        <android.content.pm.PackageManager: int PERMISSION_GRANTED> = 0;

        <android.content.pm.PackageManager: int PERMISSION_DENIED> = -1;

        <android.content.pm.PackageManager: int ONLY_IF_NO_MATCH_FOUND> = 4;

        <android.content.pm.PackageManager: int NO_NATIVE_LIBRARIES> = -114;

        <android.content.pm.PackageManager: int NOTIFY_PACKAGE_USE_SERVICE> = 1;

        <android.content.pm.PackageManager: int NOTIFY_PACKAGE_USE_REASONS_COUNT> = 8;

        <android.content.pm.PackageManager: int NOTIFY_PACKAGE_USE_INSTRUMENTATION> = 7;

        <android.content.pm.PackageManager: int NOTIFY_PACKAGE_USE_FOREGROUND_SERVICE> = 2;

        <android.content.pm.PackageManager: int NOTIFY_PACKAGE_USE_CROSS_PACKAGE> = 6;

        <android.content.pm.PackageManager: int NOTIFY_PACKAGE_USE_CONTENT_PROVIDER> = 4;

        <android.content.pm.PackageManager: int NOTIFY_PACKAGE_USE_BROADCAST_RECEIVER> = 3;

        <android.content.pm.PackageManager: int NOTIFY_PACKAGE_USE_BACKUP> = 5;

        <android.content.pm.PackageManager: int NOTIFY_PACKAGE_USE_ACTIVITY> = 0;

        <android.content.pm.PackageManager: int MOVE_SUCCEEDED> = -100;

        <android.content.pm.PackageManager: int MOVE_INTERNAL> = 1;

        <android.content.pm.PackageManager: int MOVE_FAILED_SYSTEM_PACKAGE> = -3;

        <android.content.pm.PackageManager: int MOVE_FAILED_OPERATION_PENDING> = -7;

        <android.content.pm.PackageManager: int MOVE_FAILED_LOCKED_USER> = -10;

        <android.content.pm.PackageManager: int MOVE_FAILED_INVALID_LOCATION> = -5;

        <android.content.pm.PackageManager: int MOVE_FAILED_INTERNAL_ERROR> = -6;

        <android.content.pm.PackageManager: int MOVE_FAILED_INSUFFICIENT_STORAGE> = -1;

        <android.content.pm.PackageManager: int MOVE_FAILED_DOESNT_EXIST> = -2;

        <android.content.pm.PackageManager: int MOVE_FAILED_DEVICE_ADMIN> = -8;

        <android.content.pm.PackageManager: int MOVE_FAILED_3RD_PARTY_NOT_ALLOWED_ON_INTERNAL> = -9;

        <android.content.pm.PackageManager: int MOVE_EXTERNAL_MEDIA> = 2;

        <android.content.pm.PackageManager: int MODULE_APEX_NAME> = 1;

        <android.content.pm.PackageManager: long MAXIMUM_VERIFICATION_TIMEOUT> = 3600000L;

        <android.content.pm.PackageManager: int MATCH_VISIBLE_TO_INSTANT_APP_ONLY> = 16777216;

        <android.content.pm.PackageManager: int MATCH_UNINSTALLED_PACKAGES> = 8192;

        <android.content.pm.PackageManager: int MATCH_SYSTEM_ONLY> = 1048576;

        <android.content.pm.PackageManager: int MATCH_STATIC_SHARED_LIBRARIES> = 67108864;

        <android.content.pm.PackageManager: int MATCH_KNOWN_PACKAGES> = 4202496;

        <android.content.pm.PackageManager: int MATCH_INSTANT> = 8388608;

        <android.content.pm.PackageManager: int MATCH_HIDDEN_UNTIL_INSTALLED_COMPONENTS> = 536870912;

        <android.content.pm.PackageManager: int MATCH_FACTORY_ONLY> = 2097152;

        <android.content.pm.PackageManager: int MATCH_EXPLICITLY_VISIBLE_ONLY> = 33554432;

        <android.content.pm.PackageManager: int MATCH_DISABLED_UNTIL_USED_COMPONENTS> = 32768;

        <android.content.pm.PackageManager: int MATCH_DISABLED_COMPONENTS> = 512;

        <android.content.pm.PackageManager: int MATCH_DIRECT_BOOT_UNAWARE> = 262144;

        <android.content.pm.PackageManager: int MATCH_DIRECT_BOOT_AWARE> = 524288;

        <android.content.pm.PackageManager: int MATCH_DIRECT_BOOT_AUTO> = 268435456;

        <android.content.pm.PackageManager: int MATCH_DEFAULT_ONLY> = 65536;

        <android.content.pm.PackageManager: int MATCH_DEBUG_TRIAGED_MISSING> = 268435456;

        <android.content.pm.PackageManager: int MATCH_APEX> = 1073741824;

        <android.content.pm.PackageManager: int MATCH_ANY_USER> = 4194304;

        <android.content.pm.PackageManager: int MATCH_ALL> = 131072;

        <android.content.pm.PackageManager: int MASK_PERMISSION_FLAGS_ALL> = 261119;

        <android.content.pm.PackageManager: int MASK_PERMISSION_FLAGS> = 255;

        <android.content.pm.PackageManager: int INTENT_FILTER_VERIFICATION_SUCCESS> = 1;

        <android.content.pm.PackageManager: int INTENT_FILTER_VERIFICATION_FAILURE> = -1;

        <android.content.pm.PackageManager: int INTENT_FILTER_DOMAIN_VERIFICATION_STATUS_UNDEFINED> = 0;

        <android.content.pm.PackageManager: int INTENT_FILTER_DOMAIN_VERIFICATION_STATUS_NEVER> = 3;

        <android.content.pm.PackageManager: int INTENT_FILTER_DOMAIN_VERIFICATION_STATUS_ASK> = 1;

        <android.content.pm.PackageManager: int INTENT_FILTER_DOMAIN_VERIFICATION_STATUS_ALWAYS_ASK> = 4;

        <android.content.pm.PackageManager: int INTENT_FILTER_DOMAIN_VERIFICATION_STATUS_ALWAYS> = 2;

        <android.content.pm.PackageManager: int INSTALL_VIRTUAL_PRELOAD> = 65536;

        <android.content.pm.PackageManager: int INSTALL_UNKNOWN> = 0;

        <android.content.pm.PackageManager: int INSTALL_SUCCEEDED> = 1;

        <android.content.pm.PackageManager: int INSTALL_STAGED> = 2097152;

        <android.content.pm.PackageManager: int INSTALL_REQUEST_DOWNGRADE> = 128;

        <android.content.pm.PackageManager: int INSTALL_REPLACE_EXISTING> = 2;

        <android.content.pm.PackageManager: int INSTALL_REASON_USER> = 4;

        <android.content.pm.PackageManager: int INSTALL_REASON_UNKNOWN> = 0;

        <android.content.pm.PackageManager: int INSTALL_REASON_ROLLBACK> = 5;

        <android.content.pm.PackageManager: int INSTALL_REASON_POLICY> = 1;

        <android.content.pm.PackageManager: int INSTALL_REASON_DEVICE_SETUP> = 3;

        <android.content.pm.PackageManager: int INSTALL_REASON_DEVICE_RESTORE> = 2;

        <android.content.pm.PackageManager: int INSTALL_PARSE_FAILED_UNEXPECTED_EXCEPTION> = -102;

        <android.content.pm.PackageManager: int INSTALL_PARSE_FAILED_SKIPPED> = -125;

        <android.content.pm.PackageManager: int INSTALL_PARSE_FAILED_RESOURCES_ARSC_COMPRESSED> = -124;

        <android.content.pm.PackageManager: int INSTALL_PARSE_FAILED_ONLY_COREAPP_ALLOWED> = -123;

        <android.content.pm.PackageManager: int INSTALL_PARSE_FAILED_NO_CERTIFICATES> = -103;

        <android.content.pm.PackageManager: int INSTALL_PARSE_FAILED_NOT_APK> = -100;

        <android.content.pm.PackageManager: int INSTALL_PARSE_FAILED_MANIFEST_MALFORMED> = -108;

        <android.content.pm.PackageManager: int INSTALL_PARSE_FAILED_MANIFEST_EMPTY> = -109;

        <android.content.pm.PackageManager: int INSTALL_PARSE_FAILED_INCONSISTENT_CERTIFICATES> = -104;

        <android.content.pm.PackageManager: int INSTALL_PARSE_FAILED_CERTIFICATE_ENCODING> = -105;

        <android.content.pm.PackageManager: int INSTALL_PARSE_FAILED_BAD_SHARED_USER_ID> = -107;

        <android.content.pm.PackageManager: int INSTALL_PARSE_FAILED_BAD_PACKAGE_NAME> = -106;

        <android.content.pm.PackageManager: int INSTALL_PARSE_FAILED_BAD_MANIFEST> = -101;

        <android.content.pm.PackageManager: int INSTALL_INTERNAL> = 16;

        <android.content.pm.PackageManager: int INSTALL_INSTANT_APP> = 2048;

        <android.content.pm.PackageManager: int INSTALL_GRANT_RUNTIME_PERMISSIONS> = 256;

        <android.content.pm.PackageManager: int INSTALL_FULL_APP> = 16384;

        <android.content.pm.PackageManager: int INSTALL_FROM_ADB> = 32;

        <android.content.pm.PackageManager: int INSTALL_FORCE_VOLUME_UUID> = 512;

        <android.content.pm.PackageManager: int INSTALL_FORCE_PERMISSION_PROMPT> = 1024;

        <android.content.pm.PackageManager: int INSTALL_FAILED_WRONG_INSTALLED_VERSION> = -121;

        <android.content.pm.PackageManager: int INSTALL_FAILED_VERSION_DOWNGRADE> = -25;

        <android.content.pm.PackageManager: int INSTALL_FAILED_VERIFICATION_TIMEOUT> = -21;

        <android.content.pm.PackageManager: int INSTALL_FAILED_VERIFICATION_FAILURE> = -22;

        <android.content.pm.PackageManager: int INSTALL_FAILED_USER_RESTRICTED> = -111;

        <android.content.pm.PackageManager: int INSTALL_FAILED_UPDATE_INCOMPATIBLE> = -7;

        <android.content.pm.PackageManager: int INSTALL_FAILED_UID_CHANGED> = -24;

        <android.content.pm.PackageManager: int INSTALL_FAILED_TEST_ONLY> = -15;

        <android.content.pm.PackageManager: int INSTALL_FAILED_SHARED_USER_INCOMPATIBLE> = -8;

        <android.content.pm.PackageManager: int INSTALL_FAILED_SANDBOX_VERSION_DOWNGRADE> = -27;

        <android.content.pm.PackageManager: int INSTALL_FAILED_REPLACE_COULDNT_DELETE> = -10;

        <android.content.pm.PackageManager: int INSTALL_FAILED_PROCESS_NOT_DEFINED> = -122;

        <android.content.pm.PackageManager: int INSTALL_FAILED_PERMISSION_MODEL_DOWNGRADE> = -26;

        <android.content.pm.PackageManager: int INSTALL_FAILED_PACKAGE_CHANGED> = -23;

        <android.content.pm.PackageManager: int INSTALL_FAILED_OTHER_STAGED_SESSION_IN_PROGRESS> = -119;

        <android.content.pm.PackageManager: int INSTALL_FAILED_OLDER_SDK> = -12;

        <android.content.pm.PackageManager: int INSTALL_FAILED_NO_SHARED_USER> = -6;

        <android.content.pm.PackageManager: int INSTALL_FAILED_NO_MATCHING_ABIS> = -113;

        <android.content.pm.PackageManager: int INSTALL_FAILED_NEWER_SDK> = -14;

        <android.content.pm.PackageManager: int INSTALL_FAILED_MULTIPACKAGE_INCONSISTENCY> = -120;

        <android.content.pm.PackageManager: int INSTALL_FAILED_MISSING_SPLIT> = -28;

        <android.content.pm.PackageManager: int INSTALL_FAILED_MISSING_SHARED_LIBRARY> = -9;

        <android.content.pm.PackageManager: int INSTALL_FAILED_MISSING_FEATURE> = -17;

        <android.content.pm.PackageManager: int INSTALL_FAILED_MEDIA_UNAVAILABLE> = -20;

        <android.content.pm.PackageManager: int INSTALL_FAILED_INVALID_URI> = -3;

        <android.content.pm.PackageManager: int INSTALL_FAILED_INVALID_INSTALL_LOCATION> = -19;

        <android.content.pm.PackageManager: int INSTALL_FAILED_INVALID_APK> = -2;

        <android.content.pm.PackageManager: int INSTALL_FAILED_INTERNAL_ERROR> = -110;

        <android.content.pm.PackageManager: int INSTALL_FAILED_INSUFFICIENT_STORAGE> = -4;

        <android.content.pm.PackageManager: int INSTALL_FAILED_INSTANT_APP_INVALID> = -116;

        <android.content.pm.PackageManager: int INSTALL_FAILED_DUPLICATE_PERMISSION> = -112;

        <android.content.pm.PackageManager: int INSTALL_FAILED_DUPLICATE_PACKAGE> = -5;

        <android.content.pm.PackageManager: int INSTALL_FAILED_DEXOPT> = -11;

        <android.content.pm.PackageManager: int INSTALL_FAILED_CPU_ABI_INCOMPATIBLE> = -16;

        <android.content.pm.PackageManager: int INSTALL_FAILED_CONTAINER_ERROR> = -18;

        <android.content.pm.PackageManager: int INSTALL_FAILED_CONFLICTING_PROVIDER> = -13;

        <android.content.pm.PackageManager: int INSTALL_FAILED_BAD_SIGNATURE> = -118;

        <android.content.pm.PackageManager: int INSTALL_FAILED_BAD_DEX_METADATA> = -117;

        <android.content.pm.PackageManager: int INSTALL_FAILED_ALREADY_EXISTS> = -1;

        <android.content.pm.PackageManager: int INSTALL_FAILED_ABORTED> = -115;

        <android.content.pm.PackageManager: int INSTALL_ENABLE_ROLLBACK> = 262144;

        <android.content.pm.PackageManager: int INSTALL_DRY_RUN> = 8388608;

        <android.content.pm.PackageManager: int INSTALL_DONT_KILL_APP> = 4096;

        <android.content.pm.PackageManager: int INSTALL_DISABLE_VERIFICATION> = 524288;

        <android.content.pm.PackageManager: int INSTALL_APEX> = 131072;

        <android.content.pm.PackageManager: int INSTALL_ALL_WHITELIST_RESTRICTED_PERMISSIONS> = 4194304;

        <android.content.pm.PackageManager: int INSTALL_ALL_USERS> = 64;

        <android.content.pm.PackageManager: int INSTALL_ALLOW_TEST> = 4;

        <android.content.pm.PackageManager: int INSTALL_ALLOW_DOWNGRADE> = 1048576;

        <android.content.pm.PackageManager: int INSTALL_ALLOCATE_AGGRESSIVE> = 32768;

        <android.content.pm.PackageManager: int GET_URI_PERMISSION_PATTERNS> = 2048;

        <android.content.pm.PackageManager: int GET_UNINSTALLED_PACKAGES> = 8192;

        <android.content.pm.PackageManager: int GET_SIGNING_CERTIFICATES> = 134217728;

        <android.content.pm.PackageManager: int GET_SIGNATURES> = 64;

        <android.content.pm.PackageManager: int GET_SHARED_LIBRARY_FILES> = 1024;

        <android.content.pm.PackageManager: int GET_SERVICES> = 4;

        <android.content.pm.PackageManager: int GET_RESOLVED_FILTER> = 64;

        <android.content.pm.PackageManager: int GET_RECEIVERS> = 2;

        <android.content.pm.PackageManager: int GET_PROVIDERS> = 8;

        <android.content.pm.PackageManager: int GET_PERMISSIONS> = 4096;

        <android.content.pm.PackageManager: int GET_META_DATA> = 128;

        <android.content.pm.PackageManager: int GET_INTENT_FILTERS> = 32;

        <android.content.pm.PackageManager: int GET_INSTRUMENTATION> = 16;

        <android.content.pm.PackageManager: int GET_GIDS> = 256;

        <android.content.pm.PackageManager: int GET_DISABLED_UNTIL_USED_COMPONENTS> = 32768;

        <android.content.pm.PackageManager: int GET_DISABLED_COMPONENTS> = 512;

        <android.content.pm.PackageManager: int GET_CONFIGURATIONS> = 16384;

        <android.content.pm.PackageManager: int GET_ACTIVITIES> = 1;

        <android.content.pm.PackageManager: int FLAG_PERMISSION_WHITELIST_UPGRADE> = 4;

        <android.content.pm.PackageManager: int FLAG_PERMISSION_WHITELIST_SYSTEM> = 1;

        <android.content.pm.PackageManager: int FLAG_PERMISSION_WHITELIST_INSTALLER> = 2;

        <android.content.pm.PackageManager: int FLAG_PERMISSION_USER_SET> = 1;

        <android.content.pm.PackageManager: int FLAG_PERMISSION_USER_SENSITIVE_WHEN_GRANTED> = 256;

        <android.content.pm.PackageManager: int FLAG_PERMISSION_USER_SENSITIVE_WHEN_DENIED> = 512;

        <android.content.pm.PackageManager: int FLAG_PERMISSION_USER_FIXED> = 2;

        <android.content.pm.PackageManager: int FLAG_PERMISSION_SYSTEM_FIXED> = 16;

        <android.content.pm.PackageManager: int FLAG_PERMISSION_REVOKE_WHEN_REQUESTED> = 128;

        <android.content.pm.PackageManager: int FLAG_PERMISSION_REVOKE_ON_UPGRADE> = 8;

        <android.content.pm.PackageManager: int FLAG_PERMISSION_REVOKED_COMPAT> = 8;

        <android.content.pm.PackageManager: int FLAG_PERMISSION_REVIEW_REQUIRED> = 64;

        <android.content.pm.PackageManager: int FLAG_PERMISSION_RESTRICTION_UPGRADE_EXEMPT> = 8192;

        <android.content.pm.PackageManager: int FLAG_PERMISSION_RESTRICTION_SYSTEM_EXEMPT> = 4096;

        <android.content.pm.PackageManager: int FLAG_PERMISSION_RESTRICTION_INSTALLER_EXEMPT> = 2048;

        <android.content.pm.PackageManager: int FLAG_PERMISSION_POLICY_FIXED> = 4;

        <android.content.pm.PackageManager: int FLAG_PERMISSION_ONE_TIME> = 65536;

        <android.content.pm.PackageManager: int FLAG_PERMISSION_GRANTED_BY_ROLE> = 32768;

        <android.content.pm.PackageManager: int FLAG_PERMISSION_GRANTED_BY_DEFAULT> = 32;

        <android.content.pm.PackageManager: int FLAG_PERMISSION_AUTO_REVOKED> = 131072;

        <android.content.pm.PackageManager: int FLAG_PERMISSION_APPLY_RESTRICTION> = 16384;

        <android.content.pm.PackageManager: int FLAGS_PERMISSION_RESTRICTION_ANY_EXEMPT> = 14336;

        <android.content.pm.PackageManager: int FLAGS_PERMISSION_RESERVED_PERMISSION_CONTROLLER> = -268435456;

        <android.content.pm.PackageManager: long FILTER_APPLICATION_QUERY> = 135549675L;

        <android.content.pm.PackageManager: java.lang.String FEATURE_WIFI_RTT> = "android.hardware.wifi.rtt";

        <android.content.pm.PackageManager: java.lang.String FEATURE_WIFI_PASSPOINT> = "android.hardware.wifi.passpoint";

        <android.content.pm.PackageManager: java.lang.String FEATURE_WIFI_DIRECT> = "android.hardware.wifi.direct";

        <android.content.pm.PackageManager: java.lang.String FEATURE_WIFI_AWARE> = "android.hardware.wifi.aware";

        <android.content.pm.PackageManager: java.lang.String FEATURE_WIFI> = "android.hardware.wifi";

        <android.content.pm.PackageManager: java.lang.String FEATURE_WEBVIEW> = "android.software.webview";

        <android.content.pm.PackageManager: java.lang.String FEATURE_WATCH> = "android.hardware.type.watch";

        <android.content.pm.PackageManager: java.lang.String FEATURE_VULKAN_HARDWARE_VERSION> = "android.hardware.vulkan.version";

        <android.content.pm.PackageManager: java.lang.String FEATURE_VULKAN_HARDWARE_LEVEL> = "android.hardware.vulkan.level";

        <android.content.pm.PackageManager: java.lang.String FEATURE_VULKAN_HARDWARE_COMPUTE> = "android.hardware.vulkan.compute";

        <android.content.pm.PackageManager: java.lang.String FEATURE_VULKAN_DEQP_LEVEL> = "android.software.vulkan.deqp.level";

        <android.content.pm.PackageManager: java.lang.String FEATURE_VR_MODE_HIGH_PERFORMANCE> = "android.hardware.vr.high_performance";

        <android.content.pm.PackageManager: java.lang.String FEATURE_VR_MODE> = "android.software.vr.mode";

        <android.content.pm.PackageManager: java.lang.String FEATURE_VR_HEADTRACKING> = "android.hardware.vr.headtracking";

        <android.content.pm.PackageManager: java.lang.String FEATURE_VOICE_RECOGNIZERS> = "android.software.voice_recognizers";

        <android.content.pm.PackageManager: java.lang.String FEATURE_VERIFIED_BOOT> = "android.software.verified_boot";

        <android.content.pm.PackageManager: java.lang.String FEATURE_USB_HOST> = "android.hardware.usb.host";

        <android.content.pm.PackageManager: java.lang.String FEATURE_USB_ACCESSORY> = "android.hardware.usb.accessory";

        <android.content.pm.PackageManager: java.lang.String FEATURE_TUNER> = "android.hardware.tv.tuner";

        <android.content.pm.PackageManager: java.lang.String FEATURE_TOUCHSCREEN_MULTITOUCH_JAZZHAND> = "android.hardware.touchscreen.multitouch.jazzhand";

        <android.content.pm.PackageManager: java.lang.String FEATURE_TOUCHSCREEN_MULTITOUCH_DISTINCT> = "android.hardware.touchscreen.multitouch.distinct";

        <android.content.pm.PackageManager: java.lang.String FEATURE_TOUCHSCREEN_MULTITOUCH> = "android.hardware.touchscreen.multitouch";

        <android.content.pm.PackageManager: java.lang.String FEATURE_TOUCHSCREEN> = "android.hardware.touchscreen";

        <android.content.pm.PackageManager: java.lang.String FEATURE_TELEVISION> = "android.hardware.type.television";

        <android.content.pm.PackageManager: java.lang.String FEATURE_TELEPHONY_MBMS> = "android.hardware.telephony.mbms";

        <android.content.pm.PackageManager: java.lang.String FEATURE_TELEPHONY_IMS> = "android.hardware.telephony.ims";

        <android.content.pm.PackageManager: java.lang.String FEATURE_TELEPHONY_GSM> = "android.hardware.telephony.gsm";

        <android.content.pm.PackageManager: java.lang.String FEATURE_TELEPHONY_EUICC> = "android.hardware.telephony.euicc";

        <android.content.pm.PackageManager: java.lang.String FEATURE_TELEPHONY_CDMA> = "android.hardware.telephony.cdma";

        <android.content.pm.PackageManager: java.lang.String FEATURE_TELEPHONY_CARRIERLOCK> = "android.hardware.telephony.carrierlock";

        <android.content.pm.PackageManager: java.lang.String FEATURE_TELEPHONY> = "android.hardware.telephony";

        <android.content.pm.PackageManager: java.lang.String FEATURE_STRONGBOX_KEYSTORE> = "android.hardware.strongbox_keystore";

        <android.content.pm.PackageManager: java.lang.String FEATURE_SLICES_DISABLED> = "android.software.slices_disabled";

        <android.content.pm.PackageManager: java.lang.String FEATURE_SIP_VOIP> = "android.software.sip.voip";

        <android.content.pm.PackageManager: java.lang.String FEATURE_SIP> = "android.software.sip";

        <android.content.pm.PackageManager: java.lang.String FEATURE_SE_OMAPI_UICC> = "android.hardware.se.omapi.uicc";

        <android.content.pm.PackageManager: java.lang.String FEATURE_SE_OMAPI_SD> = "android.hardware.se.omapi.sd";

        <android.content.pm.PackageManager: java.lang.String FEATURE_SE_OMAPI_ESE> = "android.hardware.se.omapi.ese";

        <android.content.pm.PackageManager: java.lang.String FEATURE_SENSOR_STEP_DETECTOR> = "android.hardware.sensor.stepdetector";

        <android.content.pm.PackageManager: java.lang.String FEATURE_SENSOR_STEP_COUNTER> = "android.hardware.sensor.stepcounter";

        <android.content.pm.PackageManager: java.lang.String FEATURE_SENSOR_RELATIVE_HUMIDITY> = "android.hardware.sensor.relative_humidity";

        <android.content.pm.PackageManager: java.lang.String FEATURE_SENSOR_PROXIMITY> = "android.hardware.sensor.proximity";

        <android.content.pm.PackageManager: java.lang.String FEATURE_SENSOR_LIGHT> = "android.hardware.sensor.light";

        <android.content.pm.PackageManager: java.lang.String FEATURE_SENSOR_HINGE_ANGLE> = "android.hardware.sensor.hinge_angle";

        <android.content.pm.PackageManager: java.lang.String FEATURE_SENSOR_HEART_RATE_ECG> = "android.hardware.sensor.heartrate.ecg";

        <android.content.pm.PackageManager: java.lang.String FEATURE_SENSOR_HEART_RATE> = "android.hardware.sensor.heartrate";

        <android.content.pm.PackageManager: java.lang.String FEATURE_SENSOR_GYROSCOPE> = "android.hardware.sensor.gyroscope";

        <android.content.pm.PackageManager: java.lang.String FEATURE_SENSOR_COMPASS> = "android.hardware.sensor.compass";

        <android.content.pm.PackageManager: java.lang.String FEATURE_SENSOR_BAROMETER> = "android.hardware.sensor.barometer";

        <android.content.pm.PackageManager: java.lang.String FEATURE_SENSOR_AMBIENT_TEMPERATURE> = "android.hardware.sensor.ambient_temperature";

        <android.content.pm.PackageManager: java.lang.String FEATURE_SENSOR_ACCELEROMETER> = "android.hardware.sensor.accelerometer";

        <android.content.pm.PackageManager: java.lang.String FEATURE_SECURE_LOCK_SCREEN> = "android.software.secure_lock_screen";

        <android.content.pm.PackageManager: java.lang.String FEATURE_SECURELY_REMOVES_USERS> = "android.software.securely_removes_users";

        <android.content.pm.PackageManager: java.lang.String FEATURE_SCREEN_PORTRAIT> = "android.hardware.screen.portrait";

        <android.content.pm.PackageManager: java.lang.String FEATURE_SCREEN_LANDSCAPE> = "android.hardware.screen.landscape";

        <android.content.pm.PackageManager: java.lang.String FEATURE_REBOOT_ESCROW> = "android.hardware.reboot_escrow";

        <android.content.pm.PackageManager: java.lang.String FEATURE_RAM_NORMAL> = "android.hardware.ram.normal";

        <android.content.pm.PackageManager: java.lang.String FEATURE_RAM_LOW> = "android.hardware.ram.low";

        <android.content.pm.PackageManager: java.lang.String FEATURE_PRINTING> = "android.software.print";

        <android.content.pm.PackageManager: java.lang.String FEATURE_PICTURE_IN_PICTURE> = "android.software.picture_in_picture";

        <android.content.pm.PackageManager: java.lang.String FEATURE_PC> = "android.hardware.type.pc";

        <android.content.pm.PackageManager: java.lang.String FEATURE_OPENGLES_EXTENSION_PACK> = "android.hardware.opengles.aep";

        <android.content.pm.PackageManager: java.lang.String FEATURE_NFC_OFF_HOST_CARD_EMULATION_UICC> = "android.hardware.nfc.uicc";

        <android.content.pm.PackageManager: java.lang.String FEATURE_NFC_OFF_HOST_CARD_EMULATION_ESE> = "android.hardware.nfc.ese";

        <android.content.pm.PackageManager: java.lang.String FEATURE_NFC_HOST_CARD_EMULATION_NFCF> = "android.hardware.nfc.hcef";

        <android.content.pm.PackageManager: java.lang.String FEATURE_NFC_HOST_CARD_EMULATION> = "android.hardware.nfc.hce";

        <android.content.pm.PackageManager: java.lang.String FEATURE_NFC_HCE> = "android.hardware.nfc.hce";

        <android.content.pm.PackageManager: java.lang.String FEATURE_NFC_BEAM> = "android.sofware.nfc.beam";

        <android.content.pm.PackageManager: java.lang.String FEATURE_NFC_ANY> = "android.hardware.nfc.any";

        <android.content.pm.PackageManager: java.lang.String FEATURE_NFC> = "android.hardware.nfc";

        <android.content.pm.PackageManager: java.lang.String FEATURE_MIDI> = "android.software.midi";

        <android.content.pm.PackageManager: java.lang.String FEATURE_MICROPHONE> = "android.hardware.microphone";

        <android.content.pm.PackageManager: java.lang.String FEATURE_MANAGED_USERS> = "android.software.managed_users";

        <android.content.pm.PackageManager: java.lang.String FEATURE_MANAGED_PROFILES> = "android.software.managed_users";

        <android.content.pm.PackageManager: java.lang.String FEATURE_LOWPAN> = "android.hardware.lowpan";

        <android.content.pm.PackageManager: java.lang.String FEATURE_LOCATION_NETWORK> = "android.hardware.location.network";

        <android.content.pm.PackageManager: java.lang.String FEATURE_LOCATION_GPS> = "android.hardware.location.gps";

        <android.content.pm.PackageManager: java.lang.String FEATURE_LOCATION> = "android.hardware.location";

        <android.content.pm.PackageManager: java.lang.String FEATURE_LIVE_WALLPAPER> = "android.software.live_wallpaper";

        <android.content.pm.PackageManager: java.lang.String FEATURE_LIVE_TV> = "android.software.live_tv";

        <android.content.pm.PackageManager: java.lang.String FEATURE_LEANBACK_ONLY> = "android.software.leanback_only";

        <android.content.pm.PackageManager: java.lang.String FEATURE_LEANBACK> = "android.software.leanback";

        <android.content.pm.PackageManager: java.lang.String FEATURE_IRIS> = "android.hardware.biometrics.iris";

        <android.content.pm.PackageManager: java.lang.String FEATURE_IPSEC_TUNNELS> = "android.software.ipsec_tunnels";

        <android.content.pm.PackageManager: java.lang.String FEATURE_INPUT_METHODS> = "android.software.input_methods";

        <android.content.pm.PackageManager: java.lang.String FEATURE_INCREMENTAL_DELIVERY> = "android.software.incremental_delivery";

        <android.content.pm.PackageManager: java.lang.String FEATURE_HOME_SCREEN> = "android.software.home_screen";

        <android.content.pm.PackageManager: java.lang.String FEATURE_HIFI_SENSORS> = "android.hardware.sensor.hifi_sensors";

        <android.content.pm.PackageManager: java.lang.String FEATURE_HDMI_CEC> = "android.hardware.hdmi.cec";

        <android.content.pm.PackageManager: java.lang.String FEATURE_GAMEPAD> = "android.hardware.gamepad";

        <android.content.pm.PackageManager: java.lang.String FEATURE_FREEFORM_WINDOW_MANAGEMENT> = "android.software.freeform_window_management";

        <android.content.pm.PackageManager: java.lang.String FEATURE_FINGERPRINT> = "android.hardware.fingerprint";

        <android.content.pm.PackageManager: java.lang.String FEATURE_FILE_BASED_ENCRYPTION> = "android.software.file_based_encryption";

        <android.content.pm.PackageManager: java.lang.String FEATURE_FAKETOUCH_MULTITOUCH_JAZZHAND> = "android.hardware.faketouch.multitouch.jazzhand";

        <android.content.pm.PackageManager: java.lang.String FEATURE_FAKETOUCH_MULTITOUCH_DISTINCT> = "android.hardware.faketouch.multitouch.distinct";

        <android.content.pm.PackageManager: java.lang.String FEATURE_FAKETOUCH> = "android.hardware.faketouch";

        <android.content.pm.PackageManager: java.lang.String FEATURE_FACE> = "android.hardware.biometrics.face";

        <android.content.pm.PackageManager: java.lang.String FEATURE_ETHERNET> = "android.hardware.ethernet";

        <android.content.pm.PackageManager: java.lang.String FEATURE_EMBEDDED> = "android.hardware.type.embedded";

        <android.content.pm.PackageManager: java.lang.String FEATURE_DEVICE_UNIQUE_ATTESTATION> = "android.hardware.device_unique_attestation";

        <android.content.pm.PackageManager: java.lang.String FEATURE_DEVICE_ID_ATTESTATION> = "android.software.device_id_attestation";

        <android.content.pm.PackageManager: java.lang.String FEATURE_DEVICE_ADMIN> = "android.software.device_admin";

        <android.content.pm.PackageManager: java.lang.String FEATURE_CTS> = "android.software.cts";

        <android.content.pm.PackageManager: java.lang.String FEATURE_CONTROLS> = "android.software.controls";

        <android.content.pm.PackageManager: java.lang.String FEATURE_CONTEXT_HUB> = "android.hardware.context_hub";

        <android.content.pm.PackageManager: java.lang.String FEATURE_CONSUMER_IR> = "android.hardware.consumerir";

        <android.content.pm.PackageManager: java.lang.String FEATURE_CONNECTION_SERVICE> = "android.software.connectionservice";

        <android.content.pm.PackageManager: java.lang.String FEATURE_COMPANION_DEVICE_SETUP> = "android.software.companion_device_setup";

        <android.content.pm.PackageManager: java.lang.String FEATURE_CANT_SAVE_STATE> = "android.software.cant_save_state";

        <android.content.pm.PackageManager: java.lang.String FEATURE_CAMERA_LEVEL_FULL> = "android.hardware.camera.level.full";

        <android.content.pm.PackageManager: java.lang.String FEATURE_CAMERA_FRONT> = "android.hardware.camera.front";

        <android.content.pm.PackageManager: java.lang.String FEATURE_CAMERA_FLASH> = "android.hardware.camera.flash";

        <android.content.pm.PackageManager: java.lang.String FEATURE_CAMERA_EXTERNAL> = "android.hardware.camera.external";

        <android.content.pm.PackageManager: java.lang.String FEATURE_CAMERA_CONCURRENT> = "android.hardware.camera.concurrent";

        <android.content.pm.PackageManager: java.lang.String FEATURE_CAMERA_CAPABILITY_RAW> = "android.hardware.camera.capability.raw";

        <android.content.pm.PackageManager: java.lang.String FEATURE_CAMERA_CAPABILITY_MANUAL_SENSOR> = "android.hardware.camera.capability.manual_sensor";

        <android.content.pm.PackageManager: java.lang.String FEATURE_CAMERA_CAPABILITY_MANUAL_POST_PROCESSING> = "android.hardware.camera.capability.manual_post_processing";

        <android.content.pm.PackageManager: java.lang.String FEATURE_CAMERA_AUTOFOCUS> = "android.hardware.camera.autofocus";

        <android.content.pm.PackageManager: java.lang.String FEATURE_CAMERA_AR> = "android.hardware.camera.ar";

        <android.content.pm.PackageManager: java.lang.String FEATURE_CAMERA_ANY> = "android.hardware.camera.any";

        <android.content.pm.PackageManager: java.lang.String FEATURE_CAMERA> = "android.hardware.camera";

        <android.content.pm.PackageManager: java.lang.String FEATURE_BROADCAST_RADIO> = "android.hardware.broadcastradio";

        <android.content.pm.PackageManager: java.lang.String FEATURE_BLUETOOTH_LE> = "android.hardware.bluetooth_le";

        <android.content.pm.PackageManager: java.lang.String FEATURE_BLUETOOTH> = "android.hardware.bluetooth";

        <android.content.pm.PackageManager: java.lang.String FEATURE_BACKUP> = "android.software.backup";

        <android.content.pm.PackageManager: java.lang.String FEATURE_AUTOMOTIVE> = "android.hardware.type.automotive";

        <android.content.pm.PackageManager: java.lang.String FEATURE_AUTOFILL> = "android.software.autofill";

        <android.content.pm.PackageManager: java.lang.String FEATURE_AUDIO_PRO> = "android.hardware.audio.pro";

        <android.content.pm.PackageManager: java.lang.String FEATURE_AUDIO_OUTPUT> = "android.hardware.audio.output";

        <android.content.pm.PackageManager: java.lang.String FEATURE_AUDIO_LOW_LATENCY> = "android.hardware.audio.low_latency";

        <android.content.pm.PackageManager: java.lang.String FEATURE_ASSIST_GESTURE> = "android.hardware.sensor.assist";

        <android.content.pm.PackageManager: java.lang.String FEATURE_APP_WIDGETS> = "android.software.app_widgets";

        <android.content.pm.PackageManager: java.lang.String FEATURE_APP_ENUMERATION> = "android.software.app_enumeration";

        <android.content.pm.PackageManager: java.lang.String FEATURE_ADOPTABLE_STORAGE> = "android.software.adoptable_storage";

        <android.content.pm.PackageManager: java.lang.String FEATURE_ACTIVITIES_ON_SECONDARY_DISPLAYS> = "android.software.activities_on_secondary_displays";

        <android.content.pm.PackageManager: java.lang.String EXTRA_VERIFICATION_VERSION_CODE> = "android.content.pm.extra.VERIFICATION_VERSION_CODE";

        <android.content.pm.PackageManager: java.lang.String EXTRA_VERIFICATION_URI> = "android.content.pm.extra.VERIFICATION_URI";

        <android.content.pm.PackageManager: java.lang.String EXTRA_VERIFICATION_ROOT_HASH> = "android.content.pm.extra.EXTRA_VERIFICATION_ROOT_HASH";

        <android.content.pm.PackageManager: java.lang.String EXTRA_VERIFICATION_RESULT> = "android.content.pm.extra.VERIFICATION_RESULT";

        <android.content.pm.PackageManager: java.lang.String EXTRA_VERIFICATION_PACKAGE_NAME> = "android.content.pm.extra.VERIFICATION_PACKAGE_NAME";

        <android.content.pm.PackageManager: java.lang.String EXTRA_VERIFICATION_LONG_VERSION_CODE> = "android.content.pm.extra.VERIFICATION_LONG_VERSION_CODE";

        <android.content.pm.PackageManager: java.lang.String EXTRA_VERIFICATION_INSTALL_FLAGS> = "android.content.pm.extra.VERIFICATION_INSTALL_FLAGS";

        <android.content.pm.PackageManager: java.lang.String EXTRA_VERIFICATION_INSTALLER_UID> = "android.content.pm.extra.VERIFICATION_INSTALLER_UID";

        <android.content.pm.PackageManager: java.lang.String EXTRA_VERIFICATION_INSTALLER_PACKAGE> = "android.content.pm.extra.VERIFICATION_INSTALLER_PACKAGE";

        <android.content.pm.PackageManager: java.lang.String EXTRA_VERIFICATION_ID> = "android.content.pm.extra.VERIFICATION_ID";

        <android.content.pm.PackageManager: java.lang.String EXTRA_REQUEST_PERMISSIONS_RESULTS> = "android.content.pm.extra.REQUEST_PERMISSIONS_RESULTS";

        <android.content.pm.PackageManager: java.lang.String EXTRA_REQUEST_PERMISSIONS_NAMES> = "android.content.pm.extra.REQUEST_PERMISSIONS_NAMES";

        <android.content.pm.PackageManager: java.lang.String EXTRA_MOVE_ID> = "android.content.pm.extra.MOVE_ID";

        <android.content.pm.PackageManager: java.lang.String EXTRA_INTENT_FILTER_VERIFICATION_URI_SCHEME> = "android.content.pm.extra.INTENT_FILTER_VERIFICATION_URI_SCHEME";

        <android.content.pm.PackageManager: java.lang.String EXTRA_INTENT_FILTER_VERIFICATION_PACKAGE_NAME> = "android.content.pm.extra.INTENT_FILTER_VERIFICATION_PACKAGE_NAME";

        <android.content.pm.PackageManager: java.lang.String EXTRA_INTENT_FILTER_VERIFICATION_ID> = "android.content.pm.extra.INTENT_FILTER_VERIFICATION_ID";

        <android.content.pm.PackageManager: java.lang.String EXTRA_INTENT_FILTER_VERIFICATION_HOSTS> = "android.content.pm.extra.INTENT_FILTER_VERIFICATION_HOSTS";

        <android.content.pm.PackageManager: java.lang.String EXTRA_FAILURE_EXISTING_PERMISSION> = "android.content.pm.extra.FAILURE_EXISTING_PERMISSION";

        <android.content.pm.PackageManager: java.lang.String EXTRA_FAILURE_EXISTING_PACKAGE> = "android.content.pm.extra.FAILURE_EXISTING_PACKAGE";

        <android.content.pm.PackageManager: int DONT_KILL_APP> = 1;

        <android.content.pm.PackageManager: int DELETE_SYSTEM_APP> = 4;

        <android.content.pm.PackageManager: int DELETE_SUCCEEDED> = 1;

        <android.content.pm.PackageManager: int DELETE_KEEP_DATA> = 1;

        <android.content.pm.PackageManager: int DELETE_FAILED_USER_RESTRICTED> = -3;

        <android.content.pm.PackageManager: int DELETE_FAILED_USED_SHARED_LIBRARY> = -6;

        <android.content.pm.PackageManager: int DELETE_FAILED_OWNER_BLOCKED> = -4;

        <android.content.pm.PackageManager: int DELETE_FAILED_INTERNAL_ERROR> = -1;

        <android.content.pm.PackageManager: int DELETE_FAILED_DEVICE_POLICY_MANAGER> = -2;

        <android.content.pm.PackageManager: int DELETE_FAILED_ABORTED> = -5;

        <android.content.pm.PackageManager: int DELETE_DONT_KILL_APP> = 8;

        <android.content.pm.PackageManager: int DELETE_CHATTY> = -2147483648;

        <android.content.pm.PackageManager: int DELETE_ALL_USERS> = 2;

        <android.content.pm.PackageManager: int COMPONENT_ENABLED_STATE_ENABLED> = 1;

        <android.content.pm.PackageManager: int COMPONENT_ENABLED_STATE_DISABLED_USER> = 3;

        <android.content.pm.PackageManager: int COMPONENT_ENABLED_STATE_DISABLED_UNTIL_USED> = 4;

        <android.content.pm.PackageManager: int COMPONENT_ENABLED_STATE_DISABLED> = 2;

        <android.content.pm.PackageManager: int COMPONENT_ENABLED_STATE_DEFAULT> = 0;

        <android.content.pm.PackageManager: int CERT_INPUT_SHA256> = 1;

        <android.content.pm.PackageManager: int CERT_INPUT_RAW_X509> = 0;

        <android.content.pm.PackageManager: boolean APP_ENUMERATION_ENABLED_BY_DEFAULT> = 1;

        <android.content.pm.PackageManager: boolean APPLY_DEFAULT_TO_DEVICE_PROTECTED_STORAGE> = 1;

        <android.content.pm.PackageManager: java.lang.String ACTION_REQUEST_PERMISSIONS> = "android.content.pm.action.REQUEST_PERMISSIONS";

        $r0 = class "Landroid/app/AppDetailsActivity;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        <android.content.pm.PackageManager: java.lang.String APP_DETAILS_ACTIVITY_CLASS_NAME> = $r1;

        $r2 = new android.content.pm.PackageManager$1;

        specialinvoke $r2.<android.content.pm.PackageManager$1: void <init>(int,java.lang.String)>(16, "cache_key.package_info");

        <android.content.pm.PackageManager: android.app.PropertyInvalidatedCache sApplicationInfoCache> = $r2;

        $r3 = new android.app.PropertyInvalidatedCache$AutoCorker;

        specialinvoke $r3.<android.app.PropertyInvalidatedCache$AutoCorker: void <init>(java.lang.String)>("cache_key.package_info");

        <android.content.pm.PackageManager: android.app.PropertyInvalidatedCache$AutoCorker sCacheAutoCorker> = $r3;

        $r4 = new android.content.pm.PackageManager$2;

        specialinvoke $r4.<android.content.pm.PackageManager$2: void <init>(int,java.lang.String)>(32, "cache_key.package_info");

        <android.content.pm.PackageManager: android.app.PropertyInvalidatedCache sPackageInfoCache> = $r4;

        return;
    }

    public void <init>()
    {
        android.content.pm.PackageManager r0;

        r0 := @this: android.content.pm.PackageManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static android.content.pm.ApplicationInfo access$000(java.lang.String, int, int)
    {
        java.lang.String r0;
        int i0, i1;
        android.content.pm.ApplicationInfo $r1;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = staticinvoke <android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfoAsUserUncached(java.lang.String,int,int)>(r0, i0, i1);

        return $r1;
    }

    static android.content.pm.PackageInfo access$100(java.lang.String, int, int)
    {
        java.lang.String r0;
        int i0, i1;
        android.content.pm.PackageInfo $r1;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = staticinvoke <android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfoAsUserUncached(java.lang.String,int,int)>(r0, i0, i1);

        return $r1;
    }

    public static void corkPackageInfoCache()
    {
        staticinvoke <android.app.PropertyInvalidatedCache: void corkInvalidations(java.lang.String)>("cache_key.package_info");

        return;
    }

    public static int deleteStatusToPublicStatus(int)
    {
        int i0;

        i0 := @parameter0: int;

        if i0 == -6 goto label6;

        if i0 == -5 goto label5;

        if i0 == -4 goto label4;

        if i0 == -3 goto label3;

        if i0 == -2 goto label2;

        if i0 == 1 goto label1;

        return 1;

     label1:
        return 0;

     label2:
        return 2;

     label3:
        return 2;

     label4:
        return 2;

     label5:
        return 3;

     label6:
        return 5;
    }

    public static java.lang.String deleteStatusToString(int)
    {
        int i0;
        java.lang.String $r0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case -6: goto label8;
            case -5: goto label7;
            case -4: goto label6;
            case -3: goto label5;
            case -2: goto label4;
            case -1: goto label3;
            case 0: goto label1;
            case 1: goto label2;
            default: goto label1;
        };

     label1:
        $r0 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        return $r0;

     label2:
        return "DELETE_SUCCEEDED";

     label3:
        return "DELETE_FAILED_INTERNAL_ERROR";

     label4:
        return "DELETE_FAILED_DEVICE_POLICY_MANAGER";

     label5:
        return "DELETE_FAILED_USER_RESTRICTED";

     label6:
        return "DELETE_FAILED_OWNER_BLOCKED";

     label7:
        return "DELETE_FAILED_ABORTED";

     label8:
        return "DELETE_FAILED_USED_SHARED_LIBRARY";
    }

    public static java.lang.String deleteStatusToString(int, java.lang.String)
    {
        int i0;
        java.lang.String r0, r1, $r7;
        java.lang.StringBuilder $r3;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.String;

        r1 = staticinvoke <android.content.pm.PackageManager: java.lang.String deleteStatusToString(int)>(i0);

        if r0 == null goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;

     label1:
        return r1;
    }

    public static void disableApplicationInfoCache()
    {
        android.app.PropertyInvalidatedCache $r0;

        $r0 = <android.content.pm.PackageManager: android.app.PropertyInvalidatedCache sApplicationInfoCache>;

        virtualinvoke $r0.<android.app.PropertyInvalidatedCache: void disableLocal()>();

        return;
    }

    public static void disablePackageInfoCache()
    {
        android.app.PropertyInvalidatedCache $r0;

        $r0 = <android.content.pm.PackageManager: android.app.PropertyInvalidatedCache sPackageInfoCache>;

        virtualinvoke $r0.<android.app.PropertyInvalidatedCache: void disableLocal()>();

        return;
    }

    public static android.content.pm.ApplicationInfo getApplicationInfoAsUserCached(java.lang.String, int, int)
    {
        java.lang.String r0;
        int i0, i1;
        android.content.pm.PackageManager$ApplicationInfoQuery $r1;
        android.app.PropertyInvalidatedCache $r2;
        java.lang.Object $r3;
        android.content.pm.ApplicationInfo $r4;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = <android.content.pm.PackageManager: android.app.PropertyInvalidatedCache sApplicationInfoCache>;

        $r1 = new android.content.pm.PackageManager$ApplicationInfoQuery;

        specialinvoke $r1.<android.content.pm.PackageManager$ApplicationInfoQuery: void <init>(java.lang.String,int,int)>(r0, i0, i1);

        $r3 = virtualinvoke $r2.<android.app.PropertyInvalidatedCache: java.lang.Object query(java.lang.Object)>($r1);

        $r4 = (android.content.pm.ApplicationInfo) $r3;

        return $r4;
    }

    private static android.content.pm.ApplicationInfo getApplicationInfoAsUserUncached(java.lang.String, int, int)
    {
        int i0, i1;
        android.content.pm.IPackageManager $r0;
        android.os.RemoteException $r1;
        java.lang.RuntimeException $r2;
        java.lang.String r3;
        android.content.pm.ApplicationInfo r4;

        r3 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

     label1:
        $r0 = staticinvoke <android.app.ActivityThread: android.content.pm.IPackageManager getPackageManager()>();

        r4 = interfaceinvoke $r0.<android.content.pm.IPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int,int)>(r3, i0, i1);

     label2:
        return r4;

     label3:
        $r1 := @caughtexception;

        $r2 = virtualinvoke $r1.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r2;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static android.content.pm.PackageInfo getPackageInfoAsUserCached(java.lang.String, int, int)
    {
        java.lang.String r0;
        int i0, i1;
        android.content.pm.PackageManager$PackageInfoQuery $r1;
        android.app.PropertyInvalidatedCache $r2;
        java.lang.Object $r3;
        android.content.pm.PackageInfo $r4;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = <android.content.pm.PackageManager: android.app.PropertyInvalidatedCache sPackageInfoCache>;

        $r1 = new android.content.pm.PackageManager$PackageInfoQuery;

        specialinvoke $r1.<android.content.pm.PackageManager$PackageInfoQuery: void <init>(java.lang.String,int,int)>(r0, i0, i1);

        $r3 = virtualinvoke $r2.<android.app.PropertyInvalidatedCache: java.lang.Object query(java.lang.Object)>($r1);

        $r4 = (android.content.pm.PackageInfo) $r3;

        return $r4;
    }

    private static android.content.pm.PackageInfo getPackageInfoAsUserUncached(java.lang.String, int, int)
    {
        int i0, i1;
        android.content.pm.IPackageManager $r0;
        android.os.RemoteException $r1;
        java.lang.RuntimeException $r2;
        java.lang.String r3;
        android.content.pm.PackageInfo r4;

        r3 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

     label1:
        $r0 = staticinvoke <android.app.ActivityThread: android.content.pm.IPackageManager getPackageManager()>();

        r4 = interfaceinvoke $r0.<android.content.pm.IPackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int,int)>(r3, i0, i1);

     label2:
        return r4;

     label3:
        $r1 := @caughtexception;

        $r2 = virtualinvoke $r1.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r2;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static int installStatusToPublicStatus(int)
    {
        int i0;

        i0 := @parameter0: int;

        if i0 == -118 goto label47;

        if i0 == -117 goto label46;

        if i0 == -115 goto label45;

        if i0 == -28 goto label44;

        if i0 == 1 goto label43;

        tableswitch(i0)
        {
            case -113: goto label42;
            case -112: goto label41;
            case -111: goto label40;
            default: goto label01;
        };

     label01:
        tableswitch(i0)
        {
            case -109: goto label39;
            case -108: goto label38;
            case -107: goto label37;
            case -106: goto label36;
            case -105: goto label35;
            case -104: goto label34;
            case -103: goto label33;
            case -102: goto label32;
            case -101: goto label31;
            case -100: goto label30;
            default: goto label02;
        };

     label02:
        tableswitch(i0)
        {
            case -26: goto label29;
            case -25: goto label28;
            case -24: goto label27;
            case -23: goto label26;
            case -22: goto label25;
            case -21: goto label24;
            case -20: goto label23;
            case -19: goto label22;
            case -18: goto label21;
            case -17: goto label20;
            case -16: goto label19;
            case -15: goto label18;
            case -14: goto label17;
            case -13: goto label16;
            case -12: goto label15;
            case -11: goto label14;
            case -10: goto label13;
            case -9: goto label12;
            case -8: goto label11;
            case -7: goto label10;
            case -6: goto label09;
            case -5: goto label08;
            case -4: goto label07;
            case -3: goto label06;
            case -2: goto label05;
            case -1: goto label04;
            default: goto label03;
        };

     label03:
        return 1;

     label04:
        return 5;

     label05:
        return 4;

     label06:
        return 4;

     label07:
        return 6;

     label08:
        return 5;

     label09:
        return 5;

     label10:
        return 5;

     label11:
        return 5;

     label12:
        return 7;

     label13:
        return 5;

     label14:
        return 4;

     label15:
        return 7;

     label16:
        return 5;

     label17:
        return 7;

     label18:
        return 4;

     label19:
        return 7;

     label20:
        return 7;

     label21:
        return 6;

     label22:
        return 6;

     label23:
        return 6;

     label24:
        return 3;

     label25:
        return 3;

     label26:
        return 4;

     label27:
        return 4;

     label28:
        return 4;

     label29:
        return 4;

     label30:
        return 4;

     label31:
        return 4;

     label32:
        return 4;

     label33:
        return 4;

     label34:
        return 4;

     label35:
        return 4;

     label36:
        return 4;

     label37:
        return 4;

     label38:
        return 4;

     label39:
        return 4;

     label40:
        return 7;

     label41:
        return 5;

     label42:
        return 7;

     label43:
        return 0;

     label44:
        return 7;

     label45:
        return 3;

     label46:
        return 4;

     label47:
        return 4;
    }

    public static java.lang.String installStatusToString(int)
    {
        int i0;
        java.lang.String $r0;

        i0 := @parameter0: int;

        if i0 == -122 goto label48;

        if i0 == -121 goto label47;

        if i0 == -118 goto label46;

        if i0 == -117 goto label45;

        if i0 == -115 goto label44;

        if i0 == -28 goto label43;

        if i0 == 1 goto label42;

        tableswitch(i0)
        {
            case -113: goto label41;
            case -112: goto label40;
            case -111: goto label39;
            case -110: goto label38;
            case -109: goto label37;
            case -108: goto label36;
            case -107: goto label35;
            case -106: goto label34;
            case -105: goto label33;
            case -104: goto label32;
            case -103: goto label31;
            case -102: goto label30;
            case -101: goto label29;
            case -100: goto label28;
            default: goto label01;
        };

     label01:
        tableswitch(i0)
        {
            case -25: goto label27;
            case -24: goto label26;
            case -23: goto label25;
            case -22: goto label24;
            case -21: goto label23;
            case -20: goto label22;
            case -19: goto label21;
            case -18: goto label20;
            case -17: goto label19;
            case -16: goto label18;
            case -15: goto label17;
            case -14: goto label16;
            case -13: goto label15;
            case -12: goto label14;
            case -11: goto label13;
            case -10: goto label12;
            case -9: goto label11;
            case -8: goto label10;
            case -7: goto label09;
            case -6: goto label08;
            case -5: goto label07;
            case -4: goto label06;
            case -3: goto label05;
            case -2: goto label04;
            case -1: goto label03;
            default: goto label02;
        };

     label02:
        $r0 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        return $r0;

     label03:
        return "INSTALL_FAILED_ALREADY_EXISTS";

     label04:
        return "INSTALL_FAILED_INVALID_APK";

     label05:
        return "INSTALL_FAILED_INVALID_URI";

     label06:
        return "INSTALL_FAILED_INSUFFICIENT_STORAGE";

     label07:
        return "INSTALL_FAILED_DUPLICATE_PACKAGE";

     label08:
        return "INSTALL_FAILED_NO_SHARED_USER";

     label09:
        return "INSTALL_FAILED_UPDATE_INCOMPATIBLE";

     label10:
        return "INSTALL_FAILED_SHARED_USER_INCOMPATIBLE";

     label11:
        return "INSTALL_FAILED_MISSING_SHARED_LIBRARY";

     label12:
        return "INSTALL_FAILED_REPLACE_COULDNT_DELETE";

     label13:
        return "INSTALL_FAILED_DEXOPT";

     label14:
        return "INSTALL_FAILED_OLDER_SDK";

     label15:
        return "INSTALL_FAILED_CONFLICTING_PROVIDER";

     label16:
        return "INSTALL_FAILED_NEWER_SDK";

     label17:
        return "INSTALL_FAILED_TEST_ONLY";

     label18:
        return "INSTALL_FAILED_CPU_ABI_INCOMPATIBLE";

     label19:
        return "INSTALL_FAILED_MISSING_FEATURE";

     label20:
        return "INSTALL_FAILED_CONTAINER_ERROR";

     label21:
        return "INSTALL_FAILED_INVALID_INSTALL_LOCATION";

     label22:
        return "INSTALL_FAILED_MEDIA_UNAVAILABLE";

     label23:
        return "INSTALL_FAILED_VERIFICATION_TIMEOUT";

     label24:
        return "INSTALL_FAILED_VERIFICATION_FAILURE";

     label25:
        return "INSTALL_FAILED_PACKAGE_CHANGED";

     label26:
        return "INSTALL_FAILED_UID_CHANGED";

     label27:
        return "INSTALL_FAILED_VERSION_DOWNGRADE";

     label28:
        return "INSTALL_PARSE_FAILED_NOT_APK";

     label29:
        return "INSTALL_PARSE_FAILED_BAD_MANIFEST";

     label30:
        return "INSTALL_PARSE_FAILED_UNEXPECTED_EXCEPTION";

     label31:
        return "INSTALL_PARSE_FAILED_NO_CERTIFICATES";

     label32:
        return "INSTALL_PARSE_FAILED_INCONSISTENT_CERTIFICATES";

     label33:
        return "INSTALL_PARSE_FAILED_CERTIFICATE_ENCODING";

     label34:
        return "INSTALL_PARSE_FAILED_BAD_PACKAGE_NAME";

     label35:
        return "INSTALL_PARSE_FAILED_BAD_SHARED_USER_ID";

     label36:
        return "INSTALL_PARSE_FAILED_MANIFEST_MALFORMED";

     label37:
        return "INSTALL_PARSE_FAILED_MANIFEST_EMPTY";

     label38:
        return "INSTALL_FAILED_INTERNAL_ERROR";

     label39:
        return "INSTALL_FAILED_USER_RESTRICTED";

     label40:
        return "INSTALL_FAILED_DUPLICATE_PERMISSION";

     label41:
        return "INSTALL_FAILED_NO_MATCHING_ABIS";

     label42:
        return "INSTALL_SUCCEEDED";

     label43:
        return "INSTALL_FAILED_MISSING_SPLIT";

     label44:
        return "INSTALL_FAILED_ABORTED";

     label45:
        return "INSTALL_FAILED_BAD_DEX_METADATA";

     label46:
        return "INSTALL_FAILED_BAD_SIGNATURE";

     label47:
        return "INSTALL_FAILED_WRONG_INSTALLED_VERSION";

     label48:
        return "INSTALL_FAILED_PROCESS_NOT_DEFINED";
    }

    public static java.lang.String installStatusToString(int, java.lang.String)
    {
        int i0;
        java.lang.String r0, r1, $r7;
        java.lang.StringBuilder $r3;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.String;

        r1 = staticinvoke <android.content.pm.PackageManager: java.lang.String installStatusToString(int)>(i0);

        if r0 == null goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;

     label1:
        return r1;
    }

    public static void invalidatePackageInfoCache()
    {
        android.app.PropertyInvalidatedCache$AutoCorker $r0;

        $r0 = <android.content.pm.PackageManager: android.app.PropertyInvalidatedCache$AutoCorker sCacheAutoCorker>;

        virtualinvoke $r0.<android.app.PropertyInvalidatedCache$AutoCorker: void autoCork()>();

        return;
    }

    public static boolean isMoveStatusFinished(int)
    {
        int i0;
        boolean z0;

        i0 := @parameter0: int;

        if i0 < 0 goto label2;

        if i0 <= 100 goto label1;

        goto label2;

     label1:
        z0 = 0;

        goto label3;

     label2:
        z0 = 1;

     label3:
        return z0;
    }

    public static java.lang.String permissionFlagToString(int)
    {
        int i0;
        java.lang.String $r0;

        i0 := @parameter0: int;

        if i0 == 1 goto label18;

        if i0 == 2 goto label17;

        lookupswitch(i0)
        {
            case 4: goto label16;
            case 8: goto label15;
            case 16: goto label14;
            case 32: goto label13;
            case 64: goto label12;
            case 128: goto label11;
            case 256: goto label10;
            case 512: goto label09;
            case 2048: goto label08;
            case 4096: goto label07;
            case 8192: goto label06;
            case 16384: goto label05;
            case 32768: goto label04;
            case 65536: goto label03;
            case 131072: goto label02;
            default: goto label01;
        };

     label01:
        $r0 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        return $r0;

     label02:
        return "AUTO_REVOKED";

     label03:
        return "ONE_TIME";

     label04:
        return "GRANTED_BY_ROLE";

     label05:
        return "APPLY_RESTRICTION";

     label06:
        return "RESTRICTION_UPGRADE_EXEMPT";

     label07:
        return "RESTRICTION_SYSTEM_EXEMPT";

     label08:
        return "RESTRICTION_INSTALLER_EXEMPT";

     label09:
        return "USER_SENSITIVE_WHEN_DENIED";

     label10:
        return "USER_SENSITIVE_WHEN_GRANTED";

     label11:
        return "REVOKE_WHEN_REQUESTED";

     label12:
        return "REVIEW_REQUIRED";

     label13:
        return "GRANTED_BY_DEFAULT";

     label14:
        return "SYSTEM_FIXED";

     label15:
        return "REVOKED_COMPAT";

     label16:
        return "POLICY_FIXED";

     label17:
        return "USER_FIXED";

     label18:
        return "USER_SET";
    }

    public static void uncorkPackageInfoCache()
    {
        staticinvoke <android.app.PropertyInvalidatedCache: void uncorkInvalidations(java.lang.String)>("cache_key.package_info");

        return;
    }

    public abstract void addCrossProfileIntentFilter(android.content.IntentFilter, int, int, int);

    public abstract void addOnPermissionsChangeListener(android.content.pm.PackageManager$OnPermissionsChangedListener);

    public abstract void addPackageToPreferred(java.lang.String);

    public abstract boolean addPermission(android.content.pm.PermissionInfo);

    public abstract boolean addPermissionAsync(android.content.pm.PermissionInfo);

    public abstract void addPreferredActivity(android.content.IntentFilter, int, android.content.ComponentName[], android.content.ComponentName);

    public void addPreferredActivityAsUser(android.content.IntentFilter, int, android.content.ComponentName[], android.content.ComponentName, int)
    {
        android.content.pm.PackageManager r0;
        android.content.IntentFilter r1;
        int i0, i1;
        android.content.ComponentName[] r2;
        android.content.ComponentName r3;
        java.lang.RuntimeException $r4;

        r0 := @this: android.content.pm.PackageManager;

        r1 := @parameter0: android.content.IntentFilter;

        i0 := @parameter1: int;

        r2 := @parameter2: android.content.ComponentName[];

        r3 := @parameter3: android.content.ComponentName;

        i1 := @parameter4: int;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("Not implemented. Must override in a subclass.");

        throw $r4;
    }

    public boolean addWhitelistedRestrictedPermission(java.lang.String, java.lang.String, int)
    {
        android.content.pm.PackageManager r0;
        java.lang.String r1, r2;
        int i0;

        r0 := @this: android.content.pm.PackageManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        return 0;
    }

    public abstract boolean arePermissionsIndividuallyControlled();

    public android.content.Intent buildRequestPermissionsIntent(java.lang.String[])
    {
        android.content.pm.PackageManager r0;
        java.lang.String[] r1;
        boolean $z0;
        java.lang.IllegalArgumentException $r3;
        android.content.Intent $r4;
        java.lang.String $r6;

        r0 := @this: android.content.pm.PackageManager;

        r1 := @parameter0: java.lang.String[];

        $z0 = staticinvoke <com.android.internal.util.ArrayUtils: boolean isEmpty(java.lang.Object[])>(r1);

        if $z0 != 0 goto label1;

        $r4 = new android.content.Intent;

        specialinvoke $r4.<android.content.Intent: void <init>(java.lang.String)>("android.content.pm.action.REQUEST_PERMISSIONS");

        virtualinvoke $r4.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String[])>("android.content.pm.extra.REQUEST_PERMISSIONS_NAMES", r1);

        $r6 = virtualinvoke r0.<android.content.pm.PackageManager: java.lang.String getPermissionControllerPackageName()>();

        virtualinvoke $r4.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>($r6);

        return $r4;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("permission cannot be null or empty");

        throw $r3;
    }

    public abstract boolean canRequestPackageInstalls();

    public abstract java.lang.String[] canonicalToCurrentPackageNames(java.lang.String[]);

    public abstract int checkPermission(java.lang.String, java.lang.String);

    public abstract int checkSignatures(int, int);

    public abstract int checkSignatures(java.lang.String, java.lang.String);

    public abstract void clearApplicationUserData(java.lang.String, android.content.pm.IPackageDataObserver);

    public abstract void clearCrossProfileIntentFilters(int);

    public abstract void clearInstantAppCookie();

    public abstract void clearPackagePreferredActivities(java.lang.String);

    public abstract java.lang.String[] currentToCanonicalPackageNames(java.lang.String[]);

    public abstract void deleteApplicationCacheFiles(java.lang.String, android.content.pm.IPackageDataObserver);

    public abstract void deleteApplicationCacheFilesAsUser(java.lang.String, int, android.content.pm.IPackageDataObserver);

    public abstract void deletePackage(java.lang.String, android.content.pm.IPackageDeleteObserver, int);

    public abstract void deletePackageAsUser(java.lang.String, android.content.pm.IPackageDeleteObserver, int, int);

    public abstract void extendVerificationTimeout(int, int, long);

    public abstract void flushPackageRestrictionsAsUser(int);

    public void freeStorage(long, android.content.IntentSender)
    {
        android.content.pm.PackageManager r0;
        long l0;
        android.content.IntentSender r1;

        r0 := @this: android.content.pm.PackageManager;

        l0 := @parameter0: long;

        r1 := @parameter1: android.content.IntentSender;

        virtualinvoke r0.<android.content.pm.PackageManager: void freeStorage(java.lang.String,long,android.content.IntentSender)>(null, l0, r1);

        return;
    }

    public abstract void freeStorage(java.lang.String, long, android.content.IntentSender);

    public void freeStorageAndNotify(long, android.content.pm.IPackageDataObserver)
    {
        android.content.pm.PackageManager r0;
        long l0;
        android.content.pm.IPackageDataObserver r1;

        r0 := @this: android.content.pm.PackageManager;

        l0 := @parameter0: long;

        r1 := @parameter1: android.content.pm.IPackageDataObserver;

        virtualinvoke r0.<android.content.pm.PackageManager: void freeStorageAndNotify(java.lang.String,long,android.content.pm.IPackageDataObserver)>(null, l0, r1);

        return;
    }

    public abstract void freeStorageAndNotify(java.lang.String, long, android.content.pm.IPackageDataObserver);

    public abstract android.graphics.drawable.Drawable getActivityBanner(android.content.ComponentName) throws android.content.pm.PackageManager$NameNotFoundException;

    public abstract android.graphics.drawable.Drawable getActivityBanner(android.content.Intent) throws android.content.pm.PackageManager$NameNotFoundException;

    public abstract android.graphics.drawable.Drawable getActivityIcon(android.content.ComponentName) throws android.content.pm.PackageManager$NameNotFoundException;

    public abstract android.graphics.drawable.Drawable getActivityIcon(android.content.Intent) throws android.content.pm.PackageManager$NameNotFoundException;

    public abstract android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName, int) throws android.content.pm.PackageManager$NameNotFoundException;

    public abstract android.graphics.drawable.Drawable getActivityLogo(android.content.ComponentName) throws android.content.pm.PackageManager$NameNotFoundException;

    public abstract android.graphics.drawable.Drawable getActivityLogo(android.content.Intent) throws android.content.pm.PackageManager$NameNotFoundException;

    public abstract java.util.List getAllIntentFilters(java.lang.String);

    public abstract java.util.List getAllPermissionGroups(int);

    public java.lang.String getAppPredictionServicePackageName()
    {
        android.content.pm.PackageManager r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: android.content.pm.PackageManager;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("getAppPredictionServicePackageName not implemented in subclass");

        throw $r1;
    }

    public abstract android.graphics.drawable.Drawable getApplicationBanner(android.content.pm.ApplicationInfo);

    public abstract android.graphics.drawable.Drawable getApplicationBanner(java.lang.String) throws android.content.pm.PackageManager$NameNotFoundException;

    public abstract int getApplicationEnabledSetting(java.lang.String);

    public abstract boolean getApplicationHiddenSettingAsUser(java.lang.String, android.os.UserHandle);

    public abstract android.graphics.drawable.Drawable getApplicationIcon(android.content.pm.ApplicationInfo);

    public abstract android.graphics.drawable.Drawable getApplicationIcon(java.lang.String) throws android.content.pm.PackageManager$NameNotFoundException;

    public abstract android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String, int) throws android.content.pm.PackageManager$NameNotFoundException;

    public abstract android.content.pm.ApplicationInfo getApplicationInfoAsUser(java.lang.String, int, int) throws android.content.pm.PackageManager$NameNotFoundException;

    public android.content.pm.ApplicationInfo getApplicationInfoAsUser(java.lang.String, int, android.os.UserHandle) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.content.pm.PackageManager r0;
        java.lang.String r1;
        int i0, $i1;
        android.os.UserHandle r2;
        android.content.pm.ApplicationInfo $r3;

        r0 := @this: android.content.pm.PackageManager;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.UserHandle;

        $i1 = virtualinvoke r2.<android.os.UserHandle: int getIdentifier()>();

        $r3 = virtualinvoke r0.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfoAsUser(java.lang.String,int,int)>(r1, i0, $i1);

        return $r3;
    }

    public abstract java.lang.CharSequence getApplicationLabel(android.content.pm.ApplicationInfo);

    public abstract android.graphics.drawable.Drawable getApplicationLogo(android.content.pm.ApplicationInfo);

    public abstract android.graphics.drawable.Drawable getApplicationLogo(java.lang.String) throws android.content.pm.PackageManager$NameNotFoundException;

    public android.content.pm.dex.ArtManager getArtManager()
    {
        android.content.pm.PackageManager r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: android.content.pm.PackageManager;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("getArtManager not implemented in subclass");

        throw $r1;
    }

    public java.lang.String getAttentionServicePackageName()
    {
        android.content.pm.PackageManager r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: android.content.pm.PackageManager;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("getAttentionServicePackageName not implemented in subclass");

        throw $r1;
    }

    public java.lang.CharSequence getBackgroundPermissionOptionLabel()
    {
        android.content.pm.PackageManager r0;

        r0 := @this: android.content.pm.PackageManager;

        return "";
    }

    public abstract android.content.Intent getCarLaunchIntentForPackage(java.lang.String);

    public abstract android.content.pm.ChangedPackages getChangedPackages(int);

    public abstract int getComponentEnabledSetting(android.content.ComponentName);

    public java.lang.String getContentCaptureServicePackageName()
    {
        android.content.pm.PackageManager r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: android.content.pm.PackageManager;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("getContentCaptureServicePackageName not implemented in subclass");

        throw $r1;
    }

    public java.util.List getDeclaredSharedLibraries(java.lang.String, int)
    {
        android.content.pm.PackageManager r0;
        java.lang.String r1;
        int i0;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: android.content.pm.PackageManager;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("getDeclaredSharedLibraries() not implemented in subclass");

        throw $r2;
    }

    public abstract android.graphics.drawable.Drawable getDefaultActivityIcon();

    public abstract java.lang.String getDefaultBrowserPackageNameAsUser(int);

    public java.lang.String getDefaultTextClassifierPackageName()
    {
        android.content.pm.PackageManager r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: android.content.pm.PackageManager;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("getDefaultTextClassifierPackageName not implemented in subclass");

        throw $r1;
    }

    public abstract android.graphics.drawable.Drawable getDrawable(java.lang.String, int, android.content.pm.ApplicationInfo);

    public java.lang.CharSequence getHarmfulAppWarning(java.lang.String)
    {
        android.content.pm.PackageManager r0;
        java.lang.String r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: android.content.pm.PackageManager;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("getHarmfulAppWarning not implemented in subclass");

        throw $r2;
    }

    public abstract android.content.ComponentName getHomeActivities(java.util.List);

    public java.lang.String getIncidentReportApproverPackageName()
    {
        android.content.pm.PackageManager r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: android.content.pm.PackageManager;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("getIncidentReportApproverPackageName not implemented in subclass");

        throw $r1;
    }

    public abstract int getInstallReason(java.lang.String, android.os.UserHandle);

    public android.content.pm.InstallSourceInfo getInstallSourceInfo(java.lang.String) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.content.pm.PackageManager r0;
        java.lang.String r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: android.content.pm.PackageManager;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("getInstallSourceInfo not implemented");

        throw $r2;
    }

    public abstract java.util.List getInstalledApplications(int);

    public abstract java.util.List getInstalledApplicationsAsUser(int, int);

    public java.util.List getInstalledModules(int)
    {
        android.content.pm.PackageManager r0;
        int i0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: android.content.pm.PackageManager;

        i0 := @parameter0: int;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("getInstalledModules not implemented in subclass");

        throw $r1;
    }

    public abstract java.util.List getInstalledPackages(int);

    public abstract java.util.List getInstalledPackagesAsUser(int, int);

    public abstract java.lang.String getInstallerPackageName(java.lang.String);

    public abstract java.lang.String getInstantAppAndroidId(java.lang.String, android.os.UserHandle);

    public abstract byte[] getInstantAppCookie();

    public abstract int getInstantAppCookieMaxBytes();

    public abstract int getInstantAppCookieMaxSize();

    public abstract android.graphics.drawable.Drawable getInstantAppIcon(java.lang.String);

    public abstract android.content.ComponentName getInstantAppInstallerComponent();

    public abstract android.content.ComponentName getInstantAppResolverSettingsComponent();

    public abstract java.util.List getInstantApps();

    public abstract android.content.pm.InstrumentationInfo getInstrumentationInfo(android.content.ComponentName, int) throws android.content.pm.PackageManager$NameNotFoundException;

    public abstract java.util.List getIntentFilterVerifications(java.lang.String);

    public abstract int getIntentVerificationStatusAsUser(java.lang.String, int);

    public abstract android.content.pm.KeySet getKeySetByAlias(java.lang.String, java.lang.String);

    public abstract android.content.Intent getLaunchIntentForPackage(java.lang.String);

    public abstract android.content.Intent getLeanbackLaunchIntentForPackage(java.lang.String);

    public java.util.Set getMimeGroup(java.lang.String)
    {
        android.content.pm.PackageManager r0;
        java.lang.String r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: android.content.pm.PackageManager;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("getMimeGroup not implemented in subclass");

        throw $r2;
    }

    public android.content.pm.ModuleInfo getModuleInfo(java.lang.String, int) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.content.pm.PackageManager r0;
        java.lang.String r1;
        int i0;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: android.content.pm.PackageManager;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("getModuleInfo not implemented in subclass");

        throw $r2;
    }

    public abstract int getMoveStatus(int);

    public abstract java.lang.String getNameForUid(int);

    public abstract java.lang.String[] getNamesForUids(int[]);

    public android.content.pm.PackageInfo getPackageArchiveInfo(java.lang.String, int)
    {
        android.content.pm.PackageManager r0;
        int i0, $i1, $i2, $i3, $i4, i5;
        java.lang.Object $r1;
        android.content.pm.PackageUserState $r2;
        android.content.pm.parsing.ParsingPackageRead $r3;
        android.content.pm.PackageInfo $r4;
        java.lang.String r5;
        boolean z0, $z1;
        android.content.pm.parsing.result.ParseTypeImpl $r6;
        android.content.pm.parsing.result.ParseInput $r7;
        java.io.File $r8;
        android.content.pm.parsing.result.ParseResult r9;

        r0 := @this: android.content.pm.PackageManager;

        r5 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i5 = i0;

        $i1 = i0 & 786432;

        if $i1 != 0 goto label1;

        i5 = i0 | 786432;

     label1:
        $i2 = i5 & 64;

        if $i2 != 0 goto label3;

        $i4 = 134217728 & i5;

        if $i4 == 0 goto label2;

        goto label3;

     label2:
        z0 = 0;

        goto label4;

     label3:
        z0 = 1;

     label4:
        $r6 = staticinvoke <android.content.pm.parsing.result.ParseTypeImpl: android.content.pm.parsing.result.ParseTypeImpl forParsingWithoutPlatformCompat()>();

        $r7 = virtualinvoke $r6.<android.content.pm.parsing.result.ParseTypeImpl: android.content.pm.parsing.result.ParseInput reset()>();

        $r8 = new java.io.File;

        specialinvoke $r8.<java.io.File: void <init>(java.lang.String)>(r5);

        r9 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: android.content.pm.parsing.result.ParseResult parseDefault(android.content.pm.parsing.result.ParseInput,java.io.File,int,boolean)>($r7, $r8, 0, z0);

        $z1 = interfaceinvoke r9.<android.content.pm.parsing.result.ParseResult: boolean isError()>();

        if $z1 == 0 goto label5;

        return null;

     label5:
        $r1 = interfaceinvoke r9.<android.content.pm.parsing.result.ParseResult: java.lang.Object getResult()>();

        $r3 = (android.content.pm.parsing.ParsingPackageRead) $r1;

        $r2 = new android.content.pm.PackageUserState;

        specialinvoke $r2.<android.content.pm.PackageUserState: void <init>()>();

        $i3 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        $r4 = staticinvoke <android.content.pm.parsing.PackageInfoWithoutStateUtils: android.content.pm.PackageInfo generate(android.content.pm.parsing.ParsingPackageRead,int[],int,long,long,java.util.Set,android.content.pm.PackageUserState,int)>($r3, null, i5, 0L, 0L, null, $r2, $i3);

        return $r4;
    }

    public abstract java.util.List getPackageCandidateVolumes(android.content.pm.ApplicationInfo);

    public abstract android.os.storage.VolumeInfo getPackageCurrentVolume(android.content.pm.ApplicationInfo);

    public abstract int[] getPackageGids(java.lang.String) throws android.content.pm.PackageManager$NameNotFoundException;

    public abstract int[] getPackageGids(java.lang.String, int) throws android.content.pm.PackageManager$NameNotFoundException;

    public abstract android.content.pm.PackageInfo getPackageInfo(android.content.pm.VersionedPackage, int) throws android.content.pm.PackageManager$NameNotFoundException;

    public abstract android.content.pm.PackageInfo getPackageInfo(java.lang.String, int) throws android.content.pm.PackageManager$NameNotFoundException;

    public abstract android.content.pm.PackageInfo getPackageInfoAsUser(java.lang.String, int, int) throws android.content.pm.PackageManager$NameNotFoundException;

    public abstract android.content.pm.PackageInstaller getPackageInstaller();

    public void getPackageSizeInfo(java.lang.String, android.content.pm.IPackageStatsObserver)
    {
        android.content.pm.PackageManager r0;
        java.lang.String r1;
        android.content.pm.IPackageStatsObserver r2;
        int $i0;

        r0 := @this: android.content.pm.PackageManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.content.pm.IPackageStatsObserver;

        $i0 = virtualinvoke r0.<android.content.pm.PackageManager: int getUserId()>();

        virtualinvoke r0.<android.content.pm.PackageManager: void getPackageSizeInfoAsUser(java.lang.String,int,android.content.pm.IPackageStatsObserver)>(r1, $i0, r2);

        return;
    }

    public abstract void getPackageSizeInfoAsUser(java.lang.String, int, android.content.pm.IPackageStatsObserver);

    public abstract int getPackageUid(java.lang.String, int) throws android.content.pm.PackageManager$NameNotFoundException;

    public abstract int getPackageUidAsUser(java.lang.String, int) throws android.content.pm.PackageManager$NameNotFoundException;

    public abstract int getPackageUidAsUser(java.lang.String, int, int) throws android.content.pm.PackageManager$NameNotFoundException;

    public abstract java.lang.String[] getPackagesForUid(int);

    public abstract java.util.List getPackagesHoldingPermissions(java.lang.String[], int);

    public abstract java.lang.String getPermissionControllerPackageName();

    public abstract int getPermissionFlags(java.lang.String, java.lang.String, android.os.UserHandle);

    public abstract android.content.pm.PermissionGroupInfo getPermissionGroupInfo(java.lang.String, int) throws android.content.pm.PackageManager$NameNotFoundException;

    public abstract android.content.pm.PermissionInfo getPermissionInfo(java.lang.String, int) throws android.content.pm.PackageManager$NameNotFoundException;

    public abstract int getPreferredActivities(java.util.List, java.util.List, java.lang.String);

    public abstract java.util.List getPreferredPackages(int);

    public abstract java.util.List getPrimaryStorageCandidateVolumes();

    public abstract android.os.storage.VolumeInfo getPrimaryStorageCurrentVolume();

    public abstract android.content.pm.ProviderInfo getProviderInfo(android.content.ComponentName, int) throws android.content.pm.PackageManager$NameNotFoundException;

    public abstract android.content.pm.ActivityInfo getReceiverInfo(android.content.ComponentName, int) throws android.content.pm.PackageManager$NameNotFoundException;

    public abstract android.content.res.Resources getResourcesForActivity(android.content.ComponentName) throws android.content.pm.PackageManager$NameNotFoundException;

    public abstract android.content.res.Resources getResourcesForApplication(android.content.pm.ApplicationInfo) throws android.content.pm.PackageManager$NameNotFoundException;

    public abstract android.content.res.Resources getResourcesForApplication(java.lang.String) throws android.content.pm.PackageManager$NameNotFoundException;

    public abstract android.content.res.Resources getResourcesForApplicationAsUser(java.lang.String, int) throws android.content.pm.PackageManager$NameNotFoundException;

    public abstract android.content.pm.ServiceInfo getServiceInfo(android.content.ComponentName, int) throws android.content.pm.PackageManager$NameNotFoundException;

    public abstract java.lang.String getServicesSystemSharedLibraryPackageName();

    public java.lang.String getSetupWizardPackageName()
    {
        android.content.pm.PackageManager r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: android.content.pm.PackageManager;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("getSetupWizardPackageName not implemented in subclass");

        throw $r1;
    }

    public abstract java.util.List getSharedLibraries(int);

    public abstract java.util.List getSharedLibrariesAsUser(int, int);

    public abstract java.lang.String getSharedSystemSharedLibraryPackageName();

    public abstract android.content.pm.KeySet getSigningKeySet(java.lang.String);

    public android.os.Bundle getSuspendedPackageAppExtras()
    {
        android.content.pm.PackageManager r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: android.content.pm.PackageManager;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("getSuspendedPackageAppExtras not implemented");

        throw $r1;
    }

    public boolean getSyntheticAppDetailsActivityEnabled(java.lang.String)
    {
        android.content.pm.PackageManager r0;
        java.lang.String r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: android.content.pm.PackageManager;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("getSyntheticAppDetailsActivityEnabled not implemented");

        throw $r2;
    }

    public abstract android.content.pm.FeatureInfo[] getSystemAvailableFeatures();

    public java.lang.String getSystemCaptionsServicePackageName()
    {
        android.content.pm.PackageManager r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: android.content.pm.PackageManager;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("getSystemCaptionsServicePackageName not implemented in subclass");

        throw $r1;
    }

    public abstract java.lang.String[] getSystemSharedLibraryNames();

    public java.lang.String getSystemTextClassifierPackageName()
    {
        android.content.pm.PackageManager r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: android.content.pm.PackageManager;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("getSystemTextClassifierPackageName not implemented in subclass");

        throw $r1;
    }

    public abstract java.lang.CharSequence getText(java.lang.String, int, android.content.pm.ApplicationInfo);

    public abstract int getUidForSharedUser(java.lang.String) throws android.content.pm.PackageManager$NameNotFoundException;

    public java.lang.String[] getUnsuspendablePackages(java.lang.String[])
    {
        android.content.pm.PackageManager r0;
        java.lang.String[] r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: android.content.pm.PackageManager;

        r1 := @parameter0: java.lang.String[];

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("getUnsuspendablePackages not implemented");

        throw $r2;
    }

    public abstract android.graphics.drawable.Drawable getUserBadgeForDensity(android.os.UserHandle, int);

    public abstract android.graphics.drawable.Drawable getUserBadgeForDensityNoBackground(android.os.UserHandle, int);

    public abstract android.graphics.drawable.Drawable getUserBadgedDrawableForDensity(android.graphics.drawable.Drawable, android.os.UserHandle, android.graphics.Rect, int);

    public abstract android.graphics.drawable.Drawable getUserBadgedIcon(android.graphics.drawable.Drawable, android.os.UserHandle);

    public abstract java.lang.CharSequence getUserBadgedLabel(java.lang.CharSequence, android.os.UserHandle);

    public int getUserId()
    {
        android.content.pm.PackageManager r0;
        int $i0;

        r0 := @this: android.content.pm.PackageManager;

        $i0 = staticinvoke <android.os.UserHandle: int myUserId()>();

        return $i0;
    }

    public abstract android.content.pm.VerifierDeviceIdentity getVerifierDeviceIdentity();

    public java.lang.String getWellbeingPackageName()
    {
        android.content.pm.PackageManager r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: android.content.pm.PackageManager;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("getWellbeingPackageName not implemented in subclass");

        throw $r1;
    }

    public java.util.Set getWhitelistedRestrictedPermissions(java.lang.String, int)
    {
        android.content.pm.PackageManager r0;
        java.lang.String r1;
        int i0;
        java.util.Set $r2;

        r0 := @this: android.content.pm.PackageManager;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();

        return $r2;
    }

    public abstract android.content.res.XmlResourceParser getXml(java.lang.String, int, android.content.pm.ApplicationInfo);

    public abstract void grantRuntimePermission(java.lang.String, java.lang.String, android.os.UserHandle);

    public boolean hasSigningCertificate(int, byte[], int)
    {
        android.content.pm.PackageManager r0;
        int i0, i1;
        byte[] r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: android.content.pm.PackageManager;

        i0 := @parameter0: int;

        r1 := @parameter1: byte[];

        i1 := @parameter2: int;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("hasSigningCertificate not implemented in subclass");

        throw $r2;
    }

    public boolean hasSigningCertificate(java.lang.String, byte[], int)
    {
        android.content.pm.PackageManager r0;
        java.lang.String r1;
        byte[] r2;
        int i0;
        java.lang.UnsupportedOperationException $r3;

        r0 := @this: android.content.pm.PackageManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: byte[];

        i0 := @parameter2: int;

        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("hasSigningCertificate not implemented in subclass");

        throw $r3;
    }

    public abstract boolean hasSystemFeature(java.lang.String);

    public abstract boolean hasSystemFeature(java.lang.String, int);

    public abstract int installExistingPackage(java.lang.String) throws android.content.pm.PackageManager$NameNotFoundException;

    public abstract int installExistingPackage(java.lang.String, int) throws android.content.pm.PackageManager$NameNotFoundException;

    public abstract int installExistingPackageAsUser(java.lang.String, int) throws android.content.pm.PackageManager$NameNotFoundException;

    public boolean isAutoRevokeWhitelisted()
    {
        android.content.pm.PackageManager r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: android.content.pm.PackageManager;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("isAutoRevokeWhitelisted not implemented in subclass");

        throw $r1;
    }

    public boolean isAutoRevokeWhitelisted(java.lang.String)
    {
        android.content.pm.PackageManager r0;
        java.lang.String r1;

        r0 := @this: android.content.pm.PackageManager;

        r1 := @parameter0: java.lang.String;

        return 0;
    }

    public boolean isDefaultApplicationIcon(android.graphics.drawable.Drawable)
    {
        android.content.pm.PackageManager r0;
        android.graphics.drawable.Drawable r1;
        boolean z0, z1;
        android.graphics.drawable.AdaptiveIconDrawable $r2;
        int i0;

        r0 := @this: android.content.pm.PackageManager;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        z0 = r1 instanceof android.graphics.drawable.AdaptiveIconDrawable;

        z1 = 0;

        if z0 == 0 goto label1;

        $r2 = (android.graphics.drawable.AdaptiveIconDrawable) r1;

        i0 = virtualinvoke $r2.<android.graphics.drawable.AdaptiveIconDrawable: int getSourceDrawableResId()>();

        goto label2;

     label1:
        i0 = 0;

     label2:
        if i0 == 17301651 goto label3;

        if i0 != 17303652 goto label4;

     label3:
        z1 = 1;

     label4:
        return z1;
    }

    public boolean isDeviceUpgrading()
    {
        android.content.pm.PackageManager r0;

        r0 := @this: android.content.pm.PackageManager;

        return 0;
    }

    public abstract boolean isInstantApp();

    public abstract boolean isInstantApp(java.lang.String);

    public abstract boolean isPackageAvailable(java.lang.String);

    public boolean isPackageStateProtected(java.lang.String, int)
    {
        android.content.pm.PackageManager r0;
        java.lang.String r1;
        int i0;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: android.content.pm.PackageManager;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("isPackageStateProtected not implemented in subclass");

        throw $r2;
    }

    public boolean isPackageSuspended()
    {
        android.content.pm.PackageManager r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: android.content.pm.PackageManager;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("isPackageSuspended not implemented");

        throw $r1;
    }

    public boolean isPackageSuspended(java.lang.String) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.content.pm.PackageManager r0;
        java.lang.String r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: android.content.pm.PackageManager;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("isPackageSuspended not implemented");

        throw $r2;
    }

    public abstract boolean isPackageSuspendedForUser(java.lang.String, int);

    public abstract boolean isPermissionRevokedByPolicy(java.lang.String, java.lang.String);

    public abstract boolean isSafeMode();

    public abstract boolean isSignedBy(java.lang.String, android.content.pm.KeySet);

    public abstract boolean isSignedByExactly(java.lang.String, android.content.pm.KeySet);

    public abstract boolean isUpgrade();

    public abstract boolean isWirelessConsentModeEnabled();

    public abstract android.graphics.drawable.Drawable loadItemIcon(android.content.pm.PackageItemInfo, android.content.pm.ApplicationInfo);

    public abstract android.graphics.drawable.Drawable loadUnbadgedItemIcon(android.content.pm.PackageItemInfo, android.content.pm.ApplicationInfo);

    public abstract int movePackage(java.lang.String, android.os.storage.VolumeInfo);

    public abstract int movePrimaryStorage(android.os.storage.VolumeInfo);

    public abstract java.util.List queryBroadcastReceivers(android.content.Intent, int);

    public java.util.List queryBroadcastReceivers(android.content.Intent, int, int)
    {
        android.content.pm.PackageManager r0;
        android.content.Intent r1;
        int i0, i1, $i2;
        dalvik.system.VMRuntime $r2;
        java.lang.UnsupportedOperationException $r3;
        java.util.List $r4;

        r0 := @this: android.content.pm.PackageManager;

        r1 := @parameter0: android.content.Intent;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = staticinvoke <dalvik.system.VMRuntime: dalvik.system.VMRuntime getRuntime()>();

        $i2 = virtualinvoke $r2.<dalvik.system.VMRuntime: int getTargetSdkVersion()>();

        if $i2 >= 26 goto label1;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("PackageManager", "Shame on you for calling the hidden API queryBroadcastReceivers(). Shame!");

        $r4 = virtualinvoke r0.<android.content.pm.PackageManager: java.util.List queryBroadcastReceiversAsUser(android.content.Intent,int,int)>(r1, i0, i1);

        return $r4;

     label1:
        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Shame on you for calling the hidden API queryBroadcastReceivers(). Shame!");

        throw $r3;
    }

    public abstract java.util.List queryBroadcastReceiversAsUser(android.content.Intent, int, int);

    public java.util.List queryBroadcastReceiversAsUser(android.content.Intent, int, android.os.UserHandle)
    {
        android.content.pm.PackageManager r0;
        android.content.Intent r1;
        int i0, $i1;
        android.os.UserHandle r2;
        java.util.List $r3;

        r0 := @this: android.content.pm.PackageManager;

        r1 := @parameter0: android.content.Intent;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.UserHandle;

        $i1 = virtualinvoke r2.<android.os.UserHandle: int getIdentifier()>();

        $r3 = virtualinvoke r0.<android.content.pm.PackageManager: java.util.List queryBroadcastReceiversAsUser(android.content.Intent,int,int)>(r1, i0, $i1);

        return $r3;
    }

    public abstract java.util.List queryContentProviders(java.lang.String, int, int);

    public java.util.List queryContentProviders(java.lang.String, int, int, java.lang.String)
    {
        android.content.pm.PackageManager r0;
        java.lang.String r1, r2;
        int i0, i1;
        java.util.List $r3;

        r0 := @this: android.content.pm.PackageManager;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: java.lang.String;

        $r3 = virtualinvoke r0.<android.content.pm.PackageManager: java.util.List queryContentProviders(java.lang.String,int,int)>(r1, i0, i1);

        return $r3;
    }

    public abstract java.util.List queryInstrumentation(java.lang.String, int);

    public abstract java.util.List queryIntentActivities(android.content.Intent, int);

    public abstract java.util.List queryIntentActivitiesAsUser(android.content.Intent, int, int);

    public java.util.List queryIntentActivitiesAsUser(android.content.Intent, int, android.os.UserHandle)
    {
        android.content.pm.PackageManager r0;
        android.content.Intent r1;
        int i0, $i1;
        android.os.UserHandle r2;
        java.util.List $r3;

        r0 := @this: android.content.pm.PackageManager;

        r1 := @parameter0: android.content.Intent;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.UserHandle;

        $i1 = virtualinvoke r2.<android.os.UserHandle: int getIdentifier()>();

        $r3 = virtualinvoke r0.<android.content.pm.PackageManager: java.util.List queryIntentActivitiesAsUser(android.content.Intent,int,int)>(r1, i0, $i1);

        return $r3;
    }

    public abstract java.util.List queryIntentActivityOptions(android.content.ComponentName, android.content.Intent[], android.content.Intent, int);

    public abstract java.util.List queryIntentContentProviders(android.content.Intent, int);

    public abstract java.util.List queryIntentContentProvidersAsUser(android.content.Intent, int, int);

    public java.util.List queryIntentContentProvidersAsUser(android.content.Intent, int, android.os.UserHandle)
    {
        android.content.pm.PackageManager r0;
        android.content.Intent r1;
        int i0, $i1;
        android.os.UserHandle r2;
        java.util.List $r3;

        r0 := @this: android.content.pm.PackageManager;

        r1 := @parameter0: android.content.Intent;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.UserHandle;

        $i1 = virtualinvoke r2.<android.os.UserHandle: int getIdentifier()>();

        $r3 = virtualinvoke r0.<android.content.pm.PackageManager: java.util.List queryIntentContentProvidersAsUser(android.content.Intent,int,int)>(r1, i0, $i1);

        return $r3;
    }

    public abstract java.util.List queryIntentServices(android.content.Intent, int);

    public abstract java.util.List queryIntentServicesAsUser(android.content.Intent, int, int);

    public java.util.List queryIntentServicesAsUser(android.content.Intent, int, android.os.UserHandle)
    {
        android.content.pm.PackageManager r0;
        android.content.Intent r1;
        int i0, $i1;
        android.os.UserHandle r2;
        java.util.List $r3;

        r0 := @this: android.content.pm.PackageManager;

        r1 := @parameter0: android.content.Intent;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.UserHandle;

        $i1 = virtualinvoke r2.<android.os.UserHandle: int getIdentifier()>();

        $r3 = virtualinvoke r0.<android.content.pm.PackageManager: java.util.List queryIntentServicesAsUser(android.content.Intent,int,int)>(r1, i0, $i1);

        return $r3;
    }

    public abstract java.util.List queryPermissionsByGroup(java.lang.String, int) throws android.content.pm.PackageManager$NameNotFoundException;

    public abstract void registerDexModule(java.lang.String, android.content.pm.PackageManager$DexModuleRegisterCallback);

    public abstract void registerMoveCallback(android.content.pm.PackageManager$MoveCallback, android.os.Handler);

    public abstract void removeOnPermissionsChangeListener(android.content.pm.PackageManager$OnPermissionsChangedListener);

    public abstract void removePackageFromPreferred(java.lang.String);

    public abstract void removePermission(java.lang.String);

    public boolean removeWhitelistedRestrictedPermission(java.lang.String, java.lang.String, int)
    {
        android.content.pm.PackageManager r0;
        java.lang.String r1, r2;
        int i0;

        r0 := @this: android.content.pm.PackageManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        return 0;
    }

    public void replacePreferredActivity(android.content.IntentFilter, int, java.util.List, android.content.ComponentName)
    {
        android.content.pm.PackageManager r0;
        android.content.IntentFilter r1;
        int i0;
        java.util.List r2;
        android.content.ComponentName r3;
        android.content.ComponentName[] $r4, $r6;
        java.lang.Object[] $r5;

        r0 := @this: android.content.pm.PackageManager;

        r1 := @parameter0: android.content.IntentFilter;

        i0 := @parameter1: int;

        r2 := @parameter2: java.util.List;

        r3 := @parameter3: android.content.ComponentName;

        $r4 = newarray (android.content.ComponentName)[0];

        $r5 = interfaceinvoke r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r4);

        $r6 = (android.content.ComponentName[]) $r5;

        virtualinvoke r0.<android.content.pm.PackageManager: void replacePreferredActivity(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName)>(r1, i0, $r6, r3);

        return;
    }

    public abstract void replacePreferredActivity(android.content.IntentFilter, int, android.content.ComponentName[], android.content.ComponentName);

    public void replacePreferredActivityAsUser(android.content.IntentFilter, int, android.content.ComponentName[], android.content.ComponentName, int)
    {
        android.content.pm.PackageManager r0;
        android.content.IntentFilter r1;
        int i0, i1;
        android.content.ComponentName[] r2;
        android.content.ComponentName r3;
        java.lang.RuntimeException $r4;

        r0 := @this: android.content.pm.PackageManager;

        r1 := @parameter0: android.content.IntentFilter;

        i0 := @parameter1: int;

        r2 := @parameter2: android.content.ComponentName[];

        r3 := @parameter3: android.content.ComponentName;

        i1 := @parameter4: int;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("Not implemented. Must override in a subclass.");

        throw $r4;
    }

    public abstract android.content.pm.ResolveInfo resolveActivity(android.content.Intent, int);

    public abstract android.content.pm.ResolveInfo resolveActivityAsUser(android.content.Intent, int, int);

    public abstract android.content.pm.ProviderInfo resolveContentProvider(java.lang.String, int);

    public abstract android.content.pm.ProviderInfo resolveContentProviderAsUser(java.lang.String, int, int);

    public abstract android.content.pm.ResolveInfo resolveService(android.content.Intent, int);

    public abstract android.content.pm.ResolveInfo resolveServiceAsUser(android.content.Intent, int, int);

    public abstract void revokeRuntimePermission(java.lang.String, java.lang.String, android.os.UserHandle);

    public void revokeRuntimePermission(java.lang.String, java.lang.String, android.os.UserHandle, java.lang.String)
    {
        android.content.pm.PackageManager r0;
        java.lang.String r1, r2, r4;
        android.os.UserHandle r3;

        r0 := @this: android.content.pm.PackageManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.UserHandle;

        r4 := @parameter3: java.lang.String;

        virtualinvoke r0.<android.content.pm.PackageManager: void revokeRuntimePermission(java.lang.String,java.lang.String,android.os.UserHandle)>(r1, r2, r3);

        return;
    }

    public void sendDeviceCustomizationReadyBroadcast()
    {
        android.content.pm.PackageManager r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: android.content.pm.PackageManager;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("sendDeviceCustomizationReadyBroadcast not implemented in subclass");

        throw $r1;
    }

    public abstract void setApplicationCategoryHint(java.lang.String, int);

    public abstract void setApplicationEnabledSetting(java.lang.String, int, int);

    public abstract boolean setApplicationHiddenSettingAsUser(java.lang.String, boolean, android.os.UserHandle);

    public boolean setAutoRevokeWhitelisted(java.lang.String, boolean)
    {
        android.content.pm.PackageManager r0;
        java.lang.String r1;
        boolean z0;

        r0 := @this: android.content.pm.PackageManager;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        return 0;
    }

    public abstract void setComponentEnabledSetting(android.content.ComponentName, int, int);

    public abstract boolean setDefaultBrowserPackageNameAsUser(java.lang.String, int);

    public java.lang.String[] setDistractingPackageRestrictions(java.lang.String[], int)
    {
        android.content.pm.PackageManager r0;
        java.lang.String[] r1;
        int i0;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: android.content.pm.PackageManager;

        r1 := @parameter0: java.lang.String[];

        i0 := @parameter1: int;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("setDistractingPackageRestrictions not implemented");

        throw $r2;
    }

    public void setHarmfulAppWarning(java.lang.String, java.lang.CharSequence)
    {
        android.content.pm.PackageManager r0;
        java.lang.String r1;
        java.lang.CharSequence r2;
        java.lang.UnsupportedOperationException $r3;

        r0 := @this: android.content.pm.PackageManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.CharSequence;

        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("setHarmfulAppWarning not implemented in subclass");

        throw $r3;
    }

    public abstract void setInstallerPackageName(java.lang.String, java.lang.String);

    public abstract boolean setInstantAppCookie(byte[]);

    public void setMimeGroup(java.lang.String, java.util.Set)
    {
        android.content.pm.PackageManager r0;
        java.lang.String r1;
        java.util.Set r2;
        java.lang.UnsupportedOperationException $r3;

        r0 := @this: android.content.pm.PackageManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Set;

        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("setMimeGroup not implemented in subclass");

        throw $r3;
    }

    public java.lang.String[] setPackagesSuspended(java.lang.String[], boolean, android.os.PersistableBundle, android.os.PersistableBundle, android.content.pm.SuspendDialogInfo)
    {
        android.content.pm.PackageManager r0;
        java.lang.String[] r1;
        boolean z0;
        android.os.PersistableBundle r2, r3;
        android.content.pm.SuspendDialogInfo r4;
        java.lang.UnsupportedOperationException $r5;

        r0 := @this: android.content.pm.PackageManager;

        r1 := @parameter0: java.lang.String[];

        z0 := @parameter1: boolean;

        r2 := @parameter2: android.os.PersistableBundle;

        r3 := @parameter3: android.os.PersistableBundle;

        r4 := @parameter4: android.content.pm.SuspendDialogInfo;

        $r5 = new java.lang.UnsupportedOperationException;

        specialinvoke $r5.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("setPackagesSuspended not implemented");

        throw $r5;
    }

    public java.lang.String[] setPackagesSuspended(java.lang.String[], boolean, android.os.PersistableBundle, android.os.PersistableBundle, java.lang.String)
    {
        android.content.pm.PackageManager r0;
        java.lang.String[] r1;
        boolean z0;
        android.os.PersistableBundle r2, r3;
        java.lang.String r4;
        java.lang.UnsupportedOperationException $r5;

        r0 := @this: android.content.pm.PackageManager;

        r1 := @parameter0: java.lang.String[];

        z0 := @parameter1: boolean;

        r2 := @parameter2: android.os.PersistableBundle;

        r3 := @parameter3: android.os.PersistableBundle;

        r4 := @parameter4: java.lang.String;

        $r5 = new java.lang.UnsupportedOperationException;

        specialinvoke $r5.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("setPackagesSuspended not implemented");

        throw $r5;
    }

    public void setSyntheticAppDetailsActivityEnabled(java.lang.String, boolean)
    {
        android.content.pm.PackageManager r0;
        java.lang.String r1;
        boolean z0;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: android.content.pm.PackageManager;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("setSyntheticAppDetailsActivityEnabled not implemented");

        throw $r2;
    }

    public void setSystemAppState(java.lang.String, int)
    {
        android.content.pm.PackageManager r0;
        java.lang.String r1;
        int i0;
        java.lang.RuntimeException $r2;

        r0 := @this: android.content.pm.PackageManager;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Not implemented. Must override in a subclass");

        throw $r2;
    }

    public abstract void setUpdateAvailable(java.lang.String, boolean);

    public abstract boolean shouldShowRequestPermissionRationale(java.lang.String);

    public abstract void unregisterMoveCallback(android.content.pm.PackageManager$MoveCallback);

    public abstract void updateInstantAppCookie(byte[]);

    public abstract boolean updateIntentVerificationStatusAsUser(java.lang.String, int, int);

    public abstract void updatePermissionFlags(java.lang.String, java.lang.String, int, int, android.os.UserHandle);

    public abstract void verifyIntentFilter(int, int, java.util.List);

    public abstract void verifyPendingInstall(int, int);
}
