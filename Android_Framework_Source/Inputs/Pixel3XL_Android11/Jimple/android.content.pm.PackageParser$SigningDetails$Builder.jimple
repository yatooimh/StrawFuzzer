public class android.content.pm.PackageParser$SigningDetails$Builder extends java.lang.Object
{
    private android.content.pm.Signature[] mPastSigningCertificates;
    private int mSignatureSchemeVersion;
    private android.content.pm.Signature[] mSignatures;

    public void <init>()
    {
        android.content.pm.PackageParser$SigningDetails$Builder r0;

        r0 := @this: android.content.pm.PackageParser$SigningDetails$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.content.pm.PackageParser$SigningDetails$Builder: int mSignatureSchemeVersion> = 0;

        return;
    }

    private void checkInvariants()
    {
        android.content.pm.PackageParser$SigningDetails$Builder r0;
        android.content.pm.Signature[] $r1;
        java.lang.IllegalStateException $r2;

        r0 := @this: android.content.pm.PackageParser$SigningDetails$Builder;

        $r1 = r0.<android.content.pm.PackageParser$SigningDetails$Builder: android.content.pm.Signature[] mSignatures>;

        if $r1 == null goto label1;

        return;

     label1:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("SigningDetails requires the current signing certificates.");

        throw $r2;
    }

    public android.content.pm.PackageParser$SigningDetails build() throws java.security.cert.CertificateException
    {
        android.content.pm.PackageParser$SigningDetails$Builder r0;
        android.content.pm.PackageParser$SigningDetails $r1;
        android.content.pm.Signature[] $r2, $r3;
        int $i0;

        r0 := @this: android.content.pm.PackageParser$SigningDetails$Builder;

        specialinvoke r0.<android.content.pm.PackageParser$SigningDetails$Builder: void checkInvariants()>();

        $r1 = new android.content.pm.PackageParser$SigningDetails;

        $r3 = r0.<android.content.pm.PackageParser$SigningDetails$Builder: android.content.pm.Signature[] mSignatures>;

        $i0 = r0.<android.content.pm.PackageParser$SigningDetails$Builder: int mSignatureSchemeVersion>;

        $r2 = r0.<android.content.pm.PackageParser$SigningDetails$Builder: android.content.pm.Signature[] mPastSigningCertificates>;

        specialinvoke $r1.<android.content.pm.PackageParser$SigningDetails: void <init>(android.content.pm.Signature[],int,android.content.pm.Signature[])>($r3, $i0, $r2);

        return $r1;
    }

    public android.content.pm.PackageParser$SigningDetails$Builder setPastSigningCertificates(android.content.pm.Signature[])
    {
        android.content.pm.PackageParser$SigningDetails$Builder r0;
        android.content.pm.Signature[] r1;

        r0 := @this: android.content.pm.PackageParser$SigningDetails$Builder;

        r1 := @parameter0: android.content.pm.Signature[];

        r0.<android.content.pm.PackageParser$SigningDetails$Builder: android.content.pm.Signature[] mPastSigningCertificates> = r1;

        return r0;
    }

    public android.content.pm.PackageParser$SigningDetails$Builder setSignatureSchemeVersion(int)
    {
        android.content.pm.PackageParser$SigningDetails$Builder r0;
        int i0;

        r0 := @this: android.content.pm.PackageParser$SigningDetails$Builder;

        i0 := @parameter0: int;

        r0.<android.content.pm.PackageParser$SigningDetails$Builder: int mSignatureSchemeVersion> = i0;

        return r0;
    }

    public android.content.pm.PackageParser$SigningDetails$Builder setSignatures(android.content.pm.Signature[])
    {
        android.content.pm.PackageParser$SigningDetails$Builder r0;
        android.content.pm.Signature[] r1;

        r0 := @this: android.content.pm.PackageParser$SigningDetails$Builder;

        r1 := @parameter0: android.content.pm.Signature[];

        r0.<android.content.pm.PackageParser$SigningDetails$Builder: android.content.pm.Signature[] mSignatures> = r1;

        return r0;
    }
}
