public class android.content.pm.PackageParser extends java.lang.Object
{
    public static final java.lang.String ANDROID_MANIFEST_FILENAME;
    public static final java.lang.String ANDROID_RESOURCES;
    public static final java.lang.String APEX_FILE_EXTENSION;
    public static final java.lang.String APK_FILE_EXTENSION;
    public static final java.util.Set CHILD_PACKAGE_TAGS;
    public static final boolean DEBUG_BACKUP;
    public static final boolean DEBUG_JAR;
    public static final boolean DEBUG_PARSER;
    private static final int DEFAULT_MIN_SDK_VERSION;
    public static final float DEFAULT_PRE_O_MAX_ASPECT_RATIO;
    public static final float DEFAULT_PRE_Q_MIN_ASPECT_RATIO;
    public static final float DEFAULT_PRE_Q_MIN_ASPECT_RATIO_WATCH;
    private static final int DEFAULT_TARGET_SDK_VERSION;
    public static final boolean LOG_PARSE_TIMINGS;
    public static final int LOG_PARSE_TIMINGS_THRESHOLD_MS;
    public static final boolean LOG_UNSAFE_BROADCASTS;
    public static final java.lang.String METADATA_ACTIVITY_WINDOW_LAYOUT_AFFINITY;
    public static final java.lang.String METADATA_MAX_ASPECT_RATIO;
    public static final java.lang.String METADATA_SUPPORTS_SIZE_CHANGES;
    public static final java.lang.String MNT_EXPAND;
    public static final boolean MULTI_PACKAGE_APK_ENABLED;
    public static final android.content.pm.PackageParser$NewPermissionInfo[] NEW_PERMISSIONS;
    public static final int PARSE_CHATTY;
    public static final int PARSE_COLLECT_CERTIFICATES;
    public static final int PARSE_DEFAULT_INSTALL_LOCATION;
    public static final int PARSE_DEFAULT_TARGET_SANDBOX;
    public static final int PARSE_ENFORCE_CODE;
    public static final int PARSE_EXTERNAL_STORAGE;
    public static final int PARSE_IGNORE_PROCESSES;
    public static final int PARSE_IS_SYSTEM_DIR;
    public static final int PARSE_MUST_BE_APK;
    private static final java.lang.String PROPERTY_CHILD_PACKAGES_ENABLED;
    private static final int RECREATE_ON_CONFIG_CHANGES_MASK;
    public static final boolean RIGID_PARSER;
    public static final java.util.Set SAFE_BROADCASTS;
    public static final java.lang.String[] SDK_CODENAMES;
    public static final int SDK_VERSION;
    private static final java.lang.String TAG;
    public static final java.lang.String TAG_ADOPT_PERMISSIONS;
    public static final java.lang.String TAG_APPLICATION;
    public static final java.lang.String TAG_ATTRIBUTION;
    public static final java.lang.String TAG_COMPATIBLE_SCREENS;
    public static final java.lang.String TAG_EAT_COMMENT;
    public static final java.lang.String TAG_FEATURE_GROUP;
    public static final java.lang.String TAG_INSTRUMENTATION;
    public static final java.lang.String TAG_KEY_SETS;
    public static final java.lang.String TAG_MANIFEST;
    public static final java.lang.String TAG_ORIGINAL_PACKAGE;
    public static final java.lang.String TAG_OVERLAY;
    public static final java.lang.String TAG_PACKAGE;
    public static final java.lang.String TAG_PACKAGE_VERIFIER;
    public static final java.lang.String TAG_PERMISSION;
    public static final java.lang.String TAG_PERMISSION_GROUP;
    public static final java.lang.String TAG_PERMISSION_TREE;
    public static final java.lang.String TAG_PROFILEABLE;
    public static final java.lang.String TAG_PROTECTED_BROADCAST;
    public static final java.lang.String TAG_QUERIES;
    public static final java.lang.String TAG_RESTRICT_UPDATE;
    public static final java.lang.String TAG_SUPPORTS_INPUT;
    public static final java.lang.String TAG_SUPPORT_SCREENS;
    public static final java.lang.String TAG_USES_CONFIGURATION;
    public static final java.lang.String TAG_USES_FEATURE;
    public static final java.lang.String TAG_USES_GL_TEXTURE;
    public static final java.lang.String TAG_USES_PERMISSION;
    public static final java.lang.String TAG_USES_PERMISSION_SDK_23;
    public static final java.lang.String TAG_USES_PERMISSION_SDK_M;
    public static final java.lang.String TAG_USES_SDK;
    public static final java.lang.String TAG_USES_SPLIT;
    public static boolean sCompatibilityModeEnabled;
    public static final java.util.Comparator sSplitNameComparator;
    public static boolean sUseRoundIcon;
    public java.lang.String mArchiveSourcePath;
    private java.io.File mCacheDir;
    public android.content.pm.PackageParser$Callback mCallback;
    private android.util.DisplayMetrics mMetrics;
    private boolean mOnlyCoreApps;
    public int mParseError;
    private android.content.pm.PackageParser$ParsePackageItemArgs mParseInstrumentationArgs;
    public java.lang.String[] mSeparateProcesses;

    static void <clinit>()
    {
        boolean $z0, $z1, $z17, z18;
        android.util.ArraySet $r0, $r15;
        java.util.Set $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14;
        android.content.pm.PackageParser$NewPermissionInfo[] $r17;
        android.content.pm.PackageParser$NewPermissionInfo $r18, $r19;
        int $i0;
        java.lang.String[] $r20;
        android.content.pm.PackageParser$SplitNameComparator $r21;

        <android.content.pm.PackageParser: java.lang.String TAG_USES_SPLIT> = "uses-split";

        <android.content.pm.PackageParser: java.lang.String TAG_USES_SDK> = "uses-sdk";

        <android.content.pm.PackageParser: java.lang.String TAG_USES_PERMISSION_SDK_M> = "uses-permission-sdk-m";

        <android.content.pm.PackageParser: java.lang.String TAG_USES_PERMISSION_SDK_23> = "uses-permission-sdk-23";

        <android.content.pm.PackageParser: java.lang.String TAG_USES_PERMISSION> = "uses-permission";

        <android.content.pm.PackageParser: java.lang.String TAG_USES_GL_TEXTURE> = "uses-gl-texture";

        <android.content.pm.PackageParser: java.lang.String TAG_USES_FEATURE> = "uses-feature";

        <android.content.pm.PackageParser: java.lang.String TAG_USES_CONFIGURATION> = "uses-configuration";

        <android.content.pm.PackageParser: java.lang.String TAG_SUPPORT_SCREENS> = "supports-screens";

        <android.content.pm.PackageParser: java.lang.String TAG_SUPPORTS_INPUT> = "supports-input";

        <android.content.pm.PackageParser: java.lang.String TAG_RESTRICT_UPDATE> = "restrict-update";

        <android.content.pm.PackageParser: java.lang.String TAG_QUERIES> = "queries";

        <android.content.pm.PackageParser: java.lang.String TAG_PROTECTED_BROADCAST> = "protected-broadcast";

        <android.content.pm.PackageParser: java.lang.String TAG_PROFILEABLE> = "profileable";

        <android.content.pm.PackageParser: java.lang.String TAG_PERMISSION_TREE> = "permission-tree";

        <android.content.pm.PackageParser: java.lang.String TAG_PERMISSION_GROUP> = "permission-group";

        <android.content.pm.PackageParser: java.lang.String TAG_PERMISSION> = "permission";

        <android.content.pm.PackageParser: java.lang.String TAG_PACKAGE_VERIFIER> = "package-verifier";

        <android.content.pm.PackageParser: java.lang.String TAG_PACKAGE> = "package";

        <android.content.pm.PackageParser: java.lang.String TAG_OVERLAY> = "overlay";

        <android.content.pm.PackageParser: java.lang.String TAG_ORIGINAL_PACKAGE> = "original-package";

        <android.content.pm.PackageParser: java.lang.String TAG_MANIFEST> = "manifest";

        <android.content.pm.PackageParser: java.lang.String TAG_KEY_SETS> = "key-sets";

        <android.content.pm.PackageParser: java.lang.String TAG_INSTRUMENTATION> = "instrumentation";

        <android.content.pm.PackageParser: java.lang.String TAG_FEATURE_GROUP> = "feature-group";

        <android.content.pm.PackageParser: java.lang.String TAG_EAT_COMMENT> = "eat-comment";

        <android.content.pm.PackageParser: java.lang.String TAG_COMPATIBLE_SCREENS> = "compatible-screens";

        <android.content.pm.PackageParser: java.lang.String TAG_ATTRIBUTION> = "attribution";

        <android.content.pm.PackageParser: java.lang.String TAG_APPLICATION> = "application";

        <android.content.pm.PackageParser: java.lang.String TAG_ADOPT_PERMISSIONS> = "adopt-permissions";

        <android.content.pm.PackageParser: java.lang.String TAG> = "PackageParser";

        <android.content.pm.PackageParser: boolean RIGID_PARSER> = 0;

        <android.content.pm.PackageParser: int RECREATE_ON_CONFIG_CHANGES_MASK> = 3;

        <android.content.pm.PackageParser: java.lang.String PROPERTY_CHILD_PACKAGES_ENABLED> = "persist.sys.child_packages_enabled";

        <android.content.pm.PackageParser: int PARSE_MUST_BE_APK> = 1;

        <android.content.pm.PackageParser: int PARSE_IS_SYSTEM_DIR> = 16;

        <android.content.pm.PackageParser: int PARSE_IGNORE_PROCESSES> = 2;

        <android.content.pm.PackageParser: int PARSE_EXTERNAL_STORAGE> = 8;

        <android.content.pm.PackageParser: int PARSE_ENFORCE_CODE> = 64;

        <android.content.pm.PackageParser: int PARSE_DEFAULT_TARGET_SANDBOX> = 1;

        <android.content.pm.PackageParser: int PARSE_DEFAULT_INSTALL_LOCATION> = -1;

        <android.content.pm.PackageParser: int PARSE_COLLECT_CERTIFICATES> = 32;

        <android.content.pm.PackageParser: int PARSE_CHATTY> = -2147483648;

        <android.content.pm.PackageParser: java.lang.String MNT_EXPAND> = "/mnt/expand/";

        <android.content.pm.PackageParser: java.lang.String METADATA_SUPPORTS_SIZE_CHANGES> = "android.supports_size_changes";

        <android.content.pm.PackageParser: java.lang.String METADATA_MAX_ASPECT_RATIO> = "android.max_aspect";

        <android.content.pm.PackageParser: java.lang.String METADATA_ACTIVITY_WINDOW_LAYOUT_AFFINITY> = "android.activity_window_layout_affinity";

        <android.content.pm.PackageParser: boolean LOG_UNSAFE_BROADCASTS> = 0;

        <android.content.pm.PackageParser: int LOG_PARSE_TIMINGS_THRESHOLD_MS> = 100;

        <android.content.pm.PackageParser: int DEFAULT_TARGET_SDK_VERSION> = 0;

        <android.content.pm.PackageParser: float DEFAULT_PRE_Q_MIN_ASPECT_RATIO_WATCH> = 1.0F;

        <android.content.pm.PackageParser: float DEFAULT_PRE_Q_MIN_ASPECT_RATIO> = 1.333F;

        <android.content.pm.PackageParser: float DEFAULT_PRE_O_MAX_ASPECT_RATIO> = 1.86F;

        <android.content.pm.PackageParser: int DEFAULT_MIN_SDK_VERSION> = 1;

        <android.content.pm.PackageParser: boolean DEBUG_PARSER> = 0;

        <android.content.pm.PackageParser: boolean DEBUG_JAR> = 0;

        <android.content.pm.PackageParser: boolean DEBUG_BACKUP> = 0;

        <android.content.pm.PackageParser: java.lang.String APK_FILE_EXTENSION> = ".apk";

        <android.content.pm.PackageParser: java.lang.String APEX_FILE_EXTENSION> = ".apex";

        <android.content.pm.PackageParser: java.lang.String ANDROID_RESOURCES> = "http://schemas.android.com/apk/res/android";

        <android.content.pm.PackageParser: java.lang.String ANDROID_MANIFEST_FILENAME> = "AndroidManifest.xml";

        $z0 = <android.os.Build: boolean IS_DEBUGGABLE>;

        <android.content.pm.PackageParser: boolean LOG_PARSE_TIMINGS> = $z0;

        $z1 = <android.os.Build: boolean IS_DEBUGGABLE>;

        if $z1 == 0 goto label1;

        $z17 = staticinvoke <android.os.SystemProperties: boolean getBoolean(java.lang.String,boolean)>("persist.sys.child_packages_enabled", 0);

        if $z17 == 0 goto label1;

        z18 = 1;

        goto label2;

     label1:
        z18 = 0;

     label2:
        <android.content.pm.PackageParser: boolean MULTI_PACKAGE_APK_ENABLED> = z18;

        $r0 = new android.util.ArraySet;

        specialinvoke $r0.<android.util.ArraySet: void <init>()>();

        <android.content.pm.PackageParser: java.util.Set CHILD_PACKAGE_TAGS> = $r0;

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>("application");

        $r2 = <android.content.pm.PackageParser: java.util.Set CHILD_PACKAGE_TAGS>;

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>("compatible-screens");

        $r3 = <android.content.pm.PackageParser: java.util.Set CHILD_PACKAGE_TAGS>;

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>("eat-comment");

        $r4 = <android.content.pm.PackageParser: java.util.Set CHILD_PACKAGE_TAGS>;

        interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>("feature-group");

        $r5 = <android.content.pm.PackageParser: java.util.Set CHILD_PACKAGE_TAGS>;

        interfaceinvoke $r5.<java.util.Set: boolean add(java.lang.Object)>("instrumentation");

        $r6 = <android.content.pm.PackageParser: java.util.Set CHILD_PACKAGE_TAGS>;

        interfaceinvoke $r6.<java.util.Set: boolean add(java.lang.Object)>("supports-screens");

        $r7 = <android.content.pm.PackageParser: java.util.Set CHILD_PACKAGE_TAGS>;

        interfaceinvoke $r7.<java.util.Set: boolean add(java.lang.Object)>("supports-input");

        $r8 = <android.content.pm.PackageParser: java.util.Set CHILD_PACKAGE_TAGS>;

        interfaceinvoke $r8.<java.util.Set: boolean add(java.lang.Object)>("uses-configuration");

        $r9 = <android.content.pm.PackageParser: java.util.Set CHILD_PACKAGE_TAGS>;

        interfaceinvoke $r9.<java.util.Set: boolean add(java.lang.Object)>("uses-feature");

        $r10 = <android.content.pm.PackageParser: java.util.Set CHILD_PACKAGE_TAGS>;

        interfaceinvoke $r10.<java.util.Set: boolean add(java.lang.Object)>("uses-gl-texture");

        $r11 = <android.content.pm.PackageParser: java.util.Set CHILD_PACKAGE_TAGS>;

        interfaceinvoke $r11.<java.util.Set: boolean add(java.lang.Object)>("uses-permission");

        $r12 = <android.content.pm.PackageParser: java.util.Set CHILD_PACKAGE_TAGS>;

        interfaceinvoke $r12.<java.util.Set: boolean add(java.lang.Object)>("uses-permission-sdk-23");

        $r13 = <android.content.pm.PackageParser: java.util.Set CHILD_PACKAGE_TAGS>;

        interfaceinvoke $r13.<java.util.Set: boolean add(java.lang.Object)>("uses-permission-sdk-m");

        $r14 = <android.content.pm.PackageParser: java.util.Set CHILD_PACKAGE_TAGS>;

        interfaceinvoke $r14.<java.util.Set: boolean add(java.lang.Object)>("uses-sdk");

        $r15 = new android.util.ArraySet;

        specialinvoke $r15.<android.util.ArraySet: void <init>()>();

        <android.content.pm.PackageParser: java.util.Set SAFE_BROADCASTS> = $r15;

        interfaceinvoke $r15.<java.util.Set: boolean add(java.lang.Object)>("android.intent.action.BOOT_COMPLETED");

        $r17 = newarray (android.content.pm.PackageParser$NewPermissionInfo)[2];

        $r18 = new android.content.pm.PackageParser$NewPermissionInfo;

        specialinvoke $r18.<android.content.pm.PackageParser$NewPermissionInfo: void <init>(java.lang.String,int,int)>("android.permission.WRITE_EXTERNAL_STORAGE", 4, 0);

        $r17[0] = $r18;

        $r19 = new android.content.pm.PackageParser$NewPermissionInfo;

        specialinvoke $r19.<android.content.pm.PackageParser$NewPermissionInfo: void <init>(java.lang.String,int,int)>("android.permission.READ_PHONE_STATE", 4, 0);

        $r17[1] = $r19;

        <android.content.pm.PackageParser: android.content.pm.PackageParser$NewPermissionInfo[] NEW_PERMISSIONS> = $r17;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        <android.content.pm.PackageParser: int SDK_VERSION> = $i0;

        $r20 = <android.os.Build$VERSION: java.lang.String[] ACTIVE_CODENAMES>;

        <android.content.pm.PackageParser: java.lang.String[] SDK_CODENAMES> = $r20;

        <android.content.pm.PackageParser: boolean sCompatibilityModeEnabled> = 1;

        <android.content.pm.PackageParser: boolean sUseRoundIcon> = 0;

        $r21 = new android.content.pm.PackageParser$SplitNameComparator;

        specialinvoke $r21.<android.content.pm.PackageParser$SplitNameComparator: void <init>(android.content.pm.PackageParser$1)>(null);

        <android.content.pm.PackageParser: java.util.Comparator sSplitNameComparator> = $r21;

        return;
    }

    public void <init>()
    {
        android.content.pm.PackageParser r0;
        android.util.DisplayMetrics $r2;

        r0 := @this: android.content.pm.PackageParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.content.pm.PackageParser: int mParseError> = 1;

        $r2 = new android.util.DisplayMetrics;

        specialinvoke $r2.<android.util.DisplayMetrics: void <init>()>();

        r0.<android.content.pm.PackageParser: android.util.DisplayMetrics mMetrics> = $r2;

        virtualinvoke $r2.<android.util.DisplayMetrics: void setToDefaults()>();

        return;
    }

    static boolean access$600(android.content.pm.PackageParser$Package, android.content.pm.PackageItemInfo, java.lang.String[], java.lang.String, android.content.res.TypedArray, boolean, int, int, int, int, int, int)
    {
        android.content.pm.PackageParser$Package r0;
        android.content.pm.PackageItemInfo r1;
        java.lang.String[] r2;
        java.lang.String r3;
        android.content.res.TypedArray r4;
        boolean z0, $z1;
        int i0, i1, i2, i3, i4, i5;

        r0 := @parameter0: android.content.pm.PackageParser$Package;

        r1 := @parameter1: android.content.pm.PackageItemInfo;

        r2 := @parameter2: java.lang.String[];

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: android.content.res.TypedArray;

        z0 := @parameter5: boolean;

        i0 := @parameter6: int;

        i1 := @parameter7: int;

        i2 := @parameter8: int;

        i3 := @parameter9: int;

        i4 := @parameter10: int;

        i5 := @parameter11: int;

        $z1 = staticinvoke <android.content.pm.PackageParser: boolean parsePackageItemInfo(android.content.pm.PackageParser$Package,android.content.pm.PackageItemInfo,java.lang.String[],java.lang.String,android.content.res.TypedArray,boolean,int,int,int,int,int,int)>(r0, r1, r2, r3, r4, z0, i0, i1, i2, i3, i4, i5);

        return $z1;
    }

    private void adjustPackageToBeUnresizeableAndUnpipable(android.content.pm.PackageParser$Package)
    {
        android.content.pm.PackageParser r0;
        java.util.ArrayList $r1;
        boolean $z0;
        java.lang.Object $r2;
        android.content.pm.ActivityInfo $r3, r7;
        int $i0, $i1;
        android.content.pm.PackageParser$Package r4;
        java.util.Iterator r5;
        android.content.pm.PackageParser$Activity r6;

        r0 := @this: android.content.pm.PackageParser;

        r4 := @parameter0: android.content.pm.PackageParser$Package;

        $r1 = r4.<android.content.pm.PackageParser$Package: java.util.ArrayList activities>;

        r5 = virtualinvoke $r1.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (android.content.pm.PackageParser$Activity) $r2;

        $r3 = r6.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $r3.<android.content.pm.ActivityInfo: int resizeMode> = 0;

        r7 = r6.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $i0 = r7.<android.content.pm.ActivityInfo: int flags>;

        $i1 = $i0 & -4194305;

        r7.<android.content.pm.ActivityInfo: int flags> = $i1;

        goto label1;

     label2:
        return;
    }

    public static java.lang.String buildClassName(java.lang.String, java.lang.CharSequence, java.lang.String[])
    {
        java.lang.StringBuilder $r0, $r4, $r8;
        java.lang.String $r3, $r7, $r11, r12, r15;
        int $i0, $i2;
        char $c1;
        java.lang.CharSequence r13;
        java.lang.String[] r14;

        r12 := @parameter0: java.lang.String;

        r13 := @parameter1: java.lang.CharSequence;

        r14 := @parameter2: java.lang.String[];

        if r13 == null goto label4;

        $i0 = interfaceinvoke r13.<java.lang.CharSequence: int length()>();

        if $i0 > 0 goto label1;

        goto label4;

     label1:
        r15 = interfaceinvoke r13.<java.lang.CharSequence: java.lang.String toString()>();

        $c1 = virtualinvoke r15.<java.lang.String: char charAt(int)>(0);

        if $c1 != 46 goto label2;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;

     label2:
        $i2 = virtualinvoke r15.<java.lang.String: int indexOf(int)>(46);

        if $i2 >= 0 goto label3;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>(r12);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;

     label3:
        return r15;

     label4:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Empty class name in package ");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12);

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        r14[0] = $r3;

        return null;
    }

    private static java.lang.String buildCompoundName(java.lang.String, java.lang.CharSequence, java.lang.String, java.lang.String[])
    {
        java.lang.String r0, $r2, $r12, $r13, $r17, $r27, $r36, r38, r39, r41, r44;
        java.lang.String[] r1;
        char c0;
        boolean $z0;
        java.lang.StringBuilder $r3, $r14, $r18, $r28;
        int $i1;
        java.lang.CharSequence r37;

        r0 := @parameter0: java.lang.String;

        r37 := @parameter1: java.lang.CharSequence;

        r38 := @parameter2: java.lang.String;

        r1 := @parameter3: java.lang.String[];

        r39 = interfaceinvoke r37.<java.lang.CharSequence: java.lang.String toString()>();

        c0 = virtualinvoke r39.<java.lang.String: char charAt(int)>(0);

        if r0 == null goto label3;

        if c0 != 58 goto label3;

        $i1 = virtualinvoke r39.<java.lang.String: int length()>();

        if $i1 >= 2 goto label1;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad ");

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r38);

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" name ");

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r39);

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in package ");

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": must be at least two characters");

        $r36 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        r1[0] = $r36;

        return null;

     label1:
        $r13 = virtualinvoke r39.<java.lang.String: java.lang.String substring(int)>(1);

        r41 = staticinvoke <android.content.pm.PackageParser: java.lang.String validateName(java.lang.String,boolean,boolean)>($r13, 0, 0);

        if r41 == null goto label2;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid ");

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r38);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" name ");

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r39);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in package ");

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r41);

        $r27 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        r1[0] = $r27;

        return null;

     label2:
        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r39);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r17;

     label3:
        r44 = staticinvoke <android.content.pm.PackageParser: java.lang.String validateName(java.lang.String,boolean,boolean)>(r39, 1, 0);

        if r44 == null goto label4;

        $r2 = "system";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r39);

        if $z0 != 0 goto label4;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r38);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" name ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r39);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in package ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r44);

        $r12 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        r1[0] = $r12;

        return null;

     label4:
        return r39;
    }

    public static java.lang.String buildProcessName(java.lang.String, java.lang.String, java.lang.CharSequence, int, java.lang.String[], java.lang.String[])
    {
        java.lang.String r0, r4, $r5, $r6, $r7, r8;
        java.lang.CharSequence r1;
        java.lang.String[] r2, r3;
        int $i0, $i1, $i2, i3, i4;
        boolean $z0, $z1, $z2, $z3;

        r8 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.CharSequence;

        i3 := @parameter3: int;

        r2 := @parameter4: java.lang.String[];

        r3 := @parameter5: java.lang.String[];

        $i0 = i3 & 2;

        if $i0 == 0 goto label2;

        $r7 = "system";

        $z3 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z3 != 0 goto label2;

        if r0 == null goto label1;

        r8 = r0;

        goto label1;

     label1:
        return r8;

     label2:
        if r2 == null goto label6;

        $i2 = lengthof r2;

        i4 = $i2 - 1;

     label3:
        if i4 < 0 goto label6;

        r4 = r2[i4];

        $z0 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>(r8);

        if $z0 != 0 goto label5;

        $z1 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z1 != 0 goto label5;

        $z2 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z2 == 0 goto label4;

        goto label5;

     label4:
        i4 = i4 + -1;

        goto label3;

     label5:
        return r8;

     label6:
        if r1 == null goto label8;

        $i1 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        if $i1 > 0 goto label7;

        goto label8;

     label7:
        $r5 = staticinvoke <android.content.pm.PackageParser: java.lang.String buildCompoundName(java.lang.String,java.lang.CharSequence,java.lang.String,java.lang.String[])>(r8, r1, "process", r3);

        $r6 = staticinvoke <android.text.TextUtils: java.lang.String safeIntern(java.lang.String)>($r5);

        return $r6;

     label8:
        return r0;
    }

    public static java.lang.String buildTaskAffinityName(java.lang.String, java.lang.String, java.lang.CharSequence, java.lang.String[])
    {
        java.lang.String r0, r1, $r4;
        java.lang.CharSequence r2;
        java.lang.String[] r3;
        int $i0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.CharSequence;

        r3 := @parameter3: java.lang.String[];

        if r2 != null goto label1;

        return r1;

     label1:
        $i0 = interfaceinvoke r2.<java.lang.CharSequence: int length()>();

        if $i0 > 0 goto label2;

        return null;

     label2:
        $r4 = staticinvoke <android.content.pm.PackageParser: java.lang.String buildCompoundName(java.lang.String,java.lang.CharSequence,java.lang.String,java.lang.String[])>(r0, r2, "taskAffinity", r3);

        return $r4;
    }

    public static boolean checkRequiredSystemProperties(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, $r9, $r10, $r11, $r12, $r19;
        java.lang.String[] r2, r20;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.StringBuilder $r3, $r13;
        int $i1, $i2, $i3, i5;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r0);

        if $z0 != 0 goto label6;

        $z3 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z3 == 0 goto label1;

        goto label6;

     label1:
        r20 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        r2 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        $i2 = lengthof r20;

        $i1 = lengthof r2;

        if $i2 == $i1 goto label2;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Disabling overlay - property :\'");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' - require both requiredSystemPropertyName AND requiredSystemPropertyValue lists to have the same size.");

        $r19 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageParser", $r19);

        return 0;

     label2:
        i5 = 0;

     label3:
        $i3 = lengthof r20;

        if i5 >= $i3 goto label5;

        $r10 = r20[i5];

        $r11 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>($r10);

        $r12 = r2[i5];

        $z4 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r11, $r12);

        if $z4 != 0 goto label4;

        return 0;

     label4:
        i5 = i5 + 1;

        goto label3;

     label5:
        return 1;

     label6:
        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r0);

        if $z1 == 0 goto label8;

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z2 != 0 goto label7;

        goto label8;

     label7:
        return 1;

     label8:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Disabling overlay - incomplete property :\'");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' - require both requiredSystemPropertyName AND requiredSystemPropertyValue to be specified.");

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageParser", $r9);

        return 0;
    }

    private static boolean checkUseInstalledOrHidden(int, android.content.pm.PackageUserState, android.content.pm.ApplicationInfo)
    {
        int i0, $i1, $i2, $i3;
        android.content.pm.PackageUserState r0;
        android.content.pm.ApplicationInfo r1;
        boolean $z0, $z1, $z2, z3, $z4;

        i0 := @parameter0: int;

        r0 := @parameter1: android.content.pm.PackageUserState;

        r1 := @parameter2: android.content.pm.ApplicationInfo;

        z3 = 0;

        $i1 = i0 & 536870912;

        if $i1 != 0 goto label1;

        $z1 = r0.<android.content.pm.PackageUserState: boolean installed>;

        if $z1 != 0 goto label1;

        if r1 == null goto label1;

        $z2 = r1.<android.content.pm.ApplicationInfo: boolean hiddenUntilInstalled>;

        if $z2 == 0 goto label1;

        return 0;

     label1:
        $z4 = virtualinvoke r0.<android.content.pm.PackageUserState: boolean isAvailable(int)>(i0);

        if $z4 != 0 goto label4;

        if r1 == null goto label3;

        $z0 = virtualinvoke r1.<android.content.pm.ApplicationInfo: boolean isSystemApp()>();

        if $z0 == 0 goto label3;

        $i2 = 4202496 & i0;

        if $i2 != 0 goto label2;

        $i3 = 536870912 & i0;

        if $i3 == 0 goto label3;

     label2:
        goto label4;

     label3:
        goto label5;

     label4:
        z3 = 1;

     label5:
        return z3;
    }

    private static void collectCertificates(android.content.pm.PackageParser$Package, java.io.File, boolean) throws android.content.pm.PackageParser$PackageParserException
    {
        boolean z0, $z1, $z2;
        java.lang.String r0, $r12;
        android.content.pm.ApplicationInfo $r1, $r2;
        int $i0, i1;
        android.content.pm.PackageParser$SigningDetails $r3, $r4, $r5, r15;
        android.content.pm.Signature[] $r6, $r7;
        java.lang.StringBuilder $r8;
        android.content.pm.PackageParser$PackageParserException $r11;
        android.content.pm.PackageParser$Package r13;
        java.io.File r14;

        r13 := @parameter0: android.content.pm.PackageParser$Package;

        r14 := @parameter1: java.io.File;

        z0 := @parameter2: boolean;

        r0 = virtualinvoke r14.<java.io.File: java.lang.String getAbsolutePath()>();

        $r1 = r13.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i0 = $r1.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        i1 = staticinvoke <android.util.apk.ApkSignatureVerifier: int getMinimumSignatureSchemeVersionForTargetSdk(int)>($i0);

        $r2 = r13.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $z1 = virtualinvoke $r2.<android.content.pm.ApplicationInfo: boolean isStaticSharedLibrary()>();

        if $z1 == 0 goto label1;

        i1 = 2;

     label1:
        if z0 == 0 goto label2;

        r15 = staticinvoke <android.util.apk.ApkSignatureVerifier: android.content.pm.PackageParser$SigningDetails unsafeGetCertsWithoutVerification(java.lang.String,int)>(r0, 1);

        goto label3;

     label2:
        r15 = staticinvoke <android.util.apk.ApkSignatureVerifier: android.content.pm.PackageParser$SigningDetails verify(java.lang.String,int)>(r0, i1);

     label3:
        $r4 = r13.<android.content.pm.PackageParser$Package: android.content.pm.PackageParser$SigningDetails mSigningDetails>;

        $r3 = <android.content.pm.PackageParser$SigningDetails: android.content.pm.PackageParser$SigningDetails UNKNOWN>;

        if $r4 != $r3 goto label4;

        r13.<android.content.pm.PackageParser$Package: android.content.pm.PackageParser$SigningDetails mSigningDetails> = r15;

        goto label5;

     label4:
        $r5 = r13.<android.content.pm.PackageParser$Package: android.content.pm.PackageParser$SigningDetails mSigningDetails>;

        $r7 = $r5.<android.content.pm.PackageParser$SigningDetails: android.content.pm.Signature[] signatures>;

        $r6 = r15.<android.content.pm.PackageParser$SigningDetails: android.content.pm.Signature[] signatures>;

        $z2 = staticinvoke <android.content.pm.Signature: boolean areExactMatch(android.content.pm.Signature[],android.content.pm.Signature[])>($r7, $r6);

        if $z2 == 0 goto label6;

     label5:
        return;

     label6:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has mismatched certificates");

        $r11 = new android.content.pm.PackageParser$PackageParserException;

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<android.content.pm.PackageParser$PackageParserException: void <init>(int,java.lang.String)>(-104, $r12);

        throw $r11;
    }

    public static void collectCertificates(android.content.pm.PackageParser$Package, boolean) throws android.content.pm.PackageParser$PackageParserException
    {
        android.content.pm.PackageParser$Package r0, $r5;
        boolean z0;
        java.util.ArrayList $r1, $r2, $r6;
        java.lang.Object $r3;
        android.content.pm.PackageParser$SigningDetails $r4;
        int i0, i1;

        r0 := @parameter0: android.content.pm.PackageParser$Package;

        z0 := @parameter1: boolean;

        staticinvoke <android.content.pm.PackageParser: void collectCertificatesInternal(android.content.pm.PackageParser$Package,boolean)>(r0, z0);

        $r1 = r0.<android.content.pm.PackageParser$Package: java.util.ArrayList childPackages>;

        if $r1 == null goto label1;

        $r6 = r0.<android.content.pm.PackageParser$Package: java.util.ArrayList childPackages>;

        i0 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        goto label2;

     label1:
        i0 = 0;

     label2:
        i1 = 0;

     label3:
        if i1 >= i0 goto label4;

        $r2 = r0.<android.content.pm.PackageParser$Package: java.util.ArrayList childPackages>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r5 = (android.content.pm.PackageParser$Package) $r3;

        $r4 = r0.<android.content.pm.PackageParser$Package: android.content.pm.PackageParser$SigningDetails mSigningDetails>;

        $r5.<android.content.pm.PackageParser$Package: android.content.pm.PackageParser$SigningDetails mSigningDetails> = $r4;

        i1 = i1 + 1;

        goto label3;

     label4:
        return;
    }

    private static void collectCertificatesInternal(android.content.pm.PackageParser$Package, boolean) throws android.content.pm.PackageParser$PackageParserException
    {
        boolean z0, $z1;
        android.content.pm.PackageParser$SigningDetails $r0;
        java.lang.String $r1, $r5;
        java.lang.String[] $r2, $r3, $r4;
        int $i0, i1;
        java.lang.Throwable $r6;
        android.content.pm.PackageParser$Package r7;
        java.io.File r8, r9;

        r7 := @parameter0: android.content.pm.PackageParser$Package;

        z0 := @parameter1: boolean;

        $r0 = <android.content.pm.PackageParser$SigningDetails: android.content.pm.PackageParser$SigningDetails UNKNOWN>;

        r7.<android.content.pm.PackageParser$Package: android.content.pm.PackageParser$SigningDetails mSigningDetails> = $r0;

        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(262144L, "collectCertificates");

     label1:
        r8 = new java.io.File;

        $r1 = r7.<android.content.pm.PackageParser$Package: java.lang.String baseCodePath>;

        specialinvoke r8.<java.io.File: void <init>(java.lang.String)>($r1);

        staticinvoke <android.content.pm.PackageParser: void collectCertificates(android.content.pm.PackageParser$Package,java.io.File,boolean)>(r7, r8, z0);

        $r2 = r7.<android.content.pm.PackageParser$Package: java.lang.String[] splitCodePaths>;

        $z1 = staticinvoke <com.android.internal.util.ArrayUtils: boolean isEmpty(java.lang.Object[])>($r2);

        if $z1 != 0 goto label5;

     label2:
        i1 = 0;

     label3:
        $r3 = r7.<android.content.pm.PackageParser$Package: java.lang.String[] splitCodePaths>;

        $i0 = lengthof $r3;

        if i1 >= $i0 goto label5;

        r9 = new java.io.File;

        $r4 = r7.<android.content.pm.PackageParser$Package: java.lang.String[] splitCodePaths>;

        $r5 = $r4[i1];

        specialinvoke r9.<java.io.File: void <init>(java.lang.String)>($r5);

        staticinvoke <android.content.pm.PackageParser: void collectCertificates(android.content.pm.PackageParser$Package,java.io.File,boolean)>(r7, r9, z0);

     label4:
        i1 = i1 + 1;

        goto label3;

     label5:
        staticinvoke <android.os.Trace: void traceEnd(long)>(262144L);

        return;

     label6:
        $r6 := @caughtexception;

        staticinvoke <android.os.Trace: void traceEnd(long)>(262144L);

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
    }

    public static int computeMinSdkVersion(int, java.lang.String, int, java.lang.String[], java.lang.String[])
    {
        int i0, i1, $i2;
        java.lang.String[] r0, r23;
        boolean $z0;
        java.lang.StringBuilder $r2, $r7, $r15;
        java.lang.String $r6, $r11, $r14, $r21, r22;

        i0 := @parameter0: int;

        r22 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        r23 := @parameter3: java.lang.String[];

        r0 := @parameter4: java.lang.String[];

        if r22 != null goto label2;

        if i0 > i1 goto label1;

        return i0;

     label1:
        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requires newer sdk version #");

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (current version is #");

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r21 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        r0[0] = $r21;

        return -1;

     label2:
        $z0 = staticinvoke <android.content.pm.PackageParser: boolean matchTargetCode(java.lang.String[],java.lang.String)>(r23, r22);

        if $z0 == 0 goto label3;

        return 10000;

     label3:
        $i2 = lengthof r23;

        if $i2 <= 0 goto label4;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requires development platform ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r22);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (current platform is any of ");

        $r11 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(r23);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r14 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        r0[0] = $r14;

        goto label5;

     label4:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requires development platform ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r22);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but this is a release platform.");

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        r0[0] = $r6;

     label5:
        return -1;
    }

    public static int computeTargetSdkVersion(int, java.lang.String, java.lang.String[], java.lang.String[])
    {
        int i0, $i1;
        java.lang.String r0, $r7, $r12, $r15;
        java.lang.String[] r1, r16;
        boolean $z0;
        java.lang.StringBuilder $r3, $r8;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.String;

        r16 := @parameter2: java.lang.String[];

        r1 := @parameter3: java.lang.String[];

        if r0 != null goto label1;

        return i0;

     label1:
        $z0 = staticinvoke <android.content.pm.PackageParser: boolean matchTargetCode(java.lang.String[],java.lang.String)>(r16, r0);

        if $z0 == 0 goto label2;

        return 10000;

     label2:
        $i1 = lengthof r16;

        if $i1 <= 0 goto label3;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requires development platform ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (current platform is any of ");

        $r12 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(r16);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r15 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        r1[0] = $r15;

        goto label4;

     label3:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requires development platform ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but this is a release platform.");

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        r1[0] = $r7;

     label4:
        return -1;
    }

    private static boolean copyNeeded(int, android.content.pm.PackageParser$Package, android.content.pm.PackageUserState, android.os.Bundle, int)
    {
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        android.content.pm.PackageParser$Package r0;
        android.content.pm.PackageUserState r1;
        android.os.Bundle r2, $r8;
        android.content.pm.ApplicationInfo $r3, $r4, $r9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, z7, z8;
        java.lang.String $r5;
        java.util.ArrayList $r6;
        java.lang.String[] $r7;

        i0 := @parameter0: int;

        r0 := @parameter1: android.content.pm.PackageParser$Package;

        r1 := @parameter2: android.content.pm.PackageUserState;

        r2 := @parameter3: android.os.Bundle;

        i1 := @parameter4: int;

        if i1 == 0 goto label01;

        return 1;

     label01:
        $i2 = r1.<android.content.pm.PackageUserState: int enabled>;

        if $i2 == 0 goto label04;

        $i8 = r1.<android.content.pm.PackageUserState: int enabled>;

        if $i8 != 1 goto label02;

        z7 = 1;

        goto label03;

     label02:
        z7 = 0;

     label03:
        $r9 = r0.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $z6 = $r9.<android.content.pm.ApplicationInfo: boolean enabled>;

        if $z6 == z7 goto label04;

        return 1;

     label04:
        $r3 = r0.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i3 = $r3.<android.content.pm.ApplicationInfo: int flags>;

        $i4 = $i3 & 1073741824;

        if $i4 == 0 goto label05;

        z8 = 1;

        goto label06;

     label05:
        z8 = 0;

     label06:
        $z0 = r1.<android.content.pm.PackageUserState: boolean suspended>;

        if $z0 == z8 goto label07;

        return 1;

     label07:
        $z1 = r1.<android.content.pm.PackageUserState: boolean installed>;

        if $z1 == 0 goto label16;

        $z2 = r1.<android.content.pm.PackageUserState: boolean hidden>;

        if $z2 == 0 goto label08;

        goto label16;

     label08:
        $z3 = r1.<android.content.pm.PackageUserState: boolean stopped>;

        if $z3 == 0 goto label09;

        return 1;

     label09:
        $z4 = r1.<android.content.pm.PackageUserState: boolean instantApp>;

        $r4 = r0.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $z5 = virtualinvoke $r4.<android.content.pm.ApplicationInfo: boolean isInstantApp()>();

        if $z4 == $z5 goto label10;

        return 1;

     label10:
        $i5 = i0 & 128;

        if $i5 == 0 goto label12;

        if r2 != null goto label11;

        $r8 = r0.<android.content.pm.PackageParser$Package: android.os.Bundle mAppMetaData>;

        if $r8 == null goto label12;

     label11:
        return 1;

     label12:
        $i6 = i0 & 1024;

        if $i6 == 0 goto label13;

        $r7 = r0.<android.content.pm.PackageParser$Package: java.lang.String[] usesLibraryFiles>;

        if $r7 == null goto label13;

        return 1;

     label13:
        $i7 = i0 & 1024;

        if $i7 == 0 goto label14;

        $r6 = r0.<android.content.pm.PackageParser$Package: java.util.ArrayList usesLibraryInfos>;

        if $r6 == null goto label14;

        return 1;

     label14:
        $r5 = r0.<android.content.pm.PackageParser$Package: java.lang.String staticSharedLibName>;

        if $r5 == null goto label15;

        return 1;

     label15:
        return 0;

     label16:
        return 1;
    }

    public static final android.content.pm.ActivityInfo generateActivityInfo(android.content.pm.ActivityInfo, int, android.content.pm.PackageUserState, int)
    {
        int i0, i1;
        android.content.pm.PackageUserState r0;
        android.content.pm.ApplicationInfo $r1, $r3, $r4;
        boolean $z0;
        android.content.pm.ActivityInfo $r2, r5;

        r5 := @parameter0: android.content.pm.ActivityInfo;

        i0 := @parameter1: int;

        r0 := @parameter2: android.content.pm.PackageUserState;

        i1 := @parameter3: int;

        if r5 != null goto label1;

        return null;

     label1:
        $r1 = r5.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $z0 = staticinvoke <android.content.pm.PackageParser: boolean checkUseInstalledOrHidden(int,android.content.pm.PackageUserState,android.content.pm.ApplicationInfo)>(i0, r0, $r1);

        if $z0 != 0 goto label2;

        return null;

     label2:
        $r2 = new android.content.pm.ActivityInfo;

        specialinvoke $r2.<android.content.pm.ActivityInfo: void <init>(android.content.pm.ActivityInfo)>(r5);

        $r3 = $r2.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r4 = staticinvoke <android.content.pm.PackageParser: android.content.pm.ApplicationInfo generateApplicationInfo(android.content.pm.ApplicationInfo,int,android.content.pm.PackageUserState,int)>($r3, i0, r0, i1);

        $r2.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo> = $r4;

        return $r2;
    }

    public static final android.content.pm.ActivityInfo generateActivityInfo(android.content.pm.PackageParser$Activity, int, android.content.pm.PackageUserState, int)
    {
        android.content.pm.PackageParser$Activity r0;
        int i0, i1;
        android.content.pm.PackageUserState r1;
        android.content.pm.PackageParser$Package $r3, $r6, $r10;
        android.content.pm.ApplicationInfo $r4, $r11, $r13;
        boolean $z0, $z1;
        android.os.Bundle $r5, $r9;
        android.content.pm.ActivityInfo $r7, $r8, $r12, $r14;

        r0 := @parameter0: android.content.pm.PackageParser$Activity;

        i0 := @parameter1: int;

        r1 := @parameter2: android.content.pm.PackageUserState;

        i1 := @parameter3: int;

        if r0 != null goto label1;

        return null;

     label1:
        $r3 = r0.<android.content.pm.PackageParser$Activity: android.content.pm.PackageParser$Package owner>;

        $r4 = $r3.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $z0 = staticinvoke <android.content.pm.PackageParser: boolean checkUseInstalledOrHidden(int,android.content.pm.PackageUserState,android.content.pm.ApplicationInfo)>(i0, r1, $r4);

        if $z0 != 0 goto label2;

        return null;

     label2:
        $r6 = r0.<android.content.pm.PackageParser$Activity: android.content.pm.PackageParser$Package owner>;

        $r5 = r0.<android.content.pm.PackageParser$Activity: android.os.Bundle metaData>;

        $z1 = staticinvoke <android.content.pm.PackageParser: boolean copyNeeded(int,android.content.pm.PackageParser$Package,android.content.pm.PackageUserState,android.os.Bundle,int)>(i0, $r6, r1, $r5, i1);

        if $z1 != 0 goto label3;

        $r12 = r0.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $r13 = $r12.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        staticinvoke <android.content.pm.PackageParser: void updateApplicationInfo(android.content.pm.ApplicationInfo,int,android.content.pm.PackageUserState)>($r13, i0, r1);

        $r14 = r0.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        return $r14;

     label3:
        $r7 = new android.content.pm.ActivityInfo;

        $r8 = r0.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        specialinvoke $r7.<android.content.pm.ActivityInfo: void <init>(android.content.pm.ActivityInfo)>($r8);

        $r9 = r0.<android.content.pm.PackageParser$Activity: android.os.Bundle metaData>;

        $r7.<android.content.pm.ActivityInfo: android.os.Bundle metaData> = $r9;

        $r10 = r0.<android.content.pm.PackageParser$Activity: android.content.pm.PackageParser$Package owner>;

        $r11 = staticinvoke <android.content.pm.PackageParser: android.content.pm.ApplicationInfo generateApplicationInfo(android.content.pm.PackageParser$Package,int,android.content.pm.PackageUserState,int)>($r10, i0, r1, i1);

        $r7.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo> = $r11;

        return $r7;
    }

    private android.content.pm.PackageParser$Activity generateAppDetailsHiddenActivity(android.content.pm.PackageParser$Package, int, java.lang.String[], boolean)
    {
        android.content.pm.PackageParser r0;
        int i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.String[] r1;
        boolean z0;
        android.content.pm.PackageParser$Activity $r3;
        android.content.pm.ActivityInfo $r4, $r7, $r8, $r10, $r13, $r14, $r16, $r19, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, r35;
        java.lang.String $r5, $r6, $r9, $r12, $r17, $r18, $r20;
        android.content.pm.ApplicationInfo $r11, $r15;
        android.content.pm.PackageParser$Package r34;

        r0 := @this: android.content.pm.PackageParser;

        r34 := @parameter0: android.content.pm.PackageParser$Package;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String[];

        z0 := @parameter3: boolean;

        $r3 = new android.content.pm.PackageParser$Activity;

        $r5 = <android.content.pm.PackageManager: java.lang.String APP_DETAILS_ACTIVITY_CLASS_NAME>;

        $r4 = new android.content.pm.ActivityInfo;

        specialinvoke $r4.<android.content.pm.ActivityInfo: void <init>()>();

        specialinvoke $r3.<android.content.pm.PackageParser$Activity: void <init>(android.content.pm.PackageParser$Package,java.lang.String,android.content.pm.ActivityInfo)>(r34, $r5, $r4);

        $r3.<android.content.pm.PackageParser$Activity: android.content.pm.PackageParser$Package owner> = r34;

        $r6 = r34.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        virtualinvoke $r3.<android.content.pm.PackageParser$Activity: void setPackageName(java.lang.String)>($r6);

        $r7 = $r3.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $r7.<android.content.pm.ActivityInfo: int theme> = 16973909;

        $r8 = $r3.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $r8.<android.content.pm.ActivityInfo: boolean exported> = 1;

        $r10 = $r3.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $r9 = <android.content.pm.PackageManager: java.lang.String APP_DETAILS_ACTIVITY_CLASS_NAME>;

        $r10.<android.content.pm.ActivityInfo: java.lang.String name> = $r9;

        $r13 = $r3.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $r11 = r34.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r12 = $r11.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        $r13.<android.content.pm.ActivityInfo: java.lang.String processName> = $r12;

        $r16 = $r3.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $r14 = $r3.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $r15 = $r14.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i1 = $r15.<android.content.pm.ApplicationInfo: int uiOptions>;

        $r16.<android.content.pm.ActivityInfo: int uiOptions> = $i1;

        $r19 = $r3.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $r18 = r34.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r17 = r34.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r20 = staticinvoke <android.content.pm.PackageParser: java.lang.String buildTaskAffinityName(java.lang.String,java.lang.String,java.lang.CharSequence,java.lang.String[])>($r18, $r17, ":app_details", r1);

        $r19.<android.content.pm.ActivityInfo: java.lang.String taskAffinity> = $r20;

        $r21 = $r3.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $r21.<android.content.pm.ActivityInfo: boolean enabled> = 1;

        $r22 = $r3.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $r22.<android.content.pm.ActivityInfo: int launchMode> = 0;

        $r23 = $r3.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $r23.<android.content.pm.ActivityInfo: int documentLaunchMode> = 0;

        $r24 = $r3.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $i2 = staticinvoke <android.app.ActivityTaskManager: int getDefaultAppRecentsLimitStatic()>();

        $r24.<android.content.pm.ActivityInfo: int maxRecents> = $i2;

        $r25 = $r3.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $i3 = staticinvoke <android.content.pm.PackageParser: int getActivityConfigChanges(int,int)>(0, 0);

        $r25.<android.content.pm.ActivityInfo: int configChanges> = $i3;

        $r26 = $r3.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $r26.<android.content.pm.ActivityInfo: int softInputMode> = 0;

        $r27 = $r3.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $r27.<android.content.pm.ActivityInfo: int persistableMode> = 1;

        $r28 = $r3.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $r28.<android.content.pm.ActivityInfo: int screenOrientation> = -1;

        $r29 = $r3.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $r29.<android.content.pm.ActivityInfo: int resizeMode> = 4;

        $r30 = $r3.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $r30.<android.content.pm.ActivityInfo: int lockTaskLaunchMode> = 0;

        $r31 = $r3.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $r31.<android.content.pm.ActivityInfo: boolean directBootAware> = 0;

        $r32 = $r3.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $r32.<android.content.pm.ActivityInfo: int rotationAnimation> = -1;

        $r33 = $r3.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $r33.<android.content.pm.ActivityInfo: int colorMode> = 0;

        if z0 == 0 goto label1;

        r35 = $r3.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $i4 = r35.<android.content.pm.ActivityInfo: int flags>;

        $i5 = $i4 | 512;

        r35.<android.content.pm.ActivityInfo: int flags> = $i5;

     label1:
        return $r3;
    }

    public static android.content.pm.ApplicationInfo generateApplicationInfo(android.content.pm.ApplicationInfo, int, android.content.pm.PackageUserState, int)
    {
        int i0, i1, $i2, $i3, $i4, $i5;
        android.content.pm.PackageUserState r0;
        boolean $z0, $z1;
        android.content.pm.ApplicationInfo $r1, r2;

        r2 := @parameter0: android.content.pm.ApplicationInfo;

        i0 := @parameter1: int;

        r0 := @parameter2: android.content.pm.PackageUserState;

        i1 := @parameter3: int;

        if r2 != null goto label1;

        return null;

     label1:
        $z0 = staticinvoke <android.content.pm.PackageParser: boolean checkUseInstalledOrHidden(int,android.content.pm.PackageUserState,android.content.pm.ApplicationInfo)>(i0, r0, r2);

        if $z0 != 0 goto label2;

        return null;

     label2:
        $r1 = new android.content.pm.ApplicationInfo;

        specialinvoke $r1.<android.content.pm.ApplicationInfo: void <init>(android.content.pm.ApplicationInfo)>(r2);

        virtualinvoke $r1.<android.content.pm.ApplicationInfo: void initForUser(int)>(i1);

        $z1 = r0.<android.content.pm.PackageUserState: boolean stopped>;

        if $z1 == 0 goto label3;

        $i4 = $r1.<android.content.pm.ApplicationInfo: int flags>;

        $i5 = $i4 | 2097152;

        $r1.<android.content.pm.ApplicationInfo: int flags> = $i5;

        goto label4;

     label3:
        $i2 = $r1.<android.content.pm.ApplicationInfo: int flags>;

        $i3 = $i2 & -2097153;

        $r1.<android.content.pm.ApplicationInfo: int flags> = $i3;

     label4:
        staticinvoke <android.content.pm.PackageParser: void updateApplicationInfo(android.content.pm.ApplicationInfo,int,android.content.pm.PackageUserState)>($r1, i0, r0);

        return $r1;
    }

    public static android.content.pm.ApplicationInfo generateApplicationInfo(android.content.pm.PackageParser$Package, int, android.content.pm.PackageUserState)
    {
        android.content.pm.PackageParser$Package r0;
        int i0, $i1;
        android.content.pm.PackageUserState r1;
        android.content.pm.ApplicationInfo $r2;

        r0 := @parameter0: android.content.pm.PackageParser$Package;

        i0 := @parameter1: int;

        r1 := @parameter2: android.content.pm.PackageUserState;

        $i1 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        $r2 = staticinvoke <android.content.pm.PackageParser: android.content.pm.ApplicationInfo generateApplicationInfo(android.content.pm.PackageParser$Package,int,android.content.pm.PackageUserState,int)>(r0, i0, r1, $i1);

        return $r2;
    }

    public static android.content.pm.ApplicationInfo generateApplicationInfo(android.content.pm.PackageParser$Package, int, android.content.pm.PackageUserState, int)
    {
        android.content.pm.PackageParser$Package r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        android.content.pm.PackageUserState r1;
        android.content.pm.ApplicationInfo $r3, $r4, $r5, $r9, $r10;
        boolean $z0, $z1, $z2, $z3;
        java.lang.String[] $r6;
        java.util.ArrayList $r7;
        android.os.Bundle $r8;

        r0 := @parameter0: android.content.pm.PackageParser$Package;

        i0 := @parameter1: int;

        r1 := @parameter2: android.content.pm.PackageUserState;

        i1 := @parameter3: int;

        if r0 != null goto label1;

        return null;

     label1:
        $r3 = r0.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $z0 = staticinvoke <android.content.pm.PackageParser: boolean checkUseInstalledOrHidden(int,android.content.pm.PackageUserState,android.content.pm.ApplicationInfo)>(i0, r1, $r3);

        if $z0 == 0 goto label9;

        $z1 = virtualinvoke r0.<android.content.pm.PackageParser$Package: boolean isMatch(int)>(i0);

        if $z1 != 0 goto label2;

        goto label9;

     label2:
        $z2 = staticinvoke <android.content.pm.PackageParser: boolean copyNeeded(int,android.content.pm.PackageParser$Package,android.content.pm.PackageUserState,android.os.Bundle,int)>(i0, r0, r1, null, i1);

        if $z2 != 0 goto label4;

        $i8 = 32768 & i0;

        if $i8 == 0 goto label3;

        $i9 = r1.<android.content.pm.PackageUserState: int enabled>;

        if $i9 == 4 goto label4;

     label3:
        $r9 = r0.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        staticinvoke <android.content.pm.PackageParser: void updateApplicationInfo(android.content.pm.ApplicationInfo,int,android.content.pm.PackageUserState)>($r9, i0, r1);

        $r10 = r0.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        return $r10;

     label4:
        $r4 = new android.content.pm.ApplicationInfo;

        $r5 = r0.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        specialinvoke $r4.<android.content.pm.ApplicationInfo: void <init>(android.content.pm.ApplicationInfo)>($r5);

        virtualinvoke $r4.<android.content.pm.ApplicationInfo: void initForUser(int)>(i1);

        $i2 = i0 & 128;

        if $i2 == 0 goto label5;

        $r8 = r0.<android.content.pm.PackageParser$Package: android.os.Bundle mAppMetaData>;

        $r4.<android.content.pm.ApplicationInfo: android.os.Bundle metaData> = $r8;

     label5:
        $i3 = i0 & 1024;

        if $i3 == 0 goto label6;

        $r6 = r0.<android.content.pm.PackageParser$Package: java.lang.String[] usesLibraryFiles>;

        $r4.<android.content.pm.ApplicationInfo: java.lang.String[] sharedLibraryFiles> = $r6;

        $r7 = r0.<android.content.pm.PackageParser$Package: java.util.ArrayList usesLibraryInfos>;

        $r4.<android.content.pm.ApplicationInfo: java.util.List sharedLibraryInfos> = $r7;

     label6:
        $z3 = r1.<android.content.pm.PackageUserState: boolean stopped>;

        if $z3 == 0 goto label7;

        $i6 = $r4.<android.content.pm.ApplicationInfo: int flags>;

        $i7 = $i6 | 2097152;

        $r4.<android.content.pm.ApplicationInfo: int flags> = $i7;

        goto label8;

     label7:
        $i4 = $r4.<android.content.pm.ApplicationInfo: int flags>;

        $i5 = $i4 & -2097153;

        $r4.<android.content.pm.ApplicationInfo: int flags> = $i5;

     label8:
        staticinvoke <android.content.pm.PackageParser: void updateApplicationInfo(android.content.pm.ApplicationInfo,int,android.content.pm.PackageUserState)>($r4, i0, r1);

        return $r4;

     label9:
        return null;
    }

    public static final android.content.pm.InstrumentationInfo generateInstrumentationInfo(android.content.pm.PackageParser$Instrumentation, int)
    {
        android.content.pm.PackageParser$Instrumentation r0;
        int i0, $i1;
        android.content.pm.InstrumentationInfo $r2, $r3, $r5;
        android.os.Bundle $r4;

        r0 := @parameter0: android.content.pm.PackageParser$Instrumentation;

        i0 := @parameter1: int;

        if r0 != null goto label1;

        return null;

     label1:
        $i1 = i0 & 128;

        if $i1 != 0 goto label2;

        $r5 = r0.<android.content.pm.PackageParser$Instrumentation: android.content.pm.InstrumentationInfo info>;

        return $r5;

     label2:
        $r2 = new android.content.pm.InstrumentationInfo;

        $r3 = r0.<android.content.pm.PackageParser$Instrumentation: android.content.pm.InstrumentationInfo info>;

        specialinvoke $r2.<android.content.pm.InstrumentationInfo: void <init>(android.content.pm.InstrumentationInfo)>($r3);

        $r4 = r0.<android.content.pm.PackageParser$Instrumentation: android.os.Bundle metaData>;

        $r2.<android.content.pm.InstrumentationInfo: android.os.Bundle metaData> = $r4;

        return $r2;
    }

    public static android.content.pm.PackageInfo generatePackageInfo(android.content.pm.PackageParser$Package, android.apex.ApexInfo, int)
    {
        android.content.pm.PackageParser$Package r0;
        android.apex.ApexInfo r1;
        int i0, $i1;
        int[] $r2;
        java.util.Set $r3;
        android.content.pm.PackageUserState $r4;
        android.content.pm.PackageInfo $r5;

        r0 := @parameter0: android.content.pm.PackageParser$Package;

        r1 := @parameter1: android.apex.ApexInfo;

        i0 := @parameter2: int;

        $r2 = <libcore.util.EmptyArray: int[] INT>;

        $r3 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();

        $r4 = new android.content.pm.PackageUserState;

        specialinvoke $r4.<android.content.pm.PackageUserState: void <init>()>();

        $i1 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        $r5 = staticinvoke <android.content.pm.PackageParser: android.content.pm.PackageInfo generatePackageInfo(android.content.pm.PackageParser$Package,android.apex.ApexInfo,int[],int,long,long,java.util.Set,android.content.pm.PackageUserState,int)>(r0, r1, $r2, i0, 0L, 0L, $r3, $r4, $i1);

        return $r5;
    }

    private static android.content.pm.PackageInfo generatePackageInfo(android.content.pm.PackageParser$Package, android.apex.ApexInfo, int[], int, long, long, java.util.Set, android.content.pm.PackageUserState, int)
    {
        android.content.pm.PackageParser$Package r0;
        int i0, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, i25, $i26, $i27, $i28, i29, i30, i31, $i32, i33, i34, i35, i36, $i37, i38, i39, i40, i41, $i42, i43, i44, i45, i46, $i47, i48, i49, i50, i51, $i52, i53, i54, $i55, i56, i57, i58, i59, $i60, i61, $i62;
        long l1, l2;
        java.util.Set r1;
        android.content.pm.ApplicationInfo $r3, $r10, $r11, $r31, $r33, $r103, r125, r126, r127, r128;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15;
        android.content.pm.PackageInfo $r4;
        java.lang.String $r5, $r8, $r9, $r30, $r32, $r34, $r82, $r83, $r107, $r108, $r109, $r110, $r111, $r112, r121;
        java.lang.String[] $r6, $r37, $r41;
        int[] $r7, $r38, r105, r122, r123;
        android.content.pm.PackageParser$SigningDetails $r12, $r13, $r15, $r16, $r17, $r18, $r21, $r25;
        android.content.pm.SigningInfo $r14;
        android.content.pm.Signature[] $r19, $r20, $r22, $r23, $r24, $r26, $r28;
        android.content.pm.Signature $r27;
        java.io.File $r29;
        java.util.ArrayList $r35, $r36, $r39, $r43, $r48, $r50, $r55, $r58, $r62, $r65, $r69, $r72, $r76, $r79, $r85, $r86, $r87, $r90, $r92, $r95, $r97, $r100, $r102;
        java.lang.Object $r40, $r45, $r52, $r59, $r66, $r73, $r80;
        android.content.pm.PermissionInfo[] $r42, $r44;
        android.content.pm.PackageParser$Permission $r46;
        android.content.pm.PermissionInfo $r47;
        android.content.pm.InstrumentationInfo[] $r49, $r51;
        android.content.pm.PackageParser$Instrumentation $r53;
        android.content.pm.InstrumentationInfo $r54;
        java.lang.Object[] $r56, $r63, $r70, $r77;
        android.content.pm.ProviderInfo[] $r57, r119;
        android.content.pm.ProviderInfo $r60, $r61;
        android.content.pm.ServiceInfo[] $r64, r117;
        android.content.pm.ServiceInfo $r67, $r68;
        android.content.pm.ActivityInfo[] $r71, $r78, r113, r115;
        android.content.pm.ActivityInfo $r74, $r75, $r81, $r84;
        android.content.pm.FeatureGroupInfo[] $r88, $r89;
        android.content.pm.FeatureInfo[] $r93, $r94;
        android.content.pm.ConfigurationInfo[] $r98, $r99;
        android.apex.ApexInfo r104;
        android.content.pm.PackageUserState r106;
        android.content.pm.PackageParser$Activity r114, r116;
        android.content.pm.PackageParser$Service r118;
        android.content.pm.PackageParser$Provider r120;

        r0 := @parameter0: android.content.pm.PackageParser$Package;

        r104 := @parameter1: android.apex.ApexInfo;

        r105 := @parameter2: int[];

        i0 := @parameter3: int;

        l1 := @parameter4: long;

        l2 := @parameter5: long;

        r1 := @parameter6: java.util.Set;

        r106 := @parameter7: android.content.pm.PackageUserState;

        i25 := @parameter8: int;

        $r3 = r0.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $z0 = staticinvoke <android.content.pm.PackageParser: boolean checkUseInstalledOrHidden(int,android.content.pm.PackageUserState,android.content.pm.ApplicationInfo)>(i0, r106, $r3);

        if $z0 == 0 goto label47;

        $z1 = virtualinvoke r0.<android.content.pm.PackageParser$Package: boolean isMatch(int)>(i0);

        if $z1 != 0 goto label01;

        goto label47;

     label01:
        $r4 = new android.content.pm.PackageInfo;

        specialinvoke $r4.<android.content.pm.PackageInfo: void <init>()>();

        $r5 = r0.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r4.<android.content.pm.PackageInfo: java.lang.String packageName> = $r5;

        $r6 = r0.<android.content.pm.PackageParser$Package: java.lang.String[] splitNames>;

        $r4.<android.content.pm.PackageInfo: java.lang.String[] splitNames> = $r6;

        $i3 = r0.<android.content.pm.PackageParser$Package: int mVersionCode>;

        $r4.<android.content.pm.PackageInfo: int versionCode> = $i3;

        $i4 = r0.<android.content.pm.PackageParser$Package: int mVersionCodeMajor>;

        $r4.<android.content.pm.PackageInfo: int versionCodeMajor> = $i4;

        $i5 = r0.<android.content.pm.PackageParser$Package: int baseRevisionCode>;

        $r4.<android.content.pm.PackageInfo: int baseRevisionCode> = $i5;

        $r7 = r0.<android.content.pm.PackageParser$Package: int[] splitRevisionCodes>;

        $r4.<android.content.pm.PackageInfo: int[] splitRevisionCodes> = $r7;

        $r8 = r0.<android.content.pm.PackageParser$Package: java.lang.String mVersionName>;

        $r4.<android.content.pm.PackageInfo: java.lang.String versionName> = $r8;

        $r9 = r0.<android.content.pm.PackageParser$Package: java.lang.String mSharedUserId>;

        $r4.<android.content.pm.PackageInfo: java.lang.String sharedUserId> = $r9;

        $i6 = r0.<android.content.pm.PackageParser$Package: int mSharedUserLabel>;

        $r4.<android.content.pm.PackageInfo: int sharedUserLabel> = $i6;

        $r10 = staticinvoke <android.content.pm.PackageParser: android.content.pm.ApplicationInfo generateApplicationInfo(android.content.pm.PackageParser$Package,int,android.content.pm.PackageUserState,int)>(r0, i0, r106, i25);

        $r4.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo> = $r10;

        $i7 = r0.<android.content.pm.PackageParser$Package: int installLocation>;

        $r4.<android.content.pm.PackageInfo: int installLocation> = $i7;

        $z2 = r0.<android.content.pm.PackageParser$Package: boolean isStub>;

        $r4.<android.content.pm.PackageInfo: boolean isStub> = $z2;

        $z3 = r0.<android.content.pm.PackageParser$Package: boolean coreApp>;

        $r4.<android.content.pm.PackageInfo: boolean coreApp> = $z3;

        $r11 = $r4.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i8 = $r11.<android.content.pm.ApplicationInfo: int flags>;

        $i9 = $i8 & 1;

        if $i9 != 0 goto label02;

        $r103 = $r4.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i23 = $r103.<android.content.pm.ApplicationInfo: int flags>;

        $i24 = $i23 & 128;

        if $i24 == 0 goto label03;

     label02:
        $z4 = r0.<android.content.pm.PackageParser$Package: boolean mRequiredForAllUsers>;

        $r4.<android.content.pm.PackageInfo: boolean requiredForAllUsers> = $z4;

     label03:
        $r107 = r0.<android.content.pm.PackageParser$Package: java.lang.String mRestrictedAccountType>;

        $r4.<android.content.pm.PackageInfo: java.lang.String restrictedAccountType> = $r107;

        $r108 = r0.<android.content.pm.PackageParser$Package: java.lang.String mRequiredAccountType>;

        $r4.<android.content.pm.PackageInfo: java.lang.String requiredAccountType> = $r108;

        $r109 = r0.<android.content.pm.PackageParser$Package: java.lang.String mOverlayTarget>;

        $r4.<android.content.pm.PackageInfo: java.lang.String overlayTarget> = $r109;

        $r110 = r0.<android.content.pm.PackageParser$Package: java.lang.String mOverlayTargetName>;

        $r4.<android.content.pm.PackageInfo: java.lang.String targetOverlayableName> = $r110;

        $r111 = r0.<android.content.pm.PackageParser$Package: java.lang.String mOverlayCategory>;

        $r4.<android.content.pm.PackageInfo: java.lang.String overlayCategory> = $r111;

        $i26 = r0.<android.content.pm.PackageParser$Package: int mOverlayPriority>;

        $r4.<android.content.pm.PackageInfo: int overlayPriority> = $i26;

        $z15 = r0.<android.content.pm.PackageParser$Package: boolean mOverlayIsStatic>;

        $r4.<android.content.pm.PackageInfo: boolean mOverlayIsStatic> = $z15;

        $i27 = r0.<android.content.pm.PackageParser$Package: int mCompileSdkVersion>;

        $r4.<android.content.pm.PackageInfo: int compileSdkVersion> = $i27;

        $r112 = r0.<android.content.pm.PackageParser$Package: java.lang.String mCompileSdkVersionCodename>;

        $r4.<android.content.pm.PackageInfo: java.lang.String compileSdkVersionCodename> = $r112;

        $r4.<android.content.pm.PackageInfo: long firstInstallTime> = l1;

        $r4.<android.content.pm.PackageInfo: long lastUpdateTime> = l2;

        $i28 = i0 & 256;

        if $i28 == 0 goto label04;

        $r4.<android.content.pm.PackageInfo: int[] gids> = r105;

        goto label04;

     label04:
        $i10 = i0 & 16384;

        if $i10 == 0 goto label13;

        $r85 = r0.<android.content.pm.PackageParser$Package: java.util.ArrayList configPreferences>;

        if $r85 == null goto label05;

        $r102 = r0.<android.content.pm.PackageParser$Package: java.util.ArrayList configPreferences>;

        i29 = virtualinvoke $r102.<java.util.ArrayList: int size()>();

        goto label06;

     label05:
        i29 = 0;

     label06:
        if i29 <= 0 goto label07;

        $r98 = newarray (android.content.pm.ConfigurationInfo)[i29];

        $r4.<android.content.pm.PackageInfo: android.content.pm.ConfigurationInfo[] configPreferences> = $r98;

        $r100 = r0.<android.content.pm.PackageParser$Package: java.util.ArrayList configPreferences>;

        $r99 = $r4.<android.content.pm.PackageInfo: android.content.pm.ConfigurationInfo[] configPreferences>;

        virtualinvoke $r100.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r99);

     label07:
        $r86 = r0.<android.content.pm.PackageParser$Package: java.util.ArrayList reqFeatures>;

        if $r86 == null goto label08;

        $r97 = r0.<android.content.pm.PackageParser$Package: java.util.ArrayList reqFeatures>;

        i30 = virtualinvoke $r97.<java.util.ArrayList: int size()>();

        goto label09;

     label08:
        i30 = 0;

     label09:
        if i30 <= 0 goto label10;

        $r93 = newarray (android.content.pm.FeatureInfo)[i30];

        $r4.<android.content.pm.PackageInfo: android.content.pm.FeatureInfo[] reqFeatures> = $r93;

        $r95 = r0.<android.content.pm.PackageParser$Package: java.util.ArrayList reqFeatures>;

        $r94 = $r4.<android.content.pm.PackageInfo: android.content.pm.FeatureInfo[] reqFeatures>;

        virtualinvoke $r95.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r94);

     label10:
        $r87 = r0.<android.content.pm.PackageParser$Package: java.util.ArrayList featureGroups>;

        if $r87 == null goto label11;

        $r92 = r0.<android.content.pm.PackageParser$Package: java.util.ArrayList featureGroups>;

        i31 = virtualinvoke $r92.<java.util.ArrayList: int size()>();

        goto label12;

     label11:
        i31 = 0;

     label12:
        if i31 <= 0 goto label13;

        $r88 = newarray (android.content.pm.FeatureGroupInfo)[i31];

        $r4.<android.content.pm.PackageInfo: android.content.pm.FeatureGroupInfo[] featureGroups> = $r88;

        $r90 = r0.<android.content.pm.PackageParser$Package: java.util.ArrayList featureGroups>;

        $r89 = $r4.<android.content.pm.PackageInfo: android.content.pm.FeatureGroupInfo[] featureGroups>;

        virtualinvoke $r90.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r89);

     label13:
        $i32 = i0 & 1;

        if $i32 == 0 goto label18;

        $r76 = r0.<android.content.pm.PackageParser$Package: java.util.ArrayList activities>;

        i33 = virtualinvoke $r76.<java.util.ArrayList: int size()>();

        if i33 <= 0 goto label18;

        i34 = 0;

        r113 = newarray (android.content.pm.ActivityInfo)[i33];

        i35 = 0;

     label14:
        if i35 >= i33 goto label17;

        $r79 = r0.<android.content.pm.PackageParser$Package: java.util.ArrayList activities>;

        $r80 = virtualinvoke $r79.<java.util.ArrayList: java.lang.Object get(int)>(i35);

        r114 = (android.content.pm.PackageParser$Activity) $r80;

        i36 = i34;

        $r81 = r114.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $z13 = virtualinvoke r106.<android.content.pm.PackageUserState: boolean isMatch(android.content.pm.ComponentInfo,int)>($r81, i0);

        if $z13 == 0 goto label16;

        $r83 = <android.content.pm.PackageManager: java.lang.String APP_DETAILS_ACTIVITY_CLASS_NAME>;

        $r82 = r114.<android.content.pm.PackageParser$Activity: java.lang.String className>;

        $z14 = virtualinvoke $r83.<java.lang.String: boolean equals(java.lang.Object)>($r82);

        if $z14 == 0 goto label15;

        i36 = i34;

        goto label16;

     label15:
        $r84 = staticinvoke <android.content.pm.PackageParser: android.content.pm.ActivityInfo generateActivityInfo(android.content.pm.PackageParser$Activity,int,android.content.pm.PackageUserState,int)>(r114, i0, r106, i25);

        r113[i34] = $r84;

        i36 = i34 + 1;

     label16:
        i35 = i35 + 1;

        i34 = i36;

        goto label14;

     label17:
        $r77 = staticinvoke <com.android.internal.util.ArrayUtils: java.lang.Object[] trimToSize(java.lang.Object[],int)>(r113, i34);

        $r78 = (android.content.pm.ActivityInfo[]) $r77;

        $r4.<android.content.pm.PackageInfo: android.content.pm.ActivityInfo[] activities> = $r78;

        goto label18;

     label18:
        $i37 = i0 & 2;

        if $i37 == 0 goto label22;

        $r69 = r0.<android.content.pm.PackageParser$Package: java.util.ArrayList receivers>;

        i38 = virtualinvoke $r69.<java.util.ArrayList: int size()>();

        if i38 <= 0 goto label22;

        i39 = 0;

        r115 = newarray (android.content.pm.ActivityInfo)[i38];

        i40 = 0;

     label19:
        if i40 >= i38 goto label21;

        $r72 = r0.<android.content.pm.PackageParser$Package: java.util.ArrayList receivers>;

        $r73 = virtualinvoke $r72.<java.util.ArrayList: java.lang.Object get(int)>(i40);

        r116 = (android.content.pm.PackageParser$Activity) $r73;

        i41 = i39;

        $r74 = r116.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $z12 = virtualinvoke r106.<android.content.pm.PackageUserState: boolean isMatch(android.content.pm.ComponentInfo,int)>($r74, i0);

        if $z12 == 0 goto label20;

        $r75 = staticinvoke <android.content.pm.PackageParser: android.content.pm.ActivityInfo generateActivityInfo(android.content.pm.PackageParser$Activity,int,android.content.pm.PackageUserState,int)>(r116, i0, r106, i25);

        r115[i39] = $r75;

        i41 = i39 + 1;

     label20:
        i40 = i40 + 1;

        i39 = i41;

        goto label19;

     label21:
        $r70 = staticinvoke <com.android.internal.util.ArrayUtils: java.lang.Object[] trimToSize(java.lang.Object[],int)>(r115, i39);

        $r71 = (android.content.pm.ActivityInfo[]) $r70;

        $r4.<android.content.pm.PackageInfo: android.content.pm.ActivityInfo[] receivers> = $r71;

     label22:
        $i42 = i0 & 4;

        if $i42 == 0 goto label26;

        $r62 = r0.<android.content.pm.PackageParser$Package: java.util.ArrayList services>;

        i43 = virtualinvoke $r62.<java.util.ArrayList: int size()>();

        if i43 <= 0 goto label26;

        i44 = 0;

        r117 = newarray (android.content.pm.ServiceInfo)[i43];

        i45 = 0;

     label23:
        if i45 >= i43 goto label25;

        $r65 = r0.<android.content.pm.PackageParser$Package: java.util.ArrayList services>;

        $r66 = virtualinvoke $r65.<java.util.ArrayList: java.lang.Object get(int)>(i45);

        r118 = (android.content.pm.PackageParser$Service) $r66;

        i46 = i44;

        $r67 = r118.<android.content.pm.PackageParser$Service: android.content.pm.ServiceInfo info>;

        $z11 = virtualinvoke r106.<android.content.pm.PackageUserState: boolean isMatch(android.content.pm.ComponentInfo,int)>($r67, i0);

        if $z11 == 0 goto label24;

        $r68 = staticinvoke <android.content.pm.PackageParser: android.content.pm.ServiceInfo generateServiceInfo(android.content.pm.PackageParser$Service,int,android.content.pm.PackageUserState,int)>(r118, i0, r106, i25);

        r117[i44] = $r68;

        i46 = i44 + 1;

     label24:
        i45 = i45 + 1;

        i44 = i46;

        goto label23;

     label25:
        $r63 = staticinvoke <com.android.internal.util.ArrayUtils: java.lang.Object[] trimToSize(java.lang.Object[],int)>(r117, i44);

        $r64 = (android.content.pm.ServiceInfo[]) $r63;

        $r4.<android.content.pm.PackageInfo: android.content.pm.ServiceInfo[] services> = $r64;

     label26:
        $i47 = i0 & 8;

        if $i47 == 0 goto label30;

        $r55 = r0.<android.content.pm.PackageParser$Package: java.util.ArrayList providers>;

        i48 = virtualinvoke $r55.<java.util.ArrayList: int size()>();

        if i48 <= 0 goto label30;

        i49 = 0;

        r119 = newarray (android.content.pm.ProviderInfo)[i48];

        i50 = 0;

     label27:
        if i50 >= i48 goto label29;

        $r58 = r0.<android.content.pm.PackageParser$Package: java.util.ArrayList providers>;

        $r59 = virtualinvoke $r58.<java.util.ArrayList: java.lang.Object get(int)>(i50);

        r120 = (android.content.pm.PackageParser$Provider) $r59;

        i51 = i49;

        $r60 = r120.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $z10 = virtualinvoke r106.<android.content.pm.PackageUserState: boolean isMatch(android.content.pm.ComponentInfo,int)>($r60, i0);

        if $z10 == 0 goto label28;

        $r61 = staticinvoke <android.content.pm.PackageParser: android.content.pm.ProviderInfo generateProviderInfo(android.content.pm.PackageParser$Provider,int,android.content.pm.PackageUserState,int)>(r120, i0, r106, i25);

        r119[i49] = $r61;

        i51 = i49 + 1;

     label28:
        i50 = i50 + 1;

        i49 = i51;

        goto label27;

     label29:
        $r56 = staticinvoke <com.android.internal.util.ArrayUtils: java.lang.Object[] trimToSize(java.lang.Object[],int)>(r119, i49);

        $r57 = (android.content.pm.ProviderInfo[]) $r56;

        $r4.<android.content.pm.PackageInfo: android.content.pm.ProviderInfo[] providers> = $r57;

     label30:
        $i52 = i0 & 16;

        if $i52 == 0 goto label32;

        $r48 = r0.<android.content.pm.PackageParser$Package: java.util.ArrayList instrumentation>;

        i53 = virtualinvoke $r48.<java.util.ArrayList: int size()>();

        if i53 <= 0 goto label32;

        $r49 = newarray (android.content.pm.InstrumentationInfo)[i53];

        $r4.<android.content.pm.PackageInfo: android.content.pm.InstrumentationInfo[] instrumentation> = $r49;

        i54 = 0;

     label31:
        if i54 >= i53 goto label32;

        $r51 = $r4.<android.content.pm.PackageInfo: android.content.pm.InstrumentationInfo[] instrumentation>;

        $r50 = r0.<android.content.pm.PackageParser$Package: java.util.ArrayList instrumentation>;

        $r52 = virtualinvoke $r50.<java.util.ArrayList: java.lang.Object get(int)>(i54);

        $r53 = (android.content.pm.PackageParser$Instrumentation) $r52;

        $r54 = staticinvoke <android.content.pm.PackageParser: android.content.pm.InstrumentationInfo generateInstrumentationInfo(android.content.pm.PackageParser$Instrumentation,int)>($r53, i0);

        $r51[i54] = $r54;

        i54 = i54 + 1;

        goto label31;

     label32:
        $i55 = i0 & 4096;

        if $i55 == 0 goto label37;

        $r35 = r0.<android.content.pm.PackageParser$Package: java.util.ArrayList permissions>;

        i56 = virtualinvoke $r35.<java.util.ArrayList: int size()>();

        if i56 <= 0 goto label34;

        $r42 = newarray (android.content.pm.PermissionInfo)[i56];

        $r4.<android.content.pm.PackageInfo: android.content.pm.PermissionInfo[] permissions> = $r42;

        i57 = 0;

     label33:
        if i57 >= i56 goto label34;

        $r44 = $r4.<android.content.pm.PackageInfo: android.content.pm.PermissionInfo[] permissions>;

        $r43 = r0.<android.content.pm.PackageParser$Package: java.util.ArrayList permissions>;

        $r45 = virtualinvoke $r43.<java.util.ArrayList: java.lang.Object get(int)>(i57);

        $r46 = (android.content.pm.PackageParser$Permission) $r45;

        $r47 = staticinvoke <android.content.pm.PackageParser: android.content.pm.PermissionInfo generatePermissionInfo(android.content.pm.PackageParser$Permission,int)>($r46, i0);

        $r44[i57] = $r47;

        i57 = i57 + 1;

        goto label33;

     label34:
        $r36 = r0.<android.content.pm.PackageParser$Package: java.util.ArrayList requestedPermissions>;

        i58 = virtualinvoke $r36.<java.util.ArrayList: int size()>();

        if i58 <= 0 goto label37;

        $r37 = newarray (java.lang.String)[i58];

        $r4.<android.content.pm.PackageInfo: java.lang.String[] requestedPermissions> = $r37;

        $r38 = newarray (int)[i58];

        $r4.<android.content.pm.PackageInfo: int[] requestedPermissionsFlags> = $r38;

        i59 = 0;

     label35:
        if i59 >= i58 goto label37;

        $r39 = r0.<android.content.pm.PackageParser$Package: java.util.ArrayList requestedPermissions>;

        $r40 = virtualinvoke $r39.<java.util.ArrayList: java.lang.Object get(int)>(i59);

        r121 = (java.lang.String) $r40;

        $r41 = $r4.<android.content.pm.PackageInfo: java.lang.String[] requestedPermissions>;

        $r41[i59] = r121;

        r122 = $r4.<android.content.pm.PackageInfo: int[] requestedPermissionsFlags>;

        $i19 = r122[i59];

        $i20 = $i19 | 1;

        r122[i59] = $i20;

        if r1 == null goto label36;

        $z9 = interfaceinvoke r1.<java.util.Set: boolean contains(java.lang.Object)>(r121);

        if $z9 == 0 goto label36;

        r123 = $r4.<android.content.pm.PackageInfo: int[] requestedPermissionsFlags>;

        $i21 = r123[i59];

        $i22 = $i21 | 2;

        r123[i59] = $i22;

     label36:
        i59 = i59 + 1;

        goto label35;

     label37:
        if r104 == null goto label42;

        $r29 = new java.io.File;

        $r30 = r104.<android.apex.ApexInfo: java.lang.String modulePath>;

        specialinvoke $r29.<java.io.File: void <init>(java.lang.String)>($r30);

        $r31 = $r4.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r32 = virtualinvoke $r29.<java.io.File: java.lang.String getPath()>();

        $r31.<android.content.pm.ApplicationInfo: java.lang.String sourceDir> = $r32;

        $r33 = $r4.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r34 = virtualinvoke $r29.<java.io.File: java.lang.String getPath()>();

        $r33.<android.content.pm.ApplicationInfo: java.lang.String publicSourceDir> = $r34;

        $z7 = r104.<android.apex.ApexInfo: boolean isFactory>;

        if $z7 == 0 goto label38;

        r125 = $r4.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i17 = r125.<android.content.pm.ApplicationInfo: int flags>;

        $i18 = $i17 | 1;

        r125.<android.content.pm.ApplicationInfo: int flags> = $i18;

        goto label39;

     label38:
        r126 = $r4.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i11 = r126.<android.content.pm.ApplicationInfo: int flags>;

        $i12 = $i11 & -2;

        r126.<android.content.pm.ApplicationInfo: int flags> = $i12;

     label39:
        $z8 = r104.<android.apex.ApexInfo: boolean isActive>;

        if $z8 == 0 goto label40;

        r127 = $r4.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i15 = r127.<android.content.pm.ApplicationInfo: int flags>;

        $i16 = $i15 | 8388608;

        r127.<android.content.pm.ApplicationInfo: int flags> = $i16;

        goto label41;

     label40:
        r128 = $r4.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i13 = r128.<android.content.pm.ApplicationInfo: int flags>;

        $i14 = $i13 & -8388609;

        r128.<android.content.pm.ApplicationInfo: int flags> = $i14;

     label41:
        $r4.<android.content.pm.PackageInfo: boolean isApex> = 1;

     label42:
        $i60 = i0 & 64;

        if $i60 == 0 goto label44;

        $r16 = r0.<android.content.pm.PackageParser$Package: android.content.pm.PackageParser$SigningDetails mSigningDetails>;

        $z5 = virtualinvoke $r16.<android.content.pm.PackageParser$SigningDetails: boolean hasPastSigningCertificates()>();

        if $z5 == 0 goto label43;

        $r24 = newarray (android.content.pm.Signature)[1];

        $r4.<android.content.pm.PackageInfo: android.content.pm.Signature[] signatures> = $r24;

        $r28 = $r4.<android.content.pm.PackageInfo: android.content.pm.Signature[] signatures>;

        $r25 = r0.<android.content.pm.PackageParser$Package: android.content.pm.PackageParser$SigningDetails mSigningDetails>;

        $r26 = $r25.<android.content.pm.PackageParser$SigningDetails: android.content.pm.Signature[] pastSigningCertificates>;

        $r27 = $r26[0];

        $r28[0] = $r27;

        goto label44;

     label43:
        $r17 = r0.<android.content.pm.PackageParser$Package: android.content.pm.PackageParser$SigningDetails mSigningDetails>;

        $z6 = virtualinvoke $r17.<android.content.pm.PackageParser$SigningDetails: boolean hasSignatures()>();

        if $z6 == 0 goto label44;

        $r18 = r0.<android.content.pm.PackageParser$Package: android.content.pm.PackageParser$SigningDetails mSigningDetails>;

        $r19 = $r18.<android.content.pm.PackageParser$SigningDetails: android.content.pm.Signature[] signatures>;

        i61 = lengthof $r19;

        $r20 = newarray (android.content.pm.Signature)[i61];

        $r4.<android.content.pm.PackageInfo: android.content.pm.Signature[] signatures> = $r20;

        $r21 = r0.<android.content.pm.PackageParser$Package: android.content.pm.PackageParser$SigningDetails mSigningDetails>;

        $r23 = $r21.<android.content.pm.PackageParser$SigningDetails: android.content.pm.Signature[] signatures>;

        $r22 = $r4.<android.content.pm.PackageInfo: android.content.pm.Signature[] signatures>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r23, 0, $r22, 0, i61);

     label44:
        $i62 = 134217728 & i0;

        if $i62 == 0 goto label46;

        $r13 = r0.<android.content.pm.PackageParser$Package: android.content.pm.PackageParser$SigningDetails mSigningDetails>;

        $r12 = <android.content.pm.PackageParser$SigningDetails: android.content.pm.PackageParser$SigningDetails UNKNOWN>;

        if $r13 == $r12 goto label45;

        $r14 = new android.content.pm.SigningInfo;

        $r15 = r0.<android.content.pm.PackageParser$Package: android.content.pm.PackageParser$SigningDetails mSigningDetails>;

        specialinvoke $r14.<android.content.pm.SigningInfo: void <init>(android.content.pm.PackageParser$SigningDetails)>($r15);

        $r4.<android.content.pm.PackageInfo: android.content.pm.SigningInfo signingInfo> = $r14;

        goto label46;

     label45:
        $r4.<android.content.pm.PackageInfo: android.content.pm.SigningInfo signingInfo> = null;

     label46:
        return $r4;

     label47:
        return null;
    }

    public static android.content.pm.PackageInfo generatePackageInfo(android.content.pm.PackageParser$Package, int[], int, long, long, java.util.Set, android.content.pm.PackageUserState)
    {
        android.content.pm.PackageParser$Package r0;
        int[] r1;
        int i0, $i3;
        long l1, l2;
        java.util.Set r2;
        android.content.pm.PackageUserState r3;
        android.content.pm.PackageInfo $r4;

        r0 := @parameter0: android.content.pm.PackageParser$Package;

        r1 := @parameter1: int[];

        i0 := @parameter2: int;

        l1 := @parameter3: long;

        l2 := @parameter4: long;

        r2 := @parameter5: java.util.Set;

        r3 := @parameter6: android.content.pm.PackageUserState;

        $i3 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        $r4 = staticinvoke <android.content.pm.PackageParser: android.content.pm.PackageInfo generatePackageInfo(android.content.pm.PackageParser$Package,int[],int,long,long,java.util.Set,android.content.pm.PackageUserState,int)>(r0, r1, i0, l1, l2, r2, r3, $i3);

        return $r4;
    }

    public static android.content.pm.PackageInfo generatePackageInfo(android.content.pm.PackageParser$Package, int[], int, long, long, java.util.Set, android.content.pm.PackageUserState, int)
    {
        android.content.pm.PackageParser$Package r0;
        int[] r1;
        int i0, i3;
        long l1, l2;
        java.util.Set r2;
        android.content.pm.PackageUserState r3;
        android.content.pm.PackageInfo $r4;

        r0 := @parameter0: android.content.pm.PackageParser$Package;

        r1 := @parameter1: int[];

        i0 := @parameter2: int;

        l1 := @parameter3: long;

        l2 := @parameter4: long;

        r2 := @parameter5: java.util.Set;

        r3 := @parameter6: android.content.pm.PackageUserState;

        i3 := @parameter7: int;

        $r4 = staticinvoke <android.content.pm.PackageParser: android.content.pm.PackageInfo generatePackageInfo(android.content.pm.PackageParser$Package,android.apex.ApexInfo,int[],int,long,long,java.util.Set,android.content.pm.PackageUserState,int)>(r0, null, r1, i0, l1, l2, r2, r3, i3);

        return $r4;
    }

    public static final android.content.pm.PermissionGroupInfo generatePermissionGroupInfo(android.content.pm.PackageParser$PermissionGroup, int)
    {
        android.content.pm.PackageParser$PermissionGroup r0;
        int i0, $i1;
        android.content.pm.PermissionGroupInfo $r2, $r3, $r5;
        android.os.Bundle $r4;

        r0 := @parameter0: android.content.pm.PackageParser$PermissionGroup;

        i0 := @parameter1: int;

        if r0 != null goto label1;

        return null;

     label1:
        $i1 = i0 & 128;

        if $i1 != 0 goto label2;

        $r5 = r0.<android.content.pm.PackageParser$PermissionGroup: android.content.pm.PermissionGroupInfo info>;

        return $r5;

     label2:
        $r2 = new android.content.pm.PermissionGroupInfo;

        $r3 = r0.<android.content.pm.PackageParser$PermissionGroup: android.content.pm.PermissionGroupInfo info>;

        specialinvoke $r2.<android.content.pm.PermissionGroupInfo: void <init>(android.content.pm.PermissionGroupInfo)>($r3);

        $r4 = r0.<android.content.pm.PackageParser$PermissionGroup: android.os.Bundle metaData>;

        $r2.<android.content.pm.PermissionGroupInfo: android.os.Bundle metaData> = $r4;

        return $r2;
    }

    public static final android.content.pm.PermissionInfo generatePermissionInfo(android.content.pm.PackageParser$Permission, int)
    {
        android.content.pm.PackageParser$Permission r0;
        int i0, $i1;
        android.content.pm.PermissionInfo $r2, $r3, $r5;
        android.os.Bundle $r4;

        r0 := @parameter0: android.content.pm.PackageParser$Permission;

        i0 := @parameter1: int;

        if r0 != null goto label1;

        return null;

     label1:
        $i1 = i0 & 128;

        if $i1 != 0 goto label2;

        $r5 = r0.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        return $r5;

     label2:
        $r2 = new android.content.pm.PermissionInfo;

        $r3 = r0.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        specialinvoke $r2.<android.content.pm.PermissionInfo: void <init>(android.content.pm.PermissionInfo)>($r3);

        $r4 = r0.<android.content.pm.PackageParser$Permission: android.os.Bundle metaData>;

        $r2.<android.content.pm.PermissionInfo: android.os.Bundle metaData> = $r4;

        return $r2;
    }

    public static final android.content.pm.ProviderInfo generateProviderInfo(android.content.pm.PackageParser$Provider, int, android.content.pm.PackageUserState, int)
    {
        android.content.pm.PackageParser$Provider r0;
        int i0, i1, $i2, $i3;
        android.content.pm.PackageUserState r1;
        android.content.pm.PackageParser$Package $r3, $r6, $r10;
        android.content.pm.ApplicationInfo $r4, $r11, $r13;
        boolean $z0, $z1;
        android.os.Bundle $r5, $r9;
        android.content.pm.ProviderInfo $r7, $r8, $r12, $r14, $r15;
        android.os.PatternMatcher[] $r16;

        r0 := @parameter0: android.content.pm.PackageParser$Provider;

        i0 := @parameter1: int;

        r1 := @parameter2: android.content.pm.PackageUserState;

        i1 := @parameter3: int;

        if r0 != null goto label1;

        return null;

     label1:
        $r3 = r0.<android.content.pm.PackageParser$Provider: android.content.pm.PackageParser$Package owner>;

        $r4 = $r3.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $z0 = staticinvoke <android.content.pm.PackageParser: boolean checkUseInstalledOrHidden(int,android.content.pm.PackageUserState,android.content.pm.ApplicationInfo)>(i0, r1, $r4);

        if $z0 != 0 goto label2;

        return null;

     label2:
        $r6 = r0.<android.content.pm.PackageParser$Provider: android.content.pm.PackageParser$Package owner>;

        $r5 = r0.<android.content.pm.PackageParser$Provider: android.os.Bundle metaData>;

        $z1 = staticinvoke <android.content.pm.PackageParser: boolean copyNeeded(int,android.content.pm.PackageParser$Package,android.content.pm.PackageUserState,android.os.Bundle,int)>(i0, $r6, r1, $r5, i1);

        if $z1 != 0 goto label4;

        $i3 = i0 & 2048;

        if $i3 != 0 goto label3;

        $r15 = r0.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r16 = $r15.<android.content.pm.ProviderInfo: android.os.PatternMatcher[] uriPermissionPatterns>;

        if $r16 != null goto label4;

     label3:
        $r12 = r0.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r13 = $r12.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        staticinvoke <android.content.pm.PackageParser: void updateApplicationInfo(android.content.pm.ApplicationInfo,int,android.content.pm.PackageUserState)>($r13, i0, r1);

        $r14 = r0.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        return $r14;

     label4:
        $r7 = new android.content.pm.ProviderInfo;

        $r8 = r0.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        specialinvoke $r7.<android.content.pm.ProviderInfo: void <init>(android.content.pm.ProviderInfo)>($r8);

        $r9 = r0.<android.content.pm.PackageParser$Provider: android.os.Bundle metaData>;

        $r7.<android.content.pm.ProviderInfo: android.os.Bundle metaData> = $r9;

        $i2 = i0 & 2048;

        if $i2 != 0 goto label5;

        $r7.<android.content.pm.ProviderInfo: android.os.PatternMatcher[] uriPermissionPatterns> = null;

     label5:
        $r10 = r0.<android.content.pm.PackageParser$Provider: android.content.pm.PackageParser$Package owner>;

        $r11 = staticinvoke <android.content.pm.PackageParser: android.content.pm.ApplicationInfo generateApplicationInfo(android.content.pm.PackageParser$Package,int,android.content.pm.PackageUserState,int)>($r10, i0, r1, i1);

        $r7.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo> = $r11;

        return $r7;
    }

    public static final android.content.pm.ServiceInfo generateServiceInfo(android.content.pm.PackageParser$Service, int, android.content.pm.PackageUserState, int)
    {
        android.content.pm.PackageParser$Service r0;
        int i0, i1;
        android.content.pm.PackageUserState r1;
        android.content.pm.PackageParser$Package $r3, $r6, $r10;
        android.content.pm.ApplicationInfo $r4, $r11, $r13;
        boolean $z0, $z1;
        android.os.Bundle $r5, $r9;
        android.content.pm.ServiceInfo $r7, $r8, $r12, $r14;

        r0 := @parameter0: android.content.pm.PackageParser$Service;

        i0 := @parameter1: int;

        r1 := @parameter2: android.content.pm.PackageUserState;

        i1 := @parameter3: int;

        if r0 != null goto label1;

        return null;

     label1:
        $r3 = r0.<android.content.pm.PackageParser$Service: android.content.pm.PackageParser$Package owner>;

        $r4 = $r3.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $z0 = staticinvoke <android.content.pm.PackageParser: boolean checkUseInstalledOrHidden(int,android.content.pm.PackageUserState,android.content.pm.ApplicationInfo)>(i0, r1, $r4);

        if $z0 != 0 goto label2;

        return null;

     label2:
        $r6 = r0.<android.content.pm.PackageParser$Service: android.content.pm.PackageParser$Package owner>;

        $r5 = r0.<android.content.pm.PackageParser$Service: android.os.Bundle metaData>;

        $z1 = staticinvoke <android.content.pm.PackageParser: boolean copyNeeded(int,android.content.pm.PackageParser$Package,android.content.pm.PackageUserState,android.os.Bundle,int)>(i0, $r6, r1, $r5, i1);

        if $z1 != 0 goto label3;

        $r12 = r0.<android.content.pm.PackageParser$Service: android.content.pm.ServiceInfo info>;

        $r13 = $r12.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

        staticinvoke <android.content.pm.PackageParser: void updateApplicationInfo(android.content.pm.ApplicationInfo,int,android.content.pm.PackageUserState)>($r13, i0, r1);

        $r14 = r0.<android.content.pm.PackageParser$Service: android.content.pm.ServiceInfo info>;

        return $r14;

     label3:
        $r7 = new android.content.pm.ServiceInfo;

        $r8 = r0.<android.content.pm.PackageParser$Service: android.content.pm.ServiceInfo info>;

        specialinvoke $r7.<android.content.pm.ServiceInfo: void <init>(android.content.pm.ServiceInfo)>($r8);

        $r9 = r0.<android.content.pm.PackageParser$Service: android.os.Bundle metaData>;

        $r7.<android.content.pm.ServiceInfo: android.os.Bundle metaData> = $r9;

        $r10 = r0.<android.content.pm.PackageParser$Service: android.content.pm.PackageParser$Package owner>;

        $r11 = staticinvoke <android.content.pm.PackageParser: android.content.pm.ApplicationInfo generateApplicationInfo(android.content.pm.PackageParser$Package,int,android.content.pm.PackageUserState,int)>($r10, i0, r1, i1);

        $r7.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo> = $r11;

        return $r7;
    }

    public static int getActivityConfigChanges(int, int)
    {
        int i0, i1, $i2, $i3;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = i1 & 3;

        $i3 = $i2 | i0;

        return $i3;
    }

    private static boolean hasDomainURLs(android.content.pm.PackageParser$Package)
    {
        int i0, i1, i2, i3;
        java.util.ArrayList r0, $r2, r7;
        android.content.pm.PackageParser$ActivityIntentInfo r1;
        java.lang.Object $r3, $r5;
        android.content.pm.PackageParser$Activity $r4;
        boolean $z0, $z1, $z2, $z3;
        android.content.pm.PackageParser$Package r6;

        r6 := @parameter0: android.content.pm.PackageParser$Package;

        if r6 == null goto label11;

        $r2 = r6.<android.content.pm.PackageParser$Package: java.util.ArrayList activities>;

        if $r2 != null goto label01;

        goto label11;

     label01:
        r7 = r6.<android.content.pm.PackageParser$Package: java.util.ArrayList activities>;

        i0 = virtualinvoke r7.<java.util.ArrayList: int size()>();

        i2 = 0;

     label02:
        if i2 >= i0 goto label10;

        $r3 = virtualinvoke r7.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r4 = (android.content.pm.PackageParser$Activity) $r3;

        r0 = $r4.<android.content.pm.PackageParser$Activity: java.util.ArrayList intents>;

        if r0 != null goto label03;

        goto label09;

     label03:
        i1 = virtualinvoke r0.<java.util.ArrayList: int size()>();

        i3 = 0;

     label04:
        if i3 >= i1 goto label09;

        $r5 = virtualinvoke r0.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r1 = (android.content.pm.PackageParser$ActivityIntentInfo) $r5;

        $z0 = virtualinvoke r1.<android.content.pm.PackageParser$ActivityIntentInfo: boolean hasAction(java.lang.String)>("android.intent.action.VIEW");

        if $z0 != 0 goto label05;

        goto label07;

     label05:
        $z1 = virtualinvoke r1.<android.content.pm.PackageParser$ActivityIntentInfo: boolean hasAction(java.lang.String)>("android.intent.action.VIEW");

        if $z1 != 0 goto label06;

        goto label07;

     label06:
        $z2 = virtualinvoke r1.<android.content.pm.PackageParser$ActivityIntentInfo: boolean hasDataScheme(java.lang.String)>("http");

        if $z2 != 0 goto label08;

        $z3 = virtualinvoke r1.<android.content.pm.PackageParser$ActivityIntentInfo: boolean hasDataScheme(java.lang.String)>("https");

        if $z3 == 0 goto label07;

        goto label08;

     label07:
        i3 = i3 + 1;

        goto label04;

     label08:
        return 1;

     label09:
        i2 = i2 + 1;

        goto label02;

     label10:
        return 0;

     label11:
        return 0;
    }

    public static final boolean isApkFile(java.io.File)
    {
        java.io.File r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @parameter0: java.io.File;

        $r1 = virtualinvoke r0.<java.io.File: java.lang.String getName()>();

        $z0 = staticinvoke <android.content.pm.PackageParser: boolean isApkPath(java.lang.String)>($r1);

        return $z0;
    }

    public static boolean isApkPath(java.lang.String)
    {
        java.lang.String r0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>(".apk");

        return $z0;
    }

    public static boolean isAvailable(android.content.pm.PackageUserState)
    {
        android.content.pm.PackageUserState r0;
        boolean $z0;

        r0 := @parameter0: android.content.pm.PackageUserState;

        $z0 = staticinvoke <android.content.pm.PackageParser: boolean checkUseInstalledOrHidden(int,android.content.pm.PackageUserState,android.content.pm.ApplicationInfo)>(0, r0, null);

        return $z0;
    }

    private boolean isImplicitlyExposedIntent(android.content.pm.PackageParser$IntentInfo)
    {
        android.content.pm.PackageParser r0;
        android.content.pm.PackageParser$IntentInfo r1;
        boolean $z0, $z1, $z2, $z3, z4;

        r0 := @this: android.content.pm.PackageParser;

        r1 := @parameter0: android.content.pm.PackageParser$IntentInfo;

        $z0 = virtualinvoke r1.<android.content.pm.PackageParser$IntentInfo: boolean hasCategory(java.lang.String)>("android.intent.category.BROWSABLE");

        if $z0 != 0 goto label2;

        $z1 = virtualinvoke r1.<android.content.pm.PackageParser$IntentInfo: boolean hasAction(java.lang.String)>("android.intent.action.SEND");

        if $z1 != 0 goto label2;

        $z2 = virtualinvoke r1.<android.content.pm.PackageParser$IntentInfo: boolean hasAction(java.lang.String)>("android.intent.action.SENDTO");

        if $z2 != 0 goto label2;

        $z3 = virtualinvoke r1.<android.content.pm.PackageParser$IntentInfo: boolean hasAction(java.lang.String)>("android.intent.action.SEND_MULTIPLE");

        if $z3 == 0 goto label1;

        goto label2;

     label1:
        z4 = 0;

        goto label3;

     label2:
        z4 = 1;

     label3:
        return z4;
    }

    static int lambda$parseBaseApplication$0(android.content.pm.PackageParser$Activity, android.content.pm.PackageParser$Activity)
    {
        android.content.pm.PackageParser$Activity r0, r1;
        int $i0, $i1, $i2;

        r0 := @parameter0: android.content.pm.PackageParser$Activity;

        r1 := @parameter1: android.content.pm.PackageParser$Activity;

        $i1 = r1.<android.content.pm.PackageParser$Activity: int order>;

        $i0 = r0.<android.content.pm.PackageParser$Activity: int order>;

        $i2 = staticinvoke <java.lang.Integer: int compare(int,int)>($i1, $i0);

        return $i2;
    }

    static int lambda$parseBaseApplication$1(android.content.pm.PackageParser$Activity, android.content.pm.PackageParser$Activity)
    {
        android.content.pm.PackageParser$Activity r0, r1;
        int $i0, $i1, $i2;

        r0 := @parameter0: android.content.pm.PackageParser$Activity;

        r1 := @parameter1: android.content.pm.PackageParser$Activity;

        $i1 = r1.<android.content.pm.PackageParser$Activity: int order>;

        $i0 = r0.<android.content.pm.PackageParser$Activity: int order>;

        $i2 = staticinvoke <java.lang.Integer: int compare(int,int)>($i1, $i0);

        return $i2;
    }

    static int lambda$parseBaseApplication$2(android.content.pm.PackageParser$Service, android.content.pm.PackageParser$Service)
    {
        android.content.pm.PackageParser$Service r0, r1;
        int $i0, $i1, $i2;

        r0 := @parameter0: android.content.pm.PackageParser$Service;

        r1 := @parameter1: android.content.pm.PackageParser$Service;

        $i1 = r1.<android.content.pm.PackageParser$Service: int order>;

        $i0 = r0.<android.content.pm.PackageParser$Service: int order>;

        $i2 = staticinvoke <java.lang.Integer: int compare(int,int)>($i1, $i0);

        return $i2;
    }

    private static boolean matchTargetCode(java.lang.String[], java.lang.String)
    {
        java.lang.String[] r0;
        int i0;
        boolean $z0;
        java.lang.String r1;

        r0 := @parameter0: java.lang.String[];

        r1 := @parameter1: java.lang.String;

        i0 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(46);

        if i0 != -1 goto label1;

        goto label2;

     label1:
        r1 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

     label2:
        $z0 = staticinvoke <com.android.internal.util.ArrayUtils: boolean contains(java.lang.Object[],java.lang.Object)>(r0, r1);

        return $z0;
    }

    private static android.content.res.AssetManager newConfiguredAssetManager()
    {
        android.content.res.AssetManager $r1;
        int $i0;

        $r1 = new android.content.res.AssetManager;

        specialinvoke $r1.<android.content.res.AssetManager: void <init>()>();

        $i0 = <android.os.Build$VERSION: int RESOURCES_SDK_INT>;

        virtualinvoke $r1.<android.content.res.AssetManager: void setConfiguration(int,int,java.lang.String,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)>(0, 0, null, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, $i0);

        return $r1;
    }

    private android.content.pm.PackageParser$Activity parseActivity(android.content.pm.PackageParser$Package, android.content.res.Resources, android.content.res.XmlResourceParser, int, java.lang.String[], android.content.pm.PackageParser$CachedComponentArgs, boolean, boolean) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.pm.PackageParser r0;
        android.content.res.Resources r1;
        android.content.res.XmlResourceParser r2;
        java.lang.String[] r3, $r110;
        android.content.res.TypedArray r6;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z19, $z20, $z21, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32, $z33, $z34, $z35, $z36, $z37, z38, z39, $z40, z41, $z42, $z43, $z44, $z45, $z46, z47, $z48, $z49, z50;
        int[] $r8;
        android.content.pm.PackageParser$ParseComponentArgs $r9, $r10, $r11, $r14, $r109, r114;
        android.content.pm.PackageParser$Activity $r12;
        android.content.pm.ActivityInfo $r13, $r16, $r17, $r19, $r21, $r22, $r23, $r81, $r84, $r85, $r86, $r87, $r88, $r89, $r90, $r91, $r95, $r96, $r101, $r107, $r108, r120, $r123, $r129, $r131, r132, r133, r134, r135, r136, r137, r138, r139, r140, r141, r142, r143, r144, r145, r146, r147, r148, r149, r150, $r151, $r152, $r153, $r155, $r156, r157, r158, r159, r160, r161, $r162, r164, r170, r171, r175, r176, r185;
        java.lang.String $r15, $r25, $r26, $r29, $r32, $r35, $r38, $r41, $r43, $r46, $r49, $r52, $r54, $r55, $r57, $r64, $r67, $r69, $r74, $r77, $r79, $r82, $r83, $r92, $r94, $r97, $r98, $r102, $r106, r115, r116, r117, r119, r121, r122, $r125, $r127, $r128, $r130, $r154, $r165;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i12, $i13, $i14, $i15, $i16, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i88, $i89, $i90, $i91, i93, $i94, $i95, $i96, i97, i98;
        android.content.pm.ApplicationInfo $r18, $r20, $r80, $r93, $r124, $r126, r163;
        java.util.ArrayList $r24, $r59, $r60, $r61, $r71;
        java.lang.StringBuilder $r27, $r33, $r44, $r62, $r72, $r99;
        android.os.Bundle $r56, r178;
        android.content.pm.PackageParser$ActivityIntentInfo $r58, $r70;
        float $f0, $f1;
        android.content.pm.PackageParser$Package r111;
        android.content.pm.PackageParser$CachedComponentArgs r112;
        byte b99, b100;

        r0 := @this: android.content.pm.PackageParser;

        r111 := @parameter0: android.content.pm.PackageParser$Package;

        r1 := @parameter1: android.content.res.Resources;

        r2 := @parameter2: android.content.res.XmlResourceParser;

        i93 := @parameter3: int;

        r3 := @parameter4: java.lang.String[];

        r112 := @parameter5: android.content.pm.PackageParser$CachedComponentArgs;

        z38 := @parameter6: boolean;

        z39 := @parameter7: boolean;

        $r8 = <com.android.internal.R$styleable: int[] AndroidManifestActivity>;

        r6 = virtualinvoke r1.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r2, $r8);

        $r9 = r112.<android.content.pm.PackageParser$CachedComponentArgs: android.content.pm.PackageParser$ParseComponentArgs mActivityArgs>;

        if $r9 != null goto label01;

        $r109 = new android.content.pm.PackageParser$ParseComponentArgs;

        $r110 = r0.<android.content.pm.PackageParser: java.lang.String[] mSeparateProcesses>;

        specialinvoke $r109.<android.content.pm.PackageParser$ParseComponentArgs: void <init>(android.content.pm.PackageParser$Package,java.lang.String[],int,int,int,int,int,int,java.lang.String[],int,int,int)>(r111, r3, 3, 1, 2, 44, 23, 30, $r110, 7, 17, 5);

        r112.<android.content.pm.PackageParser$CachedComponentArgs: android.content.pm.PackageParser$ParseComponentArgs mActivityArgs> = $r109;

     label01:
        r114 = r112.<android.content.pm.PackageParser$CachedComponentArgs: android.content.pm.PackageParser$ParseComponentArgs mActivityArgs>;

        if z38 == 0 goto label02;

        r115 = "<receiver>";

        goto label03;

     label02:
        r115 = "<activity>";

     label03:
        r114.<android.content.pm.PackageParser$ParseComponentArgs: java.lang.String tag> = r115;

        $r10 = r112.<android.content.pm.PackageParser$CachedComponentArgs: android.content.pm.PackageParser$ParseComponentArgs mActivityArgs>;

        $r10.<android.content.pm.PackageParser$ParseComponentArgs: android.content.res.TypedArray sa> = r6;

        $r11 = r112.<android.content.pm.PackageParser$CachedComponentArgs: android.content.pm.PackageParser$ParseComponentArgs mActivityArgs>;

        $r11.<android.content.pm.PackageParser$ParseComponentArgs: int flags> = i93;

        $r12 = new android.content.pm.PackageParser$Activity;

        $r14 = r112.<android.content.pm.PackageParser$CachedComponentArgs: android.content.pm.PackageParser$ParseComponentArgs mActivityArgs>;

        $r13 = new android.content.pm.ActivityInfo;

        specialinvoke $r13.<android.content.pm.ActivityInfo: void <init>()>();

        specialinvoke $r12.<android.content.pm.PackageParser$Activity: void <init>(android.content.pm.PackageParser$ParseComponentArgs,android.content.pm.ActivityInfo)>($r14, $r13);

        $r15 = r3[0];

        if $r15 == null goto label04;

        virtualinvoke r6.<android.content.res.TypedArray: void recycle()>();

        return null;

     label04:
        z0 = virtualinvoke r6.<android.content.res.TypedArray: boolean hasValue(int)>(6);

        if z0 == 0 goto label05;

        $r108 = $r12.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $z37 = virtualinvoke r6.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(6, 0);

        $r108.<android.content.pm.ActivityInfo: boolean exported> = $z37;

     label05:
        $r16 = $r12.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $i0 = virtualinvoke r6.<android.content.res.TypedArray: int getResourceId(int,int)>(0, 0);

        $r16.<android.content.pm.ActivityInfo: int theme> = $i0;

        $r19 = $r12.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $r17 = $r12.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $r18 = $r17.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i1 = $r18.<android.content.pm.ApplicationInfo: int uiOptions>;

        $i2 = virtualinvoke r6.<android.content.res.TypedArray: int getInt(int,int)>(26, $i1);

        $r19.<android.content.pm.ActivityInfo: int uiOptions> = $i2;

        r116 = virtualinvoke r6.<android.content.res.TypedArray: java.lang.String getNonConfigurationString(int,int)>(27, 1024);

        if r116 == null goto label07;

        $r96 = $r12.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $r97 = $r96.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        r117 = staticinvoke <android.content.pm.PackageParser: java.lang.String buildClassName(java.lang.String,java.lang.CharSequence,java.lang.String[])>($r97, r116, r3);

        $r98 = r3[0];

        if $r98 != null goto label06;

        $r107 = $r12.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $r107.<android.content.pm.ActivityInfo: java.lang.String parentActivityName> = r117;

        goto label07;

     label06:
        $r99 = new java.lang.StringBuilder;

        specialinvoke $r99.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Activity ");

        $r101 = $r12.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $r102 = $r101.<android.content.pm.ActivityInfo: java.lang.String name>;

        virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r102);

        virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" specified invalid parentActivityName ");

        virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r116);

        $r106 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("PackageParser", $r106);

        r3[0] = null;

     label07:
        r119 = virtualinvoke r6.<android.content.res.TypedArray: java.lang.String getNonConfigurationString(int,int)>(4, 0);

        if r119 != null goto label08;

        $r95 = $r12.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $r93 = r111.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r94 = $r93.<android.content.pm.ApplicationInfo: java.lang.String permission>;

        $r95.<android.content.pm.ActivityInfo: java.lang.String permission> = $r94;

        goto label11;

     label08:
        r120 = $r12.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $i3 = virtualinvoke r119.<java.lang.String: int length()>();

        if $i3 <= 0 goto label09;

        $r92 = virtualinvoke r119.<java.lang.String: java.lang.String toString()>();

        r121 = virtualinvoke $r92.<java.lang.String: java.lang.String intern()>();

        goto label10;

     label09:
        r121 = null;

     label10:
        r120.<android.content.pm.ActivityInfo: java.lang.String permission> = r121;

     label11:
        r122 = virtualinvoke r6.<android.content.res.TypedArray: java.lang.String getNonConfigurationString(int,int)>(8, 1024);

        $r123 = $r12.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $r124 = r111.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r125 = $r124.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r126 = r111.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r127 = $r126.<android.content.pm.ApplicationInfo: java.lang.String taskAffinity>;

        $r128 = staticinvoke <android.content.pm.PackageParser: java.lang.String buildTaskAffinityName(java.lang.String,java.lang.String,java.lang.CharSequence,java.lang.String[])>($r125, $r127, r122, r3);

        $r123.<android.content.pm.ActivityInfo: java.lang.String taskAffinity> = $r128;

        $r129 = $r12.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $r130 = virtualinvoke r6.<android.content.res.TypedArray: java.lang.String getNonConfigurationString(int,int)>(48, 0);

        $r129.<android.content.pm.ActivityInfo: java.lang.String splitName> = $r130;

        $r131 = $r12.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $r131.<android.content.pm.ActivityInfo: int flags> = 0;

        $z40 = virtualinvoke r6.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(9, 0);

        if $z40 == 0 goto label12;

        r132 = $r12.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $i90 = r132.<android.content.pm.ActivityInfo: int flags>;

        $i91 = $i90 | 1;

        r132.<android.content.pm.ActivityInfo: int flags> = $i91;

     label12:
        $z1 = virtualinvoke r6.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(10, 0);

        if $z1 == 0 goto label13;

        r133 = $r12.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $i88 = r133.<android.content.pm.ActivityInfo: int flags>;

        $i89 = $i88 | 2;

        r133.<android.content.pm.ActivityInfo: int flags> = $i89;

     label13:
        $z2 = virtualinvoke r6.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(11, 0);

        if $z2 == 0 goto label14;

        r134 = $r12.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $i86 = r134.<android.content.pm.ActivityInfo: int flags>;

        $i87 = $i86 | 4;

        r134.<android.content.pm.ActivityInfo: int flags> = $i87;

     label14:
        $z3 = virtualinvoke r6.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(21, 0);

        if $z3 == 0 goto label15;

        r135 = $r12.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $i84 = r135.<android.content.pm.ActivityInfo: int flags>;

        $i85 = $i84 | 128;

        r135.<android.content.pm.ActivityInfo: int flags> = $i85;

     label15:
        $z4 = virtualinvoke r6.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(18, 0);

        if $z4 == 0 goto label16;

        r136 = $r12.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $i82 = r136.<android.content.pm.ActivityInfo: int flags>;

        $i83 = $i82 | 8;

        r136.<android.content.pm.ActivityInfo: int flags> = $i83;

     label16:
        $z5 = virtualinvoke r6.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(12, 0);

        if $z5 == 0 goto label17;

        r137 = $r12.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $i80 = r137.<android.content.pm.ActivityInfo: int flags>;

        $i81 = $i80 | 16;

        r137.<android.content.pm.ActivityInfo: int flags> = $i81;

     label17:
        $z6 = virtualinvoke r6.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(13, 0);

        if $z6 == 0 goto label18;

        r138 = $r12.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $i78 = r138.<android.content.pm.ActivityInfo: int flags>;

        $i79 = $i78 | 32;

        r138.<android.content.pm.ActivityInfo: int flags> = $i79;

     label18:
        $r20 = r111.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i4 = $r20.<android.content.pm.ApplicationInfo: int flags>;

        $i5 = $i4 & 32;

        if $i5 == 0 goto label19;

        z41 = 1;

        goto label20;

     label19:
        z41 = 0;

     label20:
        $z7 = virtualinvoke r6.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(19, z41);

        if $z7 == 0 goto label21;

        r139 = $r12.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $i76 = r139.<android.content.pm.ActivityInfo: int flags>;

        $i77 = $i76 | 64;

        r139.<android.content.pm.ActivityInfo: int flags> = $i77;

     label21:
        $z8 = virtualinvoke r6.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(22, 0);

        if $z8 == 0 goto label22;

        r140 = $r12.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $i74 = r140.<android.content.pm.ActivityInfo: int flags>;

        $i75 = $i74 | 256;

        r140.<android.content.pm.ActivityInfo: int flags> = $i75;

     label22:
        $z9 = virtualinvoke r6.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(29, 0);

        if $z9 != 0 goto label23;

        $z36 = virtualinvoke r6.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(39, 0);

        if $z36 == 0 goto label24;

     label23:
        r141 = $r12.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $i6 = r141.<android.content.pm.ActivityInfo: int flags>;

        $i7 = $i6 | 1024;

        r141.<android.content.pm.ActivityInfo: int flags> = $i7;

     label24:
        $z42 = virtualinvoke r6.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(24, 0);

        if $z42 == 0 goto label25;

        r142 = $r12.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $i72 = r142.<android.content.pm.ActivityInfo: int flags>;

        $i73 = $i72 | 2048;

        r142.<android.content.pm.ActivityInfo: int flags> = $i73;

     label25:
        $z10 = virtualinvoke r6.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(58, 0);

        if $z10 == 0 goto label26;

        r143 = $r12.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $i70 = r143.<android.content.pm.ActivityInfo: int flags>;

        $i71 = $i70 | 536870912;

        r143.<android.content.pm.ActivityInfo: int flags> = $i71;

     label26:
        if z38 != 0 goto label39;

        $z25 = virtualinvoke r6.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(25, z39);

        if $z25 == 0 goto label27;

        r144 = $r12.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $i68 = r144.<android.content.pm.ActivityInfo: int flags>;

        $i69 = $i68 | 512;

        r144.<android.content.pm.ActivityInfo: int flags> = $i69;

     label27:
        $r84 = $r12.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $i36 = virtualinvoke r6.<android.content.res.TypedArray: int getInt(int,int)>(14, 0);

        $r84.<android.content.pm.ActivityInfo: int launchMode> = $i36;

        $r85 = $r12.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $i37 = virtualinvoke r6.<android.content.res.TypedArray: int getInt(int,int)>(33, 0);

        $r85.<android.content.pm.ActivityInfo: int documentLaunchMode> = $i37;

        $r86 = $r12.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $i38 = staticinvoke <android.app.ActivityTaskManager: int getDefaultAppRecentsLimitStatic()>();

        $i39 = virtualinvoke r6.<android.content.res.TypedArray: int getInt(int,int)>(34, $i38);

        $r86.<android.content.pm.ActivityInfo: int maxRecents> = $i39;

        $r87 = $r12.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $i40 = virtualinvoke r6.<android.content.res.TypedArray: int getInt(int,int)>(16, 0);

        $i41 = virtualinvoke r6.<android.content.res.TypedArray: int getInt(int,int)>(47, 0);

        $i42 = staticinvoke <android.content.pm.PackageParser: int getActivityConfigChanges(int,int)>($i40, $i41);

        $r87.<android.content.pm.ActivityInfo: int configChanges> = $i42;

        $r88 = $r12.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $i43 = virtualinvoke r6.<android.content.res.TypedArray: int getInt(int,int)>(20, 0);

        $r88.<android.content.pm.ActivityInfo: int softInputMode> = $i43;

        $r89 = $r12.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $i44 = virtualinvoke r6.<android.content.res.TypedArray: int getInteger(int,int)>(32, 0);

        $r89.<android.content.pm.ActivityInfo: int persistableMode> = $i44;

        $z26 = virtualinvoke r6.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(31, 0);

        if $z26 == 0 goto label28;

        r145 = $r12.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $i66 = r145.<android.content.pm.ActivityInfo: int flags>;

        $i67 = $i66 | -2147483648;

        r145.<android.content.pm.ActivityInfo: int flags> = $i67;

     label28:
        $z27 = virtualinvoke r6.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(35, 0);

        if $z27 == 0 goto label29;

        r146 = $r12.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $i64 = r146.<android.content.pm.ActivityInfo: int flags>;

        $i65 = $i64 | 8192;

        r146.<android.content.pm.ActivityInfo: int flags> = $i65;

     label29:
        $z28 = virtualinvoke r6.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(36, 0);

        if $z28 == 0 goto label30;

        r147 = $r12.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $i62 = r147.<android.content.pm.ActivityInfo: int flags>;

        $i63 = $i62 | 4096;

        r147.<android.content.pm.ActivityInfo: int flags> = $i63;

     label30:
        $z29 = virtualinvoke r6.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(37, 0);

        if $z29 == 0 goto label31;

        r148 = $r12.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $i60 = r148.<android.content.pm.ActivityInfo: int flags>;

        $i61 = $i60 | 16384;

        r148.<android.content.pm.ActivityInfo: int flags> = $i61;

     label31:
        $r90 = $r12.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $i45 = virtualinvoke r6.<android.content.res.TypedArray: int getInt(int,int)>(15, -1);

        $r90.<android.content.pm.ActivityInfo: int screenOrientation> = $i45;

        $r91 = $r12.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        specialinvoke r0.<android.content.pm.PackageParser: void setActivityResizeMode(android.content.pm.ActivityInfo,android.content.res.TypedArray,android.content.pm.PackageParser$Package)>($r91, r6, r111);

        $z30 = virtualinvoke r6.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(41, 0);

        if $z30 == 0 goto label32;

        r149 = $r12.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $i58 = r149.<android.content.pm.ActivityInfo: int flags>;

        $i59 = $i58 | 4194304;

        r149.<android.content.pm.ActivityInfo: int flags> = $i59;

     label32:
        $z31 = virtualinvoke r6.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(57, 0);

        if $z31 == 0 goto label33;

        r150 = $r12.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $i56 = r150.<android.content.pm.ActivityInfo: int flags>;

        $i57 = $i56 | 262144;

        r150.<android.content.pm.ActivityInfo: int flags> = $i57;

     label33:
        $z32 = virtualinvoke r6.<android.content.res.TypedArray: boolean hasValue(int)>(50);

        if $z32 == 0 goto label34;

        $i55 = virtualinvoke r6.<android.content.res.TypedArray: int getType(int)>(50);

        if $i55 != 4 goto label34;

        $f1 = virtualinvoke r6.<android.content.res.TypedArray: float getFloat(int,float)>(50, 0.0F);

        staticinvoke <android.content.pm.PackageParser$Activity: void access$200(android.content.pm.PackageParser$Activity,float)>($r12, $f1);

     label34:
        $z43 = virtualinvoke r6.<android.content.res.TypedArray: boolean hasValue(int)>(53);

        if $z43 == 0 goto label35;

        $i54 = virtualinvoke r6.<android.content.res.TypedArray: int getType(int)>(53);

        if $i54 != 4 goto label35;

        $f0 = virtualinvoke r6.<android.content.res.TypedArray: float getFloat(int,float)>(53, 0.0F);

        staticinvoke <android.content.pm.PackageParser$Activity: void access$300(android.content.pm.PackageParser$Activity,float)>($r12, $f0);

     label35:
        $r151 = $r12.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $i94 = virtualinvoke r6.<android.content.res.TypedArray: int getInt(int,int)>(38, 0);

        $r151.<android.content.pm.ActivityInfo: int lockTaskLaunchMode> = $i94;

        $r152 = $r12.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $z44 = virtualinvoke r6.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(42, 0);

        $r152.<android.content.pm.ActivityInfo: boolean directBootAware> = $z44;

        $r153 = $r12.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $r154 = virtualinvoke r6.<android.content.res.TypedArray: java.lang.String getString(int)>(43);

        $r153.<android.content.pm.ActivityInfo: java.lang.String requestedVrComponent> = $r154;

        $r155 = $r12.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $i95 = virtualinvoke r6.<android.content.res.TypedArray: int getInt(int,int)>(46, -1);

        $r155.<android.content.pm.ActivityInfo: int rotationAnimation> = $i95;

        $r156 = $r12.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $i96 = virtualinvoke r6.<android.content.res.TypedArray: int getInt(int,int)>(49, 0);

        $r156.<android.content.pm.ActivityInfo: int colorMode> = $i96;

        $z45 = virtualinvoke r6.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(56, 0);

        if $z45 == 0 goto label36;

        r157 = $r12.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $i52 = r157.<android.content.pm.ActivityInfo: int flags>;

        $i53 = $i52 | 33554432;

        r157.<android.content.pm.ActivityInfo: int flags> = $i53;

     label36:
        $z33 = virtualinvoke r6.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(51, 0);

        if $z33 == 0 goto label37;

        r158 = $r12.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $i50 = r158.<android.content.pm.ActivityInfo: int flags>;

        $i51 = $i50 | 8388608;

        r158.<android.content.pm.ActivityInfo: int flags> = $i51;

     label37:
        $z34 = virtualinvoke r6.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(52, 0);

        if $z34 == 0 goto label38;

        r159 = $r12.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $i48 = r159.<android.content.pm.ActivityInfo: int flags>;

        $i49 = $i48 | 16777216;

        r159.<android.content.pm.ActivityInfo: int flags> = $i49;

     label38:
        $z35 = virtualinvoke r6.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(54, 0);

        if $z35 == 0 goto label41;

        r160 = $r12.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $i46 = r160.<android.content.pm.ActivityInfo: int privateFlags>;

        $i47 = $i46 | 1;

        r160.<android.content.pm.ActivityInfo: int privateFlags> = $i47;

        goto label41;

     label39:
        $r21 = $r12.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $r21.<android.content.pm.ActivityInfo: int launchMode> = 0;

        $r22 = $r12.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $r22.<android.content.pm.ActivityInfo: int configChanges> = 0;

        $z11 = virtualinvoke r6.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(28, 0);

        if $z11 == 0 goto label40;

        r161 = $r12.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $i34 = r161.<android.content.pm.ActivityInfo: int flags>;

        $i35 = $i34 | 1073741824;

        r161.<android.content.pm.ActivityInfo: int flags> = $i35;

     label40:
        $r23 = $r12.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $z12 = virtualinvoke r6.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(42, 0);

        $r23.<android.content.pm.ActivityInfo: boolean directBootAware> = $z12;

     label41:
        $r162 = $r12.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $z46 = $r162.<android.content.pm.ActivityInfo: boolean directBootAware>;

        if $z46 == 0 goto label42;

        r163 = r111.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i32 = r163.<android.content.pm.ApplicationInfo: int privateFlags>;

        $i33 = $i32 | 256;

        r163.<android.content.pm.ApplicationInfo: int privateFlags> = $i33;

     label42:
        z47 = virtualinvoke r6.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(45, 0);

        if z47 == 0 goto label43;

        r164 = $r12.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $i30 = r164.<android.content.pm.ActivityInfo: int flags>;

        $i31 = $i30 | 1048576;

        r164.<android.content.pm.ActivityInfo: int flags> = $i31;

        r111.<android.content.pm.PackageParser$Package: boolean visibleToInstantApps> = 1;

     label43:
        virtualinvoke r6.<android.content.res.TypedArray: void recycle()>();

        if z38 == 0 goto label45;

        $r80 = r111.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i28 = $r80.<android.content.pm.ApplicationInfo: int privateFlags>;

        $i29 = $i28 & 2;

        if $i29 == 0 goto label45;

        $r81 = $r12.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $r83 = $r81.<android.content.pm.ActivityInfo: java.lang.String processName>;

        $r82 = r111.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        if $r83 != $r82 goto label44;

        r3[0] = "Heavy-weight applications can not have receivers in main process";

        goto label45;

     label44:
        goto label45;

     label45:
        $r165 = r3[0];

        if $r165 == null goto label46;

        return null;

     label46:
        i97 = interfaceinvoke r2.<android.content.res.XmlResourceParser: int getDepth()>();

     label47:
        i98 = interfaceinvoke r2.<android.content.res.XmlResourceParser: int next()>();

        if i98 == 1 goto label76;

        if i98 != 3 goto label49;

        $i27 = interfaceinvoke r2.<android.content.res.XmlResourceParser: int getDepth()>();

        if $i27 <= i97 goto label48;

        goto label49;

     label48:
        goto label76;

     label49:
        if i98 == 3 goto label75;

        if i98 != 4 goto label50;

        goto label47;

     label50:
        $r25 = interfaceinvoke r2.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        $z13 = virtualinvoke $r25.<java.lang.String: boolean equals(java.lang.Object)>("intent-filter");

        if $z13 == 0 goto label59;

        $r70 = new android.content.pm.PackageParser$ActivityIntentInfo;

        specialinvoke $r70.<android.content.pm.PackageParser$ActivityIntentInfo: void <init>(android.content.pm.PackageParser$Activity)>($r12);

        $z21 = specialinvoke r0.<android.content.pm.PackageParser: boolean parseIntent(android.content.res.Resources,android.content.res.XmlResourceParser,boolean,boolean,android.content.pm.PackageParser$IntentInfo,java.lang.String[])>(r1, r2, 1, 1, $r70, r3);

        if $z21 != 0 goto label51;

        return null;

     label51:
        $i18 = virtualinvoke $r70.<android.content.pm.PackageParser$ActivityIntentInfo: int countActions()>();

        if $i18 != 0 goto label52;

        $r72 = new java.lang.StringBuilder;

        specialinvoke $r72.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No actions in intent filter at ");

        $r74 = r0.<android.content.pm.PackageParser: java.lang.String mArchiveSourcePath>;

        virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r74);

        virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r77 = interfaceinvoke r2.<android.content.res.XmlResourceParser: java.lang.String getPositionDescription()>();

        virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r77);

        $r79 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageParser", $r79);

        goto label53;

     label52:
        $i19 = virtualinvoke $r70.<android.content.pm.PackageParser$ActivityIntentInfo: int getOrder()>();

        $i20 = $r12.<android.content.pm.PackageParser$Activity: int order>;

        $i21 = staticinvoke <java.lang.Math: int max(int,int)>($i19, $i20);

        $r12.<android.content.pm.PackageParser$Activity: int order> = $i21;

        $r71 = $r12.<android.content.pm.PackageParser$Activity: java.util.ArrayList intents>;

        virtualinvoke $r71.<java.util.ArrayList: boolean add(java.lang.Object)>($r70);

     label53:
        if z47 == 0 goto label54;

        b99 = 1;

        goto label56;

     label54:
        if z38 != 0 goto label55;

        $z24 = specialinvoke r0.<android.content.pm.PackageParser: boolean isImplicitlyExposedIntent(android.content.pm.PackageParser$IntentInfo)>($r70);

        if $z24 == 0 goto label55;

        b99 = 2;

        goto label56;

     label55:
        b99 = 0;

     label56:
        virtualinvoke $r70.<android.content.pm.PackageParser$ActivityIntentInfo: void setVisibilityToInstantApp(int)>(b99);

        $z48 = virtualinvoke $r70.<android.content.pm.PackageParser$ActivityIntentInfo: boolean isVisibleToInstantApp()>();

        if $z48 == 0 goto label57;

        r170 = $r12.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $i24 = r170.<android.content.pm.ActivityInfo: int flags>;

        $i25 = $i24 | 1048576;

        r170.<android.content.pm.ActivityInfo: int flags> = $i25;

     label57:
        $z23 = virtualinvoke $r70.<android.content.pm.PackageParser$ActivityIntentInfo: boolean isImplicitlyVisibleToInstantApp()>();

        if $z23 == 0 goto label58;

        r171 = $r12.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $i22 = r171.<android.content.pm.ActivityInfo: int flags>;

        $i23 = $i22 | 2097152;

        r171.<android.content.pm.ActivityInfo: int flags> = $i23;

     label58:
        goto label47;

     label59:
        if z38 != 0 goto label69;

        $r57 = interfaceinvoke r2.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        $z16 = virtualinvoke $r57.<java.lang.String: boolean equals(java.lang.Object)>("preferred");

        if $z16 == 0 goto label69;

        $r58 = new android.content.pm.PackageParser$ActivityIntentInfo;

        specialinvoke $r58.<android.content.pm.PackageParser$ActivityIntentInfo: void <init>(android.content.pm.PackageParser$Activity)>($r12);

        $z17 = specialinvoke r0.<android.content.pm.PackageParser: boolean parseIntent(android.content.res.Resources,android.content.res.XmlResourceParser,boolean,boolean,android.content.pm.PackageParser$IntentInfo,java.lang.String[])>(r1, r2, 0, 0, $r58, r3);

        if $z17 != 0 goto label60;

        return null;

     label60:
        $i12 = virtualinvoke $r58.<android.content.pm.PackageParser$ActivityIntentInfo: int countActions()>();

        if $i12 != 0 goto label61;

        $r62 = new java.lang.StringBuilder;

        specialinvoke $r62.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No actions in preferred at ");

        $r64 = r0.<android.content.pm.PackageParser: java.lang.String mArchiveSourcePath>;

        virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r64);

        virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r67 = interfaceinvoke r2.<android.content.res.XmlResourceParser: java.lang.String getPositionDescription()>();

        virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r67);

        $r69 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageParser", $r69);

        goto label63;

     label61:
        $r59 = r111.<android.content.pm.PackageParser$Package: java.util.ArrayList preferredActivityFilters>;

        if $r59 != null goto label62;

        $r61 = new java.util.ArrayList;

        specialinvoke $r61.<java.util.ArrayList: void <init>()>();

        r111.<android.content.pm.PackageParser$Package: java.util.ArrayList preferredActivityFilters> = $r61;

     label62:
        $r60 = r111.<android.content.pm.PackageParser$Package: java.util.ArrayList preferredActivityFilters>;

        virtualinvoke $r60.<java.util.ArrayList: boolean add(java.lang.Object)>($r58);

     label63:
        if z47 == 0 goto label64;

        b100 = 1;

        goto label66;

     label64:
        if z38 != 0 goto label65;

        $z20 = specialinvoke r0.<android.content.pm.PackageParser: boolean isImplicitlyExposedIntent(android.content.pm.PackageParser$IntentInfo)>($r58);

        if $z20 == 0 goto label65;

        b100 = 2;

        goto label66;

     label65:
        b100 = 0;

     label66:
        virtualinvoke $r58.<android.content.pm.PackageParser$ActivityIntentInfo: void setVisibilityToInstantApp(int)>(b100);

        $z49 = virtualinvoke $r58.<android.content.pm.PackageParser$ActivityIntentInfo: boolean isVisibleToInstantApp()>();

        if $z49 == 0 goto label67;

        r175 = $r12.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $i15 = r175.<android.content.pm.ActivityInfo: int flags>;

        $i16 = $i15 | 1048576;

        r175.<android.content.pm.ActivityInfo: int flags> = $i16;

        goto label67;

     label67:
        $z19 = virtualinvoke $r58.<android.content.pm.PackageParser$ActivityIntentInfo: boolean isImplicitlyVisibleToInstantApp()>();

        if $z19 == 0 goto label68;

        r176 = $r12.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $i13 = r176.<android.content.pm.ActivityInfo: int flags>;

        $i14 = $i13 | 2097152;

        r176.<android.content.pm.ActivityInfo: int flags> = $i14;

     label68:
        goto label47;

     label69:
        $r26 = interfaceinvoke r2.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        $z14 = virtualinvoke $r26.<java.lang.String: boolean equals(java.lang.Object)>("meta-data");

        if $z14 == 0 goto label71;

        $r56 = $r12.<android.content.pm.PackageParser$Activity: android.os.Bundle metaData>;

        r178 = specialinvoke r0.<android.content.pm.PackageParser: android.os.Bundle parseMetaData(android.content.res.Resources,android.content.res.XmlResourceParser,android.os.Bundle,java.lang.String[])>(r1, r2, $r56, r3);

        $r12.<android.content.pm.PackageParser$Activity: android.os.Bundle metaData> = r178;

        if r178 != null goto label70;

        return null;

     label70:
        goto label47;

     label71:
        if z38 != 0 goto label72;

        $r55 = interfaceinvoke r2.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        $z15 = virtualinvoke $r55.<java.lang.String: boolean equals(java.lang.Object)>("layout");

        if $z15 == 0 goto label72;

        specialinvoke r0.<android.content.pm.PackageParser: void parseLayout(android.content.res.Resources,android.util.AttributeSet,android.content.pm.PackageParser$Activity)>(r1, r2, $r12);

        goto label47;

     label72:
        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Problem in package ");

        $r29 = r0.<android.content.pm.PackageParser: java.lang.String mArchiveSourcePath>;

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r32 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageParser", $r32);

        if z38 == 0 goto label73;

        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element under <receiver>: ");

        $r46 = interfaceinvoke r2.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r46);

        virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

        $r49 = r0.<android.content.pm.PackageParser: java.lang.String mArchiveSourcePath>;

        virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r49);

        virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r52 = interfaceinvoke r2.<android.content.res.XmlResourceParser: java.lang.String getPositionDescription()>();

        virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52);

        $r54 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageParser", $r54);

        goto label74;

     label73:
        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element under <activity>: ");

        $r35 = interfaceinvoke r2.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

        $r38 = r0.<android.content.pm.PackageParser: java.lang.String mArchiveSourcePath>;

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r41 = interfaceinvoke r2.<android.content.res.XmlResourceParser: java.lang.String getPositionDescription()>();

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41);

        $r43 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageParser", $r43);

     label74:
        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r2);

        goto label47;

     label75:
        goto label47;

     label76:
        specialinvoke r0.<android.content.pm.PackageParser: void resolveWindowLayout(android.content.pm.PackageParser$Activity)>($r12);

        if z0 != 0 goto label79;

        r185 = $r12.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $r24 = $r12.<android.content.pm.PackageParser$Activity: java.util.ArrayList intents>;

        $i8 = virtualinvoke $r24.<java.util.ArrayList: int size()>();

        if $i8 <= 0 goto label77;

        z50 = 1;

        goto label78;

     label77:
        z50 = 0;

     label78:
        r185.<android.content.pm.ActivityInfo: boolean exported> = z50;

     label79:
        return $r12;
    }

    private android.content.pm.PackageParser$Activity parseActivityAlias(android.content.pm.PackageParser$Package, android.content.res.Resources, android.content.res.XmlResourceParser, int, java.lang.String[], android.content.pm.PackageParser$CachedComponentArgs) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.pm.PackageParser r0;
        android.content.res.Resources r1;
        android.content.res.XmlResourceParser r2;
        java.lang.String[] r3, $r81;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, z10, z11, $z12;
        int[] $r5;
        android.content.pm.ApplicationInfo $r6;
        java.lang.String $r7, $r25, $r28, $r33, $r42, $r46, $r47, $r49, $r50, $r52, $r53, $r54, $r55, $r60, $r61, $r62, $r64, $r65, $r68, $r69, $r71, $r75, $r79, r86, r87, r92, r94, r95, r96;
        android.content.pm.PackageParser$ParseComponentArgs $r8, $r9, $r10, $r45, $r80, $r82;
        java.util.ArrayList $r11, $r48, $r58, $r76;
        android.content.pm.ActivityInfo $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r22, $r23, $r24, $r26, $r27, $r29, $r30, $r31, $r32, $r34, $r35, $r37, $r38, $r39, $r40, $r41, $r43, $r63, $r67, $r70, $r72, $r73, $r78, r93, $r98, r101, r102, r105;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, i28, i29, i30, $i31, $i32, i33, i34;
        java.lang.CharSequence $r21;
        android.content.pm.ActivityInfo$WindowLayout $r36;
        float $f0, $f1;
        android.content.pm.PackageParser$Activity $r44, r88;
        java.lang.StringBuilder $r51, $r59, $r66, $r74;
        android.os.Bundle $r56, r103;
        android.content.pm.PackageParser$ActivityIntentInfo $r57;
        java.lang.Object $r77;
        android.content.pm.PackageParser$Package r83;
        android.content.pm.PackageParser$CachedComponentArgs r84;
        android.content.res.TypedArray r85;
        byte b35;

        r0 := @this: android.content.pm.PackageParser;

        r83 := @parameter0: android.content.pm.PackageParser$Package;

        r1 := @parameter1: android.content.res.Resources;

        r2 := @parameter2: android.content.res.XmlResourceParser;

        i28 := @parameter3: int;

        r3 := @parameter4: java.lang.String[];

        r84 := @parameter5: android.content.pm.PackageParser$CachedComponentArgs;

        $r5 = <com.android.internal.R$styleable: int[] AndroidManifestActivityAlias>;

        r85 = virtualinvoke r1.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r2, $r5);

        r86 = virtualinvoke r85.<android.content.res.TypedArray: java.lang.String getNonConfigurationString(int,int)>(7, 1024);

        if r86 != null goto label01;

        r3[0] = "<activity-alias> does not specify android:targetActivity";

        virtualinvoke r85.<android.content.res.TypedArray: void recycle()>();

        return null;

     label01:
        $r6 = r83.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r7 = $r6.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        r87 = staticinvoke <android.content.pm.PackageParser: java.lang.String buildClassName(java.lang.String,java.lang.CharSequence,java.lang.String[])>($r7, r86, r3);

        if r87 != null goto label02;

        virtualinvoke r85.<android.content.res.TypedArray: void recycle()>();

        return null;

     label02:
        $r8 = r84.<android.content.pm.PackageParser$CachedComponentArgs: android.content.pm.PackageParser$ParseComponentArgs mActivityAliasArgs>;

        if $r8 != null goto label03;

        $r80 = new android.content.pm.PackageParser$ParseComponentArgs;

        $r81 = r0.<android.content.pm.PackageParser: java.lang.String[] mSeparateProcesses>;

        specialinvoke $r80.<android.content.pm.PackageParser$ParseComponentArgs: void <init>(android.content.pm.PackageParser$Package,java.lang.String[],int,int,int,int,int,int,java.lang.String[],int,int,int)>(r83, r3, 2, 0, 1, 11, 8, 10, $r81, 0, 6, 4);

        r84.<android.content.pm.PackageParser$CachedComponentArgs: android.content.pm.PackageParser$ParseComponentArgs mActivityAliasArgs> = $r80;

        $r82 = r84.<android.content.pm.PackageParser$CachedComponentArgs: android.content.pm.PackageParser$ParseComponentArgs mActivityAliasArgs>;

        $r82.<android.content.pm.PackageParser$ParseComponentArgs: java.lang.String tag> = "<activity-alias>";

        goto label03;

     label03:
        $r9 = r84.<android.content.pm.PackageParser$CachedComponentArgs: android.content.pm.PackageParser$ParseComponentArgs mActivityAliasArgs>;

        $r9.<android.content.pm.PackageParser$ParseComponentArgs: android.content.res.TypedArray sa> = r85;

        $r10 = r84.<android.content.pm.PackageParser$CachedComponentArgs: android.content.pm.PackageParser$ParseComponentArgs mActivityAliasArgs>;

        $r10.<android.content.pm.PackageParser$ParseComponentArgs: int flags> = i28;

        $r11 = r83.<android.content.pm.PackageParser$Package: java.util.ArrayList activities>;

        i29 = virtualinvoke $r11.<java.util.ArrayList: int size()>();

        i30 = 0;

     label04:
        r88 = null;

        if i30 >= i29 goto label06;

        $r76 = r83.<android.content.pm.PackageParser$Package: java.util.ArrayList activities>;

        $r77 = virtualinvoke $r76.<java.util.ArrayList: java.lang.Object get(int)>(i30);

        r88 = (android.content.pm.PackageParser$Activity) $r77;

        $r78 = r88.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $r79 = $r78.<android.content.pm.ActivityInfo: java.lang.String name>;

        $z9 = virtualinvoke r87.<java.lang.String: boolean equals(java.lang.Object)>($r79);

        if $z9 == 0 goto label05;

        goto label06;

     label05:
        i30 = i30 + 1;

        goto label04;

     label06:
        if r88 != null goto label07;

        $r74 = new java.lang.StringBuilder;

        specialinvoke $r74.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<activity-alias> target activity ");

        virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r87);

        virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not found in manifest");

        $r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.String toString()>();

        r3[0] = $r75;

        virtualinvoke r85.<android.content.res.TypedArray: void recycle()>();

        return null;

     label07:
        $r12 = new android.content.pm.ActivityInfo;

        specialinvoke $r12.<android.content.pm.ActivityInfo: void <init>()>();

        $r12.<android.content.pm.ActivityInfo: java.lang.String targetActivity> = r87;

        $r13 = r88.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $i0 = $r13.<android.content.pm.ActivityInfo: int configChanges>;

        $r12.<android.content.pm.ActivityInfo: int configChanges> = $i0;

        $r14 = r88.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $i1 = $r14.<android.content.pm.ActivityInfo: int flags>;

        $r12.<android.content.pm.ActivityInfo: int flags> = $i1;

        $r15 = r88.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $i2 = $r15.<android.content.pm.ActivityInfo: int privateFlags>;

        $r12.<android.content.pm.ActivityInfo: int privateFlags> = $i2;

        $r16 = r88.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $i3 = $r16.<android.content.pm.ActivityInfo: int icon>;

        $r12.<android.content.pm.ActivityInfo: int icon> = $i3;

        $r17 = r88.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $i4 = $r17.<android.content.pm.ActivityInfo: int logo>;

        $r12.<android.content.pm.ActivityInfo: int logo> = $i4;

        $r18 = r88.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $i5 = $r18.<android.content.pm.ActivityInfo: int banner>;

        $r12.<android.content.pm.ActivityInfo: int banner> = $i5;

        $r19 = r88.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $i6 = $r19.<android.content.pm.ActivityInfo: int labelRes>;

        $r12.<android.content.pm.ActivityInfo: int labelRes> = $i6;

        $r20 = r88.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $r21 = $r20.<android.content.pm.ActivityInfo: java.lang.CharSequence nonLocalizedLabel>;

        $r12.<android.content.pm.ActivityInfo: java.lang.CharSequence nonLocalizedLabel> = $r21;

        $r22 = r88.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $i7 = $r22.<android.content.pm.ActivityInfo: int launchMode>;

        $r12.<android.content.pm.ActivityInfo: int launchMode> = $i7;

        $r23 = r88.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $i8 = $r23.<android.content.pm.ActivityInfo: int lockTaskLaunchMode>;

        $r12.<android.content.pm.ActivityInfo: int lockTaskLaunchMode> = $i8;

        $r24 = r88.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $r25 = $r24.<android.content.pm.ActivityInfo: java.lang.String processName>;

        $r12.<android.content.pm.ActivityInfo: java.lang.String processName> = $r25;

        $i9 = $r12.<android.content.pm.ActivityInfo: int descriptionRes>;

        if $i9 != 0 goto label08;

        $r73 = r88.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $i27 = $r73.<android.content.pm.ActivityInfo: int descriptionRes>;

        $r12.<android.content.pm.ActivityInfo: int descriptionRes> = $i27;

     label08:
        $r26 = r88.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $i10 = $r26.<android.content.pm.ActivityInfo: int screenOrientation>;

        $r12.<android.content.pm.ActivityInfo: int screenOrientation> = $i10;

        $r27 = r88.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $r28 = $r27.<android.content.pm.ActivityInfo: java.lang.String taskAffinity>;

        $r12.<android.content.pm.ActivityInfo: java.lang.String taskAffinity> = $r28;

        $r29 = r88.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $i11 = $r29.<android.content.pm.ActivityInfo: int theme>;

        $r12.<android.content.pm.ActivityInfo: int theme> = $i11;

        $r30 = r88.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $i12 = $r30.<android.content.pm.ActivityInfo: int softInputMode>;

        $r12.<android.content.pm.ActivityInfo: int softInputMode> = $i12;

        $r31 = r88.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $i13 = $r31.<android.content.pm.ActivityInfo: int uiOptions>;

        $r12.<android.content.pm.ActivityInfo: int uiOptions> = $i13;

        $r32 = r88.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $r33 = $r32.<android.content.pm.ActivityInfo: java.lang.String parentActivityName>;

        $r12.<android.content.pm.ActivityInfo: java.lang.String parentActivityName> = $r33;

        $r34 = r88.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $i14 = $r34.<android.content.pm.ActivityInfo: int maxRecents>;

        $r12.<android.content.pm.ActivityInfo: int maxRecents> = $i14;

        $r35 = r88.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $r36 = $r35.<android.content.pm.ActivityInfo: android.content.pm.ActivityInfo$WindowLayout windowLayout>;

        $r12.<android.content.pm.ActivityInfo: android.content.pm.ActivityInfo$WindowLayout windowLayout> = $r36;

        $r37 = r88.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $i15 = $r37.<android.content.pm.ActivityInfo: int resizeMode>;

        $r12.<android.content.pm.ActivityInfo: int resizeMode> = $i15;

        $r38 = r88.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $f0 = $r38.<android.content.pm.ActivityInfo: float maxAspectRatio>;

        $r12.<android.content.pm.ActivityInfo: float maxAspectRatio> = $f0;

        $r39 = r88.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $f1 = $r39.<android.content.pm.ActivityInfo: float minAspectRatio>;

        $r12.<android.content.pm.ActivityInfo: float minAspectRatio> = $f1;

        $r40 = r88.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $z1 = $r40.<android.content.pm.ActivityInfo: boolean supportsSizeChanges>;

        $r12.<android.content.pm.ActivityInfo: boolean supportsSizeChanges> = $z1;

        $r41 = r88.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $r42 = $r41.<android.content.pm.ActivityInfo: java.lang.String requestedVrComponent>;

        $r12.<android.content.pm.ActivityInfo: java.lang.String requestedVrComponent> = $r42;

        $r43 = r88.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $z2 = $r43.<android.content.pm.ActivityInfo: boolean directBootAware>;

        $r12.<android.content.pm.ActivityInfo: boolean directBootAware> = $z2;

        $r44 = new android.content.pm.PackageParser$Activity;

        $r45 = r84.<android.content.pm.PackageParser$CachedComponentArgs: android.content.pm.PackageParser$ParseComponentArgs mActivityAliasArgs>;

        specialinvoke $r44.<android.content.pm.PackageParser$Activity: void <init>(android.content.pm.PackageParser$ParseComponentArgs,android.content.pm.ActivityInfo)>($r45, $r12);

        $r46 = r3[0];

        if $r46 == null goto label09;

        virtualinvoke r85.<android.content.res.TypedArray: void recycle()>();

        return null;

     label09:
        z0 = virtualinvoke r85.<android.content.res.TypedArray: boolean hasValue(int)>(5);

        if z0 == 0 goto label10;

        $r72 = $r44.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $z8 = virtualinvoke r85.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(5, 0);

        $r72.<android.content.pm.ActivityInfo: boolean exported> = $z8;

     label10:
        r92 = virtualinvoke r85.<android.content.res.TypedArray: java.lang.String getNonConfigurationString(int,int)>(3, 0);

        if r92 == null goto label13;

        r93 = $r44.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $i26 = virtualinvoke r92.<java.lang.String: int length()>();

        if $i26 <= 0 goto label11;

        $r71 = virtualinvoke r92.<java.lang.String: java.lang.String toString()>();

        r94 = virtualinvoke $r71.<java.lang.String: java.lang.String intern()>();

        goto label12;

     label11:
        r94 = null;

     label12:
        r93.<android.content.pm.ActivityInfo: java.lang.String permission> = r94;

     label13:
        r95 = virtualinvoke r85.<android.content.res.TypedArray: java.lang.String getNonConfigurationString(int,int)>(9, 1024);

        if r95 == null goto label15;

        $r63 = $r44.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $r64 = $r63.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        r96 = staticinvoke <android.content.pm.PackageParser: java.lang.String buildClassName(java.lang.String,java.lang.CharSequence,java.lang.String[])>($r64, r95, r3);

        $r65 = r3[0];

        if $r65 != null goto label14;

        $r70 = $r44.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $r70.<android.content.pm.ActivityInfo: java.lang.String parentActivityName> = r96;

        goto label15;

     label14:
        $r66 = new java.lang.StringBuilder;

        specialinvoke $r66.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Activity alias ");

        $r67 = $r44.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $r68 = $r67.<android.content.pm.ActivityInfo: java.lang.String name>;

        virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r68);

        virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" specified invalid parentActivityName ");

        virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r95);

        $r69 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("PackageParser", $r69);

        r3[0] = null;

        goto label15;

     label15:
        $r98 = $r44.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $i31 = $r98.<android.content.pm.ActivityInfo: int flags>;

        $i32 = $i31 & 1048576;

        if $i32 == 0 goto label16;

        z10 = 1;

        goto label17;

     label16:
        z10 = 0;

     label17:
        virtualinvoke r85.<android.content.res.TypedArray: void recycle()>();

        $r47 = r3[0];

        if $r47 == null goto label18;

        return null;

     label18:
        i33 = interfaceinvoke r2.<android.content.res.XmlResourceParser: int getDepth()>();

     label19:
        i34 = interfaceinvoke r2.<android.content.res.XmlResourceParser: int next()>();

        if i34 == 1 goto label35;

        if i34 != 3 goto label21;

        $i25 = interfaceinvoke r2.<android.content.res.XmlResourceParser: int getDepth()>();

        if $i25 <= i33 goto label20;

        goto label21;

     label20:
        z11 = 1;

        goto label36;

     label21:
        if i34 == 3 goto label34;

        if i34 != 4 goto label22;

        goto label19;

     label22:
        $r49 = interfaceinvoke r2.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        $z3 = virtualinvoke $r49.<java.lang.String: boolean equals(java.lang.Object)>("intent-filter");

        if $z3 == 0 goto label31;

        $r57 = new android.content.pm.PackageParser$ActivityIntentInfo;

        specialinvoke $r57.<android.content.pm.PackageParser$ActivityIntentInfo: void <init>(android.content.pm.PackageParser$Activity)>($r44);

        $z5 = specialinvoke r0.<android.content.pm.PackageParser: boolean parseIntent(android.content.res.Resources,android.content.res.XmlResourceParser,boolean,boolean,android.content.pm.PackageParser$IntentInfo,java.lang.String[])>(r1, r2, 1, 1, $r57, r3);

        if $z5 != 0 goto label23;

        return null;

     label23:
        $i17 = virtualinvoke $r57.<android.content.pm.PackageParser$ActivityIntentInfo: int countActions()>();

        if $i17 != 0 goto label24;

        $r59 = new java.lang.StringBuilder;

        specialinvoke $r59.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No actions in intent filter at ");

        $r60 = r0.<android.content.pm.PackageParser: java.lang.String mArchiveSourcePath>;

        virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r60);

        virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r61 = interfaceinvoke r2.<android.content.res.XmlResourceParser: java.lang.String getPositionDescription()>();

        virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r61);

        $r62 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageParser", $r62);

        goto label25;

     label24:
        $i18 = virtualinvoke $r57.<android.content.pm.PackageParser$ActivityIntentInfo: int getOrder()>();

        $i19 = $r44.<android.content.pm.PackageParser$Activity: int order>;

        $i20 = staticinvoke <java.lang.Math: int max(int,int)>($i18, $i19);

        $r44.<android.content.pm.PackageParser$Activity: int order> = $i20;

        $r58 = $r44.<android.content.pm.PackageParser$Activity: java.util.ArrayList intents>;

        virtualinvoke $r58.<java.util.ArrayList: boolean add(java.lang.Object)>($r57);

     label25:
        if z10 == 0 goto label26;

        b35 = 1;

        goto label28;

     label26:
        $z6 = specialinvoke r0.<android.content.pm.PackageParser: boolean isImplicitlyExposedIntent(android.content.pm.PackageParser$IntentInfo)>($r57);

        if $z6 == 0 goto label27;

        b35 = 2;

        goto label28;

     label27:
        b35 = 0;

     label28:
        virtualinvoke $r57.<android.content.pm.PackageParser$ActivityIntentInfo: void setVisibilityToInstantApp(int)>(b35);

        $z12 = virtualinvoke $r57.<android.content.pm.PackageParser$ActivityIntentInfo: boolean isVisibleToInstantApp()>();

        if $z12 == 0 goto label29;

        r101 = $r44.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $i23 = r101.<android.content.pm.ActivityInfo: int flags>;

        $i24 = $i23 | 1048576;

        r101.<android.content.pm.ActivityInfo: int flags> = $i24;

     label29:
        $z7 = virtualinvoke $r57.<android.content.pm.PackageParser$ActivityIntentInfo: boolean isImplicitlyVisibleToInstantApp()>();

        if $z7 == 0 goto label30;

        r102 = $r44.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $i21 = r102.<android.content.pm.ActivityInfo: int flags>;

        $i22 = $i21 | 2097152;

        r102.<android.content.pm.ActivityInfo: int flags> = $i22;

     label30:
        goto label19;

     label31:
        $r50 = interfaceinvoke r2.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        $z4 = virtualinvoke $r50.<java.lang.String: boolean equals(java.lang.Object)>("meta-data");

        if $z4 == 0 goto label33;

        $r56 = $r44.<android.content.pm.PackageParser$Activity: android.os.Bundle metaData>;

        r103 = specialinvoke r0.<android.content.pm.PackageParser: android.os.Bundle parseMetaData(android.content.res.Resources,android.content.res.XmlResourceParser,android.os.Bundle,java.lang.String[])>(r1, r2, $r56, r3);

        $r44.<android.content.pm.PackageParser$Activity: android.os.Bundle metaData> = r103;

        if r103 != null goto label32;

        return null;

     label32:
        goto label19;

     label33:
        $r51 = new java.lang.StringBuilder;

        specialinvoke $r51.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element under <activity-alias>: ");

        $r52 = interfaceinvoke r2.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52);

        virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

        $r53 = r0.<android.content.pm.PackageParser: java.lang.String mArchiveSourcePath>;

        virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r53);

        virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r54 = interfaceinvoke r2.<android.content.res.XmlResourceParser: java.lang.String getPositionDescription()>();

        virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r54);

        $r55 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageParser", $r55);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r2);

        goto label19;

     label34:
        goto label19;

     label35:
        z11 = 1;

     label36:
        if z0 != 0 goto label39;

        r105 = $r44.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $r48 = $r44.<android.content.pm.PackageParser$Activity: java.util.ArrayList intents>;

        $i16 = virtualinvoke $r48.<java.util.ArrayList: int size()>();

        if $i16 <= 0 goto label37;

        goto label38;

     label37:
        z11 = 0;

     label38:
        r105.<android.content.pm.ActivityInfo: boolean exported> = z11;

     label39:
        return $r44;
    }

    private java.lang.String[] parseAdditionalCertificates(android.content.res.Resources, android.content.res.XmlResourceParser, java.lang.String[]) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.pm.PackageParser r0;
        android.content.res.XmlResourceParser r1;
        java.lang.String[] r2, r15;
        int i0, i1, $i2;
        android.content.res.TypedArray r3;
        java.lang.String r4, $r5, $r7, $r8, $r13;
        boolean $z0, $z1;
        int[] $r6;
        java.lang.Object[] $r9;
        java.lang.StringBuilder $r10;
        android.content.res.Resources r14;

        r0 := @this: android.content.pm.PackageParser;

        r14 := @parameter0: android.content.res.Resources;

        r1 := @parameter1: android.content.res.XmlResourceParser;

        r2 := @parameter2: java.lang.String[];

        r15 = <libcore.util.EmptyArray: java.lang.String[] STRING>;

        i0 = interfaceinvoke r1.<android.content.res.XmlResourceParser: int getDepth()>();

     label1:
        i1 = interfaceinvoke r1.<android.content.res.XmlResourceParser: int next()>();

        if i1 == 1 goto label7;

        if i1 != 3 goto label2;

        $i2 = interfaceinvoke r1.<android.content.res.XmlResourceParser: int getDepth()>();

        if $i2 <= i0 goto label7;

     label2:
        if i1 == 3 goto label1;

        if i1 != 4 goto label3;

        goto label1;

     label3:
        $r5 = interfaceinvoke r1.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("additional-certificate");

        if $z0 == 0 goto label5;

        $r6 = <com.android.internal.R$styleable: int[] AndroidManifestAdditionalCertificate>;

        r3 = virtualinvoke r14.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r1, $r6);

        r4 = virtualinvoke r3.<android.content.res.TypedArray: java.lang.String getNonResourceString(int)>(0);

        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r4);

        if $z1 == 0 goto label4;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad additional-certificate declaration with empty certDigest:");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        r2[0] = $r13;

        r0.<android.content.pm.PackageParser: int mParseError> = -108;

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r1);

        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        return null;

     label4:
        $r7 = virtualinvoke r4.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(":", "");

        $r8 = virtualinvoke $r7.<java.lang.String: java.lang.String toLowerCase()>();

        $r9 = staticinvoke <com.android.internal.util.ArrayUtils: java.lang.Object[] appendElement(java.lang.Class,java.lang.Object[],java.lang.Object)>(class "Ljava/lang/String;", r15, $r8);

        r15 = (java.lang.String[]) $r9;

        goto label6;

     label5:
        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r1);

     label6:
        goto label1;

     label7:
        return r15;
    }

    private boolean parseAllMetaData(android.content.res.Resources, android.content.res.XmlResourceParser, java.lang.String, android.content.pm.PackageParser$Component, java.lang.String[]) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.pm.PackageParser r0;
        android.content.res.Resources r1;
        android.content.res.XmlResourceParser r2;
        java.lang.String r3, $r6, $r11, $r14, $r17, $r19;
        android.content.pm.PackageParser$Component r4;
        java.lang.String[] r5;
        int i0, i1, $i3;
        boolean $z0;
        java.lang.StringBuilder $r7;
        android.os.Bundle $r20, r21;

        r0 := @this: android.content.pm.PackageParser;

        r1 := @parameter0: android.content.res.Resources;

        r2 := @parameter1: android.content.res.XmlResourceParser;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.content.pm.PackageParser$Component;

        r5 := @parameter4: java.lang.String[];

        i0 = interfaceinvoke r2.<android.content.res.XmlResourceParser: int getDepth()>();

     label1:
        i1 = interfaceinvoke r2.<android.content.res.XmlResourceParser: int next()>();

        if i1 == 1 goto label5;

        if i1 != 3 goto label2;

        $i3 = interfaceinvoke r2.<android.content.res.XmlResourceParser: int getDepth()>();

        if $i3 <= i0 goto label5;

     label2:
        if i1 == 3 goto label1;

        if i1 != 4 goto label3;

        goto label1;

     label3:
        $r6 = interfaceinvoke r2.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("meta-data");

        if $z0 == 0 goto label4;

        $r20 = r4.<android.content.pm.PackageParser$Component: android.os.Bundle metaData>;

        r21 = specialinvoke r0.<android.content.pm.PackageParser: android.os.Bundle parseMetaData(android.content.res.Resources,android.content.res.XmlResourceParser,android.os.Bundle,java.lang.String[])>(r1, r2, $r20, r5);

        r4.<android.content.pm.PackageParser$Component: android.os.Bundle metaData> = r21;

        if r21 != null goto label1;

        return 0;

     label4:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element under ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r11 = interfaceinvoke r2.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

        $r14 = r0.<android.content.pm.PackageParser: java.lang.String mArchiveSourcePath>;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r17 = interfaceinvoke r2.<android.content.res.XmlResourceParser: java.lang.String getPositionDescription()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageParser", $r19);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r2);

        goto label1;

     label5:
        return 1;
    }

    public static android.content.pm.PackageParser$ApkLite parseApkLite(java.io.File, int) throws android.content.pm.PackageParser$PackageParserException
    {
        java.io.File r0;
        int i0;
        android.content.pm.PackageParser$ApkLite $r1;

        r0 := @parameter0: java.io.File;

        i0 := @parameter1: int;

        $r1 = staticinvoke <android.content.pm.PackageParser: android.content.pm.PackageParser$ApkLite parseApkLiteInner(java.io.File,java.io.FileDescriptor,java.lang.String,int)>(r0, null, null, i0);

        return $r1;
    }

    public static android.content.pm.PackageParser$ApkLite parseApkLite(java.io.FileDescriptor, java.lang.String, int) throws android.content.pm.PackageParser$PackageParserException
    {
        java.io.FileDescriptor r0;
        java.lang.String r1;
        int i0;
        android.content.pm.PackageParser$ApkLite $r2;

        r0 := @parameter0: java.io.FileDescriptor;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r2 = staticinvoke <android.content.pm.PackageParser: android.content.pm.PackageParser$ApkLite parseApkLiteInner(java.io.File,java.io.FileDescriptor,java.lang.String,int)>(null, r0, r1, i0);

        return $r2;
    }

    private static android.content.pm.PackageParser$ApkLite parseApkLite(java.lang.String, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.pm.PackageParser$SigningDetails) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException, android.content.pm.PackageParser$PackageParserException
    {
        java.lang.String r0, r5, $r10, $r11, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, r48, r49, r50, r51, r52, r53, r54, r55, r57, $r58, r59, r60, r61, r62, r63;
        android.util.AttributeSet r1;
        android.content.pm.PackageParser$SigningDetails r2;
        android.util.Pair r3;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, z30, z32, z33, z34, z35, z36, z37, z38, z39, z41, z42, z43, z44, z45, z46, z47, $z48, z49, z50;
        int $i1, $i2, $i4, $i5, $i6, $i8, $i9, $i10, i11, i12, i13, i14, i15, i16, i17, i18, i19, i20, i21, i22, i23, i24, i25, i26, i27, i28, i29;
        java.util.ArrayList $r6;
        android.content.pm.PackageParser$ApkLite $r7;
        java.lang.Object $r8, $r9;
        java.lang.StringBuilder $r12;
        android.content.pm.PackageParser$PackageParserException $r37;
        org.xmlpull.v1.XmlPullParser r47;
        android.content.pm.VerifierInfo r56;

        r0 := @parameter0: java.lang.String;

        r47 := @parameter1: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter2: android.util.AttributeSet;

        r2 := @parameter3: android.content.pm.PackageParser$SigningDetails;

        r3 = staticinvoke <android.content.pm.PackageParser: android.util.Pair parsePackageSplitNames(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>(r47, r1);

        i11 = -1;

        i12 = 0;

        i13 = 0;

        i14 = 1;

        i15 = 0;

        z30 = 0;

        z32 = 0;

        z33 = 0;

        z34 = 0;

        r48 = null;

        i16 = 0;

     label01:
        $i1 = interfaceinvoke r1.<android.util.AttributeSet: int getAttributeCount()>();

        if i16 >= $i1 goto label11;

        r49 = interfaceinvoke r1.<android.util.AttributeSet: java.lang.String getAttributeName(int)>(i16);

        $z21 = virtualinvoke r49.<java.lang.String: boolean equals(java.lang.Object)>("installLocation");

        if $z21 == 0 goto label02;

        i17 = interfaceinvoke r1.<android.util.AttributeSet: int getAttributeIntValue(int,int)>(i16, -1);

        i18 = i12;

        i19 = i13;

        i20 = i15;

        z35 = z30;

        z36 = z32;

        z37 = z33;

        r50 = r48;

        goto label10;

     label02:
        $z22 = virtualinvoke r49.<java.lang.String: boolean equals(java.lang.Object)>("versionCode");

        if $z22 == 0 goto label03;

        i18 = interfaceinvoke r1.<android.util.AttributeSet: int getAttributeIntValue(int,int)>(i16, 0);

        i17 = i11;

        i19 = i13;

        i20 = i15;

        z35 = z30;

        z36 = z32;

        z37 = z33;

        r50 = r48;

        goto label10;

     label03:
        $z23 = virtualinvoke r49.<java.lang.String: boolean equals(java.lang.Object)>("versionCodeMajor");

        if $z23 == 0 goto label04;

        i19 = interfaceinvoke r1.<android.util.AttributeSet: int getAttributeIntValue(int,int)>(i16, 0);

        i17 = i11;

        i18 = i12;

        i20 = i15;

        z35 = z30;

        z36 = z32;

        z37 = z33;

        r50 = r48;

        goto label10;

     label04:
        $z24 = virtualinvoke r49.<java.lang.String: boolean equals(java.lang.Object)>("revisionCode");

        if $z24 == 0 goto label05;

        i20 = interfaceinvoke r1.<android.util.AttributeSet: int getAttributeIntValue(int,int)>(i16, 0);

        i17 = i11;

        i18 = i12;

        i19 = i13;

        z35 = z30;

        z36 = z32;

        z37 = z33;

        r50 = r48;

        goto label10;

     label05:
        $z25 = virtualinvoke r49.<java.lang.String: boolean equals(java.lang.Object)>("coreApp");

        if $z25 == 0 goto label06;

        z35 = interfaceinvoke r1.<android.util.AttributeSet: boolean getAttributeBooleanValue(int,boolean)>(i16, 0);

        i17 = i11;

        i18 = i12;

        i19 = i13;

        i20 = i15;

        z36 = z32;

        z37 = z33;

        r50 = r48;

        goto label10;

     label06:
        $z26 = virtualinvoke r49.<java.lang.String: boolean equals(java.lang.Object)>("isolatedSplits");

        if $z26 == 0 goto label07;

        z36 = interfaceinvoke r1.<android.util.AttributeSet: boolean getAttributeBooleanValue(int,boolean)>(i16, 0);

        i17 = i11;

        i18 = i12;

        i19 = i13;

        i20 = i15;

        z35 = z30;

        z37 = z33;

        r50 = r48;

        goto label10;

     label07:
        $z27 = virtualinvoke r49.<java.lang.String: boolean equals(java.lang.Object)>("configForSplit");

        if $z27 == 0 goto label08;

        r50 = interfaceinvoke r1.<android.util.AttributeSet: java.lang.String getAttributeValue(int)>(i16);

        i17 = i11;

        i18 = i12;

        i19 = i13;

        i20 = i15;

        z35 = z30;

        z36 = z32;

        z37 = z33;

        goto label10;

     label08:
        $z28 = virtualinvoke r49.<java.lang.String: boolean equals(java.lang.Object)>("isFeatureSplit");

        if $z28 == 0 goto label09;

        z37 = interfaceinvoke r1.<android.util.AttributeSet: boolean getAttributeBooleanValue(int,boolean)>(i16, 0);

        i17 = i11;

        i18 = i12;

        i19 = i13;

        i20 = i15;

        z35 = z30;

        z36 = z32;

        r50 = r48;

        goto label10;

     label09:
        i17 = i11;

        i18 = i12;

        i19 = i13;

        i20 = i15;

        z35 = z30;

        z36 = z32;

        z37 = z33;

        r50 = r48;

        $z29 = virtualinvoke r49.<java.lang.String: boolean equals(java.lang.Object)>("isSplitRequired");

        if $z29 == 0 goto label10;

        z34 = interfaceinvoke r1.<android.util.AttributeSet: boolean getAttributeBooleanValue(int,boolean)>(i16, 0);

        r50 = r48;

        z37 = z33;

        z36 = z32;

        z35 = z30;

        i20 = i15;

        i19 = i13;

        i18 = i12;

        i17 = i11;

     label10:
        i16 = i16 + 1;

        i11 = i17;

        i12 = i18;

        i13 = i19;

        i15 = i20;

        z30 = z35;

        z32 = z36;

        z33 = z37;

        r48 = r50;

        goto label01;

     label11:
        $i2 = interfaceinvoke r47.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        i21 = $i2 + 1;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r51 = null;

        r52 = null;

        r53 = null;

        z38 = 0;

        i22 = 0;

        z39 = 0;

        z41 = 0;

        r54 = null;

        z42 = 1;

        z43 = 0;

        z44 = 0;

        i23 = 0;

        z45 = 0;

     label12:
        i24 = interfaceinvoke r47.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i24 == 1 goto label47;

        if i24 != 3 goto label14;

        $i10 = interfaceinvoke r47.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i10 < i21 goto label13;

        goto label14;

     label13:
        goto label47;

     label14:
        if i24 == 3 goto label46;

        if i24 != 4 goto label15;

        goto label46;

     label15:
        $i4 = interfaceinvoke r47.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i4 == i21 goto label16;

        goto label46;

     label16:
        r55 = interfaceinvoke r47.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        i25 = i21;

        $r22 = "package-verifier";

        $z2 = virtualinvoke $r22.<java.lang.String: boolean equals(java.lang.Object)>(r55);

        if $z2 == 0 goto label18;

        r56 = staticinvoke <android.content.pm.PackageParser: android.content.pm.VerifierInfo parseVerifier(android.util.AttributeSet)>(r1);

        if r56 == null goto label17;

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r56);

     label17:
        goto label46;

     label18:
        $r23 = "application";

        $r24 = interfaceinvoke r47.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z3 = virtualinvoke $r23.<java.lang.String: boolean equals(java.lang.Object)>($r24);

        if $z3 == 0 goto label26;

        i26 = 0;

        z46 = z41;

     label19:
        $i9 = interfaceinvoke r1.<android.util.AttributeSet: int getAttributeCount()>();

        if i26 >= $i9 goto label25;

        r57 = interfaceinvoke r1.<android.util.AttributeSet: java.lang.String getAttributeName(int)>(i26);

        z47 = z46;

        $r43 = "debuggable";

        $z16 = virtualinvoke $r43.<java.lang.String: boolean equals(java.lang.Object)>(r57);

        if $z16 == 0 goto label20;

        z0 = interfaceinvoke r1.<android.util.AttributeSet: boolean getAttributeBooleanValue(int,boolean)>(i26, 0);

        z44 = z0;

        z47 = z46;

        if z0 == 0 goto label20;

        z47 = 1;

        z44 = z0;

     label20:
        $r58 = "multiArch";

        $z48 = virtualinvoke $r58.<java.lang.String: boolean equals(java.lang.Object)>(r57);

        if $z48 == 0 goto label21;

        z43 = interfaceinvoke r1.<android.util.AttributeSet: boolean getAttributeBooleanValue(int,boolean)>(i26, 0);

        goto label21;

     label21:
        $r44 = "use32bitAbi";

        $z17 = virtualinvoke $r44.<java.lang.String: boolean equals(java.lang.Object)>(r57);

        if $z17 == 0 goto label22;

        z39 = interfaceinvoke r1.<android.util.AttributeSet: boolean getAttributeBooleanValue(int,boolean)>(i26, 0);

     label22:
        $r45 = "extractNativeLibs";

        $z18 = virtualinvoke $r45.<java.lang.String: boolean equals(java.lang.Object)>(r57);

        if $z18 == 0 goto label23;

        z42 = interfaceinvoke r1.<android.util.AttributeSet: boolean getAttributeBooleanValue(int,boolean)>(i26, 1);

     label23:
        $r46 = "useEmbeddedDex";

        $z19 = virtualinvoke $r46.<java.lang.String: boolean equals(java.lang.Object)>(r57);

        if $z19 == 0 goto label24;

        z38 = interfaceinvoke r1.<android.util.AttributeSet: boolean getAttributeBooleanValue(int,boolean)>(i26, 0);

     label24:
        i26 = i26 + 1;

        z46 = z47;

        goto label19;

     label25:
        i21 = i25;

        z41 = z46;

        goto label12;

     label26:
        $r25 = "overlay";

        $r26 = interfaceinvoke r47.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z4 = virtualinvoke $r25.<java.lang.String: boolean equals(java.lang.Object)>($r26);

        if $z4 == 0 goto label34;

        i27 = 0;

        r59 = r51;

     label27:
        $i8 = interfaceinvoke r1.<android.util.AttributeSet: int getAttributeCount()>();

        if i27 >= $i8 goto label33;

        r5 = interfaceinvoke r1.<android.util.AttributeSet: java.lang.String getAttributeName(int)>(i27);

        $r38 = "requiredSystemPropertyName";

        $z11 = virtualinvoke $r38.<java.lang.String: boolean equals(java.lang.Object)>(r5);

        if $z11 == 0 goto label28;

        r60 = interfaceinvoke r1.<android.util.AttributeSet: java.lang.String getAttributeValue(int)>(i27);

        z49 = z45;

        r61 = r59;

        r62 = r53;

        goto label32;

     label28:
        $r39 = "requiredSystemPropertyValue";

        $z12 = virtualinvoke $r39.<java.lang.String: boolean equals(java.lang.Object)>(r5);

        if $z12 == 0 goto label29;

        r62 = interfaceinvoke r1.<android.util.AttributeSet: java.lang.String getAttributeValue(int)>(i27);

        z49 = z45;

        r61 = r59;

        r60 = r52;

        goto label32;

     label29:
        $r40 = "targetPackage";

        $z13 = virtualinvoke $r40.<java.lang.String: boolean equals(java.lang.Object)>(r5);

        if $z13 == 0 goto label30;

        r61 = interfaceinvoke r1.<android.util.AttributeSet: java.lang.String getAttributeValue(int)>(i27);

        z49 = z45;

        r60 = r52;

        r62 = r53;

        goto label32;

     label30:
        $r41 = "isStatic";

        $z14 = virtualinvoke $r41.<java.lang.String: boolean equals(java.lang.Object)>(r5);

        if $z14 == 0 goto label31;

        z49 = interfaceinvoke r1.<android.util.AttributeSet: boolean getAttributeBooleanValue(int,boolean)>(i27, 0);

        r61 = r59;

        r60 = r52;

        r62 = r53;

        goto label32;

     label31:
        z49 = z45;

        r61 = r59;

        r60 = r52;

        r62 = r53;

        $r42 = "priority";

        $z15 = virtualinvoke $r42.<java.lang.String: boolean equals(java.lang.Object)>(r5);

        if $z15 == 0 goto label32;

        i22 = interfaceinvoke r1.<android.util.AttributeSet: int getAttributeIntValue(int,int)>(i27, 0);

        r62 = r53;

        r60 = r52;

        r61 = r59;

        z49 = z45;

     label32:
        i27 = i27 + 1;

        z45 = z49;

        r59 = r61;

        r52 = r60;

        r53 = r62;

        goto label27;

     label33:
        i21 = i25;

        r51 = r59;

        goto label12;

     label34:
        $r27 = "uses-split";

        $r28 = interfaceinvoke r47.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z5 = virtualinvoke $r27.<java.lang.String: boolean equals(java.lang.Object)>($r28);

        if $z5 == 0 goto label37;

        if r54 == null goto label35;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageParser", "Only one <uses-split> permitted. Ignoring others.");

        goto label46;

     label35:
        r54 = interfaceinvoke r1.<android.util.AttributeSet: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>("http://schemas.android.com/apk/res/android", "name");

        if r54 == null goto label36;

        goto label12;

     label36:
        $r37 = new android.content.pm.PackageParser$PackageParserException;

        specialinvoke $r37.<android.content.pm.PackageParser$PackageParserException: void <init>(int,java.lang.String)>(-108, "<uses-split> tag requires \'android:name\' attribute");

        throw $r37;

     label37:
        $r29 = "uses-sdk";

        $r30 = interfaceinvoke r47.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z6 = virtualinvoke $r29.<java.lang.String: boolean equals(java.lang.Object)>($r30);

        if $z6 == 0 goto label42;

        i28 = 0;

     label38:
        $i6 = interfaceinvoke r1.<android.util.AttributeSet: int getAttributeCount()>();

        if i28 >= $i6 goto label41;

        r63 = interfaceinvoke r1.<android.util.AttributeSet: java.lang.String getAttributeName(int)>(i28);

        $r35 = "targetSdkVersion";

        $z9 = virtualinvoke $r35.<java.lang.String: boolean equals(java.lang.Object)>(r63);

        if $z9 == 0 goto label39;

        i23 = interfaceinvoke r1.<android.util.AttributeSet: int getAttributeIntValue(int,int)>(i28, 0);

        goto label39;

     label39:
        $r36 = "minSdkVersion";

        $z10 = virtualinvoke $r36.<java.lang.String: boolean equals(java.lang.Object)>(r63);

        if $z10 == 0 goto label40;

        i14 = interfaceinvoke r1.<android.util.AttributeSet: int getAttributeIntValue(int,int)>(i28, 1);

        goto label40;

     label40:
        i28 = i28 + 1;

        goto label38;

     label41:
        i21 = i25;

        goto label12;

     label42:
        $r31 = "profileable";

        $r32 = interfaceinvoke r47.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z7 = virtualinvoke $r31.<java.lang.String: boolean equals(java.lang.Object)>($r32);

        if $z7 == 0 goto label46;

        i29 = 0;

     label43:
        $i5 = interfaceinvoke r1.<android.util.AttributeSet: int getAttributeCount()>();

        if i29 >= $i5 goto label45;

        z50 = z41;

        $r33 = "shell";

        $r34 = interfaceinvoke r1.<android.util.AttributeSet: java.lang.String getAttributeName(int)>(i29);

        $z8 = virtualinvoke $r33.<java.lang.String: boolean equals(java.lang.Object)>($r34);

        if $z8 == 0 goto label44;

        z50 = interfaceinvoke r1.<android.util.AttributeSet: boolean getAttributeBooleanValue(int,boolean)>(i29, z41);

     label44:
        i29 = i29 + 1;

        z41 = z50;

        goto label43;

     label45:
        i21 = i25;

        goto label12;

     label46:
        goto label12;

     label47:
        $z1 = staticinvoke <android.content.pm.PackageParser: boolean checkRequiredSystemProperties(java.lang.String,java.lang.String)>(r52, r53);

        if $z1 != 0 goto label48;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skipping target and overlay pair ");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r51);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and ");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": overlay ignored due to required system property: ");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r52);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with value: ");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r53);

        $r21 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PackageParser", $r21);

        r51 = null;

        z45 = 0;

        i22 = 0;

        goto label48;

     label48:
        $r7 = new android.content.pm.PackageParser$ApkLite;

        $r8 = r3.<android.util.Pair: java.lang.Object first>;

        $r11 = (java.lang.String) $r8;

        $r9 = r3.<android.util.Pair: java.lang.Object second>;

        $r10 = (java.lang.String) $r9;

        specialinvoke $r7.<android.content.pm.PackageParser$ApkLite: void <init>(java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String,java.lang.String,boolean,int,int,int,int,java.util.List,android.content.pm.PackageParser$SigningDetails,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,java.lang.String,boolean,int,int,int)>(r0, $r11, $r10, z33, r48, r54, z34, i12, i13, i15, i11, $r6, r2, z30, z44, z41, z43, z39, z38, z42, z32, r51, z45, i22, i14, i23);

        return $r7;
    }

    private static android.content.pm.PackageParser$ApkLite parseApkLiteInner(java.io.File, java.io.FileDescriptor, java.lang.String, int) throws android.content.pm.PackageParser$PackageParserException
    {
        int i0, $i1, $i2;
        java.lang.Throwable $r1, $r3, $r4, $r7, $r8, $r9;
        java.lang.String $r2, $r5, $r6, r12, r13;
        java.io.File r10;
        java.io.FileDescriptor r11;
        boolean z0;
        android.content.res.XmlResourceParser r14, r16, r19;
        android.content.res.ApkAssets r15, r17, r18;
        android.content.pm.PackageParser$Package r20;
        android.content.pm.PackageParser$SigningDetails r21;
        android.content.pm.PackageParser$ApkLite r23;
        android.content.pm.PackageParser$PackageParserException r26, r29;
        java.lang.StringBuilder r27, r28, r30;

        r10 := @parameter0: java.io.File;

        r11 := @parameter1: java.io.FileDescriptor;

        r12 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        if r11 == null goto label01;

        r13 = r12;

        goto label02;

     label01:
        r13 = virtualinvoke r10.<java.io.File: java.lang.String getAbsolutePath()>();

     label02:
        z0 = 0;

        if r11 == null goto label05;

        r14 = null;

        r15 = null;

        r16 = null;

        r17 = null;

     label03:
        r18 = staticinvoke <android.content.res.ApkAssets: android.content.res.ApkAssets loadFromFd(java.io.FileDescriptor,java.lang.String,int,android.content.res.loader.AssetsProvider)>(r11, r12, 0, null);

     label04:
        goto label07;

     label05:
        r14 = null;

        r15 = null;

        r16 = null;

        r17 = null;

     label06:
        r18 = staticinvoke <android.content.res.ApkAssets: android.content.res.ApkAssets loadFromPath(java.lang.String)>(r13);

     label07:
        r14 = null;

        r15 = r18;

        r16 = null;

        r17 = r18;

     label08:
        r19 = virtualinvoke r18.<android.content.res.ApkAssets: android.content.res.XmlResourceParser openXml(java.lang.String)>("AndroidManifest.xml");

     label09:
        $i1 = i0 & 32;

        if $i1 == 0 goto label26;

        r14 = r19;

        r15 = r18;

        r16 = r19;

        r17 = r18;

     label10:
        r20 = new android.content.pm.PackageParser$Package;

     label11:
        r14 = r19;

        r15 = r18;

        r16 = r19;

        r17 = r18;

     label12:
        specialinvoke r20.<android.content.pm.PackageParser$Package: void <init>(java.lang.String)>(null);

     label13:
        $i2 = i0 & 16;

        if $i2 == 0 goto label14;

        z0 = 1;

     label14:
        r14 = r19;

        r15 = r18;

        r16 = r19;

        r17 = r18;

     label15:
        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(262144L, "collectCertificates");

     label16:
        staticinvoke <android.content.pm.PackageParser: void collectCertificates(android.content.pm.PackageParser$Package,java.io.File,boolean)>(r20, r10, z0);

     label17:
        r14 = r19;

        r15 = r18;

        r16 = r19;

        r17 = r18;

     label18:
        staticinvoke <android.os.Trace: void traceEnd(long)>(262144L);

     label19:
        r14 = r19;

        r15 = r18;

        r16 = r19;

        r17 = r18;

     label20:
        r21 = r20.<android.content.pm.PackageParser$Package: android.content.pm.PackageParser$SigningDetails mSigningDetails>;

     label21:
        goto label28;

     label22:
        $r8 := @caughtexception;

        r14 = r19;

        r15 = r18;

        r16 = r19;

        r17 = r18;

     label23:
        staticinvoke <android.os.Trace: void traceEnd(long)>(262144L);

     label24:
        r14 = r19;

        r15 = r18;

        r16 = r19;

        r17 = r18;

     label25:
        throw $r8;

     label26:
        r14 = r19;

        r15 = r18;

        r16 = r19;

        r17 = r18;

     label27:
        r21 = <android.content.pm.PackageParser$SigningDetails: android.content.pm.PackageParser$SigningDetails UNKNOWN>;

     label28:
        r14 = r19;

        r15 = r18;

        r16 = r19;

        r17 = r18;

     label29:
        r23 = staticinvoke <android.content.pm.PackageParser: android.content.pm.PackageParser$ApkLite parseApkLite(java.lang.String,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.pm.PackageParser$SigningDetails)>(r13, r19, r19, r21);

     label30:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r19);

        if r18 == null goto label34;

     label31:
        virtualinvoke r18.<android.content.res.ApkAssets: void close()>();

     label32:
        goto label34;

     label33:
        $r7 := @caughtexception;

     label34:
        return r23;

     label35:
        $r9 := @caughtexception;

        goto label75;

     label36:
        $r4 := @caughtexception;

        goto label51;

     label37:
        $r1 := @caughtexception;

        r14 = null;

        r15 = null;

        r16 = null;

        r17 = null;

     label38:
        r26 = new android.content.pm.PackageParser$PackageParserException;

     label39:
        r14 = null;

        r15 = null;

        r16 = null;

        r17 = null;

     label40:
        r27 = new java.lang.StringBuilder;

     label41:
        r14 = null;

        r15 = null;

        r16 = null;

        r17 = null;

     label42:
        specialinvoke r27.<java.lang.StringBuilder: void <init>()>();

     label43:
        r14 = null;

        r15 = null;

        r16 = null;

        r17 = null;

     label44:
        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to parse ");

     label45:
        r14 = null;

        r15 = null;

        r16 = null;

        r17 = null;

     label46:
        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);

     label47:
        r14 = null;

        r15 = null;

        r16 = null;

        r17 = null;

     label48:
        $r2 = virtualinvoke r27.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r26.<android.content.pm.PackageParser$PackageParserException: void <init>(int,java.lang.String)>(-100, $r2);

     label49:
        r14 = null;

        r15 = null;

        r16 = null;

        r17 = null;

     label50:
        throw r26;

     label51:
        r14 = r16;

        r15 = r17;

     label52:
        r28 = new java.lang.StringBuilder;

     label53:
        r14 = r16;

        r15 = r17;

     label54:
        specialinvoke r28.<java.lang.StringBuilder: void <init>()>();

     label55:
        r14 = r16;

        r15 = r17;

     label56:
        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to parse ");

     label57:
        r14 = r16;

        r15 = r17;

     label58:
        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);

     label59:
        r14 = r16;

        r15 = r17;

     label60:
        $r5 = virtualinvoke r28.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageParser", $r5, $r4);

     label61:
        r14 = r16;

        r15 = r17;

     label62:
        r29 = new android.content.pm.PackageParser$PackageParserException;

     label63:
        r14 = r16;

        r15 = r17;

     label64:
        r30 = new java.lang.StringBuilder;

     label65:
        r14 = r16;

        r15 = r17;

     label66:
        specialinvoke r30.<java.lang.StringBuilder: void <init>()>();

     label67:
        r14 = r16;

        r15 = r17;

     label68:
        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to parse ");

     label69:
        r14 = r16;

        r15 = r17;

     label70:
        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);

     label71:
        r14 = r16;

        r15 = r17;

     label72:
        $r6 = virtualinvoke r30.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r29.<android.content.pm.PackageParser$PackageParserException: void <init>(int,java.lang.String,java.lang.Throwable)>(-102, $r6, $r4);

     label73:
        r14 = r16;

        r15 = r17;

     label74:
        throw r29;

     label75:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r14);

        if r15 == null goto label79;

     label76:
        virtualinvoke r15.<android.content.res.ApkAssets: void close()>();

     label77:
        goto label79;

     label78:
        $r3 := @caughtexception;

     label79:
        throw $r9;

        catch java.io.IOException from label03 to label04 with label37;
        catch org.xmlpull.v1.XmlPullParserException from label03 to label04 with label36;
        catch java.lang.RuntimeException from label03 to label04 with label36;
        catch java.lang.Throwable from label03 to label04 with label35;
        catch java.io.IOException from label06 to label07 with label37;
        catch org.xmlpull.v1.XmlPullParserException from label06 to label07 with label36;
        catch java.lang.RuntimeException from label06 to label07 with label36;
        catch java.lang.Throwable from label06 to label07 with label35;
        catch org.xmlpull.v1.XmlPullParserException from label08 to label09 with label36;
        catch java.io.IOException from label08 to label09 with label36;
        catch java.lang.RuntimeException from label08 to label09 with label36;
        catch java.lang.Throwable from label08 to label09 with label35;
        catch org.xmlpull.v1.XmlPullParserException from label10 to label11 with label36;
        catch java.io.IOException from label10 to label11 with label36;
        catch java.lang.RuntimeException from label10 to label11 with label36;
        catch java.lang.Throwable from label10 to label11 with label35;
        catch org.xmlpull.v1.XmlPullParserException from label12 to label13 with label36;
        catch java.io.IOException from label12 to label13 with label36;
        catch java.lang.RuntimeException from label12 to label13 with label36;
        catch java.lang.Throwable from label12 to label13 with label35;
        catch org.xmlpull.v1.XmlPullParserException from label15 to label16 with label36;
        catch java.io.IOException from label15 to label16 with label36;
        catch java.lang.RuntimeException from label15 to label16 with label36;
        catch java.lang.Throwable from label15 to label16 with label35;
        catch java.lang.Throwable from label16 to label17 with label22;
        catch org.xmlpull.v1.XmlPullParserException from label18 to label19 with label36;
        catch java.io.IOException from label18 to label19 with label36;
        catch java.lang.RuntimeException from label18 to label19 with label36;
        catch java.lang.Throwable from label18 to label19 with label35;
        catch org.xmlpull.v1.XmlPullParserException from label20 to label21 with label36;
        catch java.io.IOException from label20 to label21 with label36;
        catch java.lang.RuntimeException from label20 to label21 with label36;
        catch java.lang.Throwable from label20 to label21 with label35;
        catch org.xmlpull.v1.XmlPullParserException from label23 to label24 with label36;
        catch java.io.IOException from label23 to label24 with label36;
        catch java.lang.RuntimeException from label23 to label24 with label36;
        catch java.lang.Throwable from label23 to label24 with label35;
        catch org.xmlpull.v1.XmlPullParserException from label25 to label26 with label36;
        catch java.io.IOException from label25 to label26 with label36;
        catch java.lang.RuntimeException from label25 to label26 with label36;
        catch java.lang.Throwable from label25 to label26 with label35;
        catch org.xmlpull.v1.XmlPullParserException from label27 to label28 with label36;
        catch java.io.IOException from label27 to label28 with label36;
        catch java.lang.RuntimeException from label27 to label28 with label36;
        catch java.lang.Throwable from label27 to label28 with label35;
        catch org.xmlpull.v1.XmlPullParserException from label29 to label30 with label36;
        catch java.io.IOException from label29 to label30 with label36;
        catch java.lang.RuntimeException from label29 to label30 with label36;
        catch java.lang.Throwable from label29 to label30 with label35;
        catch java.lang.Throwable from label31 to label32 with label33;
        catch org.xmlpull.v1.XmlPullParserException from label38 to label39 with label36;
        catch java.io.IOException from label38 to label39 with label36;
        catch java.lang.RuntimeException from label38 to label39 with label36;
        catch java.lang.Throwable from label38 to label39 with label35;
        catch org.xmlpull.v1.XmlPullParserException from label40 to label41 with label36;
        catch java.io.IOException from label40 to label41 with label36;
        catch java.lang.RuntimeException from label40 to label41 with label36;
        catch java.lang.Throwable from label40 to label41 with label35;
        catch org.xmlpull.v1.XmlPullParserException from label42 to label43 with label36;
        catch java.io.IOException from label42 to label43 with label36;
        catch java.lang.RuntimeException from label42 to label43 with label36;
        catch java.lang.Throwable from label42 to label43 with label35;
        catch org.xmlpull.v1.XmlPullParserException from label44 to label45 with label36;
        catch java.io.IOException from label44 to label45 with label36;
        catch java.lang.RuntimeException from label44 to label45 with label36;
        catch java.lang.Throwable from label44 to label45 with label35;
        catch org.xmlpull.v1.XmlPullParserException from label46 to label47 with label36;
        catch java.io.IOException from label46 to label47 with label36;
        catch java.lang.RuntimeException from label46 to label47 with label36;
        catch java.lang.Throwable from label46 to label47 with label35;
        catch org.xmlpull.v1.XmlPullParserException from label48 to label49 with label36;
        catch java.io.IOException from label48 to label49 with label36;
        catch java.lang.RuntimeException from label48 to label49 with label36;
        catch java.lang.Throwable from label48 to label49 with label35;
        catch org.xmlpull.v1.XmlPullParserException from label50 to label51 with label36;
        catch java.io.IOException from label50 to label51 with label36;
        catch java.lang.RuntimeException from label50 to label51 with label36;
        catch java.lang.Throwable from label50 to label51 with label35;
        catch java.lang.Throwable from label52 to label53 with label35;
        catch java.lang.Throwable from label54 to label55 with label35;
        catch java.lang.Throwable from label56 to label57 with label35;
        catch java.lang.Throwable from label58 to label59 with label35;
        catch java.lang.Throwable from label60 to label61 with label35;
        catch java.lang.Throwable from label62 to label63 with label35;
        catch java.lang.Throwable from label64 to label65 with label35;
        catch java.lang.Throwable from label66 to label67 with label35;
        catch java.lang.Throwable from label68 to label69 with label35;
        catch java.lang.Throwable from label70 to label71 with label35;
        catch java.lang.Throwable from label72 to label73 with label35;
        catch java.lang.Throwable from label74 to label75 with label35;
        catch java.lang.Throwable from label76 to label77 with label78;
    }

    private android.content.pm.PackageParser$Package parseBaseApk(java.io.File, android.content.res.AssetManager, int) throws android.content.pm.PackageParser$PackageParserException
    {
        android.content.pm.PackageParser r0;
        java.lang.String r1, $r2, $r3, $r5, $r6, $r7, $r9, $r10, $r14, r20;
        boolean $z0;
        android.util.DisplayMetrics $r4;
        android.content.pm.PackageParser$SigningDetails $r8;
        int $i0, $i1, i2, i3, i4, i5;
        java.lang.Throwable $r11, $r16, r28;
        android.content.pm.PackageParser$PackageParserException $r12, $r15, r26, r32, r33, r35;
        java.lang.Exception $r13, $r17, r31;
        java.io.File r18;
        android.content.res.AssetManager r19;
        android.content.res.XmlResourceParser r21, r22, r30;
        android.content.res.Resources r23;
        java.lang.String[] r24;
        android.content.pm.PackageParser$Package r25;
        java.lang.StringBuilder r27, r34, r36;

        r0 := @this: android.content.pm.PackageParser;

        r18 := @parameter0: java.io.File;

        r19 := @parameter1: android.content.res.AssetManager;

        i2 := @parameter2: int;

        r1 = virtualinvoke r18.<java.io.File: java.lang.String getAbsolutePath()>();

        $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("/mnt/expand/");

        if $z0 == 0 goto label01;

        $r9 = "/mnt/expand/";

        $i0 = virtualinvoke $r9.<java.lang.String: int length()>();

        i3 = virtualinvoke r1.<java.lang.String: int indexOf(int,int)>(47, $i0);

        $r10 = "/mnt/expand/";

        $i1 = virtualinvoke $r10.<java.lang.String: int length()>();

        r20 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>($i1, i3);

        goto label02;

     label01:
        r20 = null;

     label02:
        r0.<android.content.pm.PackageParser: int mParseError> = 1;

        $r2 = virtualinvoke r18.<java.io.File: java.lang.String getAbsolutePath()>();

        r0.<android.content.pm.PackageParser: java.lang.String mArchiveSourcePath> = $r2;

        r21 = null;

     label03:
        i4 = virtualinvoke r19.<android.content.res.AssetManager: int findCookieForPath(java.lang.String)>(r1);

     label04:
        if i4 == 0 goto label14;

        r21 = null;

     label05:
        r22 = virtualinvoke r19.<android.content.res.AssetManager: android.content.res.XmlResourceParser openXmlResourceParser(int,java.lang.String)>(i4, "AndroidManifest.xml");

     label06:
        r23 = new android.content.res.Resources;

        $r4 = r0.<android.content.pm.PackageParser: android.util.DisplayMetrics mMetrics>;

        specialinvoke r23.<android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>(r19, $r4, null);

        r24 = newarray (java.lang.String)[1];

        r25 = specialinvoke r0.<android.content.pm.PackageParser: android.content.pm.PackageParser$Package parseBaseApk(java.lang.String,android.content.res.Resources,android.content.res.XmlResourceParser,int,java.lang.String[])>(r1, r23, r22, i2, r24);

     label07:
        if r25 == null goto label10;

     label08:
        virtualinvoke r25.<android.content.pm.PackageParser$Package: void setVolumeUuid(java.lang.String)>(r20);

        virtualinvoke r25.<android.content.pm.PackageParser$Package: void setApplicationVolumeUuid(java.lang.String)>(r20);

        virtualinvoke r25.<android.content.pm.PackageParser$Package: void setBaseCodePath(java.lang.String)>(r1);

        $r8 = <android.content.pm.PackageParser$SigningDetails: android.content.pm.PackageParser$SigningDetails UNKNOWN>;

        virtualinvoke r25.<android.content.pm.PackageParser$Package: void setSigningDetails(android.content.pm.PackageParser$SigningDetails)>($r8);

     label09:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r22);

        return r25;

     label10:
        r26 = new android.content.pm.PackageParser$PackageParserException;

        i5 = r0.<android.content.pm.PackageParser: int mParseError>;

        r27 = new java.lang.StringBuilder;

        specialinvoke r27.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (at ");

        $r5 = interfaceinvoke r22.<android.content.res.XmlResourceParser: java.lang.String getPositionDescription()>();

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("): ");

        $r6 = r24[0];

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r7 = virtualinvoke r27.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r26.<android.content.pm.PackageParser$PackageParserException: void <init>(int,java.lang.String)>(i5, $r7);

        throw r26;

     label11:
        $r16 := @caughtexception;

        r28 = $r16;

        r21 = r22;

        goto label46;

     label12:
        $r13 := @caughtexception;

        r30 = r22;

        r31 = $r13;

        goto label30;

     label13:
        $r12 := @caughtexception;

        r32 = $r12;

        r21 = r22;

        goto label45;

     label14:
        r21 = null;

     label15:
        r33 = new android.content.pm.PackageParser$PackageParserException;

     label16:
        r21 = null;

     label17:
        r34 = new java.lang.StringBuilder;

     label18:
        r21 = null;

     label19:
        specialinvoke r34.<java.lang.StringBuilder: void <init>()>();

     label20:
        r21 = null;

     label21:
        virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed adding asset path: ");

     label22:
        r21 = null;

     label23:
        virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

     label24:
        r21 = null;

     label25:
        $r3 = virtualinvoke r34.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r33.<android.content.pm.PackageParser$PackageParserException: void <init>(int,java.lang.String)>(-101, $r3);

     label26:
        r21 = null;

     label27:
        throw r33;

     label28:
        $r11 := @caughtexception;

        r28 = $r11;

        goto label46;

     label29:
        $r17 := @caughtexception;

        r31 = $r17;

        r30 = null;

     label30:
        r21 = r30;

     label31:
        r35 = new android.content.pm.PackageParser$PackageParserException;

     label32:
        r21 = r30;

     label33:
        r36 = new java.lang.StringBuilder;

     label34:
        r21 = r30;

     label35:
        specialinvoke r36.<java.lang.StringBuilder: void <init>()>();

     label36:
        r21 = r30;

     label37:
        virtualinvoke r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to read manifest from ");

     label38:
        r21 = r30;

     label39:
        virtualinvoke r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

     label40:
        r21 = r30;

     label41:
        $r14 = virtualinvoke r36.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r35.<android.content.pm.PackageParser$PackageParserException: void <init>(int,java.lang.String,java.lang.Throwable)>(-102, $r14, r31);

     label42:
        r21 = r30;

     label43:
        throw r35;

     label44:
        $r15 := @caughtexception;

        r32 = $r15;

        r21 = null;

     label45:
        throw r32;

     label46:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r21);

        throw r28;

        catch android.content.pm.PackageParser$PackageParserException from label03 to label04 with label44;
        catch java.lang.Exception from label03 to label04 with label29;
        catch java.lang.Throwable from label03 to label04 with label28;
        catch android.content.pm.PackageParser$PackageParserException from label05 to label06 with label44;
        catch java.lang.Exception from label05 to label06 with label29;
        catch java.lang.Throwable from label05 to label06 with label28;
        catch android.content.pm.PackageParser$PackageParserException from label06 to label07 with label13;
        catch java.lang.Exception from label06 to label07 with label12;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch android.content.pm.PackageParser$PackageParserException from label08 to label09 with label13;
        catch java.lang.Exception from label08 to label09 with label12;
        catch java.lang.Throwable from label08 to label09 with label11;
        catch android.content.pm.PackageParser$PackageParserException from label10 to label11 with label13;
        catch java.lang.Exception from label10 to label11 with label12;
        catch java.lang.Throwable from label10 to label11 with label11;
        catch android.content.pm.PackageParser$PackageParserException from label15 to label16 with label44;
        catch java.lang.Exception from label15 to label16 with label29;
        catch java.lang.Throwable from label15 to label16 with label28;
        catch android.content.pm.PackageParser$PackageParserException from label17 to label18 with label44;
        catch java.lang.Exception from label17 to label18 with label29;
        catch java.lang.Throwable from label17 to label18 with label28;
        catch android.content.pm.PackageParser$PackageParserException from label19 to label20 with label44;
        catch java.lang.Exception from label19 to label20 with label29;
        catch java.lang.Throwable from label19 to label20 with label28;
        catch android.content.pm.PackageParser$PackageParserException from label21 to label22 with label44;
        catch java.lang.Exception from label21 to label22 with label29;
        catch java.lang.Throwable from label21 to label22 with label28;
        catch android.content.pm.PackageParser$PackageParserException from label23 to label24 with label44;
        catch java.lang.Exception from label23 to label24 with label29;
        catch java.lang.Throwable from label23 to label24 with label28;
        catch android.content.pm.PackageParser$PackageParserException from label25 to label26 with label44;
        catch java.lang.Exception from label25 to label26 with label29;
        catch java.lang.Throwable from label25 to label26 with label28;
        catch android.content.pm.PackageParser$PackageParserException from label27 to label28 with label44;
        catch java.lang.Exception from label27 to label28 with label29;
        catch java.lang.Throwable from label27 to label28 with label28;
        catch java.lang.Throwable from label31 to label32 with label28;
        catch java.lang.Throwable from label33 to label34 with label28;
        catch java.lang.Throwable from label35 to label36 with label28;
        catch java.lang.Throwable from label37 to label38 with label28;
        catch java.lang.Throwable from label39 to label40 with label28;
        catch java.lang.Throwable from label41 to label42 with label28;
        catch java.lang.Throwable from label43 to label44 with label28;
        catch java.lang.Throwable from label45 to label46 with label28;
    }

    private android.content.pm.PackageParser$Package parseBaseApk(java.lang.String, android.content.res.Resources, android.content.res.XmlResourceParser, int, java.lang.String[]) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.pm.PackageParser r0;
        android.content.res.XmlResourceParser r1;
        int i0, $i1, $i2, $i4, $i5, $i6, $i7, $i8;
        java.lang.String[] r2;
        java.lang.Object $r4, $r5;
        boolean $z0, $z1, $z2;
        android.content.pm.PackageParser$Package $r6, $r16;
        int[] $r7;
        android.content.pm.ApplicationInfo $r8, $r11, $r15, r32;
        long $l3;
        java.lang.String $r9, $r10, $r12, $r13, $r14, $r17, $r18, $r19, $r20, $r23, r25, r28, r29;
        android.content.pm.PackageParser$PackageParserException $r24;
        android.content.res.Resources r26;
        android.util.Pair r27;
        java.lang.StringBuilder r30;
        android.content.res.TypedArray r31;

        r0 := @this: android.content.pm.PackageParser;

        r25 := @parameter0: java.lang.String;

        r26 := @parameter1: android.content.res.Resources;

        r1 := @parameter2: android.content.res.XmlResourceParser;

        i0 := @parameter3: int;

        r2 := @parameter4: java.lang.String[];

     label1:
        r27 = staticinvoke <android.content.pm.PackageParser: android.util.Pair parsePackageSplitNames(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>(r1, r1);

        $r4 = r27.<android.util.Pair: java.lang.Object first>;

        r28 = (java.lang.String) $r4;

        $r5 = r27.<android.util.Pair: java.lang.Object second>;

        r29 = (java.lang.String) $r5;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r29);

        if $z0 != 0 goto label3;

        r30 = new java.lang.StringBuilder;

        specialinvoke r30.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected base APK, but found split ");

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r29);

        $r23 = virtualinvoke r30.<java.lang.StringBuilder: java.lang.String toString()>();

        r2[0] = $r23;

        r0.<android.content.pm.PackageParser: int mParseError> = -106;

     label2:
        return null;

     label3:
        $r6 = new android.content.pm.PackageParser$Package;

        specialinvoke $r6.<android.content.pm.PackageParser$Package: void <init>(java.lang.String)>(r28);

        $r7 = <com.android.internal.R$styleable: int[] AndroidManifest>;

        r31 = virtualinvoke r26.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r1, $r7);

        $i1 = virtualinvoke r31.<android.content.res.TypedArray: int getInteger(int,int)>(1, 0);

        $r6.<android.content.pm.PackageParser$Package: int mVersionCode> = $i1;

        $i2 = virtualinvoke r31.<android.content.res.TypedArray: int getInteger(int,int)>(11, 0);

        $r6.<android.content.pm.PackageParser$Package: int mVersionCodeMajor> = $i2;

        $r8 = $r6.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $l3 = virtualinvoke $r6.<android.content.pm.PackageParser$Package: long getLongVersionCode()>();

        virtualinvoke $r8.<android.content.pm.ApplicationInfo: void setVersionCode(long)>($l3);

        $i4 = virtualinvoke r31.<android.content.res.TypedArray: int getInteger(int,int)>(5, 0);

        $r6.<android.content.pm.PackageParser$Package: int baseRevisionCode> = $i4;

        $r9 = virtualinvoke r31.<android.content.res.TypedArray: java.lang.String getNonConfigurationString(int,int)>(2, 0);

        $r6.<android.content.pm.PackageParser$Package: java.lang.String mVersionName> = $r9;

        $r10 = $r6.<android.content.pm.PackageParser$Package: java.lang.String mVersionName>;

        if $r10 == null goto label4;

        $r19 = $r6.<android.content.pm.PackageParser$Package: java.lang.String mVersionName>;

        $r20 = virtualinvoke $r19.<java.lang.String: java.lang.String intern()>();

        $r6.<android.content.pm.PackageParser$Package: java.lang.String mVersionName> = $r20;

     label4:
        $z1 = interfaceinvoke r1.<android.content.res.XmlResourceParser: boolean getAttributeBooleanValue(java.lang.String,java.lang.String,boolean)>(null, "coreApp", 0);

        $r6.<android.content.pm.PackageParser$Package: boolean coreApp> = $z1;

        $z2 = virtualinvoke r31.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(6, 0);

        if $z2 == 0 goto label5;

        r32 = $r6.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i7 = r32.<android.content.pm.ApplicationInfo: int privateFlags>;

        $i8 = $i7 | 32768;

        r32.<android.content.pm.ApplicationInfo: int privateFlags> = $i8;

     label5:
        $i5 = virtualinvoke r31.<android.content.res.TypedArray: int getInteger(int,int)>(9, 0);

        $r6.<android.content.pm.PackageParser$Package: int mCompileSdkVersion> = $i5;

        $r11 = $r6.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i6 = $r6.<android.content.pm.PackageParser$Package: int mCompileSdkVersion>;

        $r11.<android.content.pm.ApplicationInfo: int compileSdkVersion> = $i6;

        $r12 = virtualinvoke r31.<android.content.res.TypedArray: java.lang.String getNonConfigurationString(int,int)>(10, 0);

        $r6.<android.content.pm.PackageParser$Package: java.lang.String mCompileSdkVersionCodename> = $r12;

        $r13 = $r6.<android.content.pm.PackageParser$Package: java.lang.String mCompileSdkVersionCodename>;

        if $r13 == null goto label6;

        $r17 = $r6.<android.content.pm.PackageParser$Package: java.lang.String mCompileSdkVersionCodename>;

        $r18 = virtualinvoke $r17.<java.lang.String: java.lang.String intern()>();

        $r6.<android.content.pm.PackageParser$Package: java.lang.String mCompileSdkVersionCodename> = $r18;

     label6:
        $r15 = $r6.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r14 = $r6.<android.content.pm.PackageParser$Package: java.lang.String mCompileSdkVersionCodename>;

        $r15.<android.content.pm.ApplicationInfo: java.lang.String compileSdkVersionCodename> = $r14;

        virtualinvoke r31.<android.content.res.TypedArray: void recycle()>();

        $r16 = specialinvoke r0.<android.content.pm.PackageParser: android.content.pm.PackageParser$Package parseBaseApkCommon(android.content.pm.PackageParser$Package,java.util.Set,android.content.res.Resources,android.content.res.XmlResourceParser,int,java.lang.String[])>($r6, null, r26, r1, i0, r2);

        return $r16;

     label7:
        $r24 := @caughtexception;

        r0.<android.content.pm.PackageParser: int mParseError> = -106;

        return null;

        catch android.content.pm.PackageParser$PackageParserException from label1 to label2 with label7;
    }

    private boolean parseBaseApkChild(android.content.pm.PackageParser$Package, android.content.res.Resources, android.content.res.XmlResourceParser, int, java.lang.String[]) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.pm.PackageParser r0;
        android.content.res.XmlResourceParser r1;
        int i0, $i1, $i2, $i3, $i4;
        java.lang.String[] r2;
        java.lang.String $r3, $r4, $r6, $r20, r24, r26, r28;
        boolean $z0, $z1;
        android.content.pm.PackageParser$Package $r5, r22, r30;
        android.content.pm.ApplicationInfo $r7, $r8, $r9, $r10;
        java.util.Set $r11;
        java.util.ArrayList $r12, $r13, $r14;
        java.lang.StringBuilder $r15, $r18;
        android.content.res.Resources r23;

        r0 := @this: android.content.pm.PackageParser;

        r22 := @parameter0: android.content.pm.PackageParser$Package;

        r23 := @parameter1: android.content.res.Resources;

        r1 := @parameter2: android.content.res.XmlResourceParser;

        i0 := @parameter3: int;

        r2 := @parameter4: java.lang.String[];

        r24 = interfaceinvoke r1.<android.content.res.XmlResourceParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "package");

        $r3 = staticinvoke <android.content.pm.PackageParser: java.lang.String validateName(java.lang.String,boolean,boolean)>(r24, 1, 0);

        if $r3 == null goto label1;

        r0.<android.content.pm.PackageParser: int mParseError> = -106;

        return 0;

     label1:
        $r4 = r22.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $z0 = virtualinvoke r24.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label2;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Child package name cannot be equal to parent package name: ");

        $r20 = r22.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        r26 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageParser", r26);

        r2[0] = r26;

        r0.<android.content.pm.PackageParser: int mParseError> = -108;

        return 0;

     label2:
        $z1 = virtualinvoke r22.<android.content.pm.PackageParser$Package: boolean hasChildPackage(java.lang.String)>(r24);

        if $z1 == 0 goto label3;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicate child package:");

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r24);

        r28 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageParser", r28);

        r2[0] = r28;

        r0.<android.content.pm.PackageParser: int mParseError> = -108;

        return 0;

     label3:
        $r5 = new android.content.pm.PackageParser$Package;

        specialinvoke $r5.<android.content.pm.PackageParser$Package: void <init>(java.lang.String)>(r24);

        $i1 = r22.<android.content.pm.PackageParser$Package: int mVersionCode>;

        $r5.<android.content.pm.PackageParser$Package: int mVersionCode> = $i1;

        $i2 = r22.<android.content.pm.PackageParser$Package: int baseRevisionCode>;

        $r5.<android.content.pm.PackageParser$Package: int baseRevisionCode> = $i2;

        $r6 = r22.<android.content.pm.PackageParser$Package: java.lang.String mVersionName>;

        $r5.<android.content.pm.PackageParser$Package: java.lang.String mVersionName> = $r6;

        $r8 = $r5.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r7 = r22.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i3 = $r7.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        $r8.<android.content.pm.ApplicationInfo: int targetSdkVersion> = $i3;

        $r10 = $r5.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r9 = r22.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i4 = $r9.<android.content.pm.ApplicationInfo: int minSdkVersion>;

        $r10.<android.content.pm.ApplicationInfo: int minSdkVersion> = $i4;

        $r11 = <android.content.pm.PackageParser: java.util.Set CHILD_PACKAGE_TAGS>;

        r30 = specialinvoke r0.<android.content.pm.PackageParser: android.content.pm.PackageParser$Package parseBaseApkCommon(android.content.pm.PackageParser$Package,java.util.Set,android.content.res.Resources,android.content.res.XmlResourceParser,int,java.lang.String[])>($r5, $r11, r23, r1, i0, r2);

        if r30 != null goto label4;

        return 0;

     label4:
        $r12 = r22.<android.content.pm.PackageParser$Package: java.util.ArrayList childPackages>;

        if $r12 != null goto label5;

        $r14 = new java.util.ArrayList;

        specialinvoke $r14.<java.util.ArrayList: void <init>()>();

        r22.<android.content.pm.PackageParser$Package: java.util.ArrayList childPackages> = $r14;

     label5:
        $r13 = r22.<android.content.pm.PackageParser$Package: java.util.ArrayList childPackages>;

        virtualinvoke $r13.<java.util.ArrayList: boolean add(java.lang.Object)>(r30);

        r30.<android.content.pm.PackageParser$Package: android.content.pm.PackageParser$Package parentPackage> = r22;

        return 1;
    }

    private android.content.pm.PackageParser$Package parseBaseApkCommon(android.content.pm.PackageParser$Package, java.util.Set, android.content.res.Resources, android.content.res.XmlResourceParser, int, java.lang.String[]) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.pm.PackageParser r0;
        java.lang.String[] r1, $r59, $r141;
        java.lang.String r2, $r13, $r18, $r21, $r23, $r24, $r26, $r29, $r32, $r33, $r34, $r35, $r42, $r46, $r52, $r74, $r75, $r76, $r79, $r88, $r89, $r90, $r91, $r93, $r94, $r95, $r97, $r98, $r99, $r100, $r101, $r102, $r104, r112, r118, r121, r122, r131, r135, r137, r139, r140, r144, r146, r148, r150, r160;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i31, $i32, $i33, $i35, $i36, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, i67, $i69, $i70, $i71, i72, i73, i74, i75, i76, i77, i78, i79, i80, i82, i83, i84, i85, i88, i90, i91, i92, i93, $i94, i95, i96, i98, i99, i100, i101, i103, i104, i107, i108, i109, i110, i111, i112;
        int[] $r3, $r36, $r37, $r41, $r48, $r54, $r58, $r84, $r87;
        android.permission.IPermissionManager $r4;
        android.content.pm.ApplicationInfo $r5, $r6, $r7, $r8, $r9, $r11, $r20, $r55, $r56, $r57, $r60, $r61, $r114, $r115, r116, r124, r161, r162, r163, r164, r165, r166, $r167;
        java.lang.Object $r10, $r14;
        java.util.ArrayList $r12, $r15, $r16, $r17, $r22, $r25, $r27, $r30, $r38, $r39, $r40, $r43, $r44, $r45, $r49, $r50, $r51, $r53, $r67, $r68, $r77, $r78, $r81, $r82, $r85, $r86, r130;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32, $z33, $z34, $z35, $z36, $z37, $z38, $z39, $z40, $z41, $z42, $z43, $z44, z45, z46, z47, $z55;
        android.content.pm.PackageParser$NewPermissionInfo[] $r19, $r153;
        java.lang.StringBuilder $r28, $r31, $r73, $r92, $r96, $r103, r154, r156;
        char $c30, $c34;
        byte $b37, $b38;
        android.content.pm.PackageParser$Instrumentation $r47;
        java.lang.CharSequence $r62, $r63, $r64, $r65;
        android.content.pm.FeatureGroupInfo $r66;
        android.content.pm.FeatureInfo[] $r69, $r70, $r72;
        java.lang.Object[] $r71;
        android.content.pm.ConfigurationInfo $r80, $r83;
        android.os.RemoteException $r105;
        java.lang.RuntimeException $r106;
        android.content.pm.PackageParser$Package r107;
        java.util.Set r108;
        android.content.res.Resources r109;
        android.content.res.XmlResourceParser r110;
        android.content.res.TypedArray r111, r120, r126, r134, r142, r143, r145, r147, r149;
        android.content.pm.FeatureInfo r127, r132;
        android.util.TypedValue r136, r138;
        byte[] r151;
        android.content.pm.PackageParser$NewPermissionInfo r155;
        java.util.List r157, r159;
        android.content.pm.permission.SplitPermissionInfoParcelable r158;

        r0 := @this: android.content.pm.PackageParser;

        r107 := @parameter0: android.content.pm.PackageParser$Package;

        r108 := @parameter1: java.util.Set;

        r109 := @parameter2: android.content.res.Resources;

        r110 := @parameter3: android.content.res.XmlResourceParser;

        i67 := @parameter4: int;

        r1 := @parameter5: java.lang.String[];

        r0.<android.content.pm.PackageParser: android.content.pm.PackageParser$ParsePackageItemArgs mParseInstrumentationArgs> = null;

        $r3 = <com.android.internal.R$styleable: int[] AndroidManifest>;

        r111 = virtualinvoke r109.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r110, $r3);

        r2 = virtualinvoke r111.<android.content.res.TypedArray: java.lang.String getNonConfigurationString(int,int)>(0, 0);

        if r2 == null goto label002;

        $i65 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i65 <= 0 goto label002;

        r112 = staticinvoke <android.content.pm.PackageParser: java.lang.String validateName(java.lang.String,boolean,boolean)>(r2, 1, 1);

        if r112 == null goto label001;

        $r102 = "android";

        $r101 = r107.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $z44 = virtualinvoke $r102.<java.lang.String: boolean equals(java.lang.Object)>($r101);

        if $z44 != 0 goto label001;

        $r103 = new java.lang.StringBuilder;

        specialinvoke $r103.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r103.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<manifest> specifies bad sharedUserId name \"");

        virtualinvoke $r103.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r103.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\": ");

        virtualinvoke $r103.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r112);

        $r104 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.String toString()>();

        r1[0] = $r104;

        r0.<android.content.pm.PackageParser: int mParseError> = -107;

        return null;

     label001:
        $r100 = virtualinvoke r2.<java.lang.String: java.lang.String intern()>();

        r107.<android.content.pm.PackageParser$Package: java.lang.String mSharedUserId> = $r100;

        $i66 = virtualinvoke r111.<android.content.res.TypedArray: int getResourceId(int,int)>(3, 0);

        r107.<android.content.pm.PackageParser$Package: int mSharedUserLabel> = $i66;

     label002:
        $i69 = virtualinvoke r111.<android.content.res.TypedArray: int getInteger(int,int)>(4, -1);

        r107.<android.content.pm.PackageParser$Package: int installLocation> = $i69;

        $r114 = r107.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i70 = r107.<android.content.pm.PackageParser$Package: int installLocation>;

        $r114.<android.content.pm.ApplicationInfo: int installLocation> = $i70;

        i0 = virtualinvoke r111.<android.content.res.TypedArray: int getInteger(int,int)>(7, 1);

        $r115 = r107.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r115.<android.content.pm.ApplicationInfo: int targetSandboxVersion> = i0;

        $i71 = i67 & 8;

        if $i71 == 0 goto label003;

        r116 = r107.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i63 = r116.<android.content.pm.ApplicationInfo: int flags>;

        $i64 = $i63 | 262144;

        r116.<android.content.pm.ApplicationInfo: int flags> = $i64;

     label003:
        i72 = 1;

        i1 = interfaceinvoke r110.<android.content.res.XmlResourceParser: int getDepth()>();

        i73 = 1;

        i74 = 1;

        i75 = 1;

        z45 = 0;

        i76 = 1;

        i77 = 1;

     label004:
        i78 = interfaceinvoke r110.<android.content.res.XmlResourceParser: int next()>();

        if i78 == 1 goto label079;

        if i78 != 3 goto label006;

        $i62 = interfaceinvoke r110.<android.content.res.XmlResourceParser: int getDepth()>();

        if $i62 <= i1 goto label005;

        goto label006;

     label005:
        goto label079;

     label006:
        if i78 == 3 goto label078;

        if i78 != 4 goto label007;

        goto label078;

     label007:
        r118 = interfaceinvoke r110.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        if r108 == null goto label008;

        $z43 = interfaceinvoke r108.<java.util.Set: boolean contains(java.lang.Object)>(r118);

        if $z43 != 0 goto label008;

        $r96 = new java.lang.StringBuilder;

        specialinvoke $r96.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skipping unsupported element under <manifest>: ");

        virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r118);

        virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

        $r97 = r0.<android.content.pm.PackageParser: java.lang.String mArchiveSourcePath>;

        virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r97);

        virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r98 = interfaceinvoke r110.<android.content.res.XmlResourceParser: java.lang.String getPositionDescription()>();

        virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r98);

        $r99 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageParser", $r99);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r110);

        goto label078;

     label008:
        $z3 = virtualinvoke r118.<java.lang.String: boolean equals(java.lang.Object)>("application");

        if $z3 == 0 goto label011;

        if z45 == 0 goto label009;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageParser", "<manifest> has more than one <application>");

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r110);

        goto label078;

     label009:
        $z42 = specialinvoke r0.<android.content.pm.PackageParser: boolean parseBaseApplication(android.content.pm.PackageParser$Package,android.content.res.Resources,android.content.res.XmlResourceParser,int,java.lang.String[])>(r107, r109, r110, i67, r1);

        if $z42 != 0 goto label010;

        return null;

     label010:
        i79 = i72;

        i80 = i77;

        i82 = i75;

        i83 = i76;

        z46 = 1;

        i84 = i73;

        goto label077;

     label011:
        i79 = i72;

        z47 = z45;

        i85 = i77;

        $z4 = virtualinvoke r118.<java.lang.String: boolean equals(java.lang.Object)>("overlay");

        if $z4 == 0 goto label016;

        $r87 = <com.android.internal.R$styleable: int[] AndroidManifestResourceOverlay>;

        r120 = virtualinvoke r109.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r110, $r87);

        $r88 = virtualinvoke r120.<android.content.res.TypedArray: java.lang.String getString(int)>(1);

        r107.<android.content.pm.PackageParser$Package: java.lang.String mOverlayTarget> = $r88;

        $r89 = virtualinvoke r120.<android.content.res.TypedArray: java.lang.String getString(int)>(3);

        r107.<android.content.pm.PackageParser$Package: java.lang.String mOverlayTargetName> = $r89;

        $r90 = virtualinvoke r120.<android.content.res.TypedArray: java.lang.String getString(int)>(2);

        r107.<android.content.pm.PackageParser$Package: java.lang.String mOverlayCategory> = $r90;

        $i57 = virtualinvoke r120.<android.content.res.TypedArray: int getInt(int,int)>(0, 0);

        r107.<android.content.pm.PackageParser$Package: int mOverlayPriority> = $i57;

        $z40 = virtualinvoke r120.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(4, 0);

        r107.<android.content.pm.PackageParser$Package: boolean mOverlayIsStatic> = $z40;

        r121 = virtualinvoke r120.<android.content.res.TypedArray: java.lang.String getString(int)>(5);

        r122 = virtualinvoke r120.<android.content.res.TypedArray: java.lang.String getString(int)>(6);

        virtualinvoke r120.<android.content.res.TypedArray: void recycle()>();

        $r91 = r107.<android.content.pm.PackageParser$Package: java.lang.String mOverlayTarget>;

        if $r91 != null goto label012;

        r1[0] = "<overlay> does not specify a target package";

        r0.<android.content.pm.PackageParser: int mParseError> = -108;

        return null;

     label012:
        $i58 = r107.<android.content.pm.PackageParser$Package: int mOverlayPriority>;

        if $i58 < 0 goto label015;

        $i59 = r107.<android.content.pm.PackageParser$Package: int mOverlayPriority>;

        if $i59 <= 9999 goto label013;

        goto label015;

     label013:
        $z41 = staticinvoke <android.content.pm.PackageParser: boolean checkRequiredSystemProperties(java.lang.String,java.lang.String)>(r121, r122);

        if $z41 != 0 goto label014;

        $r92 = new java.lang.StringBuilder;

        specialinvoke $r92.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skipping target and overlay pair ");

        $r93 = r107.<android.content.pm.PackageParser$Package: java.lang.String mOverlayTarget>;

        virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r93);

        virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and ");

        $r94 = r107.<android.content.pm.PackageParser$Package: java.lang.String baseCodePath>;

        virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r94);

        virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": overlay ignored due to required system property: ");

        virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r121);

        virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with value: ");

        virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r122);

        $r95 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PackageParser", $r95);

        r0.<android.content.pm.PackageParser: int mParseError> = -125;

        return null;

     label014:
        r124 = r107.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i60 = r124.<android.content.pm.ApplicationInfo: int privateFlags>;

        $i61 = $i60 | 268435456;

        r124.<android.content.pm.ApplicationInfo: int privateFlags> = $i61;

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r110);

        i83 = i76;

        i80 = i77;

        z46 = z45;

        i82 = i75;

        i84 = i73;

        goto label077;

     label015:
        r1[0] = "<overlay> priority must be between 0 and 9999";

        r0.<android.content.pm.PackageParser: int mParseError> = -108;

        return null;

     label016:
        $z5 = virtualinvoke r118.<java.lang.String: boolean equals(java.lang.Object)>("key-sets");

        if $z5 == 0 goto label018;

        $z39 = specialinvoke r0.<android.content.pm.PackageParser: boolean parseKeySets(android.content.pm.PackageParser$Package,android.content.res.Resources,android.content.res.XmlResourceParser,java.lang.String[])>(r107, r109, r110, r1);

        if $z39 != 0 goto label017;

        return null;

     label017:
        goto label076;

     label018:
        $z6 = virtualinvoke r118.<java.lang.String: boolean equals(java.lang.Object)>("permission-group");

        if $z6 == 0 goto label020;

        $z38 = specialinvoke r0.<android.content.pm.PackageParser: boolean parsePermissionGroup(android.content.pm.PackageParser$Package,int,android.content.res.Resources,android.content.res.XmlResourceParser,java.lang.String[])>(r107, i67, r109, r110, r1);

        if $z38 != 0 goto label019;

        return null;

     label019:
        goto label076;

     label020:
        i88 = i76;

        $z7 = virtualinvoke r118.<java.lang.String: boolean equals(java.lang.Object)>("permission");

        if $z7 == 0 goto label022;

        $z37 = specialinvoke r0.<android.content.pm.PackageParser: boolean parsePermission(android.content.pm.PackageParser$Package,android.content.res.Resources,android.content.res.XmlResourceParser,java.lang.String[])>(r107, r109, r110, r1);

        if $z37 != 0 goto label021;

        return null;

     label021:
        goto label076;

     label022:
        $z8 = virtualinvoke r118.<java.lang.String: boolean equals(java.lang.Object)>("permission-tree");

        if $z8 == 0 goto label024;

        $z36 = specialinvoke r0.<android.content.pm.PackageParser: boolean parsePermissionTree(android.content.pm.PackageParser$Package,android.content.res.Resources,android.content.res.XmlResourceParser,java.lang.String[])>(r107, r109, r110, r1);

        if $z36 != 0 goto label023;

        return null;

     label023:
        goto label076;

     label024:
        $z9 = virtualinvoke r118.<java.lang.String: boolean equals(java.lang.Object)>("uses-permission");

        if $z9 == 0 goto label026;

        $z35 = specialinvoke r0.<android.content.pm.PackageParser: boolean parseUsesPermission(android.content.pm.PackageParser$Package,android.content.res.Resources,android.content.res.XmlResourceParser)>(r107, r109, r110);

        if $z35 != 0 goto label025;

        return null;

     label025:
        goto label076;

     label026:
        $z10 = virtualinvoke r118.<java.lang.String: boolean equals(java.lang.Object)>("uses-permission-sdk-m");

        if $z10 != 0 goto label075;

        $z12 = virtualinvoke r118.<java.lang.String: boolean equals(java.lang.Object)>("uses-permission-sdk-23");

        if $z12 == 0 goto label027;

        goto label075;

     label027:
        $z13 = virtualinvoke r118.<java.lang.String: boolean equals(java.lang.Object)>("uses-configuration");

        if $z13 == 0 goto label030;

        $r83 = new android.content.pm.ConfigurationInfo;

        specialinvoke $r83.<android.content.pm.ConfigurationInfo: void <init>()>();

        $r84 = <com.android.internal.R$styleable: int[] AndroidManifestUsesConfiguration>;

        r126 = virtualinvoke r109.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r110, $r84);

        $i50 = virtualinvoke r126.<android.content.res.TypedArray: int getInt(int,int)>(0, 0);

        $r83.<android.content.pm.ConfigurationInfo: int reqTouchScreen> = $i50;

        $i51 = virtualinvoke r126.<android.content.res.TypedArray: int getInt(int,int)>(1, 0);

        $r83.<android.content.pm.ConfigurationInfo: int reqKeyboardType> = $i51;

        $z33 = virtualinvoke r126.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(2, 0);

        if $z33 == 0 goto label028;

        $i55 = $r83.<android.content.pm.ConfigurationInfo: int reqInputFeatures>;

        $i56 = $i55 | 1;

        $r83.<android.content.pm.ConfigurationInfo: int reqInputFeatures> = $i56;

     label028:
        $i52 = virtualinvoke r126.<android.content.res.TypedArray: int getInt(int,int)>(3, 0);

        $r83.<android.content.pm.ConfigurationInfo: int reqNavigation> = $i52;

        $z34 = virtualinvoke r126.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(4, 0);

        if $z34 == 0 goto label029;

        $i53 = $r83.<android.content.pm.ConfigurationInfo: int reqInputFeatures>;

        $i54 = $i53 | 2;

        $r83.<android.content.pm.ConfigurationInfo: int reqInputFeatures> = $i54;

     label029:
        virtualinvoke r126.<android.content.res.TypedArray: void recycle()>();

        $r85 = r107.<android.content.pm.PackageParser$Package: java.util.ArrayList configPreferences>;

        $r86 = staticinvoke <com.android.internal.util.ArrayUtils: java.util.ArrayList add(java.util.ArrayList,java.lang.Object)>($r85, $r83);

        r107.<android.content.pm.PackageParser$Package: java.util.ArrayList configPreferences> = $r86;

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r110);

        i82 = i75;

        i83 = i88;

        i80 = i85;

        z46 = z47;

        i84 = i73;

        goto label077;

     label030:
        $z14 = virtualinvoke r118.<java.lang.String: boolean equals(java.lang.Object)>("uses-feature");

        if $z14 == 0 goto label032;

        r127 = specialinvoke r0.<android.content.pm.PackageParser: android.content.pm.FeatureInfo parseUsesFeature(android.content.res.Resources,android.util.AttributeSet)>(r109, r110);

        $r77 = r107.<android.content.pm.PackageParser$Package: java.util.ArrayList reqFeatures>;

        $r78 = staticinvoke <com.android.internal.util.ArrayUtils: java.util.ArrayList add(java.util.ArrayList,java.lang.Object)>($r77, r127);

        r107.<android.content.pm.PackageParser$Package: java.util.ArrayList reqFeatures> = $r78;

        $r79 = r127.<android.content.pm.FeatureInfo: java.lang.String name>;

        if $r79 != null goto label031;

        $r80 = new android.content.pm.ConfigurationInfo;

        specialinvoke $r80.<android.content.pm.ConfigurationInfo: void <init>()>();

        $i49 = r127.<android.content.pm.FeatureInfo: int reqGlEsVersion>;

        $r80.<android.content.pm.ConfigurationInfo: int reqGlEsVersion> = $i49;

        $r81 = r107.<android.content.pm.PackageParser$Package: java.util.ArrayList configPreferences>;

        $r82 = staticinvoke <com.android.internal.util.ArrayUtils: java.util.ArrayList add(java.util.ArrayList,java.lang.Object)>($r81, $r80);

        r107.<android.content.pm.PackageParser$Package: java.util.ArrayList configPreferences> = $r82;

     label031:
        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r110);

        goto label076;

     label032:
        $z15 = virtualinvoke r118.<java.lang.String: boolean equals(java.lang.Object)>("feature-group");

        if $z15 == 0 goto label042;

        $r66 = new android.content.pm.FeatureGroupInfo;

        specialinvoke $r66.<android.content.pm.FeatureGroupInfo: void <init>()>();

        r130 = null;

        i90 = interfaceinvoke r110.<android.content.res.XmlResourceParser: int getDepth()>();

     label033:
        i91 = interfaceinvoke r110.<android.content.res.XmlResourceParser: int next()>();

        if i91 == 1 goto label040;

        if i91 != 3 goto label035;

        $i48 = interfaceinvoke r110.<android.content.res.XmlResourceParser: int getDepth()>();

        if $i48 <= i90 goto label034;

        goto label035;

     label034:
        goto label040;

     label035:
        if i91 == 3 goto label039;

        if i91 != 4 goto label036;

        goto label039;

     label036:
        r131 = interfaceinvoke r110.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        $z32 = virtualinvoke r131.<java.lang.String: boolean equals(java.lang.Object)>("uses-feature");

        if $z32 == 0 goto label037;

        r132 = specialinvoke r0.<android.content.pm.PackageParser: android.content.pm.FeatureInfo parseUsesFeature(android.content.res.Resources,android.util.AttributeSet)>(r109, r110);

        $i46 = r132.<android.content.pm.FeatureInfo: int flags>;

        $i47 = $i46 | 1;

        r132.<android.content.pm.FeatureInfo: int flags> = $i47;

        r130 = staticinvoke <com.android.internal.util.ArrayUtils: java.util.ArrayList add(java.util.ArrayList,java.lang.Object)>(r130, r132);

        goto label038;

     label037:
        $r73 = new java.lang.StringBuilder;

        specialinvoke $r73.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element under <feature-group>: ");

        virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r131);

        virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

        $r74 = r0.<android.content.pm.PackageParser: java.lang.String mArchiveSourcePath>;

        virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r74);

        virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r75 = interfaceinvoke r110.<android.content.res.XmlResourceParser: java.lang.String getPositionDescription()>();

        virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r75);

        $r76 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageParser", $r76);

     label038:
        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r110);

        goto label033;

     label039:
        goto label033;

     label040:
        if r130 == null goto label041;

        $i45 = virtualinvoke r130.<java.util.ArrayList: int size()>();

        $r69 = newarray (android.content.pm.FeatureInfo)[$i45];

        $r66.<android.content.pm.FeatureGroupInfo: android.content.pm.FeatureInfo[] features> = $r69;

        $r70 = $r66.<android.content.pm.FeatureGroupInfo: android.content.pm.FeatureInfo[] features>;

        $r71 = virtualinvoke r130.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r70);

        $r72 = (android.content.pm.FeatureInfo[]) $r71;

        $r66.<android.content.pm.FeatureGroupInfo: android.content.pm.FeatureInfo[] features> = $r72;

     label041:
        $r67 = r107.<android.content.pm.PackageParser$Package: java.util.ArrayList featureGroups>;

        $r68 = staticinvoke <com.android.internal.util.ArrayUtils: java.util.ArrayList add(java.util.ArrayList,java.lang.Object)>($r67, $r66);

        r107.<android.content.pm.PackageParser$Package: java.util.ArrayList featureGroups> = $r68;

        i82 = i75;

        i83 = i88;

        i80 = i85;

        z46 = z47;

        i84 = i73;

        goto label077;

     label042:
        $z16 = virtualinvoke r118.<java.lang.String: boolean equals(java.lang.Object)>("uses-sdk");

        if $z16 == 0 goto label051;

        $i42 = <android.content.pm.PackageParser: int SDK_VERSION>;

        if $i42 <= 0 goto label050;

        $r58 = <com.android.internal.R$styleable: int[] AndroidManifestUsesSdk>;

        r134 = virtualinvoke r109.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r110, $r58);

        r135 = null;

        r136 = virtualinvoke r134.<android.content.res.TypedArray: android.util.TypedValue peekValue(int)>(0);

        i92 = 1;

        r137 = null;

        if r136 == null goto label044;

        $i44 = r136.<android.util.TypedValue: int type>;

        if $i44 != 3 goto label043;

        $r64 = r136.<android.util.TypedValue: java.lang.CharSequence string>;

        if $r64 == null goto label043;

        $r65 = r136.<android.util.TypedValue: java.lang.CharSequence string>;

        r137 = interfaceinvoke $r65.<java.lang.CharSequence: java.lang.String toString()>();

        i92 = 1;

        goto label044;

     label043:
        i92 = r136.<android.util.TypedValue: int data>;

        r137 = null;

     label044:
        r138 = virtualinvoke r134.<android.content.res.TypedArray: android.util.TypedValue peekValue(int)>(1);

        if r138 == null goto label046;

        $i43 = r138.<android.util.TypedValue: int type>;

        if $i43 != 3 goto label045;

        $r62 = r138.<android.util.TypedValue: java.lang.CharSequence string>;

        if $r62 == null goto label045;

        $r63 = r138.<android.util.TypedValue: java.lang.CharSequence string>;

        r139 = interfaceinvoke $r63.<java.lang.CharSequence: java.lang.String toString()>();

        r140 = r137;

        i93 = 0;

        r135 = r139;

        if r137 != null goto label047;

        r140 = r139;

        i93 = 0;

        r135 = r139;

        goto label047;

     label045:
        i93 = r138.<android.util.TypedValue: int data>;

        r140 = r137;

        goto label047;

     label046:
        i93 = i92;

        r135 = r137;

        r140 = r137;

     label047:
        virtualinvoke r134.<android.content.res.TypedArray: void recycle()>();

        $i94 = <android.content.pm.PackageParser: int SDK_VERSION>;

        $r141 = <android.content.pm.PackageParser: java.lang.String[] SDK_CODENAMES>;

        i95 = staticinvoke <android.content.pm.PackageParser: int computeMinSdkVersion(int,java.lang.String,int,java.lang.String[],java.lang.String[])>(i92, r140, $i94, $r141, r1);

        if i95 >= 0 goto label048;

        r0.<android.content.pm.PackageParser: int mParseError> = -12;

        return null;

     label048:
        $r59 = <android.content.pm.PackageParser: java.lang.String[] SDK_CODENAMES>;

        i96 = staticinvoke <android.content.pm.PackageParser: int computeTargetSdkVersion(int,java.lang.String,java.lang.String[],java.lang.String[])>(i93, r135, $r59, r1);

        if i96 >= 0 goto label049;

        r0.<android.content.pm.PackageParser: int mParseError> = -12;

        return null;

     label049:
        $r60 = r107.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r60.<android.content.pm.ApplicationInfo: int minSdkVersion> = i95;

        $r61 = r107.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r61.<android.content.pm.ApplicationInfo: int targetSdkVersion> = i96;

     label050:
        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r110);

        i83 = i88;

        i80 = i85;

        z46 = z47;

        i82 = i75;

        i84 = i73;

        goto label077;

     label051:
        $z17 = virtualinvoke r118.<java.lang.String: boolean equals(java.lang.Object)>("supports-screens");

        if $z17 == 0 goto label052;

        $r54 = <com.android.internal.R$styleable: int[] AndroidManifestSupportsScreens>;

        r142 = virtualinvoke r109.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r110, $r54);

        $r55 = r107.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i39 = virtualinvoke r142.<android.content.res.TypedArray: int getInteger(int,int)>(6, 0);

        $r55.<android.content.pm.ApplicationInfo: int requiresSmallestWidthDp> = $i39;

        $r56 = r107.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i40 = virtualinvoke r142.<android.content.res.TypedArray: int getInteger(int,int)>(7, 0);

        $r56.<android.content.pm.ApplicationInfo: int compatibleWidthLimitDp> = $i40;

        $r57 = r107.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i41 = virtualinvoke r142.<android.content.res.TypedArray: int getInteger(int,int)>(8, 0);

        $r57.<android.content.pm.ApplicationInfo: int largestWidthLimitDp> = $i41;

        i79 = virtualinvoke r142.<android.content.res.TypedArray: int getInteger(int,int)>(1, i72);

        i98 = virtualinvoke r142.<android.content.res.TypedArray: int getInteger(int,int)>(2, i77);

        i99 = virtualinvoke r142.<android.content.res.TypedArray: int getInteger(int,int)>(3, i76);

        i84 = virtualinvoke r142.<android.content.res.TypedArray: int getInteger(int,int)>(5, i73);

        i74 = virtualinvoke r142.<android.content.res.TypedArray: int getInteger(int,int)>(4, i74);

        i100 = virtualinvoke r142.<android.content.res.TypedArray: int getInteger(int,int)>(0, i75);

        virtualinvoke r142.<android.content.res.TypedArray: void recycle()>();

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r110);

        z46 = z45;

        i83 = i99;

        i80 = i98;

        i82 = i100;

        goto label077;

     label052:
        i101 = i73;

        i2 = i74;

        i3 = i75;

        $z18 = virtualinvoke r118.<java.lang.String: boolean equals(java.lang.Object)>("protected-broadcast");

        if $z18 == 0 goto label055;

        $r48 = <com.android.internal.R$styleable: int[] AndroidManifestProtectedBroadcast>;

        r143 = virtualinvoke r109.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r110, $r48);

        r144 = virtualinvoke r143.<android.content.res.TypedArray: java.lang.String getNonResourceString(int)>(0);

        virtualinvoke r143.<android.content.res.TypedArray: void recycle()>();

        if r144 == null goto label054;

        $r49 = r107.<android.content.pm.PackageParser$Package: java.util.ArrayList protectedBroadcasts>;

        if $r49 != null goto label053;

        $r53 = new java.util.ArrayList;

        specialinvoke $r53.<java.util.ArrayList: void <init>()>();

        r107.<android.content.pm.PackageParser$Package: java.util.ArrayList protectedBroadcasts> = $r53;

     label053:
        $r50 = r107.<android.content.pm.PackageParser$Package: java.util.ArrayList protectedBroadcasts>;

        $z31 = virtualinvoke $r50.<java.util.ArrayList: boolean contains(java.lang.Object)>(r144);

        if $z31 != 0 goto label054;

        $r51 = r107.<android.content.pm.PackageParser$Package: java.util.ArrayList protectedBroadcasts>;

        $r52 = virtualinvoke r144.<java.lang.String: java.lang.String intern()>();

        virtualinvoke $r51.<java.util.ArrayList: boolean add(java.lang.Object)>($r52);

     label054:
        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r110);

        i83 = i88;

        i82 = i3;

        i74 = i2;

        i80 = i85;

        z46 = z47;

        i84 = i101;

        goto label077;

     label055:
        $z19 = virtualinvoke r118.<java.lang.String: boolean equals(java.lang.Object)>("instrumentation");

        if $z19 == 0 goto label057;

        $r47 = specialinvoke r0.<android.content.pm.PackageParser: android.content.pm.PackageParser$Instrumentation parseInstrumentation(android.content.pm.PackageParser$Package,android.content.res.Resources,android.content.res.XmlResourceParser,java.lang.String[])>(r107, r109, r110, r1);

        if $r47 != null goto label056;

        return null;

     label056:
        goto label076;

     label057:
        $z20 = virtualinvoke r118.<java.lang.String: boolean equals(java.lang.Object)>("original-package");

        if $z20 == 0 goto label060;

        $r41 = <com.android.internal.R$styleable: int[] AndroidManifestOriginalPackage>;

        r145 = virtualinvoke r109.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r110, $r41);

        r146 = virtualinvoke r145.<android.content.res.TypedArray: java.lang.String getNonConfigurationString(int,int)>(0, 0);

        $r42 = r107.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $z30 = virtualinvoke $r42.<java.lang.String: boolean equals(java.lang.Object)>(r146);

        if $z30 != 0 goto label059;

        $r43 = r107.<android.content.pm.PackageParser$Package: java.util.ArrayList mOriginalPackages>;

        if $r43 != null goto label058;

        $r45 = new java.util.ArrayList;

        specialinvoke $r45.<java.util.ArrayList: void <init>()>();

        r107.<android.content.pm.PackageParser$Package: java.util.ArrayList mOriginalPackages> = $r45;

        $r46 = r107.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        r107.<android.content.pm.PackageParser$Package: java.lang.String mRealPackage> = $r46;

     label058:
        $r44 = r107.<android.content.pm.PackageParser$Package: java.util.ArrayList mOriginalPackages>;

        virtualinvoke $r44.<java.util.ArrayList: boolean add(java.lang.Object)>(r146);

     label059:
        virtualinvoke r145.<android.content.res.TypedArray: void recycle()>();

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r110);

        i83 = i88;

        i74 = i2;

        i84 = i101;

        i80 = i85;

        z46 = z47;

        i82 = i3;

        goto label077;

     label060:
        $z21 = virtualinvoke r118.<java.lang.String: boolean equals(java.lang.Object)>("adopt-permissions");

        if $z21 == 0 goto label063;

        $r37 = <com.android.internal.R$styleable: int[] AndroidManifestOriginalPackage>;

        r147 = virtualinvoke r109.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r110, $r37);

        r148 = virtualinvoke r147.<android.content.res.TypedArray: java.lang.String getNonConfigurationString(int,int)>(0, 0);

        virtualinvoke r147.<android.content.res.TypedArray: void recycle()>();

        if r148 == null goto label062;

        $r38 = r107.<android.content.pm.PackageParser$Package: java.util.ArrayList mAdoptPermissions>;

        if $r38 != null goto label061;

        $r40 = new java.util.ArrayList;

        specialinvoke $r40.<java.util.ArrayList: void <init>()>();

        r107.<android.content.pm.PackageParser$Package: java.util.ArrayList mAdoptPermissions> = $r40;

     label061:
        $r39 = r107.<android.content.pm.PackageParser$Package: java.util.ArrayList mAdoptPermissions>;

        virtualinvoke $r39.<java.util.ArrayList: boolean add(java.lang.Object)>(r148);

     label062:
        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r110);

        i83 = i88;

        z46 = z47;

        i74 = i2;

        i84 = i101;

        i80 = i85;

        i82 = i3;

        goto label077;

     label063:
        $z22 = virtualinvoke r118.<java.lang.String: boolean equals(java.lang.Object)>("uses-gl-texture");

        if $z22 == 0 goto label064;

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r110);

        goto label078;

     label064:
        $z23 = virtualinvoke r118.<java.lang.String: boolean equals(java.lang.Object)>("compatible-screens");

        if $z23 == 0 goto label065;

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r110);

        goto label078;

     label065:
        $z24 = virtualinvoke r118.<java.lang.String: boolean equals(java.lang.Object)>("supports-input");

        if $z24 == 0 goto label066;

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r110);

        goto label078;

     label066:
        $z25 = virtualinvoke r118.<java.lang.String: boolean equals(java.lang.Object)>("eat-comment");

        if $z25 == 0 goto label067;

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r110);

        goto label078;

     label067:
        $z26 = virtualinvoke r118.<java.lang.String: boolean equals(java.lang.Object)>("package");

        if $z26 == 0 goto label070;

        $z28 = <android.content.pm.PackageParser: boolean MULTI_PACKAGE_APK_ENABLED>;

        if $z28 != 0 goto label068;

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r110);

        goto label078;

     label068:
        $z29 = specialinvoke r0.<android.content.pm.PackageParser: boolean parseBaseApkChild(android.content.pm.PackageParser$Package,android.content.res.Resources,android.content.res.XmlResourceParser,int,java.lang.String[])>(r107, r109, r110, i67, r1);

        if $z29 != 0 goto label069;

        return null;

     label069:
        goto label076;

     label070:
        $z27 = virtualinvoke r118.<java.lang.String: boolean equals(java.lang.Object)>("restrict-update");

        if $z27 == 0 goto label074;

        $i27 = i67 & 16;

        if $i27 == 0 goto label073;

        $r36 = <com.android.internal.R$styleable: int[] AndroidManifestRestrictUpdate>;

        r149 = virtualinvoke r109.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r110, $r36);

        r150 = virtualinvoke r149.<android.content.res.TypedArray: java.lang.String getNonConfigurationString(int,int)>(0, 0);

        virtualinvoke r149.<android.content.res.TypedArray: void recycle()>();

        r107.<android.content.pm.PackageParser$Package: byte[] restrictUpdateHash> = null;

        if r150 == null goto label073;

        i103 = virtualinvoke r150.<java.lang.String: int length()>();

        $i28 = i103 / 2;

        r151 = newarray (byte)[$i28];

        i104 = 0;

     label071:
        if i104 >= i103 goto label072;

        $i29 = i104 / 2;

        $c30 = virtualinvoke r150.<java.lang.String: char charAt(int)>(i104);

        $i31 = staticinvoke <java.lang.Character: int digit(char,int)>($c30, 16);

        $i33 = $i31 << 4;

        $i32 = i104 + 1;

        $c34 = virtualinvoke r150.<java.lang.String: char charAt(int)>($i32);

        $i35 = staticinvoke <java.lang.Character: int digit(char,int)>($c34, 16);

        $i36 = $i33 + $i35;

        $b37 = (byte) $i36;

        $b38 = (byte) $b37;

        r151[$i29] = $b38;

        i104 = i104 + 2;

        goto label071;

     label072:
        r107.<android.content.pm.PackageParser$Package: byte[] restrictUpdateHash> = r151;

     label073:
        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r110);

        i82 = i3;

        i83 = i88;

        i80 = i85;

        i84 = i101;

        z46 = z47;

        i74 = i2;

        goto label077;

     label074:
        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element under <manifest>: ");

        $r32 = interfaceinvoke r110.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

        $r33 = r0.<android.content.pm.PackageParser: java.lang.String mArchiveSourcePath>;

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r34 = interfaceinvoke r110.<android.content.res.XmlResourceParser: java.lang.String getPositionDescription()>();

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        $r35 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageParser", $r35);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r110);

        goto label078;

     label075:
        $z11 = specialinvoke r0.<android.content.pm.PackageParser: boolean parseUsesPermission(android.content.pm.PackageParser$Package,android.content.res.Resources,android.content.res.XmlResourceParser)>(r107, r109, r110);

        if $z11 != 0 goto label076;

        return null;

     label076:
        i83 = i76;

        i84 = i73;

        i82 = i75;

        z46 = z47;

        i80 = i77;

     label077:
        i76 = i83;

        i77 = i80;

        i72 = i79;

        z45 = z46;

        i73 = i84;

        i75 = i82;

        goto label004;

     label078:
        goto label004;

     label079:
        i107 = i75;

        if z45 != 0 goto label080;

        $r30 = r107.<android.content.pm.PackageParser$Package: java.util.ArrayList instrumentation>;

        $i26 = virtualinvoke $r30.<java.util.ArrayList: int size()>();

        if $i26 != 0 goto label080;

        r1[0] = "<manifest> does not contain an <application> or <instrumentation>";

        r0.<android.content.pm.PackageParser: int mParseError> = -109;

     label080:
        $r153 = <android.content.pm.PackageParser: android.content.pm.PackageParser$NewPermissionInfo[] NEW_PERMISSIONS>;

        i108 = lengthof $r153;

        r154 = null;

        i109 = 0;

     label081:
        if i109 >= i108 goto label086;

        $r19 = <android.content.pm.PackageParser: android.content.pm.PackageParser$NewPermissionInfo[] NEW_PERMISSIONS>;

        r155 = $r19[i109];

        $r20 = r107.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i25 = $r20.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        $i24 = r155.<android.content.pm.PackageParser$NewPermissionInfo: int sdkVersion>;

        if $i25 < $i24 goto label082;

        goto label086;

     label082:
        r156 = r154;

        $r22 = r107.<android.content.pm.PackageParser$Package: java.util.ArrayList requestedPermissions>;

        $r21 = r155.<android.content.pm.PackageParser$NewPermissionInfo: java.lang.String name>;

        $z2 = virtualinvoke $r22.<java.util.ArrayList: boolean contains(java.lang.Object)>($r21);

        if $z2 != 0 goto label085;

        if r154 != null goto label083;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>(int)>(128);

        r154 = $r28;

        $r29 = r107.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": compat added ");

        goto label084;

     label083:
        virtualinvoke r154.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

     label084:
        $r23 = r155.<android.content.pm.PackageParser$NewPermissionInfo: java.lang.String name>;

        virtualinvoke r154.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = r107.<android.content.pm.PackageParser$Package: java.util.ArrayList requestedPermissions>;

        $r24 = r155.<android.content.pm.PackageParser$NewPermissionInfo: java.lang.String name>;

        virtualinvoke $r25.<java.util.ArrayList: boolean add(java.lang.Object)>($r24);

        $r27 = r107.<android.content.pm.PackageParser$Package: java.util.ArrayList implicitPermissions>;

        $r26 = r155.<android.content.pm.PackageParser$NewPermissionInfo: java.lang.String name>;

        virtualinvoke $r27.<java.util.ArrayList: boolean add(java.lang.Object)>($r26);

        r156 = r154;

     label085:
        i109 = i109 + 1;

        r154 = r156;

        goto label081;

     label086:
        if r154 == null goto label087;

        $r18 = virtualinvoke r154.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PackageParser", $r18);

     label087:
        $r4 = staticinvoke <android.app.ActivityThread: android.permission.IPermissionManager getPermissionManager()>();

        r157 = interfaceinvoke $r4.<android.permission.IPermissionManager: java.util.List getSplitPermissions()>();

     label088:
        i110 = interfaceinvoke r157.<java.util.List: int size()>();

        i111 = 0;

     label089:
        if i111 >= i110 goto label094;

        $r10 = interfaceinvoke r157.<java.util.List: java.lang.Object get(int)>(i111);

        r158 = (android.content.pm.permission.SplitPermissionInfoParcelable) $r10;

        $r11 = r107.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i21 = $r11.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        $i22 = virtualinvoke r158.<android.content.pm.permission.SplitPermissionInfoParcelable: int getTargetSdk()>();

        if $i21 >= $i22 goto label093;

        $r12 = r107.<android.content.pm.PackageParser$Package: java.util.ArrayList requestedPermissions>;

        $r13 = virtualinvoke r158.<android.content.pm.permission.SplitPermissionInfoParcelable: java.lang.String getSplitPermission()>();

        $z0 = virtualinvoke $r12.<java.util.ArrayList: boolean contains(java.lang.Object)>($r13);

        if $z0 != 0 goto label090;

        goto label093;

     label090:
        r159 = virtualinvoke r158.<android.content.pm.permission.SplitPermissionInfoParcelable: java.util.List getNewPermissions()>();

        i112 = 0;

     label091:
        $i23 = interfaceinvoke r159.<java.util.List: int size()>();

        if i112 >= $i23 goto label093;

        $r14 = interfaceinvoke r159.<java.util.List: java.lang.Object get(int)>(i112);

        r160 = (java.lang.String) $r14;

        $r15 = r107.<android.content.pm.PackageParser$Package: java.util.ArrayList requestedPermissions>;

        $z1 = virtualinvoke $r15.<java.util.ArrayList: boolean contains(java.lang.Object)>(r160);

        if $z1 != 0 goto label092;

        $r16 = r107.<android.content.pm.PackageParser$Package: java.util.ArrayList requestedPermissions>;

        virtualinvoke $r16.<java.util.ArrayList: boolean add(java.lang.Object)>(r160);

        $r17 = r107.<android.content.pm.PackageParser$Package: java.util.ArrayList implicitPermissions>;

        virtualinvoke $r17.<java.util.ArrayList: boolean add(java.lang.Object)>(r160);

     label092:
        i112 = i112 + 1;

        goto label091;

     label093:
        i111 = i111 + 1;

        goto label089;

     label094:
        if i72 < 0 goto label095;

        if i72 <= 0 goto label096;

        $r9 = r107.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i20 = $r9.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i20 < 4 goto label096;

     label095:
        r161 = r107.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i4 = r161.<android.content.pm.ApplicationInfo: int flags>;

        $i5 = $i4 | 512;

        r161.<android.content.pm.ApplicationInfo: int flags> = $i5;

     label096:
        if i77 == 0 goto label097;

        r162 = r107.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i18 = r162.<android.content.pm.ApplicationInfo: int flags>;

        $i19 = $i18 | 1024;

        r162.<android.content.pm.ApplicationInfo: int flags> = $i19;

     label097:
        if i76 < 0 goto label098;

        if i76 <= 0 goto label099;

        $r8 = r107.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i17 = $r8.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i17 < 4 goto label099;

     label098:
        r163 = r107.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i6 = r163.<android.content.pm.ApplicationInfo: int flags>;

        $i7 = $i6 | 2048;

        r163.<android.content.pm.ApplicationInfo: int flags> = $i7;

     label099:
        if i73 < 0 goto label100;

        if i73 <= 0 goto label101;

        $r7 = r107.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i16 = $r7.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i16 < 9 goto label101;

     label100:
        r164 = r107.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i8 = r164.<android.content.pm.ApplicationInfo: int flags>;

        $i9 = $i8 | 524288;

        r164.<android.content.pm.ApplicationInfo: int flags> = $i9;

     label101:
        if i74 < 0 goto label102;

        if i74 <= 0 goto label103;

        $r6 = r107.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i15 = $r6.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i15 < 4 goto label103;

     label102:
        r165 = r107.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i10 = r165.<android.content.pm.ApplicationInfo: int flags>;

        $i11 = $i10 | 4096;

        r165.<android.content.pm.ApplicationInfo: int flags> = $i11;

     label103:
        if i107 < 0 goto label104;

        if i107 <= 0 goto label105;

        $r5 = r107.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i14 = $r5.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i14 < 4 goto label105;

     label104:
        r166 = r107.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i12 = r166.<android.content.pm.ApplicationInfo: int flags>;

        $i13 = $i12 | 8192;

        r166.<android.content.pm.ApplicationInfo: int flags> = $i13;

     label105:
        $r167 = r107.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $z55 = virtualinvoke $r167.<android.content.pm.ApplicationInfo: boolean usesCompatibilityMode()>();

        if $z55 == 0 goto label106;

        specialinvoke r0.<android.content.pm.PackageParser: void adjustPackageToBeUnresizeableAndUnpipable(android.content.pm.PackageParser$Package)>(r107);

     label106:
        return r107;

     label107:
        $r105 := @caughtexception;

        $r106 = virtualinvoke $r105.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r106;

        catch android.os.RemoteException from label087 to label088 with label107;
    }

    private boolean parseBaseApplication(android.content.pm.PackageParser$Package, android.content.res.Resources, android.content.res.XmlResourceParser, int, java.lang.String[]) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.pm.PackageParser r0, r6, r91;
        android.content.res.XmlResourceParser r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i16, $i17, $i19, $i20, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i88, $i89, $i90, $i91, $i92, $i93, $i94, $i95, $i96, $i97, i98, $i100, $i101, $i102, $i103, i104, i105, i106;
        java.lang.String[] r2, $r77, r95, r116, r121;
        android.content.pm.ApplicationInfo r3, $r7, $r10, $r12, $r13, $r14, $r15, $r76, $r104, r149, r150;
        java.lang.String r4, $r9, $r16, $r17, $r18, $r19, $r21, $r29, $r34, $r37, $r39, $r57, $r58, $r59, $r60, $r64, $r70, $r73, $r75, $r78, $r79, $r80, $r81, $r82, $r83, $r84, $r86, $r87, $r88, r96, r97, r99, r100, r101, r102, r103, r105, r106, r107, $r108, $r109, $r111, $r112, r117, r133, r137, r138, r140, r141;
        int[] $r8, $r40, $r42, $r47, $r51;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32, $z33, $z34, $z35, $z36, $z37, $z38, $z39, $z44, $z46, $z47, $z48, $z49, $z50, $z51, $z52, $z53, $z54, $z55, $z56, $z57, $z58, $z59, $z60, z61, $z62, z63, $z64, z65, z66, z67, z68, z69, z70, z71, z72, z73, z74;
        android.content.pm.PackageParser$Package $r11, r89, r92, r122;
        float $f0, $f1;
        android.content.pm.'-$$Lambda$PackageParser$M-9fHqS_eEp1oYkuKJhRHOGUxf8' $r22;
        java.util.ArrayList $r23, $r25, $r27, $r28, $r43, $r44, $r45, $r46, $r48, $r49, $r50, $r65, $r66, $r67, $r68, $r69;
        android.content.pm.'-$$Lambda$PackageParser$0DZRgzfgaIMpCOhJqjw6PUiU5vw' $r24;
        android.content.pm.'-$$Lambda$PackageParser$0aobsT7Zf7WVZCqMZ5z2clAuQf4' $r26;
        android.content.res.TypedArray $r41, r94, r132, r136, r139;
        long $l18, $l21;
        android.content.pm.PackageParser$Callback $r85;
        android.content.res.Resources r90;
        android.util.TypedValue r98;
        byte b99;
        android.content.pm.PackageParser$Activity r118, r123, r127, r148;
        android.content.pm.PackageParser$Service r125;
        android.content.pm.PackageParser$Provider r126;
        android.os.Bundle r128, r129;
        java.lang.StringBuilder r151, r153, r154, r155;
        android.content.pm.PackageParser$CachedComponentArgs r152;
        java.util.Comparator r156, r157, r158;

        r0 := @this: android.content.pm.PackageParser;

        r89 := @parameter0: android.content.pm.PackageParser$Package;

        r90 := @parameter1: android.content.res.Resources;

        r1 := @parameter2: android.content.res.XmlResourceParser;

        i0 := @parameter3: int;

        r2 := @parameter4: java.lang.String[];

        r91 = r0;

        r92 = r89;

        r3 = r89.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r7 = r89.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        r4 = $r7.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r8 = <com.android.internal.R$styleable: int[] AndroidManifestApplication>;

        r94 = virtualinvoke r90.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r1, $r8);

        $i2 = virtualinvoke r94.<android.content.res.TypedArray: int getResourceId(int,int)>(2, 0);

        r3.<android.content.pm.ApplicationInfo: int iconRes> = $i2;

        $i3 = virtualinvoke r94.<android.content.res.TypedArray: int getResourceId(int,int)>(42, 0);

        r3.<android.content.pm.ApplicationInfo: int roundIconRes> = $i3;

        r95 = r2;

        $z0 = staticinvoke <android.content.pm.PackageParser: boolean parsePackageItemInfo(android.content.pm.PackageParser$Package,android.content.pm.PackageItemInfo,java.lang.String[],java.lang.String,android.content.res.TypedArray,boolean,int,int,int,int,int,int)>(r89, r3, r2, "<application>", r94, 0, 3, 1, 2, 42, 22, 30);

        if $z0 != 0 goto label001;

        virtualinvoke r94.<android.content.res.TypedArray: void recycle()>();

        r0.<android.content.pm.PackageParser: int mParseError> = -108;

        return 0;

     label001:
        $r9 = r3.<android.content.pm.ApplicationInfo: java.lang.String name>;

        if $r9 == null goto label002;

        $r88 = r3.<android.content.pm.ApplicationInfo: java.lang.String name>;

        r3.<android.content.pm.ApplicationInfo: java.lang.String className> = $r88;

     label002:
        r96 = virtualinvoke r94.<android.content.res.TypedArray: java.lang.String getNonConfigurationString(int,int)>(4, 1024);

        if r96 == null goto label003;

        $r87 = staticinvoke <android.content.pm.PackageParser: java.lang.String buildClassName(java.lang.String,java.lang.CharSequence,java.lang.String[])>(r4, r96, r2);

        r3.<android.content.pm.ApplicationInfo: java.lang.String manageSpaceActivityName> = $r87;

        goto label003;

     label003:
        $z1 = virtualinvoke r94.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(17, 1);

        if $z1 == 0 goto label010;

        $i87 = r3.<android.content.pm.ApplicationInfo: int flags>;

        $i88 = $i87 | 32768;

        r3.<android.content.pm.ApplicationInfo: int flags> = $i88;

        r97 = virtualinvoke r94.<android.content.res.TypedArray: java.lang.String getNonConfigurationString(int,int)>(16, 1024);

        if r97 == null goto label007;

        $r86 = staticinvoke <android.content.pm.PackageParser: java.lang.String buildClassName(java.lang.String,java.lang.CharSequence,java.lang.String[])>(r4, r97, r2);

        r3.<android.content.pm.ApplicationInfo: java.lang.String backupAgentName> = $r86;

        $z54 = virtualinvoke r94.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(18, 1);

        if $z54 == 0 goto label004;

        $i96 = r3.<android.content.pm.ApplicationInfo: int flags>;

        $i97 = $i96 | 65536;

        r3.<android.content.pm.ApplicationInfo: int flags> = $i97;

     label004:
        $z55 = virtualinvoke r94.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(21, 0);

        if $z55 == 0 goto label005;

        $i94 = r3.<android.content.pm.ApplicationInfo: int flags>;

        $i95 = $i94 | 131072;

        r3.<android.content.pm.ApplicationInfo: int flags> = $i95;

     label005:
        $z56 = virtualinvoke r94.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(32, 0);

        if $z56 == 0 goto label006;

        $i92 = r3.<android.content.pm.ApplicationInfo: int flags>;

        $i93 = $i92 | 67108864;

        r3.<android.content.pm.ApplicationInfo: int flags> = $i93;

     label006:
        $z57 = virtualinvoke r94.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(40, 0);

        if $z57 == 0 goto label007;

        $i90 = r3.<android.content.pm.ApplicationInfo: int privateFlags>;

        $i91 = $i90 | 8192;

        r3.<android.content.pm.ApplicationInfo: int privateFlags> = $i91;

     label007:
        r98 = virtualinvoke r94.<android.content.res.TypedArray: android.util.TypedValue peekValue(int)>(35);

        if r98 == null goto label010;

        i98 = r98.<android.util.TypedValue: int resourceId>;

        r3.<android.content.pm.ApplicationInfo: int fullBackupContent> = i98;

        if i98 != 0 goto label010;

        $i89 = r98.<android.util.TypedValue: int data>;

        if $i89 != 0 goto label008;

        b99 = -1;

        goto label009;

     label008:
        b99 = 0;

     label009:
        r3.<android.content.pm.ApplicationInfo: int fullBackupContent> = b99;

     label010:
        $i100 = virtualinvoke r94.<android.content.res.TypedArray: int getResourceId(int,int)>(0, 0);

        r3.<android.content.pm.ApplicationInfo: int theme> = $i100;

        $i101 = virtualinvoke r94.<android.content.res.TypedArray: int getResourceId(int,int)>(13, 0);

        r3.<android.content.pm.ApplicationInfo: int descriptionRes> = $i101;

        $z58 = virtualinvoke r94.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(8, 0);

        if $z58 == 0 goto label012;

        r99 = virtualinvoke r94.<android.content.res.TypedArray: java.lang.String getNonResourceString(int)>(45);

        if r99 == null goto label011;

        $r85 = r0.<android.content.pm.PackageParser: android.content.pm.PackageParser$Callback mCallback>;

        $z53 = interfaceinvoke $r85.<android.content.pm.PackageParser$Callback: boolean hasFeature(java.lang.String)>(r99);

        if $z53 == 0 goto label012;

     label011:
        $i85 = r3.<android.content.pm.ApplicationInfo: int flags>;

        $i86 = $i85 | 8;

        r3.<android.content.pm.ApplicationInfo: int flags> = $i86;

     label012:
        $z59 = virtualinvoke r94.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(27, 0);

        if $z59 == 0 goto label013;

        r89.<android.content.pm.PackageParser$Package: boolean mRequiredForAllUsers> = 1;

     label013:
        r100 = virtualinvoke r94.<android.content.res.TypedArray: java.lang.String getString(int)>(28);

        if r100 == null goto label014;

        $i84 = virtualinvoke r100.<java.lang.String: int length()>();

        if $i84 <= 0 goto label014;

        r89.<android.content.pm.PackageParser$Package: java.lang.String mRestrictedAccountType> = r100;

     label014:
        r101 = virtualinvoke r94.<android.content.res.TypedArray: java.lang.String getString(int)>(29);

        if r101 == null goto label015;

        $i83 = virtualinvoke r101.<java.lang.String: int length()>();

        if $i83 <= 0 goto label015;

        r89.<android.content.pm.PackageParser$Package: java.lang.String mRequiredAccountType> = r101;

     label015:
        $z60 = virtualinvoke r94.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(10, 0);

        if $z60 == 0 goto label016;

        $i79 = r3.<android.content.pm.ApplicationInfo: int flags>;

        $i80 = $i79 | 2;

        r3.<android.content.pm.ApplicationInfo: int flags> = $i80;

        $i81 = r3.<android.content.pm.ApplicationInfo: int privateFlags>;

        $i82 = $i81 | 8388608;

        r3.<android.content.pm.ApplicationInfo: int privateFlags> = $i82;

        goto label016;

     label016:
        $z2 = virtualinvoke r94.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(20, 0);

        if $z2 == 0 goto label017;

        $i77 = r3.<android.content.pm.ApplicationInfo: int flags>;

        $i78 = $i77 | 16384;

        r3.<android.content.pm.ApplicationInfo: int flags> = $i78;

     label017:
        $r10 = r89.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i4 = $r10.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i4 < 14 goto label018;

        z61 = 1;

        goto label019;

     label018:
        z61 = 0;

     label019:
        $z3 = virtualinvoke r94.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(23, z61);

        r89.<android.content.pm.PackageParser$Package: boolean baseHardwareAccelerated> = $z3;

        $z4 = r89.<android.content.pm.PackageParser$Package: boolean baseHardwareAccelerated>;

        if $z4 == 0 goto label020;

        $i75 = r3.<android.content.pm.ApplicationInfo: int flags>;

        $i76 = $i75 | 536870912;

        r3.<android.content.pm.ApplicationInfo: int flags> = $i76;

     label020:
        $z5 = virtualinvoke r94.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(7, 1);

        if $z5 == 0 goto label021;

        $i73 = r3.<android.content.pm.ApplicationInfo: int flags>;

        $i74 = $i73 | 4;

        r3.<android.content.pm.ApplicationInfo: int flags> = $i74;

     label021:
        $z6 = virtualinvoke r94.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(14, 0);

        if $z6 == 0 goto label022;

        $i71 = r3.<android.content.pm.ApplicationInfo: int flags>;

        $i72 = $i71 | 32;

        r3.<android.content.pm.ApplicationInfo: int flags> = $i72;

     label022:
        $z7 = virtualinvoke r94.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(5, 1);

        if $z7 == 0 goto label023;

        $i69 = r3.<android.content.pm.ApplicationInfo: int flags>;

        $i70 = $i69 | 64;

        r3.<android.content.pm.ApplicationInfo: int flags> = $i70;

     label023:
        $r11 = r89.<android.content.pm.PackageParser$Package: android.content.pm.PackageParser$Package parentPackage>;

        if $r11 != null goto label024;

        $z52 = virtualinvoke r94.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(15, 0);

        if $z52 == 0 goto label024;

        $i67 = r3.<android.content.pm.ApplicationInfo: int flags>;

        $i68 = $i67 | 256;

        r3.<android.content.pm.ApplicationInfo: int flags> = $i68;

     label024:
        $z62 = virtualinvoke r94.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(24, 0);

        if $z62 == 0 goto label025;

        $i65 = r3.<android.content.pm.ApplicationInfo: int flags>;

        $i66 = $i65 | 1048576;

        r3.<android.content.pm.ApplicationInfo: int flags> = $i66;

     label025:
        $r12 = r89.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i5 = $r12.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i5 >= 28 goto label026;

        z63 = 1;

        goto label027;

     label026:
        z63 = 0;

     label027:
        $z8 = virtualinvoke r94.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(36, z63);

        if $z8 == 0 goto label028;

        $i63 = r3.<android.content.pm.ApplicationInfo: int flags>;

        $i64 = $i63 | 134217728;

        r3.<android.content.pm.ApplicationInfo: int flags> = $i64;

     label028:
        $z9 = virtualinvoke r94.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(26, 0);

        if $z9 == 0 goto label029;

        $i61 = r3.<android.content.pm.ApplicationInfo: int flags>;

        $i62 = $i61 | 4194304;

        r3.<android.content.pm.ApplicationInfo: int flags> = $i62;

     label029:
        $z10 = virtualinvoke r94.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(33, 0);

        if $z10 == 0 goto label030;

        $i59 = r3.<android.content.pm.ApplicationInfo: int flags>;

        $i60 = $i59 | -2147483648;

        r3.<android.content.pm.ApplicationInfo: int flags> = $i60;

     label030:
        $z11 = virtualinvoke r94.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(34, 1);

        if $z11 == 0 goto label031;

        $i57 = r3.<android.content.pm.ApplicationInfo: int flags>;

        $i58 = $i57 | 268435456;

        r3.<android.content.pm.ApplicationInfo: int flags> = $i58;

     label031:
        $z12 = virtualinvoke r94.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(53, 0);

        if $z12 == 0 goto label032;

        $i55 = r3.<android.content.pm.ApplicationInfo: int privateFlags>;

        $i56 = $i55 | 33554432;

        r3.<android.content.pm.ApplicationInfo: int privateFlags> = $i56;

     label032:
        $z13 = virtualinvoke r94.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(38, 0);

        if $z13 == 0 goto label033;

        $i53 = r3.<android.content.pm.ApplicationInfo: int privateFlags>;

        $i54 = $i53 | 32;

        r3.<android.content.pm.ApplicationInfo: int privateFlags> = $i54;

     label033:
        $z14 = virtualinvoke r94.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(39, 0);

        if $z14 == 0 goto label034;

        $i51 = r3.<android.content.pm.ApplicationInfo: int privateFlags>;

        $i52 = $i51 | 64;

        r3.<android.content.pm.ApplicationInfo: int privateFlags> = $i52;

     label034:
        $z15 = virtualinvoke r94.<android.content.res.TypedArray: boolean hasValueOrEmpty(int)>(37);

        if $z15 == 0 goto label036;

        $z51 = virtualinvoke r94.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(37, 1);

        if $z51 == 0 goto label035;

        $i49 = r3.<android.content.pm.ApplicationInfo: int privateFlags>;

        $i50 = $i49 | 1024;

        r3.<android.content.pm.ApplicationInfo: int privateFlags> = $i50;

        goto label037;

     label035:
        $i47 = r3.<android.content.pm.ApplicationInfo: int privateFlags>;

        $i48 = $i47 | 2048;

        r3.<android.content.pm.ApplicationInfo: int privateFlags> = $i48;

        goto label037;

     label036:
        $r13 = r89.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i6 = $r13.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i6 < 24 goto label037;

        $i45 = r3.<android.content.pm.ApplicationInfo: int privateFlags>;

        $i46 = $i45 | 4096;

        r3.<android.content.pm.ApplicationInfo: int privateFlags> = $i46;

     label037:
        $z64 = virtualinvoke r94.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(54, 1);

        if $z64 == 0 goto label038;

        $i43 = r3.<android.content.pm.ApplicationInfo: int privateFlags>;

        $i44 = $i43 | 67108864;

        r3.<android.content.pm.ApplicationInfo: int privateFlags> = $i44;

     label038:
        $r14 = r89.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i7 = $r14.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i7 < 29 goto label039;

        z65 = 1;

        goto label040;

     label039:
        z65 = 0;

     label040:
        $z16 = virtualinvoke r94.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(55, z65);

        if $z16 == 0 goto label041;

        $i41 = r3.<android.content.pm.ApplicationInfo: int privateFlags>;

        $i42 = $i41 | 134217728;

        r3.<android.content.pm.ApplicationInfo: int privateFlags> = $i42;

     label041:
        $r15 = r89.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i8 = $r15.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i8 >= 29 goto label042;

        z66 = 1;

        goto label043;

     label042:
        z66 = 0;

     label043:
        $z17 = virtualinvoke r94.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(56, z66);

        if $z17 == 0 goto label044;

        $i39 = r3.<android.content.pm.ApplicationInfo: int privateFlags>;

        $i40 = $i39 | 536870912;

        r3.<android.content.pm.ApplicationInfo: int privateFlags> = $i40;

     label044:
        $z18 = virtualinvoke r94.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(59, 1);

        if $z18 == 0 goto label045;

        $i37 = r3.<android.content.pm.ApplicationInfo: int privateFlags>;

        $i38 = $i37 | -2147483648;

        r3.<android.content.pm.ApplicationInfo: int privateFlags> = $i38;

     label045:
        $f0 = virtualinvoke r94.<android.content.res.TypedArray: float getFloat(int,float)>(44, 0.0F);

        r3.<android.content.pm.ApplicationInfo: float maxAspectRatio> = $f0;

        $f1 = virtualinvoke r94.<android.content.res.TypedArray: float getFloat(int,float)>(51, 0.0F);

        r3.<android.content.pm.ApplicationInfo: float minAspectRatio> = $f1;

        $i9 = virtualinvoke r94.<android.content.res.TypedArray: int getResourceId(int,int)>(41, 0);

        r3.<android.content.pm.ApplicationInfo: int networkSecurityConfigRes> = $i9;

        $i10 = virtualinvoke r94.<android.content.res.TypedArray: int getInt(int,int)>(43, -1);

        r3.<android.content.pm.ApplicationInfo: int category> = $i10;

        r102 = virtualinvoke r94.<android.content.res.TypedArray: java.lang.String getNonConfigurationString(int,int)>(6, 0);

        if r102 == null goto label046;

        $i36 = virtualinvoke r102.<java.lang.String: int length()>();

        if $i36 <= 0 goto label046;

        r103 = virtualinvoke r102.<java.lang.String: java.lang.String intern()>();

        goto label047;

     label046:
        r103 = null;

     label047:
        r3.<android.content.pm.ApplicationInfo: java.lang.String permission> = r103;

        $r104 = r89.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i102 = $r104.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i102 < 8 goto label048;

        r105 = virtualinvoke r94.<android.content.res.TypedArray: java.lang.String getNonConfigurationString(int,int)>(12, 1024);

        goto label049;

     label048:
        r105 = virtualinvoke r94.<android.content.res.TypedArray: java.lang.String getNonResourceString(int)>(12);

     label049:
        $r17 = r3.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r16 = r3.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r18 = staticinvoke <android.content.pm.PackageParser: java.lang.String buildTaskAffinityName(java.lang.String,java.lang.String,java.lang.CharSequence,java.lang.String[])>($r17, $r16, r105, r2);

        r3.<android.content.pm.ApplicationInfo: java.lang.String taskAffinity> = $r18;

        r106 = virtualinvoke r94.<android.content.res.TypedArray: java.lang.String getNonResourceString(int)>(48);

        if r106 == null goto label050;

        $r83 = r3.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r84 = staticinvoke <android.content.pm.PackageParser: java.lang.String buildClassName(java.lang.String,java.lang.CharSequence,java.lang.String[])>($r83, r106, r2);

        r3.<android.content.pm.ApplicationInfo: java.lang.String appComponentFactory> = $r84;

     label050:
        $z19 = virtualinvoke r94.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(49, 0);

        if $z19 == 0 goto label051;

        $i34 = r3.<android.content.pm.ApplicationInfo: int privateFlags>;

        $i35 = $i34 | 4194304;

        r3.<android.content.pm.ApplicationInfo: int privateFlags> = $i35;

     label051:
        $z20 = virtualinvoke r94.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(50, 0);

        if $z20 == 0 goto label052;

        $i32 = r3.<android.content.pm.ApplicationInfo: int privateFlags>;

        $i33 = $i32 | 16777216;

        r3.<android.content.pm.ApplicationInfo: int privateFlags> = $i33;

     label052:
        $r19 = r2[0];

        if $r19 != null goto label057;

        $r76 = r89.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i27 = $r76.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i27 < 8 goto label053;

        r107 = virtualinvoke r94.<android.content.res.TypedArray: java.lang.String getNonConfigurationString(int,int)>(11, 1024);

        goto label054;

     label053:
        r107 = virtualinvoke r94.<android.content.res.TypedArray: java.lang.String getNonResourceString(int)>(11);

     label054:
        $r78 = r3.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r77 = r0.<android.content.pm.PackageParser: java.lang.String[] mSeparateProcesses>;

        $r79 = staticinvoke <android.content.pm.PackageParser: java.lang.String buildProcessName(java.lang.String,java.lang.String,java.lang.CharSequence,int,java.lang.String[],java.lang.String[])>($r78, null, r107, i0, $r77, r2);

        r3.<android.content.pm.ApplicationInfo: java.lang.String processName> = $r79;

        $z47 = virtualinvoke r94.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(9, 1);

        r3.<android.content.pm.ApplicationInfo: boolean enabled> = $z47;

        $z48 = virtualinvoke r94.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(31, 0);

        if $z48 == 0 goto label055;

        $i30 = r3.<android.content.pm.ApplicationInfo: int flags>;

        $i31 = $i30 | 33554432;

        r3.<android.content.pm.ApplicationInfo: int flags> = $i31;

     label055:
        $z49 = virtualinvoke r94.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(47, 0);

        if $z49 == 0 goto label056;

        $i28 = r3.<android.content.pm.ApplicationInfo: int privateFlags>;

        $i29 = $i28 | 2;

        r3.<android.content.pm.ApplicationInfo: int privateFlags> = $i29;

        $r80 = r3.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        if $r80 == null goto label057;

        $r82 = r3.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        $r81 = r3.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $z50 = virtualinvoke $r82.<java.lang.String: boolean equals(java.lang.Object)>($r81);

        if $z50 != 0 goto label057;

        r2[0] = "cantSaveState applications can not use custom processes";

        goto label057;

     label056:
        goto label057;

     label057:
        $i103 = virtualinvoke r94.<android.content.res.TypedArray: int getInt(int,int)>(25, 0);

        r3.<android.content.pm.ApplicationInfo: int uiOptions> = $i103;

        $r108 = virtualinvoke r94.<android.content.res.TypedArray: java.lang.String getString(int)>(46);

        r3.<android.content.pm.ApplicationInfo: java.lang.String classLoaderName> = $r108;

        $r109 = r3.<android.content.pm.ApplicationInfo: java.lang.String classLoaderName>;

        if $r109 == null goto label058;

        $r70 = r3.<android.content.pm.ApplicationInfo: java.lang.String classLoaderName>;

        $z46 = staticinvoke <com.android.internal.os.ClassLoaderFactory: boolean isValidClassLoaderName(java.lang.String)>($r70);

        if $z46 != 0 goto label058;

        r151 = new java.lang.StringBuilder;

        specialinvoke r151.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r151.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid class loader name: ");

        $r73 = r3.<android.content.pm.ApplicationInfo: java.lang.String classLoaderName>;

        virtualinvoke r151.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r73);

        $r75 = virtualinvoke r151.<java.lang.StringBuilder: java.lang.String toString()>();

        r2[0] = $r75;

     label058:
        $r111 = virtualinvoke r94.<android.content.res.TypedArray: java.lang.String getString(int)>(52);

        r3.<android.content.pm.ApplicationInfo: java.lang.String zygotePreloadName> = $r111;

        virtualinvoke r94.<android.content.res.TypedArray: void recycle()>();

        $r112 = r2[0];

        if $r112 == null goto label059;

        r0.<android.content.pm.PackageParser: int mParseError> = -108;

        return 0;

     label059:
        i104 = interfaceinvoke r1.<android.content.res.XmlResourceParser: int getDepth()>();

        r152 = new android.content.pm.PackageParser$CachedComponentArgs;

        specialinvoke r152.<android.content.pm.PackageParser$CachedComponentArgs: void <init>(android.content.pm.PackageParser$1)>(null);

        z67 = 0;

        z68 = 0;

        z69 = 0;

     label060:
        i105 = interfaceinvoke r1.<android.content.res.XmlResourceParser: int next()>();

        if i105 == 1 goto label103;

        if i105 != 3 goto label062;

        $i26 = interfaceinvoke r1.<android.content.res.XmlResourceParser: int getDepth()>();

        if $i26 <= i104 goto label061;

        goto label062;

     label061:
        goto label103;

     label062:
        if i105 == 3 goto label101;

        if i105 != 4 goto label063;

        r116 = r95;

        goto label102;

     label063:
        r117 = interfaceinvoke r1.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        $z25 = virtualinvoke r117.<java.lang.String: boolean equals(java.lang.Object)>("activity");

        if $z25 == 0 goto label067;

        $z44 = r92.<android.content.pm.PackageParser$Package: boolean baseHardwareAccelerated>;

        r118 = specialinvoke r0.<android.content.pm.PackageParser: android.content.pm.PackageParser$Activity parseActivity(android.content.pm.PackageParser$Package,android.content.res.Resources,android.content.res.XmlResourceParser,int,java.lang.String[],android.content.pm.PackageParser$CachedComponentArgs,boolean,boolean)>(r89, r90, r1, i0, r2, r152, 0, $z44);

        if r118 != null goto label064;

        r91.<android.content.pm.PackageParser: int mParseError> = -108;

        return 0;

     label064:
        $i25 = r118.<android.content.pm.PackageParser$Activity: int order>;

        if $i25 == 0 goto label065;

        z70 = 1;

        goto label066;

     label065:
        z70 = 0;

     label066:
        $r69 = r92.<android.content.pm.PackageParser$Package: java.util.ArrayList activities>;

        virtualinvoke $r69.<java.util.ArrayList: boolean add(java.lang.Object)>(r118);

        z67 = z67 | z70;

        r121 = r95;

        r122 = r92;

        goto label099;

     label067:
        $z26 = virtualinvoke r117.<java.lang.String: boolean equals(java.lang.Object)>("receiver");

        if $z26 == 0 goto label071;

        r123 = specialinvoke r0.<android.content.pm.PackageParser: android.content.pm.PackageParser$Activity parseActivity(android.content.pm.PackageParser$Package,android.content.res.Resources,android.content.res.XmlResourceParser,int,java.lang.String[],android.content.pm.PackageParser$CachedComponentArgs,boolean,boolean)>(r89, r90, r1, i0, r2, r152, 1, 0);

        if r123 != null goto label068;

        r91.<android.content.pm.PackageParser: int mParseError> = -108;

        return 0;

     label068:
        $i24 = r123.<android.content.pm.PackageParser$Activity: int order>;

        if $i24 == 0 goto label069;

        z71 = 1;

        goto label070;

     label069:
        z71 = 0;

     label070:
        r122 = r89;

        $r68 = r89.<android.content.pm.PackageParser$Package: java.util.ArrayList receivers>;

        virtualinvoke $r68.<java.util.ArrayList: boolean add(java.lang.Object)>(r123);

        r121 = r2;

        z68 = z68 | z71;

        goto label099;

     label071:
        r6 = r91;

        $z27 = virtualinvoke r117.<java.lang.String: boolean equals(java.lang.Object)>("service");

        if $z27 == 0 goto label075;

        r125 = specialinvoke r0.<android.content.pm.PackageParser: android.content.pm.PackageParser$Service parseService(android.content.pm.PackageParser$Package,android.content.res.Resources,android.content.res.XmlResourceParser,int,java.lang.String[],android.content.pm.PackageParser$CachedComponentArgs)>(r89, r90, r1, i0, r2, r152);

        if r125 != null goto label072;

        r91.<android.content.pm.PackageParser: int mParseError> = -108;

        return 0;

     label072:
        $i23 = r125.<android.content.pm.PackageParser$Service: int order>;

        if $i23 == 0 goto label073;

        z72 = 1;

        goto label074;

     label073:
        z72 = 0;

     label074:
        $r67 = r92.<android.content.pm.PackageParser$Package: java.util.ArrayList services>;

        virtualinvoke $r67.<java.util.ArrayList: boolean add(java.lang.Object)>(r125);

        r121 = r2;

        z69 = z69 | z72;

        r122 = r92;

        goto label099;

     label075:
        $z28 = virtualinvoke r117.<java.lang.String: boolean equals(java.lang.Object)>("provider");

        if $z28 == 0 goto label077;

        r126 = specialinvoke r0.<android.content.pm.PackageParser: android.content.pm.PackageParser$Provider parseProvider(android.content.pm.PackageParser$Package,android.content.res.Resources,android.content.res.XmlResourceParser,int,java.lang.String[],android.content.pm.PackageParser$CachedComponentArgs)>(r89, r90, r1, i0, r2, r152);

        if r126 != null goto label076;

        r91.<android.content.pm.PackageParser: int mParseError> = -108;

        return 0;

     label076:
        $r66 = r92.<android.content.pm.PackageParser$Package: java.util.ArrayList providers>;

        virtualinvoke $r66.<java.util.ArrayList: boolean add(java.lang.Object)>(r126);

        r121 = r2;

        r122 = r92;

        goto label099;

     label077:
        $z29 = virtualinvoke r117.<java.lang.String: boolean equals(java.lang.Object)>("activity-alias");

        if $z29 == 0 goto label081;

        r127 = specialinvoke r0.<android.content.pm.PackageParser: android.content.pm.PackageParser$Activity parseActivityAlias(android.content.pm.PackageParser$Package,android.content.res.Resources,android.content.res.XmlResourceParser,int,java.lang.String[],android.content.pm.PackageParser$CachedComponentArgs)>(r89, r90, r1, i0, r2, r152);

        if r127 != null goto label078;

        r91.<android.content.pm.PackageParser: int mParseError> = -108;

        return 0;

     label078:
        $i22 = r127.<android.content.pm.PackageParser$Activity: int order>;

        if $i22 == 0 goto label079;

        z73 = 1;

        goto label080;

     label079:
        z73 = 0;

     label080:
        $r65 = r92.<android.content.pm.PackageParser$Package: java.util.ArrayList activities>;

        virtualinvoke $r65.<java.util.ArrayList: boolean add(java.lang.Object)>(r127);

        r121 = r2;

        z67 = z67 | z73;

        r122 = r92;

        goto label099;

     label081:
        $r29 = interfaceinvoke r1.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        $z30 = virtualinvoke $r29.<java.lang.String: boolean equals(java.lang.Object)>("meta-data");

        if $z30 == 0 goto label083;

        r128 = r92.<android.content.pm.PackageParser$Package: android.os.Bundle mAppMetaData>;

        r121 = r2;

        r129 = specialinvoke r91.<android.content.pm.PackageParser: android.os.Bundle parseMetaData(android.content.res.Resources,android.content.res.XmlResourceParser,android.os.Bundle,java.lang.String[])>(r90, r1, r128, r2);

        r92.<android.content.pm.PackageParser$Package: android.os.Bundle mAppMetaData> = r129;

        if r129 != null goto label082;

        r91.<android.content.pm.PackageParser: int mParseError> = -108;

        return 0;

     label082:
        r122 = r92;

        goto label099;

     label083:
        $z31 = virtualinvoke r117.<java.lang.String: boolean equals(java.lang.Object)>("static-library");

        if $z31 == 0 goto label090;

        $r51 = <com.android.internal.R$styleable: int[] AndroidManifestStaticLibrary>;

        r132 = virtualinvoke r90.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r1, $r51);

        r133 = virtualinvoke r132.<android.content.res.TypedArray: java.lang.String getNonResourceString(int)>(0);

        i106 = virtualinvoke r132.<android.content.res.TypedArray: int getInt(int,int)>(1, -1);

        i1 = virtualinvoke r132.<android.content.res.TypedArray: int getInt(int,int)>(2, 0);

        virtualinvoke r132.<android.content.res.TypedArray: void recycle()>();

        if r133 == null goto label089;

        if i106 >= 0 goto label084;

        goto label089;

     label084:
        $r58 = r92.<android.content.pm.PackageParser$Package: java.lang.String mSharedUserId>;

        if $r58 == null goto label085;

        r2[0] = "sharedUserId not allowed in static shared library";

        r91.<android.content.pm.PackageParser: int mParseError> = -107;

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r1);

        return 0;

     label085:
        $r59 = r92.<android.content.pm.PackageParser$Package: java.lang.String staticSharedLibName>;

        if $r59 == null goto label086;

        r153 = new java.lang.StringBuilder;

        specialinvoke r153.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r153.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Multiple static-shared libs for package ");

        virtualinvoke r153.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r64 = virtualinvoke r153.<java.lang.StringBuilder: java.lang.String toString()>();

        r2[0] = $r64;

        r91.<android.content.pm.PackageParser: int mParseError> = -108;

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r1);

        return 0;

     label086:
        $r60 = virtualinvoke r133.<java.lang.String: java.lang.String intern()>();

        r92.<android.content.pm.PackageParser$Package: java.lang.String staticSharedLibName> = $r60;

        if i106 < 0 goto label087;

        $l21 = staticinvoke <android.content.pm.PackageInfo: long composeLongVersionCode(int,int)>(i1, i106);

        r92.<android.content.pm.PackageParser$Package: long staticSharedLibVersion> = $l21;

        goto label088;

     label087:
        $l18 = (long) i106;

        r92.<android.content.pm.PackageParser$Package: long staticSharedLibVersion> = $l18;

     label088:
        $i19 = r3.<android.content.pm.ApplicationInfo: int privateFlags>;

        $i20 = $i19 | 16384;

        r3.<android.content.pm.ApplicationInfo: int privateFlags> = $i20;

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r1);

        r121 = r2;

        r122 = r92;

        goto label099;

     label089:
        r154 = new java.lang.StringBuilder;

        specialinvoke r154.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r154.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad static-library declaration name: ");

        virtualinvoke r154.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r133);

        virtualinvoke r154.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" version: ");

        virtualinvoke r154.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i106);

        $r57 = virtualinvoke r154.<java.lang.StringBuilder: java.lang.String toString()>();

        r2[0] = $r57;

        r6.<android.content.pm.PackageParser: int mParseError> = -108;

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r1);

        return 0;

     label090:
        $z32 = virtualinvoke r117.<java.lang.String: boolean equals(java.lang.Object)>("library");

        if $z32 == 0 goto label092;

        $r47 = <com.android.internal.R$styleable: int[] AndroidManifestLibrary>;

        r136 = virtualinvoke r90.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r1, $r47);

        r137 = virtualinvoke r136.<android.content.res.TypedArray: java.lang.String getNonResourceString(int)>(0);

        virtualinvoke r136.<android.content.res.TypedArray: void recycle()>();

        if r137 == null goto label091;

        r138 = virtualinvoke r137.<java.lang.String: java.lang.String intern()>();

        $r48 = r92.<android.content.pm.PackageParser$Package: java.util.ArrayList libraryNames>;

        $z39 = staticinvoke <com.android.internal.util.ArrayUtils: boolean contains(java.util.Collection,java.lang.Object)>($r48, r138);

        if $z39 != 0 goto label091;

        $r49 = r92.<android.content.pm.PackageParser$Package: java.util.ArrayList libraryNames>;

        $r50 = staticinvoke <com.android.internal.util.ArrayUtils: java.util.ArrayList add(java.util.ArrayList,java.lang.Object)>($r49, r138);

        r92.<android.content.pm.PackageParser$Package: java.util.ArrayList libraryNames> = $r50;

     label091:
        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r1);

        r121 = r2;

        r122 = r92;

        goto label099;

     label092:
        $z33 = virtualinvoke r117.<java.lang.String: boolean equals(java.lang.Object)>("uses-static-library");

        if $z33 == 0 goto label093;

        r121 = r2;

        r122 = r92;

        $z38 = specialinvoke r91.<android.content.pm.PackageParser: boolean parseUsesStaticLibrary(android.content.pm.PackageParser$Package,android.content.res.Resources,android.content.res.XmlResourceParser,java.lang.String[])>(r92, r90, r1, r2);

        if $z38 != 0 goto label099;

        return 0;

     label093:
        $z34 = virtualinvoke r117.<java.lang.String: boolean equals(java.lang.Object)>("uses-library");

        if $z34 == 0 goto label096;

        $r42 = <com.android.internal.R$styleable: int[] AndroidManifestUsesLibrary>;

        r139 = virtualinvoke r90.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r1, $r42);

        r140 = virtualinvoke r139.<android.content.res.TypedArray: java.lang.String getNonResourceString(int)>(0);

        z74 = virtualinvoke r139.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(1, 1);

        virtualinvoke r139.<android.content.res.TypedArray: void recycle()>();

        if r140 == null goto label095;

        r141 = virtualinvoke r140.<java.lang.String: java.lang.String intern()>();

        if z74 == 0 goto label094;

        $r45 = r92.<android.content.pm.PackageParser$Package: java.util.ArrayList usesLibraries>;

        $r46 = staticinvoke <com.android.internal.util.ArrayUtils: java.util.ArrayList add(java.util.ArrayList,java.lang.Object)>($r45, r141);

        r92.<android.content.pm.PackageParser$Package: java.util.ArrayList usesLibraries> = $r46;

        goto label095;

     label094:
        $r43 = r92.<android.content.pm.PackageParser$Package: java.util.ArrayList usesOptionalLibraries>;

        $r44 = staticinvoke <com.android.internal.util.ArrayUtils: java.util.ArrayList add(java.util.ArrayList,java.lang.Object)>($r43, r141);

        r92.<android.content.pm.PackageParser$Package: java.util.ArrayList usesOptionalLibraries> = $r44;

     label095:
        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r1);

        r121 = r2;

        r122 = r92;

        goto label099;

     label096:
        $z35 = virtualinvoke r117.<java.lang.String: boolean equals(java.lang.Object)>("uses-package");

        if $z35 == 0 goto label097;

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r1);

        r121 = r2;

        r122 = r92;

        goto label099;

     label097:
        $z36 = virtualinvoke r117.<java.lang.String: boolean equals(java.lang.Object)>("profileable");

        if $z36 == 0 goto label100;

        $r40 = <com.android.internal.R$styleable: int[] AndroidManifestProfileable>;

        $r41 = virtualinvoke r90.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r1, $r40);

        $z37 = virtualinvoke $r41.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(0, 0);

        if $z37 == 0 goto label098;

        $i16 = r3.<android.content.pm.ApplicationInfo: int privateFlags>;

        $i17 = $i16 | 8388608;

        r3.<android.content.pm.ApplicationInfo: int privateFlags> = $i17;

     label098:
        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r1);

        r122 = r92;

        r121 = r2;

     label099:
        r95 = r121;

        r92 = r122;

        goto label060;

     label100:
        r155 = new java.lang.StringBuilder;

        specialinvoke r155.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r155.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element under <application>: ");

        virtualinvoke r155.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r117);

        virtualinvoke r155.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

        $r34 = r91.<android.content.pm.PackageParser: java.lang.String mArchiveSourcePath>;

        virtualinvoke r155.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        virtualinvoke r155.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r37 = interfaceinvoke r1.<android.content.res.XmlResourceParser: java.lang.String getPositionDescription()>();

        virtualinvoke r155.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        $r39 = virtualinvoke r155.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageParser", $r39);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r1);

        r116 = r2;

        goto label102;

     label101:
        r116 = r95;

     label102:
        r95 = r116;

        goto label060;

     label103:
        $r21 = r92.<android.content.pm.PackageParser$Package: java.lang.String staticSharedLibName>;

        $z21 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r21);

        if $z21 == 0 goto label104;

        $z23 = r92.<android.content.pm.PackageParser$Package: boolean baseHardwareAccelerated>;

        r148 = specialinvoke r91.<android.content.pm.PackageParser: android.content.pm.PackageParser$Activity generateAppDetailsHiddenActivity(android.content.pm.PackageParser$Package,int,java.lang.String[],boolean)>(r92, i0, r95, $z23);

        $r28 = r92.<android.content.pm.PackageParser$Package: java.util.ArrayList activities>;

        virtualinvoke $r28.<java.util.ArrayList: boolean add(java.lang.Object)>(r148);

        goto label104;

     label104:
        if z67 == 0 goto label105;

        $r27 = r92.<android.content.pm.PackageParser$Package: java.util.ArrayList activities>;

        $r26 = <android.content.pm._$$Lambda$PackageParser$0aobsT7Zf7WVZCqMZ5z2clAuQf4: android.content.pm.'-$$Lambda$PackageParser$0aobsT7Zf7WVZCqMZ5z2clAuQf4' INSTANCE>;

        r156 = (java.util.Comparator) $r26;

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r27, r156);

     label105:
        if z68 == 0 goto label106;

        $r25 = r92.<android.content.pm.PackageParser$Package: java.util.ArrayList receivers>;

        $r24 = <android.content.pm._$$Lambda$PackageParser$0DZRgzfgaIMpCOhJqjw6PUiU5vw: android.content.pm.'-$$Lambda$PackageParser$0DZRgzfgaIMpCOhJqjw6PUiU5vw' INSTANCE>;

        r157 = (java.util.Comparator) $r24;

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r25, r157);

     label106:
        if z69 == 0 goto label107;

        $r23 = r92.<android.content.pm.PackageParser$Package: java.util.ArrayList services>;

        $r22 = <android.content.pm._$$Lambda$PackageParser$M_9fHqS_eEp1oYkuKJhRHOGUxf8: android.content.pm.'-$$Lambda$PackageParser$M-9fHqS_eEp1oYkuKJhRHOGUxf8' INSTANCE>;

        r158 = (java.util.Comparator) $r22;

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r23, r158);

     label107:
        specialinvoke r0.<android.content.pm.PackageParser: void setMaxAspectRatio(android.content.pm.PackageParser$Package)>(r89);

        specialinvoke r0.<android.content.pm.PackageParser: void setMinAspectRatio(android.content.pm.PackageParser$Package)>(r89);

        specialinvoke r0.<android.content.pm.PackageParser: void setSupportsSizeChanges(android.content.pm.PackageParser$Package)>(r89);

        $z22 = staticinvoke <android.content.pm.PackageParser: boolean hasDomainURLs(android.content.pm.PackageParser$Package)>(r89);

        if $z22 == 0 goto label108;

        r149 = r92.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i13 = r149.<android.content.pm.ApplicationInfo: int privateFlags>;

        $i14 = $i13 | 16;

        r149.<android.content.pm.ApplicationInfo: int privateFlags> = $i14;

        goto label109;

     label108:
        r150 = r92.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i11 = r150.<android.content.pm.ApplicationInfo: int privateFlags>;

        $i12 = $i11 & -17;

        r150.<android.content.pm.ApplicationInfo: int privateFlags> = $i12;

     label109:
        return 1;
    }

    private android.content.pm.PackageParser$Package parseClusterPackage(java.io.File, int) throws android.content.pm.PackageParser$PackageParserException
    {
        android.content.pm.PackageParser r0;
        int i0, i1, i2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.String $r5, $r7, $r26, $r30, $r38;
        java.lang.String[] $r6, $r8, $r9, $r10, $r14, $r17, $r20;
        int[] $r11, $r12, $r13;
        android.content.pm.ApplicationInfo $r15, $r16, $r18;
        android.content.res.AssetManager $r19, r37;
        java.lang.Throwable $r27;
        android.content.pm.split.SplitDependencyLoader$IllegalDependencyException $r28;
        java.io.File r31, r48;
        android.content.pm.PackageParser$PackageLite r32;
        android.util.SparseArray r34;
        java.lang.Object r35;
        android.content.pm.PackageParser$Package r39;
        java.lang.StringBuilder r43, r49;
        android.content.pm.PackageParser$PackageParserException r44, r46, r50;
        android.content.pm.split.SplitAssetDependencyLoader r45;
        android.content.pm.split.DefaultSplitAssetLoader r47;
        android.content.pm.split.SplitAssetLoader r51, r52;
        java.lang.AutoCloseable r53, r54;

        r0 := @this: android.content.pm.PackageParser;

        r31 := @parameter0: java.io.File;

        i0 := @parameter1: int;

        r32 = staticinvoke <android.content.pm.PackageParser: android.content.pm.PackageParser$PackageLite parseClusterPackageLite(java.io.File,int)>(r31, 0);

        $z0 = r0.<android.content.pm.PackageParser: boolean mOnlyCoreApps>;

        if $z0 == 0 goto label02;

        $z5 = r32.<android.content.pm.PackageParser$PackageLite: boolean coreApp>;

        if $z5 == 0 goto label01;

        goto label02;

     label01:
        r43 = new java.lang.StringBuilder;

        specialinvoke r43.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not a coreApp: ");

        virtualinvoke r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r31);

        r44 = new android.content.pm.PackageParser$PackageParserException;

        $r26 = virtualinvoke r43.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r44.<android.content.pm.PackageParser$PackageParserException: void <init>(int,java.lang.String)>(-108, $r26);

        throw r44;

     label02:
        r34 = null;

        $z1 = r32.<android.content.pm.PackageParser$PackageLite: boolean isolatedSplits>;

        if $z1 == 0 goto label06;

        $r20 = r32.<android.content.pm.PackageParser$PackageLite: java.lang.String[] splitNames>;

        $z4 = staticinvoke <com.android.internal.util.ArrayUtils: boolean isEmpty(java.lang.Object[])>($r20);

        if $z4 != 0 goto label06;

     label03:
        r34 = staticinvoke <android.content.pm.split.SplitAssetDependencyLoader: android.util.SparseArray createDependenciesFromPackage(android.content.pm.PackageParser$PackageLite)>(r32);

        r45 = new android.content.pm.split.SplitAssetDependencyLoader;

        specialinvoke r45.<android.content.pm.split.SplitAssetDependencyLoader: void <init>(android.content.pm.PackageParser$PackageLite,android.util.SparseArray,int)>(r32, r34, i0);

        r35 = r45;

     label04:
        goto label07;

     label05:
        $r28 := @caughtexception;

        r46 = new android.content.pm.PackageParser$PackageParserException;

        $r30 = virtualinvoke $r28.<android.content.pm.split.SplitDependencyLoader$IllegalDependencyException: java.lang.String getMessage()>();

        specialinvoke r46.<android.content.pm.PackageParser$PackageParserException: void <init>(int,java.lang.String)>(-101, $r30);

        throw r46;

     label06:
        r47 = new android.content.pm.split.DefaultSplitAssetLoader;

        specialinvoke r47.<android.content.pm.split.DefaultSplitAssetLoader: void <init>(android.content.pm.PackageParser$PackageLite,int)>(r32, i0);

        r35 = r47;

     label07:
        r51 = (android.content.pm.split.SplitAssetLoader) r35;

        r37 = interfaceinvoke r51.<android.content.pm.split.SplitAssetLoader: android.content.res.AssetManager getBaseAssetManager()>();

        r48 = new java.io.File;

        $r38 = r32.<android.content.pm.PackageParser$PackageLite: java.lang.String baseCodePath>;

        specialinvoke r48.<java.io.File: void <init>(java.lang.String)>($r38);

        r39 = specialinvoke r0.<android.content.pm.PackageParser: android.content.pm.PackageParser$Package parseBaseApk(java.io.File,android.content.res.AssetManager,int)>(r48, r37, i0);

     label08:
        if r39 == null goto label16;

     label09:
        $r6 = r32.<android.content.pm.PackageParser$PackageLite: java.lang.String[] splitNames>;

        $z2 = staticinvoke <com.android.internal.util.ArrayUtils: boolean isEmpty(java.lang.Object[])>($r6);

        if $z2 != 0 goto label14;

        $r8 = r32.<android.content.pm.PackageParser$PackageLite: java.lang.String[] splitNames>;

        i1 = lengthof $r8;

        $r9 = r32.<android.content.pm.PackageParser$PackageLite: java.lang.String[] splitNames>;

        r39.<android.content.pm.PackageParser$Package: java.lang.String[] splitNames> = $r9;

        $r10 = r32.<android.content.pm.PackageParser$PackageLite: java.lang.String[] splitCodePaths>;

        r39.<android.content.pm.PackageParser$Package: java.lang.String[] splitCodePaths> = $r10;

        $r11 = r32.<android.content.pm.PackageParser$PackageLite: int[] splitRevisionCodes>;

        r39.<android.content.pm.PackageParser$Package: int[] splitRevisionCodes> = $r11;

        $r12 = newarray (int)[i1];

        r39.<android.content.pm.PackageParser$Package: int[] splitFlags> = $r12;

        $r13 = newarray (int)[i1];

        r39.<android.content.pm.PackageParser$Package: int[] splitPrivateFlags> = $r13;

        $r15 = r39.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r14 = r39.<android.content.pm.PackageParser$Package: java.lang.String[] splitNames>;

        $r15.<android.content.pm.ApplicationInfo: java.lang.String[] splitNames> = $r14;

        $r16 = r39.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r16.<android.content.pm.ApplicationInfo: android.util.SparseArray splitDependencies> = r34;

        $r18 = r39.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r17 = newarray (java.lang.String)[i1];

        $r18.<android.content.pm.ApplicationInfo: java.lang.String[] splitClassLoaderNames> = $r17;

     label10:
        i2 = 0;

     label11:
        if i2 >= i1 goto label14;

     label12:
        r52 = (android.content.pm.split.SplitAssetLoader) r35;

        $r19 = interfaceinvoke r52.<android.content.pm.split.SplitAssetLoader: android.content.res.AssetManager getSplitAssetManager(int)>(i2);

        specialinvoke r0.<android.content.pm.PackageParser: void parseSplitApk(android.content.pm.PackageParser$Package,int,android.content.res.AssetManager,int)>(r39, i2, $r19, i0);

     label13:
        i2 = i2 + 1;

        goto label11;

     label14:
        $r7 = r32.<android.content.pm.PackageParser$PackageLite: java.lang.String codePath>;

        virtualinvoke r39.<android.content.pm.PackageParser$Package: void setCodePath(java.lang.String)>($r7);

        $z3 = r32.<android.content.pm.PackageParser$PackageLite: boolean use32bitAbi>;

        virtualinvoke r39.<android.content.pm.PackageParser$Package: void setUse32bitAbi(boolean)>($z3);

     label15:
        r53 = (java.lang.AutoCloseable) r35;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r53);

        return r39;

     label16:
        r50 = new android.content.pm.PackageParser$PackageParserException;

        r49 = new java.lang.StringBuilder;

        specialinvoke r49.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to parse base APK: ");

        virtualinvoke r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r48);

        $r5 = virtualinvoke r49.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r50.<android.content.pm.PackageParser$PackageParserException: void <init>(int,java.lang.String)>(-100, $r5);

        throw r50;

     label17:
        $r27 := @caughtexception;

        r54 = (java.lang.AutoCloseable) r35;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r54);

        throw $r27;

        catch android.content.pm.split.SplitDependencyLoader$IllegalDependencyException from label03 to label04 with label05;
        catch java.lang.Throwable from label07 to label08 with label17;
        catch java.lang.Throwable from label09 to label10 with label17;
        catch java.lang.Throwable from label12 to label13 with label17;
        catch java.lang.Throwable from label14 to label15 with label17;
        catch java.lang.Throwable from label16 to label17 with label17;
    }

    static android.content.pm.PackageParser$PackageLite parseClusterPackageLite(java.io.File, int) throws android.content.pm.PackageParser$PackageParserException
    {
        int i0, $i1, $i2, $i3, i4, i5, i6, i7, i8, i9, i10;
        android.content.pm.PackageParser$ApkLite r0, r1, r59;
        boolean $z0, $z1, $z2, $z3, $z4;
        android.content.pm.PackageParser$PackageParserException $r2, $r8, $r29, $r38, $r48;
        android.util.ArrayMap $r3;
        java.lang.Object $r4, $r16, $r41;
        java.lang.StringBuilder $r5, $r21, $r31, $r42;
        java.lang.String $r9, $r11, $r15, $r17, $r18, $r19, $r20, $r23, $r30, $r39, $r40, $r44, $r49, r55, r58;
        android.content.pm.PackageParser$PackageLite $r10, $r52;
        java.util.Set $r12;
        java.lang.Object[] $r13;
        java.util.Comparator $r14;
        java.io.File $r50, $r51, r53, r57;
        java.io.File[] r54;
        java.lang.String[] r63, r65, r66, r67, r68, r70, r71;
        boolean[] r64;
        int[] r69;

        r53 := @parameter0: java.io.File;

        i4 := @parameter1: int;

        r54 = virtualinvoke r53.<java.io.File: java.io.File[] listFiles()>();

        $z0 = staticinvoke <com.android.internal.util.ArrayUtils: boolean isEmpty(java.lang.Object[])>(r54);

        if $z0 != 0 goto label15;

        i5 = lengthof r54;

        i6 = 0;

        if i5 != 1 goto label01;

        $r50 = r54[0];

        $z4 = virtualinvoke $r50.<java.io.File: boolean isDirectory()>();

        if $z4 == 0 goto label01;

        $r51 = r54[0];

        $r52 = staticinvoke <android.content.pm.PackageParser: android.content.pm.PackageParser$PackageLite parseClusterPackageLite(java.io.File,int)>($r51, i4);

        return $r52;

     label01:
        r55 = null;

        i7 = 0;

        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(262144L, "parseApkLite");

        $r3 = new android.util.ArrayMap;

        specialinvoke $r3.<android.util.ArrayMap: void <init>()>();

        i0 = lengthof r54;

     label02:
        if i6 >= i0 goto label09;

        r57 = r54[i6];

        r58 = r55;

        i8 = i7;

        $z2 = staticinvoke <android.content.pm.PackageParser: boolean isApkFile(java.io.File)>(r57);

        if $z2 == 0 goto label08;

        r59 = staticinvoke <android.content.pm.PackageParser: android.content.pm.PackageParser$ApkLite parseApkLite(java.io.File,int)>(r57, i4);

        if r55 != null goto label03;

        r55 = r59.<android.content.pm.PackageParser$ApkLite: java.lang.String packageName>;

        i7 = r59.<android.content.pm.PackageParser$ApkLite: int versionCode>;

        goto label04;

     label03:
        $r20 = r59.<android.content.pm.PackageParser$ApkLite: java.lang.String packageName>;

        $z3 = virtualinvoke r55.<java.lang.String: boolean equals(java.lang.Object)>($r20);

        if $z3 == 0 goto label07;

        $i2 = r59.<android.content.pm.PackageParser$ApkLite: int versionCode>;

        if i7 != $i2 goto label06;

     label04:
        $r40 = r59.<android.content.pm.PackageParser$ApkLite: java.lang.String splitName>;

        $r41 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r40, r59);

        if $r41 != null goto label05;

        r58 = r55;

        i8 = i7;

        goto label08;

     label05:
        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Split name ");

        $r44 = r59.<android.content.pm.PackageParser$ApkLite: java.lang.String splitName>;

        virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44);

        virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" defined more than once; most recent was ");

        virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r57);

        $r48 = new android.content.pm.PackageParser$PackageParserException;

        $r49 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r48.<android.content.pm.PackageParser$PackageParserException: void <init>(int,java.lang.String)>(-101, $r49);

        throw $r48;

     label06:
        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Inconsistent version ");

        $i3 = r59.<android.content.pm.PackageParser$ApkLite: int versionCode>;

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r57);

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; expected ");

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i7);

        $r38 = new android.content.pm.PackageParser$PackageParserException;

        $r39 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r38.<android.content.pm.PackageParser$PackageParserException: void <init>(int,java.lang.String)>(-101, $r39);

        throw $r38;

     label07:
        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Inconsistent package ");

        $r23 = r59.<android.content.pm.PackageParser$ApkLite: java.lang.String packageName>;

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r57);

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; expected ");

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r55);

        $r29 = new android.content.pm.PackageParser$PackageParserException;

        $r30 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r29.<android.content.pm.PackageParser$PackageParserException: void <init>(int,java.lang.String)>(-101, $r30);

        throw $r29;

     label08:
        i6 = i6 + 1;

        r55 = r58;

        i7 = i8;

        goto label02;

     label09:
        staticinvoke <android.os.Trace: void traceEnd(long)>(262144L);

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(null);

        r0 = (android.content.pm.PackageParser$ApkLite) $r4;

        if r0 == null goto label14;

        i9 = virtualinvoke $r3.<android.util.ArrayMap: int size()>();

        r63 = null;

        r64 = null;

        r65 = null;

        if i9 <= 0 goto label12;

        r66 = newarray (java.lang.String)[i9];

        r64 = newarray (boolean)[i9];

        r65 = newarray (java.lang.String)[i9];

        r67 = newarray (java.lang.String)[i9];

        r68 = newarray (java.lang.String)[i9];

        r69 = newarray (int)[i9];

        $r12 = virtualinvoke $r3.<android.util.ArrayMap: java.util.Set keySet()>();

        $r13 = interfaceinvoke $r12.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>(r66);

        r63 = (java.lang.String[]) $r13;

        $r14 = <android.content.pm.PackageParser: java.util.Comparator sSplitNameComparator>;

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>(r63, $r14);

        i10 = 0;

     label10:
        if i10 >= i9 goto label11;

        $r15 = r63[i10];

        $r16 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r15);

        r1 = (android.content.pm.PackageParser$ApkLite) $r16;

        $r17 = r1.<android.content.pm.PackageParser$ApkLite: java.lang.String usesSplitName>;

        r65[i10] = $r17;

        $z1 = r1.<android.content.pm.PackageParser$ApkLite: boolean isFeatureSplit>;

        r64[i10] = $z1;

        $r18 = r1.<android.content.pm.PackageParser$ApkLite: java.lang.String configForSplit>;

        r67[i10] = $r18;

        $r19 = r1.<android.content.pm.PackageParser$ApkLite: java.lang.String codePath>;

        r68[i10] = $r19;

        $i1 = r1.<android.content.pm.PackageParser$ApkLite: int revisionCode>;

        r69[i10] = $i1;

        i10 = i10 + 1;

        goto label10;

     label11:
        r70 = r67;

        r71 = r68;

        goto label13;

     label12:
        r70 = null;

        r71 = null;

        r69 = null;

     label13:
        $r10 = new android.content.pm.PackageParser$PackageLite;

        $r11 = virtualinvoke r53.<java.io.File: java.lang.String getAbsolutePath()>();

        specialinvoke $r10.<android.content.pm.PackageParser$PackageLite: void <init>(java.lang.String,android.content.pm.PackageParser$ApkLite,java.lang.String[],boolean[],java.lang.String[],java.lang.String[],java.lang.String[],int[])>($r11, r0, r63, r64, r65, r70, r71, r69);

        return $r10;

     label14:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Missing base APK in ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r53);

        $r8 = new android.content.pm.PackageParser$PackageParserException;

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<android.content.pm.PackageParser$PackageParserException: void <init>(int,java.lang.String)>(-101, $r9);

        throw $r8;

     label15:
        $r2 = new android.content.pm.PackageParser$PackageParserException;

        specialinvoke $r2.<android.content.pm.PackageParser$PackageParserException: void <init>(int,java.lang.String)>(-100, "No packages found in split");

        throw $r2;
    }

    private android.content.pm.PackageParser$Instrumentation parseInstrumentation(android.content.pm.PackageParser$Package, android.content.res.Resources, android.content.res.XmlResourceParser, java.lang.String[]) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.pm.PackageParser r0;
        android.content.pm.PackageParser$Package r1;
        android.content.res.Resources r2;
        android.content.res.XmlResourceParser r3;
        java.lang.String[] r4;
        android.content.res.TypedArray r5;
        int[] $r7;
        android.content.pm.PackageParser$ParsePackageItemArgs $r8, $r9, $r12, $r19;
        android.content.pm.PackageParser$Instrumentation $r10;
        android.content.pm.InstrumentationInfo $r11, $r14, $r15, $r16, r22, r25;
        java.lang.String $r13, $r17, r21, r23, r24, r26;
        boolean $z0, $z1, $z2;
        java.util.ArrayList $r18;

        r0 := @this: android.content.pm.PackageParser;

        r1 := @parameter0: android.content.pm.PackageParser$Package;

        r2 := @parameter1: android.content.res.Resources;

        r3 := @parameter2: android.content.res.XmlResourceParser;

        r4 := @parameter3: java.lang.String[];

        $r7 = <com.android.internal.R$styleable: int[] AndroidManifestInstrumentation>;

        r5 = virtualinvoke r2.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r3, $r7);

        $r8 = r0.<android.content.pm.PackageParser: android.content.pm.PackageParser$ParsePackageItemArgs mParseInstrumentationArgs>;

        if $r8 != null goto label1;

        $r19 = new android.content.pm.PackageParser$ParsePackageItemArgs;

        specialinvoke $r19.<android.content.pm.PackageParser$ParsePackageItemArgs: void <init>(android.content.pm.PackageParser$Package,java.lang.String[],int,int,int,int,int,int)>(r1, r4, 2, 0, 1, 8, 6, 7);

        r0.<android.content.pm.PackageParser: android.content.pm.PackageParser$ParsePackageItemArgs mParseInstrumentationArgs> = $r19;

        $r19.<android.content.pm.PackageParser$ParsePackageItemArgs: java.lang.String tag> = "<instrumentation>";

     label1:
        $r9 = r0.<android.content.pm.PackageParser: android.content.pm.PackageParser$ParsePackageItemArgs mParseInstrumentationArgs>;

        $r9.<android.content.pm.PackageParser$ParsePackageItemArgs: android.content.res.TypedArray sa> = r5;

        $r10 = new android.content.pm.PackageParser$Instrumentation;

        $r12 = r0.<android.content.pm.PackageParser: android.content.pm.PackageParser$ParsePackageItemArgs mParseInstrumentationArgs>;

        $r11 = new android.content.pm.InstrumentationInfo;

        specialinvoke $r11.<android.content.pm.InstrumentationInfo: void <init>()>();

        specialinvoke $r10.<android.content.pm.PackageParser$Instrumentation: void <init>(android.content.pm.PackageParser$ParsePackageItemArgs,android.content.pm.InstrumentationInfo)>($r12, $r11);

        $r13 = r4[0];

        if $r13 == null goto label2;

        virtualinvoke r5.<android.content.res.TypedArray: void recycle()>();

        r0.<android.content.pm.PackageParser: int mParseError> = -108;

        return null;

     label2:
        r21 = virtualinvoke r5.<android.content.res.TypedArray: java.lang.String getNonResourceString(int)>(3);

        r22 = $r10.<android.content.pm.PackageParser$Instrumentation: android.content.pm.InstrumentationInfo info>;

        if r21 == null goto label3;

        r23 = virtualinvoke r21.<java.lang.String: java.lang.String intern()>();

        goto label4;

     label3:
        r23 = null;

     label4:
        r22.<android.content.pm.InstrumentationInfo: java.lang.String targetPackage> = r23;

        r24 = virtualinvoke r5.<android.content.res.TypedArray: java.lang.String getNonResourceString(int)>(9);

        r25 = $r10.<android.content.pm.PackageParser$Instrumentation: android.content.pm.InstrumentationInfo info>;

        if r24 == null goto label5;

        r26 = virtualinvoke r24.<java.lang.String: java.lang.String intern()>();

        goto label6;

     label5:
        r26 = null;

     label6:
        r25.<android.content.pm.InstrumentationInfo: java.lang.String targetProcesses> = r26;

        $r14 = $r10.<android.content.pm.PackageParser$Instrumentation: android.content.pm.InstrumentationInfo info>;

        $z0 = virtualinvoke r5.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(4, 0);

        $r14.<android.content.pm.InstrumentationInfo: boolean handleProfiling> = $z0;

        $r15 = $r10.<android.content.pm.PackageParser$Instrumentation: android.content.pm.InstrumentationInfo info>;

        $z1 = virtualinvoke r5.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(5, 0);

        $r15.<android.content.pm.InstrumentationInfo: boolean functionalTest> = $z1;

        virtualinvoke r5.<android.content.res.TypedArray: void recycle()>();

        $r16 = $r10.<android.content.pm.PackageParser$Instrumentation: android.content.pm.InstrumentationInfo info>;

        $r17 = $r16.<android.content.pm.InstrumentationInfo: java.lang.String targetPackage>;

        if $r17 != null goto label7;

        r4[0] = "<instrumentation> does not specify targetPackage";

        r0.<android.content.pm.PackageParser: int mParseError> = -108;

        return null;

     label7:
        $z2 = specialinvoke r0.<android.content.pm.PackageParser: boolean parseAllMetaData(android.content.res.Resources,android.content.res.XmlResourceParser,java.lang.String,android.content.pm.PackageParser$Component,java.lang.String[])>(r2, r3, "<instrumentation>", $r10, r4);

        if $z2 != 0 goto label8;

        r0.<android.content.pm.PackageParser: int mParseError> = -108;

        return null;

     label8:
        $r18 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList instrumentation>;

        virtualinvoke $r18.<java.util.ArrayList: boolean add(java.lang.Object)>($r10);

        return $r10;
    }

    private boolean parseIntent(android.content.res.Resources, android.content.res.XmlResourceParser, boolean, boolean, android.content.pm.PackageParser$IntentInfo, java.lang.String[]) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.pm.PackageParser r0;
        android.content.res.XmlResourceParser r1;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7;
        android.content.pm.PackageParser$IntentInfo r2;
        java.lang.String[] r3;
        int i0, $i1, $i2, $i3, $i4, $i5, $i7, i9, i10, i12;
        java.lang.String r4, $r8, $r11, $r14, $r16, $r20, r24, r25, r26, r28, r30, r31, r32, r33, r34, r35, r36, r37, r38;
        int[] $r5, $r17;
        java.lang.StringBuilder $r6;
        java.lang.CharSequence $r18;
        android.content.IntentFilter$MalformedMimeTypeException $r19;
        android.content.res.Resources r21;
        android.content.res.TypedArray r22, r27;
        android.util.TypedValue r23;

        r0 := @this: android.content.pm.PackageParser;

        r21 := @parameter0: android.content.res.Resources;

        r1 := @parameter1: android.content.res.XmlResourceParser;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        r2 := @parameter4: android.content.pm.PackageParser$IntentInfo;

        r3 := @parameter5: java.lang.String[];

        $r5 = <com.android.internal.R$styleable: int[] AndroidManifestIntentFilter>;

        r22 = virtualinvoke r21.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r1, $r5);

        $i1 = virtualinvoke r22.<android.content.res.TypedArray: int getInt(int,int)>(2, 0);

        virtualinvoke r2.<android.content.pm.PackageParser$IntentInfo: void setPriority(int)>($i1);

        $i2 = virtualinvoke r22.<android.content.res.TypedArray: int getInt(int,int)>(3, 0);

        virtualinvoke r2.<android.content.pm.PackageParser$IntentInfo: void setOrder(int)>($i2);

        r23 = virtualinvoke r22.<android.content.res.TypedArray: android.util.TypedValue peekValue(int)>(0);

        if r23 == null goto label01;

        i9 = r23.<android.util.TypedValue: int resourceId>;

        r2.<android.content.pm.PackageParser$IntentInfo: int labelRes> = i9;

        if i9 != 0 goto label01;

        $r18 = virtualinvoke r23.<android.util.TypedValue: java.lang.CharSequence coerceToString()>();

        r2.<android.content.pm.PackageParser$IntentInfo: java.lang.CharSequence nonLocalizedLabel> = $r18;

     label01:
        $z7 = <android.content.pm.PackageParser: boolean sUseRoundIcon>;

        if $z7 == 0 goto label02;

        i10 = virtualinvoke r22.<android.content.res.TypedArray: int getResourceId(int,int)>(7, 0);

        goto label03;

     label02:
        i10 = 0;

     label03:
        if i10 == 0 goto label04;

        r2.<android.content.pm.PackageParser$IntentInfo: int icon> = i10;

        goto label05;

     label04:
        $i3 = virtualinvoke r22.<android.content.res.TypedArray: int getResourceId(int,int)>(1, 0);

        r2.<android.content.pm.PackageParser$IntentInfo: int icon> = $i3;

     label05:
        $i4 = virtualinvoke r22.<android.content.res.TypedArray: int getResourceId(int,int)>(4, 0);

        r2.<android.content.pm.PackageParser$IntentInfo: int logo> = $i4;

        $i5 = virtualinvoke r22.<android.content.res.TypedArray: int getResourceId(int,int)>(5, 0);

        r2.<android.content.pm.PackageParser$IntentInfo: int banner> = $i5;

        if z1 == 0 goto label06;

        $z6 = virtualinvoke r22.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(6, 0);

        virtualinvoke r2.<android.content.pm.PackageParser$IntentInfo: void setAutoVerify(boolean)>($z6);

     label06:
        virtualinvoke r22.<android.content.res.TypedArray: void recycle()>();

        i0 = interfaceinvoke r1.<android.content.res.XmlResourceParser: int getDepth()>();

     label07:
        i12 = interfaceinvoke r1.<android.content.res.XmlResourceParser: int next()>();

        if i12 == 1 goto label36;

        if i12 != 3 goto label09;

        $i7 = interfaceinvoke r1.<android.content.res.XmlResourceParser: int getDepth()>();

        if $i7 <= i0 goto label08;

        goto label09;

     label08:
        goto label36;

     label09:
        if i12 == 3 goto label35;

        if i12 != 4 goto label10;

        goto label35;

     label10:
        r24 = interfaceinvoke r1.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        $z3 = virtualinvoke r24.<java.lang.String: boolean equals(java.lang.Object)>("action");

        if $z3 == 0 goto label13;

        r25 = interfaceinvoke r1.<android.content.res.XmlResourceParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>("http://schemas.android.com/apk/res/android", "name");

        if r25 == null goto label12;

        if r25 != "" goto label11;

        goto label12;

     label11:
        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r1);

        virtualinvoke r2.<android.content.pm.PackageParser$IntentInfo: void addAction(java.lang.String)>(r25);

        goto label34;

     label12:
        r3[0] = "No value supplied for <android:name>";

        return 0;

     label13:
        $z4 = virtualinvoke r24.<java.lang.String: boolean equals(java.lang.Object)>("category");

        if $z4 == 0 goto label16;

        r26 = interfaceinvoke r1.<android.content.res.XmlResourceParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>("http://schemas.android.com/apk/res/android", "name");

        if r26 == null goto label15;

        if r26 != "" goto label14;

        goto label15;

     label14:
        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r1);

        virtualinvoke r2.<android.content.pm.PackageParser$IntentInfo: void addCategory(java.lang.String)>(r26);

        goto label34;

     label15:
        r3[0] = "No value supplied for <android:name>";

        return 0;

     label16:
        $z5 = virtualinvoke r24.<java.lang.String: boolean equals(java.lang.Object)>("data");

        if $z5 == 0 goto label33;

        $r17 = <com.android.internal.R$styleable: int[] AndroidManifestData>;

        r27 = virtualinvoke r21.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r1, $r17);

        r28 = virtualinvoke r27.<android.content.res.TypedArray: java.lang.String getNonConfigurationString(int,int)>(0, 0);

        if r28 == null goto label20;

     label17:
        virtualinvoke r2.<android.content.pm.PackageParser$IntentInfo: void addDataType(java.lang.String)>(r28);

     label18:
        goto label20;

     label19:
        $r19 := @caughtexception;

        $r20 = virtualinvoke $r19.<android.content.IntentFilter$MalformedMimeTypeException: java.lang.String toString()>();

        r3[0] = $r20;

        virtualinvoke r27.<android.content.res.TypedArray: void recycle()>();

        return 0;

     label20:
        r30 = virtualinvoke r27.<android.content.res.TypedArray: java.lang.String getNonConfigurationString(int,int)>(1, 0);

        if r30 == null goto label21;

        virtualinvoke r2.<android.content.pm.PackageParser$IntentInfo: void addDataScheme(java.lang.String)>(r30);

     label21:
        r31 = virtualinvoke r27.<android.content.res.TypedArray: java.lang.String getNonConfigurationString(int,int)>(7, 0);

        if r31 == null goto label22;

        virtualinvoke r2.<android.content.pm.PackageParser$IntentInfo: void addDataSchemeSpecificPart(java.lang.String,int)>(r31, 0);

     label22:
        r32 = virtualinvoke r27.<android.content.res.TypedArray: java.lang.String getNonConfigurationString(int,int)>(8, 0);

        if r32 == null goto label23;

        virtualinvoke r2.<android.content.pm.PackageParser$IntentInfo: void addDataSchemeSpecificPart(java.lang.String,int)>(r32, 1);

     label23:
        r33 = virtualinvoke r27.<android.content.res.TypedArray: java.lang.String getNonConfigurationString(int,int)>(9, 0);

        if r33 == null goto label25;

        if z0 != 0 goto label24;

        r3[0] = "sspPattern not allowed here; ssp must be literal";

        return 0;

     label24:
        virtualinvoke r2.<android.content.pm.PackageParser$IntentInfo: void addDataSchemeSpecificPart(java.lang.String,int)>(r33, 2);

        goto label25;

     label25:
        r34 = virtualinvoke r27.<android.content.res.TypedArray: java.lang.String getNonConfigurationString(int,int)>(2, 0);

        r4 = virtualinvoke r27.<android.content.res.TypedArray: java.lang.String getNonConfigurationString(int,int)>(3, 0);

        if r34 == null goto label26;

        virtualinvoke r2.<android.content.pm.PackageParser$IntentInfo: void addDataAuthority(java.lang.String,java.lang.String)>(r34, r4);

     label26:
        r35 = virtualinvoke r27.<android.content.res.TypedArray: java.lang.String getNonConfigurationString(int,int)>(4, 0);

        if r35 == null goto label27;

        virtualinvoke r2.<android.content.pm.PackageParser$IntentInfo: void addDataPath(java.lang.String,int)>(r35, 0);

     label27:
        r36 = virtualinvoke r27.<android.content.res.TypedArray: java.lang.String getNonConfigurationString(int,int)>(5, 0);

        if r36 == null goto label28;

        virtualinvoke r2.<android.content.pm.PackageParser$IntentInfo: void addDataPath(java.lang.String,int)>(r36, 1);

     label28:
        r37 = virtualinvoke r27.<android.content.res.TypedArray: java.lang.String getNonConfigurationString(int,int)>(6, 0);

        if r37 == null goto label30;

        if z0 != 0 goto label29;

        r3[0] = "pathPattern not allowed here; path must be literal";

        return 0;

     label29:
        virtualinvoke r2.<android.content.pm.PackageParser$IntentInfo: void addDataPath(java.lang.String,int)>(r37, 2);

        goto label30;

     label30:
        r38 = virtualinvoke r27.<android.content.res.TypedArray: java.lang.String getNonConfigurationString(int,int)>(11, 0);

        if r38 == null goto label32;

        if z0 != 0 goto label31;

        r3[0] = "pathAdvancedPattern not allowed here; path must be literal";

        return 0;

     label31:
        virtualinvoke r2.<android.content.pm.PackageParser$IntentInfo: void addDataPath(java.lang.String,int)>(r38, 3);

        goto label32;

     label32:
        virtualinvoke r27.<android.content.res.TypedArray: void recycle()>();

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r1);

        goto label34;

     label33:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element under <intent-filter>: ");

        $r8 = interfaceinvoke r1.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

        $r11 = r0.<android.content.pm.PackageParser: java.lang.String mArchiveSourcePath>;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r14 = interfaceinvoke r1.<android.content.res.XmlResourceParser: java.lang.String getPositionDescription()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageParser", $r16);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r1);

     label34:
        goto label07;

     label35:
        goto label07;

     label36:
        $z2 = virtualinvoke r2.<android.content.pm.PackageParser$IntentInfo: boolean hasCategory(java.lang.String)>("android.intent.category.DEFAULT");

        r2.<android.content.pm.PackageParser$IntentInfo: boolean hasDefault> = $z2;

        return 1;

        catch android.content.IntentFilter$MalformedMimeTypeException from label17 to label18 with label19;
    }

    private boolean parseKeySets(android.content.pm.PackageParser$Package, android.content.res.Resources, android.content.res.XmlResourceParser, java.lang.String[]) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.pm.PackageParser r0;
        java.lang.String[] r1;
        int i0, i1, $i2, $i7, $i8, i9;
        android.util.ArrayMap $r5, $r7, $r11, $r13, $r26, $r31;
        android.util.ArraySet $r6, $r8, $r24, $r25, $r29, $r33, $r73, $r107;
        java.util.Set $r9, $r10, $r12, $r14;
        boolean $z0, $z1, $z2, $z3, $z5, $z6, $z7, $z10, $z12;
        java.lang.StringBuilder $r15, $r36, $r44, $r52, $r58, $r78, $r85, $r94, $r101, $r109;
        java.lang.String $r17, $r20, $r38, $r43, $r46, $r51, $r54, $r57, $r60, $r63, $r66, $r68, $r70, $r82, $r84, $r87, $r92, $r98, $r100, $r103, $r105, $r111, $r113, r117, r119, r124, r125, r135, r139;
        java.lang.Object $r21, $r22, $r23, $r28, $r30, $r32, $r34, $r72, $r74, $r76, $r93;
        java.security.PublicKey $r35, $r77, r127;
        int[] $r69, $r71, $r106;
        android.content.pm.PackageParser$Package r114;
        android.content.res.Resources r115;
        android.content.res.XmlResourceParser r116;
        android.content.res.TypedArray r121, r123, r130;
        java.util.Iterator r133, r138;
        java.util.Map$Entry r134;

        r0 := @this: android.content.pm.PackageParser;

        r114 := @parameter0: android.content.pm.PackageParser$Package;

        r115 := @parameter1: android.content.res.Resources;

        r116 := @parameter2: android.content.res.XmlResourceParser;

        r1 := @parameter3: java.lang.String[];

        i0 = interfaceinvoke r116.<android.content.res.XmlResourceParser: int getDepth()>();

        i9 = -1;

        r117 = null;

        $r5 = new android.util.ArrayMap;

        specialinvoke $r5.<android.util.ArrayMap: void <init>()>();

        $r6 = new android.util.ArraySet;

        specialinvoke $r6.<android.util.ArraySet: void <init>()>();

        $r7 = new android.util.ArrayMap;

        specialinvoke $r7.<android.util.ArrayMap: void <init>()>();

        $r8 = new android.util.ArraySet;

        specialinvoke $r8.<android.util.ArraySet: void <init>()>();

     label01:
        i1 = interfaceinvoke r116.<android.content.res.XmlResourceParser: int next()>();

        if i1 == 1 goto label18;

        if i1 != 3 goto label03;

        $i8 = interfaceinvoke r116.<android.content.res.XmlResourceParser: int getDepth()>();

        if $i8 <= i0 goto label02;

        goto label03;

     label02:
        goto label18;

     label03:
        if i1 != 3 goto label05;

        $i7 = interfaceinvoke r116.<android.content.res.XmlResourceParser: int getDepth()>();

        if $i7 != i9 goto label04;

        r117 = null;

        i9 = -1;

        goto label01;

     label04:
        goto label17;

     label05:
        r119 = interfaceinvoke r116.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        $z5 = virtualinvoke r119.<java.lang.String: boolean equals(java.lang.Object)>("key-set");

        if $z5 == 0 goto label07;

        if r117 == null goto label06;

        $r109 = new java.lang.StringBuilder;

        specialinvoke $r109.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r109.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Improperly nested \'key-set\' tag at ");

        $r111 = interfaceinvoke r116.<android.content.res.XmlResourceParser: java.lang.String getPositionDescription()>();

        virtualinvoke $r109.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r111);

        $r113 = virtualinvoke $r109.<java.lang.StringBuilder: java.lang.String toString()>();

        r1[0] = $r113;

        r0.<android.content.pm.PackageParser: int mParseError> = -108;

        return 0;

     label06:
        $r106 = <com.android.internal.R$styleable: int[] AndroidManifestKeySet>;

        r121 = virtualinvoke r115.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r116, $r106);

        r117 = virtualinvoke r121.<android.content.res.TypedArray: java.lang.String getNonResourceString(int)>(0);

        $r107 = new android.util.ArraySet;

        specialinvoke $r107.<android.util.ArraySet: void <init>()>();

        virtualinvoke $r7.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r117, $r107);

        i9 = interfaceinvoke r116.<android.content.res.XmlResourceParser: int getDepth()>();

        virtualinvoke r121.<android.content.res.TypedArray: void recycle()>();

        goto label15;

     label07:
        $z6 = virtualinvoke r119.<java.lang.String: boolean equals(java.lang.Object)>("public-key");

        if $z6 == 0 goto label14;

        if r117 != null goto label08;

        $r101 = new java.lang.StringBuilder;

        specialinvoke $r101.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Improperly nested \'key-set\' tag at ");

        $r103 = interfaceinvoke r116.<android.content.res.XmlResourceParser: java.lang.String getPositionDescription()>();

        virtualinvoke $r101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r103);

        $r105 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.String toString()>();

        r1[0] = $r105;

        r0.<android.content.pm.PackageParser: int mParseError> = -108;

        return 0;

     label08:
        $r71 = <com.android.internal.R$styleable: int[] AndroidManifestPublicKey>;

        r123 = virtualinvoke r115.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r116, $r71);

        r124 = virtualinvoke r123.<android.content.res.TypedArray: java.lang.String getNonResourceString(int)>(0);

        r125 = virtualinvoke r123.<android.content.res.TypedArray: java.lang.String getNonResourceString(int)>(1);

        if r125 != null goto label09;

        $r93 = virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r124);

        if $r93 != null goto label09;

        $r94 = new java.lang.StringBuilder;

        specialinvoke $r94.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'public-key\' ");

        virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r124);

        virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" must define a public-key value on first use at ");

        $r98 = interfaceinvoke r116.<android.content.res.XmlResourceParser: java.lang.String getPositionDescription()>();

        virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r98);

        $r100 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.String toString()>();

        r1[0] = $r100;

        r0.<android.content.pm.PackageParser: int mParseError> = -108;

        virtualinvoke r123.<android.content.res.TypedArray: void recycle()>();

        return 0;

     label09:
        if r125 == null goto label13;

        r127 = staticinvoke <android.content.pm.PackageParser: java.security.PublicKey parsePublicKey(java.lang.String)>(r125);

        if r127 != null goto label10;

        $r85 = new java.lang.StringBuilder;

        specialinvoke $r85.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No recognized valid key in \'public-key\' tag at ");

        $r87 = interfaceinvoke r116.<android.content.res.XmlResourceParser: java.lang.String getPositionDescription()>();

        virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r87);

        virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" key-set ");

        virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r117);

        virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" will not be added to the package\'s defined key-sets.");

        $r92 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageParser", $r92);

        virtualinvoke r123.<android.content.res.TypedArray: void recycle()>();

        virtualinvoke $r8.<android.util.ArraySet: boolean add(java.lang.Object)>(r117);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r116);

        goto label17;

     label10:
        $r74 = virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r124);

        if $r74 == null goto label12;

        $r76 = virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r124);

        $r77 = (java.security.PublicKey) $r76;

        $z10 = virtualinvoke $r77.<java.lang.Object: boolean equals(java.lang.Object)>(r127);

        if $z10 == 0 goto label11;

        goto label12;

     label11:
        $r78 = new java.lang.StringBuilder;

        specialinvoke $r78.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Value of \'public-key\' ");

        virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r124);

        virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" conflicts with previously defined value at ");

        $r82 = interfaceinvoke r116.<android.content.res.XmlResourceParser: java.lang.String getPositionDescription()>();

        virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r82);

        $r84 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.String toString()>();

        r1[0] = $r84;

        r0.<android.content.pm.PackageParser: int mParseError> = -108;

        virtualinvoke r123.<android.content.res.TypedArray: void recycle()>();

        return 0;

     label12:
        virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r124, r127);

        goto label13;

     label13:
        $r72 = virtualinvoke $r7.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r117);

        $r73 = (android.util.ArraySet) $r72;

        virtualinvoke $r73.<android.util.ArraySet: boolean add(java.lang.Object)>(r124);

        virtualinvoke r123.<android.content.res.TypedArray: void recycle()>();

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r116);

        goto label15;

     label14:
        $z7 = virtualinvoke r119.<java.lang.String: boolean equals(java.lang.Object)>("upgrade-key-set");

        if $z7 == 0 goto label16;

        $r69 = <com.android.internal.R$styleable: int[] AndroidManifestUpgradeKeySet>;

        r130 = virtualinvoke r115.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r116, $r69);

        $r70 = virtualinvoke r130.<android.content.res.TypedArray: java.lang.String getNonResourceString(int)>(0);

        virtualinvoke $r6.<android.util.ArraySet: boolean add(java.lang.Object)>($r70);

        virtualinvoke r130.<android.content.res.TypedArray: void recycle()>();

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r116);

     label15:
        goto label01;

     label16:
        $r58 = new java.lang.StringBuilder;

        specialinvoke $r58.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element under <key-sets>: ");

        $r60 = interfaceinvoke r116.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r60);

        virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

        $r63 = r0.<android.content.pm.PackageParser: java.lang.String mArchiveSourcePath>;

        virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r63);

        virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r66 = interfaceinvoke r116.<android.content.res.XmlResourceParser: java.lang.String getPositionDescription()>();

        virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r66);

        $r68 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageParser", $r68);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r116);

     label17:
        goto label01;

     label18:
        $r9 = virtualinvoke $r5.<android.util.ArrayMap: java.util.Set keySet()>();

        $r10 = virtualinvoke $r7.<android.util.ArrayMap: java.util.Set keySet()>();

        $z0 = interfaceinvoke $r9.<java.util.Set: boolean removeAll(java.util.Collection)>($r10);

        if $z0 == 0 goto label19;

        $r52 = new java.lang.StringBuilder;

        specialinvoke $r52.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package");

        $r54 = r114.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r54);

        virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" AndroidManifext.xml \'key-set\' and \'public-key\' names must be distinct.");

        $r57 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();

        r1[0] = $r57;

        r0.<android.content.pm.PackageParser: int mParseError> = -108;

        return 0;

     label19:
        $r11 = new android.util.ArrayMap;

        specialinvoke $r11.<android.util.ArrayMap: void <init>()>();

        r114.<android.content.pm.PackageParser$Package: android.util.ArrayMap mKeySetMapping> = $r11;

        $r12 = virtualinvoke $r7.<android.util.ArrayMap: java.util.Set entrySet()>();

        r133 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>();

     label20:
        $z12 = interfaceinvoke r133.<java.util.Iterator: boolean hasNext()>();

        if $z12 == 0 goto label25;

        $r21 = interfaceinvoke r133.<java.util.Iterator: java.lang.Object next()>();

        r134 = (java.util.Map$Entry) $r21;

        $r22 = interfaceinvoke r134.<java.util.Map$Entry: java.lang.Object getKey()>();

        r135 = (java.lang.String) $r22;

        $r23 = interfaceinvoke r134.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r24 = (android.util.ArraySet) $r23;

        $i2 = virtualinvoke $r24.<android.util.ArraySet: int size()>();

        if $i2 != 0 goto label21;

        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package");

        $r46 = r114.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r46);

        virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" AndroidManifext.xml \'key-set\' ");

        virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r135);

        virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has no valid associated \'public-key\'. Not including in package\'s defined key-sets.");

        $r51 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageParser", $r51);

        goto label20;

     label21:
        $z2 = virtualinvoke $r8.<android.util.ArraySet: boolean contains(java.lang.Object)>(r135);

        if $z2 == 0 goto label22;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package");

        $r38 = r114.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" AndroidManifext.xml \'key-set\' ");

        virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r135);

        virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" contained improper \'public-key\' tags. Not including in package\'s defined key-sets.");

        $r43 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageParser", $r43);

        goto label20;

     label22:
        $r26 = r114.<android.content.pm.PackageParser$Package: android.util.ArrayMap mKeySetMapping>;

        $r25 = new android.util.ArraySet;

        specialinvoke $r25.<android.util.ArraySet: void <init>()>();

        virtualinvoke $r26.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r135, $r25);

        $r28 = interfaceinvoke r134.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r29 = (android.util.ArraySet) $r28;

        r138 = virtualinvoke $r29.<android.util.ArraySet: java.util.Iterator iterator()>();

     label23:
        $z3 = interfaceinvoke r138.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label24;

        $r30 = interfaceinvoke r138.<java.util.Iterator: java.lang.Object next()>();

        r139 = (java.lang.String) $r30;

        $r31 = r114.<android.content.pm.PackageParser$Package: android.util.ArrayMap mKeySetMapping>;

        $r32 = virtualinvoke $r31.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r135);

        $r33 = (android.util.ArraySet) $r32;

        $r34 = virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r139);

        $r35 = (java.security.PublicKey) $r34;

        virtualinvoke $r33.<android.util.ArraySet: boolean add(java.lang.Object)>($r35);

        goto label23;

     label24:
        goto label20;

     label25:
        $r13 = r114.<android.content.pm.PackageParser$Package: android.util.ArrayMap mKeySetMapping>;

        $r14 = virtualinvoke $r13.<android.util.ArrayMap: java.util.Set keySet()>();

        $z1 = interfaceinvoke $r14.<java.util.Set: boolean containsAll(java.util.Collection)>($r6);

        if $z1 == 0 goto label26;

        r114.<android.content.pm.PackageParser$Package: android.util.ArraySet mUpgradeKeySets> = $r6;

        return 1;

     label26:
        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package");

        $r17 = r114.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" AndroidManifext.xml does not define all \'upgrade-key-set\'s .");

        $r20 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        r1[0] = $r20;

        r0.<android.content.pm.PackageParser: int mParseError> = -108;

        return 0;
    }

    private void parseLayout(android.content.res.Resources, android.util.AttributeSet, android.content.pm.PackageParser$Activity)
    {
        android.content.pm.PackageParser r0;
        android.util.AttributeSet r1;
        android.content.pm.PackageParser$Activity r2;
        int i0, i1, i2, i3, i4, i5, i6;
        int[] $r3;
        android.content.res.Resources r4;
        android.content.res.TypedArray r5;
        float f2, f3;
        android.content.pm.ActivityInfo $r6;
        android.content.pm.ActivityInfo$WindowLayout $r7;

        r0 := @this: android.content.pm.PackageParser;

        r4 := @parameter0: android.content.res.Resources;

        r1 := @parameter1: android.util.AttributeSet;

        r2 := @parameter2: android.content.pm.PackageParser$Activity;

        $r3 = <com.android.internal.R$styleable: int[] AndroidManifestLayout>;

        r5 = virtualinvoke r4.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r1, $r3);

        i2 = -1;

        i3 = -1;

        i4 = virtualinvoke r5.<android.content.res.TypedArray: int getType(int)>(3);

        if i4 != 6 goto label1;

        f2 = virtualinvoke r5.<android.content.res.TypedArray: float getFraction(int,int,int,float)>(3, 1, 1, -1.0F);

        goto label2;

     label1:
        f2 = -1.0F;

        if i4 != 5 goto label2;

        i2 = virtualinvoke r5.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(3, -1);

        f2 = -1.0F;

     label2:
        i5 = virtualinvoke r5.<android.content.res.TypedArray: int getType(int)>(4);

        if i5 != 6 goto label3;

        f3 = virtualinvoke r5.<android.content.res.TypedArray: float getFraction(int,int,int,float)>(4, 1, 1, -1.0F);

        goto label4;

     label3:
        f3 = -1.0F;

        if i5 != 5 goto label4;

        i3 = virtualinvoke r5.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(4, -1);

        f3 = -1.0F;

     label4:
        i0 = virtualinvoke r5.<android.content.res.TypedArray: int getInt(int,int)>(0, 17);

        i6 = virtualinvoke r5.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(1, -1);

        i1 = virtualinvoke r5.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(2, -1);

        virtualinvoke r5.<android.content.res.TypedArray: void recycle()>();

        $r6 = r2.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $r7 = new android.content.pm.ActivityInfo$WindowLayout;

        specialinvoke $r7.<android.content.pm.ActivityInfo$WindowLayout: void <init>(int,float,int,float,int,int,int)>(i2, f2, i3, f3, i0, i6, i1);

        $r6.<android.content.pm.ActivityInfo: android.content.pm.ActivityInfo$WindowLayout windowLayout> = $r7;

        return;
    }

    private android.os.Bundle parseMetaData(android.content.res.Resources, android.content.res.XmlResourceParser, android.os.Bundle, java.lang.String[]) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.pm.PackageParser r0;
        android.content.res.XmlResourceParser r1;
        android.content.res.TypedArray r2;
        int[] $r3;
        int $i0, $i1, $i2, $i3, $i5, $i6, $i7, $i8, $i9;
        java.lang.StringBuilder $r4;
        java.lang.String $r6, $r9, $r12, $r14, r20, r21, r22;
        float $f0;
        android.os.Bundle $r15, r17, r19;
        android.content.res.Resources r16;
        java.lang.String[] r18;
        boolean z0;
        android.util.TypedValue r23, r24;
        java.lang.CharSequence r25;

        r0 := @this: android.content.pm.PackageParser;

        r16 := @parameter0: android.content.res.Resources;

        r1 := @parameter1: android.content.res.XmlResourceParser;

        r17 := @parameter2: android.os.Bundle;

        r18 := @parameter3: java.lang.String[];

        $r3 = <com.android.internal.R$styleable: int[] AndroidManifestMetaData>;

        r2 = virtualinvoke r16.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r1, $r3);

        r19 = r17;

        if r17 != null goto label01;

        $r15 = new android.os.Bundle;

        specialinvoke $r15.<android.os.Bundle: void <init>()>();

        r19 = $r15;

     label01:
        z0 = 0;

        r20 = virtualinvoke r2.<android.content.res.TypedArray: java.lang.String getNonConfigurationString(int,int)>(0, 0);

        r21 = null;

        if r20 != null goto label02;

        r18[0] = "<meta-data> requires an android:name attribute";

        virtualinvoke r2.<android.content.res.TypedArray: void recycle()>();

        return null;

     label02:
        r22 = virtualinvoke r20.<java.lang.String: java.lang.String intern()>();

        r23 = virtualinvoke r2.<android.content.res.TypedArray: android.util.TypedValue peekValue(int)>(2);

        if r23 == null goto label03;

        $i8 = r23.<android.util.TypedValue: int resourceId>;

        if $i8 == 0 goto label03;

        $i9 = r23.<android.util.TypedValue: int resourceId>;

        virtualinvoke r19.<android.os.Bundle: void putInt(java.lang.String,int)>(r22, $i9);

        goto label11;

     label03:
        r24 = virtualinvoke r2.<android.content.res.TypedArray: android.util.TypedValue peekValue(int)>(1);

        if r24 == null goto label10;

        $i0 = r24.<android.util.TypedValue: int type>;

        if $i0 != 3 goto label05;

        r25 = virtualinvoke r24.<android.util.TypedValue: java.lang.CharSequence coerceToString()>();

        if r25 == null goto label04;

        r21 = interfaceinvoke r25.<java.lang.CharSequence: java.lang.String toString()>();

     label04:
        virtualinvoke r19.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>(r22, r21);

        goto label11;

     label05:
        $i1 = r24.<android.util.TypedValue: int type>;

        if $i1 != 18 goto label07;

        $i7 = r24.<android.util.TypedValue: int data>;

        if $i7 == 0 goto label06;

        z0 = 1;

     label06:
        virtualinvoke r19.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>(r22, z0);

        goto label11;

     label07:
        $i2 = r24.<android.util.TypedValue: int type>;

        if $i2 < 16 goto label08;

        $i5 = r24.<android.util.TypedValue: int type>;

        if $i5 > 31 goto label08;

        $i6 = r24.<android.util.TypedValue: int data>;

        virtualinvoke r19.<android.os.Bundle: void putInt(java.lang.String,int)>(r22, $i6);

        goto label11;

     label08:
        $i3 = r24.<android.util.TypedValue: int type>;

        if $i3 != 4 goto label09;

        $f0 = virtualinvoke r24.<android.util.TypedValue: float getFloat()>();

        virtualinvoke r19.<android.os.Bundle: void putFloat(java.lang.String,float)>(r22, $f0);

        goto label11;

     label09:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<meta-data> only supports string, integer, float, color, boolean, and resource reference types: ");

        $r6 = interfaceinvoke r1.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

        $r9 = r0.<android.content.pm.PackageParser: java.lang.String mArchiveSourcePath>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r12 = interfaceinvoke r1.<android.content.res.XmlResourceParser: java.lang.String getPositionDescription()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageParser", $r14);

        goto label11;

     label10:
        r18[0] = "<meta-data> requires an android:value or android:resource attribute";

        r19 = null;

     label11:
        virtualinvoke r2.<android.content.res.TypedArray: void recycle()>();

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r1);

        return r19;
    }

    private static android.content.pm.PackageParser$PackageLite parseMonolithicPackageLite(java.io.File, int) throws android.content.pm.PackageParser$PackageParserException
    {
        int i0;
        android.content.pm.PackageParser$ApkLite r0;
        android.content.pm.PackageParser$PackageLite $r1;
        java.io.File r2;
        java.lang.String r3;

        r2 := @parameter0: java.io.File;

        i0 := @parameter1: int;

        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(262144L, "parseApkLite");

        r0 = staticinvoke <android.content.pm.PackageParser: android.content.pm.PackageParser$ApkLite parseApkLite(java.io.File,int)>(r2, i0);

        r3 = virtualinvoke r2.<java.io.File: java.lang.String getAbsolutePath()>();

        staticinvoke <android.os.Trace: void traceEnd(long)>(262144L);

        $r1 = new android.content.pm.PackageParser$PackageLite;

        specialinvoke $r1.<android.content.pm.PackageParser$PackageLite: void <init>(java.lang.String,android.content.pm.PackageParser$ApkLite,java.lang.String[],boolean[],java.lang.String[],java.lang.String[],java.lang.String[],int[])>(r3, r0, null, null, null, null, null, null);

        return $r1;
    }

    private static boolean parsePackageItemInfo(android.content.pm.PackageParser$Package, android.content.pm.PackageItemInfo, java.lang.String[], java.lang.String, android.content.res.TypedArray, boolean, int, int, int, int, int, int)
    {
        android.content.pm.PackageItemInfo r0;
        java.lang.String r1, $r4, $r5, $r10, $r14, $r18, r22, r24, $r27;
        android.content.res.TypedArray r2;
        boolean z0, $z1, $z2;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10;
        android.content.pm.ApplicationInfo $r3;
        java.lang.CharSequence $r6;
        java.lang.StringBuilder $r7, $r11, $r15;
        android.content.pm.PackageParser$Package r19;
        java.lang.String[] r20;
        android.util.TypedValue r26;

        r19 := @parameter0: android.content.pm.PackageParser$Package;

        r0 := @parameter1: android.content.pm.PackageItemInfo;

        r20 := @parameter2: java.lang.String[];

        r1 := @parameter3: java.lang.String;

        r2 := @parameter4: android.content.res.TypedArray;

        z0 := @parameter5: boolean;

        i5 := @parameter6: int;

        i0 := @parameter7: int;

        i1 := @parameter8: int;

        i2 := @parameter9: int;

        i3 := @parameter10: int;

        i4 := @parameter11: int;

        if r2 != null goto label01;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not contain any attributes");

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        r20[0] = $r18;

        return 0;

     label01:
        r22 = virtualinvoke r2.<android.content.res.TypedArray: java.lang.String getNonConfigurationString(int,int)>(i5, 0);

        if r22 != null goto label02;

        if z0 == 0 goto label04;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not specify android:name");

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        r20[0] = $r14;

        return 0;

     label02:
        $r3 = r19.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r4 = $r3.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        r24 = staticinvoke <android.content.pm.PackageParser: java.lang.String buildClassName(java.lang.String,java.lang.CharSequence,java.lang.String[])>($r4, r22, r20);

        $r5 = <android.content.pm.PackageManager: java.lang.String APP_DETAILS_ACTIVITY_CLASS_NAME>;

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r24);

        if $z1 == 0 goto label03;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" invalid android:name");

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        r20[0] = $r10;

        return 0;

     label03:
        r0.<android.content.pm.PackageItemInfo: java.lang.String name> = r24;

        if r24 != null goto label04;

        return 0;

     label04:
        $z2 = <android.content.pm.PackageParser: boolean sUseRoundIcon>;

        if $z2 == 0 goto label05;

        i6 = virtualinvoke r2.<android.content.res.TypedArray: int getResourceId(int,int)>(i2, 0);

        goto label06;

     label05:
        i6 = 0;

     label06:
        if i6 == 0 goto label07;

        r0.<android.content.pm.PackageItemInfo: int icon> = i6;

        r0.<android.content.pm.PackageItemInfo: java.lang.CharSequence nonLocalizedLabel> = null;

        goto label08;

     label07:
        i7 = virtualinvoke r2.<android.content.res.TypedArray: int getResourceId(int,int)>(i1, 0);

        if i7 == 0 goto label08;

        r0.<android.content.pm.PackageItemInfo: int icon> = i7;

        r0.<android.content.pm.PackageItemInfo: java.lang.CharSequence nonLocalizedLabel> = null;

     label08:
        i8 = virtualinvoke r2.<android.content.res.TypedArray: int getResourceId(int,int)>(i3, 0);

        if i8 == 0 goto label09;

        r0.<android.content.pm.PackageItemInfo: int logo> = i8;

     label09:
        i9 = virtualinvoke r2.<android.content.res.TypedArray: int getResourceId(int,int)>(i4, 0);

        if i9 == 0 goto label10;

        r0.<android.content.pm.PackageItemInfo: int banner> = i9;

     label10:
        r26 = virtualinvoke r2.<android.content.res.TypedArray: android.util.TypedValue peekValue(int)>(i0);

        if r26 == null goto label11;

        i10 = r26.<android.util.TypedValue: int resourceId>;

        r0.<android.content.pm.PackageItemInfo: int labelRes> = i10;

        if i10 != 0 goto label11;

        $r6 = virtualinvoke r26.<android.util.TypedValue: java.lang.CharSequence coerceToString()>();

        r0.<android.content.pm.PackageItemInfo: java.lang.CharSequence nonLocalizedLabel> = $r6;

     label11:
        $r27 = r19.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        r0.<android.content.pm.PackageItemInfo: java.lang.String packageName> = $r27;

        return 1;
    }

    public static android.content.pm.PackageParser$PackageLite parsePackageLite(java.io.File, int) throws android.content.pm.PackageParser$PackageParserException
    {
        java.io.File r0;
        int i0;
        boolean $z0;
        android.content.pm.PackageParser$PackageLite $r1, $r2;

        r0 := @parameter0: java.io.File;

        i0 := @parameter1: int;

        $z0 = virtualinvoke r0.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label1;

        $r2 = staticinvoke <android.content.pm.PackageParser: android.content.pm.PackageParser$PackageLite parseClusterPackageLite(java.io.File,int)>(r0, i0);

        return $r2;

     label1:
        $r1 = staticinvoke <android.content.pm.PackageParser: android.content.pm.PackageParser$PackageLite parseMonolithicPackageLite(java.io.File,int)>(r0, i0);

        return $r1;
    }

    public static android.util.Pair parsePackageSplitNames(org.xmlpull.v1.XmlPullParser, android.util.AttributeSet) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException, android.content.pm.PackageParser$PackageParserException
    {
        int i0, $i1;
        java.lang.String r0, $r2, $r4, $r10, $r15, r18, r20, r21, r22, r24;
        android.content.pm.PackageParser$PackageParserException $r1, $r3, $r9, $r14;
        boolean $z0, $z1;
        android.util.Pair $r5;
        java.lang.StringBuilder $r6, $r11;
        org.xmlpull.v1.XmlPullParser r16;
        android.util.AttributeSet r17;

        r16 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r17 := @parameter1: android.util.AttributeSet;

     label01:
        i0 = interfaceinvoke r16.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i0 == 2 goto label02;

        if i0 == 1 goto label02;

        goto label01;

     label02:
        if i0 != 2 goto label10;

        $r2 = interfaceinvoke r16.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("manifest");

        if $z0 == 0 goto label09;

        r0 = interfaceinvoke r17.<android.util.AttributeSet: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "package");

        $r4 = "android";

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z1 != 0 goto label04;

        r18 = staticinvoke <android.content.pm.PackageParser: java.lang.String validateName(java.lang.String,boolean,boolean)>(r0, 1, 1);

        if r18 != null goto label03;

        goto label04;

     label03:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid manifest package: ");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);

        $r14 = new android.content.pm.PackageParser$PackageParserException;

        $r15 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<android.content.pm.PackageParser$PackageParserException: void <init>(int,java.lang.String)>(-106, $r15);

        throw $r14;

     label04:
        r20 = interfaceinvoke r17.<android.util.AttributeSet: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "split");

        r21 = r20;

        if r20 == null goto label07;

        $i1 = virtualinvoke r20.<java.lang.String: int length()>();

        if $i1 != 0 goto label05;

        r21 = null;

        goto label07;

     label05:
        r22 = staticinvoke <android.content.pm.PackageParser: java.lang.String validateName(java.lang.String,boolean,boolean)>(r20, 0, 0);

        if r22 != null goto label06;

        r21 = r20;

        goto label07;

     label06:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid manifest split: ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r22);

        $r9 = new android.content.pm.PackageParser$PackageParserException;

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<android.content.pm.PackageParser$PackageParserException: void <init>(int,java.lang.String)>(-106, $r10);

        throw $r9;

     label07:
        r24 = virtualinvoke r0.<java.lang.String: java.lang.String intern()>();

        if r21 == null goto label08;

        r21 = virtualinvoke r21.<java.lang.String: java.lang.String intern()>();

        goto label08;

     label08:
        $r5 = staticinvoke <android.util.Pair: android.util.Pair create(java.lang.Object,java.lang.Object)>(r24, r21);

        return $r5;

     label09:
        $r3 = new android.content.pm.PackageParser$PackageParserException;

        specialinvoke $r3.<android.content.pm.PackageParser$PackageParserException: void <init>(int,java.lang.String)>(-108, "No <manifest> tag");

        throw $r3;

     label10:
        $r1 = new android.content.pm.PackageParser$PackageParserException;

        specialinvoke $r1.<android.content.pm.PackageParser$PackageParserException: void <init>(int,java.lang.String)>(-108, "No start tag found");

        throw $r1;
    }

    private boolean parsePermission(android.content.pm.PackageParser$Package, android.content.res.Resources, android.content.res.XmlResourceParser, java.lang.String[]) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.pm.PackageParser r0;
        android.content.res.Resources r1;
        android.content.res.XmlResourceParser r2;
        java.lang.String[] r3;
        android.content.res.TypedArray r4;
        int[] $r5;
        boolean $z0, $z1, $z3, $z4, $z5, $z6;
        android.content.pm.PermissionInfo $r6, $r8, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r19, $r20, $r21, $r22, $r25, $r26, $r29, $r34, $r36, $r50, r52, r53, $r54;
        java.lang.String $r7, $r9, $r23, $r24, $r30, $r33, $r35, $r37, $r38, $r39, $r41, $r44, r46;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i22;
        java.util.ArrayList $r18;
        java.lang.StringBuilder $r27, $r40;
        java.lang.IllegalStateException $r32;
        android.content.pm.PackageParser$Package r45;
        android.content.pm.PackageParser$Permission $r48;

        r0 := @this: android.content.pm.PackageParser;

        r45 := @parameter0: android.content.pm.PackageParser$Package;

        r1 := @parameter1: android.content.res.Resources;

        r2 := @parameter2: android.content.res.XmlResourceParser;

        r3 := @parameter3: java.lang.String[];

        $r5 = <com.android.internal.R$styleable: int[] AndroidManifestPermission>;

        r4 = virtualinvoke r1.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r2, $r5);

        $z0 = virtualinvoke r4.<android.content.res.TypedArray: boolean hasValue(int)>(10);

        if $z0 == 0 goto label02;

        $r39 = "android";

        $r38 = r45.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $z4 = virtualinvoke $r39.<java.lang.String: boolean equals(java.lang.Object)>($r38);

        if $z4 == 0 goto label01;

        r46 = virtualinvoke r4.<android.content.res.TypedArray: java.lang.String getNonResourceString(int)>(10);

        goto label03;

     label01:
        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r41 = r45.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41);

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" defines a background permission. Only the \'android\' package can do that.");

        $r44 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageParser", $r44);

     label02:
        r46 = null;

     label03:
        $r48 = new android.content.pm.PackageParser$Permission;

        specialinvoke $r48.<android.content.pm.PackageParser$Permission: void <init>(android.content.pm.PackageParser$Package,java.lang.String)>(r45, r46);

        $r50 = $r48.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $z5 = staticinvoke <android.content.pm.PackageParser: boolean parsePackageItemInfo(android.content.pm.PackageParser$Package,android.content.pm.PackageItemInfo,java.lang.String[],java.lang.String,android.content.res.TypedArray,boolean,int,int,int,int,int,int)>(r45, $r50, r3, "<permission>", r4, 1, 2, 0, 1, 9, 6, 8);

        if $z5 != 0 goto label04;

        virtualinvoke r4.<android.content.res.TypedArray: void recycle()>();

        r0.<android.content.pm.PackageParser: int mParseError> = -108;

        return 0;

     label04:
        $r6 = $r48.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r7 = virtualinvoke r4.<android.content.res.TypedArray: java.lang.String getNonResourceString(int)>(4);

        $r6.<android.content.pm.PermissionInfo: java.lang.String group> = $r7;

        $r8 = $r48.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r9 = $r8.<android.content.pm.PermissionInfo: java.lang.String group>;

        if $r9 == null goto label05;

        $r36 = $r48.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r34 = $r48.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r35 = $r34.<android.content.pm.PermissionInfo: java.lang.String group>;

        $r37 = virtualinvoke $r35.<java.lang.String: java.lang.String intern()>();

        $r36.<android.content.pm.PermissionInfo: java.lang.String group> = $r37;

     label05:
        $r10 = $r48.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $i0 = virtualinvoke r4.<android.content.res.TypedArray: int getResourceId(int,int)>(5, 0);

        $r10.<android.content.pm.PermissionInfo: int descriptionRes> = $i0;

        $r11 = $r48.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $i1 = virtualinvoke r4.<android.content.res.TypedArray: int getResourceId(int,int)>(11, 0);

        $r11.<android.content.pm.PermissionInfo: int requestRes> = $i1;

        $r12 = $r48.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $i2 = virtualinvoke r4.<android.content.res.TypedArray: int getInt(int,int)>(3, 0);

        $r12.<android.content.pm.PermissionInfo: int protectionLevel> = $i2;

        $r13 = $r48.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $i3 = virtualinvoke r4.<android.content.res.TypedArray: int getInt(int,int)>(7, 0);

        $r13.<android.content.pm.PermissionInfo: int flags> = $i3;

        $r14 = $r48.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $z1 = virtualinvoke $r14.<android.content.pm.PermissionInfo: boolean isRuntime()>();

        if $z1 == 0 goto label08;

        $r24 = "android";

        $r22 = $r48.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r23 = $r22.<android.content.pm.PermissionInfo: java.lang.String packageName>;

        $z3 = virtualinvoke $r24.<java.lang.String: boolean equals(java.lang.Object)>($r23);

        if $z3 != 0 goto label06;

        goto label08;

     label06:
        $r25 = $r48.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $i17 = $r25.<android.content.pm.PermissionInfo: int flags>;

        $i18 = $i17 & 4;

        if $i18 == 0 goto label09;

        $r26 = $r48.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $i19 = $r26.<android.content.pm.PermissionInfo: int flags>;

        $i20 = $i19 & 8;

        if $i20 != 0 goto label07;

        goto label09;

     label07:
        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission cannot be both soft and hard restricted: ");

        $r29 = $r48.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r30 = $r29.<android.content.pm.PermissionInfo: java.lang.String name>;

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r32 = new java.lang.IllegalStateException;

        $r33 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r32.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r33);

        throw $r32;

     label08:
        r52 = $r48.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $i4 = r52.<android.content.pm.PermissionInfo: int flags>;

        $i5 = $i4 & -5;

        r52.<android.content.pm.PermissionInfo: int flags> = $i5;

        r53 = $r48.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $i6 = r53.<android.content.pm.PermissionInfo: int flags>;

        $i7 = $i6 & -9;

        r53.<android.content.pm.PermissionInfo: int flags> = $i7;

     label09:
        virtualinvoke r4.<android.content.res.TypedArray: void recycle()>();

        $r54 = $r48.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $i22 = $r54.<android.content.pm.PermissionInfo: int protectionLevel>;

        if $i22 != -1 goto label10;

        r3[0] = "<permission> does not specify protectionLevel";

        r0.<android.content.pm.PackageParser: int mParseError> = -108;

        return 0;

     label10:
        $r16 = $r48.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r15 = $r48.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $i8 = $r15.<android.content.pm.PermissionInfo: int protectionLevel>;

        $i9 = staticinvoke <android.content.pm.PermissionInfo: int fixProtectionLevel(int)>($i8);

        $r16.<android.content.pm.PermissionInfo: int protectionLevel> = $i9;

        $r17 = $r48.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $i10 = virtualinvoke $r17.<android.content.pm.PermissionInfo: int getProtectionFlags()>();

        if $i10 == 0 goto label11;

        $r19 = $r48.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $i11 = $r19.<android.content.pm.PermissionInfo: int protectionLevel>;

        $i12 = $i11 & 4096;

        if $i12 != 0 goto label11;

        $r20 = $r48.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $i13 = $r20.<android.content.pm.PermissionInfo: int protectionLevel>;

        $i14 = $i13 & 8192;

        if $i14 != 0 goto label11;

        $r21 = $r48.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $i15 = $r21.<android.content.pm.PermissionInfo: int protectionLevel>;

        $i16 = $i15 & 15;

        if $i16 == 2 goto label11;

        r3[0] = "<permission>  protectionLevel specifies a non-instant flag but is not based on signature type";

        r0.<android.content.pm.PackageParser: int mParseError> = -108;

        return 0;

     label11:
        $z6 = specialinvoke r0.<android.content.pm.PackageParser: boolean parseAllMetaData(android.content.res.Resources,android.content.res.XmlResourceParser,java.lang.String,android.content.pm.PackageParser$Component,java.lang.String[])>(r1, r2, "<permission>", $r48, r3);

        if $z6 != 0 goto label12;

        r0.<android.content.pm.PackageParser: int mParseError> = -108;

        return 0;

     label12:
        $r18 = r45.<android.content.pm.PackageParser$Package: java.util.ArrayList permissions>;

        virtualinvoke $r18.<java.util.ArrayList: boolean add(java.lang.Object)>($r48);

        return 1;
    }

    private boolean parsePermissionGroup(android.content.pm.PackageParser$Package, int, android.content.res.Resources, android.content.res.XmlResourceParser, java.lang.String[]) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.pm.PackageParser r0;
        android.content.pm.PackageParser$Package r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        android.content.res.Resources r2;
        android.content.res.XmlResourceParser r3;
        java.lang.String[] r4;
        android.content.res.TypedArray r5;
        int[] $r7;
        android.content.pm.PackageParser$PermissionGroup $r8;
        android.content.pm.PermissionGroupInfo $r9, $r10, $r11, $r12, $r13;
        boolean $z0, $z1;
        java.util.ArrayList $r14;

        r0 := @this: android.content.pm.PackageParser;

        r1 := @parameter0: android.content.pm.PackageParser$Package;

        i0 := @parameter1: int;

        r2 := @parameter2: android.content.res.Resources;

        r3 := @parameter3: android.content.res.XmlResourceParser;

        r4 := @parameter4: java.lang.String[];

        $r7 = <com.android.internal.R$styleable: int[] AndroidManifestPermissionGroup>;

        r5 = virtualinvoke r2.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r3, $r7);

        $r8 = new android.content.pm.PackageParser$PermissionGroup;

        $i1 = virtualinvoke r5.<android.content.res.TypedArray: int getResourceId(int,int)>(12, 0);

        $i2 = virtualinvoke r5.<android.content.res.TypedArray: int getResourceId(int,int)>(9, 0);

        $i3 = virtualinvoke r5.<android.content.res.TypedArray: int getResourceId(int,int)>(10, 0);

        specialinvoke $r8.<android.content.pm.PackageParser$PermissionGroup: void <init>(android.content.pm.PackageParser$Package,int,int,int)>(r1, $i1, $i2, $i3);

        $r9 = $r8.<android.content.pm.PackageParser$PermissionGroup: android.content.pm.PermissionGroupInfo info>;

        $z0 = staticinvoke <android.content.pm.PackageParser: boolean parsePackageItemInfo(android.content.pm.PackageParser$Package,android.content.pm.PackageItemInfo,java.lang.String[],java.lang.String,android.content.res.TypedArray,boolean,int,int,int,int,int,int)>(r1, $r9, r4, "<permission-group>", r5, 1, 2, 0, 1, 8, 5, 7);

        if $z0 != 0 goto label1;

        virtualinvoke r5.<android.content.res.TypedArray: void recycle()>();

        r0.<android.content.pm.PackageParser: int mParseError> = -108;

        return 0;

     label1:
        $r10 = $r8.<android.content.pm.PackageParser$PermissionGroup: android.content.pm.PermissionGroupInfo info>;

        $i4 = virtualinvoke r5.<android.content.res.TypedArray: int getResourceId(int,int)>(4, 0);

        $r10.<android.content.pm.PermissionGroupInfo: int descriptionRes> = $i4;

        $r11 = $r8.<android.content.pm.PackageParser$PermissionGroup: android.content.pm.PermissionGroupInfo info>;

        $i5 = virtualinvoke r5.<android.content.res.TypedArray: int getResourceId(int,int)>(11, 0);

        $r11.<android.content.pm.PermissionGroupInfo: int requestRes> = $i5;

        $r12 = $r8.<android.content.pm.PackageParser$PermissionGroup: android.content.pm.PermissionGroupInfo info>;

        $i6 = virtualinvoke r5.<android.content.res.TypedArray: int getInt(int,int)>(6, 0);

        $r12.<android.content.pm.PermissionGroupInfo: int flags> = $i6;

        $r13 = $r8.<android.content.pm.PackageParser$PermissionGroup: android.content.pm.PermissionGroupInfo info>;

        $i7 = virtualinvoke r5.<android.content.res.TypedArray: int getInt(int,int)>(3, 0);

        $r13.<android.content.pm.PermissionGroupInfo: int priority> = $i7;

        virtualinvoke r5.<android.content.res.TypedArray: void recycle()>();

        $z1 = specialinvoke r0.<android.content.pm.PackageParser: boolean parseAllMetaData(android.content.res.Resources,android.content.res.XmlResourceParser,java.lang.String,android.content.pm.PackageParser$Component,java.lang.String[])>(r2, r3, "<permission-group>", $r8, r4);

        if $z1 != 0 goto label2;

        r0.<android.content.pm.PackageParser: int mParseError> = -108;

        return 0;

     label2:
        $r14 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList permissionGroups>;

        virtualinvoke $r14.<java.util.ArrayList: boolean add(java.lang.Object)>($r8);

        return 1;
    }

    private boolean parsePermissionTree(android.content.pm.PackageParser$Package, android.content.res.Resources, android.content.res.XmlResourceParser, java.lang.String[]) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.pm.PackageParser r0;
        android.content.res.Resources r1;
        android.content.res.XmlResourceParser r2;
        java.lang.String[] r3;
        android.content.res.TypedArray r5;
        android.content.pm.PackageParser$Permission $r6;
        java.lang.String $r7, $r11, $r19, $r21, $r23;
        int[] $r8;
        android.content.pm.PermissionInfo $r9, $r10, $r12, $r13, $r14, $r18, $r22;
        boolean $z0, $z1;
        java.util.ArrayList $r15;
        java.lang.StringBuilder $r16;
        int $i0, i1;
        android.content.pm.PackageParser$Package r24;

        r0 := @this: android.content.pm.PackageParser;

        r24 := @parameter0: android.content.pm.PackageParser$Package;

        r1 := @parameter1: android.content.res.Resources;

        r2 := @parameter2: android.content.res.XmlResourceParser;

        r3 := @parameter3: java.lang.String[];

        $r6 = new android.content.pm.PackageParser$Permission;

        $r7 = (java.lang.String) null;

        specialinvoke $r6.<android.content.pm.PackageParser$Permission: void <init>(android.content.pm.PackageParser$Package,java.lang.String)>(r24, $r7);

        $r8 = <com.android.internal.R$styleable: int[] AndroidManifestPermissionTree>;

        r5 = virtualinvoke r1.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r2, $r8);

        $r9 = $r6.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $z0 = staticinvoke <android.content.pm.PackageParser: boolean parsePackageItemInfo(android.content.pm.PackageParser$Package,android.content.pm.PackageItemInfo,java.lang.String[],java.lang.String,android.content.res.TypedArray,boolean,int,int,int,int,int,int)>(r24, $r9, r3, "<permission-tree>", r5, 1, 2, 0, 1, 5, 3, 4);

        if $z0 != 0 goto label1;

        virtualinvoke r5.<android.content.res.TypedArray: void recycle()>();

        r0.<android.content.pm.PackageParser: int mParseError> = -108;

        return 0;

     label1:
        virtualinvoke r5.<android.content.res.TypedArray: void recycle()>();

        $r10 = $r6.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r11 = $r10.<android.content.pm.PermissionInfo: java.lang.String name>;

        i1 = virtualinvoke $r11.<java.lang.String: int indexOf(int)>(46);

        if i1 <= 0 goto label2;

        $r22 = $r6.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r23 = $r22.<android.content.pm.PermissionInfo: java.lang.String name>;

        $i0 = i1 + 1;

        i1 = virtualinvoke $r23.<java.lang.String: int indexOf(int,int)>(46, $i0);

        goto label2;

     label2:
        if i1 >= 0 goto label3;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<permission-tree> name has less than three segments: ");

        $r18 = $r6.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r19 = $r18.<android.content.pm.PermissionInfo: java.lang.String name>;

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        r3[0] = $r21;

        r0.<android.content.pm.PackageParser: int mParseError> = -108;

        return 0;

     label3:
        $r12 = $r6.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r12.<android.content.pm.PermissionInfo: int descriptionRes> = 0;

        $r13 = $r6.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r13.<android.content.pm.PermissionInfo: int requestRes> = 0;

        $r14 = $r6.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r14.<android.content.pm.PermissionInfo: int protectionLevel> = 0;

        $r6.<android.content.pm.PackageParser$Permission: boolean tree> = 1;

        $z1 = specialinvoke r0.<android.content.pm.PackageParser: boolean parseAllMetaData(android.content.res.Resources,android.content.res.XmlResourceParser,java.lang.String,android.content.pm.PackageParser$Component,java.lang.String[])>(r1, r2, "<permission-tree>", $r6, r3);

        if $z1 != 0 goto label4;

        r0.<android.content.pm.PackageParser: int mParseError> = -108;

        return 0;

     label4:
        $r15 = r24.<android.content.pm.PackageParser$Package: java.util.ArrayList permissions>;

        virtualinvoke $r15.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        return 1;
    }

    private android.content.pm.PackageParser$Provider parseProvider(android.content.pm.PackageParser$Package, android.content.res.Resources, android.content.res.XmlResourceParser, int, java.lang.String[], android.content.pm.PackageParser$CachedComponentArgs) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.pm.PackageParser r0;
        android.content.pm.PackageParser$Package r1;
        android.content.res.Resources r2;
        android.content.res.XmlResourceParser r3;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        java.lang.String[] r4, $r36;
        android.content.res.TypedArray r5;
        java.lang.String r7, $r15, $r23, $r25, $r26, $r27, $r29, $r31, $r33, r39, r40, r41, r43, r44, r46, $r52;
        int[] $r8;
        android.content.pm.PackageParser$ParseComponentArgs $r9, $r10, $r11, $r14, $r35, $r37;
        android.content.pm.PackageParser$Provider $r12;
        android.content.pm.ProviderInfo $r13, $r17, $r18, $r19, $r20, $r22, $r24, $r30, $r34, r42, r45, $r47, $r48, $r49, $r50, $r51, $r53, r54, r56;
        android.content.pm.ApplicationInfo $r16, $r21, $r28, $r32, r55;
        boolean $z0, $z1, $z2, $z3, $z4, z5, $z6, $z7, $z8, $z9, z10;
        android.content.pm.PackageParser$CachedComponentArgs r38;

        r0 := @this: android.content.pm.PackageParser;

        r1 := @parameter0: android.content.pm.PackageParser$Package;

        r2 := @parameter1: android.content.res.Resources;

        r3 := @parameter2: android.content.res.XmlResourceParser;

        i0 := @parameter3: int;

        r4 := @parameter4: java.lang.String[];

        r38 := @parameter5: android.content.pm.PackageParser$CachedComponentArgs;

        $r8 = <com.android.internal.R$styleable: int[] AndroidManifestProvider>;

        r5 = virtualinvoke r2.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r3, $r8);

        $r9 = r38.<android.content.pm.PackageParser$CachedComponentArgs: android.content.pm.PackageParser$ParseComponentArgs mProviderArgs>;

        if $r9 != null goto label01;

        $r35 = new android.content.pm.PackageParser$ParseComponentArgs;

        $r36 = r0.<android.content.pm.PackageParser: java.lang.String[] mSeparateProcesses>;

        specialinvoke $r35.<android.content.pm.PackageParser$ParseComponentArgs: void <init>(android.content.pm.PackageParser$Package,java.lang.String[],int,int,int,int,int,int,java.lang.String[],int,int,int)>(r1, r4, 2, 0, 1, 19, 15, 17, $r36, 8, 14, 6);

        r38.<android.content.pm.PackageParser$CachedComponentArgs: android.content.pm.PackageParser$ParseComponentArgs mProviderArgs> = $r35;

        $r37 = r38.<android.content.pm.PackageParser$CachedComponentArgs: android.content.pm.PackageParser$ParseComponentArgs mProviderArgs>;

        $r37.<android.content.pm.PackageParser$ParseComponentArgs: java.lang.String tag> = "<provider>";

        goto label01;

     label01:
        $r10 = r38.<android.content.pm.PackageParser$CachedComponentArgs: android.content.pm.PackageParser$ParseComponentArgs mProviderArgs>;

        $r10.<android.content.pm.PackageParser$ParseComponentArgs: android.content.res.TypedArray sa> = r5;

        $r11 = r38.<android.content.pm.PackageParser$CachedComponentArgs: android.content.pm.PackageParser$ParseComponentArgs mProviderArgs>;

        $r11.<android.content.pm.PackageParser$ParseComponentArgs: int flags> = i0;

        $r12 = new android.content.pm.PackageParser$Provider;

        $r14 = r38.<android.content.pm.PackageParser$CachedComponentArgs: android.content.pm.PackageParser$ParseComponentArgs mProviderArgs>;

        $r13 = new android.content.pm.ProviderInfo;

        specialinvoke $r13.<android.content.pm.ProviderInfo: void <init>()>();

        specialinvoke $r12.<android.content.pm.PackageParser$Provider: void <init>(android.content.pm.PackageParser$ParseComponentArgs,android.content.pm.ProviderInfo)>($r14, $r13);

        $r15 = r4[0];

        if $r15 == null goto label02;

        virtualinvoke r5.<android.content.res.TypedArray: void recycle()>();

        return null;

     label02:
        $r16 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i1 = $r16.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i1 >= 17 goto label03;

        z5 = 1;

        goto label04;

     label03:
        z5 = 0;

     label04:
        $r17 = $r12.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $z0 = virtualinvoke r5.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(7, z5);

        $r17.<android.content.pm.ProviderInfo: boolean exported> = $z0;

        r7 = virtualinvoke r5.<android.content.res.TypedArray: java.lang.String getNonConfigurationString(int,int)>(10, 0);

        $r18 = $r12.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $z1 = virtualinvoke r5.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(11, 0);

        $r18.<android.content.pm.ProviderInfo: boolean isSyncable> = $z1;

        r39 = virtualinvoke r5.<android.content.res.TypedArray: java.lang.String getNonConfigurationString(int,int)>(3, 0);

        r40 = virtualinvoke r5.<android.content.res.TypedArray: java.lang.String getNonConfigurationString(int,int)>(4, 0);

        r41 = r40;

        if r40 != null goto label05;

        r41 = r39;

     label05:
        if r41 != null goto label06;

        $r34 = $r12.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r32 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r33 = $r32.<android.content.pm.ApplicationInfo: java.lang.String permission>;

        $r34.<android.content.pm.ProviderInfo: java.lang.String readPermission> = $r33;

        goto label09;

     label06:
        r42 = $r12.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $i2 = virtualinvoke r41.<java.lang.String: int length()>();

        if $i2 <= 0 goto label07;

        $r31 = virtualinvoke r41.<java.lang.String: java.lang.String toString()>();

        r43 = virtualinvoke $r31.<java.lang.String: java.lang.String intern()>();

        goto label08;

     label07:
        r43 = null;

     label08:
        r42.<android.content.pm.ProviderInfo: java.lang.String readPermission> = r43;

     label09:
        r44 = virtualinvoke r5.<android.content.res.TypedArray: java.lang.String getNonConfigurationString(int,int)>(5, 0);

        if r44 != null goto label10;

        goto label11;

     label10:
        r39 = r44;

     label11:
        if r39 != null goto label12;

        $r30 = $r12.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r28 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r29 = $r28.<android.content.pm.ApplicationInfo: java.lang.String permission>;

        $r30.<android.content.pm.ProviderInfo: java.lang.String writePermission> = $r29;

        goto label15;

     label12:
        r45 = $r12.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $i3 = virtualinvoke r39.<java.lang.String: int length()>();

        if $i3 <= 0 goto label13;

        $r27 = virtualinvoke r39.<java.lang.String: java.lang.String toString()>();

        r46 = virtualinvoke $r27.<java.lang.String: java.lang.String intern()>();

        goto label14;

     label13:
        r46 = null;

     label14:
        r45.<android.content.pm.ProviderInfo: java.lang.String writePermission> = r46;

     label15:
        $r47 = $r12.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $z6 = virtualinvoke r5.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(13, 0);

        $r47.<android.content.pm.ProviderInfo: boolean grantUriPermissions> = $z6;

        $r48 = $r12.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $z7 = virtualinvoke r5.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(22, 0);

        $r48.<android.content.pm.ProviderInfo: boolean forceUriPermissions> = $z7;

        $r49 = $r12.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $z8 = virtualinvoke r5.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(9, 0);

        $r49.<android.content.pm.ProviderInfo: boolean multiprocess> = $z8;

        $r50 = $r12.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $i13 = virtualinvoke r5.<android.content.res.TypedArray: int getInt(int,int)>(12, 0);

        $r50.<android.content.pm.ProviderInfo: int initOrder> = $i13;

        $r51 = $r12.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r52 = virtualinvoke r5.<android.content.res.TypedArray: java.lang.String getNonConfigurationString(int,int)>(21, 0);

        $r51.<android.content.pm.ProviderInfo: java.lang.String splitName> = $r52;

        $r53 = $r12.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r53.<android.content.pm.ProviderInfo: int flags> = 0;

        $z9 = virtualinvoke r5.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(16, 0);

        if $z9 == 0 goto label16;

        r54 = $r12.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $i11 = r54.<android.content.pm.ProviderInfo: int flags>;

        $i12 = $i11 | 1073741824;

        r54.<android.content.pm.ProviderInfo: int flags> = $i12;

     label16:
        $r19 = $r12.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $z2 = virtualinvoke r5.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(18, 0);

        $r19.<android.content.pm.ProviderInfo: boolean directBootAware> = $z2;

        $r20 = $r12.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $z3 = $r20.<android.content.pm.ProviderInfo: boolean directBootAware>;

        if $z3 == 0 goto label17;

        r55 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i9 = r55.<android.content.pm.ApplicationInfo: int privateFlags>;

        $i10 = $i9 | 256;

        r55.<android.content.pm.ApplicationInfo: int privateFlags> = $i10;

     label17:
        z10 = virtualinvoke r5.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(20, 0);

        if z10 == 0 goto label18;

        r56 = $r12.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $i7 = r56.<android.content.pm.ProviderInfo: int flags>;

        $i8 = $i7 | 1048576;

        r56.<android.content.pm.ProviderInfo: int flags> = $i8;

        r1.<android.content.pm.PackageParser$Package: boolean visibleToInstantApps> = 1;

     label18:
        virtualinvoke r5.<android.content.res.TypedArray: void recycle()>();

        $r21 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i4 = $r21.<android.content.pm.ApplicationInfo: int privateFlags>;

        $i5 = $i4 & 2;

        if $i5 == 0 goto label19;

        $r24 = $r12.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r26 = $r24.<android.content.pm.ProviderInfo: java.lang.String processName>;

        $r25 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        if $r26 != $r25 goto label19;

        r4[0] = "Heavy-weight applications can not have providers in main process";

        return null;

     label19:
        if r7 != null goto label20;

        r4[0] = "<provider> does not include authorities attribute";

        return null;

     label20:
        $i6 = virtualinvoke r7.<java.lang.String: int length()>();

        if $i6 > 0 goto label21;

        r4[0] = "<provider> has empty authorities attribute";

        return null;

     label21:
        $r22 = $r12.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r23 = virtualinvoke r7.<java.lang.String: java.lang.String intern()>();

        $r22.<android.content.pm.ProviderInfo: java.lang.String authority> = $r23;

        $z4 = specialinvoke r0.<android.content.pm.PackageParser: boolean parseProviderTags(android.content.res.Resources,android.content.res.XmlResourceParser,boolean,android.content.pm.PackageParser$Provider,java.lang.String[])>(r2, r3, z10, $r12, r4);

        if $z4 != 0 goto label22;

        return null;

     label22:
        return $r12;
    }

    private boolean parseProviderTags(android.content.res.Resources, android.content.res.XmlResourceParser, boolean, android.content.pm.PackageParser$Provider, java.lang.String[]) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.pm.PackageParser r0;
        android.content.res.Resources r1;
        android.content.res.XmlResourceParser r2;
        boolean z0, $z1, $z2, $z3, $z4, $z5, z7;
        android.content.pm.PackageParser$Provider r3;
        java.lang.String[] r4;
        int i0, $i3, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, i14, i15;
        android.content.res.TypedArray r5, r92;
        java.lang.String $r6, $r7, $r8, $r9, $r12, $r15, $r18, $r20, $r24, $r27, $r30, $r32, $r50, $r53, $r56, $r58, $r62, $r65, $r68, $r70, r94, r95, r96, r99, r100, r101, r102, r103, r105, r107, r108, r109;
        java.lang.StringBuilder $r10, $r22, $r48, $r60;
        int[] $r21, $r59;
        android.content.pm.ProviderInfo $r33, $r35, $r37, $r39, $r41, $r42, $r71, $r73, $r75, $r77, $r78, $r80, $r81, r90;
        android.content.pm.PathPermission[] $r34, $r36, $r38, $r40, $r43, r110;
        android.content.pm.PathPermission $r44, $r45, $r46, $r47, r106;
        android.os.PatternMatcher[] $r72, $r74, $r76, $r79, $r82, r97;
        android.os.PatternMatcher $r83, $r84, $r85, r93;
        android.os.Bundle $r86, r91;
        android.content.pm.PackageParser$ProviderIntentInfo $r87;
        java.util.ArrayList $r88;

        r0 := @this: android.content.pm.PackageParser;

        r1 := @parameter0: android.content.res.Resources;

        r2 := @parameter1: android.content.res.XmlResourceParser;

        z0 := @parameter2: boolean;

        r3 := @parameter3: android.content.pm.PackageParser$Provider;

        r4 := @parameter4: java.lang.String[];

        i0 = interfaceinvoke r2.<android.content.res.XmlResourceParser: int getDepth()>();

     label01:
        i13 = interfaceinvoke r2.<android.content.res.XmlResourceParser: int next()>();

        if i13 == 1 goto label30;

        if i13 != 3 goto label02;

        $i12 = interfaceinvoke r2.<android.content.res.XmlResourceParser: int getDepth()>();

        if $i12 <= i0 goto label30;

     label02:
        if i13 == 3 goto label01;

        if i13 != 4 goto label03;

        goto label01;

     label03:
        $r6 = interfaceinvoke r2.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("intent-filter");

        if $z1 == 0 goto label06;

        $r87 = new android.content.pm.PackageParser$ProviderIntentInfo;

        specialinvoke $r87.<android.content.pm.PackageParser$ProviderIntentInfo: void <init>(android.content.pm.PackageParser$Provider)>(r3);

        $z5 = specialinvoke r0.<android.content.pm.PackageParser: boolean parseIntent(android.content.res.Resources,android.content.res.XmlResourceParser,boolean,boolean,android.content.pm.PackageParser$IntentInfo,java.lang.String[])>(r1, r2, 1, 0, $r87, r4);

        if $z5 != 0 goto label04;

        return 0;

     label04:
        if z0 == 0 goto label05;

        virtualinvoke $r87.<android.content.pm.PackageParser$ProviderIntentInfo: void setVisibilityToInstantApp(int)>(1);

        r90 = r3.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $i10 = r90.<android.content.pm.ProviderInfo: int flags>;

        $i11 = $i10 | 1048576;

        r90.<android.content.pm.ProviderInfo: int flags> = $i11;

     label05:
        $i7 = virtualinvoke $r87.<android.content.pm.PackageParser$ProviderIntentInfo: int getOrder()>();

        $i8 = r3.<android.content.pm.PackageParser$Provider: int order>;

        $i9 = staticinvoke <java.lang.Math: int max(int,int)>($i7, $i8);

        r3.<android.content.pm.PackageParser$Provider: int order> = $i9;

        $r88 = r3.<android.content.pm.PackageParser$Provider: java.util.ArrayList intents>;

        virtualinvoke $r88.<java.util.ArrayList: boolean add(java.lang.Object)>($r87);

        goto label01;

     label06:
        $r7 = interfaceinvoke r2.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        $z2 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("meta-data");

        if $z2 == 0 goto label07;

        $r86 = r3.<android.content.pm.PackageParser$Provider: android.os.Bundle metaData>;

        r91 = specialinvoke r0.<android.content.pm.PackageParser: android.os.Bundle parseMetaData(android.content.res.Resources,android.content.res.XmlResourceParser,android.os.Bundle,java.lang.String[])>(r1, r2, $r86, r4);

        r3.<android.content.pm.PackageParser$Provider: android.os.Bundle metaData> = r91;

        if r91 != null goto label01;

        return 0;

     label07:
        $r8 = interfaceinvoke r2.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        $z3 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("grant-uri-permission");

        if $z3 == 0 goto label14;

        $r59 = <com.android.internal.R$styleable: int[] AndroidManifestGrantUriPermission>;

        r92 = virtualinvoke r1.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r2, $r59);

        r93 = null;

        r94 = virtualinvoke r92.<android.content.res.TypedArray: java.lang.String getNonConfigurationString(int,int)>(0, 0);

        if r94 == null goto label08;

        $r85 = new android.os.PatternMatcher;

        specialinvoke $r85.<android.os.PatternMatcher: void <init>(java.lang.String,int)>(r94, 0);

        r93 = $r85;

     label08:
        r95 = virtualinvoke r92.<android.content.res.TypedArray: java.lang.String getNonConfigurationString(int,int)>(1, 0);

        if r95 == null goto label09;

        $r84 = new android.os.PatternMatcher;

        specialinvoke $r84.<android.os.PatternMatcher: void <init>(java.lang.String,int)>(r95, 1);

        r93 = $r84;

     label09:
        r96 = virtualinvoke r92.<android.content.res.TypedArray: java.lang.String getNonConfigurationString(int,int)>(2, 0);

        if r96 == null goto label10;

        $r83 = new android.os.PatternMatcher;

        specialinvoke $r83.<android.os.PatternMatcher: void <init>(java.lang.String,int)>(r96, 2);

        r93 = $r83;

     label10:
        virtualinvoke r92.<android.content.res.TypedArray: void recycle()>();

        if r93 == null goto label13;

        $r71 = r3.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r72 = $r71.<android.content.pm.ProviderInfo: android.os.PatternMatcher[] uriPermissionPatterns>;

        if $r72 != null goto label11;

        $r80 = r3.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r79 = newarray (android.os.PatternMatcher)[1];

        $r80.<android.content.pm.ProviderInfo: android.os.PatternMatcher[] uriPermissionPatterns> = $r79;

        $r81 = r3.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r82 = $r81.<android.content.pm.ProviderInfo: android.os.PatternMatcher[] uriPermissionPatterns>;

        $r82[0] = r93;

        goto label12;

     label11:
        $r73 = r3.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r74 = $r73.<android.content.pm.ProviderInfo: android.os.PatternMatcher[] uriPermissionPatterns>;

        i14 = lengthof $r74;

        $i6 = i14 + 1;

        r97 = newarray (android.os.PatternMatcher)[$i6];

        $r75 = r3.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r76 = $r75.<android.content.pm.ProviderInfo: android.os.PatternMatcher[] uriPermissionPatterns>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r76, 0, r97, 0, i14);

        r97[i14] = r93;

        $r77 = r3.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r77.<android.content.pm.ProviderInfo: android.os.PatternMatcher[] uriPermissionPatterns> = r97;

     label12:
        $r78 = r3.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r78.<android.content.pm.ProviderInfo: boolean grantUriPermissions> = 1;

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r2);

        goto label01;

     label13:
        $r60 = new java.lang.StringBuilder;

        specialinvoke $r60.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element under <path-permission>: ");

        $r62 = interfaceinvoke r2.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r62);

        virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

        $r65 = r0.<android.content.pm.PackageParser: java.lang.String mArchiveSourcePath>;

        virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r65);

        virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r68 = interfaceinvoke r2.<android.content.res.XmlResourceParser: java.lang.String getPositionDescription()>();

        virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r68);

        $r70 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageParser", $r70);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r2);

        goto label01;

     label14:
        $r9 = interfaceinvoke r2.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        $z4 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("path-permission");

        if $z4 == 0 goto label29;

        $r21 = <com.android.internal.R$styleable: int[] AndroidManifestPathPermission>;

        r5 = virtualinvoke r1.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r2, $r21);

        r99 = virtualinvoke r5.<android.content.res.TypedArray: java.lang.String getNonConfigurationString(int,int)>(0, 0);

        r100 = virtualinvoke r5.<android.content.res.TypedArray: java.lang.String getNonConfigurationString(int,int)>(1, 0);

        if r100 != null goto label15;

        r100 = r99;

        goto label15;

     label15:
        r101 = virtualinvoke r5.<android.content.res.TypedArray: java.lang.String getNonConfigurationString(int,int)>(2, 0);

        r102 = r101;

        if r101 != null goto label16;

        r102 = r99;

     label16:
        z7 = 0;

        if r100 == null goto label17;

        r100 = virtualinvoke r100.<java.lang.String: java.lang.String intern()>();

        z7 = 1;

        goto label17;

     label17:
        if r102 == null goto label18;

        r103 = virtualinvoke r102.<java.lang.String: java.lang.String intern()>();

        z7 = 1;

        goto label19;

     label18:
        r103 = r102;

     label19:
        if z7 != 0 goto label20;

        $r48 = new java.lang.StringBuilder;

        specialinvoke $r48.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No readPermission or writePermssion for <path-permission>: ");

        $r50 = interfaceinvoke r2.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r50);

        virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

        $r53 = r0.<android.content.pm.PackageParser: java.lang.String mArchiveSourcePath>;

        virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r53);

        virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r56 = interfaceinvoke r2.<android.content.res.XmlResourceParser: java.lang.String getPositionDescription()>();

        virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r56);

        $r58 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageParser", $r58);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r2);

        goto label01;

     label20:
        r105 = virtualinvoke r5.<android.content.res.TypedArray: java.lang.String getNonConfigurationString(int,int)>(3, 0);

        if r105 == null goto label21;

        $r47 = new android.content.pm.PathPermission;

        specialinvoke $r47.<android.content.pm.PathPermission: void <init>(java.lang.String,int,java.lang.String,java.lang.String)>(r105, 0, r100, r103);

        r106 = $r47;

        goto label22;

     label21:
        r106 = null;

     label22:
        r107 = virtualinvoke r5.<android.content.res.TypedArray: java.lang.String getNonConfigurationString(int,int)>(4, 0);

        if r107 == null goto label23;

        $r46 = new android.content.pm.PathPermission;

        specialinvoke $r46.<android.content.pm.PathPermission: void <init>(java.lang.String,int,java.lang.String,java.lang.String)>(r107, 1, r100, r103);

        r106 = $r46;

        goto label23;

     label23:
        r108 = virtualinvoke r5.<android.content.res.TypedArray: java.lang.String getNonConfigurationString(int,int)>(5, 0);

        if r108 == null goto label24;

        $r45 = new android.content.pm.PathPermission;

        specialinvoke $r45.<android.content.pm.PathPermission: void <init>(java.lang.String,int,java.lang.String,java.lang.String)>(r108, 2, r100, r103);

        r106 = $r45;

        goto label24;

     label24:
        r109 = virtualinvoke r5.<android.content.res.TypedArray: java.lang.String getNonConfigurationString(int,int)>(6, 0);

        if r109 == null goto label25;

        $r44 = new android.content.pm.PathPermission;

        specialinvoke $r44.<android.content.pm.PathPermission: void <init>(java.lang.String,int,java.lang.String,java.lang.String)>(r109, 3, r100, r103);

        r106 = $r44;

        goto label25;

     label25:
        virtualinvoke r5.<android.content.res.TypedArray: void recycle()>();

        if r106 == null goto label28;

        $r33 = r3.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r34 = $r33.<android.content.pm.ProviderInfo: android.content.pm.PathPermission[] pathPermissions>;

        if $r34 != null goto label26;

        $r41 = r3.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r40 = newarray (android.content.pm.PathPermission)[1];

        $r41.<android.content.pm.ProviderInfo: android.content.pm.PathPermission[] pathPermissions> = $r40;

        $r42 = r3.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r43 = $r42.<android.content.pm.ProviderInfo: android.content.pm.PathPermission[] pathPermissions>;

        $r43[0] = r106;

        goto label27;

     label26:
        $r35 = r3.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r36 = $r35.<android.content.pm.ProviderInfo: android.content.pm.PathPermission[] pathPermissions>;

        i15 = lengthof $r36;

        $i3 = i15 + 1;

        r110 = newarray (android.content.pm.PathPermission)[$i3];

        $r37 = r3.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r38 = $r37.<android.content.pm.ProviderInfo: android.content.pm.PathPermission[] pathPermissions>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r38, 0, r110, 0, i15);

        r110[i15] = r106;

        $r39 = r3.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r39.<android.content.pm.ProviderInfo: android.content.pm.PathPermission[] pathPermissions> = r110;

     label27:
        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r2);

        goto label01;

     label28:
        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No path, pathPrefix, or pathPattern for <path-permission>: ");

        $r24 = interfaceinvoke r2.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

        $r27 = r0.<android.content.pm.PackageParser: java.lang.String mArchiveSourcePath>;

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r30 = interfaceinvoke r2.<android.content.res.XmlResourceParser: java.lang.String getPositionDescription()>();

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r32 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageParser", $r32);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r2);

        goto label01;

     label29:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element under <provider>: ");

        $r12 = interfaceinvoke r2.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

        $r15 = r0.<android.content.pm.PackageParser: java.lang.String mArchiveSourcePath>;

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r18 = interfaceinvoke r2.<android.content.res.XmlResourceParser: java.lang.String getPositionDescription()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageParser", $r20);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r2);

        goto label01;

     label30:
        return 1;
    }

    public static final java.security.PublicKey parsePublicKey(java.lang.String)
    {
        java.security.spec.X509EncodedKeySpec $r0;
        byte[] $r1;
        java.security.KeyFactory $r2, $r4, $r8;
        java.lang.Throwable $r3, $r5, $r6, $r7, $r9, $r10, $r11;
        java.lang.String r12;
        java.security.PublicKey r14, r17, r20;

        r12 := @parameter0: java.lang.String;

        if r12 != null goto label01;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageParser", "Could not parse null public key");

        return null;

     label01:
        $r0 = new java.security.spec.X509EncodedKeySpec;

        $r1 = staticinvoke <android.util.Base64: byte[] decode(java.lang.String,int)>(r12, 0);

        specialinvoke $r0.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r1);

     label02:
        $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>("RSA");

        r14 = virtualinvoke $r2.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r0);

     label03:
        return r14;

     label04:
        $r10 := @caughtexception;

        goto label06;

     label05:
        $r3 := @caughtexception;

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("PackageParser", "Could not parse public key: RSA KeyFactory not included in build");

     label06:
        $r4 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>("EC");

        r17 = virtualinvoke $r4.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r0);

     label07:
        return r17;

     label08:
        $r7 := @caughtexception;

        goto label10;

     label09:
        $r9 := @caughtexception;

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("PackageParser", "Could not parse public key: EC KeyFactory not included in build");

     label10:
        $r8 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>("DSA");

        r20 = virtualinvoke $r8.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r0);

     label11:
        return r20;

     label12:
        $r11 := @caughtexception;

        goto label14;

     label13:
        $r5 := @caughtexception;

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("PackageParser", "Could not parse public key: DSA KeyFactory not included in build");

     label14:
        return null;

     label15:
        $r6 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageParser", "Could not parse verifier public key; invalid Base64");

        return null;

        catch java.lang.IllegalArgumentException from label01 to label02 with label15;
        catch java.security.NoSuchAlgorithmException from label02 to label03 with label05;
        catch java.security.spec.InvalidKeySpecException from label02 to label03 with label04;
        catch java.security.NoSuchAlgorithmException from label06 to label07 with label09;
        catch java.security.spec.InvalidKeySpecException from label06 to label07 with label08;
        catch java.security.NoSuchAlgorithmException from label10 to label11 with label13;
        catch java.security.spec.InvalidKeySpecException from label10 to label11 with label12;
    }

    private android.content.pm.PackageParser$Service parseService(android.content.pm.PackageParser$Package, android.content.res.Resources, android.content.res.XmlResourceParser, int, java.lang.String[], android.content.pm.PackageParser$CachedComponentArgs) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.pm.PackageParser r0;
        android.content.res.Resources r1;
        android.content.res.XmlResourceParser r2;
        java.lang.String[] r3, $r44;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z11, z12, z13, z14;
        android.content.pm.ServiceInfo r6, $r12, $r15, $r16, $r35, $r41, $r42, $r52, $r54, $r55, r56, r57, r58, r59, r60, r62, r66, r69;
        int i0, i1, $i2, $i3, $i4, $i5, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, i27, $i28, i29;
        int[] $r7;
        android.content.pm.PackageParser$ParseComponentArgs $r8, $r9, $r10, $r13, $r43, $r45;
        android.content.pm.PackageParser$Service $r11;
        java.lang.String $r14, $r19, $r20, $r23, $r26, $r29, $r31, $r36, $r37, $r38, $r40, r50, r51, $r53;
        android.content.pm.ApplicationInfo $r17, $r39, r61;
        java.util.ArrayList $r18, $r34;
        java.lang.StringBuilder $r21;
        android.os.Bundle $r32, r67;
        android.content.pm.PackageParser$ServiceIntentInfo $r33;
        android.content.pm.PackageParser$Package r46;
        android.content.pm.PackageParser$CachedComponentArgs r47;
        android.content.res.TypedArray r49;

        r0 := @this: android.content.pm.PackageParser;

        r46 := @parameter0: android.content.pm.PackageParser$Package;

        r1 := @parameter1: android.content.res.Resources;

        r2 := @parameter2: android.content.res.XmlResourceParser;

        i27 := @parameter3: int;

        r3 := @parameter4: java.lang.String[];

        r47 := @parameter5: android.content.pm.PackageParser$CachedComponentArgs;

        $r7 = <com.android.internal.R$styleable: int[] AndroidManifestService>;

        r49 = virtualinvoke r1.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r2, $r7);

        $r8 = r47.<android.content.pm.PackageParser$CachedComponentArgs: android.content.pm.PackageParser$ParseComponentArgs mServiceArgs>;

        if $r8 != null goto label01;

        $r43 = new android.content.pm.PackageParser$ParseComponentArgs;

        $r44 = r0.<android.content.pm.PackageParser: java.lang.String[] mSeparateProcesses>;

        specialinvoke $r43.<android.content.pm.PackageParser$ParseComponentArgs: void <init>(android.content.pm.PackageParser$Package,java.lang.String[],int,int,int,int,int,int,java.lang.String[],int,int,int)>(r46, r3, 2, 0, 1, 15, 8, 12, $r44, 6, 7, 4);

        r47.<android.content.pm.PackageParser$CachedComponentArgs: android.content.pm.PackageParser$ParseComponentArgs mServiceArgs> = $r43;

        $r45 = r47.<android.content.pm.PackageParser$CachedComponentArgs: android.content.pm.PackageParser$ParseComponentArgs mServiceArgs>;

        $r45.<android.content.pm.PackageParser$ParseComponentArgs: java.lang.String tag> = "<service>";

     label01:
        $r9 = r47.<android.content.pm.PackageParser$CachedComponentArgs: android.content.pm.PackageParser$ParseComponentArgs mServiceArgs>;

        $r9.<android.content.pm.PackageParser$ParseComponentArgs: android.content.res.TypedArray sa> = r49;

        $r10 = r47.<android.content.pm.PackageParser$CachedComponentArgs: android.content.pm.PackageParser$ParseComponentArgs mServiceArgs>;

        $r10.<android.content.pm.PackageParser$ParseComponentArgs: int flags> = i27;

        $r11 = new android.content.pm.PackageParser$Service;

        $r13 = r47.<android.content.pm.PackageParser$CachedComponentArgs: android.content.pm.PackageParser$ParseComponentArgs mServiceArgs>;

        $r12 = new android.content.pm.ServiceInfo;

        specialinvoke $r12.<android.content.pm.ServiceInfo: void <init>()>();

        specialinvoke $r11.<android.content.pm.PackageParser$Service: void <init>(android.content.pm.PackageParser$ParseComponentArgs,android.content.pm.ServiceInfo)>($r13, $r12);

        $r14 = r3[0];

        if $r14 == null goto label02;

        virtualinvoke r49.<android.content.res.TypedArray: void recycle()>();

        return null;

     label02:
        z0 = virtualinvoke r49.<android.content.res.TypedArray: boolean hasValue(int)>(5);

        if z0 == 0 goto label03;

        $r42 = $r11.<android.content.pm.PackageParser$Service: android.content.pm.ServiceInfo info>;

        $z11 = virtualinvoke r49.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(5, 0);

        $r42.<android.content.pm.ServiceInfo: boolean exported> = $z11;

     label03:
        r50 = virtualinvoke r49.<android.content.res.TypedArray: java.lang.String getNonConfigurationString(int,int)>(3, 0);

        if r50 != null goto label04;

        $r41 = $r11.<android.content.pm.PackageParser$Service: android.content.pm.ServiceInfo info>;

        $r39 = r46.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r40 = $r39.<android.content.pm.ApplicationInfo: java.lang.String permission>;

        $r41.<android.content.pm.ServiceInfo: java.lang.String permission> = $r40;

        goto label07;

     label04:
        r6 = $r11.<android.content.pm.PackageParser$Service: android.content.pm.ServiceInfo info>;

        $i2 = virtualinvoke r50.<java.lang.String: int length()>();

        if $i2 <= 0 goto label05;

        $r38 = virtualinvoke r50.<java.lang.String: java.lang.String toString()>();

        r51 = virtualinvoke $r38.<java.lang.String: java.lang.String intern()>();

        goto label06;

     label05:
        r51 = null;

     label06:
        r6.<android.content.pm.ServiceInfo: java.lang.String permission> = r51;

     label07:
        $r52 = $r11.<android.content.pm.PackageParser$Service: android.content.pm.ServiceInfo info>;

        $r53 = virtualinvoke r49.<android.content.res.TypedArray: java.lang.String getNonConfigurationString(int,int)>(17, 0);

        $r52.<android.content.pm.ServiceInfo: java.lang.String splitName> = $r53;

        $r54 = $r11.<android.content.pm.PackageParser$Service: android.content.pm.ServiceInfo info>;

        $i28 = virtualinvoke r49.<android.content.res.TypedArray: int getInt(int,int)>(19, 0);

        $r54.<android.content.pm.ServiceInfo: int mForegroundServiceType> = $i28;

        $r55 = $r11.<android.content.pm.PackageParser$Service: android.content.pm.ServiceInfo info>;

        $r55.<android.content.pm.ServiceInfo: int flags> = 0;

        z12 = virtualinvoke r49.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(9, 0);

        z13 = 1;

        if z12 == 0 goto label08;

        r56 = $r11.<android.content.pm.PackageParser$Service: android.content.pm.ServiceInfo info>;

        $i25 = r56.<android.content.pm.ServiceInfo: int flags>;

        $i26 = $i25 | 1;

        r56.<android.content.pm.ServiceInfo: int flags> = $i26;

     label08:
        $z1 = virtualinvoke r49.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(10, 0);

        if $z1 == 0 goto label09;

        r57 = $r11.<android.content.pm.PackageParser$Service: android.content.pm.ServiceInfo info>;

        $i23 = r57.<android.content.pm.ServiceInfo: int flags>;

        $i24 = $i23 | 2;

        r57.<android.content.pm.ServiceInfo: int flags> = $i24;

     label09:
        $z2 = virtualinvoke r49.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(14, 0);

        if $z2 == 0 goto label10;

        r58 = $r11.<android.content.pm.PackageParser$Service: android.content.pm.ServiceInfo info>;

        $i21 = r58.<android.content.pm.ServiceInfo: int flags>;

        $i22 = $i21 | 4;

        r58.<android.content.pm.ServiceInfo: int flags> = $i22;

     label10:
        $z3 = virtualinvoke r49.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(18, 0);

        if $z3 == 0 goto label11;

        r59 = $r11.<android.content.pm.PackageParser$Service: android.content.pm.ServiceInfo info>;

        $i19 = r59.<android.content.pm.ServiceInfo: int flags>;

        $i20 = $i19 | 8;

        r59.<android.content.pm.ServiceInfo: int flags> = $i20;

     label11:
        $z4 = virtualinvoke r49.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(11, 0);

        if $z4 == 0 goto label12;

        r60 = $r11.<android.content.pm.PackageParser$Service: android.content.pm.ServiceInfo info>;

        $i17 = r60.<android.content.pm.ServiceInfo: int flags>;

        $i18 = $i17 | 1073741824;

        r60.<android.content.pm.ServiceInfo: int flags> = $i18;

     label12:
        $r15 = $r11.<android.content.pm.PackageParser$Service: android.content.pm.ServiceInfo info>;

        $z5 = virtualinvoke r49.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(13, 0);

        $r15.<android.content.pm.ServiceInfo: boolean directBootAware> = $z5;

        $r16 = $r11.<android.content.pm.PackageParser$Service: android.content.pm.ServiceInfo info>;

        $z6 = $r16.<android.content.pm.ServiceInfo: boolean directBootAware>;

        if $z6 == 0 goto label13;

        r61 = r46.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i15 = r61.<android.content.pm.ApplicationInfo: int privateFlags>;

        $i16 = $i15 | 256;

        r61.<android.content.pm.ApplicationInfo: int privateFlags> = $i16;

     label13:
        z14 = virtualinvoke r49.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(16, 0);

        if z14 == 0 goto label14;

        r62 = $r11.<android.content.pm.PackageParser$Service: android.content.pm.ServiceInfo info>;

        $i13 = r62.<android.content.pm.ServiceInfo: int flags>;

        $i14 = $i13 | 1048576;

        r62.<android.content.pm.ServiceInfo: int flags> = $i14;

        r46.<android.content.pm.PackageParser$Package: boolean visibleToInstantApps> = 1;

     label14:
        virtualinvoke r49.<android.content.res.TypedArray: void recycle()>();

        $r17 = r46.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i3 = $r17.<android.content.pm.ApplicationInfo: int privateFlags>;

        $i4 = $i3 & 2;

        if $i4 == 0 goto label15;

        $r35 = $r11.<android.content.pm.PackageParser$Service: android.content.pm.ServiceInfo info>;

        $r37 = $r35.<android.content.pm.ServiceInfo: java.lang.String processName>;

        $r36 = r46.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        if $r37 != $r36 goto label15;

        r3[0] = "Heavy-weight applications can not have services in main process";

        return null;

     label15:
        i0 = interfaceinvoke r2.<android.content.res.XmlResourceParser: int getDepth()>();

     label16:
        i1 = interfaceinvoke r2.<android.content.res.XmlResourceParser: int next()>();

        i29 = (int) 1;

        if i1 == i29 goto label26;

        if i1 != 3 goto label18;

        $i12 = interfaceinvoke r2.<android.content.res.XmlResourceParser: int getDepth()>();

        if $i12 <= i0 goto label17;

        goto label18;

     label17:
        z13 = 1;

        goto label26;

     label18:
        if i1 == 3 goto label25;

        if i1 != 4 goto label19;

        z13 = 1;

        goto label16;

     label19:
        $r19 = interfaceinvoke r2.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        $z7 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>("intent-filter");

        if $z7 == 0 goto label22;

        $r33 = new android.content.pm.PackageParser$ServiceIntentInfo;

        specialinvoke $r33.<android.content.pm.PackageParser$ServiceIntentInfo: void <init>(android.content.pm.PackageParser$Service)>($r11);

        $z9 = specialinvoke r0.<android.content.pm.PackageParser: boolean parseIntent(android.content.res.Resources,android.content.res.XmlResourceParser,boolean,boolean,android.content.pm.PackageParser$IntentInfo,java.lang.String[])>(r1, r2, 1, 0, $r33, r3);

        if $z9 != 0 goto label20;

        return null;

     label20:
        if z14 == 0 goto label21;

        virtualinvoke $r33.<android.content.pm.PackageParser$ServiceIntentInfo: void setVisibilityToInstantApp(int)>(1);

        r66 = $r11.<android.content.pm.PackageParser$Service: android.content.pm.ServiceInfo info>;

        $i10 = r66.<android.content.pm.ServiceInfo: int flags>;

        $i11 = $i10 | 1048576;

        r66.<android.content.pm.ServiceInfo: int flags> = $i11;

        goto label21;

     label21:
        $i7 = virtualinvoke $r33.<android.content.pm.PackageParser$ServiceIntentInfo: int getOrder()>();

        $i8 = $r11.<android.content.pm.PackageParser$Service: int order>;

        $i9 = staticinvoke <java.lang.Math: int max(int,int)>($i7, $i8);

        $r11.<android.content.pm.PackageParser$Service: int order> = $i9;

        $r34 = $r11.<android.content.pm.PackageParser$Service: java.util.ArrayList intents>;

        virtualinvoke $r34.<java.util.ArrayList: boolean add(java.lang.Object)>($r33);

        z13 = 1;

        goto label16;

     label22:
        $r20 = interfaceinvoke r2.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        $z8 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>("meta-data");

        if $z8 == 0 goto label24;

        $r32 = $r11.<android.content.pm.PackageParser$Service: android.os.Bundle metaData>;

        r67 = specialinvoke r0.<android.content.pm.PackageParser: android.os.Bundle parseMetaData(android.content.res.Resources,android.content.res.XmlResourceParser,android.os.Bundle,java.lang.String[])>(r1, r2, $r32, r3);

        $r11.<android.content.pm.PackageParser$Service: android.os.Bundle metaData> = r67;

        if r67 != null goto label23;

        return null;

     label23:
        z13 = 1;

        goto label16;

     label24:
        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element under <service>: ");

        $r23 = interfaceinvoke r2.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

        $r26 = r0.<android.content.pm.PackageParser: java.lang.String mArchiveSourcePath>;

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r29 = interfaceinvoke r2.<android.content.res.XmlResourceParser: java.lang.String getPositionDescription()>();

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r31 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageParser", $r31);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r2);

        z13 = 1;

        goto label16;

     label25:
        z13 = 1;

        goto label16;

     label26:
        if z0 != 0 goto label29;

        r69 = $r11.<android.content.pm.PackageParser$Service: android.content.pm.ServiceInfo info>;

        $r18 = $r11.<android.content.pm.PackageParser$Service: java.util.ArrayList intents>;

        $i5 = virtualinvoke $r18.<java.util.ArrayList: int size()>();

        if $i5 <= 0 goto label27;

        goto label28;

     label27:
        z13 = 0;

     label28:
        r69.<android.content.pm.ServiceInfo: boolean exported> = z13;

     label29:
        return $r11;
    }

    private android.content.pm.PackageParser$Package parseSplitApk(android.content.pm.PackageParser$Package, android.content.res.Resources, android.content.res.XmlResourceParser, int, int, java.lang.String[]) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException, android.content.pm.PackageParser$PackageParserException
    {
        android.content.pm.PackageParser r0;
        android.content.pm.PackageParser$Package r1;
        android.content.res.Resources r2;
        android.content.res.XmlResourceParser r3;
        int i0, i1, i2, i3, $i6;
        java.lang.String[] r4;
        java.lang.String $r7, $r10, $r13, $r16, $r18;
        boolean $z0, $z1, z2;
        java.lang.StringBuilder $r8;

        r0 := @this: android.content.pm.PackageParser;

        r1 := @parameter0: android.content.pm.PackageParser$Package;

        r2 := @parameter1: android.content.res.Resources;

        r3 := @parameter2: android.content.res.XmlResourceParser;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        r4 := @parameter5: java.lang.String[];

        staticinvoke <android.content.pm.PackageParser: android.util.Pair parsePackageSplitNames(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>(r3, r3);

        r0.<android.content.pm.PackageParser: android.content.pm.PackageParser$ParsePackageItemArgs mParseInstrumentationArgs> = null;

        z2 = 0;

        i2 = interfaceinvoke r3.<android.content.res.XmlResourceParser: int getDepth()>();

     label1:
        i3 = interfaceinvoke r3.<android.content.res.XmlResourceParser: int next()>();

        if i3 == 1 goto label7;

        if i3 != 3 goto label2;

        $i6 = interfaceinvoke r3.<android.content.res.XmlResourceParser: int getDepth()>();

        if $i6 <= i2 goto label7;

     label2:
        if i3 == 3 goto label1;

        if i3 != 4 goto label3;

        goto label1;

     label3:
        $r7 = interfaceinvoke r3.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("application");

        if $z0 == 0 goto label6;

        if z2 == 0 goto label4;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageParser", "<manifest> has more than one <application>");

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r3);

        goto label1;

     label4:
        z2 = 1;

        $z1 = specialinvoke r0.<android.content.pm.PackageParser: boolean parseSplitApplication(android.content.pm.PackageParser$Package,android.content.res.Resources,android.content.res.XmlResourceParser,int,int,java.lang.String[])>(r1, r2, r3, i0, i1, r4);

        if $z1 != 0 goto label5;

        return null;

     label5:
        goto label1;

     label6:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element under <manifest>: ");

        $r10 = interfaceinvoke r3.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

        $r13 = r0.<android.content.pm.PackageParser: java.lang.String mArchiveSourcePath>;

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r16 = interfaceinvoke r3.<android.content.res.XmlResourceParser: java.lang.String getPositionDescription()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageParser", $r18);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r3);

        goto label1;

     label7:
        if z2 != 0 goto label8;

        r4[0] = "<manifest> does not contain an <application>";

        r0.<android.content.pm.PackageParser: int mParseError> = -109;

     label8:
        return r1;
    }

    private void parseSplitApk(android.content.pm.PackageParser$Package, int, android.content.res.AssetManager, int) throws android.content.pm.PackageParser$PackageParserException
    {
        android.content.pm.PackageParser r0;
        int i0, i1, i2, i3;
        java.lang.String r1, $r3, $r5, $r6, $r7, $r43;
        java.lang.String[] $r2, r22;
        android.util.DisplayMetrics $r4;
        java.lang.Throwable $r8, $r9, $r10, $r17, r26;
        android.content.pm.PackageParser$PackageParserException $r11, $r15, $r16, r24, r34, r39, r41;
        java.lang.Exception $r12, $r13, $r14, r30;
        android.content.pm.PackageParser$Package r18, r23;
        android.content.res.AssetManager r19;
        android.content.res.XmlResourceParser r20, r27, r31, r33;
        android.content.res.Resources r21;
        java.lang.StringBuilder r25, r40, r42;

        r0 := @this: android.content.pm.PackageParser;

        r18 := @parameter0: android.content.pm.PackageParser$Package;

        i2 := @parameter1: int;

        r19 := @parameter2: android.content.res.AssetManager;

        i0 := @parameter3: int;

        $r2 = r18.<android.content.pm.PackageParser$Package: java.lang.String[] splitCodePaths>;

        r1 = $r2[i2];

        r0.<android.content.pm.PackageParser: int mParseError> = 1;

        r0.<android.content.pm.PackageParser: java.lang.String mArchiveSourcePath> = r1;

     label01:
        i1 = virtualinvoke r19.<android.content.res.AssetManager: int findCookieForPath(java.lang.String)>(r1);

     label02:
        if i1 == 0 goto label13;

     label03:
        r20 = virtualinvoke r19.<android.content.res.AssetManager: android.content.res.XmlResourceParser openXmlResourceParser(int,java.lang.String)>(i1, "AndroidManifest.xml");

     label04:
        r21 = new android.content.res.Resources;

        $r4 = r0.<android.content.pm.PackageParser: android.util.DisplayMetrics mMetrics>;

        specialinvoke r21.<android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>(r19, $r4, null);

        r22 = newarray (java.lang.String)[1];

        r23 = specialinvoke r0.<android.content.pm.PackageParser: android.content.pm.PackageParser$Package parseSplitApk(android.content.pm.PackageParser$Package,android.content.res.Resources,android.content.res.XmlResourceParser,int,int,java.lang.String[])>(r18, r21, r20, i0, i2, r22);

     label05:
        if r23 == null goto label06;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r20);

        return;

     label06:
        r24 = new android.content.pm.PackageParser$PackageParserException;

        i3 = r0.<android.content.pm.PackageParser: int mParseError>;

        r25 = new java.lang.StringBuilder;

        specialinvoke r25.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (at ");

        $r5 = interfaceinvoke r20.<android.content.res.XmlResourceParser: java.lang.String getPositionDescription()>();

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("): ");

        $r6 = r22[0];

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r7 = virtualinvoke r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r24.<android.content.pm.PackageParser$PackageParserException: void <init>(int,java.lang.String)>(i3, $r7);

        throw r24;

     label07:
        $r9 := @caughtexception;

        r26 = $r9;

        r27 = r20;

        goto label34;

     label08:
        $r13 := @caughtexception;

        r30 = $r13;

        r31 = r20;

        goto label16;

     label09:
        $r15 := @caughtexception;

        r33 = r20;

        r34 = $r15;

        goto label31;

     label10:
        $r17 := @caughtexception;

        r26 = $r17;

        r27 = r20;

        goto label34;

     label11:
        $r12 := @caughtexception;

        r30 = $r12;

        r31 = r20;

        goto label16;

     label12:
        $r16 := @caughtexception;

        r34 = $r16;

        r33 = r20;

        goto label31;

     label13:
        r39 = new android.content.pm.PackageParser$PackageParserException;

        r40 = new java.lang.StringBuilder;

        specialinvoke r40.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed adding asset path: ");

        virtualinvoke r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r3 = virtualinvoke r40.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r39.<android.content.pm.PackageParser$PackageParserException: void <init>(int,java.lang.String)>(-101, $r3);

        throw r39;

     label14:
        $r8 := @caughtexception;

        r26 = $r8;

        r27 = null;

        goto label34;

     label15:
        $r14 := @caughtexception;

        r30 = $r14;

        r31 = null;

     label16:
        r27 = r31;

     label17:
        r41 = new android.content.pm.PackageParser$PackageParserException;

     label18:
        r27 = r31;

     label19:
        r42 = new java.lang.StringBuilder;

     label20:
        r27 = r31;

     label21:
        specialinvoke r42.<java.lang.StringBuilder: void <init>()>();

     label22:
        r27 = r31;

     label23:
        virtualinvoke r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to read manifest from ");

     label24:
        r27 = r31;

     label25:
        virtualinvoke r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

     label26:
        r27 = r31;

     label27:
        $r43 = virtualinvoke r42.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r41.<android.content.pm.PackageParser$PackageParserException: void <init>(int,java.lang.String,java.lang.Throwable)>(-102, $r43, r30);

     label28:
        r27 = r31;

     label29:
        throw r41;

     label30:
        $r11 := @caughtexception;

        r34 = $r11;

        r33 = null;

     label31:
        r27 = r33;

     label32:
        throw r34;

     label33:
        $r10 := @caughtexception;

        r26 = $r10;

     label34:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r27);

        throw r26;

        catch android.content.pm.PackageParser$PackageParserException from label01 to label02 with label30;
        catch java.lang.Exception from label01 to label02 with label15;
        catch java.lang.Throwable from label01 to label02 with label14;
        catch android.content.pm.PackageParser$PackageParserException from label03 to label04 with label30;
        catch java.lang.Exception from label03 to label04 with label15;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch android.content.pm.PackageParser$PackageParserException from label04 to label05 with label12;
        catch java.lang.Exception from label04 to label05 with label11;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch android.content.pm.PackageParser$PackageParserException from label06 to label07 with label09;
        catch java.lang.Exception from label06 to label07 with label08;
        catch java.lang.Throwable from label06 to label07 with label07;
        catch android.content.pm.PackageParser$PackageParserException from label13 to label14 with label30;
        catch java.lang.Exception from label13 to label14 with label15;
        catch java.lang.Throwable from label13 to label14 with label14;
        catch java.lang.Throwable from label17 to label18 with label33;
        catch java.lang.Throwable from label19 to label20 with label33;
        catch java.lang.Throwable from label21 to label22 with label33;
        catch java.lang.Throwable from label23 to label24 with label33;
        catch java.lang.Throwable from label25 to label26 with label33;
        catch java.lang.Throwable from label27 to label28 with label33;
        catch java.lang.Throwable from label29 to label30 with label33;
        catch java.lang.Throwable from label32 to label33 with label33;
    }

    private boolean parseSplitApplication(android.content.pm.PackageParser$Package, android.content.res.Resources, android.content.res.XmlResourceParser, int, int, java.lang.String[]) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.pm.PackageParser r0;
        android.content.res.Resources r1;
        android.content.res.XmlResourceParser r2;
        int i0, i1, i2, $i5, $i6, $i7, i9, i10;
        java.lang.String[] r3, $r11, $r25;
        java.lang.String r7, $r13, $r18, $r21, $r23, $r24, $r26, $r44, r50, r67, r68;
        byte b3, b8;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z17, $z19, z20, z21;
        int[] $r9, $r27, r49;
        android.content.pm.ApplicationInfo $r10;
        android.content.pm.PackageParser$CachedComponentArgs $r12;
        java.lang.StringBuilder $r14, $r41;
        java.util.ArrayList $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r36, $r37, $r38, $r39, $r40;
        android.os.Bundle $r35, r64;
        android.content.pm.PackageParser$Package r45;
        android.content.res.TypedArray r48, r66;
        android.content.pm.PackageParser$Activity r56, r58, r63;
        android.content.pm.ComponentInfo r57;
        android.content.pm.PackageParser$Service r61;
        android.content.pm.PackageParser$Provider r62;

        r0 := @this: android.content.pm.PackageParser;

        r45 := @parameter0: android.content.pm.PackageParser$Package;

        r1 := @parameter1: android.content.res.Resources;

        r2 := @parameter2: android.content.res.XmlResourceParser;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        r3 := @parameter5: java.lang.String[];

        $r9 = <com.android.internal.R$styleable: int[] AndroidManifestApplication>;

        r48 = virtualinvoke r1.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r2, $r9);

        $z1 = virtualinvoke r48.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(7, 1);

        if $z1 == 0 goto label01;

        r49 = r45.<android.content.pm.PackageParser$Package: int[] splitFlags>;

        $i6 = r49[i1];

        $i7 = $i6 | 4;

        r49[i1] = $i7;

     label01:
        r50 = virtualinvoke r48.<android.content.res.TypedArray: java.lang.String getString(int)>(46);

        b8 = -108;

        z20 = 0;

        if r50 == null goto label03;

        $z19 = staticinvoke <com.android.internal.os.ClassLoaderFactory: boolean isValidClassLoaderName(java.lang.String)>(r50);

        if $z19 == 0 goto label02;

        goto label03;

     label02:
        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid class loader name: ");

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r50);

        $r44 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        r3[0] = $r44;

        r0.<android.content.pm.PackageParser: int mParseError> = -108;

        return 0;

     label03:
        $r10 = r45.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r11 = $r10.<android.content.pm.ApplicationInfo: java.lang.String[] splitClassLoaderNames>;

        $r11[i1] = r50;

        i2 = interfaceinvoke r2.<android.content.res.XmlResourceParser: int getDepth()>();

     label04:
        i9 = interfaceinvoke r2.<android.content.res.XmlResourceParser: int next()>();

        if i9 == 1 goto label28;

        if i9 != 3 goto label06;

        $i5 = interfaceinvoke r2.<android.content.res.XmlResourceParser: int getDepth()>();

        if $i5 <= i2 goto label05;

        goto label06;

     label05:
        goto label28;

     label06:
        if i9 == 3 goto label27;

        if i9 != 4 goto label07;

        goto label27;

     label07:
        $r12 = new android.content.pm.PackageParser$CachedComponentArgs;

        specialinvoke $r12.<android.content.pm.PackageParser$CachedComponentArgs: void <init>(android.content.pm.PackageParser$1)>(null);

        r7 = interfaceinvoke r2.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        $z2 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>("activity");

        if $z2 == 0 goto label09;

        $z17 = r45.<android.content.pm.PackageParser$Package: boolean baseHardwareAccelerated>;

        r56 = specialinvoke r0.<android.content.pm.PackageParser: android.content.pm.PackageParser$Activity parseActivity(android.content.pm.PackageParser$Package,android.content.res.Resources,android.content.res.XmlResourceParser,int,java.lang.String[],android.content.pm.PackageParser$CachedComponentArgs,boolean,boolean)>(r45, r1, r2, i0, r3, $r12, 0, $z17);

        if r56 != null goto label08;

        r0.<android.content.pm.PackageParser: int mParseError> = b8;

        return 0;

     label08:
        $r40 = r45.<android.content.pm.PackageParser$Package: java.util.ArrayList activities>;

        virtualinvoke $r40.<java.util.ArrayList: boolean add(java.lang.Object)>(r56);

        r57 = r56.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        z20 = 0;

        goto label24;

     label09:
        $z3 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>("receiver");

        if $z3 == 0 goto label11;

        r58 = specialinvoke r0.<android.content.pm.PackageParser: android.content.pm.PackageParser$Activity parseActivity(android.content.pm.PackageParser$Package,android.content.res.Resources,android.content.res.XmlResourceParser,int,java.lang.String[],android.content.pm.PackageParser$CachedComponentArgs,boolean,boolean)>(r45, r1, r2, i0, r3, $r12, 1, 0);

        if r58 != null goto label10;

        r0.<android.content.pm.PackageParser: int mParseError> = -108;

        return 0;

     label10:
        b8 = -108;

        z20 = 0;

        $r39 = r45.<android.content.pm.PackageParser$Package: java.util.ArrayList receivers>;

        virtualinvoke $r39.<java.util.ArrayList: boolean add(java.lang.Object)>(r58);

        r57 = r58.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        goto label24;

     label11:
        z21 = z20;

        b3 = b8;

        $z4 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>("service");

        if $z4 == 0 goto label13;

        r61 = specialinvoke r0.<android.content.pm.PackageParser: android.content.pm.PackageParser$Service parseService(android.content.pm.PackageParser$Package,android.content.res.Resources,android.content.res.XmlResourceParser,int,java.lang.String[],android.content.pm.PackageParser$CachedComponentArgs)>(r45, r1, r2, i0, r3, $r12);

        if r61 != null goto label12;

        r0.<android.content.pm.PackageParser: int mParseError> = b8;

        return z20;

     label12:
        $r38 = r45.<android.content.pm.PackageParser$Package: java.util.ArrayList services>;

        virtualinvoke $r38.<java.util.ArrayList: boolean add(java.lang.Object)>(r61);

        r57 = r61.<android.content.pm.PackageParser$Service: android.content.pm.ServiceInfo info>;

        goto label24;

     label13:
        $z5 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>("provider");

        if $z5 == 0 goto label15;

        r62 = specialinvoke r0.<android.content.pm.PackageParser: android.content.pm.PackageParser$Provider parseProvider(android.content.pm.PackageParser$Package,android.content.res.Resources,android.content.res.XmlResourceParser,int,java.lang.String[],android.content.pm.PackageParser$CachedComponentArgs)>(r45, r1, r2, i0, r3, $r12);

        if r62 != null goto label14;

        r0.<android.content.pm.PackageParser: int mParseError> = b8;

        return z20;

     label14:
        $r37 = r45.<android.content.pm.PackageParser$Package: java.util.ArrayList providers>;

        virtualinvoke $r37.<java.util.ArrayList: boolean add(java.lang.Object)>(r62);

        r57 = r62.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        goto label24;

     label15:
        $z6 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>("activity-alias");

        if $z6 == 0 goto label17;

        r63 = specialinvoke r0.<android.content.pm.PackageParser: android.content.pm.PackageParser$Activity parseActivityAlias(android.content.pm.PackageParser$Package,android.content.res.Resources,android.content.res.XmlResourceParser,int,java.lang.String[],android.content.pm.PackageParser$CachedComponentArgs)>(r45, r1, r2, i0, r3, $r12);

        if r63 != null goto label16;

        r0.<android.content.pm.PackageParser: int mParseError> = b8;

        return z20;

     label16:
        $r36 = r45.<android.content.pm.PackageParser$Package: java.util.ArrayList activities>;

        virtualinvoke $r36.<java.util.ArrayList: boolean add(java.lang.Object)>(r63);

        r57 = r63.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        goto label24;

     label17:
        $r13 = interfaceinvoke r2.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        $z7 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>("meta-data");

        if $z7 == 0 goto label18;

        $r35 = r45.<android.content.pm.PackageParser$Package: android.os.Bundle mAppMetaData>;

        r64 = specialinvoke r0.<android.content.pm.PackageParser: android.os.Bundle parseMetaData(android.content.res.Resources,android.content.res.XmlResourceParser,android.os.Bundle,java.lang.String[])>(r1, r2, $r35, r3);

        r45.<android.content.pm.PackageParser$Package: android.os.Bundle mAppMetaData> = r64;

        if r64 != null goto label23;

        r0.<android.content.pm.PackageParser: int mParseError> = b8;

        return z20;

     label18:
        $z8 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>("uses-static-library");

        if $z8 == 0 goto label19;

        $z12 = specialinvoke r0.<android.content.pm.PackageParser: boolean parseUsesStaticLibrary(android.content.pm.PackageParser$Package,android.content.res.Resources,android.content.res.XmlResourceParser,java.lang.String[])>(r45, r1, r2, r3);

        if $z12 != 0 goto label23;

        return z20;

     label19:
        $z9 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>("uses-library");

        if $z9 == 0 goto label22;

        $r27 = <com.android.internal.R$styleable: int[] AndroidManifestUsesLibrary>;

        r66 = virtualinvoke r1.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r2, $r27);

        i10 = (int) z20;

        r67 = virtualinvoke r66.<android.content.res.TypedArray: java.lang.String getNonResourceString(int)>(i10);

        z0 = virtualinvoke r66.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(1, 1);

        virtualinvoke r66.<android.content.res.TypedArray: void recycle()>();

        if r67 == null goto label21;

        r68 = virtualinvoke r67.<java.lang.String: java.lang.String intern()>();

        if z0 == 0 goto label20;

        $r31 = r45.<android.content.pm.PackageParser$Package: java.util.ArrayList usesLibraries>;

        $r32 = staticinvoke <com.android.internal.util.ArrayUtils: java.util.ArrayList add(java.util.ArrayList,java.lang.Object)>($r31, r68);

        r45.<android.content.pm.PackageParser$Package: java.util.ArrayList usesLibraries> = $r32;

        $r33 = r45.<android.content.pm.PackageParser$Package: java.util.ArrayList usesOptionalLibraries>;

        $r34 = staticinvoke <com.android.internal.util.ArrayUtils: java.util.ArrayList remove(java.util.ArrayList,java.lang.Object)>($r33, r68);

        r45.<android.content.pm.PackageParser$Package: java.util.ArrayList usesOptionalLibraries> = $r34;

        goto label21;

     label20:
        $r28 = r45.<android.content.pm.PackageParser$Package: java.util.ArrayList usesLibraries>;

        $z11 = staticinvoke <com.android.internal.util.ArrayUtils: boolean contains(java.util.Collection,java.lang.Object)>($r28, r68);

        if $z11 != 0 goto label21;

        $r29 = r45.<android.content.pm.PackageParser$Package: java.util.ArrayList usesOptionalLibraries>;

        $r30 = staticinvoke <com.android.internal.util.ArrayUtils: java.util.ArrayList add(java.util.ArrayList,java.lang.Object)>($r29, r68);

        r45.<android.content.pm.PackageParser$Package: java.util.ArrayList usesOptionalLibraries> = $r30;

     label21:
        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r2);

        r57 = null;

        b8 = b3;

        z20 = z21;

        goto label24;

     label22:
        $z10 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>("uses-package");

        if $z10 == 0 goto label26;

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r2);

     label23:
        r57 = null;

        z20 = z21;

        b8 = b3;

     label24:
        if r57 == null goto label25;

        $r24 = r57.<android.content.pm.ComponentInfo: java.lang.String splitName>;

        if $r24 != null goto label25;

        $r25 = r45.<android.content.pm.PackageParser$Package: java.lang.String[] splitNames>;

        $r26 = $r25[i1];

        r57.<android.content.pm.ComponentInfo: java.lang.String splitName> = $r26;

     label25:
        goto label04;

     label26:
        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element under <application>: ");

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

        $r18 = r0.<android.content.pm.PackageParser: java.lang.String mArchiveSourcePath>;

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r21 = interfaceinvoke r2.<android.content.res.XmlResourceParser: java.lang.String getPositionDescription()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageParser", $r23);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r2);

        goto label27;

     label27:
        goto label04;

     label28:
        return 1;
    }

    private android.content.pm.FeatureInfo parseUsesFeature(android.content.res.Resources, android.util.AttributeSet)
    {
        android.content.pm.PackageParser r0;
        android.util.AttributeSet r1;
        android.content.pm.FeatureInfo $r3;
        int[] $r4;
        java.lang.String $r5, $r6;
        int $i0, $i1, $i2, $i3;
        boolean $z0;
        android.content.res.Resources r7;
        android.content.res.TypedArray r8;

        r0 := @this: android.content.pm.PackageParser;

        r7 := @parameter0: android.content.res.Resources;

        r1 := @parameter1: android.util.AttributeSet;

        $r3 = new android.content.pm.FeatureInfo;

        specialinvoke $r3.<android.content.pm.FeatureInfo: void <init>()>();

        $r4 = <com.android.internal.R$styleable: int[] AndroidManifestUsesFeature>;

        r8 = virtualinvoke r7.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r1, $r4);

        $r5 = virtualinvoke r8.<android.content.res.TypedArray: java.lang.String getNonResourceString(int)>(0);

        $r3.<android.content.pm.FeatureInfo: java.lang.String name> = $r5;

        $i0 = virtualinvoke r8.<android.content.res.TypedArray: int getInt(int,int)>(3, 0);

        $r3.<android.content.pm.FeatureInfo: int version> = $i0;

        $r6 = $r3.<android.content.pm.FeatureInfo: java.lang.String name>;

        if $r6 != null goto label1;

        $i3 = virtualinvoke r8.<android.content.res.TypedArray: int getInt(int,int)>(1, 0);

        $r3.<android.content.pm.FeatureInfo: int reqGlEsVersion> = $i3;

     label1:
        $z0 = virtualinvoke r8.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(2, 1);

        if $z0 == 0 goto label2;

        $i1 = $r3.<android.content.pm.FeatureInfo: int flags>;

        $i2 = $i1 | 1;

        $r3.<android.content.pm.FeatureInfo: int flags> = $i2;

     label2:
        virtualinvoke r8.<android.content.res.TypedArray: void recycle()>();

        return $r3;
    }

    private boolean parseUsesPermission(android.content.pm.PackageParser$Package, android.content.res.Resources, android.content.res.XmlResourceParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.pm.PackageParser r0;
        android.content.pm.PackageParser$Package r1;
        android.content.res.XmlResourceParser r2;
        java.lang.String r3, $r9, $r12, $r14, $r16, r19, r21;
        int[] $r4;
        java.lang.StringBuilder $r5;
        java.util.ArrayList $r15, $r24;
        boolean $z1, $z2;
        int $i2, $i3, $i4, i5, $i6;
        android.content.res.Resources r17;
        android.content.res.TypedArray r18;
        android.util.TypedValue r20;
        android.content.pm.PackageParser$Callback r22, r23;

        r0 := @this: android.content.pm.PackageParser;

        r1 := @parameter0: android.content.pm.PackageParser$Package;

        r17 := @parameter1: android.content.res.Resources;

        r2 := @parameter2: android.content.res.XmlResourceParser;

        $r4 = <com.android.internal.R$styleable: int[] AndroidManifestUsesPermission>;

        r18 = virtualinvoke r17.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r2, $r4);

        r19 = virtualinvoke r18.<android.content.res.TypedArray: java.lang.String getNonResourceString(int)>(0);

        r20 = virtualinvoke r18.<android.content.res.TypedArray: android.util.TypedValue peekValue(int)>(1);

        i5 = 0;

        if r20 == null goto label1;

        i5 = 0;

        $i3 = r20.<android.util.TypedValue: int type>;

        if $i3 < 16 goto label1;

        i5 = 0;

        $i4 = r20.<android.util.TypedValue: int type>;

        if $i4 > 31 goto label1;

        i5 = r20.<android.util.TypedValue: int data>;

     label1:
        r3 = virtualinvoke r18.<android.content.res.TypedArray: java.lang.String getNonConfigurationString(int,int)>(2, 0);

        r21 = virtualinvoke r18.<android.content.res.TypedArray: java.lang.String getNonConfigurationString(int,int)>(3, 0);

        virtualinvoke r18.<android.content.res.TypedArray: void recycle()>();

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r2);

        if r19 != null goto label2;

        return 1;

     label2:
        if i5 == 0 goto label3;

        $i2 = <android.os.Build$VERSION: int RESOURCES_SDK_INT>;

        if i5 >= $i2 goto label3;

        return 1;

     label3:
        if r3 == null goto label4;

        r22 = r0.<android.content.pm.PackageParser: android.content.pm.PackageParser$Callback mCallback>;

        if r22 == null goto label4;

        $z2 = interfaceinvoke r22.<android.content.pm.PackageParser$Callback: boolean hasFeature(java.lang.String)>(r3);

        if $z2 != 0 goto label4;

        return 1;

     label4:
        if r21 == null goto label5;

        r23 = r0.<android.content.pm.PackageParser: android.content.pm.PackageParser$Callback mCallback>;

        if r23 == null goto label5;

        $z1 = interfaceinvoke r23.<android.content.pm.PackageParser$Callback: boolean hasFeature(java.lang.String)>(r21);

        if $z1 == 0 goto label5;

        return 1;

     label5:
        $r24 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList requestedPermissions>;

        $i6 = virtualinvoke $r24.<java.util.ArrayList: int indexOf(java.lang.Object)>(r19);

        if $i6 != -1 goto label6;

        $r15 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList requestedPermissions>;

        $r16 = virtualinvoke r19.<java.lang.String: java.lang.String intern()>();

        virtualinvoke $r15.<java.util.ArrayList: boolean add(java.lang.Object)>($r16);

        goto label7;

     label6:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring duplicate uses-permissions/uses-permissions-sdk-m: ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in package: ");

        $r9 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at: ");

        $r12 = interfaceinvoke r2.<android.content.res.XmlResourceParser: java.lang.String getPositionDescription()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageParser", $r14);

     label7:
        return 1;
    }

    private boolean parseUsesStaticLibrary(android.content.pm.PackageParser$Package, android.content.res.Resources, android.content.res.XmlResourceParser, java.lang.String[]) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.pm.PackageParser r0;
        java.lang.String[] r1, r33, r34, r35, r36;
        int i0, $i1, $i2, $i3, $i4;
        int[] $r2;
        java.util.ArrayList $r9, $r12, $r13, $r19;
        java.lang.String $r10, $r23, r28, r29, r31, r32, $r39;
        android.content.pm.ApplicationInfo $r11;
        long $l5;
        long[] $r14, $r15;
        java.lang.String[][] $r16, $r18;
        java.lang.Object[] $r17;
        boolean $z0;
        java.lang.StringBuilder $r20, $r37;
        android.content.pm.PackageParser$Package r24;
        android.content.res.Resources r25;
        android.content.res.XmlResourceParser r26;
        android.content.res.TypedArray r27;

        r0 := @this: android.content.pm.PackageParser;

        r24 := @parameter0: android.content.pm.PackageParser$Package;

        r25 := @parameter1: android.content.res.Resources;

        r26 := @parameter2: android.content.res.XmlResourceParser;

        r1 := @parameter3: java.lang.String[];

        $r2 = <com.android.internal.R$styleable: int[] AndroidManifestUsesStaticLibrary>;

        r27 = virtualinvoke r25.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r26, $r2);

        r28 = virtualinvoke r27.<android.content.res.TypedArray: java.lang.String getNonResourceString(int)>(0);

        i0 = virtualinvoke r27.<android.content.res.TypedArray: int getInt(int,int)>(1, -1);

        r29 = virtualinvoke r27.<android.content.res.TypedArray: java.lang.String getNonResourceString(int)>(2);

        virtualinvoke r27.<android.content.res.TypedArray: void recycle()>();

        if r28 == null goto label5;

        if i0 < 0 goto label5;

        if r29 != null goto label1;

        goto label5;

     label1:
        $r9 = r24.<android.content.pm.PackageParser$Package: java.util.ArrayList usesStaticLibraries>;

        if $r9 == null goto label2;

        $r19 = r24.<android.content.pm.PackageParser$Package: java.util.ArrayList usesStaticLibraries>;

        $z0 = virtualinvoke $r19.<java.util.ArrayList: boolean contains(java.lang.Object)>(r28);

        if $z0 == 0 goto label2;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Depending on multiple versions of static library ");

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r28);

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        r1[0] = $r23;

        r0.<android.content.pm.PackageParser: int mParseError> = -108;

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r26);

        return 0;

     label2:
        r31 = virtualinvoke r28.<java.lang.String: java.lang.String intern()>();

        $r10 = virtualinvoke r29.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(":", "");

        r32 = virtualinvoke $r10.<java.lang.String: java.lang.String toLowerCase()>();

        r33 = <libcore.util.EmptyArray: java.lang.String[] STRING>;

        $r11 = r24.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i1 = $r11.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i1 < 27 goto label3;

        r34 = specialinvoke r0.<android.content.pm.PackageParser: java.lang.String[] parseAdditionalCertificates(android.content.res.Resources,android.content.res.XmlResourceParser,java.lang.String[])>(r25, r26, r1);

        r35 = r34;

        if r34 != null goto label4;

        return 0;

     label3:
        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r26);

        r35 = r33;

     label4:
        $i2 = lengthof r35;

        $i3 = $i2 + 1;

        r36 = newarray (java.lang.String)[$i3];

        r36[0] = r32;

        $i4 = lengthof r35;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r35, 0, r36, 1, $i4);

        $r12 = r24.<android.content.pm.PackageParser$Package: java.util.ArrayList usesStaticLibraries>;

        $r13 = staticinvoke <com.android.internal.util.ArrayUtils: java.util.ArrayList add(java.util.ArrayList,java.lang.Object)>($r12, r31);

        r24.<android.content.pm.PackageParser$Package: java.util.ArrayList usesStaticLibraries> = $r13;

        $r14 = r24.<android.content.pm.PackageParser$Package: long[] usesStaticLibrariesVersions>;

        $l5 = (long) i0;

        $r15 = staticinvoke <com.android.internal.util.ArrayUtils: long[] appendLong(long[],long,boolean)>($r14, $l5, 1);

        r24.<android.content.pm.PackageParser$Package: long[] usesStaticLibrariesVersions> = $r15;

        $r16 = r24.<android.content.pm.PackageParser$Package: java.lang.String[][] usesStaticLibrariesCertDigests>;

        $r17 = staticinvoke <com.android.internal.util.ArrayUtils: java.lang.Object[] appendElement(java.lang.Class,java.lang.Object[],java.lang.Object,boolean)>(class "[Ljava/lang/String;", $r16, r36, 1);

        $r18 = (java.lang.String[][]) $r17;

        r24.<android.content.pm.PackageParser$Package: java.lang.String[][] usesStaticLibrariesCertDigests> = $r18;

        return 1;

     label5:
        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad uses-static-library declaration name: ");

        virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r28);

        virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" version: ");

        virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" certDigest");

        virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r29);

        $r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        r1[0] = $r39;

        r0.<android.content.pm.PackageParser: int mParseError> = -108;

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r26);

        return 0;
    }

    private static android.content.pm.VerifierInfo parseVerifier(android.util.AttributeSet)
    {
        int i0, i1, $i3, i5;
        android.content.pm.VerifierInfo $r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r4, r6, r7;
        android.util.AttributeSet r5;
        java.security.PublicKey r8;

        r5 := @parameter0: android.util.AttributeSet;

        r6 = null;

        r7 = null;

        i0 = interfaceinvoke r5.<android.util.AttributeSet: int getAttributeCount()>();

        i5 = 0;

     label1:
        if i5 >= i0 goto label5;

        i1 = interfaceinvoke r5.<android.util.AttributeSet: int getAttributeNameResource(int)>(i5);

        if i1 == 16842755 goto label3;

        if i1 == 16843686 goto label2;

        goto label4;

     label2:
        r7 = interfaceinvoke r5.<android.util.AttributeSet: java.lang.String getAttributeValue(int)>(i5);

        goto label4;

     label3:
        r6 = interfaceinvoke r5.<android.util.AttributeSet: java.lang.String getAttributeValue(int)>(i5);

     label4:
        i5 = i5 + 1;

        goto label1;

     label5:
        if r6 == null goto label8;

        $i3 = virtualinvoke r6.<java.lang.String: int length()>();

        if $i3 != 0 goto label6;

        goto label8;

     label6:
        r8 = staticinvoke <android.content.pm.PackageParser: java.security.PublicKey parsePublicKey(java.lang.String)>(r7);

        if r8 != null goto label7;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to parse verifier public key for ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PackageParser", $r4);

        return null;

     label7:
        $r0 = new android.content.pm.VerifierInfo;

        specialinvoke $r0.<android.content.pm.VerifierInfo: void <init>(java.lang.String,java.security.PublicKey)>(r6, r8);

        return $r0;

     label8:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PackageParser", "verifier package name was null; skipping");

        return null;
    }

    public static void readConfigUseRoundIcon(android.content.res.Resources)
    {
        android.content.res.Resources r0, $r7, r10;
        android.content.pm.IPackageManager $r1;
        int $i0;
        android.app.ResourcesManager $r2;
        java.lang.String[] $r3, $r4;
        android.content.res.CompatibilityInfo $r5;
        java.lang.ClassLoader $r6;
        boolean $z0, $z1;
        android.os.RemoteException $r8;
        java.lang.RuntimeException $r9;
        android.content.pm.ApplicationInfo r11;

        r10 := @parameter0: android.content.res.Resources;

        if r10 == null goto label1;

        $z1 = virtualinvoke r10.<android.content.res.Resources: boolean getBoolean(int)>(17891572);

        <android.content.pm.PackageParser: boolean sUseRoundIcon> = $z1;

        return;

     label1:
        $r1 = staticinvoke <android.app.ActivityThread: android.content.pm.IPackageManager getPackageManager()>();

        $i0 = staticinvoke <android.os.UserHandle: int myUserId()>();

        r11 = interfaceinvoke $r1.<android.content.pm.IPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int,int)>("android", 0, $i0);

     label2:
        r0 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>();

        $r2 = staticinvoke <android.app.ResourcesManager: android.app.ResourcesManager getInstance()>();

        $r3 = r11.<android.content.pm.ApplicationInfo: java.lang.String[] resourceDirs>;

        $r4 = r11.<android.content.pm.ApplicationInfo: java.lang.String[] sharedLibraryFiles>;

        $r5 = virtualinvoke r0.<android.content.res.Resources: android.content.res.CompatibilityInfo getCompatibilityInfo()>();

        $r6 = virtualinvoke r0.<android.content.res.Resources: java.lang.ClassLoader getClassLoader()>();

        $r7 = virtualinvoke $r2.<android.app.ResourcesManager: android.content.res.Resources getResources(android.os.IBinder,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],int,android.content.res.Configuration,android.content.res.CompatibilityInfo,java.lang.ClassLoader,java.util.List)>(null, null, null, $r3, $r4, 0, null, $r5, $r6, null);

        $z0 = virtualinvoke $r7.<android.content.res.Resources: boolean getBoolean(int)>(17891572);

        <android.content.pm.PackageParser: boolean sUseRoundIcon> = $z0;

        return;

     label3:
        $r8 := @caughtexception;

        $r9 = virtualinvoke $r8.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r9;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private void resolveWindowLayout(android.content.pm.PackageParser$Activity)
    {
        android.content.pm.PackageParser r0;
        android.content.pm.ActivityInfo r1;
        android.os.Bundle $r2, $r3, $r5;
        boolean $z0;
        android.content.pm.ActivityInfo$WindowLayout $r4, $r6, $r7, $r8, $r9;
        java.lang.String $r10, r12;
        android.content.pm.PackageParser$Activity r11;

        r0 := @this: android.content.pm.PackageParser;

        r11 := @parameter0: android.content.pm.PackageParser$Activity;

        $r2 = r11.<android.content.pm.PackageParser$Activity: android.os.Bundle metaData>;

        if $r2 == null goto label4;

        $r3 = r11.<android.content.pm.PackageParser$Activity: android.os.Bundle metaData>;

        $z0 = virtualinvoke $r3.<android.os.Bundle: boolean containsKey(java.lang.String)>("android.activity_window_layout_affinity");

        if $z0 != 0 goto label1;

        goto label4;

     label1:
        r1 = r11.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $r4 = r1.<android.content.pm.ActivityInfo: android.content.pm.ActivityInfo$WindowLayout windowLayout>;

        if $r4 == null goto label2;

        $r9 = r1.<android.content.pm.ActivityInfo: android.content.pm.ActivityInfo$WindowLayout windowLayout>;

        $r10 = $r9.<android.content.pm.ActivityInfo$WindowLayout: java.lang.String windowLayoutAffinity>;

        if $r10 == null goto label2;

        return;

     label2:
        $r5 = r11.<android.content.pm.PackageParser$Activity: android.os.Bundle metaData>;

        r12 = virtualinvoke $r5.<android.os.Bundle: java.lang.String getString(java.lang.String)>("android.activity_window_layout_affinity");

        $r6 = r1.<android.content.pm.ActivityInfo: android.content.pm.ActivityInfo$WindowLayout windowLayout>;

        if $r6 != null goto label3;

        $r8 = new android.content.pm.ActivityInfo$WindowLayout;

        specialinvoke $r8.<android.content.pm.ActivityInfo$WindowLayout: void <init>(int,float,int,float,int,int,int)>(-1, -1.0F, -1, -1.0F, 0, -1, -1);

        r1.<android.content.pm.ActivityInfo: android.content.pm.ActivityInfo$WindowLayout windowLayout> = $r8;

     label3:
        $r7 = r1.<android.content.pm.ActivityInfo: android.content.pm.ActivityInfo$WindowLayout windowLayout>;

        $r7.<android.content.pm.ActivityInfo$WindowLayout: java.lang.String windowLayoutAffinity> = r12;

        return;

     label4:
        return;
    }

    private void setActivityResizeMode(android.content.pm.ActivityInfo, android.content.res.TypedArray, android.content.pm.PackageParser$Package)
    {
        android.content.pm.PackageParser r0;
        android.content.pm.ActivityInfo r1;
        android.content.res.TypedArray r2;
        android.content.pm.PackageParser$Package r3;
        android.content.pm.ApplicationInfo $r4, $r5, $r6;
        int $i0, $i1, $i2, $i3, $i4, i5;
        boolean $z0, $z1, $z2, $z3, $z4, z5, z6;

        r0 := @this: android.content.pm.PackageParser;

        r1 := @parameter0: android.content.pm.ActivityInfo;

        r2 := @parameter1: android.content.res.TypedArray;

        r3 := @parameter2: android.content.pm.PackageParser$Package;

        $r4 = r3.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        i5 = $r4.<android.content.pm.ApplicationInfo: int privateFlags>;

        z5 = 1;

        $i0 = i5 & 3072;

        if $i0 == 0 goto label01;

        z6 = 1;

        goto label02;

     label01:
        z6 = 0;

     label02:
        $z0 = virtualinvoke r2.<android.content.res.TypedArray: boolean hasValue(int)>(40);

        if $z0 != 0 goto label09;

        if z6 == 0 goto label03;

        goto label09;

     label03:
        $r6 = r3.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i3 = $r6.<android.content.pm.ApplicationInfo: int privateFlags>;

        $i4 = $i3 & 4096;

        if $i4 == 0 goto label04;

        r1.<android.content.pm.ActivityInfo: int resizeMode> = 1;

        return;

     label04:
        $z2 = virtualinvoke r1.<android.content.pm.ActivityInfo: boolean isFixedOrientationPortrait()>();

        if $z2 == 0 goto label05;

        r1.<android.content.pm.ActivityInfo: int resizeMode> = 6;

        goto label08;

     label05:
        $z3 = virtualinvoke r1.<android.content.pm.ActivityInfo: boolean isFixedOrientationLandscape()>();

        if $z3 == 0 goto label06;

        r1.<android.content.pm.ActivityInfo: int resizeMode> = 5;

        goto label08;

     label06:
        $z4 = virtualinvoke r1.<android.content.pm.ActivityInfo: boolean isFixedOrientation()>();

        if $z4 == 0 goto label07;

        r1.<android.content.pm.ActivityInfo: int resizeMode> = 7;

        goto label08;

     label07:
        r1.<android.content.pm.ActivityInfo: int resizeMode> = 4;

     label08:
        return;

     label09:
        $r5 = r3.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i1 = $r5.<android.content.pm.ApplicationInfo: int privateFlags>;

        $i2 = $i1 & 1024;

        if $i2 == 0 goto label10;

        goto label11;

     label10:
        z5 = 0;

     label11:
        $z1 = virtualinvoke r2.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(40, z5);

        if $z1 == 0 goto label12;

        r1.<android.content.pm.ActivityInfo: int resizeMode> = 2;

        goto label13;

     label12:
        r1.<android.content.pm.ActivityInfo: int resizeMode> = 0;

     label13:
        return;
    }

    public static void setCompatibilityModeEnabled(boolean)
    {
        boolean z0;

        z0 := @parameter0: boolean;

        <android.content.pm.PackageParser: boolean sCompatibilityModeEnabled> = z0;

        return;
    }

    private void setMaxAspectRatio(android.content.pm.PackageParser$Package)
    {
        android.content.pm.PackageParser r0;
        android.content.pm.PackageParser$Activity r1;
        android.content.pm.ApplicationInfo $r2, $r3, $r10;
        int $i0;
        float $f0, f1, f2, f3;
        byte $b1;
        android.os.Bundle $r4, $r6, $r7, $r8, $r9;
        java.lang.Object $r5;
        boolean $z0, $z1, $z2;
        android.content.pm.PackageParser$Package r11;
        java.util.ArrayList $r12;
        java.util.Iterator r13;

        r0 := @this: android.content.pm.PackageParser;

        r11 := @parameter0: android.content.pm.PackageParser$Package;

        $r2 = r11.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i0 = $r2.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i0 >= 26 goto label1;

        f1 = 1.86F;

        goto label2;

     label1:
        f1 = 0.0F;

     label2:
        $r3 = r11.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $f0 = $r3.<android.content.pm.ApplicationInfo: float maxAspectRatio>;

        $b1 = $f0 cmpl 0.0F;

        if $b1 == 0 goto label3;

        $r10 = r11.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        f2 = $r10.<android.content.pm.ApplicationInfo: float maxAspectRatio>;

        goto label4;

     label3:
        f2 = f1;

        $r4 = r11.<android.content.pm.PackageParser$Package: android.os.Bundle mAppMetaData>;

        if $r4 == null goto label4;

        f2 = f1;

        $r8 = r11.<android.content.pm.PackageParser$Package: android.os.Bundle mAppMetaData>;

        $z1 = virtualinvoke $r8.<android.os.Bundle: boolean containsKey(java.lang.String)>("android.max_aspect");

        if $z1 == 0 goto label4;

        $r9 = r11.<android.content.pm.PackageParser$Package: android.os.Bundle mAppMetaData>;

        f2 = virtualinvoke $r9.<android.os.Bundle: float getFloat(java.lang.String,float)>("android.max_aspect", f1);

     label4:
        $r12 = r11.<android.content.pm.PackageParser$Package: java.util.ArrayList activities>;

        r13 = virtualinvoke $r12.<java.util.ArrayList: java.util.Iterator iterator()>();

     label5:
        $z2 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label9;

        $r5 = interfaceinvoke r13.<java.util.Iterator: java.lang.Object next()>();

        r1 = (android.content.pm.PackageParser$Activity) $r5;

        $z0 = staticinvoke <android.content.pm.PackageParser$Activity: boolean access$400(android.content.pm.PackageParser$Activity)>(r1);

        if $z0 == 0 goto label6;

        goto label5;

     label6:
        $r6 = r1.<android.content.pm.PackageParser$Activity: android.os.Bundle metaData>;

        if $r6 == null goto label7;

        $r7 = r1.<android.content.pm.PackageParser$Activity: android.os.Bundle metaData>;

        f3 = virtualinvoke $r7.<android.os.Bundle: float getFloat(java.lang.String,float)>("android.max_aspect", f2);

        goto label8;

     label7:
        f3 = f2;

     label8:
        staticinvoke <android.content.pm.PackageParser$Activity: void access$200(android.content.pm.PackageParser$Activity,float)>(r1, f3);

        goto label5;

     label9:
        return;
    }

    private void setMinAspectRatio(android.content.pm.PackageParser$Package)
    {
        android.content.pm.PackageParser r0;
        float f0, f1;
        android.content.pm.ApplicationInfo $r1, $r2, $r4;
        byte $b0;
        int $i1;
        java.lang.Object $r3;
        boolean $z0, $z1, $z2;
        android.content.pm.PackageParser$Package r5;
        android.content.pm.PackageParser$Callback r6;
        java.util.ArrayList $r7;
        java.util.Iterator r8;
        android.content.pm.PackageParser$Activity r9;

        r0 := @this: android.content.pm.PackageParser;

        r5 := @parameter0: android.content.pm.PackageParser$Package;

        $r1 = r5.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        f0 = $r1.<android.content.pm.ApplicationInfo: float minAspectRatio>;

        f1 = 0.0F;

        $b0 = f0 cmpl 0.0F;

        if $b0 == 0 goto label1;

        $r4 = r5.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        f1 = $r4.<android.content.pm.ApplicationInfo: float minAspectRatio>;

        goto label4;

     label1:
        $r2 = r5.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i1 = $r2.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i1 < 29 goto label2;

        goto label4;

     label2:
        r6 = r0.<android.content.pm.PackageParser: android.content.pm.PackageParser$Callback mCallback>;

        if r6 == null goto label3;

        $z1 = interfaceinvoke r6.<android.content.pm.PackageParser$Callback: boolean hasFeature(java.lang.String)>("android.hardware.type.watch");

        if $z1 == 0 goto label3;

        f1 = 1.0F;

        goto label4;

     label3:
        f1 = 1.333F;

     label4:
        $r7 = r5.<android.content.pm.PackageParser$Package: java.util.ArrayList activities>;

        r8 = virtualinvoke $r7.<java.util.ArrayList: java.util.Iterator iterator()>();

     label5:
        $z2 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label7;

        $r3 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();

        r9 = (android.content.pm.PackageParser$Activity) $r3;

        $z0 = staticinvoke <android.content.pm.PackageParser$Activity: boolean access$500(android.content.pm.PackageParser$Activity)>(r9);

        if $z0 == 0 goto label6;

        goto label5;

     label6:
        staticinvoke <android.content.pm.PackageParser$Activity: void access$300(android.content.pm.PackageParser$Activity,float)>(r9, f1);

        goto label5;

     label7:
        return;
    }

    private void setSupportsSizeChanges(android.content.pm.PackageParser$Package)
    {
        android.content.pm.PackageParser r0;
        java.util.Iterator r1;
        android.os.Bundle $r2, $r5, $r6, $r7;
        java.lang.Object $r3;
        android.content.pm.ActivityInfo $r4;
        boolean $z0, $z1, z2, $z3;
        android.content.pm.PackageParser$Package r8;
        java.util.ArrayList $r9;
        android.content.pm.PackageParser$Activity r10;

        r0 := @this: android.content.pm.PackageParser;

        r8 := @parameter0: android.content.pm.PackageParser$Package;

        $r2 = r8.<android.content.pm.PackageParser$Package: android.os.Bundle mAppMetaData>;

        if $r2 == null goto label1;

        $r7 = r8.<android.content.pm.PackageParser$Package: android.os.Bundle mAppMetaData>;

        $z1 = virtualinvoke $r7.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>("android.supports_size_changes", 0);

        if $z1 == 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        $r9 = r8.<android.content.pm.PackageParser$Package: java.util.ArrayList activities>;

        r1 = virtualinvoke $r9.<java.util.ArrayList: java.util.Iterator iterator()>();

     label3:
        $z3 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label6;

        $r3 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r10 = (android.content.pm.PackageParser$Activity) $r3;

        if z2 != 0 goto label4;

        $r5 = r10.<android.content.pm.PackageParser$Activity: android.os.Bundle metaData>;

        if $r5 == null goto label5;

        $r6 = r10.<android.content.pm.PackageParser$Activity: android.os.Bundle metaData>;

        $z0 = virtualinvoke $r6.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>("android.supports_size_changes", 0);

        if $z0 == 0 goto label5;

     label4:
        $r4 = r10.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $r4.<android.content.pm.ActivityInfo: boolean supportsSizeChanges> = 1;

     label5:
        goto label3;

     label6:
        return;
    }

    public static android.util.ArraySet toSigningKeys(android.content.pm.Signature[]) throws java.security.cert.CertificateException
    {
        android.content.pm.Signature[] r0;
        android.util.ArraySet $r2;
        int $i0, $i1, i2;
        android.content.pm.Signature $r3;
        java.security.PublicKey $r4;

        r0 := @parameter0: android.content.pm.Signature[];

        $r2 = new android.util.ArraySet;

        $i0 = lengthof r0;

        specialinvoke $r2.<android.util.ArraySet: void <init>(int)>($i0);

        i2 = 0;

     label1:
        $i1 = lengthof r0;

        if i2 >= $i1 goto label2;

        $r3 = r0[i2];

        $r4 = virtualinvoke $r3.<android.content.pm.Signature: java.security.PublicKey getPublicKey()>();

        virtualinvoke $r2.<android.util.ArraySet: boolean add(java.lang.Object)>($r4);

        i2 = i2 + 1;

        goto label1;

     label2:
        return $r2;
    }

    private static void updateApplicationInfo(android.content.pm.ApplicationInfo, int, android.content.pm.PackageUserState)
    {
        android.content.pm.ApplicationInfo r0;
        android.content.pm.PackageUserState r1;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, z7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, i29, $i30, $i31, i32;
        java.lang.String $r2, $r4;
        java.lang.String[] $r3;

        r0 := @parameter0: android.content.pm.ApplicationInfo;

        i29 := @parameter1: int;

        r1 := @parameter2: android.content.pm.PackageUserState;

        $z1 = <android.content.pm.PackageParser: boolean sCompatibilityModeEnabled>;

        if $z1 != 0 goto label01;

        virtualinvoke r0.<android.content.pm.ApplicationInfo: void disableCompatibilityMode()>();

     label01:
        $z2 = r1.<android.content.pm.PackageUserState: boolean installed>;

        if $z2 == 0 goto label02;

        $i27 = r0.<android.content.pm.ApplicationInfo: int flags>;

        $i28 = $i27 | 8388608;

        r0.<android.content.pm.ApplicationInfo: int flags> = $i28;

        goto label03;

     label02:
        $i0 = r0.<android.content.pm.ApplicationInfo: int flags>;

        $i1 = $i0 & -8388609;

        r0.<android.content.pm.ApplicationInfo: int flags> = $i1;

     label03:
        $z3 = r1.<android.content.pm.PackageUserState: boolean suspended>;

        if $z3 == 0 goto label04;

        $i25 = r0.<android.content.pm.ApplicationInfo: int flags>;

        $i26 = $i25 | 1073741824;

        r0.<android.content.pm.ApplicationInfo: int flags> = $i26;

        goto label05;

     label04:
        $i2 = r0.<android.content.pm.ApplicationInfo: int flags>;

        $i3 = $i2 & -1073741825;

        r0.<android.content.pm.ApplicationInfo: int flags> = $i3;

     label05:
        $z4 = r1.<android.content.pm.PackageUserState: boolean instantApp>;

        if $z4 == 0 goto label06;

        $i23 = r0.<android.content.pm.ApplicationInfo: int privateFlags>;

        $i24 = $i23 | 128;

        r0.<android.content.pm.ApplicationInfo: int privateFlags> = $i24;

        goto label07;

     label06:
        $i4 = r0.<android.content.pm.ApplicationInfo: int privateFlags>;

        $i5 = $i4 & -129;

        r0.<android.content.pm.ApplicationInfo: int privateFlags> = $i5;

     label07:
        $z5 = r1.<android.content.pm.PackageUserState: boolean virtualPreload>;

        if $z5 == 0 goto label08;

        $i21 = r0.<android.content.pm.ApplicationInfo: int privateFlags>;

        $i22 = $i21 | 65536;

        r0.<android.content.pm.ApplicationInfo: int privateFlags> = $i22;

        goto label09;

     label08:
        $i6 = r0.<android.content.pm.ApplicationInfo: int privateFlags>;

        $i7 = $i6 & -65537;

        r0.<android.content.pm.ApplicationInfo: int privateFlags> = $i7;

     label09:
        z0 = r1.<android.content.pm.PackageUserState: boolean hidden>;

        z7 = 1;

        if z0 == 0 goto label10;

        $i19 = r0.<android.content.pm.ApplicationInfo: int privateFlags>;

        $i20 = $i19 | 1;

        r0.<android.content.pm.ApplicationInfo: int privateFlags> = $i20;

        goto label11;

     label10:
        $i8 = r0.<android.content.pm.ApplicationInfo: int privateFlags>;

        $i9 = $i8 & -2;

        r0.<android.content.pm.ApplicationInfo: int privateFlags> = $i9;

     label11:
        $i10 = r1.<android.content.pm.PackageUserState: int enabled>;

        if $i10 != 1 goto label12;

        r0.<android.content.pm.ApplicationInfo: boolean enabled> = 1;

        goto label17;

     label12:
        $i11 = r1.<android.content.pm.PackageUserState: int enabled>;

        if $i11 != 4 goto label15;

        $i18 = 32768 & i29;

        if $i18 == 0 goto label13;

        goto label14;

     label13:
        z7 = 0;

     label14:
        r0.<android.content.pm.ApplicationInfo: boolean enabled> = z7;

        goto label17;

     label15:
        $i12 = r1.<android.content.pm.PackageUserState: int enabled>;

        if $i12 == 2 goto label16;

        $i17 = r1.<android.content.pm.PackageUserState: int enabled>;

        if $i17 != 3 goto label17;

     label16:
        r0.<android.content.pm.ApplicationInfo: boolean enabled> = 0;

     label17:
        $i30 = r1.<android.content.pm.PackageUserState: int enabled>;

        r0.<android.content.pm.ApplicationInfo: int enabledSetting> = $i30;

        $i31 = r0.<android.content.pm.ApplicationInfo: int category>;

        if $i31 != -1 goto label18;

        $i16 = r1.<android.content.pm.PackageUserState: int categoryHint>;

        r0.<android.content.pm.ApplicationInfo: int category> = $i16;

     label18:
        $i13 = r0.<android.content.pm.ApplicationInfo: int category>;

        if $i13 != -1 goto label19;

        $r4 = r0.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $i15 = staticinvoke <android.content.pm.FallbackCategoryProvider: int getFallbackCategory(java.lang.String)>($r4);

        r0.<android.content.pm.ApplicationInfo: int category> = $i15;

     label19:
        $r2 = staticinvoke <android.content.pm.SELinuxUtil: java.lang.String assignSeinfoUser(android.content.pm.PackageUserState)>(r1);

        r0.<android.content.pm.ApplicationInfo: java.lang.String seInfoUser> = $r2;

        $r3 = virtualinvoke r1.<android.content.pm.PackageUserState: java.lang.String[] getAllOverlayPaths()>();

        r0.<android.content.pm.ApplicationInfo: java.lang.String[] resourceDirs> = $r3;

        $z6 = <android.content.pm.PackageParser: boolean sUseRoundIcon>;

        if $z6 == 0 goto label20;

        $i14 = r0.<android.content.pm.ApplicationInfo: int roundIconRes>;

        if $i14 == 0 goto label20;

        i32 = r0.<android.content.pm.ApplicationInfo: int roundIconRes>;

        goto label21;

     label20:
        i32 = r0.<android.content.pm.ApplicationInfo: int iconRes>;

     label21:
        r0.<android.content.pm.ApplicationInfo: int icon> = i32;

        return;
    }

    public static java.lang.String validateName(java.lang.String, boolean, boolean)
    {
        boolean z0, z1, $z2, z3, z4, z5, z6;
        int i0, i2;
        char c1;
        java.lang.StringBuilder $r0;
        java.lang.String $r4, r5, r7;

        r5 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        i0 = virtualinvoke r5.<java.lang.String: int length()>();

        z3 = 0;

        z4 = 1;

        i2 = 0;

     label01:
        if i2 >= i0 goto label09;

        c1 = virtualinvoke r5.<java.lang.String: char charAt(int)>(i2);

        if c1 < 97 goto label02;

        if c1 <= 122 goto label03;

     label02:
        if c1 < 65 goto label04;

        if c1 > 90 goto label04;

     label03:
        z5 = 0;

        z6 = z3;

        goto label07;

     label04:
        if z4 != 0 goto label06;

        if c1 < 48 goto label05;

        z6 = z3;

        z5 = z4;

        if c1 <= 57 goto label07;

     label05:
        if c1 != 95 goto label06;

        z6 = z3;

        z5 = z4;

        goto label07;

     label06:
        if c1 != 46 goto label08;

        z6 = 1;

        z5 = 1;

     label07:
        i2 = i2 + 1;

        z3 = z6;

        z4 = z5;

        goto label01;

     label08:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bad character \'");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c1);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;

     label09:
        if z1 == 0 goto label10;

        $z2 = staticinvoke <android.os.FileUtils: boolean isValidExtFilename(java.lang.String)>(r5);

        if $z2 != 0 goto label10;

        return "Invalid filename";

     label10:
        if z3 != 0 goto label12;

        if z0 != 0 goto label11;

        goto label12;

     label11:
        r7 = "must have at least one \'.\' separator";

        goto label13;

     label12:
        r7 = null;

     label13:
        return r7;
    }

    public android.content.pm.PackageParser$Package parseMonolithicPackage(java.io.File, int) throws android.content.pm.PackageParser$PackageParserException
    {
        android.content.pm.PackageParser r0;
        int i0;
        java.lang.StringBuilder r1, $r5;
        boolean $z0, $z1, $z2;
        android.content.pm.split.DefaultSplitAssetLoader $r2;
        android.content.res.AssetManager $r3;
        java.lang.String $r4, $r9, $r14;
        android.content.pm.PackageParser$PackageParserException $r8, r22;
        java.lang.Throwable $r10, $r11;
        java.io.File r15;
        android.content.pm.PackageParser$PackageLite r16;
        android.content.pm.PackageParser$Package r19;

        r0 := @this: android.content.pm.PackageParser;

        r15 := @parameter0: java.io.File;

        i0 := @parameter1: int;

        r16 = staticinvoke <android.content.pm.PackageParser: android.content.pm.PackageParser$PackageLite parseMonolithicPackageLite(java.io.File,int)>(r15, i0);

        $z0 = r0.<android.content.pm.PackageParser: boolean mOnlyCoreApps>;

        if $z0 == 0 goto label2;

        $z2 = r16.<android.content.pm.PackageParser$PackageLite: boolean coreApp>;

        if $z2 == 0 goto label1;

        goto label2;

     label1:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not a coreApp: ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r15);

        $r8 = new android.content.pm.PackageParser$PackageParserException;

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<android.content.pm.PackageParser$PackageParserException: void <init>(int,java.lang.String)>(-108, $r9);

        throw $r8;

     label2:
        $r2 = new android.content.pm.split.DefaultSplitAssetLoader;

        specialinvoke $r2.<android.content.pm.split.DefaultSplitAssetLoader: void <init>(android.content.pm.PackageParser$PackageLite,int)>(r16, i0);

     label3:
        $r3 = interfaceinvoke $r2.<android.content.pm.split.SplitAssetLoader: android.content.res.AssetManager getBaseAssetManager()>();

        r19 = specialinvoke r0.<android.content.pm.PackageParser: android.content.pm.PackageParser$Package parseBaseApk(java.io.File,android.content.res.AssetManager,int)>(r15, $r3, i0);

        $r4 = virtualinvoke r15.<java.io.File: java.lang.String getCanonicalPath()>();

        virtualinvoke r19.<android.content.pm.PackageParser$Package: void setCodePath(java.lang.String)>($r4);

        $z1 = r16.<android.content.pm.PackageParser$PackageLite: boolean use32bitAbi>;

        virtualinvoke r19.<android.content.pm.PackageParser$Package: void setUse32bitAbi(boolean)>($z1);

     label4:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>($r2);

        return r19;

     label5:
        $r10 := @caughtexception;

        goto label8;

     label6:
        $r11 := @caughtexception;

     label7:
        r22 = new android.content.pm.PackageParser$PackageParserException;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to get path: ");

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r15);

        $r14 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r22.<android.content.pm.PackageParser$PackageParserException: void <init>(int,java.lang.String,java.lang.Throwable)>(-102, $r14, $r11);

        throw r22;

     label8:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>($r2);

        throw $r10;

        catch java.io.IOException from label3 to label4 with label6;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label7 to label8 with label5;
    }

    public android.content.pm.PackageParser$Package parsePackage(java.io.File, int) throws android.content.pm.PackageParser$PackageParserException
    {
        android.content.pm.PackageParser r0;
        java.io.File r1;
        int i0;
        android.content.pm.PackageParser$Package $r2;

        r0 := @this: android.content.pm.PackageParser;

        r1 := @parameter0: java.io.File;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<android.content.pm.PackageParser: android.content.pm.PackageParser$Package parsePackage(java.io.File,int,boolean)>(r1, i0, 0);

        return $r2;
    }

    public android.content.pm.PackageParser$Package parsePackage(java.io.File, int, boolean) throws android.content.pm.PackageParser$PackageParserException
    {
        android.content.pm.PackageParser r0;
        java.io.File r1;
        int i0;
        boolean z0, $z1;
        android.content.pm.PackageParser$Package $r2, $r3;

        r0 := @this: android.content.pm.PackageParser;

        r1 := @parameter0: java.io.File;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        $z1 = virtualinvoke r1.<java.io.File: boolean isDirectory()>();

        if $z1 == 0 goto label1;

        $r3 = specialinvoke r0.<android.content.pm.PackageParser: android.content.pm.PackageParser$Package parseClusterPackage(java.io.File,int)>(r1, i0);

        return $r3;

     label1:
        $r2 = virtualinvoke r0.<android.content.pm.PackageParser: android.content.pm.PackageParser$Package parseMonolithicPackage(java.io.File,int)>(r1, i0);

        return $r2;
    }

    public void setCacheDir(java.io.File)
    {
        android.content.pm.PackageParser r0;
        java.io.File r1;

        r0 := @this: android.content.pm.PackageParser;

        r1 := @parameter0: java.io.File;

        r0.<android.content.pm.PackageParser: java.io.File mCacheDir> = r1;

        return;
    }

    public void setCallback(android.content.pm.PackageParser$Callback)
    {
        android.content.pm.PackageParser r0;
        android.content.pm.PackageParser$Callback r1;

        r0 := @this: android.content.pm.PackageParser;

        r1 := @parameter0: android.content.pm.PackageParser$Callback;

        r0.<android.content.pm.PackageParser: android.content.pm.PackageParser$Callback mCallback> = r1;

        return;
    }

    public void setDisplayMetrics(android.util.DisplayMetrics)
    {
        android.content.pm.PackageParser r0;
        android.util.DisplayMetrics r1;

        r0 := @this: android.content.pm.PackageParser;

        r1 := @parameter0: android.util.DisplayMetrics;

        r0.<android.content.pm.PackageParser: android.util.DisplayMetrics mMetrics> = r1;

        return;
    }

    public void setOnlyCoreApps(boolean)
    {
        android.content.pm.PackageParser r0;
        boolean z0;

        r0 := @this: android.content.pm.PackageParser;

        z0 := @parameter0: boolean;

        r0.<android.content.pm.PackageParser: boolean mOnlyCoreApps> = z0;

        return;
    }

    public void setSeparateProcesses(java.lang.String[])
    {
        android.content.pm.PackageParser r0;
        java.lang.String[] r1;

        r0 := @this: android.content.pm.PackageParser;

        r1 := @parameter0: java.lang.String[];

        r0.<android.content.pm.PackageParser: java.lang.String[] mSeparateProcesses> = r1;

        return;
    }
}
