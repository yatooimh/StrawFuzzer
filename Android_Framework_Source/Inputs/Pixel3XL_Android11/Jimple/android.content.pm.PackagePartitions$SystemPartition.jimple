public class android.content.pm.PackagePartitions$SystemPartition extends java.lang.Object
{
    private final android.content.pm.PackagePartitions$DeferredCanonicalFile mAppFolder;
    private final android.content.pm.PackagePartitions$DeferredCanonicalFile mFolder;
    private final android.content.pm.PackagePartitions$DeferredCanonicalFile mOverlayFolder;
    private final android.content.pm.PackagePartitions$DeferredCanonicalFile mPrivAppFolder;
    public final int type;

    public void <init>(android.content.pm.PackagePartitions$SystemPartition)
    {
        android.content.pm.PackagePartitions$SystemPartition r0, r1;
        int $i0;
        android.content.pm.PackagePartitions$DeferredCanonicalFile $r2, $r3, $r5, $r6, $r7;
        java.io.File $r4;

        r0 := @this: android.content.pm.PackagePartitions$SystemPartition;

        r1 := @parameter0: android.content.pm.PackagePartitions$SystemPartition;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = r1.<android.content.pm.PackagePartitions$SystemPartition: int type>;

        r0.<android.content.pm.PackagePartitions$SystemPartition: int type> = $i0;

        $r2 = new android.content.pm.PackagePartitions$DeferredCanonicalFile;

        $r3 = r1.<android.content.pm.PackagePartitions$SystemPartition: android.content.pm.PackagePartitions$DeferredCanonicalFile mFolder>;

        $r4 = staticinvoke <android.content.pm.PackagePartitions$DeferredCanonicalFile: java.io.File access$300(android.content.pm.PackagePartitions$DeferredCanonicalFile)>($r3);

        specialinvoke $r2.<android.content.pm.PackagePartitions$DeferredCanonicalFile: void <init>(java.io.File,android.content.pm.PackagePartitions$1)>($r4, null);

        r0.<android.content.pm.PackagePartitions$SystemPartition: android.content.pm.PackagePartitions$DeferredCanonicalFile mFolder> = $r2;

        $r5 = r1.<android.content.pm.PackagePartitions$SystemPartition: android.content.pm.PackagePartitions$DeferredCanonicalFile mAppFolder>;

        r0.<android.content.pm.PackagePartitions$SystemPartition: android.content.pm.PackagePartitions$DeferredCanonicalFile mAppFolder> = $r5;

        $r6 = r1.<android.content.pm.PackagePartitions$SystemPartition: android.content.pm.PackagePartitions$DeferredCanonicalFile mPrivAppFolder>;

        r0.<android.content.pm.PackagePartitions$SystemPartition: android.content.pm.PackagePartitions$DeferredCanonicalFile mPrivAppFolder> = $r6;

        $r7 = r1.<android.content.pm.PackagePartitions$SystemPartition: android.content.pm.PackagePartitions$DeferredCanonicalFile mOverlayFolder>;

        r0.<android.content.pm.PackagePartitions$SystemPartition: android.content.pm.PackagePartitions$DeferredCanonicalFile mOverlayFolder> = $r7;

        return;
    }

    private void <init>(java.io.File, int, boolean, boolean)
    {
        android.content.pm.PackagePartitions$SystemPartition r0;
        int i0;
        boolean z0, z1;
        android.content.pm.PackagePartitions$DeferredCanonicalFile $r1, $r2, $r3, $r4, r6, r7;
        java.io.File r5;

        r0 := @this: android.content.pm.PackagePartitions$SystemPartition;

        r5 := @parameter0: java.io.File;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.content.pm.PackagePartitions$SystemPartition: int type> = i0;

        $r1 = new android.content.pm.PackagePartitions$DeferredCanonicalFile;

        specialinvoke $r1.<android.content.pm.PackagePartitions$DeferredCanonicalFile: void <init>(java.io.File,android.content.pm.PackagePartitions$1)>(r5, null);

        r0.<android.content.pm.PackagePartitions$SystemPartition: android.content.pm.PackagePartitions$DeferredCanonicalFile mFolder> = $r1;

        $r2 = new android.content.pm.PackagePartitions$DeferredCanonicalFile;

        specialinvoke $r2.<android.content.pm.PackagePartitions$DeferredCanonicalFile: void <init>(java.io.File,java.lang.String,android.content.pm.PackagePartitions$1)>(r5, "app", null);

        r0.<android.content.pm.PackagePartitions$SystemPartition: android.content.pm.PackagePartitions$DeferredCanonicalFile mAppFolder> = $r2;

        if z0 == 0 goto label1;

        $r4 = new android.content.pm.PackagePartitions$DeferredCanonicalFile;

        specialinvoke $r4.<android.content.pm.PackagePartitions$DeferredCanonicalFile: void <init>(java.io.File,java.lang.String,android.content.pm.PackagePartitions$1)>(r5, "priv-app", null);

        r6 = $r4;

        goto label2;

     label1:
        r6 = null;

     label2:
        r0.<android.content.pm.PackagePartitions$SystemPartition: android.content.pm.PackagePartitions$DeferredCanonicalFile mPrivAppFolder> = r6;

        if z1 == 0 goto label3;

        $r3 = new android.content.pm.PackagePartitions$DeferredCanonicalFile;

        specialinvoke $r3.<android.content.pm.PackagePartitions$DeferredCanonicalFile: void <init>(java.io.File,java.lang.String,android.content.pm.PackagePartitions$1)>(r5, "overlay", null);

        r7 = $r3;

        goto label4;

     label3:
        r7 = null;

     label4:
        r0.<android.content.pm.PackagePartitions$SystemPartition: android.content.pm.PackagePartitions$DeferredCanonicalFile mOverlayFolder> = r7;

        return;
    }

    void <init>(java.io.File, int, boolean, boolean, android.content.pm.PackagePartitions$1)
    {
        android.content.pm.PackagePartitions$SystemPartition r0;
        java.io.File r1;
        int i0;
        boolean z0, z1;
        android.content.pm.PackagePartitions$1 r2;

        r0 := @this: android.content.pm.PackagePartitions$SystemPartition;

        r1 := @parameter0: java.io.File;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        r2 := @parameter4: android.content.pm.PackagePartitions$1;

        specialinvoke r0.<android.content.pm.PackagePartitions$SystemPartition: void <init>(java.io.File,int,boolean,boolean)>(r1, i0, z0, z1);

        return;
    }

    public void <init>(java.io.File, android.content.pm.PackagePartitions$SystemPartition)
    {
        android.content.pm.PackagePartitions$SystemPartition r0, r2;
        java.io.File r1;
        int i0;
        android.content.pm.PackagePartitions$DeferredCanonicalFile r3, $r4;
        boolean z0, z1;

        r0 := @this: android.content.pm.PackagePartitions$SystemPartition;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: android.content.pm.PackagePartitions$SystemPartition;

        i0 = r2.<android.content.pm.PackagePartitions$SystemPartition: int type>;

        r3 = r2.<android.content.pm.PackagePartitions$SystemPartition: android.content.pm.PackagePartitions$DeferredCanonicalFile mPrivAppFolder>;

        z0 = 1;

        if r3 == null goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        $r4 = r2.<android.content.pm.PackagePartitions$SystemPartition: android.content.pm.PackagePartitions$DeferredCanonicalFile mOverlayFolder>;

        if $r4 == null goto label3;

        goto label4;

     label3:
        z0 = 0;

     label4:
        specialinvoke r0.<android.content.pm.PackagePartitions$SystemPartition: void <init>(java.io.File,int,boolean,boolean)>(r1, i0, z1, z0);

        return;
    }

    public boolean containsApp(java.io.File)
    {
        android.content.pm.PackagePartitions$SystemPartition r0;
        java.io.File r1, $r3, $r4;
        android.content.pm.PackagePartitions$DeferredCanonicalFile r2;
        boolean $z0, z1;

        r0 := @this: android.content.pm.PackagePartitions$SystemPartition;

        r1 := @parameter0: java.io.File;

        r2 = r0.<android.content.pm.PackagePartitions$SystemPartition: android.content.pm.PackagePartitions$DeferredCanonicalFile mAppFolder>;

        if r2 == null goto label1;

        $r3 = staticinvoke <android.content.pm.PackagePartitions$DeferredCanonicalFile: java.io.File access$300(android.content.pm.PackagePartitions$DeferredCanonicalFile)>(r2);

        $r4 = staticinvoke <android.content.pm.PackagePartitions: java.io.File access$400(java.io.File)>(r1);

        $z0 = staticinvoke <android.os.FileUtils: boolean contains(java.io.File,java.io.File)>($r3, $r4);

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public boolean containsFile(java.io.File)
    {
        android.content.pm.PackagePartitions$SystemPartition r0;
        java.io.File r1, $r3, $r4;
        android.content.pm.PackagePartitions$DeferredCanonicalFile $r2;
        boolean $z0;

        r0 := @this: android.content.pm.PackagePartitions$SystemPartition;

        r1 := @parameter0: java.io.File;

        $r2 = r0.<android.content.pm.PackagePartitions$SystemPartition: android.content.pm.PackagePartitions$DeferredCanonicalFile mFolder>;

        $r3 = staticinvoke <android.content.pm.PackagePartitions$DeferredCanonicalFile: java.io.File access$300(android.content.pm.PackagePartitions$DeferredCanonicalFile)>($r2);

        $r4 = staticinvoke <android.content.pm.PackagePartitions: java.io.File access$400(java.io.File)>(r1);

        $z0 = staticinvoke <android.os.FileUtils: boolean contains(java.io.File,java.io.File)>($r3, $r4);

        return $z0;
    }

    public boolean containsOverlay(java.io.File)
    {
        android.content.pm.PackagePartitions$SystemPartition r0;
        java.io.File r1, $r3, $r4;
        android.content.pm.PackagePartitions$DeferredCanonicalFile r2;
        boolean $z0, z1;

        r0 := @this: android.content.pm.PackagePartitions$SystemPartition;

        r1 := @parameter0: java.io.File;

        r2 = r0.<android.content.pm.PackagePartitions$SystemPartition: android.content.pm.PackagePartitions$DeferredCanonicalFile mOverlayFolder>;

        if r2 == null goto label1;

        $r3 = staticinvoke <android.content.pm.PackagePartitions$DeferredCanonicalFile: java.io.File access$300(android.content.pm.PackagePartitions$DeferredCanonicalFile)>(r2);

        $r4 = staticinvoke <android.content.pm.PackagePartitions: java.io.File access$400(java.io.File)>(r1);

        $z0 = staticinvoke <android.os.FileUtils: boolean contains(java.io.File,java.io.File)>($r3, $r4);

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public boolean containsPath(java.lang.String)
    {
        android.content.pm.PackagePartitions$SystemPartition r0;
        java.lang.String r1;
        java.io.File $r2;
        boolean $z0;

        r0 := @this: android.content.pm.PackagePartitions$SystemPartition;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.io.File;

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>(r1);

        $z0 = virtualinvoke r0.<android.content.pm.PackagePartitions$SystemPartition: boolean containsFile(java.io.File)>($r2);

        return $z0;
    }

    public boolean containsPrivApp(java.io.File)
    {
        android.content.pm.PackagePartitions$SystemPartition r0;
        java.io.File r1, $r3, $r4;
        android.content.pm.PackagePartitions$DeferredCanonicalFile r2;
        boolean $z0, z1;

        r0 := @this: android.content.pm.PackagePartitions$SystemPartition;

        r1 := @parameter0: java.io.File;

        r2 = r0.<android.content.pm.PackagePartitions$SystemPartition: android.content.pm.PackagePartitions$DeferredCanonicalFile mPrivAppFolder>;

        if r2 == null goto label1;

        $r3 = staticinvoke <android.content.pm.PackagePartitions$DeferredCanonicalFile: java.io.File access$300(android.content.pm.PackagePartitions$DeferredCanonicalFile)>(r2);

        $r4 = staticinvoke <android.content.pm.PackagePartitions: java.io.File access$400(java.io.File)>(r1);

        $z0 = staticinvoke <android.os.FileUtils: boolean contains(java.io.File,java.io.File)>($r3, $r4);

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public java.io.File getAppFolder()
    {
        android.content.pm.PackagePartitions$SystemPartition r0;
        android.content.pm.PackagePartitions$DeferredCanonicalFile r1;
        java.io.File r2;

        r0 := @this: android.content.pm.PackagePartitions$SystemPartition;

        r1 = r0.<android.content.pm.PackagePartitions$SystemPartition: android.content.pm.PackagePartitions$DeferredCanonicalFile mAppFolder>;

        if r1 != null goto label1;

        r2 = null;

        goto label2;

     label1:
        r2 = staticinvoke <android.content.pm.PackagePartitions$DeferredCanonicalFile: java.io.File access$300(android.content.pm.PackagePartitions$DeferredCanonicalFile)>(r1);

     label2:
        return r2;
    }

    public java.io.File getFolder()
    {
        android.content.pm.PackagePartitions$SystemPartition r0;
        android.content.pm.PackagePartitions$DeferredCanonicalFile $r1;
        java.io.File $r2;

        r0 := @this: android.content.pm.PackagePartitions$SystemPartition;

        $r1 = r0.<android.content.pm.PackagePartitions$SystemPartition: android.content.pm.PackagePartitions$DeferredCanonicalFile mFolder>;

        $r2 = staticinvoke <android.content.pm.PackagePartitions$DeferredCanonicalFile: java.io.File access$300(android.content.pm.PackagePartitions$DeferredCanonicalFile)>($r1);

        return $r2;
    }

    public java.io.File getOverlayFolder()
    {
        android.content.pm.PackagePartitions$SystemPartition r0;
        android.content.pm.PackagePartitions$DeferredCanonicalFile r1;
        java.io.File r2;

        r0 := @this: android.content.pm.PackagePartitions$SystemPartition;

        r1 = r0.<android.content.pm.PackagePartitions$SystemPartition: android.content.pm.PackagePartitions$DeferredCanonicalFile mOverlayFolder>;

        if r1 != null goto label1;

        r2 = null;

        goto label2;

     label1:
        r2 = staticinvoke <android.content.pm.PackagePartitions$DeferredCanonicalFile: java.io.File access$300(android.content.pm.PackagePartitions$DeferredCanonicalFile)>(r1);

     label2:
        return r2;
    }

    public java.io.File getPrivAppFolder()
    {
        android.content.pm.PackagePartitions$SystemPartition r0;
        android.content.pm.PackagePartitions$DeferredCanonicalFile r1;
        java.io.File r2;

        r0 := @this: android.content.pm.PackagePartitions$SystemPartition;

        r1 = r0.<android.content.pm.PackagePartitions$SystemPartition: android.content.pm.PackagePartitions$DeferredCanonicalFile mPrivAppFolder>;

        if r1 != null goto label1;

        r2 = null;

        goto label2;

     label1:
        r2 = staticinvoke <android.content.pm.PackagePartitions$DeferredCanonicalFile: java.io.File access$300(android.content.pm.PackagePartitions$DeferredCanonicalFile)>(r1);

     label2:
        return r2;
    }
}
