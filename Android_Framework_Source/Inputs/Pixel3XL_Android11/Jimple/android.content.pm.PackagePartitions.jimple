public class android.content.pm.PackagePartitions extends java.lang.Object
{
    public static final int PARTITION_ODM;
    public static final int PARTITION_OEM;
    public static final int PARTITION_PRODUCT;
    public static final int PARTITION_SYSTEM;
    public static final int PARTITION_SYSTEM_EXT;
    public static final int PARTITION_VENDOR;
    private static final java.util.ArrayList SYSTEM_PARTITIONS;

    static void <clinit>()
    {
        java.util.ArrayList $r0;
        android.content.pm.PackagePartitions$SystemPartition[] $r1;
        android.content.pm.PackagePartitions$SystemPartition $r2, $r4, $r6, $r8, $r10, $r12;
        java.io.File $r3, $r5, $r7, $r9, $r11, $r13;
        java.util.List $r14;

        <android.content.pm.PackagePartitions: int PARTITION_VENDOR> = 1;

        <android.content.pm.PackagePartitions: int PARTITION_SYSTEM_EXT> = 5;

        <android.content.pm.PackagePartitions: int PARTITION_SYSTEM> = 0;

        <android.content.pm.PackagePartitions: int PARTITION_PRODUCT> = 4;

        <android.content.pm.PackagePartitions: int PARTITION_OEM> = 3;

        <android.content.pm.PackagePartitions: int PARTITION_ODM> = 2;

        $r0 = new java.util.ArrayList;

        $r1 = newarray (android.content.pm.PackagePartitions$SystemPartition)[6];

        $r2 = new android.content.pm.PackagePartitions$SystemPartition;

        $r3 = staticinvoke <android.os.Environment: java.io.File getRootDirectory()>();

        specialinvoke $r2.<android.content.pm.PackagePartitions$SystemPartition: void <init>(java.io.File,int,boolean,boolean,android.content.pm.PackagePartitions$1)>($r3, 0, 1, 0, null);

        $r1[0] = $r2;

        $r4 = new android.content.pm.PackagePartitions$SystemPartition;

        $r5 = staticinvoke <android.os.Environment: java.io.File getVendorDirectory()>();

        specialinvoke $r4.<android.content.pm.PackagePartitions$SystemPartition: void <init>(java.io.File,int,boolean,boolean,android.content.pm.PackagePartitions$1)>($r5, 1, 1, 1, null);

        $r1[1] = $r4;

        $r6 = new android.content.pm.PackagePartitions$SystemPartition;

        $r7 = staticinvoke <android.os.Environment: java.io.File getOdmDirectory()>();

        specialinvoke $r6.<android.content.pm.PackagePartitions$SystemPartition: void <init>(java.io.File,int,boolean,boolean,android.content.pm.PackagePartitions$1)>($r7, 2, 1, 1, null);

        $r1[2] = $r6;

        $r8 = new android.content.pm.PackagePartitions$SystemPartition;

        $r9 = staticinvoke <android.os.Environment: java.io.File getOemDirectory()>();

        specialinvoke $r8.<android.content.pm.PackagePartitions$SystemPartition: void <init>(java.io.File,int,boolean,boolean,android.content.pm.PackagePartitions$1)>($r9, 3, 0, 1, null);

        $r1[3] = $r8;

        $r10 = new android.content.pm.PackagePartitions$SystemPartition;

        $r11 = staticinvoke <android.os.Environment: java.io.File getProductDirectory()>();

        specialinvoke $r10.<android.content.pm.PackagePartitions$SystemPartition: void <init>(java.io.File,int,boolean,boolean,android.content.pm.PackagePartitions$1)>($r11, 4, 1, 1, null);

        $r1[4] = $r10;

        $r12 = new android.content.pm.PackagePartitions$SystemPartition;

        $r13 = staticinvoke <android.os.Environment: java.io.File getSystemExtDirectory()>();

        specialinvoke $r12.<android.content.pm.PackagePartitions$SystemPartition: void <init>(java.io.File,int,boolean,boolean,android.content.pm.PackagePartitions$1)>($r13, 5, 1, 1, null);

        $r1[5] = $r12;

        $r14 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r1);

        specialinvoke $r0.<java.util.ArrayList: void <init>(java.util.Collection)>($r14);

        <android.content.pm.PackagePartitions: java.util.ArrayList SYSTEM_PARTITIONS> = $r0;

        return;
    }

    public void <init>()
    {
        android.content.pm.PackagePartitions r0;

        r0 := @this: android.content.pm.PackagePartitions;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static java.io.File access$400(java.io.File)
    {
        java.io.File r0, $r1;

        r0 := @parameter0: java.io.File;

        $r1 = staticinvoke <android.content.pm.PackagePartitions: java.io.File canonicalize(java.io.File)>(r0);

        return $r1;
    }

    private static java.io.File canonicalize(java.io.File)
    {
        java.io.File r0, r2;
        java.lang.Throwable $r1;

        r0 := @parameter0: java.io.File;

     label1:
        r2 = virtualinvoke r0.<java.io.File: java.io.File getCanonicalFile()>();

     label2:
        return r2;

     label3:
        $r1 := @caughtexception;

        return r0;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static java.util.ArrayList getOrderedPartitions(java.util.function.Function)
    {
        java.util.function.Function r0;
        int i0, i1;
        java.lang.Object r2, $r6;
        java.util.ArrayList $r3, $r4, $r5;
        android.content.pm.PackagePartitions$SystemPartition $r7;

        r0 := @parameter0: java.util.function.Function;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        i1 = 0;

        $r4 = <android.content.pm.PackagePartitions: java.util.ArrayList SYSTEM_PARTITIONS>;

        i0 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

     label1:
        if i1 >= i0 goto label3;

        $r5 = <android.content.pm.PackagePartitions: java.util.ArrayList SYSTEM_PARTITIONS>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r7 = (android.content.pm.PackagePartitions$SystemPartition) $r6;

        r2 = interfaceinvoke r0.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>($r7);

        if r2 == null goto label2;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return $r3;
    }
}
