public abstract class android.content.pm.RegisteredServicesCache extends java.lang.Object
{
    private static final boolean DEBUG;
    protected static final java.lang.String REGISTERED_SERVICES_DIR;
    private static final java.lang.String TAG;
    private final java.lang.String mAttributesName;
    public final android.content.Context mContext;
    private final android.content.BroadcastReceiver mExternalReceiver;
    private android.os.Handler mHandler;
    private final java.lang.String mInterfaceName;
    private android.content.pm.RegisteredServicesCacheListener mListener;
    private final java.lang.String mMetaDataName;
    private final android.content.BroadcastReceiver mPackageReceiver;
    private final android.content.pm.XmlSerializerAndParser mSerializerAndParser;
    protected final java.lang.Object mServicesLock;
    private final android.content.BroadcastReceiver mUserRemovedReceiver;
    private final android.util.SparseArray mUserServices;

    public void <init>(android.content.Context, java.lang.String, java.lang.String, java.lang.String, android.content.pm.XmlSerializerAndParser)
    {
        android.content.pm.RegisteredServicesCache r0;
        java.lang.String r1, r2, r23;
        android.content.pm.XmlSerializerAndParser r3;
        java.lang.Object $r4;
        android.util.SparseArray $r5;
        android.content.pm.RegisteredServicesCache$1 $r6;
        android.content.pm.RegisteredServicesCache$2 $r7;
        android.content.pm.RegisteredServicesCache$3 $r8;
        android.content.IntentFilter $r9, $r14, $r18;
        android.os.UserHandle $r10;
        android.content.BroadcastReceiver $r11, $r15, $r19;
        android.content.Context $r12, $r16, $r20, r22;

        r0 := @this: android.content.pm.RegisteredServicesCache;

        r22 := @parameter0: android.content.Context;

        r23 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: android.content.pm.XmlSerializerAndParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new java.lang.Object;

        specialinvoke $r4.<java.lang.Object: void <init>()>();

        r0.<android.content.pm.RegisteredServicesCache: java.lang.Object mServicesLock> = $r4;

        $r5 = new android.util.SparseArray;

        specialinvoke $r5.<android.util.SparseArray: void <init>(int)>(2);

        r0.<android.content.pm.RegisteredServicesCache: android.util.SparseArray mUserServices> = $r5;

        $r6 = new android.content.pm.RegisteredServicesCache$1;

        specialinvoke $r6.<android.content.pm.RegisteredServicesCache$1: void <init>(android.content.pm.RegisteredServicesCache)>(r0);

        r0.<android.content.pm.RegisteredServicesCache: android.content.BroadcastReceiver mPackageReceiver> = $r6;

        $r7 = new android.content.pm.RegisteredServicesCache$2;

        specialinvoke $r7.<android.content.pm.RegisteredServicesCache$2: void <init>(android.content.pm.RegisteredServicesCache)>(r0);

        r0.<android.content.pm.RegisteredServicesCache: android.content.BroadcastReceiver mExternalReceiver> = $r7;

        $r8 = new android.content.pm.RegisteredServicesCache$3;

        specialinvoke $r8.<android.content.pm.RegisteredServicesCache$3: void <init>(android.content.pm.RegisteredServicesCache)>(r0);

        r0.<android.content.pm.RegisteredServicesCache: android.content.BroadcastReceiver mUserRemovedReceiver> = $r8;

        r0.<android.content.pm.RegisteredServicesCache: android.content.Context mContext> = r22;

        r0.<android.content.pm.RegisteredServicesCache: java.lang.String mInterfaceName> = r23;

        r0.<android.content.pm.RegisteredServicesCache: java.lang.String mMetaDataName> = r1;

        r0.<android.content.pm.RegisteredServicesCache: java.lang.String mAttributesName> = r2;

        r0.<android.content.pm.RegisteredServicesCache: android.content.pm.XmlSerializerAndParser mSerializerAndParser> = r3;

        specialinvoke r0.<android.content.pm.RegisteredServicesCache: void migrateIfNecessaryLocked()>();

        $r9 = new android.content.IntentFilter;

        specialinvoke $r9.<android.content.IntentFilter: void <init>()>();

        virtualinvoke $r9.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.PACKAGE_ADDED");

        virtualinvoke $r9.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.PACKAGE_CHANGED");

        virtualinvoke $r9.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.PACKAGE_REMOVED");

        virtualinvoke $r9.<android.content.IntentFilter: void addDataScheme(java.lang.String)>("package");

        $r12 = r0.<android.content.pm.RegisteredServicesCache: android.content.Context mContext>;

        $r11 = r0.<android.content.pm.RegisteredServicesCache: android.content.BroadcastReceiver mPackageReceiver>;

        $r10 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r12.<android.content.Context: android.content.Intent registerReceiverAsUser(android.content.BroadcastReceiver,android.os.UserHandle,android.content.IntentFilter,java.lang.String,android.os.Handler)>($r11, $r10, $r9, null, null);

        $r14 = new android.content.IntentFilter;

        specialinvoke $r14.<android.content.IntentFilter: void <init>()>();

        virtualinvoke $r14.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.EXTERNAL_APPLICATIONS_AVAILABLE");

        virtualinvoke $r14.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.EXTERNAL_APPLICATIONS_UNAVAILABLE");

        $r16 = r0.<android.content.pm.RegisteredServicesCache: android.content.Context mContext>;

        $r15 = r0.<android.content.pm.RegisteredServicesCache: android.content.BroadcastReceiver mExternalReceiver>;

        virtualinvoke $r16.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r15, $r14);

        $r18 = new android.content.IntentFilter;

        specialinvoke $r18.<android.content.IntentFilter: void <init>()>();

        virtualinvoke $r14.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.USER_REMOVED");

        $r20 = r0.<android.content.pm.RegisteredServicesCache: android.content.Context mContext>;

        $r19 = r0.<android.content.pm.RegisteredServicesCache: android.content.BroadcastReceiver mUserRemovedReceiver>;

        virtualinvoke $r20.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r19, $r18);

        return;
    }

    static void access$100(android.content.pm.RegisteredServicesCache, android.content.Intent, int)
    {
        android.content.pm.RegisteredServicesCache r0;
        android.content.Intent r1;
        int i0;

        r0 := @parameter0: android.content.pm.RegisteredServicesCache;

        r1 := @parameter1: android.content.Intent;

        i0 := @parameter2: int;

        specialinvoke r0.<android.content.pm.RegisteredServicesCache: void handlePackageEvent(android.content.Intent,int)>(r1, i0);

        return;
    }

    private boolean containsType(java.util.ArrayList, java.lang.Object)
    {
        android.content.pm.RegisteredServicesCache r0;
        java.util.ArrayList r1;
        java.lang.Object r2, $r3, $r5;
        int i0, i1;
        android.content.pm.RegisteredServicesCache$ServiceInfo $r4;
        boolean $z0;

        r0 := @this: android.content.pm.RegisteredServicesCache;

        r1 := @parameter0: java.util.ArrayList;

        r2 := @parameter1: java.lang.Object;

        i1 = 0;

        i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

     label1:
        if i1 >= i0 goto label3;

        $r3 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r4 = (android.content.pm.RegisteredServicesCache$ServiceInfo) $r3;

        $r5 = $r4.<android.content.pm.RegisteredServicesCache$ServiceInfo: java.lang.Object type>;

        $z0 = virtualinvoke $r5.<java.lang.Object: boolean equals(java.lang.Object)>(r2);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    private boolean containsTypeAndUid(java.util.ArrayList, java.lang.Object, int)
    {
        android.content.pm.RegisteredServicesCache r0;
        java.util.ArrayList r1;
        java.lang.Object r2, $r4, $r5;
        int i0, i1, $i2, i3;
        android.content.pm.RegisteredServicesCache$ServiceInfo r3;
        boolean $z0;

        r0 := @this: android.content.pm.RegisteredServicesCache;

        r1 := @parameter0: java.util.ArrayList;

        r2 := @parameter1: java.lang.Object;

        i0 := @parameter2: int;

        i3 = 0;

        i1 = virtualinvoke r1.<java.util.ArrayList: int size()>();

     label1:
        if i3 >= i1 goto label3;

        $r4 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r3 = (android.content.pm.RegisteredServicesCache$ServiceInfo) $r4;

        $r5 = r3.<android.content.pm.RegisteredServicesCache$ServiceInfo: java.lang.Object type>;

        $z0 = virtualinvoke $r5.<java.lang.Object: boolean equals(java.lang.Object)>(r2);

        if $z0 == 0 goto label2;

        $i2 = r3.<android.content.pm.RegisteredServicesCache$ServiceInfo: int uid>;

        if $i2 != i0 goto label2;

        return 1;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return 0;
    }

    private boolean containsUid(int[], int)
    {
        android.content.pm.RegisteredServicesCache r0;
        int[] r1;
        int i0;
        boolean $z0, z1;

        r0 := @this: android.content.pm.RegisteredServicesCache;

        r1 := @parameter0: int[];

        i0 := @parameter1: int;

        if r1 == null goto label2;

        $z0 = staticinvoke <com.android.internal.util.ArrayUtils: boolean contains(int[],int)>(r1, i0);

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        z1 = 0;

        goto label3;

     label2:
        z1 = 1;

     label3:
        return z1;
    }

    private android.util.AtomicFile createFileForUser(int)
    {
        android.content.pm.RegisteredServicesCache r0;
        int i0;
        java.io.File r1, $r9;
        java.lang.StringBuilder $r3;
        java.lang.String $r5, $r10;
        android.util.AtomicFile $r8;

        r0 := @this: android.content.pm.RegisteredServicesCache;

        i0 := @parameter0: int;

        r1 = virtualinvoke r0.<android.content.pm.RegisteredServicesCache: java.io.File getUserSystemDirectory(int)>(i0);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("registered_services/");

        $r5 = r0.<android.content.pm.RegisteredServicesCache: java.lang.String mInterfaceName>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".xml");

        $r8 = new android.util.AtomicFile;

        $r9 = new java.io.File;

        $r10 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, $r10);

        specialinvoke $r8.<android.util.AtomicFile: void <init>(java.io.File)>($r9);

        return $r8;
    }

    private android.content.pm.RegisteredServicesCache$UserServices findOrCreateUserLocked(int)
    {
        android.content.pm.RegisteredServicesCache r0;
        int i0;
        android.content.pm.RegisteredServicesCache$UserServices $r1;

        r0 := @this: android.content.pm.RegisteredServicesCache;

        i0 := @parameter0: int;

        $r1 = specialinvoke r0.<android.content.pm.RegisteredServicesCache: android.content.pm.RegisteredServicesCache$UserServices findOrCreateUserLocked(int,boolean)>(i0, 1);

        return $r1;
    }

    private android.content.pm.RegisteredServicesCache$UserServices findOrCreateUserLocked(int, boolean)
    {
        android.content.pm.RegisteredServicesCache r0;
        int i0, $i1, $i2;
        boolean z0, $z1;
        android.content.pm.UserInfo r2;
        android.util.SparseArray $r4, $r7;
        java.lang.Object $r5;
        android.content.pm.RegisteredServicesCache$UserServices $r6, r15, r16;
        android.content.pm.XmlSerializerAndParser $r8;
        java.io.File $r9;
        java.lang.Throwable $r10;
        java.lang.Exception $r11;
        java.lang.String $r14;
        android.util.AtomicFile r17;
        java.io.FileInputStream r18, r19, r20;
        java.lang.StringBuilder r22;

        r0 := @this: android.content.pm.RegisteredServicesCache;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r4 = r0.<android.content.pm.RegisteredServicesCache: android.util.SparseArray mUserServices>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r15 = (android.content.pm.RegisteredServicesCache$UserServices) $r5;

        r16 = r15;

        if r15 != null goto label19;

        $r6 = new android.content.pm.RegisteredServicesCache$UserServices;

        specialinvoke $r6.<android.content.pm.RegisteredServicesCache$UserServices: void <init>(android.content.pm.RegisteredServicesCache$1)>(null);

        $r7 = r0.<android.content.pm.RegisteredServicesCache: android.util.SparseArray mUserServices>;

        virtualinvoke $r7.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, $r6);

        r16 = $r6;

        if z0 == 0 goto label19;

        r16 = $r6;

        $r8 = r0.<android.content.pm.RegisteredServicesCache: android.content.pm.XmlSerializerAndParser mSerializerAndParser>;

        if $r8 == null goto label19;

        r2 = virtualinvoke r0.<android.content.pm.RegisteredServicesCache: android.content.pm.UserInfo getUser(int)>(i0);

        r16 = $r6;

        if r2 == null goto label19;

        $i1 = r2.<android.content.pm.UserInfo: int id>;

        r17 = specialinvoke r0.<android.content.pm.RegisteredServicesCache: android.util.AtomicFile createFileForUser(int)>($i1);

        r16 = $r6;

        $r9 = virtualinvoke r17.<android.util.AtomicFile: java.io.File getBaseFile()>();

        $z1 = virtualinvoke $r9.<java.io.File: boolean exists()>();

        if $z1 == 0 goto label19;

        r18 = null;

        r19 = null;

     label01:
        r20 = virtualinvoke r17.<android.util.AtomicFile: java.io.FileInputStream openRead()>();

     label02:
        r19 = r20;

        r18 = r20;

     label03:
        specialinvoke r0.<android.content.pm.RegisteredServicesCache: void readPersistentServicesLocked(java.io.InputStream)>(r20);

     label04:
        r18 = r20;

     label05:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r18);

        r16 = $r6;

        goto label19;

     label06:
        $r10 := @caughtexception;

        goto label18;

     label07:
        $r11 := @caughtexception;

        r19 = r18;

     label08:
        r22 = new java.lang.StringBuilder;

     label09:
        r19 = r18;

     label10:
        specialinvoke r22.<java.lang.StringBuilder: void <init>()>();

     label11:
        r19 = r18;

     label12:
        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error reading persistent services for user ");

     label13:
        r19 = r18;

     label14:
        $i2 = r2.<android.content.pm.UserInfo: int id>;

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

     label15:
        r19 = r18;

     label16:
        $r14 = virtualinvoke r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageManager", $r14, $r11);

     label17:
        goto label05;

     label18:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r19);

        throw $r10;

     label19:
        return r16;

        catch java.lang.Exception from label01 to label02 with label07;
        catch java.lang.Throwable from label01 to label02 with label06;
        catch java.lang.Exception from label03 to label04 with label07;
        catch java.lang.Throwable from label03 to label04 with label06;
        catch java.lang.Throwable from label08 to label09 with label06;
        catch java.lang.Throwable from label10 to label11 with label06;
        catch java.lang.Throwable from label12 to label13 with label06;
        catch java.lang.Throwable from label14 to label15 with label06;
        catch java.lang.Throwable from label16 to label17 with label06;
    }

    private void generateServicesMap(int[], int)
    {
        android.content.pm.RegisteredServicesCache r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, i9;
        java.util.ArrayList $r1, r65;
        java.util.List $r2;
        java.util.Map $r3, $r5, $r7, $r9, $r11, $r16, $r19, $r21, $r28, $r31, $r33;
        java.lang.StringBuilder $r4, $r45, r57;
        java.util.Set $r6;
        boolean $z1, $z2, $z3, $z4, $z6, $z7, $z8, $z10, z11, z12, $z13;
        java.lang.Object $r12, $r14, $r15, $r17, $r18, $r22, $r25, $r26, $r27, $r30, $r34, $r37, $r39, r60, r67, r69;
        java.lang.Integer $r13, $r23, $r35, r64;
        java.util.HashMap $r38;
        java.lang.String $r41, $r43, $r47, $r49;
        java.lang.Throwable $r44, $r50, $r51, r70;
        int[] r52;
        java.util.Iterator r54, r62, r66, r68;
        android.content.pm.ResolveInfo r55;
        android.content.pm.RegisteredServicesCache$ServiceInfo r56, r63;
        android.content.pm.RegisteredServicesCache$UserServices r61;

        r0 := @this: android.content.pm.RegisteredServicesCache;

        r52 := @parameter0: int[];

        i0 := @parameter1: int;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r2 = virtualinvoke r0.<android.content.pm.RegisteredServicesCache: java.util.List queryIntentServices(int)>(i0);

        r54 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z10 = interfaceinvoke r54.<java.util.Iterator: boolean hasNext()>();

        if $z10 == 0 goto label10;

        $r39 = interfaceinvoke r54.<java.util.Iterator: java.lang.Object next()>();

        r55 = (android.content.pm.ResolveInfo) $r39;

     label02:
        r56 = virtualinvoke r0.<android.content.pm.RegisteredServicesCache: android.content.pm.RegisteredServicesCache$ServiceInfo parseServiceInfo(android.content.pm.ResolveInfo)>(r55);

     label03:
        if r56 != null goto label06;

     label04:
        r57 = new java.lang.StringBuilder;

        specialinvoke r57.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to load service info ");

        $r41 = virtualinvoke r55.<android.content.pm.ResolveInfo: java.lang.String toString()>();

        virtualinvoke r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41);

        $r43 = virtualinvoke r57.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r43);

     label05:
        goto label01;

     label06:
        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r56);

     label07:
        goto label09;

     label08:
        $r44 := @caughtexception;

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to load service info ");

        $r47 = virtualinvoke r55.<android.content.pm.ResolveInfo: java.lang.String toString()>();

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r47);

        $r49 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageManager", $r49, $r44);

     label09:
        goto label01;

     label10:
        r60 = r0.<android.content.pm.RegisteredServicesCache: java.lang.Object mServicesLock>;

        entermonitor r60;

     label11:
        r61 = specialinvoke r0.<android.content.pm.RegisteredServicesCache: android.content.pm.RegisteredServicesCache$UserServices findOrCreateUserLocked(int)>(i0);

        $r3 = r61.<android.content.pm.RegisteredServicesCache$UserServices: java.util.Map services>;

        if $r3 != null goto label13;

     label12:
        z11 = 1;

        goto label14;

     label13:
        z11 = 0;

     label14:
        if z11 == 0 goto label16;

     label15:
        $r38 = staticinvoke <com.google.android.collect.Maps: java.util.HashMap newHashMap()>();

        r61.<android.content.pm.RegisteredServicesCache$UserServices: java.util.Map services> = $r38;

     label16:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

     label17:
        z12 = 0;

     label18:
        r62 = virtualinvoke $r1.<java.util.ArrayList: java.util.Iterator iterator()>();

     label19:
        $z13 = interfaceinvoke r62.<java.util.Iterator: boolean hasNext()>();

        if $z13 == 0 goto label32;

        $r14 = interfaceinvoke r62.<java.util.Iterator: java.lang.Object next()>();

        r63 = (android.content.pm.RegisteredServicesCache$ServiceInfo) $r14;

        $r16 = r61.<android.content.pm.RegisteredServicesCache$UserServices: java.util.Map persistentServices>;

        $r15 = r63.<android.content.pm.RegisteredServicesCache$ServiceInfo: java.lang.Object type>;

        $r17 = interfaceinvoke $r16.<java.util.Map: java.lang.Object get(java.lang.Object)>($r15);

        r64 = (java.lang.Integer) $r17;

     label20:
        if r64 != null goto label25;

     label21:
        $r31 = r61.<android.content.pm.RegisteredServicesCache$UserServices: java.util.Map services>;

        $r30 = r63.<android.content.pm.RegisteredServicesCache$ServiceInfo: java.lang.Object type>;

        interfaceinvoke $r31.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r30, r63);

        $r33 = r61.<android.content.pm.RegisteredServicesCache$UserServices: java.util.Map persistentServices>;

        $r34 = r63.<android.content.pm.RegisteredServicesCache$ServiceInfo: java.lang.Object type>;

        $i6 = r63.<android.content.pm.RegisteredServicesCache$ServiceInfo: int uid>;

        $r35 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        interfaceinvoke $r33.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r34, $r35);

        $z8 = r61.<android.content.pm.RegisteredServicesCache$UserServices: boolean mPersistentServicesFileDidNotExist>;

        if $z8 == 0 goto label23;

     label22:
        z12 = 1;

        if z11 != 0 goto label31;

     label23:
        $r37 = r63.<android.content.pm.RegisteredServicesCache$ServiceInfo: java.lang.Object type>;

        specialinvoke r0.<android.content.pm.RegisteredServicesCache: void notifyListener(java.lang.Object,int,boolean)>($r37, i0, 0);

     label24:
        z12 = 1;

        goto label31;

     label25:
        $i1 = virtualinvoke r64.<java.lang.Integer: int intValue()>();

        $i2 = r63.<android.content.pm.RegisteredServicesCache$ServiceInfo: int uid>;

        if $i1 != $i2 goto label27;

        $r28 = r61.<android.content.pm.RegisteredServicesCache$UserServices: java.util.Map services>;

        $r27 = r63.<android.content.pm.RegisteredServicesCache$ServiceInfo: java.lang.Object type>;

        interfaceinvoke $r28.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r27, r63);

     label26:
        goto label31;

     label27:
        $i3 = r63.<android.content.pm.RegisteredServicesCache$ServiceInfo: int uid>;

        $z6 = virtualinvoke r0.<android.content.pm.RegisteredServicesCache: boolean inSystemImage(int)>($i3);

        if $z6 != 0 goto label29;

     label28:
        $r26 = r63.<android.content.pm.RegisteredServicesCache$ServiceInfo: java.lang.Object type>;

        $i5 = virtualinvoke r64.<java.lang.Integer: int intValue()>();

        $z7 = specialinvoke r0.<android.content.pm.RegisteredServicesCache: boolean containsTypeAndUid(java.util.ArrayList,java.lang.Object,int)>($r1, $r26, $i5);

        if $z7 != 0 goto label31;

     label29:
        $r19 = r61.<android.content.pm.RegisteredServicesCache$UserServices: java.util.Map services>;

        $r18 = r63.<android.content.pm.RegisteredServicesCache$ServiceInfo: java.lang.Object type>;

        interfaceinvoke $r19.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r18, r63);

        $r21 = r61.<android.content.pm.RegisteredServicesCache$UserServices: java.util.Map persistentServices>;

        $r22 = r63.<android.content.pm.RegisteredServicesCache$ServiceInfo: java.lang.Object type>;

        $i4 = r63.<android.content.pm.RegisteredServicesCache$ServiceInfo: int uid>;

        $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        interfaceinvoke $r21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r22, $r23);

        $r25 = r63.<android.content.pm.RegisteredServicesCache$ServiceInfo: java.lang.Object type>;

        specialinvoke r0.<android.content.pm.RegisteredServicesCache: void notifyListener(java.lang.Object,int,boolean)>($r25, i0, 0);

     label30:
        z12 = 1;

     label31:
        goto label19;

     label32:
        r65 = staticinvoke <com.google.android.collect.Lists: java.util.ArrayList newArrayList()>();

        $r5 = r61.<android.content.pm.RegisteredServicesCache$UserServices: java.util.Map persistentServices>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.util.Set keySet()>();

        r66 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label33:
        $z1 = interfaceinvoke r66.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label37;

        r67 = interfaceinvoke r66.<java.util.Iterator: java.lang.Object next()>();

        $z3 = specialinvoke r0.<android.content.pm.RegisteredServicesCache: boolean containsType(java.util.ArrayList,java.lang.Object)>($r1, r67);

        if $z3 != 0 goto label36;

        $r11 = r61.<android.content.pm.RegisteredServicesCache$UserServices: java.util.Map persistentServices>;

        $r12 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>(r67);

        $r13 = (java.lang.Integer) $r12;

        i9 = virtualinvoke $r13.<java.lang.Integer: int intValue()>();

     label34:
        $z4 = specialinvoke r0.<android.content.pm.RegisteredServicesCache: boolean containsUid(int[],int)>(r52, i9);

        if $z4 == 0 goto label36;

        virtualinvoke r65.<java.util.ArrayList: boolean add(java.lang.Object)>(r67);

     label35:
        goto label36;

     label36:
        goto label33;

     label37:
        r68 = virtualinvoke r65.<java.util.ArrayList: java.util.Iterator iterator()>();

     label38:
        $z2 = interfaceinvoke r68.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label42;

        r69 = interfaceinvoke r68.<java.util.Iterator: java.lang.Object next()>();

     label39:
        z12 = 1;

     label40:
        $r7 = r61.<android.content.pm.RegisteredServicesCache$UserServices: java.util.Map persistentServices>;

        interfaceinvoke $r7.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r69);

        $r9 = r61.<android.content.pm.RegisteredServicesCache$UserServices: java.util.Map services>;

        interfaceinvoke $r9.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r69);

        specialinvoke r0.<android.content.pm.RegisteredServicesCache: void notifyListener(java.lang.Object,int,boolean)>(r69, i0, 1);

     label41:
        goto label38;

     label42:
        if z12 == 0 goto label44;

     label43:
        virtualinvoke r0.<android.content.pm.RegisteredServicesCache: void onServicesChangedLocked(int)>(i0);

        specialinvoke r0.<android.content.pm.RegisteredServicesCache: void writePersistentServicesLocked(android.content.pm.RegisteredServicesCache$UserServices,int)>(r61, i0);

     label44:
        exitmonitor r60;

     label45:
        return;

     label46:
        $r51 := @caughtexception;

        r70 = $r51;

     label47:
        exitmonitor r60;

     label48:
        throw r70;

     label49:
        $r50 := @caughtexception;

        r70 = $r50;

        goto label47;

        catch org.xmlpull.v1.XmlPullParserException from label02 to label03 with label08;
        catch java.io.IOException from label02 to label03 with label08;
        catch org.xmlpull.v1.XmlPullParserException from label04 to label05 with label08;
        catch java.io.IOException from label04 to label05 with label08;
        catch org.xmlpull.v1.XmlPullParserException from label06 to label07 with label08;
        catch java.io.IOException from label06 to label07 with label08;
        catch java.lang.Throwable from label11 to label12 with label46;
        catch java.lang.Throwable from label15 to label16 with label46;
        catch java.lang.Throwable from label16 to label17 with label46;
        catch java.lang.Throwable from label18 to label19 with label46;
        catch java.lang.Throwable from label19 to label20 with label46;
        catch java.lang.Throwable from label21 to label22 with label46;
        catch java.lang.Throwable from label23 to label24 with label46;
        catch java.lang.Throwable from label25 to label26 with label46;
        catch java.lang.Throwable from label27 to label28 with label46;
        catch java.lang.Throwable from label28 to label29 with label46;
        catch java.lang.Throwable from label29 to label30 with label46;
        catch java.lang.Throwable from label32 to label33 with label46;
        catch java.lang.Throwable from label33 to label34 with label46;
        catch java.lang.Throwable from label34 to label35 with label49;
        catch java.lang.Throwable from label37 to label38 with label49;
        catch java.lang.Throwable from label38 to label39 with label49;
        catch java.lang.Throwable from label40 to label41 with label49;
        catch java.lang.Throwable from label43 to label44 with label49;
        catch java.lang.Throwable from label44 to label45 with label49;
        catch java.lang.Throwable from label47 to label48 with label49;
    }

    private void handlePackageEvent(android.content.Intent, int)
    {
        android.content.pm.RegisteredServicesCache r0;
        int i0, i1;
        java.lang.String r1, $r2, $r3, $r4, $r6;
        boolean z0, $z1, $z2, $z3, $z4, z5;
        int[] $r5, r8;
        android.content.Intent r7;

        r0 := @this: android.content.pm.RegisteredServicesCache;

        r7 := @parameter0: android.content.Intent;

        i0 := @parameter1: int;

        r1 = virtualinvoke r7.<android.content.Intent: java.lang.String getAction()>();

        $r2 = "android.intent.action.PACKAGE_REMOVED";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 != 0 goto label2;

        $r6 = "android.intent.action.EXTERNAL_APPLICATIONS_UNAVAILABLE";

        $z4 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z4 == 0 goto label1;

        goto label2;

     label1:
        z5 = 0;

        goto label3;

     label2:
        z5 = 1;

     label3:
        z0 = virtualinvoke r7.<android.content.Intent: boolean getBooleanExtra(java.lang.String,boolean)>("android.intent.extra.REPLACING", 0);

        if z5 == 0 goto label4;

        if z0 == 0 goto label4;

        goto label8;

     label4:
        $r3 = "android.intent.action.EXTERNAL_APPLICATIONS_AVAILABLE";

        $z2 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z2 != 0 goto label6;

        $r4 = "android.intent.action.EXTERNAL_APPLICATIONS_UNAVAILABLE";

        $z3 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z3 == 0 goto label5;

        goto label6;

     label5:
        i1 = virtualinvoke r7.<android.content.Intent: int getIntExtra(java.lang.String,int)>("android.intent.extra.UID", -1);

        r8 = null;

        if i1 <= 0 goto label7;

        $r5 = newarray (int)[1];

        $r5[0] = i1;

        r8 = $r5;

        goto label7;

     label6:
        r8 = virtualinvoke r7.<android.content.Intent: int[] getIntArrayExtra(java.lang.String)>("android.intent.extra.changed_uid_list");

     label7:
        specialinvoke r0.<android.content.pm.RegisteredServicesCache: void generateServicesMap(int[],int)>(r8, i0);

     label8:
        return;
    }

    static void lambda$notifyListener$0(android.content.pm.RegisteredServicesCacheListener, java.lang.Object, int, boolean)
    {
        java.lang.Object r0;
        int i0;
        boolean z0;
        java.lang.Throwable $r1;
        android.content.pm.RegisteredServicesCacheListener r2;

        r2 := @parameter0: android.content.pm.RegisteredServicesCacheListener;

        r0 := @parameter1: java.lang.Object;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

     label1:
        interfaceinvoke r2.<android.content.pm.RegisteredServicesCacheListener: void onServiceChanged(java.lang.Object,int,boolean)>(r0, i0, z0);

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageManager", "Exception from onServiceChanged", $r1);

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private void migrateIfNecessaryLocked()
    {
        android.content.pm.RegisteredServicesCache r0;
        android.content.pm.XmlSerializerAndParser $r2;
        java.io.File $r3, $r4, $r5, $r11, $r13, $r18;
        java.lang.StringBuilder $r6, $r14;
        java.lang.String $r7, $r12, $r15, $r19;
        android.util.AtomicFile $r10;
        boolean $z0, $z1, $z2;
        android.util.SparseArray $r20, $r22, $r24;
        java.util.List $r21;
        java.lang.Object $r23, $r25;
        int $i0, $i1;
        java.lang.Throwable $r26;
        java.lang.Exception $r27, $r28;
        java.io.FileInputStream r33, r34, r35;
        java.util.Iterator r38;
        android.content.pm.UserInfo r39;
        android.content.pm.RegisteredServicesCache$UserServices r40;

        r0 := @this: android.content.pm.RegisteredServicesCache;

        $r2 = r0.<android.content.pm.RegisteredServicesCache: android.content.pm.XmlSerializerAndParser mSerializerAndParser>;

        if $r2 != null goto label01;

        return;

     label01:
        $r3 = new java.io.File;

        $r4 = new java.io.File;

        $r5 = virtualinvoke r0.<android.content.pm.RegisteredServicesCache: java.io.File getDataDirectory()>();

        specialinvoke $r4.<java.io.File: void <init>(java.io.File,java.lang.String)>($r5, "system");

        specialinvoke $r3.<java.io.File: void <init>(java.io.File,java.lang.String)>($r4, "registered_services");

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = r0.<android.content.pm.RegisteredServicesCache: java.lang.String mInterfaceName>;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".xml");

        $r10 = new android.util.AtomicFile;

        $r11 = new java.io.File;

        $r12 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, $r12);

        specialinvoke $r10.<android.util.AtomicFile: void <init>(java.io.File)>($r11);

        $r13 = virtualinvoke $r10.<android.util.AtomicFile: java.io.File getBaseFile()>();

        $z0 = virtualinvoke $r13.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label23;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = r0.<android.content.pm.RegisteredServicesCache: java.lang.String mInterfaceName>;

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".xml.migrated");

        $r18 = new java.io.File;

        $r19 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, $r19);

        $z1 = virtualinvoke $r18.<java.io.File: boolean exists()>();

        if $z1 != 0 goto label23;

        r33 = null;

        r34 = null;

     label02:
        r35 = virtualinvoke $r10.<android.util.AtomicFile: java.io.FileInputStream openRead()>();

     label03:
        r34 = r35;

        r33 = r35;

     label04:
        $r20 = r0.<android.content.pm.RegisteredServicesCache: android.util.SparseArray mUserServices>;

        virtualinvoke $r20.<android.util.SparseArray: void clear()>();

     label05:
        r34 = r35;

        r33 = r35;

     label06:
        specialinvoke r0.<android.content.pm.RegisteredServicesCache: void readPersistentServicesLocked(java.io.InputStream)>(r35);

     label07:
        r33 = r35;

     label08:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r33);

        goto label13;

     label09:
        $r26 := @caughtexception;

        goto label22;

     label10:
        $r28 := @caughtexception;

        r34 = r33;

     label11:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageManager", "Error reading persistent services, starting from scratch", $r28);

     label12:
        goto label08;

     label13:
        $r21 = virtualinvoke r0.<android.content.pm.RegisteredServicesCache: java.util.List getUsers()>();

        r38 = interfaceinvoke $r21.<java.util.List: java.util.Iterator iterator()>();

     label14:
        $z2 = interfaceinvoke r38.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label18;

        $r23 = interfaceinvoke r38.<java.util.Iterator: java.lang.Object next()>();

        r39 = (android.content.pm.UserInfo) $r23;

        $r24 = r0.<android.content.pm.RegisteredServicesCache: android.util.SparseArray mUserServices>;

        $i0 = r39.<android.content.pm.UserInfo: int id>;

        $r25 = virtualinvoke $r24.<android.util.SparseArray: java.lang.Object get(int)>($i0);

        r40 = (android.content.pm.RegisteredServicesCache$UserServices) $r25;

     label15:
        if r40 == null goto label17;

     label16:
        $i1 = r39.<android.content.pm.UserInfo: int id>;

        specialinvoke r0.<android.content.pm.RegisteredServicesCache: void writePersistentServicesLocked(android.content.pm.RegisteredServicesCache$UserServices,int)>(r40, $i1);

     label17:
        goto label14;

     label18:
        virtualinvoke $r18.<java.io.File: boolean createNewFile()>();

     label19:
        goto label21;

     label20:
        $r27 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageManager", "Migration failed", $r27);

     label21:
        $r22 = r0.<android.content.pm.RegisteredServicesCache: android.util.SparseArray mUserServices>;

        virtualinvoke $r22.<android.util.SparseArray: void clear()>();

        goto label23;

     label22:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r34);

        throw $r26;

     label23:
        return;

        catch java.lang.Exception from label02 to label03 with label10;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Exception from label04 to label05 with label10;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Exception from label06 to label07 with label10;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label11 to label12 with label09;
        catch java.lang.Exception from label13 to label14 with label20;
        catch java.lang.Exception from label14 to label15 with label20;
        catch java.lang.Exception from label16 to label17 with label20;
        catch java.lang.Exception from label18 to label19 with label20;
    }

    private void notifyListener(java.lang.Object, int, boolean)
    {
        android.content.pm.RegisteredServicesCache r0;
        int i0;
        boolean z0;
        android.content.pm.RegisteredServicesCacheListener r1;
        android.os.Handler r2;
        android.content.pm._$$Lambda$RegisteredServicesCache$lDXmLhKoG7lZpIyDOuPYOrjzDYY $r3;
        java.lang.Throwable $r4;
        java.lang.Object r5;

        r0 := @this: android.content.pm.RegisteredServicesCache;

        r5 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        entermonitor r0;

     label1:
        r1 = r0.<android.content.pm.RegisteredServicesCache: android.content.pm.RegisteredServicesCacheListener mListener>;

        r2 = r0.<android.content.pm.RegisteredServicesCache: android.os.Handler mHandler>;

        exitmonitor r0;

     label2:
        if r1 != null goto label3;

        return;

     label3:
        $r3 = new android.content.pm._$$Lambda$RegisteredServicesCache$lDXmLhKoG7lZpIyDOuPYOrjzDYY;

        specialinvoke $r3.<android.content.pm._$$Lambda$RegisteredServicesCache$lDXmLhKoG7lZpIyDOuPYOrjzDYY: void <init>(android.content.pm.RegisteredServicesCacheListener,java.lang.Object,int,boolean)>(r1, r5, i0, z0);

        virtualinvoke r2.<android.os.Handler: boolean post(java.lang.Runnable)>($r3);

        return;

     label4:
        $r4 := @caughtexception;

     label5:
        exitmonitor r0;

     label6:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    private void readPersistentServicesLocked(java.io.InputStream) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.pm.RegisteredServicesCache r0;
        org.xmlpull.v1.XmlPullParser r1;
        int i0, $i1, $i2, i3, i4, i5;
        java.nio.charset.Charset $r2;
        java.lang.String $r3, $r4, $r5, $r6, $r7, $r9;
        boolean $z0, $z1;
        android.content.pm.XmlSerializerAndParser $r8;
        android.content.pm.RegisteredServicesCache$UserServices $r10;
        java.util.Map $r11;
        java.lang.Integer $r12;
        java.io.InputStream r14;
        java.lang.Object r15;

        r0 := @this: android.content.pm.RegisteredServicesCache;

        r14 := @parameter0: java.io.InputStream;

        r1 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

        $r2 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r3 = virtualinvoke $r2.<java.nio.charset.Charset: java.lang.String name()>();

        interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>(r14, $r3);

        i3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

     label1:
        if i3 == 2 goto label2;

        if i3 == 1 goto label2;

        i3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        goto label1;

     label2:
        $r4 = "services";

        $r5 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label6;

        i4 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

     label3:
        if i4 != 2 goto label5;

        $i1 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i1 != 2 goto label5;

        $r6 = "service";

        $r7 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z1 == 0 goto label5;

        $r8 = r0.<android.content.pm.RegisteredServicesCache: android.content.pm.XmlSerializerAndParser mSerializerAndParser>;

        r15 = interfaceinvoke $r8.<android.content.pm.XmlSerializerAndParser: java.lang.Object createFromXml(org.xmlpull.v1.XmlPullParser)>(r1);

        if r15 != null goto label4;

        goto label6;

     label4:
        $r9 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "uid");

        i5 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r9);

        $i2 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i5);

        $r10 = specialinvoke r0.<android.content.pm.RegisteredServicesCache: android.content.pm.RegisteredServicesCache$UserServices findOrCreateUserLocked(int,boolean)>($i2, 0);

        $r11 = $r10.<android.content.pm.RegisteredServicesCache$UserServices: java.util.Map persistentServices>;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i5);

        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r15, $r12);

     label5:
        i0 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        i4 = i0;

        if i0 != 1 goto label3;

     label6:
        return;
    }

    private void writePersistentServicesLocked(android.content.pm.RegisteredServicesCache$UserServices, int)
    {
        android.content.pm.RegisteredServicesCache r0;
        int i0, $i1;
        android.util.AtomicFile r1;
        java.io.FileOutputStream r2, r24;
        com.android.internal.util.FastXmlSerializer r3;
        java.util.Map$Entry r4;
        android.content.pm.XmlSerializerAndParser $r5, $r19;
        java.nio.charset.Charset $r6;
        java.lang.String $r7, $r17;
        java.lang.Boolean $r8;
        java.util.Map $r10;
        java.util.Set $r11;
        boolean $z0;
        java.lang.Object $r13, $r15, $r20;
        java.lang.Integer $r16;
        java.lang.Throwable $r22;
        android.content.pm.RegisteredServicesCache$UserServices r23;
        java.util.Iterator r25;

        r0 := @this: android.content.pm.RegisteredServicesCache;

        r23 := @parameter0: android.content.pm.RegisteredServicesCache$UserServices;

        i0 := @parameter1: int;

        $r5 = r0.<android.content.pm.RegisteredServicesCache: android.content.pm.XmlSerializerAndParser mSerializerAndParser>;

        if $r5 != null goto label01;

        return;

     label01:
        r1 = specialinvoke r0.<android.content.pm.RegisteredServicesCache: android.util.AtomicFile createFileForUser(int)>(i0);

        r24 = null;

     label02:
        r2 = virtualinvoke r1.<android.util.AtomicFile: java.io.FileOutputStream startWrite()>();

     label03:
        r24 = r2;

     label04:
        r3 = new com.android.internal.util.FastXmlSerializer;

     label05:
        r24 = r2;

     label06:
        specialinvoke r3.<com.android.internal.util.FastXmlSerializer: void <init>()>();

     label07:
        r24 = r2;

     label08:
        $r6 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r7 = virtualinvoke $r6.<java.nio.charset.Charset: java.lang.String name()>();

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>(r2, $r7);

     label09:
        r24 = r2;

     label10:
        $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>(null, $r8);

     label11:
        r24 = r2;

     label12:
        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: void setFeature(java.lang.String,boolean)>("http://xmlpull.org/v1/doc/features.html#indent-output", 1);

     label13:
        r24 = r2;

     label14:
        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "services");

     label15:
        r24 = r2;

     label16:
        $r10 = r23.<android.content.pm.RegisteredServicesCache$UserServices: java.util.Map persistentServices>;

        $r11 = interfaceinvoke $r10.<java.util.Map: java.util.Set entrySet()>();

        r25 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>();

     label17:
        r24 = r2;

     label18:
        $z0 = interfaceinvoke r25.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label30;

     label19:
        r24 = r2;

     label20:
        $r13 = interfaceinvoke r25.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r13;

     label21:
        r24 = r2;

     label22:
        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "service");

     label23:
        r24 = r2;

     label24:
        $r15 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r16 = (java.lang.Integer) $r15;

        $i1 = virtualinvoke $r16.<java.lang.Integer: int intValue()>();

        $r17 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i1);

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "uid", $r17);

     label25:
        r24 = r2;

     label26:
        $r19 = r0.<android.content.pm.RegisteredServicesCache: android.content.pm.XmlSerializerAndParser mSerializerAndParser>;

        $r20 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        interfaceinvoke $r19.<android.content.pm.XmlSerializerAndParser: void writeAsXml(java.lang.Object,org.xmlpull.v1.XmlSerializer)>($r20, r3);

     label27:
        r24 = r2;

     label28:
        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "service");

     label29:
        goto label17;

     label30:
        r24 = r2;

     label31:
        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "services");

     label32:
        r24 = r2;

     label33:
        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: void endDocument()>();

     label34:
        r24 = r2;

     label35:
        virtualinvoke r1.<android.util.AtomicFile: void finishWrite(java.io.FileOutputStream)>(r2);

     label36:
        goto label38;

     label37:
        $r22 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageManager", "Error writing accounts", $r22);

        if r24 == null goto label38;

        virtualinvoke r1.<android.util.AtomicFile: void failWrite(java.io.FileOutputStream)>(r24);

     label38:
        return;

        catch java.io.IOException from label02 to label03 with label37;
        catch java.io.IOException from label04 to label05 with label37;
        catch java.io.IOException from label06 to label07 with label37;
        catch java.io.IOException from label08 to label09 with label37;
        catch java.io.IOException from label10 to label11 with label37;
        catch java.io.IOException from label12 to label13 with label37;
        catch java.io.IOException from label14 to label15 with label37;
        catch java.io.IOException from label16 to label17 with label37;
        catch java.io.IOException from label18 to label19 with label37;
        catch java.io.IOException from label20 to label21 with label37;
        catch java.io.IOException from label22 to label23 with label37;
        catch java.io.IOException from label24 to label25 with label37;
        catch java.io.IOException from label26 to label27 with label37;
        catch java.io.IOException from label28 to label29 with label37;
        catch java.io.IOException from label31 to label32 with label37;
        catch java.io.IOException from label33 to label34 with label37;
        catch java.io.IOException from label35 to label36 with label37;
    }

    public void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[], int)
    {
        android.content.pm.RegisteredServicesCache r0;
        int i0, $i1;
        java.lang.StringBuilder r1, r20;
        java.util.Map $r2, $r4, $r8;
        java.lang.String $r7, $r13;
        java.util.Collection $r9;
        boolean $z0;
        java.lang.Object $r10, r18;
        java.lang.Throwable $r14;
        java.io.FileDescriptor r15;
        java.io.PrintWriter r16;
        java.lang.String[] r17;
        android.content.pm.RegisteredServicesCache$UserServices r19;
        java.util.Iterator r21;
        android.content.pm.RegisteredServicesCache$ServiceInfo r22;

        r0 := @this: android.content.pm.RegisteredServicesCache;

        r15 := @parameter0: java.io.FileDescriptor;

        r16 := @parameter1: java.io.PrintWriter;

        r17 := @parameter2: java.lang.String[];

        i0 := @parameter3: int;

        r18 = r0.<android.content.pm.RegisteredServicesCache: java.lang.Object mServicesLock>;

        entermonitor r18;

     label01:
        r19 = specialinvoke r0.<android.content.pm.RegisteredServicesCache: android.content.pm.RegisteredServicesCache$UserServices findOrCreateUserLocked(int)>(i0);

        $r2 = r19.<android.content.pm.RegisteredServicesCache$UserServices: java.util.Map services>;

        if $r2 == null goto label05;

        r20 = new java.lang.StringBuilder;

        specialinvoke r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RegisteredServicesCache: ");

        $r4 = r19.<android.content.pm.RegisteredServicesCache$UserServices: java.util.Map services>;

        $i1 = interfaceinvoke $r4.<java.util.Map: int size()>();

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" services");

        $r7 = virtualinvoke r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r16.<java.io.PrintWriter: void println(java.lang.String)>($r7);

        $r8 = r19.<android.content.pm.RegisteredServicesCache$UserServices: java.util.Map services>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.util.Collection values()>();

        r21 = interfaceinvoke $r9.<java.util.Collection: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke r21.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label04;

        $r10 = interfaceinvoke r21.<java.util.Iterator: java.lang.Object next()>();

        r22 = (android.content.pm.RegisteredServicesCache$ServiceInfo) $r10;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r22);

        $r13 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r16.<java.io.PrintWriter: void println(java.lang.String)>($r13);

     label03:
        goto label02;

     label04:
        goto label06;

     label05:
        virtualinvoke r16.<java.io.PrintWriter: void println(java.lang.String)>("RegisteredServicesCache: services not loaded");

     label06:
        exitmonitor r18;

     label07:
        return;

     label08:
        $r14 := @caughtexception;

     label09:
        exitmonitor r18;

     label10:
        throw $r14;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public java.util.Collection getAllServices(int)
    {
        android.content.pm.RegisteredServicesCache r0;
        int i0;
        java.lang.Object r1;
        java.util.ArrayList r2;
        java.util.Map $r3, $r4;
        java.util.Collection $r5, r8;
        java.lang.Throwable $r6;
        android.content.pm.RegisteredServicesCache$UserServices r7;

        r0 := @this: android.content.pm.RegisteredServicesCache;

        i0 := @parameter0: int;

        r1 = r0.<android.content.pm.RegisteredServicesCache: java.lang.Object mServicesLock>;

        entermonitor r1;

     label1:
        r7 = specialinvoke r0.<android.content.pm.RegisteredServicesCache: android.content.pm.RegisteredServicesCache$UserServices findOrCreateUserLocked(int)>(i0);

        $r3 = r7.<android.content.pm.RegisteredServicesCache$UserServices: java.util.Map services>;

        if $r3 != null goto label2;

        specialinvoke r0.<android.content.pm.RegisteredServicesCache: void generateServicesMap(int[],int)>(null, i0);

     label2:
        r2 = new java.util.ArrayList;

        $r4 = r7.<android.content.pm.RegisteredServicesCache$UserServices: java.util.Map services>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Collection values()>();

        specialinvoke r2.<java.util.ArrayList: void <init>(java.util.Collection)>($r5);

        r8 = staticinvoke <java.util.Collections: java.util.Collection unmodifiableCollection(java.util.Collection)>(r2);

        exitmonitor r1;

     label3:
        return r8;

     label4:
        $r6 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public boolean getBindInstantServiceAllowed(int)
    {
        android.content.pm.RegisteredServicesCache r0;
        int i0;
        java.lang.Object r1;
        boolean z0;
        android.content.Context $r3;
        android.content.pm.RegisteredServicesCache$UserServices $r4;
        java.lang.Throwable $r5;

        r0 := @this: android.content.pm.RegisteredServicesCache;

        i0 := @parameter0: int;

        $r3 = r0.<android.content.pm.RegisteredServicesCache: android.content.Context mContext>;

        virtualinvoke $r3.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.MANAGE_BIND_INSTANT_SERVICE", "getBindInstantServiceAllowed");

        r1 = r0.<android.content.pm.RegisteredServicesCache: java.lang.Object mServicesLock>;

        entermonitor r1;

     label1:
        $r4 = specialinvoke r0.<android.content.pm.RegisteredServicesCache: android.content.pm.RegisteredServicesCache$UserServices findOrCreateUserLocked(int)>(i0);

        z0 = $r4.<android.content.pm.RegisteredServicesCache$UserServices: boolean mBindInstantServiceAllowed>;

        exitmonitor r1;

     label2:
        return z0;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    protected java.io.File getDataDirectory()
    {
        android.content.pm.RegisteredServicesCache r0;
        java.io.File $r1;

        r0 := @this: android.content.pm.RegisteredServicesCache;

        $r1 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        return $r1;
    }

    public android.content.pm.RegisteredServicesCacheListener getListener()
    {
        android.content.pm.RegisteredServicesCache r0;
        java.lang.Throwable $r1;
        android.content.pm.RegisteredServicesCacheListener r2;

        r0 := @this: android.content.pm.RegisteredServicesCache;

        entermonitor r0;

     label1:
        r2 = r0.<android.content.pm.RegisteredServicesCache: android.content.pm.RegisteredServicesCacheListener mListener>;

        exitmonitor r0;

     label2:
        return r2;

     label3:
        $r1 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    protected java.util.Map getPersistentServices(int)
    {
        android.content.pm.RegisteredServicesCache r0;
        int i0;
        android.content.pm.RegisteredServicesCache$UserServices $r1;
        java.util.Map $r2;

        r0 := @this: android.content.pm.RegisteredServicesCache;

        i0 := @parameter0: int;

        $r1 = specialinvoke r0.<android.content.pm.RegisteredServicesCache: android.content.pm.RegisteredServicesCache$UserServices findOrCreateUserLocked(int)>(i0);

        $r2 = $r1.<android.content.pm.RegisteredServicesCache$UserServices: java.util.Map persistentServices>;

        return $r2;
    }

    public android.content.pm.RegisteredServicesCache$ServiceInfo getServiceInfo(java.lang.Object, int)
    {
        android.content.pm.RegisteredServicesCache r0;
        int i0;
        java.lang.Object r1, $r5, r7;
        android.content.pm.RegisteredServicesCache$UserServices r2;
        java.util.Map $r3, $r4;
        java.lang.Throwable $r6;
        android.content.pm.RegisteredServicesCache$ServiceInfo r8;

        r0 := @this: android.content.pm.RegisteredServicesCache;

        r7 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        r1 = r0.<android.content.pm.RegisteredServicesCache: java.lang.Object mServicesLock>;

        entermonitor r1;

     label1:
        r2 = specialinvoke r0.<android.content.pm.RegisteredServicesCache: android.content.pm.RegisteredServicesCache$UserServices findOrCreateUserLocked(int)>(i0);

        $r3 = r2.<android.content.pm.RegisteredServicesCache$UserServices: java.util.Map services>;

        if $r3 != null goto label2;

        specialinvoke r0.<android.content.pm.RegisteredServicesCache: void generateServicesMap(int[],int)>(null, i0);

     label2:
        $r4 = r2.<android.content.pm.RegisteredServicesCache$UserServices: java.util.Map services>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r7);

        r8 = (android.content.pm.RegisteredServicesCache$ServiceInfo) $r5;

        exitmonitor r1;

     label3:
        return r8;

     label4:
        $r6 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    protected android.content.pm.UserInfo getUser(int)
    {
        android.content.pm.RegisteredServicesCache r0;
        int i0;
        android.content.Context $r1;
        android.os.UserManager $r2;
        android.content.pm.UserInfo $r3;

        r0 := @this: android.content.pm.RegisteredServicesCache;

        i0 := @parameter0: int;

        $r1 = r0.<android.content.pm.RegisteredServicesCache: android.content.Context mContext>;

        $r2 = staticinvoke <android.os.UserManager: android.os.UserManager get(android.content.Context)>($r1);

        $r3 = virtualinvoke $r2.<android.os.UserManager: android.content.pm.UserInfo getUserInfo(int)>(i0);

        return $r3;
    }

    protected java.io.File getUserSystemDirectory(int)
    {
        android.content.pm.RegisteredServicesCache r0;
        int i0;
        java.io.File $r1;

        r0 := @this: android.content.pm.RegisteredServicesCache;

        i0 := @parameter0: int;

        $r1 = staticinvoke <android.os.Environment: java.io.File getUserSystemDirectory(int)>(i0);

        return $r1;
    }

    protected java.util.List getUsers()
    {
        android.content.pm.RegisteredServicesCache r0;
        android.content.Context $r1;
        android.os.UserManager $r2;
        java.util.List $r3;

        r0 := @this: android.content.pm.RegisteredServicesCache;

        $r1 = r0.<android.content.pm.RegisteredServicesCache: android.content.Context mContext>;

        $r2 = staticinvoke <android.os.UserManager: android.os.UserManager get(android.content.Context)>($r1);

        $r3 = virtualinvoke $r2.<android.os.UserManager: java.util.List getUsers(boolean)>(1);

        return $r3;
    }

    protected boolean inSystemImage(int)
    {
        android.content.pm.RegisteredServicesCache r0;
        java.lang.String[] r1;
        int i0, i1, $i2, i3, i4;
        android.content.Context $r2, $r4;
        android.content.pm.PackageManager $r3, $r5;
        android.content.pm.PackageInfo $r6;
        android.content.pm.ApplicationInfo $r7;
        android.content.pm.PackageManager$NameNotFoundException $r8;
        java.lang.String r9;

        r0 := @this: android.content.pm.RegisteredServicesCache;

        i3 := @parameter0: int;

        $r2 = r0.<android.content.pm.RegisteredServicesCache: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r1 = virtualinvoke $r3.<android.content.pm.PackageManager: java.lang.String[] getPackagesForUid(int)>(i3);

        if r1 == null goto label6;

        i0 = lengthof r1;

        i4 = 0;

     label1:
        if i4 >= i0 goto label6;

        r9 = r1[i4];

     label2:
        $r4 = r0.<android.content.pm.RegisteredServicesCache: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r6 = virtualinvoke $r5.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>(r9, 0);

        $r7 = $r6.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        i1 = $r7.<android.content.pm.ApplicationInfo: int flags>;

     label3:
        $i2 = i1 & 1;

        if $i2 == 0 goto label4;

        return 1;

     label4:
        i4 = i4 + 1;

        goto label1;

     label5:
        $r8 := @caughtexception;

        return 0;

     label6:
        return 0;

        catch android.content.pm.PackageManager$NameNotFoundException from label2 to label3 with label5;
    }

    public void invalidateCache(int)
    {
        android.content.pm.RegisteredServicesCache r0;
        int i0;
        java.lang.Object r1;
        android.content.pm.RegisteredServicesCache$UserServices $r3;
        java.lang.Throwable $r4;

        r0 := @this: android.content.pm.RegisteredServicesCache;

        i0 := @parameter0: int;

        r1 = r0.<android.content.pm.RegisteredServicesCache: java.lang.Object mServicesLock>;

        entermonitor r1;

     label1:
        $r3 = specialinvoke r0.<android.content.pm.RegisteredServicesCache: android.content.pm.RegisteredServicesCache$UserServices findOrCreateUserLocked(int)>(i0);

        $r3.<android.content.pm.RegisteredServicesCache$UserServices: java.util.Map services> = null;

        virtualinvoke r0.<android.content.pm.RegisteredServicesCache: void onServicesChangedLocked(int)>(i0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    protected void onServicesChangedLocked(int)
    {
        android.content.pm.RegisteredServicesCache r0;
        int i0;

        r0 := @this: android.content.pm.RegisteredServicesCache;

        i0 := @parameter0: int;

        return;
    }

    protected void onUserRemoved(int)
    {
        android.content.pm.RegisteredServicesCache r0;
        int i0;
        java.lang.Object r1;
        android.util.SparseArray $r3;
        java.lang.Throwable $r4;

        r0 := @this: android.content.pm.RegisteredServicesCache;

        i0 := @parameter0: int;

        r1 = r0.<android.content.pm.RegisteredServicesCache: java.lang.Object mServicesLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<android.content.pm.RegisteredServicesCache: android.util.SparseArray mUserServices>;

        virtualinvoke $r3.<android.util.SparseArray: void remove(int)>(i0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public abstract java.lang.Object parseServiceAttributes(android.content.res.Resources, java.lang.String, android.util.AttributeSet);

    protected android.content.pm.RegisteredServicesCache$ServiceInfo parseServiceInfo(android.content.pm.ResolveInfo) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.pm.RegisteredServicesCache r0;
        android.content.pm.ServiceInfo r1, $r24;
        android.util.AttributeSet r2;
        int i0;
        java.lang.String r3, $r5, $r6, $r8, $r10, $r13, $r14, $r16, $r19, $r22, $r27, $r29;
        android.content.Context $r7;
        boolean $z0;
        android.content.pm.ApplicationInfo $r20;
        android.content.res.Resources $r21;
        android.content.pm.PackageManager$NameNotFoundException $r25;
        java.lang.Throwable $r30, r55, r56, r57;
        android.content.pm.ResolveInfo r31;
        android.content.pm.PackageManager r33;
        android.content.res.XmlResourceParser r34, r35, r36;
        java.lang.Object r37;
        android.content.ComponentName r47;
        android.content.pm.RegisteredServicesCache$ServiceInfo r48;
        java.lang.StringBuilder r49, r51, r53;
        org.xmlpull.v1.XmlPullParserException r50, r52, r54;

        r0 := @this: android.content.pm.RegisteredServicesCache;

        r31 := @parameter0: android.content.pm.ResolveInfo;

        r1 = r31.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        r47 = new android.content.ComponentName;

        $r6 = r1.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        $r5 = r1.<android.content.pm.ServiceInfo: java.lang.String name>;

        specialinvoke r47.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r6, $r5);

        $r7 = r0.<android.content.pm.RegisteredServicesCache: android.content.Context mContext>;

        r33 = virtualinvoke $r7.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r34 = null;

        r35 = null;

     label01:
        $r8 = r0.<android.content.pm.RegisteredServicesCache: java.lang.String mMetaDataName>;

        r36 = virtualinvoke r1.<android.content.pm.ServiceInfo: android.content.res.XmlResourceParser loadXmlMetaData(android.content.pm.PackageManager,java.lang.String)>(r33, $r8);

     label02:
        if r36 == null goto label35;

        r35 = r36;

        r34 = r36;

     label03:
        r2 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>(r36);

     label04:
        r35 = r36;

        r34 = r36;

     label05:
        i0 = interfaceinvoke r36.<android.content.res.XmlResourceParser: int next()>();

     label06:
        if i0 == 1 goto label07;

        if i0 == 2 goto label07;

        goto label04;

     label07:
        r35 = r36;

        r34 = r36;

     label08:
        r3 = interfaceinvoke r36.<android.content.res.XmlResourceParser: java.lang.String getName()>();

     label09:
        r35 = r36;

        r34 = r36;

     label10:
        $r14 = r0.<android.content.pm.RegisteredServicesCache: java.lang.String mAttributesName>;

        $z0 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z0 == 0 goto label19;

     label11:
        r35 = r36;

        r34 = r36;

     label12:
        $r20 = r1.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r21 = virtualinvoke r33.<android.content.pm.PackageManager: android.content.res.Resources getResourcesForApplication(android.content.pm.ApplicationInfo)>($r20);

        $r22 = r1.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        r37 = virtualinvoke r0.<android.content.pm.RegisteredServicesCache: java.lang.Object parseServiceAttributes(android.content.res.Resources,java.lang.String,android.util.AttributeSet)>($r21, $r22, r2);

     label13:
        if r37 != null goto label15;

        if r36 == null goto label14;

        interfaceinvoke r36.<android.content.res.XmlResourceParser: void close()>();

     label14:
        return null;

     label15:
        r35 = r36;

        r34 = r36;

     label16:
        r48 = new android.content.pm.RegisteredServicesCache$ServiceInfo;

        $r24 = r31.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        specialinvoke r48.<android.content.pm.RegisteredServicesCache$ServiceInfo: void <init>(java.lang.Object,android.content.pm.ComponentInfo,android.content.ComponentName)>(r37, $r24, r47);

     label17:
        if r36 == null goto label18;

        interfaceinvoke r36.<android.content.res.XmlResourceParser: void close()>();

     label18:
        return r48;

     label19:
        r35 = r36;

        r34 = r36;

     label20:
        r50 = new org.xmlpull.v1.XmlPullParserException;

     label21:
        r35 = r36;

        r34 = r36;

     label22:
        r49 = new java.lang.StringBuilder;

     label23:
        r35 = r36;

        r34 = r36;

     label24:
        specialinvoke r49.<java.lang.StringBuilder: void <init>()>();

     label25:
        r35 = r36;

        r34 = r36;

     label26:
        virtualinvoke r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Meta-data does not start with ");

     label27:
        r35 = r36;

        r34 = r36;

     label28:
        $r16 = r0.<android.content.pm.RegisteredServicesCache: java.lang.String mAttributesName>;

        virtualinvoke r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

     label29:
        r35 = r36;

        r34 = r36;

     label30:
        virtualinvoke r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" tag");

     label31:
        r35 = r36;

        r34 = r36;

     label32:
        $r19 = virtualinvoke r49.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r50.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r19);

     label33:
        r35 = r36;

        r34 = r36;

     label34:
        r55 = (java.lang.Throwable) r50;

        throw r55;

     label35:
        r35 = r36;

        r34 = r36;

     label36:
        r52 = new org.xmlpull.v1.XmlPullParserException;

     label37:
        r35 = r36;

        r34 = r36;

     label38:
        r51 = new java.lang.StringBuilder;

     label39:
        r35 = r36;

        r34 = r36;

     label40:
        specialinvoke r51.<java.lang.StringBuilder: void <init>()>();

     label41:
        r35 = r36;

        r34 = r36;

     label42:
        virtualinvoke r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No ");

     label43:
        r35 = r36;

        r34 = r36;

     label44:
        $r10 = r0.<android.content.pm.RegisteredServicesCache: java.lang.String mMetaDataName>;

        virtualinvoke r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

     label45:
        r35 = r36;

        r34 = r36;

     label46:
        virtualinvoke r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" meta-data");

     label47:
        r35 = r36;

        r34 = r36;

     label48:
        $r13 = virtualinvoke r51.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r52.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r13);

     label49:
        r35 = r36;

        r34 = r36;

     label50:
        r56 = (java.lang.Throwable) r52;

        throw r56;

     label51:
        $r30 := @caughtexception;

        goto label66;

     label52:
        $r25 := @caughtexception;

        r35 = r34;

     label53:
        r54 = new org.xmlpull.v1.XmlPullParserException;

     label54:
        r35 = r34;

     label55:
        r53 = new java.lang.StringBuilder;

     label56:
        r35 = r34;

     label57:
        specialinvoke r53.<java.lang.StringBuilder: void <init>()>();

     label58:
        r35 = r34;

     label59:
        virtualinvoke r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to load resources for pacakge ");

     label60:
        r35 = r34;

     label61:
        $r27 = r1.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        virtualinvoke r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

     label62:
        r35 = r34;

     label63:
        $r29 = virtualinvoke r53.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r54.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r29);

     label64:
        r35 = r34;

     label65:
        r57 = (java.lang.Throwable) r54;

        throw r57;

     label66:
        if r35 == null goto label67;

        interfaceinvoke r35.<android.content.res.XmlResourceParser: void close()>();

     label67:
        throw $r30;

        catch android.content.pm.PackageManager$NameNotFoundException from label01 to label02 with label52;
        catch java.lang.Throwable from label01 to label02 with label51;
        catch android.content.pm.PackageManager$NameNotFoundException from label03 to label04 with label52;
        catch java.lang.Throwable from label03 to label04 with label51;
        catch android.content.pm.PackageManager$NameNotFoundException from label05 to label06 with label52;
        catch java.lang.Throwable from label05 to label06 with label51;
        catch android.content.pm.PackageManager$NameNotFoundException from label08 to label09 with label52;
        catch java.lang.Throwable from label08 to label09 with label51;
        catch android.content.pm.PackageManager$NameNotFoundException from label10 to label11 with label52;
        catch java.lang.Throwable from label10 to label11 with label51;
        catch android.content.pm.PackageManager$NameNotFoundException from label12 to label13 with label52;
        catch java.lang.Throwable from label12 to label13 with label51;
        catch android.content.pm.PackageManager$NameNotFoundException from label16 to label17 with label52;
        catch java.lang.Throwable from label16 to label17 with label51;
        catch android.content.pm.PackageManager$NameNotFoundException from label20 to label21 with label52;
        catch java.lang.Throwable from label20 to label21 with label51;
        catch android.content.pm.PackageManager$NameNotFoundException from label22 to label23 with label52;
        catch java.lang.Throwable from label22 to label23 with label51;
        catch android.content.pm.PackageManager$NameNotFoundException from label24 to label25 with label52;
        catch java.lang.Throwable from label24 to label25 with label51;
        catch android.content.pm.PackageManager$NameNotFoundException from label26 to label27 with label52;
        catch java.lang.Throwable from label26 to label27 with label51;
        catch android.content.pm.PackageManager$NameNotFoundException from label28 to label29 with label52;
        catch java.lang.Throwable from label28 to label29 with label51;
        catch android.content.pm.PackageManager$NameNotFoundException from label30 to label31 with label52;
        catch java.lang.Throwable from label30 to label31 with label51;
        catch android.content.pm.PackageManager$NameNotFoundException from label32 to label33 with label52;
        catch java.lang.Throwable from label32 to label33 with label51;
        catch android.content.pm.PackageManager$NameNotFoundException from label34 to label35 with label52;
        catch java.lang.Throwable from label34 to label35 with label51;
        catch android.content.pm.PackageManager$NameNotFoundException from label36 to label37 with label52;
        catch java.lang.Throwable from label36 to label37 with label51;
        catch android.content.pm.PackageManager$NameNotFoundException from label38 to label39 with label52;
        catch java.lang.Throwable from label38 to label39 with label51;
        catch android.content.pm.PackageManager$NameNotFoundException from label40 to label41 with label52;
        catch java.lang.Throwable from label40 to label41 with label51;
        catch android.content.pm.PackageManager$NameNotFoundException from label42 to label43 with label52;
        catch java.lang.Throwable from label42 to label43 with label51;
        catch android.content.pm.PackageManager$NameNotFoundException from label44 to label45 with label52;
        catch java.lang.Throwable from label44 to label45 with label51;
        catch android.content.pm.PackageManager$NameNotFoundException from label46 to label47 with label52;
        catch java.lang.Throwable from label46 to label47 with label51;
        catch android.content.pm.PackageManager$NameNotFoundException from label48 to label49 with label52;
        catch java.lang.Throwable from label48 to label49 with label51;
        catch android.content.pm.PackageManager$NameNotFoundException from label50 to label51 with label52;
        catch java.lang.Throwable from label50 to label51 with label51;
        catch java.lang.Throwable from label53 to label54 with label51;
        catch java.lang.Throwable from label55 to label56 with label51;
        catch java.lang.Throwable from label57 to label58 with label51;
        catch java.lang.Throwable from label59 to label60 with label51;
        catch java.lang.Throwable from label61 to label62 with label51;
        catch java.lang.Throwable from label63 to label64 with label51;
        catch java.lang.Throwable from label65 to label66 with label51;
    }

    protected java.util.List queryIntentServices(int)
    {
        android.content.pm.RegisteredServicesCache r0;
        int i0, i1;
        java.lang.Object r1;
        android.content.Context $r2;
        android.content.pm.RegisteredServicesCache$UserServices $r3;
        boolean $z0;
        android.content.Intent $r4;
        java.lang.String $r5;
        java.util.List $r6;
        java.lang.Throwable $r7;
        android.content.pm.PackageManager r8;

        r0 := @this: android.content.pm.RegisteredServicesCache;

        i0 := @parameter0: int;

        $r2 = r0.<android.content.pm.RegisteredServicesCache: android.content.Context mContext>;

        r8 = virtualinvoke $r2.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        i1 = 786560;

        r1 = r0.<android.content.pm.RegisteredServicesCache: java.lang.Object mServicesLock>;

        entermonitor r1;

     label1:
        $r3 = specialinvoke r0.<android.content.pm.RegisteredServicesCache: android.content.pm.RegisteredServicesCache$UserServices findOrCreateUserLocked(int)>(i0);

        $z0 = $r3.<android.content.pm.RegisteredServicesCache$UserServices: boolean mBindInstantServiceAllowed>;

        if $z0 == 0 goto label3;

     label2:
        i1 = 786560 | 8388608;

     label3:
        exitmonitor r1;

     label4:
        $r4 = new android.content.Intent;

        $r5 = r0.<android.content.pm.RegisteredServicesCache: java.lang.String mInterfaceName>;

        specialinvoke $r4.<android.content.Intent: void <init>(java.lang.String)>($r5);

        $r6 = virtualinvoke r8.<android.content.pm.PackageManager: java.util.List queryIntentServicesAsUser(android.content.Intent,int,int)>($r4, i1, i0);

        return $r6;

     label5:
        $r7 := @caughtexception;

     label6:
        exitmonitor r1;

     label7:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public void setBindInstantServiceAllowed(int, boolean)
    {
        android.content.pm.RegisteredServicesCache r0;
        int i0;
        boolean z0;
        java.lang.Object r1;
        android.content.Context $r3;
        android.content.pm.RegisteredServicesCache$UserServices $r4;
        java.lang.Throwable $r5;

        r0 := @this: android.content.pm.RegisteredServicesCache;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r3 = r0.<android.content.pm.RegisteredServicesCache: android.content.Context mContext>;

        virtualinvoke $r3.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.MANAGE_BIND_INSTANT_SERVICE", "setBindInstantServiceAllowed");

        r1 = r0.<android.content.pm.RegisteredServicesCache: java.lang.Object mServicesLock>;

        entermonitor r1;

     label1:
        $r4 = specialinvoke r0.<android.content.pm.RegisteredServicesCache: android.content.pm.RegisteredServicesCache$UserServices findOrCreateUserLocked(int)>(i0);

        $r4.<android.content.pm.RegisteredServicesCache$UserServices: boolean mBindInstantServiceAllowed> = z0;

        exitmonitor r1;

     label2:
        return;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void setListener(android.content.pm.RegisteredServicesCacheListener, android.os.Handler)
    {
        android.content.pm.RegisteredServicesCache r0;
        android.os.Handler r1, $r2, r7;
        android.content.Context $r3;
        android.os.Looper $r4;
        java.lang.Throwable $r5;
        android.content.pm.RegisteredServicesCacheListener r6;

        r0 := @this: android.content.pm.RegisteredServicesCache;

        r6 := @parameter0: android.content.pm.RegisteredServicesCacheListener;

        r1 := @parameter1: android.os.Handler;

        r7 = r1;

        if r1 != null goto label1;

        $r2 = new android.os.Handler;

        $r3 = r0.<android.content.pm.RegisteredServicesCache: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: android.os.Looper getMainLooper()>();

        specialinvoke $r2.<android.os.Handler: void <init>(android.os.Looper)>($r4);

        r7 = $r2;

     label1:
        entermonitor r0;

     label2:
        r0.<android.content.pm.RegisteredServicesCache: android.os.Handler mHandler> = r7;

        r0.<android.content.pm.RegisteredServicesCache: android.content.pm.RegisteredServicesCacheListener mListener> = r6;

        exitmonitor r0;

     label3:
        return;

     label4:
        $r5 := @caughtexception;

     label5:
        exitmonitor r0;

     label6:
        throw $r5;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void updateServices(int)
    {
        android.content.pm.RegisteredServicesCache r0;
        int i0, $i2, $i3, $i4, $i5;
        java.util.Iterator r1;
        android.content.pm.RegisteredServicesCache$ServiceInfo r2;
        long l1, $l6;
        java.util.Map $r3, $r4;
        java.util.Collection $r5;
        boolean $z0;
        int[] $r6;
        java.lang.Object $r7, r16;
        android.content.pm.ComponentInfo $r8, $r10;
        android.content.pm.ApplicationInfo $r9, r21, r22;
        android.content.Context $r11;
        android.content.pm.PackageManager $r12;
        android.util.IntArray $r13, r19, r24;
        byte $b7;
        java.lang.Throwable $r14;
        android.content.pm.PackageManager$NameNotFoundException $r15;
        android.content.pm.RegisteredServicesCache$UserServices r17;
        java.util.ArrayList r18;
        java.lang.String r20;

        r0 := @this: android.content.pm.RegisteredServicesCache;

        i0 := @parameter0: int;

        r16 = r0.<android.content.pm.RegisteredServicesCache: java.lang.Object mServicesLock>;

        entermonitor r16;

     label01:
        r17 = specialinvoke r0.<android.content.pm.RegisteredServicesCache: android.content.pm.RegisteredServicesCache$UserServices findOrCreateUserLocked(int)>(i0);

        $r3 = r17.<android.content.pm.RegisteredServicesCache$UserServices: java.util.Map services>;

        if $r3 != null goto label03;

        exitmonitor r16;

     label02:
        return;

     label03:
        r18 = new java.util.ArrayList;

        $r4 = r17.<android.content.pm.RegisteredServicesCache$UserServices: java.util.Map services>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Collection values()>();

        specialinvoke r18.<java.util.ArrayList: void <init>(java.util.Collection)>($r5);

        exitmonitor r16;

     label04:
        r19 = null;

        r1 = interfaceinvoke r18.<java.util.List: java.util.Iterator iterator()>();

     label05:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label13;

        $r7 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.content.pm.RegisteredServicesCache$ServiceInfo) $r7;

        $r8 = r2.<android.content.pm.RegisteredServicesCache$ServiceInfo: android.content.pm.ComponentInfo componentInfo>;

        $r9 = $r8.<android.content.pm.ComponentInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i3 = $r9.<android.content.pm.ApplicationInfo: int versionCode>;

        l1 = (long) $i3;

        $r10 = r2.<android.content.pm.RegisteredServicesCache$ServiceInfo: android.content.pm.ComponentInfo componentInfo>;

        r20 = $r10.<android.content.pm.ComponentInfo: java.lang.String packageName>;

        r21 = null;

     label06:
        $r11 = r0.<android.content.pm.RegisteredServicesCache: android.content.Context mContext>;

        $r12 = virtualinvoke $r11.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r22 = virtualinvoke $r12.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfoAsUser(java.lang.String,int,int)>(r20, 0, i0);

     label07:
        r21 = r22;

        goto label09;

     label08:
        $r15 := @caughtexception;

     label09:
        if r21 == null goto label10;

        r24 = r19;

        $i5 = r21.<android.content.pm.ApplicationInfo: int versionCode>;

        $l6 = (long) $i5;

        $b7 = $l6 cmp l1;

        if $b7 == 0 goto label12;

     label10:
        r24 = r19;

        if r19 != null goto label11;

        $r13 = new android.util.IntArray;

        specialinvoke $r13.<android.util.IntArray: void <init>()>();

        r24 = $r13;

     label11:
        $i4 = r2.<android.content.pm.RegisteredServicesCache$ServiceInfo: int uid>;

        virtualinvoke r24.<android.util.IntArray: void add(int)>($i4);

     label12:
        r19 = r24;

        goto label05;

     label13:
        if r19 == null goto label14;

        $i2 = virtualinvoke r19.<android.util.IntArray: int size()>();

        if $i2 <= 0 goto label14;

        $r6 = virtualinvoke r19.<android.util.IntArray: int[] toArray()>();

        specialinvoke r0.<android.content.pm.RegisteredServicesCache: void generateServicesMap(int[],int)>($r6, i0);

     label14:
        return;

     label15:
        $r14 := @caughtexception;

     label16:
        exitmonitor r16;

     label17:
        throw $r14;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch android.content.pm.PackageManager$NameNotFoundException from label06 to label07 with label08;
        catch java.lang.Throwable from label16 to label17 with label15;
    }

    public static void <clinit>()
    {
        <android.content.pm.RegisteredServicesCache: java.lang.String TAG> = "PackageManager";

        <android.content.pm.RegisteredServicesCache: java.lang.String REGISTERED_SERVICES_DIR> = "registered_services";

        <android.content.pm.RegisteredServicesCache: boolean DEBUG> = 0;

        return;
    }
}
