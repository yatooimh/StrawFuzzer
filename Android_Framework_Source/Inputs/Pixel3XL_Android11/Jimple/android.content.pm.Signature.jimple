public class android.content.pm.Signature extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    private java.security.cert.Certificate[] mCertificateChain;
    private int mFlags;
    private int mHashCode;
    private boolean mHaveHashCode;
    private final byte[] mSignature;
    private java.lang.ref.SoftReference mStringRef;

    static void <clinit>()
    {
        android.content.pm.Signature$1 $r0;

        $r0 = new android.content.pm.Signature$1;

        specialinvoke $r0.<android.content.pm.Signature$1: void <init>()>();

        <android.content.pm.Signature: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    public void <init>(android.content.pm.Signature)
    {
        android.content.pm.Signature r0, r1;
        java.security.cert.Certificate[] r2, $r7;
        byte[] $r3, $r5;
        java.lang.Object $r4;
        int $i0, $i1, $i2;
        java.lang.Object[] $r6;

        r0 := @this: android.content.pm.Signature;

        r1 := @parameter0: android.content.pm.Signature;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = r1.<android.content.pm.Signature: byte[] mSignature>;

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.Object clone()>();

        $r5 = (byte[]) $r4;

        r0.<android.content.pm.Signature: byte[] mSignature> = $r5;

        r2 = r1.<android.content.pm.Signature: java.security.cert.Certificate[] mCertificateChain>;

        if r2 == null goto label1;

        $i0 = lengthof r2;

        if $i0 <= 1 goto label1;

        $i1 = lengthof r2;

        $r6 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOfRange(java.lang.Object[],int,int)>(r2, 1, $i1);

        $r7 = (java.security.cert.Certificate[]) $r6;

        r0.<android.content.pm.Signature: java.security.cert.Certificate[] mCertificateChain> = $r7;

     label1:
        $i2 = r1.<android.content.pm.Signature: int mFlags>;

        r0.<android.content.pm.Signature: int mFlags> = $i2;

        return;
    }

    private void <init>(android.os.Parcel)
    {
        android.content.pm.Signature r0;
        android.os.Parcel r1;
        byte[] $r2;

        r0 := @this: android.content.pm.Signature;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = virtualinvoke r1.<android.os.Parcel: byte[] createByteArray()>();

        r0.<android.content.pm.Signature: byte[] mSignature> = $r2;

        return;
    }

    void <init>(android.os.Parcel, android.content.pm.Signature$1)
    {
        android.content.pm.Signature r0;
        android.os.Parcel r1;
        android.content.pm.Signature$1 r2;

        r0 := @this: android.content.pm.Signature;

        r1 := @parameter0: android.os.Parcel;

        r2 := @parameter1: android.content.pm.Signature$1;

        specialinvoke r0.<android.content.pm.Signature: void <init>(android.os.Parcel)>(r1);

        return;
    }

    public void <init>(java.lang.String)
    {
        android.content.pm.Signature r0;
        byte[] r1, r9;
        int i0, i1, $i2, $i3, $i5, $i7, $i8, $i9, i12, i13;
        java.lang.StringBuilder $r2;
        java.lang.IllegalArgumentException $r6;
        java.lang.String $r7, r8;
        byte $b4, $b6, $b10, $b11;

        r0 := @this: android.content.pm.Signature;

        r8 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r1 = virtualinvoke r8.<java.lang.String: byte[] getBytes()>();

        i0 = lengthof r1;

        $i2 = i0 % 2;

        if $i2 != 0 goto label3;

        $i3 = i0 / 2;

        r9 = newarray (byte)[$i3];

        i12 = 0;

        i13 = 0;

     label1:
        if i13 >= i0 goto label2;

        i1 = i13 + 1;

        $b4 = r1[i13];

        $i5 = staticinvoke <android.content.pm.Signature: int parseHexDigit(int)>($b4);

        $i7 = $i5 << 4;

        $b6 = r1[i1];

        $i8 = staticinvoke <android.content.pm.Signature: int parseHexDigit(int)>($b6);

        $i9 = $i7 | $i8;

        $b10 = (byte) $i9;

        $b11 = (byte) $b10;

        r9[i12] = $b11;

        i13 = i1 + 1;

        i12 = i12 + 1;

        goto label1;

     label2:
        r0.<android.content.pm.Signature: byte[] mSignature> = r9;

        return;

     label3:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("text size ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not even");

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r6;
    }

    public void <init>(byte[])
    {
        android.content.pm.Signature r0;
        byte[] r1, $r3;
        java.lang.Object $r2;

        r0 := @this: android.content.pm.Signature;

        r1 := @parameter0: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Object clone()>();

        $r3 = (byte[]) $r2;

        r0.<android.content.pm.Signature: byte[] mSignature> = $r3;

        r0.<android.content.pm.Signature: java.security.cert.Certificate[] mCertificateChain> = null;

        return;
    }

    public void <init>(java.security.cert.Certificate[]) throws java.security.cert.CertificateEncodingException
    {
        android.content.pm.Signature r0;
        java.security.cert.Certificate[] r1, $r5;
        java.security.cert.Certificate $r2;
        byte[] $r3;
        int $i0, $i1;
        java.lang.Object[] $r4;

        r0 := @this: android.content.pm.Signature;

        r1 := @parameter0: java.security.cert.Certificate[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = r1[0];

        $r3 = virtualinvoke $r2.<java.security.cert.Certificate: byte[] getEncoded()>();

        r0.<android.content.pm.Signature: byte[] mSignature> = $r3;

        $i0 = lengthof r1;

        if $i0 <= 1 goto label1;

        $i1 = lengthof r1;

        $r4 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOfRange(java.lang.Object[],int,int)>(r1, 1, $i1);

        $r5 = (java.security.cert.Certificate[]) $r4;

        r0.<android.content.pm.Signature: java.security.cert.Certificate[] mCertificateChain> = $r5;

     label1:
        return;
    }

    public static boolean areEffectiveMatch(android.content.pm.Signature, android.content.pm.Signature) throws java.security.cert.CertificateException
    {
        android.content.pm.Signature r0, r1, $r3, $r4;
        java.security.cert.CertificateFactory r2;
        boolean $z0;

        r0 := @parameter0: android.content.pm.Signature;

        r1 := @parameter1: android.content.pm.Signature;

        r2 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>("X.509");

        $r3 = staticinvoke <android.content.pm.Signature: android.content.pm.Signature bounce(java.security.cert.CertificateFactory,android.content.pm.Signature)>(r2, r0);

        $r4 = staticinvoke <android.content.pm.Signature: android.content.pm.Signature bounce(java.security.cert.CertificateFactory,android.content.pm.Signature)>(r2, r1);

        $z0 = virtualinvoke $r3.<android.content.pm.Signature: boolean equals(java.lang.Object)>($r4);

        return $z0;
    }

    public static boolean areEffectiveMatch(android.content.pm.Signature[], android.content.pm.Signature[]) throws java.security.cert.CertificateException
    {
        android.content.pm.Signature[] r0, r2, r7, r8;
        java.security.cert.CertificateFactory r1;
        int $i0, $i1, $i2, $i3, i4, i5;
        boolean $z0;
        android.content.pm.Signature $r3, $r4, $r5, $r6;

        r7 := @parameter0: android.content.pm.Signature[];

        r0 := @parameter1: android.content.pm.Signature[];

        r1 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>("X.509");

        $i0 = lengthof r7;

        r2 = newarray (android.content.pm.Signature)[$i0];

        i4 = 0;

     label1:
        $i1 = lengthof r7;

        if i4 >= $i1 goto label2;

        $r5 = r7[i4];

        $r6 = staticinvoke <android.content.pm.Signature: android.content.pm.Signature bounce(java.security.cert.CertificateFactory,android.content.pm.Signature)>(r1, $r5);

        r2[i4] = $r6;

        i4 = i4 + 1;

        goto label1;

     label2:
        $i2 = lengthof r0;

        r8 = newarray (android.content.pm.Signature)[$i2];

        i5 = 0;

     label3:
        $i3 = lengthof r0;

        if i5 >= $i3 goto label4;

        $r3 = r0[i5];

        $r4 = staticinvoke <android.content.pm.Signature: android.content.pm.Signature bounce(java.security.cert.CertificateFactory,android.content.pm.Signature)>(r1, $r3);

        r8[i5] = $r4;

        i5 = i5 + 1;

        goto label3;

     label4:
        $z0 = staticinvoke <android.content.pm.Signature: boolean areExactMatch(android.content.pm.Signature[],android.content.pm.Signature[])>(r2, r8);

        return $z0;
    }

    public static boolean areExactMatch(android.content.pm.Signature[], android.content.pm.Signature[])
    {
        android.content.pm.Signature[] r0, r1;
        int $i0, $i1;
        boolean $z0, $z1, z2;

        r0 := @parameter0: android.content.pm.Signature[];

        r1 := @parameter1: android.content.pm.Signature[];

        $i1 = lengthof r0;

        $i0 = lengthof r1;

        if $i1 != $i0 goto label1;

        $z0 = staticinvoke <com.android.internal.util.ArrayUtils: boolean containsAll(java.lang.Object[],java.lang.Object[])>(r0, r1);

        if $z0 == 0 goto label1;

        $z1 = staticinvoke <com.android.internal.util.ArrayUtils: boolean containsAll(java.lang.Object[],java.lang.Object[])>(r1, r0);

        if $z1 == 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;
    }

    public static android.content.pm.Signature bounce(java.security.cert.CertificateFactory, android.content.pm.Signature) throws java.security.cert.CertificateException
    {
        android.content.pm.Signature r0, $r2;
        java.io.ByteArrayInputStream $r3;
        byte[] $r4, $r7, $r8, $r9, $r12, $r15;
        java.security.cert.Certificate $r5;
        java.security.cert.X509Certificate $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.StringBuilder $r10;
        java.security.cert.CertificateException $r17;
        java.lang.String $r18;
        java.security.cert.CertificateFactory r19;

        r19 := @parameter0: java.security.cert.CertificateFactory;

        r0 := @parameter1: android.content.pm.Signature;

        $r2 = new android.content.pm.Signature;

        $r3 = new java.io.ByteArrayInputStream;

        $r4 = r0.<android.content.pm.Signature: byte[] mSignature>;

        specialinvoke $r3.<java.io.ByteArrayInputStream: void <init>(byte[])>($r4);

        $r5 = virtualinvoke r19.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r3);

        $r6 = (java.security.cert.X509Certificate) $r5;

        $r7 = virtualinvoke $r6.<java.security.cert.X509Certificate: byte[] getEncoded()>();

        specialinvoke $r2.<android.content.pm.Signature: void <init>(byte[])>($r7);

        $r8 = $r2.<android.content.pm.Signature: byte[] mSignature>;

        $i1 = lengthof $r8;

        $r9 = r0.<android.content.pm.Signature: byte[] mSignature>;

        $i0 = lengthof $r9;

        $i2 = $i1 - $i0;

        $i3 = staticinvoke <java.lang.Math: int abs(int)>($i2);

        if $i3 > 2 goto label1;

        return $r2;

     label1:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bounced cert length looks fishy; before ");

        $r12 = r0.<android.content.pm.Signature: byte[] mSignature>;

        $i4 = lengthof $r12;

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", after ");

        $r15 = $r2.<android.content.pm.Signature: byte[] mSignature>;

        $i5 = lengthof $r15;

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r17 = new java.security.cert.CertificateException;

        $r18 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.security.cert.CertificateException: void <init>(java.lang.String)>($r18);

        throw $r17;
    }

    private static final int parseHexDigit(int)
    {
        int i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.StringBuilder $r1;
        java.lang.IllegalArgumentException $r5;
        java.lang.String $r6;

        i0 := @parameter0: int;

        if 48 > i0 goto label1;

        if i0 > 57 goto label1;

        $i5 = i0 - 48;

        return $i5;

     label1:
        if 97 > i0 goto label2;

        if i0 > 102 goto label2;

        $i3 = i0 - 97;

        $i4 = $i3 + 10;

        return $i4;

     label2:
        if 65 > i0 goto label3;

        if i0 > 70 goto label3;

        $i1 = i0 - 65;

        $i2 = $i1 + 10;

        return $i2;

     label3:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid character ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in hex string");

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r5;
    }

    public int describeContents()
    {
        android.content.pm.Signature r0;

        r0 := @this: android.content.pm.Signature;

        return 0;
    }

    public boolean equals(java.lang.Object)
    {
        android.content.pm.Signature r0, r5;
        boolean z0, z1;
        byte[] $r1, $r2;
        java.lang.ClassCastException $r3;
        java.lang.Object r4;

        r0 := @this: android.content.pm.Signature;

        r4 := @parameter0: java.lang.Object;

        z1 = 0;

        if r4 == null goto label8;

     label1:
        r5 = (android.content.pm.Signature) r4;

     label2:
        if r0 == r5 goto label5;

     label3:
        $r2 = r0.<android.content.pm.Signature: byte[] mSignature>;

        $r1 = r5.<android.content.pm.Signature: byte[] mSignature>;

        z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r2, $r1);

     label4:
        if z0 == 0 goto label6;

     label5:
        z1 = 1;

     label6:
        return z1;

     label7:
        $r3 := @caughtexception;

        goto label8;

     label8:
        return 0;

        catch java.lang.ClassCastException from label1 to label2 with label7;
        catch java.lang.ClassCastException from label3 to label4 with label7;
    }

    public android.content.pm.Signature[] getChainSignatures() throws java.security.cert.CertificateEncodingException
    {
        android.content.pm.Signature r0, $r3;
        java.security.cert.Certificate[] r1;
        android.content.pm.Signature[] r2, $r6;
        int i0, $i1, $i2, i3, i4;
        java.security.cert.Certificate $r4;
        byte[] $r5;

        r0 := @this: android.content.pm.Signature;

        r1 = r0.<android.content.pm.Signature: java.security.cert.Certificate[] mCertificateChain>;

        i3 = 0;

        if r1 != null goto label1;

        $r6 = newarray (android.content.pm.Signature)[1];

        $r6[0] = r0;

        return $r6;

     label1:
        $i1 = lengthof r1;

        $i2 = $i1 + 1;

        r2 = newarray (android.content.pm.Signature)[$i2];

        r2[0] = r0;

        i4 = 1;

        i0 = lengthof r1;

     label2:
        if i3 >= i0 goto label3;

        $r3 = new android.content.pm.Signature;

        $r4 = r1[i3];

        $r5 = virtualinvoke $r4.<java.security.cert.Certificate: byte[] getEncoded()>();

        specialinvoke $r3.<android.content.pm.Signature: void <init>(byte[])>($r5);

        r2[i4] = $r3;

        i3 = i3 + 1;

        i4 = i4 + 1;

        goto label2;

     label3:
        return r2;
    }

    public int getFlags()
    {
        android.content.pm.Signature r0;
        int $i0;

        r0 := @this: android.content.pm.Signature;

        $i0 = r0.<android.content.pm.Signature: int mFlags>;

        return $i0;
    }

    public java.security.PublicKey getPublicKey() throws java.security.cert.CertificateException
    {
        android.content.pm.Signature r0;
        java.security.cert.CertificateFactory $r1;
        java.io.ByteArrayInputStream $r2;
        byte[] $r3;
        java.security.cert.Certificate $r4;
        java.security.PublicKey $r5;

        r0 := @this: android.content.pm.Signature;

        $r1 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>("X.509");

        $r2 = new java.io.ByteArrayInputStream;

        $r3 = r0.<android.content.pm.Signature: byte[] mSignature>;

        specialinvoke $r2.<java.io.ByteArrayInputStream: void <init>(byte[])>($r3);

        $r4 = virtualinvoke $r1.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r2);

        $r5 = virtualinvoke $r4.<java.security.cert.Certificate: java.security.PublicKey getPublicKey()>();

        return $r5;
    }

    public int hashCode()
    {
        android.content.pm.Signature r0;
        int i0, $i1;
        boolean $z0;
        byte[] $r1;

        r0 := @this: android.content.pm.Signature;

        $z0 = r0.<android.content.pm.Signature: boolean mHaveHashCode>;

        if $z0 == 0 goto label1;

        $i1 = r0.<android.content.pm.Signature: int mHashCode>;

        return $i1;

     label1:
        $r1 = r0.<android.content.pm.Signature: byte[] mSignature>;

        i0 = staticinvoke <java.util.Arrays: int hashCode(byte[])>($r1);

        r0.<android.content.pm.Signature: int mHashCode> = i0;

        r0.<android.content.pm.Signature: boolean mHaveHashCode> = 1;

        return i0;
    }

    public void setFlags(int)
    {
        android.content.pm.Signature r0;
        int i0;

        r0 := @this: android.content.pm.Signature;

        i0 := @parameter0: int;

        r0.<android.content.pm.Signature: int mFlags> = i0;

        return;
    }

    public byte[] toByteArray()
    {
        android.content.pm.Signature r0;
        byte[] r1, r2;
        int $i0, $i1;

        r0 := @this: android.content.pm.Signature;

        r1 = r0.<android.content.pm.Signature: byte[] mSignature>;

        $i0 = lengthof r1;

        r2 = newarray (byte)[$i0];

        $i1 = lengthof r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r2, 0, $i1);

        return r2;
    }

    public char[] toChars()
    {
        android.content.pm.Signature r0;
        char[] $r1;

        r0 := @this: android.content.pm.Signature;

        $r1 = virtualinvoke r0.<android.content.pm.Signature: char[] toChars(char[],int[])>(null, null);

        return $r1;
    }

    public char[] toChars(char[], int[])
    {
        android.content.pm.Signature r0;
        int[] r1;
        byte[] r2;
        int i0, $i5, $i6, $i9, $i10, $i11, $i12, i13, i14, i16, i18;
        byte b1, $b2, b15, b17;
        char $c3, $c4, $c7, $c8;
        char[] r3;

        r0 := @this: android.content.pm.Signature;

        r3 := @parameter0: char[];

        r1 := @parameter1: int[];

        r2 = r0.<android.content.pm.Signature: byte[] mSignature>;

        i0 = lengthof r2;

        i13 = i0 * 2;

        if r3 == null goto label02;

        $i12 = lengthof r3;

        if i13 <= $i12 goto label01;

        goto label02;

     label01:
        goto label03;

     label02:
        r3 = newarray (char)[i13];

     label03:
        i14 = 0;

     label04:
        if i14 >= i0 goto label09;

        b1 = r2[i14];

        $b2 = b1 >> 4;

        b15 = $b2 & 15;

        if b15 < 10 goto label05;

        $i11 = b15 + 97;

        i16 = $i11 - 10;

        goto label06;

     label05:
        i16 = b15 + 48;

     label06:
        $i5 = i14 * 2;

        $c3 = (char) i16;

        $c4 = (char) $c3;

        r3[$i5] = $c4;

        b17 = b1 & 15;

        if b17 < 10 goto label07;

        $i10 = b17 + 97;

        i18 = $i10 - 10;

        goto label08;

     label07:
        i18 = b17 + 48;

     label08:
        $i6 = i14 * 2;

        $i9 = $i6 + 1;

        $c7 = (char) i18;

        $c8 = (char) $c7;

        r3[$i9] = $c8;

        i14 = i14 + 1;

        goto label04;

     label09:
        if r1 == null goto label10;

        r1[0] = i0;

     label10:
        return r3;
    }

    public java.lang.String toCharsString()
    {
        android.content.pm.Signature r0;
        java.lang.Object $r1;
        java.lang.String $r2, r6;
        char[] $r3;
        java.lang.ref.SoftReference $r4, r5;

        r0 := @this: android.content.pm.Signature;

        r5 = r0.<android.content.pm.Signature: java.lang.ref.SoftReference mStringRef>;

        if r5 != null goto label1;

        r6 = null;

        goto label2;

     label1:
        $r1 = virtualinvoke r5.<java.lang.ref.SoftReference: java.lang.Object get()>();

        r6 = (java.lang.String) $r1;

     label2:
        if r6 == null goto label3;

        return r6;

     label3:
        $r2 = new java.lang.String;

        $r3 = virtualinvoke r0.<android.content.pm.Signature: char[] toChars()>();

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r3);

        $r4 = new java.lang.ref.SoftReference;

        specialinvoke $r4.<java.lang.ref.SoftReference: void <init>(java.lang.Object)>($r2);

        r0.<android.content.pm.Signature: java.lang.ref.SoftReference mStringRef> = $r4;

        return $r2;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.content.pm.Signature r0;
        android.os.Parcel r1;
        int i0;
        byte[] $r2;

        r0 := @this: android.content.pm.Signature;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $r2 = r0.<android.content.pm.Signature: byte[] mSignature>;

        virtualinvoke r1.<android.os.Parcel: void writeByteArray(byte[])>($r2);

        return;
    }
}
