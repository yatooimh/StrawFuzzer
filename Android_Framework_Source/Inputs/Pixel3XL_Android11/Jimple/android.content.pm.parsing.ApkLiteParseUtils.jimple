public class android.content.pm.parsing.ApkLiteParseUtils extends java.lang.Object
{
    private static final int DEFAULT_MIN_SDK_VERSION;
    private static final int DEFAULT_TARGET_SDK_VERSION;
    private static final int PARSE_DEFAULT_INSTALL_LOCATION;
    private static final java.lang.String TAG;

    public void <init>()
    {
        android.content.pm.parsing.ApkLiteParseUtils r0;

        r0 := @this: android.content.pm.parsing.ApkLiteParseUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static android.content.pm.parsing.result.ParseResult parseApkLite(android.content.pm.parsing.result.ParseInput, java.io.File, int)
    {
        android.content.pm.parsing.result.ParseInput r0;
        java.io.File r1;
        int i0;
        android.content.pm.parsing.result.ParseResult $r2;

        r0 := @parameter0: android.content.pm.parsing.result.ParseInput;

        r1 := @parameter1: java.io.File;

        i0 := @parameter2: int;

        $r2 = staticinvoke <android.content.pm.parsing.ApkLiteParseUtils: android.content.pm.parsing.result.ParseResult parseApkLiteInner(android.content.pm.parsing.result.ParseInput,java.io.File,java.io.FileDescriptor,java.lang.String,int)>(r0, r1, null, null, i0);

        return $r2;
    }

    public static android.content.pm.parsing.result.ParseResult parseApkLite(android.content.pm.parsing.result.ParseInput, java.io.FileDescriptor, java.lang.String, int)
    {
        android.content.pm.parsing.result.ParseInput r0;
        java.io.FileDescriptor r1;
        java.lang.String r2;
        int i0;
        android.content.pm.parsing.result.ParseResult $r3;

        r0 := @parameter0: android.content.pm.parsing.result.ParseInput;

        r1 := @parameter1: java.io.FileDescriptor;

        r2 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        $r3 = staticinvoke <android.content.pm.parsing.ApkLiteParseUtils: android.content.pm.parsing.result.ParseResult parseApkLiteInner(android.content.pm.parsing.result.ParseInput,java.io.File,java.io.FileDescriptor,java.lang.String,int)>(r0, null, r1, r2, i0);

        return $r3;
    }

    private static android.content.pm.parsing.result.ParseResult parseApkLite(android.content.pm.parsing.result.ParseInput, java.lang.String, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.pm.PackageParser$SigningDetails) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        android.content.pm.parsing.result.ParseInput r0;
        java.lang.String r1, r5, $r11, $r12, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r40, $r41, $r42, $r43, $r44, r48, r49, r51, r52, r53, r54, r55, r58, r59, r60, r61, r62, r63;
        android.util.AttributeSet r2;
        android.content.pm.PackageParser$SigningDetails r3;
        android.util.Pair r4;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, z32, z33, z34, z35, z36, z37, z38, z39, z40, z41, z42, z43, z44, z45, z46, z47, z48, z49, z50;
        java.lang.Object $r6, $r9, $r10;
        int $i0, $i1, $i3, $i4, $i5, $i7, $i8, $i9, $i10, $i11, i12, i13, i14, i16, i17, i18, i20, i21, i22, i23, i24, i25, i26, i28, i29, i30;
        java.util.ArrayList $r7, r50, r57;
        android.content.pm.PackageParser$ApkLite $r8;
        android.content.pm.parsing.result.ParseResult $r13, $r39, $r45, r47;
        java.lang.StringBuilder $r14;
        org.xmlpull.v1.XmlPullParser r46;
        byte b19, b27;
        android.content.pm.VerifierInfo r56;

        r0 := @parameter0: android.content.pm.parsing.result.ParseInput;

        r1 := @parameter1: java.lang.String;

        r46 := @parameter2: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter3: android.util.AttributeSet;

        r3 := @parameter4: android.content.pm.PackageParser$SigningDetails;

        r47 = staticinvoke <android.content.pm.parsing.ApkLiteParseUtils: android.content.pm.parsing.result.ParseResult parsePackageSplitNames(android.content.pm.parsing.result.ParseInput,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>(r0, r46, r2);

        $z1 = interfaceinvoke r47.<android.content.pm.parsing.result.ParseResult: boolean isError()>();

        if $z1 == 0 goto label01;

        $r45 = interfaceinvoke r0.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(android.content.pm.parsing.result.ParseResult)>(r47);

        return $r45;

     label01:
        $r6 = interfaceinvoke r47.<android.content.pm.parsing.result.ParseResult: java.lang.Object getResult()>();

        r4 = (android.util.Pair) $r6;

        i12 = -1;

        i13 = 0;

        i14 = 0;

        i16 = 0;

        z32 = 0;

        z33 = 0;

        z34 = 0;

        z35 = 0;

        r48 = null;

        z36 = 0;

        i17 = 0;

        i18 = 0;

     label02:
        $i0 = interfaceinvoke r2.<android.util.AttributeSet: int getAttributeCount()>();

        if i18 >= $i0 goto label26;

        r49 = interfaceinvoke r2.<android.util.AttributeSet: java.lang.String getAttributeName(int)>(i18);

        $i11 = virtualinvoke r49.<java.lang.String: int hashCode()>();

        lookupswitch($i11)
        {
            case -1250986904: goto label12;
            case -403639534: goto label11;
            case 89284208: goto label10;
            case 138459604: goto label09;
            case 436669454: goto label08;
            case 568084431: goto label07;
            case 688591589: goto label06;
            case 954743298: goto label05;
            case 1566947635: goto label04;
            default: goto label03;
        };

     label03:
        goto label13;

     label04:
        $z23 = virtualinvoke r49.<java.lang.String: boolean equals(java.lang.Object)>("configForSplit");

        if $z23 == 0 goto label03;

        b19 = 6;

        goto label14;

     label05:
        $z24 = virtualinvoke r49.<java.lang.String: boolean equals(java.lang.Object)>("coreApp");

        if $z24 == 0 goto label03;

        b19 = 4;

        goto label14;

     label06:
        $z25 = virtualinvoke r49.<java.lang.String: boolean equals(java.lang.Object)>("versionCode");

        if $z25 == 0 goto label03;

        b19 = 1;

        goto label14;

     label07:
        $z26 = virtualinvoke r49.<java.lang.String: boolean equals(java.lang.Object)>("isSplitRequired");

        if $z26 == 0 goto label03;

        b19 = 8;

        goto label14;

     label08:
        $z27 = virtualinvoke r49.<java.lang.String: boolean equals(java.lang.Object)>("isFeatureSplit");

        if $z27 == 0 goto label03;

        b19 = 7;

        goto label14;

     label09:
        $z28 = virtualinvoke r49.<java.lang.String: boolean equals(java.lang.Object)>("versionCodeMajor");

        if $z28 == 0 goto label03;

        b19 = 2;

        goto label14;

     label10:
        $z29 = virtualinvoke r49.<java.lang.String: boolean equals(java.lang.Object)>("installLocation");

        if $z29 == 0 goto label03;

        b19 = 0;

        goto label14;

     label11:
        $z30 = virtualinvoke r49.<java.lang.String: boolean equals(java.lang.Object)>("isolatedSplits");

        if $z30 == 0 goto label03;

        b19 = 5;

        goto label14;

     label12:
        $z31 = virtualinvoke r49.<java.lang.String: boolean equals(java.lang.Object)>("revisionCode");

        if $z31 == 0 goto label03;

        b19 = 3;

        goto label14;

     label13:
        b19 = -1;

     label14:
        tableswitch(b19)
        {
            case 0: goto label24;
            case 1: goto label23;
            case 2: goto label22;
            case 3: goto label21;
            case 4: goto label20;
            case 5: goto label19;
            case 6: goto label18;
            case 7: goto label17;
            case 8: goto label16;
            default: goto label15;
        };

     label15:
        goto label25;

     label16:
        z35 = interfaceinvoke r2.<android.util.AttributeSet: boolean getAttributeBooleanValue(int,boolean)>(i18, 0);

        goto label25;

     label17:
        z34 = interfaceinvoke r2.<android.util.AttributeSet: boolean getAttributeBooleanValue(int,boolean)>(i18, 0);

        goto label25;

     label18:
        r48 = interfaceinvoke r2.<android.util.AttributeSet: java.lang.String getAttributeValue(int)>(i18);

        goto label25;

     label19:
        z33 = interfaceinvoke r2.<android.util.AttributeSet: boolean getAttributeBooleanValue(int,boolean)>(i18, 0);

        goto label25;

     label20:
        z32 = interfaceinvoke r2.<android.util.AttributeSet: boolean getAttributeBooleanValue(int,boolean)>(i18, 0);

        goto label25;

     label21:
        i16 = interfaceinvoke r2.<android.util.AttributeSet: int getAttributeIntValue(int,int)>(i18, 0);

        goto label25;

     label22:
        i14 = interfaceinvoke r2.<android.util.AttributeSet: int getAttributeIntValue(int,int)>(i18, 0);

        goto label25;

     label23:
        i13 = interfaceinvoke r2.<android.util.AttributeSet: int getAttributeIntValue(int,int)>(i18, 0);

        goto label25;

     label24:
        i12 = interfaceinvoke r2.<android.util.AttributeSet: int getAttributeIntValue(int,int)>(i18, -1);

     label25:
        i18 = i18 + 1;

        goto label02;

     label26:
        $i1 = interfaceinvoke r46.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        i20 = $i1 + 1;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r50 = $r7;

        r51 = null;

        r52 = null;

        r53 = null;

        r54 = null;

        z37 = 0;

        z38 = 1;

        z39 = 0;

        z40 = 0;

        z41 = 0;

        z42 = 0;

        i21 = 1;

        i22 = 0;

        i23 = i20;

     label27:
        i24 = interfaceinvoke r46.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i24 == 1 goto label71;

        if i24 != 3 goto label29;

        $i10 = interfaceinvoke r46.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i10 < i23 goto label28;

        goto label29;

     label28:
        goto label71;

     label29:
        if i24 == 3 goto label70;

        if i24 != 4 goto label30;

        goto label70;

     label30:
        $i3 = interfaceinvoke r46.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i3 == i23 goto label31;

        goto label70;

     label31:
        r55 = interfaceinvoke r46.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        i25 = i23;

        $r24 = "package-verifier";

        $z3 = virtualinvoke $r24.<java.lang.String: boolean equals(java.lang.Object)>(r55);

        if $z3 == 0 goto label33;

        r56 = staticinvoke <android.content.pm.parsing.ApkLiteParseUtils: android.content.pm.VerifierInfo parseVerifier(android.util.AttributeSet)>(r2);

        if r56 == null goto label32;

        interfaceinvoke r50.<java.util.List: boolean add(java.lang.Object)>(r56);

        goto label32;

     label32:
        goto label70;

     label33:
        r57 = r50;

        $r25 = "application";

        $r26 = interfaceinvoke r46.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z4 = virtualinvoke $r25.<java.lang.String: boolean equals(java.lang.Object)>($r26);

        if $z4 == 0 goto label50;

        i26 = 0;

        z43 = z41;

     label34:
        $i8 = interfaceinvoke r2.<android.util.AttributeSet: int getAttributeCount()>();

        if i26 >= $i8 goto label49;

        r58 = interfaceinvoke r2.<android.util.AttributeSet: java.lang.String getAttributeName(int)>(i26);

        $i9 = virtualinvoke r58.<java.lang.String: int hashCode()>();

        lookupswitch($i9)
        {
            case -1833406514: goto label40;
            case -1517066970: goto label39;
            case -1207511761: goto label38;
            case -597534042: goto label37;
            case -57729599: goto label36;
            default: goto label35;
        };

     label35:
        goto label41;

     label36:
        $z17 = virtualinvoke r58.<java.lang.String: boolean equals(java.lang.Object)>("use32bitAbi");

        if $z17 == 0 goto label35;

        b27 = 2;

        goto label42;

     label37:
        $z18 = virtualinvoke r58.<java.lang.String: boolean equals(java.lang.Object)>("extractNativeLibs");

        if $z18 == 0 goto label35;

        b27 = 3;

        goto label42;

     label38:
        $z19 = virtualinvoke r58.<java.lang.String: boolean equals(java.lang.Object)>("multiArch");

        if $z19 == 0 goto label35;

        b27 = 1;

        goto label42;

     label39:
        $z20 = virtualinvoke r58.<java.lang.String: boolean equals(java.lang.Object)>("useEmbeddedDex");

        if $z20 == 0 goto label35;

        b27 = 4;

        goto label42;

     label40:
        $z21 = virtualinvoke r58.<java.lang.String: boolean equals(java.lang.Object)>("debuggable");

        if $z21 == 0 goto label35;

        b27 = 0;

        goto label42;

     label41:
        b27 = -1;

     label42:
        if b27 == 0 goto label47;

        if b27 == 1 goto label46;

        if b27 == 2 goto label45;

        if b27 == 3 goto label44;

        if b27 == 4 goto label43;

        z44 = z40;

        z45 = z39;

        z46 = z38;

        z47 = z37;

        goto label48;

     label43:
        z47 = interfaceinvoke r2.<android.util.AttributeSet: boolean getAttributeBooleanValue(int,boolean)>(i26, 0);

        z44 = z40;

        z45 = z39;

        z46 = z38;

        goto label48;

     label44:
        z46 = interfaceinvoke r2.<android.util.AttributeSet: boolean getAttributeBooleanValue(int,boolean)>(i26, 1);

        z44 = z40;

        z45 = z39;

        z47 = z37;

        goto label48;

     label45:
        z45 = interfaceinvoke r2.<android.util.AttributeSet: boolean getAttributeBooleanValue(int,boolean)>(i26, 0);

        z44 = z40;

        z46 = z38;

        z47 = z37;

        goto label48;

     label46:
        z44 = interfaceinvoke r2.<android.util.AttributeSet: boolean getAttributeBooleanValue(int,boolean)>(i26, 0);

        z45 = z39;

        z46 = z38;

        z47 = z37;

        goto label48;

     label47:
        z0 = interfaceinvoke r2.<android.util.AttributeSet: boolean getAttributeBooleanValue(int,boolean)>(i26, 0);

        z42 = z0;

        z44 = z40;

        z45 = z39;

        z46 = z38;

        z47 = z37;

        if z0 == 0 goto label48;

        z43 = 1;

        z47 = z37;

        z46 = z38;

        z45 = z39;

        z44 = z40;

        z42 = z0;

     label48:
        i26 = i26 + 1;

        z40 = z44;

        z39 = z45;

        z38 = z46;

        z37 = z47;

        goto label34;

     label49:
        r50 = r57;

        i23 = i25;

        z41 = z43;

        goto label27;

     label50:
        $r27 = "overlay";

        $r28 = interfaceinvoke r46.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z5 = virtualinvoke $r27.<java.lang.String: boolean equals(java.lang.Object)>($r28);

        if $z5 == 0 goto label58;

        i28 = 0;

        z48 = z36;

     label51:
        $i7 = interfaceinvoke r2.<android.util.AttributeSet: int getAttributeCount()>();

        if i28 >= $i7 goto label57;

        r5 = interfaceinvoke r2.<android.util.AttributeSet: java.lang.String getAttributeName(int)>(i28);

        $r40 = "requiredSystemPropertyName";

        $z12 = virtualinvoke $r40.<java.lang.String: boolean equals(java.lang.Object)>(r5);

        if $z12 == 0 goto label52;

        r59 = interfaceinvoke r2.<android.util.AttributeSet: java.lang.String getAttributeValue(int)>(i28);

        r60 = r51;

        z49 = z48;

        r61 = r53;

        goto label56;

     label52:
        $r41 = "requiredSystemPropertyValue";

        $z13 = virtualinvoke $r41.<java.lang.String: boolean equals(java.lang.Object)>(r5);

        if $z13 == 0 goto label53;

        r61 = interfaceinvoke r2.<android.util.AttributeSet: java.lang.String getAttributeValue(int)>(i28);

        r60 = r51;

        z49 = z48;

        r59 = r52;

        goto label56;

     label53:
        $r42 = "targetPackage";

        $z14 = virtualinvoke $r42.<java.lang.String: boolean equals(java.lang.Object)>(r5);

        if $z14 == 0 goto label54;

        r60 = interfaceinvoke r2.<android.util.AttributeSet: java.lang.String getAttributeValue(int)>(i28);

        z49 = z48;

        r59 = r52;

        r61 = r53;

        goto label56;

     label54:
        $r43 = "isStatic";

        $z15 = virtualinvoke $r43.<java.lang.String: boolean equals(java.lang.Object)>(r5);

        if $z15 == 0 goto label55;

        z49 = interfaceinvoke r2.<android.util.AttributeSet: boolean getAttributeBooleanValue(int,boolean)>(i28, 0);

        r60 = r51;

        r59 = r52;

        r61 = r53;

        goto label56;

     label55:
        r60 = r51;

        z49 = z48;

        r59 = r52;

        r61 = r53;

        $r44 = "priority";

        $z16 = virtualinvoke $r44.<java.lang.String: boolean equals(java.lang.Object)>(r5);

        if $z16 == 0 goto label56;

        i17 = interfaceinvoke r2.<android.util.AttributeSet: int getAttributeIntValue(int,int)>(i28, 0);

        r61 = r53;

        r59 = r52;

        z49 = z48;

        r60 = r51;

     label56:
        i28 = i28 + 1;

        r51 = r60;

        z48 = z49;

        r52 = r59;

        r53 = r61;

        goto label51;

     label57:
        r50 = r57;

        i23 = i25;

        z36 = z48;

        goto label27;

     label58:
        $r29 = "uses-split";

        $r30 = interfaceinvoke r46.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z6 = virtualinvoke $r29.<java.lang.String: boolean equals(java.lang.Object)>($r30);

        if $z6 == 0 goto label61;

        if r54 == null goto label59;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageParsing", "Only one <uses-split> permitted. Ignoring others.");

        goto label70;

     label59:
        r54 = interfaceinvoke r2.<android.util.AttributeSet: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>("http://schemas.android.com/apk/res/android", "name");

        if r54 != null goto label60;

        $r39 = interfaceinvoke r0.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(int,java.lang.String)>(-108, "<uses-split> tag requires \'android:name\' attribute");

        return $r39;

     label60:
        goto label27;

     label61:
        $r31 = "uses-sdk";

        $r32 = interfaceinvoke r46.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z7 = virtualinvoke $r31.<java.lang.String: boolean equals(java.lang.Object)>($r32);

        if $z7 == 0 goto label66;

        i29 = 0;

     label62:
        $i5 = interfaceinvoke r2.<android.util.AttributeSet: int getAttributeCount()>();

        if i29 >= $i5 goto label65;

        r62 = interfaceinvoke r2.<android.util.AttributeSet: java.lang.String getAttributeName(int)>(i29);

        $r37 = "targetSdkVersion";

        $z10 = virtualinvoke $r37.<java.lang.String: boolean equals(java.lang.Object)>(r62);

        if $z10 == 0 goto label63;

        i22 = interfaceinvoke r2.<android.util.AttributeSet: int getAttributeIntValue(int,int)>(i29, 0);

        goto label63;

     label63:
        $r38 = "minSdkVersion";

        $z11 = virtualinvoke $r38.<java.lang.String: boolean equals(java.lang.Object)>(r62);

        if $z11 == 0 goto label64;

        i21 = interfaceinvoke r2.<android.util.AttributeSet: int getAttributeIntValue(int,int)>(i29, 1);

        goto label64;

     label64:
        i29 = i29 + 1;

        goto label62;

     label65:
        r50 = r57;

        i23 = i25;

        goto label27;

     label66:
        $r33 = "profileable";

        $r34 = interfaceinvoke r46.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z8 = virtualinvoke $r33.<java.lang.String: boolean equals(java.lang.Object)>($r34);

        if $z8 == 0 goto label70;

        i30 = 0;

     label67:
        $i4 = interfaceinvoke r2.<android.util.AttributeSet: int getAttributeCount()>();

        if i30 >= $i4 goto label69;

        z50 = z41;

        $r35 = "shell";

        $r36 = interfaceinvoke r2.<android.util.AttributeSet: java.lang.String getAttributeName(int)>(i30);

        $z9 = virtualinvoke $r35.<java.lang.String: boolean equals(java.lang.Object)>($r36);

        if $z9 == 0 goto label68;

        z50 = interfaceinvoke r2.<android.util.AttributeSet: boolean getAttributeBooleanValue(int,boolean)>(i30, z41);

     label68:
        i30 = i30 + 1;

        z41 = z50;

        goto label67;

     label69:
        r50 = r57;

        i23 = i25;

        goto label27;

     label70:
        goto label27;

     label71:
        r63 = r51;

        $z2 = staticinvoke <android.content.pm.PackageParser: boolean checkRequiredSystemProperties(java.lang.String,java.lang.String)>(r52, r53);

        if $z2 != 0 goto label72;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skipping target and overlay pair ");

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r51);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and ");

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": overlay ignored due to required system property: ");

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r52);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with value: ");

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r53);

        $r23 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PackageParsing", $r23);

        r63 = null;

        z36 = 0;

        i17 = 0;

     label72:
        $r8 = new android.content.pm.PackageParser$ApkLite;

        $r9 = r4.<android.util.Pair: java.lang.Object first>;

        $r12 = (java.lang.String) $r9;

        $r10 = r4.<android.util.Pair: java.lang.Object second>;

        $r11 = (java.lang.String) $r10;

        specialinvoke $r8.<android.content.pm.PackageParser$ApkLite: void <init>(java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String,java.lang.String,boolean,int,int,int,int,java.util.List,android.content.pm.PackageParser$SigningDetails,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,java.lang.String,boolean,int,int,int)>(r1, $r12, $r11, z34, r48, r54, z35, i13, i14, i16, i12, r50, r3, z32, z42, z41, z40, z39, z37, z38, z33, r63, z36, i17, i21, i22);

        $r13 = interfaceinvoke r0.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult success(java.lang.Object)>($r8);

        return $r13;
    }

    private static android.content.pm.parsing.result.ParseResult parseApkLiteInner(android.content.pm.parsing.result.ParseInput, java.io.File, java.io.FileDescriptor, java.lang.String, int)
    {
        int i0, $i1, $i2;
        java.lang.String $r0, $r9, r21, r22, $r41, $r43;
        android.content.pm.PackageParser$SigningDetails $r1, r29;
        boolean $z0, z1;
        java.lang.Object $r2;
        java.lang.Throwable $r3, $r5, $r6, $r7, $r8, $r11, $r12, $r13, $r14, $r15, $r16, $r17, r32, r35;
        android.content.pm.parsing.result.ParseInput r18;
        java.io.File r19;
        java.io.FileDescriptor r20;
        android.content.res.XmlResourceParser r23, r26;
        android.content.res.ApkAssets r24, r25, r34;
        android.content.pm.parsing.result.ParseResult r27, r28, r31, r39, r44;
        java.lang.StringBuilder r45, r47, r48;
        java.lang.Exception r49, r50;

        r18 := @parameter0: android.content.pm.parsing.result.ParseInput;

        r19 := @parameter1: java.io.File;

        r20 := @parameter2: java.io.FileDescriptor;

        r21 := @parameter3: java.lang.String;

        i0 := @parameter4: int;

        if r20 == null goto label01;

        r22 = r21;

        goto label02;

     label01:
        r22 = virtualinvoke r19.<java.io.File: java.lang.String getAbsolutePath()>();

     label02:
        z1 = 0;

        if r20 == null goto label05;

        r23 = null;

        r24 = null;

     label03:
        r25 = staticinvoke <android.content.res.ApkAssets: android.content.res.ApkAssets loadFromFd(java.io.FileDescriptor,java.lang.String,int,android.content.res.loader.AssetsProvider)>(r20, r21, 0, null);

     label04:
        goto label07;

     label05:
        r23 = null;

        r24 = null;

     label06:
        r25 = staticinvoke <android.content.res.ApkAssets: android.content.res.ApkAssets loadFromPath(java.lang.String)>(r22);

     label07:
        r26 = virtualinvoke r25.<android.content.res.ApkAssets: android.content.res.XmlResourceParser openXml(java.lang.String)>("AndroidManifest.xml");

     label08:
        $i1 = i0 & 32;

        if $i1 == 0 goto label23;

        $i2 = i0 & 16;

        if $i2 == 0 goto label09;

        z1 = 1;

     label09:
        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(262144L, "collectCertificates");

     label10:
        $r0 = virtualinvoke r19.<java.io.File: java.lang.String getAbsolutePath()>();

        $r1 = <android.content.pm.PackageParser$SigningDetails: android.content.pm.PackageParser$SigningDetails UNKNOWN>;

        r27 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: android.content.pm.parsing.result.ParseResult getSigningDetails(android.content.pm.parsing.result.ParseInput,java.lang.String,boolean,boolean,android.content.pm.PackageParser$SigningDetails,int)>(r18, $r0, z1, 0, $r1, 0);

        $z0 = interfaceinvoke r27.<android.content.pm.parsing.result.ParseResult: boolean isError()>();

        if $z0 == 0 goto label17;

        r28 = interfaceinvoke r18.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(android.content.pm.parsing.result.ParseResult)>(r27);

     label11:
        staticinvoke <android.os.Trace: void traceEnd(long)>(262144L);

     label12:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r26);

        if r25 == null goto label16;

     label13:
        virtualinvoke r25.<android.content.res.ApkAssets: void close()>();

     label14:
        goto label16;

     label15:
        $r6 := @caughtexception;

     label16:
        return r28;

     label17:
        $r2 = interfaceinvoke r27.<android.content.pm.parsing.result.ParseResult: java.lang.Object getResult()>();

        r29 = (android.content.pm.PackageParser$SigningDetails) $r2;

     label18:
        staticinvoke <android.os.Trace: void traceEnd(long)>(262144L);

     label19:
        goto label24;

     label20:
        $r12 := @caughtexception;

     label21:
        staticinvoke <android.os.Trace: void traceEnd(long)>(262144L);

     label22:
        throw $r12;

     label23:
        r29 = <android.content.pm.PackageParser$SigningDetails: android.content.pm.PackageParser$SigningDetails UNKNOWN>;

     label24:
        r31 = staticinvoke <android.content.pm.parsing.ApkLiteParseUtils: android.content.pm.parsing.result.ParseResult parseApkLite(android.content.pm.parsing.result.ParseInput,java.lang.String,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.pm.PackageParser$SigningDetails)>(r18, r22, r26, r26, r29);

     label25:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r26);

        if r25 == null goto label29;

     label26:
        virtualinvoke r25.<android.content.res.ApkAssets: void close()>();

     label27:
        goto label29;

     label28:
        $r14 := @caughtexception;

     label29:
        return r31;

     label30:
        $r5 := @caughtexception;

        r32 = $r5;

        r23 = r26;

        r24 = r25;

        goto label73;

     label31:
        $r13 := @caughtexception;

        r34 = r25;

        r35 = $r13;

        goto label48;

     label32:
        $r17 := @caughtexception;

        r32 = $r17;

        r23 = null;

        r24 = r25;

        goto label73;

     label33:
        $r3 := @caughtexception;

        r34 = r25;

        r35 = $r3;

        r26 = null;

        goto label48;

     label34:
        $r16 := @caughtexception;

        r32 = $r16;

        goto label73;

     label35:
        $r15 := @caughtexception;

        r35 = $r15;

        r26 = null;

        r34 = null;

        goto label48;

     label36:
        $r8 := @caughtexception;

        r23 = null;

        r24 = null;

     label37:
        r45 = new java.lang.StringBuilder;

     label38:
        r23 = null;

        r24 = null;

     label39:
        specialinvoke r45.<java.lang.StringBuilder: void <init>()>();

     label40:
        r23 = null;

        r24 = null;

     label41:
        virtualinvoke r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to parse ");

     label42:
        r23 = null;

        r24 = null;

     label43:
        virtualinvoke r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r22);

     label44:
        r23 = null;

        r24 = null;

     label45:
        $r9 = virtualinvoke r45.<java.lang.StringBuilder: java.lang.String toString()>();

        r49 = (java.lang.Exception) $r8;

        r39 = interfaceinvoke r18.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(int,java.lang.String,java.lang.Exception)>(-100, $r9, r49);

     label46:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(null);

        goto label47;

     label47:
        return r39;

     label48:
        r23 = r26;

        r24 = r34;

     label49:
        r47 = new java.lang.StringBuilder;

     label50:
        r23 = r26;

        r24 = r34;

     label51:
        specialinvoke r47.<java.lang.StringBuilder: void <init>()>();

     label52:
        r23 = r26;

        r24 = r34;

     label53:
        virtualinvoke r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to parse ");

     label54:
        r23 = r26;

        r24 = r34;

     label55:
        virtualinvoke r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r22);

     label56:
        r23 = r26;

        r24 = r34;

     label57:
        $r41 = virtualinvoke r47.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageParsing", $r41, r35);

     label58:
        r23 = r26;

        r24 = r34;

     label59:
        r48 = new java.lang.StringBuilder;

     label60:
        r23 = r26;

        r24 = r34;

     label61:
        specialinvoke r48.<java.lang.StringBuilder: void <init>()>();

     label62:
        r23 = r26;

        r24 = r34;

     label63:
        virtualinvoke r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to parse ");

     label64:
        r23 = r26;

        r24 = r34;

     label65:
        virtualinvoke r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r22);

     label66:
        r23 = r26;

        r24 = r34;

     label67:
        $r43 = virtualinvoke r48.<java.lang.StringBuilder: java.lang.String toString()>();

        r50 = (java.lang.Exception) r35;

        r44 = interfaceinvoke r18.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(int,java.lang.String,java.lang.Exception)>(-102, $r43, r50);

     label68:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r26);

        if r34 == null goto label72;

     label69:
        virtualinvoke r34.<android.content.res.ApkAssets: void close()>();

     label70:
        goto label72;

     label71:
        $r11 := @caughtexception;

     label72:
        return r44;

     label73:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r23);

        if r24 == null goto label77;

     label74:
        virtualinvoke r24.<android.content.res.ApkAssets: void close()>();

     label75:
        goto label77;

     label76:
        $r7 := @caughtexception;

     label77:
        throw r32;

        catch java.io.IOException from label03 to label04 with label36;
        catch org.xmlpull.v1.XmlPullParserException from label03 to label04 with label35;
        catch java.lang.RuntimeException from label03 to label04 with label35;
        catch java.lang.Throwable from label03 to label04 with label34;
        catch java.io.IOException from label06 to label07 with label36;
        catch org.xmlpull.v1.XmlPullParserException from label06 to label07 with label35;
        catch java.lang.RuntimeException from label06 to label07 with label35;
        catch java.lang.Throwable from label06 to label07 with label34;
        catch org.xmlpull.v1.XmlPullParserException from label07 to label08 with label33;
        catch java.io.IOException from label07 to label08 with label33;
        catch java.lang.RuntimeException from label07 to label08 with label33;
        catch java.lang.Throwable from label07 to label08 with label32;
        catch org.xmlpull.v1.XmlPullParserException from label09 to label10 with label31;
        catch java.io.IOException from label09 to label10 with label31;
        catch java.lang.RuntimeException from label09 to label10 with label31;
        catch java.lang.Throwable from label09 to label10 with label30;
        catch java.lang.Throwable from label10 to label11 with label20;
        catch org.xmlpull.v1.XmlPullParserException from label11 to label12 with label31;
        catch java.io.IOException from label11 to label12 with label31;
        catch java.lang.RuntimeException from label11 to label12 with label31;
        catch java.lang.Throwable from label11 to label12 with label30;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label17 to label18 with label20;
        catch org.xmlpull.v1.XmlPullParserException from label18 to label19 with label31;
        catch java.io.IOException from label18 to label19 with label31;
        catch java.lang.RuntimeException from label18 to label19 with label31;
        catch java.lang.Throwable from label18 to label19 with label30;
        catch org.xmlpull.v1.XmlPullParserException from label21 to label22 with label31;
        catch java.io.IOException from label21 to label22 with label31;
        catch java.lang.RuntimeException from label21 to label22 with label31;
        catch java.lang.Throwable from label21 to label22 with label30;
        catch org.xmlpull.v1.XmlPullParserException from label22 to label23 with label31;
        catch java.io.IOException from label22 to label23 with label31;
        catch java.lang.RuntimeException from label22 to label23 with label31;
        catch java.lang.Throwable from label22 to label23 with label30;
        catch org.xmlpull.v1.XmlPullParserException from label23 to label24 with label31;
        catch java.io.IOException from label23 to label24 with label31;
        catch java.lang.RuntimeException from label23 to label24 with label31;
        catch java.lang.Throwable from label23 to label24 with label30;
        catch org.xmlpull.v1.XmlPullParserException from label24 to label25 with label31;
        catch java.io.IOException from label24 to label25 with label31;
        catch java.lang.RuntimeException from label24 to label25 with label31;
        catch java.lang.Throwable from label24 to label25 with label30;
        catch java.lang.Throwable from label26 to label27 with label28;
        catch org.xmlpull.v1.XmlPullParserException from label37 to label38 with label35;
        catch java.io.IOException from label37 to label38 with label35;
        catch java.lang.RuntimeException from label37 to label38 with label35;
        catch java.lang.Throwable from label37 to label38 with label34;
        catch org.xmlpull.v1.XmlPullParserException from label39 to label40 with label35;
        catch java.io.IOException from label39 to label40 with label35;
        catch java.lang.RuntimeException from label39 to label40 with label35;
        catch java.lang.Throwable from label39 to label40 with label34;
        catch org.xmlpull.v1.XmlPullParserException from label41 to label42 with label35;
        catch java.io.IOException from label41 to label42 with label35;
        catch java.lang.RuntimeException from label41 to label42 with label35;
        catch java.lang.Throwable from label41 to label42 with label34;
        catch org.xmlpull.v1.XmlPullParserException from label43 to label44 with label35;
        catch java.io.IOException from label43 to label44 with label35;
        catch java.lang.RuntimeException from label43 to label44 with label35;
        catch java.lang.Throwable from label43 to label44 with label34;
        catch org.xmlpull.v1.XmlPullParserException from label45 to label46 with label35;
        catch java.io.IOException from label45 to label46 with label35;
        catch java.lang.RuntimeException from label45 to label46 with label35;
        catch java.lang.Throwable from label45 to label46 with label34;
        catch java.lang.Throwable from label49 to label50 with label34;
        catch java.lang.Throwable from label51 to label52 with label34;
        catch java.lang.Throwable from label53 to label54 with label34;
        catch java.lang.Throwable from label55 to label56 with label34;
        catch java.lang.Throwable from label57 to label58 with label34;
        catch java.lang.Throwable from label59 to label60 with label34;
        catch java.lang.Throwable from label61 to label62 with label34;
        catch java.lang.Throwable from label63 to label64 with label34;
        catch java.lang.Throwable from label65 to label66 with label34;
        catch java.lang.Throwable from label67 to label68 with label34;
        catch java.lang.Throwable from label69 to label70 with label71;
        catch java.lang.Throwable from label74 to label75 with label76;
    }

    public static android.content.pm.parsing.result.ParseResult parseClusterPackageLite(android.content.pm.parsing.result.ParseInput, java.io.File, int)
    {
        int i0, $i1, $i2, $i3, i4, i5, i6, i7, i8, i9, i10;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        android.content.pm.PackageParser$ApkLite r1, r61, r76;
        java.lang.String[] r2, r3, r70, r72, r73, r77, r78;
        android.util.ArrayMap $r4;
        java.lang.Object $r5, $r13, $r22, $r25;
        android.content.pm.PackageParser$PackageLite $r6;
        java.lang.String $r7, $r12, $r14, $r15, $r16, $r20, $r23, $r24, $r27, $r31, $r38, $r40, $r46, r56, r58;
        android.content.pm.parsing.result.ParseResult $r8, $r21, $r49, $r50, r59, r60, r63, r65, r67;
        java.util.Set $r9;
        java.lang.Object[] $r10;
        java.util.Comparator $r11;
        java.lang.StringBuilder $r17, r62, r64, r66;
        java.io.File $r47, $r48, r54, r57;
        java.lang.Throwable $r51, $r52, r68;
        android.content.pm.parsing.result.ParseInput r53;
        java.io.File[] r55;
        boolean[] r71;
        int[] r74;

        r53 := @parameter0: android.content.pm.parsing.result.ParseInput;

        r54 := @parameter1: java.io.File;

        i4 := @parameter2: int;

        r55 = virtualinvoke r54.<java.io.File: java.io.File[] listFiles()>();

        $z1 = staticinvoke <com.android.internal.util.ArrayUtils: boolean isEmpty(java.lang.Object[])>(r55);

        if $z1 == 0 goto label01;

        $r50 = interfaceinvoke r53.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(int,java.lang.String)>(-100, "No packages found in split");

        return $r50;

     label01:
        i5 = lengthof r55;

        i6 = 0;

        if i5 != 1 goto label02;

        $r47 = r55[0];

        $z5 = virtualinvoke $r47.<java.io.File: boolean isDirectory()>();

        if $z5 == 0 goto label02;

        $r48 = r55[0];

        $r49 = staticinvoke <android.content.pm.parsing.ApkLiteParseUtils: android.content.pm.parsing.result.ParseResult parseClusterPackageLite(android.content.pm.parsing.result.ParseInput,java.io.File,int)>(r53, $r48, i4);

        return $r49;

     label02:
        r56 = null;

        i7 = 0;

        $r4 = new android.util.ArrayMap;

        specialinvoke $r4.<android.util.ArrayMap: void <init>()>();

        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(262144L, "parseApkLite");

     label03:
        i0 = lengthof r55;

     label04:
        if i6 >= i0 goto label23;

        r57 = r55[i6];

        r58 = r56;

        i8 = i7;

     label05:
        $z3 = staticinvoke <android.content.pm.PackageParser: boolean isApkFile(java.io.File)>(r57);

        if $z3 == 0 goto label21;

        r59 = staticinvoke <android.content.pm.parsing.ApkLiteParseUtils: android.content.pm.parsing.result.ParseResult parseApkLite(android.content.pm.parsing.result.ParseInput,java.io.File,int)>(r53, r57, i4);

        $z4 = interfaceinvoke r59.<android.content.pm.parsing.result.ParseResult: boolean isError()>();

        if $z4 == 0 goto label07;

        r60 = interfaceinvoke r53.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(android.content.pm.parsing.result.ParseResult)>(r59);

     label06:
        staticinvoke <android.os.Trace: void traceEnd(long)>(262144L);

        return r60;

     label07:
        $r22 = interfaceinvoke r59.<android.content.pm.parsing.result.ParseResult: java.lang.Object getResult()>();

        r61 = (android.content.pm.PackageParser$ApkLite) $r22;

     label08:
        if r56 != null goto label11;

     label09:
        r56 = r61.<android.content.pm.PackageParser$ApkLite: java.lang.String packageName>;

        i8 = r61.<android.content.pm.PackageParser$ApkLite: int versionCode>;

     label10:
        goto label18;

     label11:
        $r23 = r61.<android.content.pm.PackageParser$ApkLite: java.lang.String packageName>;

        z0 = virtualinvoke r56.<java.lang.String: boolean equals(java.lang.Object)>($r23);

     label12:
        if z0 != 0 goto label15;

     label13:
        r62 = new java.lang.StringBuilder;

        specialinvoke r62.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Inconsistent package ");

        $r40 = r61.<android.content.pm.PackageParser$ApkLite: java.lang.String packageName>;

        virtualinvoke r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        virtualinvoke r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        virtualinvoke r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r57);

        virtualinvoke r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; expected ");

        virtualinvoke r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r56);

        $r46 = virtualinvoke r62.<java.lang.StringBuilder: java.lang.String toString()>();

        r63 = interfaceinvoke r53.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(int,java.lang.String)>(-101, $r46);

     label14:
        staticinvoke <android.os.Trace: void traceEnd(long)>(262144L);

        return r63;

     label15:
        i8 = i7;

     label16:
        $i2 = r61.<android.content.pm.PackageParser$ApkLite: int versionCode>;

        if i7 == $i2 goto label18;

        r64 = new java.lang.StringBuilder;

        specialinvoke r64.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Inconsistent version ");

        $i3 = r61.<android.content.pm.PackageParser$ApkLite: int versionCode>;

        virtualinvoke r64.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        virtualinvoke r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        virtualinvoke r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r57);

        virtualinvoke r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; expected ");

        virtualinvoke r64.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i7);

        $r38 = virtualinvoke r64.<java.lang.StringBuilder: java.lang.String toString()>();

        r65 = interfaceinvoke r53.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(int,java.lang.String)>(-101, $r38);

     label17:
        staticinvoke <android.os.Trace: void traceEnd(long)>(262144L);

        return r65;

     label18:
        r58 = r56;

     label19:
        $r24 = r61.<android.content.pm.PackageParser$ApkLite: java.lang.String splitName>;

        $r25 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r24, r61);

        if $r25 == null goto label21;

        r66 = new java.lang.StringBuilder;

        specialinvoke r66.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Split name ");

        $r27 = r61.<android.content.pm.PackageParser$ApkLite: java.lang.String splitName>;

        virtualinvoke r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        virtualinvoke r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" defined more than once; most recent was ");

        virtualinvoke r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r57);

        $r31 = virtualinvoke r66.<java.lang.StringBuilder: java.lang.String toString()>();

        r67 = interfaceinvoke r53.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(int,java.lang.String)>(-101, $r31);

     label20:
        staticinvoke <android.os.Trace: void traceEnd(long)>(262144L);

        return r67;

     label21:
        i6 = i6 + 1;

        r56 = r58;

        i7 = i8;

        goto label04;

     label22:
        $r52 := @caughtexception;

        r68 = $r52;

        goto label30;

     label23:
        staticinvoke <android.os.Trace: void traceEnd(long)>(262144L);

        $r5 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(null);

        r1 = (android.content.pm.PackageParser$ApkLite) $r5;

        if r1 != null goto label24;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Missing base APK in ");

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r54);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        $r21 = interfaceinvoke r53.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(int,java.lang.String)>(-101, $r20);

        return $r21;

     label24:
        i9 = virtualinvoke $r4.<android.util.ArrayMap: int size()>();

        r70 = null;

        r71 = null;

        if i9 <= 0 goto label27;

        r72 = newarray (java.lang.String)[i9];

        r71 = newarray (boolean)[i9];

        r2 = newarray (java.lang.String)[i9];

        r73 = newarray (java.lang.String)[i9];

        r3 = newarray (java.lang.String)[i9];

        r74 = newarray (int)[i9];

        $r9 = virtualinvoke $r4.<android.util.ArrayMap: java.util.Set keySet()>();

        $r10 = interfaceinvoke $r9.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>(r72);

        r70 = (java.lang.String[]) $r10;

        $r11 = <android.content.pm.PackageParser: java.util.Comparator sSplitNameComparator>;

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>(r70, $r11);

        i10 = 0;

     label25:
        if i10 >= i9 goto label26;

        $r12 = r70[i10];

        $r13 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r12);

        r76 = (android.content.pm.PackageParser$ApkLite) $r13;

        $r14 = r76.<android.content.pm.PackageParser$ApkLite: java.lang.String usesSplitName>;

        r2[i10] = $r14;

        $z2 = r76.<android.content.pm.PackageParser$ApkLite: boolean isFeatureSplit>;

        r71[i10] = $z2;

        $r15 = r76.<android.content.pm.PackageParser$ApkLite: java.lang.String configForSplit>;

        r73[i10] = $r15;

        $r16 = r76.<android.content.pm.PackageParser$ApkLite: java.lang.String codePath>;

        r3[i10] = $r16;

        $i1 = r76.<android.content.pm.PackageParser$ApkLite: int revisionCode>;

        r74[i10] = $i1;

        i10 = i10 + 1;

        goto label25;

     label26:
        r77 = r2;

        r78 = r3;

        goto label28;

     label27:
        r77 = null;

        r73 = null;

        r78 = null;

        r74 = null;

     label28:
        $r6 = new android.content.pm.PackageParser$PackageLite;

        $r7 = virtualinvoke r54.<java.io.File: java.lang.String getAbsolutePath()>();

        specialinvoke $r6.<android.content.pm.PackageParser$PackageLite: void <init>(java.lang.String,android.content.pm.PackageParser$ApkLite,java.lang.String[],boolean[],java.lang.String[],java.lang.String[],java.lang.String[],int[])>($r7, r1, r70, r71, r77, r73, r78, r74);

        $r8 = interfaceinvoke r53.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult success(java.lang.Object)>($r6);

        return $r8;

     label29:
        $r51 := @caughtexception;

        r68 = $r51;

     label30:
        staticinvoke <android.os.Trace: void traceEnd(long)>(262144L);

        throw r68;

        catch java.lang.Throwable from label03 to label04 with label29;
        catch java.lang.Throwable from label05 to label06 with label22;
        catch java.lang.Throwable from label07 to label08 with label22;
        catch java.lang.Throwable from label09 to label10 with label22;
        catch java.lang.Throwable from label11 to label12 with label22;
        catch java.lang.Throwable from label13 to label14 with label22;
        catch java.lang.Throwable from label16 to label17 with label22;
        catch java.lang.Throwable from label19 to label20 with label22;
    }

    public static android.content.pm.parsing.result.ParseResult parseMonolithicPackageLite(android.content.pm.parsing.result.ParseInput, java.io.File, int)
    {
        int i0;
        java.lang.String r0;
        boolean $z0;
        java.lang.Object $r1;
        java.lang.Throwable $r2;
        android.content.pm.parsing.result.ParseInput r3;
        java.io.File r4;
        android.content.pm.parsing.result.ParseResult r5, r6, r9;
        android.content.pm.PackageParser$ApkLite r7;
        android.content.pm.PackageParser$PackageLite r8;

        r3 := @parameter0: android.content.pm.parsing.result.ParseInput;

        r4 := @parameter1: java.io.File;

        i0 := @parameter2: int;

        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(262144L, "parseApkLite");

     label1:
        r5 = staticinvoke <android.content.pm.parsing.ApkLiteParseUtils: android.content.pm.parsing.result.ParseResult parseApkLite(android.content.pm.parsing.result.ParseInput,java.io.File,int)>(r3, r4, i0);

        $z0 = interfaceinvoke r5.<android.content.pm.parsing.result.ParseResult: boolean isError()>();

        if $z0 == 0 goto label3;

        r6 = interfaceinvoke r3.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(android.content.pm.parsing.result.ParseResult)>(r5);

     label2:
        staticinvoke <android.os.Trace: void traceEnd(long)>(262144L);

        return r6;

     label3:
        $r1 = interfaceinvoke r5.<android.content.pm.parsing.result.ParseResult: java.lang.Object getResult()>();

        r7 = (android.content.pm.PackageParser$ApkLite) $r1;

        r0 = virtualinvoke r4.<java.io.File: java.lang.String getAbsolutePath()>();

        r8 = new android.content.pm.PackageParser$PackageLite;

        specialinvoke r8.<android.content.pm.PackageParser$PackageLite: void <init>(java.lang.String,android.content.pm.PackageParser$ApkLite,java.lang.String[],boolean[],java.lang.String[],java.lang.String[],java.lang.String[],int[])>(r0, r7, null, null, null, null, null, null);

        r9 = interfaceinvoke r3.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult success(java.lang.Object)>(r8);

     label4:
        staticinvoke <android.os.Trace: void traceEnd(long)>(262144L);

        return r9;

     label5:
        $r2 := @caughtexception;

        staticinvoke <android.os.Trace: void traceEnd(long)>(262144L);

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public static android.content.pm.parsing.result.ParseResult parsePackageLite(android.content.pm.parsing.result.ParseInput, java.io.File, int)
    {
        android.content.pm.parsing.result.ParseInput r0;
        java.io.File r1;
        int i0;
        boolean $z0;
        android.content.pm.parsing.result.ParseResult $r2, $r3;

        r0 := @parameter0: android.content.pm.parsing.result.ParseInput;

        r1 := @parameter1: java.io.File;

        i0 := @parameter2: int;

        $z0 = virtualinvoke r1.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label1;

        $r3 = staticinvoke <android.content.pm.parsing.ApkLiteParseUtils: android.content.pm.parsing.result.ParseResult parseClusterPackageLite(android.content.pm.parsing.result.ParseInput,java.io.File,int)>(r0, r1, i0);

        return $r3;

     label1:
        $r2 = staticinvoke <android.content.pm.parsing.ApkLiteParseUtils: android.content.pm.parsing.result.ParseResult parseMonolithicPackageLite(android.content.pm.parsing.result.ParseInput,java.io.File,int)>(r0, r1, i0);

        return $r2;
    }

    public static android.content.pm.parsing.result.ParseResult parsePackageSplitNames(android.content.pm.parsing.result.ParseInput, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        android.content.pm.parsing.result.ParseInput r0;
        int i0, $i1;
        java.lang.String r1, r2, $r3, $r4, $r10, $r15, r21, r23, r24, r26;
        boolean $z0, $z1;
        android.util.Pair $r5;
        android.content.pm.parsing.result.ParseResult $r6, $r11, $r16, $r17, $r18;
        java.lang.StringBuilder $r7, $r12;
        org.xmlpull.v1.XmlPullParser r19;
        android.util.AttributeSet r20;

        r0 := @parameter0: android.content.pm.parsing.result.ParseInput;

        r19 := @parameter1: org.xmlpull.v1.XmlPullParser;

        r20 := @parameter2: android.util.AttributeSet;

     label1:
        i0 = interfaceinvoke r19.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i0 == 2 goto label2;

        if i0 == 1 goto label2;

        goto label1;

     label2:
        if i0 == 2 goto label3;

        $r18 = interfaceinvoke r0.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(int,java.lang.String)>(-108, "No start tag found");

        return $r18;

     label3:
        $r3 = interfaceinvoke r19.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("manifest");

        if $z0 != 0 goto label4;

        $r17 = interfaceinvoke r0.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(int,java.lang.String)>(-108, "No <manifest> tag");

        return $r17;

     label4:
        r1 = interfaceinvoke r20.<android.util.AttributeSet: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "package");

        $r4 = "android";

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 != 0 goto label5;

        r21 = staticinvoke <android.content.pm.PackageParser: java.lang.String validateName(java.lang.String,boolean,boolean)>(r1, 1, 1);

        if r21 == null goto label5;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid manifest package: ");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r21);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r16 = interfaceinvoke r0.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(int,java.lang.String)>(-106, $r15);

        return $r16;

     label5:
        r23 = interfaceinvoke r20.<android.util.AttributeSet: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "split");

        r24 = r23;

        if r23 == null goto label7;

        $i1 = virtualinvoke r23.<java.lang.String: int length()>();

        if $i1 != 0 goto label6;

        r24 = null;

        goto label7;

     label6:
        r2 = staticinvoke <android.content.pm.PackageParser: java.lang.String validateName(java.lang.String,boolean,boolean)>(r23, 0, 0);

        r24 = r23;

        if r2 == null goto label7;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid manifest split: ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = interfaceinvoke r0.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(int,java.lang.String)>(-106, $r10);

        return $r11;

     label7:
        r26 = virtualinvoke r1.<java.lang.String: java.lang.String intern()>();

        if r24 == null goto label8;

        r24 = virtualinvoke r24.<java.lang.String: java.lang.String intern()>();

        goto label8;

     label8:
        $r5 = staticinvoke <android.util.Pair: android.util.Pair create(java.lang.Object,java.lang.Object)>(r26, r24);

        $r6 = interfaceinvoke r0.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult success(java.lang.Object)>($r5);

        return $r6;
    }

    public static android.content.pm.VerifierInfo parseVerifier(android.util.AttributeSet)
    {
        int i0, i1, $i3, i5;
        android.content.pm.VerifierInfo $r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r4, r6, r7;
        android.util.AttributeSet r5;
        java.security.PublicKey r8;

        r5 := @parameter0: android.util.AttributeSet;

        r6 = null;

        r7 = null;

        i0 = interfaceinvoke r5.<android.util.AttributeSet: int getAttributeCount()>();

        i5 = 0;

     label1:
        if i5 >= i0 goto label5;

        i1 = interfaceinvoke r5.<android.util.AttributeSet: int getAttributeNameResource(int)>(i5);

        if i1 == 16842755 goto label3;

        if i1 == 16843686 goto label2;

        goto label4;

     label2:
        r7 = interfaceinvoke r5.<android.util.AttributeSet: java.lang.String getAttributeValue(int)>(i5);

        goto label4;

     label3:
        r6 = interfaceinvoke r5.<android.util.AttributeSet: java.lang.String getAttributeValue(int)>(i5);

     label4:
        i5 = i5 + 1;

        goto label1;

     label5:
        if r6 == null goto label8;

        $i3 = virtualinvoke r6.<java.lang.String: int length()>();

        if $i3 != 0 goto label6;

        goto label8;

     label6:
        r8 = staticinvoke <android.content.pm.PackageParser: java.security.PublicKey parsePublicKey(java.lang.String)>(r7);

        if r8 != null goto label7;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to parse verifier public key for ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PackageParsing", $r4);

        return null;

     label7:
        $r0 = new android.content.pm.VerifierInfo;

        specialinvoke $r0.<android.content.pm.VerifierInfo: void <init>(java.lang.String,java.security.PublicKey)>(r6, r8);

        return $r0;

     label8:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PackageParsing", "verifier package name was null; skipping");

        return null;
    }

    public static void <clinit>()
    {
        <android.content.pm.parsing.ApkLiteParseUtils: java.lang.String TAG> = "PackageParsing";

        <android.content.pm.parsing.ApkLiteParseUtils: int PARSE_DEFAULT_INSTALL_LOCATION> = -1;

        <android.content.pm.parsing.ApkLiteParseUtils: int DEFAULT_TARGET_SDK_VERSION> = 0;

        <android.content.pm.parsing.ApkLiteParseUtils: int DEFAULT_MIN_SDK_VERSION> = 1;

        return;
    }
}
