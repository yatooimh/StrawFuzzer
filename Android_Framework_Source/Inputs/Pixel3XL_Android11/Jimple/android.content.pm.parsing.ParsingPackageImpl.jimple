public class android.content.pm.parsing.ParsingPackageImpl extends java.lang.Object implements android.content.pm.parsing.ParsingPackage, android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    private static final java.util.Comparator ORDER_COMPARATOR;
    private static final java.lang.String TAG;
    public static com.android.internal.util.Parcelling$BuiltIn$ForBoolean sForBoolean;
    protected static android.content.pm.parsing.component.ParsedIntentInfo$StringPairListParceler sForIntentInfoPairs;
    public static com.android.internal.util.Parcelling$BuiltIn$ForInternedString sForInternedString;
    public static com.android.internal.util.Parcelling$BuiltIn$ForInternedStringArray sForInternedStringArray;
    public static com.android.internal.util.Parcelling$BuiltIn$ForInternedStringList sForInternedStringList;
    public static com.android.internal.util.Parcelling$BuiltIn$ForInternedStringValueMap sForInternedStringValueMap;
    public static com.android.internal.util.Parcelling$BuiltIn$ForStringSet sForStringSet;
    protected java.util.List activities;
    protected java.util.List adoptPermissions;
    private boolean allowAudioPlaybackCapture;
    private boolean allowBackup;
    private boolean allowClearUserData;
    private boolean allowClearUserDataOnFailedRestore;
    private boolean allowNativeHeapPointerTagging;
    private boolean allowTaskReparenting;
    private java.lang.Boolean anyDensity;
    private java.lang.String appComponentFactory;
    private java.util.List attributions;
    private int autoRevokePermissions;
    private java.lang.String backupAgentName;
    private boolean backupInForeground;
    private int banner;
    protected java.lang.String baseCodePath;
    private boolean baseHardwareAccelerated;
    private int baseRevisionCode;
    private boolean cantSaveState;
    private int category;
    private java.lang.String classLoaderName;
    private java.lang.String className;
    protected java.lang.String codePath;
    private int compatibleWidthLimitDp;
    private int compileSdkVersion;
    private java.lang.String compileSdkVersionCodeName;
    private java.util.List configPreferences;
    private boolean crossProfile;
    private boolean debuggable;
    private boolean defaultToDeviceProtectedStorage;
    private int descriptionRes;
    private boolean directBootAware;
    private boolean enabled;
    private boolean externalStorage;
    private boolean extractNativeLibs;
    private java.util.List featureGroups;
    private boolean forceQueryable;
    private int fullBackupContent;
    private boolean fullBackupOnly;
    private boolean game;
    protected int gwpAsanMode;
    private boolean hasCode;
    private boolean hasDomainUrls;
    private boolean hasFragileUserData;
    private int iconRes;
    private java.util.List implicitPermissions;
    private int installLocation;
    protected java.util.List instrumentations;
    private boolean isolatedSplitLoading;
    private java.util.Map keySetMapping;
    private boolean killAfterRestore;
    private int labelRes;
    private boolean largeHeap;
    private int largestWidthLimitDp;
    private java.util.List libraryNames;
    private int logo;
    private java.lang.String manageSpaceActivityName;
    private float maxAspectRatio;
    private android.os.Bundle metaData;
    private android.util.ArraySet mimeGroups;
    private float minAspectRatio;
    private android.util.SparseIntArray minExtensionVersions;
    private int minSdkVersion;
    private boolean multiArch;
    private int networkSecurityConfigRes;
    private java.lang.CharSequence nonLocalizedLabel;
    protected java.util.List originalPackages;
    private boolean overlay;
    private java.lang.String overlayCategory;
    private boolean overlayIsStatic;
    private int overlayPriority;
    private java.lang.String overlayTarget;
    private java.lang.String overlayTargetName;
    private java.util.Map overlayables;
    protected java.lang.String packageName;
    private boolean partiallyDirectBootAware;
    private java.lang.String permission;
    protected java.util.List permissionGroups;
    protected java.util.List permissions;
    private boolean persistent;
    private java.util.List preferredActivityFilters;
    private boolean preserveLegacyExternalStorage;
    private java.lang.String processName;
    private java.util.Map processes;
    private boolean profileableByShell;
    protected java.util.List protectedBroadcasts;
    protected java.util.List providers;
    private java.util.List queriesIntents;
    private java.util.List queriesPackages;
    private java.util.Set queriesProviders;
    private java.lang.String realPackage;
    protected java.util.List receivers;
    private java.util.List reqFeatures;
    private boolean requestLegacyExternalStorage;
    private java.util.List requestedPermissions;
    private java.lang.String requiredAccountType;
    private boolean requiredForAllUsers;
    private int requiresSmallestWidthDp;
    private java.lang.Boolean resizeable;
    private java.lang.Boolean resizeableActivity;
    private boolean resizeableActivityViaSdkVersion;
    private boolean restoreAnyVersion;
    private byte[] restrictUpdateHash;
    private java.lang.String restrictedAccountType;
    private int roundIconRes;
    protected java.util.List services;
    private java.lang.String sharedUserId;
    private int sharedUserLabel;
    private android.content.pm.PackageParser$SigningDetails signingDetails;
    private java.lang.String[] splitClassLoaderNames;
    protected java.lang.String[] splitCodePaths;
    private android.util.SparseArray splitDependencies;
    private int[] splitFlags;
    private java.lang.String[] splitNames;
    private int[] splitRevisionCodes;
    private java.lang.String staticSharedLibName;
    private long staticSharedLibVersion;
    private boolean staticSharedLibrary;
    private java.lang.Boolean supportsExtraLargeScreens;
    private java.lang.Boolean supportsLargeScreens;
    private java.lang.Boolean supportsNormalScreens;
    private boolean supportsRtl;
    private java.lang.Boolean supportsSmallScreens;
    private int targetSandboxVersion;
    private int targetSdkVersion;
    private java.lang.String taskAffinity;
    private boolean testOnly;
    private int theme;
    private int uiOptions;
    private java.util.Set upgradeKeySets;
    private boolean use32BitAbi;
    private boolean useEmbeddedDex;
    private boolean usesCleartextTraffic;
    protected java.util.List usesLibraries;
    private boolean usesNonSdkApi;
    protected java.util.List usesOptionalLibraries;
    private java.util.List usesStaticLibraries;
    private java.lang.String[][] usesStaticLibrariesCertDigests;
    private long[] usesStaticLibrariesVersions;
    protected int versionCode;
    protected int versionCodeMajor;
    private java.lang.String versionName;
    private boolean visibleToInstantApps;
    private boolean vmSafeMode;
    protected java.lang.String volumeUuid;
    private java.lang.String zygotePreloadName;

    static void <clinit>()
    {
        com.android.internal.util.Parcelling $r0, $r2, $r4, $r6, $r8, $r10, $r12;
        com.android.internal.util.Parcelling$BuiltIn$ForBoolean $r1;
        com.android.internal.util.Parcelling$BuiltIn$ForInternedString $r3;
        com.android.internal.util.Parcelling$BuiltIn$ForInternedStringArray $r5;
        com.android.internal.util.Parcelling$BuiltIn$ForInternedStringList $r7;
        com.android.internal.util.Parcelling$BuiltIn$ForInternedStringValueMap $r9;
        com.android.internal.util.Parcelling$BuiltIn$ForStringSet $r11;
        android.content.pm.parsing.component.ParsedIntentInfo$StringPairListParceler $r13;
        android.content.pm.parsing.'-$$Lambda$ParsingPackageImpl$RBt-Tka1DogaqXftDzlcrLHE70c' $r14;
        android.content.pm.parsing.ParsingPackageImpl$1 r16;
        java.util.Comparator r17;

        <android.content.pm.parsing.ParsingPackageImpl: java.lang.String TAG> = "PackageImpl";

        $r0 = staticinvoke <com.android.internal.util.Parcelling$Cache: com.android.internal.util.Parcelling getOrCreate(java.lang.Class)>(class "Lcom/android/internal/util/Parcelling$BuiltIn$ForBoolean;");

        $r1 = (com.android.internal.util.Parcelling$BuiltIn$ForBoolean) $r0;

        <android.content.pm.parsing.ParsingPackageImpl: com.android.internal.util.Parcelling$BuiltIn$ForBoolean sForBoolean> = $r1;

        $r2 = staticinvoke <com.android.internal.util.Parcelling$Cache: com.android.internal.util.Parcelling getOrCreate(java.lang.Class)>(class "Lcom/android/internal/util/Parcelling$BuiltIn$ForInternedString;");

        $r3 = (com.android.internal.util.Parcelling$BuiltIn$ForInternedString) $r2;

        <android.content.pm.parsing.ParsingPackageImpl: com.android.internal.util.Parcelling$BuiltIn$ForInternedString sForInternedString> = $r3;

        $r4 = staticinvoke <com.android.internal.util.Parcelling$Cache: com.android.internal.util.Parcelling getOrCreate(java.lang.Class)>(class "Lcom/android/internal/util/Parcelling$BuiltIn$ForInternedStringArray;");

        $r5 = (com.android.internal.util.Parcelling$BuiltIn$ForInternedStringArray) $r4;

        <android.content.pm.parsing.ParsingPackageImpl: com.android.internal.util.Parcelling$BuiltIn$ForInternedStringArray sForInternedStringArray> = $r5;

        $r6 = staticinvoke <com.android.internal.util.Parcelling$Cache: com.android.internal.util.Parcelling getOrCreate(java.lang.Class)>(class "Lcom/android/internal/util/Parcelling$BuiltIn$ForInternedStringList;");

        $r7 = (com.android.internal.util.Parcelling$BuiltIn$ForInternedStringList) $r6;

        <android.content.pm.parsing.ParsingPackageImpl: com.android.internal.util.Parcelling$BuiltIn$ForInternedStringList sForInternedStringList> = $r7;

        $r8 = staticinvoke <com.android.internal.util.Parcelling$Cache: com.android.internal.util.Parcelling getOrCreate(java.lang.Class)>(class "Lcom/android/internal/util/Parcelling$BuiltIn$ForInternedStringValueMap;");

        $r9 = (com.android.internal.util.Parcelling$BuiltIn$ForInternedStringValueMap) $r8;

        <android.content.pm.parsing.ParsingPackageImpl: com.android.internal.util.Parcelling$BuiltIn$ForInternedStringValueMap sForInternedStringValueMap> = $r9;

        $r10 = staticinvoke <com.android.internal.util.Parcelling$Cache: com.android.internal.util.Parcelling getOrCreate(java.lang.Class)>(class "Lcom/android/internal/util/Parcelling$BuiltIn$ForStringSet;");

        $r11 = (com.android.internal.util.Parcelling$BuiltIn$ForStringSet) $r10;

        <android.content.pm.parsing.ParsingPackageImpl: com.android.internal.util.Parcelling$BuiltIn$ForStringSet sForStringSet> = $r11;

        $r12 = staticinvoke <com.android.internal.util.Parcelling$Cache: com.android.internal.util.Parcelling getOrCreate(java.lang.Class)>(class "Landroid/content/pm/parsing/component/ParsedIntentInfo$StringPairListParceler;");

        $r13 = (android.content.pm.parsing.component.ParsedIntentInfo$StringPairListParceler) $r12;

        <android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.component.ParsedIntentInfo$StringPairListParceler sForIntentInfoPairs> = $r13;

        $r14 = <android.content.pm.parsing._$$Lambda$ParsingPackageImpl$RBt_Tka1DogaqXftDzlcrLHE70c: android.content.pm.parsing.'-$$Lambda$ParsingPackageImpl$RBt-Tka1DogaqXftDzlcrLHE70c' INSTANCE>;

        r17 = (java.util.Comparator) $r14;

        <android.content.pm.parsing.ParsingPackageImpl: java.util.Comparator ORDER_COMPARATOR> = r17;

        r16 = new android.content.pm.parsing.ParsingPackageImpl$1;

        specialinvoke r16.<android.content.pm.parsing.ParsingPackageImpl$1: void <init>()>();

        <android.content.pm.parsing.ParsingPackageImpl: android.os.Parcelable$Creator CREATOR> = r16;

        return;
    }

    public void <init>(android.os.Parcel)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        android.os.Parcel r1;
        java.lang.ClassLoader r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, i28;
        java.util.Map $r3, $r16, $r27, $r58;
        java.util.List $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r28, $r29, $r62, $r64, $r66, $r68, $r81, $r83, $r85, $r90, $r108, $r119;
        java.util.Set $r15, $r30, $r87;
        java.lang.Class $r31;
        com.android.internal.util.Parcelling$BuiltIn$ForBoolean $r32, $r34, $r36, $r38, $r40, $r42, $r136;
        java.lang.Boolean $r33, $r35, $r37, $r39, $r41, $r43, $r137;
        com.android.internal.util.Parcelling$BuiltIn$ForInternedString $r44, $r47, $r53, $r59, $r70, $r111;
        java.lang.String $r45, $r46, $r48, $r49, $r50, $r51, $r52, $r54, $r55, $r56, $r60, $r71, $r112, $r115, $r120, $r121, $r122, $r123, $r124, $r126, $r127, $r128, $r129;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32, $z33, $z34, $z35, $z36, $z37, $z38, $z39, $z40, $z41, $z42, $z43, $z44;
        com.android.internal.util.Parcelling$BuiltIn$ForInternedStringValueMap $r57;
        long $l6;
        com.android.internal.util.Parcelling$BuiltIn$ForInternedStringList $r61, $r63, $r65, $r67, $r80, $r82, $r84, $r89, $r118;
        long[] $r69;
        android.os.Parcelable$Creator $r72, $r74, $r76, $r91, $r93, $r95, $r97, $r99, $r101, $r103, $r105, $r116;
        java.util.ArrayList $r73, $r75, $r77, $r79, $r92, $r94, $r96, $r98, $r100, $r102, $r104, $r106, $r117;
        byte[] $r78;
        com.android.internal.util.Parcelling$BuiltIn$ForStringSet $r86;
        java.util.HashMap $r88, $r109;
        android.content.pm.parsing.component.ParsedIntentInfo$StringPairListParceler $r107;
        android.os.Bundle $r110;
        android.os.Parcelable $r113;
        android.content.pm.PackageParser$SigningDetails $r114;
        float $f0, $f1;
        java.lang.CharSequence $r125;
        java.lang.String[] $r130, $r131, $r134, $r143;
        android.util.SparseArray $r132;
        int[] $r133, $r135;
        android.util.ArraySet $r138;
        android.util.SparseIntArray $r139;
        java.lang.String[][] $r140, $r142;
        com.android.internal.util.Parcelling$BuiltIn$ForInternedStringArray $r141;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.Map overlayables> = $r3;

        $r4 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List libraryNames> = $r4;

        $r5 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List usesLibraries> = $r5;

        $r6 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List usesOptionalLibraries> = $r6;

        $r7 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List usesStaticLibraries> = $r7;

        $r8 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List configPreferences> = $r8;

        $r9 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List reqFeatures> = $r9;

        $r10 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List featureGroups> = $r10;

        $r11 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List originalPackages> = $r11;

        $r12 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List adoptPermissions> = $r12;

        $r13 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List requestedPermissions> = $r13;

        $r14 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List implicitPermissions> = $r14;

        $r15 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.Set upgradeKeySets> = $r15;

        $r16 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.Map keySetMapping> = $r16;

        $r17 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List protectedBroadcasts> = $r17;

        $r18 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List activities> = $r18;

        $r19 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List receivers> = $r19;

        $r20 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List services> = $r20;

        $r21 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List providers> = $r21;

        $r22 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List attributions> = $r22;

        $r23 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List permissions> = $r23;

        $r24 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List permissionGroups> = $r24;

        $r25 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List instrumentations> = $r25;

        $r26 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List preferredActivityFilters> = $r26;

        $r27 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.Map processes> = $r27;

        $r28 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List queriesIntents> = $r28;

        $r29 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List queriesPackages> = $r29;

        $r30 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.Set queriesProviders> = $r30;

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean enabled> = 1;

        r0.<android.content.pm.parsing.ParsingPackageImpl: int installLocation> = -1;

        $r31 = class "Ljava/lang/Object;";

        r2 = virtualinvoke $r31.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r32 = <android.content.pm.parsing.ParsingPackageImpl: com.android.internal.util.Parcelling$BuiltIn$ForBoolean sForBoolean>;

        $r33 = virtualinvoke $r32.<com.android.internal.util.Parcelling$BuiltIn$ForBoolean: java.lang.Boolean unparcel(android.os.Parcel)>(r1);

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.Boolean supportsSmallScreens> = $r33;

        $r34 = <android.content.pm.parsing.ParsingPackageImpl: com.android.internal.util.Parcelling$BuiltIn$ForBoolean sForBoolean>;

        $r35 = virtualinvoke $r34.<com.android.internal.util.Parcelling$BuiltIn$ForBoolean: java.lang.Boolean unparcel(android.os.Parcel)>(r1);

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.Boolean supportsNormalScreens> = $r35;

        $r36 = <android.content.pm.parsing.ParsingPackageImpl: com.android.internal.util.Parcelling$BuiltIn$ForBoolean sForBoolean>;

        $r37 = virtualinvoke $r36.<com.android.internal.util.Parcelling$BuiltIn$ForBoolean: java.lang.Boolean unparcel(android.os.Parcel)>(r1);

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.Boolean supportsLargeScreens> = $r37;

        $r38 = <android.content.pm.parsing.ParsingPackageImpl: com.android.internal.util.Parcelling$BuiltIn$ForBoolean sForBoolean>;

        $r39 = virtualinvoke $r38.<com.android.internal.util.Parcelling$BuiltIn$ForBoolean: java.lang.Boolean unparcel(android.os.Parcel)>(r1);

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.Boolean supportsExtraLargeScreens> = $r39;

        $r40 = <android.content.pm.parsing.ParsingPackageImpl: com.android.internal.util.Parcelling$BuiltIn$ForBoolean sForBoolean>;

        $r41 = virtualinvoke $r40.<com.android.internal.util.Parcelling$BuiltIn$ForBoolean: java.lang.Boolean unparcel(android.os.Parcel)>(r1);

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.Boolean resizeable> = $r41;

        $r42 = <android.content.pm.parsing.ParsingPackageImpl: com.android.internal.util.Parcelling$BuiltIn$ForBoolean sForBoolean>;

        $r43 = virtualinvoke $r42.<com.android.internal.util.Parcelling$BuiltIn$ForBoolean: java.lang.Boolean unparcel(android.os.Parcel)>(r1);

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.Boolean anyDensity> = $r43;

        $i1 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: int versionCode> = $i1;

        $i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: int versionCodeMajor> = $i2;

        $i3 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: int baseRevisionCode> = $i3;

        $r44 = <android.content.pm.parsing.ParsingPackageImpl: com.android.internal.util.Parcelling$BuiltIn$ForInternedString sForInternedString>;

        $r45 = virtualinvoke $r44.<com.android.internal.util.Parcelling$BuiltIn$ForInternedString: java.lang.String unparcel(android.os.Parcel)>(r1);

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String versionName> = $r45;

        $i4 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: int compileSdkVersion> = $i4;

        $r46 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String compileSdkVersionCodeName> = $r46;

        $r47 = <android.content.pm.parsing.ParsingPackageImpl: com.android.internal.util.Parcelling$BuiltIn$ForInternedString sForInternedString>;

        $r48 = virtualinvoke $r47.<com.android.internal.util.Parcelling$BuiltIn$ForInternedString: java.lang.String unparcel(android.os.Parcel)>(r1);

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String packageName> = $r48;

        $r49 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String realPackage> = $r49;

        $r50 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String baseCodePath> = $r50;

        $z0 = virtualinvoke r1.<android.os.Parcel: boolean readBoolean()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean requiredForAllUsers> = $z0;

        $r51 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String restrictedAccountType> = $r51;

        $r52 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String requiredAccountType> = $r52;

        $r53 = <android.content.pm.parsing.ParsingPackageImpl: com.android.internal.util.Parcelling$BuiltIn$ForInternedString sForInternedString>;

        $r54 = virtualinvoke $r53.<com.android.internal.util.Parcelling$BuiltIn$ForInternedString: java.lang.String unparcel(android.os.Parcel)>(r1);

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String overlayTarget> = $r54;

        $r55 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String overlayTargetName> = $r55;

        $r56 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String overlayCategory> = $r56;

        $i5 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: int overlayPriority> = $i5;

        $z1 = virtualinvoke r1.<android.os.Parcel: boolean readBoolean()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean overlayIsStatic> = $z1;

        $r57 = <android.content.pm.parsing.ParsingPackageImpl: com.android.internal.util.Parcelling$BuiltIn$ForInternedStringValueMap sForInternedStringValueMap>;

        $r58 = virtualinvoke $r57.<com.android.internal.util.Parcelling$BuiltIn$ForInternedStringValueMap: java.util.Map unparcel(android.os.Parcel)>(r1);

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.Map overlayables> = $r58;

        $r59 = <android.content.pm.parsing.ParsingPackageImpl: com.android.internal.util.Parcelling$BuiltIn$ForInternedString sForInternedString>;

        $r60 = virtualinvoke $r59.<com.android.internal.util.Parcelling$BuiltIn$ForInternedString: java.lang.String unparcel(android.os.Parcel)>(r1);

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String staticSharedLibName> = $r60;

        $l6 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: long staticSharedLibVersion> = $l6;

        $r61 = <android.content.pm.parsing.ParsingPackageImpl: com.android.internal.util.Parcelling$BuiltIn$ForInternedStringList sForInternedStringList>;

        $r62 = virtualinvoke $r61.<com.android.internal.util.Parcelling$BuiltIn$ForInternedStringList: java.util.List unparcel(android.os.Parcel)>(r1);

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List libraryNames> = $r62;

        $r63 = <android.content.pm.parsing.ParsingPackageImpl: com.android.internal.util.Parcelling$BuiltIn$ForInternedStringList sForInternedStringList>;

        $r64 = virtualinvoke $r63.<com.android.internal.util.Parcelling$BuiltIn$ForInternedStringList: java.util.List unparcel(android.os.Parcel)>(r1);

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List usesLibraries> = $r64;

        $r65 = <android.content.pm.parsing.ParsingPackageImpl: com.android.internal.util.Parcelling$BuiltIn$ForInternedStringList sForInternedStringList>;

        $r66 = virtualinvoke $r65.<com.android.internal.util.Parcelling$BuiltIn$ForInternedStringList: java.util.List unparcel(android.os.Parcel)>(r1);

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List usesOptionalLibraries> = $r66;

        $r67 = <android.content.pm.parsing.ParsingPackageImpl: com.android.internal.util.Parcelling$BuiltIn$ForInternedStringList sForInternedStringList>;

        $r68 = virtualinvoke $r67.<com.android.internal.util.Parcelling$BuiltIn$ForInternedStringList: java.util.List unparcel(android.os.Parcel)>(r1);

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List usesStaticLibraries> = $r68;

        $r69 = virtualinvoke r1.<android.os.Parcel: long[] createLongArray()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: long[] usesStaticLibrariesVersions> = $r69;

        i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if i0 < 0 goto label2;

        $r140 = newarray (java.lang.String[])[i0];

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String[][] usesStaticLibrariesCertDigests> = $r140;

        i28 = 0;

     label1:
        if i28 >= i0 goto label2;

        $r142 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String[][] usesStaticLibrariesCertDigests>;

        $r141 = <android.content.pm.parsing.ParsingPackageImpl: com.android.internal.util.Parcelling$BuiltIn$ForInternedStringArray sForInternedStringArray>;

        $r143 = virtualinvoke $r141.<com.android.internal.util.Parcelling$BuiltIn$ForInternedStringArray: java.lang.String[] unparcel(android.os.Parcel)>(r1);

        $r142[i28] = $r143;

        i28 = i28 + 1;

        goto label1;

     label2:
        $r70 = <android.content.pm.parsing.ParsingPackageImpl: com.android.internal.util.Parcelling$BuiltIn$ForInternedString sForInternedString>;

        $r71 = virtualinvoke $r70.<com.android.internal.util.Parcelling$BuiltIn$ForInternedString: java.lang.String unparcel(android.os.Parcel)>(r1);

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String sharedUserId> = $r71;

        $i7 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: int sharedUserLabel> = $i7;

        $r72 = <android.content.pm.ConfigurationInfo: android.os.Parcelable$Creator CREATOR>;

        $r73 = virtualinvoke r1.<android.os.Parcel: java.util.ArrayList createTypedArrayList(android.os.Parcelable$Creator)>($r72);

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List configPreferences> = $r73;

        $r74 = <android.content.pm.FeatureInfo: android.os.Parcelable$Creator CREATOR>;

        $r75 = virtualinvoke r1.<android.os.Parcel: java.util.ArrayList createTypedArrayList(android.os.Parcelable$Creator)>($r74);

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List reqFeatures> = $r75;

        $r76 = <android.content.pm.FeatureGroupInfo: android.os.Parcelable$Creator CREATOR>;

        $r77 = virtualinvoke r1.<android.os.Parcel: java.util.ArrayList createTypedArrayList(android.os.Parcelable$Creator)>($r76);

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List featureGroups> = $r77;

        $r78 = virtualinvoke r1.<android.os.Parcel: byte[] createByteArray()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: byte[] restrictUpdateHash> = $r78;

        $r79 = virtualinvoke r1.<android.os.Parcel: java.util.ArrayList createStringArrayList()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List originalPackages> = $r79;

        $r80 = <android.content.pm.parsing.ParsingPackageImpl: com.android.internal.util.Parcelling$BuiltIn$ForInternedStringList sForInternedStringList>;

        $r81 = virtualinvoke $r80.<com.android.internal.util.Parcelling$BuiltIn$ForInternedStringList: java.util.List unparcel(android.os.Parcel)>(r1);

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List adoptPermissions> = $r81;

        $r82 = <android.content.pm.parsing.ParsingPackageImpl: com.android.internal.util.Parcelling$BuiltIn$ForInternedStringList sForInternedStringList>;

        $r83 = virtualinvoke $r82.<com.android.internal.util.Parcelling$BuiltIn$ForInternedStringList: java.util.List unparcel(android.os.Parcel)>(r1);

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List requestedPermissions> = $r83;

        $r84 = <android.content.pm.parsing.ParsingPackageImpl: com.android.internal.util.Parcelling$BuiltIn$ForInternedStringList sForInternedStringList>;

        $r85 = virtualinvoke $r84.<com.android.internal.util.Parcelling$BuiltIn$ForInternedStringList: java.util.List unparcel(android.os.Parcel)>(r1);

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List implicitPermissions> = $r85;

        $r86 = <android.content.pm.parsing.ParsingPackageImpl: com.android.internal.util.Parcelling$BuiltIn$ForStringSet sForStringSet>;

        $r87 = virtualinvoke $r86.<com.android.internal.util.Parcelling$BuiltIn$ForStringSet: java.util.Set unparcel(android.os.Parcel)>(r1);

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.Set upgradeKeySets> = $r87;

        $r88 = virtualinvoke r1.<android.os.Parcel: java.util.HashMap readHashMap(java.lang.ClassLoader)>(r2);

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.Map keySetMapping> = $r88;

        $r89 = <android.content.pm.parsing.ParsingPackageImpl: com.android.internal.util.Parcelling$BuiltIn$ForInternedStringList sForInternedStringList>;

        $r90 = virtualinvoke $r89.<com.android.internal.util.Parcelling$BuiltIn$ForInternedStringList: java.util.List unparcel(android.os.Parcel)>(r1);

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List protectedBroadcasts> = $r90;

        $r91 = <android.content.pm.parsing.component.ParsedActivity: android.os.Parcelable$Creator CREATOR>;

        $r92 = virtualinvoke r1.<android.os.Parcel: java.util.ArrayList createTypedArrayList(android.os.Parcelable$Creator)>($r91);

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List activities> = $r92;

        $r93 = <android.content.pm.parsing.component.ParsedActivity: android.os.Parcelable$Creator CREATOR>;

        $r94 = virtualinvoke r1.<android.os.Parcel: java.util.ArrayList createTypedArrayList(android.os.Parcelable$Creator)>($r93);

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List receivers> = $r94;

        $r95 = <android.content.pm.parsing.component.ParsedService: android.os.Parcelable$Creator CREATOR>;

        $r96 = virtualinvoke r1.<android.os.Parcel: java.util.ArrayList createTypedArrayList(android.os.Parcelable$Creator)>($r95);

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List services> = $r96;

        $r97 = <android.content.pm.parsing.component.ParsedProvider: android.os.Parcelable$Creator CREATOR>;

        $r98 = virtualinvoke r1.<android.os.Parcel: java.util.ArrayList createTypedArrayList(android.os.Parcelable$Creator)>($r97);

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List providers> = $r98;

        $r99 = <android.content.pm.parsing.component.ParsedAttribution: android.os.Parcelable$Creator CREATOR>;

        $r100 = virtualinvoke r1.<android.os.Parcel: java.util.ArrayList createTypedArrayList(android.os.Parcelable$Creator)>($r99);

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List attributions> = $r100;

        $r101 = <android.content.pm.parsing.component.ParsedPermission: android.os.Parcelable$Creator CREATOR>;

        $r102 = virtualinvoke r1.<android.os.Parcel: java.util.ArrayList createTypedArrayList(android.os.Parcelable$Creator)>($r101);

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List permissions> = $r102;

        $r103 = <android.content.pm.parsing.component.ParsedPermissionGroup: android.os.Parcelable$Creator CREATOR>;

        $r104 = virtualinvoke r1.<android.os.Parcel: java.util.ArrayList createTypedArrayList(android.os.Parcelable$Creator)>($r103);

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List permissionGroups> = $r104;

        $r105 = <android.content.pm.parsing.component.ParsedInstrumentation: android.os.Parcelable$Creator CREATOR>;

        $r106 = virtualinvoke r1.<android.os.Parcel: java.util.ArrayList createTypedArrayList(android.os.Parcelable$Creator)>($r105);

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List instrumentations> = $r106;

        $r107 = <android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.component.ParsedIntentInfo$StringPairListParceler sForIntentInfoPairs>;

        $r108 = virtualinvoke $r107.<android.content.pm.parsing.component.ParsedIntentInfo$StringPairListParceler: java.util.List unparcel(android.os.Parcel)>(r1);

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List preferredActivityFilters> = $r108;

        $r109 = virtualinvoke r1.<android.os.Parcel: java.util.HashMap readHashMap(java.lang.ClassLoader)>(r2);

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.Map processes> = $r109;

        $r110 = virtualinvoke r1.<android.os.Parcel: android.os.Bundle readBundle(java.lang.ClassLoader)>(r2);

        r0.<android.content.pm.parsing.ParsingPackageImpl: android.os.Bundle metaData> = $r110;

        $r111 = <android.content.pm.parsing.ParsingPackageImpl: com.android.internal.util.Parcelling$BuiltIn$ForInternedString sForInternedString>;

        $r112 = virtualinvoke $r111.<com.android.internal.util.Parcelling$BuiltIn$ForInternedString: java.lang.String unparcel(android.os.Parcel)>(r1);

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String volumeUuid> = $r112;

        $r113 = virtualinvoke r1.<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)>(r2);

        $r114 = (android.content.pm.PackageParser$SigningDetails) $r113;

        r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.PackageParser$SigningDetails signingDetails> = $r114;

        $r115 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String codePath> = $r115;

        $z2 = virtualinvoke r1.<android.os.Parcel: boolean readBoolean()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean use32BitAbi> = $z2;

        $z3 = virtualinvoke r1.<android.os.Parcel: boolean readBoolean()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean visibleToInstantApps> = $z3;

        $z4 = virtualinvoke r1.<android.os.Parcel: boolean readBoolean()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean forceQueryable> = $z4;

        $r116 = <android.content.Intent: android.os.Parcelable$Creator CREATOR>;

        $r117 = virtualinvoke r1.<android.os.Parcel: java.util.ArrayList createTypedArrayList(android.os.Parcelable$Creator)>($r116);

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List queriesIntents> = $r117;

        $r118 = <android.content.pm.parsing.ParsingPackageImpl: com.android.internal.util.Parcelling$BuiltIn$ForInternedStringList sForInternedStringList>;

        $r119 = virtualinvoke $r118.<com.android.internal.util.Parcelling$BuiltIn$ForInternedStringList: java.util.List unparcel(android.os.Parcel)>(r1);

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List queriesPackages> = $r119;

        $r120 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String appComponentFactory> = $r120;

        $r121 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String backupAgentName> = $r121;

        $i8 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: int banner> = $i8;

        $i9 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: int category> = $i9;

        $r122 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String classLoaderName> = $r122;

        $r123 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String className> = $r123;

        $i10 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: int compatibleWidthLimitDp> = $i10;

        $i11 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: int descriptionRes> = $i11;

        $z5 = virtualinvoke r1.<android.os.Parcel: boolean readBoolean()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean enabled> = $z5;

        $z6 = virtualinvoke r1.<android.os.Parcel: boolean readBoolean()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean crossProfile> = $z6;

        $i12 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: int fullBackupContent> = $i12;

        $i13 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: int iconRes> = $i13;

        $i14 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: int installLocation> = $i14;

        $i15 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: int labelRes> = $i15;

        $i16 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: int largestWidthLimitDp> = $i16;

        $i17 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: int logo> = $i17;

        $r124 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String manageSpaceActivityName> = $r124;

        $f0 = virtualinvoke r1.<android.os.Parcel: float readFloat()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: float maxAspectRatio> = $f0;

        $f1 = virtualinvoke r1.<android.os.Parcel: float readFloat()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: float minAspectRatio> = $f1;

        $i18 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: int minSdkVersion> = $i18;

        $i19 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: int networkSecurityConfigRes> = $i19;

        $r125 = virtualinvoke r1.<android.os.Parcel: java.lang.CharSequence readCharSequence()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.CharSequence nonLocalizedLabel> = $r125;

        $r126 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String permission> = $r126;

        $r127 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String processName> = $r127;

        $i20 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: int requiresSmallestWidthDp> = $i20;

        $i21 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: int roundIconRes> = $i21;

        $i22 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: int targetSandboxVersion> = $i22;

        $i23 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: int targetSdkVersion> = $i23;

        $r128 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String taskAffinity> = $r128;

        $i24 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: int theme> = $i24;

        $i25 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: int uiOptions> = $i25;

        $r129 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String zygotePreloadName> = $r129;

        $r130 = virtualinvoke r1.<android.os.Parcel: java.lang.String[] createStringArray()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String[] splitClassLoaderNames> = $r130;

        $r131 = virtualinvoke r1.<android.os.Parcel: java.lang.String[] createStringArray()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String[] splitCodePaths> = $r131;

        $r132 = virtualinvoke r1.<android.os.Parcel: android.util.SparseArray readSparseArray(java.lang.ClassLoader)>(r2);

        r0.<android.content.pm.parsing.ParsingPackageImpl: android.util.SparseArray splitDependencies> = $r132;

        $r133 = virtualinvoke r1.<android.os.Parcel: int[] createIntArray()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: int[] splitFlags> = $r133;

        $r134 = virtualinvoke r1.<android.os.Parcel: java.lang.String[] createStringArray()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String[] splitNames> = $r134;

        $r135 = virtualinvoke r1.<android.os.Parcel: int[] createIntArray()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: int[] splitRevisionCodes> = $r135;

        $z7 = virtualinvoke r1.<android.os.Parcel: boolean readBoolean()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean externalStorage> = $z7;

        $z8 = virtualinvoke r1.<android.os.Parcel: boolean readBoolean()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean baseHardwareAccelerated> = $z8;

        $z9 = virtualinvoke r1.<android.os.Parcel: boolean readBoolean()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean allowBackup> = $z9;

        $z10 = virtualinvoke r1.<android.os.Parcel: boolean readBoolean()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean killAfterRestore> = $z10;

        $z11 = virtualinvoke r1.<android.os.Parcel: boolean readBoolean()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean restoreAnyVersion> = $z11;

        $z12 = virtualinvoke r1.<android.os.Parcel: boolean readBoolean()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean fullBackupOnly> = $z12;

        $z13 = virtualinvoke r1.<android.os.Parcel: boolean readBoolean()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean persistent> = $z13;

        $z14 = virtualinvoke r1.<android.os.Parcel: boolean readBoolean()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean debuggable> = $z14;

        $z15 = virtualinvoke r1.<android.os.Parcel: boolean readBoolean()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean vmSafeMode> = $z15;

        $z16 = virtualinvoke r1.<android.os.Parcel: boolean readBoolean()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean hasCode> = $z16;

        $z17 = virtualinvoke r1.<android.os.Parcel: boolean readBoolean()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean allowTaskReparenting> = $z17;

        $z18 = virtualinvoke r1.<android.os.Parcel: boolean readBoolean()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean allowClearUserData> = $z18;

        $z19 = virtualinvoke r1.<android.os.Parcel: boolean readBoolean()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean largeHeap> = $z19;

        $z20 = virtualinvoke r1.<android.os.Parcel: boolean readBoolean()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean usesCleartextTraffic> = $z20;

        $z21 = virtualinvoke r1.<android.os.Parcel: boolean readBoolean()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean supportsRtl> = $z21;

        $z22 = virtualinvoke r1.<android.os.Parcel: boolean readBoolean()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean testOnly> = $z22;

        $z23 = virtualinvoke r1.<android.os.Parcel: boolean readBoolean()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean multiArch> = $z23;

        $z24 = virtualinvoke r1.<android.os.Parcel: boolean readBoolean()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean extractNativeLibs> = $z24;

        $z25 = virtualinvoke r1.<android.os.Parcel: boolean readBoolean()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean game> = $z25;

        $r136 = <android.content.pm.parsing.ParsingPackageImpl: com.android.internal.util.Parcelling$BuiltIn$ForBoolean sForBoolean>;

        $r137 = virtualinvoke $r136.<com.android.internal.util.Parcelling$BuiltIn$ForBoolean: java.lang.Boolean unparcel(android.os.Parcel)>(r1);

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.Boolean resizeableActivity> = $r137;

        $z26 = virtualinvoke r1.<android.os.Parcel: boolean readBoolean()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean staticSharedLibrary> = $z26;

        $z27 = virtualinvoke r1.<android.os.Parcel: boolean readBoolean()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean overlay> = $z27;

        $z28 = virtualinvoke r1.<android.os.Parcel: boolean readBoolean()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean isolatedSplitLoading> = $z28;

        $z29 = virtualinvoke r1.<android.os.Parcel: boolean readBoolean()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean hasDomainUrls> = $z29;

        $z30 = virtualinvoke r1.<android.os.Parcel: boolean readBoolean()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean profileableByShell> = $z30;

        $z31 = virtualinvoke r1.<android.os.Parcel: boolean readBoolean()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean backupInForeground> = $z31;

        $z32 = virtualinvoke r1.<android.os.Parcel: boolean readBoolean()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean useEmbeddedDex> = $z32;

        $z33 = virtualinvoke r1.<android.os.Parcel: boolean readBoolean()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean defaultToDeviceProtectedStorage> = $z33;

        $z34 = virtualinvoke r1.<android.os.Parcel: boolean readBoolean()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean directBootAware> = $z34;

        $z35 = virtualinvoke r1.<android.os.Parcel: boolean readBoolean()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean partiallyDirectBootAware> = $z35;

        $z36 = virtualinvoke r1.<android.os.Parcel: boolean readBoolean()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean resizeableActivityViaSdkVersion> = $z36;

        $z37 = virtualinvoke r1.<android.os.Parcel: boolean readBoolean()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean allowClearUserDataOnFailedRestore> = $z37;

        $z38 = virtualinvoke r1.<android.os.Parcel: boolean readBoolean()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean allowAudioPlaybackCapture> = $z38;

        $z39 = virtualinvoke r1.<android.os.Parcel: boolean readBoolean()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean requestLegacyExternalStorage> = $z39;

        $z40 = virtualinvoke r1.<android.os.Parcel: boolean readBoolean()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean usesNonSdkApi> = $z40;

        $z41 = virtualinvoke r1.<android.os.Parcel: boolean readBoolean()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean hasFragileUserData> = $z41;

        $z42 = virtualinvoke r1.<android.os.Parcel: boolean readBoolean()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean cantSaveState> = $z42;

        $z43 = virtualinvoke r1.<android.os.Parcel: boolean readBoolean()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean allowNativeHeapPointerTagging> = $z43;

        $i26 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: int autoRevokePermissions> = $i26;

        $z44 = virtualinvoke r1.<android.os.Parcel: boolean readBoolean()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean preserveLegacyExternalStorage> = $z44;

        $r138 = virtualinvoke r1.<android.os.Parcel: android.util.ArraySet readArraySet(java.lang.ClassLoader)>(r2);

        r0.<android.content.pm.parsing.ParsingPackageImpl: android.util.ArraySet mimeGroups> = $r138;

        $i27 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: int gwpAsanMode> = $i27;

        $r139 = virtualinvoke r1.<android.os.Parcel: android.util.SparseIntArray readSparseIntArray()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: android.util.SparseIntArray minExtensionVersions> = $r139;

        return;
    }

    public void <init>(java.lang.String, java.lang.String, java.lang.String, android.content.res.TypedArray)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.lang.String r1, r2, r3, $r33, $r35, $r38;
        android.content.res.TypedArray r4;
        java.util.Map $r5, $r18, $r29;
        java.util.List $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r30, $r31;
        java.util.Set $r17, $r32;
        int $i0, $i1, $i2, $i3;
        boolean $z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.content.res.TypedArray;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r5 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.Map overlayables> = $r5;

        $r6 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List libraryNames> = $r6;

        $r7 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List usesLibraries> = $r7;

        $r8 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List usesOptionalLibraries> = $r8;

        $r9 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List usesStaticLibraries> = $r9;

        $r10 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List configPreferences> = $r10;

        $r11 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List reqFeatures> = $r11;

        $r12 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List featureGroups> = $r12;

        $r13 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List originalPackages> = $r13;

        $r14 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List adoptPermissions> = $r14;

        $r15 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List requestedPermissions> = $r15;

        $r16 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List implicitPermissions> = $r16;

        $r17 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.Set upgradeKeySets> = $r17;

        $r18 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.Map keySetMapping> = $r18;

        $r19 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List protectedBroadcasts> = $r19;

        $r20 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List activities> = $r20;

        $r21 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List receivers> = $r21;

        $r22 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List services> = $r22;

        $r23 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List providers> = $r23;

        $r24 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List attributions> = $r24;

        $r25 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List permissions> = $r25;

        $r26 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List permissionGroups> = $r26;

        $r27 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List instrumentations> = $r27;

        $r28 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List preferredActivityFilters> = $r28;

        $r29 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.Map processes> = $r29;

        $r30 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List queriesIntents> = $r30;

        $r31 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List queriesPackages> = $r31;

        $r32 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.Set queriesProviders> = $r32;

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean enabled> = 1;

        r0.<android.content.pm.parsing.ParsingPackageImpl: int installLocation> = -1;

        $r33 = staticinvoke <android.text.TextUtils: java.lang.String safeIntern(java.lang.String)>(r1);

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String packageName> = $r33;

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String baseCodePath> = r2;

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String codePath> = r3;

        if r4 == null goto label1;

        $i0 = virtualinvoke r4.<android.content.res.TypedArray: int getInteger(int,int)>(1, 0);

        r0.<android.content.pm.parsing.ParsingPackageImpl: int versionCode> = $i0;

        $i1 = virtualinvoke r4.<android.content.res.TypedArray: int getInteger(int,int)>(11, 0);

        r0.<android.content.pm.parsing.ParsingPackageImpl: int versionCodeMajor> = $i1;

        $i2 = virtualinvoke r4.<android.content.res.TypedArray: int getInteger(int,int)>(5, 0);

        virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setBaseRevisionCode(int)>($i2);

        $r35 = virtualinvoke r4.<android.content.res.TypedArray: java.lang.String getNonConfigurationString(int,int)>(2, 0);

        virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setVersionName(java.lang.String)>($r35);

        $i3 = virtualinvoke r4.<android.content.res.TypedArray: int getInteger(int,int)>(9, 0);

        virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setCompileSdkVersion(int)>($i3);

        $r38 = virtualinvoke r4.<android.content.res.TypedArray: java.lang.String getNonConfigurationString(int,int)>(10, 0);

        virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackage setCompileSdkVersionCodename(java.lang.String)>($r38);

        $z0 = virtualinvoke r4.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(6, 0);

        virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setIsolatedSplitLoading(boolean)>($z0);

     label1:
        return;
    }

    private void addMimeGroupsFromComponent(android.content.pm.parsing.component.ParsedComponent)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        android.content.pm.parsing.component.ParsedComponent r1;
        android.content.IntentFilter r2;
        java.util.List $r3, $r4;
        int $i0, $i1, i2, i3;
        java.lang.Object $r5;
        android.util.ArraySet $r6, $r8;
        java.lang.String $r7;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: android.content.pm.parsing.component.ParsedComponent;

        $r3 = virtualinvoke r1.<android.content.pm.parsing.component.ParsedComponent: java.util.List getIntents()>();

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        i2 = $i0 - 1;

     label1:
        if i2 < 0 goto label4;

        $r4 = virtualinvoke r1.<android.content.pm.parsing.component.ParsedComponent: java.util.List getIntents()>();

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i2);

        r2 = (android.content.IntentFilter) $r5;

        $i1 = virtualinvoke r2.<android.content.IntentFilter: int countMimeGroups()>();

        i3 = $i1 - 1;

     label2:
        if i3 < 0 goto label3;

        $r6 = r0.<android.content.pm.parsing.ParsingPackageImpl: android.util.ArraySet mimeGroups>;

        $r7 = virtualinvoke r2.<android.content.IntentFilter: java.lang.String getMimeGroup(int)>(i3);

        $r8 = staticinvoke <com.android.internal.util.ArrayUtils: android.util.ArraySet add(android.util.ArraySet,java.lang.Object)>($r6, $r7);

        r0.<android.content.pm.parsing.ParsingPackageImpl: android.util.ArraySet mimeGroups> = $r8;

        i3 = i3 + -1;

        goto label2;

     label3:
        i2 = i2 + -1;

        goto label1;

     label4:
        return;
    }

    static int lambda$static$0(android.content.pm.parsing.component.ParsedMainComponent, android.content.pm.parsing.component.ParsedMainComponent)
    {
        android.content.pm.parsing.component.ParsedMainComponent r0, r1;
        int $i0, $i1, $i2;

        r0 := @parameter0: android.content.pm.parsing.component.ParsedMainComponent;

        r1 := @parameter1: android.content.pm.parsing.component.ParsedMainComponent;

        $i0 = virtualinvoke r1.<android.content.pm.parsing.component.ParsedMainComponent: int getOrder()>();

        $i1 = virtualinvoke r0.<android.content.pm.parsing.component.ParsedMainComponent: int getOrder()>();

        $i2 = staticinvoke <java.lang.Integer: int compare(int,int)>($i0, $i1);

        return $i2;
    }

    public volatile android.content.pm.parsing.ParsingPackage addActivity(android.content.pm.parsing.component.ParsedActivity)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r2;
        android.content.pm.parsing.component.ParsedActivity r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: android.content.pm.parsing.component.ParsedActivity;

        $r2 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl addActivity(android.content.pm.parsing.component.ParsedActivity)>(r1);

        return $r2;
    }

    public android.content.pm.parsing.ParsingPackageImpl addActivity(android.content.pm.parsing.component.ParsedActivity)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        android.content.pm.parsing.component.ParsedActivity r1;
        java.util.List $r2, $r3;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: android.content.pm.parsing.component.ParsedActivity;

        $r2 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List activities>;

        $r3 = staticinvoke <com.android.internal.util.CollectionUtils: java.util.List add(java.util.List,java.lang.Object)>($r2, r1);

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List activities> = $r3;

        specialinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: void addMimeGroupsFromComponent(android.content.pm.parsing.component.ParsedComponent)>(r1);

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage addAdoptPermission(java.lang.String)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r2;
        java.lang.String r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl addAdoptPermission(java.lang.String)>(r1);

        return $r2;
    }

    public android.content.pm.parsing.ParsingPackageImpl addAdoptPermission(java.lang.String)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.lang.String r1, $r3;
        java.util.List $r2, $r4;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List adoptPermissions>;

        $r3 = staticinvoke <android.text.TextUtils: java.lang.String safeIntern(java.lang.String)>(r1);

        $r4 = staticinvoke <com.android.internal.util.CollectionUtils: java.util.List add(java.util.List,java.lang.Object)>($r2, $r3);

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List adoptPermissions> = $r4;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage addAttribution(android.content.pm.parsing.component.ParsedAttribution)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r2;
        android.content.pm.parsing.component.ParsedAttribution r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: android.content.pm.parsing.component.ParsedAttribution;

        $r2 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl addAttribution(android.content.pm.parsing.component.ParsedAttribution)>(r1);

        return $r2;
    }

    public android.content.pm.parsing.ParsingPackageImpl addAttribution(android.content.pm.parsing.component.ParsedAttribution)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        android.content.pm.parsing.component.ParsedAttribution r1;
        java.util.List $r2, $r3;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: android.content.pm.parsing.component.ParsedAttribution;

        $r2 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List attributions>;

        $r3 = staticinvoke <com.android.internal.util.CollectionUtils: java.util.List add(java.util.List,java.lang.Object)>($r2, r1);

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List attributions> = $r3;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage addConfigPreference(android.content.pm.ConfigurationInfo)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r2;
        android.content.pm.ConfigurationInfo r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: android.content.pm.ConfigurationInfo;

        $r2 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl addConfigPreference(android.content.pm.ConfigurationInfo)>(r1);

        return $r2;
    }

    public android.content.pm.parsing.ParsingPackageImpl addConfigPreference(android.content.pm.ConfigurationInfo)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        android.content.pm.ConfigurationInfo r1;
        java.util.List $r2, $r3;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: android.content.pm.ConfigurationInfo;

        $r2 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List configPreferences>;

        $r3 = staticinvoke <com.android.internal.util.CollectionUtils: java.util.List add(java.util.List,java.lang.Object)>($r2, r1);

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List configPreferences> = $r3;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage addFeatureGroup(android.content.pm.FeatureGroupInfo)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r2;
        android.content.pm.FeatureGroupInfo r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: android.content.pm.FeatureGroupInfo;

        $r2 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl addFeatureGroup(android.content.pm.FeatureGroupInfo)>(r1);

        return $r2;
    }

    public android.content.pm.parsing.ParsingPackageImpl addFeatureGroup(android.content.pm.FeatureGroupInfo)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        android.content.pm.FeatureGroupInfo r1;
        java.util.List $r2, $r3;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: android.content.pm.FeatureGroupInfo;

        $r2 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List featureGroups>;

        $r3 = staticinvoke <com.android.internal.util.CollectionUtils: java.util.List add(java.util.List,java.lang.Object)>($r2, r1);

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List featureGroups> = $r3;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage addImplicitPermission(java.lang.String)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r2;
        java.lang.String r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl addImplicitPermission(java.lang.String)>(r1);

        return $r2;
    }

    public android.content.pm.parsing.ParsingPackageImpl addImplicitPermission(java.lang.String)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.lang.String r1, $r3;
        java.util.List $r2, $r4;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List implicitPermissions>;

        $r3 = staticinvoke <android.text.TextUtils: java.lang.String safeIntern(java.lang.String)>(r1);

        $r4 = staticinvoke <com.android.internal.util.CollectionUtils: java.util.List add(java.util.List,java.lang.Object)>($r2, $r3);

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List implicitPermissions> = $r4;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage addInstrumentation(android.content.pm.parsing.component.ParsedInstrumentation)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r2;
        android.content.pm.parsing.component.ParsedInstrumentation r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: android.content.pm.parsing.component.ParsedInstrumentation;

        $r2 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl addInstrumentation(android.content.pm.parsing.component.ParsedInstrumentation)>(r1);

        return $r2;
    }

    public android.content.pm.parsing.ParsingPackageImpl addInstrumentation(android.content.pm.parsing.component.ParsedInstrumentation)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        android.content.pm.parsing.component.ParsedInstrumentation r1;
        java.util.List $r2, $r3;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: android.content.pm.parsing.component.ParsedInstrumentation;

        $r2 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List instrumentations>;

        $r3 = staticinvoke <com.android.internal.util.CollectionUtils: java.util.List add(java.util.List,java.lang.Object)>($r2, r1);

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List instrumentations> = $r3;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage addKeySet(java.lang.String, java.security.PublicKey)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r3;
        java.lang.String r1;
        java.security.PublicKey r2;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.security.PublicKey;

        $r3 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl addKeySet(java.lang.String,java.security.PublicKey)>(r1, r2);

        return $r3;
    }

    public android.content.pm.parsing.ParsingPackageImpl addKeySet(java.lang.String, java.security.PublicKey)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.lang.String r1;
        java.security.PublicKey r2;
        android.util.ArraySet r3, $r8, r9;
        java.util.Map $r4, $r6, $r7;
        java.lang.Object $r5;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.security.PublicKey;

        $r4 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.Map keySetMapping>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (android.util.ArraySet) $r5;

        r9 = r3;

        if r3 != null goto label1;

        $r8 = new android.util.ArraySet;

        specialinvoke $r8.<android.util.ArraySet: void <init>()>();

        r9 = $r8;

     label1:
        virtualinvoke r9.<android.util.ArraySet: boolean add(java.lang.Object)>(r2);

        $r6 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.Map keySetMapping>;

        $r7 = staticinvoke <com.android.internal.util.CollectionUtils: java.util.Map add(java.util.Map,java.lang.Object,java.lang.Object)>($r6, r1, r9);

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.Map keySetMapping> = $r7;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage addLibraryName(java.lang.String)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r2;
        java.lang.String r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl addLibraryName(java.lang.String)>(r1);

        return $r2;
    }

    public android.content.pm.parsing.ParsingPackageImpl addLibraryName(java.lang.String)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.lang.String r1, $r3;
        java.util.List $r2, $r4;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List libraryNames>;

        $r3 = staticinvoke <android.text.TextUtils: java.lang.String safeIntern(java.lang.String)>(r1);

        $r4 = staticinvoke <com.android.internal.util.CollectionUtils: java.util.List add(java.util.List,java.lang.Object)>($r2, $r3);

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List libraryNames> = $r4;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage addOriginalPackage(java.lang.String)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r2;
        java.lang.String r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl addOriginalPackage(java.lang.String)>(r1);

        return $r2;
    }

    public android.content.pm.parsing.ParsingPackageImpl addOriginalPackage(java.lang.String)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.lang.String r1;
        java.util.List $r2, $r3;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List originalPackages>;

        $r3 = staticinvoke <com.android.internal.util.CollectionUtils: java.util.List add(java.util.List,java.lang.Object)>($r2, r1);

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List originalPackages> = $r3;

        return r0;
    }

    public android.content.pm.parsing.ParsingPackage addOverlayable(java.lang.String, java.lang.String)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.lang.String r1, r2, $r4;
        java.util.Map $r3, $r5;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.Map overlayables>;

        $r4 = staticinvoke <android.text.TextUtils: java.lang.String safeIntern(java.lang.String)>(r2);

        $r5 = staticinvoke <com.android.internal.util.CollectionUtils: java.util.Map add(java.util.Map,java.lang.Object,java.lang.Object)>($r3, r1, $r4);

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.Map overlayables> = $r5;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage addPermission(android.content.pm.parsing.component.ParsedPermission)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r2;
        android.content.pm.parsing.component.ParsedPermission r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: android.content.pm.parsing.component.ParsedPermission;

        $r2 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl addPermission(android.content.pm.parsing.component.ParsedPermission)>(r1);

        return $r2;
    }

    public android.content.pm.parsing.ParsingPackageImpl addPermission(android.content.pm.parsing.component.ParsedPermission)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        android.content.pm.parsing.component.ParsedPermission r1;
        java.util.List $r2, $r3;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: android.content.pm.parsing.component.ParsedPermission;

        $r2 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List permissions>;

        $r3 = staticinvoke <com.android.internal.util.CollectionUtils: java.util.List add(java.util.List,java.lang.Object)>($r2, r1);

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List permissions> = $r3;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage addPermissionGroup(android.content.pm.parsing.component.ParsedPermissionGroup)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r2;
        android.content.pm.parsing.component.ParsedPermissionGroup r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: android.content.pm.parsing.component.ParsedPermissionGroup;

        $r2 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl addPermissionGroup(android.content.pm.parsing.component.ParsedPermissionGroup)>(r1);

        return $r2;
    }

    public android.content.pm.parsing.ParsingPackageImpl addPermissionGroup(android.content.pm.parsing.component.ParsedPermissionGroup)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        android.content.pm.parsing.component.ParsedPermissionGroup r1;
        java.util.List $r2, $r3;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: android.content.pm.parsing.component.ParsedPermissionGroup;

        $r2 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List permissionGroups>;

        $r3 = staticinvoke <com.android.internal.util.CollectionUtils: java.util.List add(java.util.List,java.lang.Object)>($r2, r1);

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List permissionGroups> = $r3;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage addPreferredActivityFilter(java.lang.String, android.content.pm.parsing.component.ParsedIntentInfo)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r3;
        java.lang.String r1;
        android.content.pm.parsing.component.ParsedIntentInfo r2;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.content.pm.parsing.component.ParsedIntentInfo;

        $r3 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl addPreferredActivityFilter(java.lang.String,android.content.pm.parsing.component.ParsedIntentInfo)>(r1, r2);

        return $r3;
    }

    public android.content.pm.parsing.ParsingPackageImpl addPreferredActivityFilter(java.lang.String, android.content.pm.parsing.component.ParsedIntentInfo)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.lang.String r1;
        android.content.pm.parsing.component.ParsedIntentInfo r2;
        java.util.List $r3, $r5;
        android.util.Pair $r4;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.content.pm.parsing.component.ParsedIntentInfo;

        $r3 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List preferredActivityFilters>;

        $r4 = staticinvoke <android.util.Pair: android.util.Pair create(java.lang.Object,java.lang.Object)>(r1, r2);

        $r5 = staticinvoke <com.android.internal.util.CollectionUtils: java.util.List add(java.util.List,java.lang.Object)>($r3, $r4);

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List preferredActivityFilters> = $r5;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage addProtectedBroadcast(java.lang.String)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r2;
        java.lang.String r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl addProtectedBroadcast(java.lang.String)>(r1);

        return $r2;
    }

    public android.content.pm.parsing.ParsingPackageImpl addProtectedBroadcast(java.lang.String)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.lang.String r1, $r4;
        java.util.List $r2, $r3, $r5;
        boolean $z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List protectedBroadcasts>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean contains(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        $r3 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List protectedBroadcasts>;

        $r4 = staticinvoke <android.text.TextUtils: java.lang.String safeIntern(java.lang.String)>(r1);

        $r5 = staticinvoke <com.android.internal.util.CollectionUtils: java.util.List add(java.util.List,java.lang.Object)>($r3, $r4);

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List protectedBroadcasts> = $r5;

     label1:
        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage addProvider(android.content.pm.parsing.component.ParsedProvider)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r2;
        android.content.pm.parsing.component.ParsedProvider r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: android.content.pm.parsing.component.ParsedProvider;

        $r2 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl addProvider(android.content.pm.parsing.component.ParsedProvider)>(r1);

        return $r2;
    }

    public android.content.pm.parsing.ParsingPackageImpl addProvider(android.content.pm.parsing.component.ParsedProvider)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        android.content.pm.parsing.component.ParsedProvider r1;
        java.util.List $r2, $r3;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: android.content.pm.parsing.component.ParsedProvider;

        $r2 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List providers>;

        $r3 = staticinvoke <com.android.internal.util.CollectionUtils: java.util.List add(java.util.List,java.lang.Object)>($r2, r1);

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List providers> = $r3;

        specialinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: void addMimeGroupsFromComponent(android.content.pm.parsing.component.ParsedComponent)>(r1);

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage addQueriesIntent(android.content.Intent)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r2;
        android.content.Intent r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: android.content.Intent;

        $r2 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl addQueriesIntent(android.content.Intent)>(r1);

        return $r2;
    }

    public android.content.pm.parsing.ParsingPackageImpl addQueriesIntent(android.content.Intent)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        android.content.Intent r1;
        java.util.List $r2, $r3;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: android.content.Intent;

        $r2 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List queriesIntents>;

        $r3 = staticinvoke <com.android.internal.util.CollectionUtils: java.util.List add(java.util.List,java.lang.Object)>($r2, r1);

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List queriesIntents> = $r3;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage addQueriesPackage(java.lang.String)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r2;
        java.lang.String r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl addQueriesPackage(java.lang.String)>(r1);

        return $r2;
    }

    public android.content.pm.parsing.ParsingPackageImpl addQueriesPackage(java.lang.String)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.lang.String r1, $r3;
        java.util.List $r2, $r4;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List queriesPackages>;

        $r3 = staticinvoke <android.text.TextUtils: java.lang.String safeIntern(java.lang.String)>(r1);

        $r4 = staticinvoke <com.android.internal.util.CollectionUtils: java.util.List add(java.util.List,java.lang.Object)>($r2, $r3);

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List queriesPackages> = $r4;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage addQueriesProvider(java.lang.String)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r2;
        java.lang.String r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl addQueriesProvider(java.lang.String)>(r1);

        return $r2;
    }

    public android.content.pm.parsing.ParsingPackageImpl addQueriesProvider(java.lang.String)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.lang.String r1;
        java.util.Set $r2, $r3;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.Set queriesProviders>;

        $r3 = staticinvoke <com.android.internal.util.CollectionUtils: java.util.Set add(java.util.Set,java.lang.Object)>($r2, r1);

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.Set queriesProviders> = $r3;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage addReceiver(android.content.pm.parsing.component.ParsedActivity)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r2;
        android.content.pm.parsing.component.ParsedActivity r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: android.content.pm.parsing.component.ParsedActivity;

        $r2 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl addReceiver(android.content.pm.parsing.component.ParsedActivity)>(r1);

        return $r2;
    }

    public android.content.pm.parsing.ParsingPackageImpl addReceiver(android.content.pm.parsing.component.ParsedActivity)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        android.content.pm.parsing.component.ParsedActivity r1;
        java.util.List $r2, $r3;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: android.content.pm.parsing.component.ParsedActivity;

        $r2 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List receivers>;

        $r3 = staticinvoke <com.android.internal.util.CollectionUtils: java.util.List add(java.util.List,java.lang.Object)>($r2, r1);

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List receivers> = $r3;

        specialinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: void addMimeGroupsFromComponent(android.content.pm.parsing.component.ParsedComponent)>(r1);

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage addReqFeature(android.content.pm.FeatureInfo)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r2;
        android.content.pm.FeatureInfo r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: android.content.pm.FeatureInfo;

        $r2 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl addReqFeature(android.content.pm.FeatureInfo)>(r1);

        return $r2;
    }

    public android.content.pm.parsing.ParsingPackageImpl addReqFeature(android.content.pm.FeatureInfo)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        android.content.pm.FeatureInfo r1;
        java.util.List $r2, $r3;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: android.content.pm.FeatureInfo;

        $r2 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List reqFeatures>;

        $r3 = staticinvoke <com.android.internal.util.CollectionUtils: java.util.List add(java.util.List,java.lang.Object)>($r2, r1);

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List reqFeatures> = $r3;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage addRequestedPermission(java.lang.String)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r2;
        java.lang.String r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl addRequestedPermission(java.lang.String)>(r1);

        return $r2;
    }

    public android.content.pm.parsing.ParsingPackageImpl addRequestedPermission(java.lang.String)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.lang.String r1, $r3;
        java.util.List $r2, $r4;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List requestedPermissions>;

        $r3 = staticinvoke <android.text.TextUtils: java.lang.String safeIntern(java.lang.String)>(r1);

        $r4 = staticinvoke <com.android.internal.util.CollectionUtils: java.util.List add(java.util.List,java.lang.Object)>($r2, $r3);

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List requestedPermissions> = $r4;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage addService(android.content.pm.parsing.component.ParsedService)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r2;
        android.content.pm.parsing.component.ParsedService r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: android.content.pm.parsing.component.ParsedService;

        $r2 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl addService(android.content.pm.parsing.component.ParsedService)>(r1);

        return $r2;
    }

    public android.content.pm.parsing.ParsingPackageImpl addService(android.content.pm.parsing.component.ParsedService)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        android.content.pm.parsing.component.ParsedService r1;
        java.util.List $r2, $r3;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: android.content.pm.parsing.component.ParsedService;

        $r2 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List services>;

        $r3 = staticinvoke <com.android.internal.util.CollectionUtils: java.util.List add(java.util.List,java.lang.Object)>($r2, r1);

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List services> = $r3;

        specialinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: void addMimeGroupsFromComponent(android.content.pm.parsing.component.ParsedComponent)>(r1);

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage addUsesLibrary(java.lang.String)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r2;
        java.lang.String r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl addUsesLibrary(java.lang.String)>(r1);

        return $r2;
    }

    public android.content.pm.parsing.ParsingPackageImpl addUsesLibrary(java.lang.String)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.lang.String r1, $r3;
        java.util.List $r2, $r4;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List usesLibraries>;

        $r3 = staticinvoke <android.text.TextUtils: java.lang.String safeIntern(java.lang.String)>(r1);

        $r4 = staticinvoke <com.android.internal.util.CollectionUtils: java.util.List add(java.util.List,java.lang.Object)>($r2, $r3);

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List usesLibraries> = $r4;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage addUsesOptionalLibrary(java.lang.String)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r2;
        java.lang.String r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl addUsesOptionalLibrary(java.lang.String)>(r1);

        return $r2;
    }

    public android.content.pm.parsing.ParsingPackageImpl addUsesOptionalLibrary(java.lang.String)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.lang.String r1, $r3;
        java.util.List $r2, $r4;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List usesOptionalLibraries>;

        $r3 = staticinvoke <android.text.TextUtils: java.lang.String safeIntern(java.lang.String)>(r1);

        $r4 = staticinvoke <com.android.internal.util.CollectionUtils: java.util.List add(java.util.List,java.lang.Object)>($r2, $r3);

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List usesOptionalLibraries> = $r4;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage addUsesStaticLibrary(java.lang.String)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r2;
        java.lang.String r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl addUsesStaticLibrary(java.lang.String)>(r1);

        return $r2;
    }

    public android.content.pm.parsing.ParsingPackageImpl addUsesStaticLibrary(java.lang.String)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.lang.String r1, $r3;
        java.util.List $r2, $r4;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List usesStaticLibraries>;

        $r3 = staticinvoke <android.text.TextUtils: java.lang.String safeIntern(java.lang.String)>(r1);

        $r4 = staticinvoke <com.android.internal.util.CollectionUtils: java.util.List add(java.util.List,java.lang.Object)>($r2, $r3);

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List usesStaticLibraries> = $r4;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage addUsesStaticLibraryCertDigests(java.lang.String[])
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r2;
        java.lang.String[] r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: java.lang.String[];

        $r2 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl addUsesStaticLibraryCertDigests(java.lang.String[])>(r1);

        return $r2;
    }

    public android.content.pm.parsing.ParsingPackageImpl addUsesStaticLibraryCertDigests(java.lang.String[])
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.lang.String[] r1;
        java.lang.String[][] $r2, $r4;
        java.lang.Object[] $r3;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: java.lang.String[];

        $r2 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String[][] usesStaticLibrariesCertDigests>;

        $r3 = staticinvoke <com.android.internal.util.ArrayUtils: java.lang.Object[] appendElement(java.lang.Class,java.lang.Object[],java.lang.Object,boolean)>(class "[Ljava/lang/String;", $r2, r1, 1);

        $r4 = (java.lang.String[][]) $r3;

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String[][] usesStaticLibrariesCertDigests> = $r4;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage addUsesStaticLibraryVersion(long)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r1;
        long l0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        l0 := @parameter0: long;

        $r1 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl addUsesStaticLibraryVersion(long)>(l0);

        return $r1;
    }

    public android.content.pm.parsing.ParsingPackageImpl addUsesStaticLibraryVersion(long)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        long l0;
        long[] $r1, $r2;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        l0 := @parameter0: long;

        $r1 = r0.<android.content.pm.parsing.ParsingPackageImpl: long[] usesStaticLibrariesVersions>;

        $r2 = staticinvoke <com.android.internal.util.ArrayUtils: long[] appendLong(long[],long,boolean)>($r1, l0, 1);

        r0.<android.content.pm.parsing.ParsingPackageImpl: long[] usesStaticLibrariesVersions> = $r2;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage asSplit(java.lang.String[], java.lang.String[], int[], android.util.SparseArray)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r5;
        java.lang.String[] r1, r2;
        int[] r3;
        android.util.SparseArray r4;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: java.lang.String[];

        r2 := @parameter1: java.lang.String[];

        r3 := @parameter2: int[];

        r4 := @parameter3: android.util.SparseArray;

        $r5 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl asSplit(java.lang.String[],java.lang.String[],int[],android.util.SparseArray)>(r1, r2, r3, r4);

        return $r5;
    }

    public android.content.pm.parsing.ParsingPackageImpl asSplit(java.lang.String[], java.lang.String[], int[], android.util.SparseArray)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.lang.String[] r1, r2, $r6;
        int[] r3, $r5;
        android.util.SparseArray r4;
        int i0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: java.lang.String[];

        r2 := @parameter1: java.lang.String[];

        r3 := @parameter2: int[];

        r4 := @parameter3: android.util.SparseArray;

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String[] splitNames> = r1;

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String[] splitCodePaths> = r2;

        r0.<android.content.pm.parsing.ParsingPackageImpl: int[] splitRevisionCodes> = r3;

        r0.<android.content.pm.parsing.ParsingPackageImpl: android.util.SparseArray splitDependencies> = r4;

        i0 = lengthof r1;

        $r5 = newarray (int)[i0];

        r0.<android.content.pm.parsing.ParsingPackageImpl: int[] splitFlags> = $r5;

        $r6 = newarray (java.lang.String)[i0];

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String[] splitClassLoaderNames> = $r6;

        return r0;
    }

    public int describeContents()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        return 0;
    }

    public java.util.List getActivities()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.util.List $r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $r1 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List activities>;

        return $r1;
    }

    public java.util.List getAdoptPermissions()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.util.List $r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $r1 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List adoptPermissions>;

        return $r1;
    }

    public java.lang.String getAppComponentFactory()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.lang.String $r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $r1 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String appComponentFactory>;

        return $r1;
    }

    public java.util.List getAttributions()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.util.List $r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $r1 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List attributions>;

        return $r1;
    }

    public int getAutoRevokePermissions()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        int $i0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $i0 = r0.<android.content.pm.parsing.ParsingPackageImpl: int autoRevokePermissions>;

        return $i0;
    }

    public java.lang.String getBackupAgentName()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.lang.String $r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $r1 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String backupAgentName>;

        return $r1;
    }

    public int getBanner()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        int $i0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $i0 = r0.<android.content.pm.parsing.ParsingPackageImpl: int banner>;

        return $i0;
    }

    public java.lang.String getBaseCodePath()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.lang.String $r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $r1 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String baseCodePath>;

        return $r1;
    }

    public int getBaseRevisionCode()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        int $i0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $i0 = r0.<android.content.pm.parsing.ParsingPackageImpl: int baseRevisionCode>;

        return $i0;
    }

    public int getCategory()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        int $i0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $i0 = r0.<android.content.pm.parsing.ParsingPackageImpl: int category>;

        return $i0;
    }

    public java.lang.String getClassLoaderName()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.lang.String $r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $r1 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String classLoaderName>;

        return $r1;
    }

    public java.lang.String getClassName()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.lang.String $r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $r1 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String className>;

        return $r1;
    }

    public java.lang.String getCodePath()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.lang.String $r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $r1 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String codePath>;

        return $r1;
    }

    public int getCompatibleWidthLimitDp()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        int $i0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $i0 = r0.<android.content.pm.parsing.ParsingPackageImpl: int compatibleWidthLimitDp>;

        return $i0;
    }

    public int getCompileSdkVersion()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        int $i0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $i0 = r0.<android.content.pm.parsing.ParsingPackageImpl: int compileSdkVersion>;

        return $i0;
    }

    public java.lang.String getCompileSdkVersionCodeName()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.lang.String $r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $r1 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String compileSdkVersionCodeName>;

        return $r1;
    }

    public java.util.List getConfigPreferences()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.util.List $r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $r1 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List configPreferences>;

        return $r1;
    }

    public int getDescriptionRes()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        int $i0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $i0 = r0.<android.content.pm.parsing.ParsingPackageImpl: int descriptionRes>;

        return $i0;
    }

    public java.util.List getFeatureGroups()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.util.List $r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $r1 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List featureGroups>;

        return $r1;
    }

    public int getFullBackupContent()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        int $i0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $i0 = r0.<android.content.pm.parsing.ParsingPackageImpl: int fullBackupContent>;

        return $i0;
    }

    public int getGwpAsanMode()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        int $i0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $i0 = r0.<android.content.pm.parsing.ParsingPackageImpl: int gwpAsanMode>;

        return $i0;
    }

    public int getIconRes()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        int $i0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $i0 = r0.<android.content.pm.parsing.ParsingPackageImpl: int iconRes>;

        return $i0;
    }

    public java.util.List getImplicitPermissions()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.util.List $r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $r1 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List implicitPermissions>;

        return $r1;
    }

    public int getInstallLocation()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        int $i0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $i0 = r0.<android.content.pm.parsing.ParsingPackageImpl: int installLocation>;

        return $i0;
    }

    public java.util.List getInstrumentations()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.util.List $r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $r1 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List instrumentations>;

        return $r1;
    }

    public java.util.Map getKeySetMapping()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.util.Map $r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $r1 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.Map keySetMapping>;

        return $r1;
    }

    public int getLabelRes()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        int $i0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $i0 = r0.<android.content.pm.parsing.ParsingPackageImpl: int labelRes>;

        return $i0;
    }

    public int getLargestWidthLimitDp()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        int $i0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $i0 = r0.<android.content.pm.parsing.ParsingPackageImpl: int largestWidthLimitDp>;

        return $i0;
    }

    public java.util.List getLibraryNames()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.util.List $r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $r1 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List libraryNames>;

        return $r1;
    }

    public int getLogo()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        int $i0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $i0 = r0.<android.content.pm.parsing.ParsingPackageImpl: int logo>;

        return $i0;
    }

    public java.lang.String getManageSpaceActivityName()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.lang.String $r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $r1 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String manageSpaceActivityName>;

        return $r1;
    }

    public float getMaxAspectRatio()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        float $f0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $f0 = r0.<android.content.pm.parsing.ParsingPackageImpl: float maxAspectRatio>;

        return $f0;
    }

    public android.os.Bundle getMetaData()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        android.os.Bundle $r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $r1 = r0.<android.content.pm.parsing.ParsingPackageImpl: android.os.Bundle metaData>;

        return $r1;
    }

    public java.util.Set getMimeGroups()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        android.util.ArraySet $r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $r1 = r0.<android.content.pm.parsing.ParsingPackageImpl: android.util.ArraySet mimeGroups>;

        return $r1;
    }

    public float getMinAspectRatio()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        float $f0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $f0 = r0.<android.content.pm.parsing.ParsingPackageImpl: float minAspectRatio>;

        return $f0;
    }

    public android.util.SparseIntArray getMinExtensionVersions()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        android.util.SparseIntArray $r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $r1 = r0.<android.content.pm.parsing.ParsingPackageImpl: android.util.SparseIntArray minExtensionVersions>;

        return $r1;
    }

    public int getMinSdkVersion()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        int $i0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $i0 = r0.<android.content.pm.parsing.ParsingPackageImpl: int minSdkVersion>;

        return $i0;
    }

    public int getNetworkSecurityConfigRes()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        int $i0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $i0 = r0.<android.content.pm.parsing.ParsingPackageImpl: int networkSecurityConfigRes>;

        return $i0;
    }

    public java.lang.CharSequence getNonLocalizedLabel()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.lang.CharSequence $r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $r1 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.CharSequence nonLocalizedLabel>;

        return $r1;
    }

    public java.util.List getOriginalPackages()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.util.List $r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $r1 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List originalPackages>;

        return $r1;
    }

    public java.lang.String getOverlayCategory()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.lang.String $r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $r1 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String overlayCategory>;

        return $r1;
    }

    public int getOverlayPriority()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        int $i0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $i0 = r0.<android.content.pm.parsing.ParsingPackageImpl: int overlayPriority>;

        return $i0;
    }

    public java.lang.String getOverlayTarget()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.lang.String $r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $r1 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String overlayTarget>;

        return $r1;
    }

    public java.lang.String getOverlayTargetName()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.lang.String $r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $r1 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String overlayTargetName>;

        return $r1;
    }

    public java.util.Map getOverlayables()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.util.Map $r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $r1 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.Map overlayables>;

        return $r1;
    }

    public java.lang.String getPackageName()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.lang.String $r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $r1 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String packageName>;

        return $r1;
    }

    public java.lang.String getPermission()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.lang.String $r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $r1 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String permission>;

        return $r1;
    }

    public java.util.List getPermissionGroups()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.util.List $r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $r1 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List permissionGroups>;

        return $r1;
    }

    public java.util.List getPermissions()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.util.List $r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $r1 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List permissions>;

        return $r1;
    }

    public java.util.List getPreferredActivityFilters()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.util.List $r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $r1 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List preferredActivityFilters>;

        return $r1;
    }

    public java.lang.String getProcessName()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.lang.String r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String processName>;

        if r1 == null goto label1;

        goto label2;

     label1:
        r1 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String packageName>;

     label2:
        return r1;
    }

    public java.util.Map getProcesses()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.util.Map $r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $r1 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.Map processes>;

        return $r1;
    }

    public java.util.List getProtectedBroadcasts()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.util.List $r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $r1 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List protectedBroadcasts>;

        return $r1;
    }

    public java.util.List getProviders()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.util.List $r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $r1 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List providers>;

        return $r1;
    }

    public java.util.List getQueriesIntents()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.util.List $r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $r1 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List queriesIntents>;

        return $r1;
    }

    public java.util.List getQueriesPackages()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.util.List $r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $r1 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List queriesPackages>;

        return $r1;
    }

    public java.util.Set getQueriesProviders()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.util.Set $r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $r1 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.Set queriesProviders>;

        return $r1;
    }

    public java.lang.String getRealPackage()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.lang.String $r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $r1 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String realPackage>;

        return $r1;
    }

    public java.util.List getReceivers()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.util.List $r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $r1 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List receivers>;

        return $r1;
    }

    public java.util.List getReqFeatures()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.util.List $r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $r1 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List reqFeatures>;

        return $r1;
    }

    public java.util.List getRequestedPermissions()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.util.List $r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $r1 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List requestedPermissions>;

        return $r1;
    }

    public java.lang.String getRequiredAccountType()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.lang.String $r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $r1 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String requiredAccountType>;

        return $r1;
    }

    public int getRequiresSmallestWidthDp()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        int $i0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $i0 = r0.<android.content.pm.parsing.ParsingPackageImpl: int requiresSmallestWidthDp>;

        return $i0;
    }

    public java.lang.Boolean getResizeableActivity()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.lang.Boolean $r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $r1 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.Boolean resizeableActivity>;

        return $r1;
    }

    public byte[] getRestrictUpdateHash()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        byte[] $r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $r1 = r0.<android.content.pm.parsing.ParsingPackageImpl: byte[] restrictUpdateHash>;

        return $r1;
    }

    public java.lang.String getRestrictedAccountType()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.lang.String $r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $r1 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String restrictedAccountType>;

        return $r1;
    }

    public int getRoundIconRes()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        int $i0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $i0 = r0.<android.content.pm.parsing.ParsingPackageImpl: int roundIconRes>;

        return $i0;
    }

    public java.util.List getServices()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.util.List $r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $r1 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List services>;

        return $r1;
    }

    public java.lang.String getSharedUserId()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.lang.String $r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $r1 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String sharedUserId>;

        return $r1;
    }

    public int getSharedUserLabel()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        int $i0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $i0 = r0.<android.content.pm.parsing.ParsingPackageImpl: int sharedUserLabel>;

        return $i0;
    }

    public android.content.pm.PackageParser$SigningDetails getSigningDetails()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        android.content.pm.PackageParser$SigningDetails $r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $r1 = r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.PackageParser$SigningDetails signingDetails>;

        return $r1;
    }

    public java.lang.String[] getSplitClassLoaderNames()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.lang.String[] $r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $r1 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String[] splitClassLoaderNames>;

        return $r1;
    }

    public java.lang.String[] getSplitCodePaths()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.lang.String[] $r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $r1 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String[] splitCodePaths>;

        return $r1;
    }

    public android.util.SparseArray getSplitDependencies()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        android.util.SparseArray $r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $r1 = r0.<android.content.pm.parsing.ParsingPackageImpl: android.util.SparseArray splitDependencies>;

        return $r1;
    }

    public int[] getSplitFlags()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        int[] $r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $r1 = r0.<android.content.pm.parsing.ParsingPackageImpl: int[] splitFlags>;

        return $r1;
    }

    public java.lang.String[] getSplitNames()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.lang.String[] $r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $r1 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String[] splitNames>;

        return $r1;
    }

    public int[] getSplitRevisionCodes()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        int[] $r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $r1 = r0.<android.content.pm.parsing.ParsingPackageImpl: int[] splitRevisionCodes>;

        return $r1;
    }

    public java.lang.String getStaticSharedLibName()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.lang.String $r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $r1 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String staticSharedLibName>;

        return $r1;
    }

    public long getStaticSharedLibVersion()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        long $l0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $l0 = r0.<android.content.pm.parsing.ParsingPackageImpl: long staticSharedLibVersion>;

        return $l0;
    }

    public int getTargetSandboxVersion()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        int $i0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $i0 = r0.<android.content.pm.parsing.ParsingPackageImpl: int targetSandboxVersion>;

        return $i0;
    }

    public int getTargetSdkVersion()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        int $i0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $i0 = r0.<android.content.pm.parsing.ParsingPackageImpl: int targetSdkVersion>;

        return $i0;
    }

    public java.lang.String getTaskAffinity()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.lang.String $r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $r1 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String taskAffinity>;

        return $r1;
    }

    public int getTheme()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        int $i0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $i0 = r0.<android.content.pm.parsing.ParsingPackageImpl: int theme>;

        return $i0;
    }

    public int getUiOptions()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        int $i0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $i0 = r0.<android.content.pm.parsing.ParsingPackageImpl: int uiOptions>;

        return $i0;
    }

    public java.util.Set getUpgradeKeySets()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.util.Set $r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $r1 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.Set upgradeKeySets>;

        return $r1;
    }

    public java.util.List getUsesLibraries()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.util.List $r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $r1 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List usesLibraries>;

        return $r1;
    }

    public java.util.List getUsesOptionalLibraries()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.util.List $r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $r1 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List usesOptionalLibraries>;

        return $r1;
    }

    public java.util.List getUsesStaticLibraries()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.util.List $r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $r1 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List usesStaticLibraries>;

        return $r1;
    }

    public java.lang.String[][] getUsesStaticLibrariesCertDigests()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.lang.String[][] $r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $r1 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String[][] usesStaticLibrariesCertDigests>;

        return $r1;
    }

    public long[] getUsesStaticLibrariesVersions()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        long[] $r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $r1 = r0.<android.content.pm.parsing.ParsingPackageImpl: long[] usesStaticLibrariesVersions>;

        return $r1;
    }

    public int getVersionCode()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        int $i0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $i0 = r0.<android.content.pm.parsing.ParsingPackageImpl: int versionCode>;

        return $i0;
    }

    public int getVersionCodeMajor()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        int $i0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $i0 = r0.<android.content.pm.parsing.ParsingPackageImpl: int versionCodeMajor>;

        return $i0;
    }

    public java.lang.String getVersionName()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.lang.String $r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $r1 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String versionName>;

        return $r1;
    }

    public java.lang.String getVolumeUuid()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.lang.String $r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $r1 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String volumeUuid>;

        return $r1;
    }

    public java.lang.String getZygotePreloadName()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.lang.String $r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $r1 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String zygotePreloadName>;

        return $r1;
    }

    public boolean hasPreserveLegacyExternalStorage()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean $z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $z0 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean preserveLegacyExternalStorage>;

        return $z0;
    }

    public java.lang.Object hideAsParsed()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }

    public boolean isAllowAudioPlaybackCapture()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean $z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $z0 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean allowAudioPlaybackCapture>;

        return $z0;
    }

    public boolean isAllowBackup()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean $z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $z0 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean allowBackup>;

        return $z0;
    }

    public boolean isAllowClearUserData()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean $z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $z0 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean allowClearUserData>;

        return $z0;
    }

    public boolean isAllowClearUserDataOnFailedRestore()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean $z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $z0 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean allowClearUserDataOnFailedRestore>;

        return $z0;
    }

    public boolean isAllowNativeHeapPointerTagging()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean $z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $z0 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean allowNativeHeapPointerTagging>;

        return $z0;
    }

    public boolean isAllowTaskReparenting()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean $z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $z0 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean allowTaskReparenting>;

        return $z0;
    }

    public boolean isAnyDensity()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.lang.Boolean r1;
        boolean $z0, z1;
        int $i0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.Boolean anyDensity>;

        if r1 != null goto label3;

        $i0 = r0.<android.content.pm.parsing.ParsingPackageImpl: int targetSdkVersion>;

        if $i0 < 4 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;

     label3:
        $z0 = virtualinvoke r1.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    public boolean isBackupInForeground()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean $z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $z0 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean backupInForeground>;

        return $z0;
    }

    public boolean isBaseHardwareAccelerated()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean $z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $z0 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean baseHardwareAccelerated>;

        return $z0;
    }

    public boolean isCantSaveState()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean $z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $z0 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean cantSaveState>;

        return $z0;
    }

    public boolean isCrossProfile()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean $z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $z0 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean crossProfile>;

        return $z0;
    }

    public boolean isDebuggable()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean $z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $z0 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean debuggable>;

        return $z0;
    }

    public boolean isDefaultToDeviceProtectedStorage()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean $z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $z0 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean defaultToDeviceProtectedStorage>;

        return $z0;
    }

    public boolean isDirectBootAware()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean $z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $z0 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean directBootAware>;

        return $z0;
    }

    public boolean isEnabled()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean $z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $z0 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean enabled>;

        return $z0;
    }

    public boolean isExternalStorage()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean $z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $z0 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean externalStorage>;

        return $z0;
    }

    public boolean isExtractNativeLibs()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean $z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $z0 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean extractNativeLibs>;

        return $z0;
    }

    public boolean isForceQueryable()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean $z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $z0 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean forceQueryable>;

        return $z0;
    }

    public boolean isFullBackupOnly()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean $z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $z0 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean fullBackupOnly>;

        return $z0;
    }

    public boolean isGame()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean $z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $z0 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean game>;

        return $z0;
    }

    public boolean isHasCode()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean $z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $z0 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean hasCode>;

        return $z0;
    }

    public boolean isHasDomainUrls()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean $z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $z0 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean hasDomainUrls>;

        return $z0;
    }

    public boolean isHasFragileUserData()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean $z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $z0 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean hasFragileUserData>;

        return $z0;
    }

    public boolean isIsolatedSplitLoading()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean $z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $z0 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean isolatedSplitLoading>;

        return $z0;
    }

    public boolean isKillAfterRestore()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean $z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $z0 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean killAfterRestore>;

        return $z0;
    }

    public boolean isLargeHeap()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean $z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $z0 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean largeHeap>;

        return $z0;
    }

    public boolean isMultiArch()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean $z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $z0 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean multiArch>;

        return $z0;
    }

    public boolean isOverlay()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean $z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $z0 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean overlay>;

        return $z0;
    }

    public boolean isOverlayIsStatic()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean $z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $z0 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean overlayIsStatic>;

        return $z0;
    }

    public boolean isPartiallyDirectBootAware()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean $z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $z0 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean partiallyDirectBootAware>;

        return $z0;
    }

    public boolean isPersistent()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean $z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $z0 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean persistent>;

        return $z0;
    }

    public boolean isProfileableByShell()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean $z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $z0 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean profileableByShell>;

        return $z0;
    }

    public boolean isRequestLegacyExternalStorage()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean $z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $z0 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean requestLegacyExternalStorage>;

        return $z0;
    }

    public boolean isRequiredForAllUsers()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean $z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $z0 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean requiredForAllUsers>;

        return $z0;
    }

    public boolean isResizeable()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.lang.Boolean r1;
        boolean $z0, z1;
        int $i0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.Boolean resizeable>;

        if r1 != null goto label3;

        $i0 = r0.<android.content.pm.parsing.ParsingPackageImpl: int targetSdkVersion>;

        if $i0 < 4 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;

     label3:
        $z0 = virtualinvoke r1.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    public boolean isResizeableActivityViaSdkVersion()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean $z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $z0 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean resizeableActivityViaSdkVersion>;

        return $z0;
    }

    public boolean isRestoreAnyVersion()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean $z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $z0 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean restoreAnyVersion>;

        return $z0;
    }

    public boolean isStaticSharedLibrary()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean $z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $z0 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean staticSharedLibrary>;

        return $z0;
    }

    public boolean isSupportsExtraLargeScreens()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.lang.Boolean r1;
        boolean $z0, z1;
        int $i0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.Boolean supportsExtraLargeScreens>;

        if r1 != null goto label3;

        $i0 = r0.<android.content.pm.parsing.ParsingPackageImpl: int targetSdkVersion>;

        if $i0 < 9 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;

     label3:
        $z0 = virtualinvoke r1.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    public boolean isSupportsLargeScreens()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.lang.Boolean r1;
        boolean $z0, z1;
        int $i0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.Boolean supportsLargeScreens>;

        if r1 != null goto label3;

        $i0 = r0.<android.content.pm.parsing.ParsingPackageImpl: int targetSdkVersion>;

        if $i0 < 4 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;

     label3:
        $z0 = virtualinvoke r1.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    public boolean isSupportsNormalScreens()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.lang.Boolean r1;
        boolean $z0, z1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.Boolean supportsNormalScreens>;

        if r1 == null goto label2;

        $z0 = virtualinvoke r1.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        z1 = 0;

        goto label3;

     label2:
        z1 = 1;

     label3:
        return z1;
    }

    public boolean isSupportsRtl()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean $z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $z0 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean supportsRtl>;

        return $z0;
    }

    public boolean isSupportsSmallScreens()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.lang.Boolean r1;
        boolean $z0, z1;
        int $i0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.Boolean supportsSmallScreens>;

        if r1 != null goto label3;

        $i0 = r0.<android.content.pm.parsing.ParsingPackageImpl: int targetSdkVersion>;

        if $i0 < 4 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;

     label3:
        $z0 = virtualinvoke r1.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    public boolean isTestOnly()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean $z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $z0 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean testOnly>;

        return $z0;
    }

    public boolean isUse32BitAbi()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean $z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $z0 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean use32BitAbi>;

        return $z0;
    }

    public boolean isUseEmbeddedDex()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean $z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $z0 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean useEmbeddedDex>;

        return $z0;
    }

    public boolean isUsesCleartextTraffic()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean $z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $z0 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean usesCleartextTraffic>;

        return $z0;
    }

    public boolean isUsesNonSdkApi()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean $z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $z0 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean usesNonSdkApi>;

        return $z0;
    }

    public boolean isVisibleToInstantApps()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean $z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $z0 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean visibleToInstantApps>;

        return $z0;
    }

    public boolean isVmSafeMode()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean $z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $z0 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean vmSafeMode>;

        return $z0;
    }

    public volatile android.content.pm.parsing.ParsingPackage removeUsesOptionalLibrary(java.lang.String)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r2;
        java.lang.String r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl removeUsesOptionalLibrary(java.lang.String)>(r1);

        return $r2;
    }

    public android.content.pm.parsing.ParsingPackageImpl removeUsesOptionalLibrary(java.lang.String)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.lang.String r1;
        java.util.List $r2, $r3;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List usesOptionalLibraries>;

        $r3 = staticinvoke <com.android.internal.util.CollectionUtils: java.util.List remove(java.util.List,java.lang.Object)>($r2, r1);

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List usesOptionalLibraries> = $r3;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setAllowAudioPlaybackCapture(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r1;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setAllowAudioPlaybackCapture(boolean)>(z0);

        return $r1;
    }

    public android.content.pm.parsing.ParsingPackageImpl setAllowAudioPlaybackCapture(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean allowAudioPlaybackCapture> = z0;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setAllowBackup(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r1;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setAllowBackup(boolean)>(z0);

        return $r1;
    }

    public android.content.pm.parsing.ParsingPackageImpl setAllowBackup(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean allowBackup> = z0;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setAllowClearUserData(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r1;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setAllowClearUserData(boolean)>(z0);

        return $r1;
    }

    public android.content.pm.parsing.ParsingPackageImpl setAllowClearUserData(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean allowClearUserData> = z0;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setAllowClearUserDataOnFailedRestore(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r1;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setAllowClearUserDataOnFailedRestore(boolean)>(z0);

        return $r1;
    }

    public android.content.pm.parsing.ParsingPackageImpl setAllowClearUserDataOnFailedRestore(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean allowClearUserDataOnFailedRestore> = z0;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setAllowNativeHeapPointerTagging(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r1;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setAllowNativeHeapPointerTagging(boolean)>(z0);

        return $r1;
    }

    public android.content.pm.parsing.ParsingPackageImpl setAllowNativeHeapPointerTagging(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean allowNativeHeapPointerTagging> = z0;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setAllowTaskReparenting(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r1;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setAllowTaskReparenting(boolean)>(z0);

        return $r1;
    }

    public android.content.pm.parsing.ParsingPackageImpl setAllowTaskReparenting(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean allowTaskReparenting> = z0;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setAnyDensity(int)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r1;
        int i0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setAnyDensity(int)>(i0);

        return $r1;
    }

    public android.content.pm.parsing.ParsingPackageImpl setAnyDensity(int)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        int i0;
        java.lang.Boolean $r1;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        i0 := @parameter0: int;

        z0 = 1;

        if i0 != 1 goto label1;

        return r0;

     label1:
        if i0 >= 0 goto label2;

        goto label3;

     label2:
        z0 = 0;

     label3:
        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.Boolean anyDensity> = $r1;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setAppComponentFactory(java.lang.String)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r2;
        java.lang.String r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setAppComponentFactory(java.lang.String)>(r1);

        return $r2;
    }

    public android.content.pm.parsing.ParsingPackageImpl setAppComponentFactory(java.lang.String)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.lang.String r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: java.lang.String;

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String appComponentFactory> = r1;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setAutoRevokePermissions(int)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r1;
        int i0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setAutoRevokePermissions(int)>(i0);

        return $r1;
    }

    public android.content.pm.parsing.ParsingPackageImpl setAutoRevokePermissions(int)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        int i0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        i0 := @parameter0: int;

        r0.<android.content.pm.parsing.ParsingPackageImpl: int autoRevokePermissions> = i0;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setBackupAgentName(java.lang.String)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r2;
        java.lang.String r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setBackupAgentName(java.lang.String)>(r1);

        return $r2;
    }

    public android.content.pm.parsing.ParsingPackageImpl setBackupAgentName(java.lang.String)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.lang.String r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: java.lang.String;

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String backupAgentName> = r1;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setBackupInForeground(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r1;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setBackupInForeground(boolean)>(z0);

        return $r1;
    }

    public android.content.pm.parsing.ParsingPackageImpl setBackupInForeground(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean backupInForeground> = z0;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setBanner(int)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r1;
        int i0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setBanner(int)>(i0);

        return $r1;
    }

    public android.content.pm.parsing.ParsingPackageImpl setBanner(int)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        int i0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        i0 := @parameter0: int;

        r0.<android.content.pm.parsing.ParsingPackageImpl: int banner> = i0;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setBaseHardwareAccelerated(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r1;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setBaseHardwareAccelerated(boolean)>(z0);

        return $r1;
    }

    public android.content.pm.parsing.ParsingPackageImpl setBaseHardwareAccelerated(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean baseHardwareAccelerated> = z0;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setBaseRevisionCode(int)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r1;
        int i0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setBaseRevisionCode(int)>(i0);

        return $r1;
    }

    public android.content.pm.parsing.ParsingPackageImpl setBaseRevisionCode(int)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        int i0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        i0 := @parameter0: int;

        r0.<android.content.pm.parsing.ParsingPackageImpl: int baseRevisionCode> = i0;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setCantSaveState(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r1;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setCantSaveState(boolean)>(z0);

        return $r1;
    }

    public android.content.pm.parsing.ParsingPackageImpl setCantSaveState(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean cantSaveState> = z0;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setCategory(int)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r1;
        int i0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setCategory(int)>(i0);

        return $r1;
    }

    public android.content.pm.parsing.ParsingPackageImpl setCategory(int)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        int i0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        i0 := @parameter0: int;

        r0.<android.content.pm.parsing.ParsingPackageImpl: int category> = i0;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setClassLoaderName(java.lang.String)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r2;
        java.lang.String r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setClassLoaderName(java.lang.String)>(r1);

        return $r2;
    }

    public android.content.pm.parsing.ParsingPackageImpl setClassLoaderName(java.lang.String)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.lang.String r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: java.lang.String;

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String classLoaderName> = r1;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setClassName(java.lang.String)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r2;
        java.lang.String r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setClassName(java.lang.String)>(r1);

        return $r2;
    }

    public android.content.pm.parsing.ParsingPackageImpl setClassName(java.lang.String)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.lang.String r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: java.lang.String;

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String className> = r1;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setCompatibleWidthLimitDp(int)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r1;
        int i0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setCompatibleWidthLimitDp(int)>(i0);

        return $r1;
    }

    public android.content.pm.parsing.ParsingPackageImpl setCompatibleWidthLimitDp(int)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        int i0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        i0 := @parameter0: int;

        r0.<android.content.pm.parsing.ParsingPackageImpl: int compatibleWidthLimitDp> = i0;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setCompileSdkVersion(int)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r1;
        int i0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setCompileSdkVersion(int)>(i0);

        return $r1;
    }

    public android.content.pm.parsing.ParsingPackageImpl setCompileSdkVersion(int)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        int i0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        i0 := @parameter0: int;

        r0.<android.content.pm.parsing.ParsingPackageImpl: int compileSdkVersion> = i0;

        return r0;
    }

    public android.content.pm.parsing.ParsingPackage setCompileSdkVersionCodename(java.lang.String)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.lang.String r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: java.lang.String;

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String compileSdkVersionCodeName> = r1;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setCrossProfile(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r1;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setCrossProfile(boolean)>(z0);

        return $r1;
    }

    public android.content.pm.parsing.ParsingPackageImpl setCrossProfile(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean crossProfile> = z0;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setDebuggable(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r1;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setDebuggable(boolean)>(z0);

        return $r1;
    }

    public android.content.pm.parsing.ParsingPackageImpl setDebuggable(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean debuggable> = z0;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setDefaultToDeviceProtectedStorage(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r1;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setDefaultToDeviceProtectedStorage(boolean)>(z0);

        return $r1;
    }

    public android.content.pm.parsing.ParsingPackageImpl setDefaultToDeviceProtectedStorage(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean defaultToDeviceProtectedStorage> = z0;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setDescriptionRes(int)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r1;
        int i0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setDescriptionRes(int)>(i0);

        return $r1;
    }

    public android.content.pm.parsing.ParsingPackageImpl setDescriptionRes(int)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        int i0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        i0 := @parameter0: int;

        r0.<android.content.pm.parsing.ParsingPackageImpl: int descriptionRes> = i0;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setDirectBootAware(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r1;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setDirectBootAware(boolean)>(z0);

        return $r1;
    }

    public android.content.pm.parsing.ParsingPackageImpl setDirectBootAware(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean directBootAware> = z0;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setEnabled(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r1;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setEnabled(boolean)>(z0);

        return $r1;
    }

    public android.content.pm.parsing.ParsingPackageImpl setEnabled(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean enabled> = z0;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setExternalStorage(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r1;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setExternalStorage(boolean)>(z0);

        return $r1;
    }

    public android.content.pm.parsing.ParsingPackageImpl setExternalStorage(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean externalStorage> = z0;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setExtractNativeLibs(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r1;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setExtractNativeLibs(boolean)>(z0);

        return $r1;
    }

    public android.content.pm.parsing.ParsingPackageImpl setExtractNativeLibs(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean extractNativeLibs> = z0;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setForceQueryable(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r1;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setForceQueryable(boolean)>(z0);

        return $r1;
    }

    public android.content.pm.parsing.ParsingPackageImpl setForceQueryable(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean forceQueryable> = z0;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setFullBackupContent(int)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r1;
        int i0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setFullBackupContent(int)>(i0);

        return $r1;
    }

    public android.content.pm.parsing.ParsingPackageImpl setFullBackupContent(int)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        int i0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        i0 := @parameter0: int;

        r0.<android.content.pm.parsing.ParsingPackageImpl: int fullBackupContent> = i0;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setFullBackupOnly(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r1;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setFullBackupOnly(boolean)>(z0);

        return $r1;
    }

    public android.content.pm.parsing.ParsingPackageImpl setFullBackupOnly(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean fullBackupOnly> = z0;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setGame(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r1;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setGame(boolean)>(z0);

        return $r1;
    }

    public android.content.pm.parsing.ParsingPackageImpl setGame(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean game> = z0;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setGwpAsanMode(int)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r1;
        int i0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setGwpAsanMode(int)>(i0);

        return $r1;
    }

    public android.content.pm.parsing.ParsingPackageImpl setGwpAsanMode(int)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        int i0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        i0 := @parameter0: int;

        r0.<android.content.pm.parsing.ParsingPackageImpl: int gwpAsanMode> = i0;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setHasCode(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r1;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setHasCode(boolean)>(z0);

        return $r1;
    }

    public android.content.pm.parsing.ParsingPackageImpl setHasCode(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean hasCode> = z0;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setHasDomainUrls(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r1;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setHasDomainUrls(boolean)>(z0);

        return $r1;
    }

    public android.content.pm.parsing.ParsingPackageImpl setHasDomainUrls(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean hasDomainUrls> = z0;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setHasFragileUserData(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r1;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setHasFragileUserData(boolean)>(z0);

        return $r1;
    }

    public android.content.pm.parsing.ParsingPackageImpl setHasFragileUserData(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean hasFragileUserData> = z0;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setIconRes(int)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r1;
        int i0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setIconRes(int)>(i0);

        return $r1;
    }

    public android.content.pm.parsing.ParsingPackageImpl setIconRes(int)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        int i0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        i0 := @parameter0: int;

        r0.<android.content.pm.parsing.ParsingPackageImpl: int iconRes> = i0;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setInstallLocation(int)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r1;
        int i0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setInstallLocation(int)>(i0);

        return $r1;
    }

    public android.content.pm.parsing.ParsingPackageImpl setInstallLocation(int)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        int i0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        i0 := @parameter0: int;

        r0.<android.content.pm.parsing.ParsingPackageImpl: int installLocation> = i0;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setIsolatedSplitLoading(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r1;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setIsolatedSplitLoading(boolean)>(z0);

        return $r1;
    }

    public android.content.pm.parsing.ParsingPackageImpl setIsolatedSplitLoading(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean isolatedSplitLoading> = z0;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setKillAfterRestore(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r1;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setKillAfterRestore(boolean)>(z0);

        return $r1;
    }

    public android.content.pm.parsing.ParsingPackageImpl setKillAfterRestore(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean killAfterRestore> = z0;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setLabelRes(int)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r1;
        int i0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setLabelRes(int)>(i0);

        return $r1;
    }

    public android.content.pm.parsing.ParsingPackageImpl setLabelRes(int)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        int i0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        i0 := @parameter0: int;

        r0.<android.content.pm.parsing.ParsingPackageImpl: int labelRes> = i0;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setLargeHeap(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r1;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setLargeHeap(boolean)>(z0);

        return $r1;
    }

    public android.content.pm.parsing.ParsingPackageImpl setLargeHeap(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean largeHeap> = z0;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setLargestWidthLimitDp(int)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r1;
        int i0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setLargestWidthLimitDp(int)>(i0);

        return $r1;
    }

    public android.content.pm.parsing.ParsingPackageImpl setLargestWidthLimitDp(int)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        int i0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        i0 := @parameter0: int;

        r0.<android.content.pm.parsing.ParsingPackageImpl: int largestWidthLimitDp> = i0;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setLogo(int)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r1;
        int i0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setLogo(int)>(i0);

        return $r1;
    }

    public android.content.pm.parsing.ParsingPackageImpl setLogo(int)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        int i0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        i0 := @parameter0: int;

        r0.<android.content.pm.parsing.ParsingPackageImpl: int logo> = i0;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setManageSpaceActivityName(java.lang.String)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r2;
        java.lang.String r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setManageSpaceActivityName(java.lang.String)>(r1);

        return $r2;
    }

    public android.content.pm.parsing.ParsingPackageImpl setManageSpaceActivityName(java.lang.String)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.lang.String r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: java.lang.String;

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String manageSpaceActivityName> = r1;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setMaxAspectRatio(float)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r1;
        float f0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        f0 := @parameter0: float;

        $r1 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setMaxAspectRatio(float)>(f0);

        return $r1;
    }

    public android.content.pm.parsing.ParsingPackageImpl setMaxAspectRatio(float)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        float f0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        f0 := @parameter0: float;

        r0.<android.content.pm.parsing.ParsingPackageImpl: float maxAspectRatio> = f0;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setMetaData(android.os.Bundle)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r2;
        android.os.Bundle r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: android.os.Bundle;

        $r2 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setMetaData(android.os.Bundle)>(r1);

        return $r2;
    }

    public android.content.pm.parsing.ParsingPackageImpl setMetaData(android.os.Bundle)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        android.os.Bundle r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: android.os.Bundle;

        r0.<android.content.pm.parsing.ParsingPackageImpl: android.os.Bundle metaData> = r1;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setMinAspectRatio(float)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r1;
        float f0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        f0 := @parameter0: float;

        $r1 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setMinAspectRatio(float)>(f0);

        return $r1;
    }

    public android.content.pm.parsing.ParsingPackageImpl setMinAspectRatio(float)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        float f0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        f0 := @parameter0: float;

        r0.<android.content.pm.parsing.ParsingPackageImpl: float minAspectRatio> = f0;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setMinExtensionVersions(android.util.SparseIntArray)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r2;
        android.util.SparseIntArray r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: android.util.SparseIntArray;

        $r2 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setMinExtensionVersions(android.util.SparseIntArray)>(r1);

        return $r2;
    }

    public android.content.pm.parsing.ParsingPackageImpl setMinExtensionVersions(android.util.SparseIntArray)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        android.util.SparseIntArray r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: android.util.SparseIntArray;

        r0.<android.content.pm.parsing.ParsingPackageImpl: android.util.SparseIntArray minExtensionVersions> = r1;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setMinSdkVersion(int)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r1;
        int i0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setMinSdkVersion(int)>(i0);

        return $r1;
    }

    public android.content.pm.parsing.ParsingPackageImpl setMinSdkVersion(int)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        int i0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        i0 := @parameter0: int;

        r0.<android.content.pm.parsing.ParsingPackageImpl: int minSdkVersion> = i0;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setMultiArch(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r1;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setMultiArch(boolean)>(z0);

        return $r1;
    }

    public android.content.pm.parsing.ParsingPackageImpl setMultiArch(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean multiArch> = z0;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setNetworkSecurityConfigRes(int)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r1;
        int i0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setNetworkSecurityConfigRes(int)>(i0);

        return $r1;
    }

    public android.content.pm.parsing.ParsingPackageImpl setNetworkSecurityConfigRes(int)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        int i0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        i0 := @parameter0: int;

        r0.<android.content.pm.parsing.ParsingPackageImpl: int networkSecurityConfigRes> = i0;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setNonLocalizedLabel(java.lang.CharSequence)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r2;
        java.lang.CharSequence r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: java.lang.CharSequence;

        $r2 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setNonLocalizedLabel(java.lang.CharSequence)>(r1);

        return $r2;
    }

    public android.content.pm.parsing.ParsingPackageImpl setNonLocalizedLabel(java.lang.CharSequence)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.lang.CharSequence r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: java.lang.CharSequence;

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.CharSequence nonLocalizedLabel> = r1;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setOverlay(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r1;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setOverlay(boolean)>(z0);

        return $r1;
    }

    public android.content.pm.parsing.ParsingPackageImpl setOverlay(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean overlay> = z0;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setOverlayCategory(java.lang.String)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r2;
        java.lang.String r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setOverlayCategory(java.lang.String)>(r1);

        return $r2;
    }

    public android.content.pm.parsing.ParsingPackageImpl setOverlayCategory(java.lang.String)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.lang.String r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: java.lang.String;

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String overlayCategory> = r1;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setOverlayIsStatic(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r1;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setOverlayIsStatic(boolean)>(z0);

        return $r1;
    }

    public android.content.pm.parsing.ParsingPackageImpl setOverlayIsStatic(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean overlayIsStatic> = z0;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setOverlayPriority(int)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r1;
        int i0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setOverlayPriority(int)>(i0);

        return $r1;
    }

    public android.content.pm.parsing.ParsingPackageImpl setOverlayPriority(int)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        int i0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        i0 := @parameter0: int;

        r0.<android.content.pm.parsing.ParsingPackageImpl: int overlayPriority> = i0;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setOverlayTarget(java.lang.String)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r2;
        java.lang.String r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setOverlayTarget(java.lang.String)>(r1);

        return $r2;
    }

    public android.content.pm.parsing.ParsingPackageImpl setOverlayTarget(java.lang.String)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.lang.String r1, $r2;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <android.text.TextUtils: java.lang.String safeIntern(java.lang.String)>(r1);

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String overlayTarget> = $r2;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setOverlayTargetName(java.lang.String)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r2;
        java.lang.String r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setOverlayTargetName(java.lang.String)>(r1);

        return $r2;
    }

    public android.content.pm.parsing.ParsingPackageImpl setOverlayTargetName(java.lang.String)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.lang.String r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: java.lang.String;

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String overlayTargetName> = r1;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setPartiallyDirectBootAware(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r1;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setPartiallyDirectBootAware(boolean)>(z0);

        return $r1;
    }

    public android.content.pm.parsing.ParsingPackageImpl setPartiallyDirectBootAware(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean partiallyDirectBootAware> = z0;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setPermission(java.lang.String)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r2;
        java.lang.String r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setPermission(java.lang.String)>(r1);

        return $r2;
    }

    public android.content.pm.parsing.ParsingPackageImpl setPermission(java.lang.String)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.lang.String r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: java.lang.String;

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String permission> = r1;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setPersistent(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r1;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setPersistent(boolean)>(z0);

        return $r1;
    }

    public android.content.pm.parsing.ParsingPackageImpl setPersistent(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean persistent> = z0;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setPreserveLegacyExternalStorage(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r1;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setPreserveLegacyExternalStorage(boolean)>(z0);

        return $r1;
    }

    public android.content.pm.parsing.ParsingPackageImpl setPreserveLegacyExternalStorage(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean preserveLegacyExternalStorage> = z0;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setProcessName(java.lang.String)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r2;
        java.lang.String r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setProcessName(java.lang.String)>(r1);

        return $r2;
    }

    public android.content.pm.parsing.ParsingPackageImpl setProcessName(java.lang.String)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.lang.String r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: java.lang.String;

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String processName> = r1;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setProcesses(java.util.Map)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r2;
        java.util.Map r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: java.util.Map;

        $r2 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setProcesses(java.util.Map)>(r1);

        return $r2;
    }

    public android.content.pm.parsing.ParsingPackageImpl setProcesses(java.util.Map)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.util.Map r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: java.util.Map;

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.Map processes> = r1;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setProfileableByShell(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r1;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setProfileableByShell(boolean)>(z0);

        return $r1;
    }

    public android.content.pm.parsing.ParsingPackageImpl setProfileableByShell(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean profileableByShell> = z0;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setRealPackage(java.lang.String)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r2;
        java.lang.String r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setRealPackage(java.lang.String)>(r1);

        return $r2;
    }

    public android.content.pm.parsing.ParsingPackageImpl setRealPackage(java.lang.String)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.lang.String r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: java.lang.String;

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String realPackage> = r1;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setRequestLegacyExternalStorage(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r1;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setRequestLegacyExternalStorage(boolean)>(z0);

        return $r1;
    }

    public android.content.pm.parsing.ParsingPackageImpl setRequestLegacyExternalStorage(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean requestLegacyExternalStorage> = z0;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setRequiredAccountType(java.lang.String)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r2;
        java.lang.String r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setRequiredAccountType(java.lang.String)>(r1);

        return $r2;
    }

    public android.content.pm.parsing.ParsingPackageImpl setRequiredAccountType(java.lang.String)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.lang.String r1, $r2;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <android.text.TextUtils: java.lang.String nullIfEmpty(java.lang.String)>(r1);

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String requiredAccountType> = $r2;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setRequiredForAllUsers(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r1;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setRequiredForAllUsers(boolean)>(z0);

        return $r1;
    }

    public android.content.pm.parsing.ParsingPackageImpl setRequiredForAllUsers(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean requiredForAllUsers> = z0;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setRequiresSmallestWidthDp(int)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r1;
        int i0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setRequiresSmallestWidthDp(int)>(i0);

        return $r1;
    }

    public android.content.pm.parsing.ParsingPackageImpl setRequiresSmallestWidthDp(int)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        int i0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        i0 := @parameter0: int;

        r0.<android.content.pm.parsing.ParsingPackageImpl: int requiresSmallestWidthDp> = i0;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setResizeable(int)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r1;
        int i0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setResizeable(int)>(i0);

        return $r1;
    }

    public android.content.pm.parsing.ParsingPackageImpl setResizeable(int)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        int i0;
        java.lang.Boolean $r1;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        i0 := @parameter0: int;

        z0 = 1;

        if i0 != 1 goto label1;

        return r0;

     label1:
        if i0 >= 0 goto label2;

        goto label3;

     label2:
        z0 = 0;

     label3:
        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.Boolean resizeable> = $r1;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setResizeableActivity(java.lang.Boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r2;
        java.lang.Boolean r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: java.lang.Boolean;

        $r2 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setResizeableActivity(java.lang.Boolean)>(r1);

        return $r2;
    }

    public android.content.pm.parsing.ParsingPackageImpl setResizeableActivity(java.lang.Boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.lang.Boolean r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: java.lang.Boolean;

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.Boolean resizeableActivity> = r1;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setResizeableActivityViaSdkVersion(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r1;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setResizeableActivityViaSdkVersion(boolean)>(z0);

        return $r1;
    }

    public android.content.pm.parsing.ParsingPackageImpl setResizeableActivityViaSdkVersion(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean resizeableActivityViaSdkVersion> = z0;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setRestoreAnyVersion(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r1;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setRestoreAnyVersion(boolean)>(z0);

        return $r1;
    }

    public android.content.pm.parsing.ParsingPackageImpl setRestoreAnyVersion(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean restoreAnyVersion> = z0;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setRestrictUpdateHash(byte[])
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r2;
        byte[] r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: byte[];

        $r2 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setRestrictUpdateHash(byte[])>(r1);

        return $r2;
    }

    public transient android.content.pm.parsing.ParsingPackageImpl setRestrictUpdateHash(byte[])
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        byte[] r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: byte[];

        r0.<android.content.pm.parsing.ParsingPackageImpl: byte[] restrictUpdateHash> = r1;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setRestrictedAccountType(java.lang.String)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r2;
        java.lang.String r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setRestrictedAccountType(java.lang.String)>(r1);

        return $r2;
    }

    public android.content.pm.parsing.ParsingPackageImpl setRestrictedAccountType(java.lang.String)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.lang.String r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: java.lang.String;

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String restrictedAccountType> = r1;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setRoundIconRes(int)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r1;
        int i0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setRoundIconRes(int)>(i0);

        return $r1;
    }

    public android.content.pm.parsing.ParsingPackageImpl setRoundIconRes(int)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        int i0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        i0 := @parameter0: int;

        r0.<android.content.pm.parsing.ParsingPackageImpl: int roundIconRes> = i0;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setSharedUserId(java.lang.String)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r2;
        java.lang.String r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setSharedUserId(java.lang.String)>(r1);

        return $r2;
    }

    public android.content.pm.parsing.ParsingPackageImpl setSharedUserId(java.lang.String)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.lang.String r1, $r2;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <android.text.TextUtils: java.lang.String safeIntern(java.lang.String)>(r1);

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String sharedUserId> = $r2;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setSharedUserLabel(int)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r1;
        int i0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setSharedUserLabel(int)>(i0);

        return $r1;
    }

    public android.content.pm.parsing.ParsingPackageImpl setSharedUserLabel(int)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        int i0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        i0 := @parameter0: int;

        r0.<android.content.pm.parsing.ParsingPackageImpl: int sharedUserLabel> = i0;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setSigningDetails(android.content.pm.PackageParser$SigningDetails)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r2;
        android.content.pm.PackageParser$SigningDetails r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: android.content.pm.PackageParser$SigningDetails;

        $r2 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setSigningDetails(android.content.pm.PackageParser$SigningDetails)>(r1);

        return $r2;
    }

    public android.content.pm.parsing.ParsingPackageImpl setSigningDetails(android.content.pm.PackageParser$SigningDetails)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        android.content.pm.PackageParser$SigningDetails r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: android.content.pm.PackageParser$SigningDetails;

        r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.PackageParser$SigningDetails signingDetails> = r1;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setSplitClassLoaderName(int, java.lang.String)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r2;
        int i0;
        java.lang.String r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setSplitClassLoaderName(int,java.lang.String)>(i0, r1);

        return $r2;
    }

    public android.content.pm.parsing.ParsingPackageImpl setSplitClassLoaderName(int, java.lang.String)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        int i0;
        java.lang.String r1;
        java.lang.String[] $r2;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r2 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String[] splitClassLoaderNames>;

        $r2[i0] = r1;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setSplitHasCode(int, boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r1;
        int i0;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r1 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setSplitHasCode(int,boolean)>(i0, z0);

        return $r1;
    }

    public android.content.pm.parsing.ParsingPackageImpl setSplitHasCode(int, boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        int i0, $i1, $i2, i3;
        boolean z0;
        int[] r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 = r0.<android.content.pm.parsing.ParsingPackageImpl: int[] splitFlags>;

        if z0 == 0 goto label1;

        $i2 = r1[i0];

        i3 = $i2 | 4;

        goto label2;

     label1:
        $i1 = r1[i0];

        i3 = $i1 & -5;

     label2:
        r1[i0] = i3;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setStaticSharedLibName(java.lang.String)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r2;
        java.lang.String r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setStaticSharedLibName(java.lang.String)>(r1);

        return $r2;
    }

    public android.content.pm.parsing.ParsingPackageImpl setStaticSharedLibName(java.lang.String)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.lang.String r1, $r2;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <android.text.TextUtils: java.lang.String safeIntern(java.lang.String)>(r1);

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String staticSharedLibName> = $r2;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setStaticSharedLibVersion(long)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r1;
        long l0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        l0 := @parameter0: long;

        $r1 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setStaticSharedLibVersion(long)>(l0);

        return $r1;
    }

    public android.content.pm.parsing.ParsingPackageImpl setStaticSharedLibVersion(long)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        long l0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        l0 := @parameter0: long;

        r0.<android.content.pm.parsing.ParsingPackageImpl: long staticSharedLibVersion> = l0;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setStaticSharedLibrary(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r1;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setStaticSharedLibrary(boolean)>(z0);

        return $r1;
    }

    public android.content.pm.parsing.ParsingPackageImpl setStaticSharedLibrary(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean staticSharedLibrary> = z0;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setSupportsExtraLargeScreens(int)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r1;
        int i0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setSupportsExtraLargeScreens(int)>(i0);

        return $r1;
    }

    public android.content.pm.parsing.ParsingPackageImpl setSupportsExtraLargeScreens(int)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        int i0;
        java.lang.Boolean $r1;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        i0 := @parameter0: int;

        z0 = 1;

        if i0 != 1 goto label1;

        return r0;

     label1:
        if i0 >= 0 goto label2;

        goto label3;

     label2:
        z0 = 0;

     label3:
        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.Boolean supportsExtraLargeScreens> = $r1;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setSupportsLargeScreens(int)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r1;
        int i0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setSupportsLargeScreens(int)>(i0);

        return $r1;
    }

    public android.content.pm.parsing.ParsingPackageImpl setSupportsLargeScreens(int)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        int i0;
        java.lang.Boolean $r1;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        i0 := @parameter0: int;

        z0 = 1;

        if i0 != 1 goto label1;

        return r0;

     label1:
        if i0 >= 0 goto label2;

        goto label3;

     label2:
        z0 = 0;

     label3:
        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.Boolean supportsLargeScreens> = $r1;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setSupportsNormalScreens(int)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r1;
        int i0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setSupportsNormalScreens(int)>(i0);

        return $r1;
    }

    public android.content.pm.parsing.ParsingPackageImpl setSupportsNormalScreens(int)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        int i0;
        java.lang.Boolean $r1;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        i0 := @parameter0: int;

        z0 = 1;

        if i0 != 1 goto label1;

        return r0;

     label1:
        if i0 >= 0 goto label2;

        goto label3;

     label2:
        z0 = 0;

     label3:
        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.Boolean supportsNormalScreens> = $r1;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setSupportsRtl(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r1;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setSupportsRtl(boolean)>(z0);

        return $r1;
    }

    public android.content.pm.parsing.ParsingPackageImpl setSupportsRtl(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean supportsRtl> = z0;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setSupportsSmallScreens(int)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r1;
        int i0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setSupportsSmallScreens(int)>(i0);

        return $r1;
    }

    public android.content.pm.parsing.ParsingPackageImpl setSupportsSmallScreens(int)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        int i0;
        java.lang.Boolean $r1;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        i0 := @parameter0: int;

        z0 = 1;

        if i0 != 1 goto label1;

        return r0;

     label1:
        if i0 >= 0 goto label2;

        goto label3;

     label2:
        z0 = 0;

     label3:
        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.Boolean supportsSmallScreens> = $r1;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setTargetSandboxVersion(int)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r1;
        int i0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setTargetSandboxVersion(int)>(i0);

        return $r1;
    }

    public android.content.pm.parsing.ParsingPackageImpl setTargetSandboxVersion(int)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        int i0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        i0 := @parameter0: int;

        r0.<android.content.pm.parsing.ParsingPackageImpl: int targetSandboxVersion> = i0;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setTargetSdkVersion(int)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r1;
        int i0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setTargetSdkVersion(int)>(i0);

        return $r1;
    }

    public android.content.pm.parsing.ParsingPackageImpl setTargetSdkVersion(int)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        int i0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        i0 := @parameter0: int;

        r0.<android.content.pm.parsing.ParsingPackageImpl: int targetSdkVersion> = i0;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setTaskAffinity(java.lang.String)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r2;
        java.lang.String r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setTaskAffinity(java.lang.String)>(r1);

        return $r2;
    }

    public android.content.pm.parsing.ParsingPackageImpl setTaskAffinity(java.lang.String)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.lang.String r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: java.lang.String;

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String taskAffinity> = r1;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setTestOnly(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r1;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setTestOnly(boolean)>(z0);

        return $r1;
    }

    public android.content.pm.parsing.ParsingPackageImpl setTestOnly(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean testOnly> = z0;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setTheme(int)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r1;
        int i0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setTheme(int)>(i0);

        return $r1;
    }

    public android.content.pm.parsing.ParsingPackageImpl setTheme(int)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        int i0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        i0 := @parameter0: int;

        r0.<android.content.pm.parsing.ParsingPackageImpl: int theme> = i0;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setUiOptions(int)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r1;
        int i0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setUiOptions(int)>(i0);

        return $r1;
    }

    public android.content.pm.parsing.ParsingPackageImpl setUiOptions(int)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        int i0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        i0 := @parameter0: int;

        r0.<android.content.pm.parsing.ParsingPackageImpl: int uiOptions> = i0;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setUpgradeKeySets(java.util.Set)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r2;
        java.util.Set r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: java.util.Set;

        $r2 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setUpgradeKeySets(java.util.Set)>(r1);

        return $r2;
    }

    public android.content.pm.parsing.ParsingPackageImpl setUpgradeKeySets(java.util.Set)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.util.Set r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: java.util.Set;

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.Set upgradeKeySets> = r1;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setUse32BitAbi(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r1;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setUse32BitAbi(boolean)>(z0);

        return $r1;
    }

    public android.content.pm.parsing.ParsingPackageImpl setUse32BitAbi(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean use32BitAbi> = z0;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setUseEmbeddedDex(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r1;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setUseEmbeddedDex(boolean)>(z0);

        return $r1;
    }

    public android.content.pm.parsing.ParsingPackageImpl setUseEmbeddedDex(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean useEmbeddedDex> = z0;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setUsesCleartextTraffic(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r1;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setUsesCleartextTraffic(boolean)>(z0);

        return $r1;
    }

    public android.content.pm.parsing.ParsingPackageImpl setUsesCleartextTraffic(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean usesCleartextTraffic> = z0;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setUsesNonSdkApi(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r1;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setUsesNonSdkApi(boolean)>(z0);

        return $r1;
    }

    public android.content.pm.parsing.ParsingPackageImpl setUsesNonSdkApi(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean usesNonSdkApi> = z0;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setVersionName(java.lang.String)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r2;
        java.lang.String r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setVersionName(java.lang.String)>(r1);

        return $r2;
    }

    public android.content.pm.parsing.ParsingPackageImpl setVersionName(java.lang.String)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.lang.String r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: java.lang.String;

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String versionName> = r1;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setVisibleToInstantApps(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r1;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setVisibleToInstantApps(boolean)>(z0);

        return $r1;
    }

    public android.content.pm.parsing.ParsingPackageImpl setVisibleToInstantApps(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean visibleToInstantApps> = z0;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setVmSafeMode(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r1;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setVmSafeMode(boolean)>(z0);

        return $r1;
    }

    public android.content.pm.parsing.ParsingPackageImpl setVmSafeMode(boolean)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        boolean z0;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        z0 := @parameter0: boolean;

        r0.<android.content.pm.parsing.ParsingPackageImpl: boolean vmSafeMode> = z0;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setVolumeUuid(java.lang.String)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r2;
        java.lang.String r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setVolumeUuid(java.lang.String)>(r1);

        return $r2;
    }

    public android.content.pm.parsing.ParsingPackageImpl setVolumeUuid(java.lang.String)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.lang.String r1, $r2;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <android.text.TextUtils: java.lang.String safeIntern(java.lang.String)>(r1);

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String volumeUuid> = $r2;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage setZygotePreloadName(java.lang.String)
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r2;
        java.lang.String r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl setZygotePreloadName(java.lang.String)>(r1);

        return $r2;
    }

    public android.content.pm.parsing.ParsingPackageImpl setZygotePreloadName(java.lang.String)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.lang.String r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: java.lang.String;

        r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String zygotePreloadName> = r1;

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage sortActivities()
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $r1 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl sortActivities()>();

        return $r1;
    }

    public android.content.pm.parsing.ParsingPackageImpl sortActivities()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.util.Comparator $r1;
        java.util.List $r2;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $r2 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List activities>;

        $r1 = <android.content.pm.parsing.ParsingPackageImpl: java.util.Comparator ORDER_COMPARATOR>;

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r2, $r1);

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage sortReceivers()
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $r1 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl sortReceivers()>();

        return $r1;
    }

    public android.content.pm.parsing.ParsingPackageImpl sortReceivers()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.util.Comparator $r1;
        java.util.List $r2;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $r2 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List receivers>;

        $r1 = <android.content.pm.parsing.ParsingPackageImpl: java.util.Comparator ORDER_COMPARATOR>;

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r2, $r1);

        return r0;
    }

    public volatile android.content.pm.parsing.ParsingPackage sortServices()
    {
        android.content.pm.parsing.ParsingPackageImpl r0, $r1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $r1 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.ParsingPackageImpl sortServices()>();

        return $r1;
    }

    public android.content.pm.parsing.ParsingPackageImpl sortServices()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.util.Comparator $r1;
        java.util.List $r2;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $r2 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List services>;

        $r1 = <android.content.pm.parsing.ParsingPackageImpl: java.util.Comparator ORDER_COMPARATOR>;

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r2, $r1);

        return r0;
    }

    public android.content.pm.ApplicationInfo toAppInfoWithoutState()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        android.content.pm.ApplicationInfo r1;
        int $i0, $i1;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.ApplicationInfo toAppInfoWithoutStateWithoutFlags()>();

        $i0 = staticinvoke <android.content.pm.parsing.PackageInfoWithoutStateUtils: int appInfoFlags(android.content.pm.parsing.ParsingPackageRead)>(r0);

        r1.<android.content.pm.ApplicationInfo: int flags> = $i0;

        $i1 = staticinvoke <android.content.pm.parsing.PackageInfoWithoutStateUtils: int appInfoPrivateFlags(android.content.pm.parsing.ParsingPackageRead)>(r0);

        r1.<android.content.pm.ApplicationInfo: int privateFlags> = $i1;

        return r1;
    }

    public android.content.pm.ApplicationInfo toAppInfoWithoutStateWithoutFlags()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        android.content.pm.ApplicationInfo $r2;
        java.lang.String $r3, $r4, $r5, $r6, $r7, $r10, $r11, $r12, $r16, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r28, $r29, $r30, $r31, $r32, $r34, $r35;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23;
        boolean $z0, $z1, $z2;
        java.lang.CharSequence $r8, $r9, $r27;
        java.lang.String[] $r13, $r15, $r25, $r26;
        android.util.SparseArray $r14;
        java.util.UUID $r17;
        long $l15;
        float $f0, $f1;
        android.os.Bundle $r33;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $r2 = new android.content.pm.ApplicationInfo;

        specialinvoke $r2.<android.content.pm.ApplicationInfo: void <init>()>();

        $r3 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String appComponentFactory>;

        $r2.<android.content.pm.ApplicationInfo: java.lang.String appComponentFactory> = $r3;

        $r4 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String backupAgentName>;

        $r2.<android.content.pm.ApplicationInfo: java.lang.String backupAgentName> = $r4;

        $i0 = r0.<android.content.pm.parsing.ParsingPackageImpl: int banner>;

        $r2.<android.content.pm.ApplicationInfo: int banner> = $i0;

        $i1 = r0.<android.content.pm.parsing.ParsingPackageImpl: int category>;

        $r2.<android.content.pm.ApplicationInfo: int category> = $i1;

        $r5 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String classLoaderName>;

        $r2.<android.content.pm.ApplicationInfo: java.lang.String classLoaderName> = $r5;

        $r6 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String className>;

        $r2.<android.content.pm.ApplicationInfo: java.lang.String className> = $r6;

        $i2 = r0.<android.content.pm.parsing.ParsingPackageImpl: int compatibleWidthLimitDp>;

        $r2.<android.content.pm.ApplicationInfo: int compatibleWidthLimitDp> = $i2;

        $i3 = r0.<android.content.pm.parsing.ParsingPackageImpl: int compileSdkVersion>;

        $r2.<android.content.pm.ApplicationInfo: int compileSdkVersion> = $i3;

        $r7 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String compileSdkVersionCodeName>;

        $r2.<android.content.pm.ApplicationInfo: java.lang.String compileSdkVersionCodename> = $r7;

        $i4 = r0.<android.content.pm.parsing.ParsingPackageImpl: int descriptionRes>;

        $r2.<android.content.pm.ApplicationInfo: int descriptionRes> = $i4;

        $z0 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean enabled>;

        $r2.<android.content.pm.ApplicationInfo: boolean enabled> = $z0;

        $i5 = r0.<android.content.pm.parsing.ParsingPackageImpl: int fullBackupContent>;

        $r2.<android.content.pm.ApplicationInfo: int fullBackupContent> = $i5;

        $z1 = <android.content.pm.PackageParser: boolean sUseRoundIcon>;

        if $z1 == 0 goto label1;

        i16 = r0.<android.content.pm.parsing.ParsingPackageImpl: int roundIconRes>;

        if i16 == 0 goto label1;

        goto label2;

     label1:
        i16 = r0.<android.content.pm.parsing.ParsingPackageImpl: int iconRes>;

     label2:
        $r2.<android.content.pm.ApplicationInfo: int icon> = i16;

        $i17 = r0.<android.content.pm.parsing.ParsingPackageImpl: int iconRes>;

        $r2.<android.content.pm.ApplicationInfo: int iconRes> = $i17;

        $i18 = r0.<android.content.pm.parsing.ParsingPackageImpl: int roundIconRes>;

        $r2.<android.content.pm.ApplicationInfo: int roundIconRes> = $i18;

        $i19 = r0.<android.content.pm.parsing.ParsingPackageImpl: int installLocation>;

        $r2.<android.content.pm.ApplicationInfo: int installLocation> = $i19;

        $i20 = r0.<android.content.pm.parsing.ParsingPackageImpl: int labelRes>;

        $r2.<android.content.pm.ApplicationInfo: int labelRes> = $i20;

        $i21 = r0.<android.content.pm.parsing.ParsingPackageImpl: int largestWidthLimitDp>;

        $r2.<android.content.pm.ApplicationInfo: int largestWidthLimitDp> = $i21;

        $i22 = r0.<android.content.pm.parsing.ParsingPackageImpl: int logo>;

        $r2.<android.content.pm.ApplicationInfo: int logo> = $i22;

        $r32 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String manageSpaceActivityName>;

        $r2.<android.content.pm.ApplicationInfo: java.lang.String manageSpaceActivityName> = $r32;

        $f0 = r0.<android.content.pm.parsing.ParsingPackageImpl: float maxAspectRatio>;

        $r2.<android.content.pm.ApplicationInfo: float maxAspectRatio> = $f0;

        $r33 = r0.<android.content.pm.parsing.ParsingPackageImpl: android.os.Bundle metaData>;

        $r2.<android.content.pm.ApplicationInfo: android.os.Bundle metaData> = $r33;

        $f1 = r0.<android.content.pm.parsing.ParsingPackageImpl: float minAspectRatio>;

        $r2.<android.content.pm.ApplicationInfo: float minAspectRatio> = $f1;

        $i23 = r0.<android.content.pm.parsing.ParsingPackageImpl: int minSdkVersion>;

        $r2.<android.content.pm.ApplicationInfo: int minSdkVersion> = $i23;

        $r34 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String className>;

        $r2.<android.content.pm.ApplicationInfo: java.lang.String name> = $r34;

        $r35 = $r2.<android.content.pm.ApplicationInfo: java.lang.String name>;

        if $r35 == null goto label3;

        $r30 = $r2.<android.content.pm.ApplicationInfo: java.lang.String name>;

        $r31 = virtualinvoke $r30.<java.lang.String: java.lang.String trim()>();

        $r2.<android.content.pm.ApplicationInfo: java.lang.String name> = $r31;

     label3:
        $i6 = r0.<android.content.pm.parsing.ParsingPackageImpl: int networkSecurityConfigRes>;

        $r2.<android.content.pm.ApplicationInfo: int networkSecurityConfigRes> = $i6;

        $r8 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.CharSequence nonLocalizedLabel>;

        $r2.<android.content.pm.ApplicationInfo: java.lang.CharSequence nonLocalizedLabel> = $r8;

        $r9 = $r2.<android.content.pm.ApplicationInfo: java.lang.CharSequence nonLocalizedLabel>;

        if $r9 == null goto label4;

        $r27 = $r2.<android.content.pm.ApplicationInfo: java.lang.CharSequence nonLocalizedLabel>;

        $r28 = interfaceinvoke $r27.<java.lang.CharSequence: java.lang.String toString()>();

        $r29 = virtualinvoke $r28.<java.lang.String: java.lang.String trim()>();

        $r2.<android.content.pm.ApplicationInfo: java.lang.CharSequence nonLocalizedLabel> = $r29;

     label4:
        $r10 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String packageName>;

        $r2.<android.content.pm.ApplicationInfo: java.lang.String packageName> = $r10;

        $r11 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String permission>;

        $r2.<android.content.pm.ApplicationInfo: java.lang.String permission> = $r11;

        $r12 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String getProcessName()>();

        $r2.<android.content.pm.ApplicationInfo: java.lang.String processName> = $r12;

        $i7 = r0.<android.content.pm.parsing.ParsingPackageImpl: int requiresSmallestWidthDp>;

        $r2.<android.content.pm.ApplicationInfo: int requiresSmallestWidthDp> = $i7;

        $r13 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String[] splitClassLoaderNames>;

        $r2.<android.content.pm.ApplicationInfo: java.lang.String[] splitClassLoaderNames> = $r13;

        $r14 = r0.<android.content.pm.parsing.ParsingPackageImpl: android.util.SparseArray splitDependencies>;

        $r2.<android.content.pm.ApplicationInfo: android.util.SparseArray splitDependencies> = $r14;

        $r15 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String[] splitNames>;

        $r2.<android.content.pm.ApplicationInfo: java.lang.String[] splitNames> = $r15;

        $r16 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String volumeUuid>;

        $r17 = staticinvoke <android.os.storage.StorageManager: java.util.UUID convert(java.lang.String)>($r16);

        $r2.<android.content.pm.ApplicationInfo: java.util.UUID storageUuid> = $r17;

        $i8 = r0.<android.content.pm.parsing.ParsingPackageImpl: int targetSandboxVersion>;

        $r2.<android.content.pm.ApplicationInfo: int targetSandboxVersion> = $i8;

        $i9 = r0.<android.content.pm.parsing.ParsingPackageImpl: int targetSdkVersion>;

        $r2.<android.content.pm.ApplicationInfo: int targetSdkVersion> = $i9;

        $r18 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String taskAffinity>;

        $r2.<android.content.pm.ApplicationInfo: java.lang.String taskAffinity> = $r18;

        $i10 = r0.<android.content.pm.parsing.ParsingPackageImpl: int theme>;

        $r2.<android.content.pm.ApplicationInfo: int theme> = $i10;

        $i11 = r0.<android.content.pm.parsing.ParsingPackageImpl: int uiOptions>;

        $r2.<android.content.pm.ApplicationInfo: int uiOptions> = $i11;

        $r19 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String volumeUuid>;

        $r2.<android.content.pm.ApplicationInfo: java.lang.String volumeUuid> = $r19;

        $r20 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String zygotePreloadName>;

        $r2.<android.content.pm.ApplicationInfo: java.lang.String zygotePreloadName> = $r20;

        $z2 = virtualinvoke r0.<android.content.pm.parsing.ParsingPackageImpl: boolean isCrossProfile()>();

        $r2.<android.content.pm.ApplicationInfo: boolean crossProfile> = $z2;

        $i12 = r0.<android.content.pm.parsing.ParsingPackageImpl: int gwpAsanMode>;

        virtualinvoke $r2.<android.content.pm.ApplicationInfo: void setGwpAsanMode(int)>($i12);

        $r21 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String baseCodePath>;

        virtualinvoke $r2.<android.content.pm.ApplicationInfo: void setBaseCodePath(java.lang.String)>($r21);

        $r22 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String baseCodePath>;

        virtualinvoke $r2.<android.content.pm.ApplicationInfo: void setBaseResourcePath(java.lang.String)>($r22);

        $r23 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String codePath>;

        virtualinvoke $r2.<android.content.pm.ApplicationInfo: void setCodePath(java.lang.String)>($r23);

        $r24 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String codePath>;

        virtualinvoke $r2.<android.content.pm.ApplicationInfo: void setResourcePath(java.lang.String)>($r24);

        $r25 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String[] splitCodePaths>;

        virtualinvoke $r2.<android.content.pm.ApplicationInfo: void setSplitCodePaths(java.lang.String[])>($r25);

        $r26 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String[] splitCodePaths>;

        virtualinvoke $r2.<android.content.pm.ApplicationInfo: void setSplitResourcePaths(java.lang.String[])>($r26);

        $i14 = r0.<android.content.pm.parsing.ParsingPackageImpl: int versionCodeMajor>;

        $i13 = r0.<android.content.pm.parsing.ParsingPackageImpl: int versionCode>;

        $l15 = staticinvoke <android.content.pm.PackageInfo: long composeLongVersionCode(int,int)>($i14, $i13);

        virtualinvoke $r2.<android.content.pm.ApplicationInfo: void setVersionCode(long)>($l15);

        return $r2;
    }

    public java.lang.String toString()
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        java.lang.StringBuilder $r2;
        int $i0;
        java.lang.String $r4, $r7, $r10;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package{");

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r7 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String packageName>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r10 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.content.pm.parsing.ParsingPackageImpl r0;
        android.os.Parcel r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, i30;
        java.lang.Boolean $r2, $r4, $r6, $r8, $r10, $r12, $r93;
        com.android.internal.util.Parcelling$BuiltIn$ForBoolean $r3, $r5, $r7, $r9, $r11, $r13, $r94;
        java.lang.String $r14, $r16, $r17, $r19, $r20, $r21, $r22, $r23, $r25, $r26, $r29, $r40, $r70, $r73, $r77, $r78, $r79, $r80, $r81, $r83, $r84, $r85, $r86;
        com.android.internal.util.Parcelling$BuiltIn$ForInternedString $r15, $r18, $r24, $r30, $r41, $r71;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32, $z33, $z34, $z35, $z36, $z37, $z38, $z39, $z40, $z41, $z42, $z43, $z44;
        java.util.Map $r27, $r55, $r68;
        com.android.internal.util.Parcelling$BuiltIn$ForInternedStringValueMap $r28;
        long $l6;
        java.util.List $r31, $r33, $r35, $r37, $r42, $r43, $r44, $r46, $r47, $r49, $r51, $r56, $r58, $r59, $r60, $r61, $r62, $r63, $r64, $r65, $r66, $r74, $r75;
        com.android.internal.util.Parcelling$BuiltIn$ForInternedStringList $r32, $r34, $r36, $r38, $r48, $r50, $r52, $r57, $r76;
        long[] $r39;
        byte[] $r45;
        java.util.Set $r53;
        com.android.internal.util.Parcelling$BuiltIn$ForStringSet $r54;
        android.content.pm.parsing.component.ParsedIntentInfo$StringPairListParceler $r67;
        android.os.Bundle $r69;
        android.content.pm.PackageParser$SigningDetails $r72;
        float $f0, $f1;
        java.lang.CharSequence $r82;
        java.lang.String[] $r87, $r88, $r91, $r97;
        android.util.SparseArray $r89;
        int[] $r90, $r92;
        android.util.ArraySet $r95;
        android.util.SparseIntArray $r96;
        java.lang.String[][] r98, r99;

        r0 := @this: android.content.pm.parsing.ParsingPackageImpl;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $r3 = <android.content.pm.parsing.ParsingPackageImpl: com.android.internal.util.Parcelling$BuiltIn$ForBoolean sForBoolean>;

        $r2 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.Boolean supportsSmallScreens>;

        virtualinvoke $r3.<com.android.internal.util.Parcelling$BuiltIn$ForBoolean: void parcel(java.lang.Boolean,android.os.Parcel,int)>($r2, r1, i0);

        $r5 = <android.content.pm.parsing.ParsingPackageImpl: com.android.internal.util.Parcelling$BuiltIn$ForBoolean sForBoolean>;

        $r4 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.Boolean supportsNormalScreens>;

        virtualinvoke $r5.<com.android.internal.util.Parcelling$BuiltIn$ForBoolean: void parcel(java.lang.Boolean,android.os.Parcel,int)>($r4, r1, i0);

        $r7 = <android.content.pm.parsing.ParsingPackageImpl: com.android.internal.util.Parcelling$BuiltIn$ForBoolean sForBoolean>;

        $r6 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.Boolean supportsLargeScreens>;

        virtualinvoke $r7.<com.android.internal.util.Parcelling$BuiltIn$ForBoolean: void parcel(java.lang.Boolean,android.os.Parcel,int)>($r6, r1, i0);

        $r9 = <android.content.pm.parsing.ParsingPackageImpl: com.android.internal.util.Parcelling$BuiltIn$ForBoolean sForBoolean>;

        $r8 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.Boolean supportsExtraLargeScreens>;

        virtualinvoke $r9.<com.android.internal.util.Parcelling$BuiltIn$ForBoolean: void parcel(java.lang.Boolean,android.os.Parcel,int)>($r8, r1, i0);

        $r11 = <android.content.pm.parsing.ParsingPackageImpl: com.android.internal.util.Parcelling$BuiltIn$ForBoolean sForBoolean>;

        $r10 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.Boolean resizeable>;

        virtualinvoke $r11.<com.android.internal.util.Parcelling$BuiltIn$ForBoolean: void parcel(java.lang.Boolean,android.os.Parcel,int)>($r10, r1, i0);

        $r13 = <android.content.pm.parsing.ParsingPackageImpl: com.android.internal.util.Parcelling$BuiltIn$ForBoolean sForBoolean>;

        $r12 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.Boolean anyDensity>;

        virtualinvoke $r13.<com.android.internal.util.Parcelling$BuiltIn$ForBoolean: void parcel(java.lang.Boolean,android.os.Parcel,int)>($r12, r1, i0);

        $i1 = r0.<android.content.pm.parsing.ParsingPackageImpl: int versionCode>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $i2 = r0.<android.content.pm.parsing.ParsingPackageImpl: int versionCodeMajor>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i2);

        $i3 = r0.<android.content.pm.parsing.ParsingPackageImpl: int baseRevisionCode>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i3);

        $r15 = <android.content.pm.parsing.ParsingPackageImpl: com.android.internal.util.Parcelling$BuiltIn$ForInternedString sForInternedString>;

        $r14 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String versionName>;

        virtualinvoke $r15.<com.android.internal.util.Parcelling$BuiltIn$ForInternedString: void parcel(java.lang.String,android.os.Parcel,int)>($r14, r1, i0);

        $i4 = r0.<android.content.pm.parsing.ParsingPackageImpl: int compileSdkVersion>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i4);

        $r16 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String compileSdkVersionCodeName>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r16);

        $r18 = <android.content.pm.parsing.ParsingPackageImpl: com.android.internal.util.Parcelling$BuiltIn$ForInternedString sForInternedString>;

        $r17 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String packageName>;

        virtualinvoke $r18.<com.android.internal.util.Parcelling$BuiltIn$ForInternedString: void parcel(java.lang.String,android.os.Parcel,int)>($r17, r1, i0);

        $r19 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String realPackage>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r19);

        $r20 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String baseCodePath>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r20);

        $z0 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean requiredForAllUsers>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z0);

        $r21 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String restrictedAccountType>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r21);

        $r22 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String requiredAccountType>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r22);

        $r24 = <android.content.pm.parsing.ParsingPackageImpl: com.android.internal.util.Parcelling$BuiltIn$ForInternedString sForInternedString>;

        $r23 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String overlayTarget>;

        virtualinvoke $r24.<com.android.internal.util.Parcelling$BuiltIn$ForInternedString: void parcel(java.lang.String,android.os.Parcel,int)>($r23, r1, i0);

        $r25 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String overlayTargetName>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r25);

        $r26 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String overlayCategory>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r26);

        $i5 = r0.<android.content.pm.parsing.ParsingPackageImpl: int overlayPriority>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i5);

        $z1 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean overlayIsStatic>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z1);

        $r28 = <android.content.pm.parsing.ParsingPackageImpl: com.android.internal.util.Parcelling$BuiltIn$ForInternedStringValueMap sForInternedStringValueMap>;

        $r27 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.Map overlayables>;

        virtualinvoke $r28.<com.android.internal.util.Parcelling$BuiltIn$ForInternedStringValueMap: void parcel(java.util.Map,android.os.Parcel,int)>($r27, r1, i0);

        $r30 = <android.content.pm.parsing.ParsingPackageImpl: com.android.internal.util.Parcelling$BuiltIn$ForInternedString sForInternedString>;

        $r29 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String staticSharedLibName>;

        virtualinvoke $r30.<com.android.internal.util.Parcelling$BuiltIn$ForInternedString: void parcel(java.lang.String,android.os.Parcel,int)>($r29, r1, i0);

        $l6 = r0.<android.content.pm.parsing.ParsingPackageImpl: long staticSharedLibVersion>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l6);

        $r32 = <android.content.pm.parsing.ParsingPackageImpl: com.android.internal.util.Parcelling$BuiltIn$ForInternedStringList sForInternedStringList>;

        $r31 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List libraryNames>;

        virtualinvoke $r32.<com.android.internal.util.Parcelling$BuiltIn$ForInternedStringList: void parcel(java.util.List,android.os.Parcel,int)>($r31, r1, i0);

        $r34 = <android.content.pm.parsing.ParsingPackageImpl: com.android.internal.util.Parcelling$BuiltIn$ForInternedStringList sForInternedStringList>;

        $r33 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List usesLibraries>;

        virtualinvoke $r34.<com.android.internal.util.Parcelling$BuiltIn$ForInternedStringList: void parcel(java.util.List,android.os.Parcel,int)>($r33, r1, i0);

        $r36 = <android.content.pm.parsing.ParsingPackageImpl: com.android.internal.util.Parcelling$BuiltIn$ForInternedStringList sForInternedStringList>;

        $r35 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List usesOptionalLibraries>;

        virtualinvoke $r36.<com.android.internal.util.Parcelling$BuiltIn$ForInternedStringList: void parcel(java.util.List,android.os.Parcel,int)>($r35, r1, i0);

        $r38 = <android.content.pm.parsing.ParsingPackageImpl: com.android.internal.util.Parcelling$BuiltIn$ForInternedStringList sForInternedStringList>;

        $r37 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List usesStaticLibraries>;

        virtualinvoke $r38.<com.android.internal.util.Parcelling$BuiltIn$ForInternedStringList: void parcel(java.util.List,android.os.Parcel,int)>($r37, r1, i0);

        $r39 = r0.<android.content.pm.parsing.ParsingPackageImpl: long[] usesStaticLibrariesVersions>;

        virtualinvoke r1.<android.os.Parcel: void writeLongArray(long[])>($r39);

        r98 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String[][] usesStaticLibrariesCertDigests>;

        if r98 != null goto label1;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(-1);

        goto label3;

     label1:
        $i7 = lengthof r98;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i7);

        i30 = 0;

     label2:
        r99 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String[][] usesStaticLibrariesCertDigests>;

        $i8 = lengthof r99;

        if i30 >= $i8 goto label3;

        $r97 = r99[i30];

        virtualinvoke r1.<android.os.Parcel: void writeStringArray(java.lang.String[])>($r97);

        i30 = i30 + 1;

        goto label2;

     label3:
        $r41 = <android.content.pm.parsing.ParsingPackageImpl: com.android.internal.util.Parcelling$BuiltIn$ForInternedString sForInternedString>;

        $r40 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String sharedUserId>;

        virtualinvoke $r41.<com.android.internal.util.Parcelling$BuiltIn$ForInternedString: void parcel(java.lang.String,android.os.Parcel,int)>($r40, r1, i0);

        $i9 = r0.<android.content.pm.parsing.ParsingPackageImpl: int sharedUserLabel>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i9);

        $r42 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List configPreferences>;

        virtualinvoke r1.<android.os.Parcel: void writeTypedList(java.util.List)>($r42);

        $r43 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List reqFeatures>;

        virtualinvoke r1.<android.os.Parcel: void writeTypedList(java.util.List)>($r43);

        $r44 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List featureGroups>;

        virtualinvoke r1.<android.os.Parcel: void writeTypedList(java.util.List)>($r44);

        $r45 = r0.<android.content.pm.parsing.ParsingPackageImpl: byte[] restrictUpdateHash>;

        virtualinvoke r1.<android.os.Parcel: void writeByteArray(byte[])>($r45);

        $r46 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List originalPackages>;

        virtualinvoke r1.<android.os.Parcel: void writeStringList(java.util.List)>($r46);

        $r48 = <android.content.pm.parsing.ParsingPackageImpl: com.android.internal.util.Parcelling$BuiltIn$ForInternedStringList sForInternedStringList>;

        $r47 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List adoptPermissions>;

        virtualinvoke $r48.<com.android.internal.util.Parcelling$BuiltIn$ForInternedStringList: void parcel(java.util.List,android.os.Parcel,int)>($r47, r1, i0);

        $r50 = <android.content.pm.parsing.ParsingPackageImpl: com.android.internal.util.Parcelling$BuiltIn$ForInternedStringList sForInternedStringList>;

        $r49 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List requestedPermissions>;

        virtualinvoke $r50.<com.android.internal.util.Parcelling$BuiltIn$ForInternedStringList: void parcel(java.util.List,android.os.Parcel,int)>($r49, r1, i0);

        $r52 = <android.content.pm.parsing.ParsingPackageImpl: com.android.internal.util.Parcelling$BuiltIn$ForInternedStringList sForInternedStringList>;

        $r51 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List implicitPermissions>;

        virtualinvoke $r52.<com.android.internal.util.Parcelling$BuiltIn$ForInternedStringList: void parcel(java.util.List,android.os.Parcel,int)>($r51, r1, i0);

        $r54 = <android.content.pm.parsing.ParsingPackageImpl: com.android.internal.util.Parcelling$BuiltIn$ForStringSet sForStringSet>;

        $r53 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.Set upgradeKeySets>;

        virtualinvoke $r54.<com.android.internal.util.Parcelling$BuiltIn$ForStringSet: void parcel(java.util.Set,android.os.Parcel,int)>($r53, r1, i0);

        $r55 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.Map keySetMapping>;

        virtualinvoke r1.<android.os.Parcel: void writeMap(java.util.Map)>($r55);

        $r57 = <android.content.pm.parsing.ParsingPackageImpl: com.android.internal.util.Parcelling$BuiltIn$ForInternedStringList sForInternedStringList>;

        $r56 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List protectedBroadcasts>;

        virtualinvoke $r57.<com.android.internal.util.Parcelling$BuiltIn$ForInternedStringList: void parcel(java.util.List,android.os.Parcel,int)>($r56, r1, i0);

        $r58 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List activities>;

        virtualinvoke r1.<android.os.Parcel: void writeTypedList(java.util.List)>($r58);

        $r59 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List receivers>;

        virtualinvoke r1.<android.os.Parcel: void writeTypedList(java.util.List)>($r59);

        $r60 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List services>;

        virtualinvoke r1.<android.os.Parcel: void writeTypedList(java.util.List)>($r60);

        $r61 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List providers>;

        virtualinvoke r1.<android.os.Parcel: void writeTypedList(java.util.List)>($r61);

        $r62 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List attributions>;

        virtualinvoke r1.<android.os.Parcel: void writeTypedList(java.util.List)>($r62);

        $r63 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List permissions>;

        virtualinvoke r1.<android.os.Parcel: void writeTypedList(java.util.List)>($r63);

        $r64 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List permissionGroups>;

        virtualinvoke r1.<android.os.Parcel: void writeTypedList(java.util.List)>($r64);

        $r65 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List instrumentations>;

        virtualinvoke r1.<android.os.Parcel: void writeTypedList(java.util.List)>($r65);

        $r67 = <android.content.pm.parsing.ParsingPackageImpl: android.content.pm.parsing.component.ParsedIntentInfo$StringPairListParceler sForIntentInfoPairs>;

        $r66 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List preferredActivityFilters>;

        virtualinvoke $r67.<android.content.pm.parsing.component.ParsedIntentInfo$StringPairListParceler: void parcel(java.util.List,android.os.Parcel,int)>($r66, r1, i0);

        $r68 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.Map processes>;

        virtualinvoke r1.<android.os.Parcel: void writeMap(java.util.Map)>($r68);

        $r69 = r0.<android.content.pm.parsing.ParsingPackageImpl: android.os.Bundle metaData>;

        virtualinvoke r1.<android.os.Parcel: void writeBundle(android.os.Bundle)>($r69);

        $r71 = <android.content.pm.parsing.ParsingPackageImpl: com.android.internal.util.Parcelling$BuiltIn$ForInternedString sForInternedString>;

        $r70 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String volumeUuid>;

        virtualinvoke $r71.<com.android.internal.util.Parcelling$BuiltIn$ForInternedString: void parcel(java.lang.String,android.os.Parcel,int)>($r70, r1, i0);

        $r72 = r0.<android.content.pm.parsing.ParsingPackageImpl: android.content.pm.PackageParser$SigningDetails signingDetails>;

        virtualinvoke r1.<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>($r72, i0);

        $r73 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String codePath>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r73);

        $z2 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean use32BitAbi>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z2);

        $z3 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean visibleToInstantApps>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z3);

        $z4 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean forceQueryable>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z4);

        $r74 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List queriesIntents>;

        virtualinvoke r1.<android.os.Parcel: void writeParcelableList(java.util.List,int)>($r74, i0);

        $r76 = <android.content.pm.parsing.ParsingPackageImpl: com.android.internal.util.Parcelling$BuiltIn$ForInternedStringList sForInternedStringList>;

        $r75 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.util.List queriesPackages>;

        virtualinvoke $r76.<com.android.internal.util.Parcelling$BuiltIn$ForInternedStringList: void parcel(java.util.List,android.os.Parcel,int)>($r75, r1, i0);

        $r77 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String appComponentFactory>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r77);

        $r78 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String backupAgentName>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r78);

        $i10 = r0.<android.content.pm.parsing.ParsingPackageImpl: int banner>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i10);

        $i11 = r0.<android.content.pm.parsing.ParsingPackageImpl: int category>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i11);

        $r79 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String classLoaderName>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r79);

        $r80 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String className>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r80);

        $i12 = r0.<android.content.pm.parsing.ParsingPackageImpl: int compatibleWidthLimitDp>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i12);

        $i13 = r0.<android.content.pm.parsing.ParsingPackageImpl: int descriptionRes>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i13);

        $z5 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean enabled>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z5);

        $z6 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean crossProfile>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z6);

        $i14 = r0.<android.content.pm.parsing.ParsingPackageImpl: int fullBackupContent>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i14);

        $i15 = r0.<android.content.pm.parsing.ParsingPackageImpl: int iconRes>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i15);

        $i16 = r0.<android.content.pm.parsing.ParsingPackageImpl: int installLocation>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i16);

        $i17 = r0.<android.content.pm.parsing.ParsingPackageImpl: int labelRes>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i17);

        $i18 = r0.<android.content.pm.parsing.ParsingPackageImpl: int largestWidthLimitDp>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i18);

        $i19 = r0.<android.content.pm.parsing.ParsingPackageImpl: int logo>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i19);

        $r81 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String manageSpaceActivityName>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r81);

        $f0 = r0.<android.content.pm.parsing.ParsingPackageImpl: float maxAspectRatio>;

        virtualinvoke r1.<android.os.Parcel: void writeFloat(float)>($f0);

        $f1 = r0.<android.content.pm.parsing.ParsingPackageImpl: float minAspectRatio>;

        virtualinvoke r1.<android.os.Parcel: void writeFloat(float)>($f1);

        $i20 = r0.<android.content.pm.parsing.ParsingPackageImpl: int minSdkVersion>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i20);

        $i21 = r0.<android.content.pm.parsing.ParsingPackageImpl: int networkSecurityConfigRes>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i21);

        $r82 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.CharSequence nonLocalizedLabel>;

        virtualinvoke r1.<android.os.Parcel: void writeCharSequence(java.lang.CharSequence)>($r82);

        $r83 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String permission>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r83);

        $r84 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String processName>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r84);

        $i22 = r0.<android.content.pm.parsing.ParsingPackageImpl: int requiresSmallestWidthDp>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i22);

        $i23 = r0.<android.content.pm.parsing.ParsingPackageImpl: int roundIconRes>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i23);

        $i24 = r0.<android.content.pm.parsing.ParsingPackageImpl: int targetSandboxVersion>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i24);

        $i25 = r0.<android.content.pm.parsing.ParsingPackageImpl: int targetSdkVersion>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i25);

        $r85 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String taskAffinity>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r85);

        $i26 = r0.<android.content.pm.parsing.ParsingPackageImpl: int theme>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i26);

        $i27 = r0.<android.content.pm.parsing.ParsingPackageImpl: int uiOptions>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i27);

        $r86 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String zygotePreloadName>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r86);

        $r87 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String[] splitClassLoaderNames>;

        virtualinvoke r1.<android.os.Parcel: void writeStringArray(java.lang.String[])>($r87);

        $r88 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String[] splitCodePaths>;

        virtualinvoke r1.<android.os.Parcel: void writeStringArray(java.lang.String[])>($r88);

        $r89 = r0.<android.content.pm.parsing.ParsingPackageImpl: android.util.SparseArray splitDependencies>;

        virtualinvoke r1.<android.os.Parcel: void writeSparseArray(android.util.SparseArray)>($r89);

        $r90 = r0.<android.content.pm.parsing.ParsingPackageImpl: int[] splitFlags>;

        virtualinvoke r1.<android.os.Parcel: void writeIntArray(int[])>($r90);

        $r91 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.String[] splitNames>;

        virtualinvoke r1.<android.os.Parcel: void writeStringArray(java.lang.String[])>($r91);

        $r92 = r0.<android.content.pm.parsing.ParsingPackageImpl: int[] splitRevisionCodes>;

        virtualinvoke r1.<android.os.Parcel: void writeIntArray(int[])>($r92);

        $z7 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean externalStorage>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z7);

        $z8 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean baseHardwareAccelerated>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z8);

        $z9 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean allowBackup>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z9);

        $z10 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean killAfterRestore>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z10);

        $z11 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean restoreAnyVersion>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z11);

        $z12 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean fullBackupOnly>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z12);

        $z13 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean persistent>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z13);

        $z14 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean debuggable>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z14);

        $z15 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean vmSafeMode>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z15);

        $z16 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean hasCode>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z16);

        $z17 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean allowTaskReparenting>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z17);

        $z18 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean allowClearUserData>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z18);

        $z19 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean largeHeap>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z19);

        $z20 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean usesCleartextTraffic>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z20);

        $z21 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean supportsRtl>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z21);

        $z22 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean testOnly>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z22);

        $z23 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean multiArch>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z23);

        $z24 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean extractNativeLibs>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z24);

        $z25 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean game>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z25);

        $r94 = <android.content.pm.parsing.ParsingPackageImpl: com.android.internal.util.Parcelling$BuiltIn$ForBoolean sForBoolean>;

        $r93 = r0.<android.content.pm.parsing.ParsingPackageImpl: java.lang.Boolean resizeableActivity>;

        virtualinvoke $r94.<com.android.internal.util.Parcelling$BuiltIn$ForBoolean: void parcel(java.lang.Boolean,android.os.Parcel,int)>($r93, r1, i0);

        $z26 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean staticSharedLibrary>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z26);

        $z27 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean overlay>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z27);

        $z28 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean isolatedSplitLoading>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z28);

        $z29 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean hasDomainUrls>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z29);

        $z30 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean profileableByShell>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z30);

        $z31 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean backupInForeground>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z31);

        $z32 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean useEmbeddedDex>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z32);

        $z33 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean defaultToDeviceProtectedStorage>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z33);

        $z34 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean directBootAware>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z34);

        $z35 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean partiallyDirectBootAware>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z35);

        $z36 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean resizeableActivityViaSdkVersion>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z36);

        $z37 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean allowClearUserDataOnFailedRestore>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z37);

        $z38 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean allowAudioPlaybackCapture>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z38);

        $z39 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean requestLegacyExternalStorage>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z39);

        $z40 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean usesNonSdkApi>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z40);

        $z41 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean hasFragileUserData>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z41);

        $z42 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean cantSaveState>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z42);

        $z43 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean allowNativeHeapPointerTagging>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z43);

        $i28 = r0.<android.content.pm.parsing.ParsingPackageImpl: int autoRevokePermissions>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i28);

        $z44 = r0.<android.content.pm.parsing.ParsingPackageImpl: boolean preserveLegacyExternalStorage>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z44);

        $r95 = r0.<android.content.pm.parsing.ParsingPackageImpl: android.util.ArraySet mimeGroups>;

        virtualinvoke r1.<android.os.Parcel: void writeArraySet(android.util.ArraySet)>($r95);

        $i29 = r0.<android.content.pm.parsing.ParsingPackageImpl: int gwpAsanMode>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i29);

        $r96 = r0.<android.content.pm.parsing.ParsingPackageImpl: android.util.SparseIntArray minExtensionVersions>;

        virtualinvoke r1.<android.os.Parcel: void writeSparseIntArray(android.util.SparseIntArray)>($r96);

        return;
    }
}
