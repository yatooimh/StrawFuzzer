public class android.content.pm.parsing.ParsingPackageUtils extends java.lang.Object
{
    public static final java.lang.String TAG;
    private android.content.pm.parsing.ParsingPackageUtils$Callback mCallback;
    private android.util.DisplayMetrics mDisplayMetrics;
    private boolean mOnlyCoreApps;
    private java.lang.String[] mSeparateProcesses;

    public void <init>(boolean, java.lang.String[], android.util.DisplayMetrics, android.content.pm.parsing.ParsingPackageUtils$Callback)
    {
        android.content.pm.parsing.ParsingPackageUtils r0;
        boolean z0;
        java.lang.String[] r1;
        android.util.DisplayMetrics r2;
        android.content.pm.parsing.ParsingPackageUtils$Callback r3;

        r0 := @this: android.content.pm.parsing.ParsingPackageUtils;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.lang.String[];

        r2 := @parameter2: android.util.DisplayMetrics;

        r3 := @parameter3: android.content.pm.parsing.ParsingPackageUtils$Callback;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.content.pm.parsing.ParsingPackageUtils: boolean mOnlyCoreApps> = z0;

        r0.<android.content.pm.parsing.ParsingPackageUtils: java.lang.String[] mSeparateProcesses> = r1;

        r0.<android.content.pm.parsing.ParsingPackageUtils: android.util.DisplayMetrics mDisplayMetrics> = r2;

        r0.<android.content.pm.parsing.ParsingPackageUtils: android.content.pm.parsing.ParsingPackageUtils$Callback mCallback> = r3;

        return;
    }

    private static float aFloat(float, int, android.content.res.TypedArray)
    {
        float f0, $f1;
        int i0;
        android.content.res.TypedArray r0;

        f0 := @parameter0: float;

        i0 := @parameter1: int;

        r0 := @parameter2: android.content.res.TypedArray;

        $f1 = virtualinvoke r0.<android.content.res.TypedArray: float getFloat(int,float)>(i0, f0);

        return $f1;
    }

    private static float aFloat(int, android.content.res.TypedArray)
    {
        int i0;
        android.content.res.TypedArray r0;
        float $f0;

        i0 := @parameter0: int;

        r0 := @parameter1: android.content.res.TypedArray;

        $f0 = virtualinvoke r0.<android.content.res.TypedArray: float getFloat(int,float)>(i0, 0.0F);

        return $f0;
    }

    private static void adjustPackageToBeUnresizeableAndUnpipable(android.content.pm.parsing.ParsingPackage)
    {
        int i0, $i1, $i2, i3;
        android.content.pm.parsing.component.ParsedActivity r0, $r2;
        java.lang.Object $r1;
        android.content.pm.parsing.ParsingPackage r4;
        java.util.List r5;

        r4 := @parameter0: android.content.pm.parsing.ParsingPackage;

        r5 = interfaceinvoke r4.<android.content.pm.parsing.ParsingPackage: java.util.List getActivities()>();

        i0 = interfaceinvoke r5.<java.util.List: int size()>();

        i3 = 0;

     label1:
        if i3 >= i0 goto label2;

        $r1 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(i3);

        r0 = (android.content.pm.parsing.component.ParsedActivity) $r1;

        $r2 = virtualinvoke r0.<android.content.pm.parsing.component.ParsedActivity: android.content.pm.parsing.component.ParsedActivity setResizeMode(int)>(0);

        $i1 = virtualinvoke r0.<android.content.pm.parsing.component.ParsedActivity: int getFlags()>();

        $i2 = $i1 & -4194305;

        virtualinvoke $r2.<android.content.pm.parsing.component.ParsedActivity: android.content.pm.parsing.component.ParsedActivity setFlags(int)>($i2);

        i3 = i3 + 1;

        goto label1;

     label2:
        return;
    }

    private static int anInt(int, int, android.content.res.TypedArray)
    {
        int i0, i1, $i2;
        android.content.res.TypedArray r0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0 := @parameter2: android.content.res.TypedArray;

        $i2 = virtualinvoke r0.<android.content.res.TypedArray: int getInt(int,int)>(i1, i0);

        return $i2;
    }

    private static int anInt(int, android.content.res.TypedArray)
    {
        int i0, $i1;
        android.content.res.TypedArray r0;

        i0 := @parameter0: int;

        r0 := @parameter1: android.content.res.TypedArray;

        $i1 = virtualinvoke r0.<android.content.res.TypedArray: int getInt(int,int)>(i0, 0);

        return $i1;
    }

    private static int anInteger(int, int, android.content.res.TypedArray)
    {
        int i0, i1, $i2;
        android.content.res.TypedArray r0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0 := @parameter2: android.content.res.TypedArray;

        $i2 = virtualinvoke r0.<android.content.res.TypedArray: int getInteger(int,int)>(i1, i0);

        return $i2;
    }

    private static boolean bool(boolean, int, android.content.res.TypedArray)
    {
        boolean z0, $z1;
        int i0;
        android.content.res.TypedArray r0;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        r0 := @parameter2: android.content.res.TypedArray;

        $z1 = virtualinvoke r0.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i0, z0);

        return $z1;
    }

    public static android.content.pm.parsing.result.ParseResult computeMinSdkVersion(int, java.lang.String, int, java.lang.String[], android.content.pm.parsing.result.ParseInput)
    {
        int i0, i1, $i2;
        android.content.pm.parsing.result.ParseInput r0;
        boolean $z0;
        java.lang.StringBuilder $r2, $r8, $r19;
        java.lang.String $r6, $r12, $r15, $r25, r29;
        android.content.pm.parsing.result.ParseResult $r7, $r16, $r18, $r26, $r28;
        java.lang.Integer $r17, $r27;
        java.lang.String[] r30;

        i0 := @parameter0: int;

        r29 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        r30 := @parameter3: java.lang.String[];

        r0 := @parameter4: android.content.pm.parsing.result.ParseInput;

        if r29 != null goto label2;

        if i0 > i1 goto label1;

        $r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r28 = interfaceinvoke r0.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult success(java.lang.Object)>($r27);

        return $r28;

     label1:
        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requires newer sdk version #");

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (current version is #");

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r25 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        $r26 = interfaceinvoke r0.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(int,java.lang.String)>(-12, $r25);

        return $r26;

     label2:
        $z0 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: boolean matchTargetCode(java.lang.String[],java.lang.String)>(r30, r29);

        if $z0 == 0 goto label3;

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10000);

        $r18 = interfaceinvoke r0.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult success(java.lang.Object)>($r17);

        return $r18;

     label3:
        $i2 = lengthof r30;

        if $i2 <= 0 goto label4;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requires development platform ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r29);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (current platform is any of ");

        $r12 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(r30);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r15 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r16 = interfaceinvoke r0.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(int,java.lang.String)>(-12, $r15);

        return $r16;

     label4:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requires development platform ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r29);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but this is a release platform.");

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = interfaceinvoke r0.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(int,java.lang.String)>(-12, $r6);

        return $r7;
    }

    public static android.content.pm.parsing.result.ParseResult computeTargetSdkVersion(int, java.lang.String, java.lang.String[], android.content.pm.parsing.result.ParseInput)
    {
        int i0, $i1;
        java.lang.String r0, $r7, $r13, $r16;
        android.content.pm.parsing.result.ParseInput r1;
        boolean $z0;
        java.lang.StringBuilder $r3, $r9;
        android.content.pm.parsing.result.ParseResult $r8, $r17, $r19, $r21;
        java.lang.Integer $r18, $r20;
        java.lang.String[] r22;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.String;

        r22 := @parameter2: java.lang.String[];

        r1 := @parameter3: android.content.pm.parsing.result.ParseInput;

        if r0 != null goto label1;

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r21 = interfaceinvoke r1.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult success(java.lang.Object)>($r20);

        return $r21;

     label1:
        $z0 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: boolean matchTargetCode(java.lang.String[],java.lang.String)>(r22, r0);

        if $z0 == 0 goto label2;

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10000);

        $r19 = interfaceinvoke r1.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult success(java.lang.Object)>($r18);

        return $r19;

     label2:
        $i1 = lengthof r22;

        if $i1 <= 0 goto label3;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requires development platform ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (current platform is any of ");

        $r13 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(r22);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r16 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r17 = interfaceinvoke r1.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(int,java.lang.String)>(-12, $r16);

        return $r17;

     label3:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requires development platform ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but this is a release platform.");

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = interfaceinvoke r1.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(int,java.lang.String)>(-12, $r7);

        return $r8;
    }

    private static void convertNewPermissions(android.content.pm.parsing.ParsingPackage)
    {
        android.content.pm.parsing.ParsingPackage r0, $r11;
        int i0, $i2, $i3, i4;
        android.content.pm.PackageParser$NewPermissionInfo r1;
        android.content.pm.PackageParser$NewPermissionInfo[] $r2, $r4;
        java.lang.String $r3, $r6, $r8, $r10, $r12, $r15;
        java.util.List $r5;
        boolean $z0;
        java.lang.StringBuilder $r14, r18, r19;

        r0 := @parameter0: android.content.pm.parsing.ParsingPackage;

        $r2 = <android.content.pm.PackageParser: android.content.pm.PackageParser$NewPermissionInfo[] NEW_PERMISSIONS>;

        i0 = lengthof $r2;

        r18 = null;

        i4 = 0;

     label1:
        if i4 >= i0 goto label6;

        $r4 = <android.content.pm.PackageParser: android.content.pm.PackageParser$NewPermissionInfo[] NEW_PERMISSIONS>;

        r1 = $r4[i4];

        $i2 = interfaceinvoke r0.<android.content.pm.parsing.ParsingPackage: int getTargetSdkVersion()>();

        $i3 = r1.<android.content.pm.PackageParser$NewPermissionInfo: int sdkVersion>;

        if $i2 < $i3 goto label2;

        goto label6;

     label2:
        r19 = r18;

        $r5 = interfaceinvoke r0.<android.content.pm.parsing.ParsingPackage: java.util.List getRequestedPermissions()>();

        $r6 = r1.<android.content.pm.PackageParser$NewPermissionInfo: java.lang.String name>;

        $z0 = interfaceinvoke $r5.<java.util.List: boolean contains(java.lang.Object)>($r6);

        if $z0 != 0 goto label5;

        if r18 != null goto label3;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>(int)>(128);

        r18 = $r14;

        $r15 = interfaceinvoke r0.<android.content.pm.parsing.ParsingPackage: java.lang.String getPackageName()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": compat added ");

        goto label4;

     label3:
        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

     label4:
        $r8 = r1.<android.content.pm.PackageParser$NewPermissionInfo: java.lang.String name>;

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = r1.<android.content.pm.PackageParser$NewPermissionInfo: java.lang.String name>;

        $r11 = interfaceinvoke r0.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage addRequestedPermission(java.lang.String)>($r10);

        $r12 = r1.<android.content.pm.PackageParser$NewPermissionInfo: java.lang.String name>;

        interfaceinvoke $r11.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage addImplicitPermission(java.lang.String)>($r12);

        r19 = r18;

     label5:
        i4 = i4 + 1;

        r18 = r19;

        goto label1;

     label6:
        if r18 == null goto label7;

        $r3 = virtualinvoke r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PackageParsing", $r3);

     label7:
        return;
    }

    private static void convertSplitPermissions(android.content.pm.parsing.ParsingPackage)
    {
        java.util.List r0, r1, r13;
        int i0, $i1, $i2, $i3, i4, i5;
        java.lang.String r2, $r5;
        android.permission.IPermissionManager $r3;
        java.lang.Object $r4, $r6;
        boolean $z0, $z1;
        android.content.pm.parsing.ParsingPackage $r7, r11;
        android.os.RemoteException $r9;
        java.lang.RuntimeException $r10;
        android.content.pm.permission.SplitPermissionInfoParcelable r12;

        r11 := @parameter0: android.content.pm.parsing.ParsingPackage;

     label1:
        $r3 = staticinvoke <android.app.ActivityThread: android.permission.IPermissionManager getPermissionManager()>();

        r0 = interfaceinvoke $r3.<android.permission.IPermissionManager: java.util.List getSplitPermissions()>();

     label2:
        i0 = interfaceinvoke r0.<java.util.List: int size()>();

        i4 = 0;

     label3:
        if i4 >= i0 goto label8;

        $r4 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i4);

        r12 = (android.content.pm.permission.SplitPermissionInfoParcelable) $r4;

        r1 = interfaceinvoke r11.<android.content.pm.parsing.ParsingPackage: java.util.List getRequestedPermissions()>();

        $i1 = interfaceinvoke r11.<android.content.pm.parsing.ParsingPackage: int getTargetSdkVersion()>();

        $i2 = virtualinvoke r12.<android.content.pm.permission.SplitPermissionInfoParcelable: int getTargetSdk()>();

        if $i1 >= $i2 goto label7;

        $r5 = virtualinvoke r12.<android.content.pm.permission.SplitPermissionInfoParcelable: java.lang.String getSplitPermission()>();

        $z0 = interfaceinvoke r1.<java.util.List: boolean contains(java.lang.Object)>($r5);

        if $z0 != 0 goto label4;

        goto label7;

     label4:
        r13 = virtualinvoke r12.<android.content.pm.permission.SplitPermissionInfoParcelable: java.util.List getNewPermissions()>();

        i5 = 0;

     label5:
        $i3 = interfaceinvoke r13.<java.util.List: int size()>();

        if i5 >= $i3 goto label7;

        $r6 = interfaceinvoke r13.<java.util.List: java.lang.Object get(int)>(i5);

        r2 = (java.lang.String) $r6;

        $z1 = interfaceinvoke r1.<java.util.List: boolean contains(java.lang.Object)>(r2);

        if $z1 != 0 goto label6;

        $r7 = interfaceinvoke r11.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage addRequestedPermission(java.lang.String)>(r2);

        interfaceinvoke $r7.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage addImplicitPermission(java.lang.String)>(r2);

     label6:
        i5 = i5 + 1;

        goto label5;

     label7:
        i4 = i4 + 1;

        goto label3;

     label8:
        return;

     label9:
        $r9 := @caughtexception;

        $r10 = virtualinvoke $r9.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r10;

        catch android.os.RemoteException from label1 to label2 with label9;
    }

    private static android.util.SparseIntArray exactSizedCopyOfSparseArray(android.util.SparseIntArray)
    {
        android.util.SparseIntArray r0, $r2;
        int $i0, $i1, $i2, $i3, i4;

        r0 := @parameter0: android.util.SparseIntArray;

        if r0 != null goto label1;

        return null;

     label1:
        $r2 = new android.util.SparseIntArray;

        $i0 = virtualinvoke r0.<android.util.SparseIntArray: int size()>();

        specialinvoke $r2.<android.util.SparseIntArray: void <init>(int)>($i0);

        i4 = 0;

     label2:
        $i1 = virtualinvoke r0.<android.util.SparseIntArray: int size()>();

        if i4 >= $i1 goto label3;

        $i2 = virtualinvoke r0.<android.util.SparseIntArray: int keyAt(int)>(i4);

        $i3 = virtualinvoke r0.<android.util.SparseIntArray: int valueAt(int)>(i4);

        virtualinvoke $r2.<android.util.SparseIntArray: void put(int,int)>($i2, $i3);

        i4 = i4 + 1;

        goto label2;

     label3:
        return $r2;
    }

    private static android.content.pm.parsing.result.ParseResult generateAppDetailsHiddenActivity(android.content.pm.parsing.result.ParseInput, android.content.pm.parsing.ParsingPackage)
    {
        android.content.pm.parsing.result.ParseInput r0;
        android.content.pm.parsing.ParsingPackage r1;
        java.lang.String r2, $r4, r9;
        boolean $z0, $z1;
        java.lang.Object $r3;
        int $i0;
        android.content.pm.parsing.component.ParsedActivity $r5;
        android.content.pm.parsing.result.ParseResult $r6, $r7, r8;

        r0 := @parameter0: android.content.pm.parsing.result.ParseInput;

        r1 := @parameter1: android.content.pm.parsing.ParsingPackage;

        r2 = interfaceinvoke r1.<android.content.pm.parsing.ParsingPackage: java.lang.String getPackageName()>();

        r8 = staticinvoke <android.content.pm.parsing.component.ComponentParseUtils: android.content.pm.parsing.result.ParseResult buildTaskAffinityName(java.lang.String,java.lang.String,java.lang.CharSequence,android.content.pm.parsing.result.ParseInput)>(r2, r2, ":app_details", r0);

        $z0 = interfaceinvoke r8.<android.content.pm.parsing.result.ParseResult: boolean isError()>();

        if $z0 == 0 goto label1;

        $r7 = interfaceinvoke r0.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(android.content.pm.parsing.result.ParseResult)>(r8);

        return $r7;

     label1:
        $r3 = interfaceinvoke r8.<android.content.pm.parsing.result.ParseResult: java.lang.Object getResult()>();

        r9 = (java.lang.String) $r3;

        $r4 = interfaceinvoke r1.<android.content.pm.parsing.ParsingPackage: java.lang.String getProcessName()>();

        $i0 = interfaceinvoke r1.<android.content.pm.parsing.ParsingPackage: int getUiOptions()>();

        $z1 = interfaceinvoke r1.<android.content.pm.parsing.ParsingPackage: boolean isBaseHardwareAccelerated()>();

        $r5 = staticinvoke <android.content.pm.parsing.component.ParsedActivity: android.content.pm.parsing.component.ParsedActivity makeAppDetailsActivity(java.lang.String,java.lang.String,int,java.lang.String,boolean)>(r2, $r4, $i0, r9, $z1);

        $r6 = interfaceinvoke r0.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult success(java.lang.Object)>($r5);

        return $r6;
    }

    public static android.content.pm.PackageParser$SigningDetails getSigningDetails(android.content.pm.parsing.ParsingPackageRead, boolean) throws android.content.pm.PackageParser$PackageParserException
    {
        boolean z0, z1, $z2, $z3, $z4, $z5;
        android.content.pm.parsing.result.ParseInput r0;
        android.content.pm.PackageParser$SigningDetails r1, r15, r17;
        java.lang.String[] r2;
        android.content.pm.parsing.result.ParseTypeImpl $r3;
        java.lang.String $r4, $r5, $r8, $r9;
        int $i0, $i1, $i2, $i3, $i4, i5;
        java.lang.Exception $r6, $r10;
        java.lang.Object $r7, $r11;
        java.lang.Throwable $r12, $r13, r20;
        android.content.pm.parsing.ParsingPackageRead r14;
        android.content.pm.parsing.result.ParseResult r16, r18;
        android.content.pm.PackageParser$PackageParserException r19, r21;

        r14 := @parameter0: android.content.pm.parsing.ParsingPackageRead;

        z0 := @parameter1: boolean;

        r15 = <android.content.pm.PackageParser$SigningDetails: android.content.pm.PackageParser$SigningDetails UNKNOWN>;

        $r3 = staticinvoke <android.content.pm.parsing.result.ParseTypeImpl: android.content.pm.parsing.result.ParseTypeImpl forDefaultParsing()>();

        r0 = virtualinvoke $r3.<android.content.pm.parsing.result.ParseTypeImpl: android.content.pm.parsing.result.ParseInput reset()>();

        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(262144L, "collectCertificates");

     label01:
        $r4 = interfaceinvoke r14.<android.content.pm.parsing.ParsingPackageRead: java.lang.String getBaseCodePath()>();

        $z2 = interfaceinvoke r14.<android.content.pm.parsing.ParsingPackageRead: boolean isStaticSharedLibrary()>();

        $i0 = interfaceinvoke r14.<android.content.pm.parsing.ParsingPackageRead: int getTargetSdkVersion()>();

        r16 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: android.content.pm.parsing.result.ParseResult getSigningDetails(android.content.pm.parsing.result.ParseInput,java.lang.String,boolean,boolean,android.content.pm.PackageParser$SigningDetails,int)>(r0, $r4, z0, $z2, r15, $i0);

        $z3 = interfaceinvoke r16.<android.content.pm.parsing.result.ParseResult: boolean isError()>();

        if $z3 != 0 goto label09;

        $r7 = interfaceinvoke r16.<android.content.pm.parsing.result.ParseResult: java.lang.Object getResult()>();

        r1 = (android.content.pm.PackageParser$SigningDetails) $r7;

        r2 = interfaceinvoke r14.<android.content.pm.parsing.ParsingPackageRead: java.lang.String[] getSplitCodePaths()>();

        z1 = staticinvoke <com.android.internal.util.ArrayUtils: boolean isEmpty(java.lang.Object[])>(r2);

     label02:
        r17 = r1;

        if z1 != 0 goto label08;

        r17 = r1;

        i5 = 0;

     label03:
        $i2 = lengthof r2;

        if i5 >= $i2 goto label06;

        $r8 = r2[i5];

        $z4 = interfaceinvoke r14.<android.content.pm.parsing.ParsingPackageRead: boolean isStaticSharedLibrary()>();

        $i3 = interfaceinvoke r14.<android.content.pm.parsing.ParsingPackageRead: int getTargetSdkVersion()>();

        r18 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: android.content.pm.parsing.result.ParseResult getSigningDetails(android.content.pm.parsing.result.ParseInput,java.lang.String,boolean,boolean,android.content.pm.PackageParser$SigningDetails,int)>(r0, $r8, z0, $z4, r17, $i3);

        $z5 = interfaceinvoke r18.<android.content.pm.parsing.result.ParseResult: boolean isError()>();

        if $z5 != 0 goto label05;

        $r11 = interfaceinvoke r18.<android.content.pm.parsing.result.ParseResult: java.lang.Object getResult()>();

        r17 = (android.content.pm.PackageParser$SigningDetails) $r11;

     label04:
        i5 = i5 + 1;

        goto label03;

     label05:
        r19 = new android.content.pm.PackageParser$PackageParserException;

        $i4 = interfaceinvoke r18.<android.content.pm.parsing.result.ParseResult: int getErrorCode()>();

        $r9 = interfaceinvoke r18.<android.content.pm.parsing.result.ParseResult: java.lang.String getErrorMessage()>();

        $r10 = interfaceinvoke r18.<android.content.pm.parsing.result.ParseResult: java.lang.Exception getException()>();

        specialinvoke r19.<android.content.pm.PackageParser$PackageParserException: void <init>(int,java.lang.String,java.lang.Throwable)>($i4, $r9, $r10);

        throw r19;

     label06:
        goto label08;

     label07:
        $r12 := @caughtexception;

        r20 = $r12;

        goto label11;

     label08:
        staticinvoke <android.os.Trace: void traceEnd(long)>(262144L);

        return r17;

     label09:
        r21 = new android.content.pm.PackageParser$PackageParserException;

        $i1 = interfaceinvoke r16.<android.content.pm.parsing.result.ParseResult: int getErrorCode()>();

        $r5 = interfaceinvoke r16.<android.content.pm.parsing.result.ParseResult: java.lang.String getErrorMessage()>();

        $r6 = interfaceinvoke r16.<android.content.pm.parsing.result.ParseResult: java.lang.Exception getException()>();

        specialinvoke r21.<android.content.pm.PackageParser$PackageParserException: void <init>(int,java.lang.String,java.lang.Throwable)>($i1, $r5, $r6);

        throw r21;

     label10:
        $r13 := @caughtexception;

        r20 = $r13;

     label11:
        staticinvoke <android.os.Trace: void traceEnd(long)>(262144L);

        throw r20;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label09 to label10 with label10;
    }

    public static android.content.pm.parsing.result.ParseResult getSigningDetails(android.content.pm.parsing.result.ParseInput, java.lang.String, boolean, boolean, android.content.pm.PackageParser$SigningDetails, int)
    {
        android.content.pm.parsing.result.ParseInput r0;
        java.lang.String r1, $r9, $r16;
        boolean z0, z1, $z2;
        android.content.pm.PackageParser$SigningDetails $r2, r18, r19;
        android.content.pm.Signature[] $r3, $r4;
        android.content.pm.parsing.result.ParseResult $r5, $r10, $r11, $r17;
        java.lang.StringBuilder $r6, $r13;
        android.content.pm.PackageParser$PackageParserException $r12;
        int i0, i1;

        r0 := @parameter0: android.content.pm.parsing.result.ParseInput;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        r18 := @parameter4: android.content.pm.PackageParser$SigningDetails;

        i0 := @parameter5: int;

        i1 = staticinvoke <android.util.apk.ApkSignatureVerifier: int getMinimumSignatureSchemeVersionForTargetSdk(int)>(i0);

        if z1 == 0 goto label1;

        i1 = 2;

     label1:
        if z0 == 0 goto label4;

     label2:
        r19 = staticinvoke <android.util.apk.ApkSignatureVerifier: android.content.pm.PackageParser$SigningDetails unsafeGetCertsWithoutVerification(java.lang.String,int)>(r1, 1);

     label3:
        goto label5;

     label4:
        r19 = staticinvoke <android.util.apk.ApkSignatureVerifier: android.content.pm.PackageParser$SigningDetails verify(java.lang.String,int)>(r1, i1);

     label5:
        $r2 = <android.content.pm.PackageParser$SigningDetails: android.content.pm.PackageParser$SigningDetails UNKNOWN>;

        if r18 != $r2 goto label6;

        $r11 = interfaceinvoke r0.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult success(java.lang.Object)>(r19);

        return $r11;

     label6:
        $r4 = r18.<android.content.pm.PackageParser$SigningDetails: android.content.pm.Signature[] signatures>;

        $r3 = r19.<android.content.pm.PackageParser$SigningDetails: android.content.pm.Signature[] signatures>;

        $z2 = staticinvoke <android.content.pm.Signature: boolean areExactMatch(android.content.pm.Signature[],android.content.pm.Signature[])>($r4, $r3);

        if $z2 != 0 goto label7;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has mismatched certificates");

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = interfaceinvoke r0.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(int,java.lang.String)>(-104, $r9);

        return $r10;

     label7:
        $r5 = interfaceinvoke r0.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult success(java.lang.Object)>(r18);

        return $r5;

     label8:
        $r12 := @caughtexception;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed collecting certificates for ");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $r17 = interfaceinvoke r0.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(int,java.lang.String,java.lang.Exception)>(-103, $r16, $r12);

        return $r17;

        catch android.content.pm.PackageParser$PackageParserException from label2 to label3 with label8;
        catch android.content.pm.PackageParser$PackageParserException from label4 to label5 with label8;
    }

    private static boolean hasDomainURLs(android.content.pm.parsing.ParsingPackage)
    {
        int i0, i1, i2, i3;
        java.util.List r0, r6;
        android.content.pm.parsing.component.ParsedIntentInfo r1;
        java.lang.Object $r2, $r4;
        android.content.pm.parsing.component.ParsedActivity $r3;
        boolean $z0, $z1, $z2, $z3;
        android.content.pm.parsing.ParsingPackage r5;

        r5 := @parameter0: android.content.pm.parsing.ParsingPackage;

        r6 = interfaceinvoke r5.<android.content.pm.parsing.ParsingPackage: java.util.List getActivities()>();

        i0 = interfaceinvoke r6.<java.util.List: int size()>();

        i2 = 0;

     label1:
        if i2 >= i0 goto label8;

        $r2 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(i2);

        $r3 = (android.content.pm.parsing.component.ParsedActivity) $r2;

        r0 = virtualinvoke $r3.<android.content.pm.parsing.component.ParsedActivity: java.util.List getIntents()>();

        i1 = interfaceinvoke r0.<java.util.List: int size()>();

        i3 = 0;

     label2:
        if i3 >= i1 goto label7;

        $r4 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i3);

        r1 = (android.content.pm.parsing.component.ParsedIntentInfo) $r4;

        $z0 = virtualinvoke r1.<android.content.pm.parsing.component.ParsedIntentInfo: boolean hasAction(java.lang.String)>("android.intent.action.VIEW");

        if $z0 != 0 goto label3;

        goto label5;

     label3:
        $z1 = virtualinvoke r1.<android.content.pm.parsing.component.ParsedIntentInfo: boolean hasAction(java.lang.String)>("android.intent.action.VIEW");

        if $z1 != 0 goto label4;

        goto label5;

     label4:
        $z2 = virtualinvoke r1.<android.content.pm.parsing.component.ParsedIntentInfo: boolean hasDataScheme(java.lang.String)>("http");

        if $z2 != 0 goto label6;

        $z3 = virtualinvoke r1.<android.content.pm.parsing.component.ParsedIntentInfo: boolean hasDataScheme(java.lang.String)>("https");

        if $z3 == 0 goto label5;

        goto label6;

     label5:
        i3 = i3 + 1;

        goto label2;

     label6:
        return 1;

     label7:
        i2 = i2 + 1;

        goto label1;

     label8:
        return 0;
    }

    private static boolean matchTargetCode(java.lang.String[], java.lang.String)
    {
        java.lang.String[] r0;
        int i0;
        boolean $z0;
        java.lang.String r1;

        r0 := @parameter0: java.lang.String[];

        r1 := @parameter1: java.lang.String;

        i0 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(46);

        if i0 != -1 goto label1;

        goto label2;

     label1:
        r1 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

     label2:
        $z0 = staticinvoke <com.android.internal.util.ArrayUtils: boolean contains(java.lang.Object[],java.lang.Object)>(r0, r1);

        return $z0;
    }

    private static java.lang.String nonConfigString(int, int, android.content.res.TypedArray)
    {
        int i0, i1;
        android.content.res.TypedArray r0;
        java.lang.String $r1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0 := @parameter2: android.content.res.TypedArray;

        $r1 = virtualinvoke r0.<android.content.res.TypedArray: java.lang.String getNonConfigurationString(int,int)>(i1, i0);

        return $r1;
    }

    private static java.lang.String nonResString(int, android.content.res.TypedArray)
    {
        int i0;
        android.content.res.TypedArray r0;
        java.lang.String $r1;

        i0 := @parameter0: int;

        r0 := @parameter1: android.content.res.TypedArray;

        $r1 = virtualinvoke r0.<android.content.res.TypedArray: java.lang.String getNonResourceString(int)>(i0);

        return $r1;
    }

    private static android.content.pm.parsing.result.ParseResult parseAdditionalCertificates(android.content.pm.parsing.result.ParseInput, android.content.res.Resources, android.content.res.XmlResourceParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.res.XmlResourceParser r0;
        int i0, i1, $i2;
        java.lang.String r1, $r3, $r5, $r6, $r10;
        android.content.pm.parsing.result.ParseResult $r2, r18;
        boolean $z0, $z1;
        int[] $r4;
        java.lang.Object[] $r7;
        java.lang.Throwable $r11;
        android.content.pm.parsing.result.ParseInput r12;
        android.content.res.Resources r13;
        java.lang.String[] r14, r15, r19;
        android.content.res.TypedArray r16;
        java.lang.StringBuilder r17;

        r12 := @parameter0: android.content.pm.parsing.result.ParseInput;

        r13 := @parameter1: android.content.res.Resources;

        r0 := @parameter2: android.content.res.XmlResourceParser;

        r14 = <libcore.util.EmptyArray: java.lang.String[] STRING>;

        i0 = interfaceinvoke r0.<android.content.res.XmlResourceParser: int getDepth()>();

     label01:
        i1 = interfaceinvoke r0.<android.content.res.XmlResourceParser: int next()>();

        if i1 == 1 goto label10;

        if i1 != 3 goto label02;

        $i2 = interfaceinvoke r0.<android.content.res.XmlResourceParser: int getDepth()>();

        if $i2 <= i0 goto label10;

     label02:
        if i1 == 2 goto label03;

        goto label01;

     label03:
        r15 = r14;

        $r3 = interfaceinvoke r0.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("additional-certificate");

        if $z0 == 0 goto label09;

        $r4 = <com.android.internal.R$styleable: int[] AndroidManifestAdditionalCertificate>;

        r16 = virtualinvoke r13.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r0, $r4);

     label04:
        r1 = virtualinvoke r16.<android.content.res.TypedArray: java.lang.String getNonResourceString(int)>(0);

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z1 == 0 goto label06;

        r17 = new java.lang.StringBuilder;

        specialinvoke r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad additional-certificate declaration with empty certDigest:");

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke r17.<java.lang.StringBuilder: java.lang.String toString()>();

        r18 = interfaceinvoke r12.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(java.lang.String)>($r10);

     label05:
        virtualinvoke r16.<android.content.res.TypedArray: void recycle()>();

        return r18;

     label06:
        $r5 = virtualinvoke r1.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(":", "");

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String toLowerCase()>();

        $r7 = staticinvoke <com.android.internal.util.ArrayUtils: java.lang.Object[] appendElement(java.lang.Class,java.lang.Object[],java.lang.Object)>(class "Ljava/lang/String;", r14, $r6);

        r19 = (java.lang.String[]) $r7;

     label07:
        virtualinvoke r16.<android.content.res.TypedArray: void recycle()>();

        r15 = r19;

        goto label09;

     label08:
        $r11 := @caughtexception;

        virtualinvoke r16.<android.content.res.TypedArray: void recycle()>();

        throw $r11;

     label09:
        r14 = r15;

        goto label01;

     label10:
        $r2 = interfaceinvoke r12.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult success(java.lang.Object)>(r14);

        return $r2;

        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
    }

    private static android.content.pm.parsing.result.ParseResult parseAdoptPermissions(android.content.pm.parsing.result.ParseInput, android.content.pm.parsing.ParsingPackage, android.content.res.Resources, android.content.res.XmlResourceParser)
    {
        android.content.pm.parsing.ParsingPackage r0;
        int[] $r1;
        java.lang.Throwable $r3;
        android.content.pm.parsing.result.ParseInput r4;
        android.content.res.Resources r5;
        android.content.res.XmlResourceParser r6;
        android.content.res.TypedArray r7;
        java.lang.String r8;
        android.content.pm.parsing.result.ParseResult r9;

        r4 := @parameter0: android.content.pm.parsing.result.ParseInput;

        r0 := @parameter1: android.content.pm.parsing.ParsingPackage;

        r5 := @parameter2: android.content.res.Resources;

        r6 := @parameter3: android.content.res.XmlResourceParser;

        $r1 = <com.android.internal.R$styleable: int[] AndroidManifestOriginalPackage>;

        r7 = virtualinvoke r5.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r6, $r1);

     label1:
        r8 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: java.lang.String nonConfigString(int,int,android.content.res.TypedArray)>(0, 0, r7);

     label2:
        if r8 == null goto label4;

     label3:
        interfaceinvoke r0.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage addAdoptPermission(java.lang.String)>(r8);

     label4:
        r9 = interfaceinvoke r4.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult success(java.lang.Object)>(r0);

     label5:
        virtualinvoke r7.<android.content.res.TypedArray: void recycle()>();

        return r9;

     label6:
        $r3 := @caughtexception;

        virtualinvoke r7.<android.content.res.TypedArray: void recycle()>();

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    private static android.content.pm.parsing.result.ParseResult parseAttribution(android.content.pm.parsing.result.ParseInput, android.content.pm.parsing.ParsingPackage, android.content.res.Resources, android.content.res.XmlResourceParser) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        android.content.pm.parsing.result.ParseInput r0;
        android.content.pm.parsing.ParsingPackage r1, $r5;
        android.content.res.XmlResourceParser r2;
        boolean $z0;
        java.lang.Object $r3;
        android.content.pm.parsing.component.ParsedAttribution $r4;
        android.content.pm.parsing.result.ParseResult $r6, $r7, r9;
        android.content.res.Resources r8;

        r0 := @parameter0: android.content.pm.parsing.result.ParseInput;

        r1 := @parameter1: android.content.pm.parsing.ParsingPackage;

        r8 := @parameter2: android.content.res.Resources;

        r2 := @parameter3: android.content.res.XmlResourceParser;

        r9 = staticinvoke <android.content.pm.parsing.component.ParsedAttributionUtils: android.content.pm.parsing.result.ParseResult parseAttribution(android.content.res.Resources,android.content.res.XmlResourceParser,android.content.pm.parsing.result.ParseInput)>(r8, r2, r0);

        $z0 = interfaceinvoke r9.<android.content.pm.parsing.result.ParseResult: boolean isError()>();

        if $z0 == 0 goto label1;

        $r7 = interfaceinvoke r0.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(android.content.pm.parsing.result.ParseResult)>(r9);

        return $r7;

     label1:
        $r3 = interfaceinvoke r9.<android.content.pm.parsing.result.ParseResult: java.lang.Object getResult()>();

        $r4 = (android.content.pm.parsing.component.ParsedAttribution) $r3;

        $r5 = interfaceinvoke r1.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage addAttribution(android.content.pm.parsing.component.ParsedAttribution)>($r4);

        $r6 = interfaceinvoke r0.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult success(java.lang.Object)>($r5);

        return $r6;
    }

    private android.content.pm.parsing.result.ParseResult parseBaseApk(android.content.pm.parsing.result.ParseInput, java.io.File, java.lang.String, android.content.res.AssetManager, int)
    {
        android.content.pm.parsing.ParsingPackageUtils r0;
        android.content.pm.parsing.result.ParseInput r1;
        android.content.res.AssetManager r2;
        java.lang.String r3, r8, $r18, $r22, $r24, $r27, $r30, $r32, $r36, $r38, $r39, $r46, r51, r52;
        android.content.res.XmlResourceParser r4;
        android.content.pm.parsing.ParsingPackage r5;
        android.util.SparseArray r6;
        int i0, $i1, $i2, $i3, i4, i5, i6, i7, i8;
        java.util.Map r7;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        android.util.DisplayMetrics $r9;
        java.lang.Object $r10, $r17, $r20, $r21;
        android.content.res.ApkAssets[] $r11;
        android.content.pm.PackageParser$SigningDetails $r13, $r15;
        java.util.Set $r19;
        java.lang.StringBuilder $r33, $r43, r56;
        android.content.pm.parsing.result.ParseResult $r37, $r47, r55, r57, r58, r59, r67;
        java.lang.Throwable $r40, $r41, $r48, r68;
        java.lang.Exception $r42, $r49, r70;
        java.io.File r50;
        android.content.res.Resources r54;
        android.content.res.ApkAssets r60;
        java.util.Iterator r61;

        r0 := @this: android.content.pm.parsing.ParsingPackageUtils;

        r1 := @parameter0: android.content.pm.parsing.result.ParseInput;

        r50 := @parameter1: java.io.File;

        r51 := @parameter2: java.lang.String;

        r2 := @parameter3: android.content.res.AssetManager;

        i4 := @parameter4: int;

        r3 = virtualinvoke r50.<java.io.File: java.lang.String getAbsolutePath()>();

        $z0 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("/mnt/expand/");

        if $z0 == 0 goto label01;

        $r38 = "/mnt/expand/";

        $i2 = virtualinvoke $r38.<java.lang.String: int length()>();

        i5 = virtualinvoke r3.<java.lang.String: int indexOf(int,int)>(47, $i2);

        $r39 = "/mnt/expand/";

        $i3 = virtualinvoke $r39.<java.lang.String: int length()>();

        r52 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>($i3, i5);

        goto label02;

     label01:
        r52 = null;

     label02:
        i6 = virtualinvoke r2.<android.content.res.AssetManager: int findCookieForPath(java.lang.String)>(r3);

        if i6 != 0 goto label03;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed adding asset path: ");

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r36 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        $r37 = interfaceinvoke r1.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(int,java.lang.String)>(-101, $r36);

        return $r37;

     label03:
        r4 = virtualinvoke r2.<android.content.res.AssetManager: android.content.res.XmlResourceParser openXmlResourceParser(int,java.lang.String)>(i6, "AndroidManifest.xml");

     label04:
        r54 = new android.content.res.Resources;

     label05:
        $r9 = r0.<android.content.pm.parsing.ParsingPackageUtils: android.util.DisplayMetrics mDisplayMetrics>;

        specialinvoke r54.<android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>(r2, $r9, null);

        r55 = specialinvoke r0.<android.content.pm.parsing.ParsingPackageUtils: android.content.pm.parsing.result.ParseResult parseBaseApk(android.content.pm.parsing.result.ParseInput,java.lang.String,java.lang.String,android.content.res.Resources,android.content.res.XmlResourceParser,int)>(r1, r3, r51, r54, r4, i4);

        $z1 = interfaceinvoke r55.<android.content.pm.parsing.result.ParseResult: boolean isError()>();

        if $z1 == 0 goto label09;

        i7 = interfaceinvoke r55.<android.content.pm.parsing.result.ParseResult: int getErrorCode()>();

        r56 = new java.lang.StringBuilder;

        specialinvoke r56.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        virtualinvoke r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (at ");

        $r27 = interfaceinvoke r4.<android.content.res.XmlResourceParser: java.lang.String getPositionDescription()>();

        virtualinvoke r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        virtualinvoke r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("): ");

        $r30 = interfaceinvoke r55.<android.content.pm.parsing.result.ParseResult: java.lang.String getErrorMessage()>();

        virtualinvoke r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r32 = virtualinvoke r56.<java.lang.StringBuilder: java.lang.String toString()>();

        r57 = interfaceinvoke r1.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(int,java.lang.String)>(i7, $r32);

     label06:
        if r4 == null goto label08;

     label07:
        interfaceinvoke r4.<android.content.res.XmlResourceParser: void close()>();

     label08:
        return r57;

     label09:
        $r10 = interfaceinvoke r55.<android.content.pm.parsing.result.ParseResult: java.lang.Object getResult()>();

        r5 = (android.content.pm.parsing.ParsingPackage) $r10;

        $z2 = virtualinvoke r2.<android.content.res.AssetManager: boolean containsAllocatedTable()>();

        if $z2 == 0 goto label13;

        r58 = interfaceinvoke r1.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult deferError(java.lang.String,long)>("Targeting R+ (version 30 and above) requires the resources.arsc of installed APKs to be stored uncompressed and aligned on a 4-byte boundary", 132742131L);

        $z6 = interfaceinvoke r58.<android.content.pm.parsing.result.ParseResult: boolean isError()>();

        if $z6 == 0 goto label13;

        $r24 = interfaceinvoke r58.<android.content.pm.parsing.result.ParseResult: java.lang.String getErrorMessage()>();

        r59 = interfaceinvoke r1.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(int,java.lang.String)>(-124, $r24);

     label10:
        if r4 == null goto label12;

     label11:
        interfaceinvoke r4.<android.content.res.XmlResourceParser: void close()>();

     label12:
        return r59;

     label13:
        $r11 = virtualinvoke r2.<android.content.res.AssetManager: android.content.res.ApkAssets[] getApkAssets()>();

        r60 = $r11[0];

        $z3 = virtualinvoke r60.<android.content.res.ApkAssets: boolean definesOverlayable()>();

        if $z3 == 0 goto label24;

        r6 = virtualinvoke r2.<android.content.res.AssetManager: android.util.SparseArray getAssignedPackageIdentifiers()>();

        i0 = virtualinvoke r6.<android.util.SparseArray: int size()>();

     label14:
        i8 = 0;

     label15:
        if i8 >= i0 goto label23;

     label16:
        $r17 = virtualinvoke r6.<android.util.SparseArray: java.lang.Object get(int)>(i8);

        $r18 = (java.lang.String) $r17;

        r7 = virtualinvoke r2.<android.content.res.AssetManager: java.util.Map getOverlayableMap(java.lang.String)>($r18);

     label17:
        if r7 == null goto label22;

     label18:
        $z4 = interfaceinvoke r7.<java.util.Map: boolean isEmpty()>();

        if $z4 != 0 goto label22;

        $r19 = interfaceinvoke r7.<java.util.Map: java.util.Set keySet()>();

        r61 = interfaceinvoke $r19.<java.util.Set: java.util.Iterator iterator()>();

     label19:
        $z5 = interfaceinvoke r61.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label21;

        $r20 = interfaceinvoke r61.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.lang.String) $r20;

        $r21 = interfaceinvoke r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r8);

        $r22 = (java.lang.String) $r21;

        interfaceinvoke r5.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage addOverlayable(java.lang.String,java.lang.String)>(r8, $r22);

     label20:
        goto label19;

     label21:
        goto label22;

     label22:
        i8 = i8 + 1;

        goto label15;

     label23:
        goto label24;

     label24:
        interfaceinvoke r5.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setVolumeUuid(java.lang.String)>(r52);

     label25:
        $i1 = i4 & 32;

        if $i1 == 0 goto label28;

     label26:
        $r15 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: android.content.pm.PackageParser$SigningDetails getSigningDetails(android.content.pm.parsing.ParsingPackageRead,boolean)>(r5, 0);

        interfaceinvoke r5.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setSigningDetails(android.content.pm.PackageParser$SigningDetails)>($r15);

     label27:
        goto label29;

     label28:
        $r13 = <android.content.pm.PackageParser$SigningDetails: android.content.pm.PackageParser$SigningDetails UNKNOWN>;

        interfaceinvoke r5.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setSigningDetails(android.content.pm.PackageParser$SigningDetails)>($r13);

     label29:
        r67 = interfaceinvoke r1.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult success(java.lang.Object)>(r5);

     label30:
        if r4 == null goto label32;

     label31:
        interfaceinvoke r4.<android.content.res.XmlResourceParser: void close()>();

     label32:
        return r67;

     label33:
        $r48 := @caughtexception;

        r68 = $r48;

        goto label35;

     label34:
        $r41 := @caughtexception;

        r68 = $r41;

     label35:
        if r4 == null goto label40;

     label36:
        interfaceinvoke r4.<android.content.res.XmlResourceParser: void close()>();

     label37:
        goto label40;

     label38:
        $r40 := @caughtexception;

     label39:
        virtualinvoke r68.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r40);

     label40:
        throw r68;

     label41:
        $r42 := @caughtexception;

        r70 = $r42;

        goto label43;

     label42:
        $r49 := @caughtexception;

        r70 = $r49;

     label43:
        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to read manifest from ");

        virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r46 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        $r47 = interfaceinvoke r1.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(int,java.lang.String,java.lang.Exception)>(-102, $r46, r70);

        return $r47;

        catch java.lang.Exception from label03 to label04 with label42;
        catch java.lang.Throwable from label04 to label05 with label34;
        catch java.lang.Throwable from label05 to label06 with label33;
        catch java.lang.Exception from label07 to label08 with label41;
        catch java.lang.Throwable from label09 to label10 with label33;
        catch java.lang.Exception from label11 to label12 with label41;
        catch java.lang.Throwable from label13 to label14 with label33;
        catch java.lang.Throwable from label16 to label17 with label33;
        catch java.lang.Throwable from label18 to label19 with label33;
        catch java.lang.Throwable from label19 to label20 with label33;
        catch java.lang.Throwable from label24 to label25 with label33;
        catch java.lang.Throwable from label26 to label27 with label33;
        catch java.lang.Throwable from label28 to label29 with label33;
        catch java.lang.Throwable from label29 to label30 with label33;
        catch java.lang.Exception from label31 to label32 with label41;
        catch java.lang.Throwable from label36 to label37 with label38;
        catch java.lang.Exception from label39 to label40 with label41;
        catch java.lang.Exception from label40 to label41 with label41;
    }

    private android.content.pm.parsing.result.ParseResult parseBaseApk(android.content.pm.parsing.result.ParseInput, java.lang.String, java.lang.String, android.content.res.Resources, android.content.res.XmlResourceParser, int) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException, android.content.pm.PackageParser$PackageParserException
    {
        android.content.pm.parsing.ParsingPackageUtils r0;
        android.content.res.Resources r1;
        android.content.res.XmlResourceParser r2;
        int i0;
        java.lang.String r3, $r12, r18, r19, r22;
        boolean $z0, $z1, z2, z3;
        java.lang.Object $r4, $r5, $r6;
        int[] $r7;
        android.content.pm.parsing.ParsingPackageUtils$Callback $r8;
        java.lang.StringBuilder $r9;
        android.content.pm.parsing.result.ParseResult $r13, $r14, r20, r26, r27;
        java.lang.Throwable $r15, $r16, r28;
        android.content.pm.parsing.result.ParseInput r17;
        android.util.Pair r21;
        android.content.res.TypedArray r24;
        android.content.pm.parsing.ParsingPackage r25;

        r0 := @this: android.content.pm.parsing.ParsingPackageUtils;

        r17 := @parameter0: android.content.pm.parsing.result.ParseInput;

        r18 := @parameter1: java.lang.String;

        r19 := @parameter2: java.lang.String;

        r1 := @parameter3: android.content.res.Resources;

        r2 := @parameter4: android.content.res.XmlResourceParser;

        i0 := @parameter5: int;

        r20 = staticinvoke <android.content.pm.parsing.ApkLiteParseUtils: android.content.pm.parsing.result.ParseResult parsePackageSplitNames(android.content.pm.parsing.result.ParseInput,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>(r17, r2, r2);

        $z0 = interfaceinvoke r20.<android.content.pm.parsing.result.ParseResult: boolean isError()>();

        if $z0 == 0 goto label01;

        $r14 = interfaceinvoke r17.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(android.content.pm.parsing.result.ParseResult)>(r20);

        return $r14;

     label01:
        $r4 = interfaceinvoke r20.<android.content.pm.parsing.result.ParseResult: java.lang.Object getResult()>();

        r21 = (android.util.Pair) $r4;

        $r5 = r21.<android.util.Pair: java.lang.Object first>;

        r3 = (java.lang.String) $r5;

        $r6 = r21.<android.util.Pair: java.lang.Object second>;

        r22 = (java.lang.String) $r6;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r22);

        if $z1 != 0 goto label02;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected base APK, but found split ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r22);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = interfaceinvoke r17.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(int,java.lang.String)>(-106, $r12);

        return $r13;

     label02:
        $r7 = <com.android.internal.R$styleable: int[] AndroidManifest>;

        r24 = virtualinvoke r1.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r2, $r7);

     label03:
        z2 = interfaceinvoke r2.<android.content.res.XmlResourceParser: boolean getAttributeBooleanValue(java.lang.String,java.lang.String,boolean)>(null, "coreApp", 0);

        $r8 = r0.<android.content.pm.parsing.ParsingPackageUtils: android.content.pm.parsing.ParsingPackageUtils$Callback mCallback>;

        r25 = interfaceinvoke $r8.<android.content.pm.parsing.ParsingPackageUtils$Callback: android.content.pm.parsing.ParsingPackage startParsingPackage(java.lang.String,java.lang.String,java.lang.String,android.content.res.TypedArray,boolean)>(r3, r18, r19, r24, z2);

     label04:
        r26 = specialinvoke r0.<android.content.pm.parsing.ParsingPackageUtils: android.content.pm.parsing.result.ParseResult parseBaseApkTags(android.content.pm.parsing.result.ParseInput,android.content.pm.parsing.ParsingPackage,android.content.res.TypedArray,android.content.res.Resources,android.content.res.XmlResourceParser,int)>(r17, r25, r24, r1, r2, i0);

        z3 = interfaceinvoke r26.<android.content.pm.parsing.result.ParseResult: boolean isError()>();

     label05:
        if z3 == 0 goto label06;

        virtualinvoke r24.<android.content.res.TypedArray: void recycle()>();

        return r26;

     label06:
        r27 = interfaceinvoke r17.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult success(java.lang.Object)>(r25);

     label07:
        virtualinvoke r24.<android.content.res.TypedArray: void recycle()>();

        return r27;

     label08:
        $r15 := @caughtexception;

        r28 = $r15;

        goto label10;

     label09:
        $r16 := @caughtexception;

        r28 = $r16;

     label10:
        virtualinvoke r24.<android.content.res.TypedArray: void recycle()>();

        throw r28;

        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
    }

    private android.content.pm.parsing.result.ParseResult parseBaseApkTag(java.lang.String, android.content.pm.parsing.result.ParseInput, android.content.pm.parsing.ParsingPackage, android.content.res.Resources, android.content.res.XmlResourceParser, int) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        android.content.pm.parsing.ParsingPackageUtils r0;
        java.lang.String r1;
        android.content.pm.parsing.result.ParseInput r2;
        android.content.pm.parsing.ParsingPackage r3;
        android.content.res.Resources r4;
        android.content.res.XmlResourceParser r5;
        int i0, $i1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24;
        android.content.pm.parsing.result.ParseResult $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25;
        byte b2;

        r0 := @this: android.content.pm.parsing.ParsingPackageUtils;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.content.pm.parsing.result.ParseInput;

        r3 := @parameter2: android.content.pm.parsing.ParsingPackage;

        r4 := @parameter3: android.content.res.Resources;

        r5 := @parameter4: android.content.res.XmlResourceParser;

        i0 := @parameter5: int;

        $i1 = virtualinvoke r1.<java.lang.String: int hashCode()>();

        lookupswitch($i1)
        {
            case -1773650763: goto label26;
            case -1667688228: goto label25;
            case -1108197302: goto label24;
            case -1091287984: goto label23;
            case -998269702: goto label22;
            case -979207434: goto label21;
            case -517618225: goto label20;
            case -309882753: goto label19;
            case -266709319: goto label18;
            case -170723071: goto label17;
            case -129269526: goto label16;
            case 119109844: goto label15;
            case 349565761: goto label14;
            case 454915839: goto label13;
            case 544550766: goto label12;
            case 599862896: goto label11;
            case 632228327: goto label10;
            case 655087462: goto label09;
            case 896788286: goto label08;
            case 1343942321: goto label07;
            case 1439495522: goto label06;
            case 1682371816: goto label05;
            case 1705921021: goto label04;
            case 1792785909: goto label03;
            case 1818228622: goto label02;
            default: goto label01;
        };

     label01:
        goto label27;

     label02:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("compatible-screens");

        if $z0 == 0 goto label01;

        b2 = 20;

        goto label28;

     label03:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("uses-feature");

        if $z1 == 0 goto label01;

        b2 = 11;

        goto label28;

     label04:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("uses-permission-sdk-m");

        if $z2 == 0 goto label01;

        b2 = 8;

        goto label28;

     label05:
        $z3 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("feature-group");

        if $z3 == 0 goto label01;

        b2 = 12;

        goto label28;

     label06:
        $z4 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("protected-broadcast");

        if $z4 == 0 goto label01;

        b2 = 15;

        goto label28;

     label07:
        $z5 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("uses-permission-sdk-23");

        if $z5 == 0 goto label01;

        b2 = 9;

        goto label28;

     label08:
        $z6 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("supports-screens");

        if $z6 == 0 goto label01;

        b2 = 14;

        goto label28;

     label09:
        $z7 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("queries");

        if $z7 == 0 goto label01;

        b2 = 24;

        goto label28;

     label10:
        $z8 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("adopt-permissions");

        if $z8 == 0 goto label01;

        b2 = 18;

        goto label28;

     label11:
        $z9 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("uses-permission");

        if $z9 == 0 goto label01;

        b2 = 7;

        goto label28;

     label12:
        $z10 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("instrumentation");

        if $z10 == 0 goto label01;

        b2 = 16;

        goto label28;

     label13:
        $z11 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("key-sets");

        if $z11 == 0 goto label01;

        b2 = 1;

        goto label28;

     label14:
        $z12 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("supports-input");

        if $z12 == 0 goto label01;

        b2 = 21;

        goto label28;

     label15:
        $z13 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("uses-gl-texture");

        if $z13 == 0 goto label01;

        b2 = 19;

        goto label28;

     label16:
        $z14 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("eat-comment");

        if $z14 == 0 goto label01;

        b2 = 22;

        goto label28;

     label17:
        $z15 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("permission-group");

        if $z15 == 0 goto label01;

        b2 = 4;

        goto label28;

     label18:
        $z16 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("uses-sdk");

        if $z16 == 0 goto label01;

        b2 = 13;

        goto label28;

     label19:
        $z17 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("attribution");

        if $z17 == 0 goto label01;

        b2 = 3;

        goto label28;

     label20:
        $z18 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("permission");

        if $z18 == 0 goto label01;

        b2 = 5;

        goto label28;

     label21:
        $z19 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("feature");

        if $z19 == 0 goto label01;

        b2 = 2;

        goto label28;

     label22:
        $z20 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("restrict-update");

        if $z20 == 0 goto label01;

        b2 = 23;

        goto label28;

     label23:
        $z21 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("overlay");

        if $z21 == 0 goto label01;

        b2 = 0;

        goto label28;

     label24:
        $z22 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("original-package");

        if $z22 == 0 goto label01;

        b2 = 17;

        goto label28;

     label25:
        $z23 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("permission-tree");

        if $z23 == 0 goto label01;

        b2 = 6;

        goto label28;

     label26:
        $z24 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("uses-configuration");

        if $z24 == 0 goto label01;

        b2 = 10;

        goto label28;

     label27:
        b2 = -1;

     label28:
        tableswitch(b2)
        {
            case 0: goto label48;
            case 1: goto label47;
            case 2: goto label46;
            case 3: goto label46;
            case 4: goto label45;
            case 5: goto label44;
            case 6: goto label43;
            case 7: goto label42;
            case 8: goto label42;
            case 9: goto label42;
            case 10: goto label41;
            case 11: goto label40;
            case 12: goto label39;
            case 13: goto label38;
            case 14: goto label37;
            case 15: goto label36;
            case 16: goto label35;
            case 17: goto label34;
            case 18: goto label33;
            case 19: goto label32;
            case 20: goto label32;
            case 21: goto label32;
            case 22: goto label32;
            case 23: goto label31;
            case 24: goto label30;
            default: goto label29;
        };

     label29:
        $r25 = staticinvoke <android.content.pm.parsing.ParsingUtils: android.content.pm.parsing.result.ParseResult unknownTag(java.lang.String,android.content.pm.parsing.ParsingPackage,android.content.res.XmlResourceParser,android.content.pm.parsing.result.ParseInput)>("<manifest>", r3, r5, r2);

        return $r25;

     label30:
        $r6 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: android.content.pm.parsing.result.ParseResult parseQueries(android.content.pm.parsing.result.ParseInput,android.content.pm.parsing.ParsingPackage,android.content.res.Resources,android.content.res.XmlResourceParser)>(r2, r3, r4, r5);

        return $r6;

     label31:
        $r7 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: android.content.pm.parsing.result.ParseResult parseRestrictUpdateHash(int,android.content.pm.parsing.result.ParseInput,android.content.pm.parsing.ParsingPackage,android.content.res.Resources,android.content.res.XmlResourceParser)>(i0, r2, r3, r4, r5);

        return $r7;

     label32:
        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r5);

        $r8 = interfaceinvoke r2.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult success(java.lang.Object)>(r3);

        return $r8;

     label33:
        $r9 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: android.content.pm.parsing.result.ParseResult parseAdoptPermissions(android.content.pm.parsing.result.ParseInput,android.content.pm.parsing.ParsingPackage,android.content.res.Resources,android.content.res.XmlResourceParser)>(r2, r3, r4, r5);

        return $r9;

     label34:
        $r10 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: android.content.pm.parsing.result.ParseResult parseOriginalPackage(android.content.pm.parsing.result.ParseInput,android.content.pm.parsing.ParsingPackage,android.content.res.Resources,android.content.res.XmlResourceParser)>(r2, r3, r4, r5);

        return $r10;

     label35:
        $r11 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: android.content.pm.parsing.result.ParseResult parseInstrumentation(android.content.pm.parsing.result.ParseInput,android.content.pm.parsing.ParsingPackage,android.content.res.Resources,android.content.res.XmlResourceParser)>(r2, r3, r4, r5);

        return $r11;

     label36:
        $r12 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: android.content.pm.parsing.result.ParseResult parseProtectedBroadcast(android.content.pm.parsing.result.ParseInput,android.content.pm.parsing.ParsingPackage,android.content.res.Resources,android.content.res.XmlResourceParser)>(r2, r3, r4, r5);

        return $r12;

     label37:
        $r13 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: android.content.pm.parsing.result.ParseResult parseSupportScreens(android.content.pm.parsing.result.ParseInput,android.content.pm.parsing.ParsingPackage,android.content.res.Resources,android.content.res.XmlResourceParser)>(r2, r3, r4, r5);

        return $r13;

     label38:
        $r14 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: android.content.pm.parsing.result.ParseResult parseUsesSdk(android.content.pm.parsing.result.ParseInput,android.content.pm.parsing.ParsingPackage,android.content.res.Resources,android.content.res.XmlResourceParser)>(r2, r3, r4, r5);

        return $r14;

     label39:
        $r15 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: android.content.pm.parsing.result.ParseResult parseFeatureGroup(android.content.pm.parsing.result.ParseInput,android.content.pm.parsing.ParsingPackage,android.content.res.Resources,android.content.res.XmlResourceParser)>(r2, r3, r4, r5);

        return $r15;

     label40:
        $r16 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: android.content.pm.parsing.result.ParseResult parseUsesFeature(android.content.pm.parsing.result.ParseInput,android.content.pm.parsing.ParsingPackage,android.content.res.Resources,android.content.res.XmlResourceParser)>(r2, r3, r4, r5);

        return $r16;

     label41:
        $r17 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: android.content.pm.parsing.result.ParseResult parseUsesConfiguration(android.content.pm.parsing.result.ParseInput,android.content.pm.parsing.ParsingPackage,android.content.res.Resources,android.content.res.XmlResourceParser)>(r2, r3, r4, r5);

        return $r17;

     label42:
        $r18 = specialinvoke r0.<android.content.pm.parsing.ParsingPackageUtils: android.content.pm.parsing.result.ParseResult parseUsesPermission(android.content.pm.parsing.result.ParseInput,android.content.pm.parsing.ParsingPackage,android.content.res.Resources,android.content.res.XmlResourceParser)>(r2, r3, r4, r5);

        return $r18;

     label43:
        $r19 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: android.content.pm.parsing.result.ParseResult parsePermissionTree(android.content.pm.parsing.result.ParseInput,android.content.pm.parsing.ParsingPackage,android.content.res.Resources,android.content.res.XmlResourceParser)>(r2, r3, r4, r5);

        return $r19;

     label44:
        $r20 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: android.content.pm.parsing.result.ParseResult parsePermission(android.content.pm.parsing.result.ParseInput,android.content.pm.parsing.ParsingPackage,android.content.res.Resources,android.content.res.XmlResourceParser)>(r2, r3, r4, r5);

        return $r20;

     label45:
        $r21 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: android.content.pm.parsing.result.ParseResult parsePermissionGroup(android.content.pm.parsing.result.ParseInput,android.content.pm.parsing.ParsingPackage,android.content.res.Resources,android.content.res.XmlResourceParser)>(r2, r3, r4, r5);

        return $r21;

     label46:
        $r22 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: android.content.pm.parsing.result.ParseResult parseAttribution(android.content.pm.parsing.result.ParseInput,android.content.pm.parsing.ParsingPackage,android.content.res.Resources,android.content.res.XmlResourceParser)>(r2, r3, r4, r5);

        return $r22;

     label47:
        $r23 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: android.content.pm.parsing.result.ParseResult parseKeySets(android.content.pm.parsing.result.ParseInput,android.content.pm.parsing.ParsingPackage,android.content.res.Resources,android.content.res.XmlResourceParser)>(r2, r3, r4, r5);

        return $r23;

     label48:
        $r24 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: android.content.pm.parsing.result.ParseResult parseOverlay(android.content.pm.parsing.result.ParseInput,android.content.pm.parsing.ParsingPackage,android.content.res.Resources,android.content.res.XmlResourceParser)>(r2, r3, r4, r5);

        return $r24;
    }

    private android.content.pm.parsing.result.ParseResult parseBaseApkTags(android.content.pm.parsing.result.ParseInput, android.content.pm.parsing.ParsingPackage, android.content.res.TypedArray, android.content.res.Resources, android.content.res.XmlResourceParser, int) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.pm.parsing.ParsingPackageUtils r0;
        android.content.pm.parsing.result.ParseInput r1;
        android.content.pm.parsing.ParsingPackage r2, $r6, r14;
        android.content.res.Resources r3;
        android.content.res.XmlResourceParser r4;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i9;
        android.content.pm.parsing.result.ParseResult r5, $r8, $r10, $r12, r16, r17, $r19;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, z9, z10, $z11, $z12;
        java.util.List $r9, $r18;
        java.lang.String $r11, r15;
        android.content.res.TypedArray r13;

        r0 := @this: android.content.pm.parsing.ParsingPackageUtils;

        r1 := @parameter0: android.content.pm.parsing.result.ParseInput;

        r2 := @parameter1: android.content.pm.parsing.ParsingPackage;

        r13 := @parameter2: android.content.res.TypedArray;

        r3 := @parameter3: android.content.res.Resources;

        r4 := @parameter4: android.content.res.XmlResourceParser;

        i0 := @parameter5: int;

        r5 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: android.content.pm.parsing.result.ParseResult parseSharedUser(android.content.pm.parsing.result.ParseInput,android.content.pm.parsing.ParsingPackage,android.content.res.TypedArray)>(r1, r2, r13);

        $z0 = interfaceinvoke r5.<android.content.pm.parsing.result.ParseResult: boolean isError()>();

        if $z0 == 0 goto label01;

        return r5;

     label01:
        $i3 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: int anInteger(int,int,android.content.res.TypedArray)>(-1, 4, r13);

        $r6 = interfaceinvoke r2.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setInstallLocation(int)>($i3);

        $i4 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: int anInteger(int,int,android.content.res.TypedArray)>(1, 7, r13);

        r14 = interfaceinvoke $r6.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setTargetSandboxVersion(int)>($i4);

        $i5 = i0 & 8;

        if $i5 == 0 goto label02;

        z9 = 1;

        goto label03;

     label02:
        z9 = 0;

     label03:
        interfaceinvoke r14.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setExternalStorage(boolean)>(z9);

        i1 = interfaceinvoke r4.<android.content.res.XmlResourceParser: int getDepth()>();

        z10 = 0;

     label04:
        i2 = interfaceinvoke r4.<android.content.res.XmlResourceParser: int next()>();

        if i2 == 1 goto label11;

        if i2 != 3 goto label05;

        $i9 = interfaceinvoke r4.<android.content.res.XmlResourceParser: int getDepth()>();

        if $i9 <= i1 goto label11;

     label05:
        if i2 == 2 goto label06;

        goto label04;

     label06:
        r15 = interfaceinvoke r4.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        $r11 = "application";

        $z8 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r15);

        if $z8 == 0 goto label08;

        if z10 == 0 goto label07;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageParsing", "<manifest> has more than one <application>");

        r16 = interfaceinvoke r1.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult success(java.lang.Object)>(null);

        goto label09;

     label07:
        z10 = 1;

        r16 = specialinvoke r0.<android.content.pm.parsing.ParsingPackageUtils: android.content.pm.parsing.result.ParseResult parseBaseApplication(android.content.pm.parsing.result.ParseInput,android.content.pm.parsing.ParsingPackage,android.content.res.Resources,android.content.res.XmlResourceParser,int)>(r1, r2, r3, r4, i0);

        goto label09;

     label08:
        r16 = specialinvoke r0.<android.content.pm.parsing.ParsingPackageUtils: android.content.pm.parsing.result.ParseResult parseBaseApkTag(java.lang.String,android.content.pm.parsing.result.ParseInput,android.content.pm.parsing.ParsingPackage,android.content.res.Resources,android.content.res.XmlResourceParser,int)>(r15, r1, r2, r3, r4, i0);

     label09:
        $z11 = interfaceinvoke r16.<android.content.pm.parsing.result.ParseResult: boolean isError()>();

        if $z11 == 0 goto label10;

        $r12 = interfaceinvoke r1.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(android.content.pm.parsing.result.ParseResult)>(r16);

        return $r12;

     label10:
        goto label04;

     label11:
        if z10 != 0 goto label12;

        $r9 = interfaceinvoke r2.<android.content.pm.parsing.ParsingPackage: java.util.List getInstrumentations()>();

        $i7 = staticinvoke <com.android.internal.util.ArrayUtils: int size(java.util.Collection)>($r9);

        if $i7 != 0 goto label12;

        r17 = interfaceinvoke r1.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult deferError(java.lang.String,long)>("<manifest> does not contain an <application> or <instrumentation>", 150776642L);

        $z7 = interfaceinvoke r17.<android.content.pm.parsing.result.ParseResult: boolean isError()>();

        if $z7 == 0 goto label12;

        $r10 = interfaceinvoke r1.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(android.content.pm.parsing.result.ParseResult)>(r17);

        return $r10;

     label12:
        $r18 = interfaceinvoke r2.<android.content.pm.parsing.ParsingPackage: java.util.List getAttributions()>();

        $z12 = staticinvoke <android.content.pm.parsing.component.ParsedAttribution: boolean isCombinationValid(java.util.List)>($r18);

        if $z12 != 0 goto label13;

        $r8 = interfaceinvoke r1.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(int,java.lang.String)>(-101, "Combination <feature> tags are not valid");

        return $r8;

     label13:
        staticinvoke <android.content.pm.parsing.ParsingPackageUtils: void convertNewPermissions(android.content.pm.parsing.ParsingPackage)>(r2);

        staticinvoke <android.content.pm.parsing.ParsingPackageUtils: void convertSplitPermissions(android.content.pm.parsing.ParsingPackage)>(r2);

        $i6 = interfaceinvoke r2.<android.content.pm.parsing.ParsingPackage: int getTargetSdkVersion()>();

        if $i6 < 4 goto label14;

        $z1 = interfaceinvoke r2.<android.content.pm.parsing.ParsingPackage: boolean isSupportsSmallScreens()>();

        if $z1 != 0 goto label15;

        $z2 = interfaceinvoke r2.<android.content.pm.parsing.ParsingPackage: boolean isSupportsNormalScreens()>();

        if $z2 != 0 goto label15;

        $z3 = interfaceinvoke r2.<android.content.pm.parsing.ParsingPackage: boolean isSupportsLargeScreens()>();

        if $z3 != 0 goto label15;

        $z4 = interfaceinvoke r2.<android.content.pm.parsing.ParsingPackage: boolean isSupportsExtraLargeScreens()>();

        if $z4 != 0 goto label15;

        $z5 = interfaceinvoke r2.<android.content.pm.parsing.ParsingPackage: boolean isResizeable()>();

        if $z5 != 0 goto label15;

        $z6 = interfaceinvoke r2.<android.content.pm.parsing.ParsingPackage: boolean isAnyDensity()>();

        if $z6 != 0 goto label15;

     label14:
        staticinvoke <android.content.pm.parsing.ParsingPackageUtils: void adjustPackageToBeUnresizeableAndUnpipable(android.content.pm.parsing.ParsingPackage)>(r2);

     label15:
        $r19 = interfaceinvoke r1.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult success(java.lang.Object)>(r2);

        return $r19;
    }

    private void parseBaseAppBasicFlags(android.content.pm.parsing.ParsingPackage, android.content.res.TypedArray)
    {
        android.content.pm.parsing.ParsingPackageUtils r0;
        android.content.res.TypedArray r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        boolean $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, z30, z31, z32, z33;
        android.content.pm.parsing.ParsingPackage $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r40, $r42, $r44, $r46, r49, r50, r51, r52, r53;
        float $f0, $f1;
        java.lang.String $r39, $r41, $r43, $r45, $r47;

        r0 := @this: android.content.pm.parsing.ParsingPackageUtils;

        r49 := @parameter0: android.content.pm.parsing.ParsingPackage;

        r1 := @parameter1: android.content.res.TypedArray;

        i0 = interfaceinvoke r49.<android.content.pm.parsing.ParsingPackage: int getTargetSdkVersion()>();

        $z1 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: boolean bool(boolean,int,android.content.res.TypedArray)>(1, 17, r1);

        $r2 = interfaceinvoke r49.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setAllowBackup(boolean)>($z1);

        $z2 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: boolean bool(boolean,int,android.content.res.TypedArray)>(1, 5, r1);

        $r3 = interfaceinvoke $r2.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setAllowClearUserData(boolean)>($z2);

        $z3 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: boolean bool(boolean,int,android.content.res.TypedArray)>(1, 54, r1);

        $r4 = interfaceinvoke $r3.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setAllowClearUserDataOnFailedRestore(boolean)>($z3);

        $z4 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: boolean bool(boolean,int,android.content.res.TypedArray)>(1, 59, r1);

        $r5 = interfaceinvoke $r4.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setAllowNativeHeapPointerTagging(boolean)>($z4);

        $z5 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: boolean bool(boolean,int,android.content.res.TypedArray)>(1, 9, r1);

        $r6 = interfaceinvoke $r5.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setEnabled(boolean)>($z5);

        $z6 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: boolean bool(boolean,int,android.content.res.TypedArray)>(1, 34, r1);

        $r7 = interfaceinvoke $r6.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setExtractNativeLibs(boolean)>($z6);

        $z7 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: boolean bool(boolean,int,android.content.res.TypedArray)>(1, 7, r1);

        $r8 = interfaceinvoke $r7.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setHasCode(boolean)>($z7);

        $z8 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: boolean bool(boolean,int,android.content.res.TypedArray)>(0, 14, r1);

        $r9 = interfaceinvoke $r8.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setAllowTaskReparenting(boolean)>($z8);

        $z9 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: boolean bool(boolean,int,android.content.res.TypedArray)>(0, 47, r1);

        $r10 = interfaceinvoke $r9.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setCantSaveState(boolean)>($z9);

        $z10 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: boolean bool(boolean,int,android.content.res.TypedArray)>(0, 58, r1);

        $r11 = interfaceinvoke $r10.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setCrossProfile(boolean)>($z10);

        $z11 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: boolean bool(boolean,int,android.content.res.TypedArray)>(0, 10, r1);

        $r12 = interfaceinvoke $r11.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setDebuggable(boolean)>($z11);

        $z12 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: boolean bool(boolean,int,android.content.res.TypedArray)>(0, 38, r1);

        $r13 = interfaceinvoke $r12.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setDefaultToDeviceProtectedStorage(boolean)>($z12);

        $z13 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: boolean bool(boolean,int,android.content.res.TypedArray)>(0, 39, r1);

        $r14 = interfaceinvoke $r13.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setDirectBootAware(boolean)>($z13);

        $z14 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: boolean bool(boolean,int,android.content.res.TypedArray)>(0, 57, r1);

        $r15 = interfaceinvoke $r14.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setForceQueryable(boolean)>($z14);

        $z15 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: boolean bool(boolean,int,android.content.res.TypedArray)>(0, 31, r1);

        $r16 = interfaceinvoke $r15.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setGame(boolean)>($z15);

        $z16 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: boolean bool(boolean,int,android.content.res.TypedArray)>(0, 50, r1);

        $r17 = interfaceinvoke $r16.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setHasFragileUserData(boolean)>($z16);

        $z17 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: boolean bool(boolean,int,android.content.res.TypedArray)>(0, 24, r1);

        $r18 = interfaceinvoke $r17.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setLargeHeap(boolean)>($z17);

        $z18 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: boolean bool(boolean,int,android.content.res.TypedArray)>(0, 33, r1);

        $r19 = interfaceinvoke $r18.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setMultiArch(boolean)>($z18);

        $z19 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: boolean bool(boolean,int,android.content.res.TypedArray)>(0, 61, r1);

        $r20 = interfaceinvoke $r19.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setPreserveLegacyExternalStorage(boolean)>($z19);

        $z20 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: boolean bool(boolean,int,android.content.res.TypedArray)>(0, 27, r1);

        $r21 = interfaceinvoke $r20.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setRequiredForAllUsers(boolean)>($z20);

        $z21 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: boolean bool(boolean,int,android.content.res.TypedArray)>(0, 26, r1);

        $r22 = interfaceinvoke $r21.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setSupportsRtl(boolean)>($z21);

        $z22 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: boolean bool(boolean,int,android.content.res.TypedArray)>(0, 15, r1);

        $r23 = interfaceinvoke $r22.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setTestOnly(boolean)>($z22);

        $z23 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: boolean bool(boolean,int,android.content.res.TypedArray)>(0, 53, r1);

        $r24 = interfaceinvoke $r23.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setUseEmbeddedDex(boolean)>($z23);

        $z24 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: boolean bool(boolean,int,android.content.res.TypedArray)>(0, 49, r1);

        $r25 = interfaceinvoke $r24.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setUsesNonSdkApi(boolean)>($z24);

        $z25 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: boolean bool(boolean,int,android.content.res.TypedArray)>(0, 20, r1);

        $r26 = interfaceinvoke $r25.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setVmSafeMode(boolean)>($z25);

        $i1 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: int anInt(int,android.content.res.TypedArray)>(60, r1);

        r50 = interfaceinvoke $r26.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setAutoRevokePermissions(int)>($i1);

        if i0 < 29 goto label1;

        z30 = 1;

        goto label2;

     label1:
        z30 = 0;

     label2:
        $z26 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: boolean bool(boolean,int,android.content.res.TypedArray)>(z30, 55, r1);

        r51 = interfaceinvoke r50.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setAllowAudioPlaybackCapture(boolean)>($z26);

        if i0 < 14 goto label3;

        z31 = 1;

        goto label4;

     label3:
        z31 = 0;

     label4:
        $z27 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: boolean bool(boolean,int,android.content.res.TypedArray)>(z31, 23, r1);

        r52 = interfaceinvoke r51.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setBaseHardwareAccelerated(boolean)>($z27);

        if i0 >= 29 goto label5;

        z32 = 1;

        goto label6;

     label5:
        z32 = 0;

     label6:
        $z28 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: boolean bool(boolean,int,android.content.res.TypedArray)>(z32, 56, r1);

        r53 = interfaceinvoke r52.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setRequestLegacyExternalStorage(boolean)>($z28);

        if i0 >= 28 goto label7;

        z33 = 1;

        goto label8;

     label7:
        z33 = 0;

     label8:
        $z29 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: boolean bool(boolean,int,android.content.res.TypedArray)>(z33, 36, r1);

        $r27 = interfaceinvoke r53.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setUsesCleartextTraffic(boolean)>($z29);

        $i2 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: int anInt(int,android.content.res.TypedArray)>(25, r1);

        $r28 = interfaceinvoke $r27.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setUiOptions(int)>($i2);

        $i3 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: int anInt(int,int,android.content.res.TypedArray)>(-1, 43, r1);

        $r29 = interfaceinvoke $r28.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setCategory(int)>($i3);

        $f0 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: float aFloat(int,android.content.res.TypedArray)>(44, r1);

        $r30 = interfaceinvoke $r29.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setMaxAspectRatio(float)>($f0);

        $f1 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: float aFloat(int,android.content.res.TypedArray)>(51, r1);

        $r31 = interfaceinvoke $r30.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setMinAspectRatio(float)>($f1);

        $i4 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: int resId(int,android.content.res.TypedArray)>(30, r1);

        $r32 = interfaceinvoke $r31.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setBanner(int)>($i4);

        $i5 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: int resId(int,android.content.res.TypedArray)>(13, r1);

        $r33 = interfaceinvoke $r32.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setDescriptionRes(int)>($i5);

        $i6 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: int resId(int,android.content.res.TypedArray)>(2, r1);

        $r34 = interfaceinvoke $r33.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setIconRes(int)>($i6);

        $i7 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: int resId(int,android.content.res.TypedArray)>(22, r1);

        $r35 = interfaceinvoke $r34.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setLogo(int)>($i7);

        $i8 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: int resId(int,android.content.res.TypedArray)>(41, r1);

        $r36 = interfaceinvoke $r35.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setNetworkSecurityConfigRes(int)>($i8);

        $i9 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: int resId(int,android.content.res.TypedArray)>(42, r1);

        $r37 = interfaceinvoke $r36.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setRoundIconRes(int)>($i9);

        $i10 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: int resId(int,android.content.res.TypedArray)>(0, r1);

        $r38 = interfaceinvoke $r37.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setTheme(int)>($i10);

        $r39 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: java.lang.String string(int,android.content.res.TypedArray)>(46, r1);

        $r40 = interfaceinvoke $r38.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setClassLoaderName(java.lang.String)>($r39);

        $r41 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: java.lang.String string(int,android.content.res.TypedArray)>(29, r1);

        $r42 = interfaceinvoke $r40.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setRequiredAccountType(java.lang.String)>($r41);

        $r43 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: java.lang.String string(int,android.content.res.TypedArray)>(28, r1);

        $r44 = interfaceinvoke $r42.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setRestrictedAccountType(java.lang.String)>($r43);

        $r45 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: java.lang.String string(int,android.content.res.TypedArray)>(52, r1);

        $r46 = interfaceinvoke $r44.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setZygotePreloadName(java.lang.String)>($r45);

        $r47 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: java.lang.String nonConfigString(int,int,android.content.res.TypedArray)>(0, 6, r1);

        interfaceinvoke $r46.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setPermission(java.lang.String)>($r47);

        return;
    }

    private android.content.pm.parsing.result.ParseResult parseBaseAppChildTag(android.content.pm.parsing.result.ParseInput, java.lang.String, android.content.pm.parsing.ParsingPackage, android.content.res.Resources, android.content.res.XmlResourceParser, int) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        android.content.pm.parsing.ParsingPackageUtils r0;
        java.lang.String r1;
        android.content.pm.parsing.ParsingPackage r2;
        android.content.res.Resources r3;
        android.content.res.XmlResourceParser r4;
        int i0, $i1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        android.content.pm.parsing.result.ParseResult $r5, $r6, $r8, $r9, $r10, $r11, $r12, $r17, r19;
        java.lang.String[] $r7;
        android.os.Bundle $r13, $r15;
        java.lang.Object $r14;
        android.content.pm.parsing.result.ParseInput r18;
        byte b2;

        r0 := @this: android.content.pm.parsing.ParsingPackageUtils;

        r18 := @parameter0: android.content.pm.parsing.result.ParseInput;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.content.pm.parsing.ParsingPackage;

        r3 := @parameter3: android.content.res.Resources;

        r4 := @parameter4: android.content.res.XmlResourceParser;

        i0 := @parameter5: int;

        $i1 = virtualinvoke r1.<java.lang.String: int hashCode()>();

        lookupswitch($i1)
        {
            case -1356765254: goto label09;
            case -1115949454: goto label08;
            case -1094759587: goto label07;
            case -1056667556: goto label06;
            case 8960125: goto label05;
            case 166208699: goto label04;
            case 178070147: goto label03;
            case 1964930885: goto label02;
            default: goto label01;
        };

     label01:
        goto label10;

     label02:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("uses-package");

        if $z0 == 0 goto label01;

        b2 = 6;

        goto label11;

     label03:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("profileable");

        if $z2 == 0 goto label01;

        b2 = 7;

        goto label11;

     label04:
        $z3 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("library");

        if $z3 == 0 goto label01;

        b2 = 2;

        goto label11;

     label05:
        $z4 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("uses-static-library");

        if $z4 == 0 goto label01;

        b2 = 3;

        goto label11;

     label06:
        $z5 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("static-library");

        if $z5 == 0 goto label01;

        b2 = 1;

        goto label11;

     label07:
        $z6 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("processes");

        if $z6 == 0 goto label01;

        b2 = 5;

        goto label11;

     label08:
        $z7 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("meta-data");

        if $z7 == 0 goto label01;

        b2 = 0;

        goto label11;

     label09:
        $z8 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("uses-library");

        if $z8 == 0 goto label01;

        b2 = 4;

        goto label11;

     label10:
        b2 = -1;

     label11:
        tableswitch(b2)
        {
            case 0: goto label20;
            case 1: goto label19;
            case 2: goto label18;
            case 3: goto label17;
            case 4: goto label16;
            case 5: goto label15;
            case 6: goto label14;
            case 7: goto label13;
            default: goto label12;
        };

     label12:
        $r17 = staticinvoke <android.content.pm.parsing.ParsingUtils: android.content.pm.parsing.result.ParseResult unknownTag(java.lang.String,android.content.pm.parsing.ParsingPackage,android.content.res.XmlResourceParser,android.content.pm.parsing.result.ParseInput)>("<application>", r2, r4, r18);

        return $r17;

     label13:
        $r5 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: android.content.pm.parsing.result.ParseResult parseProfileable(android.content.pm.parsing.result.ParseInput,android.content.pm.parsing.ParsingPackage,android.content.res.Resources,android.content.res.XmlResourceParser)>(r18, r2, r3, r4);

        return $r5;

     label14:
        $r6 = interfaceinvoke r18.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult success(java.lang.Object)>(null);

        return $r6;

     label15:
        $r7 = r0.<android.content.pm.parsing.ParsingPackageUtils: java.lang.String[] mSeparateProcesses>;

        $r8 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: android.content.pm.parsing.result.ParseResult parseProcesses(android.content.pm.parsing.result.ParseInput,android.content.pm.parsing.ParsingPackage,android.content.res.Resources,android.content.res.XmlResourceParser,java.lang.String[],int)>(r18, r2, r3, r4, $r7, i0);

        return $r8;

     label16:
        $r9 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: android.content.pm.parsing.result.ParseResult parseUsesLibrary(android.content.pm.parsing.result.ParseInput,android.content.pm.parsing.ParsingPackage,android.content.res.Resources,android.content.res.XmlResourceParser)>(r18, r2, r3, r4);

        return $r9;

     label17:
        $r10 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: android.content.pm.parsing.result.ParseResult parseUsesStaticLibrary(android.content.pm.parsing.result.ParseInput,android.content.pm.parsing.ParsingPackage,android.content.res.Resources,android.content.res.XmlResourceParser)>(r18, r2, r3, r4);

        return $r10;

     label18:
        $r11 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: android.content.pm.parsing.result.ParseResult parseLibrary(android.content.pm.parsing.ParsingPackage,android.content.res.Resources,android.content.res.XmlResourceParser,android.content.pm.parsing.result.ParseInput)>(r2, r3, r4, r18);

        return $r11;

     label19:
        $r12 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: android.content.pm.parsing.result.ParseResult parseStaticLibrary(android.content.pm.parsing.ParsingPackage,android.content.res.Resources,android.content.res.XmlResourceParser,android.content.pm.parsing.result.ParseInput)>(r2, r3, r4, r18);

        return $r12;

     label20:
        $r13 = interfaceinvoke r2.<android.content.pm.parsing.ParsingPackage: android.os.Bundle getMetaData()>();

        r19 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: android.content.pm.parsing.result.ParseResult parseMetaData(android.content.pm.parsing.ParsingPackage,android.content.res.Resources,android.content.res.XmlResourceParser,android.os.Bundle,android.content.pm.parsing.result.ParseInput)>(r2, r3, r4, $r13, r18);

        $z1 = interfaceinvoke r19.<android.content.pm.parsing.result.ParseResult: boolean isSuccess()>();

        if $z1 == 0 goto label21;

        $r14 = interfaceinvoke r19.<android.content.pm.parsing.result.ParseResult: java.lang.Object getResult()>();

        $r15 = (android.os.Bundle) $r14;

        interfaceinvoke r2.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setMetaData(android.os.Bundle)>($r15);

     label21:
        return r19;
    }

    private android.content.pm.parsing.result.ParseResult parseBaseApplication(android.content.pm.parsing.result.ParseInput, android.content.pm.parsing.ParsingPackage, android.content.res.Resources, android.content.res.XmlResourceParser, int) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.pm.parsing.ParsingPackageUtils r0;
        android.content.res.XmlResourceParser r1;
        int i0, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, i15, i16;
        java.lang.String r2, $r7, $r13, $r39, $r43, $r56, $r60, $r64, $r68, r77, r78, r79, r84, r85, r88, r89, r93, r94, r97, r98, r101, r104, r106, r109;
        int[] $r3;
        java.lang.Object $r6, $r10, $r19, $r25, $r29, $r32, $r35;
        java.lang.String[] $r9, $r23, $r28, $r31;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, z25, z26, z27, z28, z29, z30, z31, z32, z33, z34, z35, z36, z37, z38, z39, z40, z41, z42, z43, z44, z45, z46, $z47;
        android.content.pm.parsing.result.ParseResult $r15, $r22, $r24, r75, r80, r82, r87, r91, r95, r96, r100, r102, r103, r105, r108, r110, r114;
        android.content.pm.parsing.component.ParsedActivity $r20, r111, r113;
        android.content.pm.parsing.component.ParsedProvider $r33;
        java.lang.Boolean $r44;
        android.content.pm.parsing.ParsingPackageUtils$Callback $r47;
        android.content.pm.parsing.ParsingPackage $r49, $r50, $r51, $r52, r72;
        java.lang.CharSequence $r62;
        java.lang.Throwable $r69, $r70, r76;
        android.content.pm.parsing.result.ParseInput r71;
        android.content.res.Resources r73;
        android.content.res.TypedArray r74;
        java.lang.StringBuilder r81, r86, r90, r99, r107;
        android.util.TypedValue r83, r92;
        byte b17;
        android.content.pm.parsing.component.ParsedService r112;

        r0 := @this: android.content.pm.parsing.ParsingPackageUtils;

        r71 := @parameter0: android.content.pm.parsing.result.ParseInput;

        r72 := @parameter1: android.content.pm.parsing.ParsingPackage;

        r73 := @parameter2: android.content.res.Resources;

        r1 := @parameter3: android.content.res.XmlResourceParser;

        i0 := @parameter4: int;

        r2 = interfaceinvoke r72.<android.content.pm.parsing.ParsingPackage: java.lang.String getPackageName()>();

        i14 = interfaceinvoke r72.<android.content.pm.parsing.ParsingPackage: int getTargetSdkVersion()>();

        $r3 = <com.android.internal.R$styleable: int[] AndroidManifestApplication>;

        r74 = virtualinvoke r73.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r1, $r3);

        if r74 != null goto label004;

     label001:
        r75 = interfaceinvoke r71.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(java.lang.String)>("<application> does not contain any attributes");

     label002:
        virtualinvoke r74.<android.content.res.TypedArray: void recycle()>();

        return r75;

     label003:
        $r70 := @caughtexception;

        r76 = $r70;

        goto label135;

     label004:
        r77 = virtualinvoke r74.<android.content.res.TypedArray: java.lang.String getNonConfigurationString(int,int)>(3, 0);

     label005:
        if r77 == null goto label012;

     label006:
        r78 = interfaceinvoke r72.<android.content.pm.parsing.ParsingPackage: java.lang.String getPackageName()>();

        r79 = staticinvoke <android.content.pm.parsing.ParsingUtils: java.lang.String buildClassName(java.lang.String,java.lang.CharSequence)>(r78, r77);

        $r64 = <android.content.pm.PackageManager: java.lang.String APP_DETAILS_ACTIVITY_CLASS_NAME>;

        $z24 = virtualinvoke $r64.<java.lang.String: boolean equals(java.lang.Object)>(r79);

        if $z24 == 0 goto label008;

        r80 = interfaceinvoke r71.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(java.lang.String)>("<application> invalid android:name");

     label007:
        virtualinvoke r74.<android.content.res.TypedArray: void recycle()>();

        return r80;

     label008:
        if r79 != null goto label011;

     label009:
        r81 = new java.lang.StringBuilder;

        specialinvoke r81.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Empty class name in package ");

        virtualinvoke r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r78);

        $r68 = virtualinvoke r81.<java.lang.StringBuilder: java.lang.String toString()>();

        r82 = interfaceinvoke r71.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(java.lang.String)>($r68);

     label010:
        virtualinvoke r74.<android.content.res.TypedArray: void recycle()>();

        return r82;

     label011:
        interfaceinvoke r72.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setClassName(java.lang.String)>(r79);

     label012:
        r83 = virtualinvoke r74.<android.content.res.TypedArray: android.util.TypedValue peekValue(int)>(1);

     label013:
        if r83 == null goto label015;

     label014:
        $i12 = r83.<android.util.TypedValue: int resourceId>;

        interfaceinvoke r72.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setLabelRes(int)>($i12);

        $i13 = r83.<android.util.TypedValue: int resourceId>;

        if $i13 != 0 goto label015;

        $r62 = virtualinvoke r83.<android.util.TypedValue: java.lang.CharSequence coerceToString()>();

        interfaceinvoke r72.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setNonLocalizedLabel(java.lang.CharSequence)>($r62);

     label015:
        specialinvoke r0.<android.content.pm.parsing.ParsingPackageUtils: void parseBaseAppBasicFlags(android.content.pm.parsing.ParsingPackage,android.content.res.TypedArray)>(r72, r74);

        r84 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: java.lang.String nonConfigString(int,int,android.content.res.TypedArray)>(1024, 4, r74);

     label016:
        if r84 == null goto label022;

     label017:
        r85 = staticinvoke <android.content.pm.parsing.ParsingUtils: java.lang.String buildClassName(java.lang.String,java.lang.CharSequence)>(r2, r84);

     label018:
        if r85 != null goto label021;

     label019:
        r86 = new java.lang.StringBuilder;

        specialinvoke r86.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Empty class name in package ");

        virtualinvoke r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r60 = virtualinvoke r86.<java.lang.StringBuilder: java.lang.String toString()>();

        r87 = interfaceinvoke r71.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(java.lang.String)>($r60);

     label020:
        virtualinvoke r74.<android.content.res.TypedArray: void recycle()>();

        return r87;

     label021:
        interfaceinvoke r72.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setManageSpaceActivityName(java.lang.String)>(r85);

     label022:
        z25 = interfaceinvoke r72.<android.content.pm.parsing.ParsingPackage: boolean isAllowBackup()>();

     label023:
        if z25 == 0 goto label040;

     label024:
        r88 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: java.lang.String nonConfigString(int,int,android.content.res.TypedArray)>(1024, 16, r74);

     label025:
        if r88 == null goto label032;

     label026:
        r89 = staticinvoke <android.content.pm.parsing.ParsingUtils: java.lang.String buildClassName(java.lang.String,java.lang.CharSequence)>(r2, r88);

     label027:
        if r89 != null goto label030;

     label028:
        r90 = new java.lang.StringBuilder;

        specialinvoke r90.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Empty class name in package ");

        virtualinvoke r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r56 = virtualinvoke r90.<java.lang.StringBuilder: java.lang.String toString()>();

        r91 = interfaceinvoke r71.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(java.lang.String)>($r56);

     label029:
        virtualinvoke r74.<android.content.res.TypedArray: void recycle()>();

        return r91;

     label030:
        $r49 = interfaceinvoke r72.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setBackupAgentName(java.lang.String)>(r89);

        $z20 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: boolean bool(boolean,int,android.content.res.TypedArray)>(1, 18, r74);

        $r50 = interfaceinvoke $r49.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setKillAfterRestore(boolean)>($z20);

        $z21 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: boolean bool(boolean,int,android.content.res.TypedArray)>(0, 21, r74);

        $r51 = interfaceinvoke $r50.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setRestoreAnyVersion(boolean)>($z21);

        $z22 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: boolean bool(boolean,int,android.content.res.TypedArray)>(0, 32, r74);

        $r52 = interfaceinvoke $r51.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setFullBackupOnly(boolean)>($z22);

        $z23 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: boolean bool(boolean,int,android.content.res.TypedArray)>(0, 40, r74);

        interfaceinvoke $r52.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setBackupInForeground(boolean)>($z23);

     label031:
        goto label032;

     label032:
        r92 = virtualinvoke r74.<android.content.res.TypedArray: android.util.TypedValue peekValue(int)>(35);

     label033:
        if r92 == null goto label040;

     label034:
        i15 = r92.<android.util.TypedValue: int resourceId>;

     label035:
        $i10 = r92.<android.util.TypedValue: int resourceId>;

        if $i10 != 0 goto label038;

        $i11 = r92.<android.util.TypedValue: int data>;

        if $i11 != 0 goto label037;

     label036:
        i15 = -1;

        goto label038;

     label037:
        i15 = 0;

     label038:
        interfaceinvoke r72.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setFullBackupContent(int)>(i15);

     label039:
        goto label040;

     label040:
        z26 = virtualinvoke r74.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(8, 0);

     label041:
        if z26 == 0 goto label049;

     label042:
        r93 = virtualinvoke r74.<android.content.res.TypedArray: java.lang.String getNonResourceString(int)>(45);

     label043:
        if r93 == null goto label047;

     label044:
        $r47 = r0.<android.content.pm.parsing.ParsingPackageUtils: android.content.pm.parsing.ParsingPackageUtils$Callback mCallback>;

        $z19 = interfaceinvoke $r47.<android.content.pm.parsing.ParsingPackageUtils$Callback: boolean hasFeature(java.lang.String)>(r93);

        if $z19 == 0 goto label046;

     label045:
        goto label047;

     label046:
        z27 = 0;

        goto label048;

     label047:
        z27 = 1;

     label048:
        interfaceinvoke r72.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setPersistent(boolean)>(z27);

     label049:
        z28 = interfaceinvoke r72.<android.content.pm.parsing.ParsingPackage: boolean isProfileableByShell()>();

     label050:
        if z28 != 0 goto label054;

     label051:
        z29 = interfaceinvoke r72.<android.content.pm.parsing.ParsingPackage: boolean isDebuggable()>();

     label052:
        if z29 == 0 goto label053;

        goto label054;

     label053:
        z30 = 0;

        goto label055;

     label054:
        z30 = 1;

     label055:
        interfaceinvoke r72.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setProfileableByShell(boolean)>(z30);

        z31 = virtualinvoke r74.<android.content.res.TypedArray: boolean hasValueOrEmpty(int)>(37);

     label056:
        if z31 == 0 goto label059;

     label057:
        $z18 = virtualinvoke r74.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(37, 1);

        $r44 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z18);

        interfaceinvoke r72.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setResizeableActivity(java.lang.Boolean)>($r44);

     label058:
        goto label062;

     label059:
        if i14 < 24 goto label060;

        z32 = 1;

        goto label061;

     label060:
        z32 = 0;

     label061:
        interfaceinvoke r72.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setResizeableActivityViaSdkVersion(boolean)>(z32);

     label062:
        if i14 < 8 goto label065;

     label063:
        r94 = virtualinvoke r74.<android.content.res.TypedArray: java.lang.String getNonConfigurationString(int,int)>(12, 1024);

     label064:
        goto label066;

     label065:
        r94 = virtualinvoke r74.<android.content.res.TypedArray: java.lang.String getNonResourceString(int)>(12);

     label066:
        r95 = staticinvoke <android.content.pm.parsing.component.ComponentParseUtils: android.content.pm.parsing.result.ParseResult buildTaskAffinityName(java.lang.String,java.lang.String,java.lang.CharSequence,android.content.pm.parsing.result.ParseInput)>(r2, r2, r94, r71);

        z33 = interfaceinvoke r95.<android.content.pm.parsing.result.ParseResult: boolean isError()>();

     label067:
        if z33 == 0 goto label070;

     label068:
        r96 = interfaceinvoke r71.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(android.content.pm.parsing.result.ParseResult)>(r95);

     label069:
        virtualinvoke r74.<android.content.res.TypedArray: void recycle()>();

        return r96;

     label070:
        $r6 = interfaceinvoke r95.<android.content.pm.parsing.result.ParseResult: java.lang.Object getResult()>();

        $r7 = (java.lang.String) $r6;

        interfaceinvoke r72.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setTaskAffinity(java.lang.String)>($r7);

        r97 = virtualinvoke r74.<android.content.res.TypedArray: java.lang.String getNonResourceString(int)>(48);

     label071:
        if r97 == null goto label077;

     label072:
        r98 = staticinvoke <android.content.pm.parsing.ParsingUtils: java.lang.String buildClassName(java.lang.String,java.lang.CharSequence)>(r2, r97);

     label073:
        if r98 != null goto label076;

     label074:
        r99 = new java.lang.StringBuilder;

        specialinvoke r99.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Empty class name in package ");

        virtualinvoke r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r43 = virtualinvoke r99.<java.lang.StringBuilder: java.lang.String toString()>();

        r100 = interfaceinvoke r71.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(java.lang.String)>($r43);

     label075:
        virtualinvoke r74.<android.content.res.TypedArray: void recycle()>();

        return r100;

     label076:
        interfaceinvoke r72.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setAppComponentFactory(java.lang.String)>(r98);

     label077:
        if i14 < 8 goto label080;

     label078:
        r101 = virtualinvoke r74.<android.content.res.TypedArray: java.lang.String getNonConfigurationString(int,int)>(11, 1024);

     label079:
        goto label081;

     label080:
        r101 = virtualinvoke r74.<android.content.res.TypedArray: java.lang.String getNonResourceString(int)>(11);

     label081:
        $r9 = r0.<android.content.pm.parsing.ParsingPackageUtils: java.lang.String[] mSeparateProcesses>;

        r102 = staticinvoke <android.content.pm.parsing.component.ComponentParseUtils: android.content.pm.parsing.result.ParseResult buildProcessName(java.lang.String,java.lang.String,java.lang.CharSequence,int,java.lang.String[],android.content.pm.parsing.result.ParseInput)>(r2, null, r101, i0, $r9, r71);

        z34 = interfaceinvoke r102.<android.content.pm.parsing.result.ParseResult: boolean isError()>();

     label082:
        if z34 == 0 goto label085;

     label083:
        r103 = interfaceinvoke r71.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(android.content.pm.parsing.result.ParseResult)>(r102);

     label084:
        virtualinvoke r74.<android.content.res.TypedArray: void recycle()>();

        return r103;

     label085:
        $r10 = interfaceinvoke r102.<android.content.pm.parsing.result.ParseResult: java.lang.Object getResult()>();

        r104 = (java.lang.String) $r10;

        interfaceinvoke r72.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setProcessName(java.lang.String)>(r104);

        z35 = interfaceinvoke r72.<android.content.pm.parsing.ParsingPackage: boolean isCantSaveState()>();

     label086:
        if z35 == 0 goto label089;

        if r104 == null goto label089;

     label087:
        $z17 = virtualinvoke r104.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z17 != 0 goto label089;

        r105 = interfaceinvoke r71.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(java.lang.String)>("cantSaveState applications can not use custom processes");

     label088:
        virtualinvoke r74.<android.content.res.TypedArray: void recycle()>();

        return r105;

     label089:
        r106 = interfaceinvoke r72.<android.content.pm.parsing.ParsingPackage: java.lang.String getClassLoaderName()>();

     label090:
        if r106 == null goto label093;

     label091:
        $z16 = staticinvoke <com.android.internal.os.ClassLoaderFactory: boolean isValidClassLoaderName(java.lang.String)>(r106);

        if $z16 != 0 goto label093;

        r107 = new java.lang.StringBuilder;

        specialinvoke r107.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r107.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid class loader name: ");

        virtualinvoke r107.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r106);

        $r39 = virtualinvoke r107.<java.lang.StringBuilder: java.lang.String toString()>();

        r108 = interfaceinvoke r71.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(java.lang.String)>($r39);

     label092:
        virtualinvoke r74.<android.content.res.TypedArray: void recycle()>();

        return r108;

     label093:
        $i3 = virtualinvoke r74.<android.content.res.TypedArray: int getInt(int,int)>(62, -1);

        interfaceinvoke r72.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setGwpAsanMode(int)>($i3);

     label094:
        virtualinvoke r74.<android.content.res.TypedArray: void recycle()>();

        z36 = 0;

        i2 = interfaceinvoke r1.<android.content.res.XmlResourceParser: int getDepth()>();

        z37 = 0;

        z38 = 0;

     label095:
        i16 = interfaceinvoke r1.<android.content.res.XmlResourceParser: int next()>();

        if i16 == 1 goto label128;

        if i16 != 3 goto label097;

        $i9 = interfaceinvoke r1.<android.content.res.XmlResourceParser: int getDepth()>();

        if $i9 <= i2 goto label096;

        goto label097;

     label096:
        goto label128;

     label097:
        if i16 == 2 goto label098;

        goto label095;

     label098:
        r109 = interfaceinvoke r1.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        z39 = 0;

        $i4 = virtualinvoke r109.<java.lang.String: int hashCode()>();

        lookupswitch($i4)
        {
            case -1655966961: goto label104;
            case -987494927: goto label103;
            case -808719889: goto label102;
            case 790287890: goto label101;
            case 1984153269: goto label100;
            default: goto label099;
        };

     label099:
        goto label105;

     label100:
        $z3 = virtualinvoke r109.<java.lang.String: boolean equals(java.lang.Object)>("service");

        if $z3 == 0 goto label099;

        b17 = 2;

        goto label106;

     label101:
        $z12 = virtualinvoke r109.<java.lang.String: boolean equals(java.lang.Object)>("activity-alias");

        if $z12 == 0 goto label099;

        b17 = 4;

        goto label106;

     label102:
        $z13 = virtualinvoke r109.<java.lang.String: boolean equals(java.lang.Object)>("receiver");

        if $z13 == 0 goto label099;

        b17 = 1;

        goto label106;

     label103:
        $z14 = virtualinvoke r109.<java.lang.String: boolean equals(java.lang.Object)>("provider");

        if $z14 == 0 goto label099;

        b17 = 3;

        goto label106;

     label104:
        $z15 = virtualinvoke r109.<java.lang.String: boolean equals(java.lang.Object)>("activity");

        if $z15 == 0 goto label099;

        b17 = 0;

        goto label106;

     label105:
        b17 = -1;

     label106:
        if b17 == 0 goto label118;

        if b17 == 1 goto label117;

        if b17 == 2 goto label113;

        if b17 == 3 goto label111;

        if b17 == 4 goto label107;

        r110 = specialinvoke r0.<android.content.pm.parsing.ParsingPackageUtils: android.content.pm.parsing.result.ParseResult parseBaseAppChildTag(android.content.pm.parsing.result.ParseInput,java.lang.String,android.content.pm.parsing.ParsingPackage,android.content.res.Resources,android.content.res.XmlResourceParser,int)>(r71, r109, r72, r73, r1, i0);

        z40 = z36;

        goto label126;

     label107:
        $z10 = <android.content.pm.PackageParser: boolean sUseRoundIcon>;

        r110 = staticinvoke <android.content.pm.parsing.component.ParsedActivityUtils: android.content.pm.parsing.result.ParseResult parseActivityAlias(android.content.pm.parsing.ParsingPackage,android.content.res.Resources,android.content.res.XmlResourceParser,boolean,android.content.pm.parsing.result.ParseInput)>(r72, r73, r1, $z10, r71);

        z40 = z36;

        $z11 = interfaceinvoke r110.<android.content.pm.parsing.result.ParseResult: boolean isSuccess()>();

        if $z11 == 0 goto label110;

        $r35 = interfaceinvoke r110.<android.content.pm.parsing.result.ParseResult: java.lang.Object getResult()>();

        r111 = (android.content.pm.parsing.component.ParsedActivity) $r35;

        $i8 = virtualinvoke r111.<android.content.pm.parsing.component.ParsedActivity: int getOrder()>();

        if $i8 == 0 goto label108;

        z41 = 1;

        goto label109;

     label108:
        z41 = 0;

     label109:
        z40 = z36 | z41;

        interfaceinvoke r72.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage addActivity(android.content.pm.parsing.component.ParsedActivity)>(r111);

     label110:
        goto label126;

     label111:
        $r31 = r0.<android.content.pm.parsing.ParsingPackageUtils: java.lang.String[] mSeparateProcesses>;

        $z8 = <android.content.pm.PackageParser: boolean sUseRoundIcon>;

        r110 = staticinvoke <android.content.pm.parsing.component.ParsedProviderUtils: android.content.pm.parsing.result.ParseResult parseProvider(java.lang.String[],android.content.pm.parsing.ParsingPackage,android.content.res.Resources,android.content.res.XmlResourceParser,int,boolean,android.content.pm.parsing.result.ParseInput)>($r31, r72, r73, r1, i0, $z8, r71);

        $z9 = interfaceinvoke r110.<android.content.pm.parsing.result.ParseResult: boolean isSuccess()>();

        if $z9 == 0 goto label112;

        $r32 = interfaceinvoke r110.<android.content.pm.parsing.result.ParseResult: java.lang.Object getResult()>();

        $r33 = (android.content.pm.parsing.component.ParsedProvider) $r32;

        interfaceinvoke r72.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage addProvider(android.content.pm.parsing.component.ParsedProvider)>($r33);

     label112:
        z40 = z36;

        goto label126;

     label113:
        $r28 = r0.<android.content.pm.parsing.ParsingPackageUtils: java.lang.String[] mSeparateProcesses>;

        $z6 = <android.content.pm.PackageParser: boolean sUseRoundIcon>;

        r110 = staticinvoke <android.content.pm.parsing.component.ParsedServiceUtils: android.content.pm.parsing.result.ParseResult parseService(java.lang.String[],android.content.pm.parsing.ParsingPackage,android.content.res.Resources,android.content.res.XmlResourceParser,int,boolean,android.content.pm.parsing.result.ParseInput)>($r28, r72, r73, r1, i0, $z6, r71);

        z42 = z38;

        $z7 = interfaceinvoke r110.<android.content.pm.parsing.result.ParseResult: boolean isSuccess()>();

        if $z7 == 0 goto label116;

        $r29 = interfaceinvoke r110.<android.content.pm.parsing.result.ParseResult: java.lang.Object getResult()>();

        r112 = (android.content.pm.parsing.component.ParsedService) $r29;

        $i7 = virtualinvoke r112.<android.content.pm.parsing.component.ParsedService: int getOrder()>();

        if $i7 == 0 goto label114;

        z43 = 1;

        goto label115;

     label114:
        z43 = 0;

     label115:
        z42 = z38 | z43;

        interfaceinvoke r72.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage addService(android.content.pm.parsing.component.ParsedService)>(r112);

     label116:
        z40 = z36;

        z38 = z42;

        goto label126;

     label117:
        goto label119;

     label118:
        z39 = 1;

     label119:
        $r23 = r0.<android.content.pm.parsing.ParsingPackageUtils: java.lang.String[] mSeparateProcesses>;

        $z4 = <android.content.pm.PackageParser: boolean sUseRoundIcon>;

        r110 = staticinvoke <android.content.pm.parsing.component.ParsedActivityUtils: android.content.pm.parsing.result.ParseResult parseActivityOrReceiver(java.lang.String[],android.content.pm.parsing.ParsingPackage,android.content.res.Resources,android.content.res.XmlResourceParser,int,boolean,android.content.pm.parsing.result.ParseInput)>($r23, r72, r73, r1, i0, $z4, r71);

        z40 = z36;

        z44 = z37;

        $z5 = interfaceinvoke r110.<android.content.pm.parsing.result.ParseResult: boolean isSuccess()>();

        if $z5 == 0 goto label125;

        $r25 = interfaceinvoke r110.<android.content.pm.parsing.result.ParseResult: java.lang.Object getResult()>();

        r113 = (android.content.pm.parsing.component.ParsedActivity) $r25;

        if z39 == 0 goto label122;

        $i6 = virtualinvoke r113.<android.content.pm.parsing.component.ParsedActivity: int getOrder()>();

        if $i6 == 0 goto label120;

        z45 = 1;

        goto label121;

     label120:
        z45 = 0;

     label121:
        z40 = z36 | z45;

        interfaceinvoke r72.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage addActivity(android.content.pm.parsing.component.ParsedActivity)>(r113);

        z44 = z37;

        goto label125;

     label122:
        $i5 = virtualinvoke r113.<android.content.pm.parsing.component.ParsedActivity: int getOrder()>();

        if $i5 == 0 goto label123;

        z46 = 1;

        goto label124;

     label123:
        z46 = 0;

     label124:
        z44 = z37 | z46;

        interfaceinvoke r72.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage addReceiver(android.content.pm.parsing.component.ParsedActivity)>(r113);

        z40 = z36;

     label125:
        z37 = z44;

     label126:
        $z47 = interfaceinvoke r110.<android.content.pm.parsing.result.ParseResult: boolean isError()>();

        if $z47 == 0 goto label127;

        $r24 = interfaceinvoke r71.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(android.content.pm.parsing.result.ParseResult)>(r110);

        return $r24;

     label127:
        z36 = z40;

        goto label095;

     label128:
        $r13 = interfaceinvoke r72.<android.content.pm.parsing.ParsingPackage: java.lang.String getStaticSharedLibName()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r13);

        if $z0 == 0 goto label130;

        r114 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: android.content.pm.parsing.result.ParseResult generateAppDetailsHiddenActivity(android.content.pm.parsing.result.ParseInput,android.content.pm.parsing.ParsingPackage)>(r71, r72);

        $z2 = interfaceinvoke r114.<android.content.pm.parsing.result.ParseResult: boolean isError()>();

        if $z2 == 0 goto label129;

        $r22 = interfaceinvoke r71.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(android.content.pm.parsing.result.ParseResult)>(r114);

        return $r22;

     label129:
        $r19 = interfaceinvoke r114.<android.content.pm.parsing.result.ParseResult: java.lang.Object getResult()>();

        $r20 = (android.content.pm.parsing.component.ParsedActivity) $r19;

        interfaceinvoke r72.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage addActivity(android.content.pm.parsing.component.ParsedActivity)>($r20);

     label130:
        if z36 == 0 goto label131;

        interfaceinvoke r72.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage sortActivities()>();

     label131:
        if z37 == 0 goto label132;

        interfaceinvoke r72.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage sortReceivers()>();

     label132:
        if z38 == 0 goto label133;

        interfaceinvoke r72.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage sortServices()>();

     label133:
        staticinvoke <android.content.pm.parsing.ParsingPackageUtils: void setMaxAspectRatio(android.content.pm.parsing.ParsingPackage)>(r72);

        specialinvoke r0.<android.content.pm.parsing.ParsingPackageUtils: void setMinAspectRatio(android.content.pm.parsing.ParsingPackage)>(r72);

        specialinvoke r0.<android.content.pm.parsing.ParsingPackageUtils: void setSupportsSizeChanges(android.content.pm.parsing.ParsingPackage)>(r72);

        $z1 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: boolean hasDomainURLs(android.content.pm.parsing.ParsingPackage)>(r72);

        interfaceinvoke r72.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setHasDomainUrls(boolean)>($z1);

        $r15 = interfaceinvoke r71.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult success(java.lang.Object)>(r72);

        return $r15;

     label134:
        $r69 := @caughtexception;

        r76 = $r69;

     label135:
        virtualinvoke r74.<android.content.res.TypedArray: void recycle()>();

        throw r76;

        catch java.lang.Throwable from label001 to label002 with label003;
        catch java.lang.Throwable from label004 to label005 with label134;
        catch java.lang.Throwable from label006 to label007 with label003;
        catch java.lang.Throwable from label009 to label010 with label003;
        catch java.lang.Throwable from label011 to label012 with label003;
        catch java.lang.Throwable from label012 to label013 with label134;
        catch java.lang.Throwable from label014 to label015 with label003;
        catch java.lang.Throwable from label015 to label016 with label134;
        catch java.lang.Throwable from label017 to label018 with label003;
        catch java.lang.Throwable from label019 to label020 with label003;
        catch java.lang.Throwable from label021 to label022 with label003;
        catch java.lang.Throwable from label022 to label023 with label134;
        catch java.lang.Throwable from label024 to label025 with label003;
        catch java.lang.Throwable from label026 to label027 with label003;
        catch java.lang.Throwable from label028 to label029 with label003;
        catch java.lang.Throwable from label030 to label031 with label003;
        catch java.lang.Throwable from label032 to label033 with label003;
        catch java.lang.Throwable from label034 to label035 with label003;
        catch java.lang.Throwable from label035 to label036 with label003;
        catch java.lang.Throwable from label038 to label039 with label003;
        catch java.lang.Throwable from label040 to label041 with label134;
        catch java.lang.Throwable from label042 to label043 with label003;
        catch java.lang.Throwable from label044 to label045 with label003;
        catch java.lang.Throwable from label048 to label049 with label003;
        catch java.lang.Throwable from label049 to label050 with label134;
        catch java.lang.Throwable from label051 to label052 with label003;
        catch java.lang.Throwable from label055 to label056 with label134;
        catch java.lang.Throwable from label057 to label058 with label003;
        catch java.lang.Throwable from label061 to label062 with label134;
        catch java.lang.Throwable from label063 to label064 with label003;
        catch java.lang.Throwable from label065 to label066 with label134;
        catch java.lang.Throwable from label066 to label067 with label134;
        catch java.lang.Throwable from label068 to label069 with label003;
        catch java.lang.Throwable from label070 to label071 with label134;
        catch java.lang.Throwable from label072 to label073 with label003;
        catch java.lang.Throwable from label074 to label075 with label003;
        catch java.lang.Throwable from label076 to label077 with label003;
        catch java.lang.Throwable from label078 to label079 with label003;
        catch java.lang.Throwable from label080 to label081 with label134;
        catch java.lang.Throwable from label081 to label082 with label134;
        catch java.lang.Throwable from label083 to label084 with label003;
        catch java.lang.Throwable from label085 to label086 with label134;
        catch java.lang.Throwable from label087 to label088 with label003;
        catch java.lang.Throwable from label089 to label090 with label134;
        catch java.lang.Throwable from label091 to label092 with label003;
        catch java.lang.Throwable from label093 to label094 with label134;
    }

    private android.content.pm.parsing.result.ParseResult parseClusterPackage(android.content.pm.parsing.result.ParseInput, java.io.File, int)
    {
        android.content.pm.parsing.ParsingPackageUtils r0;
        int i0, i1, i2;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.lang.Object $r1, $r3, r37, r40, r43, r66, r84, r85, r87;
        java.lang.String[] $r4, $r7, $r8, $r10, $r12;
        int[] $r6;
        java.lang.String $r17, $r24, $r53, $r57, $r90, $r91;
        android.content.pm.parsing.result.ParseResult $r18, $r19, $r25, r33, r58, r62, r88, r92;
        android.content.pm.PackageParser$PackageParserException $r20, $r26, $r27, r64;
        android.content.pm.split.SplitDependencyLoader$IllegalDependencyException $r23;
        java.lang.Throwable $r28, $r29, $r30, r63;
        android.content.pm.parsing.result.ParseInput r31;
        java.io.File r32, r96;
        android.content.pm.PackageParser$PackageLite r34, r44, r65, r86;
        android.util.SparseArray r36;
        android.content.res.AssetManager r45, r83;
        android.content.pm.parsing.ParsingPackage r70;
        java.lang.StringBuilder r93, r97;
        android.content.pm.split.SplitAssetDependencyLoader r94;
        android.content.pm.split.DefaultSplitAssetLoader r95;
        android.content.pm.split.SplitAssetLoader r98, r100;
        java.lang.AutoCloseable r99, r101, r102, r103;

        r0 := @this: android.content.pm.parsing.ParsingPackageUtils;

        r31 := @parameter0: android.content.pm.parsing.result.ParseInput;

        r32 := @parameter1: java.io.File;

        i0 := @parameter2: int;

        r33 = staticinvoke <android.content.pm.parsing.ApkLiteParseUtils: android.content.pm.parsing.result.ParseResult parseClusterPackageLite(android.content.pm.parsing.result.ParseInput,java.io.File,int)>(r31, r32, 0);

        $z1 = interfaceinvoke r33.<android.content.pm.parsing.result.ParseResult: boolean isError()>();

        if $z1 == 0 goto label01;

        $r19 = interfaceinvoke r31.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(android.content.pm.parsing.result.ParseResult)>(r33);

        return $r19;

     label01:
        $r1 = interfaceinvoke r33.<android.content.pm.parsing.result.ParseResult: java.lang.Object getResult()>();

        r34 = (android.content.pm.PackageParser$PackageLite) $r1;

        $z2 = r0.<android.content.pm.parsing.ParsingPackageUtils: boolean mOnlyCoreApps>;

        if $z2 == 0 goto label02;

        $z7 = r34.<android.content.pm.PackageParser$PackageLite: boolean coreApp>;

        if $z7 != 0 goto label02;

        r93 = new java.lang.StringBuilder;

        specialinvoke r93.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not a coreApp: ");

        virtualinvoke r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r32);

        $r17 = virtualinvoke r93.<java.lang.StringBuilder: java.lang.String toString()>();

        $r18 = interfaceinvoke r31.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(int,java.lang.String)>(-123, $r17);

        return $r18;

     label02:
        $z3 = r34.<android.content.pm.PackageParser$PackageLite: boolean isolatedSplits>;

        if $z3 == 0 goto label06;

        $r12 = r34.<android.content.pm.PackageParser$PackageLite: java.lang.String[] splitNames>;

        $z6 = staticinvoke <com.android.internal.util.ArrayUtils: boolean isEmpty(java.lang.Object[])>($r12);

        if $z6 != 0 goto label06;

     label03:
        r36 = staticinvoke <android.content.pm.split.SplitAssetDependencyLoader: android.util.SparseArray createDependenciesFromPackage(android.content.pm.PackageParser$PackageLite)>(r34);

        r94 = new android.content.pm.split.SplitAssetDependencyLoader;

        specialinvoke r94.<android.content.pm.split.SplitAssetDependencyLoader: void <init>(android.content.pm.PackageParser$PackageLite,android.util.SparseArray,int)>(r34, r36, i0);

        r37 = r94;

     label04:
        goto label07;

     label05:
        $r23 := @caughtexception;

        $r24 = virtualinvoke $r23.<android.content.pm.split.SplitDependencyLoader$IllegalDependencyException: java.lang.String getMessage()>();

        $r25 = interfaceinvoke r31.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(int,java.lang.String)>(-101, $r24);

        return $r25;

     label06:
        r95 = new android.content.pm.split.DefaultSplitAssetLoader;

        specialinvoke r95.<android.content.pm.split.DefaultSplitAssetLoader: void <init>(android.content.pm.PackageParser$PackageLite,int)>(r34, i0);

        r37 = r95;

        r36 = null;

     label07:
        r40 = r37;

        r43 = r37;

        r44 = r34;

     label08:
        r98 = (android.content.pm.split.SplitAssetLoader) r37;

        r45 = interfaceinvoke r98.<android.content.pm.split.SplitAssetLoader: android.content.res.AssetManager getBaseAssetManager()>();

     label09:
        r40 = r37;

        r43 = r37;

        r44 = r34;

     label10:
        r96 = new java.io.File;

     label11:
        r40 = r37;

        r43 = r37;

        r44 = r34;

     label12:
        $r53 = r34.<android.content.pm.PackageParser$PackageLite: java.lang.String baseCodePath>;

        specialinvoke r96.<java.io.File: void <init>(java.lang.String)>($r53);

     label13:
        r40 = r37;

        r43 = r37;

        r44 = r34;

     label14:
        $r57 = r34.<android.content.pm.PackageParser$PackageLite: java.lang.String codePath>;

        r58 = specialinvoke r0.<android.content.pm.parsing.ParsingPackageUtils: android.content.pm.parsing.result.ParseResult parseBaseApk(android.content.pm.parsing.result.ParseInput,java.io.File,java.lang.String,android.content.res.AssetManager,int)>(r31, r96, $r57, r45, i0);

     label15:
        r40 = r37;

        r43 = r37;

        r44 = r34;

     label16:
        z0 = interfaceinvoke r58.<android.content.pm.parsing.result.ParseResult: boolean isError()>();

     label17:
        if z0 == 0 goto label22;

     label18:
        r62 = interfaceinvoke r31.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(android.content.pm.parsing.result.ParseResult)>(r58);

     label19:
        r99 = (java.lang.AutoCloseable) r37;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r99);

        return r62;

     label20:
        $r29 := @caughtexception;

        r63 = $r29;

        goto label58;

     label21:
        $r27 := @caughtexception;

        r64 = $r27;

        r65 = r34;

        r66 = r37;

        goto label46;

     label22:
        r40 = r37;

        r43 = r37;

        r44 = r34;

     label23:
        $r3 = interfaceinvoke r58.<android.content.pm.parsing.result.ParseResult: java.lang.Object getResult()>();

        r70 = (android.content.pm.parsing.ParsingPackage) $r3;

     label24:
        r40 = r37;

        r43 = r37;

        r44 = r34;

     label25:
        $r4 = r34.<android.content.pm.PackageParser$PackageLite: java.lang.String[] splitNames>;

        $z4 = staticinvoke <com.android.internal.util.ArrayUtils: boolean isEmpty(java.lang.Object[])>($r4);

        if $z4 != 0 goto label37;

     label26:
        r40 = r37;

        r43 = r37;

        r44 = r34;

     label27:
        $r8 = r34.<android.content.pm.PackageParser$PackageLite: java.lang.String[] splitNames>;

        $r7 = r34.<android.content.pm.PackageParser$PackageLite: java.lang.String[] splitCodePaths>;

        $r6 = r34.<android.content.pm.PackageParser$PackageLite: int[] splitRevisionCodes>;

        interfaceinvoke r70.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage asSplit(java.lang.String[],java.lang.String[],int[],android.util.SparseArray)>($r8, $r7, $r6, r36);

     label28:
        r40 = r37;

        r43 = r37;

        r44 = r34;

     label29:
        $r10 = r34.<android.content.pm.PackageParser$PackageLite: java.lang.String[] splitNames>;

        i1 = lengthof $r10;

     label30:
        i2 = 0;

     label31:
        if i2 >= i1 goto label36;

        r40 = r37;

        r43 = r37;

        r44 = r34;

     label32:
        r100 = (android.content.pm.split.SplitAssetLoader) r37;

        r83 = interfaceinvoke r100.<android.content.pm.split.SplitAssetLoader: android.content.res.AssetManager getSplitAssetManager(int)>(i2);

     label33:
        r84 = r37;

        r65 = r34;

        r85 = r37;

     label34:
        specialinvoke r0.<android.content.pm.parsing.ParsingPackageUtils: android.content.pm.parsing.result.ParseResult parseSplitApk(android.content.pm.parsing.result.ParseInput,android.content.pm.parsing.ParsingPackage,int,android.content.res.AssetManager,int)>(r31, r70, i2, r83, i0);

     label35:
        i2 = i2 + 1;

        r37 = r84;

        goto label31;

     label36:
        r86 = r34;

        r87 = r37;

        goto label38;

     label37:
        r86 = r34;

        r87 = r37;

     label38:
        r65 = r86;

        r85 = r87;

        r37 = r87;

     label39:
        $z5 = r86.<android.content.pm.PackageParser$PackageLite: boolean use32bitAbi>;

        interfaceinvoke r70.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setUse32BitAbi(boolean)>($z5);

     label40:
        r65 = r86;

        r85 = r87;

        r37 = r87;

     label41:
        r88 = interfaceinvoke r31.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult success(java.lang.Object)>(r70);

     label42:
        r101 = (java.lang.AutoCloseable) r87;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r101);

        return r88;

     label43:
        $r20 := @caughtexception;

        r64 = $r20;

        r66 = r85;

        goto label46;

     label44:
        $r28 := @caughtexception;

        r63 = $r28;

        r37 = r40;

        goto label58;

     label45:
        $r26 := @caughtexception;

        r64 = $r26;

        r66 = r43;

        r65 = r44;

     label46:
        r37 = r66;

     label47:
        r97 = new java.lang.StringBuilder;

     label48:
        r37 = r66;

     label49:
        specialinvoke r97.<java.lang.StringBuilder: void <init>()>();

     label50:
        r37 = r66;

     label51:
        virtualinvoke r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to load assets: ");

     label52:
        r37 = r66;

     label53:
        $r90 = r65.<android.content.pm.PackageParser$PackageLite: java.lang.String baseCodePath>;

        virtualinvoke r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r90);

     label54:
        r37 = r66;

     label55:
        $r91 = virtualinvoke r97.<java.lang.StringBuilder: java.lang.String toString()>();

        r92 = interfaceinvoke r31.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(int,java.lang.String,java.lang.Exception)>(-102, $r91, r64);

     label56:
        r102 = (java.lang.AutoCloseable) r66;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r102);

        return r92;

     label57:
        $r30 := @caughtexception;

        r63 = $r30;

     label58:
        r103 = (java.lang.AutoCloseable) r37;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r103);

        throw r63;

        catch android.content.pm.split.SplitDependencyLoader$IllegalDependencyException from label03 to label04 with label05;
        catch android.content.pm.PackageParser$PackageParserException from label08 to label09 with label45;
        catch java.lang.Throwable from label08 to label09 with label44;
        catch android.content.pm.PackageParser$PackageParserException from label10 to label11 with label45;
        catch java.lang.Throwable from label10 to label11 with label44;
        catch android.content.pm.PackageParser$PackageParserException from label12 to label13 with label45;
        catch java.lang.Throwable from label12 to label13 with label44;
        catch android.content.pm.PackageParser$PackageParserException from label14 to label15 with label45;
        catch java.lang.Throwable from label14 to label15 with label44;
        catch android.content.pm.PackageParser$PackageParserException from label16 to label17 with label45;
        catch java.lang.Throwable from label16 to label17 with label44;
        catch android.content.pm.PackageParser$PackageParserException from label18 to label19 with label21;
        catch java.lang.Throwable from label18 to label19 with label20;
        catch android.content.pm.PackageParser$PackageParserException from label23 to label24 with label45;
        catch java.lang.Throwable from label23 to label24 with label44;
        catch android.content.pm.PackageParser$PackageParserException from label25 to label26 with label45;
        catch java.lang.Throwable from label25 to label26 with label44;
        catch android.content.pm.PackageParser$PackageParserException from label27 to label28 with label45;
        catch java.lang.Throwable from label27 to label28 with label44;
        catch android.content.pm.PackageParser$PackageParserException from label29 to label30 with label45;
        catch java.lang.Throwable from label29 to label30 with label44;
        catch android.content.pm.PackageParser$PackageParserException from label32 to label33 with label45;
        catch java.lang.Throwable from label32 to label33 with label44;
        catch android.content.pm.PackageParser$PackageParserException from label34 to label35 with label43;
        catch java.lang.Throwable from label34 to label35 with label57;
        catch android.content.pm.PackageParser$PackageParserException from label39 to label40 with label43;
        catch java.lang.Throwable from label39 to label40 with label57;
        catch android.content.pm.PackageParser$PackageParserException from label41 to label42 with label43;
        catch java.lang.Throwable from label41 to label42 with label57;
        catch java.lang.Throwable from label47 to label48 with label57;
        catch java.lang.Throwable from label49 to label50 with label57;
        catch java.lang.Throwable from label51 to label52 with label57;
        catch java.lang.Throwable from label53 to label54 with label57;
        catch java.lang.Throwable from label55 to label56 with label57;
    }

    public static android.content.pm.parsing.result.ParseResult parseDefault(android.content.pm.parsing.result.ParseInput, java.io.File, int, boolean)
    {
        android.content.pm.parsing.result.ParseInput r0;
        int i0;
        boolean z0, z1;
        android.content.pm.parsing.ParsingPackageUtils $r2;
        android.content.pm.parsing.ParsingPackageUtils$1 $r3;
        java.lang.Object $r4;
        android.content.pm.PackageParser$SigningDetails $r5;
        android.content.pm.PackageParser$PackageParserException $r7, $r9;
        android.content.pm.parsing.result.ParseResult $r8, $r10, r12, r14;
        java.io.File r11;
        android.content.pm.parsing.ParsingPackage r13;

        r0 := @parameter0: android.content.pm.parsing.result.ParseInput;

        r11 := @parameter1: java.io.File;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        $r2 = new android.content.pm.parsing.ParsingPackageUtils;

        $r3 = new android.content.pm.parsing.ParsingPackageUtils$1;

        specialinvoke $r3.<android.content.pm.parsing.ParsingPackageUtils$1: void <init>()>();

        specialinvoke $r2.<android.content.pm.parsing.ParsingPackageUtils: void <init>(boolean,java.lang.String[],android.util.DisplayMetrics,android.content.pm.parsing.ParsingPackageUtils$Callback)>(0, null, null, $r3);

     label1:
        r12 = virtualinvoke $r2.<android.content.pm.parsing.ParsingPackageUtils: android.content.pm.parsing.result.ParseResult parsePackage(android.content.pm.parsing.result.ParseInput,java.io.File,int)>(r0, r11, i0);

        z1 = interfaceinvoke r12.<android.content.pm.parsing.result.ParseResult: boolean isError()>();

     label2:
        if z1 == 0 goto label3;

        return r12;

     label3:
        $r4 = interfaceinvoke r12.<android.content.pm.parsing.result.ParseResult: java.lang.Object getResult()>();

        r13 = (android.content.pm.parsing.ParsingPackage) $r4;

     label4:
        if z0 == 0 goto label6;

     label5:
        $r5 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: android.content.pm.PackageParser$SigningDetails getSigningDetails(android.content.pm.parsing.ParsingPackageRead,boolean)>(r13, 0);

        interfaceinvoke r13.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setSigningDetails(android.content.pm.PackageParser$SigningDetails)>($r5);

     label6:
        r14 = interfaceinvoke r0.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult success(java.lang.Object)>(r13);

     label7:
        return r14;

     label8:
        $r9 := @caughtexception;

        $r10 = interfaceinvoke r0.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(int,java.lang.String,java.lang.Exception)>(-102, "Error collecting package certificates", $r9);

        return $r10;

     label9:
        $r7 := @caughtexception;

        $r8 = interfaceinvoke r0.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(int,java.lang.String,java.lang.Exception)>(-102, "Error parsing package", $r7);

        return $r8;

        catch android.content.pm.PackageParser$PackageParserException from label1 to label2 with label9;
        catch android.content.pm.PackageParser$PackageParserException from label3 to label4 with label8;
        catch android.content.pm.PackageParser$PackageParserException from label5 to label6 with label8;
        catch android.content.pm.PackageParser$PackageParserException from label6 to label7 with label8;
    }

    public static android.content.pm.parsing.result.ParseResult parseDefaultOneTime(java.io.File, int, boolean)
    {
        java.io.File r0;
        int i0;
        boolean z0;
        android.content.pm.parsing.result.ParseTypeImpl $r1;
        android.content.pm.parsing.result.ParseInput $r2;
        android.content.pm.parsing.result.ParseResult $r3;

        r0 := @parameter0: java.io.File;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r1 = staticinvoke <android.content.pm.parsing.result.ParseTypeImpl: android.content.pm.parsing.result.ParseTypeImpl forDefaultParsing()>();

        $r2 = virtualinvoke $r1.<android.content.pm.parsing.result.ParseTypeImpl: android.content.pm.parsing.result.ParseInput reset()>();

        $r3 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: android.content.pm.parsing.result.ParseResult parseDefault(android.content.pm.parsing.result.ParseInput,java.io.File,int,boolean)>($r2, r0, i0, z0);

        return $r3;
    }

    private static android.content.pm.parsing.result.ParseResult parseExtensionSdk(android.content.pm.parsing.result.ParseInput, android.content.res.Resources, android.content.res.XmlResourceParser, android.util.SparseIntArray)
    {
        android.content.res.XmlResourceParser r0;
        android.util.SparseIntArray r1;
        int i0, i1, i2;
        int[] $r2;
        android.content.pm.parsing.result.ParseResult $r3, $r11, $r12, $r20, r25;
        java.lang.String $r10, $r19;
        java.lang.Throwable $r13;
        java.lang.RuntimeException $r14;
        java.lang.StringBuilder $r15, r24;
        android.content.pm.parsing.result.ParseInput r21;
        android.content.res.Resources r22;
        android.content.res.TypedArray r23;

        r21 := @parameter0: android.content.pm.parsing.result.ParseInput;

        r22 := @parameter1: android.content.res.Resources;

        r0 := @parameter2: android.content.res.XmlResourceParser;

        r1 := @parameter3: android.util.SparseIntArray;

        $r2 = <com.android.internal.R$styleable: int[] AndroidManifestExtensionSdk>;

        r23 = virtualinvoke r22.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r0, $r2);

     label01:
        i0 = virtualinvoke r23.<android.content.res.TypedArray: int getInt(int,int)>(0, -1);

        i1 = virtualinvoke r23.<android.content.res.TypedArray: int getInt(int,int)>(1, -1);

     label02:
        virtualinvoke r23.<android.content.res.TypedArray: void recycle()>();

        if i0 >= 0 goto label03;

        $r12 = interfaceinvoke r21.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(int,java.lang.String)>(-108, "<extension-sdk> must specify an sdkVersion >= 0");

        return $r12;

     label03:
        if i1 >= 0 goto label04;

        $r11 = interfaceinvoke r21.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(int,java.lang.String)>(-108, "<extension-sdk> must specify minExtensionVersion >= 0");

        return $r11;

     label04:
        i2 = staticinvoke <android.os.ext.SdkExtensions: int getExtensionVersion(int)>(i0);

     label05:
        if i2 >= i1 goto label08;

     label06:
        r24 = new java.lang.StringBuilder;

        specialinvoke r24.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package requires ");

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" extension version ");

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" which exceeds device version ");

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r10 = virtualinvoke r24.<java.lang.StringBuilder: java.lang.String toString()>();

        r25 = interfaceinvoke r21.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(int,java.lang.String)>(-12, $r10);

     label07:
        return r25;

     label08:
        virtualinvoke r1.<android.util.SparseIntArray: void put(int,int)>(i0, i1);

        $r3 = interfaceinvoke r21.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult success(java.lang.Object)>(r1);

        return $r3;

     label09:
        $r14 := @caughtexception;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Specified sdkVersion ");

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not valid");

        $r19 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        $r20 = interfaceinvoke r21.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(int,java.lang.String)>(-108, $r19);

        return $r20;

     label10:
        $r13 := @caughtexception;

        virtualinvoke r23.<android.content.res.TypedArray: void recycle()>();

        throw $r13;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.RuntimeException from label04 to label05 with label09;
        catch java.lang.RuntimeException from label06 to label07 with label09;
    }

    private static android.content.pm.parsing.result.ParseResult parseFeatureGroup(android.content.pm.parsing.result.ParseInput, android.content.pm.parsing.ParsingPackage, android.content.res.Resources, android.content.res.XmlResourceParser) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        android.content.pm.parsing.result.ParseInput r0;
        android.content.pm.parsing.ParsingPackage r1;
        android.content.res.Resources r2;
        android.content.res.XmlResourceParser r3;
        int i0, i1, $i2, $i4, $i5, $i6;
        java.lang.String r5, $r17, $r20, $r22;
        android.content.pm.FeatureGroupInfo $r6;
        android.content.pm.parsing.result.ParseResult $r8;
        android.content.pm.FeatureInfo[] $r9, $r10, $r12;
        java.lang.Object[] $r11;
        boolean $z0;
        java.lang.StringBuilder $r13;
        java.util.ArrayList r23;
        android.content.pm.FeatureInfo r24;

        r0 := @parameter0: android.content.pm.parsing.result.ParseInput;

        r1 := @parameter1: android.content.pm.parsing.ParsingPackage;

        r2 := @parameter2: android.content.res.Resources;

        r3 := @parameter3: android.content.res.XmlResourceParser;

        $r6 = new android.content.pm.FeatureGroupInfo;

        specialinvoke $r6.<android.content.pm.FeatureGroupInfo: void <init>()>();

        r23 = null;

        i0 = interfaceinvoke r3.<android.content.res.XmlResourceParser: int getDepth()>();

     label1:
        i1 = interfaceinvoke r3.<android.content.res.XmlResourceParser: int next()>();

        if i1 == 1 goto label6;

        if i1 != 3 goto label2;

        $i6 = interfaceinvoke r3.<android.content.res.XmlResourceParser: int getDepth()>();

        if $i6 <= i0 goto label6;

     label2:
        if i1 == 2 goto label3;

        goto label1;

     label3:
        r5 = interfaceinvoke r3.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        $z0 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("uses-feature");

        if $z0 == 0 goto label4;

        r24 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: android.content.pm.FeatureInfo parseFeatureInfo(android.content.res.Resources,android.util.AttributeSet)>(r2, r3);

        $i4 = r24.<android.content.pm.FeatureInfo: int flags>;

        $i5 = 1 | $i4;

        r24.<android.content.pm.FeatureInfo: int flags> = $i5;

        r23 = staticinvoke <com.android.internal.util.ArrayUtils: java.util.ArrayList add(java.util.ArrayList,java.lang.Object)>(r23, r24);

        goto label5;

     label4:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element under <feature-group>: ");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

        $r17 = interfaceinvoke r1.<android.content.pm.parsing.ParsingPackage: java.lang.String getBaseCodePath()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r20 = interfaceinvoke r3.<android.content.res.XmlResourceParser: java.lang.String getPositionDescription()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageParsing", $r22);

     label5:
        goto label1;

     label6:
        if r23 == null goto label7;

        $i2 = virtualinvoke r23.<java.util.ArrayList: int size()>();

        $r9 = newarray (android.content.pm.FeatureInfo)[$i2];

        $r6.<android.content.pm.FeatureGroupInfo: android.content.pm.FeatureInfo[] features> = $r9;

        $r10 = $r6.<android.content.pm.FeatureGroupInfo: android.content.pm.FeatureInfo[] features>;

        $r11 = virtualinvoke r23.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r10);

        $r12 = (android.content.pm.FeatureInfo[]) $r11;

        $r6.<android.content.pm.FeatureGroupInfo: android.content.pm.FeatureInfo[] features> = $r12;

     label7:
        interfaceinvoke r1.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage addFeatureGroup(android.content.pm.FeatureGroupInfo)>($r6);

        $r8 = interfaceinvoke r0.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult success(java.lang.Object)>(r1);

        return $r8;
    }

    private static android.content.pm.FeatureInfo parseFeatureInfo(android.content.res.Resources, android.util.AttributeSet)
    {
        android.content.pm.FeatureInfo $r1;
        int[] $r2;
        java.lang.String $r3, $r4;
        int $i0, $i1, $i2, $i3;
        boolean $z0;
        java.lang.Throwable $r5;
        android.content.res.Resources r6;
        android.util.AttributeSet r7;
        android.content.res.TypedArray r8;

        r6 := @parameter0: android.content.res.Resources;

        r7 := @parameter1: android.util.AttributeSet;

        $r1 = new android.content.pm.FeatureInfo;

        specialinvoke $r1.<android.content.pm.FeatureInfo: void <init>()>();

        $r2 = <com.android.internal.R$styleable: int[] AndroidManifestUsesFeature>;

        r8 = virtualinvoke r6.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r7, $r2);

     label1:
        $r3 = virtualinvoke r8.<android.content.res.TypedArray: java.lang.String getNonResourceString(int)>(0);

        $r1.<android.content.pm.FeatureInfo: java.lang.String name> = $r3;

        $i0 = virtualinvoke r8.<android.content.res.TypedArray: int getInt(int,int)>(3, 0);

        $r1.<android.content.pm.FeatureInfo: int version> = $i0;

        $r4 = $r1.<android.content.pm.FeatureInfo: java.lang.String name>;

        if $r4 != null goto label2;

        $i3 = virtualinvoke r8.<android.content.res.TypedArray: int getInt(int,int)>(1, 0);

        $r1.<android.content.pm.FeatureInfo: int reqGlEsVersion> = $i3;

     label2:
        $z0 = virtualinvoke r8.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(2, 1);

        if $z0 == 0 goto label3;

        $i1 = $r1.<android.content.pm.FeatureInfo: int flags>;

        $i2 = $i1 | 1;

        $r1.<android.content.pm.FeatureInfo: int flags> = $i2;

     label3:
        virtualinvoke r8.<android.content.res.TypedArray: void recycle()>();

        return $r1;

     label4:
        $r5 := @caughtexception;

        virtualinvoke r8.<android.content.res.TypedArray: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
    }

    private static android.content.pm.parsing.result.ParseResult parseInstrumentation(android.content.pm.parsing.result.ParseInput, android.content.pm.parsing.ParsingPackage, android.content.res.Resources, android.content.res.XmlResourceParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.pm.parsing.result.ParseInput r0;
        android.content.pm.parsing.ParsingPackage r1, $r5;
        android.content.res.XmlResourceParser r2;
        boolean $z0, $z1;
        java.lang.Object $r3;
        android.content.pm.parsing.component.ParsedInstrumentation $r4;
        android.content.pm.parsing.result.ParseResult $r6, $r7, r9;
        android.content.res.Resources r8;

        r0 := @parameter0: android.content.pm.parsing.result.ParseInput;

        r1 := @parameter1: android.content.pm.parsing.ParsingPackage;

        r8 := @parameter2: android.content.res.Resources;

        r2 := @parameter3: android.content.res.XmlResourceParser;

        $z0 = <android.content.pm.PackageParser: boolean sUseRoundIcon>;

        r9 = staticinvoke <android.content.pm.parsing.component.ParsedInstrumentationUtils: android.content.pm.parsing.result.ParseResult parseInstrumentation(android.content.pm.parsing.ParsingPackage,android.content.res.Resources,android.content.res.XmlResourceParser,boolean,android.content.pm.parsing.result.ParseInput)>(r1, r8, r2, $z0, r0);

        $z1 = interfaceinvoke r9.<android.content.pm.parsing.result.ParseResult: boolean isError()>();

        if $z1 == 0 goto label1;

        $r7 = interfaceinvoke r0.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(android.content.pm.parsing.result.ParseResult)>(r9);

        return $r7;

     label1:
        $r3 = interfaceinvoke r9.<android.content.pm.parsing.result.ParseResult: java.lang.Object getResult()>();

        $r4 = (android.content.pm.parsing.component.ParsedInstrumentation) $r3;

        $r5 = interfaceinvoke r1.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage addInstrumentation(android.content.pm.parsing.component.ParsedInstrumentation)>($r4);

        $r6 = interfaceinvoke r0.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult success(java.lang.Object)>($r5);

        return $r6;
    }

    private static android.content.pm.parsing.result.ParseResult parseKeySets(android.content.pm.parsing.result.ParseInput, android.content.pm.parsing.ParsingPackage, android.content.res.Resources, android.content.res.XmlResourceParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        int i0, $i1, $i5, $i6, i7, i8, i9;
        android.util.ArrayMap $r4, $r6;
        android.util.ArraySet $r5, $r7, $r24, $r26, $r62, r125;
        java.util.Set $r8, $r9, $r10, $r12;
        boolean $z0, $z1, $z2, $z3, $z4, $z6, $z9, $z10, $z11, $z12;
        java.util.Map $r11;
        java.lang.StringBuilder $r13, $r32, $r39, $r46, $r54, $r87, r116, r120, r121;
        java.lang.String $r17, $r28, $r38, $r45, $r50, $r56, $r58, $r70, $r72, $r74, $r79, $r84, $r86, $r89, $r91, $r94, r107, r108, r114, r115, r127, r131;
        android.content.pm.parsing.result.ParseResult $r18, $r20, $r51, $r59, $r92, $r95, r109, r117, r122;
        java.lang.Object $r21, $r22, $r23, $r25, $r27, $r29, $r61, $r63, $r65, $r80;
        java.security.PublicKey $r30, $r66, r119;
        int[] $r52, $r60, $r93;
        java.lang.Throwable $r96, $r97, $r98, $r99, $r100, $r101, $r102, r118;
        android.content.pm.parsing.result.ParseInput r103;
        android.content.pm.parsing.ParsingPackage r104;
        android.content.res.Resources r105;
        android.content.res.XmlResourceParser r106;
        byte b10;
        android.content.res.TypedArray r110, r113, r124;
        java.util.Iterator r129, r134;
        java.util.Map$Entry r130;

        r103 := @parameter0: android.content.pm.parsing.result.ParseInput;

        r104 := @parameter1: android.content.pm.parsing.ParsingPackage;

        r105 := @parameter2: android.content.res.Resources;

        r106 := @parameter3: android.content.res.XmlResourceParser;

        i0 = interfaceinvoke r106.<android.content.res.XmlResourceParser: int getDepth()>();

        $r4 = new android.util.ArrayMap;

        specialinvoke $r4.<android.util.ArrayMap: void <init>()>();

        $r5 = new android.util.ArraySet;

        specialinvoke $r5.<android.util.ArraySet: void <init>()>();

        $r6 = new android.util.ArrayMap;

        specialinvoke $r6.<android.util.ArrayMap: void <init>()>();

        $r7 = new android.util.ArraySet;

        specialinvoke $r7.<android.util.ArraySet: void <init>()>();

        r107 = null;

        i7 = -1;

     label01:
        i8 = interfaceinvoke r106.<android.content.res.XmlResourceParser: int next()>();

        if i8 == 1 goto label52;

        if i8 != 3 goto label03;

        $i6 = interfaceinvoke r106.<android.content.res.XmlResourceParser: int getDepth()>();

        if $i6 <= i0 goto label02;

        goto label03;

     label02:
        goto label52;

     label03:
        if i8 != 3 goto label05;

        $i5 = interfaceinvoke r106.<android.content.res.XmlResourceParser: int getDepth()>();

        if $i5 != i7 goto label04;

        r107 = null;

        i7 = -1;

        goto label01;

     label04:
        goto label31;

     label05:
        r108 = interfaceinvoke r106.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        i9 = virtualinvoke r108.<java.lang.String: int hashCode()>();

        if i9 == -1369233085 goto label09;

        if i9 == -816609292 goto label08;

        if i9 == 1903323387 goto label07;

     label06:
        goto label10;

     label07:
        $z11 = virtualinvoke r108.<java.lang.String: boolean equals(java.lang.Object)>("public-key");

        if $z11 == 0 goto label06;

        b10 = 1;

        goto label11;

     label08:
        $z10 = virtualinvoke r108.<java.lang.String: boolean equals(java.lang.Object)>("key-set");

        if $z10 == 0 goto label06;

        b10 = 0;

        goto label11;

     label09:
        $z4 = virtualinvoke r108.<java.lang.String: boolean equals(java.lang.Object)>("upgrade-key-set");

        if $z4 == 0 goto label06;

        b10 = 2;

        goto label11;

     label10:
        b10 = -1;

     label11:
        if b10 == 0 goto label45;

        if b10 == 1 goto label17;

        if b10 == 2 goto label13;

        r109 = staticinvoke <android.content.pm.parsing.ParsingUtils: android.content.pm.parsing.result.ParseResult unknownTag(java.lang.String,android.content.pm.parsing.ParsingPackage,android.content.res.XmlResourceParser,android.content.pm.parsing.result.ParseInput)>("<key-sets>", r104, r106, r103);

        $z9 = interfaceinvoke r109.<android.content.pm.parsing.result.ParseResult: boolean isError()>();

        if $z9 == 0 goto label12;

        $r95 = interfaceinvoke r103.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(android.content.pm.parsing.result.ParseResult)>(r109);

        return $r95;

     label12:
        goto label41;

     label13:
        $r93 = <com.android.internal.R$styleable: int[] AndroidManifestUpgradeKeySet>;

        r110 = virtualinvoke r105.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r106, $r93);

     label14:
        $r94 = virtualinvoke r110.<android.content.res.TypedArray: java.lang.String getNonResourceString(int)>(0);

        virtualinvoke $r5.<android.util.ArraySet: boolean add(java.lang.Object)>($r94);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r106);

     label15:
        virtualinvoke r110.<android.content.res.TypedArray: void recycle()>();

        goto label41;

     label16:
        $r99 := @caughtexception;

        virtualinvoke r110.<android.content.res.TypedArray: void recycle()>();

        throw $r99;

     label17:
        if r107 != null goto label18;

        $r87 = new java.lang.StringBuilder;

        specialinvoke $r87.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Improperly nested \'key-set\' tag at ");

        $r89 = interfaceinvoke r106.<android.content.res.XmlResourceParser: java.lang.String getPositionDescription()>();

        virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r89);

        $r91 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.String toString()>();

        $r92 = interfaceinvoke r103.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(java.lang.String)>($r91);

        return $r92;

     label18:
        $r60 = <com.android.internal.R$styleable: int[] AndroidManifestPublicKey>;

        r113 = virtualinvoke r105.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r106, $r60);

     label19:
        r114 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: java.lang.String nonResString(int,android.content.res.TypedArray)>(0, r113);

        r115 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: java.lang.String nonResString(int,android.content.res.TypedArray)>(1, r113);

     label20:
        if r115 != null goto label26;

     label21:
        $r80 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r114);

        if $r80 != null goto label26;

        r116 = new java.lang.StringBuilder;

        specialinvoke r116.<java.lang.StringBuilder: void <init>()>();

     label22:
        virtualinvoke r116.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'public-key\' ");

        virtualinvoke r116.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r114);

        virtualinvoke r116.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" must define a public-key value on first use at ");

        $r84 = interfaceinvoke r106.<android.content.res.XmlResourceParser: java.lang.String getPositionDescription()>();

        virtualinvoke r116.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r84);

        $r86 = virtualinvoke r116.<java.lang.StringBuilder: java.lang.String toString()>();

        r117 = interfaceinvoke r103.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(java.lang.String)>($r86);

     label23:
        virtualinvoke r113.<android.content.res.TypedArray: void recycle()>();

        return r117;

     label24:
        $r96 := @caughtexception;

        r118 = $r96;

        goto label44;

     label25:
        $r101 := @caughtexception;

        r118 = $r101;

        goto label44;

     label26:
        if r115 == null goto label39;

     label27:
        r119 = staticinvoke <android.content.pm.PackageParser: java.security.PublicKey parsePublicKey(java.lang.String)>(r115);

     label28:
        if r119 != null goto label32;

     label29:
        r120 = new java.lang.StringBuilder;

        specialinvoke r120.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r120.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No recognized valid key in \'public-key\' tag at ");

        $r74 = interfaceinvoke r106.<android.content.res.XmlResourceParser: java.lang.String getPositionDescription()>();

        virtualinvoke r120.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r74);

        virtualinvoke r120.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" key-set ");

        virtualinvoke r120.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r107);

        virtualinvoke r120.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" will not be added to the package\'s defined key-sets.");

        $r79 = virtualinvoke r120.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageParsing", $r79);

        virtualinvoke $r7.<android.util.ArraySet: boolean add(java.lang.Object)>(r107);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r106);

     label30:
        virtualinvoke r113.<android.content.res.TypedArray: void recycle()>();

     label31:
        goto label01;

     label32:
        $r63 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r114);

        if $r63 == null goto label36;

        $r65 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r114);

        $r66 = (java.security.PublicKey) $r65;

        $z6 = virtualinvoke $r66.<java.lang.Object: boolean equals(java.lang.Object)>(r119);

        if $z6 == 0 goto label34;

     label33:
        goto label36;

     label34:
        r121 = new java.lang.StringBuilder;

        specialinvoke r121.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r121.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Value of \'public-key\' ");

        virtualinvoke r121.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r114);

        virtualinvoke r121.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" conflicts with previously defined value at ");

        $r70 = interfaceinvoke r106.<android.content.res.XmlResourceParser: java.lang.String getPositionDescription()>();

        virtualinvoke r121.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r70);

        $r72 = virtualinvoke r121.<java.lang.StringBuilder: java.lang.String toString()>();

        r122 = interfaceinvoke r103.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(java.lang.String)>($r72);

     label35:
        virtualinvoke r113.<android.content.res.TypedArray: void recycle()>();

        return r122;

     label36:
        virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r114, r119);

     label37:
        goto label39;

     label38:
        $r100 := @caughtexception;

        r118 = $r100;

        goto label44;

     label39:
        $r61 = virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r107);

        $r62 = (android.util.ArraySet) $r61;

        virtualinvoke $r62.<android.util.ArraySet: boolean add(java.lang.Object)>(r114);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r106);

     label40:
        virtualinvoke r113.<android.content.res.TypedArray: void recycle()>();

     label41:
        goto label50;

     label42:
        $r102 := @caughtexception;

        r118 = $r102;

        goto label44;

     label43:
        $r98 := @caughtexception;

        r118 = $r98;

     label44:
        virtualinvoke r113.<android.content.res.TypedArray: void recycle()>();

        throw r118;

     label45:
        if r107 == null goto label46;

        $r54 = new java.lang.StringBuilder;

        specialinvoke $r54.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Improperly nested \'key-set\' tag at ");

        $r56 = interfaceinvoke r106.<android.content.res.XmlResourceParser: java.lang.String getPositionDescription()>();

        virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r56);

        $r58 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

        $r59 = interfaceinvoke r103.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(java.lang.String)>($r58);

        return $r59;

     label46:
        $r52 = <com.android.internal.R$styleable: int[] AndroidManifestKeySet>;

        r124 = virtualinvoke r105.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r106, $r52);

     label47:
        r107 = virtualinvoke r124.<android.content.res.TypedArray: java.lang.String getNonResourceString(int)>(0);

        r125 = new android.util.ArraySet;

        specialinvoke r125.<android.util.ArraySet: void <init>()>();

        virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r107, r125);

     label48:
        i7 = interfaceinvoke r106.<android.content.res.XmlResourceParser: int getDepth()>();

     label49:
        virtualinvoke r124.<android.content.res.TypedArray: void recycle()>();

     label50:
        goto label01;

     label51:
        $r97 := @caughtexception;

        virtualinvoke r124.<android.content.res.TypedArray: void recycle()>();

        throw $r97;

     label52:
        r127 = interfaceinvoke r104.<android.content.pm.parsing.ParsingPackage: java.lang.String getPackageName()>();

        $r8 = virtualinvoke $r4.<android.util.ArrayMap: java.util.Set keySet()>();

        $r9 = virtualinvoke $r6.<android.util.ArrayMap: java.util.Set keySet()>();

        $z0 = interfaceinvoke $r8.<java.util.Set: boolean removeAll(java.util.Collection)>($r9);

        if $z0 == 0 goto label53;

        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package");

        virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r127);

        virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" AndroidManifest.xml \'key-set\' and \'public-key\' names must be distinct.");

        $r50 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        $r51 = interfaceinvoke r103.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(java.lang.String)>($r50);

        return $r51;

     label53:
        $r10 = virtualinvoke $r6.<android.util.ArrayMap: java.util.Set entrySet()>();

        r129 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();

     label54:
        $z12 = interfaceinvoke r129.<java.util.Iterator: boolean hasNext()>();

        if $z12 == 0 goto label59;

        $r21 = interfaceinvoke r129.<java.util.Iterator: java.lang.Object next()>();

        r130 = (java.util.Map$Entry) $r21;

        $r22 = interfaceinvoke r130.<java.util.Map$Entry: java.lang.Object getKey()>();

        r131 = (java.lang.String) $r22;

        $r23 = interfaceinvoke r130.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r24 = (android.util.ArraySet) $r23;

        $i1 = virtualinvoke $r24.<android.util.ArraySet: int size()>();

        if $i1 != 0 goto label55;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package");

        virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r127);

        virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" AndroidManifest.xml \'key-set\' ");

        virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r131);

        virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has no valid associated \'public-key\'. Not including in package\'s defined key-sets.");

        $r45 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageParsing", $r45);

        goto label54;

     label55:
        $z2 = virtualinvoke $r7.<android.util.ArraySet: boolean contains(java.lang.Object)>(r131);

        if $z2 == 0 goto label56;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package");

        virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r127);

        virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" AndroidManifest.xml \'key-set\' ");

        virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r131);

        virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" contained improper \'public-key\' tags. Not including in package\'s defined key-sets.");

        $r38 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageParsing", $r38);

        goto label54;

     label56:
        $r25 = interfaceinvoke r130.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r26 = (android.util.ArraySet) $r25;

        r134 = virtualinvoke $r26.<android.util.ArraySet: java.util.Iterator iterator()>();

     label57:
        $z3 = interfaceinvoke r134.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label58;

        $r27 = interfaceinvoke r134.<java.util.Iterator: java.lang.Object next()>();

        $r28 = (java.lang.String) $r27;

        $r29 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r28);

        $r30 = (java.security.PublicKey) $r29;

        interfaceinvoke r104.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage addKeySet(java.lang.String,java.security.PublicKey)>(r131, $r30);

        goto label57;

     label58:
        goto label54;

     label59:
        $r11 = interfaceinvoke r104.<android.content.pm.parsing.ParsingPackage: java.util.Map getKeySetMapping()>();

        $r12 = interfaceinvoke $r11.<java.util.Map: java.util.Set keySet()>();

        $z1 = interfaceinvoke $r12.<java.util.Set: boolean containsAll(java.util.Collection)>($r5);

        if $z1 == 0 goto label60;

        interfaceinvoke r104.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setUpgradeKeySets(java.util.Set)>($r5);

        $r20 = interfaceinvoke r103.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult success(java.lang.Object)>(r104);

        return $r20;

     label60:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r127);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" AndroidManifest.xml does not define all \'upgrade-key-set\'s .");

        $r17 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $r18 = interfaceinvoke r103.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(java.lang.String)>($r17);

        return $r18;

        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Throwable from label19 to label20 with label43;
        catch java.lang.Throwable from label21 to label22 with label25;
        catch java.lang.Throwable from label22 to label23 with label24;
        catch java.lang.Throwable from label27 to label28 with label38;
        catch java.lang.Throwable from label29 to label30 with label42;
        catch java.lang.Throwable from label32 to label33 with label42;
        catch java.lang.Throwable from label34 to label35 with label42;
        catch java.lang.Throwable from label36 to label37 with label42;
        catch java.lang.Throwable from label39 to label40 with label42;
        catch java.lang.Throwable from label47 to label48 with label51;
        catch java.lang.Throwable from label48 to label49 with label51;
    }

    private static android.content.pm.parsing.result.ParseResult parseLibrary(android.content.pm.parsing.ParsingPackage, android.content.res.Resources, android.content.res.XmlResourceParser, android.content.pm.parsing.result.ParseInput)
    {
        android.content.pm.parsing.result.ParseInput r0;
        int[] $r1;
        java.util.List $r2;
        boolean $z0;
        java.lang.Throwable $r4;
        android.content.pm.parsing.ParsingPackage r5;
        android.content.res.Resources r6;
        android.content.res.XmlResourceParser r7;
        android.content.res.TypedArray r8;
        java.lang.String r9, r10;
        android.content.pm.parsing.result.ParseResult r11;

        r5 := @parameter0: android.content.pm.parsing.ParsingPackage;

        r6 := @parameter1: android.content.res.Resources;

        r7 := @parameter2: android.content.res.XmlResourceParser;

        r0 := @parameter3: android.content.pm.parsing.result.ParseInput;

        $r1 = <com.android.internal.R$styleable: int[] AndroidManifestLibrary>;

        r8 = virtualinvoke r6.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r7, $r1);

     label1:
        r9 = virtualinvoke r8.<android.content.res.TypedArray: java.lang.String getNonResourceString(int)>(0);

     label2:
        if r9 == null goto label4;

     label3:
        r10 = virtualinvoke r9.<java.lang.String: java.lang.String intern()>();

        $r2 = interfaceinvoke r5.<android.content.pm.parsing.ParsingPackage: java.util.List getLibraryNames()>();

        $z0 = staticinvoke <com.android.internal.util.ArrayUtils: boolean contains(java.util.Collection,java.lang.Object)>($r2, r10);

        if $z0 != 0 goto label4;

        interfaceinvoke r5.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage addLibraryName(java.lang.String)>(r10);

     label4:
        r11 = interfaceinvoke r0.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult success(java.lang.Object)>(r5);

     label5:
        virtualinvoke r8.<android.content.res.TypedArray: void recycle()>();

        return r11;

     label6:
        $r4 := @caughtexception;

        virtualinvoke r8.<android.content.res.TypedArray: void recycle()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public static android.content.pm.parsing.result.ParseResult parseMetaData(android.content.pm.parsing.ParsingPackage, android.content.res.Resources, android.content.res.XmlResourceParser, android.os.Bundle, android.content.pm.parsing.result.ParseInput)
    {
        android.content.res.XmlResourceParser r0;
        android.content.pm.parsing.result.ParseInput r1;
        android.content.res.TypedArray r2;
        int[] $r3;
        java.lang.String $r4, $r6, $r9, $r12, $r14, r20, r25;
        int $i0, $i1, $i2, $i3, $i5, $i6, $i7, $i8, $i9;
        float $f0;
        java.lang.Throwable $r15;
        android.content.pm.parsing.ParsingPackage r16;
        android.content.res.Resources r17;
        android.os.Bundle r18, r19;
        boolean z0;
        android.content.pm.parsing.result.ParseResult r21, r27, r28;
        android.util.TypedValue r22, r23;
        java.lang.CharSequence r24;
        java.lang.StringBuilder r26;

        r16 := @parameter0: android.content.pm.parsing.ParsingPackage;

        r17 := @parameter1: android.content.res.Resources;

        r0 := @parameter2: android.content.res.XmlResourceParser;

        r18 := @parameter3: android.os.Bundle;

        r1 := @parameter4: android.content.pm.parsing.result.ParseInput;

        $r3 = <com.android.internal.R$styleable: int[] AndroidManifestMetaData>;

        r2 = virtualinvoke r17.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r0, $r3);

        r19 = r18;

        if r18 != null goto label02;

     label01:
        r19 = new android.os.Bundle;

        specialinvoke r19.<android.os.Bundle: void <init>()>();

     label02:
        z0 = 0;

     label03:
        $r4 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: java.lang.String nonConfigString(int,int,android.content.res.TypedArray)>(0, 0, r2);

        r20 = staticinvoke <android.text.TextUtils: java.lang.String safeIntern(java.lang.String)>($r4);

     label04:
        if r20 != null goto label07;

     label05:
        r21 = interfaceinvoke r1.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(java.lang.String)>("<meta-data> requires an android:name attribute");

     label06:
        virtualinvoke r2.<android.content.res.TypedArray: void recycle()>();

        return r21;

     label07:
        r22 = virtualinvoke r2.<android.content.res.TypedArray: android.util.TypedValue peekValue(int)>(2);

     label08:
        if r22 == null goto label11;

     label09:
        $i8 = r22.<android.util.TypedValue: int resourceId>;

        if $i8 == 0 goto label11;

        $i9 = r22.<android.util.TypedValue: int resourceId>;

        virtualinvoke r19.<android.os.Bundle: void putInt(java.lang.String,int)>(r20, $i9);

     label10:
        goto label30;

     label11:
        r23 = virtualinvoke r2.<android.content.res.TypedArray: android.util.TypedValue peekValue(int)>(1);

     label12:
        if r23 == null goto label32;

     label13:
        $i0 = r23.<android.util.TypedValue: int type>;

        if $i0 != 3 goto label20;

        r24 = virtualinvoke r23.<android.util.TypedValue: java.lang.CharSequence coerceToString()>();

     label14:
        if r24 == null goto label17;

     label15:
        r25 = interfaceinvoke r24.<java.lang.CharSequence: java.lang.String toString()>();

     label16:
        goto label18;

     label17:
        r25 = null;

     label18:
        virtualinvoke r19.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>(r20, r25);

     label19:
        goto label30;

     label20:
        $i1 = r23.<android.util.TypedValue: int type>;

        if $i1 != 18 goto label25;

     label21:
        $i7 = r23.<android.util.TypedValue: int data>;

        if $i7 == 0 goto label23;

     label22:
        z0 = 1;

     label23:
        virtualinvoke r19.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>(r20, z0);

     label24:
        goto label30;

     label25:
        $i2 = r23.<android.util.TypedValue: int type>;

        if $i2 < 16 goto label27;

        $i5 = r23.<android.util.TypedValue: int type>;

        if $i5 > 31 goto label27;

        $i6 = r23.<android.util.TypedValue: int data>;

        virtualinvoke r19.<android.os.Bundle: void putInt(java.lang.String,int)>(r20, $i6);

     label26:
        goto label30;

     label27:
        $i3 = r23.<android.util.TypedValue: int type>;

        if $i3 != 4 goto label29;

        $f0 = virtualinvoke r23.<android.util.TypedValue: float getFloat()>();

        virtualinvoke r19.<android.os.Bundle: void putFloat(java.lang.String,float)>(r20, $f0);

     label28:
        goto label30;

     label29:
        r26 = new java.lang.StringBuilder;

        specialinvoke r26.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<meta-data> only supports string, integer, float, color, boolean, and resource reference types: ");

        $r6 = interfaceinvoke r0.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

        $r9 = interfaceinvoke r16.<android.content.pm.parsing.ParsingPackage: java.lang.String getBaseCodePath()>();

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r12 = interfaceinvoke r0.<android.content.res.XmlResourceParser: java.lang.String getPositionDescription()>();

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageParsing", $r14);

     label30:
        r27 = interfaceinvoke r1.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult success(java.lang.Object)>(r19);

     label31:
        virtualinvoke r2.<android.content.res.TypedArray: void recycle()>();

        return r27;

     label32:
        r28 = interfaceinvoke r1.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(java.lang.String)>("<meta-data> requires an android:value or android:resource attribute");

     label33:
        virtualinvoke r2.<android.content.res.TypedArray: void recycle()>();

        return r28;

     label34:
        $r15 := @caughtexception;

        virtualinvoke r2.<android.content.res.TypedArray: void recycle()>();

        throw $r15;

        catch java.lang.Throwable from label01 to label02 with label34;
        catch java.lang.Throwable from label03 to label04 with label34;
        catch java.lang.Throwable from label05 to label06 with label34;
        catch java.lang.Throwable from label07 to label08 with label34;
        catch java.lang.Throwable from label09 to label10 with label34;
        catch java.lang.Throwable from label11 to label12 with label34;
        catch java.lang.Throwable from label13 to label14 with label34;
        catch java.lang.Throwable from label15 to label16 with label34;
        catch java.lang.Throwable from label18 to label19 with label34;
        catch java.lang.Throwable from label20 to label21 with label34;
        catch java.lang.Throwable from label21 to label22 with label34;
        catch java.lang.Throwable from label23 to label24 with label34;
        catch java.lang.Throwable from label25 to label26 with label34;
        catch java.lang.Throwable from label27 to label28 with label34;
        catch java.lang.Throwable from label29 to label30 with label34;
        catch java.lang.Throwable from label30 to label31 with label34;
        catch java.lang.Throwable from label32 to label33 with label34;
    }

    private android.content.pm.parsing.result.ParseResult parseMonolithicPackage(android.content.pm.parsing.result.ParseInput, java.io.File, int) throws android.content.pm.PackageParser$PackageParserException
    {
        android.content.pm.parsing.ParsingPackageUtils r0;
        java.io.File r1;
        int i0;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.Object $r2, $r6;
        java.lang.String $r4, $r12, $r19;
        android.content.res.AssetManager $r5;
        android.content.pm.parsing.ParsingPackage $r7, $r8;
        android.content.pm.parsing.result.ParseResult $r13, $r14, r21, r25, r26, r27, r31;
        java.lang.Throwable $r15, $r16;
        android.content.pm.parsing.result.ParseInput r20;
        android.content.pm.PackageParser$PackageLite r22;
        java.lang.StringBuilder r32, r34;
        android.content.pm.split.DefaultSplitAssetLoader r33;
        java.lang.Exception r35;

        r0 := @this: android.content.pm.parsing.ParsingPackageUtils;

        r20 := @parameter0: android.content.pm.parsing.result.ParseInput;

        r1 := @parameter1: java.io.File;

        i0 := @parameter2: int;

        r21 = staticinvoke <android.content.pm.parsing.ApkLiteParseUtils: android.content.pm.parsing.result.ParseResult parseMonolithicPackageLite(android.content.pm.parsing.result.ParseInput,java.io.File,int)>(r20, r1, i0);

        $z0 = interfaceinvoke r21.<android.content.pm.parsing.result.ParseResult: boolean isError()>();

        if $z0 == 0 goto label01;

        $r14 = interfaceinvoke r20.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(android.content.pm.parsing.result.ParseResult)>(r21);

        return $r14;

     label01:
        $r2 = interfaceinvoke r21.<android.content.pm.parsing.result.ParseResult: java.lang.Object getResult()>();

        r22 = (android.content.pm.PackageParser$PackageLite) $r2;

        $z1 = r0.<android.content.pm.parsing.ParsingPackageUtils: boolean mOnlyCoreApps>;

        if $z1 == 0 goto label02;

        $z4 = r22.<android.content.pm.PackageParser$PackageLite: boolean coreApp>;

        if $z4 != 0 goto label02;

        r32 = new java.lang.StringBuilder;

        specialinvoke r32.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not a coreApp: ");

        virtualinvoke r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r12 = virtualinvoke r32.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = interfaceinvoke r20.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(int,java.lang.String)>(-123, $r12);

        return $r13;

     label02:
        r33 = new android.content.pm.split.DefaultSplitAssetLoader;

        specialinvoke r33.<android.content.pm.split.DefaultSplitAssetLoader: void <init>(android.content.pm.PackageParser$PackageLite,int)>(r22, i0);

     label03:
        $r4 = virtualinvoke r1.<java.io.File: java.lang.String getCanonicalPath()>();

        $r5 = interfaceinvoke r33.<android.content.pm.split.SplitAssetLoader: android.content.res.AssetManager getBaseAssetManager()>();

        r25 = specialinvoke r0.<android.content.pm.parsing.ParsingPackageUtils: android.content.pm.parsing.result.ParseResult parseBaseApk(android.content.pm.parsing.result.ParseInput,java.io.File,java.lang.String,android.content.res.AssetManager,int)>(r20, r1, $r4, $r5, i0);

        $z2 = interfaceinvoke r25.<android.content.pm.parsing.result.ParseResult: boolean isError()>();

        if $z2 == 0 goto label05;

        r26 = interfaceinvoke r20.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(android.content.pm.parsing.result.ParseResult)>(r25);

     label04:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r33);

        return r26;

     label05:
        $r6 = interfaceinvoke r25.<android.content.pm.parsing.result.ParseResult: java.lang.Object getResult()>();

        $r7 = (android.content.pm.parsing.ParsingPackage) $r6;

        $z3 = r22.<android.content.pm.PackageParser$PackageLite: boolean use32bitAbi>;

        $r8 = interfaceinvoke $r7.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setUse32BitAbi(boolean)>($z3);

        r27 = interfaceinvoke r20.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult success(java.lang.Object)>($r8);

     label06:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r33);

        return r27;

     label07:
        $r15 := @caughtexception;

        goto label11;

     label08:
        $r16 := @caughtexception;

     label09:
        r34 = new java.lang.StringBuilder;

        specialinvoke r34.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to get path: ");

        virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r19 = virtualinvoke r34.<java.lang.StringBuilder: java.lang.String toString()>();

        r35 = (java.lang.Exception) $r16;

        r31 = interfaceinvoke r20.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(int,java.lang.String,java.lang.Exception)>(-102, $r19, r35);

     label10:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r33);

        return r31;

     label11:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r33);

        throw $r15;

        catch java.io.IOException from label03 to label04 with label08;
        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.io.IOException from label05 to label06 with label08;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label09 to label10 with label07;
    }

    private static android.content.pm.parsing.result.ParseResult parseOriginalPackage(android.content.pm.parsing.result.ParseInput, android.content.pm.parsing.ParsingPackage, android.content.res.Resources, android.content.res.XmlResourceParser)
    {
        android.content.pm.parsing.ParsingPackage r0;
        int[] $r1;
        java.lang.String $r2, $r5, r12;
        boolean $z0, $z1;
        java.util.List $r3;
        java.lang.Throwable $r7;
        android.content.pm.parsing.result.ParseInput r8;
        android.content.res.Resources r9;
        android.content.res.XmlResourceParser r10;
        android.content.res.TypedArray r11;
        android.content.pm.parsing.result.ParseResult r13;

        r8 := @parameter0: android.content.pm.parsing.result.ParseInput;

        r0 := @parameter1: android.content.pm.parsing.ParsingPackage;

        r9 := @parameter2: android.content.res.Resources;

        r10 := @parameter3: android.content.res.XmlResourceParser;

        $r1 = <com.android.internal.R$styleable: int[] AndroidManifestOriginalPackage>;

        r11 = virtualinvoke r9.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r10, $r1);

     label1:
        r12 = virtualinvoke r11.<android.content.res.TypedArray: java.lang.String getNonConfigurationString(int,int)>(0, 0);

        $r2 = interfaceinvoke r0.<android.content.pm.parsing.ParsingPackage: java.lang.String getPackageName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r12);

        if $z0 != 0 goto label3;

        $r3 = interfaceinvoke r0.<android.content.pm.parsing.ParsingPackage: java.util.List getOriginalPackages()>();

        $z1 = interfaceinvoke $r3.<java.util.List: boolean isEmpty()>();

        if $z1 == 0 goto label2;

        $r5 = interfaceinvoke r0.<android.content.pm.parsing.ParsingPackage: java.lang.String getPackageName()>();

        interfaceinvoke r0.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setRealPackage(java.lang.String)>($r5);

     label2:
        interfaceinvoke r0.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage addOriginalPackage(java.lang.String)>(r12);

     label3:
        r13 = interfaceinvoke r8.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult success(java.lang.Object)>(r0);

     label4:
        virtualinvoke r11.<android.content.res.TypedArray: void recycle()>();

        return r13;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r11.<android.content.res.TypedArray: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    private static android.content.pm.parsing.result.ParseResult parseOverlay(android.content.pm.parsing.result.ParseInput, android.content.pm.parsing.ParsingPackage, android.content.res.Resources, android.content.res.XmlResourceParser)
    {
        java.lang.String r0, r1, r2, $r7, $r9, $r15, r29;
        int i0;
        int[] $r3;
        boolean $z0, $z1;
        android.content.pm.parsing.ParsingPackage $r4, $r5, $r6, $r8, $r10, $r11, r23;
        java.lang.Throwable $r21;
        android.content.pm.parsing.result.ParseInput r22;
        android.content.res.Resources r24;
        android.content.res.XmlResourceParser r25;
        android.content.res.TypedArray r26;
        android.content.pm.parsing.result.ParseResult r27, r30, r31, r32;
        java.lang.StringBuilder r28;

        r22 := @parameter0: android.content.pm.parsing.result.ParseInput;

        r23 := @parameter1: android.content.pm.parsing.ParsingPackage;

        r24 := @parameter2: android.content.res.Resources;

        r25 := @parameter3: android.content.res.XmlResourceParser;

        $r3 = <com.android.internal.R$styleable: int[] AndroidManifestResourceOverlay>;

        r26 = virtualinvoke r24.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r25, $r3);

     label01:
        r0 = virtualinvoke r26.<android.content.res.TypedArray: java.lang.String getString(int)>(1);

        i0 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: int anInt(int,int,android.content.res.TypedArray)>(0, 0, r26);

     label02:
        if r0 != null goto label05;

     label03:
        r27 = interfaceinvoke r22.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(java.lang.String)>("<overlay> does not specify a target package");

     label04:
        virtualinvoke r26.<android.content.res.TypedArray: void recycle()>();

        return r27;

     label05:
        if i0 < 0 goto label10;

        if i0 <= 9999 goto label06;

        goto label10;

     label06:
        r1 = virtualinvoke r26.<android.content.res.TypedArray: java.lang.String getString(int)>(5);

        r2 = virtualinvoke r26.<android.content.res.TypedArray: java.lang.String getString(int)>(6);

        $z0 = staticinvoke <android.content.pm.PackageParser: boolean checkRequiredSystemProperties(java.lang.String,java.lang.String)>(r1, r2);

        if $z0 != 0 goto label08;

        r28 = new java.lang.StringBuilder;

        specialinvoke r28.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skipping target and overlay pair ");

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and ");

        $r15 = interfaceinvoke r23.<android.content.pm.parsing.ParsingPackage: java.lang.String getBaseCodePath()>();

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": overlay ignored due to required system property: ");

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with value: ");

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        r29 = virtualinvoke r28.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PackageParsing", r29);

        r30 = interfaceinvoke r22.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult skip(java.lang.String)>(r29);

     label07:
        virtualinvoke r26.<android.content.res.TypedArray: void recycle()>();

        return r30;

     label08:
        $r4 = interfaceinvoke r23.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setOverlay(boolean)>(1);

        $r5 = interfaceinvoke $r4.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setOverlayTarget(java.lang.String)>(r0);

        $r6 = interfaceinvoke $r5.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setOverlayPriority(int)>(i0);

        $r7 = virtualinvoke r26.<android.content.res.TypedArray: java.lang.String getString(int)>(3);

        $r8 = interfaceinvoke $r6.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setOverlayTargetName(java.lang.String)>($r7);

        $r9 = virtualinvoke r26.<android.content.res.TypedArray: java.lang.String getString(int)>(2);

        $r10 = interfaceinvoke $r8.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setOverlayCategory(java.lang.String)>($r9);

        $z1 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: boolean bool(boolean,int,android.content.res.TypedArray)>(0, 4, r26);

        $r11 = interfaceinvoke $r10.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setOverlayIsStatic(boolean)>($z1);

        r31 = interfaceinvoke r22.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult success(java.lang.Object)>($r11);

     label09:
        virtualinvoke r26.<android.content.res.TypedArray: void recycle()>();

        return r31;

     label10:
        r32 = interfaceinvoke r22.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(java.lang.String)>("<overlay> priority must be between 0 and 9999");

     label11:
        virtualinvoke r26.<android.content.res.TypedArray: void recycle()>();

        return r32;

     label12:
        $r21 := @caughtexception;

        virtualinvoke r26.<android.content.res.TypedArray: void recycle()>();

        throw $r21;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
    }

    private static android.content.pm.parsing.result.ParseResult parsePermission(android.content.pm.parsing.result.ParseInput, android.content.pm.parsing.ParsingPackage, android.content.res.Resources, android.content.res.XmlResourceParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.pm.parsing.result.ParseInput r0;
        android.content.pm.parsing.ParsingPackage r1, $r5;
        android.content.res.XmlResourceParser r2;
        boolean $z0, $z1;
        java.lang.Object $r3;
        android.content.pm.parsing.component.ParsedPermission $r4;
        android.content.pm.parsing.result.ParseResult $r6, $r7, r9;
        android.content.res.Resources r8;

        r0 := @parameter0: android.content.pm.parsing.result.ParseInput;

        r1 := @parameter1: android.content.pm.parsing.ParsingPackage;

        r8 := @parameter2: android.content.res.Resources;

        r2 := @parameter3: android.content.res.XmlResourceParser;

        $z0 = <android.content.pm.PackageParser: boolean sUseRoundIcon>;

        r9 = staticinvoke <android.content.pm.parsing.component.ParsedPermissionUtils: android.content.pm.parsing.result.ParseResult parsePermission(android.content.pm.parsing.ParsingPackage,android.content.res.Resources,android.content.res.XmlResourceParser,boolean,android.content.pm.parsing.result.ParseInput)>(r1, r8, r2, $z0, r0);

        $z1 = interfaceinvoke r9.<android.content.pm.parsing.result.ParseResult: boolean isError()>();

        if $z1 == 0 goto label1;

        $r7 = interfaceinvoke r0.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(android.content.pm.parsing.result.ParseResult)>(r9);

        return $r7;

     label1:
        $r3 = interfaceinvoke r9.<android.content.pm.parsing.result.ParseResult: java.lang.Object getResult()>();

        $r4 = (android.content.pm.parsing.component.ParsedPermission) $r3;

        $r5 = interfaceinvoke r1.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage addPermission(android.content.pm.parsing.component.ParsedPermission)>($r4);

        $r6 = interfaceinvoke r0.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult success(java.lang.Object)>($r5);

        return $r6;
    }

    private static android.content.pm.parsing.result.ParseResult parsePermissionGroup(android.content.pm.parsing.result.ParseInput, android.content.pm.parsing.ParsingPackage, android.content.res.Resources, android.content.res.XmlResourceParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.pm.parsing.result.ParseInput r0;
        android.content.pm.parsing.ParsingPackage r1, $r5;
        android.content.res.XmlResourceParser r2;
        boolean $z0, $z1;
        java.lang.Object $r3;
        android.content.pm.parsing.component.ParsedPermissionGroup $r4;
        android.content.pm.parsing.result.ParseResult $r6, $r7, r9;
        android.content.res.Resources r8;

        r0 := @parameter0: android.content.pm.parsing.result.ParseInput;

        r1 := @parameter1: android.content.pm.parsing.ParsingPackage;

        r8 := @parameter2: android.content.res.Resources;

        r2 := @parameter3: android.content.res.XmlResourceParser;

        $z0 = <android.content.pm.PackageParser: boolean sUseRoundIcon>;

        r9 = staticinvoke <android.content.pm.parsing.component.ParsedPermissionUtils: android.content.pm.parsing.result.ParseResult parsePermissionGroup(android.content.pm.parsing.ParsingPackage,android.content.res.Resources,android.content.res.XmlResourceParser,boolean,android.content.pm.parsing.result.ParseInput)>(r1, r8, r2, $z0, r0);

        $z1 = interfaceinvoke r9.<android.content.pm.parsing.result.ParseResult: boolean isError()>();

        if $z1 == 0 goto label1;

        $r7 = interfaceinvoke r0.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(android.content.pm.parsing.result.ParseResult)>(r9);

        return $r7;

     label1:
        $r3 = interfaceinvoke r9.<android.content.pm.parsing.result.ParseResult: java.lang.Object getResult()>();

        $r4 = (android.content.pm.parsing.component.ParsedPermissionGroup) $r3;

        $r5 = interfaceinvoke r1.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage addPermissionGroup(android.content.pm.parsing.component.ParsedPermissionGroup)>($r4);

        $r6 = interfaceinvoke r0.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult success(java.lang.Object)>($r5);

        return $r6;
    }

    private static android.content.pm.parsing.result.ParseResult parsePermissionTree(android.content.pm.parsing.result.ParseInput, android.content.pm.parsing.ParsingPackage, android.content.res.Resources, android.content.res.XmlResourceParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.pm.parsing.result.ParseInput r0;
        android.content.pm.parsing.ParsingPackage r1, $r5;
        android.content.res.XmlResourceParser r2;
        boolean $z0, $z1;
        java.lang.Object $r3;
        android.content.pm.parsing.component.ParsedPermission $r4;
        android.content.pm.parsing.result.ParseResult $r6, $r7, r9;
        android.content.res.Resources r8;

        r0 := @parameter0: android.content.pm.parsing.result.ParseInput;

        r1 := @parameter1: android.content.pm.parsing.ParsingPackage;

        r8 := @parameter2: android.content.res.Resources;

        r2 := @parameter3: android.content.res.XmlResourceParser;

        $z0 = <android.content.pm.PackageParser: boolean sUseRoundIcon>;

        r9 = staticinvoke <android.content.pm.parsing.component.ParsedPermissionUtils: android.content.pm.parsing.result.ParseResult parsePermissionTree(android.content.pm.parsing.ParsingPackage,android.content.res.Resources,android.content.res.XmlResourceParser,boolean,android.content.pm.parsing.result.ParseInput)>(r1, r8, r2, $z0, r0);

        $z1 = interfaceinvoke r9.<android.content.pm.parsing.result.ParseResult: boolean isError()>();

        if $z1 == 0 goto label1;

        $r7 = interfaceinvoke r0.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(android.content.pm.parsing.result.ParseResult)>(r9);

        return $r7;

     label1:
        $r3 = interfaceinvoke r9.<android.content.pm.parsing.result.ParseResult: java.lang.Object getResult()>();

        $r4 = (android.content.pm.parsing.component.ParsedPermission) $r3;

        $r5 = interfaceinvoke r1.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage addPermission(android.content.pm.parsing.component.ParsedPermission)>($r4);

        $r6 = interfaceinvoke r0.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult success(java.lang.Object)>($r5);

        return $r6;
    }

    private static android.content.pm.parsing.result.ParseResult parseProcesses(android.content.pm.parsing.result.ParseInput, android.content.pm.parsing.ParsingPackage, android.content.res.Resources, android.content.res.XmlResourceParser, java.lang.String[], int) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        android.content.pm.parsing.result.ParseInput r0;
        android.content.pm.parsing.ParsingPackage r1, $r6;
        android.content.res.XmlResourceParser r2;
        java.lang.String[] r3;
        int i0;
        boolean $z0;
        java.lang.Object $r4;
        java.util.Map $r5;
        android.content.pm.parsing.result.ParseResult $r7, $r8, r10;
        android.content.res.Resources r9;

        r0 := @parameter0: android.content.pm.parsing.result.ParseInput;

        r1 := @parameter1: android.content.pm.parsing.ParsingPackage;

        r9 := @parameter2: android.content.res.Resources;

        r2 := @parameter3: android.content.res.XmlResourceParser;

        r3 := @parameter4: java.lang.String[];

        i0 := @parameter5: int;

        r10 = staticinvoke <android.content.pm.parsing.component.ParsedProcessUtils: android.content.pm.parsing.result.ParseResult parseProcesses(java.lang.String[],android.content.pm.parsing.ParsingPackage,android.content.res.Resources,android.content.res.XmlResourceParser,int,android.content.pm.parsing.result.ParseInput)>(r3, r1, r9, r2, i0, r0);

        $z0 = interfaceinvoke r10.<android.content.pm.parsing.result.ParseResult: boolean isError()>();

        if $z0 == 0 goto label1;

        $r8 = interfaceinvoke r0.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(android.content.pm.parsing.result.ParseResult)>(r10);

        return $r8;

     label1:
        $r4 = interfaceinvoke r10.<android.content.pm.parsing.result.ParseResult: java.lang.Object getResult()>();

        $r5 = (java.util.Map) $r4;

        $r6 = interfaceinvoke r1.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setProcesses(java.util.Map)>($r5);

        $r7 = interfaceinvoke r0.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult success(java.lang.Object)>($r6);

        return $r7;
    }

    private static android.content.pm.parsing.result.ParseResult parseProfileable(android.content.pm.parsing.result.ParseInput, android.content.pm.parsing.ParsingPackage, android.content.res.Resources, android.content.res.XmlResourceParser)
    {
        android.content.pm.parsing.ParsingPackage r0, $r7;
        android.content.res.XmlResourceParser r1;
        boolean z0, $z1, z2;
        int[] $r2;
        java.lang.Throwable $r3;
        android.content.pm.parsing.result.ParseInput r4;
        android.content.res.Resources r5;
        android.content.res.TypedArray r6;
        android.content.pm.parsing.result.ParseResult r8;

        r4 := @parameter0: android.content.pm.parsing.result.ParseInput;

        r0 := @parameter1: android.content.pm.parsing.ParsingPackage;

        r5 := @parameter2: android.content.res.Resources;

        r1 := @parameter3: android.content.res.XmlResourceParser;

        $r2 = <com.android.internal.R$styleable: int[] AndroidManifestProfileable>;

        r6 = virtualinvoke r5.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r1, $r2);

     label1:
        z0 = interfaceinvoke r0.<android.content.pm.parsing.ParsingPackage: boolean isProfileableByShell()>();

     label2:
        z2 = 0;

        if z0 != 0 goto label4;

     label3:
        $z1 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: boolean bool(boolean,int,android.content.res.TypedArray)>(0, 0, r6);

        if $z1 == 0 goto label5;

     label4:
        z2 = 1;

     label5:
        $r7 = interfaceinvoke r0.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setProfileableByShell(boolean)>(z2);

        r8 = interfaceinvoke r4.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult success(java.lang.Object)>($r7);

     label6:
        virtualinvoke r6.<android.content.res.TypedArray: void recycle()>();

        return r8;

     label7:
        $r3 := @caughtexception;

        virtualinvoke r6.<android.content.res.TypedArray: void recycle()>();

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
    }

    private static android.content.pm.parsing.result.ParseResult parseProtectedBroadcast(android.content.pm.parsing.result.ParseInput, android.content.pm.parsing.ParsingPackage, android.content.res.Resources, android.content.res.XmlResourceParser)
    {
        android.content.pm.parsing.ParsingPackage r0;
        int[] $r1;
        java.lang.Throwable $r3;
        android.content.pm.parsing.result.ParseInput r4;
        android.content.res.Resources r5;
        android.content.res.XmlResourceParser r6;
        android.content.res.TypedArray r7;
        java.lang.String r8;
        android.content.pm.parsing.result.ParseResult r9;

        r4 := @parameter0: android.content.pm.parsing.result.ParseInput;

        r0 := @parameter1: android.content.pm.parsing.ParsingPackage;

        r5 := @parameter2: android.content.res.Resources;

        r6 := @parameter3: android.content.res.XmlResourceParser;

        $r1 = <com.android.internal.R$styleable: int[] AndroidManifestProtectedBroadcast>;

        r7 = virtualinvoke r5.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r6, $r1);

     label1:
        r8 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: java.lang.String nonResString(int,android.content.res.TypedArray)>(0, r7);

     label2:
        if r8 == null goto label4;

     label3:
        interfaceinvoke r0.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage addProtectedBroadcast(java.lang.String)>(r8);

     label4:
        r9 = interfaceinvoke r4.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult success(java.lang.Object)>(r0);

     label5:
        virtualinvoke r7.<android.content.res.TypedArray: void recycle()>();

        return r9;

     label6:
        $r3 := @caughtexception;

        virtualinvoke r7.<android.content.res.TypedArray: void recycle()>();

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    private static android.content.pm.parsing.result.ParseResult parseQueries(android.content.pm.parsing.result.ParseInput, android.content.pm.parsing.ParsingPackage, android.content.res.Resources, android.content.res.XmlResourceParser) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        android.content.pm.parsing.ParsingPackage r0;
        android.content.res.Resources r1;
        android.content.res.XmlResourceParser r2;
        int i0, i1, i2, i3, i4, i5, $i6, i7, i8;
        android.content.pm.parsing.component.ParsedIntentInfo r3;
        android.content.pm.parsing.result.ParseResult $r5, $r16, $r39, $r40, $r41, $r42, $r43, $r44, r47, r56;
        java.lang.String $r6, $r7, $r8, $r10, $r14, $r22, $r32, $r37, r49, r50, r51, r53, r55;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        int[] $r9, $r12;
        android.content.res.TypedArray $r13, r54;
        java.lang.Object $r17;
        java.lang.String[] $r18, $r36;
        android.content.Intent $r19;
        android.net.Uri$Builder $r24, $r25, $r26, $r27, $r31, $r33, $r34, $r35;
        java.lang.StringBuilder $r28;
        java.lang.Throwable $r45;
        android.content.pm.parsing.result.ParseInput r46;
        android.net.Uri r48;
        java.util.StringTokenizer r57;

        r46 := @parameter0: android.content.pm.parsing.result.ParseInput;

        r0 := @parameter1: android.content.pm.parsing.ParsingPackage;

        r1 := @parameter2: android.content.res.Resources;

        r2 := @parameter3: android.content.res.XmlResourceParser;

        i0 = interfaceinvoke r2.<android.content.res.XmlResourceParser: int getDepth()>();

     label01:
        i7 = interfaceinvoke r2.<android.content.res.XmlResourceParser: int next()>();

        if i7 == 1 goto label29;

        if i7 != 3 goto label02;

        $i6 = interfaceinvoke r2.<android.content.res.XmlResourceParser: int getDepth()>();

        if $i6 <= i0 goto label29;

     label02:
        if i7 == 2 goto label03;

        goto label01;

     label03:
        $r6 = interfaceinvoke r2.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("intent");

        if $z0 == 0 goto label18;

        r47 = staticinvoke <android.content.pm.parsing.component.ParsedIntentInfoUtils: android.content.pm.parsing.result.ParseResult parseIntentInfo(java.lang.String,android.content.pm.parsing.ParsingPackage,android.content.res.Resources,android.content.res.XmlResourceParser,boolean,boolean,android.content.pm.parsing.result.ParseInput)>(null, r0, r1, r2, 1, 1, r46);

        $z6 = interfaceinvoke r47.<android.content.pm.parsing.result.ParseResult: boolean isError()>();

        if $z6 == 0 goto label04;

        $r44 = interfaceinvoke r46.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(android.content.pm.parsing.result.ParseResult)>(r47);

        return $r44;

     label04:
        $r17 = interfaceinvoke r47.<android.content.pm.parsing.result.ParseResult: java.lang.Object getResult()>();

        r3 = (android.content.pm.parsing.component.ParsedIntentInfo) $r17;

        r48 = null;

        r49 = null;

        r50 = null;

        i1 = virtualinvoke r3.<android.content.pm.parsing.component.ParsedIntentInfo: int countActions()>();

        i2 = virtualinvoke r3.<android.content.pm.parsing.component.ParsedIntentInfo: int countDataSchemes()>();

        i3 = virtualinvoke r3.<android.content.pm.parsing.component.ParsedIntentInfo: int countDataTypes()>();

        $r18 = virtualinvoke r3.<android.content.pm.parsing.component.ParsedIntentInfo: java.lang.String[] getHosts()>();

        i4 = lengthof $r18;

        if i2 != 0 goto label05;

        if i3 != 0 goto label05;

        if i1 != 0 goto label05;

        $r43 = interfaceinvoke r46.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(java.lang.String)>("intent tags must contain either an action or data.");

        return $r43;

     label05:
        if i1 <= 1 goto label06;

        $r42 = interfaceinvoke r46.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(java.lang.String)>("intent tag may have at most one action.");

        return $r42;

     label06:
        if i3 <= 1 goto label07;

        $r41 = interfaceinvoke r46.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(java.lang.String)>("intent tag may have at most one data type.");

        return $r41;

     label07:
        if i2 <= 1 goto label08;

        $r40 = interfaceinvoke r46.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(java.lang.String)>("intent tag may have at most one data scheme.");

        return $r40;

     label08:
        if i4 <= 1 goto label09;

        $r39 = interfaceinvoke r46.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(java.lang.String)>("intent tag may have at most one data host.");

        return $r39;

     label09:
        $r19 = new android.content.Intent;

        specialinvoke $r19.<android.content.Intent: void <init>()>();

        i5 = virtualinvoke r3.<android.content.pm.parsing.component.ParsedIntentInfo: int countCategories()>();

        i8 = 0;

     label10:
        if i8 >= i5 goto label11;

        $r37 = virtualinvoke r3.<android.content.pm.parsing.component.ParsedIntentInfo: java.lang.String getCategory(int)>(i8);

        virtualinvoke $r19.<android.content.Intent: android.content.Intent addCategory(java.lang.String)>($r37);

        i8 = i8 + 1;

        goto label10;

     label11:
        if i4 != 1 goto label12;

        $r36 = virtualinvoke r3.<android.content.pm.parsing.component.ParsedIntentInfo: java.lang.String[] getHosts()>();

        r50 = $r36[0];

        goto label12;

     label12:
        if i2 != 1 goto label13;

        $r31 = new android.net.Uri$Builder;

        specialinvoke $r31.<android.net.Uri$Builder: void <init>()>();

        $r32 = virtualinvoke r3.<android.content.pm.parsing.component.ParsedIntentInfo: java.lang.String getDataScheme(int)>(0);

        $r33 = virtualinvoke $r31.<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>($r32);

        $r34 = virtualinvoke $r33.<android.net.Uri$Builder: android.net.Uri$Builder authority(java.lang.String)>(r50);

        $r35 = virtualinvoke $r34.<android.net.Uri$Builder: android.net.Uri$Builder path(java.lang.String)>("/*");

        r48 = virtualinvoke $r35.<android.net.Uri$Builder: android.net.Uri build()>();

        goto label13;

     label13:
        if i3 != 1 goto label16;

        r51 = virtualinvoke r3.<android.content.pm.parsing.component.ParsedIntentInfo: java.lang.String getDataType(int)>(0);

        r49 = r51;

        $z7 = virtualinvoke r51.<java.lang.String: boolean contains(java.lang.CharSequence)>("/");

        if $z7 != 0 goto label14;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r51);

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/*");

        r49 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

     label14:
        if r48 != null goto label15;

        $r24 = new android.net.Uri$Builder;

        specialinvoke $r24.<android.net.Uri$Builder: void <init>()>();

        $r25 = virtualinvoke $r24.<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>("content");

        $r26 = virtualinvoke $r25.<android.net.Uri$Builder: android.net.Uri$Builder authority(java.lang.String)>("*");

        $r27 = virtualinvoke $r26.<android.net.Uri$Builder: android.net.Uri$Builder path(java.lang.String)>("/*");

        r48 = virtualinvoke $r27.<android.net.Uri$Builder: android.net.Uri build()>();

        goto label16;

     label15:
        goto label16;

     label16:
        virtualinvoke $r19.<android.content.Intent: android.content.Intent setDataAndType(android.net.Uri,java.lang.String)>(r48, r49);

        if i1 != 1 goto label17;

        $r22 = virtualinvoke r3.<android.content.pm.parsing.component.ParsedIntentInfo: java.lang.String getAction(int)>(0);

        virtualinvoke $r19.<android.content.Intent: android.content.Intent setAction(java.lang.String)>($r22);

     label17:
        interfaceinvoke r0.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage addQueriesIntent(android.content.Intent)>($r19);

        goto label01;

     label18:
        $r7 = interfaceinvoke r2.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("package");

        if $z1 == 0 goto label20;

        $r12 = <com.android.internal.R$styleable: int[] AndroidManifestQueriesPackage>;

        $r13 = virtualinvoke r1.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r2, $r12);

        r53 = virtualinvoke $r13.<android.content.res.TypedArray: java.lang.String getNonConfigurationString(int,int)>(0, 0);

        $z5 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r53);

        if $z5 == 0 goto label19;

        $r16 = interfaceinvoke r46.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(java.lang.String)>("Package name is missing from package tag.");

        return $r16;

     label19:
        $r14 = virtualinvoke r53.<java.lang.String: java.lang.String intern()>();

        interfaceinvoke r0.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage addQueriesPackage(java.lang.String)>($r14);

        goto label28;

     label20:
        $r8 = interfaceinvoke r2.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        $z2 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("provider");

        if $z2 == 0 goto label28;

        $r9 = <com.android.internal.R$styleable: int[] AndroidManifestQueriesProvider>;

        r54 = virtualinvoke r1.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r2, $r9);

     label21:
        r55 = virtualinvoke r54.<android.content.res.TypedArray: java.lang.String getNonConfigurationString(int,int)>(0, 0);

        $z3 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r55);

        if $z3 == 0 goto label23;

        r56 = interfaceinvoke r46.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(int,java.lang.String)>(-108, "Authority missing from provider tag.");

     label22:
        virtualinvoke r54.<android.content.res.TypedArray: void recycle()>();

        return r56;

     label23:
        r57 = new java.util.StringTokenizer;

        specialinvoke r57.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r55, ";");

     label24:
        $z4 = virtualinvoke r57.<java.util.StringTokenizer: boolean hasMoreElements()>();

        if $z4 == 0 goto label26;

        $r10 = virtualinvoke r57.<java.util.StringTokenizer: java.lang.String nextToken()>();

        interfaceinvoke r0.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage addQueriesProvider(java.lang.String)>($r10);

     label25:
        goto label24;

     label26:
        virtualinvoke r54.<android.content.res.TypedArray: void recycle()>();

        goto label01;

     label27:
        $r45 := @caughtexception;

        virtualinvoke r54.<android.content.res.TypedArray: void recycle()>();

        throw $r45;

     label28:
        goto label01;

     label29:
        $r5 = interfaceinvoke r46.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult success(java.lang.Object)>(r0);

        return $r5;

        catch java.lang.Throwable from label21 to label22 with label27;
        catch java.lang.Throwable from label23 to label24 with label27;
        catch java.lang.Throwable from label24 to label25 with label27;
    }

    private static android.content.pm.parsing.result.ParseResult parseRestrictUpdateHash(int, android.content.pm.parsing.result.ParseInput, android.content.pm.parsing.ParsingPackage, android.content.res.Resources, android.content.res.XmlResourceParser)
    {
        android.content.pm.parsing.ParsingPackage r0;
        int i0, $i1, $i2, $i3, $i5, $i6, $i7, $i9, $i10, i13, i14;
        byte[] r1;
        android.content.pm.parsing.result.ParseResult $r2;
        int[] $r3;
        char $c4, $c8;
        byte $b11, $b12;
        java.lang.Throwable $r6;
        android.content.pm.parsing.result.ParseInput r7;
        android.content.res.Resources r8;
        android.content.res.XmlResourceParser r9;
        android.content.res.TypedArray r10;
        java.lang.String r11;

        i13 := @parameter0: int;

        r7 := @parameter1: android.content.pm.parsing.result.ParseInput;

        r0 := @parameter2: android.content.pm.parsing.ParsingPackage;

        r8 := @parameter3: android.content.res.Resources;

        r9 := @parameter4: android.content.res.XmlResourceParser;

        $i1 = i13 & 16;

        if $i1 == 0 goto label13;

        $r3 = <com.android.internal.R$styleable: int[] AndroidManifestRestrictUpdate>;

        r10 = virtualinvoke r8.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r9, $r3);

     label01:
        r11 = virtualinvoke r10.<android.content.res.TypedArray: java.lang.String getNonConfigurationString(int,int)>(0, 0);

     label02:
        if r11 == null goto label10;

     label03:
        i0 = virtualinvoke r11.<java.lang.String: int length()>();

        $i2 = i0 / 2;

        r1 = newarray (byte)[$i2];

     label04:
        i14 = 0;

     label05:
        if i14 >= i0 goto label08;

     label06:
        $i3 = i14 / 2;

        $c4 = virtualinvoke r11.<java.lang.String: char charAt(int)>(i14);

        $i5 = staticinvoke <java.lang.Character: int digit(char,int)>($c4, 16);

        $i7 = $i5 << 4;

        $i6 = i14 + 1;

        $c8 = virtualinvoke r11.<java.lang.String: char charAt(int)>($i6);

        $i9 = staticinvoke <java.lang.Character: int digit(char,int)>($c8, 16);

        $i10 = $i7 + $i9;

        $b11 = (byte) $i10;

        $b12 = (byte) $b11;

        r1[$i3] = $b12;

     label07:
        i14 = i14 + 2;

        goto label05;

     label08:
        interfaceinvoke r0.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setRestrictUpdateHash(byte[])>(r1);

     label09:
        goto label11;

     label10:
        interfaceinvoke r0.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setRestrictUpdateHash(byte[])>(null);

     label11:
        virtualinvoke r10.<android.content.res.TypedArray: void recycle()>();

        goto label13;

     label12:
        $r6 := @caughtexception;

        virtualinvoke r10.<android.content.res.TypedArray: void recycle()>();

        throw $r6;

     label13:
        $r2 = interfaceinvoke r7.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult success(java.lang.Object)>(r0);

        return $r2;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
    }

    private static android.content.pm.parsing.result.ParseResult parseSharedUser(android.content.pm.parsing.result.ParseInput, android.content.pm.parsing.ParsingPackage, android.content.res.TypedArray)
    {
        android.content.pm.parsing.result.ParseInput r0;
        android.content.res.TypedArray r1;
        java.lang.String r2, $r4, $r5, $r6, $r14, $r16;
        android.content.pm.parsing.result.ParseResult r3, $r9, $r17, $r18;
        boolean $z0, $z1, $z2;
        android.content.pm.parsing.ParsingPackage $r7, $r8, r19;
        int $i0;
        java.lang.StringBuilder $r10;

        r0 := @parameter0: android.content.pm.parsing.result.ParseInput;

        r19 := @parameter1: android.content.pm.parsing.ParsingPackage;

        r1 := @parameter2: android.content.res.TypedArray;

        r2 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: java.lang.String nonConfigString(int,int,android.content.res.TypedArray)>(0, 0, r1);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z0 == 0 goto label1;

        $r18 = interfaceinvoke r0.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult success(java.lang.Object)>(r19);

        return $r18;

     label1:
        $r4 = "android";

        $r5 = interfaceinvoke r19.<android.content.pm.parsing.ParsingPackage: java.lang.String getPackageName()>();

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z1 != 0 goto label2;

        r3 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: android.content.pm.parsing.result.ParseResult validateName(android.content.pm.parsing.result.ParseInput,java.lang.String,boolean,boolean)>(r0, r2, 1, 1);

        $z2 = interfaceinvoke r3.<android.content.pm.parsing.result.ParseResult: boolean isError()>();

        if $z2 == 0 goto label2;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<manifest> specifies bad sharedUserId name \"");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\": ");

        $r14 = interfaceinvoke r3.<android.content.pm.parsing.result.ParseResult: java.lang.String getErrorMessage()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r17 = interfaceinvoke r0.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(int,java.lang.String)>(-107, $r16);

        return $r17;

     label2:
        $r6 = virtualinvoke r2.<java.lang.String: java.lang.String intern()>();

        $r7 = interfaceinvoke r19.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setSharedUserId(java.lang.String)>($r6);

        $i0 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: int resId(int,android.content.res.TypedArray)>(3, r1);

        $r8 = interfaceinvoke $r7.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setSharedUserLabel(int)>($i0);

        $r9 = interfaceinvoke r0.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult success(java.lang.Object)>($r8);

        return $r9;
    }

    private android.content.pm.parsing.result.ParseResult parseSplitApk(android.content.pm.parsing.result.ParseInput, android.content.pm.parsing.ParsingPackage, int, android.content.res.AssetManager, int)
    {
        android.content.pm.parsing.ParsingPackageUtils r0;
        android.content.pm.parsing.result.ParseInput r1;
        int i0, i1, i2, i3;
        java.lang.String r2, $r9, $r12, $r14, $r18, $r24;
        android.content.res.XmlResourceParser r3;
        android.content.res.Resources r4;
        java.lang.String[] $r5;
        android.util.DisplayMetrics $r6;
        boolean $z0;
        java.lang.StringBuilder $r15, $r21, r32;
        android.content.pm.parsing.result.ParseResult $r19, $r25, r31, r33;
        java.lang.Exception $r20;
        java.lang.Throwable $r26, $r27;
        android.content.pm.parsing.ParsingPackage r28;
        android.content.res.AssetManager r29;

        r0 := @this: android.content.pm.parsing.ParsingPackageUtils;

        r1 := @parameter0: android.content.pm.parsing.result.ParseInput;

        r28 := @parameter1: android.content.pm.parsing.ParsingPackage;

        i2 := @parameter2: int;

        r29 := @parameter3: android.content.res.AssetManager;

        i0 := @parameter4: int;

        $r5 = interfaceinvoke r28.<android.content.pm.parsing.ParsingPackage: java.lang.String[] getSplitCodePaths()>();

        r2 = $r5[i2];

        i1 = virtualinvoke r29.<android.content.res.AssetManager: int findCookieForPath(java.lang.String)>(r2);

        if i1 != 0 goto label01;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed adding asset path: ");

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        $r19 = interfaceinvoke r1.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(int,java.lang.String)>(-101, $r18);

        return $r19;

     label01:
        r3 = virtualinvoke r29.<android.content.res.AssetManager: android.content.res.XmlResourceParser openXmlResourceParser(int,java.lang.String)>(i1, "AndroidManifest.xml");

     label02:
        r4 = new android.content.res.Resources;

        $r6 = r0.<android.content.pm.parsing.ParsingPackageUtils: android.util.DisplayMetrics mDisplayMetrics>;

        specialinvoke r4.<android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>(r29, $r6, null);

        r31 = specialinvoke r0.<android.content.pm.parsing.ParsingPackageUtils: android.content.pm.parsing.result.ParseResult parseSplitApk(android.content.pm.parsing.result.ParseInput,android.content.pm.parsing.ParsingPackage,android.content.res.Resources,android.content.res.XmlResourceParser,int,int)>(r1, r28, r4, r3, i0, i2);

        $z0 = interfaceinvoke r31.<android.content.pm.parsing.result.ParseResult: boolean isError()>();

        if $z0 == 0 goto label06;

        i3 = interfaceinvoke r31.<android.content.pm.parsing.result.ParseResult: int getErrorCode()>();

        r32 = new java.lang.StringBuilder;

        specialinvoke r32.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (at ");

        $r9 = interfaceinvoke r3.<android.content.res.XmlResourceParser: java.lang.String getPositionDescription()>();

        virtualinvoke r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("): ");

        $r12 = interfaceinvoke r31.<android.content.pm.parsing.result.ParseResult: java.lang.String getErrorMessage()>();

        virtualinvoke r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke r32.<java.lang.StringBuilder: java.lang.String toString()>();

        r33 = interfaceinvoke r1.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(int,java.lang.String)>(i3, $r14);

     label03:
        if r3 == null goto label05;

     label04:
        interfaceinvoke r3.<android.content.res.XmlResourceParser: void close()>();

     label05:
        return r33;

     label06:
        if r3 == null goto label08;

     label07:
        interfaceinvoke r3.<android.content.res.XmlResourceParser: void close()>();

     label08:
        return r31;

     label09:
        $r27 := @caughtexception;

        if r3 == null goto label14;

     label10:
        interfaceinvoke r3.<android.content.res.XmlResourceParser: void close()>();

     label11:
        goto label14;

     label12:
        $r26 := @caughtexception;

     label13:
        virtualinvoke $r27.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r26);

     label14:
        throw $r27;

     label15:
        $r20 := @caughtexception;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to read manifest from ");

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        $r25 = interfaceinvoke r1.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(int,java.lang.String,java.lang.Exception)>(-102, $r24, $r20);

        return $r25;

        catch java.lang.Exception from label01 to label02 with label15;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Exception from label04 to label05 with label15;
        catch java.lang.Exception from label07 to label08 with label15;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Exception from label13 to label14 with label15;
        catch java.lang.Exception from label14 to label15 with label15;
    }

    private android.content.pm.parsing.result.ParseResult parseSplitApk(android.content.pm.parsing.result.ParseInput, android.content.pm.parsing.ParsingPackage, android.content.res.Resources, android.content.res.XmlResourceParser, int, int) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException, android.content.pm.PackageParser$PackageParserException
    {
        android.content.pm.parsing.ParsingPackageUtils r0;
        android.content.pm.parsing.result.ParseInput r1;
        android.content.pm.parsing.ParsingPackage r2;
        android.content.res.XmlResourceParser r3;
        int i0, i1, i2, i3, $i4, $i5;
        android.content.pm.parsing.result.ParseResult $r5, $r6, $r9, r11, r12;
        boolean $z0, $z1, z2, $z3;
        java.lang.String $r7, $r8;
        android.content.res.Resources r10;

        r0 := @this: android.content.pm.parsing.ParsingPackageUtils;

        r1 := @parameter0: android.content.pm.parsing.result.ParseInput;

        r2 := @parameter1: android.content.pm.parsing.ParsingPackage;

        r10 := @parameter2: android.content.res.Resources;

        r3 := @parameter3: android.content.res.XmlResourceParser;

        i0 := @parameter4: int;

        i1 := @parameter5: int;

        staticinvoke <android.content.pm.PackageParser: android.util.Pair parsePackageSplitNames(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>(r3, r3);

        z2 = 0;

        i2 = interfaceinvoke r3.<android.content.res.XmlResourceParser: int getDepth()>();

     label1:
        i3 = interfaceinvoke r3.<android.content.res.XmlResourceParser: int next()>();

        if i3 == 1 goto label7;

        $i4 = i2 + 1;

        $i5 = interfaceinvoke r3.<android.content.res.XmlResourceParser: int getDepth()>();

        if $i4 < $i5 goto label1;

        if i3 == 2 goto label2;

        goto label1;

     label2:
        $r7 = "application";

        $r8 = interfaceinvoke r3.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z1 == 0 goto label4;

        if z2 == 0 goto label3;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageParsing", "<manifest> has more than one <application>");

        r11 = interfaceinvoke r1.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult success(java.lang.Object)>(null);

        goto label5;

     label3:
        z2 = 1;

        r11 = specialinvoke r0.<android.content.pm.parsing.ParsingPackageUtils: android.content.pm.parsing.result.ParseResult parseSplitApplication(android.content.pm.parsing.result.ParseInput,android.content.pm.parsing.ParsingPackage,android.content.res.Resources,android.content.res.XmlResourceParser,int,int)>(r1, r2, r10, r3, i0, i1);

        goto label5;

     label4:
        r11 = staticinvoke <android.content.pm.parsing.ParsingUtils: android.content.pm.parsing.result.ParseResult unknownTag(java.lang.String,android.content.pm.parsing.ParsingPackage,android.content.res.XmlResourceParser,android.content.pm.parsing.result.ParseInput)>("<manifest>", r2, r3, r1);

     label5:
        $z3 = interfaceinvoke r11.<android.content.pm.parsing.result.ParseResult: boolean isError()>();

        if $z3 == 0 goto label6;

        $r9 = interfaceinvoke r1.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(android.content.pm.parsing.result.ParseResult)>(r11);

        return $r9;

     label6:
        goto label1;

     label7:
        if z2 != 0 goto label8;

        r12 = interfaceinvoke r1.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult deferError(java.lang.String,long)>("<manifest> does not contain an <application>", 150776642L);

        $z0 = interfaceinvoke r12.<android.content.pm.parsing.result.ParseResult: boolean isError()>();

        if $z0 == 0 goto label8;

        $r6 = interfaceinvoke r1.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(android.content.pm.parsing.result.ParseResult)>(r12);

        return $r6;

     label8:
        $r5 = interfaceinvoke r1.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult success(java.lang.Object)>(r2);

        return $r5;
    }

    private android.content.pm.parsing.result.ParseResult parseSplitApplication(android.content.pm.parsing.result.ParseInput, android.content.pm.parsing.ParsingPackage, android.content.res.Resources, android.content.res.XmlResourceParser, int, int) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.pm.parsing.ParsingPackageUtils r0;
        android.content.res.Resources r1;
        android.content.res.XmlResourceParser r2;
        int i0, i1, i2, $i3, $i4, i5;
        java.lang.String r5, $r9, $r11, $r19, r25;
        int[] $r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, z15, $z16;
        android.content.pm.parsing.result.ParseResult $r7, $r12, r27, r30, r31;
        java.lang.String[] $r8, $r10, $r14, $r16;
        java.lang.Object $r13, $r15, $r17, $r18;
        java.lang.Throwable $r20, $r21, r28;
        android.content.pm.parsing.result.ParseInput r22;
        android.content.pm.parsing.ParsingPackage r23;
        android.content.res.TypedArray r24;
        android.content.pm.parsing.component.ParsedMainComponent r29;
        byte b6;
        java.lang.StringBuilder r33;
        android.content.pm.parsing.component.ParsedActivity r34, r37, r38;
        android.content.pm.parsing.component.ParsedProvider r35;
        android.content.pm.parsing.component.ParsedService r36;

        r0 := @this: android.content.pm.parsing.ParsingPackageUtils;

        r22 := @parameter0: android.content.pm.parsing.result.ParseInput;

        r23 := @parameter1: android.content.pm.parsing.ParsingPackage;

        r1 := @parameter2: android.content.res.Resources;

        r2 := @parameter3: android.content.res.XmlResourceParser;

        i0 := @parameter4: int;

        i1 := @parameter5: int;

        $r6 = <com.android.internal.R$styleable: int[] AndroidManifestApplication>;

        r24 = virtualinvoke r1.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r2, $r6);

     label01:
        $z0 = virtualinvoke r24.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(7, 1);

        interfaceinvoke r23.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setSplitHasCode(int,boolean)>(i1, $z0);

        r25 = virtualinvoke r24.<android.content.res.TypedArray: java.lang.String getString(int)>(46);

     label02:
        if r25 == null goto label08;

     label03:
        $z14 = staticinvoke <com.android.internal.os.ClassLoaderFactory: boolean isValidClassLoaderName(java.lang.String)>(r25);

        if $z14 == 0 goto label05;

     label04:
        goto label08;

     label05:
        r33 = new java.lang.StringBuilder;

        specialinvoke r33.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid class loader name: ");

        virtualinvoke r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r25);

        $r19 = virtualinvoke r33.<java.lang.StringBuilder: java.lang.String toString()>();

        r27 = interfaceinvoke r22.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(java.lang.String)>($r19);

     label06:
        virtualinvoke r24.<android.content.res.TypedArray: void recycle()>();

        return r27;

     label07:
        $r21 := @caughtexception;

        r28 = $r21;

        goto label36;

     label08:
        interfaceinvoke r23.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setSplitClassLoaderName(int,java.lang.String)>(i1, r25);

     label09:
        virtualinvoke r24.<android.content.res.TypedArray: void recycle()>();

        i2 = interfaceinvoke r2.<android.content.res.XmlResourceParser: int getDepth()>();

     label10:
        i5 = interfaceinvoke r2.<android.content.res.XmlResourceParser: int next()>();

        if i5 == 1 goto label34;

        if i5 != 3 goto label12;

        $i4 = interfaceinvoke r2.<android.content.res.XmlResourceParser: int getDepth()>();

        if $i4 <= i2 goto label11;

        goto label12;

     label11:
        goto label34;

     label12:
        if i5 == 2 goto label13;

        goto label10;

     label13:
        r29 = null;

        r5 = interfaceinvoke r2.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        b6 = -1;

        $i3 = virtualinvoke r5.<java.lang.String: int hashCode()>();

        lookupswitch($i3)
        {
            case -1655966961: goto label19;
            case -987494927: goto label18;
            case -808719889: goto label17;
            case 790287890: goto label16;
            case 1984153269: goto label15;
            default: goto label14;
        };

     label14:
        goto label20;

     label15:
        $z1 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("service");

        if $z1 == 0 goto label14;

        b6 = 2;

        goto label20;

     label16:
        $z10 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("activity-alias");

        if $z10 == 0 goto label14;

        b6 = 4;

        goto label20;

     label17:
        $z11 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("receiver");

        if $z11 == 0 goto label14;

        b6 = 1;

        goto label20;

     label18:
        $z12 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("provider");

        if $z12 == 0 goto label14;

        b6 = 3;

        goto label20;

     label19:
        $z13 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("activity");

        if $z13 == 0 goto label14;

        b6 = 0;

     label20:
        if b6 == 0 goto label28;

        if b6 == 1 goto label27;

        if b6 == 2 goto label25;

        if b6 == 3 goto label23;

        if b6 == 4 goto label21;

        r30 = specialinvoke r0.<android.content.pm.parsing.ParsingPackageUtils: android.content.pm.parsing.result.ParseResult parseSplitBaseAppChildTags(android.content.pm.parsing.result.ParseInput,java.lang.String,android.content.pm.parsing.ParsingPackage,android.content.res.Resources,android.content.res.XmlResourceParser)>(r22, r5, r23, r1, r2);

        r29 = null;

        goto label31;

     label21:
        $z8 = <android.content.pm.PackageParser: boolean sUseRoundIcon>;

        r31 = staticinvoke <android.content.pm.parsing.component.ParsedActivityUtils: android.content.pm.parsing.result.ParseResult parseActivityAlias(android.content.pm.parsing.ParsingPackage,android.content.res.Resources,android.content.res.XmlResourceParser,boolean,android.content.pm.parsing.result.ParseInput)>(r23, r1, r2, $z8, r22);

        r29 = null;

        $z9 = interfaceinvoke r31.<android.content.pm.parsing.result.ParseResult: boolean isSuccess()>();

        if $z9 == 0 goto label22;

        $r18 = interfaceinvoke r31.<android.content.pm.parsing.result.ParseResult: java.lang.Object getResult()>();

        r29 = (android.content.pm.parsing.component.ParsedActivity) $r18;

        r34 = (android.content.pm.parsing.component.ParsedActivity) r29;

        interfaceinvoke r23.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage addActivity(android.content.pm.parsing.component.ParsedActivity)>(r34);

     label22:
        r30 = r31;

        goto label31;

     label23:
        $r16 = r0.<android.content.pm.parsing.ParsingPackageUtils: java.lang.String[] mSeparateProcesses>;

        $z6 = <android.content.pm.PackageParser: boolean sUseRoundIcon>;

        r30 = staticinvoke <android.content.pm.parsing.component.ParsedProviderUtils: android.content.pm.parsing.result.ParseResult parseProvider(java.lang.String[],android.content.pm.parsing.ParsingPackage,android.content.res.Resources,android.content.res.XmlResourceParser,int,boolean,android.content.pm.parsing.result.ParseInput)>($r16, r23, r1, r2, i0, $z6, r22);

        r29 = null;

        $z7 = interfaceinvoke r30.<android.content.pm.parsing.result.ParseResult: boolean isSuccess()>();

        if $z7 == 0 goto label24;

        $r17 = interfaceinvoke r30.<android.content.pm.parsing.result.ParseResult: java.lang.Object getResult()>();

        r29 = (android.content.pm.parsing.component.ParsedProvider) $r17;

        r35 = (android.content.pm.parsing.component.ParsedProvider) r29;

        interfaceinvoke r23.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage addProvider(android.content.pm.parsing.component.ParsedProvider)>(r35);

     label24:
        goto label31;

     label25:
        $r14 = r0.<android.content.pm.parsing.ParsingPackageUtils: java.lang.String[] mSeparateProcesses>;

        $z4 = <android.content.pm.PackageParser: boolean sUseRoundIcon>;

        r30 = staticinvoke <android.content.pm.parsing.component.ParsedServiceUtils: android.content.pm.parsing.result.ParseResult parseService(java.lang.String[],android.content.pm.parsing.ParsingPackage,android.content.res.Resources,android.content.res.XmlResourceParser,int,boolean,android.content.pm.parsing.result.ParseInput)>($r14, r23, r1, r2, i0, $z4, r22);

        r29 = null;

        $z5 = interfaceinvoke r30.<android.content.pm.parsing.result.ParseResult: boolean isSuccess()>();

        if $z5 == 0 goto label26;

        $r15 = interfaceinvoke r30.<android.content.pm.parsing.result.ParseResult: java.lang.Object getResult()>();

        r29 = (android.content.pm.parsing.component.ParsedService) $r15;

        r36 = (android.content.pm.parsing.component.ParsedService) r29;

        interfaceinvoke r23.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage addService(android.content.pm.parsing.component.ParsedService)>(r36);

     label26:
        goto label31;

     label27:
        z15 = 0;

        goto label29;

     label28:
        z15 = 1;

     label29:
        $r8 = r0.<android.content.pm.parsing.ParsingPackageUtils: java.lang.String[] mSeparateProcesses>;

        $z2 = <android.content.pm.PackageParser: boolean sUseRoundIcon>;

        r30 = staticinvoke <android.content.pm.parsing.component.ParsedActivityUtils: android.content.pm.parsing.result.ParseResult parseActivityOrReceiver(java.lang.String[],android.content.pm.parsing.ParsingPackage,android.content.res.Resources,android.content.res.XmlResourceParser,int,boolean,android.content.pm.parsing.result.ParseInput)>($r8, r23, r1, r2, i0, $z2, r22);

        $z3 = interfaceinvoke r30.<android.content.pm.parsing.result.ParseResult: boolean isSuccess()>();

        if $z3 == 0 goto label31;

        $r13 = interfaceinvoke r30.<android.content.pm.parsing.result.ParseResult: java.lang.Object getResult()>();

        r29 = (android.content.pm.parsing.component.ParsedActivity) $r13;

        if z15 == 0 goto label30;

        r37 = (android.content.pm.parsing.component.ParsedActivity) r29;

        interfaceinvoke r23.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage addActivity(android.content.pm.parsing.component.ParsedActivity)>(r37);

        goto label31;

     label30:
        r38 = (android.content.pm.parsing.component.ParsedActivity) r29;

        interfaceinvoke r23.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage addReceiver(android.content.pm.parsing.component.ParsedActivity)>(r38);

     label31:
        $z16 = interfaceinvoke r30.<android.content.pm.parsing.result.ParseResult: boolean isError()>();

        if $z16 == 0 goto label32;

        $r12 = interfaceinvoke r22.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(android.content.pm.parsing.result.ParseResult)>(r30);

        return $r12;

     label32:
        if r29 == null goto label33;

        $r9 = virtualinvoke r29.<android.content.pm.parsing.component.ParsedMainComponent: java.lang.String getSplitName()>();

        if $r9 != null goto label33;

        $r10 = interfaceinvoke r23.<android.content.pm.parsing.ParsingPackage: java.lang.String[] getSplitNames()>();

        $r11 = $r10[i1];

        virtualinvoke r29.<android.content.pm.parsing.component.ParsedMainComponent: android.content.pm.parsing.component.ParsedMainComponent setSplitName(java.lang.String)>($r11);

     label33:
        goto label10;

     label34:
        $r7 = interfaceinvoke r22.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult success(java.lang.Object)>(r23);

        return $r7;

     label35:
        $r20 := @caughtexception;

        r28 = $r20;

     label36:
        virtualinvoke r24.<android.content.res.TypedArray: void recycle()>();

        throw r28;

        catch java.lang.Throwable from label01 to label02 with label35;
        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label08 to label09 with label35;
    }

    private android.content.pm.parsing.result.ParseResult parseSplitBaseAppChildTags(android.content.pm.parsing.result.ParseInput, java.lang.String, android.content.pm.parsing.ParsingPackage, android.content.res.Resources, android.content.res.XmlResourceParser) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        android.content.pm.parsing.ParsingPackageUtils r0;
        java.lang.String r1;
        android.content.pm.parsing.ParsingPackage r2;
        android.content.res.Resources r3;
        android.content.res.XmlResourceParser r4;
        int $i0;
        boolean $z0, $z1, $z2, $z3, $z4;
        android.os.Bundle $r5, $r7;
        java.lang.Object $r6;
        android.content.pm.parsing.result.ParseResult $r9, $r10, $r11, $r12, r14;
        android.content.pm.parsing.result.ParseInput r13;
        byte b1;

        r0 := @this: android.content.pm.parsing.ParsingPackageUtils;

        r13 := @parameter0: android.content.pm.parsing.result.ParseInput;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.content.pm.parsing.ParsingPackage;

        r3 := @parameter3: android.content.res.Resources;

        r4 := @parameter4: android.content.res.XmlResourceParser;

        $i0 = virtualinvoke r1.<java.lang.String: int hashCode()>();

        lookupswitch($i0)
        {
            case -1356765254: goto label05;
            case -1115949454: goto label04;
            case 8960125: goto label03;
            case 1964930885: goto label02;
            default: goto label01;
        };

     label01:
        goto label06;

     label02:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("uses-package");

        if $z0 == 0 goto label01;

        b1 = 3;

        goto label07;

     label03:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("uses-static-library");

        if $z2 == 0 goto label01;

        b1 = 1;

        goto label07;

     label04:
        $z3 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("meta-data");

        if $z3 == 0 goto label01;

        b1 = 0;

        goto label07;

     label05:
        $z4 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("uses-library");

        if $z4 == 0 goto label01;

        b1 = 2;

        goto label07;

     label06:
        b1 = -1;

     label07:
        if b1 == 0 goto label11;

        if b1 == 1 goto label10;

        if b1 == 2 goto label09;

        if b1 == 3 goto label08;

        $r12 = staticinvoke <android.content.pm.parsing.ParsingUtils: android.content.pm.parsing.result.ParseResult unknownTag(java.lang.String,android.content.pm.parsing.ParsingPackage,android.content.res.XmlResourceParser,android.content.pm.parsing.result.ParseInput)>("<application>", r2, r4, r13);

        return $r12;

     label08:
        $r11 = interfaceinvoke r13.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult success(java.lang.Object)>(null);

        return $r11;

     label09:
        $r10 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: android.content.pm.parsing.result.ParseResult parseUsesLibrary(android.content.pm.parsing.result.ParseInput,android.content.pm.parsing.ParsingPackage,android.content.res.Resources,android.content.res.XmlResourceParser)>(r13, r2, r3, r4);

        return $r10;

     label10:
        $r9 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: android.content.pm.parsing.result.ParseResult parseUsesStaticLibrary(android.content.pm.parsing.result.ParseInput,android.content.pm.parsing.ParsingPackage,android.content.res.Resources,android.content.res.XmlResourceParser)>(r13, r2, r3, r4);

        return $r9;

     label11:
        $r5 = interfaceinvoke r2.<android.content.pm.parsing.ParsingPackage: android.os.Bundle getMetaData()>();

        r14 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: android.content.pm.parsing.result.ParseResult parseMetaData(android.content.pm.parsing.ParsingPackage,android.content.res.Resources,android.content.res.XmlResourceParser,android.os.Bundle,android.content.pm.parsing.result.ParseInput)>(r2, r3, r4, $r5, r13);

        $z1 = interfaceinvoke r14.<android.content.pm.parsing.result.ParseResult: boolean isSuccess()>();

        if $z1 == 0 goto label12;

        $r6 = interfaceinvoke r14.<android.content.pm.parsing.result.ParseResult: java.lang.Object getResult()>();

        $r7 = (android.os.Bundle) $r6;

        interfaceinvoke r2.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setMetaData(android.os.Bundle)>($r7);

     label12:
        return r14;
    }

    private static android.content.pm.parsing.result.ParseResult parseStaticLibrary(android.content.pm.parsing.ParsingPackage, android.content.res.Resources, android.content.res.XmlResourceParser, android.content.pm.parsing.result.ParseInput)
    {
        android.content.pm.parsing.result.ParseInput r0;
        int i0, i1;
        int[] $r1;
        java.lang.String $r6, $r7, $r8, $r9, $r14, $r16, r22;
        android.content.pm.parsing.ParsingPackage $r10, $r11, $r12, r18;
        long $l2;
        java.lang.Throwable $r17;
        android.content.res.Resources r19;
        android.content.res.XmlResourceParser r20;
        android.content.res.TypedArray r21;
        android.content.pm.parsing.result.ParseResult r23, r25, r26, r28;
        java.lang.StringBuilder r24, r27;

        r18 := @parameter0: android.content.pm.parsing.ParsingPackage;

        r19 := @parameter1: android.content.res.Resources;

        r20 := @parameter2: android.content.res.XmlResourceParser;

        r0 := @parameter3: android.content.pm.parsing.result.ParseInput;

        $r1 = <com.android.internal.R$styleable: int[] AndroidManifestStaticLibrary>;

        r21 = virtualinvoke r19.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r20, $r1);

     label01:
        r22 = virtualinvoke r21.<android.content.res.TypedArray: java.lang.String getNonResourceString(int)>(0);

        i0 = virtualinvoke r21.<android.content.res.TypedArray: int getInt(int,int)>(1, -1);

        i1 = virtualinvoke r21.<android.content.res.TypedArray: int getInt(int,int)>(2, 0);

     label02:
        if r22 == null goto label09;

        if i0 >= 0 goto label03;

        goto label09;

     label03:
        $r7 = interfaceinvoke r18.<android.content.pm.parsing.ParsingPackage: java.lang.String getSharedUserId()>();

        if $r7 == null goto label05;

        r23 = interfaceinvoke r0.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(int,java.lang.String)>(-107, "sharedUserId not allowed in static shared library");

     label04:
        virtualinvoke r21.<android.content.res.TypedArray: void recycle()>();

        return r23;

     label05:
        $r8 = interfaceinvoke r18.<android.content.pm.parsing.ParsingPackage: java.lang.String getStaticSharedLibName()>();

        if $r8 == null goto label07;

        r24 = new java.lang.StringBuilder;

        specialinvoke r24.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Multiple static-shared libs for package ");

        $r14 = interfaceinvoke r18.<android.content.pm.parsing.ParsingPackage: java.lang.String getPackageName()>();

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke r24.<java.lang.StringBuilder: java.lang.String toString()>();

        r25 = interfaceinvoke r0.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(java.lang.String)>($r16);

     label06:
        virtualinvoke r21.<android.content.res.TypedArray: void recycle()>();

        return r25;

     label07:
        $r9 = virtualinvoke r22.<java.lang.String: java.lang.String intern()>();

        $r10 = interfaceinvoke r18.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setStaticSharedLibName(java.lang.String)>($r9);

        $l2 = staticinvoke <android.content.pm.PackageInfo: long composeLongVersionCode(int,int)>(i1, i0);

        $r11 = interfaceinvoke $r10.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setStaticSharedLibVersion(long)>($l2);

        $r12 = interfaceinvoke $r11.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setStaticSharedLibrary(boolean)>(1);

        r26 = interfaceinvoke r0.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult success(java.lang.Object)>($r12);

     label08:
        virtualinvoke r21.<android.content.res.TypedArray: void recycle()>();

        return r26;

     label09:
        r27 = new java.lang.StringBuilder;

        specialinvoke r27.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad static-library declaration name: ");

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r22);

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" version: ");

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke r27.<java.lang.StringBuilder: java.lang.String toString()>();

        r28 = interfaceinvoke r0.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(java.lang.String)>($r6);

     label10:
        virtualinvoke r21.<android.content.res.TypedArray: void recycle()>();

        return r28;

     label11:
        $r17 := @caughtexception;

        virtualinvoke r21.<android.content.res.TypedArray: void recycle()>();

        throw $r17;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
    }

    private static android.content.pm.parsing.result.ParseResult parseSupportScreens(android.content.pm.parsing.result.ParseInput, android.content.pm.parsing.ParsingPackage, android.content.res.Resources, android.content.res.XmlResourceParser)
    {
        android.content.pm.parsing.ParsingPackage r0, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        android.content.res.XmlResourceParser r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8;
        int[] $r2;
        java.lang.Throwable $r12;
        android.content.pm.parsing.result.ParseInput r13;
        android.content.res.Resources r14;
        android.content.res.TypedArray r15;
        android.content.pm.parsing.result.ParseResult r16;

        r13 := @parameter0: android.content.pm.parsing.result.ParseInput;

        r0 := @parameter1: android.content.pm.parsing.ParsingPackage;

        r14 := @parameter2: android.content.res.Resources;

        r1 := @parameter3: android.content.res.XmlResourceParser;

        $r2 = <com.android.internal.R$styleable: int[] AndroidManifestSupportsScreens>;

        r15 = virtualinvoke r14.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r1, $r2);

     label1:
        i0 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: int anInt(int,int,android.content.res.TypedArray)>(0, 6, r15);

        i1 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: int anInt(int,int,android.content.res.TypedArray)>(0, 7, r15);

        i2 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: int anInt(int,int,android.content.res.TypedArray)>(0, 8, r15);

     label2:
        $i3 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: int anInt(int,int,android.content.res.TypedArray)>(1, 1, r15);

        $r3 = interfaceinvoke r0.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setSupportsSmallScreens(int)>($i3);

        $i4 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: int anInt(int,int,android.content.res.TypedArray)>(1, 2, r15);

        $r4 = interfaceinvoke $r3.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setSupportsNormalScreens(int)>($i4);

        $i5 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: int anInt(int,int,android.content.res.TypedArray)>(1, 3, r15);

        $r5 = interfaceinvoke $r4.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setSupportsLargeScreens(int)>($i5);

        $i6 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: int anInt(int,int,android.content.res.TypedArray)>(1, 5, r15);

        $r6 = interfaceinvoke $r5.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setSupportsExtraLargeScreens(int)>($i6);

        $i7 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: int anInt(int,int,android.content.res.TypedArray)>(1, 4, r15);

        $r7 = interfaceinvoke $r6.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setResizeable(int)>($i7);

        $i8 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: int anInt(int,int,android.content.res.TypedArray)>(1, 0, r15);

        $r8 = interfaceinvoke $r7.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setAnyDensity(int)>($i8);

        $r9 = interfaceinvoke $r8.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setRequiresSmallestWidthDp(int)>(i0);

        $r10 = interfaceinvoke $r9.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setCompatibleWidthLimitDp(int)>(i1);

        $r11 = interfaceinvoke $r10.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setLargestWidthLimitDp(int)>(i2);

        r16 = interfaceinvoke r13.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult success(java.lang.Object)>($r11);

     label3:
        virtualinvoke r15.<android.content.res.TypedArray: void recycle()>();

        return r16;

     label4:
        $r12 := @caughtexception;

        virtualinvoke r15.<android.content.res.TypedArray: void recycle()>();

        throw $r12;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
    }

    private static android.content.pm.parsing.result.ParseResult parseUsesConfiguration(android.content.pm.parsing.result.ParseInput, android.content.pm.parsing.ParsingPackage, android.content.res.Resources, android.content.res.XmlResourceParser)
    {
        android.content.pm.parsing.ParsingPackage r0;
        android.content.res.XmlResourceParser r1;
        android.content.pm.ConfigurationInfo $r3;
        int[] $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        boolean $z0, $z1;
        java.lang.Throwable $r6;
        android.content.pm.parsing.result.ParseInput r7;
        android.content.res.Resources r8;
        android.content.res.TypedArray r9;
        android.content.pm.parsing.result.ParseResult r10;

        r7 := @parameter0: android.content.pm.parsing.result.ParseInput;

        r0 := @parameter1: android.content.pm.parsing.ParsingPackage;

        r8 := @parameter2: android.content.res.Resources;

        r1 := @parameter3: android.content.res.XmlResourceParser;

        $r3 = new android.content.pm.ConfigurationInfo;

        specialinvoke $r3.<android.content.pm.ConfigurationInfo: void <init>()>();

        $r4 = <com.android.internal.R$styleable: int[] AndroidManifestUsesConfiguration>;

        r9 = virtualinvoke r8.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r1, $r4);

     label1:
        $i0 = virtualinvoke r9.<android.content.res.TypedArray: int getInt(int,int)>(0, 0);

        $r3.<android.content.pm.ConfigurationInfo: int reqTouchScreen> = $i0;

        $i1 = virtualinvoke r9.<android.content.res.TypedArray: int getInt(int,int)>(1, 0);

        $r3.<android.content.pm.ConfigurationInfo: int reqKeyboardType> = $i1;

        $z0 = virtualinvoke r9.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(2, 0);

        if $z0 == 0 goto label2;

        $i5 = $r3.<android.content.pm.ConfigurationInfo: int reqInputFeatures>;

        $i6 = 1 | $i5;

        $r3.<android.content.pm.ConfigurationInfo: int reqInputFeatures> = $i6;

     label2:
        $i2 = virtualinvoke r9.<android.content.res.TypedArray: int getInt(int,int)>(3, 0);

        $r3.<android.content.pm.ConfigurationInfo: int reqNavigation> = $i2;

        $z1 = virtualinvoke r9.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(4, 0);

        if $z1 == 0 goto label3;

        $i3 = $r3.<android.content.pm.ConfigurationInfo: int reqInputFeatures>;

        $i4 = $i3 | 2;

        $r3.<android.content.pm.ConfigurationInfo: int reqInputFeatures> = $i4;

     label3:
        interfaceinvoke r0.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage addConfigPreference(android.content.pm.ConfigurationInfo)>($r3);

        r10 = interfaceinvoke r7.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult success(java.lang.Object)>(r0);

     label4:
        virtualinvoke r9.<android.content.res.TypedArray: void recycle()>();

        return r10;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r9.<android.content.res.TypedArray: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    private static android.content.pm.parsing.result.ParseResult parseUsesFeature(android.content.pm.parsing.result.ParseInput, android.content.pm.parsing.ParsingPackage, android.content.res.Resources, android.content.res.XmlResourceParser)
    {
        android.content.pm.parsing.result.ParseInput r0;
        android.content.pm.parsing.ParsingPackage r1;
        java.lang.String $r3;
        android.content.pm.parsing.result.ParseResult $r4;
        android.content.pm.ConfigurationInfo $r5;
        int $i0;
        android.content.res.Resources r7;
        android.content.res.XmlResourceParser r8;
        android.content.pm.FeatureInfo r9;

        r0 := @parameter0: android.content.pm.parsing.result.ParseInput;

        r1 := @parameter1: android.content.pm.parsing.ParsingPackage;

        r7 := @parameter2: android.content.res.Resources;

        r8 := @parameter3: android.content.res.XmlResourceParser;

        r9 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: android.content.pm.FeatureInfo parseFeatureInfo(android.content.res.Resources,android.util.AttributeSet)>(r7, r8);

        interfaceinvoke r1.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage addReqFeature(android.content.pm.FeatureInfo)>(r9);

        $r3 = r9.<android.content.pm.FeatureInfo: java.lang.String name>;

        if $r3 != null goto label1;

        $r5 = new android.content.pm.ConfigurationInfo;

        specialinvoke $r5.<android.content.pm.ConfigurationInfo: void <init>()>();

        $i0 = r9.<android.content.pm.FeatureInfo: int reqGlEsVersion>;

        $r5.<android.content.pm.ConfigurationInfo: int reqGlEsVersion> = $i0;

        interfaceinvoke r1.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage addConfigPreference(android.content.pm.ConfigurationInfo)>($r5);

     label1:
        $r4 = interfaceinvoke r0.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult success(java.lang.Object)>(r1);

        return $r4;
    }

    private static android.content.pm.parsing.result.ParseResult parseUsesLibrary(android.content.pm.parsing.result.ParseInput, android.content.pm.parsing.ParsingPackage, android.content.res.Resources, android.content.res.XmlResourceParser)
    {
        android.content.pm.parsing.ParsingPackage r0, $r4;
        boolean z0, $z1;
        int[] $r1;
        java.util.List $r2;
        java.lang.Throwable $r6;
        android.content.pm.parsing.result.ParseInput r7;
        android.content.res.Resources r8;
        android.content.res.XmlResourceParser r9;
        android.content.res.TypedArray r10;
        java.lang.String r11, r12;
        android.content.pm.parsing.result.ParseResult r13;

        r7 := @parameter0: android.content.pm.parsing.result.ParseInput;

        r0 := @parameter1: android.content.pm.parsing.ParsingPackage;

        r8 := @parameter2: android.content.res.Resources;

        r9 := @parameter3: android.content.res.XmlResourceParser;

        $r1 = <com.android.internal.R$styleable: int[] AndroidManifestUsesLibrary>;

        r10 = virtualinvoke r8.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r9, $r1);

     label01:
        r11 = virtualinvoke r10.<android.content.res.TypedArray: java.lang.String getNonResourceString(int)>(0);

        z0 = virtualinvoke r10.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(1, 1);

     label02:
        if r11 == null goto label08;

     label03:
        r12 = virtualinvoke r11.<java.lang.String: java.lang.String intern()>();

     label04:
        if z0 == 0 goto label07;

     label05:
        $r4 = interfaceinvoke r0.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage addUsesLibrary(java.lang.String)>(r12);

        interfaceinvoke $r4.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage removeUsesOptionalLibrary(java.lang.String)>(r12);

     label06:
        goto label08;

     label07:
        $r2 = interfaceinvoke r0.<android.content.pm.parsing.ParsingPackage: java.util.List getUsesLibraries()>();

        $z1 = staticinvoke <com.android.internal.util.ArrayUtils: boolean contains(java.util.Collection,java.lang.Object)>($r2, r12);

        if $z1 != 0 goto label08;

        interfaceinvoke r0.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage addUsesOptionalLibrary(java.lang.String)>(r12);

     label08:
        r13 = interfaceinvoke r7.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult success(java.lang.Object)>(r0);

     label09:
        virtualinvoke r10.<android.content.res.TypedArray: void recycle()>();

        return r13;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r10.<android.content.res.TypedArray: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    private android.content.pm.parsing.result.ParseResult parseUsesPermission(android.content.pm.parsing.result.ParseInput, android.content.pm.parsing.ParsingPackage, android.content.res.Resources, android.content.res.XmlResourceParser) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        android.content.pm.parsing.ParsingPackageUtils r0;
        android.content.pm.parsing.ParsingPackage r1;
        android.content.res.XmlResourceParser r2;
        java.lang.String r3, r4, $r9, $r12, $r14, $r15, r26;
        int[] $r5;
        android.content.pm.parsing.ParsingPackageUtils$Callback $r17, $r18, $r19, $r20;
        int $i1, $i2, i4, i5;
        java.lang.Throwable $r21;
        android.content.pm.parsing.result.ParseInput r22;
        android.content.res.Resources r23;
        android.content.res.TypedArray r24;
        android.util.TypedValue r25;
        android.content.pm.parsing.result.ParseResult r27;
        boolean z0, z1, $z2;
        java.util.List $r28;
        java.lang.StringBuilder r29;

        r0 := @this: android.content.pm.parsing.ParsingPackageUtils;

        r22 := @parameter0: android.content.pm.parsing.result.ParseInput;

        r1 := @parameter1: android.content.pm.parsing.ParsingPackage;

        r23 := @parameter2: android.content.res.Resources;

        r2 := @parameter3: android.content.res.XmlResourceParser;

        $r5 = <com.android.internal.R$styleable: int[] AndroidManifestUsesPermission>;

        r24 = virtualinvoke r23.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r2, $r5);

     label01:
        r3 = virtualinvoke r24.<android.content.res.TypedArray: java.lang.String getNonResourceString(int)>(0);

     label02:
        r25 = virtualinvoke r24.<android.content.res.TypedArray: android.util.TypedValue peekValue(int)>(1);

     label03:
        i4 = 0;

        if r25 == null goto label07;

        i4 = 0;

     label04:
        $i1 = r25.<android.util.TypedValue: int type>;

        if $i1 < 16 goto label07;

     label05:
        i4 = 0;

     label06:
        $i2 = r25.<android.util.TypedValue: int type>;

        if $i2 > 31 goto label07;

        i4 = r25.<android.util.TypedValue: int data>;

     label07:
        r26 = virtualinvoke r24.<android.content.res.TypedArray: java.lang.String getNonConfigurationString(int,int)>(2, 0);

        r4 = virtualinvoke r24.<android.content.res.TypedArray: java.lang.String getNonConfigurationString(int,int)>(3, 0);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r2);

        r27 = interfaceinvoke r22.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult success(java.lang.Object)>(r1);

     label08:
        if r3 != null goto label09;

        virtualinvoke r24.<android.content.res.TypedArray: void recycle()>();

        return r27;

     label09:
        if i4 == 0 goto label12;

     label10:
        i5 = <android.os.Build$VERSION: int RESOURCES_SDK_INT>;

     label11:
        if i4 >= i5 goto label12;

        virtualinvoke r24.<android.content.res.TypedArray: void recycle()>();

        return r27;

     label12:
        if r26 == null goto label15;

     label13:
        $r19 = r0.<android.content.pm.parsing.ParsingPackageUtils: android.content.pm.parsing.ParsingPackageUtils$Callback mCallback>;

        if $r19 == null goto label15;

        $r20 = r0.<android.content.pm.parsing.ParsingPackageUtils: android.content.pm.parsing.ParsingPackageUtils$Callback mCallback>;

        z0 = interfaceinvoke $r20.<android.content.pm.parsing.ParsingPackageUtils$Callback: boolean hasFeature(java.lang.String)>(r26);

     label14:
        if z0 != 0 goto label15;

        virtualinvoke r24.<android.content.res.TypedArray: void recycle()>();

        return r27;

     label15:
        if r4 == null goto label18;

     label16:
        $r17 = r0.<android.content.pm.parsing.ParsingPackageUtils: android.content.pm.parsing.ParsingPackageUtils$Callback mCallback>;

        if $r17 == null goto label18;

        $r18 = r0.<android.content.pm.parsing.ParsingPackageUtils: android.content.pm.parsing.ParsingPackageUtils$Callback mCallback>;

        z1 = interfaceinvoke $r18.<android.content.pm.parsing.ParsingPackageUtils$Callback: boolean hasFeature(java.lang.String)>(r4);

     label17:
        if z1 == 0 goto label18;

        virtualinvoke r24.<android.content.res.TypedArray: void recycle()>();

        return r27;

     label18:
        $r28 = interfaceinvoke r1.<android.content.pm.parsing.ParsingPackage: java.util.List getRequestedPermissions()>();

        $z2 = interfaceinvoke $r28.<java.util.List: boolean contains(java.lang.Object)>(r3);

        if $z2 != 0 goto label20;

        $r15 = virtualinvoke r3.<java.lang.String: java.lang.String intern()>();

        interfaceinvoke r1.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage addRequestedPermission(java.lang.String)>($r15);

     label19:
        goto label21;

     label20:
        r29 = new java.lang.StringBuilder;

        specialinvoke r29.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring duplicate uses-permissions/uses-permissions-sdk-m: ");

        virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in package: ");

        $r9 = interfaceinvoke r1.<android.content.pm.parsing.ParsingPackage: java.lang.String getPackageName()>();

        virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at: ");

        $r12 = interfaceinvoke r2.<android.content.res.XmlResourceParser: java.lang.String getPositionDescription()>();

        virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke r29.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageParsing", $r14);

     label21:
        virtualinvoke r24.<android.content.res.TypedArray: void recycle()>();

        return r27;

     label22:
        $r21 := @caughtexception;

        virtualinvoke r24.<android.content.res.TypedArray: void recycle()>();

        throw $r21;

        catch java.lang.Throwable from label01 to label02 with label22;
        catch java.lang.Throwable from label02 to label03 with label22;
        catch java.lang.Throwable from label04 to label05 with label22;
        catch java.lang.Throwable from label06 to label07 with label22;
        catch java.lang.Throwable from label07 to label08 with label22;
        catch java.lang.Throwable from label10 to label11 with label22;
        catch java.lang.Throwable from label13 to label14 with label22;
        catch java.lang.Throwable from label16 to label17 with label22;
        catch java.lang.Throwable from label18 to label19 with label22;
        catch java.lang.Throwable from label20 to label21 with label22;
    }

    private static android.content.pm.parsing.result.ParseResult parseUsesSdk(android.content.pm.parsing.result.ParseInput, android.content.pm.parsing.ParsingPackage, android.content.res.Resources, android.content.res.XmlResourceParser) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        android.content.pm.parsing.ParsingPackage r0, $r12;
        android.content.res.Resources r1;
        android.content.res.XmlResourceParser r2;
        android.content.res.TypedArray r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7, i8, i9, i10;
        android.content.pm.parsing.result.ParseResult $r4, r28, r29, r30, r31, r32, r33, r36, r37;
        int[] $r5;
        java.lang.Object $r6, $r10;
        java.lang.Integer $r7, $r11;
        java.lang.String $r8, $r14, r21, r23, r25, r26;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.String[] $r9, $r27;
        android.util.SparseIntArray $r13, r34, r35;
        java.lang.CharSequence $r15, $r16, $r17, $r18;
        java.lang.Throwable $r19;
        android.content.pm.parsing.result.ParseInput r20;
        android.util.TypedValue r22, r24;

        r20 := @parameter0: android.content.pm.parsing.result.ParseInput;

        r0 := @parameter1: android.content.pm.parsing.ParsingPackage;

        r1 := @parameter2: android.content.res.Resources;

        r2 := @parameter3: android.content.res.XmlResourceParser;

        $i0 = <android.content.pm.PackageParser: int SDK_VERSION>;

        if $i0 <= 0 goto label44;

        $r5 = <com.android.internal.R$styleable: int[] AndroidManifestUsesSdk>;

        r3 = virtualinvoke r1.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r2, $r5);

        r21 = null;

     label01:
        r22 = virtualinvoke r3.<android.content.res.TypedArray: android.util.TypedValue peekValue(int)>(0);

     label02:
        i6 = 1;

        r23 = null;

        if r22 == null goto label07;

     label03:
        $i5 = r22.<android.util.TypedValue: int type>;

        if $i5 != 3 goto label05;

        $r17 = r22.<android.util.TypedValue: java.lang.CharSequence string>;

        if $r17 == null goto label05;

        $r18 = r22.<android.util.TypedValue: java.lang.CharSequence string>;

        r23 = interfaceinvoke $r18.<java.lang.CharSequence: java.lang.String toString()>();

     label04:
        i6 = 1;

        goto label07;

     label05:
        i6 = r22.<android.util.TypedValue: int data>;

     label06:
        r23 = null;

     label07:
        r24 = virtualinvoke r3.<android.content.res.TypedArray: android.util.TypedValue peekValue(int)>(1);

     label08:
        if r24 == null goto label13;

     label09:
        $i4 = r24.<android.util.TypedValue: int type>;

        if $i4 != 3 goto label11;

        $r15 = r24.<android.util.TypedValue: java.lang.CharSequence string>;

        if $r15 == null goto label11;

        $r16 = r24.<android.util.TypedValue: java.lang.CharSequence string>;

        r25 = interfaceinvoke $r16.<java.lang.CharSequence: java.lang.String toString()>();

     label10:
        r26 = r23;

        i7 = 0;

        r21 = r25;

        if r23 != null goto label14;

        r26 = r25;

        i7 = 0;

        r21 = r25;

        goto label14;

     label11:
        i7 = r24.<android.util.TypedValue: int data>;

     label12:
        r26 = r23;

        goto label14;

     label13:
        i7 = i6;

        r21 = r23;

        r26 = r23;

     label14:
        $r27 = <android.content.pm.PackageParser: java.lang.String[] SDK_CODENAMES>;

        r28 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: android.content.pm.parsing.result.ParseResult computeTargetSdkVersion(int,java.lang.String,java.lang.String[],android.content.pm.parsing.result.ParseInput)>(i7, r21, $r27, r20);

        $z4 = interfaceinvoke r28.<android.content.pm.parsing.result.ParseResult: boolean isError()>();

        if $z4 == 0 goto label16;

        r29 = interfaceinvoke r20.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(android.content.pm.parsing.result.ParseResult)>(r28);

     label15:
        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        return r29;

     label16:
        $r6 = interfaceinvoke r28.<android.content.pm.parsing.result.ParseResult: java.lang.Object getResult()>();

        $r7 = (java.lang.Integer) $r6;

        i8 = virtualinvoke $r7.<java.lang.Integer: int intValue()>();

     label17:
        $r8 = interfaceinvoke r0.<android.content.pm.parsing.ParsingPackage: java.lang.String getPackageName()>();

        r30 = interfaceinvoke r20.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult enableDeferredError(java.lang.String,int)>($r8, i8);

        $z0 = interfaceinvoke r30.<android.content.pm.parsing.result.ParseResult: boolean isError()>();

        if $z0 == 0 goto label19;

        r31 = interfaceinvoke r20.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(android.content.pm.parsing.result.ParseResult)>(r30);

     label18:
        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        return r31;

     label19:
        $i1 = <android.content.pm.PackageParser: int SDK_VERSION>;

        $r9 = <android.content.pm.PackageParser: java.lang.String[] SDK_CODENAMES>;

        r32 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: android.content.pm.parsing.result.ParseResult computeMinSdkVersion(int,java.lang.String,int,java.lang.String[],android.content.pm.parsing.result.ParseInput)>(i6, r26, $i1, $r9, r20);

        $z1 = interfaceinvoke r32.<android.content.pm.parsing.result.ParseResult: boolean isError()>();

        if $z1 == 0 goto label21;

        r33 = interfaceinvoke r20.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(android.content.pm.parsing.result.ParseResult)>(r32);

     label20:
        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        return r33;

     label21:
        $r10 = interfaceinvoke r32.<android.content.pm.parsing.result.ParseResult: java.lang.Object getResult()>();

        $r11 = (java.lang.Integer) $r10;

        $i2 = virtualinvoke $r11.<java.lang.Integer: int intValue()>();

        $r12 = interfaceinvoke r0.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setMinSdkVersion(int)>($i2);

        interfaceinvoke $r12.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setTargetSdkVersion(int)>(i8);

        i9 = interfaceinvoke r2.<android.content.res.XmlResourceParser: int getDepth()>();

     label22:
        r34 = null;

     label23:
        i10 = interfaceinvoke r2.<android.content.res.XmlResourceParser: int next()>();

     label24:
        if i10 == 1 goto label41;

        if i10 != 3 goto label28;

     label25:
        $i3 = interfaceinvoke r2.<android.content.res.XmlResourceParser: int getDepth()>();

        if $i3 <= i9 goto label27;

     label26:
        goto label28;

     label27:
        goto label41;

     label28:
        if i10 == 3 goto label40;

        if i10 != 4 goto label29;

        goto label40;

     label29:
        $r14 = interfaceinvoke r2.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        $z2 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>("extension-sdk");

        if $z2 == 0 goto label36;

     label30:
        if r34 != null goto label33;

     label31:
        r35 = new android.util.SparseIntArray;

        specialinvoke r35.<android.util.SparseIntArray: void <init>()>();

     label32:
        goto label34;

     label33:
        r35 = r34;

     label34:
        r36 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: android.content.pm.parsing.result.ParseResult parseExtensionSdk(android.content.pm.parsing.result.ParseInput,android.content.res.Resources,android.content.res.XmlResourceParser,android.util.SparseIntArray)>(r20, r1, r2, r35);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r2);

     label35:
        r34 = r35;

        goto label37;

     label36:
        r36 = staticinvoke <android.content.pm.parsing.ParsingUtils: android.content.pm.parsing.result.ParseResult unknownTag(java.lang.String,android.content.pm.parsing.ParsingPackage,android.content.res.XmlResourceParser,android.content.pm.parsing.result.ParseInput)>("<uses-sdk>", r0, r2, r20);

     label37:
        $z3 = interfaceinvoke r36.<android.content.pm.parsing.result.ParseResult: boolean isError()>();

        if $z3 == 0 goto label39;

        r37 = interfaceinvoke r20.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(android.content.pm.parsing.result.ParseResult)>(r36);

     label38:
        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        return r37;

     label39:
        goto label23;

     label40:
        goto label23;

     label41:
        $r13 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: android.util.SparseIntArray exactSizedCopyOfSparseArray(android.util.SparseIntArray)>(r34);

        interfaceinvoke r0.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage setMinExtensionVersions(android.util.SparseIntArray)>($r13);

     label42:
        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        goto label44;

     label43:
        $r19 := @caughtexception;

        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        throw $r19;

     label44:
        $r4 = interfaceinvoke r20.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult success(java.lang.Object)>(r0);

        return $r4;

        catch java.lang.Throwable from label01 to label02 with label43;
        catch java.lang.Throwable from label03 to label04 with label43;
        catch java.lang.Throwable from label05 to label06 with label43;
        catch java.lang.Throwable from label07 to label08 with label43;
        catch java.lang.Throwable from label09 to label10 with label43;
        catch java.lang.Throwable from label11 to label12 with label43;
        catch java.lang.Throwable from label14 to label15 with label43;
        catch java.lang.Throwable from label16 to label17 with label43;
        catch java.lang.Throwable from label17 to label18 with label43;
        catch java.lang.Throwable from label19 to label20 with label43;
        catch java.lang.Throwable from label21 to label22 with label43;
        catch java.lang.Throwable from label23 to label24 with label43;
        catch java.lang.Throwable from label25 to label26 with label43;
        catch java.lang.Throwable from label29 to label30 with label43;
        catch java.lang.Throwable from label31 to label32 with label43;
        catch java.lang.Throwable from label34 to label35 with label43;
        catch java.lang.Throwable from label36 to label37 with label43;
        catch java.lang.Throwable from label37 to label38 with label43;
        catch java.lang.Throwable from label41 to label42 with label43;
    }

    private static android.content.pm.parsing.result.ParseResult parseUsesStaticLibrary(android.content.pm.parsing.result.ParseInput, android.content.pm.parsing.ParsingPackage, android.content.res.Resources, android.content.res.XmlResourceParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.res.XmlResourceParser r0;
        android.content.res.TypedArray r1;
        int i0, $i1, $i2, $i3, $i4;
        java.lang.String r2, $r11, $r18, r23, r24, r27, $r34;
        int[] $r3;
        java.util.List $r10;
        boolean $z0, $z1;
        android.content.pm.parsing.ParsingPackage $r12, $r13, $r14, r21;
        long $l5;
        java.lang.Object $r15;
        java.lang.Throwable $r19;
        android.content.pm.parsing.result.ParseInput r20;
        android.content.res.Resources r22;
        java.lang.StringBuilder r25, r33;
        android.content.pm.parsing.result.ParseResult r26, r29, r30, r32, r35;
        java.lang.String[] r28, r31;

        r20 := @parameter0: android.content.pm.parsing.result.ParseInput;

        r21 := @parameter1: android.content.pm.parsing.ParsingPackage;

        r22 := @parameter2: android.content.res.Resources;

        r0 := @parameter3: android.content.res.XmlResourceParser;

        $r3 = <com.android.internal.R$styleable: int[] AndroidManifestUsesStaticLibrary>;

        r1 = virtualinvoke r22.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r0, $r3);

     label01:
        r23 = virtualinvoke r1.<android.content.res.TypedArray: java.lang.String getNonResourceString(int)>(0);

        i0 = virtualinvoke r1.<android.content.res.TypedArray: int getInt(int,int)>(1, -1);

        r24 = virtualinvoke r1.<android.content.res.TypedArray: java.lang.String getNonResourceString(int)>(2);

     label02:
        if r23 == null goto label13;

        if i0 < 0 goto label13;

        if r24 != null goto label03;

        goto label13;

     label03:
        $r10 = interfaceinvoke r21.<android.content.pm.parsing.ParsingPackage: java.util.List getUsesStaticLibraries()>();

        $z0 = interfaceinvoke $r10.<java.util.List: boolean contains(java.lang.Object)>(r23);

        if $z0 == 0 goto label05;

        r25 = new java.lang.StringBuilder;

        specialinvoke r25.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Depending on multiple versions of static library ");

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r23);

        $r18 = virtualinvoke r25.<java.lang.StringBuilder: java.lang.String toString()>();

        r26 = interfaceinvoke r20.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(java.lang.String)>($r18);

     label04:
        virtualinvoke r1.<android.content.res.TypedArray: void recycle()>();

        return r26;

     label05:
        r27 = virtualinvoke r23.<java.lang.String: java.lang.String intern()>();

        $r11 = virtualinvoke r24.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(":", "");

        r2 = virtualinvoke $r11.<java.lang.String: java.lang.String toLowerCase()>();

        r28 = <libcore.util.EmptyArray: java.lang.String[] STRING>;

     label06:
        $i1 = interfaceinvoke r21.<android.content.pm.parsing.ParsingPackage: int getTargetSdkVersion()>();

        if $i1 < 27 goto label09;

        r29 = staticinvoke <android.content.pm.parsing.ParsingPackageUtils: android.content.pm.parsing.result.ParseResult parseAdditionalCertificates(android.content.pm.parsing.result.ParseInput,android.content.res.Resources,android.content.res.XmlResourceParser)>(r20, r22, r0);

        $z1 = interfaceinvoke r29.<android.content.pm.parsing.result.ParseResult: boolean isError()>();

        if $z1 == 0 goto label08;

        r30 = interfaceinvoke r20.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(android.content.pm.parsing.result.ParseResult)>(r29);

     label07:
        virtualinvoke r1.<android.content.res.TypedArray: void recycle()>();

        return r30;

     label08:
        $r15 = interfaceinvoke r29.<android.content.pm.parsing.result.ParseResult: java.lang.Object getResult()>();

        r28 = (java.lang.String[]) $r15;

     label09:
        $i2 = lengthof r28;

        $i3 = $i2 + 1;

        r31 = newarray (java.lang.String)[$i3];

     label10:
        r31[0] = r2;

     label11:
        $i4 = lengthof r28;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r28, 0, r31, 1, $i4);

        $r12 = interfaceinvoke r21.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage addUsesStaticLibrary(java.lang.String)>(r27);

        $l5 = (long) i0;

        $r13 = interfaceinvoke $r12.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage addUsesStaticLibraryVersion(long)>($l5);

        $r14 = interfaceinvoke $r13.<android.content.pm.parsing.ParsingPackage: android.content.pm.parsing.ParsingPackage addUsesStaticLibraryCertDigests(java.lang.String[])>(r31);

        r32 = interfaceinvoke r20.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult success(java.lang.Object)>($r14);

     label12:
        virtualinvoke r1.<android.content.res.TypedArray: void recycle()>();

        return r32;

     label13:
        r33 = new java.lang.StringBuilder;

        specialinvoke r33.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad uses-static-library declaration name: ");

        virtualinvoke r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r23);

        virtualinvoke r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" version: ");

        virtualinvoke r33.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" certDigest");

        virtualinvoke r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r24);

        $r34 = virtualinvoke r33.<java.lang.StringBuilder: java.lang.String toString()>();

        r35 = interfaceinvoke r20.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(java.lang.String)>($r34);

     label14:
        virtualinvoke r1.<android.content.res.TypedArray: void recycle()>();

        return r35;

     label15:
        $r19 := @caughtexception;

        virtualinvoke r1.<android.content.res.TypedArray: void recycle()>();

        throw $r19;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label05 to label06 with label15;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch java.lang.Throwable from label09 to label10 with label15;
        catch java.lang.Throwable from label11 to label12 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
    }

    private static int resId(int, android.content.res.TypedArray)
    {
        int i0, $i1;
        android.content.res.TypedArray r0;

        i0 := @parameter0: int;

        r0 := @parameter1: android.content.res.TypedArray;

        $i1 = virtualinvoke r0.<android.content.res.TypedArray: int getResourceId(int,int)>(i0, 0);

        return $i1;
    }

    private static void setMaxAspectRatio(android.content.pm.parsing.ParsingPackage)
    {
        int i0, $i1, $i3, i4;
        byte $b2;
        java.lang.Object $r0;
        java.lang.Float $r1;
        android.os.Bundle $r2, $r4, r6;
        boolean $z0;
        android.content.pm.parsing.ParsingPackage r5;
        float f0, f1, f2;
        java.util.List r7;
        android.content.pm.parsing.component.ParsedActivity r8;

        r5 := @parameter0: android.content.pm.parsing.ParsingPackage;

        $i1 = interfaceinvoke r5.<android.content.pm.parsing.ParsingPackage: int getTargetSdkVersion()>();

        if $i1 >= 26 goto label01;

        f0 = 1.86F;

        goto label02;

     label01:
        f0 = 0.0F;

     label02:
        f1 = interfaceinvoke r5.<android.content.pm.parsing.ParsingPackage: float getMaxAspectRatio()>();

        $b2 = f1 cmpl 0.0F;

        if $b2 == 0 goto label03;

        goto label04;

     label03:
        r6 = interfaceinvoke r5.<android.content.pm.parsing.ParsingPackage: android.os.Bundle getMetaData()>();

        f1 = f0;

        if r6 == null goto label04;

        f1 = f0;

        $z0 = virtualinvoke r6.<android.os.Bundle: boolean containsKey(java.lang.String)>("android.max_aspect");

        if $z0 == 0 goto label04;

        f1 = virtualinvoke r6.<android.os.Bundle: float getFloat(java.lang.String,float)>("android.max_aspect", f0);

     label04:
        r7 = interfaceinvoke r5.<android.content.pm.parsing.ParsingPackage: java.util.List getActivities()>();

        i0 = interfaceinvoke r7.<java.util.List: int size()>();

        i4 = 0;

     label05:
        if i4 >= i0 goto label10;

        $r0 = interfaceinvoke r7.<java.util.List: java.lang.Object get(int)>(i4);

        r8 = (android.content.pm.parsing.component.ParsedActivity) $r0;

        $r1 = virtualinvoke r8.<android.content.pm.parsing.component.ParsedActivity: java.lang.Float getMaxAspectRatio()>();

        if $r1 == null goto label06;

        goto label09;

     label06:
        $r2 = virtualinvoke r8.<android.content.pm.parsing.component.ParsedActivity: android.os.Bundle getMetaData()>();

        if $r2 == null goto label07;

        $r4 = virtualinvoke r8.<android.content.pm.parsing.component.ParsedActivity: android.os.Bundle getMetaData()>();

        f2 = virtualinvoke $r4.<android.os.Bundle: float getFloat(java.lang.String,float)>("android.max_aspect", f1);

        goto label08;

     label07:
        f2 = f1;

     label08:
        $i3 = virtualinvoke r8.<android.content.pm.parsing.component.ParsedActivity: int getResizeMode()>();

        virtualinvoke r8.<android.content.pm.parsing.component.ParsedActivity: android.content.pm.parsing.component.ParsedActivity setMaxAspectRatio(int,float)>($i3, f2);

     label09:
        i4 = i4 + 1;

        goto label05;

     label10:
        return;
    }

    private void setMinAspectRatio(android.content.pm.parsing.ParsingPackage)
    {
        android.content.pm.parsing.ParsingPackageUtils r0;
        int i0, $i2, $i3, i4;
        byte $b1;
        java.lang.Object $r1;
        java.lang.Float $r2;
        boolean $z0;
        android.content.pm.parsing.ParsingPackage r4;
        float f1;
        android.content.pm.parsing.ParsingPackageUtils$Callback r5;
        java.util.List r6;
        android.content.pm.parsing.component.ParsedActivity r7;

        r0 := @this: android.content.pm.parsing.ParsingPackageUtils;

        r4 := @parameter0: android.content.pm.parsing.ParsingPackage;

        f1 = interfaceinvoke r4.<android.content.pm.parsing.ParsingPackage: float getMinAspectRatio()>();

        $b1 = f1 cmpl 0.0F;

        if $b1 == 0 goto label1;

        goto label4;

     label1:
        $i2 = interfaceinvoke r4.<android.content.pm.parsing.ParsingPackage: int getTargetSdkVersion()>();

        if $i2 < 29 goto label2;

        f1 = 0.0F;

        goto label4;

     label2:
        r5 = r0.<android.content.pm.parsing.ParsingPackageUtils: android.content.pm.parsing.ParsingPackageUtils$Callback mCallback>;

        if r5 == null goto label3;

        $z0 = interfaceinvoke r5.<android.content.pm.parsing.ParsingPackageUtils$Callback: boolean hasFeature(java.lang.String)>("android.hardware.type.watch");

        if $z0 == 0 goto label3;

        f1 = 1.0F;

        goto label4;

     label3:
        f1 = 1.333F;

     label4:
        r6 = interfaceinvoke r4.<android.content.pm.parsing.ParsingPackage: java.util.List getActivities()>();

        i0 = interfaceinvoke r6.<java.util.List: int size()>();

        i4 = 0;

     label5:
        if i4 >= i0 goto label7;

        $r1 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(i4);

        r7 = (android.content.pm.parsing.component.ParsedActivity) $r1;

        $r2 = virtualinvoke r7.<android.content.pm.parsing.component.ParsedActivity: java.lang.Float getMinAspectRatio()>();

        if $r2 != null goto label6;

        $i3 = virtualinvoke r7.<android.content.pm.parsing.component.ParsedActivity: int getResizeMode()>();

        virtualinvoke r7.<android.content.pm.parsing.component.ParsedActivity: android.content.pm.parsing.component.ParsedActivity setMinAspectRatio(int,float)>($i3, f1);

     label6:
        i4 = i4 + 1;

        goto label5;

     label7:
        return;
    }

    private void setSupportsSizeChanges(android.content.pm.parsing.ParsingPackage)
    {
        android.content.pm.parsing.ParsingPackageUtils r0;
        int i0, i1;
        java.lang.Object $r1;
        android.os.Bundle $r3, $r4, r6;
        boolean $z0, $z1, z2;
        android.content.pm.parsing.ParsingPackage r5;
        java.util.List r7;
        android.content.pm.parsing.component.ParsedActivity r8;

        r0 := @this: android.content.pm.parsing.ParsingPackageUtils;

        r5 := @parameter0: android.content.pm.parsing.ParsingPackage;

        r6 = interfaceinvoke r5.<android.content.pm.parsing.ParsingPackage: android.os.Bundle getMetaData()>();

        if r6 == null goto label1;

        $z1 = virtualinvoke r6.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>("android.supports_size_changes", 0);

        if $z1 == 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        r7 = interfaceinvoke r5.<android.content.pm.parsing.ParsingPackage: java.util.List getActivities()>();

        i0 = interfaceinvoke r7.<java.util.List: int size()>();

        i1 = 0;

     label3:
        if i1 >= i0 goto label6;

        $r1 = interfaceinvoke r7.<java.util.List: java.lang.Object get(int)>(i1);

        r8 = (android.content.pm.parsing.component.ParsedActivity) $r1;

        if z2 != 0 goto label4;

        $r3 = virtualinvoke r8.<android.content.pm.parsing.component.ParsedActivity: android.os.Bundle getMetaData()>();

        if $r3 == null goto label5;

        $r4 = virtualinvoke r8.<android.content.pm.parsing.component.ParsedActivity: android.os.Bundle getMetaData()>();

        $z0 = virtualinvoke $r4.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>("android.supports_size_changes", 0);

        if $z0 == 0 goto label5;

     label4:
        virtualinvoke r8.<android.content.pm.parsing.component.ParsedActivity: android.content.pm.parsing.component.ParsedActivity setSupportsSizeChanges(boolean)>(1);

     label5:
        i1 = i1 + 1;

        goto label3;

     label6:
        return;
    }

    private static java.lang.String string(int, android.content.res.TypedArray)
    {
        int i0;
        android.content.res.TypedArray r0;
        java.lang.String $r1;

        i0 := @parameter0: int;

        r0 := @parameter1: android.content.res.TypedArray;

        $r1 = virtualinvoke r0.<android.content.res.TypedArray: java.lang.String getString(int)>(i0);

        return $r1;
    }

    private static android.content.pm.parsing.result.ParseResult validateName(android.content.pm.parsing.result.ParseInput, java.lang.String, boolean, boolean)
    {
        boolean z0, z1, $z2, z3, z4, z5, z6;
        int i0, i2;
        char c1;
        android.content.pm.parsing.result.ParseResult $r0, $r6, r10;
        java.lang.StringBuilder $r1;
        java.lang.String $r5, r8;
        android.content.pm.parsing.result.ParseInput r7;

        r7 := @parameter0: android.content.pm.parsing.result.ParseInput;

        r8 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        i0 = virtualinvoke r8.<java.lang.String: int length()>();

        z3 = 0;

        z4 = 1;

        i2 = 0;

     label01:
        if i2 >= i0 goto label09;

        c1 = virtualinvoke r8.<java.lang.String: char charAt(int)>(i2);

        if c1 < 97 goto label02;

        if c1 <= 122 goto label03;

     label02:
        if c1 < 65 goto label04;

        if c1 > 90 goto label04;

     label03:
        z5 = 0;

        z6 = z3;

        goto label07;

     label04:
        if z4 != 0 goto label06;

        if c1 < 48 goto label05;

        z6 = z3;

        z5 = z4;

        if c1 <= 57 goto label07;

     label05:
        if c1 != 95 goto label06;

        z6 = z3;

        z5 = z4;

        goto label07;

     label06:
        if c1 != 46 goto label08;

        z6 = 1;

        z5 = 1;

     label07:
        i2 = i2 + 1;

        z3 = z6;

        z4 = z5;

        goto label01;

     label08:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bad character \'");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c1);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = interfaceinvoke r7.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(java.lang.String)>($r5);

        return $r6;

     label09:
        if z1 == 0 goto label10;

        $z2 = staticinvoke <android.os.FileUtils: boolean isValidExtFilename(java.lang.String)>(r8);

        if $z2 != 0 goto label10;

        $r0 = interfaceinvoke r7.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(java.lang.String)>("Invalid filename");

        return $r0;

     label10:
        if z3 != 0 goto label12;

        if z0 != 0 goto label11;

        goto label12;

     label11:
        r10 = interfaceinvoke r7.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(java.lang.String)>("must have at least one \'.\' separator");

        goto label13;

     label12:
        r10 = interfaceinvoke r7.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult success(java.lang.Object)>(null);

     label13:
        return r10;
    }

    public android.content.pm.parsing.result.ParseResult parsePackage(android.content.pm.parsing.result.ParseInput, java.io.File, int) throws android.content.pm.PackageParser$PackageParserException
    {
        android.content.pm.parsing.ParsingPackageUtils r0;
        android.content.pm.parsing.result.ParseInput r1;
        java.io.File r2;
        int i0;
        boolean $z0;
        android.content.pm.parsing.result.ParseResult $r3, $r4;

        r0 := @this: android.content.pm.parsing.ParsingPackageUtils;

        r1 := @parameter0: android.content.pm.parsing.result.ParseInput;

        r2 := @parameter1: java.io.File;

        i0 := @parameter2: int;

        $z0 = virtualinvoke r2.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label1;

        $r4 = specialinvoke r0.<android.content.pm.parsing.ParsingPackageUtils: android.content.pm.parsing.result.ParseResult parseClusterPackage(android.content.pm.parsing.result.ParseInput,java.io.File,int)>(r1, r2, i0);

        return $r4;

     label1:
        $r3 = specialinvoke r0.<android.content.pm.parsing.ParsingPackageUtils: android.content.pm.parsing.result.ParseResult parseMonolithicPackage(android.content.pm.parsing.result.ParseInput,java.io.File,int)>(r1, r2, i0);

        return $r3;
    }

    public static void <clinit>()
    {
        <android.content.pm.parsing.ParsingPackageUtils: java.lang.String TAG> = "PackageParsing";

        return;
    }
}
