public class android.content.pm.parsing.component.ParsedAttributionUtils extends java.lang.Object
{

    public void <init>()
    {
        android.content.pm.parsing.component.ParsedAttributionUtils r0;

        r0 := @this: android.content.pm.parsing.component.ParsedAttributionUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static android.content.pm.parsing.result.ParseResult parseAttribution(android.content.res.Resources, android.content.res.XmlResourceParser, android.content.pm.parsing.result.ParseInput) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        android.content.res.XmlResourceParser r0;
        android.content.pm.parsing.result.ParseInput r1;
        int i0, i1, i2, $i3, $i4;
        java.lang.String r2, $r10, r20, r21, r22, r26;
        int[] $r3, $r12;
        java.util.ArrayList $r4, r32;
        android.content.pm.parsing.result.ParseResult $r6, $r11, $r13, $r14, r23, r24, r25;
        boolean $z0;
        java.lang.Throwable $r15, $r16;
        android.content.res.Resources r17;
        java.lang.Object r18, r28;
        android.content.res.TypedArray r19, r27;
        java.lang.StringBuilder r33;
        android.content.pm.parsing.component.ParsedAttribution r34;
        java.util.List r35, r36;

        r17 := @parameter0: android.content.res.Resources;

        r0 := @parameter1: android.content.res.XmlResourceParser;

        r1 := @parameter2: android.content.pm.parsing.result.ParseInput;

        r18 = null;

        $r3 = <com.android.internal.R$styleable: int[] AndroidManifestAttribution>;

        r19 = virtualinvoke r17.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r0, $r3);

        if r19 != null goto label01;

        $r14 = interfaceinvoke r1.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(java.lang.String)>("<attribution> could not be parsed");

        return $r14;

     label01:
        r20 = virtualinvoke r19.<android.content.res.TypedArray: java.lang.String getNonConfigurationString(int,int)>(1, 0);

     label02:
        r21 = r20;

        if r20 != null goto label07;

     label03:
        r22 = virtualinvoke r19.<android.content.res.TypedArray: java.lang.String getNonConfigurationString(int,int)>(2, 0);

     label04:
        r21 = r22;

        if r22 != null goto label07;

     label05:
        r23 = interfaceinvoke r1.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(java.lang.String)>("<attribution> does not specify android:tag");

     label06:
        virtualinvoke r19.<android.content.res.TypedArray: void recycle()>();

        return r23;

     label07:
        $i3 = virtualinvoke r21.<java.lang.String: int length()>();

        if $i3 <= 50 goto label09;

        r24 = interfaceinvoke r1.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(java.lang.String)>("android:tag is too long. Max length is 50");

     label08:
        virtualinvoke r19.<android.content.res.TypedArray: void recycle()>();

        return r24;

     label09:
        i0 = virtualinvoke r19.<android.content.res.TypedArray: int getResourceId(int,int)>(0, 0);

     label10:
        if i0 != 0 goto label13;

     label11:
        r25 = interfaceinvoke r1.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(java.lang.String)>("<attribution> does not specify android:label");

     label12:
        virtualinvoke r19.<android.content.res.TypedArray: void recycle()>();

        return r25;

     label13:
        virtualinvoke r19.<android.content.res.TypedArray: void recycle()>();

        i1 = interfaceinvoke r0.<android.content.res.XmlResourceParser: int getDepth()>();

     label14:
        i2 = interfaceinvoke r0.<android.content.res.XmlResourceParser: int next()>();

        if i2 == 1 goto label24;

        if i2 != 3 goto label15;

        $i4 = interfaceinvoke r0.<android.content.res.XmlResourceParser: int getDepth()>();

        if $i4 <= i1 goto label24;

     label15:
        if i2 == 3 goto label14;

        if i2 != 4 goto label16;

        goto label14;

     label16:
        r26 = interfaceinvoke r0.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        $z0 = virtualinvoke r26.<java.lang.String: boolean equals(java.lang.Object)>("inherit-from");

        if $z0 == 0 goto label23;

        $r12 = <com.android.internal.R$styleable: int[] AndroidManifestAttributionInheritFrom>;

        r27 = virtualinvoke r17.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r0, $r12);

        if r27 != null goto label17;

        $r13 = interfaceinvoke r1.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(java.lang.String)>("<inherit-from> could not be parsed");

        return $r13;

     label17:
        r2 = virtualinvoke r27.<android.content.res.TypedArray: java.lang.String getNonConfigurationString(int,int)>(0, 0);

     label18:
        r28 = r18;

        if r18 != null goto label20;

     label19:
        r32 = new java.util.ArrayList;

        r28 = r32;

        specialinvoke r32.<java.util.ArrayList: void <init>()>();

     label20:
        r35 = (java.util.List) r28;

        interfaceinvoke r35.<java.util.List: boolean add(java.lang.Object)>(r2);

     label21:
        virtualinvoke r27.<android.content.res.TypedArray: void recycle()>();

        r18 = r28;

        goto label14;

     label22:
        $r15 := @caughtexception;

        virtualinvoke r27.<android.content.res.TypedArray: void recycle()>();

        throw $r15;

     label23:
        r33 = new java.lang.StringBuilder;

        specialinvoke r33.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad element under <attribution>: ");

        virtualinvoke r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r26);

        $r10 = virtualinvoke r33.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = interfaceinvoke r1.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(java.lang.String)>($r10);

        return $r11;

     label24:
        if r18 != null goto label25;

        r18 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        goto label26;

     label25:
        $r4 = (java.util.ArrayList) r18;

        virtualinvoke $r4.<java.util.ArrayList: void trimToSize()>();

     label26:
        r34 = new android.content.pm.parsing.component.ParsedAttribution;

        r36 = (java.util.List) r18;

        specialinvoke r34.<android.content.pm.parsing.component.ParsedAttribution: void <init>(java.lang.String,int,java.util.List)>(r21, i0, r36);

        $r6 = interfaceinvoke r1.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult success(java.lang.Object)>(r34);

        return $r6;

     label27:
        $r16 := @caughtexception;

        virtualinvoke r19.<android.content.res.TypedArray: void recycle()>();

        throw $r16;

        catch java.lang.Throwable from label01 to label02 with label27;
        catch java.lang.Throwable from label03 to label04 with label27;
        catch java.lang.Throwable from label05 to label06 with label27;
        catch java.lang.Throwable from label07 to label08 with label27;
        catch java.lang.Throwable from label09 to label10 with label27;
        catch java.lang.Throwable from label11 to label12 with label27;
        catch java.lang.Throwable from label17 to label18 with label22;
        catch java.lang.Throwable from label19 to label20 with label22;
        catch java.lang.Throwable from label20 to label21 with label22;
    }
}
