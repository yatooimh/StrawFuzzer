public class android.content.pm.parsing.component.ParsedPermissionUtils extends java.lang.Object
{
    private static final java.lang.String TAG;

    public void <init>()
    {
        android.content.pm.parsing.component.ParsedPermissionUtils r0;

        r0 := @this: android.content.pm.parsing.component.ParsedPermissionUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static android.content.pm.parsing.result.ParseResult parsePermission(android.content.pm.parsing.ParsingPackage, android.content.res.Resources, android.content.res.XmlResourceParser, boolean, android.content.pm.parsing.result.ParseInput) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        android.content.res.XmlResourceParser r0;
        android.content.pm.parsing.result.ParseInput r1;
        java.lang.String r2, r4, $r9, $r17, $r18, $r20, $r22, $r23, $r26, $r27, $r38;
        java.lang.StringBuilder r5, $r7, r40;
        android.content.pm.parsing.component.ParsedPermission $r6;
        int[] $r12;
        java.lang.Integer $r13;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i18, $i19, $i20, $i21;
        android.content.pm.parsing.result.ParseResult $r15, $r16, r35, $r41;
        boolean $z0, $z1, z2, z3, z4, z5;
        java.lang.Throwable $r28, $r29, $r30, r37;
        android.content.pm.parsing.ParsingPackage r31;
        android.content.res.Resources r32;
        android.content.res.TypedArray r34;
        java.lang.IllegalStateException r39;

        r31 := @parameter0: android.content.pm.parsing.ParsingPackage;

        r32 := @parameter1: android.content.res.Resources;

        r0 := @parameter2: android.content.res.XmlResourceParser;

        z2 := @parameter3: boolean;

        r1 := @parameter4: android.content.pm.parsing.result.ParseInput;

        r2 = interfaceinvoke r31.<android.content.pm.parsing.ParsingPackage: java.lang.String getPackageName()>();

        $r6 = new android.content.pm.parsing.component.ParsedPermission;

        specialinvoke $r6.<android.content.pm.parsing.component.ParsedPermission: void <init>()>();

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<");

        $r9 = interfaceinvoke r0.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        r4 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = <com.android.internal.R$styleable: int[] AndroidManifestPermission>;

        r34 = virtualinvoke r32.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r0, $r12);

     label01:
        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        r35 = staticinvoke <android.content.pm.parsing.component.ParsedComponentUtils: android.content.pm.parsing.result.ParseResult parseComponent(android.content.pm.parsing.component.ParsedComponent,java.lang.String,android.content.pm.parsing.ParsingPackage,android.content.res.TypedArray,boolean,android.content.pm.parsing.result.ParseInput,int,java.lang.Integer,int,int,int,int,int)>($r6, r4, r31, r34, z2, r1, 8, $r13, 1, 0, 6, 2, 9);

        z3 = interfaceinvoke r35.<android.content.pm.parsing.result.ParseResult: boolean isError()>();

     label02:
        if z3 == 0 goto label03;

        virtualinvoke r34.<android.content.res.TypedArray: void recycle()>();

        return r35;

     label03:
        z4 = virtualinvoke r34.<android.content.res.TypedArray: boolean hasValue(int)>(10);

     label04:
        if z4 == 0 goto label10;

     label05:
        $r23 = "android";

        $z1 = virtualinvoke $r23.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z1 == 0 goto label07;

        $r27 = virtualinvoke r34.<android.content.res.TypedArray: java.lang.String getNonResourceString(int)>(10);

        $r6.<android.content.pm.parsing.component.ParsedPermission: java.lang.String backgroundPermission> = $r27;

     label06:
        goto label10;

     label07:
        r5 = new java.lang.StringBuilder;

        specialinvoke r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" defines a background permission. Only the \'android\' package can do that.");

        $r26 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageParsing", $r26);

     label08:
        goto label10;

     label09:
        $r29 := @caughtexception;

        r37 = $r29;

        goto label23;

     label10:
        $r38 = virtualinvoke r34.<android.content.res.TypedArray: java.lang.String getNonResourceString(int)>(4);

        virtualinvoke $r6.<android.content.pm.parsing.component.ParsedPermission: android.content.pm.parsing.component.ParsedPermission setGroup(java.lang.String)>($r38);

        $i18 = virtualinvoke r34.<android.content.res.TypedArray: int getResourceId(int,int)>(11, 0);

        $r6.<android.content.pm.parsing.component.ParsedPermission: int requestRes> = $i18;

        $i19 = virtualinvoke r34.<android.content.res.TypedArray: int getInt(int,int)>(3, 0);

        $r6.<android.content.pm.parsing.component.ParsedPermission: int protectionLevel> = $i19;

        $i20 = virtualinvoke r34.<android.content.res.TypedArray: int getInt(int,int)>(7, 0);

        $r6.<android.content.pm.parsing.component.ParsedPermission: int flags> = $i20;

        z5 = virtualinvoke $r6.<android.content.pm.parsing.component.ParsedPermission: boolean isRuntime()>();

     label11:
        if z5 == 0 goto label17;

     label12:
        $r17 = "android";

        $r18 = virtualinvoke $r6.<android.content.pm.parsing.component.ParsedPermission: java.lang.String getPackageName()>();

        $z0 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>($r18);

        if $z0 != 0 goto label14;

     label13:
        goto label17;

     label14:
        $i13 = $r6.<android.content.pm.parsing.component.ParsedPermission: int flags>;

        $i14 = 4 & $i13;

        if $i14 == 0 goto label18;

        $i15 = $r6.<android.content.pm.parsing.component.ParsedPermission: int flags>;

        $i16 = $i15 & 8;

        if $i16 != 0 goto label16;

     label15:
        goto label18;

     label16:
        r39 = new java.lang.IllegalStateException;

        r40 = new java.lang.StringBuilder;

        specialinvoke r40.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission cannot be both soft and hard restricted: ");

        $r20 = virtualinvoke $r6.<android.content.pm.parsing.component.ParsedPermission: java.lang.String getName()>();

        virtualinvoke r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke r40.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r39.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r22);

        throw r39;

     label17:
        $i0 = $r6.<android.content.pm.parsing.component.ParsedPermission: int flags>;

        $i1 = $i0 & -5;

        $r6.<android.content.pm.parsing.component.ParsedPermission: int flags> = $i1;

        $i2 = $r6.<android.content.pm.parsing.component.ParsedPermission: int flags>;

        $i3 = $i2 & -9;

        $r6.<android.content.pm.parsing.component.ParsedPermission: int flags> = $i3;

     label18:
        virtualinvoke r34.<android.content.res.TypedArray: void recycle()>();

        $i21 = $r6.<android.content.pm.parsing.component.ParsedPermission: int protectionLevel>;

        if $i21 != -1 goto label19;

        $r16 = interfaceinvoke r1.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(java.lang.String)>("<permission> does not specify protectionLevel");

        return $r16;

     label19:
        $i4 = $r6.<android.content.pm.parsing.component.ParsedPermission: int protectionLevel>;

        $i5 = staticinvoke <android.content.pm.PermissionInfo: int fixProtectionLevel(int)>($i4);

        $r6.<android.content.pm.parsing.component.ParsedPermission: int protectionLevel> = $i5;

        $i6 = virtualinvoke $r6.<android.content.pm.parsing.component.ParsedPermission: int getProtectionFlags()>();

        if $i6 == 0 goto label20;

        $i7 = $r6.<android.content.pm.parsing.component.ParsedPermission: int protectionLevel>;

        $i8 = $i7 & 4096;

        if $i8 != 0 goto label20;

        $i9 = $r6.<android.content.pm.parsing.component.ParsedPermission: int protectionLevel>;

        $i10 = $i9 & 8192;

        if $i10 != 0 goto label20;

        $i11 = $r6.<android.content.pm.parsing.component.ParsedPermission: int protectionLevel>;

        $i12 = $i11 & 15;

        if $i12 == 2 goto label20;

        $r15 = interfaceinvoke r1.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(java.lang.String)>("<permission>  protectionLevel specifies a non-instant flag but is not based on signature type");

        return $r15;

     label20:
        $r41 = staticinvoke <android.content.pm.parsing.component.ComponentParseUtils: android.content.pm.parsing.result.ParseResult parseAllMetaData(android.content.pm.parsing.ParsingPackage,android.content.res.Resources,android.content.res.XmlResourceParser,java.lang.String,android.content.pm.parsing.component.ParsedComponent,android.content.pm.parsing.result.ParseInput)>(r31, r32, r0, r4, $r6, r1);

        return $r41;

     label21:
        $r28 := @caughtexception;

        r37 = $r28;

        goto label23;

     label22:
        $r30 := @caughtexception;

        r37 = $r30;

        goto label23;

     label23:
        virtualinvoke r34.<android.content.res.TypedArray: void recycle()>();

        throw r37;

        catch java.lang.Throwable from label01 to label02 with label22;
        catch java.lang.Throwable from label03 to label04 with label21;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label21;
        catch java.lang.Throwable from label12 to label13 with label09;
        catch java.lang.Throwable from label14 to label15 with label09;
        catch java.lang.Throwable from label16 to label17 with label09;
        catch java.lang.Throwable from label17 to label18 with label21;
    }

    public static android.content.pm.parsing.result.ParseResult parsePermissionGroup(android.content.pm.parsing.ParsingPackage, android.content.res.Resources, android.content.res.XmlResourceParser, boolean, android.content.pm.parsing.result.ParseInput) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        android.content.res.Resources r0;
        android.content.res.XmlResourceParser r1;
        android.content.pm.parsing.result.ParseInput r2;
        java.lang.String r4, $r8;
        android.content.pm.parsing.component.ParsedPermissionGroup $r5;
        java.lang.StringBuilder $r6;
        int[] $r11;
        java.lang.Integer $r12;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.content.pm.parsing.result.ParseResult $r13, r19;
        java.lang.Throwable $r14, $r15, r21;
        android.content.pm.parsing.ParsingPackage r16;
        boolean z0, z1;
        android.content.res.TypedArray r18;

        r16 := @parameter0: android.content.pm.parsing.ParsingPackage;

        r0 := @parameter1: android.content.res.Resources;

        r1 := @parameter2: android.content.res.XmlResourceParser;

        z0 := @parameter3: boolean;

        r2 := @parameter4: android.content.pm.parsing.result.ParseInput;

        $r5 = new android.content.pm.parsing.component.ParsedPermissionGroup;

        specialinvoke $r5.<android.content.pm.parsing.component.ParsedPermissionGroup: void <init>()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<");

        $r8 = interfaceinvoke r1.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        r4 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = <com.android.internal.R$styleable: int[] AndroidManifestPermissionGroup>;

        r18 = virtualinvoke r0.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r1, $r11);

     label1:
        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        r19 = staticinvoke <android.content.pm.parsing.component.ParsedComponentUtils: android.content.pm.parsing.result.ParseResult parseComponent(android.content.pm.parsing.component.ParsedComponent,java.lang.String,android.content.pm.parsing.ParsingPackage,android.content.res.TypedArray,boolean,android.content.pm.parsing.result.ParseInput,int,java.lang.Integer,int,int,int,int,int)>($r5, r4, r16, r18, z0, r2, 7, $r12, 1, 0, 5, 2, 8);

        z1 = interfaceinvoke r19.<android.content.pm.parsing.result.ParseResult: boolean isError()>();

     label2:
        if z1 == 0 goto label3;

        virtualinvoke r18.<android.content.res.TypedArray: void recycle()>();

        return r19;

     label3:
        $i0 = virtualinvoke r18.<android.content.res.TypedArray: int getResourceId(int,int)>(12, 0);

        $r5.<android.content.pm.parsing.component.ParsedPermissionGroup: int requestDetailResourceId> = $i0;

        $i1 = virtualinvoke r18.<android.content.res.TypedArray: int getResourceId(int,int)>(9, 0);

        $r5.<android.content.pm.parsing.component.ParsedPermissionGroup: int backgroundRequestResourceId> = $i1;

        $i2 = virtualinvoke r18.<android.content.res.TypedArray: int getResourceId(int,int)>(10, 0);

        $r5.<android.content.pm.parsing.component.ParsedPermissionGroup: int backgroundRequestDetailResourceId> = $i2;

        $i3 = virtualinvoke r18.<android.content.res.TypedArray: int getResourceId(int,int)>(11, 0);

        $r5.<android.content.pm.parsing.component.ParsedPermissionGroup: int requestRes> = $i3;

        $i4 = virtualinvoke r18.<android.content.res.TypedArray: int getInt(int,int)>(6, 0);

        $r5.<android.content.pm.parsing.component.ParsedPermissionGroup: int flags> = $i4;

        $i5 = virtualinvoke r18.<android.content.res.TypedArray: int getInt(int,int)>(3, 0);

        $r5.<android.content.pm.parsing.component.ParsedPermissionGroup: int priority> = $i5;

     label4:
        virtualinvoke r18.<android.content.res.TypedArray: void recycle()>();

        $r13 = staticinvoke <android.content.pm.parsing.component.ComponentParseUtils: android.content.pm.parsing.result.ParseResult parseAllMetaData(android.content.pm.parsing.ParsingPackage,android.content.res.Resources,android.content.res.XmlResourceParser,java.lang.String,android.content.pm.parsing.component.ParsedComponent,android.content.pm.parsing.result.ParseInput)>(r16, r0, r1, r4, $r5, r2);

        return $r13;

     label5:
        $r15 := @caughtexception;

        r21 = $r15;

        goto label7;

     label6:
        $r14 := @caughtexception;

        r21 = $r14;

        goto label7;

     label7:
        virtualinvoke r18.<android.content.res.TypedArray: void recycle()>();

        throw r21;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public static android.content.pm.parsing.result.ParseResult parsePermissionTree(android.content.pm.parsing.ParsingPackage, android.content.res.Resources, android.content.res.XmlResourceParser, boolean, android.content.pm.parsing.result.ParseInput) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        android.content.res.Resources r0;
        android.content.res.XmlResourceParser r1;
        android.content.pm.parsing.result.ParseInput r2;
        java.lang.String r4, $r9, $r13, $r17, $r19, $r21;
        android.content.pm.parsing.result.ParseResult r5, $r14, $r20;
        android.content.pm.parsing.component.ParsedPermission $r6;
        java.lang.StringBuilder $r7, $r15;
        int[] $r12;
        int $i0, i1;
        java.lang.Throwable $r22;
        android.content.pm.parsing.ParsingPackage r23;
        boolean z0, z1;
        android.content.res.TypedArray r25;

        r23 := @parameter0: android.content.pm.parsing.ParsingPackage;

        r0 := @parameter1: android.content.res.Resources;

        r1 := @parameter2: android.content.res.XmlResourceParser;

        z0 := @parameter3: boolean;

        r2 := @parameter4: android.content.pm.parsing.result.ParseInput;

        $r6 = new android.content.pm.parsing.component.ParsedPermission;

        specialinvoke $r6.<android.content.pm.parsing.component.ParsedPermission: void <init>()>();

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<");

        $r9 = interfaceinvoke r1.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        r4 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = <com.android.internal.R$styleable: int[] AndroidManifestPermissionTree>;

        r25 = virtualinvoke r0.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r1, $r12);

     label1:
        r5 = staticinvoke <android.content.pm.parsing.component.ParsedComponentUtils: android.content.pm.parsing.result.ParseResult parseComponent(android.content.pm.parsing.component.ParsedComponent,java.lang.String,android.content.pm.parsing.ParsingPackage,android.content.res.TypedArray,boolean,android.content.pm.parsing.result.ParseInput,int,java.lang.Integer,int,int,int,int,int)>($r6, r4, r23, r25, z0, r2, 4, null, 1, 0, 3, 2, 5);

        z1 = interfaceinvoke r5.<android.content.pm.parsing.result.ParseResult: boolean isError()>();

     label2:
        if z1 == 0 goto label3;

        virtualinvoke r25.<android.content.res.TypedArray: void recycle()>();

        return r5;

     label3:
        virtualinvoke r25.<android.content.res.TypedArray: void recycle()>();

        $r13 = virtualinvoke $r6.<android.content.pm.parsing.component.ParsedPermission: java.lang.String getName()>();

        i1 = virtualinvoke $r13.<java.lang.String: int indexOf(int)>(46);

        if i1 <= 0 goto label4;

        $r21 = virtualinvoke $r6.<android.content.pm.parsing.component.ParsedPermission: java.lang.String getName()>();

        $i0 = i1 + 1;

        i1 = virtualinvoke $r21.<java.lang.String: int indexOf(int,int)>(46, $i0);

        goto label4;

     label4:
        if i1 >= 0 goto label5;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<permission-tree> name has less than three segments: ");

        $r17 = virtualinvoke $r6.<android.content.pm.parsing.component.ParsedPermission: java.lang.String getName()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        $r20 = interfaceinvoke r2.<android.content.pm.parsing.result.ParseInput: android.content.pm.parsing.result.ParseResult error(java.lang.String)>($r19);

        return $r20;

     label5:
        $r6.<android.content.pm.parsing.component.ParsedPermission: int protectionLevel> = 0;

        $r6.<android.content.pm.parsing.component.ParsedPermission: boolean tree> = 1;

        $r14 = staticinvoke <android.content.pm.parsing.component.ComponentParseUtils: android.content.pm.parsing.result.ParseResult parseAllMetaData(android.content.pm.parsing.ParsingPackage,android.content.res.Resources,android.content.res.XmlResourceParser,java.lang.String,android.content.pm.parsing.component.ParsedComponent,android.content.pm.parsing.result.ParseInput)>(r23, r0, r1, r4, $r6, r2);

        return $r14;

     label6:
        $r22 := @caughtexception;

        virtualinvoke r25.<android.content.res.TypedArray: void recycle()>();

        throw $r22;

        catch java.lang.Throwable from label1 to label2 with label6;
    }

    public static void <clinit>()
    {
        <android.content.pm.parsing.component.ParsedPermissionUtils: java.lang.String TAG> = "PackageParsing";

        return;
    }
}
