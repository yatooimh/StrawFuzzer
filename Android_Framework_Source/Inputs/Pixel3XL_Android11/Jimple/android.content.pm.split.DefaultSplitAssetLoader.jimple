public class android.content.pm.split.DefaultSplitAssetLoader extends java.lang.Object implements android.content.pm.split.SplitAssetLoader
{
    private final java.lang.String mBaseCodePath;
    private android.content.res.AssetManager mCachedAssetManager;
    private final int mFlags;
    private final java.lang.String[] mSplitCodePaths;

    public void <init>(android.content.pm.PackageParser$PackageLite, int)
    {
        android.content.pm.split.DefaultSplitAssetLoader r0;
        android.content.pm.PackageParser$PackageLite r1;
        int i0;
        java.lang.String $r2;
        java.lang.String[] $r3;

        r0 := @this: android.content.pm.split.DefaultSplitAssetLoader;

        r1 := @parameter0: android.content.pm.PackageParser$PackageLite;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = r1.<android.content.pm.PackageParser$PackageLite: java.lang.String baseCodePath>;

        r0.<android.content.pm.split.DefaultSplitAssetLoader: java.lang.String mBaseCodePath> = $r2;

        $r3 = r1.<android.content.pm.PackageParser$PackageLite: java.lang.String[] splitCodePaths>;

        r0.<android.content.pm.split.DefaultSplitAssetLoader: java.lang.String[] mSplitCodePaths> = $r3;

        r0.<android.content.pm.split.DefaultSplitAssetLoader: int mFlags> = i0;

        return;
    }

    private static android.content.res.ApkAssets loadApkAssets(java.lang.String, int) throws android.content.pm.PackageParser$PackageParserException
    {
        java.lang.String r0, $r6, $r12;
        int i0, $i1;
        boolean $z0;
        java.lang.StringBuilder $r2, $r8;
        android.content.pm.PackageParser$PackageParserException $r5, $r11;
        java.lang.Throwable $r7;
        android.content.res.ApkAssets r14;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $i1 = i0 & 1;

        if $i1 == 0 goto label2;

        $z0 = staticinvoke <android.content.pm.PackageParser: boolean isApkPath(java.lang.String)>(r0);

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid package file: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r5 = new android.content.pm.PackageParser$PackageParserException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<android.content.pm.PackageParser$PackageParserException: void <init>(int,java.lang.String)>(-100, $r6);

        throw $r5;

     label2:
        r14 = staticinvoke <android.content.res.ApkAssets: android.content.res.ApkAssets loadFromPath(java.lang.String)>(r0);

     label3:
        return r14;

     label4:
        $r7 := @caughtexception;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to load APK at path ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r11 = new android.content.pm.PackageParser$PackageParserException;

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<android.content.pm.PackageParser$PackageParserException: void <init>(int,java.lang.String,java.lang.Throwable)>(-2, $r12, $r7);

        throw $r11;

        catch java.io.IOException from label2 to label3 with label4;
    }

    public void close() throws java.lang.Exception
    {
        android.content.pm.split.DefaultSplitAssetLoader r0;
        android.content.res.AssetManager $r1;

        r0 := @this: android.content.pm.split.DefaultSplitAssetLoader;

        $r1 = r0.<android.content.pm.split.DefaultSplitAssetLoader: android.content.res.AssetManager mCachedAssetManager>;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>($r1);

        return;
    }

    public android.content.res.AssetManager getBaseAssetManager() throws android.content.pm.PackageParser$PackageParserException
    {
        android.content.pm.split.DefaultSplitAssetLoader r0;
        int i0, $i1, $i2, $i3, $i4, i5, i6, i7;
        java.lang.String $r1, $r5;
        android.content.res.ApkAssets $r2, $r6;
        java.lang.String[] $r3, r8, r10;
        boolean $z0;
        android.content.res.AssetManager $r4, r7;
        android.content.res.ApkAssets[] r9;

        r0 := @this: android.content.pm.split.DefaultSplitAssetLoader;

        r7 = r0.<android.content.pm.split.DefaultSplitAssetLoader: android.content.res.AssetManager mCachedAssetManager>;

        if r7 == null goto label1;

        return r7;

     label1:
        r8 = r0.<android.content.pm.split.DefaultSplitAssetLoader: java.lang.String[] mSplitCodePaths>;

        if r8 == null goto label2;

        i5 = lengthof r8;

        goto label3;

     label2:
        i5 = 0;

     label3:
        $i1 = i5 + 1;

        r9 = newarray (android.content.res.ApkAssets)[$i1];

        i6 = 0 + 1;

        $r1 = r0.<android.content.pm.split.DefaultSplitAssetLoader: java.lang.String mBaseCodePath>;

        $i2 = r0.<android.content.pm.split.DefaultSplitAssetLoader: int mFlags>;

        $r2 = staticinvoke <android.content.pm.split.DefaultSplitAssetLoader: android.content.res.ApkAssets loadApkAssets(java.lang.String,int)>($r1, $i2);

        r9[0] = $r2;

        $r3 = r0.<android.content.pm.split.DefaultSplitAssetLoader: java.lang.String[] mSplitCodePaths>;

        $z0 = staticinvoke <com.android.internal.util.ArrayUtils: boolean isEmpty(java.lang.Object[])>($r3);

        if $z0 != 0 goto label5;

        r10 = r0.<android.content.pm.split.DefaultSplitAssetLoader: java.lang.String[] mSplitCodePaths>;

        i0 = lengthof r10;

        i7 = 0;

     label4:
        if i7 >= i0 goto label5;

        $r5 = r10[i7];

        $i4 = r0.<android.content.pm.split.DefaultSplitAssetLoader: int mFlags>;

        $r6 = staticinvoke <android.content.pm.split.DefaultSplitAssetLoader: android.content.res.ApkAssets loadApkAssets(java.lang.String,int)>($r5, $i4);

        r9[i6] = $r6;

        i7 = i7 + 1;

        i6 = i6 + 1;

        goto label4;

     label5:
        $r4 = new android.content.res.AssetManager;

        specialinvoke $r4.<android.content.res.AssetManager: void <init>()>();

        $i3 = <android.os.Build$VERSION: int RESOURCES_SDK_INT>;

        virtualinvoke $r4.<android.content.res.AssetManager: void setConfiguration(int,int,java.lang.String,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)>(0, 0, null, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, $i3);

        virtualinvoke $r4.<android.content.res.AssetManager: void setApkAssets(android.content.res.ApkAssets[],boolean)>(r9, 0);

        r0.<android.content.pm.split.DefaultSplitAssetLoader: android.content.res.AssetManager mCachedAssetManager> = $r4;

        return $r4;
    }

    public android.content.res.AssetManager getSplitAssetManager(int) throws android.content.pm.PackageParser$PackageParserException
    {
        android.content.pm.split.DefaultSplitAssetLoader r0;
        int i0;
        android.content.res.AssetManager $r1;

        r0 := @this: android.content.pm.split.DefaultSplitAssetLoader;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.content.pm.split.DefaultSplitAssetLoader: android.content.res.AssetManager getBaseAssetManager()>();

        return $r1;
    }
}
