public abstract class android.content.pm.split.SplitDependencyLoader extends java.lang.Object
{
    private final android.util.SparseArray mDependencies;

    protected void <init>(android.util.SparseArray)
    {
        android.content.pm.split.SplitDependencyLoader r0;
        android.util.SparseArray r1;

        r0 := @this: android.content.pm.split.SplitDependencyLoader;

        r1 := @parameter0: android.util.SparseArray;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.content.pm.split.SplitDependencyLoader: android.util.SparseArray mDependencies> = r1;

        return;
    }

    private static int[] append(int[], int)
    {
        int[] r0, r1, $r2;
        int i0, $i1, $i2, $i3;

        r0 := @parameter0: int[];

        i0 := @parameter1: int;

        if r0 != null goto label1;

        $r2 = newarray (int)[1];

        $r2[0] = i0;

        return $r2;

     label1:
        $i1 = lengthof r0;

        $i2 = $i1 + 1;

        r1 = staticinvoke <java.util.Arrays: int[] copyOf(int[],int)>(r0, $i2);

        $i3 = lengthof r0;

        r1[$i3] = i0;

        return r1;
    }

    private int[] collectConfigSplitIndices(int)
    {
        android.content.pm.split.SplitDependencyLoader r0;
        int i0, $i1, $i2;
        int[] r1, $r4, $r5;
        android.util.SparseArray $r2;
        java.lang.Object $r3;

        r0 := @this: android.content.pm.split.SplitDependencyLoader;

        i0 := @parameter0: int;

        $r2 = r0.<android.content.pm.split.SplitDependencyLoader: android.util.SparseArray mDependencies>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (int[]) $r3;

        if r1 == null goto label2;

        $i1 = lengthof r1;

        if $i1 > 1 goto label1;

        goto label2;

     label1:
        $i2 = lengthof r1;

        $r5 = staticinvoke <java.util.Arrays: int[] copyOfRange(int[],int,int)>(r1, 1, $i2);

        return $r5;

     label2:
        $r4 = <libcore.util.EmptyArray: int[] INT>;

        return $r4;
    }

    public static android.util.SparseArray createDependenciesFromPackage(android.content.pm.PackageParser$PackageLite) throws android.content.pm.split.SplitDependencyLoader$IllegalDependencyException
    {
        int i0, $i1, $i2, $i3, $i4, i5, i6, i7, i8, i9, i10, i11, i12;
        android.util.SparseArray $r0;
        int[] $r1, $r10, $r11, $r38, r58;
        java.lang.String[] $r2, $r3, $r8, $r12, $r15, $r26, $r30, $r37, $r39, $r42;
        java.util.BitSet $r4;
        boolean $z0, $z1, $z2, $z3;
        android.content.pm.split.SplitDependencyLoader$IllegalDependencyException $r5, $r21, $r34, $r48;
        java.lang.Object $r6, $r9;
        boolean[] $r7, $r23, $r36;
        java.lang.StringBuilder $r13, $r24, $r40;
        java.lang.String $r16, $r22, $r27, $r31, $r35, $r43, $r49, r52, r54;
        android.content.pm.PackageParser$PackageLite r50;

        r50 := @parameter0: android.content.pm.PackageParser$PackageLite;

        $r0 = new android.util.SparseArray;

        specialinvoke $r0.<android.util.SparseArray: void <init>()>();

        $r1 = newarray (int)[1];

        $r1[0] = -1;

        virtualinvoke $r0.<android.util.SparseArray: void put(int,java.lang.Object)>(0, $r1);

        i5 = 0;

     label01:
        $r2 = r50.<android.content.pm.PackageParser$PackageLite: java.lang.String[] splitNames>;

        $i1 = lengthof $r2;

        if i5 >= $i1 goto label07;

        $r36 = r50.<android.content.pm.PackageParser$PackageLite: boolean[] isFeatureSplits>;

        $z3 = $r36[i5];

        if $z3 != 0 goto label02;

        goto label06;

     label02:
        $r37 = r50.<android.content.pm.PackageParser$PackageLite: java.lang.String[] usesSplitNames>;

        r52 = $r37[i5];

        if r52 == null goto label04;

        $r39 = r50.<android.content.pm.PackageParser$PackageLite: java.lang.String[] splitNames>;

        i6 = staticinvoke <java.util.Arrays: int binarySearch(java.lang.Object[],java.lang.Object)>($r39, r52);

        if i6 < 0 goto label03;

        i7 = i6 + 1;

        goto label05;

     label03:
        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Split \'");

        $r42 = r50.<android.content.pm.PackageParser$PackageLite: java.lang.String[] splitNames>;

        $r43 = $r42[i5];

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' requires split \'");

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r52);

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', which is missing.");

        $r48 = new android.content.pm.split.SplitDependencyLoader$IllegalDependencyException;

        $r49 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r48.<android.content.pm.split.SplitDependencyLoader$IllegalDependencyException: void <init>(java.lang.String,android.content.pm.split.SplitDependencyLoader$1)>($r49, null);

        throw $r48;

     label04:
        i7 = 0;

     label05:
        $i4 = i5 + 1;

        $r38 = newarray (int)[1];

        $r38[0] = i7;

        virtualinvoke $r0.<android.util.SparseArray: void put(int,java.lang.Object)>($i4, $r38);

     label06:
        i5 = i5 + 1;

        goto label01;

     label07:
        i8 = 0;

     label08:
        $r3 = r50.<android.content.pm.PackageParser$PackageLite: java.lang.String[] splitNames>;

        $i2 = lengthof $r3;

        if i8 >= $i2 goto label15;

        $r7 = r50.<android.content.pm.PackageParser$PackageLite: boolean[] isFeatureSplits>;

        $z1 = $r7[i8];

        if $z1 == 0 goto label09;

        goto label14;

     label09:
        $r8 = r50.<android.content.pm.PackageParser$PackageLite: java.lang.String[] configForSplit>;

        r54 = $r8[i8];

        if r54 == null goto label12;

        $r12 = r50.<android.content.pm.PackageParser$PackageLite: java.lang.String[] splitNames>;

        i9 = staticinvoke <java.util.Arrays: int binarySearch(java.lang.Object[],java.lang.Object)>($r12, r54);

        if i9 < 0 goto label11;

        $r23 = r50.<android.content.pm.PackageParser$PackageLite: boolean[] isFeatureSplits>;

        $z2 = $r23[i9];

        if $z2 == 0 goto label10;

        i10 = i9 + 1;

        goto label13;

     label10:
        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Split \'");

        $r26 = r50.<android.content.pm.PackageParser$PackageLite: java.lang.String[] splitNames>;

        $r27 = $r26[i8];

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' declares itself as configuration split for a non-feature split \'");

        $r30 = r50.<android.content.pm.PackageParser$PackageLite: java.lang.String[] splitNames>;

        $r31 = $r30[i9];

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r34 = new android.content.pm.split.SplitDependencyLoader$IllegalDependencyException;

        $r35 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r34.<android.content.pm.split.SplitDependencyLoader$IllegalDependencyException: void <init>(java.lang.String,android.content.pm.split.SplitDependencyLoader$1)>($r35, null);

        throw $r34;

     label11:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Split \'");

        $r15 = r50.<android.content.pm.PackageParser$PackageLite: java.lang.String[] splitNames>;

        $r16 = $r15[i8];

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' targets split \'");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r54);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', which is missing.");

        $r21 = new android.content.pm.split.SplitDependencyLoader$IllegalDependencyException;

        $r22 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r21.<android.content.pm.split.SplitDependencyLoader$IllegalDependencyException: void <init>(java.lang.String,android.content.pm.split.SplitDependencyLoader$1)>($r22, null);

        throw $r21;

     label12:
        i10 = 0;

     label13:
        $r9 = virtualinvoke $r0.<android.util.SparseArray: java.lang.Object get(int)>(i10);

        $r10 = (int[]) $r9;

        $i3 = i8 + 1;

        $r11 = staticinvoke <android.content.pm.split.SplitDependencyLoader: int[] append(int[],int)>($r10, $i3);

        virtualinvoke $r0.<android.util.SparseArray: void put(int,java.lang.Object)>(i10, $r11);

     label14:
        i8 = i8 + 1;

        goto label08;

     label15:
        $r4 = new java.util.BitSet;

        specialinvoke $r4.<java.util.BitSet: void <init>()>();

        i11 = 0;

        i0 = virtualinvoke $r0.<android.util.SparseArray: int size()>();

     label16:
        if i11 >= i0 goto label22;

        i12 = virtualinvoke $r0.<android.util.SparseArray: int keyAt(int)>(i11);

        virtualinvoke $r4.<java.util.BitSet: void clear()>();

     label17:
        if i12 == -1 goto label21;

        $z0 = virtualinvoke $r4.<java.util.BitSet: boolean get(int)>(i12);

        if $z0 != 0 goto label20;

        virtualinvoke $r4.<java.util.BitSet: void set(int)>(i12);

        $r6 = virtualinvoke $r0.<android.util.SparseArray: java.lang.Object get(int)>(i12);

        r58 = (int[]) $r6;

        if r58 == null goto label18;

        i12 = r58[0];

        goto label19;

     label18:
        i12 = -1;

     label19:
        goto label17;

     label20:
        $r5 = new android.content.pm.split.SplitDependencyLoader$IllegalDependencyException;

        specialinvoke $r5.<android.content.pm.split.SplitDependencyLoader$IllegalDependencyException: void <init>(java.lang.String,android.content.pm.split.SplitDependencyLoader$1)>("Cycle detected in split dependencies.", null);

        throw $r5;

     label21:
        i11 = i11 + 1;

        goto label16;

     label22:
        return $r0;
    }

    protected abstract void constructSplit(int, int[], int) throws java.lang.Exception;

    protected abstract boolean isSplitCached(int);

    protected void loadDependenciesForSplit(int) throws java.lang.Exception
    {
        android.content.pm.split.SplitDependencyLoader r0;
        int[] r2, $r6, $r7;
        int i0, $i1, $i2, i3, i4, i5;
        boolean $z0, $z1;
        android.util.IntArray $r3;
        android.util.SparseArray $r4;
        java.lang.Object $r5;

        r0 := @this: android.content.pm.split.SplitDependencyLoader;

        i3 := @parameter0: int;

        $z0 = virtualinvoke r0.<android.content.pm.split.SplitDependencyLoader: boolean isSplitCached(int)>(i3);

        if $z0 == 0 goto label1;

        return;

     label1:
        if i3 != 0 goto label2;

        $r7 = specialinvoke r0.<android.content.pm.split.SplitDependencyLoader: int[] collectConfigSplitIndices(int)>(0);

        virtualinvoke r0.<android.content.pm.split.SplitDependencyLoader: void constructSplit(int,int[],int)>(0, $r7, -1);

        return;

     label2:
        $r3 = new android.util.IntArray;

        specialinvoke $r3.<android.util.IntArray: void <init>()>();

        virtualinvoke $r3.<android.util.IntArray: void add(int)>(i3);

     label3:
        $r4 = r0.<android.content.pm.split.SplitDependencyLoader: android.util.SparseArray mDependencies>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object get(int)>(i3);

        r2 = (int[]) $r5;

        if r2 == null goto label4;

        $i2 = lengthof r2;

        if $i2 <= 0 goto label4;

        i3 = r2[0];

        goto label5;

     label4:
        i3 = -1;

     label5:
        if i3 < 0 goto label7;

        $z1 = virtualinvoke r0.<android.content.pm.split.SplitDependencyLoader: boolean isSplitCached(int)>(i3);

        if $z1 == 0 goto label6;

        goto label7;

     label6:
        virtualinvoke $r3.<android.util.IntArray: void add(int)>(i3);

        goto label3;

     label7:
        i4 = i3;

        $i1 = virtualinvoke $r3.<android.util.IntArray: int size()>();

        i5 = $i1 - 1;

     label8:
        if i5 < 0 goto label9;

        i0 = virtualinvoke $r3.<android.util.IntArray: int get(int)>(i5);

        $r6 = specialinvoke r0.<android.content.pm.split.SplitDependencyLoader: int[] collectConfigSplitIndices(int)>(i0);

        virtualinvoke r0.<android.content.pm.split.SplitDependencyLoader: void constructSplit(int,int[],int)>(i0, $r6, i4);

        i4 = i0;

        i5 = i5 + -1;

        goto label8;

     label9:
        return;
    }
}
