public final class android.content.res.ApkAssets extends java.lang.Object
{
    private static final int FORMAT_APK;
    private static final int FORMAT_ARSC;
    private static final int FORMAT_DIR;
    private static final int FORMAT_IDMAP;
    public static final int PROPERTY_DYNAMIC;
    public static final int PROPERTY_LOADER;
    private static final int PROPERTY_OVERLAY;
    public static final int PROPERTY_SYSTEM;
    private final android.content.res.loader.AssetsProvider mAssets;
    private final int mFlags;
    private final long mNativePtr;
    private boolean mOpen;
    private final android.content.res.StringBlock mStringBlock;

    private void <init>(int, android.content.res.loader.AssetsProvider)
    {
        android.content.res.ApkAssets r0;
        int i0;
        android.content.res.loader.AssetsProvider r1;
        long $l1;

        r0 := @this: android.content.res.ApkAssets;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.res.loader.AssetsProvider;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.content.res.ApkAssets: boolean mOpen> = 1;

        r0.<android.content.res.ApkAssets: int mFlags> = i0;

        $l1 = staticinvoke <android.content.res.ApkAssets: long nativeLoadEmpty(int,android.content.res.loader.AssetsProvider)>(i0, r1);

        r0.<android.content.res.ApkAssets: long mNativePtr> = $l1;

        r0.<android.content.res.ApkAssets: android.content.res.StringBlock mStringBlock> = null;

        r0.<android.content.res.ApkAssets: android.content.res.loader.AssetsProvider mAssets> = r1;

        return;
    }

    private void <init>(int, java.io.FileDescriptor, java.lang.String, int, android.content.res.loader.AssetsProvider) throws java.io.IOException
    {
        android.content.res.ApkAssets r0;
        int i0, i1;
        java.io.FileDescriptor r1;
        java.lang.String r2;
        android.content.res.loader.AssetsProvider r3;
        long l2, $l3;
        android.content.res.StringBlock $r6;

        r0 := @this: android.content.res.ApkAssets;

        i0 := @parameter0: int;

        r1 := @parameter1: java.io.FileDescriptor;

        r2 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

        r3 := @parameter4: android.content.res.loader.AssetsProvider;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.content.res.ApkAssets: boolean mOpen> = 1;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, "fd");

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r2, "friendlyName");

        r0.<android.content.res.ApkAssets: int mFlags> = i1;

        l2 = staticinvoke <android.content.res.ApkAssets: long nativeLoadFd(int,java.io.FileDescriptor,java.lang.String,int,android.content.res.loader.AssetsProvider)>(i0, r1, r2, i1, r3);

        r0.<android.content.res.ApkAssets: long mNativePtr> = l2;

        $r6 = new android.content.res.StringBlock;

        $l3 = staticinvoke <android.content.res.ApkAssets: long nativeGetStringBlock(long)>(l2);

        specialinvoke $r6.<android.content.res.StringBlock: void <init>(long,boolean)>($l3, 1);

        r0.<android.content.res.ApkAssets: android.content.res.StringBlock mStringBlock> = $r6;

        r0.<android.content.res.ApkAssets: android.content.res.loader.AssetsProvider mAssets> = r3;

        return;
    }

    private void <init>(int, java.io.FileDescriptor, java.lang.String, long, long, int, android.content.res.loader.AssetsProvider) throws java.io.IOException
    {
        android.content.res.ApkAssets r0;
        int i0, i2;
        java.io.FileDescriptor r1;
        java.lang.String r2;
        long l1, $l3, l4, l5;
        android.content.res.loader.AssetsProvider r3;
        android.content.res.StringBlock $r6;

        r0 := @this: android.content.res.ApkAssets;

        i0 := @parameter0: int;

        r1 := @parameter1: java.io.FileDescriptor;

        r2 := @parameter2: java.lang.String;

        l4 := @parameter3: long;

        l1 := @parameter4: long;

        i2 := @parameter5: int;

        r3 := @parameter6: android.content.res.loader.AssetsProvider;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.content.res.ApkAssets: boolean mOpen> = 1;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, "fd");

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r2, "friendlyName");

        r0.<android.content.res.ApkAssets: int mFlags> = i2;

        l5 = staticinvoke <android.content.res.ApkAssets: long nativeLoadFdOffsets(int,java.io.FileDescriptor,java.lang.String,long,long,int,android.content.res.loader.AssetsProvider)>(i0, r1, r2, l4, l1, i2, r3);

        r0.<android.content.res.ApkAssets: long mNativePtr> = l5;

        $r6 = new android.content.res.StringBlock;

        $l3 = staticinvoke <android.content.res.ApkAssets: long nativeGetStringBlock(long)>(l5);

        specialinvoke $r6.<android.content.res.StringBlock: void <init>(long,boolean)>($l3, 1);

        r0.<android.content.res.ApkAssets: android.content.res.StringBlock mStringBlock> = $r6;

        r0.<android.content.res.ApkAssets: android.content.res.loader.AssetsProvider mAssets> = r3;

        return;
    }

    private void <init>(int, java.lang.String, int, android.content.res.loader.AssetsProvider) throws java.io.IOException
    {
        android.content.res.ApkAssets r0;
        int i0, i1;
        java.lang.String r1;
        android.content.res.loader.AssetsProvider r2;
        long l2, $l3;
        android.content.res.StringBlock $r4;

        r0 := @this: android.content.res.ApkAssets;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        r2 := @parameter3: android.content.res.loader.AssetsProvider;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.content.res.ApkAssets: boolean mOpen> = 1;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, "path");

        r0.<android.content.res.ApkAssets: int mFlags> = i1;

        l2 = staticinvoke <android.content.res.ApkAssets: long nativeLoad(int,java.lang.String,int,android.content.res.loader.AssetsProvider)>(i0, r1, i1, r2);

        r0.<android.content.res.ApkAssets: long mNativePtr> = l2;

        $r4 = new android.content.res.StringBlock;

        $l3 = staticinvoke <android.content.res.ApkAssets: long nativeGetStringBlock(long)>(l2);

        specialinvoke $r4.<android.content.res.StringBlock: void <init>(long,boolean)>($l3, 1);

        r0.<android.content.res.ApkAssets: android.content.res.StringBlock mStringBlock> = $r4;

        r0.<android.content.res.ApkAssets: android.content.res.loader.AssetsProvider mAssets> = r2;

        return;
    }

    public static android.content.res.ApkAssets loadEmptyForLoader(int, android.content.res.loader.AssetsProvider)
    {
        int i0;
        android.content.res.loader.AssetsProvider r0;
        android.content.res.ApkAssets $r1;

        i0 := @parameter0: int;

        r0 := @parameter1: android.content.res.loader.AssetsProvider;

        $r1 = new android.content.res.ApkAssets;

        specialinvoke $r1.<android.content.res.ApkAssets: void <init>(int,android.content.res.loader.AssetsProvider)>(i0, r0);

        return $r1;
    }

    public static android.content.res.ApkAssets loadFromDir(java.lang.String, int, android.content.res.loader.AssetsProvider) throws java.io.IOException
    {
        java.lang.String r0;
        int i0;
        android.content.res.loader.AssetsProvider r1;
        android.content.res.ApkAssets $r2;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 := @parameter2: android.content.res.loader.AssetsProvider;

        $r2 = new android.content.res.ApkAssets;

        specialinvoke $r2.<android.content.res.ApkAssets: void <init>(int,java.lang.String,int,android.content.res.loader.AssetsProvider)>(3, r0, i0, r1);

        return $r2;
    }

    public static android.content.res.ApkAssets loadFromFd(java.io.FileDescriptor, java.lang.String, int, android.content.res.loader.AssetsProvider) throws java.io.IOException
    {
        java.io.FileDescriptor r0;
        java.lang.String r1;
        int i0;
        android.content.res.loader.AssetsProvider r2;
        android.content.res.ApkAssets $r3;

        r0 := @parameter0: java.io.FileDescriptor;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r2 := @parameter3: android.content.res.loader.AssetsProvider;

        $r3 = new android.content.res.ApkAssets;

        specialinvoke $r3.<android.content.res.ApkAssets: void <init>(int,java.io.FileDescriptor,java.lang.String,int,android.content.res.loader.AssetsProvider)>(0, r0, r1, i0, r2);

        return $r3;
    }

    public static android.content.res.ApkAssets loadFromFd(java.io.FileDescriptor, java.lang.String, long, long, int, android.content.res.loader.AssetsProvider) throws java.io.IOException
    {
        java.io.FileDescriptor r0;
        java.lang.String r1;
        long l0, l1;
        int i2;
        android.content.res.loader.AssetsProvider r2;
        android.content.res.ApkAssets $r3;

        r0 := @parameter0: java.io.FileDescriptor;

        r1 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        l1 := @parameter3: long;

        i2 := @parameter4: int;

        r2 := @parameter5: android.content.res.loader.AssetsProvider;

        $r3 = new android.content.res.ApkAssets;

        specialinvoke $r3.<android.content.res.ApkAssets: void <init>(int,java.io.FileDescriptor,java.lang.String,long,long,int,android.content.res.loader.AssetsProvider)>(0, r0, r1, l0, l1, i2, r2);

        return $r3;
    }

    public static android.content.res.ApkAssets loadFromPath(java.lang.String) throws java.io.IOException
    {
        java.lang.String r0;
        android.content.res.ApkAssets $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <android.content.res.ApkAssets: android.content.res.ApkAssets loadFromPath(java.lang.String,int)>(r0, 0);

        return $r1;
    }

    public static android.content.res.ApkAssets loadFromPath(java.lang.String, int) throws java.io.IOException
    {
        java.lang.String r0;
        int i0;
        android.content.res.ApkAssets $r1;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r1 = new android.content.res.ApkAssets;

        specialinvoke $r1.<android.content.res.ApkAssets: void <init>(int,java.lang.String,int,android.content.res.loader.AssetsProvider)>(0, r0, i0, null);

        return $r1;
    }

    public static android.content.res.ApkAssets loadFromPath(java.lang.String, int, android.content.res.loader.AssetsProvider) throws java.io.IOException
    {
        java.lang.String r0;
        int i0;
        android.content.res.loader.AssetsProvider r1;
        android.content.res.ApkAssets $r2;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 := @parameter2: android.content.res.loader.AssetsProvider;

        $r2 = new android.content.res.ApkAssets;

        specialinvoke $r2.<android.content.res.ApkAssets: void <init>(int,java.lang.String,int,android.content.res.loader.AssetsProvider)>(0, r0, i0, r1);

        return $r2;
    }

    public static android.content.res.ApkAssets loadOverlayFromPath(java.lang.String, int) throws java.io.IOException
    {
        java.lang.String r0;
        int i0;
        android.content.res.ApkAssets $r1;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r1 = new android.content.res.ApkAssets;

        specialinvoke $r1.<android.content.res.ApkAssets: void <init>(int,java.lang.String,int,android.content.res.loader.AssetsProvider)>(1, r0, i0, null);

        return $r1;
    }

    public static android.content.res.ApkAssets loadTableFromFd(java.io.FileDescriptor, java.lang.String, int, android.content.res.loader.AssetsProvider) throws java.io.IOException
    {
        java.io.FileDescriptor r0;
        java.lang.String r1;
        int i0;
        android.content.res.loader.AssetsProvider r2;
        android.content.res.ApkAssets $r3;

        r0 := @parameter0: java.io.FileDescriptor;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r2 := @parameter3: android.content.res.loader.AssetsProvider;

        $r3 = new android.content.res.ApkAssets;

        specialinvoke $r3.<android.content.res.ApkAssets: void <init>(int,java.io.FileDescriptor,java.lang.String,int,android.content.res.loader.AssetsProvider)>(2, r0, r1, i0, r2);

        return $r3;
    }

    public static android.content.res.ApkAssets loadTableFromFd(java.io.FileDescriptor, java.lang.String, long, long, int, android.content.res.loader.AssetsProvider) throws java.io.IOException
    {
        java.io.FileDescriptor r0;
        java.lang.String r1;
        long l0, l1;
        int i2;
        android.content.res.loader.AssetsProvider r2;
        android.content.res.ApkAssets $r3;

        r0 := @parameter0: java.io.FileDescriptor;

        r1 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        l1 := @parameter3: long;

        i2 := @parameter4: int;

        r2 := @parameter5: android.content.res.loader.AssetsProvider;

        $r3 = new android.content.res.ApkAssets;

        specialinvoke $r3.<android.content.res.ApkAssets: void <init>(int,java.io.FileDescriptor,java.lang.String,long,long,int,android.content.res.loader.AssetsProvider)>(2, r0, r1, l0, l1, i2, r2);

        return $r3;
    }

    private static native boolean nativeDefinesOverlayable(long) throws java.io.IOException;

    private static native void nativeDestroy(long);

    private static native java.lang.String nativeGetAssetPath(long);

    private static native android.content.om.OverlayableInfo nativeGetOverlayableInfo(long, java.lang.String) throws java.io.IOException;

    private static native long nativeGetStringBlock(long);

    private static native boolean nativeIsUpToDate(long);

    private static native long nativeLoad(int, java.lang.String, int, android.content.res.loader.AssetsProvider) throws java.io.IOException;

    private static native long nativeLoadEmpty(int, android.content.res.loader.AssetsProvider);

    private static native long nativeLoadFd(int, java.io.FileDescriptor, java.lang.String, int, android.content.res.loader.AssetsProvider) throws java.io.IOException;

    private static native long nativeLoadFdOffsets(int, java.io.FileDescriptor, java.lang.String, long, long, int, android.content.res.loader.AssetsProvider) throws java.io.IOException;

    private static native long nativeOpenXml(long, java.lang.String) throws java.io.IOException;

    public void close()
    {
        android.content.res.ApkAssets r0;
        boolean $z0;
        android.content.res.StringBlock $r2, $r3;
        long $l0;
        java.lang.Throwable $r4;

        r0 := @this: android.content.res.ApkAssets;

        entermonitor r0;

     label1:
        $z0 = r0.<android.content.res.ApkAssets: boolean mOpen>;

        if $z0 == 0 goto label3;

        r0.<android.content.res.ApkAssets: boolean mOpen> = 0;

        $r2 = r0.<android.content.res.ApkAssets: android.content.res.StringBlock mStringBlock>;

        if $r2 == null goto label2;

        $r3 = r0.<android.content.res.ApkAssets: android.content.res.StringBlock mStringBlock>;

        virtualinvoke $r3.<android.content.res.StringBlock: void close()>();

     label2:
        $l0 = r0.<android.content.res.ApkAssets: long mNativePtr>;

        staticinvoke <android.content.res.ApkAssets: void nativeDestroy(long)>($l0);

     label3:
        exitmonitor r0;

     label4:
        return;

     label5:
        $r4 := @caughtexception;

     label6:
        exitmonitor r0;

     label7:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public boolean definesOverlayable() throws java.io.IOException
    {
        android.content.res.ApkAssets r0;
        long $l0;
        boolean $z0;

        r0 := @this: android.content.res.ApkAssets;

        $l0 = r0.<android.content.res.ApkAssets: long mNativePtr>;

        $z0 = staticinvoke <android.content.res.ApkAssets: boolean nativeDefinesOverlayable(long)>($l0);

        return $z0;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.content.res.ApkAssets r0;

        r0 := @this: android.content.res.ApkAssets;

        virtualinvoke r0.<android.content.res.ApkAssets: void close()>();

        return;
    }

    public java.lang.String getAssetPath()
    {
        android.content.res.ApkAssets r0;
        long $l0;
        java.lang.Throwable $r1;
        java.lang.String r2;

        r0 := @this: android.content.res.ApkAssets;

        entermonitor r0;

     label1:
        $l0 = r0.<android.content.res.ApkAssets: long mNativePtr>;

        r2 = staticinvoke <android.content.res.ApkAssets: java.lang.String nativeGetAssetPath(long)>($l0);

        exitmonitor r0;

     label2:
        return r2;

     label3:
        $r1 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public android.content.res.loader.AssetsProvider getAssetsProvider()
    {
        android.content.res.ApkAssets r0;
        android.content.res.loader.AssetsProvider $r1;

        r0 := @this: android.content.res.ApkAssets;

        $r1 = r0.<android.content.res.ApkAssets: android.content.res.loader.AssetsProvider mAssets>;

        return $r1;
    }

    public android.content.om.OverlayableInfo getOverlayableInfo(java.lang.String) throws java.io.IOException
    {
        android.content.res.ApkAssets r0;
        java.lang.String r1;
        long $l0;
        android.content.om.OverlayableInfo $r2;

        r0 := @this: android.content.res.ApkAssets;

        r1 := @parameter0: java.lang.String;

        $l0 = r0.<android.content.res.ApkAssets: long mNativePtr>;

        $r2 = staticinvoke <android.content.res.ApkAssets: android.content.om.OverlayableInfo nativeGetOverlayableInfo(long,java.lang.String)>($l0, r1);

        return $r2;
    }

    java.lang.CharSequence getStringFromPool(int)
    {
        android.content.res.ApkAssets r0;
        int i0;
        android.content.res.StringBlock $r1, $r2;
        java.lang.Throwable $r3;
        java.lang.CharSequence r4;

        r0 := @this: android.content.res.ApkAssets;

        i0 := @parameter0: int;

        $r1 = r0.<android.content.res.ApkAssets: android.content.res.StringBlock mStringBlock>;

        if $r1 != null goto label1;

        return null;

     label1:
        entermonitor r0;

     label2:
        $r2 = r0.<android.content.res.ApkAssets: android.content.res.StringBlock mStringBlock>;

        r4 = virtualinvoke $r2.<android.content.res.StringBlock: java.lang.CharSequence get(int)>(i0);

        exitmonitor r0;

     label3:
        return r4;

     label4:
        $r3 := @caughtexception;

     label5:
        exitmonitor r0;

     label6:
        throw $r3;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public boolean isForLoader()
    {
        android.content.res.ApkAssets r0;
        int $i0, $i1;
        boolean z0;

        r0 := @this: android.content.res.ApkAssets;

        $i0 = r0.<android.content.res.ApkAssets: int mFlags>;

        $i1 = $i0 & 4;

        if $i1 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isUpToDate()
    {
        android.content.res.ApkAssets r0;
        boolean z0;
        long $l0;
        java.lang.Throwable $r2;

        r0 := @this: android.content.res.ApkAssets;

        entermonitor r0;

     label1:
        $l0 = r0.<android.content.res.ApkAssets: long mNativePtr>;

        z0 = staticinvoke <android.content.res.ApkAssets: boolean nativeIsUpToDate(long)>($l0);

        exitmonitor r0;

     label2:
        return z0;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public android.content.res.XmlResourceParser openXml(java.lang.String) throws java.io.IOException
    {
        android.content.res.ApkAssets r0;
        long l0, $l1;
        java.lang.Throwable $r2, $r3, $r4;
        java.lang.String r5;
        android.content.res.XmlBlock r6;
        android.content.res.XmlResourceParser r7;
        java.lang.AssertionError r8;

        r0 := @this: android.content.res.ApkAssets;

        r5 := @parameter0: java.lang.String;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r5, "fileName");

        entermonitor r0;

     label01:
        $l1 = r0.<android.content.res.ApkAssets: long mNativePtr>;

        l0 = staticinvoke <android.content.res.ApkAssets: long nativeOpenXml(long,java.lang.String)>($l1, r5);

        r6 = new android.content.res.XmlBlock;

        specialinvoke r6.<android.content.res.XmlBlock: void <init>(android.content.res.AssetManager,long)>(null, l0);

     label02:
        r7 = virtualinvoke r6.<android.content.res.XmlBlock: android.content.res.XmlResourceParser newParser()>();

     label03:
        if r7 == null goto label06;

     label04:
        virtualinvoke r6.<android.content.res.XmlBlock: void close()>();

        exitmonitor r0;

     label05:
        return r7;

     label06:
        r8 = new java.lang.AssertionError;

        specialinvoke r8.<java.lang.AssertionError: void <init>(java.lang.Object)>("block.newParser() returned a null parser");

        throw r8;

     label07:
        $r3 := @caughtexception;

     label08:
        virtualinvoke r6.<android.content.res.XmlBlock: void close()>();

     label09:
        goto label12;

     label10:
        $r4 := @caughtexception;

     label11:
        virtualinvoke $r3.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r4);

     label12:
        throw $r3;

     label13:
        $r2 := @caughtexception;

     label14:
        exitmonitor r0;

     label15:
        throw $r2;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label02 to label03 with label07;
        catch java.lang.Throwable from label04 to label05 with label13;
        catch java.lang.Throwable from label06 to label07 with label07;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label12 to label13 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    public java.lang.String toString()
    {
        android.content.res.ApkAssets r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r4, $r7;

        r0 := @this: android.content.res.ApkAssets;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ApkAssets{path=");

        $r4 = virtualinvoke r0.<android.content.res.ApkAssets: java.lang.String getAssetPath()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    public static void <clinit>()
    {
        <android.content.res.ApkAssets: int PROPERTY_SYSTEM> = 1;

        <android.content.res.ApkAssets: int PROPERTY_OVERLAY> = 8;

        <android.content.res.ApkAssets: int PROPERTY_LOADER> = 4;

        <android.content.res.ApkAssets: int PROPERTY_DYNAMIC> = 2;

        <android.content.res.ApkAssets: int FORMAT_IDMAP> = 1;

        <android.content.res.ApkAssets: int FORMAT_DIR> = 3;

        <android.content.res.ApkAssets: int FORMAT_ARSC> = 2;

        <android.content.res.ApkAssets: int FORMAT_APK> = 0;

        return;
    }
}
