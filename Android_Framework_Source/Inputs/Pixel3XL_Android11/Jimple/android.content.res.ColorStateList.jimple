public class android.content.res.ColorStateList extends android.content.res.ComplexColor implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    private static final int DEFAULT_COLOR;
    private static final int[][] EMPTY;
    private static final java.lang.String TAG;
    private static final android.util.SparseArray sCache;
    private int mChangingConfigurations;
    private int[] mColors;
    private int mDefaultColor;
    private android.content.res.ColorStateList$ColorStateListFactory mFactory;
    private boolean mIsOpaque;
    private int[][] mStateSpecs;
    private int[][] mThemeAttrs;

    static void <clinit>()
    {
        int[][] $r0;
        int[] $r1;
        android.util.SparseArray $r2;
        android.content.res.ColorStateList$1 $r3;

        <android.content.res.ColorStateList: java.lang.String TAG> = "ColorStateList";

        <android.content.res.ColorStateList: int DEFAULT_COLOR> = -65536;

        $r0 = newarray (int[])[1];

        $r1 = newarray (int)[0];

        $r0[0] = $r1;

        <android.content.res.ColorStateList: int[][] EMPTY> = $r0;

        $r2 = new android.util.SparseArray;

        specialinvoke $r2.<android.util.SparseArray: void <init>()>();

        <android.content.res.ColorStateList: android.util.SparseArray sCache> = $r2;

        $r3 = new android.content.res.ColorStateList$1;

        specialinvoke $r3.<android.content.res.ColorStateList$1: void <init>()>();

        <android.content.res.ColorStateList: android.os.Parcelable$Creator CREATOR> = $r3;

        return;
    }

    private void <init>()
    {
        android.content.res.ColorStateList r0;

        r0 := @this: android.content.res.ColorStateList;

        specialinvoke r0.<android.content.res.ComplexColor: void <init>()>();

        return;
    }

    private void <init>(android.content.res.ColorStateList)
    {
        android.content.res.ColorStateList r0, r1;
        int $i0, $i1;
        int[][] $r2, $r3, $r5;
        boolean $z0;
        java.lang.Object $r4, $r7;
        int[] $r6, $r8;

        r0 := @this: android.content.res.ColorStateList;

        r1 := @parameter0: android.content.res.ColorStateList;

        specialinvoke r0.<android.content.res.ComplexColor: void <init>()>();

        if r1 == null goto label1;

        $i0 = r1.<android.content.res.ColorStateList: int mChangingConfigurations>;

        r0.<android.content.res.ColorStateList: int mChangingConfigurations> = $i0;

        $r2 = r1.<android.content.res.ColorStateList: int[][] mStateSpecs>;

        r0.<android.content.res.ColorStateList: int[][] mStateSpecs> = $r2;

        $i1 = r1.<android.content.res.ColorStateList: int mDefaultColor>;

        r0.<android.content.res.ColorStateList: int mDefaultColor> = $i1;

        $z0 = r1.<android.content.res.ColorStateList: boolean mIsOpaque>;

        r0.<android.content.res.ColorStateList: boolean mIsOpaque> = $z0;

        $r3 = r1.<android.content.res.ColorStateList: int[][] mThemeAttrs>;

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.Object clone()>();

        $r5 = (int[][]) $r4;

        r0.<android.content.res.ColorStateList: int[][] mThemeAttrs> = $r5;

        $r6 = r1.<android.content.res.ColorStateList: int[] mColors>;

        $r7 = virtualinvoke $r6.<java.lang.Object: java.lang.Object clone()>();

        $r8 = (int[]) $r7;

        r0.<android.content.res.ColorStateList: int[] mColors> = $r8;

     label1:
        return;
    }

    public void <init>(int[][], int[])
    {
        android.content.res.ColorStateList r0;
        int[][] r1;
        int[] r2;

        r0 := @this: android.content.res.ColorStateList;

        r1 := @parameter0: int[][];

        r2 := @parameter1: int[];

        specialinvoke r0.<android.content.res.ComplexColor: void <init>()>();

        r0.<android.content.res.ColorStateList: int[][] mStateSpecs> = r1;

        r0.<android.content.res.ColorStateList: int[] mColors> = r2;

        specialinvoke r0.<android.content.res.ColorStateList: void onColorsChanged()>();

        return;
    }

    static int access$000(android.content.res.ColorStateList)
    {
        android.content.res.ColorStateList r0;
        int $i0;

        r0 := @parameter0: android.content.res.ColorStateList;

        $i0 = r0.<android.content.res.ColorStateList: int mChangingConfigurations>;

        return $i0;
    }

    private void applyTheme(android.content.res.Resources$Theme)
    {
        android.content.res.ColorStateList r0;
        android.content.res.Resources$Theme r1;
        int[][] r2, $r4;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10;
        android.content.res.TypedArray r3;
        int[] $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14;
        float $f0, f1, f2;
        boolean z0, z1;

        r0 := @this: android.content.res.ColorStateList;

        r1 := @parameter0: android.content.res.Resources$Theme;

        $r4 = r0.<android.content.res.ColorStateList: int[][] mThemeAttrs>;

        if $r4 != null goto label1;

        return;

     label1:
        z0 = 0;

        r2 = r0.<android.content.res.ColorStateList: int[][] mThemeAttrs>;

        i0 = lengthof r2;

        i9 = 0;

     label2:
        if i9 >= i0 goto label7;

        z1 = z0;

        $r5 = r2[i9];

        if $r5 == null goto label6;

        $r7 = r2[i9];

        $r6 = <com.android.internal.R$styleable: int[] ColorStateListItem>;

        r3 = virtualinvoke r1.<android.content.res.Resources$Theme: android.content.res.TypedArray resolveAttributes(int[],int[])>($r7, $r6);

        $r8 = r2[i9];

        $i1 = $r8[0];

        if $i1 == 0 goto label3;

        $r14 = r0.<android.content.res.ColorStateList: int[] mColors>;

        $i7 = $r14[i9];

        $i8 = staticinvoke <android.graphics.Color: int alpha(int)>($i7);

        $f0 = (float) $i8;

        f1 = $f0 / 255.0F;

        goto label4;

     label3:
        f1 = 1.0F;

     label4:
        $r9 = r2[i9];

        $r10 = virtualinvoke r3.<android.content.res.TypedArray: int[] extractThemeAttrs(int[])>($r9);

        r2[i9] = $r10;

        $r11 = r2[i9];

        if $r11 == null goto label5;

        z0 = 1;

     label5:
        $r12 = r0.<android.content.res.ColorStateList: int[] mColors>;

        $i2 = $r12[i9];

        i10 = virtualinvoke r3.<android.content.res.TypedArray: int getColor(int,int)>(0, $i2);

        f2 = virtualinvoke r3.<android.content.res.TypedArray: float getFloat(int,float)>(1, f1);

        $r13 = r0.<android.content.res.ColorStateList: int[] mColors>;

        $i3 = specialinvoke r0.<android.content.res.ColorStateList: int modulateColorAlpha(int,float)>(i10, f2);

        $r13[i9] = $i3;

        $i4 = r0.<android.content.res.ColorStateList: int mChangingConfigurations>;

        $i5 = virtualinvoke r3.<android.content.res.TypedArray: int getChangingConfigurations()>();

        $i6 = $i4 | $i5;

        r0.<android.content.res.ColorStateList: int mChangingConfigurations> = $i6;

        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        z1 = z0;

     label6:
        i9 = i9 + 1;

        z0 = z1;

        goto label2;

     label7:
        if z0 != 0 goto label8;

        r0.<android.content.res.ColorStateList: int[][] mThemeAttrs> = null;

     label8:
        specialinvoke r0.<android.content.res.ColorStateList: void onColorsChanged()>();

        return;
    }

    public static android.content.res.ColorStateList createFromXml(android.content.res.Resources, org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.res.Resources r0;
        org.xmlpull.v1.XmlPullParser r1;
        android.content.res.ColorStateList $r2;

        r0 := @parameter0: android.content.res.Resources;

        r1 := @parameter1: org.xmlpull.v1.XmlPullParser;

        $r2 = staticinvoke <android.content.res.ColorStateList: android.content.res.ColorStateList createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)>(r0, r1, null);

        return $r2;
    }

    public static android.content.res.ColorStateList createFromXml(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.content.res.Resources$Theme) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.res.Resources r0;
        org.xmlpull.v1.XmlPullParser r1;
        android.content.res.Resources$Theme r2;
        android.util.AttributeSet r3;
        int i0;
        android.content.res.ColorStateList $r5;
        org.xmlpull.v1.XmlPullParserException r6;
        java.lang.Throwable r7;

        r0 := @parameter0: android.content.res.Resources;

        r1 := @parameter1: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter2: android.content.res.Resources$Theme;

        r3 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>(r1);

     label1:
        i0 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i0 == 2 goto label2;

        if i0 == 1 goto label2;

        goto label1;

     label2:
        if i0 != 2 goto label3;

        $r5 = staticinvoke <android.content.res.ColorStateList: android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>(r0, r1, r3, r2);

        return $r5;

     label3:
        r6 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke r6.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("No start tag found");

        r7 = (java.lang.Throwable) r6;

        throw r7;
    }

    static android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser r0;
        android.util.AttributeSet r1;
        android.content.res.Resources$Theme r2;
        boolean $z0;
        java.lang.String $r4, $r9, r12;
        android.content.res.Resources r11;
        android.content.res.ColorStateList r15;
        java.lang.StringBuilder r16;
        org.xmlpull.v1.XmlPullParserException r17;
        java.lang.Throwable r18;

        r11 := @parameter0: android.content.res.Resources;

        r0 := @parameter1: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter2: android.util.AttributeSet;

        r2 := @parameter3: android.content.res.Resources$Theme;

        r12 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke r12.<java.lang.String: boolean equals(java.lang.Object)>("selector");

        if $z0 == 0 goto label1;

        r15 = new android.content.res.ColorStateList;

        specialinvoke r15.<android.content.res.ColorStateList: void <init>()>();

        specialinvoke r15.<android.content.res.ColorStateList: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>(r11, r0, r1, r2);

        return r15;

     label1:
        r16 = new java.lang.StringBuilder;

        specialinvoke r16.<java.lang.StringBuilder: void <init>()>();

        $r4 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": invalid color state list tag ");

        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12);

        r17 = new org.xmlpull.v1.XmlPullParserException;

        $r9 = virtualinvoke r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r17.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r9);

        r18 = (java.lang.Throwable) r17;

        throw r18;
    }

    private void inflate(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.res.ColorStateList r0;
        org.xmlpull.v1.XmlPullParser r1;
        android.util.AttributeSet r2;
        android.content.res.Resources$Theme r3;
        int i0, i1, i2, $i3, $i4, $i5, $i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16;
        int[] r4, $r9, r15, r17, r18, r20;
        float f0;
        java.lang.Object[] $r5, $r10, $r11;
        int[][] $r6, $r7, r13, r14, r19;
        java.lang.String $r8;
        boolean $z0, $z1, z2;
        android.content.res.Resources r12;
        android.content.res.TypedArray r16;

        r0 := @this: android.content.res.ColorStateList;

        r12 := @parameter0: android.content.res.Resources;

        r1 := @parameter1: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter2: android.util.AttributeSet;

        r3 := @parameter3: android.content.res.Resources$Theme;

        $i3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        i0 = $i3 + 1;

        i7 = 0;

        i8 = -65536;

        z2 = 0;

        $r5 = staticinvoke <com.android.internal.util.ArrayUtils: java.lang.Object[] newUnpaddedArray(java.lang.Class,int)>(class "[I", 20);

        r13 = (int[][]) $r5;

        $i4 = lengthof r13;

        r14 = newarray (int[])[$i4];

        $i5 = lengthof r13;

        r15 = newarray (int)[$i5];

        i9 = 0;

     label01:
        i10 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i10 == 1 goto label14;

        i11 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if i11 >= i0 goto label03;

        if i10 == 3 goto label02;

        goto label03;

     label02:
        goto label14;

     label03:
        if i10 != 2 goto label13;

        if i11 > i0 goto label13;

        $r8 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z0 != 0 goto label04;

        goto label13;

     label04:
        $r9 = <com.android.internal.R$styleable: int[] ColorStateListItem>;

        r16 = staticinvoke <android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>(r12, r3, r2, $r9);

        r4 = virtualinvoke r16.<android.content.res.TypedArray: int[] extractThemeAttrs()>();

        i1 = virtualinvoke r16.<android.content.res.TypedArray: int getColor(int,int)>(0, -65281);

        f0 = virtualinvoke r16.<android.content.res.TypedArray: float getFloat(int,float)>(1, 1.0F);

        i2 = virtualinvoke r16.<android.content.res.TypedArray: int getChangingConfigurations()>();

        virtualinvoke r16.<android.content.res.TypedArray: void recycle()>();

        i12 = interfaceinvoke r2.<android.util.AttributeSet: int getAttributeCount()>();

        r17 = newarray (int)[i12];

        i13 = 0;

        i14 = 0;

     label05:
        if i14 >= i12 goto label09;

        i15 = interfaceinvoke r2.<android.util.AttributeSet: int getAttributeNameResource(int)>(i14);

        if i15 == 16843173 goto label08;

        if i15 == 16843551 goto label08;

        $z1 = interfaceinvoke r2.<android.util.AttributeSet: boolean getAttributeBooleanValue(int,boolean)>(i14, 0);

        if $z1 == 0 goto label06;

        goto label07;

     label06:
        i15 = neg i15;

     label07:
        r17[i13] = i15;

        i13 = i13 + 1;

        goto label08;

     label08:
        i14 = i14 + 1;

        goto label05;

     label09:
        r18 = staticinvoke <android.util.StateSet: int[] trimStateSet(int[],int)>(r17, i13);

        i16 = specialinvoke r0.<android.content.res.ColorStateList: int modulateColorAlpha(int,float)>(i1, f0);

        if i9 == 0 goto label10;

        $i6 = lengthof r18;

        if $i6 != 0 goto label11;

     label10:
        i8 = i16;

     label11:
        if r4 == null goto label12;

        z2 = 1;

     label12:
        r15 = staticinvoke <com.android.internal.util.GrowingArrayUtils: int[] append(int[],int,int)>(r15, i9, i16);

        $r10 = staticinvoke <com.android.internal.util.GrowingArrayUtils: java.lang.Object[] append(java.lang.Object[],int,java.lang.Object)>(r14, i9, r4);

        r14 = (int[][]) $r10;

        $r11 = staticinvoke <com.android.internal.util.GrowingArrayUtils: java.lang.Object[] append(java.lang.Object[],int,java.lang.Object)>(r13, i9, r18);

        r13 = (int[][]) $r11;

        i9 = i9 + 1;

        i7 = i7 | i2;

        goto label01;

     label13:
        goto label01;

     label14:
        r0.<android.content.res.ColorStateList: int mChangingConfigurations> = i7;

        r0.<android.content.res.ColorStateList: int mDefaultColor> = i8;

        if z2 == 0 goto label15;

        r19 = newarray (int[])[i9];

        r0.<android.content.res.ColorStateList: int[][] mThemeAttrs> = r19;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r14, 0, r19, 0, i9);

        goto label16;

     label15:
        r0.<android.content.res.ColorStateList: int[][] mThemeAttrs> = null;

     label16:
        r20 = newarray (int)[i9];

        r0.<android.content.res.ColorStateList: int[] mColors> = r20;

        $r6 = newarray (int[])[i9];

        r0.<android.content.res.ColorStateList: int[][] mStateSpecs> = $r6;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r15, 0, r20, 0, i9);

        $r7 = r0.<android.content.res.ColorStateList: int[][] mStateSpecs>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r13, 0, $r7, 0, i9);

        specialinvoke r0.<android.content.res.ColorStateList: void onColorsChanged()>();

        return;
    }

    private int modulateColorAlpha(int, float)
    {
        android.content.res.ColorStateList r0;
        int i0, $i2, $i3, $i4, $i5, $i6, $i7;
        float f0, $f1, $f2, $f3;
        byte $b1;

        r0 := @this: android.content.res.ColorStateList;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        $b1 = f0 cmpl 1.0F;

        if $b1 != 0 goto label1;

        return i0;

     label1:
        $i2 = 16777215 & i0;

        $i3 = staticinvoke <android.graphics.Color: int alpha(int)>(i0);

        $f1 = (float) $i3;

        $f2 = $f1 * f0;

        $f3 = $f2 + 0.5F;

        $i4 = (int) $f3;

        $i5 = staticinvoke <android.util.MathUtils: int constrain(int,int,int)>($i4, 0, 255);

        $i6 = $i5 << 24;

        $i7 = $i2 | $i6;

        return $i7;
    }

    private void onColorsChanged()
    {
        android.content.res.ColorStateList r0;
        int[][] r1;
        int[] r2, $r3;
        int i0, $i1, $i2, $i3, i4, i5, i6, i7, i8;
        boolean z1;

        r0 := @this: android.content.res.ColorStateList;

        i4 = -65536;

        r1 = r0.<android.content.res.ColorStateList: int[][] mStateSpecs>;

        r2 = r0.<android.content.res.ColorStateList: int[] mColors>;

        i0 = lengthof r1;

        z1 = 1;

        if i0 <= 0 goto label6;

        i5 = r2[0];

        i6 = i0 - 1;

     label1:
        i7 = i5;

        if i6 <= 0 goto label3;

        $r3 = r1[i6];

        $i3 = lengthof $r3;

        if $i3 != 0 goto label2;

        i7 = r2[i6];

        goto label3;

     label2:
        i6 = i6 + -1;

        goto label1;

     label3:
        i8 = 0;

     label4:
        i4 = i7;

        z1 = 1;

        if i8 >= i0 goto label6;

        $i1 = r2[i8];

        $i2 = staticinvoke <android.graphics.Color: int alpha(int)>($i1);

        if $i2 == 255 goto label5;

        z1 = 0;

        i4 = i7;

        goto label6;

     label5:
        i8 = i8 + 1;

        goto label4;

     label6:
        r0.<android.content.res.ColorStateList: int mDefaultColor> = i4;

        r0.<android.content.res.ColorStateList: boolean mIsOpaque> = z1;

        return;
    }

    public static android.content.res.ColorStateList valueOf(int)
    {
        int i0, $i1, i2, i3;
        android.util.SparseArray r0, r1, $r3, $r4, $r7, $r11, $r12, $r16;
        java.lang.ref.WeakReference r2, $r9, $r14;
        int[] $r5;
        int[][] $r6;
        java.lang.Object $r8, $r10, $r13, $r15;
        java.lang.Throwable $r17;
        android.content.res.ColorStateList r18, r19;

        i0 := @parameter0: int;

        r0 = <android.content.res.ColorStateList: android.util.SparseArray sCache>;

        entermonitor r0;

     label01:
        $r3 = <android.content.res.ColorStateList: android.util.SparseArray sCache>;

        i2 = virtualinvoke $r3.<android.util.SparseArray: int indexOfKey(int)>(i0);

     label02:
        if i2 < 0 goto label08;

     label03:
        $r12 = <android.content.res.ColorStateList: android.util.SparseArray sCache>;

        $r13 = virtualinvoke $r12.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        $r14 = (java.lang.ref.WeakReference) $r13;

        $r15 = virtualinvoke $r14.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r18 = (android.content.res.ColorStateList) $r15;

     label04:
        if r18 == null goto label07;

     label05:
        exitmonitor r0;

     label06:
        return r18;

     label07:
        $r16 = <android.content.res.ColorStateList: android.util.SparseArray sCache>;

        virtualinvoke $r16.<android.util.SparseArray: void removeAt(int)>(i2);

     label08:
        $r4 = <android.content.res.ColorStateList: android.util.SparseArray sCache>;

        $i1 = virtualinvoke $r4.<android.util.SparseArray: int size()>();

        i3 = $i1 - 1;

     label09:
        if i3 < 0 goto label12;

     label10:
        $r7 = <android.content.res.ColorStateList: android.util.SparseArray sCache>;

        $r8 = virtualinvoke $r7.<android.util.SparseArray: java.lang.Object valueAt(int)>(i3);

        $r9 = (java.lang.ref.WeakReference) $r8;

        $r10 = virtualinvoke $r9.<java.lang.ref.WeakReference: java.lang.Object get()>();

        if $r10 != null goto label11;

        $r11 = <android.content.res.ColorStateList: android.util.SparseArray sCache>;

        virtualinvoke $r11.<android.util.SparseArray: void removeAt(int)>(i3);

     label11:
        i3 = i3 + -1;

        goto label09;

     label12:
        r19 = new android.content.res.ColorStateList;

        $r6 = <android.content.res.ColorStateList: int[][] EMPTY>;

        $r5 = newarray (int)[1];

        $r5[0] = i0;

        specialinvoke r19.<android.content.res.ColorStateList: void <init>(int[][],int[])>($r6, $r5);

        r1 = <android.content.res.ColorStateList: android.util.SparseArray sCache>;

        r2 = new java.lang.ref.WeakReference;

        specialinvoke r2.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r19);

        virtualinvoke r1.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r2);

        exitmonitor r0;

     label13:
        return r19;

     label14:
        $r17 := @caughtexception;

     label15:
        exitmonitor r0;

     label16:
        throw $r17;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Throwable from label05 to label06 with label14;
        catch java.lang.Throwable from label07 to label08 with label14;
        catch java.lang.Throwable from label08 to label09 with label14;
        catch java.lang.Throwable from label10 to label11 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label15 to label16 with label14;
    }

    public boolean canApplyTheme()
    {
        android.content.res.ColorStateList r0;
        int[][] $r1;
        boolean z0;

        r0 := @this: android.content.res.ColorStateList;

        $r1 = r0.<android.content.res.ColorStateList: int[][] mThemeAttrs>;

        if $r1 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public int describeContents()
    {
        android.content.res.ColorStateList r0;

        r0 := @this: android.content.res.ColorStateList;

        return 0;
    }

    public int getChangingConfigurations()
    {
        android.content.res.ColorStateList r0;
        int $i0, $i1, $i2;

        r0 := @this: android.content.res.ColorStateList;

        $i0 = specialinvoke r0.<android.content.res.ComplexColor: int getChangingConfigurations()>();

        $i1 = r0.<android.content.res.ColorStateList: int mChangingConfigurations>;

        $i2 = $i0 | $i1;

        return $i2;
    }

    public int getColorForState(int[], int)
    {
        android.content.res.ColorStateList r0;
        int[] r1, $r4, $r5;
        int i0, i1, $i2, i3;
        int[][] $r2, $r3;
        boolean $z0;

        r0 := @this: android.content.res.ColorStateList;

        r1 := @parameter0: int[];

        i0 := @parameter1: int;

        $r2 = r0.<android.content.res.ColorStateList: int[][] mStateSpecs>;

        i1 = lengthof $r2;

        i3 = 0;

     label1:
        if i3 >= i1 goto label3;

        $r3 = r0.<android.content.res.ColorStateList: int[][] mStateSpecs>;

        $r4 = $r3[i3];

        $z0 = staticinvoke <android.util.StateSet: boolean stateSetMatches(int[],int[])>($r4, r1);

        if $z0 == 0 goto label2;

        $r5 = r0.<android.content.res.ColorStateList: int[] mColors>;

        $i2 = $r5[i3];

        return $i2;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return i0;
    }

    public int[] getColors()
    {
        android.content.res.ColorStateList r0;
        int[] $r1;

        r0 := @this: android.content.res.ColorStateList;

        $r1 = r0.<android.content.res.ColorStateList: int[] mColors>;

        return $r1;
    }

    public android.content.res.ConstantState getConstantState()
    {
        android.content.res.ColorStateList r0;
        android.content.res.ColorStateList$ColorStateListFactory $r1, $r2, $r3;

        r0 := @this: android.content.res.ColorStateList;

        $r1 = r0.<android.content.res.ColorStateList: android.content.res.ColorStateList$ColorStateListFactory mFactory>;

        if $r1 != null goto label1;

        $r3 = new android.content.res.ColorStateList$ColorStateListFactory;

        specialinvoke $r3.<android.content.res.ColorStateList$ColorStateListFactory: void <init>(android.content.res.ColorStateList)>(r0);

        r0.<android.content.res.ColorStateList: android.content.res.ColorStateList$ColorStateListFactory mFactory> = $r3;

     label1:
        $r2 = r0.<android.content.res.ColorStateList: android.content.res.ColorStateList$ColorStateListFactory mFactory>;

        return $r2;
    }

    public int getDefaultColor()
    {
        android.content.res.ColorStateList r0;
        int $i0;

        r0 := @this: android.content.res.ColorStateList;

        $i0 = r0.<android.content.res.ColorStateList: int mDefaultColor>;

        return $i0;
    }

    public int[][] getStates()
    {
        android.content.res.ColorStateList r0;
        int[][] $r1;

        r0 := @this: android.content.res.ColorStateList;

        $r1 = r0.<android.content.res.ColorStateList: int[][] mStateSpecs>;

        return $r1;
    }

    public boolean hasFocusStateSpecified()
    {
        android.content.res.ColorStateList r0;
        int[][] $r1;
        boolean $z0;

        r0 := @this: android.content.res.ColorStateList;

        $r1 = r0.<android.content.res.ColorStateList: int[][] mStateSpecs>;

        $z0 = staticinvoke <android.util.StateSet: boolean containsAttribute(int[][],int)>($r1, 16842908);

        return $z0;
    }

    public boolean hasState(int)
    {
        android.content.res.ColorStateList r0;
        int i0, i1, i2, $i3, $i4, i5, i6;
        int[][] r1;
        int[] r2;

        r0 := @this: android.content.res.ColorStateList;

        i0 := @parameter0: int;

        r1 = r0.<android.content.res.ColorStateList: int[][] mStateSpecs>;

        i1 = lengthof r1;

        i5 = 0;

     label1:
        if i5 >= i1 goto label6;

        r2 = r1[i5];

        i2 = lengthof r2;

        i6 = 0;

     label2:
        if i6 >= i2 goto label5;

        $i3 = r2[i6];

        if $i3 == i0 goto label4;

        $i4 = r2[i6];

        if $i4 != i0 goto label3;

        goto label4;

     label3:
        i6 = i6 + 1;

        goto label2;

     label4:
        return 1;

     label5:
        i5 = i5 + 1;

        goto label1;

     label6:
        return 0;
    }

    public boolean isOpaque()
    {
        android.content.res.ColorStateList r0;
        boolean $z0;

        r0 := @this: android.content.res.ColorStateList;

        $z0 = r0.<android.content.res.ColorStateList: boolean mIsOpaque>;

        return $z0;
    }

    public boolean isStateful()
    {
        android.content.res.ColorStateList r0;
        int[][] r1;
        int i0, $i1;
        int[] $r2;
        boolean z1;

        r0 := @this: android.content.res.ColorStateList;

        r1 = r0.<android.content.res.ColorStateList: int[][] mStateSpecs>;

        i0 = lengthof r1;

        z1 = 0;

        if i0 < 1 goto label1;

        z1 = 0;

        $r2 = r1[0];

        $i1 = lengthof $r2;

        if $i1 <= 0 goto label1;

        z1 = 1;

     label1:
        return z1;
    }

    public android.content.res.ColorStateList obtainForTheme(android.content.res.Resources$Theme)
    {
        android.content.res.ColorStateList r0, $r3;
        android.content.res.Resources$Theme r1;
        boolean $z0;

        r0 := @this: android.content.res.ColorStateList;

        r1 := @parameter0: android.content.res.Resources$Theme;

        if r1 == null goto label2;

        $z0 = virtualinvoke r0.<android.content.res.ColorStateList: boolean canApplyTheme()>();

        if $z0 != 0 goto label1;

        goto label2;

     label1:
        $r3 = new android.content.res.ColorStateList;

        specialinvoke $r3.<android.content.res.ColorStateList: void <init>(android.content.res.ColorStateList)>(r0);

        specialinvoke $r3.<android.content.res.ColorStateList: void applyTheme(android.content.res.Resources$Theme)>(r1);

        return $r3;

     label2:
        return r0;
    }

    public volatile android.content.res.ComplexColor obtainForTheme(android.content.res.Resources$Theme)
    {
        android.content.res.ColorStateList r0, $r2;
        android.content.res.Resources$Theme r1;

        r0 := @this: android.content.res.ColorStateList;

        r1 := @parameter0: android.content.res.Resources$Theme;

        $r2 = virtualinvoke r0.<android.content.res.ColorStateList: android.content.res.ColorStateList obtainForTheme(android.content.res.Resources$Theme)>(r1);

        return $r2;
    }

    public java.lang.String toString()
    {
        android.content.res.ColorStateList r0;
        java.lang.StringBuilder $r2;
        int[][] $r4, $r10;
        java.lang.String $r5, $r11, $r15, $r20;
        int $i0, $i1;
        int[] $r14;

        r0 := @this: android.content.res.ColorStateList;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ColorStateList{mThemeAttrs=");

        $r4 = r0.<android.content.res.ColorStateList: int[][] mThemeAttrs>;

        $r5 = staticinvoke <java.util.Arrays: java.lang.String deepToString(java.lang.Object[])>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mChangingConfigurations=");

        $i0 = r0.<android.content.res.ColorStateList: int mChangingConfigurations>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mStateSpecs=");

        $r10 = r0.<android.content.res.ColorStateList: int[][] mStateSpecs>;

        $r11 = staticinvoke <java.util.Arrays: java.lang.String deepToString(java.lang.Object[])>($r10);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mColors=");

        $r14 = r0.<android.content.res.ColorStateList: int[] mColors>;

        $r15 = staticinvoke <java.util.Arrays: java.lang.String toString(int[])>($r14);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mDefaultColor=");

        $i1 = r0.<android.content.res.ColorStateList: int mDefaultColor>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r20 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r20;
    }

    public android.content.res.ColorStateList withAlpha(int)
    {
        android.content.res.ColorStateList r0, $r3;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, i7;
        int[] r1, $r2, $r5;
        int[][] $r4;

        r0 := @this: android.content.res.ColorStateList;

        i0 := @parameter0: int;

        $r2 = r0.<android.content.res.ColorStateList: int[] mColors>;

        $i2 = lengthof $r2;

        r1 = newarray (int)[$i2];

        i1 = lengthof r1;

        i7 = 0;

     label1:
        if i7 >= i1 goto label2;

        $r5 = r0.<android.content.res.ColorStateList: int[] mColors>;

        $i3 = $r5[i7];

        $i5 = $i3 & 16777215;

        $i4 = i0 << 24;

        $i6 = $i5 | $i4;

        r1[i7] = $i6;

        i7 = i7 + 1;

        goto label1;

     label2:
        $r3 = new android.content.res.ColorStateList;

        $r4 = r0.<android.content.res.ColorStateList: int[][] mStateSpecs>;

        specialinvoke $r3.<android.content.res.ColorStateList: void <init>(int[][],int[])>($r4, r1);

        return $r3;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.content.res.ColorStateList r0;
        android.os.Parcel r1;
        int i0, i2, i3;
        boolean $z0;
        int[][] $r2, $r4;
        int[] $r3, $r5;

        r0 := @this: android.content.res.ColorStateList;

        r1 := @parameter0: android.os.Parcel;

        i2 := @parameter1: int;

        $z0 = virtualinvoke r0.<android.content.res.ColorStateList: boolean canApplyTheme()>();

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ColorStateList", "Wrote partially-resolved ColorStateList to parcel!");

     label1:
        $r2 = r0.<android.content.res.ColorStateList: int[][] mStateSpecs>;

        i0 = lengthof $r2;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        i3 = 0;

     label2:
        if i3 >= i0 goto label3;

        $r4 = r0.<android.content.res.ColorStateList: int[][] mStateSpecs>;

        $r5 = $r4[i3];

        virtualinvoke r1.<android.os.Parcel: void writeIntArray(int[])>($r5);

        i3 = i3 + 1;

        goto label2;

     label3:
        $r3 = r0.<android.content.res.ColorStateList: int[] mColors>;

        virtualinvoke r1.<android.os.Parcel: void writeIntArray(int[])>($r3);

        return;
    }
}
