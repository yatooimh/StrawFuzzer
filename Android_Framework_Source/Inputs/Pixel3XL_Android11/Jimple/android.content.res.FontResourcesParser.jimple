public class android.content.res.FontResourcesParser extends java.lang.Object
{
    private static final java.lang.String TAG;

    public void <init>()
    {
        android.content.res.FontResourcesParser r0;

        r0 := @this: android.content.res.FontResourcesParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static android.content.res.FontResourcesParser$FamilyResourceEntry parse(org.xmlpull.v1.XmlPullParser, android.content.res.Resources) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser r0;
        android.content.res.Resources r1;
        int i0;
        android.content.res.FontResourcesParser$FamilyResourceEntry $r3;
        org.xmlpull.v1.XmlPullParserException r4;
        java.lang.Throwable r5;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: android.content.res.Resources;

     label1:
        i0 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i0 == 2 goto label2;

        if i0 == 1 goto label2;

        goto label1;

     label2:
        if i0 != 2 goto label3;

        $r3 = staticinvoke <android.content.res.FontResourcesParser: android.content.res.FontResourcesParser$FamilyResourceEntry readFamilies(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)>(r0, r1);

        return $r3;

     label3:
        r4 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke r4.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("No start tag found");

        r5 = (java.lang.Throwable) r4;

        throw r5;
    }

    private static android.content.res.FontResourcesParser$FamilyResourceEntry readFamilies(org.xmlpull.v1.XmlPullParser, android.content.res.Resources) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser r0;
        android.content.res.Resources r1;
        java.lang.String $r2;
        boolean $z0;
        android.content.res.FontResourcesParser$FamilyResourceEntry $r3;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: android.content.res.Resources;

        interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: void require(int,java.lang.String,java.lang.String)>(2, null, "font-family");

        $r2 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("font-family");

        if $z0 == 0 goto label1;

        $r3 = staticinvoke <android.content.res.FontResourcesParser: android.content.res.FontResourcesParser$FamilyResourceEntry readFamily(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)>(r0, r1);

        return $r3;

     label1:
        staticinvoke <android.content.res.FontResourcesParser: void skip(org.xmlpull.v1.XmlPullParser)>(r0);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("FontResourcesParser", "Failed to find font-family tag");

        return null;
    }

    private static android.content.res.FontResourcesParser$FamilyResourceEntry readFamily(org.xmlpull.v1.XmlPullParser, android.content.res.Resources) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.res.Resources r0;
        java.lang.String r1, r2, $r10, r18;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, $i9;
        android.content.res.TypedArray r3, r17;
        android.util.AttributeSet $r4;
        int[] $r5;
        boolean $z0, $z1, z2;
        android.content.res.FontResourcesParser$FontFamilyFilesResourceEntry $r6;
        android.content.res.FontResourcesParser$FontFileResourceEntry[] $r7, $r9;
        java.lang.Object[] $r8;
        java.util.ArrayList $r11, r19, $r21;
        java.lang.String[] $r12, $r14;
        java.util.List $r13, $r15;
        org.xmlpull.v1.XmlPullParser r16;
        android.content.res.FontResourcesParser$ProviderResourceEntry $r20;
        android.content.res.FontResourcesParser$FontFileResourceEntry r23;

        r16 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r0 := @parameter1: android.content.res.Resources;

        $r4 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>(r16);

        $r5 = <com.android.internal.R$styleable: int[] FontFamily>;

        r17 = virtualinvoke r0.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>($r4, $r5);

        r1 = virtualinvoke r17.<android.content.res.TypedArray: java.lang.String getString(int)>(0);

        r2 = virtualinvoke r17.<android.content.res.TypedArray: java.lang.String getString(int)>(2);

        z2 = 1;

        r18 = virtualinvoke r17.<android.content.res.TypedArray: java.lang.String getString(int)>(1);

        i0 = virtualinvoke r17.<android.content.res.TypedArray: int getResourceId(int,int)>(3, 0);

        virtualinvoke r17.<android.content.res.TypedArray: void recycle()>();

        if r1 == null goto label09;

        if r2 == null goto label09;

        if r18 == null goto label09;

     label01:
        $i3 = interfaceinvoke r16.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i3 == 3 goto label02;

        staticinvoke <android.content.res.FontResourcesParser: void skip(org.xmlpull.v1.XmlPullParser)>(r16);

        goto label01;

     label02:
        r19 = null;

        if i0 == 0 goto label08;

        r3 = virtualinvoke r0.<android.content.res.Resources: android.content.res.TypedArray obtainTypedArray(int)>(i0);

        r19 = null;

        $i4 = virtualinvoke r3.<android.content.res.TypedArray: int length()>();

        if $i4 <= 0 goto label08;

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        r19 = $r11;

        $i5 = virtualinvoke r3.<android.content.res.TypedArray: int getResourceId(int,int)>(0, 0);

        if $i5 == 0 goto label03;

        goto label04;

     label03:
        z2 = 0;

     label04:
        if z2 == 0 goto label07;

        i8 = 0;

     label05:
        $i6 = virtualinvoke r3.<android.content.res.TypedArray: int length()>();

        if i8 >= $i6 goto label06;

        $i7 = virtualinvoke r3.<android.content.res.TypedArray: int getResourceId(int,int)>(i8, 0);

        $r14 = virtualinvoke r0.<android.content.res.Resources: java.lang.String[] getStringArray(int)>($i7);

        $r15 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r14);

        interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>($r15);

        i8 = i8 + 1;

        goto label05;

     label06:
        goto label08;

     label07:
        $r12 = virtualinvoke r0.<android.content.res.Resources: java.lang.String[] getStringArray(int)>(i0);

        $r13 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r12);

        interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>($r13);

     label08:
        $r20 = new android.content.res.FontResourcesParser$ProviderResourceEntry;

        specialinvoke $r20.<android.content.res.FontResourcesParser$ProviderResourceEntry: void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.List)>(r1, r2, r18, r19);

        return $r20;

     label09:
        $r21 = new java.util.ArrayList;

        specialinvoke $r21.<java.util.ArrayList: void <init>()>();

     label10:
        $i9 = interfaceinvoke r16.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i9 == 3 goto label15;

        $i2 = interfaceinvoke r16.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

        if $i2 == 2 goto label11;

        goto label10;

     label11:
        $r10 = interfaceinvoke r16.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>("font");

        if $z1 == 0 goto label13;

        r23 = staticinvoke <android.content.res.FontResourcesParser: android.content.res.FontResourcesParser$FontFileResourceEntry readFont(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)>(r16, r0);

        if r23 == null goto label12;

        interfaceinvoke $r21.<java.util.List: boolean add(java.lang.Object)>(r23);

     label12:
        goto label14;

     label13:
        staticinvoke <android.content.res.FontResourcesParser: void skip(org.xmlpull.v1.XmlPullParser)>(r16);

     label14:
        goto label10;

     label15:
        $z0 = interfaceinvoke $r21.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label16;

        return null;

     label16:
        $r6 = new android.content.res.FontResourcesParser$FontFamilyFilesResourceEntry;

        $i1 = interfaceinvoke $r21.<java.util.List: int size()>();

        $r7 = newarray (android.content.res.FontResourcesParser$FontFileResourceEntry)[$i1];

        $r8 = interfaceinvoke $r21.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r7);

        $r9 = (android.content.res.FontResourcesParser$FontFileResourceEntry[]) $r8;

        specialinvoke $r6.<android.content.res.FontResourcesParser$FontFamilyFilesResourceEntry: void <init>(android.content.res.FontResourcesParser$FontFileResourceEntry[])>($r9);

        return $r6;
    }

    private static android.content.res.FontResourcesParser$FontFileResourceEntry readFont(org.xmlpull.v1.XmlPullParser, android.content.res.Resources) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser r0;
        int i0, i1, i2, $i3;
        java.lang.String r1, r2;
        android.util.AttributeSet $r3;
        int[] $r4;
        android.content.res.FontResourcesParser$FontFileResourceEntry $r5;
        android.content.res.Resources r6;
        android.content.res.TypedArray r7;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r6 := @parameter1: android.content.res.Resources;

        $r3 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>(r0);

        $r4 = <com.android.internal.R$styleable: int[] FontFamilyFont>;

        r7 = virtualinvoke r6.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>($r3, $r4);

        i0 = virtualinvoke r7.<android.content.res.TypedArray: int getInt(int,int)>(1, -1);

        i1 = virtualinvoke r7.<android.content.res.TypedArray: int getInt(int,int)>(2, -1);

        r1 = virtualinvoke r7.<android.content.res.TypedArray: java.lang.String getString(int)>(4);

        i2 = virtualinvoke r7.<android.content.res.TypedArray: int getInt(int,int)>(3, 0);

        r2 = virtualinvoke r7.<android.content.res.TypedArray: java.lang.String getString(int)>(0);

        virtualinvoke r7.<android.content.res.TypedArray: void recycle()>();

     label1:
        $i3 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i3 == 3 goto label2;

        staticinvoke <android.content.res.FontResourcesParser: void skip(org.xmlpull.v1.XmlPullParser)>(r0);

        goto label1;

     label2:
        if r2 != null goto label3;

        return null;

     label3:
        $r5 = new android.content.res.FontResourcesParser$FontFileResourceEntry;

        specialinvoke $r5.<android.content.res.FontResourcesParser$FontFileResourceEntry: void <init>(java.lang.String,int,int,java.lang.String,int)>(r2, i0, i1, r1, i2);

        return $r5;
    }

    private static void skip(org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser r0;
        int i0, i1;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        i1 = 1;

     label1:
        if i1 <= 0 goto label5;

        i0 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i0 == 2 goto label3;

        if i0 == 3 goto label2;

        goto label4;

     label2:
        i1 = i1 + -1;

        goto label4;

     label3:
        i1 = i1 + 1;

     label4:
        goto label1;

     label5:
        return;
    }

    public static void <clinit>()
    {
        <android.content.res.FontResourcesParser: java.lang.String TAG> = "FontResourcesParser";

        return;
    }
}
