public class android.content.res.GradientColor extends android.content.res.ComplexColor
{
    private static final boolean DBG_GRADIENT;
    private static final java.lang.String TAG;
    private static final int TILE_MODE_CLAMP;
    private static final int TILE_MODE_MIRROR;
    private static final int TILE_MODE_REPEAT;
    private int mCenterColor;
    private float mCenterX;
    private float mCenterY;
    private int mChangingConfigurations;
    private int mDefaultColor;
    private int mEndColor;
    private float mEndX;
    private float mEndY;
    private android.content.res.GradientColor$GradientColorFactory mFactory;
    private float mGradientRadius;
    private int mGradientType;
    private boolean mHasCenterColor;
    private int[] mItemColors;
    private float[] mItemOffsets;
    private int[][] mItemsThemeAttrs;
    private android.graphics.Shader mShader;
    private int mStartColor;
    private float mStartX;
    private float mStartY;
    private int[] mThemeAttrs;
    private int mTileMode;

    private void <init>()
    {
        android.content.res.GradientColor r0;

        r0 := @this: android.content.res.GradientColor;

        specialinvoke r0.<android.content.res.ComplexColor: void <init>()>();

        r0.<android.content.res.GradientColor: android.graphics.Shader mShader> = null;

        r0.<android.content.res.GradientColor: int mGradientType> = 0;

        r0.<android.content.res.GradientColor: float mCenterX> = 0.0F;

        r0.<android.content.res.GradientColor: float mCenterY> = 0.0F;

        r0.<android.content.res.GradientColor: float mStartX> = 0.0F;

        r0.<android.content.res.GradientColor: float mStartY> = 0.0F;

        r0.<android.content.res.GradientColor: float mEndX> = 0.0F;

        r0.<android.content.res.GradientColor: float mEndY> = 0.0F;

        r0.<android.content.res.GradientColor: int mStartColor> = 0;

        r0.<android.content.res.GradientColor: int mCenterColor> = 0;

        r0.<android.content.res.GradientColor: int mEndColor> = 0;

        r0.<android.content.res.GradientColor: boolean mHasCenterColor> = 0;

        r0.<android.content.res.GradientColor: int mTileMode> = 0;

        r0.<android.content.res.GradientColor: float mGradientRadius> = 0.0F;

        return;
    }

    private void <init>(android.content.res.GradientColor)
    {
        android.content.res.GradientColor r0, r10;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        android.graphics.Shader $r1;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6;
        boolean $z0;
        java.lang.Object $r2, $r4, $r6, $r8;
        int[][] $r3, r14;
        int[] $r5, $r9, r11, r13;
        float[] $r7, r12;

        r0 := @this: android.content.res.GradientColor;

        r10 := @parameter0: android.content.res.GradientColor;

        specialinvoke r0.<android.content.res.ComplexColor: void <init>()>();

        r0.<android.content.res.GradientColor: android.graphics.Shader mShader> = null;

        r0.<android.content.res.GradientColor: int mGradientType> = 0;

        r0.<android.content.res.GradientColor: float mCenterX> = 0.0F;

        r0.<android.content.res.GradientColor: float mCenterY> = 0.0F;

        r0.<android.content.res.GradientColor: float mStartX> = 0.0F;

        r0.<android.content.res.GradientColor: float mStartY> = 0.0F;

        r0.<android.content.res.GradientColor: float mEndX> = 0.0F;

        r0.<android.content.res.GradientColor: float mEndY> = 0.0F;

        r0.<android.content.res.GradientColor: int mStartColor> = 0;

        r0.<android.content.res.GradientColor: int mCenterColor> = 0;

        r0.<android.content.res.GradientColor: int mEndColor> = 0;

        r0.<android.content.res.GradientColor: boolean mHasCenterColor> = 0;

        r0.<android.content.res.GradientColor: int mTileMode> = 0;

        r0.<android.content.res.GradientColor: float mGradientRadius> = 0.0F;

        if r10 == null goto label4;

        $i0 = r10.<android.content.res.GradientColor: int mChangingConfigurations>;

        r0.<android.content.res.GradientColor: int mChangingConfigurations> = $i0;

        $i1 = r10.<android.content.res.GradientColor: int mDefaultColor>;

        r0.<android.content.res.GradientColor: int mDefaultColor> = $i1;

        $r1 = r10.<android.content.res.GradientColor: android.graphics.Shader mShader>;

        r0.<android.content.res.GradientColor: android.graphics.Shader mShader> = $r1;

        $i2 = r10.<android.content.res.GradientColor: int mGradientType>;

        r0.<android.content.res.GradientColor: int mGradientType> = $i2;

        $f0 = r10.<android.content.res.GradientColor: float mCenterX>;

        r0.<android.content.res.GradientColor: float mCenterX> = $f0;

        $f1 = r10.<android.content.res.GradientColor: float mCenterY>;

        r0.<android.content.res.GradientColor: float mCenterY> = $f1;

        $f2 = r10.<android.content.res.GradientColor: float mStartX>;

        r0.<android.content.res.GradientColor: float mStartX> = $f2;

        $f3 = r10.<android.content.res.GradientColor: float mStartY>;

        r0.<android.content.res.GradientColor: float mStartY> = $f3;

        $f4 = r10.<android.content.res.GradientColor: float mEndX>;

        r0.<android.content.res.GradientColor: float mEndX> = $f4;

        $f5 = r10.<android.content.res.GradientColor: float mEndY>;

        r0.<android.content.res.GradientColor: float mEndY> = $f5;

        $i3 = r10.<android.content.res.GradientColor: int mStartColor>;

        r0.<android.content.res.GradientColor: int mStartColor> = $i3;

        $i4 = r10.<android.content.res.GradientColor: int mCenterColor>;

        r0.<android.content.res.GradientColor: int mCenterColor> = $i4;

        $i5 = r10.<android.content.res.GradientColor: int mEndColor>;

        r0.<android.content.res.GradientColor: int mEndColor> = $i5;

        $z0 = r10.<android.content.res.GradientColor: boolean mHasCenterColor>;

        r0.<android.content.res.GradientColor: boolean mHasCenterColor> = $z0;

        $f6 = r10.<android.content.res.GradientColor: float mGradientRadius>;

        r0.<android.content.res.GradientColor: float mGradientRadius> = $f6;

        $i6 = r10.<android.content.res.GradientColor: int mTileMode>;

        r0.<android.content.res.GradientColor: int mTileMode> = $i6;

        r11 = r10.<android.content.res.GradientColor: int[] mItemColors>;

        if r11 == null goto label1;

        $r8 = virtualinvoke r11.<java.lang.Object: java.lang.Object clone()>();

        $r9 = (int[]) $r8;

        r0.<android.content.res.GradientColor: int[] mItemColors> = $r9;

     label1:
        r12 = r10.<android.content.res.GradientColor: float[] mItemOffsets>;

        if r12 == null goto label2;

        $r6 = virtualinvoke r12.<java.lang.Object: java.lang.Object clone()>();

        $r7 = (float[]) $r6;

        r0.<android.content.res.GradientColor: float[] mItemOffsets> = $r7;

     label2:
        r13 = r10.<android.content.res.GradientColor: int[] mThemeAttrs>;

        if r13 == null goto label3;

        $r4 = virtualinvoke r13.<java.lang.Object: java.lang.Object clone()>();

        $r5 = (int[]) $r4;

        r0.<android.content.res.GradientColor: int[] mThemeAttrs> = $r5;

     label3:
        r14 = r10.<android.content.res.GradientColor: int[][] mItemsThemeAttrs>;

        if r14 == null goto label4;

        $r2 = virtualinvoke r14.<java.lang.Object: java.lang.Object clone()>();

        $r3 = (int[][]) $r2;

        r0.<android.content.res.GradientColor: int[][] mItemsThemeAttrs> = $r3;

     label4:
        return;
    }

    static int access$000(android.content.res.GradientColor)
    {
        android.content.res.GradientColor r0;
        int $i0;

        r0 := @parameter0: android.content.res.GradientColor;

        $i0 = r0.<android.content.res.GradientColor: int mChangingConfigurations>;

        return $i0;
    }

    private void applyItemsAttrsTheme(android.content.res.Resources$Theme)
    {
        android.content.res.GradientColor r0;
        android.content.res.Resources$Theme r1;
        int[][] r2, $r4;
        int i0, $i1, $i2, $i3, $i4, $i5, i6;
        android.content.res.TypedArray r3;
        int[] $r5, $r6, $r7, $r8, $r9, $r10, r11;
        float $f0, $f1;
        boolean z0, z1;
        float[] r12;

        r0 := @this: android.content.res.GradientColor;

        r1 := @parameter0: android.content.res.Resources$Theme;

        $r4 = r0.<android.content.res.GradientColor: int[][] mItemsThemeAttrs>;

        if $r4 != null goto label1;

        return;

     label1:
        z0 = 0;

        r2 = r0.<android.content.res.GradientColor: int[][] mItemsThemeAttrs>;

        i0 = lengthof r2;

        i6 = 0;

     label2:
        if i6 >= i0 goto label5;

        z1 = z0;

        $r5 = r2[i6];

        if $r5 == null goto label4;

        $r7 = r2[i6];

        $r6 = <com.android.internal.R$styleable: int[] GradientColorItem>;

        r3 = virtualinvoke r1.<android.content.res.Resources$Theme: android.content.res.TypedArray resolveAttributes(int[],int[])>($r7, $r6);

        $r8 = r2[i6];

        $r9 = virtualinvoke r3.<android.content.res.TypedArray: int[] extractThemeAttrs(int[])>($r8);

        r2[i6] = $r9;

        $r10 = r2[i6];

        if $r10 == null goto label3;

        z0 = 1;

     label3:
        r11 = r0.<android.content.res.GradientColor: int[] mItemColors>;

        $i1 = r11[i6];

        $i2 = virtualinvoke r3.<android.content.res.TypedArray: int getColor(int,int)>(0, $i1);

        r11[i6] = $i2;

        r12 = r0.<android.content.res.GradientColor: float[] mItemOffsets>;

        $f0 = r12[i6];

        $f1 = virtualinvoke r3.<android.content.res.TypedArray: float getFloat(int,float)>(1, $f0);

        r12[i6] = $f1;

        $i3 = r0.<android.content.res.GradientColor: int mChangingConfigurations>;

        $i4 = virtualinvoke r3.<android.content.res.TypedArray: int getChangingConfigurations()>();

        $i5 = $i3 | $i4;

        r0.<android.content.res.GradientColor: int mChangingConfigurations> = $i5;

        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        z1 = z0;

     label4:
        i6 = i6 + 1;

        z0 = z1;

        goto label2;

     label5:
        if z0 != 0 goto label6;

        r0.<android.content.res.GradientColor: int[][] mItemsThemeAttrs> = null;

     label6:
        return;
    }

    private void applyRootAttrsTheme(android.content.res.Resources$Theme)
    {
        android.content.res.GradientColor r0;
        int[] $r1, $r2, $r3, $r4;
        int $i0, $i1, $i2;
        android.content.res.Resources$Theme r5;
        android.content.res.TypedArray r6;

        r0 := @this: android.content.res.GradientColor;

        r5 := @parameter0: android.content.res.Resources$Theme;

        $r2 = r0.<android.content.res.GradientColor: int[] mThemeAttrs>;

        $r1 = <com.android.internal.R$styleable: int[] GradientColor>;

        r6 = virtualinvoke r5.<android.content.res.Resources$Theme: android.content.res.TypedArray resolveAttributes(int[],int[])>($r2, $r1);

        $r3 = r0.<android.content.res.GradientColor: int[] mThemeAttrs>;

        $r4 = virtualinvoke r6.<android.content.res.TypedArray: int[] extractThemeAttrs(int[])>($r3);

        r0.<android.content.res.GradientColor: int[] mThemeAttrs> = $r4;

        specialinvoke r0.<android.content.res.GradientColor: void updateRootElementState(android.content.res.TypedArray)>(r6);

        $i0 = r0.<android.content.res.GradientColor: int mChangingConfigurations>;

        $i1 = virtualinvoke r6.<android.content.res.TypedArray: int getChangingConfigurations()>();

        $i2 = $i0 | $i1;

        r0.<android.content.res.GradientColor: int mChangingConfigurations> = $i2;

        virtualinvoke r6.<android.content.res.TypedArray: void recycle()>();

        return;
    }

    private void applyTheme(android.content.res.Resources$Theme)
    {
        android.content.res.GradientColor r0;
        android.content.res.Resources$Theme r1;
        int[] $r2;
        int[][] $r3;

        r0 := @this: android.content.res.GradientColor;

        r1 := @parameter0: android.content.res.Resources$Theme;

        $r2 = r0.<android.content.res.GradientColor: int[] mThemeAttrs>;

        if $r2 == null goto label1;

        specialinvoke r0.<android.content.res.GradientColor: void applyRootAttrsTheme(android.content.res.Resources$Theme)>(r1);

     label1:
        $r3 = r0.<android.content.res.GradientColor: int[][] mItemsThemeAttrs>;

        if $r3 == null goto label2;

        specialinvoke r0.<android.content.res.GradientColor: void applyItemsAttrsTheme(android.content.res.Resources$Theme)>(r1);

     label2:
        specialinvoke r0.<android.content.res.GradientColor: void onColorsChange()>();

        return;
    }

    public static android.content.res.GradientColor createFromXml(android.content.res.Resources, android.content.res.XmlResourceParser, android.content.res.Resources$Theme) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.res.Resources r0;
        android.content.res.XmlResourceParser r1;
        android.content.res.Resources$Theme r2;
        android.util.AttributeSet r3;
        int i0;
        android.content.res.GradientColor $r5;
        org.xmlpull.v1.XmlPullParserException r6;
        java.lang.Throwable r7;

        r0 := @parameter0: android.content.res.Resources;

        r1 := @parameter1: android.content.res.XmlResourceParser;

        r2 := @parameter2: android.content.res.Resources$Theme;

        r3 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>(r1);

     label1:
        i0 = interfaceinvoke r1.<android.content.res.XmlResourceParser: int next()>();

        if i0 == 2 goto label2;

        if i0 == 1 goto label2;

        goto label1;

     label2:
        if i0 != 2 goto label3;

        $r5 = staticinvoke <android.content.res.GradientColor: android.content.res.GradientColor createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>(r0, r1, r3, r2);

        return $r5;

     label3:
        r6 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke r6.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("No start tag found");

        r7 = (java.lang.Throwable) r6;

        throw r7;
    }

    static android.content.res.GradientColor createFromXmlInner(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser r0;
        android.util.AttributeSet r1;
        android.content.res.Resources$Theme r2;
        boolean $z0;
        java.lang.String $r4, $r9, r12;
        android.content.res.Resources r11;
        android.content.res.GradientColor r15;
        java.lang.StringBuilder r16;
        org.xmlpull.v1.XmlPullParserException r17;
        java.lang.Throwable r18;

        r11 := @parameter0: android.content.res.Resources;

        r0 := @parameter1: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter2: android.util.AttributeSet;

        r2 := @parameter3: android.content.res.Resources$Theme;

        r12 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke r12.<java.lang.String: boolean equals(java.lang.Object)>("gradient");

        if $z0 == 0 goto label1;

        r15 = new android.content.res.GradientColor;

        specialinvoke r15.<android.content.res.GradientColor: void <init>()>();

        specialinvoke r15.<android.content.res.GradientColor: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>(r11, r0, r1, r2);

        return r15;

     label1:
        r16 = new java.lang.StringBuilder;

        specialinvoke r16.<java.lang.StringBuilder: void <init>()>();

        $r4 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": invalid gradient color tag ");

        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12);

        r17 = new org.xmlpull.v1.XmlPullParserException;

        $r9 = virtualinvoke r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r17.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r9);

        r18 = (java.lang.Throwable) r17;

        throw r18;
    }

    private void inflate(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.res.GradientColor r0;
        android.content.res.Resources r1;
        org.xmlpull.v1.XmlPullParser r2;
        android.util.AttributeSet r3;
        android.content.res.Resources$Theme r4;
        android.content.res.TypedArray r5;
        int[] $r6;
        int $i0, $i1, $i2;

        r0 := @this: android.content.res.GradientColor;

        r1 := @parameter0: android.content.res.Resources;

        r2 := @parameter1: org.xmlpull.v1.XmlPullParser;

        r3 := @parameter2: android.util.AttributeSet;

        r4 := @parameter3: android.content.res.Resources$Theme;

        $r6 = <com.android.internal.R$styleable: int[] GradientColor>;

        r5 = staticinvoke <android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>(r1, r4, r3, $r6);

        specialinvoke r0.<android.content.res.GradientColor: void updateRootElementState(android.content.res.TypedArray)>(r5);

        $i0 = r0.<android.content.res.GradientColor: int mChangingConfigurations>;

        $i1 = virtualinvoke r5.<android.content.res.TypedArray: int getChangingConfigurations()>();

        $i2 = $i0 | $i1;

        r0.<android.content.res.GradientColor: int mChangingConfigurations> = $i2;

        virtualinvoke r5.<android.content.res.TypedArray: void recycle()>();

        specialinvoke r0.<android.content.res.GradientColor: void validateXmlContent()>();

        specialinvoke r0.<android.content.res.GradientColor: void inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>(r1, r2, r3, r4);

        specialinvoke r0.<android.content.res.GradientColor: void onColorsChange()>();

        return;
    }

    private void inflateChildElements(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.res.GradientColor r0;
        org.xmlpull.v1.XmlPullParser r1;
        android.util.AttributeSet r2;
        android.content.res.Resources$Theme r3;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9, i10;
        android.content.res.TypedArray r4;
        boolean z0, z1, $z2, z3;
        int[] r5, $r9, r19, r23;
        float f0;
        float[] $r6, $r7, r18;
        java.lang.String $r8, $r11, $r15;
        java.lang.Object[] $r16;
        android.content.res.Resources r17;
        int[][] r20, r22;
        java.lang.StringBuilder r24;
        org.xmlpull.v1.XmlPullParserException r25;
        java.lang.Throwable r26;

        r0 := @this: android.content.res.GradientColor;

        r17 := @parameter0: android.content.res.Resources;

        r1 := @parameter1: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter2: android.util.AttributeSet;

        r3 := @parameter3: android.content.res.Resources$Theme;

        $i2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        i0 = $i2 + 1;

        r18 = newarray (float)[20];

        $i3 = lengthof r18;

        r19 = newarray (int)[$i3];

        $i4 = lengthof r18;

        r20 = newarray (int[])[$i4];

        i8 = 0;

        z3 = 0;

     label01:
        i1 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i1 == 1 goto label09;

        i9 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if i9 >= i0 goto label03;

        if i1 == 3 goto label02;

        goto label03;

     label02:
        goto label09;

     label03:
        if i1 == 2 goto label04;

        goto label08;

     label04:
        if i9 > i0 goto label08;

        $r8 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z2 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z2 != 0 goto label05;

        goto label08;

     label05:
        $r9 = <com.android.internal.R$styleable: int[] GradientColorItem>;

        r4 = staticinvoke <android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>(r17, r3, r2, $r9);

        z0 = virtualinvoke r4.<android.content.res.TypedArray: boolean hasValue(int)>(0);

        z1 = virtualinvoke r4.<android.content.res.TypedArray: boolean hasValue(int)>(1);

        if z0 == 0 goto label07;

        if z1 == 0 goto label07;

        r5 = virtualinvoke r4.<android.content.res.TypedArray: int[] extractThemeAttrs()>();

        i10 = virtualinvoke r4.<android.content.res.TypedArray: int getColor(int,int)>(0, 0);

        f0 = virtualinvoke r4.<android.content.res.TypedArray: float getFloat(int,float)>(1, 0.0F);

        $i5 = r0.<android.content.res.GradientColor: int mChangingConfigurations>;

        $i6 = virtualinvoke r4.<android.content.res.TypedArray: int getChangingConfigurations()>();

        $i7 = $i5 | $i6;

        r0.<android.content.res.GradientColor: int mChangingConfigurations> = $i7;

        virtualinvoke r4.<android.content.res.TypedArray: void recycle()>();

        if r5 == null goto label06;

        z3 = 1;

     label06:
        r19 = staticinvoke <com.android.internal.util.GrowingArrayUtils: int[] append(int[],int,int)>(r19, i8, i10);

        r18 = staticinvoke <com.android.internal.util.GrowingArrayUtils: float[] append(float[],int,float)>(r18, i8, f0);

        $r16 = staticinvoke <com.android.internal.util.GrowingArrayUtils: java.lang.Object[] append(java.lang.Object[],int,java.lang.Object)>(r20, i8, r5);

        r20 = (int[][]) $r16;

        i8 = i8 + 1;

        goto label01;

     label07:
        r24 = new java.lang.StringBuilder;

        specialinvoke r24.<java.lang.StringBuilder: void <init>()>();

        $r11 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": <item> tag requires a \'color\' attribute and a \'offset\' attribute!");

        r25 = new org.xmlpull.v1.XmlPullParserException;

        $r15 = virtualinvoke r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r25.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r15);

        r26 = (java.lang.Throwable) r25;

        throw r26;

     label08:
        goto label01;

     label09:
        if i8 <= 0 goto label12;

        if z3 == 0 goto label10;

        r22 = newarray (int[])[i8];

        r0.<android.content.res.GradientColor: int[][] mItemsThemeAttrs> = r22;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r20, 0, r22, 0, i8);

        goto label11;

     label10:
        r0.<android.content.res.GradientColor: int[][] mItemsThemeAttrs> = null;

     label11:
        r23 = newarray (int)[i8];

        r0.<android.content.res.GradientColor: int[] mItemColors> = r23;

        $r6 = newarray (float)[i8];

        r0.<android.content.res.GradientColor: float[] mItemOffsets> = $r6;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r19, 0, r23, 0, i8);

        $r7 = r0.<android.content.res.GradientColor: float[] mItemOffsets>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r18, 0, $r7, 0, i8);

     label12:
        return;
    }

    private void onColorsChange()
    {
        android.content.res.GradientColor r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i7, $i8, $i9, $i10, i11, $i12, i13, $i14;
        boolean $z0;
        android.graphics.SweepGradient $r2;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9;
        android.graphics.RadialGradient $r3;
        android.graphics.Shader$TileMode $r4, $r6;
        android.graphics.LinearGradient $r5;
        java.lang.StringBuilder $r7;
        java.lang.String $r12;
        int[] $r13, r16, r17;
        float[] $r14, r15;

        r0 := @this: android.content.res.GradientColor;

        r15 = null;

        r16 = r0.<android.content.res.GradientColor: int[] mItemColors>;

        if r16 == null goto label3;

        i0 = lengthof r16;

        r17 = newarray (int)[i0];

        r15 = newarray (float)[i0];

        i11 = 0;

     label1:
        if i11 >= i0 goto label2;

        $r13 = r0.<android.content.res.GradientColor: int[] mItemColors>;

        $i10 = $r13[i11];

        r17[i11] = $i10;

        $r14 = r0.<android.content.res.GradientColor: float[] mItemOffsets>;

        $f9 = $r14[i11];

        r15[i11] = $f9;

        i11 = i11 + 1;

        goto label1;

     label2:
        goto label5;

     label3:
        $z0 = r0.<android.content.res.GradientColor: boolean mHasCenterColor>;

        if $z0 == 0 goto label4;

        r17 = newarray (int)[3];

        $i7 = r0.<android.content.res.GradientColor: int mStartColor>;

        r17[0] = $i7;

        $i8 = r0.<android.content.res.GradientColor: int mCenterColor>;

        r17[1] = $i8;

        $i9 = r0.<android.content.res.GradientColor: int mEndColor>;

        r17[2] = $i9;

        r15 = newarray (float)[3];

        r15[0] = 0.0F;

        r15[1] = 0.5F;

        r15[2] = 1.0F;

        goto label5;

     label4:
        r17 = newarray (int)[2];

        $i1 = r0.<android.content.res.GradientColor: int mStartColor>;

        r17[0] = $i1;

        $i2 = r0.<android.content.res.GradientColor: int mEndColor>;

        r17[1] = $i2;

     label5:
        $i12 = lengthof r17;

        if $i12 >= 2 goto label6;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<gradient> tag requires 2 color values specified!");

        $i5 = lengthof r17;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r17);

        $r12 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("GradientColor", $r12);

     label6:
        i13 = r0.<android.content.res.GradientColor: int mGradientType>;

        if i13 != 0 goto label7;

        $r5 = new android.graphics.LinearGradient;

        $f5 = r0.<android.content.res.GradientColor: float mStartX>;

        $f6 = r0.<android.content.res.GradientColor: float mStartY>;

        $f7 = r0.<android.content.res.GradientColor: float mEndX>;

        $f8 = r0.<android.content.res.GradientColor: float mEndY>;

        $i4 = r0.<android.content.res.GradientColor: int mTileMode>;

        $r6 = staticinvoke <android.content.res.GradientColor: android.graphics.Shader$TileMode parseTileMode(int)>($i4);

        specialinvoke $r5.<android.graphics.LinearGradient: void <init>(float,float,float,float,int[],float[],android.graphics.Shader$TileMode)>($f5, $f6, $f7, $f8, r17, r15, $r6);

        r0.<android.content.res.GradientColor: android.graphics.Shader mShader> = $r5;

        goto label9;

     label7:
        if i13 != 1 goto label8;

        $r3 = new android.graphics.RadialGradient;

        $f2 = r0.<android.content.res.GradientColor: float mCenterX>;

        $f3 = r0.<android.content.res.GradientColor: float mCenterY>;

        $f4 = r0.<android.content.res.GradientColor: float mGradientRadius>;

        $i3 = r0.<android.content.res.GradientColor: int mTileMode>;

        $r4 = staticinvoke <android.content.res.GradientColor: android.graphics.Shader$TileMode parseTileMode(int)>($i3);

        specialinvoke $r3.<android.graphics.RadialGradient: void <init>(float,float,float,int[],float[],android.graphics.Shader$TileMode)>($f2, $f3, $f4, r17, r15, $r4);

        r0.<android.content.res.GradientColor: android.graphics.Shader mShader> = $r3;

        goto label9;

     label8:
        $r2 = new android.graphics.SweepGradient;

        $f1 = r0.<android.content.res.GradientColor: float mCenterX>;

        $f0 = r0.<android.content.res.GradientColor: float mCenterY>;

        specialinvoke $r2.<android.graphics.SweepGradient: void <init>(float,float,int[],float[])>($f1, $f0, r17, r15);

        r0.<android.content.res.GradientColor: android.graphics.Shader mShader> = $r2;

     label9:
        $i14 = r17[0];

        r0.<android.content.res.GradientColor: int mDefaultColor> = $i14;

        return;
    }

    private static android.graphics.Shader$TileMode parseTileMode(int)
    {
        int i0;
        android.graphics.Shader$TileMode $r0, $r1, $r2, $r3;

        i0 := @parameter0: int;

        if i0 == 0 goto label3;

        if i0 == 1 goto label2;

        if i0 == 2 goto label1;

        $r3 = <android.graphics.Shader$TileMode: android.graphics.Shader$TileMode CLAMP>;

        return $r3;

     label1:
        $r2 = <android.graphics.Shader$TileMode: android.graphics.Shader$TileMode MIRROR>;

        return $r2;

     label2:
        $r1 = <android.graphics.Shader$TileMode: android.graphics.Shader$TileMode REPEAT>;

        return $r1;

     label3:
        $r0 = <android.graphics.Shader$TileMode: android.graphics.Shader$TileMode CLAMP>;

        return $r0;
    }

    private void updateRootElementState(android.content.res.TypedArray)
    {
        android.content.res.GradientColor r0;
        android.content.res.TypedArray r1;
        int[] $r2;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        boolean $z0, $z1, $z2;

        r0 := @this: android.content.res.GradientColor;

        r1 := @parameter0: android.content.res.TypedArray;

        $r2 = virtualinvoke r1.<android.content.res.TypedArray: int[] extractThemeAttrs()>();

        r0.<android.content.res.GradientColor: int[] mThemeAttrs> = $r2;

        $f0 = r0.<android.content.res.GradientColor: float mStartX>;

        $f1 = virtualinvoke r1.<android.content.res.TypedArray: float getFloat(int,float)>(8, $f0);

        r0.<android.content.res.GradientColor: float mStartX> = $f1;

        $f2 = r0.<android.content.res.GradientColor: float mStartY>;

        $f3 = virtualinvoke r1.<android.content.res.TypedArray: float getFloat(int,float)>(9, $f2);

        r0.<android.content.res.GradientColor: float mStartY> = $f3;

        $f4 = r0.<android.content.res.GradientColor: float mEndX>;

        $f5 = virtualinvoke r1.<android.content.res.TypedArray: float getFloat(int,float)>(10, $f4);

        r0.<android.content.res.GradientColor: float mEndX> = $f5;

        $f6 = r0.<android.content.res.GradientColor: float mEndY>;

        $f7 = virtualinvoke r1.<android.content.res.TypedArray: float getFloat(int,float)>(11, $f6);

        r0.<android.content.res.GradientColor: float mEndY> = $f7;

        $f8 = r0.<android.content.res.GradientColor: float mCenterX>;

        $f9 = virtualinvoke r1.<android.content.res.TypedArray: float getFloat(int,float)>(3, $f8);

        r0.<android.content.res.GradientColor: float mCenterX> = $f9;

        $f10 = r0.<android.content.res.GradientColor: float mCenterY>;

        $f11 = virtualinvoke r1.<android.content.res.TypedArray: float getFloat(int,float)>(4, $f10);

        r0.<android.content.res.GradientColor: float mCenterY> = $f11;

        $i0 = r0.<android.content.res.GradientColor: int mGradientType>;

        $i1 = virtualinvoke r1.<android.content.res.TypedArray: int getInt(int,int)>(2, $i0);

        r0.<android.content.res.GradientColor: int mGradientType> = $i1;

        $i2 = r0.<android.content.res.GradientColor: int mStartColor>;

        $i3 = virtualinvoke r1.<android.content.res.TypedArray: int getColor(int,int)>(0, $i2);

        r0.<android.content.res.GradientColor: int mStartColor> = $i3;

        $z0 = r0.<android.content.res.GradientColor: boolean mHasCenterColor>;

        $z1 = virtualinvoke r1.<android.content.res.TypedArray: boolean hasValue(int)>(7);

        $z2 = $z0 | $z1;

        r0.<android.content.res.GradientColor: boolean mHasCenterColor> = $z2;

        $i4 = r0.<android.content.res.GradientColor: int mCenterColor>;

        $i5 = virtualinvoke r1.<android.content.res.TypedArray: int getColor(int,int)>(7, $i4);

        r0.<android.content.res.GradientColor: int mCenterColor> = $i5;

        $i6 = r0.<android.content.res.GradientColor: int mEndColor>;

        $i7 = virtualinvoke r1.<android.content.res.TypedArray: int getColor(int,int)>(1, $i6);

        r0.<android.content.res.GradientColor: int mEndColor> = $i7;

        $i8 = r0.<android.content.res.GradientColor: int mTileMode>;

        $i9 = virtualinvoke r1.<android.content.res.TypedArray: int getInt(int,int)>(6, $i8);

        r0.<android.content.res.GradientColor: int mTileMode> = $i9;

        $f12 = r0.<android.content.res.GradientColor: float mGradientRadius>;

        $f13 = virtualinvoke r1.<android.content.res.TypedArray: float getFloat(int,float)>(5, $f12);

        r0.<android.content.res.GradientColor: float mGradientRadius> = $f13;

        return;
    }

    private void validateXmlContent() throws org.xmlpull.v1.XmlPullParserException
    {
        android.content.res.GradientColor r0;
        float $f0;
        byte $b0;
        int $i1;
        org.xmlpull.v1.XmlPullParserException r2;
        java.lang.Throwable r3;

        r0 := @this: android.content.res.GradientColor;

        $f0 = r0.<android.content.res.GradientColor: float mGradientRadius>;

        $b0 = $f0 cmpg 0.0F;

        if $b0 > 0 goto label2;

        $i1 = r0.<android.content.res.GradientColor: int mGradientType>;

        if $i1 == 1 goto label1;

        goto label2;

     label1:
        r2 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke r2.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("<gradient> tag requires \'gradientRadius\' attribute with radial type");

        r3 = (java.lang.Throwable) r2;

        throw r3;

     label2:
        return;
    }

    public boolean canApplyTheme()
    {
        android.content.res.GradientColor r0;
        int[] $r1;
        int[][] $r2;
        boolean z0;

        r0 := @this: android.content.res.GradientColor;

        $r1 = r0.<android.content.res.GradientColor: int[] mThemeAttrs>;

        if $r1 != null goto label2;

        $r2 = r0.<android.content.res.GradientColor: int[][] mItemsThemeAttrs>;

        if $r2 == null goto label1;

        goto label2;

     label1:
        z0 = 0;

        goto label3;

     label2:
        z0 = 1;

     label3:
        return z0;
    }

    public int getChangingConfigurations()
    {
        android.content.res.GradientColor r0;
        int $i0, $i1, $i2;

        r0 := @this: android.content.res.GradientColor;

        $i0 = specialinvoke r0.<android.content.res.ComplexColor: int getChangingConfigurations()>();

        $i1 = r0.<android.content.res.GradientColor: int mChangingConfigurations>;

        $i2 = $i0 | $i1;

        return $i2;
    }

    public android.content.res.ConstantState getConstantState()
    {
        android.content.res.GradientColor r0;
        android.content.res.GradientColor$GradientColorFactory $r1, $r2, $r3;

        r0 := @this: android.content.res.GradientColor;

        $r1 = r0.<android.content.res.GradientColor: android.content.res.GradientColor$GradientColorFactory mFactory>;

        if $r1 != null goto label1;

        $r3 = new android.content.res.GradientColor$GradientColorFactory;

        specialinvoke $r3.<android.content.res.GradientColor$GradientColorFactory: void <init>(android.content.res.GradientColor)>(r0);

        r0.<android.content.res.GradientColor: android.content.res.GradientColor$GradientColorFactory mFactory> = $r3;

     label1:
        $r2 = r0.<android.content.res.GradientColor: android.content.res.GradientColor$GradientColorFactory mFactory>;

        return $r2;
    }

    public int getDefaultColor()
    {
        android.content.res.GradientColor r0;
        int $i0;

        r0 := @this: android.content.res.GradientColor;

        $i0 = r0.<android.content.res.GradientColor: int mDefaultColor>;

        return $i0;
    }

    public android.graphics.Shader getShader()
    {
        android.content.res.GradientColor r0;
        android.graphics.Shader $r1;

        r0 := @this: android.content.res.GradientColor;

        $r1 = r0.<android.content.res.GradientColor: android.graphics.Shader mShader>;

        return $r1;
    }

    public volatile android.content.res.ComplexColor obtainForTheme(android.content.res.Resources$Theme)
    {
        android.content.res.GradientColor r0, $r2;
        android.content.res.Resources$Theme r1;

        r0 := @this: android.content.res.GradientColor;

        r1 := @parameter0: android.content.res.Resources$Theme;

        $r2 = virtualinvoke r0.<android.content.res.GradientColor: android.content.res.GradientColor obtainForTheme(android.content.res.Resources$Theme)>(r1);

        return $r2;
    }

    public android.content.res.GradientColor obtainForTheme(android.content.res.Resources$Theme)
    {
        android.content.res.GradientColor r0, $r3;
        android.content.res.Resources$Theme r1;
        boolean $z0;

        r0 := @this: android.content.res.GradientColor;

        r1 := @parameter0: android.content.res.Resources$Theme;

        if r1 == null goto label2;

        $z0 = virtualinvoke r0.<android.content.res.GradientColor: boolean canApplyTheme()>();

        if $z0 != 0 goto label1;

        goto label2;

     label1:
        $r3 = new android.content.res.GradientColor;

        specialinvoke $r3.<android.content.res.GradientColor: void <init>(android.content.res.GradientColor)>(r0);

        specialinvoke $r3.<android.content.res.GradientColor: void applyTheme(android.content.res.Resources$Theme)>(r1);

        return $r3;

     label2:
        return r0;
    }

    public static void <clinit>()
    {
        <android.content.res.GradientColor: int TILE_MODE_REPEAT> = 1;

        <android.content.res.GradientColor: int TILE_MODE_MIRROR> = 2;

        <android.content.res.GradientColor: int TILE_MODE_CLAMP> = 0;

        <android.content.res.GradientColor: java.lang.String TAG> = "GradientColor";

        <android.content.res.GradientColor: boolean DBG_GRADIENT> = 0;

        return;
    }
}
