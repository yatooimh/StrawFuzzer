public class android.content.res.Resources$AssetManagerUpdateHandler extends java.lang.Object implements android.content.res.Resources$UpdateCallbacks
{
    final android.content.res.Resources this$0;

    public void <init>(android.content.res.Resources)
    {
        android.content.res.Resources$AssetManagerUpdateHandler r0;
        android.content.res.Resources r1;

        r0 := @this: android.content.res.Resources$AssetManagerUpdateHandler;

        r1 := @parameter0: android.content.res.Resources;

        r0.<android.content.res.Resources$AssetManagerUpdateHandler: android.content.res.Resources this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onLoaderUpdated(android.content.res.loader.ResourcesLoader)
    {
        android.content.res.Resources$AssetManagerUpdateHandler r0;
        android.content.res.loader.ResourcesLoader r1;
        android.content.res.ResourcesImpl r2;
        android.content.res.AssetManager r3;
        android.content.res.Resources $r4;
        java.util.List $r5, $r6;
        boolean $z0;

        r0 := @this: android.content.res.Resources$AssetManagerUpdateHandler;

        r1 := @parameter0: android.content.res.loader.ResourcesLoader;

        $r4 = r0.<android.content.res.Resources$AssetManagerUpdateHandler: android.content.res.Resources this$0>;

        r2 = staticinvoke <android.content.res.Resources: android.content.res.ResourcesImpl access$000(android.content.res.Resources)>($r4);

        r3 = virtualinvoke r2.<android.content.res.ResourcesImpl: android.content.res.AssetManager getAssets()>();

        $r5 = virtualinvoke r3.<android.content.res.AssetManager: java.util.List getLoaders()>();

        $z0 = interfaceinvoke $r5.<java.util.List: boolean contains(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        virtualinvoke r2.<android.content.res.ResourcesImpl: void clearAllCaches()>();

        $r6 = virtualinvoke r3.<android.content.res.AssetManager: java.util.List getLoaders()>();

        virtualinvoke r3.<android.content.res.AssetManager: void setLoaders(java.util.List)>($r6);

     label1:
        return;
    }

    public void onLoadersChanged(android.content.res.Resources, java.util.List)
    {
        android.content.res.Resources$AssetManagerUpdateHandler r0;
        java.util.List r1;
        android.content.res.Resources $r2, $r3, r5;
        android.content.res.AssetManager $r4;
        boolean z0;
        android.content.res.ResourcesImpl r6;

        r0 := @this: android.content.res.Resources$AssetManagerUpdateHandler;

        r5 := @parameter0: android.content.res.Resources;

        r1 := @parameter1: java.util.List;

        $r2 = r0.<android.content.res.Resources$AssetManagerUpdateHandler: android.content.res.Resources this$0>;

        if $r2 != r5 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        staticinvoke <com.android.internal.util.Preconditions: void checkArgument(boolean)>(z0);

        $r3 = r0.<android.content.res.Resources$AssetManagerUpdateHandler: android.content.res.Resources this$0>;

        r6 = staticinvoke <android.content.res.Resources: android.content.res.ResourcesImpl access$000(android.content.res.Resources)>($r3);

        virtualinvoke r6.<android.content.res.ResourcesImpl: void clearAllCaches()>();

        $r4 = virtualinvoke r6.<android.content.res.ResourcesImpl: android.content.res.AssetManager getAssets()>();

        virtualinvoke $r4.<android.content.res.AssetManager: void setLoaders(java.util.List)>(r1);

        return;
    }
}
