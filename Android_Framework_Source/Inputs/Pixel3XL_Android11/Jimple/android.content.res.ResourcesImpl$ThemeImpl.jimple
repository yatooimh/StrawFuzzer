public class android.content.res.ResourcesImpl$ThemeImpl extends java.lang.Object
{
    private final android.content.res.AssetManager mAssets;
    private final android.content.res.Resources$ThemeKey mKey;
    private final long mTheme;
    private int mThemeResId;
    final android.content.res.ResourcesImpl this$0;

    void <init>(android.content.res.ResourcesImpl)
    {
        android.content.res.ResourcesImpl$ThemeImpl r0;
        android.content.res.Resources$ThemeKey $r1;
        long $l0;
        android.content.res.ResourcesImpl r2;
        android.content.res.AssetManager r3;

        r0 := @this: android.content.res.ResourcesImpl$ThemeImpl;

        r2 := @parameter0: android.content.res.ResourcesImpl;

        r0.<android.content.res.ResourcesImpl$ThemeImpl: android.content.res.ResourcesImpl this$0> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new android.content.res.Resources$ThemeKey;

        specialinvoke $r1.<android.content.res.Resources$ThemeKey: void <init>()>();

        r0.<android.content.res.ResourcesImpl$ThemeImpl: android.content.res.Resources$ThemeKey mKey> = $r1;

        r0.<android.content.res.ResourcesImpl$ThemeImpl: int mThemeResId> = 0;

        r3 = r2.<android.content.res.ResourcesImpl: android.content.res.AssetManager mAssets>;

        r0.<android.content.res.ResourcesImpl$ThemeImpl: android.content.res.AssetManager mAssets> = r3;

        $l0 = virtualinvoke r3.<android.content.res.AssetManager: long createTheme()>();

        r0.<android.content.res.ResourcesImpl$ThemeImpl: long mTheme> = $l0;

        return;
    }

    static android.content.res.Resources$ThemeKey access$000(android.content.res.ResourcesImpl$ThemeImpl)
    {
        android.content.res.ResourcesImpl$ThemeImpl r0;
        android.content.res.Resources$ThemeKey $r1;

        r0 := @parameter0: android.content.res.ResourcesImpl$ThemeImpl;

        $r1 = r0.<android.content.res.ResourcesImpl$ThemeImpl: android.content.res.Resources$ThemeKey mKey>;

        return $r1;
    }

    void applyStyle(int, boolean)
    {
        android.content.res.ResourcesImpl$ThemeImpl r0;
        int i0;
        boolean z0;
        android.content.res.Resources$ThemeKey r1, $r4;
        long $l1;
        android.content.res.AssetManager $r3;
        java.lang.Throwable $r5;

        r0 := @this: android.content.res.ResourcesImpl$ThemeImpl;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 = r0.<android.content.res.ResourcesImpl$ThemeImpl: android.content.res.Resources$ThemeKey mKey>;

        entermonitor r1;

     label1:
        $r3 = r0.<android.content.res.ResourcesImpl$ThemeImpl: android.content.res.AssetManager mAssets>;

        $l1 = r0.<android.content.res.ResourcesImpl$ThemeImpl: long mTheme>;

        virtualinvoke $r3.<android.content.res.AssetManager: void applyStyleToTheme(long,int,boolean)>($l1, i0, z0);

        r0.<android.content.res.ResourcesImpl$ThemeImpl: int mThemeResId> = i0;

        $r4 = r0.<android.content.res.ResourcesImpl$ThemeImpl: android.content.res.Resources$ThemeKey mKey>;

        virtualinvoke $r4.<android.content.res.Resources$ThemeKey: void append(int,boolean)>(i0, z0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void dump(int, java.lang.String, java.lang.String)
    {
        android.content.res.ResourcesImpl$ThemeImpl r0;
        int i0;
        java.lang.String r1, r5;
        android.content.res.Resources$ThemeKey r2;
        long $l1;
        android.content.res.AssetManager $r3;
        java.lang.Throwable $r4;

        r0 := @this: android.content.res.ResourcesImpl$ThemeImpl;

        i0 := @parameter0: int;

        r5 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r2 = r0.<android.content.res.ResourcesImpl$ThemeImpl: android.content.res.Resources$ThemeKey mKey>;

        entermonitor r2;

     label1:
        $r3 = r0.<android.content.res.ResourcesImpl$ThemeImpl: android.content.res.AssetManager mAssets>;

        $l1 = r0.<android.content.res.ResourcesImpl$ThemeImpl: long mTheme>;

        virtualinvoke $r3.<android.content.res.AssetManager: void dumpTheme(long,int,java.lang.String,java.lang.String)>($l1, i0, r5, r1);

        exitmonitor r2;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r2;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.content.res.ResourcesImpl$ThemeImpl r0;
        long $l0;
        android.content.res.AssetManager $r1;

        r0 := @this: android.content.res.ResourcesImpl$ThemeImpl;

        specialinvoke r0.<java.lang.Object: void finalize()>();

        $r1 = r0.<android.content.res.ResourcesImpl$ThemeImpl: android.content.res.AssetManager mAssets>;

        $l0 = r0.<android.content.res.ResourcesImpl$ThemeImpl: long mTheme>;

        virtualinvoke $r1.<android.content.res.AssetManager: void releaseTheme(long)>($l0);

        return;
    }

    int[] getAllAttributes()
    {
        android.content.res.ResourcesImpl$ThemeImpl r0;
        android.content.res.AssetManager $r1;
        int $i0;
        int[] $r2;

        r0 := @this: android.content.res.ResourcesImpl$ThemeImpl;

        $r1 = r0.<android.content.res.ResourcesImpl$ThemeImpl: android.content.res.AssetManager mAssets>;

        $i0 = virtualinvoke r0.<android.content.res.ResourcesImpl$ThemeImpl: int getAppliedStyleResId()>();

        $r2 = virtualinvoke $r1.<android.content.res.AssetManager: int[] getStyleAttributes(int)>($i0);

        return $r2;
    }

    int getAppliedStyleResId()
    {
        android.content.res.ResourcesImpl$ThemeImpl r0;
        int $i0;

        r0 := @this: android.content.res.ResourcesImpl$ThemeImpl;

        $i0 = r0.<android.content.res.ResourcesImpl$ThemeImpl: int mThemeResId>;

        return $i0;
    }

    public int[] getAttributeResolutionStack(int, int, int)
    {
        android.content.res.ResourcesImpl$ThemeImpl r0;
        int i0, i1, i2;
        android.content.res.Resources$ThemeKey r1;
        long $l3;
        android.content.res.AssetManager $r2;
        java.lang.Throwable $r3;
        int[] r4;

        r0 := @this: android.content.res.ResourcesImpl$ThemeImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 = r0.<android.content.res.ResourcesImpl$ThemeImpl: android.content.res.Resources$ThemeKey mKey>;

        entermonitor r1;

     label1:
        $r2 = r0.<android.content.res.ResourcesImpl$ThemeImpl: android.content.res.AssetManager mAssets>;

        $l3 = r0.<android.content.res.ResourcesImpl$ThemeImpl: long mTheme>;

        r4 = virtualinvoke $r2.<android.content.res.AssetManager: int[] getAttributeResolutionStack(long,int,int,int)>($l3, i0, i1, i2);

        exitmonitor r1;

     label2:
        return r4;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    int getChangingConfigurations()
    {
        android.content.res.ResourcesImpl$ThemeImpl r0;
        android.content.res.Resources$ThemeKey r1;
        int i0, $i2;
        long $l1;
        java.lang.Throwable $r3;

        r0 := @this: android.content.res.ResourcesImpl$ThemeImpl;

        r1 = r0.<android.content.res.ResourcesImpl$ThemeImpl: android.content.res.Resources$ThemeKey mKey>;

        entermonitor r1;

     label1:
        $l1 = r0.<android.content.res.ResourcesImpl$ThemeImpl: long mTheme>;

        $i2 = staticinvoke <android.content.res.AssetManager: int nativeThemeGetChangingConfigurations(long)>($l1);

        i0 = staticinvoke <android.content.pm.ActivityInfo: int activityInfoConfigNativeToJava(int)>($i2);

        exitmonitor r1;

     label2:
        return i0;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    android.content.res.Resources$ThemeKey getKey()
    {
        android.content.res.ResourcesImpl$ThemeImpl r0;
        android.content.res.Resources$ThemeKey $r1;

        r0 := @this: android.content.res.ResourcesImpl$ThemeImpl;

        $r1 = r0.<android.content.res.ResourcesImpl$ThemeImpl: android.content.res.Resources$ThemeKey mKey>;

        return $r1;
    }

    long getNativeTheme()
    {
        android.content.res.ResourcesImpl$ThemeImpl r0;
        long $l0;

        r0 := @this: android.content.res.ResourcesImpl$ThemeImpl;

        $l0 = r0.<android.content.res.ResourcesImpl$ThemeImpl: long mTheme>;

        return $l0;
    }

    java.lang.String[] getTheme()
    {
        android.content.res.ResourcesImpl$ThemeImpl r0;
        android.content.res.Resources$ThemeKey r1, $r3, $r4, $r6;
        java.lang.String[] r2;
        int i0, $i1, $i2, $i3, i4, i5, i6;
        boolean z0;
        int[] $r5;
        boolean[] $r7;
        android.content.res.ResourcesImpl $r8;
        java.lang.String $r9, $r11, r14;
        android.content.res.Resources$NotFoundException $r10;
        java.lang.Throwable $r12;

        r0 := @this: android.content.res.ResourcesImpl$ThemeImpl;

        r1 = r0.<android.content.res.ResourcesImpl$ThemeImpl: android.content.res.Resources$ThemeKey mKey>;

        entermonitor r1;

     label01:
        $r3 = r0.<android.content.res.ResourcesImpl$ThemeImpl: android.content.res.Resources$ThemeKey mKey>;

        i4 = $r3.<android.content.res.Resources$ThemeKey: int mCount>;

        $i1 = i4 * 2;

        r2 = newarray (java.lang.String)[$i1];

     label02:
        i5 = 0;

        i6 = i4 + -1;

     label03:
        $i2 = lengthof r2;

        if i5 >= $i2 goto label11;

        $r4 = r0.<android.content.res.ResourcesImpl$ThemeImpl: android.content.res.Resources$ThemeKey mKey>;

        $r5 = $r4.<android.content.res.Resources$ThemeKey: int[] mResId>;

        i0 = $r5[i6];

        $r6 = r0.<android.content.res.ResourcesImpl$ThemeImpl: android.content.res.Resources$ThemeKey mKey>;

        $r7 = $r6.<android.content.res.Resources$ThemeKey: boolean[] mForce>;

        z0 = $r7[i6];

     label04:
        $r8 = r0.<android.content.res.ResourcesImpl$ThemeImpl: android.content.res.ResourcesImpl this$0>;

        $r9 = virtualinvoke $r8.<android.content.res.ResourcesImpl: java.lang.String getResourceName(int)>(i0);

        r2[i5] = $r9;

     label05:
        goto label08;

     label06:
        $r10 := @caughtexception;

     label07:
        $r11 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i5);

        r2[i5] = $r11;

     label08:
        if z0 == 0 goto label09;

        r14 = "forced";

        goto label10;

     label09:
        r14 = "not forced";

     label10:
        $i3 = i5 + 1;

        r2[$i3] = r14;

        i5 = i5 + 2;

        i6 = i6 + -1;

        goto label03;

     label11:
        exitmonitor r1;

     label12:
        return r2;

     label13:
        $r12 := @caughtexception;

     label14:
        exitmonitor r1;

     label15:
        throw $r12;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch android.content.res.Resources$NotFoundException from label04 to label05 with label06;
        catch java.lang.Throwable from label04 to label05 with label13;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    android.content.res.TypedArray obtainStyledAttributes(android.content.res.Resources$Theme, android.util.AttributeSet, int[], int, int)
    {
        android.content.res.ResourcesImpl$ThemeImpl r0;
        int[] r1;
        int i0, i1, i2;
        android.content.res.Resources$ThemeKey r2;
        android.content.res.TypedArray r3;
        android.content.res.Resources $r4;
        long $l3, $l4, $l5;
        android.content.res.AssetManager $r5;
        java.lang.Throwable $r6, $r7, r11;
        android.content.res.Resources$Theme r8;
        android.util.AttributeSet r9;
        android.content.res.XmlBlock$Parser r10;

        r0 := @this: android.content.res.ResourcesImpl$ThemeImpl;

        r8 := @parameter0: android.content.res.Resources$Theme;

        r9 := @parameter1: android.util.AttributeSet;

        r1 := @parameter2: int[];

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        r2 = r0.<android.content.res.ResourcesImpl$ThemeImpl: android.content.res.Resources$ThemeKey mKey>;

        entermonitor r2;

     label1:
        i2 = lengthof r1;

        $r4 = virtualinvoke r8.<android.content.res.Resources$Theme: android.content.res.Resources getResources()>();

        r3 = staticinvoke <android.content.res.TypedArray: android.content.res.TypedArray obtain(android.content.res.Resources,int)>($r4, i2);

        r10 = (android.content.res.XmlBlock$Parser) r9;

        $r5 = r0.<android.content.res.ResourcesImpl$ThemeImpl: android.content.res.AssetManager mAssets>;

        $l5 = r0.<android.content.res.ResourcesImpl$ThemeImpl: long mTheme>;

        $l4 = r3.<android.content.res.TypedArray: long mDataAddress>;

        $l3 = r3.<android.content.res.TypedArray: long mIndicesAddress>;

        virtualinvoke $r5.<android.content.res.AssetManager: void applyStyle(long,int,int,android.content.res.XmlBlock$Parser,int[],long,long)>($l5, i0, i1, r10, r1, $l4, $l3);

     label2:
        r3.<android.content.res.TypedArray: android.content.res.Resources$Theme mTheme> = r8;

        r3.<android.content.res.TypedArray: android.content.res.XmlBlock$Parser mXml> = r10;

        exitmonitor r2;

     label3:
        return r3;

     label4:
        $r7 := @caughtexception;

        r11 = $r7;

     label5:
        exitmonitor r2;

     label6:
        throw r11;

     label7:
        $r6 := @caughtexception;

        r11 = $r6;

        goto label5;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
    }

    void rebase()
    {
        android.content.res.ResourcesImpl$ThemeImpl r0;
        android.content.res.Resources$ThemeKey r1, $r3, $r4, $r6;
        int i0, $i2, i4;
        boolean z0;
        long $l1, $l3;
        int[] $r5;
        boolean[] $r7;
        android.content.res.AssetManager $r8;
        java.lang.Throwable $r9;

        r0 := @this: android.content.res.ResourcesImpl$ThemeImpl;

        r1 = r0.<android.content.res.ResourcesImpl$ThemeImpl: android.content.res.Resources$ThemeKey mKey>;

        entermonitor r1;

     label1:
        $l1 = r0.<android.content.res.ResourcesImpl$ThemeImpl: long mTheme>;

        staticinvoke <android.content.res.AssetManager: void nativeThemeClear(long)>($l1);

     label2:
        i4 = 0;

     label3:
        $r3 = r0.<android.content.res.ResourcesImpl$ThemeImpl: android.content.res.Resources$ThemeKey mKey>;

        $i2 = $r3.<android.content.res.Resources$ThemeKey: int mCount>;

        if i4 >= $i2 goto label5;

        $r4 = r0.<android.content.res.ResourcesImpl$ThemeImpl: android.content.res.Resources$ThemeKey mKey>;

        $r5 = $r4.<android.content.res.Resources$ThemeKey: int[] mResId>;

        i0 = $r5[i4];

        $r6 = r0.<android.content.res.ResourcesImpl$ThemeImpl: android.content.res.Resources$ThemeKey mKey>;

        $r7 = $r6.<android.content.res.Resources$ThemeKey: boolean[] mForce>;

        z0 = $r7[i4];

        $r8 = r0.<android.content.res.ResourcesImpl$ThemeImpl: android.content.res.AssetManager mAssets>;

        $l3 = r0.<android.content.res.ResourcesImpl$ThemeImpl: long mTheme>;

        virtualinvoke $r8.<android.content.res.AssetManager: void applyStyleToTheme(long,int,boolean)>($l3, i0, z0);

     label4:
        i4 = i4 + 1;

        goto label3;

     label5:
        exitmonitor r1;

     label6:
        return;

     label7:
        $r9 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    boolean resolveAttribute(int, android.util.TypedValue, boolean)
    {
        android.content.res.ResourcesImpl$ThemeImpl r0;
        int i0;
        android.content.res.Resources$ThemeKey r1;
        long $l1;
        android.content.res.AssetManager $r2;
        java.lang.Throwable $r3;
        android.util.TypedValue r4;
        boolean z0, z1;

        r0 := @this: android.content.res.ResourcesImpl$ThemeImpl;

        i0 := @parameter0: int;

        r4 := @parameter1: android.util.TypedValue;

        z0 := @parameter2: boolean;

        r1 = r0.<android.content.res.ResourcesImpl$ThemeImpl: android.content.res.Resources$ThemeKey mKey>;

        entermonitor r1;

     label1:
        $r2 = r0.<android.content.res.ResourcesImpl$ThemeImpl: android.content.res.AssetManager mAssets>;

        $l1 = r0.<android.content.res.ResourcesImpl$ThemeImpl: long mTheme>;

        z1 = virtualinvoke $r2.<android.content.res.AssetManager: boolean getThemeValue(long,int,android.util.TypedValue,boolean)>($l1, i0, r4, z0);

        exitmonitor r1;

     label2:
        return z1;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    android.content.res.TypedArray resolveAttributes(android.content.res.Resources$Theme, int[], int[])
    {
        android.content.res.ResourcesImpl$ThemeImpl r0;
        int[] r1, r2, $r6, $r7;
        android.content.res.Resources$ThemeKey r3;
        int i0, $i1;
        android.content.res.TypedArray r4;
        android.content.res.Resources $r5;
        long $l2;
        android.content.res.AssetManager $r8;
        java.lang.Throwable $r9;
        android.content.res.Resources$Theme r10;
        java.lang.IllegalArgumentException r11;

        r0 := @this: android.content.res.ResourcesImpl$ThemeImpl;

        r10 := @parameter0: android.content.res.Resources$Theme;

        r1 := @parameter1: int[];

        r2 := @parameter2: int[];

        r3 = r0.<android.content.res.ResourcesImpl$ThemeImpl: android.content.res.Resources$ThemeKey mKey>;

        entermonitor r3;

     label1:
        i0 = lengthof r2;

     label2:
        if r1 == null goto label5;

     label3:
        $i1 = lengthof r1;

        if i0 != $i1 goto label5;

        $r5 = virtualinvoke r10.<android.content.res.Resources$Theme: android.content.res.Resources getResources()>();

        r4 = staticinvoke <android.content.res.TypedArray: android.content.res.TypedArray obtain(android.content.res.Resources,int)>($r5, i0);

        $r8 = r0.<android.content.res.ResourcesImpl$ThemeImpl: android.content.res.AssetManager mAssets>;

        $l2 = r0.<android.content.res.ResourcesImpl$ThemeImpl: long mTheme>;

        $r7 = r4.<android.content.res.TypedArray: int[] mData>;

        $r6 = r4.<android.content.res.TypedArray: int[] mIndices>;

        virtualinvoke $r8.<android.content.res.AssetManager: boolean resolveAttrs(long,int,int,int[],int[],int[],int[])>($l2, 0, 0, r1, r2, $r7, $r6);

        r4.<android.content.res.TypedArray: android.content.res.Resources$Theme mTheme> = r10;

        r4.<android.content.res.TypedArray: android.content.res.XmlBlock$Parser mXml> = null;

        exitmonitor r3;

     label4:
        return r4;

     label5:
        r11 = new java.lang.IllegalArgumentException;

        specialinvoke r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Base attribute values must the same length as attrs");

        throw r11;

     label6:
        $r9 := @caughtexception;

     label7:
        exitmonitor r3;

     label8:
        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label5 to label6 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    void setTo(android.content.res.ResourcesImpl$ThemeImpl)
    {
        android.content.res.ResourcesImpl$ThemeImpl r0, r9;
        android.content.res.Resources$ThemeKey r1, r2, $r5, $r6;
        long $l0, $l1;
        android.content.res.AssetManager $r3, $r4;
        int $i2;
        java.lang.Throwable $r7, $r8;

        r0 := @this: android.content.res.ResourcesImpl$ThemeImpl;

        r9 := @parameter0: android.content.res.ResourcesImpl$ThemeImpl;

        r1 = r0.<android.content.res.ResourcesImpl$ThemeImpl: android.content.res.Resources$ThemeKey mKey>;

        entermonitor r1;

     label01:
        r2 = r9.<android.content.res.ResourcesImpl$ThemeImpl: android.content.res.Resources$ThemeKey mKey>;

        entermonitor r2;

     label02:
        $r4 = r0.<android.content.res.ResourcesImpl$ThemeImpl: android.content.res.AssetManager mAssets>;

        $l1 = r0.<android.content.res.ResourcesImpl$ThemeImpl: long mTheme>;

        $r3 = r9.<android.content.res.ResourcesImpl$ThemeImpl: android.content.res.AssetManager mAssets>;

        $l0 = r9.<android.content.res.ResourcesImpl$ThemeImpl: long mTheme>;

        virtualinvoke $r4.<android.content.res.AssetManager: void setThemeTo(long,android.content.res.AssetManager,long)>($l1, $r3, $l0);

        $i2 = r9.<android.content.res.ResourcesImpl$ThemeImpl: int mThemeResId>;

        r0.<android.content.res.ResourcesImpl$ThemeImpl: int mThemeResId> = $i2;

        $r5 = r0.<android.content.res.ResourcesImpl$ThemeImpl: android.content.res.Resources$ThemeKey mKey>;

        $r6 = virtualinvoke r9.<android.content.res.ResourcesImpl$ThemeImpl: android.content.res.Resources$ThemeKey getKey()>();

        virtualinvoke $r5.<android.content.res.Resources$ThemeKey: void setTo(android.content.res.Resources$ThemeKey)>($r6);

        exitmonitor r2;

     label03:
        exitmonitor r1;

     label04:
        return;

     label05:
        $r7 := @caughtexception;

     label06:
        exitmonitor r2;

     label07:
        throw $r7;

     label08:
        $r8 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label02 to label03 with label05;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label06 to label07 with label05;
        catch java.lang.Throwable from label07 to label08 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }
}
