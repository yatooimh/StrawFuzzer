final class android.content.res.XmlBlock$Parser extends java.lang.Object implements android.content.res.XmlResourceParser
{
    private final android.content.res.XmlBlock mBlock;
    private boolean mDecNextDepth;
    private int mDepth;
    private int mEventType;
    long mParseState;
    private boolean mStarted;
    final android.content.res.XmlBlock this$0;

    void <init>(android.content.res.XmlBlock, long, android.content.res.XmlBlock)
    {
        android.content.res.XmlBlock$Parser r0;
        android.content.res.XmlBlock r1, r2;
        long l0;

        r0 := @this: android.content.res.XmlBlock$Parser;

        r1 := @parameter0: android.content.res.XmlBlock;

        l0 := @parameter1: long;

        r2 := @parameter2: android.content.res.XmlBlock;

        r0.<android.content.res.XmlBlock$Parser: android.content.res.XmlBlock this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.content.res.XmlBlock$Parser: boolean mStarted> = 0;

        r0.<android.content.res.XmlBlock$Parser: boolean mDecNextDepth> = 0;

        r0.<android.content.res.XmlBlock$Parser: int mDepth> = 0;

        r0.<android.content.res.XmlBlock$Parser: int mEventType> = 0;

        r0.<android.content.res.XmlBlock$Parser: long mParseState> = l0;

        r0.<android.content.res.XmlBlock$Parser: android.content.res.XmlBlock mBlock> = r2;

        staticinvoke <android.content.res.XmlBlock: int access$008(android.content.res.XmlBlock)>(r2);

        return;
    }

    public void close()
    {
        android.content.res.XmlBlock$Parser r0;
        android.content.res.XmlBlock r1, $r3;
        long $l0, $l2;
        byte $b1;
        java.lang.Throwable $r4;

        r0 := @this: android.content.res.XmlBlock$Parser;

        r1 = r0.<android.content.res.XmlBlock$Parser: android.content.res.XmlBlock mBlock>;

        entermonitor r1;

     label1:
        $l0 = r0.<android.content.res.XmlBlock$Parser: long mParseState>;

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label2;

        $l2 = r0.<android.content.res.XmlBlock$Parser: long mParseState>;

        staticinvoke <android.content.res.XmlBlock: void access$1600(long)>($l2);

        r0.<android.content.res.XmlBlock$Parser: long mParseState> = 0L;

        $r3 = r0.<android.content.res.XmlBlock$Parser: android.content.res.XmlBlock mBlock>;

        staticinvoke <android.content.res.XmlBlock: void access$1700(android.content.res.XmlBlock)>($r3);

     label2:
        exitmonitor r1;

     label3:
        return;

     label4:
        $r4 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void defineEntityReplacementText(java.lang.String, java.lang.String) throws org.xmlpull.v1.XmlPullParserException
    {
        android.content.res.XmlBlock$Parser r0;
        java.lang.String r1, r2;
        org.xmlpull.v1.XmlPullParserException r4;
        java.lang.Throwable r5;

        r0 := @this: android.content.res.XmlBlock$Parser;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r4 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke r4.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("defineEntityReplacementText() not supported");

        r5 = (java.lang.Throwable) r4;

        throw r5;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.content.res.XmlBlock$Parser r0;

        r0 := @this: android.content.res.XmlBlock$Parser;

        virtualinvoke r0.<android.content.res.XmlBlock$Parser: void close()>();

        return;
    }

    public boolean getAttributeBooleanValue(int, boolean)
    {
        android.content.res.XmlBlock$Parser r0;
        int i0, i1, $i4;
        long $l2, $l3;
        boolean z0, z1;

        r0 := @this: android.content.res.XmlBlock$Parser;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $l2 = r0.<android.content.res.XmlBlock$Parser: long mParseState>;

        i1 = staticinvoke <android.content.res.XmlBlock: int access$900(long,int)>($l2, i0);

        if i1 < 16 goto label3;

        if i1 > 31 goto label3;

        $l3 = r0.<android.content.res.XmlBlock$Parser: long mParseState>;

        $i4 = staticinvoke <android.content.res.XmlBlock: int access$1000(long,int)>($l3, i0);

        if $i4 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;

     label3:
        return z0;
    }

    public boolean getAttributeBooleanValue(java.lang.String, java.lang.String, boolean)
    {
        android.content.res.XmlBlock$Parser r0;
        java.lang.String r1, r2;
        boolean z0, $z1;
        int i0;
        long $l1;

        r0 := @this: android.content.res.XmlBlock$Parser;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $l1 = r0.<android.content.res.XmlBlock$Parser: long mParseState>;

        i0 = staticinvoke <android.content.res.XmlBlock: int access$1100(long,java.lang.String,java.lang.String)>($l1, r1, r2);

        if i0 < 0 goto label1;

        $z1 = virtualinvoke r0.<android.content.res.XmlBlock$Parser: boolean getAttributeBooleanValue(int,boolean)>(i0, z0);

        return $z1;

     label1:
        return z0;
    }

    public int getAttributeCount()
    {
        android.content.res.XmlBlock$Parser r0;
        int $i0, i2;
        long $l1;

        r0 := @this: android.content.res.XmlBlock$Parser;

        $i0 = r0.<android.content.res.XmlBlock$Parser: int mEventType>;

        if $i0 != 2 goto label1;

        $l1 = r0.<android.content.res.XmlBlock$Parser: long mParseState>;

        i2 = staticinvoke <android.content.res.XmlBlock: int access$700(long)>($l1);

        goto label2;

     label1:
        i2 = -1;

     label2:
        return i2;
    }

    public float getAttributeFloatValue(int, float)
    {
        android.content.res.XmlBlock$Parser r0;
        int i0, $i2, $i4;
        float f0, $f1;
        long $l1, $l3;
        java.lang.RuntimeException $r1;

        r0 := @this: android.content.res.XmlBlock$Parser;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        $l1 = r0.<android.content.res.XmlBlock$Parser: long mParseState>;

        $i2 = staticinvoke <android.content.res.XmlBlock: int access$900(long,int)>($l1, i0);

        if $i2 != 4 goto label1;

        $l3 = r0.<android.content.res.XmlBlock$Parser: long mParseState>;

        $i4 = staticinvoke <android.content.res.XmlBlock: int access$1000(long,int)>($l3, i0);

        $f1 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i4);

        return $f1;

     label1:
        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("not a float!");

        throw $r1;
    }

    public float getAttributeFloatValue(java.lang.String, java.lang.String, float)
    {
        android.content.res.XmlBlock$Parser r0;
        java.lang.String r1, r2;
        float f0, $f1;
        int i0;
        long $l1;

        r0 := @this: android.content.res.XmlBlock$Parser;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        f0 := @parameter2: float;

        $l1 = r0.<android.content.res.XmlBlock$Parser: long mParseState>;

        i0 = staticinvoke <android.content.res.XmlBlock: int access$1100(long,java.lang.String,java.lang.String)>($l1, r1, r2);

        if i0 < 0 goto label1;

        $f1 = virtualinvoke r0.<android.content.res.XmlBlock$Parser: float getAttributeFloatValue(int,float)>(i0, f0);

        return $f1;

     label1:
        return f0;
    }

    public int getAttributeIntValue(int, int)
    {
        android.content.res.XmlBlock$Parser r0;
        int i0, i1, i2, $i5;
        long $l3, $l4;

        r0 := @this: android.content.res.XmlBlock$Parser;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $l3 = r0.<android.content.res.XmlBlock$Parser: long mParseState>;

        i2 = staticinvoke <android.content.res.XmlBlock: int access$900(long,int)>($l3, i0);

        if i2 < 16 goto label1;

        if i2 > 31 goto label1;

        $l4 = r0.<android.content.res.XmlBlock$Parser: long mParseState>;

        $i5 = staticinvoke <android.content.res.XmlBlock: int access$1000(long,int)>($l4, i0);

        return $i5;

     label1:
        return i1;
    }

    public int getAttributeIntValue(java.lang.String, java.lang.String, int)
    {
        android.content.res.XmlBlock$Parser r0;
        java.lang.String r1, r2;
        int i0, i1, $i3;
        long $l2;

        r0 := @this: android.content.res.XmlBlock$Parser;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $l2 = r0.<android.content.res.XmlBlock$Parser: long mParseState>;

        i1 = staticinvoke <android.content.res.XmlBlock: int access$1100(long,java.lang.String,java.lang.String)>($l2, r1, r2);

        if i1 < 0 goto label1;

        $i3 = virtualinvoke r0.<android.content.res.XmlBlock$Parser: int getAttributeIntValue(int,int)>(i1, i0);

        return $i3;

     label1:
        return i0;
    }

    public int getAttributeListValue(int, java.lang.String[], int)
    {
        android.content.res.XmlBlock$Parser r0;
        java.lang.String[] r1;
        int i0, i1, $i4, i5, i6;
        long $l2, $l3;
        android.content.res.XmlBlock $r2;
        android.content.res.StringBlock $r3;
        java.lang.CharSequence $r4;

        r0 := @this: android.content.res.XmlBlock$Parser;

        i5 := @parameter0: int;

        r1 := @parameter1: java.lang.String[];

        i0 := @parameter2: int;

        $l2 = r0.<android.content.res.XmlBlock$Parser: long mParseState>;

        i1 = staticinvoke <android.content.res.XmlBlock: int access$900(long,int)>($l2, i5);

        $l3 = r0.<android.content.res.XmlBlock$Parser: long mParseState>;

        i6 = staticinvoke <android.content.res.XmlBlock: int access$1000(long,int)>($l3, i5);

        if i1 != 3 goto label1;

        $r2 = r0.<android.content.res.XmlBlock$Parser: android.content.res.XmlBlock this$0>;

        $r3 = $r2.<android.content.res.XmlBlock: android.content.res.StringBlock mStrings>;

        $r4 = virtualinvoke $r3.<android.content.res.StringBlock: java.lang.CharSequence get(int)>(i6);

        $i4 = staticinvoke <com.android.internal.util.XmlUtils: int convertValueToList(java.lang.CharSequence,java.lang.String[],int)>($r4, r1, i0);

        return $i4;

     label1:
        return i6;
    }

    public int getAttributeListValue(java.lang.String, java.lang.String, java.lang.String[], int)
    {
        android.content.res.XmlBlock$Parser r0;
        java.lang.String r1, r2;
        java.lang.String[] r3;
        int i0, i1, $i3;
        long $l2;

        r0 := @this: android.content.res.XmlBlock$Parser;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String[];

        i0 := @parameter3: int;

        $l2 = r0.<android.content.res.XmlBlock$Parser: long mParseState>;

        i1 = staticinvoke <android.content.res.XmlBlock: int access$1100(long,java.lang.String,java.lang.String)>($l2, r1, r2);

        if i1 < 0 goto label1;

        $i3 = virtualinvoke r0.<android.content.res.XmlBlock$Parser: int getAttributeListValue(int,java.lang.String[],int)>(i1, r3, i0);

        return $i3;

     label1:
        return i0;
    }

    public java.lang.String getAttributeName(int)
    {
        android.content.res.XmlBlock$Parser r0;
        int i0, i1;
        long $l2;
        java.lang.IndexOutOfBoundsException $r1;
        java.lang.String $r2, $r6;
        android.content.res.XmlBlock $r3;
        android.content.res.StringBlock $r4;
        java.lang.CharSequence $r5;

        r0 := @this: android.content.res.XmlBlock$Parser;

        i0 := @parameter0: int;

        $l2 = r0.<android.content.res.XmlBlock$Parser: long mParseState>;

        i1 = staticinvoke <android.content.res.XmlBlock: int access$600(long,int)>($l2, i0);

        if i1 < 0 goto label1;

        $r3 = r0.<android.content.res.XmlBlock$Parser: android.content.res.XmlBlock this$0>;

        $r4 = $r3.<android.content.res.XmlBlock: android.content.res.StringBlock mStrings>;

        $r5 = virtualinvoke $r4.<android.content.res.StringBlock: java.lang.CharSequence get(int)>(i1);

        $r6 = interfaceinvoke $r5.<java.lang.CharSequence: java.lang.String toString()>();

        return $r6;

     label1:
        $r1 = new java.lang.IndexOutOfBoundsException;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);

        specialinvoke $r1.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r2);

        throw $r1;
    }

    public int getAttributeNameResource(int)
    {
        android.content.res.XmlBlock$Parser r0;
        int i0, $i2;
        long $l1;

        r0 := @this: android.content.res.XmlBlock$Parser;

        i0 := @parameter0: int;

        $l1 = r0.<android.content.res.XmlBlock$Parser: long mParseState>;

        $i2 = staticinvoke <android.content.res.XmlBlock: int access$1200(long,int)>($l1, i0);

        return $i2;
    }

    public java.lang.String getAttributeNamespace(int)
    {
        android.content.res.XmlBlock$Parser r0;
        int i0, i1;
        long $l2;
        java.lang.IndexOutOfBoundsException $r1;
        java.lang.String $r2, $r6;
        android.content.res.XmlBlock $r3;
        android.content.res.StringBlock $r4;
        java.lang.CharSequence $r5;

        r0 := @this: android.content.res.XmlBlock$Parser;

        i0 := @parameter0: int;

        $l2 = r0.<android.content.res.XmlBlock$Parser: long mParseState>;

        i1 = staticinvoke <android.content.res.XmlBlock: int access$500(long,int)>($l2, i0);

        if i1 < 0 goto label1;

        $r3 = r0.<android.content.res.XmlBlock$Parser: android.content.res.XmlBlock this$0>;

        $r4 = $r3.<android.content.res.XmlBlock: android.content.res.StringBlock mStrings>;

        $r5 = virtualinvoke $r4.<android.content.res.StringBlock: java.lang.CharSequence get(int)>(i1);

        $r6 = interfaceinvoke $r5.<java.lang.CharSequence: java.lang.String toString()>();

        return $r6;

     label1:
        if i1 != -1 goto label2;

        return "";

     label2:
        $r1 = new java.lang.IndexOutOfBoundsException;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);

        specialinvoke $r1.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r2);

        throw $r1;
    }

    public java.lang.String getAttributePrefix(int)
    {
        android.content.res.XmlBlock$Parser r0;
        int i0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.content.res.XmlBlock$Parser;

        i0 := @parameter0: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("getAttributePrefix not supported");

        throw $r1;
    }

    public int getAttributeResourceValue(int, int)
    {
        android.content.res.XmlBlock$Parser r0;
        int i0, i1, $i3, $i5;
        long $l2, $l4;

        r0 := @this: android.content.res.XmlBlock$Parser;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $l2 = r0.<android.content.res.XmlBlock$Parser: long mParseState>;

        $i3 = staticinvoke <android.content.res.XmlBlock: int access$900(long,int)>($l2, i0);

        if $i3 != 1 goto label1;

        $l4 = r0.<android.content.res.XmlBlock$Parser: long mParseState>;

        $i5 = staticinvoke <android.content.res.XmlBlock: int access$1000(long,int)>($l4, i0);

        return $i5;

     label1:
        return i1;
    }

    public int getAttributeResourceValue(java.lang.String, java.lang.String, int)
    {
        android.content.res.XmlBlock$Parser r0;
        java.lang.String r1, r2;
        int i0, i1, $i3;
        long $l2;

        r0 := @this: android.content.res.XmlBlock$Parser;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $l2 = r0.<android.content.res.XmlBlock$Parser: long mParseState>;

        i1 = staticinvoke <android.content.res.XmlBlock: int access$1100(long,java.lang.String,java.lang.String)>($l2, r1, r2);

        if i1 < 0 goto label1;

        $i3 = virtualinvoke r0.<android.content.res.XmlBlock$Parser: int getAttributeResourceValue(int,int)>(i1, i0);

        return $i3;

     label1:
        return i0;
    }

    public java.lang.String getAttributeType(int)
    {
        android.content.res.XmlBlock$Parser r0;
        int i0;

        r0 := @this: android.content.res.XmlBlock$Parser;

        i0 := @parameter0: int;

        return "CDATA";
    }

    public int getAttributeUnsignedIntValue(int, int)
    {
        android.content.res.XmlBlock$Parser r0;
        int i0, i1, i2, $i5;
        long $l3, $l4;

        r0 := @this: android.content.res.XmlBlock$Parser;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $l3 = r0.<android.content.res.XmlBlock$Parser: long mParseState>;

        i2 = staticinvoke <android.content.res.XmlBlock: int access$900(long,int)>($l3, i0);

        if i2 < 16 goto label1;

        if i2 > 31 goto label1;

        $l4 = r0.<android.content.res.XmlBlock$Parser: long mParseState>;

        $i5 = staticinvoke <android.content.res.XmlBlock: int access$1000(long,int)>($l4, i0);

        return $i5;

     label1:
        return i1;
    }

    public int getAttributeUnsignedIntValue(java.lang.String, java.lang.String, int)
    {
        android.content.res.XmlBlock$Parser r0;
        java.lang.String r1, r2;
        int i0, i1, $i3;
        long $l2;

        r0 := @this: android.content.res.XmlBlock$Parser;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $l2 = r0.<android.content.res.XmlBlock$Parser: long mParseState>;

        i1 = staticinvoke <android.content.res.XmlBlock: int access$1100(long,java.lang.String,java.lang.String)>($l2, r1, r2);

        if i1 < 0 goto label1;

        $i3 = virtualinvoke r0.<android.content.res.XmlBlock$Parser: int getAttributeUnsignedIntValue(int,int)>(i1, i0);

        return $i3;

     label1:
        return i0;
    }

    public java.lang.String getAttributeValue(int)
    {
        android.content.res.XmlBlock$Parser r0;
        int i0, $i4, i5, i6;
        long $l1, $l2, $l3;
        java.lang.IndexOutOfBoundsException $r1;
        java.lang.String $r2, $r3, $r7;
        android.content.res.XmlBlock $r4;
        android.content.res.StringBlock $r5;
        java.lang.CharSequence $r6;

        r0 := @this: android.content.res.XmlBlock$Parser;

        i0 := @parameter0: int;

        $l1 = r0.<android.content.res.XmlBlock$Parser: long mParseState>;

        i5 = staticinvoke <android.content.res.XmlBlock: int access$800(long,int)>($l1, i0);

        if i5 < 0 goto label1;

        $r4 = r0.<android.content.res.XmlBlock$Parser: android.content.res.XmlBlock this$0>;

        $r5 = $r4.<android.content.res.XmlBlock: android.content.res.StringBlock mStrings>;

        $r6 = virtualinvoke $r5.<android.content.res.StringBlock: java.lang.CharSequence get(int)>(i5);

        $r7 = interfaceinvoke $r6.<java.lang.CharSequence: java.lang.String toString()>();

        return $r7;

     label1:
        $l2 = r0.<android.content.res.XmlBlock$Parser: long mParseState>;

        i6 = staticinvoke <android.content.res.XmlBlock: int access$900(long,int)>($l2, i0);

        if i6 == 0 goto label2;

        $l3 = r0.<android.content.res.XmlBlock$Parser: long mParseState>;

        $i4 = staticinvoke <android.content.res.XmlBlock: int access$1000(long,int)>($l3, i0);

        $r3 = staticinvoke <android.util.TypedValue: java.lang.String coerceToString(int,int)>(i6, $i4);

        return $r3;

     label2:
        $r1 = new java.lang.IndexOutOfBoundsException;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);

        specialinvoke $r1.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r2);

        throw $r1;
    }

    public java.lang.String getAttributeValue(java.lang.String, java.lang.String)
    {
        android.content.res.XmlBlock$Parser r0;
        java.lang.String r1, r2, $r3;
        int i0;
        long $l1;

        r0 := @this: android.content.res.XmlBlock$Parser;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $l1 = r0.<android.content.res.XmlBlock$Parser: long mParseState>;

        i0 = staticinvoke <android.content.res.XmlBlock: int access$1100(long,java.lang.String,java.lang.String)>($l1, r1, r2);

        if i0 < 0 goto label1;

        $r3 = virtualinvoke r0.<android.content.res.XmlBlock$Parser: java.lang.String getAttributeValue(int)>(i0);

        return $r3;

     label1:
        return null;
    }

    public java.lang.String getClassAttribute()
    {
        android.content.res.XmlBlock$Parser r0;
        int i0;
        long $l1;
        android.content.res.XmlBlock $r1;
        android.content.res.StringBlock $r2;
        java.lang.CharSequence $r3;
        java.lang.String r4;

        r0 := @this: android.content.res.XmlBlock$Parser;

        $l1 = r0.<android.content.res.XmlBlock$Parser: long mParseState>;

        i0 = staticinvoke <android.content.res.XmlBlock: int access$1400(long)>($l1);

        if i0 < 0 goto label1;

        $r1 = r0.<android.content.res.XmlBlock$Parser: android.content.res.XmlBlock this$0>;

        $r2 = $r1.<android.content.res.XmlBlock: android.content.res.StringBlock mStrings>;

        $r3 = virtualinvoke $r2.<android.content.res.StringBlock: java.lang.CharSequence get(int)>(i0);

        r4 = interfaceinvoke $r3.<java.lang.CharSequence: java.lang.String toString()>();

        goto label2;

     label1:
        r4 = null;

     label2:
        return r4;
    }

    public int getColumnNumber()
    {
        android.content.res.XmlBlock$Parser r0;

        r0 := @this: android.content.res.XmlBlock$Parser;

        return -1;
    }

    public int getDepth()
    {
        android.content.res.XmlBlock$Parser r0;
        int $i0;

        r0 := @this: android.content.res.XmlBlock$Parser;

        $i0 = r0.<android.content.res.XmlBlock$Parser: int mDepth>;

        return $i0;
    }

    public int getEventType() throws org.xmlpull.v1.XmlPullParserException
    {
        android.content.res.XmlBlock$Parser r0;
        int $i0;

        r0 := @this: android.content.res.XmlBlock$Parser;

        $i0 = r0.<android.content.res.XmlBlock$Parser: int mEventType>;

        return $i0;
    }

    public boolean getFeature(java.lang.String)
    {
        android.content.res.XmlBlock$Parser r0;
        java.lang.String r1, $r2, $r3;
        boolean $z0, $z1;

        r0 := @this: android.content.res.XmlBlock$Parser;

        r1 := @parameter0: java.lang.String;

        $r2 = "http://xmlpull.org/v1/doc/features.html#process-namespaces";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r3 = "http://xmlpull.org/v1/doc/features.html#report-namespace-prefixes";

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    public java.lang.String getIdAttribute()
    {
        android.content.res.XmlBlock$Parser r0;
        int i0;
        long $l1;
        android.content.res.XmlBlock $r1;
        android.content.res.StringBlock $r2;
        java.lang.CharSequence $r3;
        java.lang.String r4;

        r0 := @this: android.content.res.XmlBlock$Parser;

        $l1 = r0.<android.content.res.XmlBlock$Parser: long mParseState>;

        i0 = staticinvoke <android.content.res.XmlBlock: int access$1300(long)>($l1);

        if i0 < 0 goto label1;

        $r1 = r0.<android.content.res.XmlBlock$Parser: android.content.res.XmlBlock this$0>;

        $r2 = $r1.<android.content.res.XmlBlock: android.content.res.StringBlock mStrings>;

        $r3 = virtualinvoke $r2.<android.content.res.StringBlock: java.lang.CharSequence get(int)>(i0);

        r4 = interfaceinvoke $r3.<java.lang.CharSequence: java.lang.String toString()>();

        goto label2;

     label1:
        r4 = null;

     label2:
        return r4;
    }

    public int getIdAttributeResourceValue(int)
    {
        android.content.res.XmlBlock$Parser r0;
        int i0, $i1;

        r0 := @this: android.content.res.XmlBlock$Parser;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<android.content.res.XmlBlock$Parser: int getAttributeResourceValue(java.lang.String,java.lang.String,int)>(null, "id", i0);

        return $i1;
    }

    public java.lang.String getInputEncoding()
    {
        android.content.res.XmlBlock$Parser r0;

        r0 := @this: android.content.res.XmlBlock$Parser;

        return null;
    }

    public int getLineNumber()
    {
        android.content.res.XmlBlock$Parser r0;
        long $l0;
        int $i1;

        r0 := @this: android.content.res.XmlBlock$Parser;

        $l0 = r0.<android.content.res.XmlBlock$Parser: long mParseState>;

        $i1 = staticinvoke <android.content.res.XmlBlock: int access$300(long)>($l0);

        return $i1;
    }

    public java.lang.String getName()
    {
        android.content.res.XmlBlock$Parser r0;
        int i0;
        long $l1;
        android.content.res.XmlBlock $r1;
        android.content.res.StringBlock $r2;
        java.lang.CharSequence $r3;
        java.lang.String r4;

        r0 := @this: android.content.res.XmlBlock$Parser;

        $l1 = r0.<android.content.res.XmlBlock$Parser: long mParseState>;

        i0 = staticinvoke <android.content.res.XmlBlock: int nativeGetName(long)>($l1);

        if i0 < 0 goto label1;

        $r1 = r0.<android.content.res.XmlBlock$Parser: android.content.res.XmlBlock this$0>;

        $r2 = $r1.<android.content.res.XmlBlock: android.content.res.StringBlock mStrings>;

        $r3 = virtualinvoke $r2.<android.content.res.StringBlock: java.lang.CharSequence get(int)>(i0);

        r4 = interfaceinvoke $r3.<java.lang.CharSequence: java.lang.String toString()>();

        goto label2;

     label1:
        r4 = null;

     label2:
        return r4;
    }

    public java.lang.String getNamespace()
    {
        android.content.res.XmlBlock$Parser r0;
        int i0;
        long $l1;
        android.content.res.XmlBlock $r1;
        android.content.res.StringBlock $r2;
        java.lang.CharSequence $r3;
        java.lang.String r4;

        r0 := @this: android.content.res.XmlBlock$Parser;

        $l1 = r0.<android.content.res.XmlBlock$Parser: long mParseState>;

        i0 = staticinvoke <android.content.res.XmlBlock: int access$400(long)>($l1);

        if i0 < 0 goto label1;

        $r1 = r0.<android.content.res.XmlBlock$Parser: android.content.res.XmlBlock this$0>;

        $r2 = $r1.<android.content.res.XmlBlock: android.content.res.StringBlock mStrings>;

        $r3 = virtualinvoke $r2.<android.content.res.StringBlock: java.lang.CharSequence get(int)>(i0);

        r4 = interfaceinvoke $r3.<java.lang.CharSequence: java.lang.String toString()>();

        goto label2;

     label1:
        r4 = "";

     label2:
        return r4;
    }

    public java.lang.String getNamespace(java.lang.String)
    {
        android.content.res.XmlBlock$Parser r0;
        java.lang.String r1;
        java.lang.RuntimeException $r2;

        r0 := @this: android.content.res.XmlBlock$Parser;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("getNamespace() not supported");

        throw $r2;
    }

    public int getNamespaceCount(int) throws org.xmlpull.v1.XmlPullParserException
    {
        android.content.res.XmlBlock$Parser r0;
        int i0;
        org.xmlpull.v1.XmlPullParserException r2;
        java.lang.Throwable r3;

        r0 := @this: android.content.res.XmlBlock$Parser;

        i0 := @parameter0: int;

        r2 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke r2.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("getNamespaceCount() not supported");

        r3 = (java.lang.Throwable) r2;

        throw r3;
    }

    public java.lang.String getNamespacePrefix(int) throws org.xmlpull.v1.XmlPullParserException
    {
        android.content.res.XmlBlock$Parser r0;
        int i0;
        org.xmlpull.v1.XmlPullParserException r2;
        java.lang.Throwable r3;

        r0 := @this: android.content.res.XmlBlock$Parser;

        i0 := @parameter0: int;

        r2 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke r2.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("getNamespacePrefix() not supported");

        r3 = (java.lang.Throwable) r2;

        throw r3;
    }

    public java.lang.String getNamespaceUri(int) throws org.xmlpull.v1.XmlPullParserException
    {
        android.content.res.XmlBlock$Parser r0;
        int i0;
        org.xmlpull.v1.XmlPullParserException r2;
        java.lang.Throwable r3;

        r0 := @this: android.content.res.XmlBlock$Parser;

        i0 := @parameter0: int;

        r2 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke r2.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("getNamespaceUri() not supported");

        r3 = (java.lang.Throwable) r2;

        throw r3;
    }

    final java.lang.CharSequence getPooledString(int)
    {
        android.content.res.XmlBlock$Parser r0;
        int i0;
        android.content.res.XmlBlock $r1;
        android.content.res.StringBlock $r2;
        java.lang.CharSequence $r3;

        r0 := @this: android.content.res.XmlBlock$Parser;

        i0 := @parameter0: int;

        $r1 = r0.<android.content.res.XmlBlock$Parser: android.content.res.XmlBlock this$0>;

        $r2 = $r1.<android.content.res.XmlBlock: android.content.res.StringBlock mStrings>;

        $r3 = virtualinvoke $r2.<android.content.res.StringBlock: java.lang.CharSequence get(int)>(i0);

        return $r3;
    }

    public java.lang.String getPositionDescription()
    {
        android.content.res.XmlBlock$Parser r0;
        java.lang.StringBuilder $r2;
        int $i0;
        java.lang.String $r5;

        r0 := @this: android.content.res.XmlBlock$Parser;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Binary XML file line #");

        $i0 = virtualinvoke r0.<android.content.res.XmlBlock$Parser: int getLineNumber()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public java.lang.String getPrefix()
    {
        android.content.res.XmlBlock$Parser r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.content.res.XmlBlock$Parser;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("getPrefix not supported");

        throw $r1;
    }

    public java.lang.Object getProperty(java.lang.String)
    {
        android.content.res.XmlBlock$Parser r0;
        java.lang.String r1;

        r0 := @this: android.content.res.XmlBlock$Parser;

        r1 := @parameter0: java.lang.String;

        return null;
    }

    public int getSourceResId()
    {
        android.content.res.XmlBlock$Parser r0;
        long $l0;
        int $i1;

        r0 := @this: android.content.res.XmlBlock$Parser;

        $l0 = r0.<android.content.res.XmlBlock$Parser: long mParseState>;

        $i1 = staticinvoke <android.content.res.XmlBlock: int access$100(long)>($l0);

        return $i1;
    }

    public int getStyleAttribute()
    {
        android.content.res.XmlBlock$Parser r0;
        long $l0;
        int $i1;

        r0 := @this: android.content.res.XmlBlock$Parser;

        $l0 = r0.<android.content.res.XmlBlock$Parser: long mParseState>;

        $i1 = staticinvoke <android.content.res.XmlBlock: int access$1500(long)>($l0);

        return $i1;
    }

    public java.lang.String getText()
    {
        android.content.res.XmlBlock$Parser r0;
        int i0;
        long $l1;
        android.content.res.XmlBlock $r1;
        android.content.res.StringBlock $r2;
        java.lang.CharSequence $r3;
        java.lang.String r4;

        r0 := @this: android.content.res.XmlBlock$Parser;

        $l1 = r0.<android.content.res.XmlBlock$Parser: long mParseState>;

        i0 = staticinvoke <android.content.res.XmlBlock: int access$200(long)>($l1);

        if i0 < 0 goto label1;

        $r1 = r0.<android.content.res.XmlBlock$Parser: android.content.res.XmlBlock this$0>;

        $r2 = $r1.<android.content.res.XmlBlock: android.content.res.StringBlock mStrings>;

        $r3 = virtualinvoke $r2.<android.content.res.StringBlock: java.lang.CharSequence get(int)>(i0);

        r4 = interfaceinvoke $r3.<java.lang.CharSequence: java.lang.String toString()>();

        goto label2;

     label1:
        r4 = null;

     label2:
        return r4;
    }

    public char[] getTextCharacters(int[])
    {
        android.content.res.XmlBlock$Parser r0;
        int[] r1;
        java.lang.String r2;
        int $i0, $i1, $i2;
        char[] r3;

        r0 := @this: android.content.res.XmlBlock$Parser;

        r1 := @parameter0: int[];

        r2 = virtualinvoke r0.<android.content.res.XmlBlock$Parser: java.lang.String getText()>();

        r3 = null;

        if r2 == null goto label1;

        r1[0] = 0;

        $i0 = virtualinvoke r2.<java.lang.String: int length()>();

        r1[1] = $i0;

        $i1 = virtualinvoke r2.<java.lang.String: int length()>();

        r3 = newarray (char)[$i1];

        $i2 = virtualinvoke r2.<java.lang.String: int length()>();

        virtualinvoke r2.<java.lang.String: void getChars(int,int,char[],int)>(0, $i2, r3, 0);

     label1:
        return r3;
    }

    public boolean isAttributeDefault(int)
    {
        android.content.res.XmlBlock$Parser r0;
        int i0;

        r0 := @this: android.content.res.XmlBlock$Parser;

        i0 := @parameter0: int;

        return 0;
    }

    public boolean isEmptyElementTag() throws org.xmlpull.v1.XmlPullParserException
    {
        android.content.res.XmlBlock$Parser r0;

        r0 := @this: android.content.res.XmlBlock$Parser;

        return 0;
    }

    public boolean isWhitespace() throws org.xmlpull.v1.XmlPullParserException
    {
        android.content.res.XmlBlock$Parser r0;

        r0 := @this: android.content.res.XmlBlock$Parser;

        return 0;
    }

    public int next() throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.res.XmlBlock$Parser r0;
        long l0;
        int i1, $i3, $i4, $i5, $i6;
        boolean $z0, $z1;
        byte $b2;

        r0 := @this: android.content.res.XmlBlock$Parser;

        $z0 = r0.<android.content.res.XmlBlock$Parser: boolean mStarted>;

        if $z0 != 0 goto label1;

        r0.<android.content.res.XmlBlock$Parser: boolean mStarted> = 1;

        return 0;

     label1:
        l0 = r0.<android.content.res.XmlBlock$Parser: long mParseState>;

        $b2 = l0 cmp 0L;

        if $b2 != 0 goto label2;

        return 1;

     label2:
        i1 = staticinvoke <android.content.res.XmlBlock: int nativeNext(long)>(l0);

        $z1 = r0.<android.content.res.XmlBlock$Parser: boolean mDecNextDepth>;

        if $z1 == 0 goto label3;

        $i5 = r0.<android.content.res.XmlBlock$Parser: int mDepth>;

        $i6 = $i5 - 1;

        r0.<android.content.res.XmlBlock$Parser: int mDepth> = $i6;

        r0.<android.content.res.XmlBlock$Parser: boolean mDecNextDepth> = 0;

     label3:
        if i1 == 2 goto label5;

        if i1 == 3 goto label4;

        goto label6;

     label4:
        r0.<android.content.res.XmlBlock$Parser: boolean mDecNextDepth> = 1;

        goto label6;

     label5:
        $i3 = r0.<android.content.res.XmlBlock$Parser: int mDepth>;

        $i4 = $i3 + 1;

        r0.<android.content.res.XmlBlock$Parser: int mDepth> = $i4;

     label6:
        r0.<android.content.res.XmlBlock$Parser: int mEventType> = i1;

        if i1 != 1 goto label7;

        virtualinvoke r0.<android.content.res.XmlBlock$Parser: void close()>();

     label7:
        return i1;
    }

    public int nextTag() throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.res.XmlBlock$Parser r0;
        int i0, i1;
        java.lang.String $r3, $r7;
        boolean $z0;
        java.lang.StringBuilder r8;
        org.xmlpull.v1.XmlPullParserException r9;
        java.lang.Throwable r10;

        r0 := @this: android.content.res.XmlBlock$Parser;

        i0 = virtualinvoke r0.<android.content.res.XmlBlock$Parser: int next()>();

        i1 = i0;

        if i0 != 4 goto label1;

        i1 = i0;

        $z0 = virtualinvoke r0.<android.content.res.XmlBlock$Parser: boolean isWhitespace()>();

        if $z0 == 0 goto label1;

        i1 = virtualinvoke r0.<android.content.res.XmlBlock$Parser: int next()>();

     label1:
        if i1 == 2 goto label3;

        if i1 != 3 goto label2;

        goto label3;

     label2:
        r8 = new java.lang.StringBuilder;

        specialinvoke r8.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke r0.<android.content.res.XmlBlock$Parser: java.lang.String getPositionDescription()>();

        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": expected start or end tag");

        r9 = new org.xmlpull.v1.XmlPullParserException;

        $r7 = virtualinvoke r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r9.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String,org.xmlpull.v1.XmlPullParser,java.lang.Throwable)>($r7, r0, null);

        r10 = (java.lang.Throwable) r9;

        throw r10;

     label3:
        return i1;
    }

    public java.lang.String nextText() throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.res.XmlBlock$Parser r0;
        int i0, $i1, $i2;
        java.lang.String $r2, $r6, $r8, $r12, $r14, $r18, r19;
        java.lang.StringBuilder r23, r25, r27;
        org.xmlpull.v1.XmlPullParserException r24, r26, r28;
        java.lang.Throwable r29, r30, r31;

        r0 := @this: android.content.res.XmlBlock$Parser;

        $i1 = virtualinvoke r0.<android.content.res.XmlBlock$Parser: int getEventType()>();

        if $i1 != 2 goto label4;

        i0 = virtualinvoke r0.<android.content.res.XmlBlock$Parser: int next()>();

        if i0 != 4 goto label2;

        r19 = virtualinvoke r0.<android.content.res.XmlBlock$Parser: java.lang.String getText()>();

        $i2 = virtualinvoke r0.<android.content.res.XmlBlock$Parser: int next()>();

        if $i2 != 3 goto label1;

        return r19;

     label1:
        r23 = new java.lang.StringBuilder;

        specialinvoke r23.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke r0.<android.content.res.XmlBlock$Parser: java.lang.String getPositionDescription()>();

        virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": event TEXT it must be immediately followed by END_TAG");

        r24 = new org.xmlpull.v1.XmlPullParserException;

        $r18 = virtualinvoke r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r24.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String,org.xmlpull.v1.XmlPullParser,java.lang.Throwable)>($r18, r0, null);

        r29 = (java.lang.Throwable) r24;

        throw r29;

     label2:
        if i0 != 3 goto label3;

        return "";

     label3:
        r25 = new java.lang.StringBuilder;

        specialinvoke r25.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke r0.<android.content.res.XmlBlock$Parser: java.lang.String getPositionDescription()>();

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": parser must be on START_TAG or TEXT to read text");

        r26 = new org.xmlpull.v1.XmlPullParserException;

        $r12 = virtualinvoke r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r26.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String,org.xmlpull.v1.XmlPullParser,java.lang.Throwable)>($r12, r0, null);

        r30 = (java.lang.Throwable) r26;

        throw r30;

     label4:
        r27 = new java.lang.StringBuilder;

        specialinvoke r27.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r0.<android.content.res.XmlBlock$Parser: java.lang.String getPositionDescription()>();

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": parser must be on START_TAG to read next text");

        r28 = new org.xmlpull.v1.XmlPullParserException;

        $r6 = virtualinvoke r27.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r28.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String,org.xmlpull.v1.XmlPullParser,java.lang.Throwable)>($r6, r0, null);

        r31 = (java.lang.Throwable) r28;

        throw r31;
    }

    public int nextToken() throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.res.XmlBlock$Parser r0;
        int $i0;

        r0 := @this: android.content.res.XmlBlock$Parser;

        $i0 = virtualinvoke r0.<android.content.res.XmlBlock$Parser: int next()>();

        return $i0;
    }

    public void require(int, java.lang.String, java.lang.String) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.res.XmlBlock$Parser r0;
        int i0, $i1;
        java.lang.String r1, $r5, $r6, r7, $r11, $r12, $r14;
        boolean $z0, $z1;
        java.lang.String[] $r10;
        java.lang.StringBuilder r15;
        org.xmlpull.v1.XmlPullParserException r16;
        java.lang.Throwable r17;

        r0 := @this: android.content.res.XmlBlock$Parser;

        i0 := @parameter0: int;

        r7 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        $i1 = virtualinvoke r0.<android.content.res.XmlBlock$Parser: int getEventType()>();

        if i0 != $i1 goto label3;

        if r7 == null goto label1;

        $r6 = virtualinvoke r0.<android.content.res.XmlBlock$Parser: java.lang.String getNamespace()>();

        $z1 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z1 == 0 goto label3;

     label1:
        if r1 == null goto label2;

        $r5 = virtualinvoke r0.<android.content.res.XmlBlock$Parser: java.lang.String getName()>();

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label3;

     label2:
        return;

     label3:
        r15 = new java.lang.StringBuilder;

        specialinvoke r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("expected ");

        $r10 = <android.content.res.XmlBlock$Parser: java.lang.String[] TYPES>;

        $r11 = $r10[i0];

        virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r12 = virtualinvoke r0.<android.content.res.XmlBlock$Parser: java.lang.String getPositionDescription()>();

        virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        r16 = new org.xmlpull.v1.XmlPullParserException;

        $r14 = virtualinvoke r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r16.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r14);

        r17 = (java.lang.Throwable) r16;

        throw r17;
    }

    public void setFeature(java.lang.String, boolean) throws org.xmlpull.v1.XmlPullParserException
    {
        android.content.res.XmlBlock$Parser r0;
        java.lang.String r1, $r3, $r4, $r9;
        boolean z0, $z1, $z2;
        java.lang.StringBuilder r10;
        org.xmlpull.v1.XmlPullParserException r11;
        java.lang.Throwable r12;

        r0 := @this: android.content.res.XmlBlock$Parser;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r3 = "http://xmlpull.org/v1/doc/features.html#process-namespaces";

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label1;

        if z0 == 0 goto label1;

        return;

     label1:
        $r4 = "http://xmlpull.org/v1/doc/features.html#report-namespace-prefixes";

        $z2 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z2 == 0 goto label2;

        if z0 == 0 goto label2;

        return;

     label2:
        r10 = new java.lang.StringBuilder;

        specialinvoke r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported feature: ");

        virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        r11 = new org.xmlpull.v1.XmlPullParserException;

        $r9 = virtualinvoke r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r11.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r9);

        r12 = (java.lang.Throwable) r11;

        throw r12;
    }

    public void setInput(java.io.InputStream, java.lang.String) throws org.xmlpull.v1.XmlPullParserException
    {
        android.content.res.XmlBlock$Parser r0;
        java.io.InputStream r1;
        java.lang.String r2;
        org.xmlpull.v1.XmlPullParserException r4;
        java.lang.Throwable r5;

        r0 := @this: android.content.res.XmlBlock$Parser;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: java.lang.String;

        r4 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke r4.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("setInput() not supported");

        r5 = (java.lang.Throwable) r4;

        throw r5;
    }

    public void setInput(java.io.Reader) throws org.xmlpull.v1.XmlPullParserException
    {
        android.content.res.XmlBlock$Parser r0;
        java.io.Reader r1;
        org.xmlpull.v1.XmlPullParserException r3;
        java.lang.Throwable r4;

        r0 := @this: android.content.res.XmlBlock$Parser;

        r1 := @parameter0: java.io.Reader;

        r3 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke r3.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("setInput() not supported");

        r4 = (java.lang.Throwable) r3;

        throw r4;
    }

    public void setProperty(java.lang.String, java.lang.Object) throws org.xmlpull.v1.XmlPullParserException
    {
        android.content.res.XmlBlock$Parser r0;
        java.lang.String r1;
        java.lang.Object r2;
        org.xmlpull.v1.XmlPullParserException r4;
        java.lang.Throwable r5;

        r0 := @this: android.content.res.XmlBlock$Parser;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r4 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke r4.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("setProperty() not supported");

        r5 = (java.lang.Throwable) r4;

        throw r5;
    }
}
