final class android.content.res.XmlBlock extends java.lang.Object implements java.lang.AutoCloseable
{
    private static final boolean DEBUG;
    private final android.content.res.AssetManager mAssets;
    private final long mNative;
    private boolean mOpen;
    private int mOpenCount;
    final android.content.res.StringBlock mStrings;

    void <init>(android.content.res.AssetManager, long)
    {
        android.content.res.XmlBlock r0;
        android.content.res.AssetManager r1;
        long l0, $l1;
        android.content.res.StringBlock $r2;

        r0 := @this: android.content.res.XmlBlock;

        r1 := @parameter0: android.content.res.AssetManager;

        l0 := @parameter1: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.content.res.XmlBlock: boolean mOpen> = 1;

        r0.<android.content.res.XmlBlock: int mOpenCount> = 1;

        r0.<android.content.res.XmlBlock: android.content.res.AssetManager mAssets> = r1;

        r0.<android.content.res.XmlBlock: long mNative> = l0;

        $r2 = new android.content.res.StringBlock;

        $l1 = staticinvoke <android.content.res.XmlBlock: long nativeGetStringBlock(long)>(l0);

        specialinvoke $r2.<android.content.res.StringBlock: void <init>(long,boolean)>($l1, 0);

        r0.<android.content.res.XmlBlock: android.content.res.StringBlock mStrings> = $r2;

        return;
    }

    public void <init>(byte[])
    {
        android.content.res.XmlBlock r0;
        byte[] r1;
        long l0, $l2;
        int $i1;
        android.content.res.StringBlock $r2;

        r0 := @this: android.content.res.XmlBlock;

        r1 := @parameter0: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.content.res.XmlBlock: boolean mOpen> = 1;

        r0.<android.content.res.XmlBlock: int mOpenCount> = 1;

        r0.<android.content.res.XmlBlock: android.content.res.AssetManager mAssets> = null;

        $i1 = lengthof r1;

        l0 = staticinvoke <android.content.res.XmlBlock: long nativeCreate(byte[],int,int)>(r1, 0, $i1);

        r0.<android.content.res.XmlBlock: long mNative> = l0;

        $r2 = new android.content.res.StringBlock;

        $l2 = staticinvoke <android.content.res.XmlBlock: long nativeGetStringBlock(long)>(l0);

        specialinvoke $r2.<android.content.res.StringBlock: void <init>(long,boolean)>($l2, 0);

        r0.<android.content.res.XmlBlock: android.content.res.StringBlock mStrings> = $r2;

        return;
    }

    public void <init>(byte[], int, int)
    {
        android.content.res.XmlBlock r0;
        byte[] r1;
        int i0, i1;
        long l2, $l3;
        android.content.res.StringBlock $r2;

        r0 := @this: android.content.res.XmlBlock;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.content.res.XmlBlock: boolean mOpen> = 1;

        r0.<android.content.res.XmlBlock: int mOpenCount> = 1;

        r0.<android.content.res.XmlBlock: android.content.res.AssetManager mAssets> = null;

        l2 = staticinvoke <android.content.res.XmlBlock: long nativeCreate(byte[],int,int)>(r1, i0, i1);

        r0.<android.content.res.XmlBlock: long mNative> = l2;

        $r2 = new android.content.res.StringBlock;

        $l3 = staticinvoke <android.content.res.XmlBlock: long nativeGetStringBlock(long)>(l2);

        specialinvoke $r2.<android.content.res.StringBlock: void <init>(long,boolean)>($l3, 0);

        r0.<android.content.res.XmlBlock: android.content.res.StringBlock mStrings> = $r2;

        return;
    }

    static int access$008(android.content.res.XmlBlock)
    {
        android.content.res.XmlBlock r0;
        int i0, $i1;

        r0 := @parameter0: android.content.res.XmlBlock;

        i0 = r0.<android.content.res.XmlBlock: int mOpenCount>;

        $i1 = i0 + 1;

        r0.<android.content.res.XmlBlock: int mOpenCount> = $i1;

        return i0;
    }

    static int access$100(long)
    {
        long l0;
        int $i1;

        l0 := @parameter0: long;

        $i1 = staticinvoke <android.content.res.XmlBlock: int nativeGetSourceResId(long)>(l0);

        return $i1;
    }

    static int access$1000(long, int)
    {
        long l0;
        int i1, $i2;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $i2 = staticinvoke <android.content.res.XmlBlock: int nativeGetAttributeData(long,int)>(l0, i1);

        return $i2;
    }

    static int access$1100(long, java.lang.String, java.lang.String)
    {
        long l0;
        java.lang.String r0, r1;
        int $i1;

        l0 := @parameter0: long;

        r0 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        $i1 = staticinvoke <android.content.res.XmlBlock: int nativeGetAttributeIndex(long,java.lang.String,java.lang.String)>(l0, r0, r1);

        return $i1;
    }

    static int access$1200(long, int)
    {
        long l0;
        int i1, $i2;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $i2 = staticinvoke <android.content.res.XmlBlock: int nativeGetAttributeResource(long,int)>(l0, i1);

        return $i2;
    }

    static int access$1300(long)
    {
        long l0;
        int $i1;

        l0 := @parameter0: long;

        $i1 = staticinvoke <android.content.res.XmlBlock: int nativeGetIdAttribute(long)>(l0);

        return $i1;
    }

    static int access$1400(long)
    {
        long l0;
        int $i1;

        l0 := @parameter0: long;

        $i1 = staticinvoke <android.content.res.XmlBlock: int nativeGetClassAttribute(long)>(l0);

        return $i1;
    }

    static int access$1500(long)
    {
        long l0;
        int $i1;

        l0 := @parameter0: long;

        $i1 = staticinvoke <android.content.res.XmlBlock: int nativeGetStyleAttribute(long)>(l0);

        return $i1;
    }

    static void access$1600(long)
    {
        long l0;

        l0 := @parameter0: long;

        staticinvoke <android.content.res.XmlBlock: void nativeDestroyParseState(long)>(l0);

        return;
    }

    static void access$1700(android.content.res.XmlBlock)
    {
        android.content.res.XmlBlock r0;

        r0 := @parameter0: android.content.res.XmlBlock;

        specialinvoke r0.<android.content.res.XmlBlock: void decOpenCountLocked()>();

        return;
    }

    static int access$200(long)
    {
        long l0;
        int $i1;

        l0 := @parameter0: long;

        $i1 = staticinvoke <android.content.res.XmlBlock: int nativeGetText(long)>(l0);

        return $i1;
    }

    static int access$300(long)
    {
        long l0;
        int $i1;

        l0 := @parameter0: long;

        $i1 = staticinvoke <android.content.res.XmlBlock: int nativeGetLineNumber(long)>(l0);

        return $i1;
    }

    static int access$400(long)
    {
        long l0;
        int $i1;

        l0 := @parameter0: long;

        $i1 = staticinvoke <android.content.res.XmlBlock: int nativeGetNamespace(long)>(l0);

        return $i1;
    }

    static int access$500(long, int)
    {
        long l0;
        int i1, $i2;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $i2 = staticinvoke <android.content.res.XmlBlock: int nativeGetAttributeNamespace(long,int)>(l0, i1);

        return $i2;
    }

    static int access$600(long, int)
    {
        long l0;
        int i1, $i2;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $i2 = staticinvoke <android.content.res.XmlBlock: int nativeGetAttributeName(long,int)>(l0, i1);

        return $i2;
    }

    static int access$700(long)
    {
        long l0;
        int $i1;

        l0 := @parameter0: long;

        $i1 = staticinvoke <android.content.res.XmlBlock: int nativeGetAttributeCount(long)>(l0);

        return $i1;
    }

    static int access$800(long, int)
    {
        long l0;
        int i1, $i2;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $i2 = staticinvoke <android.content.res.XmlBlock: int nativeGetAttributeStringValue(long,int)>(l0, i1);

        return $i2;
    }

    static int access$900(long, int)
    {
        long l0;
        int i1, $i2;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $i2 = staticinvoke <android.content.res.XmlBlock: int nativeGetAttributeDataType(long,int)>(l0, i1);

        return $i2;
    }

    private void decOpenCountLocked()
    {
        android.content.res.XmlBlock r0;
        int i0, $i1, $i3;
        android.content.res.AssetManager r1;
        long $l2;

        r0 := @this: android.content.res.XmlBlock;

        $i1 = r0.<android.content.res.XmlBlock: int mOpenCount>;

        i0 = $i1 - 1;

        r0.<android.content.res.XmlBlock: int mOpenCount> = i0;

        if i0 != 0 goto label1;

        $l2 = r0.<android.content.res.XmlBlock: long mNative>;

        staticinvoke <android.content.res.XmlBlock: void nativeDestroy(long)>($l2);

        r1 = r0.<android.content.res.XmlBlock: android.content.res.AssetManager mAssets>;

        if r1 == null goto label1;

        $i3 = virtualinvoke r0.<java.lang.Object: int hashCode()>();

        virtualinvoke r1.<android.content.res.AssetManager: void xmlBlockGone(int)>($i3);

     label1:
        return;
    }

    private static final native long nativeCreate(byte[], int, int);

    private static final native long nativeCreateParseState(long, int);

    private static final native void nativeDestroy(long);

    private static final native void nativeDestroyParseState(long);

    private static final native int nativeGetAttributeCount(long);

    private static final native int nativeGetAttributeData(long, int);

    private static final native int nativeGetAttributeDataType(long, int);

    private static final native int nativeGetAttributeIndex(long, java.lang.String, java.lang.String);

    private static final native int nativeGetAttributeName(long, int);

    private static final native int nativeGetAttributeNamespace(long, int);

    private static final native int nativeGetAttributeResource(long, int);

    private static final native int nativeGetAttributeStringValue(long, int);

    private static final native int nativeGetClassAttribute(long);

    private static final native int nativeGetIdAttribute(long);

    private static final native int nativeGetLineNumber(long);

    static final native int nativeGetName(long);

    private static final native int nativeGetNamespace(long);

    private static final native int nativeGetSourceResId(long);

    private static final native long nativeGetStringBlock(long);

    private static final native int nativeGetStyleAttribute(long);

    private static final native int nativeGetText(long);

    static final native int nativeNext(long);

    public void close()
    {
        android.content.res.XmlBlock r0;
        boolean $z0;
        java.lang.Throwable $r2;

        r0 := @this: android.content.res.XmlBlock;

        entermonitor r0;

     label1:
        $z0 = r0.<android.content.res.XmlBlock: boolean mOpen>;

        if $z0 == 0 goto label2;

        r0.<android.content.res.XmlBlock: boolean mOpen> = 0;

        specialinvoke r0.<android.content.res.XmlBlock: void decOpenCountLocked()>();

     label2:
        exitmonitor r0;

     label3:
        return;

     label4:
        $r2 := @caughtexception;

     label5:
        exitmonitor r0;

     label6:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.content.res.XmlBlock r0;

        r0 := @this: android.content.res.XmlBlock;

        virtualinvoke r0.<android.content.res.XmlBlock: void close()>();

        return;
    }

    public android.content.res.XmlResourceParser newParser()
    {
        android.content.res.XmlBlock r0;
        android.content.res.XmlResourceParser $r1;

        r0 := @this: android.content.res.XmlBlock;

        $r1 = virtualinvoke r0.<android.content.res.XmlBlock: android.content.res.XmlResourceParser newParser(int)>(0);

        return $r1;
    }

    public android.content.res.XmlResourceParser newParser(int)
    {
        android.content.res.XmlBlock r0;
        int i0;
        long $l1, $l3, $l4;
        byte $b2;
        java.lang.Throwable $r1;
        android.content.res.XmlBlock$Parser r2;

        r0 := @this: android.content.res.XmlBlock;

        i0 := @parameter0: int;

        entermonitor r0;

     label1:
        $l1 = r0.<android.content.res.XmlBlock: long mNative>;

        $b2 = $l1 cmp 0L;

        if $b2 == 0 goto label3;

        r2 = new android.content.res.XmlBlock$Parser;

        $l3 = r0.<android.content.res.XmlBlock: long mNative>;

        $l4 = staticinvoke <android.content.res.XmlBlock: long nativeCreateParseState(long,int)>($l3, i0);

        specialinvoke r2.<android.content.res.XmlBlock$Parser: void <init>(android.content.res.XmlBlock,long,android.content.res.XmlBlock)>(r0, $l4, r0);

        exitmonitor r0;

     label2:
        return r2;

     label3:
        exitmonitor r0;

     label4:
        return null;

     label5:
        $r1 := @caughtexception;

     label6:
        exitmonitor r0;

     label7:
        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public static void <clinit>()
    {
        <android.content.res.XmlBlock: boolean DEBUG> = 0;

        return;
    }
}
