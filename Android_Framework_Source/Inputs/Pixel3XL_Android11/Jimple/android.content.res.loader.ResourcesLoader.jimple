public class android.content.res.loader.ResourcesLoader extends java.lang.Object
{
    private android.content.res.ApkAssets[] mApkAssets;
    private android.util.ArrayMap mChangeCallbacks;
    private final java.lang.Object mLock;
    private android.content.res.loader.ResourcesProvider[] mPreviousProviders;
    private android.content.res.loader.ResourcesProvider[] mProviders;

    public void <init>()
    {
        android.content.res.loader.ResourcesLoader r0;
        java.lang.Object $r1;
        android.util.ArrayMap $r2;

        r0 := @this: android.content.res.loader.ResourcesLoader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        r0.<android.content.res.loader.ResourcesLoader: java.lang.Object mLock> = $r1;

        $r2 = new android.util.ArrayMap;

        specialinvoke $r2.<android.util.ArrayMap: void <init>()>();

        r0.<android.content.res.loader.ResourcesLoader: android.util.ArrayMap mChangeCallbacks> = $r2;

        return;
    }

    private static boolean arrayEquals(android.content.res.loader.ResourcesProvider[], android.content.res.loader.ResourcesProvider[])
    {
        android.content.res.loader.ResourcesProvider[] r0, r1;
        int i0, $i1, $i2, i3;
        android.content.res.loader.ResourcesProvider $r2, $r3;

        r0 := @parameter0: android.content.res.loader.ResourcesProvider[];

        r1 := @parameter1: android.content.res.loader.ResourcesProvider[];

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r0 == null goto label7;

        if r1 != null goto label2;

        goto label7;

     label2:
        $i2 = lengthof r0;

        $i1 = lengthof r1;

        if $i2 == $i1 goto label3;

        return 0;

     label3:
        i3 = 0;

        i0 = lengthof r0;

     label4:
        if i3 >= i0 goto label6;

        $r3 = r0[i3];

        $r2 = r1[i3];

        if $r3 == $r2 goto label5;

        return 0;

     label5:
        i3 = i3 + 1;

        goto label4;

     label6:
        return 1;

     label7:
        return 0;
    }

    private void notifyProvidersChangedLocked()
    {
        android.content.res.loader.ResourcesLoader r0;
        android.util.ArraySet $r2;
        android.content.res.loader.ResourcesProvider[] $r3, $r4, $r5, $r20, $r22, r26, r27;
        boolean $z0;
        android.util.ArrayMap $r6, $r9, $r13, $r16;
        int $i0, $i1, $i2, i3, i4, i5, i6, i7, i8, i9;
        java.lang.Object $r7, $r10, $r12, $r14;
        android.content.res.loader.ResourcesLoader$UpdateCallbacks $r8, $r15;
        java.lang.ref.WeakReference $r11;
        android.content.res.loader.ResourcesProvider $r18, $r21, $r23;
        android.content.res.ApkAssets[] $r19, $r24;
        android.content.res.ApkAssets $r25;

        r0 := @this: android.content.res.loader.ResourcesLoader;

        $r2 = new android.util.ArraySet;

        specialinvoke $r2.<android.util.ArraySet: void <init>()>();

        $r4 = r0.<android.content.res.loader.ResourcesLoader: android.content.res.loader.ResourcesProvider[] mPreviousProviders>;

        $r3 = r0.<android.content.res.loader.ResourcesLoader: android.content.res.loader.ResourcesProvider[] mProviders>;

        $z0 = staticinvoke <android.content.res.loader.ResourcesLoader: boolean arrayEquals(android.content.res.loader.ResourcesProvider[],android.content.res.loader.ResourcesProvider[])>($r4, $r3);

        if $z0 == 0 goto label01;

        return;

     label01:
        r26 = r0.<android.content.res.loader.ResourcesLoader: android.content.res.loader.ResourcesProvider[] mProviders>;

        if r26 == null goto label04;

        $i1 = lengthof r26;

        if $i1 != 0 goto label02;

        goto label04;

     label02:
        $i2 = lengthof r26;

        $r19 = newarray (android.content.res.ApkAssets)[$i2];

        r0.<android.content.res.loader.ResourcesLoader: android.content.res.ApkAssets[] mApkAssets> = $r19;

        i3 = 0;

        i4 = lengthof r26;

     label03:
        if i3 >= i4 goto label05;

        $r20 = r0.<android.content.res.loader.ResourcesLoader: android.content.res.loader.ResourcesProvider[] mProviders>;

        $r21 = $r20[i3];

        virtualinvoke $r21.<android.content.res.loader.ResourcesProvider: void incrementRefCount()>();

        $r24 = r0.<android.content.res.loader.ResourcesLoader: android.content.res.ApkAssets[] mApkAssets>;

        $r22 = r0.<android.content.res.loader.ResourcesLoader: android.content.res.loader.ResourcesProvider[] mProviders>;

        $r23 = $r22[i3];

        $r25 = virtualinvoke $r23.<android.content.res.loader.ResourcesProvider: android.content.res.ApkAssets getApkAssets()>();

        $r24[i3] = $r25;

        i3 = i3 + 1;

        goto label03;

     label04:
        r0.<android.content.res.loader.ResourcesLoader: android.content.res.ApkAssets[] mApkAssets> = null;

     label05:
        r27 = r0.<android.content.res.loader.ResourcesLoader: android.content.res.loader.ResourcesProvider[] mPreviousProviders>;

        if r27 == null goto label07;

        i5 = lengthof r27;

        i6 = 0;

     label06:
        if i6 >= i5 goto label07;

        $r18 = r27[i6];

        virtualinvoke $r18.<android.content.res.loader.ResourcesProvider: void decrementRefCount()>();

        i6 = i6 + 1;

        goto label06;

     label07:
        $r5 = r0.<android.content.res.loader.ResourcesLoader: android.content.res.loader.ResourcesProvider[] mProviders>;

        r0.<android.content.res.loader.ResourcesLoader: android.content.res.loader.ResourcesProvider[] mPreviousProviders> = $r5;

        $r6 = r0.<android.content.res.loader.ResourcesLoader: android.util.ArrayMap mChangeCallbacks>;

        $i0 = virtualinvoke $r6.<android.util.ArrayMap: int size()>();

        i7 = $i0 - 1;

     label08:
        if i7 < 0 goto label11;

        $r9 = r0.<android.content.res.loader.ResourcesLoader: android.util.ArrayMap mChangeCallbacks>;

        $r10 = virtualinvoke $r9.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i7);

        $r11 = (java.lang.ref.WeakReference) $r10;

        $r12 = virtualinvoke $r11.<java.lang.ref.WeakReference: java.lang.Object get()>();

        if $r12 != null goto label09;

        $r16 = r0.<android.content.res.loader.ResourcesLoader: android.util.ArrayMap mChangeCallbacks>;

        virtualinvoke $r16.<android.util.ArrayMap: java.lang.Object removeAt(int)>(i7);

        goto label10;

     label09:
        $r13 = r0.<android.content.res.loader.ResourcesLoader: android.util.ArrayMap mChangeCallbacks>;

        $r14 = virtualinvoke $r13.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i7);

        $r15 = (android.content.res.loader.ResourcesLoader$UpdateCallbacks) $r14;

        virtualinvoke $r2.<android.util.ArraySet: boolean add(java.lang.Object)>($r15);

     label10:
        i7 = i7 + -1;

        goto label08;

     label11:
        i8 = 0;

        i9 = virtualinvoke $r2.<android.util.ArraySet: int size()>();

     label12:
        if i8 >= i9 goto label13;

        $r7 = virtualinvoke $r2.<android.util.ArraySet: java.lang.Object valueAt(int)>(i8);

        $r8 = (android.content.res.loader.ResourcesLoader$UpdateCallbacks) $r7;

        interfaceinvoke $r8.<android.content.res.loader.ResourcesLoader$UpdateCallbacks: void onLoaderUpdated(android.content.res.loader.ResourcesLoader)>(r0);

        i8 = i8 + 1;

        goto label12;

     label13:
        return;
    }

    public void addProvider(android.content.res.loader.ResourcesProvider)
    {
        android.content.res.loader.ResourcesLoader r0;
        java.lang.Object r1;
        android.content.res.loader.ResourcesProvider[] $r2, $r4;
        java.lang.Object[] $r3;
        java.lang.Throwable $r5;
        android.content.res.loader.ResourcesProvider r6;

        r0 := @this: android.content.res.loader.ResourcesLoader;

        r6 := @parameter0: android.content.res.loader.ResourcesProvider;

        r1 = r0.<android.content.res.loader.ResourcesLoader: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<android.content.res.loader.ResourcesLoader: android.content.res.loader.ResourcesProvider[] mProviders>;

        $r3 = staticinvoke <com.android.internal.util.ArrayUtils: java.lang.Object[] appendElement(java.lang.Class,java.lang.Object[],java.lang.Object)>(class "Landroid/content/res/loader/ResourcesProvider;", $r2, r6);

        $r4 = (android.content.res.loader.ResourcesProvider[]) $r3;

        r0.<android.content.res.loader.ResourcesLoader: android.content.res.loader.ResourcesProvider[] mProviders> = $r4;

        specialinvoke r0.<android.content.res.loader.ResourcesLoader: void notifyProvidersChangedLocked()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void clearProviders()
    {
        android.content.res.loader.ResourcesLoader r0;
        java.lang.Object r1;
        java.lang.Throwable $r3;

        r0 := @this: android.content.res.loader.ResourcesLoader;

        r1 = r0.<android.content.res.loader.ResourcesLoader: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r0.<android.content.res.loader.ResourcesLoader: android.content.res.loader.ResourcesProvider[] mProviders> = null;

        specialinvoke r0.<android.content.res.loader.ResourcesLoader: void notifyProvidersChangedLocked()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public java.util.List getApkAssets()
    {
        android.content.res.loader.ResourcesLoader r0;
        java.lang.Object r1;
        android.content.res.ApkAssets[] $r2, $r3;
        java.lang.Throwable $r4;
        java.util.List r5, r6;

        r0 := @this: android.content.res.loader.ResourcesLoader;

        r1 = r0.<android.content.res.loader.ResourcesLoader: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<android.content.res.loader.ResourcesLoader: android.content.res.ApkAssets[] mApkAssets>;

        if $r2 != null goto label3;

        r5 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        exitmonitor r1;

     label2:
        return r5;

     label3:
        $r3 = r0.<android.content.res.loader.ResourcesLoader: android.content.res.ApkAssets[] mApkAssets>;

        r6 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r3);

        exitmonitor r1;

     label4:
        return r6;

     label5:
        $r4 := @caughtexception;

     label6:
        exitmonitor r1;

     label7:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public java.util.List getProviders()
    {
        android.content.res.loader.ResourcesLoader r0;
        java.lang.Object r1;
        android.content.res.loader.ResourcesProvider[] $r2, $r3;
        java.lang.Throwable $r4;
        java.util.List r5;

        r0 := @this: android.content.res.loader.ResourcesLoader;

        r1 = r0.<android.content.res.loader.ResourcesLoader: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<android.content.res.loader.ResourcesLoader: android.content.res.loader.ResourcesProvider[] mProviders>;

        if $r2 != null goto label3;

        r5 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

     label2:
        goto label4;

     label3:
        $r3 = r0.<android.content.res.loader.ResourcesLoader: android.content.res.loader.ResourcesProvider[] mProviders>;

        r5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r3);

     label4:
        exitmonitor r1;

     label5:
        return r5;

     label6:
        $r4 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public void registerOnProvidersChangedCallback(java.lang.Object, android.content.res.loader.ResourcesLoader$UpdateCallbacks)
    {
        android.content.res.loader.ResourcesLoader r0;
        android.content.res.loader.ResourcesLoader$UpdateCallbacks r1;
        java.lang.Object r2, r7;
        android.util.ArrayMap r3;
        java.lang.ref.WeakReference r4;
        java.lang.Throwable $r6;

        r0 := @this: android.content.res.loader.ResourcesLoader;

        r7 := @parameter0: java.lang.Object;

        r1 := @parameter1: android.content.res.loader.ResourcesLoader$UpdateCallbacks;

        r2 = r0.<android.content.res.loader.ResourcesLoader: java.lang.Object mLock>;

        entermonitor r2;

     label1:
        r3 = r0.<android.content.res.loader.ResourcesLoader: android.util.ArrayMap mChangeCallbacks>;

        r4 = new java.lang.ref.WeakReference;

        specialinvoke r4.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r7);

        virtualinvoke r3.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, r1);

        exitmonitor r2;

     label2:
        return;

     label3:
        $r6 := @caughtexception;

     label4:
        exitmonitor r2;

     label5:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void removeProvider(android.content.res.loader.ResourcesProvider)
    {
        android.content.res.loader.ResourcesLoader r0;
        java.lang.Object r1;
        android.content.res.loader.ResourcesProvider[] $r2, $r4;
        java.lang.Object[] $r3;
        java.lang.Throwable $r5;
        android.content.res.loader.ResourcesProvider r6;

        r0 := @this: android.content.res.loader.ResourcesLoader;

        r6 := @parameter0: android.content.res.loader.ResourcesProvider;

        r1 = r0.<android.content.res.loader.ResourcesLoader: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<android.content.res.loader.ResourcesLoader: android.content.res.loader.ResourcesProvider[] mProviders>;

        $r3 = staticinvoke <com.android.internal.util.ArrayUtils: java.lang.Object[] removeElement(java.lang.Class,java.lang.Object[],java.lang.Object)>(class "Landroid/content/res/loader/ResourcesProvider;", $r2, r6);

        $r4 = (android.content.res.loader.ResourcesProvider[]) $r3;

        r0.<android.content.res.loader.ResourcesLoader: android.content.res.loader.ResourcesProvider[] mProviders> = $r4;

        specialinvoke r0.<android.content.res.loader.ResourcesLoader: void notifyProvidersChangedLocked()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void setProviders(java.util.List)
    {
        android.content.res.loader.ResourcesLoader r0;
        java.lang.Object r1;
        android.content.res.loader.ResourcesProvider[] $r2, $r4;
        java.lang.Object[] $r3;
        java.lang.Throwable $r5;
        java.util.List r6;

        r0 := @this: android.content.res.loader.ResourcesLoader;

        r6 := @parameter0: java.util.List;

        r1 = r0.<android.content.res.loader.ResourcesLoader: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r2 = newarray (android.content.res.loader.ResourcesProvider)[0];

        $r3 = interfaceinvoke r6.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r2);

        $r4 = (android.content.res.loader.ResourcesProvider[]) $r3;

        r0.<android.content.res.loader.ResourcesLoader: android.content.res.loader.ResourcesProvider[] mProviders> = $r4;

        specialinvoke r0.<android.content.res.loader.ResourcesLoader: void notifyProvidersChangedLocked()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void unregisterOnProvidersChangedCallback(java.lang.Object)
    {
        android.content.res.loader.ResourcesLoader r0;
        java.lang.Object r1, $r4, $r6, r10;
        int i0, i1;
        android.util.ArrayMap $r2, $r3, $r7;
        java.lang.ref.WeakReference $r5;
        java.lang.Throwable $r9;

        r0 := @this: android.content.res.loader.ResourcesLoader;

        r10 := @parameter0: java.lang.Object;

        r1 = r0.<android.content.res.loader.ResourcesLoader: java.lang.Object mLock>;

        entermonitor r1;

        i1 = 0;

     label01:
        $r2 = r0.<android.content.res.loader.ResourcesLoader: android.util.ArrayMap mChangeCallbacks>;

        i0 = virtualinvoke $r2.<android.util.ArrayMap: int size()>();

     label02:
        if i1 >= i0 goto label06;

     label03:
        $r3 = r0.<android.content.res.loader.ResourcesLoader: android.util.ArrayMap mChangeCallbacks>;

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i1);

        $r5 = (java.lang.ref.WeakReference) $r4;

        $r6 = virtualinvoke $r5.<java.lang.ref.WeakReference: java.lang.Object get()>();

        if r10 != $r6 goto label05;

        $r7 = r0.<android.content.res.loader.ResourcesLoader: android.util.ArrayMap mChangeCallbacks>;

        virtualinvoke $r7.<android.util.ArrayMap: java.lang.Object removeAt(int)>(i1);

        exitmonitor r1;

     label04:
        return;

     label05:
        i1 = i1 + 1;

        goto label02;

     label06:
        exitmonitor r1;

     label07:
        return;

     label08:
        $r9 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }
}
