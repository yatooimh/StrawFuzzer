public class android.content.res.loader.ResourcesProvider extends java.lang.Object implements java.lang.AutoCloseable, java.io.Closeable
{
    private static final java.lang.String TAG;
    private final android.content.res.ApkAssets mApkAssets;
    private final java.lang.Object mLock;
    private boolean mOpen;
    private int mOpenCount;

    private void <init>(android.content.res.ApkAssets)
    {
        android.content.res.loader.ResourcesProvider r0;
        android.content.res.ApkAssets r1;
        java.lang.Object $r2;

        r0 := @this: android.content.res.loader.ResourcesProvider;

        r1 := @parameter0: android.content.res.ApkAssets;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<android.content.res.loader.ResourcesProvider: java.lang.Object mLock> = $r2;

        r0.<android.content.res.loader.ResourcesProvider: boolean mOpen> = 1;

        r0.<android.content.res.loader.ResourcesProvider: int mOpenCount> = 0;

        r0.<android.content.res.loader.ResourcesProvider: android.content.res.ApkAssets mApkAssets> = r1;

        return;
    }

    public static android.content.res.loader.ResourcesProvider empty(android.content.res.loader.AssetsProvider)
    {
        android.content.res.loader.AssetsProvider r0;
        android.content.res.loader.ResourcesProvider $r1;
        android.content.res.ApkAssets $r2;

        r0 := @parameter0: android.content.res.loader.AssetsProvider;

        $r1 = new android.content.res.loader.ResourcesProvider;

        $r2 = staticinvoke <android.content.res.ApkAssets: android.content.res.ApkAssets loadEmptyForLoader(int,android.content.res.loader.AssetsProvider)>(4, r0);

        specialinvoke $r1.<android.content.res.loader.ResourcesProvider: void <init>(android.content.res.ApkAssets)>($r2);

        return $r1;
    }

    public static android.content.res.loader.ResourcesProvider loadFromApk(android.os.ParcelFileDescriptor) throws java.io.IOException
    {
        android.os.ParcelFileDescriptor r0;
        android.content.res.loader.ResourcesProvider $r1;

        r0 := @parameter0: android.os.ParcelFileDescriptor;

        $r1 = staticinvoke <android.content.res.loader.ResourcesProvider: android.content.res.loader.ResourcesProvider loadFromApk(android.os.ParcelFileDescriptor,android.content.res.loader.AssetsProvider)>(r0, null);

        return $r1;
    }

    public static android.content.res.loader.ResourcesProvider loadFromApk(android.os.ParcelFileDescriptor, long, long, android.content.res.loader.AssetsProvider) throws java.io.IOException
    {
        android.os.ParcelFileDescriptor r0;
        long l0, l1;
        android.content.res.loader.AssetsProvider r1;
        android.content.res.loader.ResourcesProvider $r2;
        java.io.FileDescriptor $r3;
        java.lang.String $r4;
        android.content.res.ApkAssets $r5;

        r0 := @parameter0: android.os.ParcelFileDescriptor;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        r1 := @parameter3: android.content.res.loader.AssetsProvider;

        $r2 = new android.content.res.loader.ResourcesProvider;

        $r3 = virtualinvoke r0.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        $r4 = virtualinvoke r0.<android.os.ParcelFileDescriptor: java.lang.String toString()>();

        $r5 = staticinvoke <android.content.res.ApkAssets: android.content.res.ApkAssets loadFromFd(java.io.FileDescriptor,java.lang.String,long,long,int,android.content.res.loader.AssetsProvider)>($r3, $r4, l0, l1, 4, r1);

        specialinvoke $r2.<android.content.res.loader.ResourcesProvider: void <init>(android.content.res.ApkAssets)>($r5);

        return $r2;
    }

    public static android.content.res.loader.ResourcesProvider loadFromApk(android.os.ParcelFileDescriptor, android.content.res.loader.AssetsProvider) throws java.io.IOException
    {
        android.os.ParcelFileDescriptor r0;
        android.content.res.loader.AssetsProvider r1;
        android.content.res.loader.ResourcesProvider $r2;
        java.io.FileDescriptor $r3;
        java.lang.String $r4;
        android.content.res.ApkAssets $r5;

        r0 := @parameter0: android.os.ParcelFileDescriptor;

        r1 := @parameter1: android.content.res.loader.AssetsProvider;

        $r2 = new android.content.res.loader.ResourcesProvider;

        $r3 = virtualinvoke r0.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        $r4 = virtualinvoke r0.<android.os.ParcelFileDescriptor: java.lang.String toString()>();

        $r5 = staticinvoke <android.content.res.ApkAssets: android.content.res.ApkAssets loadFromFd(java.io.FileDescriptor,java.lang.String,int,android.content.res.loader.AssetsProvider)>($r3, $r4, 4, r1);

        specialinvoke $r2.<android.content.res.loader.ResourcesProvider: void <init>(android.content.res.ApkAssets)>($r5);

        return $r2;
    }

    public static android.content.res.loader.ResourcesProvider loadFromDirectory(java.lang.String, android.content.res.loader.AssetsProvider) throws java.io.IOException
    {
        java.lang.String r0;
        android.content.res.loader.AssetsProvider r1;
        android.content.res.loader.ResourcesProvider $r2;
        android.content.res.ApkAssets $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: android.content.res.loader.AssetsProvider;

        $r2 = new android.content.res.loader.ResourcesProvider;

        $r3 = staticinvoke <android.content.res.ApkAssets: android.content.res.ApkAssets loadFromDir(java.lang.String,int,android.content.res.loader.AssetsProvider)>(r0, 4, r1);

        specialinvoke $r2.<android.content.res.loader.ResourcesProvider: void <init>(android.content.res.ApkAssets)>($r3);

        return $r2;
    }

    public static android.content.res.loader.ResourcesProvider loadFromSplit(android.content.Context, java.lang.String) throws java.io.IOException
    {
        java.lang.String r0, $r7, $r10;
        int i0;
        java.lang.String[] $r1, $r9;
        java.lang.StringBuilder $r2;
        java.lang.IllegalArgumentException $r6;
        android.content.res.loader.ResourcesProvider $r8;
        android.content.res.ApkAssets $r11;
        android.content.Context r12;
        android.content.pm.ApplicationInfo r13;

        r12 := @parameter0: android.content.Context;

        r0 := @parameter1: java.lang.String;

        r13 = virtualinvoke r12.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $r1 = r13.<android.content.pm.ApplicationInfo: java.lang.String[] splitNames>;

        i0 = staticinvoke <com.android.internal.util.ArrayUtils: int indexOf(java.lang.Object[],java.lang.Object)>($r1, r0);

        if i0 < 0 goto label1;

        $r8 = new android.content.res.loader.ResourcesProvider;

        $r9 = virtualinvoke r13.<android.content.pm.ApplicationInfo: java.lang.String[] getSplitCodePaths()>();

        $r10 = $r9[i0];

        $r11 = staticinvoke <android.content.res.ApkAssets: android.content.res.ApkAssets loadFromPath(java.lang.String,int,android.content.res.loader.AssetsProvider)>($r10, 4, null);

        specialinvoke $r8.<android.content.res.loader.ResourcesProvider: void <init>(android.content.res.ApkAssets)>($r11);

        return $r8;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Split ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not found");

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r6;
    }

    public static android.content.res.loader.ResourcesProvider loadFromTable(android.os.ParcelFileDescriptor, long, long, android.content.res.loader.AssetsProvider) throws java.io.IOException
    {
        android.os.ParcelFileDescriptor r0;
        long l0, l1;
        android.content.res.loader.AssetsProvider r1;
        android.content.res.loader.ResourcesProvider $r2;
        java.io.FileDescriptor $r3;
        java.lang.String $r4;
        android.content.res.ApkAssets $r5;

        r0 := @parameter0: android.os.ParcelFileDescriptor;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        r1 := @parameter3: android.content.res.loader.AssetsProvider;

        $r2 = new android.content.res.loader.ResourcesProvider;

        $r3 = virtualinvoke r0.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        $r4 = virtualinvoke r0.<android.os.ParcelFileDescriptor: java.lang.String toString()>();

        $r5 = staticinvoke <android.content.res.ApkAssets: android.content.res.ApkAssets loadTableFromFd(java.io.FileDescriptor,java.lang.String,long,long,int,android.content.res.loader.AssetsProvider)>($r3, $r4, l0, l1, 4, r1);

        specialinvoke $r2.<android.content.res.loader.ResourcesProvider: void <init>(android.content.res.ApkAssets)>($r5);

        return $r2;
    }

    public static android.content.res.loader.ResourcesProvider loadFromTable(android.os.ParcelFileDescriptor, android.content.res.loader.AssetsProvider) throws java.io.IOException
    {
        android.os.ParcelFileDescriptor r0;
        android.content.res.loader.AssetsProvider r1;
        android.content.res.loader.ResourcesProvider $r2;
        java.io.FileDescriptor $r3;
        java.lang.String $r4;
        android.content.res.ApkAssets $r5;

        r0 := @parameter0: android.os.ParcelFileDescriptor;

        r1 := @parameter1: android.content.res.loader.AssetsProvider;

        $r2 = new android.content.res.loader.ResourcesProvider;

        $r3 = virtualinvoke r0.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        $r4 = virtualinvoke r0.<android.os.ParcelFileDescriptor: java.lang.String toString()>();

        $r5 = staticinvoke <android.content.res.ApkAssets: android.content.res.ApkAssets loadTableFromFd(java.io.FileDescriptor,java.lang.String,int,android.content.res.loader.AssetsProvider)>($r3, $r4, 4, r1);

        specialinvoke $r2.<android.content.res.loader.ResourcesProvider: void <init>(android.content.res.ApkAssets)>($r5);

        return $r2;
    }

    public void close()
    {
        android.content.res.loader.ResourcesProvider r0;
        java.lang.StringBuilder r1;
        boolean $z0;
        int $i0, $i1;
        java.lang.String $r5;
        android.content.res.ApkAssets $r6;
        java.lang.Throwable $r7, $r8;
        java.lang.Object r9;
        java.lang.IllegalStateException r11;

        r0 := @this: android.content.res.loader.ResourcesProvider;

        r9 = r0.<android.content.res.loader.ResourcesProvider: java.lang.Object mLock>;

        entermonitor r9;

     label01:
        $z0 = r0.<android.content.res.loader.ResourcesProvider: boolean mOpen>;

        if $z0 != 0 goto label03;

        exitmonitor r9;

     label02:
        return;

     label03:
        $i0 = r0.<android.content.res.loader.ResourcesProvider: int mOpenCount>;

        if $i0 != 0 goto label08;

        r0.<android.content.res.loader.ResourcesProvider: boolean mOpen> = 0;

        exitmonitor r9;

     label04:
        $r6 = r0.<android.content.res.loader.ResourcesProvider: android.content.res.ApkAssets mApkAssets>;

        virtualinvoke $r6.<android.content.res.ApkAssets: void close()>();

     label05:
        goto label07;

     label06:
        $r8 := @caughtexception;

     label07:
        return;

     label08:
        r11 = new java.lang.IllegalStateException;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to close provider used by ");

        $i1 = r0.<android.content.res.loader.ResourcesProvider: int mOpenCount>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ResourcesLoader instances");

        $r5 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r5);

        throw r11;

     label09:
        $r7 := @caughtexception;

     label10:
        exitmonitor r9;

     label11:
        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label08 to label09 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    final void decrementRefCount()
    {
        android.content.res.loader.ResourcesProvider r0;
        java.lang.Object r1;
        int $i0, $i1;
        java.lang.Throwable $r3;

        r0 := @this: android.content.res.loader.ResourcesProvider;

        r1 = r0.<android.content.res.loader.ResourcesProvider: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $i0 = r0.<android.content.res.loader.ResourcesProvider: int mOpenCount>;

        $i1 = $i0 - 1;

        r0.<android.content.res.loader.ResourcesProvider: int mOpenCount> = $i1;

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.content.res.loader.ResourcesProvider r0;
        java.lang.Object r1;
        int $i0, $i1;
        boolean $z0;
        android.content.res.ApkAssets $r2;
        java.lang.String $r7;
        java.lang.Throwable $r8;
        java.lang.StringBuilder r9;

        r0 := @this: android.content.res.loader.ResourcesProvider;

        r1 = r0.<android.content.res.loader.ResourcesProvider: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $i0 = r0.<android.content.res.loader.ResourcesProvider: int mOpenCount>;

        if $i0 == 0 goto label2;

        r9 = new java.lang.StringBuilder;

        specialinvoke r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ResourcesProvider ");

        virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" finalized with non-zero refs: ");

        $i1 = r0.<android.content.res.loader.ResourcesProvider: int mOpenCount>;

        virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r7 = virtualinvoke r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ResourcesProvider", $r7);

     label2:
        $z0 = r0.<android.content.res.loader.ResourcesProvider: boolean mOpen>;

        if $z0 == 0 goto label3;

        r0.<android.content.res.loader.ResourcesProvider: boolean mOpen> = 0;

        $r2 = r0.<android.content.res.loader.ResourcesProvider: android.content.res.ApkAssets mApkAssets>;

        virtualinvoke $r2.<android.content.res.ApkAssets: void close()>();

     label3:
        exitmonitor r1;

     label4:
        return;

     label5:
        $r8 := @caughtexception;

     label6:
        exitmonitor r1;

     label7:
        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public android.content.res.ApkAssets getApkAssets()
    {
        android.content.res.loader.ResourcesProvider r0;
        android.content.res.ApkAssets $r1;

        r0 := @this: android.content.res.loader.ResourcesProvider;

        $r1 = r0.<android.content.res.loader.ResourcesProvider: android.content.res.ApkAssets mApkAssets>;

        return $r1;
    }

    final void incrementRefCount()
    {
        android.content.res.loader.ResourcesProvider r0;
        java.lang.Object r1;
        boolean $z0;
        int $i0, $i1;
        java.lang.Throwable $r2;
        java.lang.IllegalStateException r3;

        r0 := @this: android.content.res.loader.ResourcesProvider;

        r1 = r0.<android.content.res.loader.ResourcesProvider: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $z0 = r0.<android.content.res.loader.ResourcesProvider: boolean mOpen>;

        if $z0 == 0 goto label3;

        $i0 = r0.<android.content.res.loader.ResourcesProvider: int mOpenCount>;

        $i1 = $i0 + 1;

        r0.<android.content.res.loader.ResourcesProvider: int mOpenCount> = $i1;

        exitmonitor r1;

     label2:
        return;

     label3:
        r3 = new java.lang.IllegalStateException;

        specialinvoke r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Operation failed: resources provider is closed");

        throw r3;

     label4:
        $r2 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label3 to label4 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public static void <clinit>()
    {
        <android.content.res.loader.ResourcesProvider: java.lang.String TAG> = "ResourcesProvider";

        return;
    }
}
