public final class android.content.rollback.PackageRollbackInfo extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    private final android.util.SparseLongArray mCeSnapshotInodes;
    private final boolean mIsApex;
    private final boolean mIsApkInApex;
    private final android.util.IntArray mPendingBackups;
    private final java.util.ArrayList mPendingRestores;
    private final int mRollbackDataPolicy;
    private final android.util.IntArray mSnapshottedUsers;
    private final android.content.pm.VersionedPackage mVersionRolledBackFrom;
    private final android.content.pm.VersionedPackage mVersionRolledBackTo;

    static void <clinit>()
    {
        android.content.rollback.PackageRollbackInfo$1 $r0;

        $r0 = new android.content.rollback.PackageRollbackInfo$1;

        specialinvoke $r0.<android.content.rollback.PackageRollbackInfo$1: void <init>()>();

        <android.content.rollback.PackageRollbackInfo: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    public void <init>(android.content.pm.VersionedPackage, android.content.pm.VersionedPackage, android.util.IntArray, java.util.ArrayList, boolean, boolean, android.util.IntArray, android.util.SparseLongArray)
    {
        android.content.rollback.PackageRollbackInfo r0;
        android.content.pm.VersionedPackage r1, r2;
        android.util.IntArray r3, r5;
        java.util.ArrayList r4;
        boolean z0, z1;
        android.util.SparseLongArray r6;

        r0 := @this: android.content.rollback.PackageRollbackInfo;

        r1 := @parameter0: android.content.pm.VersionedPackage;

        r2 := @parameter1: android.content.pm.VersionedPackage;

        r3 := @parameter2: android.util.IntArray;

        r4 := @parameter3: java.util.ArrayList;

        z0 := @parameter4: boolean;

        z1 := @parameter5: boolean;

        r5 := @parameter6: android.util.IntArray;

        r6 := @parameter7: android.util.SparseLongArray;

        specialinvoke r0.<android.content.rollback.PackageRollbackInfo: void <init>(android.content.pm.VersionedPackage,android.content.pm.VersionedPackage,android.util.IntArray,java.util.ArrayList,boolean,boolean,android.util.IntArray,android.util.SparseLongArray,int)>(r1, r2, r3, r4, z0, z1, r5, r6, 0);

        return;
    }

    public void <init>(android.content.pm.VersionedPackage, android.content.pm.VersionedPackage, android.util.IntArray, java.util.ArrayList, boolean, boolean, android.util.IntArray, android.util.SparseLongArray, int)
    {
        android.content.rollback.PackageRollbackInfo r0;
        android.content.pm.VersionedPackage r1, r2;
        android.util.IntArray r3, r5;
        java.util.ArrayList r4;
        boolean z0, z1;
        android.util.SparseLongArray r6;
        int i0;

        r0 := @this: android.content.rollback.PackageRollbackInfo;

        r1 := @parameter0: android.content.pm.VersionedPackage;

        r2 := @parameter1: android.content.pm.VersionedPackage;

        r3 := @parameter2: android.util.IntArray;

        r4 := @parameter3: java.util.ArrayList;

        z0 := @parameter4: boolean;

        z1 := @parameter5: boolean;

        r5 := @parameter6: android.util.IntArray;

        r6 := @parameter7: android.util.SparseLongArray;

        i0 := @parameter8: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.content.rollback.PackageRollbackInfo: android.content.pm.VersionedPackage mVersionRolledBackFrom> = r1;

        r0.<android.content.rollback.PackageRollbackInfo: android.content.pm.VersionedPackage mVersionRolledBackTo> = r2;

        r0.<android.content.rollback.PackageRollbackInfo: android.util.IntArray mPendingBackups> = r3;

        r0.<android.content.rollback.PackageRollbackInfo: java.util.ArrayList mPendingRestores> = r4;

        r0.<android.content.rollback.PackageRollbackInfo: boolean mIsApex> = z0;

        r0.<android.content.rollback.PackageRollbackInfo: int mRollbackDataPolicy> = i0;

        r0.<android.content.rollback.PackageRollbackInfo: boolean mIsApkInApex> = z1;

        r0.<android.content.rollback.PackageRollbackInfo: android.util.IntArray mSnapshottedUsers> = r5;

        r0.<android.content.rollback.PackageRollbackInfo: android.util.SparseLongArray mCeSnapshotInodes> = r6;

        return;
    }

    private void <init>(android.os.Parcel)
    {
        android.content.rollback.PackageRollbackInfo r0;
        android.os.Parcel r1;
        android.os.Parcelable$Creator $r2, $r5;
        java.lang.Object $r3, $r6;
        android.content.pm.VersionedPackage $r4, $r7;
        boolean $z0, $z1;

        r0 := @this: android.content.rollback.PackageRollbackInfo;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = <android.content.pm.VersionedPackage: android.os.Parcelable$Creator CREATOR>;

        $r3 = interfaceinvoke $r2.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        $r4 = (android.content.pm.VersionedPackage) $r3;

        r0.<android.content.rollback.PackageRollbackInfo: android.content.pm.VersionedPackage mVersionRolledBackFrom> = $r4;

        $r5 = <android.content.pm.VersionedPackage: android.os.Parcelable$Creator CREATOR>;

        $r6 = interfaceinvoke $r5.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        $r7 = (android.content.pm.VersionedPackage) $r6;

        r0.<android.content.rollback.PackageRollbackInfo: android.content.pm.VersionedPackage mVersionRolledBackTo> = $r7;

        $z0 = virtualinvoke r1.<android.os.Parcel: boolean readBoolean()>();

        r0.<android.content.rollback.PackageRollbackInfo: boolean mIsApex> = $z0;

        $z1 = virtualinvoke r1.<android.os.Parcel: boolean readBoolean()>();

        r0.<android.content.rollback.PackageRollbackInfo: boolean mIsApkInApex> = $z1;

        r0.<android.content.rollback.PackageRollbackInfo: java.util.ArrayList mPendingRestores> = null;

        r0.<android.content.rollback.PackageRollbackInfo: android.util.IntArray mPendingBackups> = null;

        r0.<android.content.rollback.PackageRollbackInfo: android.util.IntArray mSnapshottedUsers> = null;

        r0.<android.content.rollback.PackageRollbackInfo: android.util.SparseLongArray mCeSnapshotInodes> = null;

        r0.<android.content.rollback.PackageRollbackInfo: int mRollbackDataPolicy> = 0;

        return;
    }

    void <init>(android.os.Parcel, android.content.rollback.PackageRollbackInfo$1)
    {
        android.content.rollback.PackageRollbackInfo r0;
        android.os.Parcel r1;
        android.content.rollback.PackageRollbackInfo$1 r2;

        r0 := @this: android.content.rollback.PackageRollbackInfo;

        r1 := @parameter0: android.os.Parcel;

        r2 := @parameter1: android.content.rollback.PackageRollbackInfo$1;

        specialinvoke r0.<android.content.rollback.PackageRollbackInfo: void <init>(android.os.Parcel)>(r1);

        return;
    }

    public void addPendingBackup(int)
    {
        android.content.rollback.PackageRollbackInfo r0;
        int i0;
        android.util.IntArray $r1;

        r0 := @this: android.content.rollback.PackageRollbackInfo;

        i0 := @parameter0: int;

        $r1 = r0.<android.content.rollback.PackageRollbackInfo: android.util.IntArray mPendingBackups>;

        virtualinvoke $r1.<android.util.IntArray: void add(int)>(i0);

        return;
    }

    public int describeContents()
    {
        android.content.rollback.PackageRollbackInfo r0;

        r0 := @this: android.content.rollback.PackageRollbackInfo;

        return 0;
    }

    public android.util.SparseLongArray getCeSnapshotInodes()
    {
        android.content.rollback.PackageRollbackInfo r0;
        android.util.SparseLongArray $r1;

        r0 := @this: android.content.rollback.PackageRollbackInfo;

        $r1 = r0.<android.content.rollback.PackageRollbackInfo: android.util.SparseLongArray mCeSnapshotInodes>;

        return $r1;
    }

    public java.lang.String getPackageName()
    {
        android.content.rollback.PackageRollbackInfo r0;
        android.content.pm.VersionedPackage $r1;
        java.lang.String $r2;

        r0 := @this: android.content.rollback.PackageRollbackInfo;

        $r1 = r0.<android.content.rollback.PackageRollbackInfo: android.content.pm.VersionedPackage mVersionRolledBackFrom>;

        $r2 = virtualinvoke $r1.<android.content.pm.VersionedPackage: java.lang.String getPackageName()>();

        return $r2;
    }

    public android.util.IntArray getPendingBackups()
    {
        android.content.rollback.PackageRollbackInfo r0;
        android.util.IntArray $r1;

        r0 := @this: android.content.rollback.PackageRollbackInfo;

        $r1 = r0.<android.content.rollback.PackageRollbackInfo: android.util.IntArray mPendingBackups>;

        return $r1;
    }

    public java.util.ArrayList getPendingRestores()
    {
        android.content.rollback.PackageRollbackInfo r0;
        java.util.ArrayList $r1;

        r0 := @this: android.content.rollback.PackageRollbackInfo;

        $r1 = r0.<android.content.rollback.PackageRollbackInfo: java.util.ArrayList mPendingRestores>;

        return $r1;
    }

    public android.content.rollback.PackageRollbackInfo$RestoreInfo getRestoreInfo(int)
    {
        android.content.rollback.PackageRollbackInfo r0;
        int i0, $i1;
        java.util.Iterator r1;
        android.content.rollback.PackageRollbackInfo$RestoreInfo r2;
        java.util.ArrayList $r3;
        boolean $z0;
        java.lang.Object $r4;

        r0 := @this: android.content.rollback.PackageRollbackInfo;

        i0 := @parameter0: int;

        $r3 = r0.<android.content.rollback.PackageRollbackInfo: java.util.ArrayList mPendingRestores>;

        r1 = virtualinvoke $r3.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.content.rollback.PackageRollbackInfo$RestoreInfo) $r4;

        $i1 = r2.<android.content.rollback.PackageRollbackInfo$RestoreInfo: int userId>;

        if $i1 != i0 goto label2;

        return r2;

     label2:
        goto label1;

     label3:
        return null;
    }

    public int getRollbackDataPolicy()
    {
        android.content.rollback.PackageRollbackInfo r0;
        int $i0;

        r0 := @this: android.content.rollback.PackageRollbackInfo;

        $i0 = r0.<android.content.rollback.PackageRollbackInfo: int mRollbackDataPolicy>;

        return $i0;
    }

    public android.util.IntArray getSnapshottedUsers()
    {
        android.content.rollback.PackageRollbackInfo r0;
        android.util.IntArray $r1;

        r0 := @this: android.content.rollback.PackageRollbackInfo;

        $r1 = r0.<android.content.rollback.PackageRollbackInfo: android.util.IntArray mSnapshottedUsers>;

        return $r1;
    }

    public android.content.pm.VersionedPackage getVersionRolledBackFrom()
    {
        android.content.rollback.PackageRollbackInfo r0;
        android.content.pm.VersionedPackage $r1;

        r0 := @this: android.content.rollback.PackageRollbackInfo;

        $r1 = r0.<android.content.rollback.PackageRollbackInfo: android.content.pm.VersionedPackage mVersionRolledBackFrom>;

        return $r1;
    }

    public android.content.pm.VersionedPackage getVersionRolledBackTo()
    {
        android.content.rollback.PackageRollbackInfo r0;
        android.content.pm.VersionedPackage $r1;

        r0 := @this: android.content.rollback.PackageRollbackInfo;

        $r1 = r0.<android.content.rollback.PackageRollbackInfo: android.content.pm.VersionedPackage mVersionRolledBackTo>;

        return $r1;
    }

    public boolean isApex()
    {
        android.content.rollback.PackageRollbackInfo r0;
        boolean $z0;

        r0 := @this: android.content.rollback.PackageRollbackInfo;

        $z0 = r0.<android.content.rollback.PackageRollbackInfo: boolean mIsApex>;

        return $z0;
    }

    public boolean isApkInApex()
    {
        android.content.rollback.PackageRollbackInfo r0;
        boolean $z0;

        r0 := @this: android.content.rollback.PackageRollbackInfo;

        $z0 = r0.<android.content.rollback.PackageRollbackInfo: boolean mIsApkInApex>;

        return $z0;
    }

    public void putCeSnapshotInode(int, long)
    {
        android.content.rollback.PackageRollbackInfo r0;
        int i0;
        long l1;
        android.util.SparseLongArray $r1;

        r0 := @this: android.content.rollback.PackageRollbackInfo;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        $r1 = r0.<android.content.rollback.PackageRollbackInfo: android.util.SparseLongArray mCeSnapshotInodes>;

        virtualinvoke $r1.<android.util.SparseLongArray: void put(int,long)>(i0, l1);

        return;
    }

    public void removePendingBackup(int)
    {
        android.content.rollback.PackageRollbackInfo r0;
        android.util.IntArray $r1, $r2;
        int i0, i1;

        r0 := @this: android.content.rollback.PackageRollbackInfo;

        i0 := @parameter0: int;

        $r1 = r0.<android.content.rollback.PackageRollbackInfo: android.util.IntArray mPendingBackups>;

        i1 = virtualinvoke $r1.<android.util.IntArray: int indexOf(int)>(i0);

        if i1 == -1 goto label1;

        $r2 = r0.<android.content.rollback.PackageRollbackInfo: android.util.IntArray mPendingBackups>;

        virtualinvoke $r2.<android.util.IntArray: void remove(int)>(i1);

     label1:
        return;
    }

    public void removePendingRestoreInfo(int)
    {
        android.content.rollback.PackageRollbackInfo r0;
        int i0;
        android.content.rollback.PackageRollbackInfo$RestoreInfo $r1;

        r0 := @this: android.content.rollback.PackageRollbackInfo;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.content.rollback.PackageRollbackInfo: android.content.rollback.PackageRollbackInfo$RestoreInfo getRestoreInfo(int)>(i0);

        virtualinvoke r0.<android.content.rollback.PackageRollbackInfo: void removeRestoreInfo(android.content.rollback.PackageRollbackInfo$RestoreInfo)>($r1);

        return;
    }

    public void removeRestoreInfo(android.content.rollback.PackageRollbackInfo$RestoreInfo)
    {
        android.content.rollback.PackageRollbackInfo r0;
        android.content.rollback.PackageRollbackInfo$RestoreInfo r1;
        java.util.ArrayList $r2;

        r0 := @this: android.content.rollback.PackageRollbackInfo;

        r1 := @parameter0: android.content.rollback.PackageRollbackInfo$RestoreInfo;

        $r2 = r0.<android.content.rollback.PackageRollbackInfo: java.util.ArrayList mPendingRestores>;

        virtualinvoke $r2.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        return;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.content.rollback.PackageRollbackInfo r0;
        android.os.Parcel r1;
        int i0;
        android.content.pm.VersionedPackage $r2, $r3;
        boolean $z0, $z1;

        r0 := @this: android.content.rollback.PackageRollbackInfo;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $r2 = r0.<android.content.rollback.PackageRollbackInfo: android.content.pm.VersionedPackage mVersionRolledBackFrom>;

        virtualinvoke $r2.<android.content.pm.VersionedPackage: void writeToParcel(android.os.Parcel,int)>(r1, i0);

        $r3 = r0.<android.content.rollback.PackageRollbackInfo: android.content.pm.VersionedPackage mVersionRolledBackTo>;

        virtualinvoke $r3.<android.content.pm.VersionedPackage: void writeToParcel(android.os.Parcel,int)>(r1, i0);

        $z0 = r0.<android.content.rollback.PackageRollbackInfo: boolean mIsApex>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z0);

        $z1 = r0.<android.content.rollback.PackageRollbackInfo: boolean mIsApkInApex>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z1);

        return;
    }
}
