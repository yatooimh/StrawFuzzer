public final class android.content.rollback.RollbackManager extends java.lang.Object
{
    public static final java.lang.String EXTRA_STATUS;
    public static final java.lang.String EXTRA_STATUS_MESSAGE;
    public static final java.lang.String PROPERTY_ROLLBACK_LIFETIME_MILLIS;
    public static final int STATUS_FAILURE;
    public static final int STATUS_FAILURE_INSTALL;
    public static final int STATUS_FAILURE_ROLLBACK_UNAVAILABLE;
    public static final int STATUS_SUCCESS;
    private final android.content.rollback.IRollbackManager mBinder;
    private final java.lang.String mCallerPackageName;

    public void <init>(android.content.Context, android.content.rollback.IRollbackManager)
    {
        android.content.rollback.RollbackManager r0;
        android.content.Context r1;
        android.content.rollback.IRollbackManager r2;
        java.lang.String $r3;

        r0 := @this: android.content.rollback.RollbackManager;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.rollback.IRollbackManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = virtualinvoke r1.<android.content.Context: java.lang.String getPackageName()>();

        r0.<android.content.rollback.RollbackManager: java.lang.String mCallerPackageName> = $r3;

        r0.<android.content.rollback.RollbackManager: android.content.rollback.IRollbackManager mBinder> = r2;

        return;
    }

    public void blockRollbackManager(long)
    {
        android.content.rollback.RollbackManager r0;
        long l0;
        android.content.rollback.IRollbackManager $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;

        r0 := @this: android.content.rollback.RollbackManager;

        l0 := @parameter0: long;

     label1:
        $r2 = r0.<android.content.rollback.RollbackManager: android.content.rollback.IRollbackManager mBinder>;

        interfaceinvoke $r2.<android.content.rollback.IRollbackManager: void blockRollbackManager(long)>(l0);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void commitRollback(int, java.util.List, android.content.IntentSender)
    {
        android.content.rollback.RollbackManager r0;
        int i0;
        android.content.IntentSender r1;
        android.content.rollback.IRollbackManager r2;
        android.content.pm.ParceledListSlice r3;
        java.lang.String $r4;
        android.os.RemoteException $r5;
        java.lang.RuntimeException $r6;
        java.util.List r7;

        r0 := @this: android.content.rollback.RollbackManager;

        i0 := @parameter0: int;

        r7 := @parameter1: java.util.List;

        r1 := @parameter2: android.content.IntentSender;

     label1:
        r2 = r0.<android.content.rollback.RollbackManager: android.content.rollback.IRollbackManager mBinder>;

        r3 = new android.content.pm.ParceledListSlice;

        specialinvoke r3.<android.content.pm.ParceledListSlice: void <init>(java.util.List)>(r7);

        $r4 = r0.<android.content.rollback.RollbackManager: java.lang.String mCallerPackageName>;

        interfaceinvoke r2.<android.content.rollback.IRollbackManager: void commitRollback(int,android.content.pm.ParceledListSlice,java.lang.String,android.content.IntentSender)>(i0, r3, $r4, r1);

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        $r6 = virtualinvoke $r5.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r6;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void expireRollbackForPackage(java.lang.String)
    {
        android.content.rollback.RollbackManager r0;
        android.content.rollback.IRollbackManager $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        java.lang.String r4;

        r0 := @this: android.content.rollback.RollbackManager;

        r4 := @parameter0: java.lang.String;

     label1:
        $r1 = r0.<android.content.rollback.RollbackManager: android.content.rollback.IRollbackManager mBinder>;

        interfaceinvoke $r1.<android.content.rollback.IRollbackManager: void expireRollbackForPackage(java.lang.String)>(r4);

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.List getAvailableRollbacks()
    {
        android.content.rollback.RollbackManager r0;
        android.content.rollback.IRollbackManager $r1;
        android.content.pm.ParceledListSlice $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;
        java.util.List r5;

        r0 := @this: android.content.rollback.RollbackManager;

     label1:
        $r1 = r0.<android.content.rollback.RollbackManager: android.content.rollback.IRollbackManager mBinder>;

        $r2 = interfaceinvoke $r1.<android.content.rollback.IRollbackManager: android.content.pm.ParceledListSlice getAvailableRollbacks()>();

        r5 = virtualinvoke $r2.<android.content.pm.ParceledListSlice: java.util.List getList()>();

     label2:
        return r5;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.List getRecentlyCommittedRollbacks()
    {
        android.content.rollback.RollbackManager r0;
        android.content.rollback.IRollbackManager $r1;
        android.content.pm.ParceledListSlice $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;
        java.util.List r5;

        r0 := @this: android.content.rollback.RollbackManager;

     label1:
        $r1 = r0.<android.content.rollback.RollbackManager: android.content.rollback.IRollbackManager mBinder>;

        $r2 = interfaceinvoke $r1.<android.content.rollback.IRollbackManager: android.content.pm.ParceledListSlice getRecentlyCommittedRollbacks()>();

        r5 = virtualinvoke $r2.<android.content.pm.ParceledListSlice: java.util.List getList()>();

     label2:
        return r5;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void reloadPersistedData()
    {
        android.content.rollback.RollbackManager r0;
        android.content.rollback.IRollbackManager $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;

        r0 := @this: android.content.rollback.RollbackManager;

     label1:
        $r2 = r0.<android.content.rollback.RollbackManager: android.content.rollback.IRollbackManager mBinder>;

        interfaceinvoke $r2.<android.content.rollback.IRollbackManager: void reloadPersistedData()>();

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <android.content.rollback.RollbackManager: int STATUS_SUCCESS> = 0;

        <android.content.rollback.RollbackManager: int STATUS_FAILURE_ROLLBACK_UNAVAILABLE> = 2;

        <android.content.rollback.RollbackManager: int STATUS_FAILURE_INSTALL> = 3;

        <android.content.rollback.RollbackManager: int STATUS_FAILURE> = 1;

        <android.content.rollback.RollbackManager: java.lang.String PROPERTY_ROLLBACK_LIFETIME_MILLIS> = "rollback_lifetime_in_millis";

        <android.content.rollback.RollbackManager: java.lang.String EXTRA_STATUS_MESSAGE> = "android.content.rollback.extra.STATUS_MESSAGE";

        <android.content.rollback.RollbackManager: java.lang.String EXTRA_STATUS> = "android.content.rollback.extra.STATUS";

        return;
    }
}
