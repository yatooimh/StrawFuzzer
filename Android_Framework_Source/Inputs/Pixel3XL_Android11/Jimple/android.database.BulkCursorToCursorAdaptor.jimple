public final class android.database.BulkCursorToCursorAdaptor extends android.database.AbstractWindowedCursor
{
    private static final java.lang.String TAG;
    private android.database.IBulkCursor mBulkCursor;
    private java.lang.String[] mColumns;
    private int mCount;
    private android.database.AbstractCursor$SelfContentObserver mObserverBridge;
    private boolean mWantsAllOnMoveCalls;

    public void <init>()
    {
        android.database.BulkCursorToCursorAdaptor r0;
        android.database.AbstractCursor$SelfContentObserver $r1;

        r0 := @this: android.database.BulkCursorToCursorAdaptor;

        specialinvoke r0.<android.database.AbstractWindowedCursor: void <init>()>();

        $r1 = new android.database.AbstractCursor$SelfContentObserver;

        specialinvoke $r1.<android.database.AbstractCursor$SelfContentObserver: void <init>(android.database.AbstractCursor)>(r0);

        r0.<android.database.BulkCursorToCursorAdaptor: android.database.AbstractCursor$SelfContentObserver mObserverBridge> = $r1;

        return;
    }

    private void throwIfCursorIsClosed()
    {
        android.database.BulkCursorToCursorAdaptor r0;
        android.database.IBulkCursor $r1;
        android.database.StaleDataException $r2;

        r0 := @this: android.database.BulkCursorToCursorAdaptor;

        $r1 = r0.<android.database.BulkCursorToCursorAdaptor: android.database.IBulkCursor mBulkCursor>;

        if $r1 == null goto label1;

        return;

     label1:
        $r2 = new android.database.StaleDataException;

        specialinvoke $r2.<android.database.StaleDataException: void <init>(java.lang.String)>("Attempted to access a cursor after it has been closed.");

        throw $r2;
    }

    public void close()
    {
        android.database.BulkCursorToCursorAdaptor r0;
        java.lang.Throwable $r1;
        android.os.RemoteException $r2;
        android.database.IBulkCursor r3;

        r0 := @this: android.database.BulkCursorToCursorAdaptor;

        specialinvoke r0.<android.database.AbstractWindowedCursor: void close()>();

        r3 = r0.<android.database.BulkCursorToCursorAdaptor: android.database.IBulkCursor mBulkCursor>;

        if r3 == null goto label8;

     label1:
        interfaceinvoke r3.<android.database.IBulkCursor: void close()>();

     label2:
        r0.<android.database.BulkCursorToCursorAdaptor: android.database.IBulkCursor mBulkCursor> = null;

        goto label8;

     label3:
        $r1 := @caughtexception;

        goto label7;

     label4:
        $r2 := @caughtexception;

     label5:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BulkCursor", "Remote process exception when closing");

     label6:
        goto label2;

     label7:
        r0.<android.database.BulkCursorToCursorAdaptor: android.database.IBulkCursor mBulkCursor> = null;

        throw $r1;

     label8:
        return;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label5 to label6 with label3;
    }

    public void deactivate()
    {
        android.database.BulkCursorToCursorAdaptor r0;
        android.os.RemoteException $r1;
        android.database.IBulkCursor r2;

        r0 := @this: android.database.BulkCursorToCursorAdaptor;

        specialinvoke r0.<android.database.AbstractWindowedCursor: void deactivate()>();

        r2 = r0.<android.database.BulkCursorToCursorAdaptor: android.database.IBulkCursor mBulkCursor>;

        if r2 == null goto label4;

     label1:
        interfaceinvoke r2.<android.database.IBulkCursor: void deactivate()>();

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BulkCursor", "Remote process exception when deactivating");

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.lang.String[] getColumnNames()
    {
        android.database.BulkCursorToCursorAdaptor r0;
        java.lang.String[] $r1;

        r0 := @this: android.database.BulkCursorToCursorAdaptor;

        specialinvoke r0.<android.database.BulkCursorToCursorAdaptor: void throwIfCursorIsClosed()>();

        $r1 = r0.<android.database.BulkCursorToCursorAdaptor: java.lang.String[] mColumns>;

        return $r1;
    }

    public int getCount()
    {
        android.database.BulkCursorToCursorAdaptor r0;
        int $i0;

        r0 := @this: android.database.BulkCursorToCursorAdaptor;

        specialinvoke r0.<android.database.BulkCursorToCursorAdaptor: void throwIfCursorIsClosed()>();

        $i0 = r0.<android.database.BulkCursorToCursorAdaptor: int mCount>;

        return $i0;
    }

    public android.os.Bundle getExtras()
    {
        android.database.BulkCursorToCursorAdaptor r0;
        android.database.IBulkCursor $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        android.os.Bundle r4;

        r0 := @this: android.database.BulkCursorToCursorAdaptor;

        specialinvoke r0.<android.database.BulkCursorToCursorAdaptor: void throwIfCursorIsClosed()>();

     label1:
        $r1 = r0.<android.database.BulkCursorToCursorAdaptor: android.database.IBulkCursor mBulkCursor>;

        r4 = interfaceinvoke $r1.<android.database.IBulkCursor: android.os.Bundle getExtras()>();

     label2:
        return r4;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r2);

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.database.IContentObserver getObserver()
    {
        android.database.BulkCursorToCursorAdaptor r0;
        android.database.AbstractCursor$SelfContentObserver $r1;
        android.database.IContentObserver $r2;

        r0 := @this: android.database.BulkCursorToCursorAdaptor;

        $r1 = r0.<android.database.BulkCursorToCursorAdaptor: android.database.AbstractCursor$SelfContentObserver mObserverBridge>;

        $r2 = virtualinvoke $r1.<android.database.AbstractCursor$SelfContentObserver: android.database.IContentObserver getContentObserver()>();

        return $r2;
    }

    public void initialize(android.database.BulkCursorDescriptor)
    {
        android.database.BulkCursorToCursorAdaptor r0;
        android.database.BulkCursorDescriptor r1;
        android.database.IBulkCursor $r2;
        java.lang.String[] $r3;
        boolean $z0;
        int $i0;
        android.database.CursorWindow $r4, $r5;

        r0 := @this: android.database.BulkCursorToCursorAdaptor;

        r1 := @parameter0: android.database.BulkCursorDescriptor;

        $r2 = r1.<android.database.BulkCursorDescriptor: android.database.IBulkCursor cursor>;

        r0.<android.database.BulkCursorToCursorAdaptor: android.database.IBulkCursor mBulkCursor> = $r2;

        $r3 = r1.<android.database.BulkCursorDescriptor: java.lang.String[] columnNames>;

        r0.<android.database.BulkCursorToCursorAdaptor: java.lang.String[] mColumns> = $r3;

        $z0 = r1.<android.database.BulkCursorDescriptor: boolean wantsAllOnMoveCalls>;

        r0.<android.database.BulkCursorToCursorAdaptor: boolean mWantsAllOnMoveCalls> = $z0;

        $i0 = r1.<android.database.BulkCursorDescriptor: int count>;

        r0.<android.database.BulkCursorToCursorAdaptor: int mCount> = $i0;

        $r4 = r1.<android.database.BulkCursorDescriptor: android.database.CursorWindow window>;

        if $r4 == null goto label1;

        $r5 = r1.<android.database.BulkCursorDescriptor: android.database.CursorWindow window>;

        virtualinvoke r0.<android.database.BulkCursorToCursorAdaptor: void setWindow(android.database.CursorWindow)>($r5);

     label1:
        return;
    }

    public boolean onMove(int, int)
    {
        android.database.BulkCursorToCursorAdaptor r0;
        int i0, i1, $i2, $i3, $i4, $i5;
        android.database.CursorWindow $r2, $r3, $r4, $r5, $r9, $r10;
        boolean $z0;
        android.database.IBulkCursor $r6, $r8;
        android.os.RemoteException $r7;

        r0 := @this: android.database.BulkCursorToCursorAdaptor;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<android.database.BulkCursorToCursorAdaptor: void throwIfCursorIsClosed()>();

     label1:
        $r2 = r0.<android.database.BulkCursorToCursorAdaptor: android.database.CursorWindow mWindow>;

        if $r2 == null goto label5;

        $r3 = r0.<android.database.BulkCursorToCursorAdaptor: android.database.CursorWindow mWindow>;

        $i2 = virtualinvoke $r3.<android.database.CursorWindow: int getStartPosition()>();

        if i1 < $i2 goto label5;

        $r4 = r0.<android.database.BulkCursorToCursorAdaptor: android.database.CursorWindow mWindow>;

        $i3 = virtualinvoke $r4.<android.database.CursorWindow: int getStartPosition()>();

        $r5 = r0.<android.database.BulkCursorToCursorAdaptor: android.database.CursorWindow mWindow>;

        $i4 = virtualinvoke $r5.<android.database.CursorWindow: int getNumRows()>();

        $i5 = $i3 + $i4;

        if i1 < $i5 goto label3;

     label2:
        goto label5;

     label3:
        $z0 = r0.<android.database.BulkCursorToCursorAdaptor: boolean mWantsAllOnMoveCalls>;

        if $z0 == 0 goto label6;

        $r6 = r0.<android.database.BulkCursorToCursorAdaptor: android.database.IBulkCursor mBulkCursor>;

        interfaceinvoke $r6.<android.database.IBulkCursor: void onMove(int)>(i1);

     label4:
        goto label6;

     label5:
        $r8 = r0.<android.database.BulkCursorToCursorAdaptor: android.database.IBulkCursor mBulkCursor>;

        $r9 = interfaceinvoke $r8.<android.database.IBulkCursor: android.database.CursorWindow getWindow(int)>(i1);

        virtualinvoke r0.<android.database.BulkCursorToCursorAdaptor: void setWindow(android.database.CursorWindow)>($r9);

     label6:
        $r10 = r0.<android.database.BulkCursorToCursorAdaptor: android.database.CursorWindow mWindow>;

        if $r10 != null goto label7;

        return 0;

     label7:
        return 1;

     label8:
        $r7 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BulkCursor", "Unable to get window because the remote process is dead");

        return 0;

        catch android.os.RemoteException from label1 to label2 with label8;
        catch android.os.RemoteException from label3 to label4 with label8;
        catch android.os.RemoteException from label5 to label6 with label8;
    }

    public boolean requery()
    {
        android.database.BulkCursorToCursorAdaptor r0;
        int i0;
        android.database.IBulkCursor $r3;
        android.database.IContentObserver $r4;
        java.lang.Exception $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r8, $r10;

        r0 := @this: android.database.BulkCursorToCursorAdaptor;

        specialinvoke r0.<android.database.BulkCursorToCursorAdaptor: void throwIfCursorIsClosed()>();

     label1:
        $r3 = r0.<android.database.BulkCursorToCursorAdaptor: android.database.IBulkCursor mBulkCursor>;

        $r4 = virtualinvoke r0.<android.database.BulkCursorToCursorAdaptor: android.database.IContentObserver getObserver()>();

        i0 = interfaceinvoke $r3.<android.database.IBulkCursor: int requery(android.database.IContentObserver)>($r4);

        r0.<android.database.BulkCursorToCursorAdaptor: int mCount> = i0;

     label2:
        if i0 == -1 goto label5;

     label3:
        r0.<android.database.BulkCursorToCursorAdaptor: int mPos> = -1;

        virtualinvoke r0.<android.database.BulkCursorToCursorAdaptor: void closeWindow()>();

        specialinvoke r0.<android.database.AbstractWindowedCursor: boolean requery()>();

     label4:
        return 1;

     label5:
        virtualinvoke r0.<android.database.BulkCursorToCursorAdaptor: void deactivate()>();

     label6:
        return 0;

     label7:
        $r5 := @caughtexception;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to requery because the remote process exception ");

        $r8 = virtualinvoke $r5.<java.lang.Exception: java.lang.String getMessage()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BulkCursor", $r10);

        virtualinvoke r0.<android.database.BulkCursorToCursorAdaptor: void deactivate()>();

        return 0;

        catch java.lang.Exception from label1 to label2 with label7;
        catch java.lang.Exception from label3 to label4 with label7;
        catch java.lang.Exception from label5 to label6 with label7;
    }

    public android.os.Bundle respond(android.os.Bundle)
    {
        android.database.BulkCursorToCursorAdaptor r0;
        android.database.IBulkCursor $r1;
        android.os.RemoteException $r2;
        android.os.Bundle $r3, r4, r5;

        r0 := @this: android.database.BulkCursorToCursorAdaptor;

        r4 := @parameter0: android.os.Bundle;

        specialinvoke r0.<android.database.BulkCursorToCursorAdaptor: void throwIfCursorIsClosed()>();

     label1:
        $r1 = r0.<android.database.BulkCursorToCursorAdaptor: android.database.IBulkCursor mBulkCursor>;

        r5 = interfaceinvoke $r1.<android.database.IBulkCursor: android.os.Bundle respond(android.os.Bundle)>(r4);

     label2:
        return r5;

     label3:
        $r2 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("BulkCursor", "respond() threw RemoteException, returning an empty bundle.", $r2);

        $r3 = <android.os.Bundle: android.os.Bundle EMPTY>;

        return $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <android.database.BulkCursorToCursorAdaptor: java.lang.String TAG> = "BulkCursor";

        return;
    }
}
