public final class android.database.CursorJoiner extends java.lang.Object implements java.util.Iterator, java.lang.Iterable
{
    static final boolean $assertionsDisabled;
    private int[] mColumnsLeft;
    private int[] mColumnsRight;
    private android.database.CursorJoiner$Result mCompareResult;
    private boolean mCompareResultIsValid;
    private android.database.Cursor mCursorLeft;
    private android.database.Cursor mCursorRight;
    private java.lang.String[] mValues;

    static void <clinit>()
    {
        <android.database.CursorJoiner: boolean $assertionsDisabled> = 0;

        return;
    }

    public void <init>(android.database.Cursor, java.lang.String[], android.database.Cursor, java.lang.String[])
    {
        android.database.CursorJoiner r0;
        java.lang.String[] r1, r3, $r15;
        android.database.Cursor r2, $r11, r16;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.StringBuilder $r4;
        java.lang.IllegalArgumentException $r9;
        java.lang.String $r10;
        int[] $r12, $r13, $r14;

        r0 := @this: android.database.CursorJoiner;

        r16 := @parameter0: android.database.Cursor;

        r1 := @parameter1: java.lang.String[];

        r2 := @parameter2: android.database.Cursor;

        r3 := @parameter3: java.lang.String[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i1 = lengthof r1;

        $i0 = lengthof r3;

        if $i1 != $i0 goto label1;

        r0.<android.database.CursorJoiner: android.database.Cursor mCursorLeft> = r16;

        r0.<android.database.CursorJoiner: android.database.Cursor mCursorRight> = r2;

        interfaceinvoke r16.<android.database.Cursor: boolean moveToFirst()>();

        $r11 = r0.<android.database.CursorJoiner: android.database.Cursor mCursorRight>;

        interfaceinvoke $r11.<android.database.Cursor: boolean moveToFirst()>();

        r0.<android.database.CursorJoiner: boolean mCompareResultIsValid> = 0;

        $r12 = specialinvoke r0.<android.database.CursorJoiner: int[] buildColumnIndiciesArray(android.database.Cursor,java.lang.String[])>(r16, r1);

        r0.<android.database.CursorJoiner: int[] mColumnsLeft> = $r12;

        $r13 = specialinvoke r0.<android.database.CursorJoiner: int[] buildColumnIndiciesArray(android.database.Cursor,java.lang.String[])>(r2, r3);

        r0.<android.database.CursorJoiner: int[] mColumnsRight> = $r13;

        $r14 = r0.<android.database.CursorJoiner: int[] mColumnsLeft>;

        $i4 = lengthof $r14;

        $i5 = $i4 * 2;

        $r15 = newarray (java.lang.String)[$i5];

        r0.<android.database.CursorJoiner: java.lang.String[] mValues> = $r15;

        return;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("you must have the same number of columns on the left and right, ");

        $i2 = lengthof r1;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" != ");

        $i3 = lengthof r3;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r9 = new java.lang.IllegalArgumentException;

        $r10 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r9;
    }

    private int[] buildColumnIndiciesArray(android.database.Cursor, java.lang.String[])
    {
        android.database.CursorJoiner r0;
        android.database.Cursor r1;
        java.lang.String[] r2;
        int[] r3;
        int $i0, $i1, $i2, i3;
        java.lang.String $r4;

        r0 := @this: android.database.CursorJoiner;

        r1 := @parameter0: android.database.Cursor;

        r2 := @parameter1: java.lang.String[];

        $i0 = lengthof r2;

        r3 = newarray (int)[$i0];

        i3 = 0;

     label1:
        $i1 = lengthof r2;

        if i3 >= $i1 goto label2;

        $r4 = r2[i3];

        $i2 = interfaceinvoke r1.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>($r4);

        r3[i3] = $i2;

        i3 = i3 + 1;

        goto label1;

     label2:
        return r3;
    }

    private static transient int compareStrings(java.lang.String[])
    {
        java.lang.String[] r0;
        java.lang.String r1, $r3, $r4, $r5, $r6;
        int i1, $i2, $i3, $i4, $i5, $i6, $i7, i8;
        java.lang.IllegalArgumentException $r2;
        byte b9;

        r0 := @parameter0: java.lang.String[];

        $i2 = lengthof r0;

        $i3 = $i2 % 2;

        if $i3 != 0 goto label9;

        i8 = 0;

     label1:
        $i4 = lengthof r0;

        if i8 >= $i4 goto label8;

        r1 = r0[i8];

        if r1 != null goto label3;

        $i7 = i8 + 1;

        $r6 = r0[$i7];

        if $r6 != null goto label2;

        goto label7;

     label2:
        return -1;

     label3:
        $i5 = i8 + 1;

        $r3 = r0[$i5];

        if $r3 != null goto label4;

        return 1;

     label4:
        $r5 = r0[i8];

        $i6 = i8 + 1;

        $r4 = r0[$i6];

        i1 = virtualinvoke $r5.<java.lang.String: int compareTo(java.lang.String)>($r4);

        if i1 == 0 goto label7;

        if i1 >= 0 goto label5;

        b9 = -1;

        goto label6;

     label5:
        b9 = 1;

     label6:
        return b9;

     label7:
        i8 = i8 + 2;

        goto label1;

     label8:
        return 0;

     label9:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("you must specify an even number of values");

        throw $r2;
    }

    private void incrementCursors()
    {
        android.database.CursorJoiner r0;
        int i0, $i1;
        boolean $z0;
        android.database.CursorJoiner$Result $r1;
        int[] $r2;
        android.database.Cursor $r3, $r4, $r5, $r6;

        r0 := @this: android.database.CursorJoiner;

        $z0 = r0.<android.database.CursorJoiner: boolean mCompareResultIsValid>;

        if $z0 == 0 goto label5;

        $r2 = <android.database.CursorJoiner$1: int[] $SwitchMap$android$database$CursorJoiner$Result>;

        $r1 = r0.<android.database.CursorJoiner: android.database.CursorJoiner$Result mCompareResult>;

        $i1 = virtualinvoke $r1.<android.database.CursorJoiner$Result: int ordinal()>();

        i0 = $r2[$i1];

        if i0 == 1 goto label3;

        if i0 == 2 goto label2;

        if i0 == 3 goto label1;

        goto label4;

     label1:
        $r6 = r0.<android.database.CursorJoiner: android.database.Cursor mCursorRight>;

        interfaceinvoke $r6.<android.database.Cursor: boolean moveToNext()>();

        goto label4;

     label2:
        $r5 = r0.<android.database.CursorJoiner: android.database.Cursor mCursorLeft>;

        interfaceinvoke $r5.<android.database.Cursor: boolean moveToNext()>();

        goto label4;

     label3:
        $r3 = r0.<android.database.CursorJoiner: android.database.Cursor mCursorLeft>;

        interfaceinvoke $r3.<android.database.Cursor: boolean moveToNext()>();

        $r4 = r0.<android.database.CursorJoiner: android.database.Cursor mCursorRight>;

        interfaceinvoke $r4.<android.database.Cursor: boolean moveToNext()>();

     label4:
        r0.<android.database.CursorJoiner: boolean mCompareResultIsValid> = 0;

     label5:
        return;
    }

    private static void populateValues(java.lang.String[], android.database.Cursor, int[], int)
    {
        java.lang.String[] r0;
        android.database.Cursor r1;
        int[] r2;
        int i0, $i1, $i2, $i3, $i4, i5;
        java.lang.String $r3;

        r0 := @parameter0: java.lang.String[];

        r1 := @parameter1: android.database.Cursor;

        r2 := @parameter2: int[];

        i0 := @parameter3: int;

        i5 = 0;

     label1:
        $i1 = lengthof r2;

        if i5 >= $i1 goto label2;

        $i2 = i5 * 2;

        $i4 = $i2 + i0;

        $i3 = r2[i5];

        $r3 = interfaceinvoke r1.<android.database.Cursor: java.lang.String getString(int)>($i3);

        r0[$i4] = $r3;

        i5 = i5 + 1;

        goto label1;

     label2:
        return;
    }

    public boolean hasNext()
    {
        android.database.CursorJoiner r0;
        boolean z0, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, z12, z13, z14, z15;
        int i0, $i1;
        android.database.Cursor $r2, $r3, $r6, $r7, $r8, $r9, $r16, $r17;
        android.database.CursorJoiner$Result $r4, $r12;
        int[] $r5;
        java.lang.StringBuilder $r10;
        java.lang.IllegalStateException $r14;
        java.lang.String $r15;

        r0 := @this: android.database.CursorJoiner;

        z0 = r0.<android.database.CursorJoiner: boolean mCompareResultIsValid>;

        z12 = 0;

        if z0 == 0 goto label10;

        $r5 = <android.database.CursorJoiner$1: int[] $SwitchMap$android$database$CursorJoiner$Result>;

        $r4 = r0.<android.database.CursorJoiner: android.database.CursorJoiner$Result mCompareResult>;

        $i1 = virtualinvoke $r4.<android.database.CursorJoiner$Result: int ordinal()>();

        i0 = $r5[$i1];

        if i0 == 1 goto label07;

        if i0 == 2 goto label04;

        if i0 != 3 goto label03;

        $r16 = r0.<android.database.CursorJoiner: android.database.Cursor mCursorLeft>;

        $z10 = interfaceinvoke $r16.<android.database.Cursor: boolean isAfterLast()>();

        if $z10 == 0 goto label01;

        $r17 = r0.<android.database.CursorJoiner: android.database.Cursor mCursorRight>;

        $z11 = interfaceinvoke $r17.<android.database.Cursor: boolean isLast()>();

        if $z11 != 0 goto label02;

     label01:
        z12 = 1;

     label02:
        return z12;

     label03:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bad value for mCompareResult, ");

        $r12 = r0.<android.database.CursorJoiner: android.database.CursorJoiner$Result mCompareResult>;

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r14 = new java.lang.IllegalStateException;

        $r15 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r15);

        throw $r14;

     label04:
        $r8 = r0.<android.database.CursorJoiner: android.database.Cursor mCursorLeft>;

        $z8 = interfaceinvoke $r8.<android.database.Cursor: boolean isLast()>();

        if $z8 == 0 goto label05;

        z13 = 0;

        $r9 = r0.<android.database.CursorJoiner: android.database.Cursor mCursorRight>;

        $z9 = interfaceinvoke $r9.<android.database.Cursor: boolean isAfterLast()>();

        if $z9 != 0 goto label06;

     label05:
        z13 = 1;

     label06:
        return z13;

     label07:
        $r6 = r0.<android.database.CursorJoiner: android.database.Cursor mCursorLeft>;

        $z6 = interfaceinvoke $r6.<android.database.Cursor: boolean isLast()>();

        if $z6 == 0 goto label08;

        z14 = 0;

        $r7 = r0.<android.database.CursorJoiner: android.database.Cursor mCursorRight>;

        $z7 = interfaceinvoke $r7.<android.database.Cursor: boolean isLast()>();

        if $z7 != 0 goto label09;

     label08:
        z14 = 1;

     label09:
        return z14;

     label10:
        $r2 = r0.<android.database.CursorJoiner: android.database.Cursor mCursorLeft>;

        $z4 = interfaceinvoke $r2.<android.database.Cursor: boolean isAfterLast()>();

        if $z4 == 0 goto label11;

        z15 = 0;

        $r3 = r0.<android.database.CursorJoiner: android.database.Cursor mCursorRight>;

        $z5 = interfaceinvoke $r3.<android.database.Cursor: boolean isAfterLast()>();

        if $z5 != 0 goto label12;

     label11:
        z15 = 1;

     label12:
        return z15;
    }

    public java.util.Iterator iterator()
    {
        android.database.CursorJoiner r0;

        r0 := @this: android.database.CursorJoiner;

        return r0;
    }

    public android.database.CursorJoiner$Result next()
    {
        android.database.CursorJoiner r0;
        boolean z0, $z1, $z2, $z3, z4;
        java.lang.IllegalStateException $r1;
        android.database.Cursor $r2, $r3, $r7, $r10;
        android.database.CursorJoiner$Result $r4, $r5, $r13, $r14, $r15, $r16;
        int[] $r6, $r9;
        java.lang.String[] $r8, $r11, $r12;
        int i0;

        r0 := @this: android.database.CursorJoiner;

        $z1 = virtualinvoke r0.<android.database.CursorJoiner: boolean hasNext()>();

        if $z1 == 0 goto label8;

        specialinvoke r0.<android.database.CursorJoiner: void incrementCursors()>();

        $r2 = r0.<android.database.CursorJoiner: android.database.Cursor mCursorLeft>;

        $z2 = interfaceinvoke $r2.<android.database.Cursor: boolean isAfterLast()>();

        z4 = $z2 ^ 1;

        $r3 = r0.<android.database.CursorJoiner: android.database.Cursor mCursorRight>;

        z0 = interfaceinvoke $r3.<android.database.Cursor: boolean isAfterLast()>();

        if z4 == 0 goto label5;

        $z3 = z0 ^ 1;

        if $z3 == 0 goto label5;

        $r8 = r0.<android.database.CursorJoiner: java.lang.String[] mValues>;

        $r7 = r0.<android.database.CursorJoiner: android.database.Cursor mCursorLeft>;

        $r6 = r0.<android.database.CursorJoiner: int[] mColumnsLeft>;

        staticinvoke <android.database.CursorJoiner: void populateValues(java.lang.String[],android.database.Cursor,int[],int)>($r8, $r7, $r6, 0);

        $r11 = r0.<android.database.CursorJoiner: java.lang.String[] mValues>;

        $r10 = r0.<android.database.CursorJoiner: android.database.Cursor mCursorRight>;

        $r9 = r0.<android.database.CursorJoiner: int[] mColumnsRight>;

        staticinvoke <android.database.CursorJoiner: void populateValues(java.lang.String[],android.database.Cursor,int[],int)>($r11, $r10, $r9, 1);

        $r12 = r0.<android.database.CursorJoiner: java.lang.String[] mValues>;

        i0 = staticinvoke <android.database.CursorJoiner: int compareStrings(java.lang.String[])>($r12);

        if i0 == -1 goto label3;

        if i0 == 0 goto label2;

        if i0 == 1 goto label1;

        goto label4;

     label1:
        $r15 = <android.database.CursorJoiner$Result: android.database.CursorJoiner$Result RIGHT>;

        r0.<android.database.CursorJoiner: android.database.CursorJoiner$Result mCompareResult> = $r15;

        goto label4;

     label2:
        $r14 = <android.database.CursorJoiner$Result: android.database.CursorJoiner$Result BOTH>;

        r0.<android.database.CursorJoiner: android.database.CursorJoiner$Result mCompareResult> = $r14;

        goto label4;

     label3:
        $r13 = <android.database.CursorJoiner$Result: android.database.CursorJoiner$Result LEFT>;

        r0.<android.database.CursorJoiner: android.database.CursorJoiner$Result mCompareResult> = $r13;

     label4:
        goto label7;

     label5:
        if z4 == 0 goto label6;

        $r5 = <android.database.CursorJoiner$Result: android.database.CursorJoiner$Result LEFT>;

        r0.<android.database.CursorJoiner: android.database.CursorJoiner$Result mCompareResult> = $r5;

        goto label7;

     label6:
        $r4 = <android.database.CursorJoiner$Result: android.database.CursorJoiner$Result RIGHT>;

        r0.<android.database.CursorJoiner: android.database.CursorJoiner$Result mCompareResult> = $r4;

     label7:
        r0.<android.database.CursorJoiner: boolean mCompareResultIsValid> = 1;

        $r16 = r0.<android.database.CursorJoiner: android.database.CursorJoiner$Result mCompareResult>;

        return $r16;

     label8:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("you must only call next() when hasNext() is true");

        throw $r1;
    }

    public volatile java.lang.Object next()
    {
        android.database.CursorJoiner r0;
        android.database.CursorJoiner$Result $r1;

        r0 := @this: android.database.CursorJoiner;

        $r1 = virtualinvoke r0.<android.database.CursorJoiner: android.database.CursorJoiner$Result next()>();

        return $r1;
    }

    public void remove()
    {
        android.database.CursorJoiner r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: android.database.CursorJoiner;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("not implemented");

        throw $r1;
    }
}
