public class android.database.CursorWindow extends android.database.sqlite.SQLiteClosable implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    private static final java.lang.String STATS_TAG;
    private static int sCursorWindowSize;
    private static final android.util.LongSparseArray sWindowToPidMap;
    private final dalvik.system.CloseGuard mCloseGuard;
    private final java.lang.String mName;
    private int mStartPos;
    public long mWindowPtr;

    static void <clinit>()
    {
        android.database.CursorWindow$1 $r0;
        android.util.LongSparseArray $r1;

        <android.database.CursorWindow: java.lang.String STATS_TAG> = "CursorWindowStats";

        <android.database.CursorWindow: int sCursorWindowSize> = -1;

        $r0 = new android.database.CursorWindow$1;

        specialinvoke $r0.<android.database.CursorWindow$1: void <init>()>();

        <android.database.CursorWindow: android.os.Parcelable$Creator CREATOR> = $r0;

        $r1 = new android.util.LongSparseArray;

        specialinvoke $r1.<android.util.LongSparseArray: void <init>()>();

        <android.database.CursorWindow: android.util.LongSparseArray sWindowToPidMap> = $r1;

        return;
    }

    private void <init>(android.os.Parcel)
    {
        android.database.CursorWindow r0;
        android.os.Parcel r1;
        long l0;
        dalvik.system.CloseGuard $r2, $r5;
        int $i1;
        byte $b2;
        java.lang.AssertionError $r3;
        java.lang.String $r4;

        r0 := @this: android.database.CursorWindow;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<android.database.sqlite.SQLiteClosable: void <init>()>();

        $r2 = staticinvoke <dalvik.system.CloseGuard: dalvik.system.CloseGuard get()>();

        r0.<android.database.CursorWindow: dalvik.system.CloseGuard mCloseGuard> = $r2;

        $i1 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.database.CursorWindow: int mStartPos> = $i1;

        l0 = staticinvoke <android.database.CursorWindow: long nativeCreateFromParcel(android.os.Parcel)>(r1);

        r0.<android.database.CursorWindow: long mWindowPtr> = l0;

        $b2 = l0 cmp 0L;

        if $b2 == 0 goto label1;

        $r4 = staticinvoke <android.database.CursorWindow: java.lang.String nativeGetName(long)>(l0);

        r0.<android.database.CursorWindow: java.lang.String mName> = $r4;

        $r5 = r0.<android.database.CursorWindow: dalvik.system.CloseGuard mCloseGuard>;

        virtualinvoke $r5.<dalvik.system.CloseGuard: void open(java.lang.String)>("close");

        return;

     label1:
        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;
    }

    void <init>(android.os.Parcel, android.database.CursorWindow$1)
    {
        android.database.CursorWindow r0;
        android.os.Parcel r1;
        android.database.CursorWindow$1 r2;

        r0 := @this: android.database.CursorWindow;

        r1 := @parameter0: android.os.Parcel;

        r2 := @parameter1: android.database.CursorWindow$1;

        specialinvoke r0.<android.database.CursorWindow: void <init>(android.os.Parcel)>(r1);

        return;
    }

    public void <init>(java.lang.String)
    {
        android.database.CursorWindow r0;
        java.lang.String r1;
        int $i0;
        long $l1;

        r0 := @this: android.database.CursorWindow;

        r1 := @parameter0: java.lang.String;

        $i0 = staticinvoke <android.database.CursorWindow: int getCursorWindowSize()>();

        $l1 = (long) $i0;

        specialinvoke r0.<android.database.CursorWindow: void <init>(java.lang.String,long)>(r1, $l1);

        return;
    }

    public void <init>(java.lang.String, long)
    {
        android.database.CursorWindow r0;
        dalvik.system.CloseGuard $r1, $r3;
        java.lang.AssertionError $r2;
        int $i0, $i2, $i4;
        long $l1, l3, l5;
        java.lang.String r4;
        byte $b6;

        r0 := @this: android.database.CursorWindow;

        r4 := @parameter0: java.lang.String;

        l3 := @parameter1: long;

        specialinvoke r0.<android.database.sqlite.SQLiteClosable: void <init>()>();

        $r1 = staticinvoke <dalvik.system.CloseGuard: dalvik.system.CloseGuard get()>();

        r0.<android.database.CursorWindow: dalvik.system.CloseGuard mCloseGuard> = $r1;

        r0.<android.database.CursorWindow: int mStartPos> = 0;

        if r4 == null goto label1;

        $i2 = virtualinvoke r4.<java.lang.String: int length()>();

        if $i2 == 0 goto label1;

        goto label2;

     label1:
        r4 = "<unnamed>";

     label2:
        r0.<android.database.CursorWindow: java.lang.String mName> = r4;

        $i4 = (int) l3;

        l5 = staticinvoke <android.database.CursorWindow: long nativeCreate(java.lang.String,int)>(r4, $i4);

        r0.<android.database.CursorWindow: long mWindowPtr> = l5;

        $b6 = l5 cmp 0L;

        if $b6 == 0 goto label3;

        $r3 = r0.<android.database.CursorWindow: dalvik.system.CloseGuard mCloseGuard>;

        virtualinvoke $r3.<dalvik.system.CloseGuard: void open(java.lang.String)>("close");

        $i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $l1 = r0.<android.database.CursorWindow: long mWindowPtr>;

        specialinvoke r0.<android.database.CursorWindow: void recordNewWindow(int,long)>($i0, $l1);

        return;

     label3:
        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;
    }

    public void <init>(boolean)
    {
        android.database.CursorWindow r0;
        boolean z0;
        java.lang.String $r1;

        r0 := @this: android.database.CursorWindow;

        z0 := @parameter0: boolean;

        $r1 = (java.lang.String) null;

        specialinvoke r0.<android.database.CursorWindow: void <init>(java.lang.String)>($r1);

        return;
    }

    private void dispose()
    {
        android.database.CursorWindow r0;
        dalvik.system.CloseGuard r1;
        long l0, $l2;
        byte $b1;

        r0 := @this: android.database.CursorWindow;

        r1 = r0.<android.database.CursorWindow: dalvik.system.CloseGuard mCloseGuard>;

        if r1 == null goto label1;

        virtualinvoke r1.<dalvik.system.CloseGuard: void close()>();

     label1:
        l0 = r0.<android.database.CursorWindow: long mWindowPtr>;

        $b1 = l0 cmp 0L;

        if $b1 == 0 goto label2;

        specialinvoke r0.<android.database.CursorWindow: void recordClosingOfWindow(long)>(l0);

        $l2 = r0.<android.database.CursorWindow: long mWindowPtr>;

        staticinvoke <android.database.CursorWindow: void nativeDispose(long)>($l2);

        r0.<android.database.CursorWindow: long mWindowPtr> = 0L;

     label2:
        return;
    }

    private static int getCursorWindowSize()
    {
        int $i0, $i1, $i2, $i3;
        android.content.res.Resources $r0;

        $i0 = <android.database.CursorWindow: int sCursorWindowSize>;

        if $i0 >= 0 goto label1;

        $r0 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>();

        $i2 = virtualinvoke $r0.<android.content.res.Resources: int getInteger(int)>(17694766);

        $i3 = $i2 * 1024;

        <android.database.CursorWindow: int sCursorWindowSize> = $i3;

     label1:
        $i1 = <android.database.CursorWindow: int sCursorWindowSize>;

        return $i1;
    }

    private static native boolean nativeAllocRow(long);

    private static native void nativeClear(long);

    private static native void nativeCopyStringToBuffer(long, int, int, android.database.CharArrayBuffer);

    private static native long nativeCreate(java.lang.String, int);

    private static native long nativeCreateFromParcel(android.os.Parcel);

    private static native void nativeDispose(long);

    private static native void nativeFreeLastRow(long);

    private static native byte[] nativeGetBlob(long, int, int);

    private static native double nativeGetDouble(long, int, int);

    private static native long nativeGetLong(long, int, int);

    private static native java.lang.String nativeGetName(long);

    private static native int nativeGetNumRows(long);

    private static native java.lang.String nativeGetString(long, int, int);

    private static native int nativeGetType(long, int, int);

    private static native boolean nativePutBlob(long, byte[], int, int);

    private static native boolean nativePutDouble(long, double, int, int);

    private static native boolean nativePutLong(long, long, int, int);

    private static native boolean nativePutNull(long, int, int);

    private static native boolean nativePutString(long, java.lang.String, int, int);

    private static native boolean nativeSetNumColumns(long, int);

    private static native void nativeWriteToParcel(long, android.os.Parcel);

    public static android.database.CursorWindow newFromParcel(android.os.Parcel)
    {
        android.os.Parcel r0;
        android.os.Parcelable$Creator $r1;
        java.lang.Object $r2;
        android.database.CursorWindow $r3;

        r0 := @parameter0: android.os.Parcel;

        $r1 = <android.database.CursorWindow: android.os.Parcelable$Creator CREATOR>;

        $r2 = interfaceinvoke $r1.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r0);

        $r3 = (android.database.CursorWindow) $r2;

        return $r3;
    }

    private java.lang.String printStats()
    {
        android.database.CursorWindow r0;
        int i0, $i1, $i2, $i3, i4, i5, i6, i7, i8, i9, i10, i11;
        java.lang.StringBuilder $r1, $r4, $r10, $r16;
        android.util.SparseIntArray $r2;
        android.util.LongSparseArray $r3, $r22, r28;
        java.lang.String $r8, $r14, $r19, r31;
        java.lang.Object $r23;
        java.lang.Integer $r24;
        java.lang.Throwable $r25;

        r0 := @this: android.database.CursorWindow;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        i0 = staticinvoke <android.os.Process: int myPid()>();

        i4 = 0;

        $r2 = new android.util.SparseIntArray;

        specialinvoke $r2.<android.util.SparseIntArray: void <init>()>();

        r28 = <android.database.CursorWindow: android.util.LongSparseArray sWindowToPidMap>;

        entermonitor r28;

     label01:
        $r3 = <android.database.CursorWindow: android.util.LongSparseArray sWindowToPidMap>;

        i5 = virtualinvoke $r3.<android.util.LongSparseArray: int size()>();

     label02:
        if i5 != 0 goto label05;

     label03:
        exitmonitor r28;

     label04:
        return "";

     label05:
        i6 = 0;

     label06:
        if i6 >= i5 goto label09;

     label07:
        $r22 = <android.database.CursorWindow: android.util.LongSparseArray sWindowToPidMap>;

        $r23 = virtualinvoke $r22.<android.util.LongSparseArray: java.lang.Object valueAt(int)>(i6);

        $r24 = (java.lang.Integer) $r23;

        i7 = virtualinvoke $r24.<java.lang.Integer: int intValue()>();

        $i2 = virtualinvoke $r2.<android.util.SparseIntArray: int get(int)>(i7);

        $i3 = $i2 + 1;

        virtualinvoke $r2.<android.util.SparseIntArray: void put(int,int)>(i7, $i3);

     label08:
        i6 = i6 + 1;

        goto label06;

     label09:
        exitmonitor r28;

     label10:
        i8 = virtualinvoke $r2.<android.util.SparseIntArray: int size()>();

        i9 = 0;

     label11:
        if i9 >= i8 goto label14;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (# cursors opened by ");

        i10 = virtualinvoke $r2.<android.util.SparseIntArray: int keyAt(int)>(i9);

        if i10 != i0 goto label12;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("this proc=");

        goto label13;

     label12:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pid ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i10);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r14 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

     label13:
        i11 = virtualinvoke $r2.<android.util.SparseIntArray: int get(int)>(i10);

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i11);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        i4 = i4 + i11;

        i9 = i9 + 1;

        goto label11;

     label14:
        $i1 = virtualinvoke $r1.<java.lang.StringBuilder: int length()>();

        if $i1 <= 980 goto label15;

        r31 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String substring(int,int)>(0, 980);

        goto label16;

     label15:
        r31 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

     label16:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("# Open Cursors=");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r31);

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;

     label17:
        $r25 := @caughtexception;

     label18:
        exitmonitor r28;

     label19:
        throw $r25;

        catch java.lang.Throwable from label01 to label02 with label17;
        catch java.lang.Throwable from label03 to label04 with label17;
        catch java.lang.Throwable from label07 to label08 with label17;
        catch java.lang.Throwable from label09 to label10 with label17;
        catch java.lang.Throwable from label18 to label19 with label17;
    }

    private void recordClosingOfWindow(long)
    {
        android.database.CursorWindow r0;
        long l0;
        android.util.LongSparseArray r1, $r3, $r4;
        int $i1;
        java.lang.Throwable $r5;

        r0 := @this: android.database.CursorWindow;

        l0 := @parameter0: long;

        r1 = <android.database.CursorWindow: android.util.LongSparseArray sWindowToPidMap>;

        entermonitor r1;

     label1:
        $r3 = <android.database.CursorWindow: android.util.LongSparseArray sWindowToPidMap>;

        $i1 = virtualinvoke $r3.<android.util.LongSparseArray: int size()>();

        if $i1 != 0 goto label3;

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 = <android.database.CursorWindow: android.util.LongSparseArray sWindowToPidMap>;

        virtualinvoke $r4.<android.util.LongSparseArray: void delete(long)>(l0);

        exitmonitor r1;

     label4:
        return;

     label5:
        $r5 := @caughtexception;

     label6:
        exitmonitor r1;

     label7:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    private void recordNewWindow(int, long)
    {
        android.database.CursorWindow r0;
        int i0;
        long l1;
        android.util.LongSparseArray r1, $r2;
        java.lang.Integer $r3;
        boolean $z0;
        java.lang.String $r5, $r7;
        java.lang.Throwable $r8;
        java.lang.StringBuilder r9;

        r0 := @this: android.database.CursorWindow;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        r1 = <android.database.CursorWindow: android.util.LongSparseArray sWindowToPidMap>;

        entermonitor r1;

     label1:
        $r2 = <android.database.CursorWindow: android.util.LongSparseArray sWindowToPidMap>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r2.<android.util.LongSparseArray: void put(long,java.lang.Object)>(l1, $r3);

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("CursorWindowStats", 2);

        if $z0 == 0 goto label2;

        r9 = new java.lang.StringBuilder;

        specialinvoke r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Created a new Cursor. ");

        $r5 = specialinvoke r0.<android.database.CursorWindow: java.lang.String printStats()>();

        virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("CursorWindowStats", $r7);

     label2:
        exitmonitor r1;

     label3:
        return;

     label4:
        $r8 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public boolean allocRow()
    {
        android.database.CursorWindow r0;
        boolean z0;
        long $l0;
        java.lang.Throwable $r2;

        r0 := @this: android.database.CursorWindow;

        virtualinvoke r0.<android.database.CursorWindow: void acquireReference()>();

     label1:
        $l0 = r0.<android.database.CursorWindow: long mWindowPtr>;

        z0 = staticinvoke <android.database.CursorWindow: boolean nativeAllocRow(long)>($l0);

     label2:
        virtualinvoke r0.<android.database.CursorWindow: void releaseReference()>();

        return z0;

     label3:
        $r2 := @caughtexception;

        virtualinvoke r0.<android.database.CursorWindow: void releaseReference()>();

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void clear()
    {
        android.database.CursorWindow r0;
        long $l0;
        java.lang.Throwable $r2;

        r0 := @this: android.database.CursorWindow;

        virtualinvoke r0.<android.database.CursorWindow: void acquireReference()>();

     label1:
        r0.<android.database.CursorWindow: int mStartPos> = 0;

        $l0 = r0.<android.database.CursorWindow: long mWindowPtr>;

        staticinvoke <android.database.CursorWindow: void nativeClear(long)>($l0);

     label2:
        virtualinvoke r0.<android.database.CursorWindow: void releaseReference()>();

        return;

     label3:
        $r2 := @caughtexception;

        virtualinvoke r0.<android.database.CursorWindow: void releaseReference()>();

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void copyStringToBuffer(int, int, android.database.CharArrayBuffer)
    {
        android.database.CursorWindow r0;
        int i0, i1, $i2, $i3;
        java.lang.IllegalArgumentException $r1;
        long $l4;
        java.lang.Throwable $r2;
        android.database.CharArrayBuffer r3;

        r0 := @this: android.database.CursorWindow;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r3 := @parameter2: android.database.CharArrayBuffer;

        if r3 == null goto label4;

        virtualinvoke r0.<android.database.CursorWindow: void acquireReference()>();

     label1:
        $l4 = r0.<android.database.CursorWindow: long mWindowPtr>;

        $i2 = r0.<android.database.CursorWindow: int mStartPos>;

        $i3 = i0 - $i2;

        staticinvoke <android.database.CursorWindow: void nativeCopyStringToBuffer(long,int,int,android.database.CharArrayBuffer)>($l4, $i3, i1, r3);

     label2:
        virtualinvoke r0.<android.database.CursorWindow: void releaseReference()>();

        return;

     label3:
        $r2 := @caughtexception;

        virtualinvoke r0.<android.database.CursorWindow: void releaseReference()>();

        throw $r2;

     label4:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("CharArrayBuffer should not be null");

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public int describeContents()
    {
        android.database.CursorWindow r0;

        r0 := @this: android.database.CursorWindow;

        return 0;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.database.CursorWindow r0;
        dalvik.system.CloseGuard $r2, $r3;
        java.lang.Throwable $r4;

        r0 := @this: android.database.CursorWindow;

     label1:
        $r2 = r0.<android.database.CursorWindow: dalvik.system.CloseGuard mCloseGuard>;

        if $r2 == null goto label2;

        $r3 = r0.<android.database.CursorWindow: dalvik.system.CloseGuard mCloseGuard>;

        virtualinvoke $r3.<dalvik.system.CloseGuard: void warnIfOpen()>();

     label2:
        specialinvoke r0.<android.database.CursorWindow: void dispose()>();

     label3:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        return;

     label4:
        $r4 := @caughtexception;

        specialinvoke r0.<java.lang.Object: void finalize()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public void freeLastRow()
    {
        android.database.CursorWindow r0;
        long $l0;
        java.lang.Throwable $r2;

        r0 := @this: android.database.CursorWindow;

        virtualinvoke r0.<android.database.CursorWindow: void acquireReference()>();

     label1:
        $l0 = r0.<android.database.CursorWindow: long mWindowPtr>;

        staticinvoke <android.database.CursorWindow: void nativeFreeLastRow(long)>($l0);

     label2:
        virtualinvoke r0.<android.database.CursorWindow: void releaseReference()>();

        return;

     label3:
        $r2 := @caughtexception;

        virtualinvoke r0.<android.database.CursorWindow: void releaseReference()>();

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public byte[] getBlob(int, int)
    {
        android.database.CursorWindow r0;
        int i0, i1, $i2, $i3;
        long $l4;
        java.lang.Throwable $r1;
        byte[] r2;

        r0 := @this: android.database.CursorWindow;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<android.database.CursorWindow: void acquireReference()>();

     label1:
        $l4 = r0.<android.database.CursorWindow: long mWindowPtr>;

        $i2 = r0.<android.database.CursorWindow: int mStartPos>;

        $i3 = i0 - $i2;

        r2 = staticinvoke <android.database.CursorWindow: byte[] nativeGetBlob(long,int,int)>($l4, $i3, i1);

     label2:
        virtualinvoke r0.<android.database.CursorWindow: void releaseReference()>();

        return r2;

     label3:
        $r1 := @caughtexception;

        virtualinvoke r0.<android.database.CursorWindow: void releaseReference()>();

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public double getDouble(int, int)
    {
        android.database.CursorWindow r0;
        int i0, i1, $i2, $i3;
        double d0;
        long $l4;
        java.lang.Throwable $r2;

        r0 := @this: android.database.CursorWindow;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<android.database.CursorWindow: void acquireReference()>();

     label1:
        $l4 = r0.<android.database.CursorWindow: long mWindowPtr>;

        $i2 = r0.<android.database.CursorWindow: int mStartPos>;

        $i3 = i0 - $i2;

        d0 = staticinvoke <android.database.CursorWindow: double nativeGetDouble(long,int,int)>($l4, $i3, i1);

     label2:
        virtualinvoke r0.<android.database.CursorWindow: void releaseReference()>();

        return d0;

     label3:
        $r2 := @caughtexception;

        virtualinvoke r0.<android.database.CursorWindow: void releaseReference()>();

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public float getFloat(int, int)
    {
        android.database.CursorWindow r0;
        int i0, i1;
        double $d0;
        float $f0;

        r0 := @this: android.database.CursorWindow;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $d0 = virtualinvoke r0.<android.database.CursorWindow: double getDouble(int,int)>(i0, i1);

        $f0 = (float) $d0;

        return $f0;
    }

    public int getInt(int, int)
    {
        android.database.CursorWindow r0;
        int i0, i1, $i3;
        long $l2;

        r0 := @this: android.database.CursorWindow;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $l2 = virtualinvoke r0.<android.database.CursorWindow: long getLong(int,int)>(i0, i1);

        $i3 = (int) $l2;

        return $i3;
    }

    public long getLong(int, int)
    {
        android.database.CursorWindow r0;
        int i0, i1, $i3, $i4;
        long l2, $l5;
        java.lang.Throwable $r2;

        r0 := @this: android.database.CursorWindow;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<android.database.CursorWindow: void acquireReference()>();

     label1:
        $l5 = r0.<android.database.CursorWindow: long mWindowPtr>;

        $i3 = r0.<android.database.CursorWindow: int mStartPos>;

        $i4 = i0 - $i3;

        l2 = staticinvoke <android.database.CursorWindow: long nativeGetLong(long,int,int)>($l5, $i4, i1);

     label2:
        virtualinvoke r0.<android.database.CursorWindow: void releaseReference()>();

        return l2;

     label3:
        $r2 := @caughtexception;

        virtualinvoke r0.<android.database.CursorWindow: void releaseReference()>();

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public java.lang.String getName()
    {
        android.database.CursorWindow r0;
        java.lang.String $r1;

        r0 := @this: android.database.CursorWindow;

        $r1 = r0.<android.database.CursorWindow: java.lang.String mName>;

        return $r1;
    }

    public int getNumRows()
    {
        android.database.CursorWindow r0;
        int i0;
        long $l1;
        java.lang.Throwable $r2;

        r0 := @this: android.database.CursorWindow;

        virtualinvoke r0.<android.database.CursorWindow: void acquireReference()>();

     label1:
        $l1 = r0.<android.database.CursorWindow: long mWindowPtr>;

        i0 = staticinvoke <android.database.CursorWindow: int nativeGetNumRows(long)>($l1);

     label2:
        virtualinvoke r0.<android.database.CursorWindow: void releaseReference()>();

        return i0;

     label3:
        $r2 := @caughtexception;

        virtualinvoke r0.<android.database.CursorWindow: void releaseReference()>();

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public short getShort(int, int)
    {
        android.database.CursorWindow r0;
        int i0, i1, $i3;
        long $l2;
        short $s4;

        r0 := @this: android.database.CursorWindow;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $l2 = virtualinvoke r0.<android.database.CursorWindow: long getLong(int,int)>(i0, i1);

        $i3 = (int) $l2;

        $s4 = (short) $i3;

        return $s4;
    }

    public int getStartPosition()
    {
        android.database.CursorWindow r0;
        int $i0;

        r0 := @this: android.database.CursorWindow;

        $i0 = r0.<android.database.CursorWindow: int mStartPos>;

        return $i0;
    }

    public java.lang.String getString(int, int)
    {
        android.database.CursorWindow r0;
        int i0, i1, $i2, $i3;
        long $l4;
        java.lang.Throwable $r1;
        java.lang.String r2;

        r0 := @this: android.database.CursorWindow;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<android.database.CursorWindow: void acquireReference()>();

     label1:
        $l4 = r0.<android.database.CursorWindow: long mWindowPtr>;

        $i2 = r0.<android.database.CursorWindow: int mStartPos>;

        $i3 = i0 - $i2;

        r2 = staticinvoke <android.database.CursorWindow: java.lang.String nativeGetString(long,int,int)>($l4, $i3, i1);

     label2:
        virtualinvoke r0.<android.database.CursorWindow: void releaseReference()>();

        return r2;

     label3:
        $r1 := @caughtexception;

        virtualinvoke r0.<android.database.CursorWindow: void releaseReference()>();

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public int getType(int, int)
    {
        android.database.CursorWindow r0;
        int i0, $i1, $i2, i4, i5;
        long $l3;
        java.lang.Throwable $r2;

        r0 := @this: android.database.CursorWindow;

        i4 := @parameter0: int;

        i0 := @parameter1: int;

        virtualinvoke r0.<android.database.CursorWindow: void acquireReference()>();

     label1:
        $l3 = r0.<android.database.CursorWindow: long mWindowPtr>;

        $i1 = r0.<android.database.CursorWindow: int mStartPos>;

        $i2 = i4 - $i1;

        i5 = staticinvoke <android.database.CursorWindow: int nativeGetType(long,int,int)>($l3, $i2, i0);

     label2:
        virtualinvoke r0.<android.database.CursorWindow: void releaseReference()>();

        return i5;

     label3:
        $r2 := @caughtexception;

        virtualinvoke r0.<android.database.CursorWindow: void releaseReference()>();

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean isBlob(int, int)
    {
        android.database.CursorWindow r0;
        int i0, i1, i2;
        boolean z0;

        r0 := @this: android.database.CursorWindow;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        i2 = virtualinvoke r0.<android.database.CursorWindow: int getType(int,int)>(i1, i0);

        if i2 == 4 goto label2;

        if i2 != 0 goto label1;

        goto label2;

     label1:
        z0 = 0;

        goto label3;

     label2:
        z0 = 1;

     label3:
        return z0;
    }

    public boolean isFloat(int, int)
    {
        android.database.CursorWindow r0;
        int i0, i1, $i2;
        boolean z0;

        r0 := @this: android.database.CursorWindow;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = virtualinvoke r0.<android.database.CursorWindow: int getType(int,int)>(i0, i1);

        if $i2 != 2 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isLong(int, int)
    {
        android.database.CursorWindow r0;
        int i0, i1, i2;
        boolean z0;

        r0 := @this: android.database.CursorWindow;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        i2 = virtualinvoke r0.<android.database.CursorWindow: int getType(int,int)>(i1, i0);

        z0 = 1;

        if i2 != 1 goto label1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isNull(int, int)
    {
        android.database.CursorWindow r0;
        int i0, i1, $i2;
        boolean z0;

        r0 := @this: android.database.CursorWindow;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = virtualinvoke r0.<android.database.CursorWindow: int getType(int,int)>(i0, i1);

        if $i2 != 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isString(int, int)
    {
        android.database.CursorWindow r0;
        int i0, i1, i2;
        boolean z0;

        r0 := @this: android.database.CursorWindow;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        i2 = virtualinvoke r0.<android.database.CursorWindow: int getType(int,int)>(i1, i0);

        if i2 == 3 goto label2;

        if i2 != 0 goto label1;

        goto label2;

     label1:
        z0 = 0;

        goto label3;

     label2:
        z0 = 1;

     label3:
        return z0;
    }

    protected void onAllReferencesReleased()
    {
        android.database.CursorWindow r0;

        r0 := @this: android.database.CursorWindow;

        specialinvoke r0.<android.database.CursorWindow: void dispose()>();

        return;
    }

    public boolean putBlob(byte[], int, int)
    {
        android.database.CursorWindow r0;
        int i0, i1, $i2, $i3;
        boolean z0;
        long $l4;
        java.lang.Throwable $r1;
        byte[] r2;

        r0 := @this: android.database.CursorWindow;

        r2 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        virtualinvoke r0.<android.database.CursorWindow: void acquireReference()>();

     label1:
        $l4 = r0.<android.database.CursorWindow: long mWindowPtr>;

        $i2 = r0.<android.database.CursorWindow: int mStartPos>;

        $i3 = i0 - $i2;

        z0 = staticinvoke <android.database.CursorWindow: boolean nativePutBlob(long,byte[],int,int)>($l4, r2, $i3, i1);

     label2:
        virtualinvoke r0.<android.database.CursorWindow: void releaseReference()>();

        return z0;

     label3:
        $r1 := @caughtexception;

        virtualinvoke r0.<android.database.CursorWindow: void releaseReference()>();

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean putDouble(double, int, int)
    {
        android.database.CursorWindow r0;
        double d0;
        int i0, i1, $i2, $i3;
        boolean z0;
        long $l4;
        java.lang.Throwable $r2;

        r0 := @this: android.database.CursorWindow;

        d0 := @parameter0: double;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        virtualinvoke r0.<android.database.CursorWindow: void acquireReference()>();

     label1:
        $l4 = r0.<android.database.CursorWindow: long mWindowPtr>;

        $i2 = r0.<android.database.CursorWindow: int mStartPos>;

        $i3 = i0 - $i2;

        z0 = staticinvoke <android.database.CursorWindow: boolean nativePutDouble(long,double,int,int)>($l4, d0, $i3, i1);

     label2:
        virtualinvoke r0.<android.database.CursorWindow: void releaseReference()>();

        return z0;

     label3:
        $r2 := @caughtexception;

        virtualinvoke r0.<android.database.CursorWindow: void releaseReference()>();

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean putLong(long, int, int)
    {
        android.database.CursorWindow r0;
        long l0, $l5;
        int i1, i2, $i3, $i4;
        boolean z0;
        java.lang.Throwable $r2;

        r0 := @this: android.database.CursorWindow;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        virtualinvoke r0.<android.database.CursorWindow: void acquireReference()>();

     label1:
        $l5 = r0.<android.database.CursorWindow: long mWindowPtr>;

        $i3 = r0.<android.database.CursorWindow: int mStartPos>;

        $i4 = i1 - $i3;

        z0 = staticinvoke <android.database.CursorWindow: boolean nativePutLong(long,long,int,int)>($l5, l0, $i4, i2);

     label2:
        virtualinvoke r0.<android.database.CursorWindow: void releaseReference()>();

        return z0;

     label3:
        $r2 := @caughtexception;

        virtualinvoke r0.<android.database.CursorWindow: void releaseReference()>();

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean putNull(int, int)
    {
        android.database.CursorWindow r0;
        int i0, i1, $i2, $i3;
        boolean z0;
        long $l4;
        java.lang.Throwable $r2;

        r0 := @this: android.database.CursorWindow;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<android.database.CursorWindow: void acquireReference()>();

     label1:
        $l4 = r0.<android.database.CursorWindow: long mWindowPtr>;

        $i2 = r0.<android.database.CursorWindow: int mStartPos>;

        $i3 = i0 - $i2;

        z0 = staticinvoke <android.database.CursorWindow: boolean nativePutNull(long,int,int)>($l4, $i3, i1);

     label2:
        virtualinvoke r0.<android.database.CursorWindow: void releaseReference()>();

        return z0;

     label3:
        $r2 := @caughtexception;

        virtualinvoke r0.<android.database.CursorWindow: void releaseReference()>();

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean putString(java.lang.String, int, int)
    {
        android.database.CursorWindow r0;
        int i0, i1, $i2, $i3;
        boolean z0;
        long $l4;
        java.lang.Throwable $r1;
        java.lang.String r2;

        r0 := @this: android.database.CursorWindow;

        r2 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        virtualinvoke r0.<android.database.CursorWindow: void acquireReference()>();

     label1:
        $l4 = r0.<android.database.CursorWindow: long mWindowPtr>;

        $i2 = r0.<android.database.CursorWindow: int mStartPos>;

        $i3 = i0 - $i2;

        z0 = staticinvoke <android.database.CursorWindow: boolean nativePutString(long,java.lang.String,int,int)>($l4, r2, $i3, i1);

     label2:
        virtualinvoke r0.<android.database.CursorWindow: void releaseReference()>();

        return z0;

     label3:
        $r1 := @caughtexception;

        virtualinvoke r0.<android.database.CursorWindow: void releaseReference()>();

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean setNumColumns(int)
    {
        android.database.CursorWindow r0;
        int i0;
        boolean z0;
        long $l1;
        java.lang.Throwable $r2;

        r0 := @this: android.database.CursorWindow;

        i0 := @parameter0: int;

        virtualinvoke r0.<android.database.CursorWindow: void acquireReference()>();

     label1:
        $l1 = r0.<android.database.CursorWindow: long mWindowPtr>;

        z0 = staticinvoke <android.database.CursorWindow: boolean nativeSetNumColumns(long,int)>($l1, i0);

     label2:
        virtualinvoke r0.<android.database.CursorWindow: void releaseReference()>();

        return z0;

     label3:
        $r2 := @caughtexception;

        virtualinvoke r0.<android.database.CursorWindow: void releaseReference()>();

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void setStartPosition(int)
    {
        android.database.CursorWindow r0;
        int i0;

        r0 := @this: android.database.CursorWindow;

        i0 := @parameter0: int;

        r0.<android.database.CursorWindow: int mStartPos> = i0;

        return;
    }

    public java.lang.String toString()
    {
        android.database.CursorWindow r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r3, $r6, $r9;
        long $l0;

        r0 := @this: android.database.CursorWindow;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke r0.<android.database.CursorWindow: java.lang.String getName()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" {");

        $l0 = r0.<android.database.CursorWindow: long mWindowPtr>;

        $r6 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r9 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.database.CursorWindow r0;
        int i0, $i1, $i3;
        long $l2;
        java.lang.Throwable $r1;
        android.os.Parcel r2;

        r0 := @this: android.database.CursorWindow;

        r2 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        virtualinvoke r0.<android.database.CursorWindow: void acquireReference()>();

     label1:
        $i1 = r0.<android.database.CursorWindow: int mStartPos>;

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>($i1);

        $l2 = r0.<android.database.CursorWindow: long mWindowPtr>;

        staticinvoke <android.database.CursorWindow: void nativeWriteToParcel(long,android.os.Parcel)>($l2, r2);

     label2:
        virtualinvoke r0.<android.database.CursorWindow: void releaseReference()>();

        $i3 = i0 & 1;

        if $i3 == 0 goto label3;

        virtualinvoke r0.<android.database.CursorWindow: void releaseReference()>();

     label3:
        return;

     label4:
        $r1 := @caughtexception;

        virtualinvoke r0.<android.database.CursorWindow: void releaseReference()>();

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label4;
    }
}
