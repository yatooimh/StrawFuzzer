public class android.database.DatabaseUtils$InsertHelper extends java.lang.Object
{
    public static final int TABLE_INFO_PRAGMA_COLUMNNAME_INDEX;
    public static final int TABLE_INFO_PRAGMA_DEFAULT_INDEX;
    private java.util.HashMap mColumns;
    private final android.database.sqlite.SQLiteDatabase mDb;
    private java.lang.String mInsertSQL;
    private android.database.sqlite.SQLiteStatement mInsertStatement;
    private android.database.sqlite.SQLiteStatement mPreparedStatement;
    private android.database.sqlite.SQLiteStatement mReplaceStatement;
    private final java.lang.String mTableName;

    public void <init>(android.database.sqlite.SQLiteDatabase, java.lang.String)
    {
        android.database.DatabaseUtils$InsertHelper r0;
        android.database.sqlite.SQLiteDatabase r1;
        java.lang.String r2;

        r0 := @this: android.database.DatabaseUtils$InsertHelper;

        r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.database.DatabaseUtils$InsertHelper: java.lang.String mInsertSQL> = null;

        r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteStatement mInsertStatement> = null;

        r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteStatement mReplaceStatement> = null;

        r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteStatement mPreparedStatement> = null;

        r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteDatabase mDb> = r1;

        r0.<android.database.DatabaseUtils$InsertHelper: java.lang.String mTableName> = r2;

        return;
    }

    private void buildSQL() throws android.database.SQLException
    {
        android.database.DatabaseUtils$InsertHelper r0;
        int i0, $i1, $i2, i3;
        java.lang.StringBuilder $r3, $r5, r14;
        java.lang.String $r4, $r6, $r7, $r8, r17, r18, r19, r20;
        boolean $z0;
        java.util.HashMap $r9, r16;
        java.lang.Integer $r10;
        java.lang.Throwable $r11;
        android.database.Cursor r12, r15;
        android.database.sqlite.SQLiteDatabase r13;

        r0 := @this: android.database.DatabaseUtils$InsertHelper;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(int)>(128);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("INSERT INTO ");

        $r4 = r0.<android.database.DatabaseUtils$InsertHelper: java.lang.String mTableName>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(int)>(128);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("VALUES (");

        i3 = 1;

        r12 = null;

     label01:
        r13 = r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteDatabase mDb>;

     label02:
        r12 = null;

     label03:
        r14 = new java.lang.StringBuilder;

     label04:
        r12 = null;

     label05:
        specialinvoke r14.<java.lang.StringBuilder: void <init>()>();

     label06:
        r12 = null;

     label07:
        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PRAGMA table_info(");

     label08:
        r12 = null;

     label09:
        $r6 = r0.<android.database.DatabaseUtils$InsertHelper: java.lang.String mTableName>;

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

     label10:
        r12 = null;

     label11:
        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

     label12:
        r12 = null;

     label13:
        $r7 = virtualinvoke r14.<java.lang.StringBuilder: java.lang.String toString()>();

        r15 = virtualinvoke r13.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>($r7, null);

     label14:
        r12 = r15;

     label15:
        r16 = new java.util.HashMap;

     label16:
        r12 = r15;

     label17:
        $i1 = interfaceinvoke r15.<android.database.Cursor: int getCount()>();

        specialinvoke r16.<java.util.HashMap: void <init>(int)>($i1);

     label18:
        r12 = r15;

     label19:
        r0.<android.database.DatabaseUtils$InsertHelper: java.util.HashMap mColumns> = r16;

     label20:
        r12 = r15;

     label21:
        $z0 = interfaceinvoke r15.<android.database.Cursor: boolean moveToNext()>();

        if $z0 == 0 goto label55;

     label22:
        r12 = r15;

     label23:
        r17 = interfaceinvoke r15.<android.database.Cursor: java.lang.String getString(int)>(1);

     label24:
        r12 = r15;

     label25:
        r18 = interfaceinvoke r15.<android.database.Cursor: java.lang.String getString(int)>(4);

     label26:
        r12 = r15;

     label27:
        $r9 = r0.<android.database.DatabaseUtils$InsertHelper: java.util.HashMap mColumns>;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);

        virtualinvoke $r9.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r17, $r10);

     label28:
        r12 = r15;

     label29:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

     label30:
        r12 = r15;

     label31:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r17);

     label32:
        r12 = r15;

     label33:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

     label34:
        if r18 != null goto label37;

        r12 = r15;

     label35:
        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?");

     label36:
        goto label43;

     label37:
        r12 = r15;

     label38:
        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("COALESCE(?, ");

     label39:
        r12 = r15;

     label40:
        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);

     label41:
        r12 = r15;

     label42:
        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

     label43:
        r12 = r15;

     label44:
        i0 = interfaceinvoke r15.<android.database.Cursor: int getCount()>();

     label45:
        if i3 != i0 goto label46;

        r19 = ") ";

        goto label47;

     label46:
        r19 = ", ";

     label47:
        r12 = r15;

     label48:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19);

     label49:
        r20 = ", ";

        r12 = r15;

     label50:
        $i2 = interfaceinvoke r15.<android.database.Cursor: int getCount()>();

        if i3 != $i2 goto label52;

     label51:
        r20 = ");";

     label52:
        r12 = r15;

     label53:
        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r20);

     label54:
        i3 = i3 + 1;

        goto label20;

     label55:
        if r15 == null goto label56;

        interfaceinvoke r15.<android.database.Cursor: void close()>();

     label56:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r5);

        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<android.database.DatabaseUtils$InsertHelper: java.lang.String mInsertSQL> = $r8;

        return;

     label57:
        $r11 := @caughtexception;

        if r12 == null goto label58;

        interfaceinvoke r12.<android.database.Cursor: void close()>();

     label58:
        throw $r11;

        catch java.lang.Throwable from label01 to label02 with label57;
        catch java.lang.Throwable from label03 to label04 with label57;
        catch java.lang.Throwable from label05 to label06 with label57;
        catch java.lang.Throwable from label07 to label08 with label57;
        catch java.lang.Throwable from label09 to label10 with label57;
        catch java.lang.Throwable from label11 to label12 with label57;
        catch java.lang.Throwable from label13 to label14 with label57;
        catch java.lang.Throwable from label15 to label16 with label57;
        catch java.lang.Throwable from label17 to label18 with label57;
        catch java.lang.Throwable from label19 to label20 with label57;
        catch java.lang.Throwable from label21 to label22 with label57;
        catch java.lang.Throwable from label23 to label24 with label57;
        catch java.lang.Throwable from label25 to label26 with label57;
        catch java.lang.Throwable from label27 to label28 with label57;
        catch java.lang.Throwable from label29 to label30 with label57;
        catch java.lang.Throwable from label31 to label32 with label57;
        catch java.lang.Throwable from label33 to label34 with label57;
        catch java.lang.Throwable from label35 to label36 with label57;
        catch java.lang.Throwable from label38 to label39 with label57;
        catch java.lang.Throwable from label40 to label41 with label57;
        catch java.lang.Throwable from label42 to label43 with label57;
        catch java.lang.Throwable from label44 to label45 with label57;
        catch java.lang.Throwable from label48 to label49 with label57;
        catch java.lang.Throwable from label50 to label51 with label57;
        catch java.lang.Throwable from label53 to label54 with label57;
    }

    private android.database.sqlite.SQLiteStatement getStatement(boolean) throws android.database.SQLException
    {
        android.database.DatabaseUtils$InsertHelper r0;
        boolean z0;
        android.database.sqlite.SQLiteStatement $r1, $r5, $r6, $r14, $r17, $r18;
        java.lang.String $r2, $r3, $r7, $r10, $r11, r16;
        android.database.sqlite.SQLiteDatabase $r4, $r13;
        java.lang.StringBuilder $r8;

        r0 := @this: android.database.DatabaseUtils$InsertHelper;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label3;

        $r6 = r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteStatement mReplaceStatement>;

        if $r6 != null goto label2;

        $r7 = r0.<android.database.DatabaseUtils$InsertHelper: java.lang.String mInsertSQL>;

        if $r7 != null goto label1;

        specialinvoke r0.<android.database.DatabaseUtils$InsertHelper: void buildSQL()>();

     label1:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("INSERT OR REPLACE");

        $r10 = r0.<android.database.DatabaseUtils$InsertHelper: java.lang.String mInsertSQL>;

        $r11 = virtualinvoke $r10.<java.lang.String: java.lang.String substring(int)>(6);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        r16 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteDatabase mDb>;

        $r14 = virtualinvoke $r13.<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteStatement compileStatement(java.lang.String)>(r16);

        r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteStatement mReplaceStatement> = $r14;

     label2:
        $r17 = r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteStatement mReplaceStatement>;

        return $r17;

     label3:
        $r1 = r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteStatement mInsertStatement>;

        if $r1 != null goto label5;

        $r2 = r0.<android.database.DatabaseUtils$InsertHelper: java.lang.String mInsertSQL>;

        if $r2 != null goto label4;

        specialinvoke r0.<android.database.DatabaseUtils$InsertHelper: void buildSQL()>();

     label4:
        $r4 = r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteDatabase mDb>;

        $r3 = r0.<android.database.DatabaseUtils$InsertHelper: java.lang.String mInsertSQL>;

        $r5 = virtualinvoke $r4.<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteStatement compileStatement(java.lang.String)>($r3);

        r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteStatement mInsertStatement> = $r5;

     label5:
        $r18 = r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteStatement mInsertStatement>;

        return $r18;
    }

    private long insertInternal(android.content.ContentValues, boolean)
    {
        android.database.DatabaseUtils$InsertHelper r0;
        boolean z0, $z1;
        java.util.Iterator r1;
        long l0;
        android.database.sqlite.SQLiteDatabase $r2, $r4, $r5, $r11, $r19;
        java.util.Set $r3;
        java.lang.Object $r6, $r7, $r9;
        java.lang.String $r8, $r16, $r18;
        int $i1;
        java.lang.Throwable $r10;
        android.database.SQLException $r12;
        android.content.ContentValues r20;
        android.database.sqlite.SQLiteStatement r21;
        java.util.Map$Entry r22;
        java.lang.StringBuilder r25;

        r0 := @this: android.database.DatabaseUtils$InsertHelper;

        r20 := @parameter0: android.content.ContentValues;

        z0 := @parameter1: boolean;

        $r2 = r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteDatabase mDb>;

        virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: void beginTransactionNonExclusive()>();

     label01:
        r21 = specialinvoke r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteStatement getStatement(boolean)>(z0);

        virtualinvoke r21.<android.database.sqlite.SQLiteStatement: void clearBindings()>();

        $r3 = virtualinvoke r20.<android.content.ContentValues: java.util.Set valueSet()>();

        r1 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label02:
        $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label04;

        $r6 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r22 = (java.util.Map$Entry) $r6;

        $r7 = interfaceinvoke r22.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r8 = (java.lang.String) $r7;

        $i1 = virtualinvoke r0.<android.database.DatabaseUtils$InsertHelper: int getColumnIndex(java.lang.String)>($r8);

        $r9 = interfaceinvoke r22.<java.util.Map$Entry: java.lang.Object getValue()>();

        staticinvoke <android.database.DatabaseUtils: void bindObjectToProgram(android.database.sqlite.SQLiteProgram,int,java.lang.Object)>(r21, $i1, $r9);

     label03:
        goto label02;

     label04:
        l0 = virtualinvoke r21.<android.database.sqlite.SQLiteStatement: long executeInsert()>();

        $r4 = r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteDatabase mDb>;

        virtualinvoke $r4.<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>();

     label05:
        $r5 = r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteDatabase mDb>;

        virtualinvoke $r5.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

        return l0;

     label06:
        $r10 := @caughtexception;

        goto label10;

     label07:
        $r12 := @caughtexception;

     label08:
        r25 = new java.lang.StringBuilder;

        specialinvoke r25.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error inserting ");

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r20);

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" into table  ");

        $r16 = r0.<android.database.DatabaseUtils$InsertHelper: java.lang.String mTableName>;

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke r25.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("DatabaseUtils", $r18, $r12);

     label09:
        $r19 = r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteDatabase mDb>;

        virtualinvoke $r19.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

        return -1L;

     label10:
        $r11 = r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteDatabase mDb>;

        virtualinvoke $r11.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

        throw $r10;

        catch android.database.SQLException from label01 to label02 with label07;
        catch java.lang.Throwable from label01 to label02 with label06;
        catch android.database.SQLException from label02 to label03 with label07;
        catch java.lang.Throwable from label02 to label03 with label06;
        catch android.database.SQLException from label04 to label05 with label07;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label08 to label09 with label06;
    }

    public void bind(int, double)
    {
        android.database.DatabaseUtils$InsertHelper r0;
        int i0;
        double d0;
        android.database.sqlite.SQLiteStatement $r1;

        r0 := @this: android.database.DatabaseUtils$InsertHelper;

        i0 := @parameter0: int;

        d0 := @parameter1: double;

        $r1 = r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteStatement mPreparedStatement>;

        virtualinvoke $r1.<android.database.sqlite.SQLiteStatement: void bindDouble(int,double)>(i0, d0);

        return;
    }

    public void bind(int, float)
    {
        android.database.DatabaseUtils$InsertHelper r0;
        int i0;
        float f0;
        double $d0;
        android.database.sqlite.SQLiteStatement $r1;

        r0 := @this: android.database.DatabaseUtils$InsertHelper;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        $r1 = r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteStatement mPreparedStatement>;

        $d0 = (double) f0;

        virtualinvoke $r1.<android.database.sqlite.SQLiteStatement: void bindDouble(int,double)>(i0, $d0);

        return;
    }

    public void bind(int, int)
    {
        android.database.DatabaseUtils$InsertHelper r0;
        int i0, i1;
        long $l2;
        android.database.sqlite.SQLiteStatement $r1;

        r0 := @this: android.database.DatabaseUtils$InsertHelper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteStatement mPreparedStatement>;

        $l2 = (long) i1;

        virtualinvoke $r1.<android.database.sqlite.SQLiteStatement: void bindLong(int,long)>(i0, $l2);

        return;
    }

    public void bind(int, long)
    {
        android.database.DatabaseUtils$InsertHelper r0;
        int i0;
        long l1;
        android.database.sqlite.SQLiteStatement $r1;

        r0 := @this: android.database.DatabaseUtils$InsertHelper;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        $r1 = r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteStatement mPreparedStatement>;

        virtualinvoke $r1.<android.database.sqlite.SQLiteStatement: void bindLong(int,long)>(i0, l1);

        return;
    }

    public void bind(int, java.lang.String)
    {
        android.database.DatabaseUtils$InsertHelper r0;
        int i0;
        java.lang.String r1;
        android.database.sqlite.SQLiteStatement $r2, $r3;

        r0 := @this: android.database.DatabaseUtils$InsertHelper;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        if r1 != null goto label1;

        $r3 = r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteStatement mPreparedStatement>;

        virtualinvoke $r3.<android.database.sqlite.SQLiteStatement: void bindNull(int)>(i0);

        goto label2;

     label1:
        $r2 = r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteStatement mPreparedStatement>;

        virtualinvoke $r2.<android.database.sqlite.SQLiteStatement: void bindString(int,java.lang.String)>(i0, r1);

     label2:
        return;
    }

    public void bind(int, boolean)
    {
        android.database.DatabaseUtils$InsertHelper r0;
        int i0;
        boolean z0;
        android.database.sqlite.SQLiteStatement r1;
        long l1;

        r0 := @this: android.database.DatabaseUtils$InsertHelper;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 = r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteStatement mPreparedStatement>;

        if z0 == 0 goto label1;

        l1 = 1L;

        goto label2;

     label1:
        l1 = 0L;

     label2:
        virtualinvoke r1.<android.database.sqlite.SQLiteStatement: void bindLong(int,long)>(i0, l1);

        return;
    }

    public void bind(int, byte[])
    {
        android.database.DatabaseUtils$InsertHelper r0;
        int i0;
        byte[] r1;
        android.database.sqlite.SQLiteStatement $r2, $r3;

        r0 := @this: android.database.DatabaseUtils$InsertHelper;

        i0 := @parameter0: int;

        r1 := @parameter1: byte[];

        if r1 != null goto label1;

        $r3 = r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteStatement mPreparedStatement>;

        virtualinvoke $r3.<android.database.sqlite.SQLiteStatement: void bindNull(int)>(i0);

        goto label2;

     label1:
        $r2 = r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteStatement mPreparedStatement>;

        virtualinvoke $r2.<android.database.sqlite.SQLiteStatement: void bindBlob(int,byte[])>(i0, r1);

     label2:
        return;
    }

    public void bindNull(int)
    {
        android.database.DatabaseUtils$InsertHelper r0;
        int i0;
        android.database.sqlite.SQLiteStatement $r1;

        r0 := @this: android.database.DatabaseUtils$InsertHelper;

        i0 := @parameter0: int;

        $r1 = r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteStatement mPreparedStatement>;

        virtualinvoke $r1.<android.database.sqlite.SQLiteStatement: void bindNull(int)>(i0);

        return;
    }

    public void close()
    {
        android.database.DatabaseUtils$InsertHelper r0;
        android.database.sqlite.SQLiteStatement r1, r2;

        r0 := @this: android.database.DatabaseUtils$InsertHelper;

        r1 = r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteStatement mInsertStatement>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.database.sqlite.SQLiteStatement: void close()>();

        r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteStatement mInsertStatement> = null;

     label1:
        r2 = r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteStatement mReplaceStatement>;

        if r2 == null goto label2;

        virtualinvoke r2.<android.database.sqlite.SQLiteStatement: void close()>();

        r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteStatement mReplaceStatement> = null;

     label2:
        r0.<android.database.DatabaseUtils$InsertHelper: java.lang.String mInsertSQL> = null;

        r0.<android.database.DatabaseUtils$InsertHelper: java.util.HashMap mColumns> = null;

        return;
    }

    public long execute()
    {
        android.database.DatabaseUtils$InsertHelper r0;
        long l0;
        java.lang.StringBuilder r1;
        java.lang.IllegalStateException $r2;
        java.lang.Throwable $r3;
        android.database.SQLException $r4;
        java.lang.String $r6, $r8;
        android.database.sqlite.SQLiteStatement r9;

        r0 := @this: android.database.DatabaseUtils$InsertHelper;

        r9 = r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteStatement mPreparedStatement>;

        if r9 == null goto label8;

     label1:
        l0 = virtualinvoke r9.<android.database.sqlite.SQLiteStatement: long executeInsert()>();

     label2:
        r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteStatement mPreparedStatement> = null;

        return l0;

     label3:
        $r3 := @caughtexception;

        goto label7;

     label4:
        $r4 := @caughtexception;

     label5:
        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error executing InsertHelper with table ");

        $r6 = r0.<android.database.DatabaseUtils$InsertHelper: java.lang.String mTableName>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("DatabaseUtils", $r8, $r4);

     label6:
        r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteStatement mPreparedStatement> = null;

        return -1L;

     label7:
        r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteStatement mPreparedStatement> = null;

        throw $r3;

     label8:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("you must prepare this inserter before calling execute");

        throw $r2;

        catch android.database.SQLException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label5 to label6 with label3;
    }

    public int getColumnIndex(java.lang.String)
    {
        android.database.DatabaseUtils$InsertHelper r0;
        java.lang.String r1, $r10;
        java.util.HashMap $r3;
        java.lang.Object $r4;
        java.lang.StringBuilder $r5;
        java.lang.IllegalArgumentException $r9;
        int $i0;
        java.lang.Integer r11;

        r0 := @this: android.database.DatabaseUtils$InsertHelper;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteStatement getStatement(boolean)>(0);

        $r3 = r0.<android.database.DatabaseUtils$InsertHelper: java.util.HashMap mColumns>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r11 = (java.lang.Integer) $r4;

        if r11 == null goto label1;

        $i0 = virtualinvoke r11.<java.lang.Integer: int intValue()>();

        return $i0;

     label1:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("column \'");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' is invalid");

        $r9 = new java.lang.IllegalArgumentException;

        $r10 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r9;
    }

    public long insert(android.content.ContentValues)
    {
        android.database.DatabaseUtils$InsertHelper r0;
        android.content.ContentValues r1;
        long $l0;

        r0 := @this: android.database.DatabaseUtils$InsertHelper;

        r1 := @parameter0: android.content.ContentValues;

        $l0 = specialinvoke r0.<android.database.DatabaseUtils$InsertHelper: long insertInternal(android.content.ContentValues,boolean)>(r1, 0);

        return $l0;
    }

    public void prepareForInsert()
    {
        android.database.DatabaseUtils$InsertHelper r0;
        android.database.sqlite.SQLiteStatement r1;

        r0 := @this: android.database.DatabaseUtils$InsertHelper;

        r1 = specialinvoke r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteStatement getStatement(boolean)>(0);

        r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteStatement mPreparedStatement> = r1;

        virtualinvoke r1.<android.database.sqlite.SQLiteStatement: void clearBindings()>();

        return;
    }

    public void prepareForReplace()
    {
        android.database.DatabaseUtils$InsertHelper r0;
        android.database.sqlite.SQLiteStatement r1;

        r0 := @this: android.database.DatabaseUtils$InsertHelper;

        r1 = specialinvoke r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteStatement getStatement(boolean)>(1);

        r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteStatement mPreparedStatement> = r1;

        virtualinvoke r1.<android.database.sqlite.SQLiteStatement: void clearBindings()>();

        return;
    }

    public long replace(android.content.ContentValues)
    {
        android.database.DatabaseUtils$InsertHelper r0;
        android.content.ContentValues r1;
        long $l0;

        r0 := @this: android.database.DatabaseUtils$InsertHelper;

        r1 := @parameter0: android.content.ContentValues;

        $l0 = specialinvoke r0.<android.database.DatabaseUtils$InsertHelper: long insertInternal(android.content.ContentValues,boolean)>(r1, 1);

        return $l0;
    }

    public static void <clinit>()
    {
        <android.database.DatabaseUtils$InsertHelper: int TABLE_INFO_PRAGMA_DEFAULT_INDEX> = 4;

        <android.database.DatabaseUtils$InsertHelper: int TABLE_INFO_PRAGMA_COLUMNNAME_INDEX> = 1;

        return;
    }
}
