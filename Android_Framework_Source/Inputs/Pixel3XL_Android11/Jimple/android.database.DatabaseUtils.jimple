public class android.database.DatabaseUtils extends java.lang.Object
{
    private static final boolean DEBUG;
    private static final char[] DIGITS;
    public static final int STATEMENT_ABORT;
    public static final int STATEMENT_ATTACH;
    public static final int STATEMENT_BEGIN;
    public static final int STATEMENT_COMMIT;
    public static final int STATEMENT_DDL;
    public static final int STATEMENT_OTHER;
    public static final int STATEMENT_PRAGMA;
    public static final int STATEMENT_SELECT;
    public static final int STATEMENT_UNPREPARED;
    public static final int STATEMENT_UPDATE;
    private static final java.lang.String TAG;
    private static java.text.Collator mColl;

    static void <clinit>()
    {
        char[] $r0;

        <android.database.DatabaseUtils: java.lang.String TAG> = "DatabaseUtils";

        <android.database.DatabaseUtils: int STATEMENT_UPDATE> = 2;

        <android.database.DatabaseUtils: int STATEMENT_UNPREPARED> = 9;

        <android.database.DatabaseUtils: int STATEMENT_SELECT> = 1;

        <android.database.DatabaseUtils: int STATEMENT_PRAGMA> = 7;

        <android.database.DatabaseUtils: int STATEMENT_OTHER> = 99;

        <android.database.DatabaseUtils: int STATEMENT_DDL> = 8;

        <android.database.DatabaseUtils: int STATEMENT_COMMIT> = 5;

        <android.database.DatabaseUtils: int STATEMENT_BEGIN> = 4;

        <android.database.DatabaseUtils: int STATEMENT_ATTACH> = 3;

        <android.database.DatabaseUtils: int STATEMENT_ABORT> = 6;

        <android.database.DatabaseUtils: boolean DEBUG> = 0;

        $r0 = newarray (char)[16];

        $r0[0] = 48;

        $r0[1] = 49;

        $r0[2] = 50;

        $r0[3] = 51;

        $r0[4] = 52;

        $r0[5] = 53;

        $r0[6] = 54;

        $r0[7] = 55;

        $r0[8] = 56;

        $r0[9] = 57;

        $r0[10] = 97;

        $r0[11] = 98;

        $r0[12] = 99;

        $r0[13] = 100;

        $r0[14] = 101;

        $r0[15] = 102;

        <android.database.DatabaseUtils: char[] DIGITS> = $r0;

        <android.database.DatabaseUtils: java.text.Collator mColl> = null;

        return;
    }

    public void <init>()
    {
        android.database.DatabaseUtils r0;

        r0 := @this: android.database.DatabaseUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void appendEscapedSQLString(java.lang.StringBuilder, java.lang.String)
    {
        java.lang.StringBuilder r0;
        java.lang.String r1;
        int i0, $i2, i3;
        char c1;

        r0 := @parameter0: java.lang.StringBuilder;

        r1 := @parameter1: java.lang.String;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $i2 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(39);

        if $i2 == -1 goto label4;

        i0 = virtualinvoke r1.<java.lang.String: int length()>();

        i3 = 0;

     label1:
        if i3 >= i0 goto label3;

        c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i3);

        if c1 != 39 goto label2;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

     label2:
        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c1);

        i3 = i3 + 1;

        goto label1;

     label3:
        goto label5;

     label4:
        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

     label5:
        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        return;
    }

    public static java.lang.String[] appendSelectionArgs(java.lang.String[], java.lang.String[])
    {
        java.lang.String[] r0, r1, r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;

        r0 := @parameter0: java.lang.String[];

        r1 := @parameter1: java.lang.String[];

        if r0 == null goto label2;

        $i0 = lengthof r0;

        if $i0 != 0 goto label1;

        goto label2;

     label1:
        $i2 = lengthof r0;

        $i1 = lengthof r1;

        $i3 = $i2 + $i1;

        r2 = newarray (java.lang.String)[$i3];

        $i4 = lengthof r0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, r2, 0, $i4);

        $i6 = lengthof r0;

        $i5 = lengthof r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r2, $i6, $i5);

        return r2;

     label2:
        return r1;
    }

    public static final void appendValueToSql(java.lang.StringBuilder, java.lang.Object)
    {
        java.lang.StringBuilder r0;
        java.lang.Object r1;
        boolean $z0, $z1;
        java.lang.String $r2;
        java.lang.Boolean $r3;

        r0 := @parameter0: java.lang.StringBuilder;

        r1 := @parameter1: java.lang.Object;

        if r1 != null goto label1;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NULL");

        goto label5;

     label1:
        $z0 = r1 instanceof java.lang.Boolean;

        if $z0 == 0 goto label4;

        $r3 = (java.lang.Boolean) r1;

        $z1 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label2;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(49);

        goto label3;

     label2:
        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(48);

     label3:
        goto label5;

     label4:
        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        staticinvoke <android.database.DatabaseUtils: void appendEscapedSQLString(java.lang.StringBuilder,java.lang.String)>(r0, $r2);

     label5:
        return;
    }

    private static void bindArgs(android.database.sqlite.SQLiteStatement, java.lang.Object[])
    {
        android.database.sqlite.SQLiteStatement r0;
        java.lang.Object[] r1;
        java.lang.Object r2;
        int i0, $i1, $i2, $i3, $i5, $i6, $i7, $i8, i9;
        java.lang.Number $r3, $r4;
        long $l4, l10;
        double $d0;
        byte[] $r5;
        boolean $z0, $z1;
        java.lang.String $r6;
        java.lang.Boolean $r7;

        r0 := @parameter0: android.database.sqlite.SQLiteStatement;

        r1 := @parameter1: java.lang.Object[];

        if r1 != null goto label01;

        return;

     label01:
        i9 = 0;

     label02:
        $i1 = lengthof r1;

        if i9 >= $i1 goto label11;

        r2 = r1[i9];

        i0 = staticinvoke <android.database.DatabaseUtils: int getTypeOfObject(java.lang.Object)>(r2);

        if i0 == 0 goto label09;

        if i0 == 1 goto label08;

        if i0 == 2 goto label07;

        if i0 == 4 goto label06;

        $z0 = r2 instanceof java.lang.Boolean;

        if $z0 == 0 goto label05;

        $r7 = (java.lang.Boolean) r2;

        $z1 = virtualinvoke $r7.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label03;

        l10 = 1L;

        goto label04;

     label03:
        l10 = 0L;

     label04:
        $i8 = i9 + 1;

        virtualinvoke r0.<android.database.sqlite.SQLiteStatement: void bindLong(int,long)>($i8, l10);

        goto label10;

     label05:
        $i7 = i9 + 1;

        $r6 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke r0.<android.database.sqlite.SQLiteStatement: void bindString(int,java.lang.String)>($i7, $r6);

        goto label10;

     label06:
        $i6 = i9 + 1;

        $r5 = (byte[]) r2;

        virtualinvoke r0.<android.database.sqlite.SQLiteStatement: void bindBlob(int,byte[])>($i6, $r5);

        goto label10;

     label07:
        $i5 = i9 + 1;

        $r4 = (java.lang.Number) r2;

        $d0 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        virtualinvoke r0.<android.database.sqlite.SQLiteStatement: void bindDouble(int,double)>($i5, $d0);

        goto label10;

     label08:
        $i3 = i9 + 1;

        $r3 = (java.lang.Number) r2;

        $l4 = virtualinvoke $r3.<java.lang.Number: long longValue()>();

        virtualinvoke r0.<android.database.sqlite.SQLiteStatement: void bindLong(int,long)>($i3, $l4);

        goto label10;

     label09:
        $i2 = i9 + 1;

        virtualinvoke r0.<android.database.sqlite.SQLiteStatement: void bindNull(int)>($i2);

     label10:
        i9 = i9 + 1;

        goto label02;

     label11:
        return;
    }

    public static void bindObjectToProgram(android.database.sqlite.SQLiteProgram, int, java.lang.Object)
    {
        android.database.sqlite.SQLiteProgram r0;
        int i0;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.Number $r2, $r6;
        double $d0;
        java.lang.String $r3;
        byte[] $r4;
        java.lang.Boolean $r5;
        long $l1;

        r0 := @parameter0: android.database.sqlite.SQLiteProgram;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        if r1 != null goto label1;

        virtualinvoke r0.<android.database.sqlite.SQLiteProgram: void bindNull(int)>(i0);

        goto label9;

     label1:
        $z0 = r1 instanceof java.lang.Double;

        if $z0 != 0 goto label8;

        $z1 = r1 instanceof java.lang.Float;

        if $z1 == 0 goto label2;

        goto label8;

     label2:
        $z2 = r1 instanceof java.lang.Number;

        if $z2 == 0 goto label3;

        $r6 = (java.lang.Number) r1;

        $l1 = virtualinvoke $r6.<java.lang.Number: long longValue()>();

        virtualinvoke r0.<android.database.sqlite.SQLiteProgram: void bindLong(int,long)>(i0, $l1);

        goto label9;

     label3:
        $z3 = r1 instanceof java.lang.Boolean;

        if $z3 == 0 goto label6;

        $r5 = (java.lang.Boolean) r1;

        $z5 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z5 == 0 goto label4;

        virtualinvoke r0.<android.database.sqlite.SQLiteProgram: void bindLong(int,long)>(i0, 1L);

        goto label5;

     label4:
        virtualinvoke r0.<android.database.sqlite.SQLiteProgram: void bindLong(int,long)>(i0, 0L);

     label5:
        goto label9;

     label6:
        $z4 = r1 instanceof byte[];

        if $z4 == 0 goto label7;

        $r4 = (byte[]) r1;

        virtualinvoke r0.<android.database.sqlite.SQLiteProgram: void bindBlob(int,byte[])>(i0, $r4);

        goto label9;

     label7:
        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke r0.<android.database.sqlite.SQLiteProgram: void bindString(int,java.lang.String)>(i0, $r3);

        goto label9;

     label8:
        $r2 = (java.lang.Number) r1;

        $d0 = virtualinvoke $r2.<java.lang.Number: double doubleValue()>();

        virtualinvoke r0.<android.database.sqlite.SQLiteProgram: void bindDouble(int,double)>(i0, $d0);

     label9:
        return;
    }

    public static transient java.lang.String bindSelection(java.lang.String, java.lang.Object[])
    {
        java.lang.String r0, $r5, $r15, $r21;
        java.lang.Object[] r1;
        int i0, $i3, $i5, i7, i8, i9, i11, i12;
        char c1, c6, c10;
        java.lang.Object r3;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r4;
        java.lang.Number $r9, $r11;
        long $l4;
        double $d0;
        java.lang.IllegalArgumentException $r13;
        java.lang.Boolean $r18;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Object[];

        if r0 != null goto label01;

        return null;

     label01:
        $z0 = staticinvoke <com.android.internal.util.ArrayUtils: boolean isEmpty(java.lang.Object[])>(r1);

        if $z0 == 0 goto label02;

        return r0;

     label02:
        $i3 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(63);

        if $i3 != -1 goto label03;

        return r0;

     label03:
        c6 = 32;

        i7 = 0;

        i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(int)>(i0);

        i8 = 0;

     label04:
        if i8 >= i0 goto label19;

        i9 = i8 + 1;

        c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i8);

        if c1 != 63 goto label17;

        i8 = i9;

     label05:
        c10 = 32;

        if i8 >= i0 goto label07;

        c10 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i8);

        if c10 < 48 goto label07;

        if c10 <= 57 goto label06;

        goto label07;

     label06:
        i8 = i8 + 1;

        goto label05;

     label07:
        if i9 == i8 goto label08;

        $r21 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i9, i8);

        $i5 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r21);

        i7 = $i5 - 1;

     label08:
        r3 = r1[i7];

        if c6 == 32 goto label09;

        if c6 == 61 goto label09;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

     label09:
        i11 = staticinvoke <android.database.DatabaseUtils: int getTypeOfObject(java.lang.Object)>(r3);

        if i11 == 0 goto label14;

        if i11 == 1 goto label13;

        if i11 == 2 goto label12;

        if i11 == 4 goto label11;

        $z1 = r3 instanceof java.lang.Boolean;

        if $z1 == 0 goto label10;

        $r18 = (java.lang.Boolean) r3;

        $z2 = virtualinvoke $r18.<java.lang.Boolean: boolean booleanValue()>();

        i12 = (int) $z2;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i12);

        goto label15;

     label10:
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r15 = virtualinvoke r3.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        goto label15;

     label11:
        $r13 = new java.lang.IllegalArgumentException;

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Blobs not supported");

        throw $r13;

     label12:
        $r11 = (java.lang.Number) r3;

        $d0 = virtualinvoke $r11.<java.lang.Number: double doubleValue()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        goto label15;

     label13:
        $r9 = (java.lang.Number) r3;

        $l4 = virtualinvoke $r9.<java.lang.Number: long longValue()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l4);

        goto label15;

     label14:
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NULL");

     label15:
        if c10 == 32 goto label16;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

     label16:
        i7 = i7 + 1;

        goto label18;

     label17:
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c1);

        c6 = c1;

        i8 = i9;

     label18:
        goto label04;

     label19:
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public static android.os.ParcelFileDescriptor blobFileDescriptorForQuery(android.database.sqlite.SQLiteDatabase, java.lang.String, java.lang.String[])
    {
        java.lang.String[] r0;
        java.lang.Throwable $r1;
        android.database.sqlite.SQLiteDatabase r2;
        java.lang.String r3;
        android.database.sqlite.SQLiteStatement r4;
        android.os.ParcelFileDescriptor r5;

        r2 := @parameter0: android.database.sqlite.SQLiteDatabase;

        r3 := @parameter1: java.lang.String;

        r0 := @parameter2: java.lang.String[];

        r4 = virtualinvoke r2.<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteStatement compileStatement(java.lang.String)>(r3);

     label1:
        r5 = staticinvoke <android.database.DatabaseUtils: android.os.ParcelFileDescriptor blobFileDescriptorForQuery(android.database.sqlite.SQLiteStatement,java.lang.String[])>(r4, r0);

     label2:
        virtualinvoke r4.<android.database.sqlite.SQLiteStatement: void close()>();

        return r5;

     label3:
        $r1 := @caughtexception;

        virtualinvoke r4.<android.database.sqlite.SQLiteStatement: void close()>();

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static android.os.ParcelFileDescriptor blobFileDescriptorForQuery(android.database.sqlite.SQLiteStatement, java.lang.String[])
    {
        android.database.sqlite.SQLiteStatement r0;
        java.lang.String[] r1;
        android.os.ParcelFileDescriptor $r2;

        r0 := @parameter0: android.database.sqlite.SQLiteStatement;

        r1 := @parameter1: java.lang.String[];

        virtualinvoke r0.<android.database.sqlite.SQLiteStatement: void bindAllArgsAsStrings(java.lang.String[])>(r1);

        $r2 = virtualinvoke r0.<android.database.sqlite.SQLiteStatement: android.os.ParcelFileDescriptor simpleQueryForBlobFileDescriptor()>();

        return $r2;
    }

    public static java.lang.String concatenateWhere(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, $r9;
        boolean $z0, $z1;
        java.lang.StringBuilder $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r0);

        if $z0 == 0 goto label1;

        return r1;

     label1:
        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z1 == 0 goto label2;

        return r0;

     label2:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") AND (");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    public static void createDbFromSqlStatements(android.content.Context, java.lang.String, int, java.lang.String)
    {
        int i0, i1, i2;
        boolean $z0;
        android.content.Context r0;
        java.lang.String r1, r2, r5;
        android.database.sqlite.SQLiteDatabase r3;
        java.lang.String[] r4;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r2 := @parameter3: java.lang.String;

        i2 = 0;

        r3 = virtualinvoke r0.<android.content.Context: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase$CursorFactory)>(r1, 0, null);

        r4 = staticinvoke <android.text.TextUtils: java.lang.String[] split(java.lang.String,java.lang.String)>(r2, ";\n");

        i1 = lengthof r4;

     label1:
        if i2 >= i1 goto label4;

        r5 = r4[i2];

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r5);

        if $z0 == 0 goto label2;

        goto label3;

     label2:
        virtualinvoke r3.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>(r5);

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        virtualinvoke r3.<android.database.sqlite.SQLiteDatabase: void setVersion(int)>(i0);

        virtualinvoke r3.<android.database.sqlite.SQLiteDatabase: void close()>();

        return;
    }

    public static void cursorDoubleToContentValues(android.database.Cursor, java.lang.String, android.content.ContentValues, java.lang.String)
    {
        android.database.Cursor r0;
        java.lang.String r1, r3;
        android.content.ContentValues r2;
        int i0;
        boolean $z0;
        java.lang.Double $r4, $r5;
        double $d0;

        r0 := @parameter0: android.database.Cursor;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.content.ContentValues;

        r3 := @parameter3: java.lang.String;

        i0 = interfaceinvoke r0.<android.database.Cursor: int getColumnIndex(java.lang.String)>(r1);

        $z0 = interfaceinvoke r0.<android.database.Cursor: boolean isNull(int)>(i0);

        if $z0 != 0 goto label1;

        $d0 = interfaceinvoke r0.<android.database.Cursor: double getDouble(int)>(i0);

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Double)>(r3, $r5);

        goto label2;

     label1:
        $r4 = (java.lang.Double) null;

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Double)>(r3, $r4);

     label2:
        return;
    }

    public static void cursorDoubleToContentValuesIfPresent(android.database.Cursor, android.content.ContentValues, java.lang.String)
    {
        android.database.Cursor r0;
        android.content.ContentValues r1;
        java.lang.String r2;
        int i0;
        boolean $z0;
        double $d0;
        java.lang.Double $r3;

        r0 := @parameter0: android.database.Cursor;

        r1 := @parameter1: android.content.ContentValues;

        r2 := @parameter2: java.lang.String;

        i0 = interfaceinvoke r0.<android.database.Cursor: int getColumnIndex(java.lang.String)>(r2);

        if i0 == -1 goto label1;

        $z0 = interfaceinvoke r0.<android.database.Cursor: boolean isNull(int)>(i0);

        if $z0 != 0 goto label1;

        $d0 = interfaceinvoke r0.<android.database.Cursor: double getDouble(int)>(i0);

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.Double)>(r2, $r3);

     label1:
        return;
    }

    public static void cursorDoubleToCursorValues(android.database.Cursor, java.lang.String, android.content.ContentValues)
    {
        android.database.Cursor r0;
        java.lang.String r1;
        android.content.ContentValues r2;

        r0 := @parameter0: android.database.Cursor;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.content.ContentValues;

        staticinvoke <android.database.DatabaseUtils: void cursorDoubleToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues,java.lang.String)>(r0, r1, r2, r1);

        return;
    }

    public static void cursorFillWindow(android.database.Cursor, int, android.database.CursorWindow)
    {
        android.database.Cursor r0;
        android.database.CursorWindow r1;
        int i0, i1, i2, $i3, i5, i6;
        boolean $z1, $z3, $z4, z5;
        long $l4;
        double $d0;
        java.lang.String r2;
        byte[] r3;

        r0 := @parameter0: android.database.Cursor;

        i5 := @parameter1: int;

        r1 := @parameter2: android.database.CursorWindow;

        if i5 < 0 goto label17;

        $i3 = interfaceinvoke r0.<android.database.Cursor: int getCount()>();

        if i5 < $i3 goto label01;

        goto label17;

     label01:
        i0 = interfaceinvoke r0.<android.database.Cursor: int getPosition()>();

        i1 = interfaceinvoke r0.<android.database.Cursor: int getColumnCount()>();

        virtualinvoke r1.<android.database.CursorWindow: void clear()>();

        virtualinvoke r1.<android.database.CursorWindow: void setStartPosition(int)>(i5);

        virtualinvoke r1.<android.database.CursorWindow: boolean setNumColumns(int)>(i1);

        $z1 = interfaceinvoke r0.<android.database.Cursor: boolean moveToPosition(int)>(i5);

        if $z1 == 0 goto label16;

     label02:
        $z3 = virtualinvoke r1.<android.database.CursorWindow: boolean allocRow()>();

        if $z3 != 0 goto label03;

        goto label16;

     label03:
        i6 = 0;

     label04:
        if i6 >= i1 goto label15;

        i2 = interfaceinvoke r0.<android.database.Cursor: int getType(int)>(i6);

        if i2 == 0 goto label12;

        if i2 == 1 goto label11;

        if i2 == 2 goto label10;

        if i2 == 4 goto label07;

        r2 = interfaceinvoke r0.<android.database.Cursor: java.lang.String getString(int)>(i6);

        if r2 == null goto label05;

        z5 = virtualinvoke r1.<android.database.CursorWindow: boolean putString(java.lang.String,int,int)>(r2, i5, i6);

        goto label06;

     label05:
        z5 = virtualinvoke r1.<android.database.CursorWindow: boolean putNull(int,int)>(i5, i6);

     label06:
        goto label13;

     label07:
        r3 = interfaceinvoke r0.<android.database.Cursor: byte[] getBlob(int)>(i6);

        if r3 == null goto label08;

        z5 = virtualinvoke r1.<android.database.CursorWindow: boolean putBlob(byte[],int,int)>(r3, i5, i6);

        goto label09;

     label08:
        z5 = virtualinvoke r1.<android.database.CursorWindow: boolean putNull(int,int)>(i5, i6);

     label09:
        goto label13;

     label10:
        $d0 = interfaceinvoke r0.<android.database.Cursor: double getDouble(int)>(i6);

        z5 = virtualinvoke r1.<android.database.CursorWindow: boolean putDouble(double,int,int)>($d0, i5, i6);

        goto label13;

     label11:
        $l4 = interfaceinvoke r0.<android.database.Cursor: long getLong(int)>(i6);

        z5 = virtualinvoke r1.<android.database.CursorWindow: boolean putLong(long,int,int)>($l4, i5, i6);

        goto label13;

     label12:
        z5 = virtualinvoke r1.<android.database.CursorWindow: boolean putNull(int,int)>(i5, i6);

     label13:
        if z5 != 0 goto label14;

        virtualinvoke r1.<android.database.CursorWindow: void freeLastRow()>();

        goto label16;

     label14:
        i6 = i6 + 1;

        goto label04;

     label15:
        i5 = i5 + 1;

        $z4 = interfaceinvoke r0.<android.database.Cursor: boolean moveToNext()>();

        if $z4 != 0 goto label02;

     label16:
        interfaceinvoke r0.<android.database.Cursor: boolean moveToPosition(int)>(i0);

        return;

     label17:
        return;
    }

    public static void cursorFloatToContentValuesIfPresent(android.database.Cursor, android.content.ContentValues, java.lang.String)
    {
        android.database.Cursor r0;
        android.content.ContentValues r1;
        java.lang.String r2;
        int i0;
        boolean $z0;
        float $f0;
        java.lang.Float $r3;

        r0 := @parameter0: android.database.Cursor;

        r1 := @parameter1: android.content.ContentValues;

        r2 := @parameter2: java.lang.String;

        i0 = interfaceinvoke r0.<android.database.Cursor: int getColumnIndex(java.lang.String)>(r2);

        if i0 == -1 goto label1;

        $z0 = interfaceinvoke r0.<android.database.Cursor: boolean isNull(int)>(i0);

        if $z0 != 0 goto label1;

        $f0 = interfaceinvoke r0.<android.database.Cursor: float getFloat(int)>(i0);

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.Float)>(r2, $r3);

     label1:
        return;
    }

    public static void cursorIntToContentValues(android.database.Cursor, java.lang.String, android.content.ContentValues)
    {
        android.database.Cursor r0;
        java.lang.String r1;
        android.content.ContentValues r2;

        r0 := @parameter0: android.database.Cursor;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.content.ContentValues;

        staticinvoke <android.database.DatabaseUtils: void cursorIntToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues,java.lang.String)>(r0, r1, r2, r1);

        return;
    }

    public static void cursorIntToContentValues(android.database.Cursor, java.lang.String, android.content.ContentValues, java.lang.String)
    {
        android.database.Cursor r0;
        java.lang.String r1, r3;
        android.content.ContentValues r2;
        int i0, $i1;
        boolean $z0;
        java.lang.Integer $r4, $r5;

        r0 := @parameter0: android.database.Cursor;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.content.ContentValues;

        r3 := @parameter3: java.lang.String;

        i0 = interfaceinvoke r0.<android.database.Cursor: int getColumnIndex(java.lang.String)>(r1);

        $z0 = interfaceinvoke r0.<android.database.Cursor: boolean isNull(int)>(i0);

        if $z0 != 0 goto label1;

        $i1 = interfaceinvoke r0.<android.database.Cursor: int getInt(int)>(i0);

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>(r3, $r5);

        goto label2;

     label1:
        $r4 = (java.lang.Integer) null;

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>(r3, $r4);

     label2:
        return;
    }

    public static void cursorIntToContentValuesIfPresent(android.database.Cursor, android.content.ContentValues, java.lang.String)
    {
        android.database.Cursor r0;
        android.content.ContentValues r1;
        java.lang.String r2;
        int i0, $i1;
        boolean $z0;
        java.lang.Integer $r3;

        r0 := @parameter0: android.database.Cursor;

        r1 := @parameter1: android.content.ContentValues;

        r2 := @parameter2: java.lang.String;

        i0 = interfaceinvoke r0.<android.database.Cursor: int getColumnIndex(java.lang.String)>(r2);

        if i0 == -1 goto label1;

        $z0 = interfaceinvoke r0.<android.database.Cursor: boolean isNull(int)>(i0);

        if $z0 != 0 goto label1;

        $i1 = interfaceinvoke r0.<android.database.Cursor: int getInt(int)>(i0);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>(r2, $r3);

     label1:
        return;
    }

    public static void cursorLongToContentValues(android.database.Cursor, java.lang.String, android.content.ContentValues)
    {
        android.database.Cursor r0;
        java.lang.String r1;
        android.content.ContentValues r2;

        r0 := @parameter0: android.database.Cursor;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.content.ContentValues;

        staticinvoke <android.database.DatabaseUtils: void cursorLongToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues,java.lang.String)>(r0, r1, r2, r1);

        return;
    }

    public static void cursorLongToContentValues(android.database.Cursor, java.lang.String, android.content.ContentValues, java.lang.String)
    {
        android.database.Cursor r0;
        java.lang.String r1, r3;
        android.content.ContentValues r2;
        int i0;
        boolean $z0;
        java.lang.Long $r4, $r5;
        long $l1;

        r0 := @parameter0: android.database.Cursor;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.content.ContentValues;

        r3 := @parameter3: java.lang.String;

        i0 = interfaceinvoke r0.<android.database.Cursor: int getColumnIndex(java.lang.String)>(r1);

        $z0 = interfaceinvoke r0.<android.database.Cursor: boolean isNull(int)>(i0);

        if $z0 != 0 goto label1;

        $l1 = interfaceinvoke r0.<android.database.Cursor: long getLong(int)>(i0);

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>(r3, $r5);

        goto label2;

     label1:
        $r4 = (java.lang.Long) null;

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>(r3, $r4);

     label2:
        return;
    }

    public static void cursorLongToContentValuesIfPresent(android.database.Cursor, android.content.ContentValues, java.lang.String)
    {
        android.database.Cursor r0;
        android.content.ContentValues r1;
        java.lang.String r2;
        int i0;
        boolean $z0;
        long $l1;
        java.lang.Long $r3;

        r0 := @parameter0: android.database.Cursor;

        r1 := @parameter1: android.content.ContentValues;

        r2 := @parameter2: java.lang.String;

        i0 = interfaceinvoke r0.<android.database.Cursor: int getColumnIndex(java.lang.String)>(r2);

        if i0 == -1 goto label1;

        $z0 = interfaceinvoke r0.<android.database.Cursor: boolean isNull(int)>(i0);

        if $z0 != 0 goto label1;

        $l1 = interfaceinvoke r0.<android.database.Cursor: long getLong(int)>(i0);

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>(r2, $r3);

     label1:
        return;
    }

    public static int cursorPickFillWindowStartPosition(int, int)
    {
        int i0, i1, $i2, $i3, $i4;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = i1 / 3;

        $i3 = i0 - $i2;

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>($i3, 0);

        return $i4;
    }

    public static void cursorRowToContentValues(android.database.Cursor, android.content.ContentValues)
    {
        android.database.Cursor r0;
        android.content.ContentValues r1;
        java.lang.String[] r2;
        int i0, $i1, i2;
        java.lang.String $r3, $r4, $r5;
        byte[] $r6;

        r0 := @parameter0: android.database.Cursor;

        r1 := @parameter1: android.content.ContentValues;

        r2 = interfaceinvoke r0.<android.database.Cursor: java.lang.String[] getColumnNames()>();

        i0 = lengthof r2;

        i2 = 0;

     label1:
        if i2 >= i0 goto label4;

        $i1 = interfaceinvoke r0.<android.database.Cursor: int getType(int)>(i2);

        if $i1 != 4 goto label2;

        $r5 = r2[i2];

        $r6 = interfaceinvoke r0.<android.database.Cursor: byte[] getBlob(int)>(i2);

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,byte[])>($r5, $r6);

        goto label3;

     label2:
        $r3 = r2[i2];

        $r4 = interfaceinvoke r0.<android.database.Cursor: java.lang.String getString(int)>(i2);

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>($r3, $r4);

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        return;
    }

    public static void cursorShortToContentValuesIfPresent(android.database.Cursor, android.content.ContentValues, java.lang.String)
    {
        android.database.Cursor r0;
        android.content.ContentValues r1;
        java.lang.String r2;
        int i0;
        boolean $z0;
        short $s1;
        java.lang.Short $r3;

        r0 := @parameter0: android.database.Cursor;

        r1 := @parameter1: android.content.ContentValues;

        r2 := @parameter2: java.lang.String;

        i0 = interfaceinvoke r0.<android.database.Cursor: int getColumnIndex(java.lang.String)>(r2);

        if i0 == -1 goto label1;

        $z0 = interfaceinvoke r0.<android.database.Cursor: boolean isNull(int)>(i0);

        if $z0 != 0 goto label1;

        $s1 = interfaceinvoke r0.<android.database.Cursor: short getShort(int)>(i0);

        $r3 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s1);

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.Short)>(r2, $r3);

     label1:
        return;
    }

    public static void cursorStringToContentValues(android.database.Cursor, java.lang.String, android.content.ContentValues)
    {
        android.database.Cursor r0;
        java.lang.String r1;
        android.content.ContentValues r2;

        r0 := @parameter0: android.database.Cursor;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.content.ContentValues;

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues,java.lang.String)>(r0, r1, r2, r1);

        return;
    }

    public static void cursorStringToContentValues(android.database.Cursor, java.lang.String, android.content.ContentValues, java.lang.String)
    {
        android.database.Cursor r0;
        java.lang.String r1, r3, $r4;
        android.content.ContentValues r2;
        int $i0;

        r0 := @parameter0: android.database.Cursor;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.content.ContentValues;

        r3 := @parameter3: java.lang.String;

        $i0 = interfaceinvoke r0.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>(r1);

        $r4 = interfaceinvoke r0.<android.database.Cursor: java.lang.String getString(int)>($i0);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>(r3, $r4);

        return;
    }

    public static void cursorStringToContentValuesIfPresent(android.database.Cursor, android.content.ContentValues, java.lang.String)
    {
        android.database.Cursor r0;
        android.content.ContentValues r1;
        java.lang.String r2, $r3;
        int i0;
        boolean $z0;

        r0 := @parameter0: android.database.Cursor;

        r1 := @parameter1: android.content.ContentValues;

        r2 := @parameter2: java.lang.String;

        i0 = interfaceinvoke r0.<android.database.Cursor: int getColumnIndex(java.lang.String)>(r2);

        if i0 == -1 goto label1;

        $z0 = interfaceinvoke r0.<android.database.Cursor: boolean isNull(int)>(i0);

        if $z0 != 0 goto label1;

        $r3 = interfaceinvoke r0.<android.database.Cursor: java.lang.String getString(int)>(i0);

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>(r2, $r3);

     label1:
        return;
    }

    public static void cursorStringToInsertHelper(android.database.Cursor, java.lang.String, android.database.DatabaseUtils$InsertHelper, int)
    {
        android.database.Cursor r0;
        java.lang.String r1, $r3;
        android.database.DatabaseUtils$InsertHelper r2;
        int i0, $i1;

        r0 := @parameter0: android.database.Cursor;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.database.DatabaseUtils$InsertHelper;

        i0 := @parameter3: int;

        $i1 = interfaceinvoke r0.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>(r1);

        $r3 = interfaceinvoke r0.<android.database.Cursor: java.lang.String getString(int)>($i1);

        virtualinvoke r2.<android.database.DatabaseUtils$InsertHelper: void bind(int,java.lang.String)>(i0, $r3);

        return;
    }

    public static java.lang.Object[] deepCopyOf(java.lang.Object[])
    {
        java.lang.Object[] r0, r1;
        int $i0, $i1, $i2, i3;
        boolean $z0, $z1, $z2;
        java.lang.String $r2;
        byte[] $r3, r5;
        java.lang.Object r4;

        r0 := @parameter0: java.lang.Object[];

        if r0 != null goto label1;

        return null;

     label1:
        $i0 = lengthof r0;

        r1 = newarray (java.lang.Object)[$i0];

        i3 = 0;

     label2:
        $i1 = lengthof r0;

        if i3 >= $i1 goto label7;

        r4 = r0[i3];

        if r4 == null goto label5;

        $z0 = r4 instanceof java.lang.Number;

        if $z0 != 0 goto label5;

        $z1 = r4 instanceof java.lang.String;

        if $z1 == 0 goto label3;

        goto label5;

     label3:
        $z2 = r4 instanceof byte[];

        if $z2 == 0 goto label4;

        r5 = (byte[]) r4;

        $i2 = lengthof r5;

        $r3 = staticinvoke <java.util.Arrays: byte[] copyOf(byte[],int)>(r5, $i2);

        r1[i3] = $r3;

        goto label6;

     label4:
        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r4);

        r1[i3] = $r2;

        goto label6;

     label5:
        r1[i3] = r4;

     label6:
        i3 = i3 + 1;

        goto label2;

     label7:
        return r1;
    }

    public static void dumpCurrentRow(android.database.Cursor)
    {
        android.database.Cursor r0;
        java.io.PrintStream $r1;

        r0 := @parameter0: android.database.Cursor;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        staticinvoke <android.database.DatabaseUtils: void dumpCurrentRow(android.database.Cursor,java.io.PrintStream)>(r0, $r1);

        return;
    }

    public static void dumpCurrentRow(android.database.Cursor, java.io.PrintStream)
    {
        android.database.Cursor r0;
        java.io.PrintStream r1;
        java.lang.String[] r2;
        int i0, $i1, i2;
        java.lang.StringBuilder $r4, $r9;
        java.lang.String $r8, $r11, $r15, r18;
        android.database.sqlite.SQLiteException $r16;

        r0 := @parameter0: android.database.Cursor;

        r1 := @parameter1: java.io.PrintStream;

        r2 = interfaceinvoke r0.<android.database.Cursor: java.lang.String[] getColumnNames()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $i1 = interfaceinvoke r0.<android.database.Cursor: int getPosition()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" {");

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintStream: void println(java.lang.String)>($r8);

        i0 = lengthof r2;

        i2 = 0;

     label1:
        if i2 >= i0 goto label6;

     label2:
        r18 = interfaceinvoke r0.<android.database.Cursor: java.lang.String getString(int)>(i2);

     label3:
        goto label5;

     label4:
        $r16 := @caughtexception;

        r18 = "<unprintable>";

     label5:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("   ");

        $r11 = r2[i2];

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(61);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);

        $r15 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintStream: void println(java.lang.String)>($r15);

        i2 = i2 + 1;

        goto label1;

     label6:
        virtualinvoke r1.<java.io.PrintStream: void println(java.lang.String)>("}");

        return;

        catch android.database.sqlite.SQLiteException from label2 to label3 with label4;
    }

    public static void dumpCurrentRow(android.database.Cursor, java.lang.StringBuilder)
    {
        android.database.Cursor r0;
        java.lang.StringBuilder r1, $r4, $r11;
        java.lang.String[] r2;
        int i0, $i1, i2;
        java.lang.String $r8, $r13, $r18, r22;
        android.database.sqlite.SQLiteException $r20;

        r0 := @parameter0: android.database.Cursor;

        r1 := @parameter1: java.lang.StringBuilder;

        r2 = interfaceinvoke r0.<android.database.Cursor: java.lang.String[] getColumnNames()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $i1 = interfaceinvoke r0.<android.database.Cursor: int getPosition()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" {\n");

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        i0 = lengthof r2;

        i2 = 0;

     label1:
        if i2 >= i0 goto label6;

     label2:
        r22 = interfaceinvoke r0.<android.database.Cursor: java.lang.String getString(int)>(i2);

     label3:
        goto label5;

     label4:
        $r20 := @caughtexception;

        r22 = "<unprintable>";

     label5:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("   ");

        $r13 = r2[i2];

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(61);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r22);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r18 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        i2 = i2 + 1;

        goto label1;

     label6:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}\n");

        return;

        catch android.database.sqlite.SQLiteException from label2 to label3 with label4;
    }

    public static java.lang.String dumpCurrentRowToString(android.database.Cursor)
    {
        android.database.Cursor r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;

        r0 := @parameter0: android.database.Cursor;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        staticinvoke <android.database.DatabaseUtils: void dumpCurrentRow(android.database.Cursor,java.lang.StringBuilder)>(r0, $r2);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    public static void dumpCursor(android.database.Cursor)
    {
        android.database.Cursor r0;
        java.io.PrintStream $r1;

        r0 := @parameter0: android.database.Cursor;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        staticinvoke <android.database.DatabaseUtils: void dumpCursor(android.database.Cursor,java.io.PrintStream)>(r0, $r1);

        return;
    }

    public static void dumpCursor(android.database.Cursor, java.io.PrintStream)
    {
        android.database.Cursor r0;
        java.io.PrintStream r1;
        int i0;
        java.lang.StringBuilder $r3;
        java.lang.String $r6;
        boolean $z1;

        r0 := @parameter0: android.database.Cursor;

        r1 := @parameter1: java.io.PrintStream;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">>>>> Dumping cursor ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintStream: void println(java.lang.String)>($r6);

        if r0 == null goto label3;

        i0 = interfaceinvoke r0.<android.database.Cursor: int getPosition()>();

        interfaceinvoke r0.<android.database.Cursor: boolean moveToPosition(int)>(-1);

     label1:
        $z1 = interfaceinvoke r0.<android.database.Cursor: boolean moveToNext()>();

        if $z1 == 0 goto label2;

        staticinvoke <android.database.DatabaseUtils: void dumpCurrentRow(android.database.Cursor,java.io.PrintStream)>(r0, r1);

        goto label1;

     label2:
        interfaceinvoke r0.<android.database.Cursor: boolean moveToPosition(int)>(i0);

     label3:
        virtualinvoke r1.<java.io.PrintStream: void println(java.lang.String)>("<<<<<");

        return;
    }

    public static void dumpCursor(android.database.Cursor, java.lang.StringBuilder)
    {
        android.database.Cursor r0;
        java.lang.StringBuilder r1, $r3;
        int i0;
        java.lang.String $r7;
        boolean $z1;

        r0 := @parameter0: android.database.Cursor;

        r1 := @parameter1: java.lang.StringBuilder;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">>>>> Dumping cursor ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        if r0 == null goto label3;

        i0 = interfaceinvoke r0.<android.database.Cursor: int getPosition()>();

        interfaceinvoke r0.<android.database.Cursor: boolean moveToPosition(int)>(-1);

     label1:
        $z1 = interfaceinvoke r0.<android.database.Cursor: boolean moveToNext()>();

        if $z1 == 0 goto label2;

        staticinvoke <android.database.DatabaseUtils: void dumpCurrentRow(android.database.Cursor,java.lang.StringBuilder)>(r0, r1);

        goto label1;

     label2:
        interfaceinvoke r0.<android.database.Cursor: boolean moveToPosition(int)>(i0);

     label3:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<<<<<\n");

        return;
    }

    public static java.lang.String dumpCursorToString(android.database.Cursor)
    {
        android.database.Cursor r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;

        r0 := @parameter0: android.database.Cursor;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        staticinvoke <android.database.DatabaseUtils: void dumpCursor(android.database.Cursor,java.lang.StringBuilder)>(r0, $r2);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    private static char[] encodeHex(byte[])
    {
        byte[] r0;
        int i0, i1, $i2, i12, i13;
        char[] r1, r2;
        byte $b3, $b8, $b9;
        short $s4, $s5;
        char $c6, $c7, $c10, $c11;

        r0 := @parameter0: byte[];

        i0 = lengthof r0;

        $i2 = i0 << 1;

        r1 = newarray (char)[$i2];

        i12 = 0;

        i13 = 0;

     label1:
        if i12 >= i0 goto label2;

        i1 = i13 + 1;

        r2 = <android.database.DatabaseUtils: char[] DIGITS>;

        $b3 = r0[i12];

        $s4 = $b3 & 240;

        $s5 = $s4 >>> 4;

        $c6 = r2[$s5];

        $c7 = (char) $c6;

        r1[i13] = $c7;

        i13 = i1 + 1;

        $b8 = r0[i12];

        $b9 = $b8 & 15;

        $c10 = r2[$b9];

        $c11 = (char) $c10;

        r1[i1] = $c11;

        i12 = i12 + 1;

        goto label1;

     label2:
        return r1;
    }

    public static java.lang.String escapeForLike(java.lang.String)
    {
        java.lang.String r0, $r3;
        char c0;
        java.lang.StringBuilder $r2;
        int $i1, i2;

        r0 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        i2 = 0;

     label1:
        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        if i2 >= $i1 goto label5;

        c0 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i2);

        if c0 == 37 goto label3;

        if c0 == 95 goto label2;

        goto label4;

     label2:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(92);

        goto label4;

     label3:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(92);

     label4:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);

        i2 = i2 + 1;

        goto label1;

     label5:
        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    public static long executeInsert(android.database.sqlite.SQLiteDatabase, java.lang.String, java.lang.Object[]) throws android.database.SQLException
    {
        java.lang.Object[] r0;
        long l0;
        java.lang.Throwable $r1, $r2;
        android.database.sqlite.SQLiteDatabase r3;
        java.lang.String r4;
        android.database.sqlite.SQLiteStatement r5;

        r3 := @parameter0: android.database.sqlite.SQLiteDatabase;

        r4 := @parameter1: java.lang.String;

        r0 := @parameter2: java.lang.Object[];

        r5 = virtualinvoke r3.<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteStatement compileStatement(java.lang.String)>(r4);

     label1:
        staticinvoke <android.database.DatabaseUtils: void bindArgs(android.database.sqlite.SQLiteStatement,java.lang.Object[])>(r5, r0);

        l0 = virtualinvoke r5.<android.database.sqlite.SQLiteStatement: long executeInsert()>();

     label2:
        if r5 == null goto label3;

        virtualinvoke r5.<android.database.sqlite.SQLiteStatement: void close()>();

     label3:
        return l0;

     label4:
        $r2 := @caughtexception;

        if r5 == null goto label8;

     label5:
        virtualinvoke r5.<android.database.sqlite.SQLiteStatement: void close()>();

     label6:
        goto label8;

     label7:
        $r1 := @caughtexception;

        virtualinvoke $r2.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r1);

     label8:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label5 to label6 with label7;
    }

    public static int executeUpdateDelete(android.database.sqlite.SQLiteDatabase, java.lang.String, java.lang.Object[]) throws android.database.SQLException
    {
        java.lang.Object[] r0;
        int i0;
        java.lang.Throwable $r1, $r2;
        android.database.sqlite.SQLiteDatabase r3;
        java.lang.String r4;
        android.database.sqlite.SQLiteStatement r5;

        r3 := @parameter0: android.database.sqlite.SQLiteDatabase;

        r4 := @parameter1: java.lang.String;

        r0 := @parameter2: java.lang.Object[];

        r5 = virtualinvoke r3.<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteStatement compileStatement(java.lang.String)>(r4);

     label1:
        staticinvoke <android.database.DatabaseUtils: void bindArgs(android.database.sqlite.SQLiteStatement,java.lang.Object[])>(r5, r0);

        i0 = virtualinvoke r5.<android.database.sqlite.SQLiteStatement: int executeUpdateDelete()>();

     label2:
        if r5 == null goto label3;

        virtualinvoke r5.<android.database.sqlite.SQLiteStatement: void close()>();

     label3:
        return i0;

     label4:
        $r2 := @caughtexception;

        if r5 == null goto label8;

     label5:
        virtualinvoke r5.<android.database.sqlite.SQLiteStatement: void close()>();

     label6:
        goto label8;

     label7:
        $r1 := @caughtexception;

        virtualinvoke $r2.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r1);

     label8:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label5 to label6 with label7;
    }

    public static int findRowIdColumnIndex(java.lang.String[])
    {
        java.lang.String[] r0;
        int i0, i1;
        java.lang.String $r1;
        boolean $z0;

        r0 := @parameter0: java.lang.String[];

        i0 = lengthof r0;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r1 = r0[i1];

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("_id");

        if $z0 == 0 goto label2;

        return i1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return -1;
    }

    public static java.lang.String getCollationKey(java.lang.String)
    {
        java.lang.String $r0, r2;
        int $i0;
        java.lang.Exception $r1;
        byte[] r3;

        r2 := @parameter0: java.lang.String;

        r3 = staticinvoke <android.database.DatabaseUtils: byte[] getCollationKeyInBytes(java.lang.String)>(r2);

     label1:
        $r0 = new java.lang.String;

        $i0 = staticinvoke <android.database.DatabaseUtils: int getKeyLen(byte[])>(r3);

        specialinvoke $r0.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>(r3, 0, $i0, "ISO8859_1");

     label2:
        return $r0;

     label3:
        $r1 := @caughtexception;

        return "";

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private static byte[] getCollationKeyInBytes(java.lang.String)
    {
        java.lang.String r0;
        java.text.Collator r1, $r2, $r3;
        java.text.CollationKey $r4;
        byte[] $r5;

        r0 := @parameter0: java.lang.String;

        $r2 = <android.database.DatabaseUtils: java.text.Collator mColl>;

        if $r2 != null goto label1;

        r1 = staticinvoke <java.text.Collator: java.text.Collator getInstance()>();

        <android.database.DatabaseUtils: java.text.Collator mColl> = r1;

        virtualinvoke r1.<java.text.Collator: void setStrength(int)>(0);

     label1:
        $r3 = <android.database.DatabaseUtils: java.text.Collator mColl>;

        $r4 = virtualinvoke $r3.<java.text.Collator: java.text.CollationKey getCollationKey(java.lang.String)>(r0);

        $r5 = virtualinvoke $r4.<java.text.CollationKey: byte[] toByteArray()>();

        return $r5;
    }

    public static java.lang.String getHexCollationKey(java.lang.String)
    {
        java.lang.String $r0, r2;
        char[] $r1;
        int $i0, $i1;
        byte[] r3;

        r2 := @parameter0: java.lang.String;

        r3 = staticinvoke <android.database.DatabaseUtils: byte[] getCollationKeyInBytes(java.lang.String)>(r2);

        $r0 = new java.lang.String;

        $r1 = staticinvoke <android.database.DatabaseUtils: char[] encodeHex(byte[])>(r3);

        $i0 = staticinvoke <android.database.DatabaseUtils: int getKeyLen(byte[])>(r3);

        $i1 = $i0 * 2;

        specialinvoke $r0.<java.lang.String: void <init>(char[],int,int)>($r1, 0, $i1);

        return $r0;
    }

    private static int getKeyLen(byte[])
    {
        byte[] r0;
        int $i0, $i1, $i3, $i4, $i5;
        byte $b2;

        r0 := @parameter0: byte[];

        $i0 = lengthof r0;

        $i1 = $i0 - 1;

        $b2 = r0[$i1];

        if $b2 == 0 goto label1;

        $i5 = lengthof r0;

        return $i5;

     label1:
        $i3 = lengthof r0;

        $i4 = $i3 - 1;

        return $i4;
    }

    public static int getSqlStatementType(java.lang.String)
    {
        int $i0;
        java.lang.String $r0, $r3, $r10, r11, r12, r13;
        java.util.Locale $r1, $r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16;
        java.lang.StringBuilder $r4;

        r11 := @parameter0: java.lang.String;

        r12 = virtualinvoke r11.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke r12.<java.lang.String: int length()>();

        if $i0 >= 3 goto label01;

        return 99;

     label01:
        $r0 = virtualinvoke r12.<java.lang.String: java.lang.String substring(int,int)>(0, 3);

        $r1 = <java.util.Locale: java.util.Locale ROOT>;

        r13 = virtualinvoke $r0.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r1);

        $z0 = virtualinvoke r13.<java.lang.String: boolean equals(java.lang.Object)>("SEL");

        if $z0 == 0 goto label02;

        return 1;

     label02:
        $z1 = virtualinvoke r13.<java.lang.String: boolean equals(java.lang.Object)>("INS");

        if $z1 != 0 goto label15;

        $z2 = virtualinvoke r13.<java.lang.String: boolean equals(java.lang.Object)>("UPD");

        if $z2 != 0 goto label15;

        $z3 = virtualinvoke r13.<java.lang.String: boolean equals(java.lang.Object)>("REP");

        if $z3 != 0 goto label15;

        $z4 = virtualinvoke r13.<java.lang.String: boolean equals(java.lang.Object)>("DEL");

        if $z4 == 0 goto label03;

        goto label15;

     label03:
        $z5 = virtualinvoke r13.<java.lang.String: boolean equals(java.lang.Object)>("ATT");

        if $z5 == 0 goto label04;

        return 3;

     label04:
        $z6 = virtualinvoke r13.<java.lang.String: boolean equals(java.lang.Object)>("COM");

        if $z6 == 0 goto label05;

        return 5;

     label05:
        $z7 = virtualinvoke r13.<java.lang.String: boolean equals(java.lang.Object)>("END");

        if $z7 == 0 goto label06;

        return 5;

     label06:
        $z8 = virtualinvoke r13.<java.lang.String: boolean equals(java.lang.Object)>("ROL");

        if $z8 == 0 goto label08;

        $r2 = <java.util.Locale: java.util.Locale ROOT>;

        $r3 = virtualinvoke r12.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r2);

        $z16 = virtualinvoke $r3.<java.lang.String: boolean contains(java.lang.CharSequence)>(" TO ");

        if $z16 == 0 goto label07;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Statement \'");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' may not work on API levels 16-27, use \';");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' instead");

        $r10 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("DatabaseUtils", $r10);

        return 99;

     label07:
        return 6;

     label08:
        $z9 = virtualinvoke r13.<java.lang.String: boolean equals(java.lang.Object)>("BEG");

        if $z9 == 0 goto label09;

        return 4;

     label09:
        $z10 = virtualinvoke r13.<java.lang.String: boolean equals(java.lang.Object)>("PRA");

        if $z10 == 0 goto label10;

        return 7;

     label10:
        $z11 = virtualinvoke r13.<java.lang.String: boolean equals(java.lang.Object)>("CRE");

        if $z11 != 0 goto label14;

        $z12 = virtualinvoke r13.<java.lang.String: boolean equals(java.lang.Object)>("DRO");

        if $z12 != 0 goto label14;

        $z13 = virtualinvoke r13.<java.lang.String: boolean equals(java.lang.Object)>("ALT");

        if $z13 == 0 goto label11;

        goto label14;

     label11:
        $z14 = virtualinvoke r13.<java.lang.String: boolean equals(java.lang.Object)>("ANA");

        if $z14 != 0 goto label13;

        $z15 = virtualinvoke r13.<java.lang.String: boolean equals(java.lang.Object)>("DET");

        if $z15 == 0 goto label12;

        goto label13;

     label12:
        return 99;

     label13:
        return 9;

     label14:
        return 8;

     label15:
        return 2;
    }

    public static int getTypeOfObject(java.lang.Object)
    {
        java.lang.Object r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        return 0;

     label1:
        $z0 = r0 instanceof byte[];

        if $z0 == 0 goto label2;

        return 4;

     label2:
        $z1 = r0 instanceof java.lang.Float;

        if $z1 != 0 goto label6;

        $z2 = r0 instanceof java.lang.Double;

        if $z2 == 0 goto label3;

        goto label6;

     label3:
        $z3 = r0 instanceof java.lang.Long;

        if $z3 != 0 goto label5;

        $z4 = r0 instanceof java.lang.Integer;

        if $z4 != 0 goto label5;

        $z5 = r0 instanceof java.lang.Short;

        if $z5 != 0 goto label5;

        $z6 = r0 instanceof java.lang.Byte;

        if $z6 == 0 goto label4;

        goto label5;

     label4:
        return 3;

     label5:
        return 1;

     label6:
        return 2;
    }

    public static long longForQuery(android.database.sqlite.SQLiteDatabase, java.lang.String, java.lang.String[])
    {
        java.lang.String[] r0;
        long l0;
        java.lang.Throwable $r1;
        android.database.sqlite.SQLiteDatabase r2;
        java.lang.String r3;
        android.database.sqlite.SQLiteStatement r4;

        r2 := @parameter0: android.database.sqlite.SQLiteDatabase;

        r3 := @parameter1: java.lang.String;

        r0 := @parameter2: java.lang.String[];

        r4 = virtualinvoke r2.<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteStatement compileStatement(java.lang.String)>(r3);

     label1:
        l0 = staticinvoke <android.database.DatabaseUtils: long longForQuery(android.database.sqlite.SQLiteStatement,java.lang.String[])>(r4, r0);

     label2:
        virtualinvoke r4.<android.database.sqlite.SQLiteStatement: void close()>();

        return l0;

     label3:
        $r1 := @caughtexception;

        virtualinvoke r4.<android.database.sqlite.SQLiteStatement: void close()>();

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static long longForQuery(android.database.sqlite.SQLiteStatement, java.lang.String[])
    {
        android.database.sqlite.SQLiteStatement r0;
        java.lang.String[] r1;
        long $l0;

        r0 := @parameter0: android.database.sqlite.SQLiteStatement;

        r1 := @parameter1: java.lang.String[];

        virtualinvoke r0.<android.database.sqlite.SQLiteStatement: void bindAllArgsAsStrings(java.lang.String[])>(r1);

        $l0 = virtualinvoke r0.<android.database.sqlite.SQLiteStatement: long simpleQueryForLong()>();

        return $l0;
    }

    public static boolean queryIsEmpty(android.database.sqlite.SQLiteDatabase, java.lang.String)
    {
        android.database.sqlite.SQLiteDatabase r0;
        java.lang.String r1, $r7;
        java.lang.StringBuilder $r3;
        long $l0;
        byte $b1;
        boolean z0;

        r0 := @parameter0: android.database.sqlite.SQLiteDatabase;

        r1 := @parameter1: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("select exists(select 1 from ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $l0 = staticinvoke <android.database.DatabaseUtils: long longForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>(r0, $r7, null);

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public static long queryNumEntries(android.database.sqlite.SQLiteDatabase, java.lang.String)
    {
        android.database.sqlite.SQLiteDatabase r0;
        java.lang.String r1;
        long $l0;

        r0 := @parameter0: android.database.sqlite.SQLiteDatabase;

        r1 := @parameter1: java.lang.String;

        $l0 = staticinvoke <android.database.DatabaseUtils: long queryNumEntries(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.String[])>(r0, r1, null, null);

        return $l0;
    }

    public static long queryNumEntries(android.database.sqlite.SQLiteDatabase, java.lang.String, java.lang.String)
    {
        android.database.sqlite.SQLiteDatabase r0;
        java.lang.String r1, r2;
        long $l0;

        r0 := @parameter0: android.database.sqlite.SQLiteDatabase;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $l0 = staticinvoke <android.database.DatabaseUtils: long queryNumEntries(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.String[])>(r0, r1, r2, null);

        return $l0;
    }

    public static long queryNumEntries(android.database.sqlite.SQLiteDatabase, java.lang.String, java.lang.String, java.lang.String[])
    {
        android.database.sqlite.SQLiteDatabase r0;
        java.lang.String r1, $r7, r11, r13;
        java.lang.String[] r2;
        boolean $z0;
        java.lang.StringBuilder $r3, $r8;
        long $l0;

        r0 := @parameter0: android.database.sqlite.SQLiteDatabase;

        r1 := @parameter1: java.lang.String;

        r11 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String[];

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r11);

        if $z0 != 0 goto label1;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" where ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);

        r13 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label2;

     label1:
        r13 = "";

     label2:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("select count(*) from ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $l0 = staticinvoke <android.database.DatabaseUtils: long longForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>(r0, $r7, r2);

        return $l0;
    }

    public static final void readExceptionFromParcel(android.os.Parcel)
    {
        android.os.Parcel r0;
        int i0;
        java.lang.String $r1;

        r0 := @parameter0: android.os.Parcel;

        i0 = virtualinvoke r0.<android.os.Parcel: int readExceptionCode()>();

        if i0 != 0 goto label1;

        return;

     label1:
        $r1 = virtualinvoke r0.<android.os.Parcel: java.lang.String readString()>();

        staticinvoke <android.database.DatabaseUtils: void readExceptionFromParcel(android.os.Parcel,java.lang.String,int)>(r0, $r1, i0);

        return;
    }

    private static final void readExceptionFromParcel(android.os.Parcel, java.lang.String, int)
    {
        android.os.Parcel r0;
        java.lang.String r1;
        int i0;
        android.os.OperationCanceledException $r2;
        android.database.sqlite.SQLiteException $r3;
        android.database.sqlite.SQLiteDiskIOException $r4;
        android.database.sqlite.SQLiteFullException $r5;
        android.database.sqlite.SQLiteDatabaseCorruptException $r6;
        android.database.sqlite.SQLiteConstraintException $r7;
        android.database.sqlite.SQLiteAbortException $r8;
        java.lang.UnsupportedOperationException $r9;
        java.lang.IllegalArgumentException $r10;

        r0 := @parameter0: android.os.Parcel;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        tableswitch(i0)
        {
            case 2: goto label10;
            case 3: goto label09;
            case 4: goto label08;
            case 5: goto label07;
            case 6: goto label06;
            case 7: goto label05;
            case 8: goto label04;
            case 9: goto label03;
            case 10: goto label01;
            case 11: goto label02;
            default: goto label01;
        };

     label01:
        virtualinvoke r0.<android.os.Parcel: void readException(int,java.lang.String)>(i0, r1);

        return;

     label02:
        $r2 = new android.os.OperationCanceledException;

        specialinvoke $r2.<android.os.OperationCanceledException: void <init>(java.lang.String)>(r1);

        throw $r2;

     label03:
        $r3 = new android.database.sqlite.SQLiteException;

        specialinvoke $r3.<android.database.sqlite.SQLiteException: void <init>(java.lang.String)>(r1);

        throw $r3;

     label04:
        $r4 = new android.database.sqlite.SQLiteDiskIOException;

        specialinvoke $r4.<android.database.sqlite.SQLiteDiskIOException: void <init>(java.lang.String)>(r1);

        throw $r4;

     label05:
        $r5 = new android.database.sqlite.SQLiteFullException;

        specialinvoke $r5.<android.database.sqlite.SQLiteFullException: void <init>(java.lang.String)>(r1);

        throw $r5;

     label06:
        $r6 = new android.database.sqlite.SQLiteDatabaseCorruptException;

        specialinvoke $r6.<android.database.sqlite.SQLiteDatabaseCorruptException: void <init>(java.lang.String)>(r1);

        throw $r6;

     label07:
        $r7 = new android.database.sqlite.SQLiteConstraintException;

        specialinvoke $r7.<android.database.sqlite.SQLiteConstraintException: void <init>(java.lang.String)>(r1);

        throw $r7;

     label08:
        $r8 = new android.database.sqlite.SQLiteAbortException;

        specialinvoke $r8.<android.database.sqlite.SQLiteAbortException: void <init>(java.lang.String)>(r1);

        throw $r8;

     label09:
        $r9 = new java.lang.UnsupportedOperationException;

        specialinvoke $r9.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>(r1);

        throw $r9;

     label10:
        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(r1);

        throw $r10;
    }

    public static void readExceptionWithFileNotFoundExceptionFromParcel(android.os.Parcel) throws java.io.FileNotFoundException
    {
        android.os.Parcel r0;
        int i0;
        java.lang.String r1;
        java.io.FileNotFoundException $r2;

        r0 := @parameter0: android.os.Parcel;

        i0 = virtualinvoke r0.<android.os.Parcel: int readExceptionCode()>();

        if i0 != 0 goto label1;

        return;

     label1:
        r1 = virtualinvoke r0.<android.os.Parcel: java.lang.String readString()>();

        if i0 == 1 goto label2;

        staticinvoke <android.database.DatabaseUtils: void readExceptionFromParcel(android.os.Parcel,java.lang.String,int)>(r0, r1, i0);

        return;

     label2:
        $r2 = new java.io.FileNotFoundException;

        specialinvoke $r2.<java.io.FileNotFoundException: void <init>(java.lang.String)>(r1);

        throw $r2;
    }

    public static void readExceptionWithOperationApplicationExceptionFromParcel(android.os.Parcel) throws android.content.OperationApplicationException
    {
        android.os.Parcel r0;
        int i0;
        java.lang.String r1;
        android.content.OperationApplicationException $r2;

        r0 := @parameter0: android.os.Parcel;

        i0 = virtualinvoke r0.<android.os.Parcel: int readExceptionCode()>();

        if i0 != 0 goto label1;

        return;

     label1:
        r1 = virtualinvoke r0.<android.os.Parcel: java.lang.String readString()>();

        if i0 == 10 goto label2;

        staticinvoke <android.database.DatabaseUtils: void readExceptionFromParcel(android.os.Parcel,java.lang.String,int)>(r0, r1, i0);

        return;

     label2:
        $r2 = new android.content.OperationApplicationException;

        specialinvoke $r2.<android.content.OperationApplicationException: void <init>(java.lang.String)>(r1);

        throw $r2;
    }

    public static java.lang.String sqlEscapeString(java.lang.String)
    {
        java.lang.String r0, $r3;
        java.lang.StringBuilder $r2;

        r0 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        staticinvoke <android.database.DatabaseUtils: void appendEscapedSQLString(java.lang.StringBuilder,java.lang.String)>($r2, r0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    public static java.lang.String stringForQuery(android.database.sqlite.SQLiteDatabase, java.lang.String, java.lang.String[])
    {
        java.lang.String[] r0;
        java.lang.Throwable $r1;
        android.database.sqlite.SQLiteDatabase r2;
        java.lang.String r3, r5;
        android.database.sqlite.SQLiteStatement r4;

        r2 := @parameter0: android.database.sqlite.SQLiteDatabase;

        r3 := @parameter1: java.lang.String;

        r0 := @parameter2: java.lang.String[];

        r4 = virtualinvoke r2.<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteStatement compileStatement(java.lang.String)>(r3);

     label1:
        r5 = staticinvoke <android.database.DatabaseUtils: java.lang.String stringForQuery(android.database.sqlite.SQLiteStatement,java.lang.String[])>(r4, r0);

     label2:
        virtualinvoke r4.<android.database.sqlite.SQLiteStatement: void close()>();

        return r5;

     label3:
        $r1 := @caughtexception;

        virtualinvoke r4.<android.database.sqlite.SQLiteStatement: void close()>();

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static java.lang.String stringForQuery(android.database.sqlite.SQLiteStatement, java.lang.String[])
    {
        android.database.sqlite.SQLiteStatement r0;
        java.lang.String[] r1;
        java.lang.String $r2;

        r0 := @parameter0: android.database.sqlite.SQLiteStatement;

        r1 := @parameter1: java.lang.String[];

        virtualinvoke r0.<android.database.sqlite.SQLiteStatement: void bindAllArgsAsStrings(java.lang.String[])>(r1);

        $r2 = virtualinvoke r0.<android.database.sqlite.SQLiteStatement: java.lang.String simpleQueryForString()>();

        return $r2;
    }

    public static final void writeExceptionToParcel(android.os.Parcel, java.lang.Exception)
    {
        android.os.Parcel r0;
        java.lang.Exception r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, z11;
        byte b2;
        java.lang.String $r2;

        r0 := @parameter0: android.os.Parcel;

        r1 := @parameter1: java.lang.Exception;

        z11 = 1;

        $z0 = r1 instanceof java.io.FileNotFoundException;

        if $z0 == 0 goto label01;

        b2 = 1;

        z11 = 0;

        goto label11;

     label01:
        $z1 = r1 instanceof java.lang.IllegalArgumentException;

        if $z1 == 0 goto label02;

        b2 = 2;

        goto label11;

     label02:
        $z2 = r1 instanceof java.lang.UnsupportedOperationException;

        if $z2 == 0 goto label03;

        b2 = 3;

        goto label11;

     label03:
        $z3 = r1 instanceof android.database.sqlite.SQLiteAbortException;

        if $z3 == 0 goto label04;

        b2 = 4;

        goto label11;

     label04:
        $z4 = r1 instanceof android.database.sqlite.SQLiteConstraintException;

        if $z4 == 0 goto label05;

        b2 = 5;

        goto label11;

     label05:
        $z5 = r1 instanceof android.database.sqlite.SQLiteDatabaseCorruptException;

        if $z5 == 0 goto label06;

        b2 = 6;

        goto label11;

     label06:
        $z6 = r1 instanceof android.database.sqlite.SQLiteFullException;

        if $z6 == 0 goto label07;

        b2 = 7;

        goto label11;

     label07:
        $z7 = r1 instanceof android.database.sqlite.SQLiteDiskIOException;

        if $z7 == 0 goto label08;

        b2 = 8;

        goto label11;

     label08:
        $z8 = r1 instanceof android.database.sqlite.SQLiteException;

        if $z8 == 0 goto label09;

        b2 = 9;

        goto label11;

     label09:
        $z9 = r1 instanceof android.content.OperationApplicationException;

        if $z9 == 0 goto label10;

        b2 = 10;

        goto label11;

     label10:
        $z10 = r1 instanceof android.os.OperationCanceledException;

        if $z10 == 0 goto label13;

        b2 = 11;

        z11 = 0;

     label11:
        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(b2);

        $r2 = virtualinvoke r1.<java.lang.Exception: java.lang.String getMessage()>();

        virtualinvoke r0.<android.os.Parcel: void writeString(java.lang.String)>($r2);

        if z11 == 0 goto label12;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("DatabaseUtils", "Writing exception to parcel", r1);

     label12:
        return;

     label13:
        virtualinvoke r0.<android.os.Parcel: void writeException(java.lang.Exception)>(r1);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("DatabaseUtils", "Writing exception to parcel", r1);

        return;
    }
}
