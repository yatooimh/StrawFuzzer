public final class android.database.DefaultDatabaseErrorHandler extends java.lang.Object implements android.database.DatabaseErrorHandler
{
    private static final java.lang.String TAG;

    public void <init>()
    {
        android.database.DefaultDatabaseErrorHandler r0;

        r0 := @this: android.database.DefaultDatabaseErrorHandler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private void deleteDatabaseFile(java.lang.String)
    {
        android.database.DefaultDatabaseErrorHandler r0;
        boolean $z0;
        java.lang.String $r1, $r5, $r9, $r11, r12;
        int $i0;
        java.lang.StringBuilder $r2, $r7;
        java.lang.Exception $r6;
        java.io.File r14;

        r0 := @this: android.database.DefaultDatabaseErrorHandler;

        r12 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r12.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(":memory:");

        if $z0 != 0 goto label6;

        $r1 = virtualinvoke r12.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        goto label6;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("deleting the database file: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("DefaultDatabaseErrorHandler", $r5);

     label2:
        r14 = new java.io.File;

        specialinvoke r14.<java.io.File: void <init>(java.lang.String)>(r12);

        staticinvoke <android.database.sqlite.SQLiteDatabase: boolean deleteDatabase(java.io.File,boolean)>(r14, 0);

     label3:
        goto label5;

     label4:
        $r6 := @caughtexception;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("delete failed: ");

        $r9 = virtualinvoke $r6.<java.lang.Exception: java.lang.String getMessage()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("DefaultDatabaseErrorHandler", $r11);

     label5:
        return;

     label6:
        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    public void onCorruption(android.database.sqlite.SQLiteDatabase)
    {
        android.database.DefaultDatabaseErrorHandler r0;
        java.util.List r1, r24, r25;
        java.lang.StringBuilder $r2;
        java.lang.String $r4, $r6, $r7, $r8, $r12, $r13, $r17, $r21;
        boolean $z0, $z1, $z2;
        java.lang.Object $r9, $r11, $r18, $r20;
        android.util.Pair $r10, $r19;
        android.database.sqlite.SQLiteException $r14, $r15;
        java.lang.Throwable $r16;
        android.database.sqlite.SQLiteDatabase r22;
        java.util.Iterator r28, r30;

        r0 := @this: android.database.DefaultDatabaseErrorHandler;

        r22 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Corruption reported by sqlite on database: ");

        $r4 = virtualinvoke r22.<android.database.sqlite.SQLiteDatabase: java.lang.String getPath()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("DefaultDatabaseErrorHandler", $r6);

        $r7 = virtualinvoke r22.<android.database.sqlite.SQLiteDatabase: java.lang.String getPath()>();

        staticinvoke <android.database.sqlite.SQLiteDatabase: void wipeDetected(java.lang.String,java.lang.String)>($r7, "corruption");

        $z0 = virtualinvoke r22.<android.database.sqlite.SQLiteDatabase: boolean isOpen()>();

        if $z0 != 0 goto label01;

        $r13 = virtualinvoke r22.<android.database.sqlite.SQLiteDatabase: java.lang.String getPath()>();

        specialinvoke r0.<android.database.DefaultDatabaseErrorHandler: void deleteDatabaseFile(java.lang.String)>($r13);

        return;

     label01:
        r24 = null;

        r25 = null;

     label02:
        r1 = virtualinvoke r22.<android.database.sqlite.SQLiteDatabase: java.util.List getAttachedDbs()>();

     label03:
        r24 = r1;

        goto label06;

     label04:
        $r16 := @caughtexception;

        goto label09;

     label05:
        $r14 := @caughtexception;

     label06:
        r25 = r24;

     label07:
        virtualinvoke r22.<android.database.sqlite.SQLiteDatabase: void close()>();

     label08:
        goto label15;

     label09:
        if r25 == null goto label12;

        r28 = interfaceinvoke r25.<java.util.List: java.util.Iterator iterator()>();

     label10:
        $z2 = interfaceinvoke r28.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label11;

        $r18 = interfaceinvoke r28.<java.util.Iterator: java.lang.Object next()>();

        $r19 = (android.util.Pair) $r18;

        $r20 = $r19.<android.util.Pair: java.lang.Object second>;

        $r21 = (java.lang.String) $r20;

        specialinvoke r0.<android.database.DefaultDatabaseErrorHandler: void deleteDatabaseFile(java.lang.String)>($r21);

        goto label10;

     label11:
        goto label13;

     label12:
        $r17 = virtualinvoke r22.<android.database.sqlite.SQLiteDatabase: java.lang.String getPath()>();

        specialinvoke r0.<android.database.DefaultDatabaseErrorHandler: void deleteDatabaseFile(java.lang.String)>($r17);

     label13:
        throw $r16;

     label14:
        $r15 := @caughtexception;

     label15:
        if r24 == null goto label18;

        r30 = interfaceinvoke r24.<java.util.List: java.util.Iterator iterator()>();

     label16:
        $z1 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label17;

        $r9 = interfaceinvoke r30.<java.util.Iterator: java.lang.Object next()>();

        $r10 = (android.util.Pair) $r9;

        $r11 = $r10.<android.util.Pair: java.lang.Object second>;

        $r12 = (java.lang.String) $r11;

        specialinvoke r0.<android.database.DefaultDatabaseErrorHandler: void deleteDatabaseFile(java.lang.String)>($r12);

        goto label16;

     label17:
        goto label19;

     label18:
        $r8 = virtualinvoke r22.<android.database.sqlite.SQLiteDatabase: java.lang.String getPath()>();

        specialinvoke r0.<android.database.DefaultDatabaseErrorHandler: void deleteDatabaseFile(java.lang.String)>($r8);

     label19:
        return;

        catch android.database.sqlite.SQLiteException from label02 to label03 with label05;
        catch java.lang.Throwable from label02 to label03 with label04;
        catch android.database.sqlite.SQLiteException from label07 to label08 with label14;
        catch java.lang.Throwable from label07 to label08 with label04;
    }

    public static void <clinit>()
    {
        <android.database.DefaultDatabaseErrorHandler: java.lang.String TAG> = "DefaultDatabaseErrorHandler";

        return;
    }
}
