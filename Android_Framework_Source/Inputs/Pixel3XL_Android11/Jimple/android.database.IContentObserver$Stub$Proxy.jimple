class android.database.IContentObserver$Stub$Proxy extends java.lang.Object implements android.database.IContentObserver
{
    public static android.database.IContentObserver sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.database.IContentObserver$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.database.IContentObserver$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.database.IContentObserver$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.database.IContentObserver$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.database.IContentObserver$Stub$Proxy;

        $r1 = r0.<android.database.IContentObserver$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.database.IContentObserver$Stub$Proxy r0;

        r0 := @this: android.database.IContentObserver$Stub$Proxy;

        return "android.database.IContentObserver";
    }

    public void onChange(boolean, android.net.Uri, int) throws android.os.RemoteException
    {
        android.database.IContentObserver$Stub$Proxy r0;
        boolean z0, $z1;
        int i0;
        android.os.Parcel r1;
        android.os.IBinder $r2;
        android.database.IContentObserver $r3, $r4;
        java.lang.Throwable $r5;
        android.net.Uri r6;
        byte b1;

        r0 := @this: android.database.IContentObserver$Stub$Proxy;

        z0 := @parameter0: boolean;

        r6 := @parameter1: android.net.Uri;

        i0 := @parameter2: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.database.IContentObserver");

     label02:
        if z0 == 0 goto label03;

        b1 = 1;

        goto label04;

     label03:
        b1 = 0;

     label04:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b1);

     label05:
        if r6 == null goto label08;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r6.<android.net.Uri: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label07:
        goto label09;

     label08:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label09:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r2 = r0.<android.database.IContentObserver$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r1, null, 1);

        if $z1 != 0 goto label11;

        $r3 = staticinvoke <android.database.IContentObserver$Stub: android.database.IContentObserver getDefaultImpl()>();

        if $r3 == null goto label11;

        $r4 = staticinvoke <android.database.IContentObserver$Stub: android.database.IContentObserver getDefaultImpl()>();

        interfaceinvoke $r4.<android.database.IContentObserver: void onChange(boolean,android.net.Uri,int)>(z0, r6, i0);

     label10:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label11:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label12:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label09 to label10 with label12;
    }

    public void onChangeEtc(boolean, android.net.Uri[], int, int) throws android.os.RemoteException
    {
        android.database.IContentObserver$Stub$Proxy r0;
        boolean z0, $z1;
        int i0, i1;
        android.os.Parcel r1;
        android.os.IBinder $r2;
        android.database.IContentObserver $r3, $r4;
        java.lang.Throwable $r5;
        android.net.Uri[] r6;
        byte b2;

        r0 := @this: android.database.IContentObserver$Stub$Proxy;

        z0 := @parameter0: boolean;

        r6 := @parameter1: android.net.Uri[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.database.IContentObserver");

     label2:
        if z0 == 0 goto label3;

        b2 = 1;

        goto label4;

     label3:
        b2 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b2);

        virtualinvoke r1.<android.os.Parcel: void writeTypedArray(android.os.Parcelable[],int)>(r6, 0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        $r2 = r0.<android.database.IContentObserver$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r1, null, 1);

        if $z1 != 0 goto label6;

        $r3 = staticinvoke <android.database.IContentObserver$Stub: android.database.IContentObserver getDefaultImpl()>();

        if $r3 == null goto label6;

        $r4 = staticinvoke <android.database.IContentObserver$Stub: android.database.IContentObserver getDefaultImpl()>();

        interfaceinvoke $r4.<android.database.IContentObserver: void onChangeEtc(boolean,android.net.Uri[],int,int)>(z0, r6, i0, i1);

     label5:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label7:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
    }
}
