public class android.database.MatrixCursor$RowBuilder extends java.lang.Object
{
    private final int endIndex;
    private int index;
    private final int row;
    final android.database.MatrixCursor this$0;

    void <init>(android.database.MatrixCursor, int)
    {
        android.database.MatrixCursor$RowBuilder r0;
        android.database.MatrixCursor r1;
        int $i0, $i1, $i2, i3, i4;

        r0 := @this: android.database.MatrixCursor$RowBuilder;

        r1 := @parameter0: android.database.MatrixCursor;

        i3 := @parameter1: int;

        r0.<android.database.MatrixCursor$RowBuilder: android.database.MatrixCursor this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.database.MatrixCursor$RowBuilder: int row> = i3;

        $i0 = staticinvoke <android.database.MatrixCursor: int access$000(android.database.MatrixCursor)>(r1);

        i4 = $i0 * i3;

        r0.<android.database.MatrixCursor$RowBuilder: int index> = i4;

        $i1 = staticinvoke <android.database.MatrixCursor: int access$000(android.database.MatrixCursor)>(r1);

        $i2 = i4 + $i1;

        r0.<android.database.MatrixCursor$RowBuilder: int endIndex> = $i2;

        return;
    }

    public final android.database.MatrixCursor$RowBuilder add(int, java.lang.Object)
    {
        android.database.MatrixCursor$RowBuilder r0;
        int i0, $i1, $i2, $i3, $i4;
        java.lang.Object r1;
        android.database.MatrixCursor $r2, $r4;
        java.lang.Object[] $r3;

        r0 := @this: android.database.MatrixCursor$RowBuilder;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        $r2 = r0.<android.database.MatrixCursor$RowBuilder: android.database.MatrixCursor this$0>;

        $r3 = staticinvoke <android.database.MatrixCursor: java.lang.Object[] access$100(android.database.MatrixCursor)>($r2);

        $i1 = r0.<android.database.MatrixCursor$RowBuilder: int row>;

        $r4 = r0.<android.database.MatrixCursor$RowBuilder: android.database.MatrixCursor this$0>;

        $i2 = staticinvoke <android.database.MatrixCursor: int access$000(android.database.MatrixCursor)>($r4);

        $i3 = $i1 * $i2;

        $i4 = $i3 + i0;

        $r3[$i4] = r1;

        return r0;
    }

    public android.database.MatrixCursor$RowBuilder add(java.lang.Object)
    {
        android.database.MatrixCursor$RowBuilder r0;
        java.lang.Object r1;
        java.lang.Object[] r2;
        int i0, $i1, $i2, $i3;
        android.database.CursorIndexOutOfBoundsException $r3;
        android.database.MatrixCursor $r4;

        r0 := @this: android.database.MatrixCursor$RowBuilder;

        r1 := @parameter0: java.lang.Object;

        $i2 = r0.<android.database.MatrixCursor$RowBuilder: int index>;

        $i1 = r0.<android.database.MatrixCursor$RowBuilder: int endIndex>;

        if $i2 == $i1 goto label1;

        $r4 = r0.<android.database.MatrixCursor$RowBuilder: android.database.MatrixCursor this$0>;

        r2 = staticinvoke <android.database.MatrixCursor: java.lang.Object[] access$100(android.database.MatrixCursor)>($r4);

        i0 = r0.<android.database.MatrixCursor$RowBuilder: int index>;

        $i3 = i0 + 1;

        r0.<android.database.MatrixCursor$RowBuilder: int index> = $i3;

        r2[i0] = r1;

        return r0;

     label1:
        $r3 = new android.database.CursorIndexOutOfBoundsException;

        specialinvoke $r3.<android.database.CursorIndexOutOfBoundsException: void <init>(java.lang.String)>("No more columns left.");

        throw $r3;
    }

    public android.database.MatrixCursor$RowBuilder add(java.lang.String, java.lang.Object)
    {
        android.database.MatrixCursor$RowBuilder r0;
        java.lang.String r1, $r7;
        java.lang.Object r2;
        android.database.MatrixCursor $r3, $r5, $r8, $r10;
        java.lang.String[] $r4, $r6;
        int $i0, $i1, $i2, $i3, $i4, i5;
        boolean $z0;
        java.lang.Object[] $r9;

        r0 := @this: android.database.MatrixCursor$RowBuilder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        i5 = 0;

     label1:
        $r3 = r0.<android.database.MatrixCursor$RowBuilder: android.database.MatrixCursor this$0>;

        $r4 = staticinvoke <android.database.MatrixCursor: java.lang.String[] access$200(android.database.MatrixCursor)>($r3);

        $i0 = lengthof $r4;

        if i5 >= $i0 goto label3;

        $r5 = r0.<android.database.MatrixCursor$RowBuilder: android.database.MatrixCursor this$0>;

        $r6 = staticinvoke <android.database.MatrixCursor: java.lang.String[] access$200(android.database.MatrixCursor)>($r5);

        $r7 = $r6[i5];

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label2;

        $r8 = r0.<android.database.MatrixCursor$RowBuilder: android.database.MatrixCursor this$0>;

        $r9 = staticinvoke <android.database.MatrixCursor: java.lang.Object[] access$100(android.database.MatrixCursor)>($r8);

        $i1 = r0.<android.database.MatrixCursor$RowBuilder: int row>;

        $r10 = r0.<android.database.MatrixCursor$RowBuilder: android.database.MatrixCursor this$0>;

        $i2 = staticinvoke <android.database.MatrixCursor: int access$000(android.database.MatrixCursor)>($r10);

        $i3 = $i1 * $i2;

        $i4 = $i3 + i5;

        $r9[$i4] = r2;

     label2:
        i5 = i5 + 1;

        goto label1;

     label3:
        return r0;
    }
}
