public class android.database.TranslatingCursor extends android.database.CrossProcessCursorWrapper
{
    private final int mAuxiliaryColumnIndex;
    private final android.database.TranslatingCursor$Config mConfig;
    private final boolean mDropLast;
    private final android.util.ArraySet mTranslateColumnIndices;
    private final android.database.TranslatingCursor$Translator mTranslator;

    public void <init>(android.database.Cursor, android.database.TranslatingCursor$Config, android.database.TranslatingCursor$Translator, boolean)
    {
        android.database.TranslatingCursor r0;
        android.database.Cursor r1;
        android.database.TranslatingCursor$Config r2, $r4;
        boolean z0, $z1;
        android.database.TranslatingCursor$Translator $r6, r12;
        java.lang.String $r7, r13;
        int $i0, $i1, i2;
        android.util.ArraySet $r8, $r10;
        java.lang.String[] $r9;
        java.lang.Integer $r11;

        r0 := @this: android.database.TranslatingCursor;

        r1 := @parameter0: android.database.Cursor;

        r2 := @parameter1: android.database.TranslatingCursor$Config;

        r12 := @parameter2: android.database.TranslatingCursor$Translator;

        z0 := @parameter3: boolean;

        specialinvoke r0.<android.database.CrossProcessCursorWrapper: void <init>(android.database.Cursor)>(r1);

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r2);

        $r4 = (android.database.TranslatingCursor$Config) r2;

        r0.<android.database.TranslatingCursor: android.database.TranslatingCursor$Config mConfig> = $r4;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r12);

        $r6 = (android.database.TranslatingCursor$Translator) r12;

        r0.<android.database.TranslatingCursor: android.database.TranslatingCursor$Translator mTranslator> = $r6;

        r0.<android.database.TranslatingCursor: boolean mDropLast> = z0;

        $r7 = r2.<android.database.TranslatingCursor$Config: java.lang.String auxiliaryColumn>;

        $i0 = interfaceinvoke r1.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>($r7);

        r0.<android.database.TranslatingCursor: int mAuxiliaryColumnIndex> = $i0;

        $r8 = new android.util.ArraySet;

        specialinvoke $r8.<android.util.ArraySet: void <init>()>();

        r0.<android.database.TranslatingCursor: android.util.ArraySet mTranslateColumnIndices> = $r8;

        i2 = 0;

     label1:
        $i1 = interfaceinvoke r1.<android.database.Cursor: int getColumnCount()>();

        if i2 >= $i1 goto label3;

        r13 = interfaceinvoke r1.<android.database.Cursor: java.lang.String getColumnName(int)>(i2);

        $r9 = r2.<android.database.TranslatingCursor$Config: java.lang.String[] translateColumns>;

        $z1 = staticinvoke <com.android.internal.util.ArrayUtils: boolean contains(java.lang.Object[],java.lang.Object)>($r9, r13);

        if $z1 == 0 goto label2;

        $r10 = r0.<android.database.TranslatingCursor: android.util.ArraySet mTranslateColumnIndices>;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        virtualinvoke $r10.<android.util.ArraySet: boolean add(java.lang.Object)>($r11);

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return;
    }

    public static android.database.Cursor query(android.database.TranslatingCursor$Config, android.database.TranslatingCursor$Translator, android.database.sqlite.SQLiteQueryBuilder, android.database.sqlite.SQLiteDatabase, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String, java.lang.String, java.lang.String, java.lang.String, android.os.CancellationSignal)
    {
        android.database.TranslatingCursor$Config r0;
        android.database.TranslatingCursor$Translator r1;
        android.database.sqlite.SQLiteDatabase r2;
        java.lang.String r3, r5, r6, r7, r8, $r12, $r16;
        java.lang.String[] r4, $r15, r18, r19;
        android.os.CancellationSignal r9;
        boolean z0, $z1, $z2, z3, z4, $z5, z6;
        android.database.TranslatingCursor $r11;
        java.lang.Object[] $r13;
        android.database.Cursor $r14, r20;
        android.database.sqlite.SQLiteQueryBuilder r17;

        r0 := @parameter0: android.database.TranslatingCursor$Config;

        r1 := @parameter1: android.database.TranslatingCursor$Translator;

        r17 := @parameter2: android.database.sqlite.SQLiteQueryBuilder;

        r2 := @parameter3: android.database.sqlite.SQLiteDatabase;

        r18 := @parameter4: java.lang.String[];

        r3 := @parameter5: java.lang.String;

        r4 := @parameter6: java.lang.String[];

        r5 := @parameter7: java.lang.String;

        r6 := @parameter8: java.lang.String;

        r7 := @parameter9: java.lang.String;

        r8 := @parameter10: java.lang.String;

        r9 := @parameter11: android.os.CancellationSignal;

        z0 = staticinvoke <com.android.internal.util.ArrayUtils: boolean isEmpty(java.lang.Object[])>(r18);

        z3 = 0;

        if z0 != 0 goto label2;

        $r16 = r0.<android.database.TranslatingCursor$Config: java.lang.String auxiliaryColumn>;

        $z2 = staticinvoke <com.android.internal.util.ArrayUtils: boolean contains(java.lang.Object[],java.lang.Object)>(r18, $r16);

        if $z2 == 0 goto label1;

        goto label2;

     label1:
        z4 = 0;

        goto label3;

     label2:
        z4 = 1;

     label3:
        $z5 = staticinvoke <com.android.internal.util.ArrayUtils: boolean isEmpty(java.lang.Object[])>(r18);

        if $z5 != 0 goto label5;

        $r15 = r0.<android.database.TranslatingCursor$Config: java.lang.String[] translateColumns>;

        $z1 = staticinvoke <com.android.internal.util.ArrayUtils: boolean containsAny(java.lang.Object[],java.lang.Object[])>(r18, $r15);

        if $z1 == 0 goto label4;

        goto label5;

     label4:
        z6 = 0;

        goto label6;

     label5:
        z6 = 1;

     label6:
        if z6 != 0 goto label7;

        $r14 = virtualinvoke r17.<android.database.sqlite.SQLiteQueryBuilder: android.database.Cursor query(android.database.sqlite.SQLiteDatabase,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.os.CancellationSignal)>(r2, r18, r3, r4, r5, r6, r7, r8, r9);

        return $r14;

     label7:
        r19 = r18;

        if z4 != 0 goto label8;

        $r12 = r0.<android.database.TranslatingCursor$Config: java.lang.String auxiliaryColumn>;

        $r13 = staticinvoke <com.android.internal.util.ArrayUtils: java.lang.Object[] appendElement(java.lang.Class,java.lang.Object[],java.lang.Object)>(class "Ljava/lang/String;", r18, $r12);

        r19 = (java.lang.String[]) $r13;

     label8:
        r20 = virtualinvoke r17.<android.database.sqlite.SQLiteQueryBuilder: android.database.Cursor query(android.database.sqlite.SQLiteDatabase,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>(r2, r19, r3, r4, r5, r6, r7);

        if z4 != 0 goto label9;

        z3 = 1;

     label9:
        $r11 = new android.database.TranslatingCursor;

        specialinvoke $r11.<android.database.TranslatingCursor: void <init>(android.database.Cursor,android.database.TranslatingCursor$Config,android.database.TranslatingCursor$Translator,boolean)>(r20, r0, r1, z3);

        return $r11;
    }

    public void copyStringToBuffer(int, android.database.CharArrayBuffer)
    {
        android.database.TranslatingCursor r0;
        int i0;
        android.database.CharArrayBuffer r1;
        android.util.ArraySet $r2;
        java.lang.Integer $r3;
        boolean $z0;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: android.database.TranslatingCursor;

        i0 := @parameter0: int;

        r1 := @parameter1: android.database.CharArrayBuffer;

        $r2 = r0.<android.database.TranslatingCursor: android.util.ArraySet mTranslateColumnIndices>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $z0 = staticinvoke <com.android.internal.util.ArrayUtils: boolean contains(java.util.Collection,java.lang.Object)>($r2, $r3);

        if $z0 != 0 goto label1;

        specialinvoke r0.<android.database.CrossProcessCursorWrapper: void copyStringToBuffer(int,android.database.CharArrayBuffer)>(i0, r1);

        return;

     label1:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r4;
    }

    public void fillWindow(int, android.database.CursorWindow)
    {
        android.database.TranslatingCursor r0;
        int i0;
        android.database.CursorWindow r1;

        r0 := @this: android.database.TranslatingCursor;

        i0 := @parameter0: int;

        r1 := @parameter1: android.database.CursorWindow;

        staticinvoke <android.database.DatabaseUtils: void cursorFillWindow(android.database.Cursor,int,android.database.CursorWindow)>(r0, i0, r1);

        return;
    }

    public byte[] getBlob(int)
    {
        android.database.TranslatingCursor r0;
        int i0;
        android.util.ArraySet $r1;
        java.lang.Integer $r2;
        boolean $z0;
        java.lang.IllegalArgumentException $r3;
        byte[] $r4;

        r0 := @this: android.database.TranslatingCursor;

        i0 := @parameter0: int;

        $r1 = r0.<android.database.TranslatingCursor: android.util.ArraySet mTranslateColumnIndices>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $z0 = staticinvoke <com.android.internal.util.ArrayUtils: boolean contains(java.util.Collection,java.lang.Object)>($r1, $r2);

        if $z0 != 0 goto label1;

        $r4 = specialinvoke r0.<android.database.CrossProcessCursorWrapper: byte[] getBlob(int)>(i0);

        return $r4;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r3;
    }

    public int getColumnCount()
    {
        android.database.TranslatingCursor r0;
        boolean $z0;
        int $i0, $i1, $i2;

        r0 := @this: android.database.TranslatingCursor;

        $z0 = r0.<android.database.TranslatingCursor: boolean mDropLast>;

        if $z0 == 0 goto label1;

        $i1 = specialinvoke r0.<android.database.CrossProcessCursorWrapper: int getColumnCount()>();

        $i2 = $i1 - 1;

        return $i2;

     label1:
        $i0 = specialinvoke r0.<android.database.CrossProcessCursorWrapper: int getColumnCount()>();

        return $i0;
    }

    public java.lang.String[] getColumnNames()
    {
        android.database.TranslatingCursor r0;
        boolean $z0;
        java.lang.String[] $r1, $r2, $r4;
        int $i0, $i1;
        java.lang.Object[] $r3;

        r0 := @this: android.database.TranslatingCursor;

        $z0 = r0.<android.database.TranslatingCursor: boolean mDropLast>;

        if $z0 == 0 goto label1;

        $r2 = specialinvoke r0.<android.database.CrossProcessCursorWrapper: java.lang.String[] getColumnNames()>();

        $i0 = specialinvoke r0.<android.database.CrossProcessCursorWrapper: int getColumnCount()>();

        $i1 = $i0 - 1;

        $r3 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOfRange(java.lang.Object[],int,int)>($r2, 0, $i1);

        $r4 = (java.lang.String[]) $r3;

        return $r4;

     label1:
        $r1 = specialinvoke r0.<android.database.CrossProcessCursorWrapper: java.lang.String[] getColumnNames()>();

        return $r1;
    }

    public double getDouble(int)
    {
        android.database.TranslatingCursor r0;
        int i0;
        android.util.ArraySet $r1;
        java.lang.Integer $r2;
        boolean $z0;
        java.lang.IllegalArgumentException $r3;
        double $d0;

        r0 := @this: android.database.TranslatingCursor;

        i0 := @parameter0: int;

        $r1 = r0.<android.database.TranslatingCursor: android.util.ArraySet mTranslateColumnIndices>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $z0 = staticinvoke <com.android.internal.util.ArrayUtils: boolean contains(java.util.Collection,java.lang.Object)>($r1, $r2);

        if $z0 != 0 goto label1;

        $d0 = specialinvoke r0.<android.database.CrossProcessCursorWrapper: double getDouble(int)>(i0);

        return $d0;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r3;
    }

    public float getFloat(int)
    {
        android.database.TranslatingCursor r0;
        int i0;
        android.util.ArraySet $r1;
        java.lang.Integer $r2;
        boolean $z0;
        java.lang.IllegalArgumentException $r3;
        float $f0;

        r0 := @this: android.database.TranslatingCursor;

        i0 := @parameter0: int;

        $r1 = r0.<android.database.TranslatingCursor: android.util.ArraySet mTranslateColumnIndices>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $z0 = staticinvoke <com.android.internal.util.ArrayUtils: boolean contains(java.util.Collection,java.lang.Object)>($r1, $r2);

        if $z0 != 0 goto label1;

        $f0 = specialinvoke r0.<android.database.CrossProcessCursorWrapper: float getFloat(int)>(i0);

        return $f0;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r3;
    }

    public int getInt(int)
    {
        android.database.TranslatingCursor r0;
        int i0, $i1;
        android.util.ArraySet $r1;
        java.lang.Integer $r2;
        boolean $z0;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: android.database.TranslatingCursor;

        i0 := @parameter0: int;

        $r1 = r0.<android.database.TranslatingCursor: android.util.ArraySet mTranslateColumnIndices>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $z0 = staticinvoke <com.android.internal.util.ArrayUtils: boolean contains(java.util.Collection,java.lang.Object)>($r1, $r2);

        if $z0 != 0 goto label1;

        $i1 = specialinvoke r0.<android.database.CrossProcessCursorWrapper: int getInt(int)>(i0);

        return $i1;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r3;
    }

    public long getLong(int)
    {
        android.database.TranslatingCursor r0;
        int i0;
        android.util.ArraySet $r1;
        java.lang.Integer $r2;
        boolean $z0;
        java.lang.IllegalArgumentException $r3;
        long $l1;

        r0 := @this: android.database.TranslatingCursor;

        i0 := @parameter0: int;

        $r1 = r0.<android.database.TranslatingCursor: android.util.ArraySet mTranslateColumnIndices>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $z0 = staticinvoke <com.android.internal.util.ArrayUtils: boolean contains(java.util.Collection,java.lang.Object)>($r1, $r2);

        if $z0 != 0 goto label1;

        $l1 = specialinvoke r0.<android.database.CrossProcessCursorWrapper: long getLong(int)>(i0);

        return $l1;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r3;
    }

    public short getShort(int)
    {
        android.database.TranslatingCursor r0;
        int i0;
        android.util.ArraySet $r1;
        java.lang.Integer $r2;
        boolean $z0;
        java.lang.IllegalArgumentException $r3;
        short $s1;

        r0 := @this: android.database.TranslatingCursor;

        i0 := @parameter0: int;

        $r1 = r0.<android.database.TranslatingCursor: android.util.ArraySet mTranslateColumnIndices>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $z0 = staticinvoke <com.android.internal.util.ArrayUtils: boolean contains(java.util.Collection,java.lang.Object)>($r1, $r2);

        if $z0 != 0 goto label1;

        $s1 = specialinvoke r0.<android.database.CrossProcessCursorWrapper: short getShort(int)>(i0);

        return $s1;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r3;
    }

    public java.lang.String getString(int)
    {
        android.database.TranslatingCursor r0;
        int i0, $i1;
        android.util.ArraySet $r1;
        java.lang.Integer $r2;
        boolean $z0;
        java.lang.String $r3, $r5, $r6, $r7;
        android.database.TranslatingCursor$Translator $r4;

        r0 := @this: android.database.TranslatingCursor;

        i0 := @parameter0: int;

        $r1 = r0.<android.database.TranslatingCursor: android.util.ArraySet mTranslateColumnIndices>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $z0 = staticinvoke <com.android.internal.util.ArrayUtils: boolean contains(java.util.Collection,java.lang.Object)>($r1, $r2);

        if $z0 == 0 goto label1;

        $r4 = r0.<android.database.TranslatingCursor: android.database.TranslatingCursor$Translator mTranslator>;

        $r5 = specialinvoke r0.<android.database.CrossProcessCursorWrapper: java.lang.String getString(int)>(i0);

        $i1 = r0.<android.database.TranslatingCursor: int mAuxiliaryColumnIndex>;

        $r6 = virtualinvoke r0.<android.database.TranslatingCursor: java.lang.String getColumnName(int)>(i0);

        $r7 = interfaceinvoke $r4.<android.database.TranslatingCursor$Translator: java.lang.String translate(java.lang.String,int,java.lang.String,android.database.Cursor)>($r5, $i1, $r6, r0);

        return $r7;

     label1:
        $r3 = specialinvoke r0.<android.database.CrossProcessCursorWrapper: java.lang.String getString(int)>(i0);

        return $r3;
    }

    public int getType(int)
    {
        android.database.TranslatingCursor r0;
        int i0, $i1;
        android.util.ArraySet $r1;
        java.lang.Integer $r2;
        boolean $z0;

        r0 := @this: android.database.TranslatingCursor;

        i0 := @parameter0: int;

        $r1 = r0.<android.database.TranslatingCursor: android.util.ArraySet mTranslateColumnIndices>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $z0 = staticinvoke <com.android.internal.util.ArrayUtils: boolean contains(java.util.Collection,java.lang.Object)>($r1, $r2);

        if $z0 == 0 goto label1;

        return 3;

     label1:
        $i1 = specialinvoke r0.<android.database.CrossProcessCursorWrapper: int getType(int)>(i0);

        return $i1;
    }

    public android.database.CursorWindow getWindow()
    {
        android.database.TranslatingCursor r0;

        r0 := @this: android.database.TranslatingCursor;

        return null;
    }

    public android.database.Cursor getWrappedCursor()
    {
        android.database.TranslatingCursor r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: android.database.TranslatingCursor;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Returning underlying cursor risks leaking data");

        throw $r1;
    }

    public boolean isNull(int)
    {
        android.database.TranslatingCursor r0;
        int i0;
        android.util.ArraySet $r1;
        java.lang.Integer $r2;
        boolean $z0, $z1, z2;
        java.lang.String $r3;

        r0 := @this: android.database.TranslatingCursor;

        i0 := @parameter0: int;

        $r1 = r0.<android.database.TranslatingCursor: android.util.ArraySet mTranslateColumnIndices>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $z0 = staticinvoke <com.android.internal.util.ArrayUtils: boolean contains(java.util.Collection,java.lang.Object)>($r1, $r2);

        if $z0 == 0 goto label3;

        $r3 = virtualinvoke r0.<android.database.TranslatingCursor: java.lang.String getString(int)>(i0);

        if $r3 != null goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;

     label3:
        $z1 = specialinvoke r0.<android.database.CrossProcessCursorWrapper: boolean isNull(int)>(i0);

        return $z1;
    }
}
