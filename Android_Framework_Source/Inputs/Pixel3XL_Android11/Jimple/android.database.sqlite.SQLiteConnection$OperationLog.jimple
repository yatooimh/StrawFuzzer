final class android.database.sqlite.SQLiteConnection$OperationLog extends java.lang.Object
{
    private static final int COOKIE_GENERATION_SHIFT;
    private static final int COOKIE_INDEX_MASK;
    private static final int MAX_RECENT_OPERATIONS;
    private int mGeneration;
    private int mIndex;
    private final android.database.sqlite.SQLiteConnection$Operation[] mOperations;
    private final android.database.sqlite.SQLiteConnectionPool mPool;
    private long mResultLong;
    private java.lang.String mResultString;

    void <init>(android.database.sqlite.SQLiteConnectionPool)
    {
        android.database.sqlite.SQLiteConnection$OperationLog r0;
        android.database.sqlite.SQLiteConnectionPool r1;
        android.database.sqlite.SQLiteConnection$Operation[] $r2;

        r0 := @this: android.database.sqlite.SQLiteConnection$OperationLog;

        r1 := @parameter0: android.database.sqlite.SQLiteConnectionPool;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = newarray (android.database.sqlite.SQLiteConnection$Operation)[20];

        r0.<android.database.sqlite.SQLiteConnection$OperationLog: android.database.sqlite.SQLiteConnection$Operation[] mOperations> = $r2;

        r0.<android.database.sqlite.SQLiteConnection$OperationLog: long mResultLong> = -9223372036854775808L;

        r0.<android.database.sqlite.SQLiteConnection$OperationLog: android.database.sqlite.SQLiteConnectionPool mPool> = r1;

        return;
    }

    private boolean endOperationDeferLogLocked(int)
    {
        android.database.sqlite.SQLiteConnection$OperationLog r0;
        int i0, $i5;
        android.database.sqlite.SQLiteConnection$Operation r1;
        long l1, $l2, $l3, $l4;
        boolean $z1, $z2, $z3, z4;
        android.database.sqlite.SQLiteConnectionPool $r2;
        java.lang.String $r3;

        r0 := @this: android.database.sqlite.SQLiteConnection$OperationLog;

        i0 := @parameter0: int;

        r1 = specialinvoke r0.<android.database.sqlite.SQLiteConnection$OperationLog: android.database.sqlite.SQLiteConnection$Operation getOperationLocked(int)>(i0);

        if r1 == null goto label3;

        $z1 = staticinvoke <android.os.Trace: boolean isTagEnabled(long)>(1048576L);

        if $z1 == 0 goto label1;

        $r3 = staticinvoke <android.database.sqlite.SQLiteConnection$Operation: java.lang.String access$500(android.database.sqlite.SQLiteConnection$Operation)>(r1);

        $i5 = r1.<android.database.sqlite.SQLiteConnection$Operation: int mCookie>;

        staticinvoke <android.os.Trace: void asyncTraceEnd(long,java.lang.String,int)>(1048576L, $r3, $i5);

     label1:
        $l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r1.<android.database.sqlite.SQLiteConnection$Operation: long mEndTime> = $l2;

        r1.<android.database.sqlite.SQLiteConnection$Operation: boolean mFinished> = 1;

        $l4 = r1.<android.database.sqlite.SQLiteConnection$Operation: long mEndTime>;

        $l3 = r1.<android.database.sqlite.SQLiteConnection$Operation: long mStartTime>;

        l1 = $l4 - $l3;

        $r2 = r0.<android.database.sqlite.SQLiteConnection$OperationLog: android.database.sqlite.SQLiteConnectionPool mPool>;

        virtualinvoke $r2.<android.database.sqlite.SQLiteConnectionPool: void onStatementExecuted(long)>(l1);

        z4 = 0;

        $z2 = <android.database.sqlite.SQLiteDebug$NoPreloadHolder: boolean DEBUG_LOG_SLOW_QUERIES>;

        if $z2 == 0 goto label2;

        z4 = 0;

        $z3 = staticinvoke <android.database.sqlite.SQLiteDebug: boolean shouldLogSlowQuery(long)>(l1);

        if $z3 == 0 goto label2;

        z4 = 1;

     label2:
        return z4;

     label3:
        return 0;
    }

    private android.database.sqlite.SQLiteConnection$Operation getOperationLocked(int)
    {
        android.database.sqlite.SQLiteConnection$OperationLog r0;
        int i0, $i1, $i2;
        android.database.sqlite.SQLiteConnection$Operation[] $r1;
        android.database.sqlite.SQLiteConnection$Operation r2;

        r0 := @this: android.database.sqlite.SQLiteConnection$OperationLog;

        i0 := @parameter0: int;

        $r1 = r0.<android.database.sqlite.SQLiteConnection$OperationLog: android.database.sqlite.SQLiteConnection$Operation[] mOperations>;

        $i1 = i0 & 255;

        r2 = $r1[$i1];

        $i2 = r2.<android.database.sqlite.SQLiteConnection$Operation: int mCookie>;

        if $i2 != i0 goto label1;

        goto label2;

     label1:
        r2 = null;

     label2:
        return r2;
    }

    private void logOperationLocked(int, java.lang.String)
    {
        android.database.sqlite.SQLiteConnection$OperationLog r0;
        int i0;
        java.lang.String r1, $r4, $r6;
        android.database.sqlite.SQLiteConnection$Operation r2;
        long $l1;
        java.lang.StringBuilder $r5;

        r0 := @this: android.database.sqlite.SQLiteConnection$OperationLog;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 = specialinvoke r0.<android.database.sqlite.SQLiteConnection$OperationLog: android.database.sqlite.SQLiteConnection$Operation getOperationLocked(int)>(i0);

        $l1 = r0.<android.database.sqlite.SQLiteConnection$OperationLog: long mResultLong>;

        r2.<android.database.sqlite.SQLiteConnection$Operation: long mResultLong> = $l1;

        $r4 = r0.<android.database.sqlite.SQLiteConnection$OperationLog: java.lang.String mResultString>;

        r2.<android.database.sqlite.SQLiteConnection$Operation: java.lang.String mResultString> = $r4;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r2.<android.database.sqlite.SQLiteConnection$Operation: void describe(java.lang.StringBuilder,boolean)>($r5, 1);

        if r1 == null goto label1;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

     label1:
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("SQLiteConnection", $r6);

        return;
    }

    private int newOperationCookieLocked(int)
    {
        android.database.sqlite.SQLiteConnection$OperationLog r0;
        int i0, i1, $i2, $i3, $i4;

        r0 := @this: android.database.sqlite.SQLiteConnection$OperationLog;

        i0 := @parameter0: int;

        i1 = r0.<android.database.sqlite.SQLiteConnection$OperationLog: int mGeneration>;

        $i2 = i1 + 1;

        r0.<android.database.sqlite.SQLiteConnection$OperationLog: int mGeneration> = $i2;

        $i3 = i1 << 8;

        $i4 = $i3 | i0;

        return $i4;
    }

    public int beginOperation(java.lang.String, java.lang.String, java.lang.Object[])
    {
        android.database.sqlite.SQLiteConnection$OperationLog r0;
        java.lang.String r1, $r7, r16, $r19;
        java.lang.Object[] r2;
        android.database.sqlite.SQLiteConnection$Operation[] r3, $r5, $r14;
        int i0, $i1, $i2, $i3, $i4, i7, $i8, i9;
        android.database.sqlite.SQLiteConnection$Operation r4, r17;
        java.util.ArrayList $r6, $r8, $r9, $r10, $r11, $r13, r20;
        boolean $z0, $z2;
        byte[] $r12;
        java.lang.Throwable $r15;
        long $l5, $l6;
        android.database.sqlite.SQLiteConnectionPool $r18;
        java.lang.Object r21;

        r0 := @this: android.database.sqlite.SQLiteConnection$OperationLog;

        r16 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Object[];

        r0.<android.database.sqlite.SQLiteConnection$OperationLog: long mResultLong> = -9223372036854775808L;

        r0.<android.database.sqlite.SQLiteConnection$OperationLog: java.lang.String mResultString> = null;

        r3 = r0.<android.database.sqlite.SQLiteConnection$OperationLog: android.database.sqlite.SQLiteConnection$Operation[] mOperations>;

        entermonitor r3;

     label01:
        $i1 = r0.<android.database.sqlite.SQLiteConnection$OperationLog: int mIndex>;

        $i2 = $i1 + 1;

        i0 = $i2 % 20;

        $r5 = r0.<android.database.sqlite.SQLiteConnection$OperationLog: android.database.sqlite.SQLiteConnection$Operation[] mOperations>;

        r4 = $r5[i0];

     label02:
        if r4 != null goto label06;

     label03:
        r17 = new android.database.sqlite.SQLiteConnection$Operation;

        specialinvoke r17.<android.database.sqlite.SQLiteConnection$Operation: void <init>(android.database.sqlite.SQLiteConnection$1)>(null);

     label04:
        $r14 = r0.<android.database.sqlite.SQLiteConnection$OperationLog: android.database.sqlite.SQLiteConnection$Operation[] mOperations>;

        $r14[i0] = r17;

     label05:
        goto label10;

     label06:
        r4.<android.database.sqlite.SQLiteConnection$Operation: boolean mFinished> = 0;

        r4.<android.database.sqlite.SQLiteConnection$Operation: java.lang.Exception mException> = null;

     label07:
        r17 = r4;

     label08:
        $r6 = r4.<android.database.sqlite.SQLiteConnection$Operation: java.util.ArrayList mBindArgs>;

        if $r6 == null goto label10;

        $r13 = r4.<android.database.sqlite.SQLiteConnection$Operation: java.util.ArrayList mBindArgs>;

        virtualinvoke $r13.<java.util.ArrayList: void clear()>();

     label09:
        r17 = r4;

     label10:
        $l5 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r17.<android.database.sqlite.SQLiteConnection$Operation: long mStartWallTime> = $l5;

        $l6 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r17.<android.database.sqlite.SQLiteConnection$Operation: long mStartTime> = $l6;

        r17.<android.database.sqlite.SQLiteConnection$Operation: java.lang.String mKind> = r16;

        r17.<android.database.sqlite.SQLiteConnection$Operation: java.lang.String mSql> = r1;

        $r18 = r0.<android.database.sqlite.SQLiteConnection$OperationLog: android.database.sqlite.SQLiteConnectionPool mPool>;

        $r19 = virtualinvoke $r18.<android.database.sqlite.SQLiteConnectionPool: java.lang.String getPath()>();

        r17.<android.database.sqlite.SQLiteConnection$Operation: java.lang.String mPath> = $r19;

        r17.<android.database.sqlite.SQLiteConnection$Operation: long mResultLong> = -9223372036854775808L;

        r17.<android.database.sqlite.SQLiteConnection$Operation: java.lang.String mResultString> = null;

     label11:
        if r2 == null goto label22;

     label12:
        $r8 = r17.<android.database.sqlite.SQLiteConnection$Operation: java.util.ArrayList mBindArgs>;

        if $r8 != null goto label14;

        r20 = new java.util.ArrayList;

        specialinvoke r20.<java.util.ArrayList: void <init>()>();

        r17.<android.database.sqlite.SQLiteConnection$Operation: java.util.ArrayList mBindArgs> = r20;

     label13:
        goto label15;

     label14:
        $r9 = r17.<android.database.sqlite.SQLiteConnection$Operation: java.util.ArrayList mBindArgs>;

        virtualinvoke $r9.<java.util.ArrayList: void clear()>();

     label15:
        i7 = 0;

     label16:
        $i8 = lengthof r2;

        if i7 >= $i8 goto label22;

     label17:
        r21 = r2[i7];

        if r21 == null goto label20;

     label18:
        $z2 = r21 instanceof byte[];

        if $z2 == 0 goto label20;

        $r11 = r17.<android.database.sqlite.SQLiteConnection$Operation: java.util.ArrayList mBindArgs>;

        $r12 = staticinvoke <android.database.sqlite.SQLiteConnection: byte[] access$400()>();

        virtualinvoke $r11.<java.util.ArrayList: boolean add(java.lang.Object)>($r12);

     label19:
        goto label21;

     label20:
        $r10 = r17.<android.database.sqlite.SQLiteConnection$Operation: java.util.ArrayList mBindArgs>;

        virtualinvoke $r10.<java.util.ArrayList: boolean add(java.lang.Object)>(r21);

     label21:
        i7 = i7 + 1;

        goto label16;

     label22:
        $i3 = specialinvoke r0.<android.database.sqlite.SQLiteConnection$OperationLog: int newOperationCookieLocked(int)>(i0);

        r17.<android.database.sqlite.SQLiteConnection$Operation: int mCookie> = $i3;

        $z0 = staticinvoke <android.os.Trace: boolean isTagEnabled(long)>(1048576L);

        if $z0 == 0 goto label23;

        $r7 = staticinvoke <android.database.sqlite.SQLiteConnection$Operation: java.lang.String access$500(android.database.sqlite.SQLiteConnection$Operation)>(r17);

        $i4 = r17.<android.database.sqlite.SQLiteConnection$Operation: int mCookie>;

        staticinvoke <android.os.Trace: void asyncTraceBegin(long,java.lang.String,int)>(1048576L, $r7, $i4);

     label23:
        r0.<android.database.sqlite.SQLiteConnection$OperationLog: int mIndex> = i0;

        i9 = r17.<android.database.sqlite.SQLiteConnection$Operation: int mCookie>;

        exitmonitor r3;

     label24:
        return i9;

     label25:
        $r15 := @caughtexception;

     label26:
        exitmonitor r3;

     label27:
        throw $r15;

        catch java.lang.Throwable from label01 to label02 with label25;
        catch java.lang.Throwable from label03 to label04 with label25;
        catch java.lang.Throwable from label04 to label05 with label25;
        catch java.lang.Throwable from label06 to label07 with label25;
        catch java.lang.Throwable from label08 to label09 with label25;
        catch java.lang.Throwable from label10 to label11 with label25;
        catch java.lang.Throwable from label12 to label13 with label25;
        catch java.lang.Throwable from label14 to label15 with label25;
        catch java.lang.Throwable from label16 to label17 with label25;
        catch java.lang.Throwable from label18 to label19 with label25;
        catch java.lang.Throwable from label20 to label21 with label25;
        catch java.lang.Throwable from label22 to label23 with label25;
        catch java.lang.Throwable from label23 to label24 with label25;
        catch java.lang.Throwable from label26 to label27 with label25;
    }

    public java.lang.String describeCurrentOperation()
    {
        android.database.sqlite.SQLiteConnection$OperationLog r0;
        android.database.sqlite.SQLiteConnection$Operation[] r1, $r3;
        android.database.sqlite.SQLiteConnection$Operation r2;
        int $i0;
        boolean $z0;
        java.lang.Throwable $r4;
        java.lang.StringBuilder r5;
        java.lang.String r6;

        r0 := @this: android.database.sqlite.SQLiteConnection$OperationLog;

        r1 = r0.<android.database.sqlite.SQLiteConnection$OperationLog: android.database.sqlite.SQLiteConnection$Operation[] mOperations>;

        entermonitor r1;

     label1:
        $r3 = r0.<android.database.sqlite.SQLiteConnection$OperationLog: android.database.sqlite.SQLiteConnection$Operation[] mOperations>;

        $i0 = r0.<android.database.sqlite.SQLiteConnection$OperationLog: int mIndex>;

        r2 = $r3[$i0];

     label2:
        if r2 == null goto label5;

     label3:
        $z0 = r2.<android.database.sqlite.SQLiteConnection$Operation: boolean mFinished>;

        if $z0 != 0 goto label5;

        r5 = new java.lang.StringBuilder;

        specialinvoke r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r2.<android.database.sqlite.SQLiteConnection$Operation: void describe(java.lang.StringBuilder,boolean)>(r5, 0);

        r6 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.String toString()>();

        exitmonitor r1;

     label4:
        return r6;

     label5:
        exitmonitor r1;

     label6:
        return null;

     label7:
        $r4 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public void dump(android.util.Printer)
    {
        android.database.sqlite.SQLiteConnection$OperationLog r0;
        android.database.sqlite.SQLiteConnection$Operation[] r1, $r5, $r13;
        java.text.SimpleDateFormat r2;
        java.lang.StringBuilder r3;
        java.util.Date r4;
        int i0, i2, i3;
        long $l1;
        java.lang.String $r9, $r12;
        java.lang.Throwable $r14;
        android.util.Printer r15;
        android.database.sqlite.SQLiteConnection$Operation r16;

        r0 := @this: android.database.sqlite.SQLiteConnection$OperationLog;

        r15 := @parameter0: android.util.Printer;

        r1 = r0.<android.database.sqlite.SQLiteConnection$OperationLog: android.database.sqlite.SQLiteConnection$Operation[] mOperations>;

        entermonitor r1;

     label01:
        interfaceinvoke r15.<android.util.Printer: void println(java.lang.String)>("  Most recently executed operations:");

        i2 = r0.<android.database.sqlite.SQLiteConnection$OperationLog: int mIndex>;

        $r5 = r0.<android.database.sqlite.SQLiteConnection$OperationLog: android.database.sqlite.SQLiteConnection$Operation[] mOperations>;

        r16 = $r5[i2];

     label02:
        if r16 == null goto label12;

     label03:
        r2 = new java.text.SimpleDateFormat;

        specialinvoke r2.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyy-MM-dd HH:mm:ss.SSS");

     label04:
        i3 = 0;

     label05:
        r3 = new java.lang.StringBuilder;

        specialinvoke r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": [");

        r4 = new java.util.Date;

        $l1 = r16.<android.database.sqlite.SQLiteConnection$Operation: long mStartWallTime>;

        specialinvoke r4.<java.util.Date: void <init>(long)>($l1);

        $r9 = virtualinvoke r2.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>(r4);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] ");

        virtualinvoke r16.<android.database.sqlite.SQLiteConnection$Operation: void describe(java.lang.StringBuilder,boolean)>(r3, 0);

        $r12 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r15.<android.util.Printer: void println(java.lang.String)>($r12);

     label06:
        if i2 <= 0 goto label07;

        i2 = i2 + -1;

        goto label08;

     label07:
        i2 = 19;

     label08:
        i0 = i3 + 1;

     label09:
        $r13 = r0.<android.database.sqlite.SQLiteConnection$OperationLog: android.database.sqlite.SQLiteConnection$Operation[] mOperations>;

        r16 = $r13[i2];

     label10:
        if r16 == null goto label11;

        i3 = i0;

        if i0 < 20 goto label05;

     label11:
        goto label13;

     label12:
        interfaceinvoke r15.<android.util.Printer: void println(java.lang.String)>("    <none>");

     label13:
        exitmonitor r1;

     label14:
        return;

     label15:
        $r14 := @caughtexception;

     label16:
        exitmonitor r1;

     label17:
        throw $r14;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label05 to label06 with label15;
        catch java.lang.Throwable from label09 to label10 with label15;
        catch java.lang.Throwable from label12 to label13 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label16 to label17 with label15;
    }

    public void endOperation(int)
    {
        android.database.sqlite.SQLiteConnection$OperationLog r0;
        int i0;
        android.database.sqlite.SQLiteConnection$Operation[] r1;
        boolean $z0;
        java.lang.Throwable $r3;

        r0 := @this: android.database.sqlite.SQLiteConnection$OperationLog;

        i0 := @parameter0: int;

        r1 = r0.<android.database.sqlite.SQLiteConnection$OperationLog: android.database.sqlite.SQLiteConnection$Operation[] mOperations>;

        entermonitor r1;

     label1:
        $z0 = specialinvoke r0.<android.database.sqlite.SQLiteConnection$OperationLog: boolean endOperationDeferLogLocked(int)>(i0);

        if $z0 == 0 goto label2;

        specialinvoke r0.<android.database.sqlite.SQLiteConnection$OperationLog: void logOperationLocked(int,java.lang.String)>(i0, null);

     label2:
        exitmonitor r1;

     label3:
        return;

     label4:
        $r3 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public boolean endOperationDeferLog(int)
    {
        android.database.sqlite.SQLiteConnection$OperationLog r0;
        int i0;
        android.database.sqlite.SQLiteConnection$Operation[] r1;
        boolean z0;
        java.lang.Throwable $r3;

        r0 := @this: android.database.sqlite.SQLiteConnection$OperationLog;

        i0 := @parameter0: int;

        r1 = r0.<android.database.sqlite.SQLiteConnection$OperationLog: android.database.sqlite.SQLiteConnection$Operation[] mOperations>;

        entermonitor r1;

     label1:
        z0 = specialinvoke r0.<android.database.sqlite.SQLiteConnection$OperationLog: boolean endOperationDeferLogLocked(int)>(i0);

        exitmonitor r1;

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void failOperation(int, java.lang.Exception)
    {
        android.database.sqlite.SQLiteConnection$OperationLog r0;
        int i0;
        android.database.sqlite.SQLiteConnection$Operation[] r1;
        android.database.sqlite.SQLiteConnection$Operation r2;
        java.lang.Throwable $r3;
        java.lang.Exception r4;

        r0 := @this: android.database.sqlite.SQLiteConnection$OperationLog;

        i0 := @parameter0: int;

        r4 := @parameter1: java.lang.Exception;

        r1 = r0.<android.database.sqlite.SQLiteConnection$OperationLog: android.database.sqlite.SQLiteConnection$Operation[] mOperations>;

        entermonitor r1;

     label1:
        r2 = specialinvoke r0.<android.database.sqlite.SQLiteConnection$OperationLog: android.database.sqlite.SQLiteConnection$Operation getOperationLocked(int)>(i0);

     label2:
        if r2 == null goto label4;

     label3:
        r2.<android.database.sqlite.SQLiteConnection$Operation: java.lang.Exception mException> = r4;

     label4:
        exitmonitor r1;

     label5:
        return;

     label6:
        $r3 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public void logOperation(int, java.lang.String)
    {
        android.database.sqlite.SQLiteConnection$OperationLog r0;
        int i0;
        android.database.sqlite.SQLiteConnection$Operation[] r1;
        java.lang.Throwable $r2;
        java.lang.String r3;

        r0 := @this: android.database.sqlite.SQLiteConnection$OperationLog;

        i0 := @parameter0: int;

        r3 := @parameter1: java.lang.String;

        r1 = r0.<android.database.sqlite.SQLiteConnection$OperationLog: android.database.sqlite.SQLiteConnection$Operation[] mOperations>;

        entermonitor r1;

     label1:
        specialinvoke r0.<android.database.sqlite.SQLiteConnection$OperationLog: void logOperationLocked(int,java.lang.String)>(i0, r3);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void setResult(long)
    {
        android.database.sqlite.SQLiteConnection$OperationLog r0;
        long l0;

        r0 := @this: android.database.sqlite.SQLiteConnection$OperationLog;

        l0 := @parameter0: long;

        r0.<android.database.sqlite.SQLiteConnection$OperationLog: long mResultLong> = l0;

        return;
    }

    public void setResult(java.lang.String)
    {
        android.database.sqlite.SQLiteConnection$OperationLog r0;
        java.lang.String r1;

        r0 := @this: android.database.sqlite.SQLiteConnection$OperationLog;

        r1 := @parameter0: java.lang.String;

        r0.<android.database.sqlite.SQLiteConnection$OperationLog: java.lang.String mResultString> = r1;

        return;
    }

    public static void <clinit>()
    {
        <android.database.sqlite.SQLiteConnection$OperationLog: int MAX_RECENT_OPERATIONS> = 20;

        <android.database.sqlite.SQLiteConnection$OperationLog: int COOKIE_INDEX_MASK> = 255;

        <android.database.sqlite.SQLiteConnection$OperationLog: int COOKIE_GENERATION_SHIFT> = 8;

        return;
    }
}
