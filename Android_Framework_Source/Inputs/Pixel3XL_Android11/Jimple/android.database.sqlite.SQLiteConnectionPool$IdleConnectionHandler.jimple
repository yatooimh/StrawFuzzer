class android.database.sqlite.SQLiteConnectionPool$IdleConnectionHandler extends android.os.Handler
{
    private final long mTimeout;
    final android.database.sqlite.SQLiteConnectionPool this$0;

    void <init>(android.database.sqlite.SQLiteConnectionPool, android.os.Looper, long)
    {
        android.database.sqlite.SQLiteConnectionPool$IdleConnectionHandler r0;
        android.database.sqlite.SQLiteConnectionPool r1;
        android.os.Looper r2;
        long l0;

        r0 := @this: android.database.sqlite.SQLiteConnectionPool$IdleConnectionHandler;

        r1 := @parameter0: android.database.sqlite.SQLiteConnectionPool;

        r2 := @parameter1: android.os.Looper;

        l0 := @parameter2: long;

        r0.<android.database.sqlite.SQLiteConnectionPool$IdleConnectionHandler: android.database.sqlite.SQLiteConnectionPool this$0> = r1;

        specialinvoke r0.<android.os.Handler: void <init>(android.os.Looper)>(r2);

        r0.<android.database.sqlite.SQLiteConnectionPool$IdleConnectionHandler: long mTimeout> = l0;

        return;
    }

    void connectionAcquired(android.database.sqlite.SQLiteConnection)
    {
        android.database.sqlite.SQLiteConnectionPool$IdleConnectionHandler r0;
        android.database.sqlite.SQLiteConnection r1;
        int $i0;

        r0 := @this: android.database.sqlite.SQLiteConnectionPool$IdleConnectionHandler;

        r1 := @parameter0: android.database.sqlite.SQLiteConnection;

        $i0 = virtualinvoke r1.<android.database.sqlite.SQLiteConnection: int getConnectionId()>();

        virtualinvoke r0.<android.database.sqlite.SQLiteConnectionPool$IdleConnectionHandler: void removeMessages(int)>($i0);

        return;
    }

    void connectionClosed(android.database.sqlite.SQLiteConnection)
    {
        android.database.sqlite.SQLiteConnectionPool$IdleConnectionHandler r0;
        android.database.sqlite.SQLiteConnection r1;
        int $i0;

        r0 := @this: android.database.sqlite.SQLiteConnectionPool$IdleConnectionHandler;

        r1 := @parameter0: android.database.sqlite.SQLiteConnection;

        $i0 = virtualinvoke r1.<android.database.sqlite.SQLiteConnection: int getConnectionId()>();

        virtualinvoke r0.<android.database.sqlite.SQLiteConnectionPool$IdleConnectionHandler: void removeMessages(int)>($i0);

        return;
    }

    void connectionReleased(android.database.sqlite.SQLiteConnection)
    {
        android.database.sqlite.SQLiteConnectionPool$IdleConnectionHandler r0;
        android.database.sqlite.SQLiteConnection r1;
        int $i0;
        long $l1;

        r0 := @this: android.database.sqlite.SQLiteConnectionPool$IdleConnectionHandler;

        r1 := @parameter0: android.database.sqlite.SQLiteConnection;

        $i0 = virtualinvoke r1.<android.database.sqlite.SQLiteConnection: int getConnectionId()>();

        $l1 = r0.<android.database.sqlite.SQLiteConnectionPool$IdleConnectionHandler: long mTimeout>;

        virtualinvoke r0.<android.database.sqlite.SQLiteConnectionPool$IdleConnectionHandler: boolean sendEmptyMessageDelayed(int,long)>($i0, $l1);

        return;
    }

    public void handleMessage(android.os.Message)
    {
        android.database.sqlite.SQLiteConnectionPool$IdleConnectionHandler r0, $r5;
        java.lang.Object r1;
        java.lang.StringBuilder r2;
        android.database.sqlite.SQLiteConnectionPool $r3, $r4, $r6, $r8;
        int $i0, $i1;
        boolean $z0, $z1;
        android.database.sqlite.SQLiteDatabaseConfiguration $r9;
        java.lang.String $r10, $r16;
        long $l2;
        java.lang.Throwable $r17;
        android.os.Message r18;

        r0 := @this: android.database.sqlite.SQLiteConnectionPool$IdleConnectionHandler;

        r18 := @parameter0: android.os.Message;

        $r3 = r0.<android.database.sqlite.SQLiteConnectionPool$IdleConnectionHandler: android.database.sqlite.SQLiteConnectionPool this$0>;

        r1 = staticinvoke <android.database.sqlite.SQLiteConnectionPool: java.lang.Object access$000(android.database.sqlite.SQLiteConnectionPool)>($r3);

        entermonitor r1;

     label1:
        $r4 = r0.<android.database.sqlite.SQLiteConnectionPool$IdleConnectionHandler: android.database.sqlite.SQLiteConnectionPool this$0>;

        $r5 = staticinvoke <android.database.sqlite.SQLiteConnectionPool: android.database.sqlite.SQLiteConnectionPool$IdleConnectionHandler access$300(android.database.sqlite.SQLiteConnectionPool)>($r4);

        if r0 == $r5 goto label3;

        exitmonitor r1;

     label2:
        return;

     label3:
        $r6 = r0.<android.database.sqlite.SQLiteConnectionPool$IdleConnectionHandler: android.database.sqlite.SQLiteConnectionPool this$0>;

        $i0 = r18.<android.os.Message: int what>;

        $z0 = staticinvoke <android.database.sqlite.SQLiteConnectionPool: boolean access$400(android.database.sqlite.SQLiteConnectionPool,int)>($r6, $i0);

        if $z0 == 0 goto label4;

        $z1 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("SQLiteConnectionPool", 3);

        if $z1 == 0 goto label4;

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Closed idle connection ");

        $r8 = r0.<android.database.sqlite.SQLiteConnectionPool$IdleConnectionHandler: android.database.sqlite.SQLiteConnectionPool this$0>;

        $r9 = staticinvoke <android.database.sqlite.SQLiteConnectionPool: android.database.sqlite.SQLiteDatabaseConfiguration access$500(android.database.sqlite.SQLiteConnectionPool)>($r8);

        $r10 = $r9.<android.database.sqlite.SQLiteDatabaseConfiguration: java.lang.String label>;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i1 = r18.<android.os.Message: int what>;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" after ");

        $l2 = r0.<android.database.sqlite.SQLiteConnectionPool$IdleConnectionHandler: long mTimeout>;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r16 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("SQLiteConnectionPool", $r16);

     label4:
        exitmonitor r1;

     label5:
        return;

     label6:
        $r17 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r17;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }
}
