public final class android.database.sqlite.SQLiteDatabase$OpenParams extends java.lang.Object
{
    private final android.database.sqlite.SQLiteDatabase$CursorFactory mCursorFactory;
    private final android.database.DatabaseErrorHandler mErrorHandler;
    private final long mIdleConnectionTimeout;
    private final java.lang.String mJournalMode;
    private final int mLookasideSlotCount;
    private final int mLookasideSlotSize;
    private final int mOpenFlags;
    private final java.lang.String mSyncMode;

    private void <init>(int, android.database.sqlite.SQLiteDatabase$CursorFactory, android.database.DatabaseErrorHandler, int, int, long, java.lang.String, java.lang.String)
    {
        android.database.sqlite.SQLiteDatabase$OpenParams r0;
        int i0, i1, i2;
        android.database.sqlite.SQLiteDatabase$CursorFactory r1;
        android.database.DatabaseErrorHandler r2;
        long l3;
        java.lang.String r3, r4;

        r0 := @this: android.database.sqlite.SQLiteDatabase$OpenParams;

        i0 := @parameter0: int;

        r1 := @parameter1: android.database.sqlite.SQLiteDatabase$CursorFactory;

        r2 := @parameter2: android.database.DatabaseErrorHandler;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        l3 := @parameter5: long;

        r3 := @parameter6: java.lang.String;

        r4 := @parameter7: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.database.sqlite.SQLiteDatabase$OpenParams: int mOpenFlags> = i0;

        r0.<android.database.sqlite.SQLiteDatabase$OpenParams: android.database.sqlite.SQLiteDatabase$CursorFactory mCursorFactory> = r1;

        r0.<android.database.sqlite.SQLiteDatabase$OpenParams: android.database.DatabaseErrorHandler mErrorHandler> = r2;

        r0.<android.database.sqlite.SQLiteDatabase$OpenParams: int mLookasideSlotSize> = i1;

        r0.<android.database.sqlite.SQLiteDatabase$OpenParams: int mLookasideSlotCount> = i2;

        r0.<android.database.sqlite.SQLiteDatabase$OpenParams: long mIdleConnectionTimeout> = l3;

        r0.<android.database.sqlite.SQLiteDatabase$OpenParams: java.lang.String mJournalMode> = r3;

        r0.<android.database.sqlite.SQLiteDatabase$OpenParams: java.lang.String mSyncMode> = r4;

        return;
    }

    void <init>(int, android.database.sqlite.SQLiteDatabase$CursorFactory, android.database.DatabaseErrorHandler, int, int, long, java.lang.String, java.lang.String, android.database.sqlite.SQLiteDatabase$1)
    {
        android.database.sqlite.SQLiteDatabase$OpenParams r0;
        int i0, i1, i2;
        android.database.sqlite.SQLiteDatabase$CursorFactory r1;
        android.database.DatabaseErrorHandler r2;
        long l3;
        java.lang.String r3, r4;
        android.database.sqlite.SQLiteDatabase$1 r5;

        r0 := @this: android.database.sqlite.SQLiteDatabase$OpenParams;

        i0 := @parameter0: int;

        r1 := @parameter1: android.database.sqlite.SQLiteDatabase$CursorFactory;

        r2 := @parameter2: android.database.DatabaseErrorHandler;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        l3 := @parameter5: long;

        r3 := @parameter6: java.lang.String;

        r4 := @parameter7: java.lang.String;

        r5 := @parameter8: android.database.sqlite.SQLiteDatabase$1;

        specialinvoke r0.<android.database.sqlite.SQLiteDatabase$OpenParams: void <init>(int,android.database.sqlite.SQLiteDatabase$CursorFactory,android.database.DatabaseErrorHandler,int,int,long,java.lang.String,java.lang.String)>(i0, r1, r2, i1, i2, l3, r3, r4);

        return;
    }

    static int access$000(android.database.sqlite.SQLiteDatabase$OpenParams)
    {
        android.database.sqlite.SQLiteDatabase$OpenParams r0;
        int $i0;

        r0 := @parameter0: android.database.sqlite.SQLiteDatabase$OpenParams;

        $i0 = r0.<android.database.sqlite.SQLiteDatabase$OpenParams: int mOpenFlags>;

        return $i0;
    }

    static android.database.sqlite.SQLiteDatabase$CursorFactory access$100(android.database.sqlite.SQLiteDatabase$OpenParams)
    {
        android.database.sqlite.SQLiteDatabase$OpenParams r0;
        android.database.sqlite.SQLiteDatabase$CursorFactory $r1;

        r0 := @parameter0: android.database.sqlite.SQLiteDatabase$OpenParams;

        $r1 = r0.<android.database.sqlite.SQLiteDatabase$OpenParams: android.database.sqlite.SQLiteDatabase$CursorFactory mCursorFactory>;

        return $r1;
    }

    static android.database.DatabaseErrorHandler access$200(android.database.sqlite.SQLiteDatabase$OpenParams)
    {
        android.database.sqlite.SQLiteDatabase$OpenParams r0;
        android.database.DatabaseErrorHandler $r1;

        r0 := @parameter0: android.database.sqlite.SQLiteDatabase$OpenParams;

        $r1 = r0.<android.database.sqlite.SQLiteDatabase$OpenParams: android.database.DatabaseErrorHandler mErrorHandler>;

        return $r1;
    }

    static int access$300(android.database.sqlite.SQLiteDatabase$OpenParams)
    {
        android.database.sqlite.SQLiteDatabase$OpenParams r0;
        int $i0;

        r0 := @parameter0: android.database.sqlite.SQLiteDatabase$OpenParams;

        $i0 = r0.<android.database.sqlite.SQLiteDatabase$OpenParams: int mLookasideSlotSize>;

        return $i0;
    }

    static int access$400(android.database.sqlite.SQLiteDatabase$OpenParams)
    {
        android.database.sqlite.SQLiteDatabase$OpenParams r0;
        int $i0;

        r0 := @parameter0: android.database.sqlite.SQLiteDatabase$OpenParams;

        $i0 = r0.<android.database.sqlite.SQLiteDatabase$OpenParams: int mLookasideSlotCount>;

        return $i0;
    }

    static long access$500(android.database.sqlite.SQLiteDatabase$OpenParams)
    {
        android.database.sqlite.SQLiteDatabase$OpenParams r0;
        long $l0;

        r0 := @parameter0: android.database.sqlite.SQLiteDatabase$OpenParams;

        $l0 = r0.<android.database.sqlite.SQLiteDatabase$OpenParams: long mIdleConnectionTimeout>;

        return $l0;
    }

    static java.lang.String access$600(android.database.sqlite.SQLiteDatabase$OpenParams)
    {
        android.database.sqlite.SQLiteDatabase$OpenParams r0;
        java.lang.String $r1;

        r0 := @parameter0: android.database.sqlite.SQLiteDatabase$OpenParams;

        $r1 = r0.<android.database.sqlite.SQLiteDatabase$OpenParams: java.lang.String mJournalMode>;

        return $r1;
    }

    static java.lang.String access$700(android.database.sqlite.SQLiteDatabase$OpenParams)
    {
        android.database.sqlite.SQLiteDatabase$OpenParams r0;
        java.lang.String $r1;

        r0 := @parameter0: android.database.sqlite.SQLiteDatabase$OpenParams;

        $r1 = r0.<android.database.sqlite.SQLiteDatabase$OpenParams: java.lang.String mSyncMode>;

        return $r1;
    }

    public android.database.sqlite.SQLiteDatabase$CursorFactory getCursorFactory()
    {
        android.database.sqlite.SQLiteDatabase$OpenParams r0;
        android.database.sqlite.SQLiteDatabase$CursorFactory $r1;

        r0 := @this: android.database.sqlite.SQLiteDatabase$OpenParams;

        $r1 = r0.<android.database.sqlite.SQLiteDatabase$OpenParams: android.database.sqlite.SQLiteDatabase$CursorFactory mCursorFactory>;

        return $r1;
    }

    public android.database.DatabaseErrorHandler getErrorHandler()
    {
        android.database.sqlite.SQLiteDatabase$OpenParams r0;
        android.database.DatabaseErrorHandler $r1;

        r0 := @this: android.database.sqlite.SQLiteDatabase$OpenParams;

        $r1 = r0.<android.database.sqlite.SQLiteDatabase$OpenParams: android.database.DatabaseErrorHandler mErrorHandler>;

        return $r1;
    }

    public long getIdleConnectionTimeout()
    {
        android.database.sqlite.SQLiteDatabase$OpenParams r0;
        long $l0;

        r0 := @this: android.database.sqlite.SQLiteDatabase$OpenParams;

        $l0 = r0.<android.database.sqlite.SQLiteDatabase$OpenParams: long mIdleConnectionTimeout>;

        return $l0;
    }

    public java.lang.String getJournalMode()
    {
        android.database.sqlite.SQLiteDatabase$OpenParams r0;
        java.lang.String $r1;

        r0 := @this: android.database.sqlite.SQLiteDatabase$OpenParams;

        $r1 = r0.<android.database.sqlite.SQLiteDatabase$OpenParams: java.lang.String mJournalMode>;

        return $r1;
    }

    public int getLookasideSlotCount()
    {
        android.database.sqlite.SQLiteDatabase$OpenParams r0;
        int $i0;

        r0 := @this: android.database.sqlite.SQLiteDatabase$OpenParams;

        $i0 = r0.<android.database.sqlite.SQLiteDatabase$OpenParams: int mLookasideSlotCount>;

        return $i0;
    }

    public int getLookasideSlotSize()
    {
        android.database.sqlite.SQLiteDatabase$OpenParams r0;
        int $i0;

        r0 := @this: android.database.sqlite.SQLiteDatabase$OpenParams;

        $i0 = r0.<android.database.sqlite.SQLiteDatabase$OpenParams: int mLookasideSlotSize>;

        return $i0;
    }

    public int getOpenFlags()
    {
        android.database.sqlite.SQLiteDatabase$OpenParams r0;
        int $i0;

        r0 := @this: android.database.sqlite.SQLiteDatabase$OpenParams;

        $i0 = r0.<android.database.sqlite.SQLiteDatabase$OpenParams: int mOpenFlags>;

        return $i0;
    }

    public java.lang.String getSynchronousMode()
    {
        android.database.sqlite.SQLiteDatabase$OpenParams r0;
        java.lang.String $r1;

        r0 := @this: android.database.sqlite.SQLiteDatabase$OpenParams;

        $r1 = r0.<android.database.sqlite.SQLiteDatabase$OpenParams: java.lang.String mSyncMode>;

        return $r1;
    }

    public android.database.sqlite.SQLiteDatabase$OpenParams$Builder toBuilder()
    {
        android.database.sqlite.SQLiteDatabase$OpenParams r0;
        android.database.sqlite.SQLiteDatabase$OpenParams$Builder $r1;

        r0 := @this: android.database.sqlite.SQLiteDatabase$OpenParams;

        $r1 = new android.database.sqlite.SQLiteDatabase$OpenParams$Builder;

        specialinvoke $r1.<android.database.sqlite.SQLiteDatabase$OpenParams$Builder: void <init>(android.database.sqlite.SQLiteDatabase$OpenParams)>(r0);

        return $r1;
    }
}
