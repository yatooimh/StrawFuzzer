public final class android.database.sqlite.SQLiteDatabaseConfiguration extends java.lang.Object
{
    private static final java.util.regex.Pattern EMAIL_IN_DB_PATTERN;
    public static final java.lang.String MEMORY_DB_PATH;
    public final android.util.ArrayMap customAggregateFunctions;
    public final android.util.ArrayMap customScalarFunctions;
    public boolean foreignKeyConstraintsEnabled;
    public long idleConnectionTimeoutMs;
    public java.lang.String journalMode;
    public final java.lang.String label;
    public java.util.Locale locale;
    public int lookasideSlotCount;
    public int lookasideSlotSize;
    public int maxSqlCacheSize;
    public int openFlags;
    public final java.lang.String path;
    public final java.util.ArrayList perConnectionSql;
    public java.lang.String syncMode;

    static void <clinit>()
    {
        java.util.regex.Pattern $r0;

        <android.database.sqlite.SQLiteDatabaseConfiguration: java.lang.String MEMORY_DB_PATH> = ":memory:";

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("[\\w\\.\\-]+@[\\w\\.\\-]+");

        <android.database.sqlite.SQLiteDatabaseConfiguration: java.util.regex.Pattern EMAIL_IN_DB_PATTERN> = $r0;

        return;
    }

    public void <init>(android.database.sqlite.SQLiteDatabaseConfiguration)
    {
        android.database.sqlite.SQLiteDatabaseConfiguration r0, r1;
        android.util.ArrayMap $r2, $r3;
        java.util.ArrayList $r4;
        java.lang.IllegalArgumentException $r5;
        java.lang.String $r6, $r7;

        r0 := @this: android.database.sqlite.SQLiteDatabaseConfiguration;

        r1 := @parameter0: android.database.sqlite.SQLiteDatabaseConfiguration;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new android.util.ArrayMap;

        specialinvoke $r2.<android.util.ArrayMap: void <init>()>();

        r0.<android.database.sqlite.SQLiteDatabaseConfiguration: android.util.ArrayMap customScalarFunctions> = $r2;

        $r3 = new android.util.ArrayMap;

        specialinvoke $r3.<android.util.ArrayMap: void <init>()>();

        r0.<android.database.sqlite.SQLiteDatabaseConfiguration: android.util.ArrayMap customAggregateFunctions> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<android.database.sqlite.SQLiteDatabaseConfiguration: java.util.ArrayList perConnectionSql> = $r4;

        r0.<android.database.sqlite.SQLiteDatabaseConfiguration: int lookasideSlotSize> = -1;

        r0.<android.database.sqlite.SQLiteDatabaseConfiguration: int lookasideSlotCount> = -1;

        r0.<android.database.sqlite.SQLiteDatabaseConfiguration: long idleConnectionTimeoutMs> = 9223372036854775807L;

        if r1 == null goto label1;

        $r6 = r1.<android.database.sqlite.SQLiteDatabaseConfiguration: java.lang.String path>;

        r0.<android.database.sqlite.SQLiteDatabaseConfiguration: java.lang.String path> = $r6;

        $r7 = r1.<android.database.sqlite.SQLiteDatabaseConfiguration: java.lang.String label>;

        r0.<android.database.sqlite.SQLiteDatabaseConfiguration: java.lang.String label> = $r7;

        virtualinvoke r0.<android.database.sqlite.SQLiteDatabaseConfiguration: void updateParametersFrom(android.database.sqlite.SQLiteDatabaseConfiguration)>(r1);

        return;

     label1:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("other must not be null.");

        throw $r5;
    }

    public void <init>(java.lang.String, int)
    {
        android.database.sqlite.SQLiteDatabaseConfiguration r0;
        java.lang.String r1, $r6;
        int i0;
        android.util.ArrayMap $r2, $r3;
        java.util.ArrayList $r4;
        java.lang.IllegalArgumentException $r5;
        java.util.Locale $r7;

        r0 := @this: android.database.sqlite.SQLiteDatabaseConfiguration;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new android.util.ArrayMap;

        specialinvoke $r2.<android.util.ArrayMap: void <init>()>();

        r0.<android.database.sqlite.SQLiteDatabaseConfiguration: android.util.ArrayMap customScalarFunctions> = $r2;

        $r3 = new android.util.ArrayMap;

        specialinvoke $r3.<android.util.ArrayMap: void <init>()>();

        r0.<android.database.sqlite.SQLiteDatabaseConfiguration: android.util.ArrayMap customAggregateFunctions> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<android.database.sqlite.SQLiteDatabaseConfiguration: java.util.ArrayList perConnectionSql> = $r4;

        r0.<android.database.sqlite.SQLiteDatabaseConfiguration: int lookasideSlotSize> = -1;

        r0.<android.database.sqlite.SQLiteDatabaseConfiguration: int lookasideSlotCount> = -1;

        r0.<android.database.sqlite.SQLiteDatabaseConfiguration: long idleConnectionTimeoutMs> = 9223372036854775807L;

        if r1 == null goto label1;

        r0.<android.database.sqlite.SQLiteDatabaseConfiguration: java.lang.String path> = r1;

        $r6 = staticinvoke <android.database.sqlite.SQLiteDatabaseConfiguration: java.lang.String stripPathForLogs(java.lang.String)>(r1);

        r0.<android.database.sqlite.SQLiteDatabaseConfiguration: java.lang.String label> = $r6;

        r0.<android.database.sqlite.SQLiteDatabaseConfiguration: int openFlags> = i0;

        r0.<android.database.sqlite.SQLiteDatabaseConfiguration: int maxSqlCacheSize> = 25;

        $r7 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        r0.<android.database.sqlite.SQLiteDatabaseConfiguration: java.util.Locale locale> = $r7;

        return;

     label1:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("path must not be null.");

        throw $r5;
    }

    private static java.lang.String stripPathForLogs(java.lang.String)
    {
        java.lang.String r0, $r3;
        int $i0;
        java.util.regex.Pattern $r1;
        java.util.regex.Matcher $r2;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(64);

        if $i0 != -1 goto label1;

        return r0;

     label1:
        $r1 = <android.database.sqlite.SQLiteDatabaseConfiguration: java.util.regex.Pattern EMAIL_IN_DB_PATTERN>;

        $r2 = virtualinvoke $r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r0);

        $r3 = virtualinvoke $r2.<java.util.regex.Matcher: java.lang.String replaceAll(java.lang.String)>("XX@YY");

        return $r3;
    }

    public boolean isInMemoryDb()
    {
        android.database.sqlite.SQLiteDatabaseConfiguration r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: android.database.sqlite.SQLiteDatabaseConfiguration;

        $r1 = r0.<android.database.sqlite.SQLiteDatabaseConfiguration: java.lang.String path>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(":memory:");

        return $z0;
    }

    boolean isLegacyCompatibilityWalEnabled()
    {
        android.database.sqlite.SQLiteDatabaseConfiguration r0;
        java.lang.String $r1, $r2;
        int $i0, $i1;
        boolean z0;

        r0 := @this: android.database.sqlite.SQLiteDatabaseConfiguration;

        $r1 = r0.<android.database.sqlite.SQLiteDatabaseConfiguration: java.lang.String journalMode>;

        if $r1 != null goto label1;

        $r2 = r0.<android.database.sqlite.SQLiteDatabaseConfiguration: java.lang.String syncMode>;

        if $r2 != null goto label1;

        $i0 = r0.<android.database.sqlite.SQLiteDatabaseConfiguration: int openFlags>;

        $i1 = $i0 & -2147483648;

        if $i1 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    boolean isLookasideConfigSet()
    {
        android.database.sqlite.SQLiteDatabaseConfiguration r0;
        int $i0, $i1;
        boolean z0;

        r0 := @this: android.database.sqlite.SQLiteDatabaseConfiguration;

        $i0 = r0.<android.database.sqlite.SQLiteDatabaseConfiguration: int lookasideSlotCount>;

        if $i0 < 0 goto label1;

        $i1 = r0.<android.database.sqlite.SQLiteDatabaseConfiguration: int lookasideSlotSize>;

        if $i1 < 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public void updateParametersFrom(android.database.sqlite.SQLiteDatabaseConfiguration)
    {
        android.database.sqlite.SQLiteDatabaseConfiguration r0, r1;
        java.lang.IllegalArgumentException $r2, $r5;
        java.lang.String $r3, $r4, $r16, $r17;
        boolean $z0, $z1;
        int $i0, $i1, $i2, $i3;
        java.util.Locale $r6;
        android.util.ArrayMap $r7, $r8, $r9, $r10, $r11, $r12;
        java.util.ArrayList $r13, $r14, $r15;
        long $l4;

        r0 := @this: android.database.sqlite.SQLiteDatabaseConfiguration;

        r1 := @parameter0: android.database.sqlite.SQLiteDatabaseConfiguration;

        if r1 == null goto label2;

        $r4 = r0.<android.database.sqlite.SQLiteDatabaseConfiguration: java.lang.String path>;

        $r3 = r1.<android.database.sqlite.SQLiteDatabaseConfiguration: java.lang.String path>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        $i0 = r1.<android.database.sqlite.SQLiteDatabaseConfiguration: int openFlags>;

        r0.<android.database.sqlite.SQLiteDatabaseConfiguration: int openFlags> = $i0;

        $i1 = r1.<android.database.sqlite.SQLiteDatabaseConfiguration: int maxSqlCacheSize>;

        r0.<android.database.sqlite.SQLiteDatabaseConfiguration: int maxSqlCacheSize> = $i1;

        $r6 = r1.<android.database.sqlite.SQLiteDatabaseConfiguration: java.util.Locale locale>;

        r0.<android.database.sqlite.SQLiteDatabaseConfiguration: java.util.Locale locale> = $r6;

        $z1 = r1.<android.database.sqlite.SQLiteDatabaseConfiguration: boolean foreignKeyConstraintsEnabled>;

        r0.<android.database.sqlite.SQLiteDatabaseConfiguration: boolean foreignKeyConstraintsEnabled> = $z1;

        $r7 = r0.<android.database.sqlite.SQLiteDatabaseConfiguration: android.util.ArrayMap customScalarFunctions>;

        virtualinvoke $r7.<android.util.ArrayMap: void clear()>();

        $r9 = r0.<android.database.sqlite.SQLiteDatabaseConfiguration: android.util.ArrayMap customScalarFunctions>;

        $r8 = r1.<android.database.sqlite.SQLiteDatabaseConfiguration: android.util.ArrayMap customScalarFunctions>;

        virtualinvoke $r9.<android.util.ArrayMap: void putAll(android.util.ArrayMap)>($r8);

        $r10 = r0.<android.database.sqlite.SQLiteDatabaseConfiguration: android.util.ArrayMap customAggregateFunctions>;

        virtualinvoke $r10.<android.util.ArrayMap: void clear()>();

        $r12 = r0.<android.database.sqlite.SQLiteDatabaseConfiguration: android.util.ArrayMap customAggregateFunctions>;

        $r11 = r1.<android.database.sqlite.SQLiteDatabaseConfiguration: android.util.ArrayMap customAggregateFunctions>;

        virtualinvoke $r12.<android.util.ArrayMap: void putAll(android.util.ArrayMap)>($r11);

        $r13 = r0.<android.database.sqlite.SQLiteDatabaseConfiguration: java.util.ArrayList perConnectionSql>;

        virtualinvoke $r13.<java.util.ArrayList: void clear()>();

        $r15 = r0.<android.database.sqlite.SQLiteDatabaseConfiguration: java.util.ArrayList perConnectionSql>;

        $r14 = r1.<android.database.sqlite.SQLiteDatabaseConfiguration: java.util.ArrayList perConnectionSql>;

        virtualinvoke $r15.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r14);

        $i2 = r1.<android.database.sqlite.SQLiteDatabaseConfiguration: int lookasideSlotSize>;

        r0.<android.database.sqlite.SQLiteDatabaseConfiguration: int lookasideSlotSize> = $i2;

        $i3 = r1.<android.database.sqlite.SQLiteDatabaseConfiguration: int lookasideSlotCount>;

        r0.<android.database.sqlite.SQLiteDatabaseConfiguration: int lookasideSlotCount> = $i3;

        $l4 = r1.<android.database.sqlite.SQLiteDatabaseConfiguration: long idleConnectionTimeoutMs>;

        r0.<android.database.sqlite.SQLiteDatabaseConfiguration: long idleConnectionTimeoutMs> = $l4;

        $r16 = r1.<android.database.sqlite.SQLiteDatabaseConfiguration: java.lang.String journalMode>;

        r0.<android.database.sqlite.SQLiteDatabaseConfiguration: java.lang.String journalMode> = $r16;

        $r17 = r1.<android.database.sqlite.SQLiteDatabaseConfiguration: java.lang.String syncMode>;

        r0.<android.database.sqlite.SQLiteDatabaseConfiguration: java.lang.String syncMode> = $r17;

        return;

     label1:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("other configuration must refer to the same database.");

        throw $r5;

     label2:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("other must not be null.");

        throw $r2;
    }
}
