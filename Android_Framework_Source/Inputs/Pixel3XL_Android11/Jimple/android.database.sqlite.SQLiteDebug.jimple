public final class android.database.sqlite.SQLiteDebug extends java.lang.Object
{

    private void <init>()
    {
        android.database.sqlite.SQLiteDebug r0;

        r0 := @this: android.database.sqlite.SQLiteDebug;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void dump(android.util.Printer, java.lang.String[])
    {
        android.util.Printer r0;
        java.lang.String[] r1;

        r0 := @parameter0: android.util.Printer;

        r1 := @parameter1: java.lang.String[];

        staticinvoke <android.database.sqlite.SQLiteDebug: void dump(android.util.Printer,java.lang.String[],boolean)>(r0, r1, 0);

        return;
    }

    public static void dump(android.util.Printer, java.lang.String[], boolean)
    {
        android.util.Printer r0;
        java.lang.String[] r1;
        boolean z0, $z1, z2;
        int i0, i1;
        java.lang.String $r2;

        r0 := @parameter0: android.util.Printer;

        r1 := @parameter1: java.lang.String[];

        z0 := @parameter2: boolean;

        z2 = 0;

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r2 = r1[i1];

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("-v");

        if $z1 == 0 goto label2;

        z2 = 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        staticinvoke <android.database.sqlite.SQLiteDatabase: void dumpAll(android.util.Printer,boolean,boolean)>(r0, z2, z0);

        return;
    }

    public static android.database.sqlite.SQLiteDebug$PagerStats getDatabaseInfo()
    {
        android.database.sqlite.SQLiteDebug$PagerStats $r1;
        java.util.ArrayList $r2;

        $r1 = new android.database.sqlite.SQLiteDebug$PagerStats;

        specialinvoke $r1.<android.database.sqlite.SQLiteDebug$PagerStats: void <init>()>();

        staticinvoke <android.database.sqlite.SQLiteDebug: void nativeGetPagerStats(android.database.sqlite.SQLiteDebug$PagerStats)>($r1);

        $r2 = staticinvoke <android.database.sqlite.SQLiteDatabase: java.util.ArrayList getDbStats()>();

        $r1.<android.database.sqlite.SQLiteDebug$PagerStats: java.util.ArrayList dbStats> = $r2;

        return $r1;
    }

    private static native void nativeGetPagerStats(android.database.sqlite.SQLiteDebug$PagerStats);

    public static boolean shouldLogSlowQuery(long)
    {
        long l0, $l4;
        int $i1, $i2, $i3;
        java.lang.String $r0;
        byte $b5;
        boolean z0;

        l0 := @parameter0: long;

        $i1 = staticinvoke <android.os.SystemProperties: int getInt(java.lang.String,int)>("db.log.slow_query_threshold", 2147483647);

        $r0 = staticinvoke <android.database.sqlite.SQLiteDebug$NoPreloadHolder: java.lang.String access$000()>();

        $i2 = staticinvoke <android.os.SystemProperties: int getInt(java.lang.String,int)>($r0, 2147483647);

        $i3 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i2);

        $l4 = (long) $i3;

        $b5 = l0 cmp $l4;

        if $b5 < 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }
}
