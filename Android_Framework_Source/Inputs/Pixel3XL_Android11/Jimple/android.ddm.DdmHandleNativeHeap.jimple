public class android.ddm.DdmHandleNativeHeap extends org.apache.harmony.dalvik.ddmc.ChunkHandler
{
    public static final int CHUNK_NHGT;
    private static android.ddm.DdmHandleNativeHeap mInstance;

    static void <clinit>()
    {
        int $i0;
        android.ddm.DdmHandleNativeHeap $r0;

        $i0 = staticinvoke <android.ddm.DdmHandleNativeHeap: int type(java.lang.String)>("NHGT");

        <android.ddm.DdmHandleNativeHeap: int CHUNK_NHGT> = $i0;

        $r0 = new android.ddm.DdmHandleNativeHeap;

        specialinvoke $r0.<android.ddm.DdmHandleNativeHeap: void <init>()>();

        <android.ddm.DdmHandleNativeHeap: android.ddm.DdmHandleNativeHeap mInstance> = $r0;

        return;
    }

    private void <init>()
    {
        android.ddm.DdmHandleNativeHeap r0;

        r0 := @this: android.ddm.DdmHandleNativeHeap;

        specialinvoke r0.<org.apache.harmony.dalvik.ddmc.ChunkHandler: void <init>()>();

        return;
    }

    private native byte[] getLeakInfo();

    private org.apache.harmony.dalvik.ddmc.Chunk handleNHGT(org.apache.harmony.dalvik.ddmc.Chunk)
    {
        android.ddm.DdmHandleNativeHeap r0;
        byte[] r1;
        org.apache.harmony.dalvik.ddmc.Chunk $r2, $r8, r9;
        java.lang.StringBuilder $r3;
        int $i0, $i2, $i3;
        java.lang.String $r7;

        r0 := @this: android.ddm.DdmHandleNativeHeap;

        r9 := @parameter0: org.apache.harmony.dalvik.ddmc.Chunk;

        r1 = specialinvoke r0.<android.ddm.DdmHandleNativeHeap: byte[] getLeakInfo()>();

        if r1 == null goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Sending ");

        $i0 = lengthof r1;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes");

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ddm-nativeheap", $r7);

        $r8 = new org.apache.harmony.dalvik.ddmc.Chunk;

        $i2 = staticinvoke <org.apache.harmony.dalvik.ddmc.ChunkHandler: int type(java.lang.String)>("NHGT");

        $i3 = lengthof r1;

        specialinvoke $r8.<org.apache.harmony.dalvik.ddmc.Chunk: void <init>(int,byte[],int,int)>($i2, r1, 0, $i3);

        return $r8;

     label1:
        $r2 = staticinvoke <android.ddm.DdmHandleNativeHeap: org.apache.harmony.dalvik.ddmc.Chunk createFailChunk(int,java.lang.String)>(1, "Something went wrong");

        return $r2;
    }

    public static void register()
    {
        android.ddm.DdmHandleNativeHeap $r0;
        int $i0;

        $i0 = <android.ddm.DdmHandleNativeHeap: int CHUNK_NHGT>;

        $r0 = <android.ddm.DdmHandleNativeHeap: android.ddm.DdmHandleNativeHeap mInstance>;

        staticinvoke <org.apache.harmony.dalvik.ddmc.DdmServer: void registerHandler(int,org.apache.harmony.dalvik.ddmc.ChunkHandler)>($i0, $r0);

        return;
    }

    public void connected()
    {
        android.ddm.DdmHandleNativeHeap r0;

        r0 := @this: android.ddm.DdmHandleNativeHeap;

        return;
    }

    public void disconnected()
    {
        android.ddm.DdmHandleNativeHeap r0;

        r0 := @this: android.ddm.DdmHandleNativeHeap;

        return;
    }

    public org.apache.harmony.dalvik.ddmc.Chunk handleChunk(org.apache.harmony.dalvik.ddmc.Chunk)
    {
        android.ddm.DdmHandleNativeHeap r0;
        int i0, $i1, $i3;
        java.lang.StringBuilder $r2, $r8;
        java.lang.String $r4, $r7, $r10, $r13;
        java.lang.RuntimeException $r12;
        org.apache.harmony.dalvik.ddmc.Chunk $r14, r15;

        r0 := @this: android.ddm.DdmHandleNativeHeap;

        r15 := @parameter0: org.apache.harmony.dalvik.ddmc.Chunk;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Handling ");

        $i1 = r15.<org.apache.harmony.dalvik.ddmc.Chunk: int type>;

        $r4 = staticinvoke <android.ddm.DdmHandleNativeHeap: java.lang.String name(int)>($i1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" chunk");

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ddm-nativeheap", $r7);

        i0 = r15.<org.apache.harmony.dalvik.ddmc.Chunk: int type>;

        $i3 = <android.ddm.DdmHandleNativeHeap: int CHUNK_NHGT>;

        if i0 != $i3 goto label1;

        $r14 = specialinvoke r0.<android.ddm.DdmHandleNativeHeap: org.apache.harmony.dalvik.ddmc.Chunk handleNHGT(org.apache.harmony.dalvik.ddmc.Chunk)>(r15);

        return $r14;

     label1:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown packet ");

        $r10 = staticinvoke <org.apache.harmony.dalvik.ddmc.ChunkHandler: java.lang.String name(int)>(i0);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = new java.lang.RuntimeException;

        $r13 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.String)>($r13);

        throw $r12;
    }
}
