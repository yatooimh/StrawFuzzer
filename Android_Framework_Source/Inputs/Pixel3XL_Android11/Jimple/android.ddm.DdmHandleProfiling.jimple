public class android.ddm.DdmHandleProfiling extends org.apache.harmony.dalvik.ddmc.ChunkHandler
{
    public static final int CHUNK_MPRE;
    public static final int CHUNK_MPRQ;
    public static final int CHUNK_MPRS;
    public static final int CHUNK_MPSE;
    public static final int CHUNK_MPSS;
    public static final int CHUNK_SPSE;
    public static final int CHUNK_SPSS;
    private static final boolean DEBUG;
    private static android.ddm.DdmHandleProfiling mInstance;

    static void <clinit>()
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        android.ddm.DdmHandleProfiling $r0;

        <android.ddm.DdmHandleProfiling: boolean DEBUG> = 0;

        $i0 = staticinvoke <android.ddm.DdmHandleProfiling: int type(java.lang.String)>("MPRS");

        <android.ddm.DdmHandleProfiling: int CHUNK_MPRS> = $i0;

        $i1 = staticinvoke <android.ddm.DdmHandleProfiling: int type(java.lang.String)>("MPRE");

        <android.ddm.DdmHandleProfiling: int CHUNK_MPRE> = $i1;

        $i2 = staticinvoke <android.ddm.DdmHandleProfiling: int type(java.lang.String)>("MPSS");

        <android.ddm.DdmHandleProfiling: int CHUNK_MPSS> = $i2;

        $i3 = staticinvoke <android.ddm.DdmHandleProfiling: int type(java.lang.String)>("MPSE");

        <android.ddm.DdmHandleProfiling: int CHUNK_MPSE> = $i3;

        $i4 = staticinvoke <android.ddm.DdmHandleProfiling: int type(java.lang.String)>("MPRQ");

        <android.ddm.DdmHandleProfiling: int CHUNK_MPRQ> = $i4;

        $i5 = staticinvoke <android.ddm.DdmHandleProfiling: int type(java.lang.String)>("SPSS");

        <android.ddm.DdmHandleProfiling: int CHUNK_SPSS> = $i5;

        $i6 = staticinvoke <android.ddm.DdmHandleProfiling: int type(java.lang.String)>("SPSE");

        <android.ddm.DdmHandleProfiling: int CHUNK_SPSE> = $i6;

        $r0 = new android.ddm.DdmHandleProfiling;

        specialinvoke $r0.<android.ddm.DdmHandleProfiling: void <init>()>();

        <android.ddm.DdmHandleProfiling: android.ddm.DdmHandleProfiling mInstance> = $r0;

        return;
    }

    private void <init>()
    {
        android.ddm.DdmHandleProfiling r0;

        r0 := @this: android.ddm.DdmHandleProfiling;

        specialinvoke r0.<org.apache.harmony.dalvik.ddmc.ChunkHandler: void <init>()>();

        return;
    }

    private org.apache.harmony.dalvik.ddmc.Chunk handleMPRE(org.apache.harmony.dalvik.ddmc.Chunk)
    {
        android.ddm.DdmHandleProfiling r0;
        byte $b0;
        org.apache.harmony.dalvik.ddmc.Chunk $r2, r9;
        int $i1, $i2;
        java.lang.RuntimeException $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r6, $r8;
        boolean z0;
        byte[] r11;

        r0 := @this: android.ddm.DdmHandleProfiling;

        r9 := @parameter0: org.apache.harmony.dalvik.ddmc.Chunk;

     label1:
        staticinvoke <android.os.Debug: void stopMethodTracing()>();

     label2:
        z0 = 0;

        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Method profiling end failed: ");

        $r6 = virtualinvoke $r3.<java.lang.RuntimeException: java.lang.String getMessage()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ddm-heap", $r8);

        z0 = 1;

     label4:
        r11 = newarray (byte)[1];

        $b0 = (byte) z0;

        r11[0] = $b0;

        $r2 = new org.apache.harmony.dalvik.ddmc.Chunk;

        $i2 = <android.ddm.DdmHandleProfiling: int CHUNK_MPRE>;

        $i1 = lengthof r11;

        specialinvoke $r2.<org.apache.harmony.dalvik.ddmc.Chunk: void <init>(int,byte[],int,int)>($i2, r11, 0, $i1);

        return $r2;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    private org.apache.harmony.dalvik.ddmc.Chunk handleMPRQ(org.apache.harmony.dalvik.ddmc.Chunk)
    {
        android.ddm.DdmHandleProfiling r0;
        int i0, $i3, $i4;
        byte $b1, $b2;
        org.apache.harmony.dalvik.ddmc.Chunk $r1, r2;
        byte[] r3;

        r0 := @this: android.ddm.DdmHandleProfiling;

        r2 := @parameter0: org.apache.harmony.dalvik.ddmc.Chunk;

        i0 = staticinvoke <android.os.Debug: int getMethodTracingMode()>();

        r3 = newarray (byte)[1];

        $b1 = (byte) i0;

        $b2 = (byte) $b1;

        r3[0] = $b2;

        $r1 = new org.apache.harmony.dalvik.ddmc.Chunk;

        $i4 = <android.ddm.DdmHandleProfiling: int CHUNK_MPRQ>;

        $i3 = lengthof r3;

        specialinvoke $r1.<org.apache.harmony.dalvik.ddmc.Chunk: void <init>(int,byte[],int,int)>($i4, r3, 0, $i3);

        return $r1;
    }

    private org.apache.harmony.dalvik.ddmc.Chunk handleMPRS(org.apache.harmony.dalvik.ddmc.Chunk)
    {
        android.ddm.DdmHandleProfiling r0;
        int i0, i1, $i2;
        java.lang.RuntimeException $r1;
        java.lang.String $r2, r6;
        org.apache.harmony.dalvik.ddmc.Chunk $r3, r4;
        java.nio.ByteBuffer r5;

        r0 := @this: android.ddm.DdmHandleProfiling;

        r4 := @parameter0: org.apache.harmony.dalvik.ddmc.Chunk;

        r5 = staticinvoke <android.ddm.DdmHandleProfiling: java.nio.ByteBuffer wrapChunk(org.apache.harmony.dalvik.ddmc.Chunk)>(r4);

        i0 = virtualinvoke r5.<java.nio.ByteBuffer: int getInt()>();

        i1 = virtualinvoke r5.<java.nio.ByteBuffer: int getInt()>();

        $i2 = virtualinvoke r5.<java.nio.ByteBuffer: int getInt()>();

        r6 = staticinvoke <android.ddm.DdmHandleProfiling: java.lang.String getString(java.nio.ByteBuffer,int)>(r5, $i2);

     label1:
        staticinvoke <android.os.Debug: void startMethodTracing(java.lang.String,int,int)>(r6, i0, i1);

     label2:
        return null;

     label3:
        $r1 := @caughtexception;

        $r2 = virtualinvoke $r1.<java.lang.RuntimeException: java.lang.String getMessage()>();

        $r3 = staticinvoke <android.ddm.DdmHandleProfiling: org.apache.harmony.dalvik.ddmc.Chunk createFailChunk(int,java.lang.String)>(1, $r2);

        return $r3;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    private org.apache.harmony.dalvik.ddmc.Chunk handleMPSEOrSPSE(org.apache.harmony.dalvik.ddmc.Chunk, java.lang.String)
    {
        android.ddm.DdmHandleProfiling r0;
        java.lang.String r1, $r7, $r9, $r10;
        java.lang.RuntimeException $r3;
        java.lang.StringBuilder $r4;
        org.apache.harmony.dalvik.ddmc.Chunk $r11, r12;

        r0 := @this: android.ddm.DdmHandleProfiling;

        r12 := @parameter0: org.apache.harmony.dalvik.ddmc.Chunk;

        r1 := @parameter1: java.lang.String;

     label1:
        staticinvoke <android.os.Debug: void stopMethodTracing()>();

     label2:
        return null;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" prof stream end failed: ");

        $r7 = virtualinvoke $r3.<java.lang.RuntimeException: java.lang.String getMessage()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ddm-heap", $r9);

        $r10 = virtualinvoke $r3.<java.lang.RuntimeException: java.lang.String getMessage()>();

        $r11 = staticinvoke <android.ddm.DdmHandleProfiling: org.apache.harmony.dalvik.ddmc.Chunk createFailChunk(int,java.lang.String)>(1, $r10);

        return $r11;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    private org.apache.harmony.dalvik.ddmc.Chunk handleMPSS(org.apache.harmony.dalvik.ddmc.Chunk)
    {
        android.ddm.DdmHandleProfiling r0;
        int i0, i1;
        java.lang.RuntimeException $r1;
        java.lang.String $r2;
        org.apache.harmony.dalvik.ddmc.Chunk $r3, r4;
        java.nio.ByteBuffer r5;

        r0 := @this: android.ddm.DdmHandleProfiling;

        r4 := @parameter0: org.apache.harmony.dalvik.ddmc.Chunk;

        r5 = staticinvoke <android.ddm.DdmHandleProfiling: java.nio.ByteBuffer wrapChunk(org.apache.harmony.dalvik.ddmc.Chunk)>(r4);

        i0 = virtualinvoke r5.<java.nio.ByteBuffer: int getInt()>();

        i1 = virtualinvoke r5.<java.nio.ByteBuffer: int getInt()>();

     label1:
        staticinvoke <android.os.Debug: void startMethodTracingDdms(int,int,boolean,int)>(i0, i1, 0, 0);

     label2:
        return null;

     label3:
        $r1 := @caughtexception;

        $r2 = virtualinvoke $r1.<java.lang.RuntimeException: java.lang.String getMessage()>();

        $r3 = staticinvoke <android.ddm.DdmHandleProfiling: org.apache.harmony.dalvik.ddmc.Chunk createFailChunk(int,java.lang.String)>(1, $r2);

        return $r3;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    private org.apache.harmony.dalvik.ddmc.Chunk handleSPSS(org.apache.harmony.dalvik.ddmc.Chunk)
    {
        android.ddm.DdmHandleProfiling r0;
        int i0, i1, i2;
        java.lang.RuntimeException $r1;
        java.lang.String $r2;
        org.apache.harmony.dalvik.ddmc.Chunk $r3, r4;
        java.nio.ByteBuffer r5;

        r0 := @this: android.ddm.DdmHandleProfiling;

        r4 := @parameter0: org.apache.harmony.dalvik.ddmc.Chunk;

        r5 = staticinvoke <android.ddm.DdmHandleProfiling: java.nio.ByteBuffer wrapChunk(org.apache.harmony.dalvik.ddmc.Chunk)>(r4);

        i0 = virtualinvoke r5.<java.nio.ByteBuffer: int getInt()>();

        i1 = virtualinvoke r5.<java.nio.ByteBuffer: int getInt()>();

        i2 = virtualinvoke r5.<java.nio.ByteBuffer: int getInt()>();

     label1:
        staticinvoke <android.os.Debug: void startMethodTracingDdms(int,int,boolean,int)>(i0, i1, 1, i2);

     label2:
        return null;

     label3:
        $r1 := @caughtexception;

        $r2 = virtualinvoke $r1.<java.lang.RuntimeException: java.lang.String getMessage()>();

        $r3 = staticinvoke <android.ddm.DdmHandleProfiling: org.apache.harmony.dalvik.ddmc.Chunk createFailChunk(int,java.lang.String)>(1, $r2);

        return $r3;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public static void register()
    {
        android.ddm.DdmHandleProfiling $r0, $r1, $r2, $r3, $r4, $r5, $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;

        $i0 = <android.ddm.DdmHandleProfiling: int CHUNK_MPRS>;

        $r0 = <android.ddm.DdmHandleProfiling: android.ddm.DdmHandleProfiling mInstance>;

        staticinvoke <org.apache.harmony.dalvik.ddmc.DdmServer: void registerHandler(int,org.apache.harmony.dalvik.ddmc.ChunkHandler)>($i0, $r0);

        $i1 = <android.ddm.DdmHandleProfiling: int CHUNK_MPRE>;

        $r1 = <android.ddm.DdmHandleProfiling: android.ddm.DdmHandleProfiling mInstance>;

        staticinvoke <org.apache.harmony.dalvik.ddmc.DdmServer: void registerHandler(int,org.apache.harmony.dalvik.ddmc.ChunkHandler)>($i1, $r1);

        $i2 = <android.ddm.DdmHandleProfiling: int CHUNK_MPSS>;

        $r2 = <android.ddm.DdmHandleProfiling: android.ddm.DdmHandleProfiling mInstance>;

        staticinvoke <org.apache.harmony.dalvik.ddmc.DdmServer: void registerHandler(int,org.apache.harmony.dalvik.ddmc.ChunkHandler)>($i2, $r2);

        $i3 = <android.ddm.DdmHandleProfiling: int CHUNK_MPSE>;

        $r3 = <android.ddm.DdmHandleProfiling: android.ddm.DdmHandleProfiling mInstance>;

        staticinvoke <org.apache.harmony.dalvik.ddmc.DdmServer: void registerHandler(int,org.apache.harmony.dalvik.ddmc.ChunkHandler)>($i3, $r3);

        $i4 = <android.ddm.DdmHandleProfiling: int CHUNK_MPRQ>;

        $r4 = <android.ddm.DdmHandleProfiling: android.ddm.DdmHandleProfiling mInstance>;

        staticinvoke <org.apache.harmony.dalvik.ddmc.DdmServer: void registerHandler(int,org.apache.harmony.dalvik.ddmc.ChunkHandler)>($i4, $r4);

        $i5 = <android.ddm.DdmHandleProfiling: int CHUNK_SPSS>;

        $r5 = <android.ddm.DdmHandleProfiling: android.ddm.DdmHandleProfiling mInstance>;

        staticinvoke <org.apache.harmony.dalvik.ddmc.DdmServer: void registerHandler(int,org.apache.harmony.dalvik.ddmc.ChunkHandler)>($i5, $r5);

        $i6 = <android.ddm.DdmHandleProfiling: int CHUNK_SPSE>;

        $r6 = <android.ddm.DdmHandleProfiling: android.ddm.DdmHandleProfiling mInstance>;

        staticinvoke <org.apache.harmony.dalvik.ddmc.DdmServer: void registerHandler(int,org.apache.harmony.dalvik.ddmc.ChunkHandler)>($i6, $r6);

        return;
    }

    public void connected()
    {
        android.ddm.DdmHandleProfiling r0;

        r0 := @this: android.ddm.DdmHandleProfiling;

        return;
    }

    public void disconnected()
    {
        android.ddm.DdmHandleProfiling r0;

        r0 := @this: android.ddm.DdmHandleProfiling;

        return;
    }

    public org.apache.harmony.dalvik.ddmc.Chunk handleChunk(org.apache.harmony.dalvik.ddmc.Chunk)
    {
        android.ddm.DdmHandleProfiling r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.StringBuilder $r1;
        java.lang.String $r3, $r6;
        java.lang.RuntimeException $r5;
        org.apache.harmony.dalvik.ddmc.Chunk $r7, $r8, $r9, $r10, $r11, $r12, $r13, r14;

        r0 := @this: android.ddm.DdmHandleProfiling;

        r14 := @parameter0: org.apache.harmony.dalvik.ddmc.Chunk;

        i0 = r14.<org.apache.harmony.dalvik.ddmc.Chunk: int type>;

        $i1 = <android.ddm.DdmHandleProfiling: int CHUNK_MPRS>;

        if i0 != $i1 goto label1;

        $r13 = specialinvoke r0.<android.ddm.DdmHandleProfiling: org.apache.harmony.dalvik.ddmc.Chunk handleMPRS(org.apache.harmony.dalvik.ddmc.Chunk)>(r14);

        return $r13;

     label1:
        $i2 = <android.ddm.DdmHandleProfiling: int CHUNK_MPRE>;

        if i0 != $i2 goto label2;

        $r12 = specialinvoke r0.<android.ddm.DdmHandleProfiling: org.apache.harmony.dalvik.ddmc.Chunk handleMPRE(org.apache.harmony.dalvik.ddmc.Chunk)>(r14);

        return $r12;

     label2:
        $i3 = <android.ddm.DdmHandleProfiling: int CHUNK_MPSS>;

        if i0 != $i3 goto label3;

        $r11 = specialinvoke r0.<android.ddm.DdmHandleProfiling: org.apache.harmony.dalvik.ddmc.Chunk handleMPSS(org.apache.harmony.dalvik.ddmc.Chunk)>(r14);

        return $r11;

     label3:
        $i4 = <android.ddm.DdmHandleProfiling: int CHUNK_MPSE>;

        if i0 != $i4 goto label4;

        $r10 = specialinvoke r0.<android.ddm.DdmHandleProfiling: org.apache.harmony.dalvik.ddmc.Chunk handleMPSEOrSPSE(org.apache.harmony.dalvik.ddmc.Chunk,java.lang.String)>(r14, "Method");

        return $r10;

     label4:
        $i5 = <android.ddm.DdmHandleProfiling: int CHUNK_MPRQ>;

        if i0 != $i5 goto label5;

        $r9 = specialinvoke r0.<android.ddm.DdmHandleProfiling: org.apache.harmony.dalvik.ddmc.Chunk handleMPRQ(org.apache.harmony.dalvik.ddmc.Chunk)>(r14);

        return $r9;

     label5:
        $i6 = <android.ddm.DdmHandleProfiling: int CHUNK_SPSS>;

        if i0 != $i6 goto label6;

        $r8 = specialinvoke r0.<android.ddm.DdmHandleProfiling: org.apache.harmony.dalvik.ddmc.Chunk handleSPSS(org.apache.harmony.dalvik.ddmc.Chunk)>(r14);

        return $r8;

     label6:
        $i7 = <android.ddm.DdmHandleProfiling: int CHUNK_SPSE>;

        if i0 != $i7 goto label7;

        $r7 = specialinvoke r0.<android.ddm.DdmHandleProfiling: org.apache.harmony.dalvik.ddmc.Chunk handleMPSEOrSPSE(org.apache.harmony.dalvik.ddmc.Chunk,java.lang.String)>(r14, "Sample");

        return $r7;

     label7:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown packet ");

        $r3 = staticinvoke <org.apache.harmony.dalvik.ddmc.ChunkHandler: java.lang.String name(int)>(i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = new java.lang.RuntimeException;

        $r6 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>($r6);

        throw $r5;
    }
}
