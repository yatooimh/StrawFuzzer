public class android.ddm.DdmHandleViewDebug extends org.apache.harmony.dalvik.ddmc.ChunkHandler
{
    private static final int CHUNK_VULW;
    private static final int CHUNK_VUOP;
    private static final int CHUNK_VURT;
    private static final int ERR_EXCEPTION;
    private static final int ERR_INVALID_OP;
    private static final int ERR_INVALID_PARAM;
    private static final java.lang.String TAG;
    private static final int VUOP_CAPTURE_VIEW;
    private static final int VUOP_DUMP_DISPLAYLIST;
    private static final int VUOP_INVOKE_VIEW_METHOD;
    private static final int VUOP_PROFILE_VIEW;
    private static final int VUOP_SET_LAYOUT_PARAMETER;
    private static final int VURT_CAPTURE_LAYERS;
    private static final int VURT_DUMP_HIERARCHY;
    private static final int VURT_DUMP_THEME;
    private static final android.ddm.DdmHandleViewDebug sInstance;

    static void <clinit>()
    {
        int $i0, $i1, $i2;
        android.ddm.DdmHandleViewDebug $r0;

        <android.ddm.DdmHandleViewDebug: int VURT_DUMP_THEME> = 3;

        <android.ddm.DdmHandleViewDebug: int VURT_DUMP_HIERARCHY> = 1;

        <android.ddm.DdmHandleViewDebug: int VURT_CAPTURE_LAYERS> = 2;

        <android.ddm.DdmHandleViewDebug: int VUOP_SET_LAYOUT_PARAMETER> = 5;

        <android.ddm.DdmHandleViewDebug: int VUOP_PROFILE_VIEW> = 3;

        <android.ddm.DdmHandleViewDebug: int VUOP_INVOKE_VIEW_METHOD> = 4;

        <android.ddm.DdmHandleViewDebug: int VUOP_DUMP_DISPLAYLIST> = 2;

        <android.ddm.DdmHandleViewDebug: int VUOP_CAPTURE_VIEW> = 1;

        <android.ddm.DdmHandleViewDebug: java.lang.String TAG> = "DdmViewDebug";

        <android.ddm.DdmHandleViewDebug: int ERR_INVALID_PARAM> = -2;

        <android.ddm.DdmHandleViewDebug: int ERR_INVALID_OP> = -1;

        <android.ddm.DdmHandleViewDebug: int ERR_EXCEPTION> = -3;

        $i0 = staticinvoke <android.ddm.DdmHandleViewDebug: int type(java.lang.String)>("VULW");

        <android.ddm.DdmHandleViewDebug: int CHUNK_VULW> = $i0;

        $i1 = staticinvoke <android.ddm.DdmHandleViewDebug: int type(java.lang.String)>("VURT");

        <android.ddm.DdmHandleViewDebug: int CHUNK_VURT> = $i1;

        $i2 = staticinvoke <android.ddm.DdmHandleViewDebug: int type(java.lang.String)>("VUOP");

        <android.ddm.DdmHandleViewDebug: int CHUNK_VUOP> = $i2;

        $r0 = new android.ddm.DdmHandleViewDebug;

        specialinvoke $r0.<android.ddm.DdmHandleViewDebug: void <init>()>();

        <android.ddm.DdmHandleViewDebug: android.ddm.DdmHandleViewDebug sInstance> = $r0;

        return;
    }

    private void <init>()
    {
        android.ddm.DdmHandleViewDebug r0;

        r0 := @this: android.ddm.DdmHandleViewDebug;

        specialinvoke r0.<org.apache.harmony.dalvik.ddmc.ChunkHandler: void <init>()>();

        return;
    }

    private org.apache.harmony.dalvik.ddmc.Chunk captureLayers(android.view.View)
    {
        android.ddm.DdmHandleViewDebug r0;
        int $i0, $i1;
        java.lang.Throwable $r4, $r5, $r6, $r11, $r12;
        java.lang.String $r8, $r10;
        android.view.View r13;
        byte[] r17;
        org.apache.harmony.dalvik.ddmc.Chunk r21, r26;
        java.io.ByteArrayOutputStream r24;
        java.io.DataOutputStream r25;
        java.lang.StringBuilder r27;
        java.io.IOException r28;

        r0 := @this: android.ddm.DdmHandleViewDebug;

        r13 := @parameter0: android.view.View;

        r24 = new java.io.ByteArrayOutputStream;

        specialinvoke r24.<java.io.ByteArrayOutputStream: void <init>(int)>(1024);

        r25 = new java.io.DataOutputStream;

        specialinvoke r25.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>(r24);

     label01:
        staticinvoke <android.view.ViewDebug: void captureLayers(android.view.View,java.io.DataOutputStream)>(r13, r25);

     label02:
        virtualinvoke r25.<java.io.DataOutputStream: void close()>();

     label03:
        goto label05;

     label04:
        $r4 := @caughtexception;

     label05:
        r17 = virtualinvoke r24.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        r26 = new org.apache.harmony.dalvik.ddmc.Chunk;

        $i1 = <android.ddm.DdmHandleViewDebug: int CHUNK_VURT>;

        $i0 = lengthof r17;

        specialinvoke r26.<org.apache.harmony.dalvik.ddmc.Chunk: void <init>(int,byte[],int,int)>($i1, r17, 0, $i0);

        return r26;

     label06:
        $r12 := @caughtexception;

        goto label13;

     label07:
        $r6 := @caughtexception;

     label08:
        r27 = new java.lang.StringBuilder;

        specialinvoke r27.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected error while obtaining view hierarchy: ");

        r28 = (java.io.IOException) $r6;

        $r8 = virtualinvoke r28.<java.io.IOException: java.lang.String getMessage()>();

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke r27.<java.lang.StringBuilder: java.lang.String toString()>();

        r21 = staticinvoke <android.ddm.DdmHandleViewDebug: org.apache.harmony.dalvik.ddmc.Chunk createFailChunk(int,java.lang.String)>(1, $r10);

     label09:
        virtualinvoke r25.<java.io.DataOutputStream: void close()>();

     label10:
        goto label12;

     label11:
        $r11 := @caughtexception;

     label12:
        return r21;

     label13:
        virtualinvoke r25.<java.io.DataOutputStream: void close()>();

     label14:
        goto label16;

     label15:
        $r5 := @caughtexception;

     label16:
        throw $r12;

        catch java.io.IOException from label01 to label02 with label07;
        catch java.lang.Throwable from label01 to label02 with label06;
        catch java.io.IOException from label02 to label03 with label04;
        catch java.lang.Throwable from label08 to label09 with label06;
        catch java.io.IOException from label09 to label10 with label11;
        catch java.io.IOException from label13 to label14 with label15;
    }

    private org.apache.harmony.dalvik.ddmc.Chunk captureView(android.view.View, android.view.View)
    {
        android.ddm.DdmHandleViewDebug r0;
        int $i0, $i1;
        java.lang.Throwable $r4;
        java.lang.String $r7, $r9;
        org.apache.harmony.dalvik.ddmc.Chunk $r10, r17;
        android.view.View r11, r12;
        byte[] r13;
        java.io.ByteArrayOutputStream r16;
        java.lang.StringBuilder r18;
        java.io.IOException r19;

        r0 := @this: android.ddm.DdmHandleViewDebug;

        r11 := @parameter0: android.view.View;

        r12 := @parameter1: android.view.View;

        r16 = new java.io.ByteArrayOutputStream;

        specialinvoke r16.<java.io.ByteArrayOutputStream: void <init>(int)>(1024);

     label1:
        staticinvoke <android.view.ViewDebug: void capture(android.view.View,java.io.OutputStream,android.view.View)>(r11, r16, r12);

     label2:
        r13 = virtualinvoke r16.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        r17 = new org.apache.harmony.dalvik.ddmc.Chunk;

        $i1 = <android.ddm.DdmHandleViewDebug: int CHUNK_VUOP>;

        $i0 = lengthof r13;

        specialinvoke r17.<org.apache.harmony.dalvik.ddmc.Chunk: void <init>(int,byte[],int,int)>($i1, r13, 0, $i0);

        return r17;

     label3:
        $r4 := @caughtexception;

        r18 = new java.lang.StringBuilder;

        specialinvoke r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected error while capturing view: ");

        r19 = (java.io.IOException) $r4;

        $r7 = virtualinvoke r19.<java.io.IOException: java.lang.String getMessage()>();

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke r18.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = staticinvoke <android.ddm.DdmHandleViewDebug: org.apache.harmony.dalvik.ddmc.Chunk createFailChunk(int,java.lang.String)>(1, $r9);

        return $r10;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private org.apache.harmony.dalvik.ddmc.Chunk dumpDisplayLists(android.view.View, android.view.View)
    {
        android.ddm.DdmHandleViewDebug r0;
        android.view.View r1, r2;
        android.ddm.DdmHandleViewDebug$1 $r3;

        r0 := @this: android.ddm.DdmHandleViewDebug;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.View;

        $r3 = new android.ddm.DdmHandleViewDebug$1;

        specialinvoke $r3.<android.ddm.DdmHandleViewDebug$1: void <init>(android.ddm.DdmHandleViewDebug,android.view.View,android.view.View)>(r0, r1, r2);

        virtualinvoke r1.<android.view.View: boolean post(java.lang.Runnable)>($r3);

        return null;
    }

    private org.apache.harmony.dalvik.ddmc.Chunk dumpHierarchy(android.view.View, java.nio.ByteBuffer)
    {
        android.ddm.DdmHandleViewDebug r0;
        long l0, l1, $l4;
        int $i2, $i3, $i6, $i7, $i8;
        boolean $z0, z1, z2, z3;
        java.lang.String $r4, $r9, $r11;
        java.lang.Throwable $r6;
        org.apache.harmony.dalvik.ddmc.Chunk $r12, r23;
        android.view.View r13;
        java.nio.ByteBuffer r14;
        byte[] r18;
        java.io.ByteArrayOutputStream r21;
        java.lang.StringBuilder r22, r24;
        java.lang.Exception r25;

        r0 := @this: android.ddm.DdmHandleViewDebug;

        r13 := @parameter0: android.view.View;

        r14 := @parameter1: java.nio.ByteBuffer;

        $i2 = virtualinvoke r14.<java.nio.ByteBuffer: int getInt()>();

        if $i2 <= 0 goto label01;

        z1 = 1;

        goto label02;

     label01:
        z1 = 0;

     label02:
        $i3 = virtualinvoke r14.<java.nio.ByteBuffer: int getInt()>();

        if $i3 <= 0 goto label03;

        z2 = 1;

        goto label04;

     label03:
        z2 = 0;

     label04:
        $z0 = virtualinvoke r14.<java.nio.ByteBuffer: boolean hasRemaining()>();

        if $z0 == 0 goto label05;

        $i8 = virtualinvoke r14.<java.nio.ByteBuffer: int getInt()>();

        if $i8 <= 0 goto label05;

        z3 = 1;

        goto label06;

     label05:
        z3 = 0;

     label06:
        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r21 = new java.io.ByteArrayOutputStream;

        specialinvoke r21.<java.io.ByteArrayOutputStream: void <init>(int)>(2097152);

        if z3 == 0 goto label09;

     label07:
        staticinvoke <android.view.ViewDebug: void dumpv2(android.view.View,java.io.ByteArrayOutputStream)>(r13, r21);

     label08:
        goto label10;

     label09:
        staticinvoke <android.view.ViewDebug: void dump(android.view.View,boolean,boolean,java.io.OutputStream)>(r13, z1, z2, r21);

     label10:
        l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r22 = new java.lang.StringBuilder;

        specialinvoke r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Time to obtain view hierarchy (ms): ");

        $l4 = l1 - l0;

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l4);

        $r4 = virtualinvoke r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("DdmViewDebug", $r4);

        r18 = virtualinvoke r21.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        r23 = new org.apache.harmony.dalvik.ddmc.Chunk;

        $i7 = <android.ddm.DdmHandleViewDebug: int CHUNK_VURT>;

        $i6 = lengthof r18;

        specialinvoke r23.<org.apache.harmony.dalvik.ddmc.Chunk: void <init>(int,byte[],int,int)>($i7, r18, 0, $i6);

        return r23;

     label11:
        $r6 := @caughtexception;

        r24 = new java.lang.StringBuilder;

        specialinvoke r24.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected error while obtaining view hierarchy: ");

        r25 = (java.lang.Exception) $r6;

        $r9 = virtualinvoke r25.<java.lang.Exception: java.lang.String getMessage()>();

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke r24.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = staticinvoke <android.ddm.DdmHandleViewDebug: org.apache.harmony.dalvik.ddmc.Chunk createFailChunk(int,java.lang.String)>(1, $r11);

        return $r12;

        catch java.io.IOException from label07 to label08 with label11;
        catch java.lang.InterruptedException from label07 to label08 with label11;
        catch java.io.IOException from label09 to label10 with label11;
        catch java.lang.InterruptedException from label09 to label10 with label11;
    }

    private org.apache.harmony.dalvik.ddmc.Chunk dumpTheme(android.view.View)
    {
        android.ddm.DdmHandleViewDebug r0;
        int $i0, $i1;
        java.lang.Throwable $r3;
        java.lang.String $r6, $r8;
        org.apache.harmony.dalvik.ddmc.Chunk $r9, r16;
        android.view.View r10;
        byte[] r12;
        java.io.ByteArrayOutputStream r15;
        java.lang.StringBuilder r17;
        java.io.IOException r18;

        r0 := @this: android.ddm.DdmHandleViewDebug;

        r10 := @parameter0: android.view.View;

        r15 = new java.io.ByteArrayOutputStream;

        specialinvoke r15.<java.io.ByteArrayOutputStream: void <init>(int)>(1024);

     label1:
        staticinvoke <android.view.ViewDebug: void dumpTheme(android.view.View,java.io.OutputStream)>(r10, r15);

     label2:
        r12 = virtualinvoke r15.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        r16 = new org.apache.harmony.dalvik.ddmc.Chunk;

        $i1 = <android.ddm.DdmHandleViewDebug: int CHUNK_VURT>;

        $i0 = lengthof r12;

        specialinvoke r16.<org.apache.harmony.dalvik.ddmc.Chunk: void <init>(int,byte[],int,int)>($i1, r12, 0, $i0);

        return r16;

     label3:
        $r3 := @caughtexception;

        r17 = new java.lang.StringBuilder;

        specialinvoke r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected error while dumping the theme: ");

        r18 = (java.io.IOException) $r3;

        $r6 = virtualinvoke r18.<java.io.IOException: java.lang.String getMessage()>();

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke r17.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = staticinvoke <android.ddm.DdmHandleViewDebug: org.apache.harmony.dalvik.ddmc.Chunk createFailChunk(int,java.lang.String)>(1, $r8);

        return $r9;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private android.view.View getRootView(java.nio.ByteBuffer)
    {
        android.ddm.DdmHandleViewDebug r0;
        int $i0;
        android.view.WindowManagerGlobal $r1;
        java.lang.Throwable $r2;
        java.nio.ByteBuffer r3;
        java.lang.String r4;
        android.view.View r5;

        r0 := @this: android.ddm.DdmHandleViewDebug;

        r3 := @parameter0: java.nio.ByteBuffer;

     label1:
        $i0 = virtualinvoke r3.<java.nio.ByteBuffer: int getInt()>();

        r4 = staticinvoke <android.ddm.DdmHandleViewDebug: java.lang.String getString(java.nio.ByteBuffer,int)>(r3, $i0);

        $r1 = staticinvoke <android.view.WindowManagerGlobal: android.view.WindowManagerGlobal getInstance()>();

        r5 = virtualinvoke $r1.<android.view.WindowManagerGlobal: android.view.View getRootView(java.lang.String)>(r4);

     label2:
        return r5;

     label3:
        $r2 := @caughtexception;

        return null;

        catch java.nio.BufferUnderflowException from label1 to label2 with label3;
    }

    private android.view.View getTargetView(android.view.View, java.nio.ByteBuffer)
    {
        android.ddm.DdmHandleViewDebug r0;
        int $i0;
        android.view.View $r1, r3;
        java.lang.Throwable $r2;
        java.nio.ByteBuffer r4;
        java.lang.String r5;

        r0 := @this: android.ddm.DdmHandleViewDebug;

        r3 := @parameter0: android.view.View;

        r4 := @parameter1: java.nio.ByteBuffer;

     label1:
        $i0 = virtualinvoke r4.<java.nio.ByteBuffer: int getInt()>();

        r5 = staticinvoke <android.ddm.DdmHandleViewDebug: java.lang.String getString(java.nio.ByteBuffer,int)>(r4, $i0);

     label2:
        $r1 = staticinvoke <android.view.ViewDebug: android.view.View findView(android.view.View,java.lang.String)>(r3, r5);

        return $r1;

     label3:
        $r2 := @caughtexception;

        return null;

        catch java.nio.BufferUnderflowException from label1 to label2 with label3;
    }

    private org.apache.harmony.dalvik.ddmc.Chunk invokeViewMethod(android.view.View, android.view.View, java.nio.ByteBuffer)
    {
        android.ddm.DdmHandleViewDebug r0;
        java.lang.String r1, $r26, $r31, $r37, $r39, $r46, $r48, $r51, $r53, r65, r66;
        int i0, $i2, $i5, i12;
        java.lang.Object[] r2, r59;
        char c1, $c7;
        boolean $z0, z1;
        java.lang.Class $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19;
        float $f0;
        java.lang.Float $r6;
        short $s3;
        java.lang.Short $r8;
        byte $b4, $b8;
        java.lang.Boolean $r10;
        java.lang.Integer $r12;
        long $l6;
        java.lang.Long $r14;
        double $d0;
        java.lang.Double $r16;
        java.lang.Character $r18;
        java.lang.Byte $r20;
        org.apache.harmony.dalvik.ddmc.Chunk $r32, $r41, $r54;
        java.lang.Exception $r33;
        java.lang.Throwable $r36, $r40, $r42, $r43;
        android.view.View r55, r56;
        java.nio.ByteBuffer r57;
        java.lang.Class[] r58;
        java.lang.reflect.Method r62;
        java.lang.StringBuilder r70, r71, r72, r73, r74;
        java.lang.NoSuchMethodException r75, r76;

        r0 := @this: android.ddm.DdmHandleViewDebug;

        r55 := @parameter0: android.view.View;

        r56 := @parameter1: android.view.View;

        r57 := @parameter2: java.nio.ByteBuffer;

        $i2 = virtualinvoke r57.<java.nio.ByteBuffer: int getInt()>();

        r1 = staticinvoke <android.ddm.DdmHandleViewDebug: java.lang.String getString(java.nio.ByteBuffer,int)>(r57, $i2);

        $z0 = virtualinvoke r57.<java.nio.ByteBuffer: boolean hasRemaining()>();

        if $z0 != 0 goto label01;

        r58 = newarray (java.lang.Class)[0];

        r59 = newarray (java.lang.Object)[0];

        goto label16;

     label01:
        i0 = virtualinvoke r57.<java.nio.ByteBuffer: int getInt()>();

        r58 = newarray (java.lang.Class)[i0];

        r2 = newarray (java.lang.Object)[i0];

        i12 = 0;

     label02:
        if i12 >= i0 goto label15;

        c1 = virtualinvoke r57.<java.nio.ByteBuffer: char getChar()>();

        if c1 == 70 goto label13;

        if c1 == 83 goto label12;

        if c1 == 90 goto label09;

        if c1 == 73 goto label08;

        if c1 == 74 goto label07;

        tableswitch(c1)
        {
            case 66: goto label06;
            case 67: goto label05;
            case 68: goto label04;
            default: goto label03;
        };

     label03:
        r70 = new java.lang.StringBuilder;

        specialinvoke r70.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("arg ");

        virtualinvoke r70.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i12);

        virtualinvoke r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", unrecognized type: ");

        virtualinvoke r70.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c1);

        $r26 = virtualinvoke r70.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("DdmViewDebug", $r26);

        r71 = new java.lang.StringBuilder;

        specialinvoke r71.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported parameter type (");

        virtualinvoke r71.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c1);

        virtualinvoke r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") to invoke view method.");

        $r31 = virtualinvoke r71.<java.lang.StringBuilder: java.lang.String toString()>();

        $r32 = staticinvoke <android.ddm.DdmHandleViewDebug: org.apache.harmony.dalvik.ddmc.Chunk createFailChunk(int,java.lang.String)>(-2, $r31);

        return $r32;

     label04:
        $r15 = <java.lang.Double: java.lang.Class TYPE>;

        r58[i12] = $r15;

        $d0 = virtualinvoke r57.<java.nio.ByteBuffer: double getDouble()>();

        $r16 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        r2[i12] = $r16;

        goto label14;

     label05:
        $r17 = <java.lang.Character: java.lang.Class TYPE>;

        r58[i12] = $r17;

        $c7 = virtualinvoke r57.<java.nio.ByteBuffer: char getChar()>();

        $r18 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c7);

        r2[i12] = $r18;

        goto label14;

     label06:
        $r19 = <java.lang.Byte: java.lang.Class TYPE>;

        r58[i12] = $r19;

        $b8 = virtualinvoke r57.<java.nio.ByteBuffer: byte get()>();

        $r20 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b8);

        r2[i12] = $r20;

        goto label14;

     label07:
        $r13 = <java.lang.Long: java.lang.Class TYPE>;

        r58[i12] = $r13;

        $l6 = virtualinvoke r57.<java.nio.ByteBuffer: long getLong()>();

        $r14 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l6);

        r2[i12] = $r14;

        goto label14;

     label08:
        $r11 = <java.lang.Integer: java.lang.Class TYPE>;

        r58[i12] = $r11;

        $i5 = virtualinvoke r57.<java.nio.ByteBuffer: int getInt()>();

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        r2[i12] = $r12;

        goto label14;

     label09:
        $r9 = <java.lang.Boolean: java.lang.Class TYPE>;

        r58[i12] = $r9;

        $b4 = virtualinvoke r57.<java.nio.ByteBuffer: byte get()>();

        if $b4 != 0 goto label10;

        z1 = 0;

        goto label11;

     label10:
        z1 = 1;

     label11:
        $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z1);

        r2[i12] = $r10;

        goto label14;

     label12:
        $r7 = <java.lang.Short: java.lang.Class TYPE>;

        r58[i12] = $r7;

        $s3 = virtualinvoke r57.<java.nio.ByteBuffer: short getShort()>();

        $r8 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s3);

        r2[i12] = $r8;

        goto label14;

     label13:
        $r5 = <java.lang.Float: java.lang.Class TYPE>;

        r58[i12] = $r5;

        $f0 = virtualinvoke r57.<java.nio.ByteBuffer: float getFloat()>();

        $r6 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        r2[i12] = $r6;

     label14:
        i12 = i12 + 1;

        goto label02;

     label15:
        r59 = r2;

     label16:
        $r3 = virtualinvoke r56.<java.lang.Object: java.lang.Class getClass()>();

        r62 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r1, r58);

     label17:
        staticinvoke <android.view.ViewDebug: java.lang.Object invokeViewMethod(android.view.View,java.lang.reflect.Method,java.lang.Object[])>(r56, r62, r59);

     label18:
        return null;

     label19:
        $r33 := @caughtexception;

        r72 = new java.lang.StringBuilder;

        specialinvoke r72.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception while invoking method: ");

        $r36 = virtualinvoke $r33.<java.lang.Exception: java.lang.Throwable getCause()>();

        $r37 = virtualinvoke $r36.<java.lang.Throwable: java.lang.String getMessage()>();

        virtualinvoke r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        $r39 = virtualinvoke r72.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("DdmViewDebug", $r39);

        $r40 = virtualinvoke $r33.<java.lang.Exception: java.lang.Throwable getCause()>();

        r65 = virtualinvoke $r40.<java.lang.Throwable: java.lang.String getMessage()>();

        r66 = r65;

        if r65 != null goto label20;

        $r42 = virtualinvoke $r33.<java.lang.Exception: java.lang.Throwable getCause()>();

        r66 = virtualinvoke $r42.<java.lang.Throwable: java.lang.String toString()>();

     label20:
        $r41 = staticinvoke <android.ddm.DdmHandleViewDebug: org.apache.harmony.dalvik.ddmc.Chunk createFailChunk(int,java.lang.String)>(-3, r66);

        return $r41;

     label21:
        $r43 := @caughtexception;

        r73 = new java.lang.StringBuilder;

        specialinvoke r73.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No such method: ");

        r75 = (java.lang.NoSuchMethodException) $r43;

        $r46 = virtualinvoke r75.<java.lang.NoSuchMethodException: java.lang.String getMessage()>();

        virtualinvoke r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r46);

        $r48 = virtualinvoke r73.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("DdmViewDebug", $r48);

        r74 = new java.lang.StringBuilder;

        specialinvoke r74.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No such method: ");

        r76 = (java.lang.NoSuchMethodException) $r43;

        $r51 = virtualinvoke r76.<java.lang.NoSuchMethodException: java.lang.String getMessage()>();

        virtualinvoke r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r51);

        $r53 = virtualinvoke r74.<java.lang.StringBuilder: java.lang.String toString()>();

        $r54 = staticinvoke <android.ddm.DdmHandleViewDebug: org.apache.harmony.dalvik.ddmc.Chunk createFailChunk(int,java.lang.String)>(-2, $r53);

        return $r54;

        catch java.lang.NoSuchMethodException from label16 to label17 with label21;
        catch java.lang.Exception from label17 to label18 with label19;
    }

    private org.apache.harmony.dalvik.ddmc.Chunk listWindows()
    {
        android.ddm.DdmHandleViewDebug r0;
        java.lang.String[] r1;
        int i0, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9, i10, i11;
        java.nio.ByteBuffer r2;
        java.lang.String r3, $r10;
        android.view.WindowManagerGlobal $r4;
        java.nio.ByteOrder $r5;
        org.apache.harmony.dalvik.ddmc.Chunk $r8;

        r0 := @this: android.ddm.DdmHandleViewDebug;

        $r4 = staticinvoke <android.view.WindowManagerGlobal: android.view.WindowManagerGlobal getInstance()>();

        r1 = virtualinvoke $r4.<android.view.WindowManagerGlobal: java.lang.String[] getViewRootNames()>();

        i8 = 4;

        i0 = lengthof r1;

        i9 = 0;

     label1:
        if i9 >= i0 goto label2;

        $i5 = i8 + 4;

        $r10 = r1[i9];

        $i6 = virtualinvoke $r10.<java.lang.String: int length()>();

        $i7 = $i6 * 2;

        i8 = $i5 + $i7;

        i9 = i9 + 1;

        goto label1;

     label2:
        r2 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(i8);

        $r5 = <org.apache.harmony.dalvik.ddmc.ChunkHandler: java.nio.ByteOrder CHUNK_ORDER>;

        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($r5);

        $i2 = lengthof r1;

        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>($i2);

        i10 = lengthof r1;

        i11 = 0;

     label3:
        if i11 >= i10 goto label4;

        r3 = r1[i11];

        $i4 = virtualinvoke r3.<java.lang.String: int length()>();

        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>($i4);

        staticinvoke <android.ddm.DdmHandleViewDebug: void putString(java.nio.ByteBuffer,java.lang.String)>(r2, r3);

        i11 = i11 + 1;

        goto label3;

     label4:
        $r8 = new org.apache.harmony.dalvik.ddmc.Chunk;

        $i3 = <android.ddm.DdmHandleViewDebug: int CHUNK_VULW>;

        specialinvoke $r8.<org.apache.harmony.dalvik.ddmc.Chunk: void <init>(int,java.nio.ByteBuffer)>($i3, r2);

        return $r8;
    }

    private org.apache.harmony.dalvik.ddmc.Chunk profileView(android.view.View, android.view.View)
    {
        android.ddm.DdmHandleViewDebug r0;
        int $i0, $i1;
        java.lang.Throwable $r5, $r6, $r7, $r8, $r9;
        java.lang.String $r11, $r13;
        android.view.View r14, r15;
        byte[] r19;
        org.apache.harmony.dalvik.ddmc.Chunk r23, r29;
        java.io.ByteArrayOutputStream r26;
        java.io.OutputStreamWriter r27;
        java.io.BufferedWriter r28;
        java.lang.StringBuilder r30;
        java.io.IOException r31;

        r0 := @this: android.ddm.DdmHandleViewDebug;

        r14 := @parameter0: android.view.View;

        r15 := @parameter1: android.view.View;

        r26 = new java.io.ByteArrayOutputStream;

        specialinvoke r26.<java.io.ByteArrayOutputStream: void <init>(int)>(32768);

        r28 = new java.io.BufferedWriter;

        r27 = new java.io.OutputStreamWriter;

        specialinvoke r27.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>(r26);

        specialinvoke r28.<java.io.BufferedWriter: void <init>(java.io.Writer,int)>(r27, 32768);

     label01:
        staticinvoke <android.view.ViewDebug: void profileViewAndChildren(android.view.View,java.io.BufferedWriter)>(r15, r28);

     label02:
        virtualinvoke r28.<java.io.BufferedWriter: void close()>();

     label03:
        goto label05;

     label04:
        $r5 := @caughtexception;

     label05:
        r19 = virtualinvoke r26.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        r29 = new org.apache.harmony.dalvik.ddmc.Chunk;

        $i1 = <android.ddm.DdmHandleViewDebug: int CHUNK_VUOP>;

        $i0 = lengthof r19;

        specialinvoke r29.<org.apache.harmony.dalvik.ddmc.Chunk: void <init>(int,byte[],int,int)>($i1, r19, 0, $i0);

        return r29;

     label06:
        $r8 := @caughtexception;

        goto label13;

     label07:
        $r9 := @caughtexception;

     label08:
        r30 = new java.lang.StringBuilder;

        specialinvoke r30.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected error while profiling view: ");

        r31 = (java.io.IOException) $r9;

        $r11 = virtualinvoke r31.<java.io.IOException: java.lang.String getMessage()>();

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke r30.<java.lang.StringBuilder: java.lang.String toString()>();

        r23 = staticinvoke <android.ddm.DdmHandleViewDebug: org.apache.harmony.dalvik.ddmc.Chunk createFailChunk(int,java.lang.String)>(1, $r13);

     label09:
        virtualinvoke r28.<java.io.BufferedWriter: void close()>();

     label10:
        goto label12;

     label11:
        $r7 := @caughtexception;

     label12:
        return r23;

     label13:
        virtualinvoke r28.<java.io.BufferedWriter: void close()>();

     label14:
        goto label16;

     label15:
        $r6 := @caughtexception;

     label16:
        throw $r8;

        catch java.io.IOException from label01 to label02 with label07;
        catch java.lang.Throwable from label01 to label02 with label06;
        catch java.io.IOException from label02 to label03 with label04;
        catch java.lang.Throwable from label08 to label09 with label06;
        catch java.io.IOException from label09 to label10 with label11;
        catch java.io.IOException from label13 to label14 with label15;
    }

    public static void register()
    {
        android.ddm.DdmHandleViewDebug $r0, $r1, $r2;
        int $i0, $i1, $i2;

        $i0 = <android.ddm.DdmHandleViewDebug: int CHUNK_VULW>;

        $r0 = <android.ddm.DdmHandleViewDebug: android.ddm.DdmHandleViewDebug sInstance>;

        staticinvoke <org.apache.harmony.dalvik.ddmc.DdmServer: void registerHandler(int,org.apache.harmony.dalvik.ddmc.ChunkHandler)>($i0, $r0);

        $i1 = <android.ddm.DdmHandleViewDebug: int CHUNK_VURT>;

        $r1 = <android.ddm.DdmHandleViewDebug: android.ddm.DdmHandleViewDebug sInstance>;

        staticinvoke <org.apache.harmony.dalvik.ddmc.DdmServer: void registerHandler(int,org.apache.harmony.dalvik.ddmc.ChunkHandler)>($i1, $r1);

        $i2 = <android.ddm.DdmHandleViewDebug: int CHUNK_VUOP>;

        $r2 = <android.ddm.DdmHandleViewDebug: android.ddm.DdmHandleViewDebug sInstance>;

        staticinvoke <org.apache.harmony.dalvik.ddmc.DdmServer: void registerHandler(int,org.apache.harmony.dalvik.ddmc.ChunkHandler)>($i2, $r2);

        return;
    }

    private org.apache.harmony.dalvik.ddmc.Chunk setLayoutParameter(android.view.View, android.view.View, java.nio.ByteBuffer)
    {
        android.ddm.DdmHandleViewDebug r0;
        int i0, $i1;
        java.lang.Exception $r1;
        java.lang.StringBuilder $r2, $r6;
        java.lang.String $r5, $r10, $r12, r17;
        org.apache.harmony.dalvik.ddmc.Chunk $r13;
        android.view.View r14, r15;
        java.nio.ByteBuffer r16;

        r0 := @this: android.ddm.DdmHandleViewDebug;

        r14 := @parameter0: android.view.View;

        r15 := @parameter1: android.view.View;

        r16 := @parameter2: java.nio.ByteBuffer;

        $i1 = virtualinvoke r16.<java.nio.ByteBuffer: int getInt()>();

        r17 = staticinvoke <android.ddm.DdmHandleViewDebug: java.lang.String getString(java.nio.ByteBuffer,int)>(r16, $i1);

        i0 = virtualinvoke r16.<java.nio.ByteBuffer: int getInt()>();

     label1:
        staticinvoke <android.view.ViewDebug: void setLayoutParameter(android.view.View,java.lang.String,int)>(r15, r17, i0);

     label2:
        return null;

     label3:
        $r1 := @caughtexception;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception setting layout parameter: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("DdmViewDebug", $r5);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error accessing field ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r17);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r10 = virtualinvoke $r1.<java.lang.Exception: java.lang.String getMessage()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = staticinvoke <android.ddm.DdmHandleViewDebug: org.apache.harmony.dalvik.ddmc.Chunk createFailChunk(int,java.lang.String)>(-3, $r12);

        return $r13;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void connected()
    {
        android.ddm.DdmHandleViewDebug r0;

        r0 := @this: android.ddm.DdmHandleViewDebug;

        return;
    }

    public void disconnected()
    {
        android.ddm.DdmHandleViewDebug r0;

        r0 := @this: android.ddm.DdmHandleViewDebug;

        return;
    }

    public org.apache.harmony.dalvik.ddmc.Chunk handleChunk(org.apache.harmony.dalvik.ddmc.Chunk)
    {
        android.ddm.DdmHandleViewDebug r0;
        int i0, i1, $i2, $i3, $i4;
        java.nio.ByteBuffer r1;
        android.view.View r2, r32;
        java.lang.StringBuilder $r3, $r14, $r20;
        java.lang.String $r5, $r8, $r17, $r23;
        java.lang.RuntimeException $r7;
        org.apache.harmony.dalvik.ddmc.Chunk $r9, $r10, $r11, $r12, $r13, $r18, $r19, $r24, $r25, $r26, $r27, $r28, $r29, r30;

        r0 := @this: android.ddm.DdmHandleViewDebug;

        r30 := @parameter0: org.apache.harmony.dalvik.ddmc.Chunk;

        i0 = r30.<org.apache.harmony.dalvik.ddmc.Chunk: int type>;

        $i2 = <android.ddm.DdmHandleViewDebug: int CHUNK_VULW>;

        if i0 != $i2 goto label01;

        $r29 = specialinvoke r0.<android.ddm.DdmHandleViewDebug: org.apache.harmony.dalvik.ddmc.Chunk listWindows()>();

        return $r29;

     label01:
        r1 = staticinvoke <android.ddm.DdmHandleViewDebug: java.nio.ByteBuffer wrapChunk(org.apache.harmony.dalvik.ddmc.Chunk)>(r30);

        i1 = virtualinvoke r1.<java.nio.ByteBuffer: int getInt()>();

        r2 = specialinvoke r0.<android.ddm.DdmHandleViewDebug: android.view.View getRootView(java.nio.ByteBuffer)>(r1);

        if r2 != null goto label02;

        $r28 = staticinvoke <android.ddm.DdmHandleViewDebug: org.apache.harmony.dalvik.ddmc.Chunk createFailChunk(int,java.lang.String)>(-2, "Invalid View Root");

        return $r28;

     label02:
        $i3 = <android.ddm.DdmHandleViewDebug: int CHUNK_VURT>;

        if i0 != $i3 goto label06;

        if i1 != 1 goto label03;

        $r27 = specialinvoke r0.<android.ddm.DdmHandleViewDebug: org.apache.harmony.dalvik.ddmc.Chunk dumpHierarchy(android.view.View,java.nio.ByteBuffer)>(r2, r1);

        return $r27;

     label03:
        if i1 != 2 goto label04;

        $r26 = specialinvoke r0.<android.ddm.DdmHandleViewDebug: org.apache.harmony.dalvik.ddmc.Chunk captureLayers(android.view.View)>(r2);

        return $r26;

     label04:
        if i1 != 3 goto label05;

        $r25 = specialinvoke r0.<android.ddm.DdmHandleViewDebug: org.apache.harmony.dalvik.ddmc.Chunk dumpTheme(android.view.View)>(r2);

        return $r25;

     label05:
        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown view root operation: ");

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        $r24 = staticinvoke <android.ddm.DdmHandleViewDebug: org.apache.harmony.dalvik.ddmc.Chunk createFailChunk(int,java.lang.String)>(-1, $r23);

        return $r24;

     label06:
        r32 = specialinvoke r0.<android.ddm.DdmHandleViewDebug: android.view.View getTargetView(android.view.View,java.nio.ByteBuffer)>(r2, r1);

        if r32 != null goto label07;

        $r19 = staticinvoke <android.ddm.DdmHandleViewDebug: org.apache.harmony.dalvik.ddmc.Chunk createFailChunk(int,java.lang.String)>(-2, "Invalid target view");

        return $r19;

     label07:
        $i4 = <android.ddm.DdmHandleViewDebug: int CHUNK_VUOP>;

        if i0 != $i4 goto label13;

        if i1 == 1 goto label12;

        if i1 == 2 goto label11;

        if i1 == 3 goto label10;

        if i1 == 4 goto label09;

        if i1 == 5 goto label08;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown view operation: ");

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        $r18 = staticinvoke <android.ddm.DdmHandleViewDebug: org.apache.harmony.dalvik.ddmc.Chunk createFailChunk(int,java.lang.String)>(-1, $r17);

        return $r18;

     label08:
        $r13 = specialinvoke r0.<android.ddm.DdmHandleViewDebug: org.apache.harmony.dalvik.ddmc.Chunk setLayoutParameter(android.view.View,android.view.View,java.nio.ByteBuffer)>(r2, r32, r1);

        return $r13;

     label09:
        $r12 = specialinvoke r0.<android.ddm.DdmHandleViewDebug: org.apache.harmony.dalvik.ddmc.Chunk invokeViewMethod(android.view.View,android.view.View,java.nio.ByteBuffer)>(r2, r32, r1);

        return $r12;

     label10:
        $r11 = specialinvoke r0.<android.ddm.DdmHandleViewDebug: org.apache.harmony.dalvik.ddmc.Chunk profileView(android.view.View,android.view.View)>(r2, r32);

        return $r11;

     label11:
        $r10 = specialinvoke r0.<android.ddm.DdmHandleViewDebug: org.apache.harmony.dalvik.ddmc.Chunk dumpDisplayLists(android.view.View,android.view.View)>(r2, r32);

        return $r10;

     label12:
        $r9 = specialinvoke r0.<android.ddm.DdmHandleViewDebug: org.apache.harmony.dalvik.ddmc.Chunk captureView(android.view.View,android.view.View)>(r2, r32);

        return $r9;

     label13:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown packet ");

        $r5 = staticinvoke <org.apache.harmony.dalvik.ddmc.ChunkHandler: java.lang.String name(int)>(i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = new java.lang.RuntimeException;

        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>($r8);

        throw $r7;
    }
}
