public abstract class android.debug.IAdbManager$Stub extends android.os.Binder implements android.debug.IAdbManager
{
    private static final java.lang.String DESCRIPTOR;
    static final int TRANSACTION_allowDebugging;
    static final int TRANSACTION_allowWirelessDebugging;
    static final int TRANSACTION_clearDebuggingKeys;
    static final int TRANSACTION_denyDebugging;
    static final int TRANSACTION_denyWirelessDebugging;
    static final int TRANSACTION_disablePairing;
    static final int TRANSACTION_enablePairingByPairingCode;
    static final int TRANSACTION_enablePairingByQrCode;
    static final int TRANSACTION_getAdbWirelessPort;
    static final int TRANSACTION_getPairedDevices;
    static final int TRANSACTION_isAdbWifiQrSupported;
    static final int TRANSACTION_isAdbWifiSupported;
    static final int TRANSACTION_unpairDevice;

    public void <init>()
    {
        android.debug.IAdbManager$Stub r0;

        r0 := @this: android.debug.IAdbManager$Stub;

        specialinvoke r0.<android.os.Binder: void <init>()>();

        virtualinvoke r0.<android.debug.IAdbManager$Stub: void attachInterface(android.os.IInterface,java.lang.String)>(r0, "android.debug.IAdbManager");

        return;
    }

    public static android.debug.IAdbManager asInterface(android.os.IBinder)
    {
        android.os.IBinder r0;
        android.os.IInterface r1;
        android.debug.IAdbManager$Stub$Proxy $r2;
        boolean $z0;
        android.debug.IAdbManager $r3;

        r0 := @parameter0: android.os.IBinder;

        if r0 != null goto label1;

        return null;

     label1:
        r1 = interfaceinvoke r0.<android.os.IBinder: android.os.IInterface queryLocalInterface(java.lang.String)>("android.debug.IAdbManager");

        if r1 == null goto label2;

        $z0 = r1 instanceof android.debug.IAdbManager;

        if $z0 == 0 goto label2;

        $r3 = (android.debug.IAdbManager) r1;

        return $r3;

     label2:
        $r2 = new android.debug.IAdbManager$Stub$Proxy;

        specialinvoke $r2.<android.debug.IAdbManager$Stub$Proxy: void <init>(android.os.IBinder)>(r0);

        return $r2;
    }

    public static android.debug.IAdbManager getDefaultImpl()
    {
        android.debug.IAdbManager $r0;

        $r0 = <android.debug.IAdbManager$Stub$Proxy: android.debug.IAdbManager sDefaultImpl>;

        return $r0;
    }

    public static java.lang.String getDefaultTransactionName(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label14;
            case 2: goto label13;
            case 3: goto label12;
            case 4: goto label11;
            case 5: goto label10;
            case 6: goto label09;
            case 7: goto label08;
            case 8: goto label07;
            case 9: goto label06;
            case 10: goto label05;
            case 11: goto label04;
            case 12: goto label03;
            case 13: goto label02;
            default: goto label01;
        };

     label01:
        return null;

     label02:
        return "isAdbWifiQrSupported";

     label03:
        return "isAdbWifiSupported";

     label04:
        return "disablePairing";

     label05:
        return "getAdbWirelessPort";

     label06:
        return "enablePairingByQrCode";

     label07:
        return "enablePairingByPairingCode";

     label08:
        return "unpairDevice";

     label09:
        return "getPairedDevices";

     label10:
        return "denyWirelessDebugging";

     label11:
        return "allowWirelessDebugging";

     label12:
        return "clearDebuggingKeys";

     label13:
        return "denyDebugging";

     label14:
        return "allowDebugging";
    }

    public static boolean setDefaultImpl(android.debug.IAdbManager)
    {
        android.debug.IAdbManager r0, $r1;
        java.lang.IllegalStateException $r2;

        r0 := @parameter0: android.debug.IAdbManager;

        $r1 = <android.debug.IAdbManager$Stub$Proxy: android.debug.IAdbManager sDefaultImpl>;

        if $r1 != null goto label2;

        if r0 == null goto label1;

        <android.debug.IAdbManager$Stub$Proxy: android.debug.IAdbManager sDefaultImpl> = r0;

        return 1;

     label1:
        return 0;

     label2:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("setDefaultImpl() called twice");

        throw $r2;
    }

    public android.os.IBinder asBinder()
    {
        android.debug.IAdbManager$Stub r0;

        r0 := @this: android.debug.IAdbManager$Stub;

        return r0;
    }

    public java.lang.String getTransactionName(int)
    {
        android.debug.IAdbManager$Stub r0;
        int i0;
        java.lang.String $r1;

        r0 := @this: android.debug.IAdbManager$Stub;

        i0 := @parameter0: int;

        $r1 = staticinvoke <android.debug.IAdbManager$Stub: java.lang.String getDefaultTransactionName(int)>(i0);

        return $r1;
    }

    public boolean onTransact(int, android.os.Parcel, android.os.Parcel, int) throws android.os.RemoteException
    {
        android.debug.IAdbManager$Stub r0;
        android.os.Parcel r1, r7;
        int i0, $i1, $i2, i3, i4, i5, i6;
        java.lang.String $r2, $r3, $r4, $r5, $r6;
        boolean $z1, z2, z3, z4, z5;
        java.util.Map r8;

        r0 := @this: android.debug.IAdbManager$Stub;

        i3 := @parameter0: int;

        r7 := @parameter1: android.os.Parcel;

        r1 := @parameter2: android.os.Parcel;

        i0 := @parameter3: int;

        if i3 == 1598968902 goto label17;

        z2 = 0;

        tableswitch(i3)
        {
            case 1: goto label15;
            case 2: goto label14;
            case 3: goto label13;
            case 4: goto label11;
            case 5: goto label10;
            case 6: goto label09;
            case 7: goto label08;
            case 8: goto label07;
            case 9: goto label06;
            case 10: goto label05;
            case 11: goto label04;
            case 12: goto label03;
            case 13: goto label02;
            default: goto label01;
        };

     label01:
        $z1 = specialinvoke r0.<android.os.Binder: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>(i3, r7, r1, i0);

        return $z1;

     label02:
        virtualinvoke r7.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.debug.IAdbManager");

        z3 = virtualinvoke r0.<android.debug.IAdbManager$Stub: boolean isAdbWifiQrSupported()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i5 = (int) z3;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i5);

        return 1;

     label03:
        virtualinvoke r7.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.debug.IAdbManager");

        z4 = virtualinvoke r0.<android.debug.IAdbManager$Stub: boolean isAdbWifiSupported()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i6 = (int) z4;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i6);

        return 1;

     label04:
        virtualinvoke r7.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.debug.IAdbManager");

        virtualinvoke r0.<android.debug.IAdbManager$Stub: void disablePairing()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label05:
        virtualinvoke r7.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.debug.IAdbManager");

        i4 = virtualinvoke r0.<android.debug.IAdbManager$Stub: int getAdbWirelessPort()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i4);

        return 1;

     label06:
        virtualinvoke r7.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.debug.IAdbManager");

        $r2 = virtualinvoke r7.<android.os.Parcel: java.lang.String readString()>();

        $r3 = virtualinvoke r7.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.debug.IAdbManager$Stub: void enablePairingByQrCode(java.lang.String,java.lang.String)>($r2, $r3);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label07:
        virtualinvoke r7.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.debug.IAdbManager");

        virtualinvoke r0.<android.debug.IAdbManager$Stub: void enablePairingByPairingCode()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label08:
        virtualinvoke r7.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.debug.IAdbManager");

        $r4 = virtualinvoke r7.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.debug.IAdbManager$Stub: void unpairDevice(java.lang.String)>($r4);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label09:
        virtualinvoke r7.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.debug.IAdbManager");

        r8 = virtualinvoke r0.<android.debug.IAdbManager$Stub: java.util.Map getPairedDevices()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeMap(java.util.Map)>(r8);

        return 1;

     label10:
        virtualinvoke r7.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.debug.IAdbManager");

        virtualinvoke r0.<android.debug.IAdbManager$Stub: void denyWirelessDebugging()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label11:
        virtualinvoke r7.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.debug.IAdbManager");

        $i1 = virtualinvoke r7.<android.os.Parcel: int readInt()>();

        if $i1 == 0 goto label12;

        z2 = 1;

     label12:
        $r5 = virtualinvoke r7.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.debug.IAdbManager$Stub: void allowWirelessDebugging(boolean,java.lang.String)>(z2, $r5);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label13:
        virtualinvoke r7.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.debug.IAdbManager");

        virtualinvoke r0.<android.debug.IAdbManager$Stub: void clearDebuggingKeys()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label14:
        virtualinvoke r7.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.debug.IAdbManager");

        virtualinvoke r0.<android.debug.IAdbManager$Stub: void denyDebugging()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label15:
        virtualinvoke r7.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.debug.IAdbManager");

        z5 = 0;

        $i2 = virtualinvoke r7.<android.os.Parcel: int readInt()>();

        if $i2 == 0 goto label16;

        z5 = 1;

     label16:
        $r6 = virtualinvoke r7.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.debug.IAdbManager$Stub: void allowDebugging(boolean,java.lang.String)>(z5, $r6);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label17:
        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>("android.debug.IAdbManager");

        return 1;
    }

    public static void <clinit>()
    {
        <android.debug.IAdbManager$Stub: int TRANSACTION_unpairDevice> = 7;

        <android.debug.IAdbManager$Stub: int TRANSACTION_isAdbWifiSupported> = 12;

        <android.debug.IAdbManager$Stub: int TRANSACTION_isAdbWifiQrSupported> = 13;

        <android.debug.IAdbManager$Stub: int TRANSACTION_getPairedDevices> = 6;

        <android.debug.IAdbManager$Stub: int TRANSACTION_getAdbWirelessPort> = 10;

        <android.debug.IAdbManager$Stub: int TRANSACTION_enablePairingByQrCode> = 9;

        <android.debug.IAdbManager$Stub: int TRANSACTION_enablePairingByPairingCode> = 8;

        <android.debug.IAdbManager$Stub: int TRANSACTION_disablePairing> = 11;

        <android.debug.IAdbManager$Stub: int TRANSACTION_denyWirelessDebugging> = 5;

        <android.debug.IAdbManager$Stub: int TRANSACTION_denyDebugging> = 2;

        <android.debug.IAdbManager$Stub: int TRANSACTION_clearDebuggingKeys> = 3;

        <android.debug.IAdbManager$Stub: int TRANSACTION_allowWirelessDebugging> = 4;

        <android.debug.IAdbManager$Stub: int TRANSACTION_allowDebugging> = 1;

        <android.debug.IAdbManager$Stub: java.lang.String DESCRIPTOR> = "android.debug.IAdbManager";

        return;
    }
}
