public class android.drm.DrmManagerClient extends java.lang.Object implements java.lang.AutoCloseable
{
    private static final int ACTION_PROCESS_DRM_INFO;
    private static final int ACTION_REMOVE_ALL_RIGHTS;
    public static final int ERROR_NONE;
    public static final int ERROR_UNKNOWN;
    public static final int INVALID_SESSION;
    private static final java.lang.String TAG;
    private final dalvik.system.CloseGuard mCloseGuard;
    private final java.util.concurrent.atomic.AtomicBoolean mClosed;
    private android.content.Context mContext;
    private android.drm.DrmManagerClient$EventHandler mEventHandler;
    android.os.HandlerThread mEventThread;
    private android.drm.DrmManagerClient$InfoHandler mInfoHandler;
    android.os.HandlerThread mInfoThread;
    private long mNativeContext;
    private android.drm.DrmManagerClient$OnErrorListener mOnErrorListener;
    private android.drm.DrmManagerClient$OnEventListener mOnEventListener;
    private android.drm.DrmManagerClient$OnInfoListener mOnInfoListener;
    private int mUniqueId;

    static void <clinit>()
    {
        <android.drm.DrmManagerClient: java.lang.String TAG> = "DrmManagerClient";

        <android.drm.DrmManagerClient: int INVALID_SESSION> = -1;

        <android.drm.DrmManagerClient: int ERROR_UNKNOWN> = -2000;

        <android.drm.DrmManagerClient: int ERROR_NONE> = 0;

        <android.drm.DrmManagerClient: int ACTION_REMOVE_ALL_RIGHTS> = 1001;

        <android.drm.DrmManagerClient: int ACTION_PROCESS_DRM_INFO> = 1002;

        staticinvoke <java.lang.System: void loadLibrary(java.lang.String)>("drmframework_jni");

        return;
    }

    public void <init>(android.content.Context)
    {
        android.drm.DrmManagerClient r0;
        android.content.Context r1;
        java.util.concurrent.atomic.AtomicBoolean $r2;
        dalvik.system.CloseGuard $r3, $r4;
        int $i0;

        r0 := @this: android.drm.DrmManagerClient;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r2.<java.util.concurrent.atomic.AtomicBoolean: void <init>()>();

        r0.<android.drm.DrmManagerClient: java.util.concurrent.atomic.AtomicBoolean mClosed> = $r2;

        $r3 = staticinvoke <dalvik.system.CloseGuard: dalvik.system.CloseGuard get()>();

        r0.<android.drm.DrmManagerClient: dalvik.system.CloseGuard mCloseGuard> = $r3;

        r0.<android.drm.DrmManagerClient: android.content.Context mContext> = r1;

        specialinvoke r0.<android.drm.DrmManagerClient: void createEventThreads()>();

        $i0 = specialinvoke r0.<android.drm.DrmManagerClient: int _initialize()>();

        r0.<android.drm.DrmManagerClient: int mUniqueId> = $i0;

        $r4 = r0.<android.drm.DrmManagerClient: dalvik.system.CloseGuard mCloseGuard>;

        virtualinvoke $r4.<dalvik.system.CloseGuard: void open(java.lang.String)>("release");

        return;
    }

    private native android.drm.DrmInfo _acquireDrmInfo(int, android.drm.DrmInfoRequest);

    private native boolean _canHandle(int, java.lang.String, java.lang.String);

    private native int _checkRightsStatus(int, java.lang.String, int);

    private native android.drm.DrmConvertedStatus _closeConvertSession(int, int);

    private native android.drm.DrmConvertedStatus _convertData(int, int, byte[]);

    private native android.drm.DrmSupportInfo[] _getAllSupportInfo(int);

    private native android.content.ContentValues _getConstraints(int, java.lang.String, int);

    private native int _getDrmObjectType(int, java.lang.String, java.lang.String);

    private native android.content.ContentValues _getMetadata(int, java.lang.String);

    private native java.lang.String _getOriginalMimeType(int, java.lang.String, java.io.FileDescriptor);

    private native int _initialize();

    private native void _installDrmEngine(int, java.lang.String);

    private native int _openConvertSession(int, java.lang.String);

    private native android.drm.DrmInfoStatus _processDrmInfo(int, android.drm.DrmInfo);

    private native void _release(int);

    private native int _removeAllRights(int);

    private native int _removeRights(int, java.lang.String);

    private native int _saveRights(int, android.drm.DrmRights, java.lang.String, java.lang.String);

    private native void _setListeners(int, java.lang.Object);

    static int access$000(android.drm.DrmManagerClient)
    {
        android.drm.DrmManagerClient r0;
        int $i0;

        r0 := @parameter0: android.drm.DrmManagerClient;

        $i0 = r0.<android.drm.DrmManagerClient: int mUniqueId>;

        return $i0;
    }

    static android.drm.DrmInfoStatus access$100(android.drm.DrmManagerClient, int, android.drm.DrmInfo)
    {
        android.drm.DrmManagerClient r0;
        int i0;
        android.drm.DrmInfo r1;
        android.drm.DrmInfoStatus $r2;

        r0 := @parameter0: android.drm.DrmManagerClient;

        i0 := @parameter1: int;

        r1 := @parameter2: android.drm.DrmInfo;

        $r2 = specialinvoke r0.<android.drm.DrmManagerClient: android.drm.DrmInfoStatus _processDrmInfo(int,android.drm.DrmInfo)>(i0, r1);

        return $r2;
    }

    static int access$200(android.drm.DrmManagerClient, int)
    {
        android.drm.DrmManagerClient r0;
        int i0, $i1;

        r0 := @parameter0: android.drm.DrmManagerClient;

        i0 := @parameter1: int;

        $i1 = specialinvoke r0.<android.drm.DrmManagerClient: int getEventType(int)>(i0);

        return $i1;
    }

    static int access$300(android.drm.DrmManagerClient, int)
    {
        android.drm.DrmManagerClient r0;
        int i0, $i1;

        r0 := @parameter0: android.drm.DrmManagerClient;

        i0 := @parameter1: int;

        $i1 = specialinvoke r0.<android.drm.DrmManagerClient: int getErrorType(int)>(i0);

        return $i1;
    }

    static int access$400(android.drm.DrmManagerClient, int)
    {
        android.drm.DrmManagerClient r0;
        int i0, $i1;

        r0 := @parameter0: android.drm.DrmManagerClient;

        i0 := @parameter1: int;

        $i1 = specialinvoke r0.<android.drm.DrmManagerClient: int _removeAllRights(int)>(i0);

        return $i1;
    }

    static android.drm.DrmManagerClient$OnEventListener access$500(android.drm.DrmManagerClient)
    {
        android.drm.DrmManagerClient r0;
        android.drm.DrmManagerClient$OnEventListener $r1;

        r0 := @parameter0: android.drm.DrmManagerClient;

        $r1 = r0.<android.drm.DrmManagerClient: android.drm.DrmManagerClient$OnEventListener mOnEventListener>;

        return $r1;
    }

    static android.drm.DrmManagerClient$OnErrorListener access$600(android.drm.DrmManagerClient)
    {
        android.drm.DrmManagerClient r0;
        android.drm.DrmManagerClient$OnErrorListener $r1;

        r0 := @parameter0: android.drm.DrmManagerClient;

        $r1 = r0.<android.drm.DrmManagerClient: android.drm.DrmManagerClient$OnErrorListener mOnErrorListener>;

        return $r1;
    }

    static android.drm.DrmManagerClient$OnInfoListener access$700(android.drm.DrmManagerClient)
    {
        android.drm.DrmManagerClient r0;
        android.drm.DrmManagerClient$OnInfoListener $r1;

        r0 := @parameter0: android.drm.DrmManagerClient;

        $r1 = r0.<android.drm.DrmManagerClient: android.drm.DrmManagerClient$OnInfoListener mOnInfoListener>;

        return $r1;
    }

    private java.lang.String convertUriToPath(android.net.Uri)
    {
        android.drm.DrmManagerClient r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.IllegalArgumentException $r1, r14, r17;
        android.content.Context $r2;
        android.content.ContentResolver $r3;
        java.lang.String[] $r4;
        int $i0, $i1;
        java.lang.Throwable $r5;
        android.database.sqlite.SQLiteException $r6;
        android.net.Uri r7;
        java.lang.String r8, r9, r13;
        android.database.Cursor r10, r11, r12;

        r0 := @this: android.drm.DrmManagerClient;

        r7 := @parameter0: android.net.Uri;

        r8 = null;

        if r7 == null goto label30;

        r9 = virtualinvoke r7.<android.net.Uri: java.lang.String getScheme()>();

        if r9 == null goto label29;

        $z0 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 != 0 goto label29;

        $z1 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("file");

        if $z1 == 0 goto label01;

        goto label29;

     label01:
        $z2 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("http");

        if $z2 != 0 goto label28;

        $z3 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("https");

        if $z3 == 0 goto label02;

        goto label28;

     label02:
        $z4 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("content");

        if $z4 == 0 goto label27;

        r10 = null;

        r11 = null;

     label03:
        $r2 = r0.<android.drm.DrmManagerClient: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r4 = newarray (java.lang.String)[1];

        $r4[0] = "_data";

        r12 = virtualinvoke $r3.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r7, $r4, null, null, null);

     label04:
        if r12 == null goto label12;

        r11 = r12;

        r10 = r12;

     label05:
        $i0 = interfaceinvoke r12.<android.database.Cursor: int getCount()>();

        if $i0 == 0 goto label12;

     label06:
        r11 = r12;

        r10 = r12;

     label07:
        $z5 = interfaceinvoke r12.<android.database.Cursor: boolean moveToFirst()>();

        if $z5 == 0 goto label12;

     label08:
        r11 = r12;

        r10 = r12;

     label09:
        $i1 = interfaceinvoke r12.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("_data");

        r13 = interfaceinvoke r12.<android.database.Cursor: java.lang.String getString(int)>($i1);

     label10:
        r8 = r13;

        if r12 == null goto label11;

        interfaceinvoke r12.<android.database.Cursor: void close()>();

     label11:
        goto label30;

     label12:
        r11 = r12;

        r10 = r12;

     label13:
        r14 = new java.lang.IllegalArgumentException;

     label14:
        r11 = r12;

        r10 = r12;

     label15:
        specialinvoke r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Given Uri could not be found in media store");

     label16:
        r11 = r12;

        r10 = r12;

     label17:
        throw r14;

     label18:
        $r5 := @caughtexception;

        goto label25;

     label19:
        $r6 := @caughtexception;

        r11 = r10;

     label20:
        r17 = new java.lang.IllegalArgumentException;

     label21:
        r11 = r10;

     label22:
        specialinvoke r17.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Given Uri is not formatted in a way so that it can be found in media store.");

     label23:
        r11 = r10;

     label24:
        throw r17;

     label25:
        if r11 == null goto label26;

        interfaceinvoke r11.<android.database.Cursor: void close()>();

     label26:
        throw $r5;

     label27:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Given Uri scheme is not supported");

        throw $r1;

     label28:
        r8 = virtualinvoke r7.<android.net.Uri: java.lang.String toString()>();

        goto label30;

     label29:
        r8 = virtualinvoke r7.<android.net.Uri: java.lang.String getPath()>();

     label30:
        return r8;

        catch android.database.sqlite.SQLiteException from label03 to label04 with label19;
        catch java.lang.Throwable from label03 to label04 with label18;
        catch android.database.sqlite.SQLiteException from label05 to label06 with label19;
        catch java.lang.Throwable from label05 to label06 with label18;
        catch android.database.sqlite.SQLiteException from label07 to label08 with label19;
        catch java.lang.Throwable from label07 to label08 with label18;
        catch android.database.sqlite.SQLiteException from label09 to label10 with label19;
        catch java.lang.Throwable from label09 to label10 with label18;
        catch android.database.sqlite.SQLiteException from label13 to label14 with label19;
        catch java.lang.Throwable from label13 to label14 with label18;
        catch android.database.sqlite.SQLiteException from label15 to label16 with label19;
        catch java.lang.Throwable from label15 to label16 with label18;
        catch android.database.sqlite.SQLiteException from label17 to label18 with label19;
        catch java.lang.Throwable from label17 to label18 with label18;
        catch java.lang.Throwable from label20 to label21 with label18;
        catch java.lang.Throwable from label22 to label23 with label18;
        catch java.lang.Throwable from label24 to label25 with label18;
    }

    private void createEventThreads()
    {
        android.drm.DrmManagerClient r0;
        android.drm.DrmManagerClient$EventHandler $r1, $r8;
        android.drm.DrmManagerClient$InfoHandler $r2, $r4;
        android.os.HandlerThread $r3, $r5, $r7, $r9;
        android.os.Looper $r6, $r10;

        r0 := @this: android.drm.DrmManagerClient;

        $r1 = r0.<android.drm.DrmManagerClient: android.drm.DrmManagerClient$EventHandler mEventHandler>;

        if $r1 != null goto label1;

        $r2 = r0.<android.drm.DrmManagerClient: android.drm.DrmManagerClient$InfoHandler mInfoHandler>;

        if $r2 != null goto label1;

        $r3 = new android.os.HandlerThread;

        specialinvoke $r3.<android.os.HandlerThread: void <init>(java.lang.String)>("DrmManagerClient.InfoHandler");

        r0.<android.drm.DrmManagerClient: android.os.HandlerThread mInfoThread> = $r3;

        virtualinvoke $r3.<android.os.HandlerThread: void start()>();

        $r4 = new android.drm.DrmManagerClient$InfoHandler;

        $r5 = r0.<android.drm.DrmManagerClient: android.os.HandlerThread mInfoThread>;

        $r6 = virtualinvoke $r5.<android.os.HandlerThread: android.os.Looper getLooper()>();

        specialinvoke $r4.<android.drm.DrmManagerClient$InfoHandler: void <init>(android.drm.DrmManagerClient,android.os.Looper)>(r0, $r6);

        r0.<android.drm.DrmManagerClient: android.drm.DrmManagerClient$InfoHandler mInfoHandler> = $r4;

        $r7 = new android.os.HandlerThread;

        specialinvoke $r7.<android.os.HandlerThread: void <init>(java.lang.String)>("DrmManagerClient.EventHandler");

        r0.<android.drm.DrmManagerClient: android.os.HandlerThread mEventThread> = $r7;

        virtualinvoke $r7.<android.os.HandlerThread: void start()>();

        $r8 = new android.drm.DrmManagerClient$EventHandler;

        $r9 = r0.<android.drm.DrmManagerClient: android.os.HandlerThread mEventThread>;

        $r10 = virtualinvoke $r9.<android.os.HandlerThread: android.os.Looper getLooper()>();

        specialinvoke $r8.<android.drm.DrmManagerClient$EventHandler: void <init>(android.drm.DrmManagerClient,android.os.Looper)>(r0, $r10);

        r0.<android.drm.DrmManagerClient: android.drm.DrmManagerClient$EventHandler mEventHandler> = $r8;

     label1:
        return;
    }

    private void createListeners()
    {
        android.drm.DrmManagerClient r0;
        java.lang.ref.WeakReference $r1;
        int $i0;

        r0 := @this: android.drm.DrmManagerClient;

        $i0 = r0.<android.drm.DrmManagerClient: int mUniqueId>;

        $r1 = new java.lang.ref.WeakReference;

        specialinvoke $r1.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r0);

        specialinvoke r0.<android.drm.DrmManagerClient: void _setListeners(int,java.lang.Object)>($i0, $r1);

        return;
    }

    private int getErrorType(int)
    {
        android.drm.DrmManagerClient r0;
        int i1;
        short s2;

        r0 := @this: android.drm.DrmManagerClient;

        i1 := @parameter0: int;

        if i1 == 1 goto label1;

        if i1 == 2 goto label1;

        if i1 == 3 goto label1;

        s2 = -1;

        goto label2;

     label1:
        s2 = 2006;

     label2:
        return s2;
    }

    private int getEventType(int)
    {
        android.drm.DrmManagerClient r0;
        int i1;
        short s2;

        r0 := @this: android.drm.DrmManagerClient;

        i1 := @parameter0: int;

        if i1 == 1 goto label1;

        if i1 == 2 goto label1;

        if i1 == 3 goto label1;

        s2 = -1;

        goto label2;

     label1:
        s2 = 1002;

     label2:
        return s2;
    }

    public static void notify(java.lang.Object, int, int, java.lang.String)
    {
        int i0, i1;
        android.drm.DrmManagerClient$InfoHandler r0, $r3;
        java.lang.ref.WeakReference $r1;
        java.lang.Object $r2, r4;
        java.lang.String r5;
        android.drm.DrmManagerClient r6;
        android.os.Message r7;

        r4 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r5 := @parameter3: java.lang.String;

        $r1 = (java.lang.ref.WeakReference) r4;

        $r2 = virtualinvoke $r1.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r6 = (android.drm.DrmManagerClient) $r2;

        if r6 == null goto label1;

        r0 = r6.<android.drm.DrmManagerClient: android.drm.DrmManagerClient$InfoHandler mInfoHandler>;

        if r0 == null goto label1;

        r7 = virtualinvoke r0.<android.drm.DrmManagerClient$InfoHandler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(1, i0, i1, r5);

        $r3 = r6.<android.drm.DrmManagerClient: android.drm.DrmManagerClient$InfoHandler mInfoHandler>;

        virtualinvoke $r3.<android.drm.DrmManagerClient$InfoHandler: boolean sendMessage(android.os.Message)>(r7);

     label1:
        return;
    }

    public android.drm.DrmInfo acquireDrmInfo(android.drm.DrmInfoRequest)
    {
        android.drm.DrmManagerClient r0;
        android.drm.DrmInfoRequest r1;
        java.lang.IllegalArgumentException $r2;
        boolean $z0;
        int $i0;
        android.drm.DrmInfo $r3;

        r0 := @this: android.drm.DrmManagerClient;

        r1 := @parameter0: android.drm.DrmInfoRequest;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<android.drm.DrmInfoRequest: boolean isValid()>();

        if $z0 == 0 goto label1;

        $i0 = r0.<android.drm.DrmManagerClient: int mUniqueId>;

        $r3 = specialinvoke r0.<android.drm.DrmManagerClient: android.drm.DrmInfo _acquireDrmInfo(int,android.drm.DrmInfoRequest)>($i0, r1);

        return $r3;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Given drmInfoRequest is invalid/null");

        throw $r2;
    }

    public int acquireRights(android.drm.DrmInfoRequest)
    {
        android.drm.DrmManagerClient r0;
        int $i0;
        android.drm.DrmInfoRequest r1;
        android.drm.DrmInfo r2;

        r0 := @this: android.drm.DrmManagerClient;

        r1 := @parameter0: android.drm.DrmInfoRequest;

        r2 = virtualinvoke r0.<android.drm.DrmManagerClient: android.drm.DrmInfo acquireDrmInfo(android.drm.DrmInfoRequest)>(r1);

        if r2 != null goto label1;

        return -2000;

     label1:
        $i0 = virtualinvoke r0.<android.drm.DrmManagerClient: int processDrmInfo(android.drm.DrmInfo)>(r2);

        return $i0;
    }

    public boolean canHandle(android.net.Uri, java.lang.String)
    {
        android.drm.DrmManagerClient r0;
        android.net.Uri r1, $r5;
        java.lang.String r2, $r4;
        java.lang.IllegalArgumentException $r3;
        boolean $z0, $z1;

        r0 := @this: android.drm.DrmManagerClient;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String;

        if r1 == null goto label1;

        $r5 = <android.net.Uri: android.net.Uri EMPTY>;

        if $r5 != r1 goto label2;

     label1:
        if r2 == null goto label3;

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 != 0 goto label3;

     label2:
        $r4 = specialinvoke r0.<android.drm.DrmManagerClient: java.lang.String convertUriToPath(android.net.Uri)>(r1);

        $z1 = virtualinvoke r0.<android.drm.DrmManagerClient: boolean canHandle(java.lang.String,java.lang.String)>($r4, r2);

        return $z1;

     label3:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Uri or the mimetype should be non null");

        throw $r3;
    }

    public boolean canHandle(java.lang.String, java.lang.String)
    {
        android.drm.DrmManagerClient r0;
        java.lang.String r1, r2;
        java.lang.IllegalArgumentException $r3;
        boolean $z0, $z1, $z2;
        int $i0;

        r0 := @this: android.drm.DrmManagerClient;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        if r1 == null goto label1;

        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z2 == 0 goto label2;

     label1:
        if r2 == null goto label3;

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 != 0 goto label3;

     label2:
        $i0 = r0.<android.drm.DrmManagerClient: int mUniqueId>;

        $z1 = specialinvoke r0.<android.drm.DrmManagerClient: boolean _canHandle(int,java.lang.String,java.lang.String)>($i0, r1, r2);

        return $z1;

     label3:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Path or the mimetype should be non null");

        throw $r3;
    }

    public int checkRightsStatus(android.net.Uri)
    {
        android.drm.DrmManagerClient r0;
        android.net.Uri r1, $r3;
        java.lang.IllegalArgumentException $r2;
        java.lang.String $r4;
        int $i0;

        r0 := @this: android.drm.DrmManagerClient;

        r1 := @parameter0: android.net.Uri;

        if r1 == null goto label1;

        $r3 = <android.net.Uri: android.net.Uri EMPTY>;

        if $r3 == r1 goto label1;

        $r4 = specialinvoke r0.<android.drm.DrmManagerClient: java.lang.String convertUriToPath(android.net.Uri)>(r1);

        $i0 = virtualinvoke r0.<android.drm.DrmManagerClient: int checkRightsStatus(java.lang.String)>($r4);

        return $i0;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Given uri is not valid");

        throw $r2;
    }

    public int checkRightsStatus(android.net.Uri, int)
    {
        android.drm.DrmManagerClient r0;
        android.net.Uri r1, $r3;
        int i0, $i1;
        java.lang.IllegalArgumentException $r2;
        java.lang.String $r4;

        r0 := @this: android.drm.DrmManagerClient;

        r1 := @parameter0: android.net.Uri;

        i0 := @parameter1: int;

        if r1 == null goto label1;

        $r3 = <android.net.Uri: android.net.Uri EMPTY>;

        if $r3 == r1 goto label1;

        $r4 = specialinvoke r0.<android.drm.DrmManagerClient: java.lang.String convertUriToPath(android.net.Uri)>(r1);

        $i1 = virtualinvoke r0.<android.drm.DrmManagerClient: int checkRightsStatus(java.lang.String,int)>($r4, i0);

        return $i1;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Given uri is not valid");

        throw $r2;
    }

    public int checkRightsStatus(java.lang.String)
    {
        android.drm.DrmManagerClient r0;
        java.lang.String r1;
        int $i0;

        r0 := @this: android.drm.DrmManagerClient;

        r1 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<android.drm.DrmManagerClient: int checkRightsStatus(java.lang.String,int)>(r1, 0);

        return $i0;
    }

    public int checkRightsStatus(java.lang.String, int)
    {
        android.drm.DrmManagerClient r0;
        java.lang.String r1;
        int i0, $i1, $i2;
        boolean $z0, $z1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: android.drm.DrmManagerClient;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 != 0 goto label1;

        $z1 = staticinvoke <android.drm.DrmStore$Action: boolean isValid(int)>(i0);

        if $z1 == 0 goto label1;

        $i1 = r0.<android.drm.DrmManagerClient: int mUniqueId>;

        $i2 = specialinvoke r0.<android.drm.DrmManagerClient: int _checkRightsStatus(int,java.lang.String,int)>($i1, r1, i0);

        return $i2;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Given path or action is not valid");

        throw $r2;
    }

    public void close()
    {
        android.drm.DrmManagerClient r0;
        dalvik.system.CloseGuard $r1;
        java.util.concurrent.atomic.AtomicBoolean $r2;
        boolean $z0;
        android.drm.DrmManagerClient$EventHandler $r3;
        android.drm.DrmManagerClient$InfoHandler $r4;
        int $i0;
        android.os.HandlerThread $r5, $r6;

        r0 := @this: android.drm.DrmManagerClient;

        $r1 = r0.<android.drm.DrmManagerClient: dalvik.system.CloseGuard mCloseGuard>;

        virtualinvoke $r1.<dalvik.system.CloseGuard: void close()>();

        $r2 = r0.<android.drm.DrmManagerClient: java.util.concurrent.atomic.AtomicBoolean mClosed>;

        $z0 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicBoolean: boolean compareAndSet(boolean,boolean)>(0, 1);

        if $z0 == 0 goto label3;

        $r3 = r0.<android.drm.DrmManagerClient: android.drm.DrmManagerClient$EventHandler mEventHandler>;

        if $r3 == null goto label1;

        $r6 = r0.<android.drm.DrmManagerClient: android.os.HandlerThread mEventThread>;

        virtualinvoke $r6.<android.os.HandlerThread: boolean quit()>();

        r0.<android.drm.DrmManagerClient: android.os.HandlerThread mEventThread> = null;

     label1:
        $r4 = r0.<android.drm.DrmManagerClient: android.drm.DrmManagerClient$InfoHandler mInfoHandler>;

        if $r4 == null goto label2;

        $r5 = r0.<android.drm.DrmManagerClient: android.os.HandlerThread mInfoThread>;

        virtualinvoke $r5.<android.os.HandlerThread: boolean quit()>();

        r0.<android.drm.DrmManagerClient: android.os.HandlerThread mInfoThread> = null;

     label2:
        r0.<android.drm.DrmManagerClient: android.drm.DrmManagerClient$EventHandler mEventHandler> = null;

        r0.<android.drm.DrmManagerClient: android.drm.DrmManagerClient$InfoHandler mInfoHandler> = null;

        r0.<android.drm.DrmManagerClient: android.drm.DrmManagerClient$OnEventListener mOnEventListener> = null;

        r0.<android.drm.DrmManagerClient: android.drm.DrmManagerClient$OnInfoListener mOnInfoListener> = null;

        r0.<android.drm.DrmManagerClient: android.drm.DrmManagerClient$OnErrorListener mOnErrorListener> = null;

        $i0 = r0.<android.drm.DrmManagerClient: int mUniqueId>;

        specialinvoke r0.<android.drm.DrmManagerClient: void _release(int)>($i0);

     label3:
        return;
    }

    public android.drm.DrmConvertedStatus closeConvertSession(int)
    {
        android.drm.DrmManagerClient r0;
        int i0, $i1;
        android.drm.DrmConvertedStatus $r1;

        r0 := @this: android.drm.DrmManagerClient;

        i0 := @parameter0: int;

        $i1 = r0.<android.drm.DrmManagerClient: int mUniqueId>;

        $r1 = specialinvoke r0.<android.drm.DrmManagerClient: android.drm.DrmConvertedStatus _closeConvertSession(int,int)>($i1, i0);

        return $r1;
    }

    public android.drm.DrmConvertedStatus convertData(int, byte[])
    {
        android.drm.DrmManagerClient r0;
        int i0, $i1, $i2;
        byte[] r1;
        java.lang.IllegalArgumentException $r2;
        android.drm.DrmConvertedStatus $r3;

        r0 := @this: android.drm.DrmManagerClient;

        i0 := @parameter0: int;

        r1 := @parameter1: byte[];

        if r1 == null goto label1;

        $i1 = lengthof r1;

        if $i1 <= 0 goto label1;

        $i2 = r0.<android.drm.DrmManagerClient: int mUniqueId>;

        $r3 = specialinvoke r0.<android.drm.DrmManagerClient: android.drm.DrmConvertedStatus _convertData(int,int,byte[])>($i2, i0, r1);

        return $r3;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Given inputData should be non null");

        throw $r2;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.drm.DrmManagerClient r0;
        dalvik.system.CloseGuard $r2, $r3;
        java.lang.Throwable $r4;

        r0 := @this: android.drm.DrmManagerClient;

     label1:
        $r2 = r0.<android.drm.DrmManagerClient: dalvik.system.CloseGuard mCloseGuard>;

        if $r2 == null goto label2;

        $r3 = r0.<android.drm.DrmManagerClient: dalvik.system.CloseGuard mCloseGuard>;

        virtualinvoke $r3.<dalvik.system.CloseGuard: void warnIfOpen()>();

     label2:
        virtualinvoke r0.<android.drm.DrmManagerClient: void close()>();

     label3:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        return;

     label4:
        $r4 := @caughtexception;

        specialinvoke r0.<java.lang.Object: void finalize()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public java.lang.String[] getAvailableDrmEngines()
    {
        android.drm.DrmManagerClient r0;
        android.drm.DrmSupportInfo[] r1;
        int $i0, $i1, $i2, i3;
        java.util.ArrayList $r3;
        java.lang.String[] $r4, $r6;
        java.lang.Object[] $r5;
        android.drm.DrmSupportInfo $r7;
        java.lang.String $r8;

        r0 := @this: android.drm.DrmManagerClient;

        $i0 = r0.<android.drm.DrmManagerClient: int mUniqueId>;

        r1 = specialinvoke r0.<android.drm.DrmManagerClient: android.drm.DrmSupportInfo[] _getAllSupportInfo(int)>($i0);

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        i3 = 0;

     label1:
        $i1 = lengthof r1;

        if i3 >= $i1 goto label2;

        $r7 = r1[i3];

        $r8 = virtualinvoke $r7.<android.drm.DrmSupportInfo: java.lang.String getDescriprition()>();

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r8);

        i3 = i3 + 1;

        goto label1;

     label2:
        $i2 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        $r4 = newarray (java.lang.String)[$i2];

        $r5 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r4);

        $r6 = (java.lang.String[]) $r5;

        return $r6;
    }

    public java.util.Collection getAvailableDrmSupportInfo()
    {
        android.drm.DrmManagerClient r0;
        int $i0;
        android.drm.DrmSupportInfo[] $r1;
        java.util.List $r2;

        r0 := @this: android.drm.DrmManagerClient;

        $i0 = r0.<android.drm.DrmManagerClient: int mUniqueId>;

        $r1 = specialinvoke r0.<android.drm.DrmManagerClient: android.drm.DrmSupportInfo[] _getAllSupportInfo(int)>($i0);

        $r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r1);

        return $r2;
    }

    public android.content.ContentValues getConstraints(android.net.Uri, int)
    {
        android.drm.DrmManagerClient r0;
        android.net.Uri r1, $r3;
        int i0;
        java.lang.IllegalArgumentException $r2;
        java.lang.String $r4;
        android.content.ContentValues $r5;

        r0 := @this: android.drm.DrmManagerClient;

        r1 := @parameter0: android.net.Uri;

        i0 := @parameter1: int;

        if r1 == null goto label1;

        $r3 = <android.net.Uri: android.net.Uri EMPTY>;

        if $r3 == r1 goto label1;

        $r4 = specialinvoke r0.<android.drm.DrmManagerClient: java.lang.String convertUriToPath(android.net.Uri)>(r1);

        $r5 = virtualinvoke r0.<android.drm.DrmManagerClient: android.content.ContentValues getConstraints(java.lang.String,int)>($r4, i0);

        return $r5;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Uri should be non null");

        throw $r2;
    }

    public android.content.ContentValues getConstraints(java.lang.String, int)
    {
        android.drm.DrmManagerClient r0;
        java.lang.String r1;
        int i0, $i1;
        boolean $z0, $z1;
        android.content.ContentValues $r2;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: android.drm.DrmManagerClient;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 != 0 goto label1;

        $z1 = staticinvoke <android.drm.DrmStore$Action: boolean isValid(int)>(i0);

        if $z1 == 0 goto label1;

        $i1 = r0.<android.drm.DrmManagerClient: int mUniqueId>;

        $r2 = specialinvoke r0.<android.drm.DrmManagerClient: android.content.ContentValues _getConstraints(int,java.lang.String,int)>($i1, r1, i0);

        return $r2;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Given usage or path is invalid/null");

        throw $r3;
    }

    public int getDrmObjectType(android.net.Uri, java.lang.String)
    {
        android.drm.DrmManagerClient r0;
        java.lang.String r1, r7;
        java.lang.IllegalArgumentException $r3;
        boolean $z0;
        int $i0;
        android.net.Uri $r4, r6;
        java.lang.Exception $r5;

        r0 := @this: android.drm.DrmManagerClient;

        r6 := @parameter0: android.net.Uri;

        r1 := @parameter1: java.lang.String;

        if r6 == null goto label1;

        $r4 = <android.net.Uri: android.net.Uri EMPTY>;

        if $r4 != r6 goto label2;

     label1:
        if r1 == null goto label6;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 != 0 goto label6;

     label2:
        r7 = specialinvoke r0.<android.drm.DrmManagerClient: java.lang.String convertUriToPath(android.net.Uri)>(r6);

     label3:
        goto label5;

     label4:
        $r5 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("DrmManagerClient", "Given Uri could not be found in media store");

        r7 = "";

     label5:
        $i0 = virtualinvoke r0.<android.drm.DrmManagerClient: int getDrmObjectType(java.lang.String,java.lang.String)>(r7, r1);

        return $i0;

     label6:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Uri or the mimetype should be non null");

        throw $r3;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    public int getDrmObjectType(java.lang.String, java.lang.String)
    {
        android.drm.DrmManagerClient r0;
        java.lang.String r1, r2;
        java.lang.IllegalArgumentException $r3;
        boolean $z0, $z1;
        int $i0, $i1;

        r0 := @this: android.drm.DrmManagerClient;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        if r1 == null goto label1;

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z1 == 0 goto label2;

     label1:
        if r2 == null goto label3;

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 != 0 goto label3;

     label2:
        $i0 = r0.<android.drm.DrmManagerClient: int mUniqueId>;

        $i1 = specialinvoke r0.<android.drm.DrmManagerClient: int _getDrmObjectType(int,java.lang.String,java.lang.String)>($i0, r1, r2);

        return $i1;

     label3:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Path or the mimetype should be non null");

        throw $r3;
    }

    public android.content.ContentValues getMetadata(android.net.Uri)
    {
        android.drm.DrmManagerClient r0;
        android.net.Uri r1, $r3;
        java.lang.IllegalArgumentException $r2;
        java.lang.String $r4;
        android.content.ContentValues $r5;

        r0 := @this: android.drm.DrmManagerClient;

        r1 := @parameter0: android.net.Uri;

        if r1 == null goto label1;

        $r3 = <android.net.Uri: android.net.Uri EMPTY>;

        if $r3 == r1 goto label1;

        $r4 = specialinvoke r0.<android.drm.DrmManagerClient: java.lang.String convertUriToPath(android.net.Uri)>(r1);

        $r5 = virtualinvoke r0.<android.drm.DrmManagerClient: android.content.ContentValues getMetadata(java.lang.String)>($r4);

        return $r5;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Uri should be non null");

        throw $r2;
    }

    public android.content.ContentValues getMetadata(java.lang.String)
    {
        android.drm.DrmManagerClient r0;
        java.lang.String r1;
        java.lang.IllegalArgumentException $r2;
        boolean $z0;
        int $i0;
        android.content.ContentValues $r3;

        r0 := @this: android.drm.DrmManagerClient;

        r1 := @parameter0: java.lang.String;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 != 0 goto label1;

        $i0 = r0.<android.drm.DrmManagerClient: int mUniqueId>;

        $r3 = specialinvoke r0.<android.drm.DrmManagerClient: android.content.ContentValues _getMetadata(int,java.lang.String)>($i0, r1);

        return $r3;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Given path is invalid/null");

        throw $r2;
    }

    public java.lang.String getOriginalMimeType(android.net.Uri)
    {
        android.drm.DrmManagerClient r0;
        android.net.Uri r1, $r3;
        java.lang.IllegalArgumentException $r2;
        java.lang.String $r4, $r5;

        r0 := @this: android.drm.DrmManagerClient;

        r1 := @parameter0: android.net.Uri;

        if r1 == null goto label1;

        $r3 = <android.net.Uri: android.net.Uri EMPTY>;

        if $r3 == r1 goto label1;

        $r4 = specialinvoke r0.<android.drm.DrmManagerClient: java.lang.String convertUriToPath(android.net.Uri)>(r1);

        $r5 = virtualinvoke r0.<android.drm.DrmManagerClient: java.lang.String getOriginalMimeType(java.lang.String)>($r4);

        return $r5;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Given uri is not valid");

        throw $r2;
    }

    public java.lang.String getOriginalMimeType(java.lang.String)
    {
        android.drm.DrmManagerClient r0;
        java.io.File r1;
        java.lang.IllegalArgumentException $r2;
        boolean $z0, $z1;
        int $i0;
        java.lang.Throwable $r3, $r4, $r5, $r6;
        java.lang.String r7, r12, r13, r14;
        java.io.FileInputStream r8, r10, r11;
        java.io.FileDescriptor r9;

        r0 := @this: android.drm.DrmManagerClient;

        r7 := @parameter0: java.lang.String;

        if r7 == null goto label27;

        $z0 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 != 0 goto label27;

        r8 = null;

        r9 = null;

        r10 = null;

        r11 = null;

     label01:
        r1 = new java.io.File;

     label02:
        r10 = null;

        r11 = null;

     label03:
        specialinvoke r1.<java.io.File: void <init>(java.lang.String)>(r7);

     label04:
        r10 = null;

        r11 = null;

     label05:
        $z1 = virtualinvoke r1.<java.io.File: boolean exists()>();

        if $z1 == 0 goto label12;

     label06:
        r10 = null;

        r11 = null;

     label07:
        r8 = new java.io.FileInputStream;

     label08:
        r10 = null;

        r11 = null;

     label09:
        specialinvoke r8.<java.io.FileInputStream: void <init>(java.io.File)>(r1);

     label10:
        r10 = r8;

        r11 = r8;

     label11:
        r9 = virtualinvoke r8.<java.io.FileInputStream: java.io.FileDescriptor getFD()>();

     label12:
        r10 = r8;

        r11 = r8;

     label13:
        $i0 = r0.<android.drm.DrmManagerClient: int mUniqueId>;

        r12 = specialinvoke r0.<android.drm.DrmManagerClient: java.lang.String _getOriginalMimeType(int,java.lang.String,java.io.FileDescriptor)>($i0, r7, r9);

     label14:
        r13 = r12;

        if r8 == null goto label26;

        r14 = r12;

     label15:
        virtualinvoke r8.<java.io.FileInputStream: void close()>();

     label16:
        r13 = r12;

        goto label26;

     label17:
        $r5 := @caughtexception;

        r12 = r14;

        goto label16;

     label18:
        $r6 := @caughtexception;

        if r10 == null goto label22;

     label19:
        virtualinvoke r10.<java.io.FileInputStream: void close()>();

     label20:
        goto label22;

     label21:
        $r4 := @caughtexception;

        goto label20;

     label22:
        throw $r6;

     label23:
        $r3 := @caughtexception;

        r13 = null;

        if r11 == null goto label26;

        r14 = null;

     label24:
        virtualinvoke r11.<java.io.FileInputStream: void close()>();

     label25:
        r12 = null;

        goto label16;

     label26:
        return r13;

     label27:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Given path should be non null");

        throw $r2;

        catch java.io.IOException from label01 to label02 with label23;
        catch java.lang.Throwable from label01 to label02 with label18;
        catch java.io.IOException from label03 to label04 with label23;
        catch java.lang.Throwable from label03 to label04 with label18;
        catch java.io.IOException from label05 to label06 with label23;
        catch java.lang.Throwable from label05 to label06 with label18;
        catch java.io.IOException from label07 to label08 with label23;
        catch java.lang.Throwable from label07 to label08 with label18;
        catch java.io.IOException from label09 to label10 with label23;
        catch java.lang.Throwable from label09 to label10 with label18;
        catch java.io.IOException from label11 to label12 with label23;
        catch java.lang.Throwable from label11 to label12 with label18;
        catch java.io.IOException from label13 to label14 with label23;
        catch java.lang.Throwable from label13 to label14 with label18;
        catch java.io.IOException from label15 to label16 with label17;
        catch java.io.IOException from label19 to label20 with label21;
        catch java.io.IOException from label24 to label25 with label17;
    }

    public void installDrmEngine(java.lang.String)
    {
        android.drm.DrmManagerClient r0;
        java.lang.String r1, $r8;
        java.lang.StringBuilder $r3;
        java.lang.IllegalArgumentException $r7;
        boolean $z0;
        int $i0;

        r0 := @this: android.drm.DrmManagerClient;

        r1 := @parameter0: java.lang.String;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 != 0 goto label1;

        $i0 = r0.<android.drm.DrmManagerClient: int mUniqueId>;

        specialinvoke r0.<android.drm.DrmManagerClient: void _installDrmEngine(int,java.lang.String)>($i0, r1);

        return;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Given engineFilePath: ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("is not valid");

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r7;
    }

    public int openConvertSession(java.lang.String)
    {
        android.drm.DrmManagerClient r0;
        java.lang.String r1;
        java.lang.IllegalArgumentException $r2;
        boolean $z0;
        int $i0, $i1;

        r0 := @this: android.drm.DrmManagerClient;

        r1 := @parameter0: java.lang.String;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 != 0 goto label1;

        $i0 = r0.<android.drm.DrmManagerClient: int mUniqueId>;

        $i1 = specialinvoke r0.<android.drm.DrmManagerClient: int _openConvertSession(int,java.lang.String)>($i0, r1);

        return $i1;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Path or the mimeType should be non null");

        throw $r2;
    }

    public int processDrmInfo(android.drm.DrmInfo)
    {
        android.drm.DrmManagerClient r0;
        android.drm.DrmManagerClient$EventHandler r1, $r3;
        java.lang.IllegalArgumentException $r2;
        boolean $z0, $z1;
        android.drm.DrmInfo r4;
        short s0;
        android.os.Message r5;

        r0 := @this: android.drm.DrmManagerClient;

        r4 := @parameter0: android.drm.DrmInfo;

        if r4 == null goto label3;

        $z0 = virtualinvoke r4.<android.drm.DrmInfo: boolean isValid()>();

        if $z0 == 0 goto label3;

        s0 = -2000;

        r1 = r0.<android.drm.DrmManagerClient: android.drm.DrmManagerClient$EventHandler mEventHandler>;

        if r1 == null goto label2;

        r5 = virtualinvoke r1.<android.drm.DrmManagerClient$EventHandler: android.os.Message obtainMessage(int,java.lang.Object)>(1002, r4);

        $r3 = r0.<android.drm.DrmManagerClient: android.drm.DrmManagerClient$EventHandler mEventHandler>;

        $z1 = virtualinvoke $r3.<android.drm.DrmManagerClient$EventHandler: boolean sendMessage(android.os.Message)>(r5);

        if $z1 == 0 goto label1;

        s0 = 0;

        goto label2;

     label1:
        s0 = -2000;

     label2:
        return s0;

     label3:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Given drmInfo is invalid/null");

        throw $r2;
    }

    public void release()
    {
        android.drm.DrmManagerClient r0;

        r0 := @this: android.drm.DrmManagerClient;

        virtualinvoke r0.<android.drm.DrmManagerClient: void close()>();

        return;
    }

    public int removeAllRights()
    {
        android.drm.DrmManagerClient r0;
        android.drm.DrmManagerClient$EventHandler $r1, r2;
        boolean $z0;
        short s0;
        android.os.Message r3;

        r0 := @this: android.drm.DrmManagerClient;

        s0 = -2000;

        r2 = r0.<android.drm.DrmManagerClient: android.drm.DrmManagerClient$EventHandler mEventHandler>;

        if r2 == null goto label2;

        r3 = virtualinvoke r2.<android.drm.DrmManagerClient$EventHandler: android.os.Message obtainMessage(int)>(1001);

        $r1 = r0.<android.drm.DrmManagerClient: android.drm.DrmManagerClient$EventHandler mEventHandler>;

        $z0 = virtualinvoke $r1.<android.drm.DrmManagerClient$EventHandler: boolean sendMessage(android.os.Message)>(r3);

        if $z0 == 0 goto label1;

        s0 = 0;

        goto label2;

     label1:
        s0 = -2000;

     label2:
        return s0;
    }

    public int removeRights(android.net.Uri)
    {
        android.drm.DrmManagerClient r0;
        android.net.Uri r1, $r3;
        java.lang.IllegalArgumentException $r2;
        java.lang.String $r4;
        int $i0;

        r0 := @this: android.drm.DrmManagerClient;

        r1 := @parameter0: android.net.Uri;

        if r1 == null goto label1;

        $r3 = <android.net.Uri: android.net.Uri EMPTY>;

        if $r3 == r1 goto label1;

        $r4 = specialinvoke r0.<android.drm.DrmManagerClient: java.lang.String convertUriToPath(android.net.Uri)>(r1);

        $i0 = virtualinvoke r0.<android.drm.DrmManagerClient: int removeRights(java.lang.String)>($r4);

        return $i0;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Given uri is not valid");

        throw $r2;
    }

    public int removeRights(java.lang.String)
    {
        android.drm.DrmManagerClient r0;
        java.lang.String r1;
        java.lang.IllegalArgumentException $r2;
        boolean $z0;
        int $i0, $i1;

        r0 := @this: android.drm.DrmManagerClient;

        r1 := @parameter0: java.lang.String;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 != 0 goto label1;

        $i0 = r0.<android.drm.DrmManagerClient: int mUniqueId>;

        $i1 = specialinvoke r0.<android.drm.DrmManagerClient: int _removeRights(int,java.lang.String)>($i0, r1);

        return $i1;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Given path should be non null");

        throw $r2;
    }

    public int saveRights(android.drm.DrmRights, java.lang.String, java.lang.String) throws java.io.IOException
    {
        android.drm.DrmManagerClient r0;
        android.drm.DrmRights r1;
        java.lang.String r2, r3;
        java.lang.IllegalArgumentException $r4;
        boolean $z0, $z1;
        byte[] $r5;
        int $i0, $i1;

        r0 := @this: android.drm.DrmManagerClient;

        r1 := @parameter0: android.drm.DrmRights;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        if r1 == null goto label2;

        $z0 = virtualinvoke r1.<android.drm.DrmRights: boolean isValid()>();

        if $z0 == 0 goto label2;

        if r2 == null goto label1;

        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z1 != 0 goto label1;

        $r5 = virtualinvoke r1.<android.drm.DrmRights: byte[] getData()>();

        staticinvoke <android.drm.DrmUtils: void writeToFile(java.lang.String,byte[])>(r2, $r5);

     label1:
        $i0 = r0.<android.drm.DrmManagerClient: int mUniqueId>;

        $i1 = specialinvoke r0.<android.drm.DrmManagerClient: int _saveRights(int,android.drm.DrmRights,java.lang.String,java.lang.String)>($i0, r1, r2, r3);

        return $i1;

     label2:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Given drmRights or contentPath is not valid");

        throw $r4;
    }

    public void setOnErrorListener(android.drm.DrmManagerClient$OnErrorListener)
    {
        android.drm.DrmManagerClient r0;
        java.lang.Throwable $r1;
        android.drm.DrmManagerClient$OnErrorListener r2;

        r0 := @this: android.drm.DrmManagerClient;

        r2 := @parameter0: android.drm.DrmManagerClient$OnErrorListener;

        entermonitor r0;

     label1:
        r0.<android.drm.DrmManagerClient: android.drm.DrmManagerClient$OnErrorListener mOnErrorListener> = r2;

     label2:
        if r2 == null goto label4;

     label3:
        specialinvoke r0.<android.drm.DrmManagerClient: void createListeners()>();

     label4:
        exitmonitor r0;

        return;

     label5:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void setOnEventListener(android.drm.DrmManagerClient$OnEventListener)
    {
        android.drm.DrmManagerClient r0;
        java.lang.Throwable $r1;
        android.drm.DrmManagerClient$OnEventListener r2;

        r0 := @this: android.drm.DrmManagerClient;

        r2 := @parameter0: android.drm.DrmManagerClient$OnEventListener;

        entermonitor r0;

     label1:
        r0.<android.drm.DrmManagerClient: android.drm.DrmManagerClient$OnEventListener mOnEventListener> = r2;

     label2:
        if r2 == null goto label4;

     label3:
        specialinvoke r0.<android.drm.DrmManagerClient: void createListeners()>();

     label4:
        exitmonitor r0;

        return;

     label5:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void setOnInfoListener(android.drm.DrmManagerClient$OnInfoListener)
    {
        android.drm.DrmManagerClient r0;
        java.lang.Throwable $r1;
        android.drm.DrmManagerClient$OnInfoListener r2;

        r0 := @this: android.drm.DrmManagerClient;

        r2 := @parameter0: android.drm.DrmManagerClient$OnInfoListener;

        entermonitor r0;

     label1:
        r0.<android.drm.DrmManagerClient: android.drm.DrmManagerClient$OnInfoListener mOnInfoListener> = r2;

     label2:
        if r2 == null goto label4;

     label3:
        specialinvoke r0.<android.drm.DrmManagerClient: void createListeners()>();

     label4:
        exitmonitor r0;

        return;

     label5:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }
}
