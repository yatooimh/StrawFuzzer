public class android.drm.DrmOutputStream extends java.io.OutputStream
{
    private static final java.lang.String TAG;
    private final android.drm.DrmManagerClient mClient;
    private final java.io.FileDescriptor mFd;
    private final android.os.ParcelFileDescriptor mPfd;
    private int mSessionId;

    public void <init>(android.drm.DrmManagerClient, android.os.ParcelFileDescriptor, java.lang.String) throws java.io.IOException
    {
        android.drm.DrmOutputStream r0;
        android.os.ParcelFileDescriptor r1;
        java.lang.String r2, $r9;
        int i0;
        java.io.FileDescriptor $r3;
        android.drm.DrmManagerClient $r4, r10;
        java.lang.StringBuilder $r5;
        java.net.UnknownServiceException $r8;

        r0 := @this: android.drm.DrmOutputStream;

        r10 := @parameter0: android.drm.DrmManagerClient;

        r1 := @parameter1: android.os.ParcelFileDescriptor;

        r2 := @parameter2: java.lang.String;

        specialinvoke r0.<java.io.OutputStream: void <init>()>();

        r0.<android.drm.DrmOutputStream: int mSessionId> = -1;

        r0.<android.drm.DrmOutputStream: android.drm.DrmManagerClient mClient> = r10;

        r0.<android.drm.DrmOutputStream: android.os.ParcelFileDescriptor mPfd> = r1;

        $r3 = virtualinvoke r1.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        r0.<android.drm.DrmOutputStream: java.io.FileDescriptor mFd> = $r3;

        $r4 = r0.<android.drm.DrmOutputStream: android.drm.DrmManagerClient mClient>;

        i0 = virtualinvoke $r4.<android.drm.DrmManagerClient: int openConvertSession(java.lang.String)>(r2);

        r0.<android.drm.DrmOutputStream: int mSessionId> = i0;

        if i0 == -1 goto label1;

        return;

     label1:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to open DRM session for ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r8 = new java.net.UnknownServiceException;

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.net.UnknownServiceException: void <init>(java.lang.String)>($r9);

        throw $r8;
    }

    public void close() throws java.io.IOException
    {
        android.drm.DrmOutputStream r0;
        int $i0;
        android.os.ParcelFileDescriptor $r1;

        r0 := @this: android.drm.DrmOutputStream;

        $i0 = r0.<android.drm.DrmOutputStream: int mSessionId>;

        if $i0 != -1 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("DrmOutputStream", "Closing stream without finishing");

     label1:
        $r1 = r0.<android.drm.DrmOutputStream: android.os.ParcelFileDescriptor mPfd>;

        virtualinvoke $r1.<android.os.ParcelFileDescriptor: void close()>();

        return;
    }

    public void finish() throws java.io.IOException
    {
        android.drm.DrmOutputStream r0;
        android.drm.DrmConvertedStatus r1;
        int $i0, $i1, $i2, $i3, $i4, $i7;
        android.drm.DrmManagerClient $r2;
        java.lang.String $r7;
        long $l5;
        java.io.FileDescriptor $r8, $r11;
        byte[] $r9, $r10;
        java.lang.Throwable $r12;
        java.lang.StringBuilder r16;
        java.io.IOException r17;
        android.system.ErrnoException r18;

        r0 := @this: android.drm.DrmOutputStream;

        $r2 = r0.<android.drm.DrmOutputStream: android.drm.DrmManagerClient mClient>;

        $i0 = r0.<android.drm.DrmOutputStream: int mSessionId>;

        r1 = virtualinvoke $r2.<android.drm.DrmManagerClient: android.drm.DrmConvertedStatus closeConvertSession(int)>($i0);

        $i1 = r1.<android.drm.DrmConvertedStatus: int statusCode>;

        if $i1 != 1 goto label5;

     label1:
        $r8 = r0.<android.drm.DrmOutputStream: java.io.FileDescriptor mFd>;

        $i3 = r1.<android.drm.DrmConvertedStatus: int offset>;

        $l5 = (long) $i3;

        $i4 = <android.system.OsConstants: int SEEK_SET>;

        staticinvoke <android.system.Os: long lseek(java.io.FileDescriptor,long,int)>($r8, $l5, $i4);

     label2:
        goto label4;

     label3:
        $r12 := @caughtexception;

        r18 = (android.system.ErrnoException) $r12;

        virtualinvoke r18.<android.system.ErrnoException: java.io.IOException rethrowAsIOException()>();

     label4:
        $r11 = r0.<android.drm.DrmOutputStream: java.io.FileDescriptor mFd>;

        $r10 = r1.<android.drm.DrmConvertedStatus: byte[] convertedData>;

        $r9 = r1.<android.drm.DrmConvertedStatus: byte[] convertedData>;

        $i7 = lengthof $r9;

        staticinvoke <libcore.io.IoBridge: void write(java.io.FileDescriptor,byte[],int,int)>($r11, $r10, 0, $i7);

        r0.<android.drm.DrmOutputStream: int mSessionId> = -1;

        return;

     label5:
        r16 = new java.lang.StringBuilder;

        specialinvoke r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected DRM status: ");

        $i2 = r1.<android.drm.DrmConvertedStatus: int statusCode>;

        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        r17 = new java.io.IOException;

        $r7 = virtualinvoke r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r17.<java.io.IOException: void <init>(java.lang.String)>($r7);

        throw r17;

        catch android.system.ErrnoException from label1 to label2 with label3;
    }

    public void write(int) throws java.io.IOException
    {
        android.drm.DrmOutputStream r0;
        int i0;

        r0 := @this: android.drm.DrmOutputStream;

        i0 := @parameter0: int;

        staticinvoke <libcore.io.Streams: void writeSingleByte(java.io.OutputStream,int)>(r0, i0);

        return;
    }

    public void write(byte[], int, int) throws java.io.IOException
    {
        android.drm.DrmOutputStream r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        android.drm.DrmManagerClient $r1;
        java.lang.StringBuilder $r2;
        java.io.IOException $r5;
        java.lang.String $r6;
        byte[] $r7, $r8, r10, r11;
        java.io.FileDescriptor $r9;
        android.drm.DrmConvertedStatus r12;

        r0 := @this: android.drm.DrmOutputStream;

        r10 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i2 = lengthof r10;

        staticinvoke <libcore.util.ArrayUtils: void throwsIfOutOfBounds(int,int,int)>($i2, i0, i1);

        $i3 = lengthof r10;

        if i1 != $i3 goto label1;

        goto label2;

     label1:
        r11 = newarray (byte)[i1];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r10, i0, r11, 0, i1);

        r10 = r11;

     label2:
        $r1 = r0.<android.drm.DrmOutputStream: android.drm.DrmManagerClient mClient>;

        $i4 = r0.<android.drm.DrmOutputStream: int mSessionId>;

        r12 = virtualinvoke $r1.<android.drm.DrmManagerClient: android.drm.DrmConvertedStatus convertData(int,byte[])>($i4, r10);

        $i5 = r12.<android.drm.DrmConvertedStatus: int statusCode>;

        if $i5 != 1 goto label3;

        $r9 = r0.<android.drm.DrmOutputStream: java.io.FileDescriptor mFd>;

        $r8 = r12.<android.drm.DrmConvertedStatus: byte[] convertedData>;

        $r7 = r12.<android.drm.DrmConvertedStatus: byte[] convertedData>;

        $i7 = lengthof $r7;

        staticinvoke <libcore.io.IoBridge: void write(java.io.FileDescriptor,byte[],int,int)>($r9, $r8, 0, $i7);

        return;

     label3:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected DRM status: ");

        $i6 = r12.<android.drm.DrmConvertedStatus: int statusCode>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r5 = new java.io.IOException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>($r6);

        throw $r5;
    }

    public static void <clinit>()
    {
        <android.drm.DrmOutputStream: java.lang.String TAG> = "DrmOutputStream";

        return;
    }
}
