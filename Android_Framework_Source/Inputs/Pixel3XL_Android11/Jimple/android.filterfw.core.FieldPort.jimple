public class android.filterfw.core.FieldPort extends android.filterfw.core.InputPort
{
    protected java.lang.reflect.Field mField;
    protected boolean mHasFrame;
    protected java.lang.Object mValue;
    protected boolean mValueWaiting;

    public void <init>(android.filterfw.core.Filter, java.lang.String, java.lang.reflect.Field, boolean)
    {
        android.filterfw.core.FieldPort r0;
        android.filterfw.core.Filter r1;
        java.lang.String r2;
        java.lang.reflect.Field r3;
        boolean z0;

        r0 := @this: android.filterfw.core.FieldPort;

        r1 := @parameter0: android.filterfw.core.Filter;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.reflect.Field;

        z0 := @parameter3: boolean;

        specialinvoke r0.<android.filterfw.core.InputPort: void <init>(android.filterfw.core.Filter,java.lang.String)>(r1, r2);

        r0.<android.filterfw.core.FieldPort: boolean mValueWaiting> = 0;

        r0.<android.filterfw.core.FieldPort: java.lang.reflect.Field mField> = r3;

        r0.<android.filterfw.core.FieldPort: boolean mHasFrame> = z0;

        return;
    }

    public boolean acceptsFrame()
    {
        android.filterfw.core.FieldPort r0;
        boolean z0, $z1;
        java.lang.Throwable $r2;

        r0 := @this: android.filterfw.core.FieldPort;

        entermonitor r0;

     label1:
        z0 = r0.<android.filterfw.core.FieldPort: boolean mValueWaiting>;

     label2:
        exitmonitor r0;

        $z1 = z0 ^ 1;

        return $z1;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void clear()
    {
        android.filterfw.core.FieldPort r0;

        r0 := @this: android.filterfw.core.FieldPort;

        return;
    }

    public java.lang.Object getTarget()
    {
        android.filterfw.core.FieldPort r0;
        android.filterfw.core.Filter $r1;
        java.lang.reflect.Field $r2;
        java.lang.Throwable $r3;
        java.lang.Object r4;

        r0 := @this: android.filterfw.core.FieldPort;

     label1:
        $r2 = r0.<android.filterfw.core.FieldPort: java.lang.reflect.Field mField>;

        $r1 = r0.<android.filterfw.core.FieldPort: android.filterfw.core.Filter mFilter>;

        r4 = virtualinvoke $r2.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>($r1);

     label2:
        return r4;

     label3:
        $r3 := @caughtexception;

        return null;

        catch java.lang.IllegalAccessException from label1 to label2 with label3;
    }

    public boolean hasFrame()
    {
        android.filterfw.core.FieldPort r0;
        boolean z0;
        java.lang.Throwable $r2;

        r0 := @this: android.filterfw.core.FieldPort;

        entermonitor r0;

     label1:
        z0 = r0.<android.filterfw.core.FieldPort: boolean mHasFrame>;

     label2:
        exitmonitor r0;

        return z0;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public android.filterfw.core.Frame pullFrame()
    {
        android.filterfw.core.FieldPort r0;
        java.lang.RuntimeException r1;
        java.lang.String $r5;
        java.lang.Throwable $r6;
        java.lang.StringBuilder r7;

        r0 := @this: android.filterfw.core.FieldPort;

        entermonitor r0;

     label1:
        r1 = new java.lang.RuntimeException;

        r7 = new java.lang.StringBuilder;

        specialinvoke r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot pull frame on ");

        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");

        $r5 = virtualinvoke r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r1.<java.lang.RuntimeException: void <init>(java.lang.String)>($r5);

        throw r1;

     label2:
        $r6 := @caughtexception;

        exitmonitor r0;

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label2;
    }

    public void pushFrame(android.filterfw.core.Frame)
    {
        android.filterfw.core.FieldPort r0;
        android.filterfw.core.Frame r1;

        r0 := @this: android.filterfw.core.FieldPort;

        r1 := @parameter0: android.filterfw.core.Frame;

        virtualinvoke r0.<android.filterfw.core.FieldPort: void setFieldFrame(android.filterfw.core.Frame,boolean)>(r1, 0);

        return;
    }

    protected void setFieldFrame(android.filterfw.core.Frame, boolean)
    {
        android.filterfw.core.FieldPort r0;
        boolean z0, $z1;
        java.lang.Object $r1, $r2, r5;
        java.lang.Throwable $r3;
        android.filterfw.core.Frame r4;

        r0 := @this: android.filterfw.core.FieldPort;

        r4 := @parameter0: android.filterfw.core.Frame;

        z0 := @parameter1: boolean;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.filterfw.core.FieldPort: void assertPortIsOpen()>();

        virtualinvoke r0.<android.filterfw.core.FieldPort: void checkFrameType(android.filterfw.core.Frame,boolean)>(r4, z0);

        r5 = virtualinvoke r4.<android.filterfw.core.Frame: java.lang.Object getObjectValue()>();

     label2:
        if r5 != null goto label4;

     label3:
        $r2 = r0.<android.filterfw.core.FieldPort: java.lang.Object mValue>;

        if $r2 != null goto label5;

     label4:
        $r1 = r0.<android.filterfw.core.FieldPort: java.lang.Object mValue>;

        $z1 = virtualinvoke r5.<java.lang.Object: boolean equals(java.lang.Object)>($r1);

        if $z1 != 0 goto label6;

     label5:
        r0.<android.filterfw.core.FieldPort: java.lang.Object mValue> = r5;

        r0.<android.filterfw.core.FieldPort: boolean mValueWaiting> = 1;

     label6:
        r0.<android.filterfw.core.FieldPort: boolean mHasFrame> = 1;

     label7:
        exitmonitor r0;

        return;

     label8:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void setFrame(android.filterfw.core.Frame)
    {
        android.filterfw.core.FieldPort r0;
        android.filterfw.core.Frame r1;

        r0 := @this: android.filterfw.core.FieldPort;

        r1 := @parameter0: android.filterfw.core.Frame;

        virtualinvoke r0.<android.filterfw.core.FieldPort: void setFieldFrame(android.filterfw.core.Frame,boolean)>(r1, 1);

        return;
    }

    public java.lang.String toString()
    {
        android.filterfw.core.FieldPort r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r4, $r6;

        r0 := @this: android.filterfw.core.FieldPort;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("field ");

        $r4 = specialinvoke r0.<android.filterfw.core.InputPort: java.lang.String toString()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public void transfer(android.filterfw.core.FilterContext)
    {
        android.filterfw.core.FieldPort r0;
        boolean z0;
        java.lang.RuntimeException r1;
        java.lang.Object $r2;
        android.filterfw.core.Filter $r3, $r6;
        java.lang.reflect.Field $r4, $r9;
        java.lang.String $r5, $r10, $r13;
        java.lang.Throwable $r7, $r14;
        android.filterfw.core.FilterContext r15;
        java.lang.StringBuilder r17;

        r0 := @this: android.filterfw.core.FieldPort;

        r15 := @parameter0: android.filterfw.core.FilterContext;

        entermonitor r0;

     label01:
        z0 = r0.<android.filterfw.core.FieldPort: boolean mValueWaiting>;

     label02:
        if z0 == 0 goto label10;

     label03:
        $r4 = r0.<android.filterfw.core.FieldPort: java.lang.reflect.Field mField>;

        $r3 = r0.<android.filterfw.core.FieldPort: android.filterfw.core.Filter mFilter>;

        $r2 = r0.<android.filterfw.core.FieldPort: java.lang.Object mValue>;

        virtualinvoke $r4.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>($r3, $r2);

     label04:
        r0.<android.filterfw.core.FieldPort: boolean mValueWaiting> = 0;

     label05:
        if r15 == null goto label10;

     label06:
        $r6 = r0.<android.filterfw.core.FieldPort: android.filterfw.core.Filter mFilter>;

        $r5 = r0.<android.filterfw.core.FieldPort: java.lang.String mName>;

        virtualinvoke $r6.<android.filterfw.core.Filter: void notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>($r5, r15);

     label07:
        goto label10;

     label08:
        $r7 := @caughtexception;

     label09:
        r1 = new java.lang.RuntimeException;

        r17 = new java.lang.StringBuilder;

        specialinvoke r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Access to field \'");

        $r9 = r0.<android.filterfw.core.FieldPort: java.lang.reflect.Field mField>;

        $r10 = virtualinvoke $r9.<java.lang.reflect.Field: java.lang.String getName()>();

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' was denied!");

        $r13 = virtualinvoke r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r1.<java.lang.RuntimeException: void <init>(java.lang.String)>($r13);

        throw r1;

     label10:
        exitmonitor r0;

        return;

     label11:
        $r14 := @caughtexception;

        exitmonitor r0;

        throw $r14;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.IllegalAccessException from label03 to label04 with label08;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
    }
}
