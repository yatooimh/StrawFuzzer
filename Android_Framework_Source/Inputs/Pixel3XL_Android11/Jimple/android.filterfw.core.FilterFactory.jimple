public class android.filterfw.core.FilterFactory extends java.lang.Object
{
    private static final java.lang.String TAG;
    private static java.lang.Object mClassLoaderGuard;
    private static java.lang.ClassLoader mCurrentClassLoader;
    private static java.util.HashSet mLibraries;
    private static boolean mLogVerbose;
    private static android.filterfw.core.FilterFactory mSharedFactory;
    private java.util.HashSet mPackages;

    static void <clinit>()
    {
        java.lang.Thread $r0;
        java.lang.ClassLoader $r1;
        java.util.HashSet $r2;
        java.lang.Object $r3;
        boolean $z0;

        <android.filterfw.core.FilterFactory: java.lang.String TAG> = "FilterFactory";

        $r0 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r1 = virtualinvoke $r0.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();

        <android.filterfw.core.FilterFactory: java.lang.ClassLoader mCurrentClassLoader> = $r1;

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        <android.filterfw.core.FilterFactory: java.util.HashSet mLibraries> = $r2;

        $r3 = new java.lang.Object;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        <android.filterfw.core.FilterFactory: java.lang.Object mClassLoaderGuard> = $r3;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("FilterFactory", 2);

        <android.filterfw.core.FilterFactory: boolean mLogVerbose> = $z0;

        return;
    }

    public void <init>()
    {
        android.filterfw.core.FilterFactory r0;
        java.util.HashSet $r1;

        r0 := @this: android.filterfw.core.FilterFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        r0.<android.filterfw.core.FilterFactory: java.util.HashSet mPackages> = $r1;

        return;
    }

    public static void addFilterLibrary(java.lang.String)
    {
        boolean $z0, $z1, $z3;
        java.util.HashSet $r1, $r2;
        java.lang.ClassLoader $r3, r15;
        java.lang.String $r7, r9;
        java.lang.Throwable $r8;
        java.lang.Object r11;
        java.lang.StringBuilder r13;
        dalvik.system.PathClassLoader r14;

        r9 := @parameter0: java.lang.String;

        $z0 = <android.filterfw.core.FilterFactory: boolean mLogVerbose>;

        if $z0 == 0 goto label1;

        r13 = new java.lang.StringBuilder;

        specialinvoke r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Adding filter library ");

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        $r7 = virtualinvoke r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FilterFactory", $r7);

     label1:
        r11 = <android.filterfw.core.FilterFactory: java.lang.Object mClassLoaderGuard>;

        entermonitor r11;

     label2:
        $r1 = <android.filterfw.core.FilterFactory: java.util.HashSet mLibraries>;

        $z1 = virtualinvoke $r1.<java.util.HashSet: boolean contains(java.lang.Object)>(r9);

        if $z1 == 0 goto label5;

        $z3 = <android.filterfw.core.FilterFactory: boolean mLogVerbose>;

        if $z3 == 0 goto label3;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FilterFactory", "Library already added");

     label3:
        exitmonitor r11;

     label4:
        return;

     label5:
        $r2 = <android.filterfw.core.FilterFactory: java.util.HashSet mLibraries>;

        virtualinvoke $r2.<java.util.HashSet: boolean add(java.lang.Object)>(r9);

        r14 = new dalvik.system.PathClassLoader;

        $r3 = <android.filterfw.core.FilterFactory: java.lang.ClassLoader mCurrentClassLoader>;

        specialinvoke r14.<dalvik.system.PathClassLoader: void <init>(java.lang.String,java.lang.ClassLoader)>(r9, $r3);

        r15 = (java.lang.ClassLoader) r14;

        <android.filterfw.core.FilterFactory: java.lang.ClassLoader mCurrentClassLoader> = r15;

        exitmonitor r11;

     label6:
        return;

     label7:
        $r8 := @caughtexception;

     label8:
        exitmonitor r11;

     label9:
        throw $r8;

        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public static android.filterfw.core.FilterFactory sharedFactory()
    {
        android.filterfw.core.FilterFactory $r0, $r1, $r2;

        $r0 = <android.filterfw.core.FilterFactory: android.filterfw.core.FilterFactory mSharedFactory>;

        if $r0 != null goto label1;

        $r2 = new android.filterfw.core.FilterFactory;

        specialinvoke $r2.<android.filterfw.core.FilterFactory: void <init>()>();

        <android.filterfw.core.FilterFactory: android.filterfw.core.FilterFactory mSharedFactory> = $r2;

     label1:
        $r1 = <android.filterfw.core.FilterFactory: android.filterfw.core.FilterFactory mSharedFactory>;

        return $r1;
    }

    public void addPackage(java.lang.String)
    {
        android.filterfw.core.FilterFactory r0;
        java.lang.String r1, $r7;
        boolean $z0;
        java.util.HashSet $r3;
        java.lang.StringBuilder $r4;

        r0 := @this: android.filterfw.core.FilterFactory;

        r1 := @parameter0: java.lang.String;

        $z0 = <android.filterfw.core.FilterFactory: boolean mLogVerbose>;

        if $z0 == 0 goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Adding package ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FilterFactory", $r7);

     label1:
        $r3 = r0.<android.filterfw.core.FilterFactory: java.util.HashSet mPackages>;

        virtualinvoke $r3.<java.util.HashSet: boolean add(java.lang.Object)>(r1);

        return;
    }

    public android.filterfw.core.Filter createFilterByClass(java.lang.Class, java.lang.String)
    {
        android.filterfw.core.FilterFactory r0;
        java.lang.Class[] $r2;
        java.lang.Object[] $r3;
        java.lang.Object $r4;
        java.lang.StringBuilder $r5, $r12, $r20;
        java.lang.IllegalArgumentException $r9, $r16, $r24;
        java.lang.String $r10, $r17, $r25, r27;
        java.lang.Throwable $r11, $r18;
        java.lang.ClassCastException $r19;
        java.lang.Class r26;
        java.lang.reflect.Constructor r28;
        android.filterfw.core.Filter r29, r30;

        r0 := @this: android.filterfw.core.FilterFactory;

        r26 := @parameter0: java.lang.Class;

        r27 := @parameter1: java.lang.String;

     label01:
        virtualinvoke r26.<java.lang.Class: java.lang.Class asSubclass(java.lang.Class)>(class "Landroid/filterfw/core/Filter;");

     label02:
        $r2 = newarray (java.lang.Class)[1];

        $r2[0] = class "Ljava/lang/String;";

        r28 = virtualinvoke r26.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r2);

     label03:
        r29 = null;

     label04:
        $r3 = newarray (java.lang.Object)[1];

        $r3[0] = r27;

        $r4 = virtualinvoke r28.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r3);

        r30 = (android.filterfw.core.Filter) $r4;

     label05:
        r29 = r30;

        goto label07;

     label06:
        $r18 := @caughtexception;

     label07:
        if r29 == null goto label08;

        return r29;

     label08:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not construct the filter \'");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r27);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'!");

        $r9 = new java.lang.IllegalArgumentException;

        $r10 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r9;

     label09:
        $r11 := @caughtexception;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The filter class \'");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r26);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' does not have a constructor of the form <init>(String name)!");

        $r16 = new java.lang.IllegalArgumentException;

        $r17 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r17);

        throw $r16;

     label10:
        $r19 := @caughtexception;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempting to allocate class \'");

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r26);

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' which is not a subclass of Filter!");

        $r24 = new java.lang.IllegalArgumentException;

        $r25 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r24.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r25);

        throw $r24;

        catch java.lang.ClassCastException from label01 to label02 with label10;
        catch java.lang.NoSuchMethodException from label02 to label03 with label09;
        catch java.lang.Throwable from label04 to label05 with label06;
    }

    public android.filterfw.core.Filter createFilterByClassName(java.lang.String, java.lang.String)
    {
        android.filterfw.core.FilterFactory r0;
        java.lang.String r1, r3, $r12, $r18, $r23, $r27, r30;
        java.util.Iterator r2;
        java.lang.ClassLoader r4;
        java.lang.StringBuilder r5, $r7, $r24, r35;
        boolean $z0, $z1, $z2;
        java.util.HashSet $r6;
        java.lang.IllegalArgumentException $r11;
        android.filterfw.core.Filter $r13;
        java.lang.Object $r14, r36;
        java.lang.ClassNotFoundException $r28;
        java.lang.Throwable $r29;
        java.lang.Class r32, r33, r34;

        r0 := @this: android.filterfw.core.FilterFactory;

        r1 := @parameter0: java.lang.String;

        r30 := @parameter1: java.lang.String;

        $z0 = <android.filterfw.core.FilterFactory: boolean mLogVerbose>;

        if $z0 == 0 goto label01;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Looking up class ");

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FilterFactory", $r27);

     label01:
        r32 = null;

        $r6 = r0.<android.filterfw.core.FilterFactory: java.util.HashSet mPackages>;

        r2 = virtualinvoke $r6.<java.util.HashSet: java.util.Iterator iterator()>();

     label02:
        r33 = r32;

        $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label44;

        $r14 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.String) $r14;

        r34 = r32;

     label03:
        $z1 = <android.filterfw.core.FilterFactory: boolean mLogVerbose>;

        if $z1 == 0 goto label18;

     label04:
        r34 = r32;

     label05:
        r35 = new java.lang.StringBuilder;

     label06:
        r34 = r32;

     label07:
        specialinvoke r35.<java.lang.StringBuilder: void <init>()>();

     label08:
        r34 = r32;

     label09:
        virtualinvoke r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Trying ");

     label10:
        r34 = r32;

     label11:
        virtualinvoke r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

     label12:
        r34 = r32;

     label13:
        virtualinvoke r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

     label14:
        r34 = r32;

     label15:
        virtualinvoke r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

     label16:
        r34 = r32;

     label17:
        $r23 = virtualinvoke r35.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FilterFactory", $r23);

     label18:
        r34 = r32;

     label19:
        r36 = <android.filterfw.core.FilterFactory: java.lang.Object mClassLoaderGuard>;

     label20:
        r34 = r32;

     label21:
        entermonitor r36;

     label22:
        r34 = r32;

     label23:
        r4 = <android.filterfw.core.FilterFactory: java.lang.ClassLoader mCurrentClassLoader>;

     label24:
        r34 = r32;

     label25:
        r5 = new java.lang.StringBuilder;

     label26:
        r34 = r32;

     label27:
        specialinvoke r5.<java.lang.StringBuilder: void <init>()>();

     label28:
        r34 = r32;

     label29:
        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

     label30:
        r34 = r32;

     label31:
        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

     label32:
        r34 = r32;

     label33:
        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

     label34:
        r34 = r32;

     label35:
        $r18 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.String toString()>();

        r32 = virtualinvoke r4.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>($r18);

     label36:
        r34 = r32;

     label37:
        exitmonitor r36;

     label38:
        if r32 == null goto label39;

        r33 = r32;

        goto label44;

     label39:
        goto label02;

     label40:
        $r29 := @caughtexception;

     label41:
        exitmonitor r36;

     label42:
        throw $r29;

     label43:
        $r28 := @caughtexception;

        r32 = r34;

        goto label02;

     label44:
        if r33 == null goto label45;

        $r13 = virtualinvoke r0.<android.filterfw.core.FilterFactory: android.filterfw.core.Filter createFilterByClass(java.lang.Class,java.lang.String)>(r33, r30);

        return $r13;

     label45:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown filter class \'");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'!");

        $r11 = new java.lang.IllegalArgumentException;

        $r12 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r11;

        catch java.lang.ClassNotFoundException from label03 to label04 with label43;
        catch java.lang.ClassNotFoundException from label05 to label06 with label43;
        catch java.lang.ClassNotFoundException from label07 to label08 with label43;
        catch java.lang.ClassNotFoundException from label09 to label10 with label43;
        catch java.lang.ClassNotFoundException from label11 to label12 with label43;
        catch java.lang.ClassNotFoundException from label13 to label14 with label43;
        catch java.lang.ClassNotFoundException from label15 to label16 with label43;
        catch java.lang.ClassNotFoundException from label17 to label18 with label43;
        catch java.lang.ClassNotFoundException from label19 to label20 with label43;
        catch java.lang.ClassNotFoundException from label21 to label22 with label43;
        catch java.lang.Throwable from label23 to label24 with label40;
        catch java.lang.Throwable from label25 to label26 with label40;
        catch java.lang.Throwable from label27 to label28 with label40;
        catch java.lang.Throwable from label29 to label30 with label40;
        catch java.lang.Throwable from label31 to label32 with label40;
        catch java.lang.Throwable from label33 to label34 with label40;
        catch java.lang.Throwable from label35 to label36 with label40;
        catch java.lang.Throwable from label37 to label38 with label40;
        catch java.lang.Throwable from label41 to label42 with label40;
        catch java.lang.ClassNotFoundException from label42 to label43 with label43;
    }
}
