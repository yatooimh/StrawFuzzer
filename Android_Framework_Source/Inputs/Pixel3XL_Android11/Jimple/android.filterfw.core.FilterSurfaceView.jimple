public class android.filterfw.core.FilterSurfaceView extends android.view.SurfaceView implements android.view.SurfaceHolder$Callback
{
    private static int STATE_ALLOCATED;
    private static int STATE_CREATED;
    private static int STATE_INITIALIZED;
    private int mFormat;
    private android.filterfw.core.GLEnvironment mGLEnv;
    private int mHeight;
    private android.view.SurfaceHolder$Callback mListener;
    private int mState;
    private int mSurfaceId;
    private int mWidth;

    static void <clinit>()
    {
        <android.filterfw.core.FilterSurfaceView: int STATE_ALLOCATED> = 0;

        <android.filterfw.core.FilterSurfaceView: int STATE_CREATED> = 1;

        <android.filterfw.core.FilterSurfaceView: int STATE_INITIALIZED> = 2;

        return;
    }

    public void <init>(android.content.Context)
    {
        android.filterfw.core.FilterSurfaceView r0;
        android.content.Context r1;
        int $i0;
        android.view.SurfaceHolder $r2;

        r0 := @this: android.filterfw.core.FilterSurfaceView;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.view.SurfaceView: void <init>(android.content.Context)>(r1);

        $i0 = <android.filterfw.core.FilterSurfaceView: int STATE_ALLOCATED>;

        r0.<android.filterfw.core.FilterSurfaceView: int mState> = $i0;

        r0.<android.filterfw.core.FilterSurfaceView: int mSurfaceId> = -1;

        $r2 = virtualinvoke r0.<android.filterfw.core.FilterSurfaceView: android.view.SurfaceHolder getHolder()>();

        interfaceinvoke $r2.<android.view.SurfaceHolder: void addCallback(android.view.SurfaceHolder$Callback)>(r0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.filterfw.core.FilterSurfaceView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int $i0;
        android.view.SurfaceHolder $r3;

        r0 := @this: android.filterfw.core.FilterSurfaceView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.view.SurfaceView: void <init>(android.content.Context,android.util.AttributeSet)>(r1, r2);

        $i0 = <android.filterfw.core.FilterSurfaceView: int STATE_ALLOCATED>;

        r0.<android.filterfw.core.FilterSurfaceView: int mState> = $i0;

        r0.<android.filterfw.core.FilterSurfaceView: int mSurfaceId> = -1;

        $r3 = virtualinvoke r0.<android.filterfw.core.FilterSurfaceView: android.view.SurfaceHolder getHolder()>();

        interfaceinvoke $r3.<android.view.SurfaceHolder: void addCallback(android.view.SurfaceHolder$Callback)>(r0);

        return;
    }

    private void registerSurface()
    {
        android.filterfw.core.FilterSurfaceView r0;
        int i0;
        android.filterfw.core.GLEnvironment $r2;
        android.view.SurfaceHolder $r3, $r7;
        android.view.Surface $r4, $r8;
        java.lang.StringBuilder $r5;
        java.lang.RuntimeException $r11;
        java.lang.String $r12;

        r0 := @this: android.filterfw.core.FilterSurfaceView;

        $r2 = r0.<android.filterfw.core.FilterSurfaceView: android.filterfw.core.GLEnvironment mGLEnv>;

        $r3 = virtualinvoke r0.<android.filterfw.core.FilterSurfaceView: android.view.SurfaceHolder getHolder()>();

        $r4 = interfaceinvoke $r3.<android.view.SurfaceHolder: android.view.Surface getSurface()>();

        i0 = virtualinvoke $r2.<android.filterfw.core.GLEnvironment: int registerSurface(android.view.Surface)>($r4);

        r0.<android.filterfw.core.FilterSurfaceView: int mSurfaceId> = i0;

        if i0 < 0 goto label1;

        return;

     label1:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not register Surface: ");

        $r7 = virtualinvoke r0.<android.filterfw.core.FilterSurfaceView: android.view.SurfaceHolder getHolder()>();

        $r8 = interfaceinvoke $r7.<android.view.SurfaceHolder: android.view.Surface getSurface()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in FilterSurfaceView!");

        $r11 = new java.lang.RuntimeException;

        $r12 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.String)>($r12);

        throw $r11;
    }

    private void unregisterSurface()
    {
        android.filterfw.core.FilterSurfaceView r0;
        android.filterfw.core.GLEnvironment r1;
        int i0;

        r0 := @this: android.filterfw.core.FilterSurfaceView;

        r1 = r0.<android.filterfw.core.FilterSurfaceView: android.filterfw.core.GLEnvironment mGLEnv>;

        if r1 == null goto label1;

        i0 = r0.<android.filterfw.core.FilterSurfaceView: int mSurfaceId>;

        if i0 <= 0 goto label1;

        virtualinvoke r1.<android.filterfw.core.GLEnvironment: void unregisterSurfaceId(int)>(i0);

     label1:
        return;
    }

    public void bindToListener(android.view.SurfaceHolder$Callback, android.filterfw.core.GLEnvironment)
    {
        android.filterfw.core.FilterSurfaceView r0;
        java.lang.RuntimeException r1;
        android.view.SurfaceHolder$Callback $r2, $r4, $r6, $r10, $r14, r19;
        android.filterfw.core.GLEnvironment $r3, $r8, $r9, r20;
        android.view.SurfaceHolder $r5, $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.String $r17;
        java.lang.Throwable $r18;
        java.lang.StringBuilder r21;
        java.lang.NullPointerException r23;

        r0 := @this: android.filterfw.core.FilterSurfaceView;

        r19 := @parameter0: android.view.SurfaceHolder$Callback;

        r20 := @parameter1: android.filterfw.core.GLEnvironment;

        entermonitor r0;

        if r19 == null goto label8;

     label1:
        $r2 = r0.<android.filterfw.core.FilterSurfaceView: android.view.SurfaceHolder$Callback mListener>;

        if $r2 == null goto label4;

        $r10 = r0.<android.filterfw.core.FilterSurfaceView: android.view.SurfaceHolder$Callback mListener>;

        if $r10 != r19 goto label3;

     label2:
        goto label4;

     label3:
        r1 = new java.lang.RuntimeException;

        r21 = new java.lang.StringBuilder;

        specialinvoke r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempting to bind filter ");

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r19);

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to SurfaceView with another open filter ");

        $r14 = r0.<android.filterfw.core.FilterSurfaceView: android.view.SurfaceHolder$Callback mListener>;

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" attached already!");

        $r17 = virtualinvoke r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r1.<java.lang.RuntimeException: void <init>(java.lang.String)>($r17);

        throw r1;

     label4:
        r0.<android.filterfw.core.FilterSurfaceView: android.view.SurfaceHolder$Callback mListener> = r19;

        $r3 = r0.<android.filterfw.core.FilterSurfaceView: android.filterfw.core.GLEnvironment mGLEnv>;

        if $r3 == null goto label5;

        $r8 = r0.<android.filterfw.core.FilterSurfaceView: android.filterfw.core.GLEnvironment mGLEnv>;

        if $r8 == r20 goto label5;

        $r9 = r0.<android.filterfw.core.FilterSurfaceView: android.filterfw.core.GLEnvironment mGLEnv>;

        $i5 = r0.<android.filterfw.core.FilterSurfaceView: int mSurfaceId>;

        virtualinvoke $r9.<android.filterfw.core.GLEnvironment: void unregisterSurfaceId(int)>($i5);

     label5:
        r0.<android.filterfw.core.FilterSurfaceView: android.filterfw.core.GLEnvironment mGLEnv> = r20;

        $i6 = r0.<android.filterfw.core.FilterSurfaceView: int mState>;

        $i7 = <android.filterfw.core.FilterSurfaceView: int STATE_CREATED>;

        if $i6 < $i7 goto label6;

        specialinvoke r0.<android.filterfw.core.FilterSurfaceView: void registerSurface()>();

        $r4 = r0.<android.filterfw.core.FilterSurfaceView: android.view.SurfaceHolder$Callback mListener>;

        $r5 = virtualinvoke r0.<android.filterfw.core.FilterSurfaceView: android.view.SurfaceHolder getHolder()>();

        interfaceinvoke $r4.<android.view.SurfaceHolder$Callback: void surfaceCreated(android.view.SurfaceHolder)>($r5);

        $i1 = r0.<android.filterfw.core.FilterSurfaceView: int mState>;

        $i0 = <android.filterfw.core.FilterSurfaceView: int STATE_INITIALIZED>;

        if $i1 != $i0 goto label6;

        $r6 = r0.<android.filterfw.core.FilterSurfaceView: android.view.SurfaceHolder$Callback mListener>;

        $r7 = virtualinvoke r0.<android.filterfw.core.FilterSurfaceView: android.view.SurfaceHolder getHolder()>();

        $i4 = r0.<android.filterfw.core.FilterSurfaceView: int mFormat>;

        $i3 = r0.<android.filterfw.core.FilterSurfaceView: int mWidth>;

        $i2 = r0.<android.filterfw.core.FilterSurfaceView: int mHeight>;

        interfaceinvoke $r6.<android.view.SurfaceHolder$Callback: void surfaceChanged(android.view.SurfaceHolder,int,int,int)>($r7, $i4, $i3, $i2);

     label6:
        exitmonitor r0;

        return;

     label7:
        $r18 := @caughtexception;

        goto label9;

     label8:
        r23 = new java.lang.NullPointerException;

        specialinvoke r23.<java.lang.NullPointerException: void <init>(java.lang.String)>("Attempting to bind null filter to SurfaceView!");

        throw r23;

     label9:
        exitmonitor r0;

        throw $r18;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public android.filterfw.core.GLEnvironment getGLEnv()
    {
        android.filterfw.core.FilterSurfaceView r0;
        java.lang.Throwable $r1;
        android.filterfw.core.GLEnvironment r2;

        r0 := @this: android.filterfw.core.FilterSurfaceView;

        entermonitor r0;

     label1:
        r2 = r0.<android.filterfw.core.FilterSurfaceView: android.filterfw.core.GLEnvironment mGLEnv>;

     label2:
        exitmonitor r0;

        return r2;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public int getSurfaceId()
    {
        android.filterfw.core.FilterSurfaceView r0;
        int i0;
        java.lang.Throwable $r2;

        r0 := @this: android.filterfw.core.FilterSurfaceView;

        entermonitor r0;

     label1:
        i0 = r0.<android.filterfw.core.FilterSurfaceView: int mSurfaceId>;

     label2:
        exitmonitor r0;

        return i0;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void surfaceChanged(android.view.SurfaceHolder, int, int, int)
    {
        android.filterfw.core.FilterSurfaceView r0;
        int i0, i1, i2, $i3;
        android.view.SurfaceHolder$Callback $r1, $r2;
        java.lang.Throwable $r3;
        android.view.SurfaceHolder r4;

        r0 := @this: android.filterfw.core.FilterSurfaceView;

        r4 := @parameter0: android.view.SurfaceHolder;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        entermonitor r0;

     label1:
        r0.<android.filterfw.core.FilterSurfaceView: int mFormat> = i0;

        r0.<android.filterfw.core.FilterSurfaceView: int mWidth> = i1;

        r0.<android.filterfw.core.FilterSurfaceView: int mHeight> = i2;

        $i3 = <android.filterfw.core.FilterSurfaceView: int STATE_INITIALIZED>;

        r0.<android.filterfw.core.FilterSurfaceView: int mState> = $i3;

        $r1 = r0.<android.filterfw.core.FilterSurfaceView: android.view.SurfaceHolder$Callback mListener>;

        if $r1 == null goto label2;

        $r2 = r0.<android.filterfw.core.FilterSurfaceView: android.view.SurfaceHolder$Callback mListener>;

        interfaceinvoke $r2.<android.view.SurfaceHolder$Callback: void surfaceChanged(android.view.SurfaceHolder,int,int,int)>(r4, i0, i1, i2);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void surfaceCreated(android.view.SurfaceHolder)
    {
        android.filterfw.core.FilterSurfaceView r0;
        int $i0;
        android.filterfw.core.GLEnvironment $r1;
        android.view.SurfaceHolder$Callback $r2, $r3;
        java.lang.Throwable $r4;
        android.view.SurfaceHolder r5;

        r0 := @this: android.filterfw.core.FilterSurfaceView;

        r5 := @parameter0: android.view.SurfaceHolder;

        entermonitor r0;

     label1:
        $i0 = <android.filterfw.core.FilterSurfaceView: int STATE_CREATED>;

        r0.<android.filterfw.core.FilterSurfaceView: int mState> = $i0;

        $r1 = r0.<android.filterfw.core.FilterSurfaceView: android.filterfw.core.GLEnvironment mGLEnv>;

        if $r1 == null goto label2;

        specialinvoke r0.<android.filterfw.core.FilterSurfaceView: void registerSurface()>();

     label2:
        $r2 = r0.<android.filterfw.core.FilterSurfaceView: android.view.SurfaceHolder$Callback mListener>;

        if $r2 == null goto label3;

        $r3 = r0.<android.filterfw.core.FilterSurfaceView: android.view.SurfaceHolder$Callback mListener>;

        interfaceinvoke $r3.<android.view.SurfaceHolder$Callback: void surfaceCreated(android.view.SurfaceHolder)>(r5);

     label3:
        exitmonitor r0;

        return;

     label4:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public void surfaceDestroyed(android.view.SurfaceHolder)
    {
        android.filterfw.core.FilterSurfaceView r0;
        int $i0;
        android.view.SurfaceHolder$Callback $r1, $r2;
        java.lang.Throwable $r3;
        android.view.SurfaceHolder r4;

        r0 := @this: android.filterfw.core.FilterSurfaceView;

        r4 := @parameter0: android.view.SurfaceHolder;

        entermonitor r0;

     label1:
        $i0 = <android.filterfw.core.FilterSurfaceView: int STATE_ALLOCATED>;

        r0.<android.filterfw.core.FilterSurfaceView: int mState> = $i0;

        $r1 = r0.<android.filterfw.core.FilterSurfaceView: android.view.SurfaceHolder$Callback mListener>;

        if $r1 == null goto label2;

        $r2 = r0.<android.filterfw.core.FilterSurfaceView: android.view.SurfaceHolder$Callback mListener>;

        interfaceinvoke $r2.<android.view.SurfaceHolder$Callback: void surfaceDestroyed(android.view.SurfaceHolder)>(r4);

     label2:
        specialinvoke r0.<android.filterfw.core.FilterSurfaceView: void unregisterSurface()>();

     label3:
        exitmonitor r0;

        return;

     label4:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public void unbind()
    {
        android.filterfw.core.FilterSurfaceView r0;
        java.lang.Throwable $r2;

        r0 := @this: android.filterfw.core.FilterSurfaceView;

        entermonitor r0;

     label1:
        r0.<android.filterfw.core.FilterSurfaceView: android.view.SurfaceHolder$Callback mListener> = null;

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
