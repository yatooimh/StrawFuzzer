public class android.filterfw.core.GLEnvironment extends java.lang.Object
{
    private int glEnvId;
    private boolean mManageContext;

    static void <clinit>()
    {
        staticinvoke <java.lang.System: void loadLibrary(java.lang.String)>("filterfw");

        return;
    }

    public void <init>()
    {
        android.filterfw.core.GLEnvironment r0;

        r0 := @this: android.filterfw.core.GLEnvironment;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.filterfw.core.GLEnvironment: boolean mManageContext> = 1;

        specialinvoke r0.<android.filterfw.core.GLEnvironment: boolean nativeAllocate()>();

        return;
    }

    private void <init>(android.filterfw.core.NativeAllocatorTag)
    {
        android.filterfw.core.GLEnvironment r0;
        android.filterfw.core.NativeAllocatorTag r1;

        r0 := @this: android.filterfw.core.GLEnvironment;

        r1 := @parameter0: android.filterfw.core.NativeAllocatorTag;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.filterfw.core.GLEnvironment: boolean mManageContext> = 1;

        return;
    }

    public static boolean isAnyContextActive()
    {
        boolean $z0;

        $z0 = staticinvoke <android.filterfw.core.GLEnvironment: boolean nativeIsAnyContextActive()>();

        return $z0;
    }

    private native boolean nativeActivate();

    private native boolean nativeActivateSurfaceId(int);

    private native int nativeAddSurface(android.view.Surface);

    private native int nativeAddSurfaceFromMediaRecorder(android.media.MediaRecorder);

    private native int nativeAddSurfaceWidthHeight(android.view.Surface, int, int);

    private native boolean nativeAllocate();

    private native boolean nativeDeactivate();

    private native boolean nativeDeallocate();

    private native boolean nativeDisconnectSurfaceMediaSource(android.media.MediaRecorder);

    private native boolean nativeInitWithCurrentContext();

    private native boolean nativeInitWithNewContext();

    private native boolean nativeIsActive();

    private static native boolean nativeIsAnyContextActive();

    private native boolean nativeIsContextActive();

    private native boolean nativeRemoveSurfaceId(int);

    private native boolean nativeSetSurfaceTimestamp(long);

    private native boolean nativeSwapBuffers();

    public void activate()
    {
        android.filterfw.core.GLEnvironment r0;
        android.os.Looper $r1, $r3, $r4;
        boolean $z0, $z1, $z2;
        java.lang.RuntimeException $r2;

        r0 := @this: android.filterfw.core.GLEnvironment;

        $r1 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        if $r1 == null goto label1;

        $r3 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        $r4 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        $z1 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        if $z1 == 0 goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("FilterFramework", "Activating GL context in UI thread!");

     label1:
        $z2 = r0.<android.filterfw.core.GLEnvironment: boolean mManageContext>;

        if $z2 == 0 goto label3;

        $z0 = specialinvoke r0.<android.filterfw.core.GLEnvironment: boolean nativeActivate()>();

        if $z0 == 0 goto label2;

        goto label3;

     label2:
        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Could not activate GLEnvironment!");

        throw $r2;

     label3:
        return;
    }

    public void activateSurfaceWithId(int)
    {
        android.filterfw.core.GLEnvironment r0;
        int i0;
        boolean $z0;
        java.lang.StringBuilder $r2;
        java.lang.RuntimeException $r6;
        java.lang.String $r7;

        r0 := @this: android.filterfw.core.GLEnvironment;

        i0 := @parameter0: int;

        $z0 = specialinvoke r0.<android.filterfw.core.GLEnvironment: boolean nativeActivateSurfaceId(int)>(i0);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not activate surface ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");

        $r6 = new java.lang.RuntimeException;

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>($r7);

        throw $r6;
    }

    public void deactivate()
    {
        android.filterfw.core.GLEnvironment r0;
        boolean $z0, $z1;
        java.lang.RuntimeException $r1;

        r0 := @this: android.filterfw.core.GLEnvironment;

        $z0 = r0.<android.filterfw.core.GLEnvironment: boolean mManageContext>;

        if $z0 == 0 goto label2;

        $z1 = specialinvoke r0.<android.filterfw.core.GLEnvironment: boolean nativeDeactivate()>();

        if $z1 == 0 goto label1;

        goto label2;

     label1:
        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Could not deactivate GLEnvironment!");

        throw $r1;

     label2:
        return;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.filterfw.core.GLEnvironment r0;

        r0 := @this: android.filterfw.core.GLEnvironment;

        virtualinvoke r0.<android.filterfw.core.GLEnvironment: void tearDown()>();

        return;
    }

    public void initWithCurrentContext()
    {
        android.filterfw.core.GLEnvironment r0;
        boolean $z0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.filterfw.core.GLEnvironment;

        r0.<android.filterfw.core.GLEnvironment: boolean mManageContext> = 0;

        $z0 = specialinvoke r0.<android.filterfw.core.GLEnvironment: boolean nativeInitWithCurrentContext()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Could not initialize GLEnvironment with current context!");

        throw $r1;
    }

    public void initWithNewContext()
    {
        android.filterfw.core.GLEnvironment r0;
        boolean $z0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.filterfw.core.GLEnvironment;

        r0.<android.filterfw.core.GLEnvironment: boolean mManageContext> = 1;

        $z0 = specialinvoke r0.<android.filterfw.core.GLEnvironment: boolean nativeInitWithNewContext()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Could not initialize GLEnvironment with new context!");

        throw $r1;
    }

    public boolean isActive()
    {
        android.filterfw.core.GLEnvironment r0;
        boolean $z0;

        r0 := @this: android.filterfw.core.GLEnvironment;

        $z0 = specialinvoke r0.<android.filterfw.core.GLEnvironment: boolean nativeIsActive()>();

        return $z0;
    }

    public boolean isContextActive()
    {
        android.filterfw.core.GLEnvironment r0;
        boolean $z0;

        r0 := @this: android.filterfw.core.GLEnvironment;

        $z0 = specialinvoke r0.<android.filterfw.core.GLEnvironment: boolean nativeIsContextActive()>();

        return $z0;
    }

    public int registerSurface(android.view.Surface)
    {
        android.filterfw.core.GLEnvironment r0;
        android.view.Surface r1;
        int i0;
        java.lang.StringBuilder $r3;
        java.lang.RuntimeException $r7;
        java.lang.String $r8;

        r0 := @this: android.filterfw.core.GLEnvironment;

        r1 := @parameter0: android.view.Surface;

        i0 = specialinvoke r0.<android.filterfw.core.GLEnvironment: int nativeAddSurface(android.view.Surface)>(r1);

        if i0 < 0 goto label1;

        return i0;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error registering surface ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");

        $r7 = new java.lang.RuntimeException;

        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>($r8);

        throw $r7;
    }

    public int registerSurfaceFromMediaRecorder(android.media.MediaRecorder)
    {
        android.filterfw.core.GLEnvironment r0;
        android.media.MediaRecorder r1;
        int i0;
        java.lang.StringBuilder $r3;
        java.lang.RuntimeException $r7;
        java.lang.String $r8;

        r0 := @this: android.filterfw.core.GLEnvironment;

        r1 := @parameter0: android.media.MediaRecorder;

        i0 = specialinvoke r0.<android.filterfw.core.GLEnvironment: int nativeAddSurfaceFromMediaRecorder(android.media.MediaRecorder)>(r1);

        if i0 < 0 goto label1;

        return i0;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error registering surface from MediaRecorder");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");

        $r7 = new java.lang.RuntimeException;

        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>($r8);

        throw $r7;
    }

    public int registerSurfaceTexture(android.graphics.SurfaceTexture, int, int)
    {
        android.filterfw.core.GLEnvironment r0;
        android.graphics.SurfaceTexture r1;
        int i0, i1, i2;
        android.view.Surface $r2;
        java.lang.StringBuilder $r3;
        java.lang.RuntimeException $r7;
        java.lang.String $r8;

        r0 := @this: android.filterfw.core.GLEnvironment;

        r1 := @parameter0: android.graphics.SurfaceTexture;

        i1 := @parameter1: int;

        i0 := @parameter2: int;

        $r2 = new android.view.Surface;

        specialinvoke $r2.<android.view.Surface: void <init>(android.graphics.SurfaceTexture)>(r1);

        i2 = specialinvoke r0.<android.filterfw.core.GLEnvironment: int nativeAddSurfaceWidthHeight(android.view.Surface,int,int)>($r2, i1, i0);

        virtualinvoke $r2.<android.view.Surface: void release()>();

        if i2 < 0 goto label1;

        return i2;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error registering surfaceTexture ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");

        $r7 = new java.lang.RuntimeException;

        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>($r8);

        throw $r7;
    }

    public void setSurfaceTimestamp(long)
    {
        android.filterfw.core.GLEnvironment r0;
        long l0;
        boolean $z0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.filterfw.core.GLEnvironment;

        l0 := @parameter0: long;

        $z0 = specialinvoke r0.<android.filterfw.core.GLEnvironment: boolean nativeSetSurfaceTimestamp(long)>(l0);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Could not set timestamp for current surface!");

        throw $r1;
    }

    public void swapBuffers()
    {
        android.filterfw.core.GLEnvironment r0;
        boolean $z0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.filterfw.core.GLEnvironment;

        $z0 = specialinvoke r0.<android.filterfw.core.GLEnvironment: boolean nativeSwapBuffers()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Error swapping EGL buffers!");

        throw $r1;
    }

    public void tearDown()
    {
        android.filterfw.core.GLEnvironment r0;
        int $i0;
        java.lang.Throwable $r2;

        r0 := @this: android.filterfw.core.GLEnvironment;

        entermonitor r0;

     label1:
        $i0 = r0.<android.filterfw.core.GLEnvironment: int glEnvId>;

        if $i0 == -1 goto label2;

        specialinvoke r0.<android.filterfw.core.GLEnvironment: boolean nativeDeallocate()>();

        r0.<android.filterfw.core.GLEnvironment: int glEnvId> = -1;

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void unregisterSurfaceId(int)
    {
        android.filterfw.core.GLEnvironment r0;
        int i0;
        boolean $z0;
        java.lang.StringBuilder $r2;
        java.lang.RuntimeException $r6;
        java.lang.String $r7;

        r0 := @this: android.filterfw.core.GLEnvironment;

        i0 := @parameter0: int;

        $z0 = specialinvoke r0.<android.filterfw.core.GLEnvironment: boolean nativeRemoveSurfaceId(int)>(i0);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not unregister surface ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");

        $r6 = new java.lang.RuntimeException;

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>($r7);

        throw $r6;
    }
}
