public class android.filterfw.core.OutputPort extends android.filterfw.core.FilterPort
{
    protected android.filterfw.core.InputPort mBasePort;
    protected android.filterfw.core.InputPort mTargetPort;

    public void <init>(android.filterfw.core.Filter, java.lang.String)
    {
        android.filterfw.core.OutputPort r0;
        android.filterfw.core.Filter r1;
        java.lang.String r2;

        r0 := @this: android.filterfw.core.OutputPort;

        r1 := @parameter0: android.filterfw.core.Filter;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<android.filterfw.core.FilterPort: void <init>(android.filterfw.core.Filter,java.lang.String)>(r1, r2);

        return;
    }

    public void clear()
    {
        android.filterfw.core.OutputPort r0;
        android.filterfw.core.InputPort r1;

        r0 := @this: android.filterfw.core.OutputPort;

        r1 = r0.<android.filterfw.core.OutputPort: android.filterfw.core.InputPort mTargetPort>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.filterfw.core.InputPort: void clear()>();

     label1:
        return;
    }

    public void close()
    {
        android.filterfw.core.OutputPort r0;
        android.filterfw.core.InputPort r1, $r2;
        boolean $z0;

        r0 := @this: android.filterfw.core.OutputPort;

        specialinvoke r0.<android.filterfw.core.FilterPort: void close()>();

        r1 = r0.<android.filterfw.core.OutputPort: android.filterfw.core.InputPort mTargetPort>;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<android.filterfw.core.InputPort: boolean isOpen()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<android.filterfw.core.OutputPort: android.filterfw.core.InputPort mTargetPort>;

        virtualinvoke $r2.<android.filterfw.core.InputPort: void close()>();

     label1:
        return;
    }

    public void connectTo(android.filterfw.core.InputPort)
    {
        android.filterfw.core.OutputPort r0;
        android.filterfw.core.InputPort $r1, $r5, r10;
        java.lang.StringBuilder $r2;
        java.lang.RuntimeException $r8;
        java.lang.String $r9;

        r0 := @this: android.filterfw.core.OutputPort;

        r10 := @parameter0: android.filterfw.core.InputPort;

        $r1 = r0.<android.filterfw.core.OutputPort: android.filterfw.core.InputPort mTargetPort>;

        if $r1 != null goto label1;

        r0.<android.filterfw.core.OutputPort: android.filterfw.core.InputPort mTargetPort> = r10;

        virtualinvoke r10.<android.filterfw.core.InputPort: void setSourcePort(android.filterfw.core.OutputPort)>(r0);

        return;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" already connected to ");

        $r5 = r0.<android.filterfw.core.OutputPort: android.filterfw.core.InputPort mTargetPort>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");

        $r8 = new java.lang.RuntimeException;

        $r9 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>($r9);

        throw $r8;
    }

    public boolean filterMustClose()
    {
        android.filterfw.core.OutputPort r0;
        boolean $z0, $z1, z2;

        r0 := @this: android.filterfw.core.OutputPort;

        $z0 = virtualinvoke r0.<android.filterfw.core.OutputPort: boolean isOpen()>();

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<android.filterfw.core.OutputPort: boolean isBlocking()>();

        if $z1 == 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;
    }

    public android.filterfw.core.InputPort getBasePort()
    {
        android.filterfw.core.OutputPort r0;
        android.filterfw.core.InputPort $r1;

        r0 := @this: android.filterfw.core.OutputPort;

        $r1 = r0.<android.filterfw.core.OutputPort: android.filterfw.core.InputPort mBasePort>;

        return $r1;
    }

    public android.filterfw.core.Filter getTargetFilter()
    {
        android.filterfw.core.OutputPort r0;
        android.filterfw.core.InputPort r1;
        android.filterfw.core.Filter r2;

        r0 := @this: android.filterfw.core.OutputPort;

        r1 = r0.<android.filterfw.core.OutputPort: android.filterfw.core.InputPort mTargetPort>;

        if r1 != null goto label1;

        r2 = null;

        goto label2;

     label1:
        r2 = virtualinvoke r1.<android.filterfw.core.InputPort: android.filterfw.core.Filter getFilter()>();

     label2:
        return r2;
    }

    public android.filterfw.core.InputPort getTargetPort()
    {
        android.filterfw.core.OutputPort r0;
        android.filterfw.core.InputPort $r1;

        r0 := @this: android.filterfw.core.OutputPort;

        $r1 = r0.<android.filterfw.core.OutputPort: android.filterfw.core.InputPort mTargetPort>;

        return $r1;
    }

    public boolean hasFrame()
    {
        android.filterfw.core.OutputPort r0;
        android.filterfw.core.InputPort r1;
        boolean z0;

        r0 := @this: android.filterfw.core.OutputPort;

        r1 = r0.<android.filterfw.core.OutputPort: android.filterfw.core.InputPort mTargetPort>;

        if r1 != null goto label1;

        z0 = 0;

        goto label2;

     label1:
        z0 = virtualinvoke r1.<android.filterfw.core.InputPort: boolean hasFrame()>();

     label2:
        return z0;
    }

    public boolean isConnected()
    {
        android.filterfw.core.OutputPort r0;
        android.filterfw.core.InputPort $r1;
        boolean z0;

        r0 := @this: android.filterfw.core.OutputPort;

        $r1 = r0.<android.filterfw.core.OutputPort: android.filterfw.core.InputPort mTargetPort>;

        if $r1 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isReady()
    {
        android.filterfw.core.OutputPort r0;
        boolean $z0, $z1, $z2, z3;
        android.filterfw.core.InputPort $r1;

        r0 := @this: android.filterfw.core.OutputPort;

        $z0 = virtualinvoke r0.<android.filterfw.core.OutputPort: boolean isOpen()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<android.filterfw.core.OutputPort: android.filterfw.core.InputPort mTargetPort>;

        $z2 = virtualinvoke $r1.<android.filterfw.core.InputPort: boolean acceptsFrame()>();

        if $z2 != 0 goto label2;

     label1:
        $z1 = virtualinvoke r0.<android.filterfw.core.OutputPort: boolean isBlocking()>();

        if $z1 != 0 goto label3;

     label2:
        z3 = 1;

        goto label4;

     label3:
        z3 = 0;

     label4:
        return z3;
    }

    public void open()
    {
        android.filterfw.core.OutputPort r0;
        android.filterfw.core.InputPort r1, $r2;
        boolean $z0;

        r0 := @this: android.filterfw.core.OutputPort;

        specialinvoke r0.<android.filterfw.core.FilterPort: void open()>();

        r1 = r0.<android.filterfw.core.OutputPort: android.filterfw.core.InputPort mTargetPort>;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<android.filterfw.core.InputPort: boolean isOpen()>();

        if $z0 != 0 goto label1;

        $r2 = r0.<android.filterfw.core.OutputPort: android.filterfw.core.InputPort mTargetPort>;

        virtualinvoke $r2.<android.filterfw.core.InputPort: void open()>();

     label1:
        return;
    }

    public android.filterfw.core.Frame pullFrame()
    {
        android.filterfw.core.OutputPort r0;
        java.lang.StringBuilder $r2;
        java.lang.RuntimeException $r6;
        java.lang.String $r7;

        r0 := @this: android.filterfw.core.OutputPort;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot pull frame on ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");

        $r6 = new java.lang.RuntimeException;

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>($r7);

        throw $r6;
    }

    public void pushFrame(android.filterfw.core.Frame)
    {
        android.filterfw.core.OutputPort r0;
        android.filterfw.core.InputPort r1;
        java.lang.StringBuilder $r2;
        java.lang.RuntimeException $r6;
        java.lang.String $r7;
        android.filterfw.core.Frame r8;

        r0 := @this: android.filterfw.core.OutputPort;

        r8 := @parameter0: android.filterfw.core.Frame;

        r1 = r0.<android.filterfw.core.OutputPort: android.filterfw.core.InputPort mTargetPort>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.filterfw.core.InputPort: void pushFrame(android.filterfw.core.Frame)>(r8);

        return;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempting to push frame on unconnected port: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");

        $r6 = new java.lang.RuntimeException;

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>($r7);

        throw $r6;
    }

    public void setBasePort(android.filterfw.core.InputPort)
    {
        android.filterfw.core.OutputPort r0;
        android.filterfw.core.InputPort r1;

        r0 := @this: android.filterfw.core.OutputPort;

        r1 := @parameter0: android.filterfw.core.InputPort;

        r0.<android.filterfw.core.OutputPort: android.filterfw.core.InputPort mBasePort> = r1;

        return;
    }

    public void setFrame(android.filterfw.core.Frame)
    {
        android.filterfw.core.OutputPort r0;
        android.filterfw.core.InputPort r1;
        java.lang.StringBuilder $r2;
        java.lang.RuntimeException $r6;
        java.lang.String $r7;
        android.filterfw.core.Frame r8;

        r0 := @this: android.filterfw.core.OutputPort;

        r8 := @parameter0: android.filterfw.core.Frame;

        virtualinvoke r0.<android.filterfw.core.OutputPort: void assertPortIsOpen()>();

        r1 = r0.<android.filterfw.core.OutputPort: android.filterfw.core.InputPort mTargetPort>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.filterfw.core.InputPort: void setFrame(android.filterfw.core.Frame)>(r8);

        return;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempting to set frame on unconnected port: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");

        $r6 = new java.lang.RuntimeException;

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>($r7);

        throw $r6;
    }

    public java.lang.String toString()
    {
        android.filterfw.core.OutputPort r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r4, $r6;

        r0 := @this: android.filterfw.core.OutputPort;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("output ");

        $r4 = specialinvoke r0.<android.filterfw.core.FilterPort: java.lang.String toString()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }
}
