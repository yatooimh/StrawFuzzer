public class android.filterfw.core.ProgramPort extends android.filterfw.core.FieldPort
{
    protected java.lang.String mVarName;

    public void <init>(android.filterfw.core.Filter, java.lang.String, java.lang.String, java.lang.reflect.Field, boolean)
    {
        android.filterfw.core.ProgramPort r0;
        android.filterfw.core.Filter r1;
        java.lang.String r2, r3;
        java.lang.reflect.Field r4;
        boolean z0;

        r0 := @this: android.filterfw.core.ProgramPort;

        r1 := @parameter0: android.filterfw.core.Filter;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.reflect.Field;

        z0 := @parameter4: boolean;

        specialinvoke r0.<android.filterfw.core.FieldPort: void <init>(android.filterfw.core.Filter,java.lang.String,java.lang.reflect.Field,boolean)>(r1, r2, r4, z0);

        r0.<android.filterfw.core.ProgramPort: java.lang.String mVarName> = r3;

        return;
    }

    public java.lang.String toString()
    {
        android.filterfw.core.ProgramPort r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r4, $r6;

        r0 := @this: android.filterfw.core.ProgramPort;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Program ");

        $r4 = specialinvoke r0.<android.filterfw.core.FieldPort: java.lang.String toString()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public void transfer(android.filterfw.core.FilterContext)
    {
        android.filterfw.core.ProgramPort r0;
        boolean z0;
        android.filterfw.core.Filter $r1;
        java.lang.reflect.Field $r2, $r9, $r16;
        java.lang.Object $r3, r22;
        java.lang.String $r4, $r10, $r13, $r17, $r20;
        android.filterfw.core.Program $r5;
        java.lang.Throwable $r6, $r14;
        java.lang.ClassCastException $r7;
        android.filterfw.core.FilterContext r21;
        java.lang.RuntimeException r24, r27;
        java.lang.StringBuilder r25, r28;

        r0 := @this: android.filterfw.core.ProgramPort;

        r21 := @parameter0: android.filterfw.core.FilterContext;

        entermonitor r0;

     label01:
        z0 = r0.<android.filterfw.core.ProgramPort: boolean mValueWaiting>;

     label02:
        if z0 == 0 goto label11;

     label03:
        $r2 = r0.<android.filterfw.core.ProgramPort: java.lang.reflect.Field mField>;

        $r1 = r0.<android.filterfw.core.ProgramPort: android.filterfw.core.Filter mFilter>;

        r22 = virtualinvoke $r2.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>($r1);

     label04:
        if r22 == null goto label06;

     label05:
        $r5 = (android.filterfw.core.Program) r22;

        $r4 = r0.<android.filterfw.core.ProgramPort: java.lang.String mVarName>;

        $r3 = r0.<android.filterfw.core.ProgramPort: java.lang.Object mValue>;

        virtualinvoke $r5.<android.filterfw.core.Program: void setHostValue(java.lang.String,java.lang.Object)>($r4, $r3);

        r0.<android.filterfw.core.ProgramPort: boolean mValueWaiting> = 0;

     label06:
        goto label11;

     label07:
        $r7 := @caughtexception;

     label08:
        r24 = new java.lang.RuntimeException;

        r25 = new java.lang.StringBuilder;

        specialinvoke r25.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Non Program field \'");

        $r9 = r0.<android.filterfw.core.ProgramPort: java.lang.reflect.Field mField>;

        $r10 = virtualinvoke $r9.<java.lang.reflect.Field: java.lang.String getName()>();

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' annotated with ProgramParameter!");

        $r13 = virtualinvoke r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r24.<java.lang.RuntimeException: void <init>(java.lang.String)>($r13);

        throw r24;

     label09:
        $r14 := @caughtexception;

     label10:
        r27 = new java.lang.RuntimeException;

        r28 = new java.lang.StringBuilder;

        specialinvoke r28.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Access to program field \'");

        $r16 = r0.<android.filterfw.core.ProgramPort: java.lang.reflect.Field mField>;

        $r17 = virtualinvoke $r16.<java.lang.reflect.Field: java.lang.String getName()>();

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' was denied!");

        $r20 = virtualinvoke r28.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r27.<java.lang.RuntimeException: void <init>(java.lang.String)>($r20);

        throw r27;

     label11:
        exitmonitor r0;

        return;

     label12:
        $r6 := @caughtexception;

        exitmonitor r0;

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.IllegalAccessException from label03 to label04 with label09;
        catch java.lang.ClassCastException from label03 to label04 with label07;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.IllegalAccessException from label05 to label06 with label09;
        catch java.lang.ClassCastException from label05 to label06 with label07;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
    }
}
