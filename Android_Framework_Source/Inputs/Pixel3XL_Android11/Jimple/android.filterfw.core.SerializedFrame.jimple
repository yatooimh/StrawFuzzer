public class android.filterfw.core.SerializedFrame extends android.filterfw.core.Frame
{
    private static final int INITIAL_CAPACITY;
    private android.filterfw.core.SerializedFrame$DirectByteOutputStream mByteOutputStream;
    private java.io.ObjectOutputStream mObjectOut;

    void <init>(android.filterfw.core.FrameFormat, android.filterfw.core.FrameManager)
    {
        android.filterfw.core.SerializedFrame r0;
        android.filterfw.core.FrameManager r1;
        android.filterfw.core.SerializedFrame$DirectByteOutputStream $r2, $r3, r7;
        java.lang.Throwable $r4;
        java.lang.RuntimeException $r5;
        android.filterfw.core.FrameFormat r6;
        java.io.ObjectOutputStream r8;

        r0 := @this: android.filterfw.core.SerializedFrame;

        r6 := @parameter0: android.filterfw.core.FrameFormat;

        r1 := @parameter1: android.filterfw.core.FrameManager;

        specialinvoke r0.<android.filterfw.core.Frame: void <init>(android.filterfw.core.FrameFormat,android.filterfw.core.FrameManager)>(r6, r1);

        virtualinvoke r0.<android.filterfw.core.SerializedFrame: void setReusable(boolean)>(0);

     label1:
        r7 = new android.filterfw.core.SerializedFrame$DirectByteOutputStream;

        specialinvoke r7.<android.filterfw.core.SerializedFrame$DirectByteOutputStream: void <init>(android.filterfw.core.SerializedFrame,int)>(r0, 64);

        r0.<android.filterfw.core.SerializedFrame: android.filterfw.core.SerializedFrame$DirectByteOutputStream mByteOutputStream> = r7;

        r8 = new java.io.ObjectOutputStream;

        $r2 = r0.<android.filterfw.core.SerializedFrame: android.filterfw.core.SerializedFrame$DirectByteOutputStream mByteOutputStream>;

        specialinvoke r8.<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>($r2);

        r0.<android.filterfw.core.SerializedFrame: java.io.ObjectOutputStream mObjectOut> = r8;

        $r3 = r0.<android.filterfw.core.SerializedFrame: android.filterfw.core.SerializedFrame$DirectByteOutputStream mByteOutputStream>;

        virtualinvoke $r3.<android.filterfw.core.SerializedFrame$DirectByteOutputStream: void markHeaderEnd()>();

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Could not create serialization streams for SerializedFrame!", $r4);

        throw $r5;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private final java.lang.Object deserializeObjectValue()
    {
        android.filterfw.core.SerializedFrame r0;
        android.filterfw.core.SerializedFrame$DirectByteOutputStream $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.StringBuilder $r3, $r10;
        java.lang.RuntimeException $r7, $r14;
        java.lang.String $r8, $r15;
        java.lang.Throwable $r9;
        android.filterfw.core.SerializedFrame$DirectByteInputStream r16;
        java.io.ObjectInputStream r17;
        java.lang.Object r18;

        r0 := @this: android.filterfw.core.SerializedFrame;

     label1:
        $r1 = r0.<android.filterfw.core.SerializedFrame: android.filterfw.core.SerializedFrame$DirectByteOutputStream mByteOutputStream>;

        r16 = virtualinvoke $r1.<android.filterfw.core.SerializedFrame$DirectByteOutputStream: android.filterfw.core.SerializedFrame$DirectByteInputStream getInputStream()>();

        r17 = new java.io.ObjectInputStream;

        specialinvoke r17.<java.io.ObjectInputStream: void <init>(java.io.InputStream)>(r16);

        r18 = virtualinvoke r17.<java.io.ObjectInputStream: java.lang.Object readObject()>();

     label2:
        return r18;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to deserialize object of unknown class in ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");

        $r7 = new java.lang.RuntimeException;

        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r8, $r2);

        throw $r7;

     label4:
        $r9 := @caughtexception;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not deserialize object in ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");

        $r14 = new java.lang.RuntimeException;

        $r15 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r15, $r9);

        throw $r14;

        catch java.io.IOException from label1 to label2 with label4;
        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    private final void serializeObjectValue(java.lang.Object)
    {
        android.filterfw.core.SerializedFrame r0;
        java.lang.Object r1;
        android.filterfw.core.SerializedFrame$DirectByteOutputStream $r4;
        java.io.ObjectOutputStream $r5, $r6, $r7;
        java.lang.Throwable $r8;
        java.lang.StringBuilder $r9;
        java.lang.RuntimeException $r15;
        java.lang.String $r16;

        r0 := @this: android.filterfw.core.SerializedFrame;

        r1 := @parameter0: java.lang.Object;

     label1:
        $r4 = r0.<android.filterfw.core.SerializedFrame: android.filterfw.core.SerializedFrame$DirectByteOutputStream mByteOutputStream>;

        virtualinvoke $r4.<android.filterfw.core.SerializedFrame$DirectByteOutputStream: void reset()>();

        $r5 = r0.<android.filterfw.core.SerializedFrame: java.io.ObjectOutputStream mObjectOut>;

        virtualinvoke $r5.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(r1);

        $r6 = r0.<android.filterfw.core.SerializedFrame: java.io.ObjectOutputStream mObjectOut>;

        virtualinvoke $r6.<java.io.ObjectOutputStream: void flush()>();

        $r7 = r0.<android.filterfw.core.SerializedFrame: java.io.ObjectOutputStream mObjectOut>;

        virtualinvoke $r7.<java.io.ObjectOutputStream: void close()>();

     label2:
        return;

     label3:
        $r8 := @caughtexception;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not serialize object ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");

        $r15 = new java.lang.RuntimeException;

        $r16 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r16, $r8);

        throw $r15;

        catch java.io.IOException from label1 to label2 with label3;
    }

    static android.filterfw.core.SerializedFrame wrapObject(java.lang.Object, android.filterfw.core.FrameManager)
    {
        java.lang.Object r0;
        android.filterfw.core.SerializedFrame $r1;
        android.filterfw.core.MutableFrameFormat $r2;
        android.filterfw.core.FrameManager r3;

        r0 := @parameter0: java.lang.Object;

        r3 := @parameter1: android.filterfw.core.FrameManager;

        $r1 = new android.filterfw.core.SerializedFrame;

        $r2 = staticinvoke <android.filterfw.format.ObjectFormat: android.filterfw.core.MutableFrameFormat fromObject(java.lang.Object,int)>(r0, 1);

        specialinvoke $r1.<android.filterfw.core.SerializedFrame: void <init>(android.filterfw.core.FrameFormat,android.filterfw.core.FrameManager)>($r2, r3);

        virtualinvoke $r1.<android.filterfw.core.SerializedFrame: void setObjectValue(java.lang.Object)>(r0);

        return $r1;
    }

    public android.graphics.Bitmap getBitmap()
    {
        android.filterfw.core.SerializedFrame r0;
        boolean $z0;
        java.lang.Object r1;
        android.graphics.Bitmap r2;

        r0 := @this: android.filterfw.core.SerializedFrame;

        r1 = specialinvoke r0.<android.filterfw.core.SerializedFrame: java.lang.Object deserializeObjectValue()>();

        $z0 = r1 instanceof android.graphics.Bitmap;

        if $z0 == 0 goto label1;

        r2 = (android.graphics.Bitmap) r1;

        goto label2;

     label1:
        r2 = null;

     label2:
        return r2;
    }

    public java.nio.ByteBuffer getData()
    {
        android.filterfw.core.SerializedFrame r0;
        boolean $z0;
        java.lang.Object r1;
        java.nio.ByteBuffer r2;

        r0 := @this: android.filterfw.core.SerializedFrame;

        r1 = specialinvoke r0.<android.filterfw.core.SerializedFrame: java.lang.Object deserializeObjectValue()>();

        $z0 = r1 instanceof java.nio.ByteBuffer;

        if $z0 == 0 goto label1;

        r2 = (java.nio.ByteBuffer) r1;

        goto label2;

     label1:
        r2 = null;

     label2:
        return r2;
    }

    public float[] getFloats()
    {
        android.filterfw.core.SerializedFrame r0;
        boolean $z0;
        java.lang.Object r1;
        float[] r2;

        r0 := @this: android.filterfw.core.SerializedFrame;

        r1 = specialinvoke r0.<android.filterfw.core.SerializedFrame: java.lang.Object deserializeObjectValue()>();

        $z0 = r1 instanceof float[];

        if $z0 == 0 goto label1;

        r2 = (float[]) r1;

        goto label2;

     label1:
        r2 = null;

     label2:
        return r2;
    }

    public int[] getInts()
    {
        android.filterfw.core.SerializedFrame r0;
        boolean $z0;
        java.lang.Object r1;
        int[] r2;

        r0 := @this: android.filterfw.core.SerializedFrame;

        r1 = specialinvoke r0.<android.filterfw.core.SerializedFrame: java.lang.Object deserializeObjectValue()>();

        $z0 = r1 instanceof int[];

        if $z0 == 0 goto label1;

        r2 = (int[]) r1;

        goto label2;

     label1:
        r2 = null;

     label2:
        return r2;
    }

    public java.lang.Object getObjectValue()
    {
        android.filterfw.core.SerializedFrame r0;
        java.lang.Object $r1;

        r0 := @this: android.filterfw.core.SerializedFrame;

        $r1 = specialinvoke r0.<android.filterfw.core.SerializedFrame: java.lang.Object deserializeObjectValue()>();

        return $r1;
    }

    protected boolean hasNativeAllocation()
    {
        android.filterfw.core.SerializedFrame r0;

        r0 := @this: android.filterfw.core.SerializedFrame;

        return 0;
    }

    protected void releaseNativeAllocation()
    {
        android.filterfw.core.SerializedFrame r0;

        r0 := @this: android.filterfw.core.SerializedFrame;

        return;
    }

    public void setBitmap(android.graphics.Bitmap)
    {
        android.filterfw.core.SerializedFrame r0;
        android.graphics.Bitmap r1;

        r0 := @this: android.filterfw.core.SerializedFrame;

        r1 := @parameter0: android.graphics.Bitmap;

        virtualinvoke r0.<android.filterfw.core.SerializedFrame: void assertFrameMutable()>();

        virtualinvoke r0.<android.filterfw.core.SerializedFrame: void setGenericObjectValue(java.lang.Object)>(r1);

        return;
    }

    public void setData(java.nio.ByteBuffer, int, int)
    {
        android.filterfw.core.SerializedFrame r0;
        java.nio.ByteBuffer r1, $r3;
        int i0, i1;
        byte[] $r2;

        r0 := @this: android.filterfw.core.SerializedFrame;

        r1 := @parameter0: java.nio.ByteBuffer;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        virtualinvoke r0.<android.filterfw.core.SerializedFrame: void assertFrameMutable()>();

        $r2 = virtualinvoke r1.<java.nio.ByteBuffer: byte[] array()>();

        $r3 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[],int,int)>($r2, i0, i1);

        virtualinvoke r0.<android.filterfw.core.SerializedFrame: void setGenericObjectValue(java.lang.Object)>($r3);

        return;
    }

    public void setFloats(float[])
    {
        android.filterfw.core.SerializedFrame r0;
        float[] r1;

        r0 := @this: android.filterfw.core.SerializedFrame;

        r1 := @parameter0: float[];

        virtualinvoke r0.<android.filterfw.core.SerializedFrame: void assertFrameMutable()>();

        virtualinvoke r0.<android.filterfw.core.SerializedFrame: void setGenericObjectValue(java.lang.Object)>(r1);

        return;
    }

    protected void setGenericObjectValue(java.lang.Object)
    {
        android.filterfw.core.SerializedFrame r0;
        java.lang.Object r1;

        r0 := @this: android.filterfw.core.SerializedFrame;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<android.filterfw.core.SerializedFrame: void serializeObjectValue(java.lang.Object)>(r1);

        return;
    }

    public void setInts(int[])
    {
        android.filterfw.core.SerializedFrame r0;
        int[] r1;

        r0 := @this: android.filterfw.core.SerializedFrame;

        r1 := @parameter0: int[];

        virtualinvoke r0.<android.filterfw.core.SerializedFrame: void assertFrameMutable()>();

        virtualinvoke r0.<android.filterfw.core.SerializedFrame: void setGenericObjectValue(java.lang.Object)>(r1);

        return;
    }

    public java.lang.String toString()
    {
        android.filterfw.core.SerializedFrame r0;
        java.lang.StringBuilder $r2;
        android.filterfw.core.FrameFormat $r4;
        java.lang.String $r7;

        r0 := @this: android.filterfw.core.SerializedFrame;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SerializedFrame (");

        $r4 = virtualinvoke r0.<android.filterfw.core.SerializedFrame: android.filterfw.core.FrameFormat getFormat()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    public static void <clinit>()
    {
        <android.filterfw.core.SerializedFrame: int INITIAL_CAPACITY> = 64;

        return;
    }
}
