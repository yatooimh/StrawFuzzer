public class android.filterfw.core.ShaderProgram extends android.filterfw.core.Program
{
    private android.filterfw.core.GLEnvironment mGLEnvironment;
    private int mMaxTileSize;
    private android.filterfw.core.StopWatchMap mTimer;
    private int shaderProgramId;

    static void <clinit>()
    {
        staticinvoke <java.lang.System: void loadLibrary(java.lang.String)>("filterfw");

        return;
    }

    private void <init>()
    {
        android.filterfw.core.ShaderProgram r0;

        r0 := @this: android.filterfw.core.ShaderProgram;

        specialinvoke r0.<android.filterfw.core.Program: void <init>()>();

        r0.<android.filterfw.core.ShaderProgram: int mMaxTileSize> = 0;

        r0.<android.filterfw.core.ShaderProgram: android.filterfw.core.StopWatchMap mTimer> = null;

        return;
    }

    public void <init>(android.filterfw.core.FilterContext, java.lang.String)
    {
        android.filterfw.core.ShaderProgram r0;
        java.lang.String r1;
        boolean $z1;
        java.lang.RuntimeException $r2;
        android.filterfw.core.FilterContext r3;
        android.filterfw.core.GLEnvironment r4;

        r0 := @this: android.filterfw.core.ShaderProgram;

        r3 := @parameter0: android.filterfw.core.FilterContext;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<android.filterfw.core.Program: void <init>()>();

        r0.<android.filterfw.core.ShaderProgram: int mMaxTileSize> = 0;

        r0.<android.filterfw.core.ShaderProgram: android.filterfw.core.StopWatchMap mTimer> = null;

        r4 = staticinvoke <android.filterfw.core.ShaderProgram: android.filterfw.core.GLEnvironment getGLEnvironment(android.filterfw.core.FilterContext)>(r3);

        r0.<android.filterfw.core.ShaderProgram: android.filterfw.core.GLEnvironment mGLEnvironment> = r4;

        specialinvoke r0.<android.filterfw.core.ShaderProgram: boolean allocate(android.filterfw.core.GLEnvironment,java.lang.String,java.lang.String)>(r4, null, r1);

        $z1 = specialinvoke r0.<android.filterfw.core.ShaderProgram: boolean compileAndLink()>();

        if $z1 == 0 goto label1;

        specialinvoke r0.<android.filterfw.core.ShaderProgram: void setTimer()>();

        return;

     label1:
        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Could not compile and link shader!");

        throw $r2;
    }

    public void <init>(android.filterfw.core.FilterContext, java.lang.String, java.lang.String)
    {
        android.filterfw.core.ShaderProgram r0;
        java.lang.String r1, r2;
        boolean $z1;
        java.lang.RuntimeException $r3;
        android.filterfw.core.FilterContext r4;
        android.filterfw.core.GLEnvironment r5;

        r0 := @this: android.filterfw.core.ShaderProgram;

        r4 := @parameter0: android.filterfw.core.FilterContext;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        specialinvoke r0.<android.filterfw.core.Program: void <init>()>();

        r0.<android.filterfw.core.ShaderProgram: int mMaxTileSize> = 0;

        r0.<android.filterfw.core.ShaderProgram: android.filterfw.core.StopWatchMap mTimer> = null;

        r5 = staticinvoke <android.filterfw.core.ShaderProgram: android.filterfw.core.GLEnvironment getGLEnvironment(android.filterfw.core.FilterContext)>(r4);

        r0.<android.filterfw.core.ShaderProgram: android.filterfw.core.GLEnvironment mGLEnvironment> = r5;

        specialinvoke r0.<android.filterfw.core.ShaderProgram: boolean allocate(android.filterfw.core.GLEnvironment,java.lang.String,java.lang.String)>(r5, r1, r2);

        $z1 = specialinvoke r0.<android.filterfw.core.ShaderProgram: boolean compileAndLink()>();

        if $z1 == 0 goto label1;

        specialinvoke r0.<android.filterfw.core.ShaderProgram: void setTimer()>();

        return;

     label1:
        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Could not compile and link shader!");

        throw $r3;
    }

    private void <init>(android.filterfw.core.NativeAllocatorTag)
    {
        android.filterfw.core.ShaderProgram r0;
        android.filterfw.core.NativeAllocatorTag r1;

        r0 := @this: android.filterfw.core.ShaderProgram;

        r1 := @parameter0: android.filterfw.core.NativeAllocatorTag;

        specialinvoke r0.<android.filterfw.core.Program: void <init>()>();

        r0.<android.filterfw.core.ShaderProgram: int mMaxTileSize> = 0;

        r0.<android.filterfw.core.ShaderProgram: android.filterfw.core.StopWatchMap mTimer> = null;

        return;
    }

    private native boolean allocate(android.filterfw.core.GLEnvironment, java.lang.String, java.lang.String);

    private native boolean beginShaderDrawing();

    private native boolean compileAndLink();

    public static android.filterfw.core.ShaderProgram createIdentity(android.filterfw.core.FilterContext)
    {
        android.filterfw.core.GLEnvironment $r0;
        android.filterfw.core.FilterContext r1;
        android.filterfw.core.ShaderProgram r2;

        r1 := @parameter0: android.filterfw.core.FilterContext;

        $r0 = staticinvoke <android.filterfw.core.ShaderProgram: android.filterfw.core.GLEnvironment getGLEnvironment(android.filterfw.core.FilterContext)>(r1);

        r2 = staticinvoke <android.filterfw.core.ShaderProgram: android.filterfw.core.ShaderProgram nativeCreateIdentity(android.filterfw.core.GLEnvironment)>($r0);

        specialinvoke r2.<android.filterfw.core.ShaderProgram: void setTimer()>();

        return r2;
    }

    private native boolean deallocate();

    private static android.filterfw.core.GLEnvironment getGLEnvironment(android.filterfw.core.FilterContext)
    {
        java.lang.NullPointerException $r0;
        android.filterfw.core.FilterContext r1;
        android.filterfw.core.GLEnvironment r2;

        r1 := @parameter0: android.filterfw.core.FilterContext;

        if r1 == null goto label1;

        r2 = virtualinvoke r1.<android.filterfw.core.FilterContext: android.filterfw.core.GLEnvironment getGLEnvironment()>();

        goto label2;

     label1:
        r2 = null;

     label2:
        if r2 == null goto label3;

        return r2;

     label3:
        $r0 = new java.lang.NullPointerException;

        specialinvoke $r0.<java.lang.NullPointerException: void <init>(java.lang.String)>("Attempting to create ShaderProgram with no GL environment in place!");

        throw $r0;
    }

    private native java.lang.Object getUniformValue(java.lang.String);

    private static native android.filterfw.core.ShaderProgram nativeCreateIdentity(android.filterfw.core.GLEnvironment);

    private native boolean setShaderAttributeValues(java.lang.String, float[], int);

    private native boolean setShaderAttributeVertexFrame(java.lang.String, android.filterfw.core.VertexFrame, int, int, int, int, boolean);

    private native boolean setShaderBlendEnabled(boolean);

    private native boolean setShaderBlendFunc(int, int);

    private native boolean setShaderClearColor(float, float, float);

    private native boolean setShaderClearsOutput(boolean);

    private native boolean setShaderDrawMode(int);

    private native boolean setShaderTileCounts(int, int);

    private native boolean setShaderVertexCount(int);

    private native boolean setTargetRegion(float, float, float, float, float, float, float, float);

    private void setTimer()
    {
        android.filterfw.core.ShaderProgram r0;
        android.filterfw.core.StopWatchMap $r1;

        r0 := @this: android.filterfw.core.ShaderProgram;

        $r1 = new android.filterfw.core.StopWatchMap;

        specialinvoke $r1.<android.filterfw.core.StopWatchMap: void <init>()>();

        r0.<android.filterfw.core.ShaderProgram: android.filterfw.core.StopWatchMap mTimer> = $r1;

        return;
    }

    private native boolean setUniformValue(java.lang.String, java.lang.Object);

    private native boolean shaderProcess(android.filterfw.core.GLFrame[], android.filterfw.core.GLFrame);

    public void beginDrawing()
    {
        android.filterfw.core.ShaderProgram r0;
        boolean $z0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.filterfw.core.ShaderProgram;

        $z0 = specialinvoke r0.<android.filterfw.core.ShaderProgram: boolean beginShaderDrawing()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Could not prepare shader-program for drawing!");

        throw $r1;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.filterfw.core.ShaderProgram r0;

        r0 := @this: android.filterfw.core.ShaderProgram;

        specialinvoke r0.<android.filterfw.core.ShaderProgram: boolean deallocate()>();

        return;
    }

    public android.filterfw.core.GLEnvironment getGLEnvironment()
    {
        android.filterfw.core.ShaderProgram r0;
        android.filterfw.core.GLEnvironment $r1;

        r0 := @this: android.filterfw.core.ShaderProgram;

        $r1 = r0.<android.filterfw.core.ShaderProgram: android.filterfw.core.GLEnvironment mGLEnvironment>;

        return $r1;
    }

    public java.lang.Object getHostValue(java.lang.String)
    {
        android.filterfw.core.ShaderProgram r0;
        java.lang.String r1;
        java.lang.Object $r2;

        r0 := @this: android.filterfw.core.ShaderProgram;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<android.filterfw.core.ShaderProgram: java.lang.Object getUniformValue(java.lang.String)>(r1);

        return $r2;
    }

    public void process(android.filterfw.core.Frame[], android.filterfw.core.Frame)
    {
        android.filterfw.core.ShaderProgram r0;
        android.filterfw.core.Frame r1, $r9, $r16;
        android.filterfw.core.GLFrame[] r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, $i9, i10, i11, i12, i13;
        android.filterfw.core.StopWatchMap $r3, $r6, $r18, $r19;
        boolean $z0, $z1, $z2, $z3, $z5;
        java.lang.RuntimeException $r4, $r5, $r14;
        android.filterfw.core.FrameFormat $r7, $r8;
        java.lang.StringBuilder $r10;
        java.lang.String $r15;
        android.filterfw.core.GLFrame $r17, r22;
        android.filterfw.core.Frame[] r20;

        r0 := @this: android.filterfw.core.ShaderProgram;

        r20 := @parameter0: android.filterfw.core.Frame[];

        r1 := @parameter1: android.filterfw.core.Frame;

        $r3 = r0.<android.filterfw.core.ShaderProgram: android.filterfw.core.StopWatchMap mTimer>;

        $z0 = $r3.<android.filterfw.core.StopWatchMap: boolean LOG_MFF_RUNNING_TIMES>;

        if $z0 == 0 goto label1;

        $r18 = r0.<android.filterfw.core.ShaderProgram: android.filterfw.core.StopWatchMap mTimer>;

        virtualinvoke $r18.<android.filterfw.core.StopWatchMap: void start(java.lang.String)>("glFinish");

        staticinvoke <android.opengl.GLES20: void glFinish()>();

        $r19 = r0.<android.filterfw.core.ShaderProgram: android.filterfw.core.StopWatchMap mTimer>;

        virtualinvoke $r19.<android.filterfw.core.StopWatchMap: void stop(java.lang.String)>("glFinish");

     label1:
        $i1 = lengthof r20;

        r2 = newarray (android.filterfw.core.GLFrame)[$i1];

        i8 = 0;

     label2:
        $i9 = lengthof r20;

        if i8 >= $i9 goto label4;

        $r9 = r20[i8];

        $z5 = $r9 instanceof android.filterfw.core.GLFrame;

        if $z5 == 0 goto label3;

        $r16 = r20[i8];

        $r17 = (android.filterfw.core.GLFrame) $r16;

        r2[i8] = $r17;

        i8 = i8 + 1;

        goto label2;

     label3:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ShaderProgram got non-GL frame as input ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i8);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");

        $r14 = new java.lang.RuntimeException;

        $r15 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.RuntimeException: void <init>(java.lang.String)>($r15);

        throw $r14;

     label4:
        $z1 = r1 instanceof android.filterfw.core.GLFrame;

        if $z1 == 0 goto label8;

        r22 = (android.filterfw.core.GLFrame) r1;

        $i2 = r0.<android.filterfw.core.ShaderProgram: int mMaxTileSize>;

        if $i2 <= 0 goto label5;

        $r7 = virtualinvoke r1.<android.filterfw.core.Frame: android.filterfw.core.FrameFormat getFormat()>();

        i10 = virtualinvoke $r7.<android.filterfw.core.FrameFormat: int getWidth()>();

        i11 = r0.<android.filterfw.core.ShaderProgram: int mMaxTileSize>;

        $i3 = i10 + i11;

        $i4 = $i3 - 1;

        i12 = $i4 / i11;

        $r8 = virtualinvoke r1.<android.filterfw.core.Frame: android.filterfw.core.FrameFormat getFormat()>();

        i13 = virtualinvoke $r8.<android.filterfw.core.FrameFormat: int getHeight()>();

        i0 = r0.<android.filterfw.core.ShaderProgram: int mMaxTileSize>;

        $i5 = i13 + i0;

        $i6 = $i5 - 1;

        $i7 = $i6 / i0;

        specialinvoke r0.<android.filterfw.core.ShaderProgram: boolean setShaderTileCounts(int,int)>(i12, $i7);

     label5:
        $z2 = specialinvoke r0.<android.filterfw.core.ShaderProgram: boolean shaderProcess(android.filterfw.core.GLFrame[],android.filterfw.core.GLFrame)>(r2, r22);

        if $z2 == 0 goto label7;

        $r6 = r0.<android.filterfw.core.ShaderProgram: android.filterfw.core.StopWatchMap mTimer>;

        $z3 = $r6.<android.filterfw.core.StopWatchMap: boolean LOG_MFF_RUNNING_TIMES>;

        if $z3 == 0 goto label6;

        staticinvoke <android.opengl.GLES20: void glFinish()>();

     label6:
        return;

     label7:
        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>("Error executing ShaderProgram!");

        throw $r5;

     label8:
        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("ShaderProgram got non-GL output frame!");

        throw $r4;
    }

    public void setAttributeValues(java.lang.String, android.filterfw.core.VertexFrame, int, int, int, int, boolean)
    {
        android.filterfw.core.ShaderProgram r0;
        java.lang.String r1, $r7;
        int i0, i1, i2, i3;
        boolean z0, $z1;
        java.lang.StringBuilder $r2;
        java.lang.RuntimeException $r6;
        android.filterfw.core.VertexFrame r8;

        r0 := @this: android.filterfw.core.ShaderProgram;

        r1 := @parameter0: java.lang.String;

        r8 := @parameter1: android.filterfw.core.VertexFrame;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        z0 := @parameter6: boolean;

        $z1 = specialinvoke r0.<android.filterfw.core.ShaderProgram: boolean setShaderAttributeVertexFrame(java.lang.String,android.filterfw.core.VertexFrame,int,int,int,int,boolean)>(r1, r8, i0, i1, i2, i3, z0);

        if $z1 == 0 goto label1;

        return;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error setting attribute value for attribute \'");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'!");

        $r6 = new java.lang.RuntimeException;

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>($r7);

        throw $r6;
    }

    public void setAttributeValues(java.lang.String, float[], int)
    {
        android.filterfw.core.ShaderProgram r0;
        java.lang.String r1, $r7;
        int i0;
        boolean $z0;
        java.lang.StringBuilder $r2;
        java.lang.RuntimeException $r6;
        float[] r8;

        r0 := @this: android.filterfw.core.ShaderProgram;

        r1 := @parameter0: java.lang.String;

        r8 := @parameter1: float[];

        i0 := @parameter2: int;

        $z0 = specialinvoke r0.<android.filterfw.core.ShaderProgram: boolean setShaderAttributeValues(java.lang.String,float[],int)>(r1, r8, i0);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error setting attribute value for attribute \'");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'!");

        $r6 = new java.lang.RuntimeException;

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>($r7);

        throw $r6;
    }

    public void setBlendEnabled(boolean)
    {
        android.filterfw.core.ShaderProgram r0;
        boolean z0, $z1;
        java.lang.StringBuilder $r2;
        java.lang.RuntimeException $r6;
        java.lang.String $r7;

        r0 := @this: android.filterfw.core.ShaderProgram;

        z0 := @parameter0: boolean;

        $z1 = specialinvoke r0.<android.filterfw.core.ShaderProgram: boolean setShaderBlendEnabled(boolean)>(z0);

        if $z1 == 0 goto label1;

        return;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not set Blending ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");

        $r6 = new java.lang.RuntimeException;

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>($r7);

        throw $r6;
    }

    public void setBlendFunc(int, int)
    {
        android.filterfw.core.ShaderProgram r0;
        int i0, i1;
        boolean $z0;
        java.lang.StringBuilder $r2;
        java.lang.RuntimeException $r8;
        java.lang.String $r9;

        r0 := @this: android.filterfw.core.ShaderProgram;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = specialinvoke r0.<android.filterfw.core.ShaderProgram: boolean setShaderBlendFunc(int,int)>(i0, i1);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not set BlendFunc ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");

        $r8 = new java.lang.RuntimeException;

        $r9 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>($r9);

        throw $r8;
    }

    public void setClearColor(float, float, float)
    {
        android.filterfw.core.ShaderProgram r0;
        float f0, f1, f2;
        boolean $z0;
        java.lang.StringBuilder $r2;
        java.lang.RuntimeException $r10;
        java.lang.String $r11;

        r0 := @this: android.filterfw.core.ShaderProgram;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        $z0 = specialinvoke r0.<android.filterfw.core.ShaderProgram: boolean setShaderClearColor(float,float,float)>(f0, f1, f2);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not set clear color to ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f2);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");

        $r10 = new java.lang.RuntimeException;

        $r11 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.String)>($r11);

        throw $r10;
    }

    public void setClearsOutput(boolean)
    {
        android.filterfw.core.ShaderProgram r0;
        boolean z0, $z1;
        java.lang.StringBuilder $r2;
        java.lang.RuntimeException $r6;
        java.lang.String $r7;

        r0 := @this: android.filterfw.core.ShaderProgram;

        z0 := @parameter0: boolean;

        $z1 = specialinvoke r0.<android.filterfw.core.ShaderProgram: boolean setShaderClearsOutput(boolean)>(z0);

        if $z1 == 0 goto label1;

        return;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not set clears-output flag to ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");

        $r6 = new java.lang.RuntimeException;

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>($r7);

        throw $r6;
    }

    public void setDrawMode(int)
    {
        android.filterfw.core.ShaderProgram r0;
        int i0;
        boolean $z0;
        java.lang.StringBuilder $r2;
        java.lang.RuntimeException $r6;
        java.lang.String $r7;

        r0 := @this: android.filterfw.core.ShaderProgram;

        i0 := @parameter0: int;

        $z0 = specialinvoke r0.<android.filterfw.core.ShaderProgram: boolean setShaderDrawMode(int)>(i0);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not set GL draw-mode to ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");

        $r6 = new java.lang.RuntimeException;

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>($r7);

        throw $r6;
    }

    public void setHostValue(java.lang.String, java.lang.Object)
    {
        android.filterfw.core.ShaderProgram r0;
        java.lang.String r1, $r7;
        boolean $z0;
        java.lang.StringBuilder $r2;
        java.lang.RuntimeException $r6;
        java.lang.Object r8;

        r0 := @this: android.filterfw.core.ShaderProgram;

        r1 := @parameter0: java.lang.String;

        r8 := @parameter1: java.lang.Object;

        $z0 = specialinvoke r0.<android.filterfw.core.ShaderProgram: boolean setUniformValue(java.lang.String,java.lang.Object)>(r1, r8);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error setting uniform value for variable \'");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'!");

        $r6 = new java.lang.RuntimeException;

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>($r7);

        throw $r6;
    }

    public void setMaximumTileSize(int)
    {
        android.filterfw.core.ShaderProgram r0;
        int i0;

        r0 := @this: android.filterfw.core.ShaderProgram;

        i0 := @parameter0: int;

        r0.<android.filterfw.core.ShaderProgram: int mMaxTileSize> = i0;

        return;
    }

    public void setSourceRect(float, float, float, float)
    {
        android.filterfw.core.ShaderProgram r0;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7;

        r0 := @this: android.filterfw.core.ShaderProgram;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        $f7 = f0 + f2;

        $f6 = f1 + f3;

        $f5 = f0 + f2;

        $f4 = f1 + f3;

        virtualinvoke r0.<android.filterfw.core.ShaderProgram: boolean setSourceRegion(float,float,float,float,float,float,float,float)>(f0, f1, $f7, f1, f0, $f6, $f5, $f4);

        return;
    }

    public void setSourceRegion(android.filterfw.geometry.Quad)
    {
        android.filterfw.core.ShaderProgram r0;
        android.filterfw.geometry.Quad r1;
        android.filterfw.geometry.Point $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;

        r0 := @this: android.filterfw.core.ShaderProgram;

        r1 := @parameter0: android.filterfw.geometry.Quad;

        $r2 = r1.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p0>;

        $f7 = $r2.<android.filterfw.geometry.Point: float x>;

        $r3 = r1.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p0>;

        $f6 = $r3.<android.filterfw.geometry.Point: float y>;

        $r4 = r1.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p1>;

        $f5 = $r4.<android.filterfw.geometry.Point: float x>;

        $r5 = r1.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p1>;

        $f4 = $r5.<android.filterfw.geometry.Point: float y>;

        $r6 = r1.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p2>;

        $f3 = $r6.<android.filterfw.geometry.Point: float x>;

        $r7 = r1.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p2>;

        $f2 = $r7.<android.filterfw.geometry.Point: float y>;

        $r8 = r1.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p3>;

        $f1 = $r8.<android.filterfw.geometry.Point: float x>;

        $r9 = r1.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p3>;

        $f0 = $r9.<android.filterfw.geometry.Point: float y>;

        virtualinvoke r0.<android.filterfw.core.ShaderProgram: boolean setSourceRegion(float,float,float,float,float,float,float,float)>($f7, $f6, $f5, $f4, $f3, $f2, $f1, $f0);

        return;
    }

    public native boolean setSourceRegion(float, float, float, float, float, float, float, float);

    public void setTargetRect(float, float, float, float)
    {
        android.filterfw.core.ShaderProgram r0;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7;

        r0 := @this: android.filterfw.core.ShaderProgram;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        $f7 = f0 + f2;

        $f6 = f1 + f3;

        $f5 = f0 + f2;

        $f4 = f1 + f3;

        specialinvoke r0.<android.filterfw.core.ShaderProgram: boolean setTargetRegion(float,float,float,float,float,float,float,float)>(f0, f1, $f7, f1, f0, $f6, $f5, $f4);

        return;
    }

    public void setTargetRegion(android.filterfw.geometry.Quad)
    {
        android.filterfw.core.ShaderProgram r0;
        android.filterfw.geometry.Quad r1;
        android.filterfw.geometry.Point $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;

        r0 := @this: android.filterfw.core.ShaderProgram;

        r1 := @parameter0: android.filterfw.geometry.Quad;

        $r2 = r1.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p0>;

        $f7 = $r2.<android.filterfw.geometry.Point: float x>;

        $r3 = r1.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p0>;

        $f6 = $r3.<android.filterfw.geometry.Point: float y>;

        $r4 = r1.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p1>;

        $f5 = $r4.<android.filterfw.geometry.Point: float x>;

        $r5 = r1.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p1>;

        $f4 = $r5.<android.filterfw.geometry.Point: float y>;

        $r6 = r1.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p2>;

        $f3 = $r6.<android.filterfw.geometry.Point: float x>;

        $r7 = r1.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p2>;

        $f2 = $r7.<android.filterfw.geometry.Point: float y>;

        $r8 = r1.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p3>;

        $f1 = $r8.<android.filterfw.geometry.Point: float x>;

        $r9 = r1.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p3>;

        $f0 = $r9.<android.filterfw.geometry.Point: float y>;

        specialinvoke r0.<android.filterfw.core.ShaderProgram: boolean setTargetRegion(float,float,float,float,float,float,float,float)>($f7, $f6, $f5, $f4, $f3, $f2, $f1, $f0);

        return;
    }

    public void setVertexCount(int)
    {
        android.filterfw.core.ShaderProgram r0;
        int i0;
        boolean $z0;
        java.lang.StringBuilder $r2;
        java.lang.RuntimeException $r6;
        java.lang.String $r7;

        r0 := @this: android.filterfw.core.ShaderProgram;

        i0 := @parameter0: int;

        $z0 = specialinvoke r0.<android.filterfw.core.ShaderProgram: boolean setShaderVertexCount(int)>(i0);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not set GL vertex count to ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");

        $r6 = new java.lang.RuntimeException;

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>($r7);

        throw $r6;
    }
}
