public class android.filterfw.core.StreamPort extends android.filterfw.core.InputPort
{
    private android.filterfw.core.Frame mFrame;
    private boolean mPersistent;

    public void <init>(android.filterfw.core.Filter, java.lang.String)
    {
        android.filterfw.core.StreamPort r0;
        android.filterfw.core.Filter r1;
        java.lang.String r2;

        r0 := @this: android.filterfw.core.StreamPort;

        r1 := @parameter0: android.filterfw.core.Filter;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<android.filterfw.core.InputPort: void <init>(android.filterfw.core.Filter,java.lang.String)>(r1, r2);

        return;
    }

    protected void assignFrame(android.filterfw.core.Frame, boolean)
    {
        android.filterfw.core.StreamPort r0;
        boolean z0;
        java.lang.RuntimeException r1;
        android.filterfw.core.Frame $r2, $r7, $r8, r11, r12;
        java.lang.String $r6;
        java.lang.Throwable $r10;
        java.lang.StringBuilder r13;

        r0 := @this: android.filterfw.core.StreamPort;

        r11 := @parameter0: android.filterfw.core.Frame;

        z0 := @parameter1: boolean;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.filterfw.core.StreamPort: void assertPortIsOpen()>();

        virtualinvoke r0.<android.filterfw.core.StreamPort: void checkFrameType(android.filterfw.core.Frame,boolean)>(r11, z0);

     label2:
        if z0 == 0 goto label5;

     label3:
        $r7 = r0.<android.filterfw.core.StreamPort: android.filterfw.core.Frame mFrame>;

        if $r7 == null goto label6;

        $r8 = r0.<android.filterfw.core.StreamPort: android.filterfw.core.Frame mFrame>;

        virtualinvoke $r8.<android.filterfw.core.Frame: android.filterfw.core.Frame release()>();

     label4:
        goto label6;

     label5:
        $r2 = r0.<android.filterfw.core.StreamPort: android.filterfw.core.Frame mFrame>;

        if $r2 != null goto label8;

     label6:
        r12 = virtualinvoke r11.<android.filterfw.core.Frame: android.filterfw.core.Frame retain()>();

        r0.<android.filterfw.core.StreamPort: android.filterfw.core.Frame mFrame> = r12;

        virtualinvoke r12.<android.filterfw.core.Frame: void markReadOnly()>();

        r0.<android.filterfw.core.StreamPort: boolean mPersistent> = z0;

     label7:
        exitmonitor r0;

        return;

     label8:
        r1 = new java.lang.RuntimeException;

        r13 = new java.lang.StringBuilder;

        specialinvoke r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempting to push more than one frame on port: ");

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");

        $r6 = virtualinvoke r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r1.<java.lang.RuntimeException: void <init>(java.lang.String)>($r6);

        throw r1;

     label9:
        $r10 := @caughtexception;

        exitmonitor r0;

        throw $r10;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
        catch java.lang.Throwable from label8 to label9 with label9;
    }

    public void clear()
    {
        android.filterfw.core.StreamPort r0;
        android.filterfw.core.Frame r1;

        r0 := @this: android.filterfw.core.StreamPort;

        r1 = r0.<android.filterfw.core.StreamPort: android.filterfw.core.Frame mFrame>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.filterfw.core.Frame: android.filterfw.core.Frame release()>();

        r0.<android.filterfw.core.StreamPort: android.filterfw.core.Frame mFrame> = null;

     label1:
        return;
    }

    public boolean hasFrame()
    {
        android.filterfw.core.StreamPort r0;
        java.lang.Throwable $r1;
        android.filterfw.core.Frame r2;
        boolean z0;

        r0 := @this: android.filterfw.core.StreamPort;

        entermonitor r0;

     label1:
        r2 = r0.<android.filterfw.core.StreamPort: android.filterfw.core.Frame mFrame>;

     label2:
        if r2 == null goto label3;

        z0 = 1;

        goto label4;

     label3:
        z0 = 0;

     label4:
        exitmonitor r0;

        return z0;

     label5:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label5;
    }

    public android.filterfw.core.Frame pullFrame()
    {
        android.filterfw.core.StreamPort r0;
        java.lang.RuntimeException r1;
        android.filterfw.core.Frame $r2, $r7, r10;
        java.lang.String $r6;
        boolean $z0;
        java.lang.Throwable $r9;
        java.lang.StringBuilder r11;

        r0 := @this: android.filterfw.core.StreamPort;

        entermonitor r0;

     label1:
        $r2 = r0.<android.filterfw.core.StreamPort: android.filterfw.core.Frame mFrame>;

        if $r2 == null goto label5;

        r10 = r0.<android.filterfw.core.StreamPort: android.filterfw.core.Frame mFrame>;

        $z0 = r0.<android.filterfw.core.StreamPort: boolean mPersistent>;

        if $z0 == 0 goto label3;

        $r7 = r0.<android.filterfw.core.StreamPort: android.filterfw.core.Frame mFrame>;

        virtualinvoke $r7.<android.filterfw.core.Frame: android.filterfw.core.Frame retain()>();

     label2:
        goto label4;

     label3:
        r0.<android.filterfw.core.StreamPort: android.filterfw.core.Frame mFrame> = null;

     label4:
        exitmonitor r0;

        return r10;

     label5:
        r1 = new java.lang.RuntimeException;

        r11 = new java.lang.StringBuilder;

        specialinvoke r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No frame available to pull on port: ");

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");

        $r6 = virtualinvoke r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r1.<java.lang.RuntimeException: void <init>(java.lang.String)>($r6);

        throw r1;

     label6:
        $r9 := @caughtexception;

        exitmonitor r0;

        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label5 to label6 with label6;
    }

    public void pushFrame(android.filterfw.core.Frame)
    {
        android.filterfw.core.StreamPort r0;
        android.filterfw.core.Frame r1;

        r0 := @this: android.filterfw.core.StreamPort;

        r1 := @parameter0: android.filterfw.core.Frame;

        virtualinvoke r0.<android.filterfw.core.StreamPort: void assignFrame(android.filterfw.core.Frame,boolean)>(r1, 0);

        return;
    }

    public void setFrame(android.filterfw.core.Frame)
    {
        android.filterfw.core.StreamPort r0;
        android.filterfw.core.Frame r1;

        r0 := @this: android.filterfw.core.StreamPort;

        r1 := @parameter0: android.filterfw.core.Frame;

        virtualinvoke r0.<android.filterfw.core.StreamPort: void assignFrame(android.filterfw.core.Frame,boolean)>(r1, 1);

        return;
    }

    public java.lang.String toString()
    {
        android.filterfw.core.StreamPort r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r4, $r6;

        r0 := @this: android.filterfw.core.StreamPort;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("input ");

        $r4 = specialinvoke r0.<android.filterfw.core.InputPort: java.lang.String toString()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public void transfer(android.filterfw.core.FilterContext)
    {
        android.filterfw.core.StreamPort r0;
        android.filterfw.core.Frame $r1, $r2;
        java.lang.Throwable $r3;
        android.filterfw.core.FilterContext r4;

        r0 := @this: android.filterfw.core.StreamPort;

        r4 := @parameter0: android.filterfw.core.FilterContext;

        entermonitor r0;

     label1:
        $r1 = r0.<android.filterfw.core.StreamPort: android.filterfw.core.Frame mFrame>;

        if $r1 == null goto label2;

        $r2 = r0.<android.filterfw.core.StreamPort: android.filterfw.core.Frame mFrame>;

        virtualinvoke r0.<android.filterfw.core.StreamPort: void checkFrameManager(android.filterfw.core.Frame,android.filterfw.core.FilterContext)>($r2, r4);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
