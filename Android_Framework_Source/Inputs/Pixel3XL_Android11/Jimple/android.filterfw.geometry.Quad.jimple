public class android.filterfw.geometry.Quad extends java.lang.Object
{
    public android.filterfw.geometry.Point p0;
    public android.filterfw.geometry.Point p1;
    public android.filterfw.geometry.Point p2;
    public android.filterfw.geometry.Point p3;

    public void <init>()
    {
        android.filterfw.geometry.Quad r0;

        r0 := @this: android.filterfw.geometry.Quad;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(android.filterfw.geometry.Point, android.filterfw.geometry.Point, android.filterfw.geometry.Point, android.filterfw.geometry.Point)
    {
        android.filterfw.geometry.Quad r0;
        android.filterfw.geometry.Point r1, r2, r3, r4;

        r0 := @this: android.filterfw.geometry.Quad;

        r1 := @parameter0: android.filterfw.geometry.Point;

        r2 := @parameter1: android.filterfw.geometry.Point;

        r3 := @parameter2: android.filterfw.geometry.Point;

        r4 := @parameter3: android.filterfw.geometry.Point;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p0> = r1;

        r0.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p1> = r2;

        r0.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p2> = r3;

        r0.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p3> = r4;

        return;
    }

    public boolean IsInUnitRange()
    {
        android.filterfw.geometry.Quad r0;
        android.filterfw.geometry.Point $r1, $r2, $r3, $r4;
        boolean $z0, $z1, $z2, $z3, z4;

        r0 := @this: android.filterfw.geometry.Quad;

        $r1 = r0.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p0>;

        $z0 = virtualinvoke $r1.<android.filterfw.geometry.Point: boolean IsInUnitRange()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p1>;

        $z1 = virtualinvoke $r2.<android.filterfw.geometry.Point: boolean IsInUnitRange()>();

        if $z1 == 0 goto label1;

        $r3 = r0.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p2>;

        $z2 = virtualinvoke $r3.<android.filterfw.geometry.Point: boolean IsInUnitRange()>();

        if $z2 == 0 goto label1;

        $r4 = r0.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p3>;

        $z3 = virtualinvoke $r4.<android.filterfw.geometry.Point: boolean IsInUnitRange()>();

        if $z3 == 0 goto label1;

        z4 = 1;

        goto label2;

     label1:
        z4 = 0;

     label2:
        return z4;
    }

    public android.filterfw.geometry.Rectangle boundingBox()
    {
        android.filterfw.geometry.Quad r0;
        java.util.List r1, r2;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13;
        java.lang.Float[] $r3, $r12;
        android.filterfw.geometry.Point $r4, $r6, $r8, $r10, $r13, $r15, $r17, $r19;
        java.lang.Float $r5, $r7, $r9, $r11, $r14, $r16, $r18, $r20, $r22, $r24, $r27, $r29;
        java.lang.Object $r21, $r23, $r26, $r28;
        android.filterfw.geometry.Rectangle $r25;

        r0 := @this: android.filterfw.geometry.Quad;

        $r3 = newarray (java.lang.Float)[4];

        $r4 = r0.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p0>;

        $f2 = $r4.<android.filterfw.geometry.Point: float x>;

        $r5 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f2);

        $r3[0] = $r5;

        $r6 = r0.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p1>;

        $f3 = $r6.<android.filterfw.geometry.Point: float x>;

        $r7 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f3);

        $r3[1] = $r7;

        $r8 = r0.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p2>;

        $f4 = $r8.<android.filterfw.geometry.Point: float x>;

        $r9 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f4);

        $r3[2] = $r9;

        $r10 = r0.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p3>;

        $f5 = $r10.<android.filterfw.geometry.Point: float x>;

        $r11 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f5);

        $r3[3] = $r11;

        r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r3);

        $r12 = newarray (java.lang.Float)[4];

        $r13 = r0.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p0>;

        $f6 = $r13.<android.filterfw.geometry.Point: float y>;

        $r14 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f6);

        $r12[0] = $r14;

        $r15 = r0.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p1>;

        $f7 = $r15.<android.filterfw.geometry.Point: float y>;

        $r16 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f7);

        $r12[1] = $r16;

        $r17 = r0.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p2>;

        $f8 = $r17.<android.filterfw.geometry.Point: float y>;

        $r18 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f8);

        $r12[2] = $r18;

        $r19 = r0.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p3>;

        $f9 = $r19.<android.filterfw.geometry.Point: float y>;

        $r20 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f9);

        $r12[3] = $r20;

        r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r12);

        $r21 = staticinvoke <java.util.Collections: java.lang.Object min(java.util.Collection)>(r1);

        $r22 = (java.lang.Float) $r21;

        f0 = virtualinvoke $r22.<java.lang.Float: float floatValue()>();

        $r23 = staticinvoke <java.util.Collections: java.lang.Object min(java.util.Collection)>(r2);

        $r24 = (java.lang.Float) $r23;

        f1 = virtualinvoke $r24.<java.lang.Float: float floatValue()>();

        $r25 = new android.filterfw.geometry.Rectangle;

        $r26 = staticinvoke <java.util.Collections: java.lang.Object max(java.util.Collection)>(r1);

        $r27 = (java.lang.Float) $r26;

        $f10 = virtualinvoke $r27.<java.lang.Float: float floatValue()>();

        $f11 = $f10 - f0;

        $r28 = staticinvoke <java.util.Collections: java.lang.Object max(java.util.Collection)>(r2);

        $r29 = (java.lang.Float) $r28;

        $f12 = virtualinvoke $r29.<java.lang.Float: float floatValue()>();

        $f13 = $f12 - f1;

        specialinvoke $r25.<android.filterfw.geometry.Rectangle: void <init>(float,float,float,float)>(f0, f1, $f11, $f13);

        return $r25;
    }

    public float getBoundingHeight()
    {
        android.filterfw.geometry.Quad r0;
        java.util.List r1;
        java.lang.Float[] $r2;
        android.filterfw.geometry.Point $r3, $r5, $r7, $r9;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6;
        java.lang.Float $r4, $r6, $r8, $r10, $r12, $r14;
        java.lang.Object $r11, $r13;

        r0 := @this: android.filterfw.geometry.Quad;

        $r2 = newarray (java.lang.Float)[4];

        $r3 = r0.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p0>;

        $f0 = $r3.<android.filterfw.geometry.Point: float y>;

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r2[0] = $r4;

        $r5 = r0.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p1>;

        $f1 = $r5.<android.filterfw.geometry.Point: float y>;

        $r6 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f1);

        $r2[1] = $r6;

        $r7 = r0.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p2>;

        $f2 = $r7.<android.filterfw.geometry.Point: float y>;

        $r8 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f2);

        $r2[2] = $r8;

        $r9 = r0.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p3>;

        $f3 = $r9.<android.filterfw.geometry.Point: float y>;

        $r10 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f3);

        $r2[3] = $r10;

        r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2);

        $r11 = staticinvoke <java.util.Collections: java.lang.Object max(java.util.Collection)>(r1);

        $r12 = (java.lang.Float) $r11;

        $f4 = virtualinvoke $r12.<java.lang.Float: float floatValue()>();

        $r13 = staticinvoke <java.util.Collections: java.lang.Object min(java.util.Collection)>(r1);

        $r14 = (java.lang.Float) $r13;

        $f5 = virtualinvoke $r14.<java.lang.Float: float floatValue()>();

        $f6 = $f4 - $f5;

        return $f6;
    }

    public float getBoundingWidth()
    {
        android.filterfw.geometry.Quad r0;
        java.util.List r1;
        java.lang.Float[] $r2;
        android.filterfw.geometry.Point $r3, $r5, $r7, $r9;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6;
        java.lang.Float $r4, $r6, $r8, $r10, $r12, $r14;
        java.lang.Object $r11, $r13;

        r0 := @this: android.filterfw.geometry.Quad;

        $r2 = newarray (java.lang.Float)[4];

        $r3 = r0.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p0>;

        $f0 = $r3.<android.filterfw.geometry.Point: float x>;

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r2[0] = $r4;

        $r5 = r0.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p1>;

        $f1 = $r5.<android.filterfw.geometry.Point: float x>;

        $r6 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f1);

        $r2[1] = $r6;

        $r7 = r0.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p2>;

        $f2 = $r7.<android.filterfw.geometry.Point: float x>;

        $r8 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f2);

        $r2[2] = $r8;

        $r9 = r0.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p3>;

        $f3 = $r9.<android.filterfw.geometry.Point: float x>;

        $r10 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f3);

        $r2[3] = $r10;

        r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2);

        $r11 = staticinvoke <java.util.Collections: java.lang.Object max(java.util.Collection)>(r1);

        $r12 = (java.lang.Float) $r11;

        $f4 = virtualinvoke $r12.<java.lang.Float: float floatValue()>();

        $r13 = staticinvoke <java.util.Collections: java.lang.Object min(java.util.Collection)>(r1);

        $r14 = (java.lang.Float) $r13;

        $f5 = virtualinvoke $r14.<java.lang.Float: float floatValue()>();

        $f6 = $f4 - $f5;

        return $f6;
    }

    public android.filterfw.geometry.Quad scaled(float)
    {
        android.filterfw.geometry.Quad r0, $r1;
        float f0;
        android.filterfw.geometry.Point $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;

        r0 := @this: android.filterfw.geometry.Quad;

        f0 := @parameter0: float;

        $r1 = new android.filterfw.geometry.Quad;

        $r2 = r0.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p0>;

        $r3 = virtualinvoke $r2.<android.filterfw.geometry.Point: android.filterfw.geometry.Point times(float)>(f0);

        $r4 = r0.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p1>;

        $r5 = virtualinvoke $r4.<android.filterfw.geometry.Point: android.filterfw.geometry.Point times(float)>(f0);

        $r6 = r0.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p2>;

        $r7 = virtualinvoke $r6.<android.filterfw.geometry.Point: android.filterfw.geometry.Point times(float)>(f0);

        $r8 = r0.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p3>;

        $r9 = virtualinvoke $r8.<android.filterfw.geometry.Point: android.filterfw.geometry.Point times(float)>(f0);

        specialinvoke $r1.<android.filterfw.geometry.Quad: void <init>(android.filterfw.geometry.Point,android.filterfw.geometry.Point,android.filterfw.geometry.Point,android.filterfw.geometry.Point)>($r3, $r5, $r7, $r9);

        return $r1;
    }

    public android.filterfw.geometry.Quad scaled(float, float)
    {
        android.filterfw.geometry.Quad r0, $r1;
        float f0, f1;
        android.filterfw.geometry.Point $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;

        r0 := @this: android.filterfw.geometry.Quad;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r1 = new android.filterfw.geometry.Quad;

        $r2 = r0.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p0>;

        $r3 = virtualinvoke $r2.<android.filterfw.geometry.Point: android.filterfw.geometry.Point mult(float,float)>(f0, f1);

        $r4 = r0.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p1>;

        $r5 = virtualinvoke $r4.<android.filterfw.geometry.Point: android.filterfw.geometry.Point mult(float,float)>(f0, f1);

        $r6 = r0.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p2>;

        $r7 = virtualinvoke $r6.<android.filterfw.geometry.Point: android.filterfw.geometry.Point mult(float,float)>(f0, f1);

        $r8 = r0.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p3>;

        $r9 = virtualinvoke $r8.<android.filterfw.geometry.Point: android.filterfw.geometry.Point mult(float,float)>(f0, f1);

        specialinvoke $r1.<android.filterfw.geometry.Quad: void <init>(android.filterfw.geometry.Point,android.filterfw.geometry.Point,android.filterfw.geometry.Point,android.filterfw.geometry.Point)>($r3, $r5, $r7, $r9);

        return $r1;
    }

    public java.lang.String toString()
    {
        android.filterfw.geometry.Quad r0;
        java.lang.StringBuilder $r2;
        android.filterfw.geometry.Point $r4, $r7, $r10, $r13;
        java.lang.String $r16;

        r0 := @this: android.filterfw.geometry.Quad;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{");

        $r4 = r0.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p0>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r7 = r0.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p1>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r10 = r0.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p2>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r13 = r0.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p3>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r16 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r16;
    }

    public android.filterfw.geometry.Quad translated(float, float)
    {
        android.filterfw.geometry.Quad r0, $r1;
        float f0, f1;
        android.filterfw.geometry.Point $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;

        r0 := @this: android.filterfw.geometry.Quad;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r1 = new android.filterfw.geometry.Quad;

        $r2 = r0.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p0>;

        $r3 = virtualinvoke $r2.<android.filterfw.geometry.Point: android.filterfw.geometry.Point plus(float,float)>(f0, f1);

        $r4 = r0.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p1>;

        $r5 = virtualinvoke $r4.<android.filterfw.geometry.Point: android.filterfw.geometry.Point plus(float,float)>(f0, f1);

        $r6 = r0.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p2>;

        $r7 = virtualinvoke $r6.<android.filterfw.geometry.Point: android.filterfw.geometry.Point plus(float,float)>(f0, f1);

        $r8 = r0.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p3>;

        $r9 = virtualinvoke $r8.<android.filterfw.geometry.Point: android.filterfw.geometry.Point plus(float,float)>(f0, f1);

        specialinvoke $r1.<android.filterfw.geometry.Quad: void <init>(android.filterfw.geometry.Point,android.filterfw.geometry.Point,android.filterfw.geometry.Point,android.filterfw.geometry.Point)>($r3, $r5, $r7, $r9);

        return $r1;
    }

    public android.filterfw.geometry.Quad translated(android.filterfw.geometry.Point)
    {
        android.filterfw.geometry.Quad r0, $r2;
        android.filterfw.geometry.Point r1, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;

        r0 := @this: android.filterfw.geometry.Quad;

        r1 := @parameter0: android.filterfw.geometry.Point;

        $r2 = new android.filterfw.geometry.Quad;

        $r3 = r0.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p0>;

        $r4 = virtualinvoke $r3.<android.filterfw.geometry.Point: android.filterfw.geometry.Point plus(android.filterfw.geometry.Point)>(r1);

        $r5 = r0.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p1>;

        $r6 = virtualinvoke $r5.<android.filterfw.geometry.Point: android.filterfw.geometry.Point plus(android.filterfw.geometry.Point)>(r1);

        $r7 = r0.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p2>;

        $r8 = virtualinvoke $r7.<android.filterfw.geometry.Point: android.filterfw.geometry.Point plus(android.filterfw.geometry.Point)>(r1);

        $r9 = r0.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p3>;

        $r10 = virtualinvoke $r9.<android.filterfw.geometry.Point: android.filterfw.geometry.Point plus(android.filterfw.geometry.Point)>(r1);

        specialinvoke $r2.<android.filterfw.geometry.Quad: void <init>(android.filterfw.geometry.Point,android.filterfw.geometry.Point,android.filterfw.geometry.Point,android.filterfw.geometry.Point)>($r4, $r6, $r8, $r10);

        return $r2;
    }
}
