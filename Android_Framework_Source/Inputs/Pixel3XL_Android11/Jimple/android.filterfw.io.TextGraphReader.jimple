public class android.filterfw.io.TextGraphReader extends android.filterfw.io.GraphReader
{
    private android.filterfw.core.KeyValueMap mBoundReferences;
    private java.util.ArrayList mCommands;
    private android.filterfw.core.Filter mCurrentFilter;
    private android.filterfw.core.FilterGraph mCurrentGraph;
    private android.filterfw.core.FilterFactory mFactory;
    private android.filterfw.core.KeyValueMap mSettings;

    public void <init>()
    {
        android.filterfw.io.TextGraphReader r0;
        java.util.ArrayList $r1;

        r0 := @this: android.filterfw.io.TextGraphReader;

        specialinvoke r0.<android.filterfw.io.GraphReader: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<android.filterfw.io.TextGraphReader: java.util.ArrayList mCommands> = $r1;

        return;
    }

    static android.filterfw.core.FilterFactory access$000(android.filterfw.io.TextGraphReader)
    {
        android.filterfw.io.TextGraphReader r0;
        android.filterfw.core.FilterFactory $r1;

        r0 := @parameter0: android.filterfw.io.TextGraphReader;

        $r1 = r0.<android.filterfw.io.TextGraphReader: android.filterfw.core.FilterFactory mFactory>;

        return $r1;
    }

    static android.filterfw.core.Filter access$100(android.filterfw.io.TextGraphReader)
    {
        android.filterfw.io.TextGraphReader r0;
        android.filterfw.core.Filter $r1;

        r0 := @parameter0: android.filterfw.io.TextGraphReader;

        $r1 = r0.<android.filterfw.io.TextGraphReader: android.filterfw.core.Filter mCurrentFilter>;

        return $r1;
    }

    static android.filterfw.core.Filter access$102(android.filterfw.io.TextGraphReader, android.filterfw.core.Filter)
    {
        android.filterfw.io.TextGraphReader r0;
        android.filterfw.core.Filter r1;

        r0 := @parameter0: android.filterfw.io.TextGraphReader;

        r1 := @parameter1: android.filterfw.core.Filter;

        r0.<android.filterfw.io.TextGraphReader: android.filterfw.core.Filter mCurrentFilter> = r1;

        return r1;
    }

    static android.filterfw.core.FilterGraph access$200(android.filterfw.io.TextGraphReader)
    {
        android.filterfw.io.TextGraphReader r0;
        android.filterfw.core.FilterGraph $r1;

        r0 := @parameter0: android.filterfw.io.TextGraphReader;

        $r1 = r0.<android.filterfw.io.TextGraphReader: android.filterfw.core.FilterGraph mCurrentGraph>;

        return $r1;
    }

    private void applySettings() throws android.filterfw.io.GraphIOException
    {
        android.filterfw.io.TextGraphReader r0;
        java.util.Iterator r1;
        android.filterfw.core.KeyValueMap $r2, $r5;
        java.util.Set $r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.Object $r4, r24;
        java.lang.StringBuilder $r6, $r14;
        android.filterfw.io.GraphIOException $r10, $r18;
        java.lang.String $r11, $r19, r23;
        java.lang.Boolean $r12;
        android.filterfw.core.FilterGraph $r13, $r20, $r21, $r22;

        r0 := @this: android.filterfw.io.TextGraphReader;

        $r2 = r0.<android.filterfw.io.TextGraphReader: android.filterfw.core.KeyValueMap mSettings>;

        $r3 = virtualinvoke $r2.<android.filterfw.core.KeyValueMap: java.util.Set keySet()>();

        r1 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label8;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r23 = (java.lang.String) $r4;

        $r5 = r0.<android.filterfw.io.TextGraphReader: android.filterfw.core.KeyValueMap mSettings>;

        r24 = virtualinvoke $r5.<android.filterfw.core.KeyValueMap: java.lang.Object get(java.lang.Object)>(r23);

        $z1 = virtualinvoke r23.<java.lang.String: boolean equals(java.lang.Object)>("autoBranch");

        if $z1 == 0 goto label5;

        specialinvoke r0.<android.filterfw.io.TextGraphReader: void expectSettingClass(java.lang.String,java.lang.Object,java.lang.Class)>(r23, r24, class "Ljava/lang/String;");

        $z4 = virtualinvoke r24.<java.lang.Object: boolean equals(java.lang.Object)>("synced");

        if $z4 == 0 goto label2;

        $r22 = r0.<android.filterfw.io.TextGraphReader: android.filterfw.core.FilterGraph mCurrentGraph>;

        virtualinvoke $r22.<android.filterfw.core.FilterGraph: void setAutoBranchMode(int)>(1);

        goto label6;

     label2:
        $z5 = virtualinvoke r24.<java.lang.Object: boolean equals(java.lang.Object)>("unsynced");

        if $z5 == 0 goto label3;

        $r21 = r0.<android.filterfw.io.TextGraphReader: android.filterfw.core.FilterGraph mCurrentGraph>;

        virtualinvoke $r21.<android.filterfw.core.FilterGraph: void setAutoBranchMode(int)>(2);

        goto label6;

     label3:
        $z6 = virtualinvoke r24.<java.lang.Object: boolean equals(java.lang.Object)>("off");

        if $z6 == 0 goto label4;

        $r20 = r0.<android.filterfw.io.TextGraphReader: android.filterfw.core.FilterGraph mCurrentGraph>;

        virtualinvoke $r20.<android.filterfw.core.FilterGraph: void setAutoBranchMode(int)>(0);

        goto label6;

     label4:
        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown autobranch setting: ");

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r24);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");

        $r18 = new android.filterfw.io.GraphIOException;

        $r19 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<android.filterfw.io.GraphIOException: void <init>(java.lang.String)>($r19);

        throw $r18;

     label5:
        $z2 = virtualinvoke r23.<java.lang.String: boolean equals(java.lang.Object)>("discardUnconnectedOutputs");

        if $z2 == 0 goto label7;

        specialinvoke r0.<android.filterfw.io.TextGraphReader: void expectSettingClass(java.lang.String,java.lang.Object,java.lang.Class)>(r23, r24, class "Ljava/lang/Boolean;");

        $r13 = r0.<android.filterfw.io.TextGraphReader: android.filterfw.core.FilterGraph mCurrentGraph>;

        $r12 = (java.lang.Boolean) r24;

        $z3 = virtualinvoke $r12.<java.lang.Boolean: boolean booleanValue()>();

        virtualinvoke $r13.<android.filterfw.core.FilterGraph: void setDiscardUnconnectedOutputs(boolean)>($z3);

     label6:
        goto label1;

     label7:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown @setting \'");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r23);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'!");

        $r10 = new android.filterfw.io.GraphIOException;

        $r11 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<android.filterfw.io.GraphIOException: void <init>(java.lang.String)>($r11);

        throw $r10;

     label8:
        return;
    }

    private void bindExternal(java.lang.String) throws android.filterfw.io.GraphIOException
    {
        android.filterfw.io.TextGraphReader r0;
        java.lang.String r1, $r8;
        android.filterfw.core.KeyValueMap $r2, $r9, $r10;
        boolean $z0;
        java.lang.StringBuilder $r3;
        android.filterfw.io.GraphIOException $r7;
        java.lang.Object r12;

        r0 := @this: android.filterfw.io.TextGraphReader;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.filterfw.io.TextGraphReader: android.filterfw.core.KeyValueMap mReferences>;

        $z0 = virtualinvoke $r2.<android.filterfw.core.KeyValueMap: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r9 = r0.<android.filterfw.io.TextGraphReader: android.filterfw.core.KeyValueMap mReferences>;

        r12 = virtualinvoke $r9.<android.filterfw.core.KeyValueMap: java.lang.Object get(java.lang.Object)>(r1);

        $r10 = r0.<android.filterfw.io.TextGraphReader: android.filterfw.core.KeyValueMap mBoundReferences>;

        virtualinvoke $r10.<android.filterfw.core.KeyValueMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r12);

        return;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown external variable \'");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'! You must add a reference to this external in the host program using addReference(...)!");

        $r7 = new android.filterfw.io.GraphIOException;

        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<android.filterfw.io.GraphIOException: void <init>(java.lang.String)>($r8);

        throw $r7;
    }

    private void checkReferences() throws android.filterfw.io.GraphIOException
    {
        android.filterfw.io.TextGraphReader r0;
        java.lang.String r1, $r11;
        android.filterfw.core.KeyValueMap $r2, $r5;
        java.util.Set $r3;
        boolean $z0, $z1;
        java.lang.Object $r4;
        java.lang.StringBuilder $r6;
        android.filterfw.io.GraphIOException $r10;
        java.util.Iterator r12;

        r0 := @this: android.filterfw.io.TextGraphReader;

        $r2 = r0.<android.filterfw.io.TextGraphReader: android.filterfw.core.KeyValueMap mReferences>;

        $r3 = virtualinvoke $r2.<android.filterfw.core.KeyValueMap: java.util.Set keySet()>();

        r12 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>();

        r1 = (java.lang.String) $r4;

        $r5 = r0.<android.filterfw.io.TextGraphReader: android.filterfw.core.KeyValueMap mBoundReferences>;

        $z1 = virtualinvoke $r5.<android.filterfw.core.KeyValueMap: boolean containsKey(java.lang.Object)>(r1);

        if $z1 == 0 goto label2;

        goto label1;

     label2:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Host program specifies reference to \'");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', which is not declared @external in graph file!");

        $r10 = new android.filterfw.io.GraphIOException;

        $r11 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<android.filterfw.io.GraphIOException: void <init>(java.lang.String)>($r11);

        throw $r10;

     label3:
        return;
    }

    private void executeCommands() throws android.filterfw.io.GraphIOException
    {
        android.filterfw.io.TextGraphReader r0;
        java.util.Iterator r1;
        java.util.ArrayList $r2;
        boolean $z0;
        java.lang.Object $r3;
        android.filterfw.io.TextGraphReader$Command $r4;

        r0 := @this: android.filterfw.io.TextGraphReader;

        $r2 = r0.<android.filterfw.io.TextGraphReader: java.util.ArrayList mCommands>;

        r1 = virtualinvoke $r2.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (android.filterfw.io.TextGraphReader$Command) $r3;

        interfaceinvoke $r4.<android.filterfw.io.TextGraphReader$Command: void execute(android.filterfw.io.TextGraphReader)>(r0);

        goto label1;

     label2:
        return;
    }

    private void expectSettingClass(java.lang.String, java.lang.Object, java.lang.Class) throws android.filterfw.io.GraphIOException
    {
        android.filterfw.io.TextGraphReader r0;
        java.lang.String r1, $r10, $r14, $r18;
        java.lang.Object r2;
        java.lang.Class r3, $r5, $r13;
        java.lang.StringBuilder $r6;
        android.filterfw.io.GraphIOException $r17;

        r0 := @this: android.filterfw.io.TextGraphReader;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Class;

        $r5 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        if $r5 != r3 goto label1;

        return;

     label1:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting \'");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' must have a value of type ");

        $r10 = virtualinvoke r3.<java.lang.Class: java.lang.String getSimpleName()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", but found a value of type ");

        $r13 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $r14 = virtualinvoke $r13.<java.lang.Class: java.lang.String getSimpleName()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");

        $r17 = new android.filterfw.io.GraphIOException;

        $r18 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<android.filterfw.io.GraphIOException: void <init>(java.lang.String)>($r18);

        throw $r17;
    }

    private void parseString(java.lang.String) throws android.filterfw.io.GraphIOException
    {
        android.filterfw.io.TextGraphReader r0;
        java.util.regex.Pattern r1, r2, r3, r4, r5, r6, r7, r9, r10, r38;
        java.lang.String r12, $r17, $r36, r37, r39, r40, r41, r42, r45, r46, r47, r50, r51, r52;
        android.filterfw.io.PatternScanner $r13;
        boolean $z0, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        android.filterfw.io.GraphIOException $r14, $r35;
        android.filterfw.core.KeyValueMap $r16, $r18, r43, r44, r48;
        int $i0, $i1, $i2, $i3;
        android.filterfw.io.TextGraphReader$ConnectCommand $r19;
        java.util.ArrayList $r20, $r24, $r28, $r30, r49;
        android.filterfw.io.TextGraphReader$InitFilterCommand $r23;
        android.filterfw.io.TextGraphReader$AllocateFilterCommand $r26;
        android.filterfw.io.TextGraphReader$AddLibraryCommand $r27;
        android.filterfw.io.TextGraphReader$ImportPackageCommand $r29;
        java.lang.StringBuilder $r31;
        byte b4;

        r0 := @this: android.filterfw.io.TextGraphReader;

        r37 := @parameter0: java.lang.String;

        r1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("@[a-zA-Z]+");

        r2 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("\\}");

        r3 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("\\{");

        r38 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("(\\s+|//[^\\n]*\\n)+");

        r4 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("[a-zA-Z\\.]+");

        r5 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("[a-zA-Z\\./:]+");

        r6 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("\\[[a-zA-Z0-9\\-_]+\\]");

        r7 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("=>");

        r9 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(";");

        r10 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("[a-zA-Z0-9\\-_]+");

        b4 = 0;

        $r13 = new android.filterfw.io.PatternScanner;

        specialinvoke $r13.<android.filterfw.io.PatternScanner: void <init>(java.lang.String,java.util.regex.Pattern)>(r37, r38);

        r39 = null;

        r40 = null;

        r41 = null;

        r42 = null;

     label01:
        $z0 = virtualinvoke $r13.<android.filterfw.io.PatternScanner: boolean atEnd()>();

        if $z0 != 0 goto label28;

        tableswitch(b4)
        {
            case 0: goto label19;
            case 1: goto label18;
            case 2: goto label17;
            case 3: goto label16;
            case 4: goto label15;
            case 5: goto label14;
            case 6: goto label13;
            case 7: goto label12;
            case 8: goto label11;
            case 9: goto label10;
            case 10: goto label09;
            case 11: goto label08;
            case 12: goto label07;
            case 13: goto label06;
            case 14: goto label05;
            case 15: goto label04;
            case 16: goto label03;
            default: goto label02;
        };

     label02:
        goto label27;

     label03:
        virtualinvoke $r13.<android.filterfw.io.PatternScanner: java.lang.String eat(java.util.regex.Pattern,java.lang.String)>(r9, ";");

        b4 = 0;

        goto label27;

     label04:
        r43 = specialinvoke r0.<android.filterfw.io.TextGraphReader: android.filterfw.core.KeyValueMap readKeyValueAssignments(android.filterfw.io.PatternScanner,java.util.regex.Pattern)>($r13, r9);

        $r16 = r0.<android.filterfw.io.TextGraphReader: android.filterfw.core.KeyValueMap mSettings>;

        virtualinvoke $r16.<android.filterfw.core.KeyValueMap: void putAll(java.util.Map)>(r43);

        b4 = 16;

        goto label27;

     label05:
        $r17 = virtualinvoke $r13.<android.filterfw.io.PatternScanner: java.lang.String eat(java.util.regex.Pattern,java.lang.String)>(r10, "<external-identifier>");

        specialinvoke r0.<android.filterfw.io.TextGraphReader: void bindExternal(java.lang.String)>($r17);

        b4 = 16;

        goto label27;

     label06:
        r44 = specialinvoke r0.<android.filterfw.io.TextGraphReader: android.filterfw.core.KeyValueMap readKeyValueAssignments(android.filterfw.io.PatternScanner,java.util.regex.Pattern)>($r13, r9);

        $r18 = r0.<android.filterfw.io.TextGraphReader: android.filterfw.core.KeyValueMap mBoundReferences>;

        virtualinvoke $r18.<android.filterfw.core.KeyValueMap: void putAll(java.util.Map)>(r44);

        b4 = 16;

        goto label27;

     label07:
        r45 = virtualinvoke $r13.<android.filterfw.io.PatternScanner: java.lang.String eat(java.util.regex.Pattern,java.lang.String)>(r6, "[<target-port-name>]");

        $i0 = virtualinvoke r45.<java.lang.String: int length()>();

        $i1 = $i0 - 1;

        r46 = virtualinvoke r45.<java.lang.String: java.lang.String substring(int,int)>(1, $i1);

        $r20 = r0.<android.filterfw.io.TextGraphReader: java.util.ArrayList mCommands>;

        $r19 = new android.filterfw.io.TextGraphReader$ConnectCommand;

        specialinvoke $r19.<android.filterfw.io.TextGraphReader$ConnectCommand: void <init>(android.filterfw.io.TextGraphReader,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r0, r39, r40, r41, r46);

        virtualinvoke $r20.<java.util.ArrayList: boolean add(java.lang.Object)>($r19);

        b4 = 16;

        goto label27;

     label08:
        r41 = virtualinvoke $r13.<android.filterfw.io.PatternScanner: java.lang.String eat(java.util.regex.Pattern,java.lang.String)>(r10, "<target-filter-name>");

        b4 = 12;

        goto label27;

     label09:
        virtualinvoke $r13.<android.filterfw.io.PatternScanner: java.lang.String eat(java.util.regex.Pattern,java.lang.String)>(r7, "=>");

        b4 = 11;

        goto label27;

     label10:
        r47 = virtualinvoke $r13.<android.filterfw.io.PatternScanner: java.lang.String eat(java.util.regex.Pattern,java.lang.String)>(r6, "[<source-port-name>]");

        $i2 = virtualinvoke r47.<java.lang.String: int length()>();

        $i3 = $i2 - 1;

        r40 = virtualinvoke r47.<java.lang.String: java.lang.String substring(int,int)>(1, $i3);

        b4 = 10;

        goto label27;

     label11:
        r39 = virtualinvoke $r13.<android.filterfw.io.PatternScanner: java.lang.String eat(java.util.regex.Pattern,java.lang.String)>(r10, "<source-filter-name>");

        b4 = 9;

        goto label27;

     label12:
        virtualinvoke $r13.<android.filterfw.io.PatternScanner: java.lang.String eat(java.util.regex.Pattern,java.lang.String)>(r2, "}");

        b4 = 0;

        goto label27;

     label13:
        r48 = specialinvoke r0.<android.filterfw.io.TextGraphReader: android.filterfw.core.KeyValueMap readKeyValueAssignments(android.filterfw.io.PatternScanner,java.util.regex.Pattern)>($r13, r2);

        $r24 = r0.<android.filterfw.io.TextGraphReader: java.util.ArrayList mCommands>;

        $r23 = new android.filterfw.io.TextGraphReader$InitFilterCommand;

        specialinvoke $r23.<android.filterfw.io.TextGraphReader$InitFilterCommand: void <init>(android.filterfw.io.TextGraphReader,android.filterfw.core.KeyValueMap)>(r0, r48);

        virtualinvoke $r24.<java.util.ArrayList: boolean add(java.lang.Object)>($r23);

        b4 = 7;

        goto label27;

     label14:
        virtualinvoke $r13.<android.filterfw.io.PatternScanner: java.lang.String eat(java.util.regex.Pattern,java.lang.String)>(r3, "{");

        b4 = 6;

        goto label27;

     label15:
        r12 = virtualinvoke $r13.<android.filterfw.io.PatternScanner: java.lang.String eat(java.util.regex.Pattern,java.lang.String)>(r10, "<filter-name>");

        r49 = r0.<android.filterfw.io.TextGraphReader: java.util.ArrayList mCommands>;

        $r26 = new android.filterfw.io.TextGraphReader$AllocateFilterCommand;

        specialinvoke $r26.<android.filterfw.io.TextGraphReader$AllocateFilterCommand: void <init>(android.filterfw.io.TextGraphReader,java.lang.String,java.lang.String)>(r0, r42, r12);

        virtualinvoke r49.<java.util.ArrayList: boolean add(java.lang.Object)>($r26);

        b4 = 5;

        goto label27;

     label16:
        r42 = virtualinvoke $r13.<android.filterfw.io.PatternScanner: java.lang.String eat(java.util.regex.Pattern,java.lang.String)>(r10, "<class-name>");

        b4 = 4;

        goto label27;

     label17:
        r50 = virtualinvoke $r13.<android.filterfw.io.PatternScanner: java.lang.String eat(java.util.regex.Pattern,java.lang.String)>(r5, "<library-name>");

        $r28 = r0.<android.filterfw.io.TextGraphReader: java.util.ArrayList mCommands>;

        $r27 = new android.filterfw.io.TextGraphReader$AddLibraryCommand;

        specialinvoke $r27.<android.filterfw.io.TextGraphReader$AddLibraryCommand: void <init>(android.filterfw.io.TextGraphReader,java.lang.String)>(r0, r50);

        virtualinvoke $r28.<java.util.ArrayList: boolean add(java.lang.Object)>($r27);

        b4 = 16;

        goto label27;

     label18:
        r51 = virtualinvoke $r13.<android.filterfw.io.PatternScanner: java.lang.String eat(java.util.regex.Pattern,java.lang.String)>(r4, "<package-name>");

        $r30 = r0.<android.filterfw.io.TextGraphReader: java.util.ArrayList mCommands>;

        $r29 = new android.filterfw.io.TextGraphReader$ImportPackageCommand;

        specialinvoke $r29.<android.filterfw.io.TextGraphReader$ImportPackageCommand: void <init>(android.filterfw.io.TextGraphReader,java.lang.String)>(r0, r51);

        virtualinvoke $r30.<java.util.ArrayList: boolean add(java.lang.Object)>($r29);

        b4 = 16;

        goto label27;

     label19:
        r52 = virtualinvoke $r13.<android.filterfw.io.PatternScanner: java.lang.String eat(java.util.regex.Pattern,java.lang.String)>(r1, "<command>");

        $z6 = virtualinvoke r52.<java.lang.String: boolean equals(java.lang.Object)>("@import");

        if $z6 == 0 goto label20;

        b4 = 1;

        goto label27;

     label20:
        $z7 = virtualinvoke r52.<java.lang.String: boolean equals(java.lang.Object)>("@library");

        if $z7 == 0 goto label21;

        b4 = 2;

        goto label27;

     label21:
        $z8 = virtualinvoke r52.<java.lang.String: boolean equals(java.lang.Object)>("@filter");

        if $z8 == 0 goto label22;

        b4 = 3;

        goto label27;

     label22:
        $z9 = virtualinvoke r52.<java.lang.String: boolean equals(java.lang.Object)>("@connect");

        if $z9 == 0 goto label23;

        b4 = 8;

        goto label27;

     label23:
        $z10 = virtualinvoke r52.<java.lang.String: boolean equals(java.lang.Object)>("@set");

        if $z10 == 0 goto label24;

        b4 = 13;

        goto label27;

     label24:
        $z11 = virtualinvoke r52.<java.lang.String: boolean equals(java.lang.Object)>("@external");

        if $z11 == 0 goto label25;

        b4 = 14;

        goto label27;

     label25:
        $z12 = virtualinvoke r52.<java.lang.String: boolean equals(java.lang.Object)>("@setting");

        if $z12 == 0 goto label26;

        b4 = 15;

        goto label27;

     label26:
        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown command \'");

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r52);

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'!");

        $r35 = new android.filterfw.io.GraphIOException;

        $r36 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r35.<android.filterfw.io.GraphIOException: void <init>(java.lang.String)>($r36);

        throw $r35;

     label27:
        goto label01;

     label28:
        if b4 == 16 goto label30;

        if b4 != 0 goto label29;

        goto label30;

     label29:
        $r14 = new android.filterfw.io.GraphIOException;

        specialinvoke $r14.<android.filterfw.io.GraphIOException: void <init>(java.lang.String)>("Unexpected end of input!");

        throw $r14;

     label30:
        return;
    }

    private android.filterfw.core.KeyValueMap readKeyValueAssignments(android.filterfw.io.PatternScanner, java.util.regex.Pattern) throws android.filterfw.io.GraphIOException
    {
        android.filterfw.io.TextGraphReader r0;
        java.util.regex.Pattern r1, r3, r4, r5, r6, r7, r8, r9, r40;
        java.lang.String r12, $r19, $r22, $r34, $r36, r41, r42, r43, r47, r48, r49;
        android.filterfw.core.KeyValueMap $r13, r44;
        boolean $z1, $z2, $z3;
        java.lang.StringBuilder $r14, $r29;
        int $i2, $i3, $i4, $i5, $i6;
        android.filterfw.io.GraphIOException $r18, $r21, $r33;
        java.lang.Integer $r23;
        float $f0;
        java.lang.Float $r25;
        java.lang.Boolean $r27;
        android.filterfw.io.PatternScanner r39;
        byte b7;
        java.lang.Object r45;

        r0 := @this: android.filterfw.io.TextGraphReader;

        r39 := @parameter0: android.filterfw.io.PatternScanner;

        r40 := @parameter1: java.util.regex.Pattern;

        r1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("=");

        r3 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(";");

        r4 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("[a-zA-Z]+[a-zA-Z0-9]*");

        r5 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("\'[^\']*\'|\\\"[^\\\"]*\\\"");

        r6 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("[0-9]+");

        r7 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("[0-9]*\\.[0-9]+f?");

        r8 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("\\$[a-zA-Z]+[a-zA-Z0-9]");

        r9 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("true|false");

        b7 = 0;

        $r13 = new android.filterfw.core.KeyValueMap;

        specialinvoke $r13.<android.filterfw.core.KeyValueMap: void <init>()>();

        r41 = null;

     label01:
        $z1 = virtualinvoke r39.<android.filterfw.io.PatternScanner: boolean atEnd()>();

        if $z1 != 0 goto label18;

        if r40 == null goto label03;

        $z3 = virtualinvoke r39.<android.filterfw.io.PatternScanner: boolean peek(java.util.regex.Pattern)>(r40);

        if $z3 != 0 goto label02;

        goto label03;

     label02:
        goto label18;

     label03:
        if b7 == 0 goto label16;

        if b7 == 1 goto label15;

        if b7 == 2 goto label05;

        if b7 == 3 goto label04;

        goto label17;

     label04:
        virtualinvoke r39.<android.filterfw.io.PatternScanner: java.lang.String eat(java.util.regex.Pattern,java.lang.String)>(r3, ";");

        b7 = 0;

        goto label17;

     label05:
        r42 = virtualinvoke r39.<android.filterfw.io.PatternScanner: java.lang.String tryEat(java.util.regex.Pattern)>(r5);

        if r42 == null goto label06;

        $i5 = virtualinvoke r42.<java.lang.String: int length()>();

        $i6 = $i5 - 1;

        $r36 = virtualinvoke r42.<java.lang.String: java.lang.String substring(int,int)>(1, $i6);

        virtualinvoke $r13.<android.filterfw.core.KeyValueMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r41, $r36);

        goto label13;

     label06:
        r43 = virtualinvoke r39.<android.filterfw.io.PatternScanner: java.lang.String tryEat(java.util.regex.Pattern)>(r8);

        if r43 == null goto label10;

        $i4 = virtualinvoke r43.<java.lang.String: int length()>();

        r12 = virtualinvoke r43.<java.lang.String: java.lang.String substring(int,int)>(1, $i4);

        r44 = r0.<android.filterfw.io.TextGraphReader: android.filterfw.core.KeyValueMap mBoundReferences>;

        if r44 == null goto label07;

        r45 = virtualinvoke r44.<android.filterfw.core.KeyValueMap: java.lang.Object get(java.lang.Object)>(r12);

        goto label08;

     label07:
        r45 = null;

     label08:
        if r45 == null goto label09;

        virtualinvoke $r13.<android.filterfw.core.KeyValueMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r41, r45);

        goto label13;

     label09:
        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown object reference to \'");

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12);

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'!");

        $r33 = new android.filterfw.io.GraphIOException;

        $r34 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r33.<android.filterfw.io.GraphIOException: void <init>(java.lang.String)>($r34);

        throw $r33;

     label10:
        r47 = virtualinvoke r39.<android.filterfw.io.PatternScanner: java.lang.String tryEat(java.util.regex.Pattern)>(r9);

        if r47 == null goto label11;

        $z2 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>(r47);

        $r27 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2);

        virtualinvoke $r13.<android.filterfw.core.KeyValueMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r41, $r27);

        goto label13;

     label11:
        r48 = virtualinvoke r39.<android.filterfw.io.PatternScanner: java.lang.String tryEat(java.util.regex.Pattern)>(r7);

        if r48 == null goto label12;

        $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>(r48);

        $r25 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        virtualinvoke $r13.<android.filterfw.core.KeyValueMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r41, $r25);

        goto label13;

     label12:
        r49 = virtualinvoke r39.<android.filterfw.io.PatternScanner: java.lang.String tryEat(java.util.regex.Pattern)>(r6);

        if r49 == null goto label14;

        $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r49);

        $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        virtualinvoke $r13.<android.filterfw.core.KeyValueMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r41, $r23);

     label13:
        b7 = 3;

        goto label17;

     label14:
        $r21 = new android.filterfw.io.GraphIOException;

        $r22 = virtualinvoke r39.<android.filterfw.io.PatternScanner: java.lang.String unexpectedTokenMessage(java.lang.String)>("<value>");

        specialinvoke $r21.<android.filterfw.io.GraphIOException: void <init>(java.lang.String)>($r22);

        throw $r21;

     label15:
        virtualinvoke r39.<android.filterfw.io.PatternScanner: java.lang.String eat(java.util.regex.Pattern,java.lang.String)>(r1, "=");

        b7 = 2;

        goto label17;

     label16:
        r41 = virtualinvoke r39.<android.filterfw.io.PatternScanner: java.lang.String eat(java.util.regex.Pattern,java.lang.String)>(r4, "<identifier>");

        b7 = 1;

     label17:
        goto label01;

     label18:
        if b7 == 0 goto label20;

        if b7 != 3 goto label19;

        goto label20;

     label19:
        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected end of assignments on line ");

        $i2 = virtualinvoke r39.<android.filterfw.io.PatternScanner: int lineNo()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");

        $r18 = new android.filterfw.io.GraphIOException;

        $r19 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<android.filterfw.io.GraphIOException: void <init>(java.lang.String)>($r19);

        throw $r18;

     label20:
        return $r13;
    }

    private void reset()
    {
        android.filterfw.io.TextGraphReader r0;
        java.util.ArrayList $r1;
        android.filterfw.core.KeyValueMap $r2, $r3;
        android.filterfw.core.FilterFactory $r4;

        r0 := @this: android.filterfw.io.TextGraphReader;

        r0.<android.filterfw.io.TextGraphReader: android.filterfw.core.FilterGraph mCurrentGraph> = null;

        r0.<android.filterfw.io.TextGraphReader: android.filterfw.core.Filter mCurrentFilter> = null;

        $r1 = r0.<android.filterfw.io.TextGraphReader: java.util.ArrayList mCommands>;

        virtualinvoke $r1.<java.util.ArrayList: void clear()>();

        $r2 = new android.filterfw.core.KeyValueMap;

        specialinvoke $r2.<android.filterfw.core.KeyValueMap: void <init>()>();

        r0.<android.filterfw.io.TextGraphReader: android.filterfw.core.KeyValueMap mBoundReferences> = $r2;

        $r3 = new android.filterfw.core.KeyValueMap;

        specialinvoke $r3.<android.filterfw.core.KeyValueMap: void <init>()>();

        r0.<android.filterfw.io.TextGraphReader: android.filterfw.core.KeyValueMap mSettings> = $r3;

        $r4 = new android.filterfw.core.FilterFactory;

        specialinvoke $r4.<android.filterfw.core.FilterFactory: void <init>()>();

        r0.<android.filterfw.io.TextGraphReader: android.filterfw.core.FilterFactory mFactory> = $r4;

        return;
    }

    public android.filterfw.core.FilterGraph readGraphString(java.lang.String) throws android.filterfw.io.GraphIOException
    {
        android.filterfw.io.TextGraphReader r0;
        java.lang.String r1;
        android.filterfw.core.FilterGraph $r3;

        r0 := @this: android.filterfw.io.TextGraphReader;

        r1 := @parameter0: java.lang.String;

        $r3 = new android.filterfw.core.FilterGraph;

        specialinvoke $r3.<android.filterfw.core.FilterGraph: void <init>()>();

        specialinvoke r0.<android.filterfw.io.TextGraphReader: void reset()>();

        r0.<android.filterfw.io.TextGraphReader: android.filterfw.core.FilterGraph mCurrentGraph> = $r3;

        specialinvoke r0.<android.filterfw.io.TextGraphReader: void parseString(java.lang.String)>(r1);

        specialinvoke r0.<android.filterfw.io.TextGraphReader: void applySettings()>();

        specialinvoke r0.<android.filterfw.io.TextGraphReader: void executeCommands()>();

        specialinvoke r0.<android.filterfw.io.TextGraphReader: void reset()>();

        return $r3;
    }

    public android.filterfw.core.KeyValueMap readKeyValueAssignments(java.lang.String) throws android.filterfw.io.GraphIOException
    {
        android.filterfw.io.TextGraphReader r0;
        java.lang.String r1;
        android.filterfw.io.PatternScanner $r2;
        java.util.regex.Pattern $r3;
        android.filterfw.core.KeyValueMap $r4;

        r0 := @this: android.filterfw.io.TextGraphReader;

        r1 := @parameter0: java.lang.String;

        $r2 = new android.filterfw.io.PatternScanner;

        $r3 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("\\s+");

        specialinvoke $r2.<android.filterfw.io.PatternScanner: void <init>(java.lang.String,java.util.regex.Pattern)>(r1, $r3);

        $r4 = specialinvoke r0.<android.filterfw.io.TextGraphReader: android.filterfw.core.KeyValueMap readKeyValueAssignments(android.filterfw.io.PatternScanner,java.util.regex.Pattern)>($r2, null);

        return $r4;
    }
}
