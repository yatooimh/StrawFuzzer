public class android.filterpacks.imageproc.DrawOverlayFilter extends android.filterfw.core.Filter
{
    private android.filterfw.core.ShaderProgram mProgram;

    public void <init>(java.lang.String)
    {
        android.filterpacks.imageproc.DrawOverlayFilter r0;
        java.lang.String r1;

        r0 := @this: android.filterpacks.imageproc.DrawOverlayFilter;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<android.filterfw.core.Filter: void <init>(java.lang.String)>(r1);

        return;
    }

    public android.filterfw.core.FrameFormat getOutputFormat(java.lang.String, android.filterfw.core.FrameFormat)
    {
        android.filterpacks.imageproc.DrawOverlayFilter r0;
        java.lang.String r1;
        android.filterfw.core.FrameFormat r2;

        r0 := @this: android.filterpacks.imageproc.DrawOverlayFilter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.filterfw.core.FrameFormat;

        return r2;
    }

    public void prepare(android.filterfw.core.FilterContext)
    {
        android.filterpacks.imageproc.DrawOverlayFilter r0;
        android.filterfw.core.FilterContext r1;
        android.filterfw.core.ShaderProgram $r2;

        r0 := @this: android.filterpacks.imageproc.DrawOverlayFilter;

        r1 := @parameter0: android.filterfw.core.FilterContext;

        $r2 = staticinvoke <android.filterfw.core.ShaderProgram: android.filterfw.core.ShaderProgram createIdentity(android.filterfw.core.FilterContext)>(r1);

        r0.<android.filterpacks.imageproc.DrawOverlayFilter: android.filterfw.core.ShaderProgram mProgram> = $r2;

        return;
    }

    public void process(android.filterfw.core.FilterContext)
    {
        android.filterpacks.imageproc.DrawOverlayFilter r0;
        android.filterfw.core.Frame r1, r2, $r4, r14;
        android.filterfw.geometry.Quad r3, $r6, $r7;
        java.lang.Object $r5;
        android.filterfw.core.ShaderProgram $r8, $r11;
        android.filterfw.core.FrameManager $r9;
        android.filterfw.core.FrameFormat $r10;
        android.filterfw.core.FilterContext r13;

        r0 := @this: android.filterpacks.imageproc.DrawOverlayFilter;

        r13 := @parameter0: android.filterfw.core.FilterContext;

        r1 = virtualinvoke r0.<android.filterpacks.imageproc.DrawOverlayFilter: android.filterfw.core.Frame pullInput(java.lang.String)>("source");

        r2 = virtualinvoke r0.<android.filterpacks.imageproc.DrawOverlayFilter: android.filterfw.core.Frame pullInput(java.lang.String)>("overlay");

        $r4 = virtualinvoke r0.<android.filterpacks.imageproc.DrawOverlayFilter: android.filterfw.core.Frame pullInput(java.lang.String)>("box");

        $r5 = virtualinvoke $r4.<android.filterfw.core.Frame: java.lang.Object getObjectValue()>();

        $r6 = (android.filterfw.geometry.Quad) $r5;

        $r7 = virtualinvoke $r6.<android.filterfw.geometry.Quad: android.filterfw.geometry.Quad translated(float,float)>(1.0F, 1.0F);

        r3 = virtualinvoke $r7.<android.filterfw.geometry.Quad: android.filterfw.geometry.Quad scaled(float)>(2.0F);

        $r8 = r0.<android.filterpacks.imageproc.DrawOverlayFilter: android.filterfw.core.ShaderProgram mProgram>;

        virtualinvoke $r8.<android.filterfw.core.ShaderProgram: void setTargetRegion(android.filterfw.geometry.Quad)>(r3);

        $r9 = virtualinvoke r13.<android.filterfw.core.FilterContext: android.filterfw.core.FrameManager getFrameManager()>();

        $r10 = virtualinvoke r1.<android.filterfw.core.Frame: android.filterfw.core.FrameFormat getFormat()>();

        r14 = virtualinvoke $r9.<android.filterfw.core.FrameManager: android.filterfw.core.Frame newFrame(android.filterfw.core.FrameFormat)>($r10);

        virtualinvoke r14.<android.filterfw.core.Frame: void setDataFromFrame(android.filterfw.core.Frame)>(r1);

        $r11 = r0.<android.filterpacks.imageproc.DrawOverlayFilter: android.filterfw.core.ShaderProgram mProgram>;

        virtualinvoke $r11.<android.filterfw.core.ShaderProgram: void process(android.filterfw.core.Frame,android.filterfw.core.Frame)>(r2, r14);

        virtualinvoke r0.<android.filterpacks.imageproc.DrawOverlayFilter: void pushOutput(java.lang.String,android.filterfw.core.Frame)>("image", r14);

        virtualinvoke r14.<android.filterfw.core.Frame: android.filterfw.core.Frame release()>();

        return;
    }

    public void setupPorts()
    {
        android.filterpacks.imageproc.DrawOverlayFilter r0;
        android.filterfw.core.MutableFrameFormat r1, $r2;

        r0 := @this: android.filterpacks.imageproc.DrawOverlayFilter;

        r1 = staticinvoke <android.filterfw.format.ImageFormat: android.filterfw.core.MutableFrameFormat create(int,int)>(3, 3);

        virtualinvoke r0.<android.filterpacks.imageproc.DrawOverlayFilter: void addMaskedInputPort(java.lang.String,android.filterfw.core.FrameFormat)>("source", r1);

        virtualinvoke r0.<android.filterpacks.imageproc.DrawOverlayFilter: void addMaskedInputPort(java.lang.String,android.filterfw.core.FrameFormat)>("overlay", r1);

        $r2 = staticinvoke <android.filterfw.format.ObjectFormat: android.filterfw.core.MutableFrameFormat fromClass(java.lang.Class,int)>(class "Landroid/filterfw/geometry/Quad;", 1);

        virtualinvoke r0.<android.filterpacks.imageproc.DrawOverlayFilter: void addMaskedInputPort(java.lang.String,android.filterfw.core.FrameFormat)>("box", $r2);

        virtualinvoke r0.<android.filterpacks.imageproc.DrawOverlayFilter: void addOutputBasedOnInput(java.lang.String,java.lang.String)>("image", "source");

        return;
    }
}
