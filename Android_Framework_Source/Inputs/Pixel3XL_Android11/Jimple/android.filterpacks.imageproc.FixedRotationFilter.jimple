public class android.filterpacks.imageproc.FixedRotationFilter extends android.filterfw.core.Filter
{
    private android.filterfw.core.ShaderProgram mProgram;
    private int mRotation;

    public void <init>(java.lang.String)
    {
        android.filterpacks.imageproc.FixedRotationFilter r0;
        java.lang.String r1;

        r0 := @this: android.filterpacks.imageproc.FixedRotationFilter;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<android.filterfw.core.Filter: void <init>(java.lang.String)>(r1);

        r0.<android.filterpacks.imageproc.FixedRotationFilter: int mRotation> = 0;

        r0.<android.filterpacks.imageproc.FixedRotationFilter: android.filterfw.core.ShaderProgram mProgram> = null;

        return;
    }

    public android.filterfw.core.FrameFormat getOutputFormat(java.lang.String, android.filterfw.core.FrameFormat)
    {
        android.filterpacks.imageproc.FixedRotationFilter r0;
        java.lang.String r1;
        android.filterfw.core.FrameFormat r2;

        r0 := @this: android.filterpacks.imageproc.FixedRotationFilter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.filterfw.core.FrameFormat;

        return r2;
    }

    public void process(android.filterfw.core.FilterContext)
    {
        android.filterpacks.imageproc.FixedRotationFilter r0;
        android.filterfw.core.Frame r1, r22;
        android.filterfw.core.MutableFrameFormat r2;
        int i0, i1, i2, $i3, $i4, $i5;
        android.filterfw.core.ShaderProgram $r6, $r16, $r23, $r24;
        android.filterfw.geometry.Point $r7, $r8, $r9, $r10;
        float $f0, $f1;
        android.filterfw.geometry.Quad $r11, $r13, $r14, $r15, r20;
        android.filterfw.core.FilterContext r17;
        android.filterfw.core.FrameFormat r18;
        android.filterfw.core.FrameManager $r21;

        r0 := @this: android.filterpacks.imageproc.FixedRotationFilter;

        r17 := @parameter0: android.filterfw.core.FilterContext;

        r1 = virtualinvoke r0.<android.filterpacks.imageproc.FixedRotationFilter: android.filterfw.core.Frame pullInput(java.lang.String)>("image");

        $i3 = r0.<android.filterpacks.imageproc.FixedRotationFilter: int mRotation>;

        if $i3 != 0 goto label1;

        virtualinvoke r0.<android.filterpacks.imageproc.FixedRotationFilter: void pushOutput(java.lang.String,android.filterfw.core.Frame)>("image", r1);

        return;

     label1:
        r18 = virtualinvoke r1.<android.filterfw.core.Frame: android.filterfw.core.FrameFormat getFormat()>();

        $r6 = r0.<android.filterpacks.imageproc.FixedRotationFilter: android.filterfw.core.ShaderProgram mProgram>;

        if $r6 != null goto label2;

        $r16 = staticinvoke <android.filterfw.core.ShaderProgram: android.filterfw.core.ShaderProgram createIdentity(android.filterfw.core.FilterContext)>(r17);

        r0.<android.filterpacks.imageproc.FixedRotationFilter: android.filterfw.core.ShaderProgram mProgram> = $r16;

     label2:
        r2 = virtualinvoke r18.<android.filterfw.core.FrameFormat: android.filterfw.core.MutableFrameFormat mutableCopy()>();

        i0 = virtualinvoke r18.<android.filterfw.core.FrameFormat: int getWidth()>();

        i1 = virtualinvoke r18.<android.filterfw.core.FrameFormat: int getHeight()>();

        $r7 = new android.filterfw.geometry.Point;

        specialinvoke $r7.<android.filterfw.geometry.Point: void <init>(float,float)>(0.0F, 0.0F);

        $r8 = new android.filterfw.geometry.Point;

        specialinvoke $r8.<android.filterfw.geometry.Point: void <init>(float,float)>(1.0F, 0.0F);

        $r9 = new android.filterfw.geometry.Point;

        specialinvoke $r9.<android.filterfw.geometry.Point: void <init>(float,float)>(0.0F, 1.0F);

        $r10 = new android.filterfw.geometry.Point;

        specialinvoke $r10.<android.filterfw.geometry.Point: void <init>(float,float)>(1.0F, 1.0F);

        $i4 = r0.<android.filterpacks.imageproc.FixedRotationFilter: int mRotation>;

        $f0 = (float) $i4;

        $f1 = $f0 / 90.0F;

        $i5 = staticinvoke <java.lang.Math: int round(float)>($f1);

        i2 = $i5 % 4;

        if i2 == 1 goto label5;

        if i2 == 2 goto label4;

        if i2 == 3 goto label3;

        $r15 = new android.filterfw.geometry.Quad;

        specialinvoke $r15.<android.filterfw.geometry.Quad: void <init>(android.filterfw.geometry.Point,android.filterfw.geometry.Point,android.filterfw.geometry.Point,android.filterfw.geometry.Point)>($r7, $r8, $r9, $r10);

        r20 = $r15;

        goto label6;

     label3:
        $r14 = new android.filterfw.geometry.Quad;

        specialinvoke $r14.<android.filterfw.geometry.Quad: void <init>(android.filterfw.geometry.Point,android.filterfw.geometry.Point,android.filterfw.geometry.Point,android.filterfw.geometry.Point)>($r8, $r10, $r7, $r9);

        r20 = $r14;

        virtualinvoke r2.<android.filterfw.core.MutableFrameFormat: void setDimensions(int,int)>(i1, i0);

        goto label6;

     label4:
        $r13 = new android.filterfw.geometry.Quad;

        specialinvoke $r13.<android.filterfw.geometry.Quad: void <init>(android.filterfw.geometry.Point,android.filterfw.geometry.Point,android.filterfw.geometry.Point,android.filterfw.geometry.Point)>($r10, $r9, $r8, $r7);

        r20 = $r13;

        goto label6;

     label5:
        $r11 = new android.filterfw.geometry.Quad;

        specialinvoke $r11.<android.filterfw.geometry.Quad: void <init>(android.filterfw.geometry.Point,android.filterfw.geometry.Point,android.filterfw.geometry.Point,android.filterfw.geometry.Point)>($r9, $r7, $r10, $r8);

        r20 = $r11;

        virtualinvoke r2.<android.filterfw.core.MutableFrameFormat: void setDimensions(int,int)>(i1, i0);

     label6:
        $r21 = virtualinvoke r17.<android.filterfw.core.FilterContext: android.filterfw.core.FrameManager getFrameManager()>();

        r22 = virtualinvoke $r21.<android.filterfw.core.FrameManager: android.filterfw.core.Frame newFrame(android.filterfw.core.FrameFormat)>(r2);

        $r23 = r0.<android.filterpacks.imageproc.FixedRotationFilter: android.filterfw.core.ShaderProgram mProgram>;

        virtualinvoke $r23.<android.filterfw.core.ShaderProgram: void setSourceRegion(android.filterfw.geometry.Quad)>(r20);

        $r24 = r0.<android.filterpacks.imageproc.FixedRotationFilter: android.filterfw.core.ShaderProgram mProgram>;

        virtualinvoke $r24.<android.filterfw.core.ShaderProgram: void process(android.filterfw.core.Frame,android.filterfw.core.Frame)>(r1, r22);

        virtualinvoke r0.<android.filterpacks.imageproc.FixedRotationFilter: void pushOutput(java.lang.String,android.filterfw.core.Frame)>("image", r22);

        virtualinvoke r22.<android.filterfw.core.Frame: android.filterfw.core.Frame release()>();

        return;
    }

    public void setupPorts()
    {
        android.filterpacks.imageproc.FixedRotationFilter r0;
        android.filterfw.core.MutableFrameFormat $r1;

        r0 := @this: android.filterpacks.imageproc.FixedRotationFilter;

        $r1 = staticinvoke <android.filterfw.format.ImageFormat: android.filterfw.core.MutableFrameFormat create(int,int)>(3, 3);

        virtualinvoke r0.<android.filterpacks.imageproc.FixedRotationFilter: void addMaskedInputPort(java.lang.String,android.filterfw.core.FrameFormat)>("image", $r1);

        virtualinvoke r0.<android.filterpacks.imageproc.FixedRotationFilter: void addOutputBasedOnInput(java.lang.String,java.lang.String)>("image", "image");

        return;
    }
}
