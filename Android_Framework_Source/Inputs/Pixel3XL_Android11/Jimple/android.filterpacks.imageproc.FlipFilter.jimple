public class android.filterpacks.imageproc.FlipFilter extends android.filterfw.core.Filter
{
    private boolean mHorizontal;
    private android.filterfw.core.Program mProgram;
    private int mTarget;
    private int mTileSize;
    private boolean mVertical;

    public void <init>(java.lang.String)
    {
        android.filterpacks.imageproc.FlipFilter r0;
        java.lang.String r1;

        r0 := @this: android.filterpacks.imageproc.FlipFilter;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<android.filterfw.core.Filter: void <init>(java.lang.String)>(r1);

        r0.<android.filterpacks.imageproc.FlipFilter: boolean mVertical> = 0;

        r0.<android.filterpacks.imageproc.FlipFilter: boolean mHorizontal> = 0;

        r0.<android.filterpacks.imageproc.FlipFilter: int mTileSize> = 640;

        r0.<android.filterpacks.imageproc.FlipFilter: int mTarget> = 0;

        return;
    }

    private void updateParameters()
    {
        android.filterpacks.imageproc.FlipFilter r0;
        boolean z0, $z1, $z2, $z3;
        android.filterfw.core.Program $r1;
        android.filterfw.core.ShaderProgram $r2;
        float f0, f1, f2, f3;

        r0 := @this: android.filterpacks.imageproc.FlipFilter;

        z0 = r0.<android.filterpacks.imageproc.FlipFilter: boolean mHorizontal>;

        f0 = 0.0F;

        f1 = 1.0F;

        if z0 == 0 goto label1;

        f2 = 1.0F;

        goto label2;

     label1:
        f2 = 0.0F;

     label2:
        $z1 = r0.<android.filterpacks.imageproc.FlipFilter: boolean mVertical>;

        if $z1 == 0 goto label3;

        f0 = 1.0F;

     label3:
        $z2 = r0.<android.filterpacks.imageproc.FlipFilter: boolean mHorizontal>;

        if $z2 == 0 goto label4;

        f3 = -1.0F;

        goto label5;

     label4:
        f3 = 1.0F;

     label5:
        $z3 = r0.<android.filterpacks.imageproc.FlipFilter: boolean mVertical>;

        if $z3 == 0 goto label6;

        f1 = -1.0F;

     label6:
        $r1 = r0.<android.filterpacks.imageproc.FlipFilter: android.filterfw.core.Program mProgram>;

        $r2 = (android.filterfw.core.ShaderProgram) $r1;

        virtualinvoke $r2.<android.filterfw.core.ShaderProgram: void setSourceRect(float,float,float,float)>(f2, f0, f3, f1);

        return;
    }

    public void fieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)
    {
        android.filterpacks.imageproc.FlipFilter r0;
        java.lang.String r1;
        android.filterfw.core.FilterContext r2;
        android.filterfw.core.Program $r3;

        r0 := @this: android.filterpacks.imageproc.FlipFilter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.filterfw.core.FilterContext;

        $r3 = r0.<android.filterpacks.imageproc.FlipFilter: android.filterfw.core.Program mProgram>;

        if $r3 == null goto label1;

        specialinvoke r0.<android.filterpacks.imageproc.FlipFilter: void updateParameters()>();

     label1:
        return;
    }

    public android.filterfw.core.FrameFormat getOutputFormat(java.lang.String, android.filterfw.core.FrameFormat)
    {
        android.filterpacks.imageproc.FlipFilter r0;
        java.lang.String r1;
        android.filterfw.core.FrameFormat r2;

        r0 := @this: android.filterpacks.imageproc.FlipFilter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.filterfw.core.FrameFormat;

        return r2;
    }

    public void initProgram(android.filterfw.core.FilterContext, int)
    {
        android.filterpacks.imageproc.FlipFilter r0;
        int i0, $i1;
        java.lang.StringBuilder $r1;
        java.lang.RuntimeException $r5;
        java.lang.String $r6;
        android.filterfw.core.FilterContext r7;
        android.filterfw.core.ShaderProgram r8;

        r0 := @this: android.filterpacks.imageproc.FlipFilter;

        r7 := @parameter0: android.filterfw.core.FilterContext;

        i0 := @parameter1: int;

        if i0 != 3 goto label1;

        r8 = staticinvoke <android.filterfw.core.ShaderProgram: android.filterfw.core.ShaderProgram createIdentity(android.filterfw.core.FilterContext)>(r7);

        $i1 = r0.<android.filterpacks.imageproc.FlipFilter: int mTileSize>;

        virtualinvoke r8.<android.filterfw.core.ShaderProgram: void setMaximumTileSize(int)>($i1);

        r0.<android.filterpacks.imageproc.FlipFilter: android.filterfw.core.Program mProgram> = r8;

        r0.<android.filterpacks.imageproc.FlipFilter: int mTarget> = i0;

        specialinvoke r0.<android.filterpacks.imageproc.FlipFilter: void updateParameters()>();

        return;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Filter Sharpen does not support frames of target ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");

        $r5 = new java.lang.RuntimeException;

        $r6 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>($r6);

        throw $r5;
    }

    public void process(android.filterfw.core.FilterContext)
    {
        android.filterpacks.imageproc.FlipFilter r0;
        android.filterfw.core.Frame r1, r7;
        android.filterfw.core.FrameFormat r2;
        android.filterfw.core.Program $r3, $r8;
        int $i0, $i1, $i2;
        android.filterfw.core.FilterContext r5;
        android.filterfw.core.FrameManager $r6;

        r0 := @this: android.filterpacks.imageproc.FlipFilter;

        r5 := @parameter0: android.filterfw.core.FilterContext;

        r1 = virtualinvoke r0.<android.filterpacks.imageproc.FlipFilter: android.filterfw.core.Frame pullInput(java.lang.String)>("image");

        r2 = virtualinvoke r1.<android.filterfw.core.Frame: android.filterfw.core.FrameFormat getFormat()>();

        $r3 = r0.<android.filterpacks.imageproc.FlipFilter: android.filterfw.core.Program mProgram>;

        if $r3 == null goto label1;

        $i1 = virtualinvoke r2.<android.filterfw.core.FrameFormat: int getTarget()>();

        $i2 = r0.<android.filterpacks.imageproc.FlipFilter: int mTarget>;

        if $i1 == $i2 goto label2;

     label1:
        $i0 = virtualinvoke r2.<android.filterfw.core.FrameFormat: int getTarget()>();

        virtualinvoke r0.<android.filterpacks.imageproc.FlipFilter: void initProgram(android.filterfw.core.FilterContext,int)>(r5, $i0);

     label2:
        $r6 = virtualinvoke r5.<android.filterfw.core.FilterContext: android.filterfw.core.FrameManager getFrameManager()>();

        r7 = virtualinvoke $r6.<android.filterfw.core.FrameManager: android.filterfw.core.Frame newFrame(android.filterfw.core.FrameFormat)>(r2);

        $r8 = r0.<android.filterpacks.imageproc.FlipFilter: android.filterfw.core.Program mProgram>;

        virtualinvoke $r8.<android.filterfw.core.Program: void process(android.filterfw.core.Frame,android.filterfw.core.Frame)>(r1, r7);

        virtualinvoke r0.<android.filterpacks.imageproc.FlipFilter: void pushOutput(java.lang.String,android.filterfw.core.Frame)>("image", r7);

        virtualinvoke r7.<android.filterfw.core.Frame: android.filterfw.core.Frame release()>();

        return;
    }

    public void setupPorts()
    {
        android.filterpacks.imageproc.FlipFilter r0;
        android.filterfw.core.MutableFrameFormat $r1;

        r0 := @this: android.filterpacks.imageproc.FlipFilter;

        $r1 = staticinvoke <android.filterfw.format.ImageFormat: android.filterfw.core.MutableFrameFormat create(int)>(3);

        virtualinvoke r0.<android.filterpacks.imageproc.FlipFilter: void addMaskedInputPort(java.lang.String,android.filterfw.core.FrameFormat)>("image", $r1);

        virtualinvoke r0.<android.filterpacks.imageproc.FlipFilter: void addOutputBasedOnInput(java.lang.String,java.lang.String)>("image", "image");

        return;
    }
}
