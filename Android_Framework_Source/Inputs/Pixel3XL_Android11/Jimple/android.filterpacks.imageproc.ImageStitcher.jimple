public class android.filterpacks.imageproc.ImageStitcher extends android.filterfw.core.Filter
{
    private int mImageHeight;
    private int mImageWidth;
    private int mInputHeight;
    private int mInputWidth;
    private android.filterfw.core.Frame mOutputFrame;
    private int mPadSize;
    private android.filterfw.core.Program mProgram;
    private int mSliceHeight;
    private int mSliceIndex;
    private int mSliceWidth;
    private int mXSlices;
    private int mYSlices;

    public void <init>(java.lang.String)
    {
        android.filterpacks.imageproc.ImageStitcher r0;
        java.lang.String r1;

        r0 := @this: android.filterpacks.imageproc.ImageStitcher;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<android.filterfw.core.Filter: void <init>(java.lang.String)>(r1);

        r0.<android.filterpacks.imageproc.ImageStitcher: int mSliceIndex> = 0;

        return;
    }

    private android.filterfw.core.FrameFormat calcOutputFormatForInput(android.filterfw.core.FrameFormat)
    {
        android.filterpacks.imageproc.ImageStitcher r0;
        android.filterfw.core.FrameFormat r1;
        android.filterfw.core.MutableFrameFormat r2;
        int i0, $i1, $i2, $i3, $i4, $i5, i6, i7, i8, i9, i10, i11;

        r0 := @this: android.filterpacks.imageproc.ImageStitcher;

        r1 := @parameter0: android.filterfw.core.FrameFormat;

        r2 = virtualinvoke r1.<android.filterfw.core.FrameFormat: android.filterfw.core.MutableFrameFormat mutableCopy()>();

        $i1 = virtualinvoke r1.<android.filterfw.core.FrameFormat: int getWidth()>();

        r0.<android.filterpacks.imageproc.ImageStitcher: int mInputWidth> = $i1;

        i0 = virtualinvoke r1.<android.filterfw.core.FrameFormat: int getHeight()>();

        r0.<android.filterpacks.imageproc.ImageStitcher: int mInputHeight> = i0;

        i6 = r0.<android.filterpacks.imageproc.ImageStitcher: int mInputWidth>;

        i7 = r0.<android.filterpacks.imageproc.ImageStitcher: int mPadSize>;

        $i2 = i7 * 2;

        i8 = i6 - $i2;

        r0.<android.filterpacks.imageproc.ImageStitcher: int mSliceWidth> = i8;

        $i3 = i7 * 2;

        i9 = i0 - $i3;

        r0.<android.filterpacks.imageproc.ImageStitcher: int mSliceHeight> = i9;

        $i4 = r0.<android.filterpacks.imageproc.ImageStitcher: int mXSlices>;

        i10 = i8 * $i4;

        r0.<android.filterpacks.imageproc.ImageStitcher: int mImageWidth> = i10;

        $i5 = r0.<android.filterpacks.imageproc.ImageStitcher: int mYSlices>;

        i11 = i9 * $i5;

        r0.<android.filterpacks.imageproc.ImageStitcher: int mImageHeight> = i11;

        virtualinvoke r2.<android.filterfw.core.MutableFrameFormat: void setDimensions(int,int)>(i10, i11);

        return r2;
    }

    public android.filterfw.core.FrameFormat getOutputFormat(java.lang.String, android.filterfw.core.FrameFormat)
    {
        android.filterpacks.imageproc.ImageStitcher r0;
        java.lang.String r1;
        android.filterfw.core.FrameFormat r2;

        r0 := @this: android.filterpacks.imageproc.ImageStitcher;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.filterfw.core.FrameFormat;

        return r2;
    }

    public void process(android.filterfw.core.FilterContext)
    {
        android.filterpacks.imageproc.ImageStitcher r0;
        android.filterfw.core.Frame r1, $r8, $r10, $r11, $r16;
        android.filterfw.core.FrameFormat r2, $r15;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, i24, i25, i26, i27, i28, i29, i30, i31;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, f17, f18, f19, f20, f21;
        java.lang.RuntimeException $r3;
        android.filterfw.core.Program $r4, $r5, $r7, $r9;
        android.filterfw.core.ShaderProgram $r6, $r13, r18;
        android.filterfw.core.FrameManager $r14;
        android.filterfw.core.FilterContext r17;

        r0 := @this: android.filterpacks.imageproc.ImageStitcher;

        r17 := @parameter0: android.filterfw.core.FilterContext;

        r1 = virtualinvoke r0.<android.filterpacks.imageproc.ImageStitcher: android.filterfw.core.Frame pullInput(java.lang.String)>("image");

        r2 = virtualinvoke r1.<android.filterfw.core.Frame: android.filterfw.core.FrameFormat getFormat()>();

        $i1 = r0.<android.filterpacks.imageproc.ImageStitcher: int mSliceIndex>;

        if $i1 != 0 goto label1;

        $r14 = virtualinvoke r17.<android.filterfw.core.FilterContext: android.filterfw.core.FrameManager getFrameManager()>();

        $r15 = specialinvoke r0.<android.filterpacks.imageproc.ImageStitcher: android.filterfw.core.FrameFormat calcOutputFormatForInput(android.filterfw.core.FrameFormat)>(r2);

        $r16 = virtualinvoke $r14.<android.filterfw.core.FrameManager: android.filterfw.core.Frame newFrame(android.filterfw.core.FrameFormat)>($r15);

        r0.<android.filterpacks.imageproc.ImageStitcher: android.filterfw.core.Frame mOutputFrame> = $r16;

        goto label2;

     label1:
        $i2 = virtualinvoke r2.<android.filterfw.core.FrameFormat: int getWidth()>();

        $i3 = r0.<android.filterpacks.imageproc.ImageStitcher: int mInputWidth>;

        if $i2 != $i3 goto label5;

        $i4 = virtualinvoke r2.<android.filterfw.core.FrameFormat: int getHeight()>();

        $i5 = r0.<android.filterpacks.imageproc.ImageStitcher: int mInputHeight>;

        if $i4 != $i5 goto label5;

     label2:
        $r4 = r0.<android.filterpacks.imageproc.ImageStitcher: android.filterfw.core.Program mProgram>;

        if $r4 != null goto label3;

        $r13 = staticinvoke <android.filterfw.core.ShaderProgram: android.filterfw.core.ShaderProgram createIdentity(android.filterfw.core.FilterContext)>(r17);

        r0.<android.filterpacks.imageproc.ImageStitcher: android.filterfw.core.Program mProgram> = $r13;

     label3:
        i24 = r0.<android.filterpacks.imageproc.ImageStitcher: int mPadSize>;

        $f3 = (float) i24;

        $i6 = r0.<android.filterpacks.imageproc.ImageStitcher: int mInputWidth>;

        $f2 = (float) $i6;

        f17 = $f3 / $f2;

        $f5 = (float) i24;

        $i7 = r0.<android.filterpacks.imageproc.ImageStitcher: int mInputHeight>;

        $f4 = (float) $i7;

        f18 = $f5 / $f4;

        i0 = r0.<android.filterpacks.imageproc.ImageStitcher: int mSliceIndex>;

        i25 = r0.<android.filterpacks.imageproc.ImageStitcher: int mXSlices>;

        i26 = r0.<android.filterpacks.imageproc.ImageStitcher: int mSliceWidth>;

        $i8 = i0 % i25;

        i27 = $i8 * i26;

        $i10 = i0 / i25;

        $i9 = r0.<android.filterpacks.imageproc.ImageStitcher: int mSliceHeight>;

        i28 = $i10 * $i9;

        $i11 = r0.<android.filterpacks.imageproc.ImageStitcher: int mImageWidth>;

        $i12 = $i11 - i27;

        $i13 = staticinvoke <java.lang.Math: int min(int,int)>(i26, $i12);

        f0 = (float) $i13;

        $i16 = r0.<android.filterpacks.imageproc.ImageStitcher: int mSliceHeight>;

        $i14 = r0.<android.filterpacks.imageproc.ImageStitcher: int mImageHeight>;

        $i15 = $i14 - i28;

        $i17 = staticinvoke <java.lang.Math: int min(int,int)>($i16, $i15);

        f1 = (float) $i17;

        $r5 = r0.<android.filterpacks.imageproc.ImageStitcher: android.filterfw.core.Program mProgram>;

        $r6 = (android.filterfw.core.ShaderProgram) $r5;

        $i18 = r0.<android.filterpacks.imageproc.ImageStitcher: int mInputWidth>;

        $f6 = (float) $i18;

        $f9 = f0 / $f6;

        $i19 = r0.<android.filterpacks.imageproc.ImageStitcher: int mInputHeight>;

        $f7 = (float) $i19;

        $f8 = f1 / $f7;

        virtualinvoke $r6.<android.filterfw.core.ShaderProgram: void setSourceRect(float,float,float,float)>(f17, f18, $f9, $f8);

        $r7 = r0.<android.filterpacks.imageproc.ImageStitcher: android.filterfw.core.Program mProgram>;

        r18 = (android.filterfw.core.ShaderProgram) $r7;

        f19 = (float) i27;

        i29 = r0.<android.filterpacks.imageproc.ImageStitcher: int mImageWidth>;

        $f10 = (float) i29;

        f20 = f19 / $f10;

        f21 = (float) i28;

        i30 = r0.<android.filterpacks.imageproc.ImageStitcher: int mImageHeight>;

        $f11 = (float) i30;

        $f16 = f21 / $f11;

        $f12 = (float) i29;

        $f15 = f0 / $f12;

        $f13 = (float) i30;

        $f14 = f1 / $f13;

        virtualinvoke r18.<android.filterfw.core.ShaderProgram: void setTargetRect(float,float,float,float)>(f20, $f16, $f15, $f14);

        $r9 = r0.<android.filterpacks.imageproc.ImageStitcher: android.filterfw.core.Program mProgram>;

        $r8 = r0.<android.filterpacks.imageproc.ImageStitcher: android.filterfw.core.Frame mOutputFrame>;

        virtualinvoke $r9.<android.filterfw.core.Program: void process(android.filterfw.core.Frame,android.filterfw.core.Frame)>(r1, $r8);

        $i20 = r0.<android.filterpacks.imageproc.ImageStitcher: int mSliceIndex>;

        i31 = $i20 + 1;

        r0.<android.filterpacks.imageproc.ImageStitcher: int mSliceIndex> = i31;

        $i22 = r0.<android.filterpacks.imageproc.ImageStitcher: int mXSlices>;

        $i21 = r0.<android.filterpacks.imageproc.ImageStitcher: int mYSlices>;

        $i23 = $i22 * $i21;

        if i31 != $i23 goto label4;

        $r10 = r0.<android.filterpacks.imageproc.ImageStitcher: android.filterfw.core.Frame mOutputFrame>;

        virtualinvoke r0.<android.filterpacks.imageproc.ImageStitcher: void pushOutput(java.lang.String,android.filterfw.core.Frame)>("image", $r10);

        $r11 = r0.<android.filterpacks.imageproc.ImageStitcher: android.filterfw.core.Frame mOutputFrame>;

        virtualinvoke $r11.<android.filterfw.core.Frame: android.filterfw.core.Frame release()>();

        r0.<android.filterpacks.imageproc.ImageStitcher: int mSliceIndex> = 0;

     label4:
        return;

     label5:
        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Image size should not change.");

        throw $r3;
    }

    public void setupPorts()
    {
        android.filterpacks.imageproc.ImageStitcher r0;
        android.filterfw.core.MutableFrameFormat $r1;

        r0 := @this: android.filterpacks.imageproc.ImageStitcher;

        $r1 = staticinvoke <android.filterfw.format.ImageFormat: android.filterfw.core.MutableFrameFormat create(int,int)>(3, 3);

        virtualinvoke r0.<android.filterpacks.imageproc.ImageStitcher: void addMaskedInputPort(java.lang.String,android.filterfw.core.FrameFormat)>("image", $r1);

        virtualinvoke r0.<android.filterpacks.imageproc.ImageStitcher: void addOutputBasedOnInput(java.lang.String,java.lang.String)>("image", "image");

        return;
    }
}
