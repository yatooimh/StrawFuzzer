public class android.filterpacks.imageproc.RotateFilter extends android.filterfw.core.Filter
{
    private int mAngle;
    private int mHeight;
    private int mOutputHeight;
    private int mOutputWidth;
    private android.filterfw.core.Program mProgram;
    private int mTarget;
    private int mTileSize;
    private int mWidth;

    public void <init>(java.lang.String)
    {
        android.filterpacks.imageproc.RotateFilter r0;
        java.lang.String r1;

        r0 := @this: android.filterpacks.imageproc.RotateFilter;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<android.filterfw.core.Filter: void <init>(java.lang.String)>(r1);

        r0.<android.filterpacks.imageproc.RotateFilter: int mTileSize> = 640;

        r0.<android.filterpacks.imageproc.RotateFilter: int mWidth> = 0;

        r0.<android.filterpacks.imageproc.RotateFilter: int mHeight> = 0;

        r0.<android.filterpacks.imageproc.RotateFilter: int mTarget> = 0;

        return;
    }

    private void updateParameters()
    {
        android.filterpacks.imageproc.RotateFilter r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.RuntimeException $r2;
        float f1, f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30;
        android.filterfw.geometry.Quad $r3;
        android.filterfw.geometry.Point $r4, $r5, $r6, $r7;
        android.filterfw.core.Program $r8;
        android.filterfw.core.ShaderProgram $r9;

        r0 := @this: android.filterpacks.imageproc.RotateFilter;

        i0 = r0.<android.filterpacks.imageproc.RotateFilter: int mAngle>;

        $i1 = i0 % 90;

        if $i1 != 0 goto label6;

        f1 = -1.0F;

        $i2 = i0 % 180;

        if $i2 != 0 goto label2;

        $i7 = i0 % 360;

        if $i7 != 0 goto label1;

        f1 = 1.0F;

     label1:
        f2 = f1;

        f1 = 0.0F;

        goto label5;

     label2:
        $i3 = i0 + 90;

        $i4 = $i3 % 360;

        if $i4 != 0 goto label3;

        goto label4;

     label3:
        f1 = 1.0F;

     label4:
        $i5 = r0.<android.filterpacks.imageproc.RotateFilter: int mHeight>;

        r0.<android.filterpacks.imageproc.RotateFilter: int mOutputWidth> = $i5;

        $i6 = r0.<android.filterpacks.imageproc.RotateFilter: int mWidth>;

        r0.<android.filterpacks.imageproc.RotateFilter: int mOutputHeight> = $i6;

        f2 = 0.0F;

     label5:
        $r3 = new android.filterfw.geometry.Quad;

        $r4 = new android.filterfw.geometry.Point;

        $f3 = neg f2;

        $f4 = $f3 + f1;

        $f5 = $f4 + 1.0F;

        $f6 = $f5 * 0.5F;

        $f7 = neg f1;

        $f8 = $f7 - f2;

        $f9 = $f8 + 1.0F;

        $f10 = $f9 * 0.5F;

        specialinvoke $r4.<android.filterfw.geometry.Point: void <init>(float,float)>($f6, $f10);

        $r5 = new android.filterfw.geometry.Point;

        $f11 = f2 + f1;

        $f12 = $f11 + 1.0F;

        $f13 = $f12 * 0.5F;

        $f14 = f1 - f2;

        $f15 = $f14 + 1.0F;

        $f16 = $f15 * 0.5F;

        specialinvoke $r5.<android.filterfw.geometry.Point: void <init>(float,float)>($f13, $f16);

        $r6 = new android.filterfw.geometry.Point;

        $f17 = neg f2;

        $f18 = $f17 - f1;

        $f19 = $f18 + 1.0F;

        $f20 = $f19 * 0.5F;

        $f21 = neg f1;

        $f22 = $f21 + f2;

        $f23 = $f22 + 1.0F;

        $f24 = $f23 * 0.5F;

        specialinvoke $r6.<android.filterfw.geometry.Point: void <init>(float,float)>($f20, $f24);

        $r7 = new android.filterfw.geometry.Point;

        $f25 = f2 - f1;

        $f26 = $f25 + 1.0F;

        $f27 = $f26 * 0.5F;

        $f28 = f1 + f2;

        $f29 = $f28 + 1.0F;

        $f30 = $f29 * 0.5F;

        specialinvoke $r7.<android.filterfw.geometry.Point: void <init>(float,float)>($f27, $f30);

        specialinvoke $r3.<android.filterfw.geometry.Quad: void <init>(android.filterfw.geometry.Point,android.filterfw.geometry.Point,android.filterfw.geometry.Point,android.filterfw.geometry.Point)>($r4, $r5, $r6, $r7);

        $r8 = r0.<android.filterpacks.imageproc.RotateFilter: android.filterfw.core.Program mProgram>;

        $r9 = (android.filterfw.core.ShaderProgram) $r8;

        virtualinvoke $r9.<android.filterfw.core.ShaderProgram: void setTargetRegion(android.filterfw.geometry.Quad)>($r3);

        return;

     label6:
        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("degree has to be multiply of 90.");

        throw $r2;
    }

    public void fieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)
    {
        android.filterpacks.imageproc.RotateFilter r0;
        java.lang.String r1;
        android.filterfw.core.FilterContext r2;
        android.filterfw.core.Program $r3;

        r0 := @this: android.filterpacks.imageproc.RotateFilter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.filterfw.core.FilterContext;

        $r3 = r0.<android.filterpacks.imageproc.RotateFilter: android.filterfw.core.Program mProgram>;

        if $r3 == null goto label1;

        specialinvoke r0.<android.filterpacks.imageproc.RotateFilter: void updateParameters()>();

     label1:
        return;
    }

    public void initProgram(android.filterfw.core.FilterContext, int)
    {
        android.filterpacks.imageproc.RotateFilter r0;
        int i0, $i1;
        java.lang.StringBuilder $r1;
        java.lang.RuntimeException $r5;
        java.lang.String $r6;
        android.filterfw.core.FilterContext r7;
        android.filterfw.core.ShaderProgram r8;

        r0 := @this: android.filterpacks.imageproc.RotateFilter;

        r7 := @parameter0: android.filterfw.core.FilterContext;

        i0 := @parameter1: int;

        if i0 != 3 goto label1;

        r8 = staticinvoke <android.filterfw.core.ShaderProgram: android.filterfw.core.ShaderProgram createIdentity(android.filterfw.core.FilterContext)>(r7);

        $i1 = r0.<android.filterpacks.imageproc.RotateFilter: int mTileSize>;

        virtualinvoke r8.<android.filterfw.core.ShaderProgram: void setMaximumTileSize(int)>($i1);

        virtualinvoke r8.<android.filterfw.core.ShaderProgram: void setClearsOutput(boolean)>(1);

        r0.<android.filterpacks.imageproc.RotateFilter: android.filterfw.core.Program mProgram> = r8;

        r0.<android.filterpacks.imageproc.RotateFilter: int mTarget> = i0;

        return;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Filter Sharpen does not support frames of target ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");

        $r5 = new java.lang.RuntimeException;

        $r6 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>($r6);

        throw $r5;
    }

    public void process(android.filterfw.core.FilterContext)
    {
        android.filterpacks.imageproc.RotateFilter r0;
        android.filterfw.core.Frame r1, r8;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        android.filterfw.core.Program $r2, $r9;
        android.filterfw.core.FilterContext r4;
        android.filterfw.core.FrameFormat r5;
        android.filterfw.core.MutableFrameFormat r6;
        android.filterfw.core.FrameManager $r7;

        r0 := @this: android.filterpacks.imageproc.RotateFilter;

        r4 := @parameter0: android.filterfw.core.FilterContext;

        r1 = virtualinvoke r0.<android.filterpacks.imageproc.RotateFilter: android.filterfw.core.Frame pullInput(java.lang.String)>("image");

        r5 = virtualinvoke r1.<android.filterfw.core.Frame: android.filterfw.core.FrameFormat getFormat()>();

        $r2 = r0.<android.filterpacks.imageproc.RotateFilter: android.filterfw.core.Program mProgram>;

        if $r2 == null goto label1;

        $i6 = virtualinvoke r5.<android.filterfw.core.FrameFormat: int getTarget()>();

        $i7 = r0.<android.filterpacks.imageproc.RotateFilter: int mTarget>;

        if $i6 == $i7 goto label2;

     label1:
        $i1 = virtualinvoke r5.<android.filterfw.core.FrameFormat: int getTarget()>();

        virtualinvoke r0.<android.filterpacks.imageproc.RotateFilter: void initProgram(android.filterfw.core.FilterContext,int)>(r4, $i1);

     label2:
        $i8 = virtualinvoke r5.<android.filterfw.core.FrameFormat: int getWidth()>();

        $i9 = r0.<android.filterpacks.imageproc.RotateFilter: int mWidth>;

        if $i8 != $i9 goto label3;

        $i4 = virtualinvoke r5.<android.filterfw.core.FrameFormat: int getHeight()>();

        $i5 = r0.<android.filterpacks.imageproc.RotateFilter: int mHeight>;

        if $i4 == $i5 goto label4;

     label3:
        $i2 = virtualinvoke r5.<android.filterfw.core.FrameFormat: int getWidth()>();

        r0.<android.filterpacks.imageproc.RotateFilter: int mWidth> = $i2;

        i0 = virtualinvoke r5.<android.filterfw.core.FrameFormat: int getHeight()>();

        r0.<android.filterpacks.imageproc.RotateFilter: int mHeight> = i0;

        $i3 = r0.<android.filterpacks.imageproc.RotateFilter: int mWidth>;

        r0.<android.filterpacks.imageproc.RotateFilter: int mOutputWidth> = $i3;

        r0.<android.filterpacks.imageproc.RotateFilter: int mOutputHeight> = i0;

        specialinvoke r0.<android.filterpacks.imageproc.RotateFilter: void updateParameters()>();

     label4:
        $i10 = r0.<android.filterpacks.imageproc.RotateFilter: int mOutputWidth>;

        $i11 = r0.<android.filterpacks.imageproc.RotateFilter: int mOutputHeight>;

        r6 = staticinvoke <android.filterfw.format.ImageFormat: android.filterfw.core.MutableFrameFormat create(int,int,int,int)>($i10, $i11, 3, 3);

        $r7 = virtualinvoke r4.<android.filterfw.core.FilterContext: android.filterfw.core.FrameManager getFrameManager()>();

        r8 = virtualinvoke $r7.<android.filterfw.core.FrameManager: android.filterfw.core.Frame newFrame(android.filterfw.core.FrameFormat)>(r6);

        $r9 = r0.<android.filterpacks.imageproc.RotateFilter: android.filterfw.core.Program mProgram>;

        virtualinvoke $r9.<android.filterfw.core.Program: void process(android.filterfw.core.Frame,android.filterfw.core.Frame)>(r1, r8);

        virtualinvoke r0.<android.filterpacks.imageproc.RotateFilter: void pushOutput(java.lang.String,android.filterfw.core.Frame)>("image", r8);

        virtualinvoke r8.<android.filterfw.core.Frame: android.filterfw.core.Frame release()>();

        return;
    }

    public void setupPorts()
    {
        android.filterpacks.imageproc.RotateFilter r0;
        android.filterfw.core.MutableFrameFormat $r1;

        r0 := @this: android.filterpacks.imageproc.RotateFilter;

        $r1 = staticinvoke <android.filterfw.format.ImageFormat: android.filterfw.core.MutableFrameFormat create(int)>(3);

        virtualinvoke r0.<android.filterpacks.imageproc.RotateFilter: void addMaskedInputPort(java.lang.String,android.filterfw.core.FrameFormat)>("image", $r1);

        virtualinvoke r0.<android.filterpacks.imageproc.RotateFilter: void addOutputBasedOnInput(java.lang.String,java.lang.String)>("image", "image");

        return;
    }
}
