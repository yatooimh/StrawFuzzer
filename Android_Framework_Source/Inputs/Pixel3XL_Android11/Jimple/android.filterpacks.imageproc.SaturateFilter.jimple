public class android.filterpacks.imageproc.SaturateFilter extends android.filterfw.core.Filter
{
    private android.filterfw.core.Program mBenProgram;
    private final java.lang.String mBenSaturateShader;
    private android.filterfw.core.Program mHerfProgram;
    private final java.lang.String mHerfSaturateShader;
    private float mScale;
    private int mTarget;
    private int mTileSize;

    public void <init>(java.lang.String)
    {
        android.filterpacks.imageproc.SaturateFilter r0;
        java.lang.String r1;

        r0 := @this: android.filterpacks.imageproc.SaturateFilter;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<android.filterfw.core.Filter: void <init>(java.lang.String)>(r1);

        r0.<android.filterpacks.imageproc.SaturateFilter: float mScale> = 0.0F;

        r0.<android.filterpacks.imageproc.SaturateFilter: int mTileSize> = 640;

        r0.<android.filterpacks.imageproc.SaturateFilter: int mTarget> = 0;

        r0.<android.filterpacks.imageproc.SaturateFilter: java.lang.String mBenSaturateShader> = "precision mediump float;\nuniform sampler2D tex_sampler_0;\nuniform float scale;\nuniform float shift;\nuniform vec3 weights;\nvarying vec2 v_texcoord;\nvoid main() {\n  vec4 color = texture2D(tex_sampler_0, v_texcoord);\n  float kv = dot(color.rgb, weights) + shift;\n  vec3 new_color = scale * color.rgb + (1.0 - scale) * kv;\n  gl_FragColor = vec4(new_color, color.a);\n}\n";

        r0.<android.filterpacks.imageproc.SaturateFilter: java.lang.String mHerfSaturateShader> = "precision mediump float;\nuniform sampler2D tex_sampler_0;\nuniform vec3 weights;\nuniform vec3 exponents;\nvarying vec2 v_texcoord;\nvoid main() {\n  vec4 color = texture2D(tex_sampler_0, v_texcoord);\n  float de = dot(color.rgb, weights);\n  float inv_de = 1.0 / de;\n  vec3 new_color = de * pow(color.rgb * inv_de, exponents);\n  float max_color = max(max(max(new_color.r, new_color.g), new_color.b), 1.0);\n  gl_FragColor = vec4(new_color / max_color, color.a);\n}\n";

        return;
    }

    private void initParameters()
    {
        android.filterpacks.imageproc.SaturateFilter r0;
        float[] r1;
        android.filterfw.core.Program $r2, $r3, $r5;
        java.lang.Float $r4;

        r0 := @this: android.filterpacks.imageproc.SaturateFilter;

        r1 = newarray (float)[3];

        r1[0] = 0.25F;

        r1[1] = 0.625F;

        r1[2] = 0.125F;

        $r2 = r0.<android.filterpacks.imageproc.SaturateFilter: android.filterfw.core.Program mBenProgram>;

        virtualinvoke $r2.<android.filterfw.core.Program: void setHostValue(java.lang.String,java.lang.Object)>("weights", r1);

        $r3 = r0.<android.filterpacks.imageproc.SaturateFilter: android.filterfw.core.Program mBenProgram>;

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(0.003921569F);

        virtualinvoke $r3.<android.filterfw.core.Program: void setHostValue(java.lang.String,java.lang.Object)>("shift", $r4);

        $r5 = r0.<android.filterpacks.imageproc.SaturateFilter: android.filterfw.core.Program mHerfProgram>;

        virtualinvoke $r5.<android.filterfw.core.Program: void setHostValue(java.lang.String,java.lang.Object)>("weights", r1);

        specialinvoke r0.<android.filterpacks.imageproc.SaturateFilter: void updateParameters()>();

        return;
    }

    private void updateParameters()
    {
        android.filterpacks.imageproc.SaturateFilter r0;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;
        byte $b0;
        android.filterfw.core.Program $r1, $r4;
        java.lang.Float $r2;
        float[] $r3;

        r0 := @this: android.filterpacks.imageproc.SaturateFilter;

        f0 = r0.<android.filterpacks.imageproc.SaturateFilter: float mScale>;

        $b0 = f0 cmpl 0.0F;

        if $b0 <= 0 goto label1;

        $r4 = r0.<android.filterpacks.imageproc.SaturateFilter: android.filterfw.core.Program mHerfProgram>;

        $r3 = newarray (float)[3];

        $f2 = 0.9F * f0;

        $f3 = $f2 + 1.0F;

        $r3[0] = $f3;

        $f4 = 2.1F * f0;

        $f5 = $f4 + 1.0F;

        $r3[1] = $f5;

        $f6 = f0 * 2.7F;

        $f7 = $f6 + 1.0F;

        $r3[2] = $f7;

        virtualinvoke $r4.<android.filterfw.core.Program: void setHostValue(java.lang.String,java.lang.Object)>("exponents", $r3);

        goto label2;

     label1:
        $r1 = r0.<android.filterpacks.imageproc.SaturateFilter: android.filterfw.core.Program mBenProgram>;

        $f1 = f0 + 1.0F;

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f1);

        virtualinvoke $r1.<android.filterfw.core.Program: void setHostValue(java.lang.String,java.lang.Object)>("scale", $r2);

     label2:
        return;
    }

    public void fieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)
    {
        android.filterpacks.imageproc.SaturateFilter r0;
        java.lang.String r1;
        android.filterfw.core.FilterContext r2;
        android.filterfw.core.Program $r3, $r4;

        r0 := @this: android.filterpacks.imageproc.SaturateFilter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.filterfw.core.FilterContext;

        $r3 = r0.<android.filterpacks.imageproc.SaturateFilter: android.filterfw.core.Program mBenProgram>;

        if $r3 == null goto label1;

        $r4 = r0.<android.filterpacks.imageproc.SaturateFilter: android.filterfw.core.Program mHerfProgram>;

        if $r4 == null goto label1;

        specialinvoke r0.<android.filterpacks.imageproc.SaturateFilter: void updateParameters()>();

     label1:
        return;
    }

    public android.filterfw.core.FrameFormat getOutputFormat(java.lang.String, android.filterfw.core.FrameFormat)
    {
        android.filterpacks.imageproc.SaturateFilter r0;
        java.lang.String r1;
        android.filterfw.core.FrameFormat r2;

        r0 := @this: android.filterpacks.imageproc.SaturateFilter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.filterfw.core.FrameFormat;

        return r2;
    }

    public void initProgram(android.filterfw.core.FilterContext, int)
    {
        android.filterpacks.imageproc.SaturateFilter r0;
        int i0, $i1, $i2;
        java.lang.StringBuilder $r2;
        java.lang.RuntimeException $r6;
        java.lang.String $r7;
        android.filterfw.core.ShaderProgram $r8, $r9;
        android.filterfw.core.FilterContext r10;

        r0 := @this: android.filterpacks.imageproc.SaturateFilter;

        r10 := @parameter0: android.filterfw.core.FilterContext;

        i0 := @parameter1: int;

        if i0 != 3 goto label1;

        $r8 = new android.filterfw.core.ShaderProgram;

        specialinvoke $r8.<android.filterfw.core.ShaderProgram: void <init>(android.filterfw.core.FilterContext,java.lang.String)>(r10, "precision mediump float;\nuniform sampler2D tex_sampler_0;\nuniform float scale;\nuniform float shift;\nuniform vec3 weights;\nvarying vec2 v_texcoord;\nvoid main() {\n  vec4 color = texture2D(tex_sampler_0, v_texcoord);\n  float kv = dot(color.rgb, weights) + shift;\n  vec3 new_color = scale * color.rgb + (1.0 - scale) * kv;\n  gl_FragColor = vec4(new_color, color.a);\n}\n");

        $i1 = r0.<android.filterpacks.imageproc.SaturateFilter: int mTileSize>;

        virtualinvoke $r8.<android.filterfw.core.ShaderProgram: void setMaximumTileSize(int)>($i1);

        r0.<android.filterpacks.imageproc.SaturateFilter: android.filterfw.core.Program mBenProgram> = $r8;

        $r9 = new android.filterfw.core.ShaderProgram;

        specialinvoke $r9.<android.filterfw.core.ShaderProgram: void <init>(android.filterfw.core.FilterContext,java.lang.String)>(r10, "precision mediump float;\nuniform sampler2D tex_sampler_0;\nuniform vec3 weights;\nuniform vec3 exponents;\nvarying vec2 v_texcoord;\nvoid main() {\n  vec4 color = texture2D(tex_sampler_0, v_texcoord);\n  float de = dot(color.rgb, weights);\n  float inv_de = 1.0 / de;\n  vec3 new_color = de * pow(color.rgb * inv_de, exponents);\n  float max_color = max(max(max(new_color.r, new_color.g), new_color.b), 1.0);\n  gl_FragColor = vec4(new_color / max_color, color.a);\n}\n");

        $i2 = r0.<android.filterpacks.imageproc.SaturateFilter: int mTileSize>;

        virtualinvoke $r9.<android.filterfw.core.ShaderProgram: void setMaximumTileSize(int)>($i2);

        r0.<android.filterpacks.imageproc.SaturateFilter: android.filterfw.core.Program mHerfProgram> = $r9;

        r0.<android.filterpacks.imageproc.SaturateFilter: int mTarget> = i0;

        return;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Filter Sharpen does not support frames of target ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");

        $r6 = new java.lang.RuntimeException;

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>($r7);

        throw $r6;
    }

    public void process(android.filterfw.core.FilterContext)
    {
        android.filterpacks.imageproc.SaturateFilter r0;
        android.filterfw.core.Frame r1, r9;
        android.filterfw.core.FrameFormat r2;
        android.filterfw.core.Program $r3, $r4, $r6;
        int $i0, $i1, $i2;
        android.filterfw.core.FilterContext r7;
        android.filterfw.core.FrameManager $r8;
        float $f0;
        byte $b3;

        r0 := @this: android.filterpacks.imageproc.SaturateFilter;

        r7 := @parameter0: android.filterfw.core.FilterContext;

        r1 = virtualinvoke r0.<android.filterpacks.imageproc.SaturateFilter: android.filterfw.core.Frame pullInput(java.lang.String)>("image");

        r2 = virtualinvoke r1.<android.filterfw.core.Frame: android.filterfw.core.FrameFormat getFormat()>();

        $r3 = r0.<android.filterpacks.imageproc.SaturateFilter: android.filterfw.core.Program mBenProgram>;

        if $r3 == null goto label1;

        $i1 = virtualinvoke r2.<android.filterfw.core.FrameFormat: int getTarget()>();

        $i2 = r0.<android.filterpacks.imageproc.SaturateFilter: int mTarget>;

        if $i1 == $i2 goto label2;

     label1:
        $i0 = virtualinvoke r2.<android.filterfw.core.FrameFormat: int getTarget()>();

        virtualinvoke r0.<android.filterpacks.imageproc.SaturateFilter: void initProgram(android.filterfw.core.FilterContext,int)>(r7, $i0);

        specialinvoke r0.<android.filterpacks.imageproc.SaturateFilter: void initParameters()>();

     label2:
        $r8 = virtualinvoke r7.<android.filterfw.core.FilterContext: android.filterfw.core.FrameManager getFrameManager()>();

        r9 = virtualinvoke $r8.<android.filterfw.core.FrameManager: android.filterfw.core.Frame newFrame(android.filterfw.core.FrameFormat)>(r2);

        $f0 = r0.<android.filterpacks.imageproc.SaturateFilter: float mScale>;

        $b3 = $f0 cmpl 0.0F;

        if $b3 <= 0 goto label3;

        $r6 = r0.<android.filterpacks.imageproc.SaturateFilter: android.filterfw.core.Program mHerfProgram>;

        virtualinvoke $r6.<android.filterfw.core.Program: void process(android.filterfw.core.Frame,android.filterfw.core.Frame)>(r1, r9);

        goto label4;

     label3:
        $r4 = r0.<android.filterpacks.imageproc.SaturateFilter: android.filterfw.core.Program mBenProgram>;

        virtualinvoke $r4.<android.filterfw.core.Program: void process(android.filterfw.core.Frame,android.filterfw.core.Frame)>(r1, r9);

     label4:
        virtualinvoke r0.<android.filterpacks.imageproc.SaturateFilter: void pushOutput(java.lang.String,android.filterfw.core.Frame)>("image", r9);

        virtualinvoke r9.<android.filterfw.core.Frame: android.filterfw.core.Frame release()>();

        return;
    }

    public void setupPorts()
    {
        android.filterpacks.imageproc.SaturateFilter r0;
        android.filterfw.core.MutableFrameFormat $r1;

        r0 := @this: android.filterpacks.imageproc.SaturateFilter;

        $r1 = staticinvoke <android.filterfw.format.ImageFormat: android.filterfw.core.MutableFrameFormat create(int)>(3);

        virtualinvoke r0.<android.filterpacks.imageproc.SaturateFilter: void addMaskedInputPort(java.lang.String,android.filterfw.core.FrameFormat)>("image", $r1);

        virtualinvoke r0.<android.filterpacks.imageproc.SaturateFilter: void addOutputBasedOnInput(java.lang.String,java.lang.String)>("image", "image");

        return;
    }
}
