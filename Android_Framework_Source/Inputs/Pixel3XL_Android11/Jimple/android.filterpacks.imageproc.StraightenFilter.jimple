public class android.filterpacks.imageproc.StraightenFilter extends android.filterfw.core.Filter
{
    private static final float DEGREE_TO_RADIAN;
    private float mAngle;
    private int mHeight;
    private float mMaxAngle;
    private android.filterfw.core.Program mProgram;
    private int mTarget;
    private int mTileSize;
    private int mWidth;

    public void <init>(java.lang.String)
    {
        android.filterpacks.imageproc.StraightenFilter r0;
        java.lang.String r1;

        r0 := @this: android.filterpacks.imageproc.StraightenFilter;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<android.filterfw.core.Filter: void <init>(java.lang.String)>(r1);

        r0.<android.filterpacks.imageproc.StraightenFilter: float mAngle> = 0.0F;

        r0.<android.filterpacks.imageproc.StraightenFilter: float mMaxAngle> = 45.0F;

        r0.<android.filterpacks.imageproc.StraightenFilter: int mTileSize> = 640;

        r0.<android.filterpacks.imageproc.StraightenFilter: int mWidth> = 0;

        r0.<android.filterpacks.imageproc.StraightenFilter: int mHeight> = 0;

        r0.<android.filterpacks.imageproc.StraightenFilter: int mTarget> = 0;

        return;
    }

    private void updateParameters()
    {
        android.filterpacks.imageproc.StraightenFilter r0;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, $f34, $f35, $f36, $f37, $f38, $f39, $f40, $f41, $f42, $f43, $f44, $f45, $f46, $f47, $f48, $f49, $f50, $f51, $f52, $f53, $f54, $f55, $f56, $f57, $f58, $f59, $f60, $f61, $f62, $f63, $f64, $f65, $f66, $f67, $f68, $f69, $f70, $f71, $f72, $f73, $f74, $f75, $f76, $f77, $f78, $f79, $f80, $f81, $f82, $f83, $f84, $f85, $f86, $f87, $f88, $f89, $f90, $f91, $f92, $f93, $f94, $f95, $f96, f97, f98, f99, f100, f101, f102, f103, f104, f105, f106, f107;
        double $d0, $d1, $d2, $d3;
        byte $b0, $b1;
        java.lang.RuntimeException $r4;
        android.filterfw.geometry.Point $r5, $r6, $r7, $r8;
        int $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, i13, i14, i15, i16, i17, i18, i19;
        android.filterfw.geometry.Quad $r9;
        android.filterfw.core.Program $r10;
        android.filterfw.core.ShaderProgram $r11;

        r0 := @this: android.filterpacks.imageproc.StraightenFilter;

        $f2 = r0.<android.filterpacks.imageproc.StraightenFilter: float mAngle>;

        $f3 = $f2 * 0.017453292F;

        $d0 = (double) $f3;

        $d1 = staticinvoke <java.lang.Math: double cos(double)>($d0);

        f0 = (float) $d1;

        $f4 = r0.<android.filterpacks.imageproc.StraightenFilter: float mAngle>;

        $f5 = $f4 * 0.017453292F;

        $d2 = (double) $f5;

        $d3 = staticinvoke <java.lang.Math: double sin(double)>($d2);

        f1 = (float) $d3;

        f97 = r0.<android.filterpacks.imageproc.StraightenFilter: float mMaxAngle>;

        $b0 = f97 cmpg 0.0F;

        if $b0 <= 0 goto label2;

        f98 = f97;

        $b1 = f97 cmpl 90.0F;

        if $b1 <= 0 goto label1;

        f98 = 90.0F;

     label1:
        r0.<android.filterpacks.imageproc.StraightenFilter: float mMaxAngle> = f98;

        f99 = neg f0;

        i12 = r0.<android.filterpacks.imageproc.StraightenFilter: int mWidth>;

        f100 = (float) i12;

        i13 = r0.<android.filterpacks.imageproc.StraightenFilter: int mHeight>;

        $r5 = new android.filterfw.geometry.Point;

        $f8 = f99 * f100;

        $f6 = (float) i13;

        $f7 = $f6 * f1;

        $f15 = $f8 + $f7;

        $f10 = neg f1;

        $f9 = (float) i12;

        $f13 = $f10 * $f9;

        $f11 = (float) i13;

        $f12 = $f11 * f0;

        $f14 = $f13 - $f12;

        specialinvoke $r5.<android.filterfw.geometry.Point: void <init>(float,float)>($f15, $f14);

        i14 = r0.<android.filterpacks.imageproc.StraightenFilter: int mWidth>;

        f101 = (float) i14;

        i15 = r0.<android.filterpacks.imageproc.StraightenFilter: int mHeight>;

        $r6 = new android.filterfw.geometry.Point;

        $f18 = f101 * f0;

        $f16 = (float) i15;

        $f17 = $f16 * f1;

        $f24 = $f18 + $f17;

        $f19 = (float) i14;

        $f22 = $f19 * f1;

        $f20 = (float) i15;

        $f21 = $f20 * f0;

        $f23 = $f22 - $f21;

        specialinvoke $r6.<android.filterfw.geometry.Point: void <init>(float,float)>($f24, $f23);

        f102 = neg f0;

        i16 = r0.<android.filterpacks.imageproc.StraightenFilter: int mWidth>;

        f103 = (float) i16;

        i17 = r0.<android.filterpacks.imageproc.StraightenFilter: int mHeight>;

        $r7 = new android.filterfw.geometry.Point;

        $f27 = f102 * f103;

        $f25 = (float) i17;

        $f26 = $f25 * f1;

        $f34 = $f27 - $f26;

        $f29 = neg f1;

        $f28 = (float) i16;

        $f32 = $f29 * $f28;

        $f30 = (float) i17;

        $f31 = $f30 * f0;

        $f33 = $f32 + $f31;

        specialinvoke $r7.<android.filterfw.geometry.Point: void <init>(float,float)>($f34, $f33);

        i18 = r0.<android.filterpacks.imageproc.StraightenFilter: int mWidth>;

        f104 = (float) i18;

        i19 = r0.<android.filterpacks.imageproc.StraightenFilter: int mHeight>;

        $r8 = new android.filterfw.geometry.Point;

        $f37 = f104 * f0;

        $f35 = (float) i19;

        $f36 = $f35 * f1;

        $f43 = $f37 - $f36;

        $f38 = (float) i18;

        $f41 = $f38 * f1;

        $f39 = (float) i19;

        $f40 = $f39 * f0;

        $f42 = $f41 + $f40;

        specialinvoke $r8.<android.filterfw.geometry.Point: void <init>(float,float)>($f43, $f42);

        $f44 = $r5.<android.filterfw.geometry.Point: float x>;

        $f45 = staticinvoke <java.lang.Math: float abs(float)>($f44);

        $f46 = $r6.<android.filterfw.geometry.Point: float x>;

        $f47 = staticinvoke <java.lang.Math: float abs(float)>($f46);

        f105 = staticinvoke <java.lang.Math: float max(float,float)>($f45, $f47);

        $f48 = $r5.<android.filterfw.geometry.Point: float y>;

        $f49 = staticinvoke <java.lang.Math: float abs(float)>($f48);

        $f50 = $r6.<android.filterfw.geometry.Point: float y>;

        $f51 = staticinvoke <java.lang.Math: float abs(float)>($f50);

        f106 = staticinvoke <java.lang.Math: float max(float,float)>($f49, $f51);

        $i2 = r0.<android.filterpacks.imageproc.StraightenFilter: int mWidth>;

        $f52 = (float) $i2;

        $f55 = $f52 / f105;

        $i3 = r0.<android.filterpacks.imageproc.StraightenFilter: int mHeight>;

        $f53 = (float) $i3;

        $f54 = $f53 / f106;

        $f56 = staticinvoke <java.lang.Math: float min(float,float)>($f55, $f54);

        f107 = $f56 * 0.5F;

        $f57 = $r5.<android.filterfw.geometry.Point: float x>;

        $f59 = $f57 * f107;

        $i4 = r0.<android.filterpacks.imageproc.StraightenFilter: int mWidth>;

        $f58 = (float) $i4;

        $f60 = $f59 / $f58;

        $f66 = $f60 + 0.5F;

        $f61 = $r5.<android.filterfw.geometry.Point: float y>;

        $f63 = $f61 * f107;

        $i5 = r0.<android.filterpacks.imageproc.StraightenFilter: int mHeight>;

        $f62 = (float) $i5;

        $f64 = $f63 / $f62;

        $f65 = $f64 + 0.5F;

        virtualinvoke $r5.<android.filterfw.geometry.Point: void set(float,float)>($f66, $f65);

        $f67 = $r6.<android.filterfw.geometry.Point: float x>;

        $f69 = $f67 * f107;

        $i6 = r0.<android.filterpacks.imageproc.StraightenFilter: int mWidth>;

        $f68 = (float) $i6;

        $f70 = $f69 / $f68;

        $f76 = $f70 + 0.5F;

        $f71 = $r6.<android.filterfw.geometry.Point: float y>;

        $f73 = $f71 * f107;

        $i7 = r0.<android.filterpacks.imageproc.StraightenFilter: int mHeight>;

        $f72 = (float) $i7;

        $f74 = $f73 / $f72;

        $f75 = $f74 + 0.5F;

        virtualinvoke $r6.<android.filterfw.geometry.Point: void set(float,float)>($f76, $f75);

        $f77 = $r7.<android.filterfw.geometry.Point: float x>;

        $f79 = $f77 * f107;

        $i8 = r0.<android.filterpacks.imageproc.StraightenFilter: int mWidth>;

        $f78 = (float) $i8;

        $f80 = $f79 / $f78;

        $f86 = $f80 + 0.5F;

        $f81 = $r7.<android.filterfw.geometry.Point: float y>;

        $f83 = $f81 * f107;

        $i9 = r0.<android.filterpacks.imageproc.StraightenFilter: int mHeight>;

        $f82 = (float) $i9;

        $f84 = $f83 / $f82;

        $f85 = $f84 + 0.5F;

        virtualinvoke $r7.<android.filterfw.geometry.Point: void set(float,float)>($f86, $f85);

        $f87 = $r8.<android.filterfw.geometry.Point: float x>;

        $f89 = $f87 * f107;

        $i10 = r0.<android.filterpacks.imageproc.StraightenFilter: int mWidth>;

        $f88 = (float) $i10;

        $f90 = $f89 / $f88;

        $f96 = $f90 + 0.5F;

        $f91 = $r8.<android.filterfw.geometry.Point: float y>;

        $f93 = $f91 * f107;

        $i11 = r0.<android.filterpacks.imageproc.StraightenFilter: int mHeight>;

        $f92 = (float) $i11;

        $f94 = $f93 / $f92;

        $f95 = $f94 + 0.5F;

        virtualinvoke $r8.<android.filterfw.geometry.Point: void set(float,float)>($f96, $f95);

        $r9 = new android.filterfw.geometry.Quad;

        specialinvoke $r9.<android.filterfw.geometry.Quad: void <init>(android.filterfw.geometry.Point,android.filterfw.geometry.Point,android.filterfw.geometry.Point,android.filterfw.geometry.Point)>($r5, $r6, $r7, $r8);

        $r10 = r0.<android.filterpacks.imageproc.StraightenFilter: android.filterfw.core.Program mProgram>;

        $r11 = (android.filterfw.core.ShaderProgram) $r10;

        virtualinvoke $r11.<android.filterfw.core.ShaderProgram: void setSourceRegion(android.filterfw.geometry.Quad)>($r9);

        return;

     label2:
        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("Max angle is out of range (0-180).");

        throw $r4;
    }

    public void fieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)
    {
        android.filterpacks.imageproc.StraightenFilter r0;
        java.lang.String r1;
        android.filterfw.core.FilterContext r2;
        android.filterfw.core.Program $r3;

        r0 := @this: android.filterpacks.imageproc.StraightenFilter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.filterfw.core.FilterContext;

        $r3 = r0.<android.filterpacks.imageproc.StraightenFilter: android.filterfw.core.Program mProgram>;

        if $r3 == null goto label1;

        specialinvoke r0.<android.filterpacks.imageproc.StraightenFilter: void updateParameters()>();

     label1:
        return;
    }

    public void initProgram(android.filterfw.core.FilterContext, int)
    {
        android.filterpacks.imageproc.StraightenFilter r0;
        int i0, $i1;
        java.lang.StringBuilder $r1;
        java.lang.RuntimeException $r5;
        java.lang.String $r6;
        android.filterfw.core.FilterContext r7;
        android.filterfw.core.ShaderProgram r8;

        r0 := @this: android.filterpacks.imageproc.StraightenFilter;

        r7 := @parameter0: android.filterfw.core.FilterContext;

        i0 := @parameter1: int;

        if i0 != 3 goto label1;

        r8 = staticinvoke <android.filterfw.core.ShaderProgram: android.filterfw.core.ShaderProgram createIdentity(android.filterfw.core.FilterContext)>(r7);

        $i1 = r0.<android.filterpacks.imageproc.StraightenFilter: int mTileSize>;

        virtualinvoke r8.<android.filterfw.core.ShaderProgram: void setMaximumTileSize(int)>($i1);

        r0.<android.filterpacks.imageproc.StraightenFilter: android.filterfw.core.Program mProgram> = r8;

        r0.<android.filterpacks.imageproc.StraightenFilter: int mTarget> = i0;

        return;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Filter Sharpen does not support frames of target ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");

        $r5 = new java.lang.RuntimeException;

        $r6 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>($r6);

        throw $r5;
    }

    public void process(android.filterfw.core.FilterContext)
    {
        android.filterpacks.imageproc.StraightenFilter r0;
        android.filterfw.core.Frame r1, r7;
        android.filterfw.core.FrameFormat r2;
        android.filterfw.core.Program $r3, $r8;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        android.filterfw.core.FilterContext r5;
        android.filterfw.core.FrameManager $r6;

        r0 := @this: android.filterpacks.imageproc.StraightenFilter;

        r5 := @parameter0: android.filterfw.core.FilterContext;

        r1 = virtualinvoke r0.<android.filterpacks.imageproc.StraightenFilter: android.filterfw.core.Frame pullInput(java.lang.String)>("image");

        r2 = virtualinvoke r1.<android.filterfw.core.Frame: android.filterfw.core.FrameFormat getFormat()>();

        $r3 = r0.<android.filterpacks.imageproc.StraightenFilter: android.filterfw.core.Program mProgram>;

        if $r3 == null goto label1;

        $i5 = virtualinvoke r2.<android.filterfw.core.FrameFormat: int getTarget()>();

        $i6 = r0.<android.filterpacks.imageproc.StraightenFilter: int mTarget>;

        if $i5 == $i6 goto label2;

     label1:
        $i0 = virtualinvoke r2.<android.filterfw.core.FrameFormat: int getTarget()>();

        virtualinvoke r0.<android.filterpacks.imageproc.StraightenFilter: void initProgram(android.filterfw.core.FilterContext,int)>(r5, $i0);

     label2:
        $i7 = virtualinvoke r2.<android.filterfw.core.FrameFormat: int getWidth()>();

        $i8 = r0.<android.filterpacks.imageproc.StraightenFilter: int mWidth>;

        if $i7 != $i8 goto label3;

        $i3 = virtualinvoke r2.<android.filterfw.core.FrameFormat: int getHeight()>();

        $i4 = r0.<android.filterpacks.imageproc.StraightenFilter: int mHeight>;

        if $i3 == $i4 goto label4;

     label3:
        $i1 = virtualinvoke r2.<android.filterfw.core.FrameFormat: int getWidth()>();

        r0.<android.filterpacks.imageproc.StraightenFilter: int mWidth> = $i1;

        $i2 = virtualinvoke r2.<android.filterfw.core.FrameFormat: int getHeight()>();

        r0.<android.filterpacks.imageproc.StraightenFilter: int mHeight> = $i2;

        specialinvoke r0.<android.filterpacks.imageproc.StraightenFilter: void updateParameters()>();

     label4:
        $r6 = virtualinvoke r5.<android.filterfw.core.FilterContext: android.filterfw.core.FrameManager getFrameManager()>();

        r7 = virtualinvoke $r6.<android.filterfw.core.FrameManager: android.filterfw.core.Frame newFrame(android.filterfw.core.FrameFormat)>(r2);

        $r8 = r0.<android.filterpacks.imageproc.StraightenFilter: android.filterfw.core.Program mProgram>;

        virtualinvoke $r8.<android.filterfw.core.Program: void process(android.filterfw.core.Frame,android.filterfw.core.Frame)>(r1, r7);

        virtualinvoke r0.<android.filterpacks.imageproc.StraightenFilter: void pushOutput(java.lang.String,android.filterfw.core.Frame)>("image", r7);

        virtualinvoke r7.<android.filterfw.core.Frame: android.filterfw.core.Frame release()>();

        return;
    }

    public void setupPorts()
    {
        android.filterpacks.imageproc.StraightenFilter r0;
        android.filterfw.core.MutableFrameFormat $r1;

        r0 := @this: android.filterpacks.imageproc.StraightenFilter;

        $r1 = staticinvoke <android.filterfw.format.ImageFormat: android.filterfw.core.MutableFrameFormat create(int)>(3);

        virtualinvoke r0.<android.filterpacks.imageproc.StraightenFilter: void addMaskedInputPort(java.lang.String,android.filterfw.core.FrameFormat)>("image", $r1);

        virtualinvoke r0.<android.filterpacks.imageproc.StraightenFilter: void addOutputBasedOnInput(java.lang.String,java.lang.String)>("image", "image");

        return;
    }

    public static void <clinit>()
    {
        <android.filterpacks.imageproc.StraightenFilter: float DEGREE_TO_RADIAN> = 0.017453292F;

        return;
    }
}
