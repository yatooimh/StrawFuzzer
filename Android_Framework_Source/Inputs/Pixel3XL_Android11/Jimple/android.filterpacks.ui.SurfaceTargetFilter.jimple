public class android.filterpacks.ui.SurfaceTargetFilter extends android.filterfw.core.Filter
{
    private static final java.lang.String TAG;
    private final int RENDERMODE_FILL_CROP;
    private final int RENDERMODE_FIT;
    private final int RENDERMODE_STRETCH;
    private float mAspectRatio;
    private android.filterfw.core.GLEnvironment mGlEnv;
    private boolean mLogVerbose;
    private android.filterfw.core.ShaderProgram mProgram;
    private int mRenderMode;
    private java.lang.String mRenderModeString;
    private android.filterfw.core.GLFrame mScreen;
    private int mScreenHeight;
    private int mScreenWidth;
    private android.view.Surface mSurface;
    private int mSurfaceId;

    public void <init>(java.lang.String)
    {
        android.filterpacks.ui.SurfaceTargetFilter r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: android.filterpacks.ui.SurfaceTargetFilter;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<android.filterfw.core.Filter: void <init>(java.lang.String)>(r1);

        r0.<android.filterpacks.ui.SurfaceTargetFilter: int RENDERMODE_STRETCH> = 0;

        r0.<android.filterpacks.ui.SurfaceTargetFilter: int RENDERMODE_FIT> = 1;

        r0.<android.filterpacks.ui.SurfaceTargetFilter: int RENDERMODE_FILL_CROP> = 2;

        r0.<android.filterpacks.ui.SurfaceTargetFilter: int mRenderMode> = 1;

        r0.<android.filterpacks.ui.SurfaceTargetFilter: float mAspectRatio> = 1.0F;

        r0.<android.filterpacks.ui.SurfaceTargetFilter: int mSurfaceId> = -1;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("SurfaceRenderFilter", 2);

        r0.<android.filterpacks.ui.SurfaceTargetFilter: boolean mLogVerbose> = $z0;

        return;
    }

    private void registerSurface()
    {
        android.filterpacks.ui.SurfaceTargetFilter r0;
        int i0;
        android.view.Surface $r2, $r6;
        android.filterfw.core.GLEnvironment $r3;
        java.lang.StringBuilder $r4;
        java.lang.RuntimeException $r8;
        java.lang.String $r9;

        r0 := @this: android.filterpacks.ui.SurfaceTargetFilter;

        $r3 = r0.<android.filterpacks.ui.SurfaceTargetFilter: android.filterfw.core.GLEnvironment mGlEnv>;

        $r2 = r0.<android.filterpacks.ui.SurfaceTargetFilter: android.view.Surface mSurface>;

        i0 = virtualinvoke $r3.<android.filterfw.core.GLEnvironment: int registerSurface(android.view.Surface)>($r2);

        r0.<android.filterpacks.ui.SurfaceTargetFilter: int mSurfaceId> = i0;

        if i0 < 0 goto label1;

        return;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not register Surface: ");

        $r6 = r0.<android.filterpacks.ui.SurfaceTargetFilter: android.view.Surface mSurface>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = new java.lang.RuntimeException;

        $r9 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>($r9);

        throw $r8;
    }

    private void unregisterSurface()
    {
        android.filterpacks.ui.SurfaceTargetFilter r0;
        int i0;
        android.filterfw.core.GLEnvironment $r1;

        r0 := @this: android.filterpacks.ui.SurfaceTargetFilter;

        i0 = r0.<android.filterpacks.ui.SurfaceTargetFilter: int mSurfaceId>;

        if i0 <= 0 goto label1;

        $r1 = r0.<android.filterpacks.ui.SurfaceTargetFilter: android.filterfw.core.GLEnvironment mGlEnv>;

        virtualinvoke $r1.<android.filterfw.core.GLEnvironment: void unregisterSurfaceId(int)>(i0);

     label1:
        return;
    }

    private void updateTargetRect()
    {
        android.filterpacks.ui.SurfaceTargetFilter r0;
        int i0, i3, i4;
        android.filterfw.core.ShaderProgram r1;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14;
        byte $b1, $b2;

        r0 := @this: android.filterpacks.ui.SurfaceTargetFilter;

        i3 = r0.<android.filterpacks.ui.SurfaceTargetFilter: int mScreenWidth>;

        if i3 <= 0 goto label6;

        i0 = r0.<android.filterpacks.ui.SurfaceTargetFilter: int mScreenHeight>;

        if i0 <= 0 goto label6;

        r1 = r0.<android.filterpacks.ui.SurfaceTargetFilter: android.filterfw.core.ShaderProgram mProgram>;

        if r1 == null goto label6;

        $f2 = (float) i3;

        $f1 = (float) i0;

        $f4 = $f2 / $f1;

        $f3 = r0.<android.filterpacks.ui.SurfaceTargetFilter: float mAspectRatio>;

        f0 = $f4 / $f3;

        i4 = r0.<android.filterpacks.ui.SurfaceTargetFilter: int mRenderMode>;

        if i4 == 0 goto label5;

        if i4 == 1 goto label3;

        if i4 == 2 goto label1;

        goto label6;

     label1:
        $b2 = f0 cmpl 1.0F;

        if $b2 <= 0 goto label2;

        $f13 = f0 * 0.5F;

        $f14 = 0.5F - $f13;

        virtualinvoke r1.<android.filterfw.core.ShaderProgram: void setTargetRect(float,float,float,float)>(0.0F, $f14, 1.0F, f0);

        goto label6;

     label2:
        $f10 = 0.5F / f0;

        $f12 = 0.5F - $f10;

        $f11 = 1.0F / f0;

        virtualinvoke r1.<android.filterfw.core.ShaderProgram: void setTargetRect(float,float,float,float)>($f12, 0.0F, $f11, 1.0F);

        goto label6;

     label3:
        $b1 = f0 cmpl 1.0F;

        if $b1 <= 0 goto label4;

        $f7 = 0.5F / f0;

        $f9 = 0.5F - $f7;

        $f8 = 1.0F / f0;

        virtualinvoke r1.<android.filterfw.core.ShaderProgram: void setTargetRect(float,float,float,float)>($f9, 0.0F, $f8, 1.0F);

        goto label6;

     label4:
        $f5 = f0 * 0.5F;

        $f6 = 0.5F - $f5;

        virtualinvoke r1.<android.filterfw.core.ShaderProgram: void setTargetRect(float,float,float,float)>(0.0F, $f6, 1.0F, f0);

        goto label6;

     label5:
        virtualinvoke r1.<android.filterfw.core.ShaderProgram: void setTargetRect(float,float,float,float)>(0.0F, 0.0F, 1.0F, 1.0F);

     label6:
        return;
    }

    public void close(android.filterfw.core.FilterContext)
    {
        android.filterpacks.ui.SurfaceTargetFilter r0;
        android.filterfw.core.FilterContext r1;

        r0 := @this: android.filterpacks.ui.SurfaceTargetFilter;

        r1 := @parameter0: android.filterfw.core.FilterContext;

        specialinvoke r0.<android.filterpacks.ui.SurfaceTargetFilter: void unregisterSurface()>();

        return;
    }

    public void fieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)
    {
        android.filterpacks.ui.SurfaceTargetFilter r0;
        java.lang.String r1;
        android.filterfw.core.FilterContext r2;
        int $i0, $i1;
        android.filterfw.core.GLFrame $r3;

        r0 := @this: android.filterpacks.ui.SurfaceTargetFilter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.filterfw.core.FilterContext;

        $r3 = r0.<android.filterpacks.ui.SurfaceTargetFilter: android.filterfw.core.GLFrame mScreen>;

        $i1 = r0.<android.filterpacks.ui.SurfaceTargetFilter: int mScreenWidth>;

        $i0 = r0.<android.filterpacks.ui.SurfaceTargetFilter: int mScreenHeight>;

        virtualinvoke $r3.<android.filterfw.core.GLFrame: void setViewport(int,int,int,int)>(0, 0, $i1, $i0);

        specialinvoke r0.<android.filterpacks.ui.SurfaceTargetFilter: void updateTargetRect()>();

        return;
    }

    public void open(android.filterfw.core.FilterContext)
    {
        android.filterpacks.ui.SurfaceTargetFilter r0;
        android.filterfw.core.FilterContext r1;

        r0 := @this: android.filterpacks.ui.SurfaceTargetFilter;

        r1 := @parameter0: android.filterfw.core.FilterContext;

        specialinvoke r0.<android.filterpacks.ui.SurfaceTargetFilter: void registerSurface()>();

        return;
    }

    public void prepare(android.filterfw.core.FilterContext)
    {
        android.filterpacks.ui.SurfaceTargetFilter r0;
        android.filterfw.core.FilterContext r1;
        android.filterfw.core.GLEnvironment $r2;
        android.filterfw.core.ShaderProgram $r3, $r4, r8;
        int $i0, $i1;
        android.filterfw.core.FrameManager $r5;
        android.filterfw.core.Frame $r6;
        android.filterfw.core.GLFrame $r7;
        android.filterfw.core.MutableFrameFormat r9;

        r0 := @this: android.filterpacks.ui.SurfaceTargetFilter;

        r1 := @parameter0: android.filterfw.core.FilterContext;

        $r2 = virtualinvoke r1.<android.filterfw.core.FilterContext: android.filterfw.core.GLEnvironment getGLEnvironment()>();

        r0.<android.filterpacks.ui.SurfaceTargetFilter: android.filterfw.core.GLEnvironment mGlEnv> = $r2;

        r8 = staticinvoke <android.filterfw.core.ShaderProgram: android.filterfw.core.ShaderProgram createIdentity(android.filterfw.core.FilterContext)>(r1);

        r0.<android.filterpacks.ui.SurfaceTargetFilter: android.filterfw.core.ShaderProgram mProgram> = r8;

        virtualinvoke r8.<android.filterfw.core.ShaderProgram: void setSourceRect(float,float,float,float)>(0.0F, 1.0F, 1.0F, -1.0F);

        $r3 = r0.<android.filterpacks.ui.SurfaceTargetFilter: android.filterfw.core.ShaderProgram mProgram>;

        virtualinvoke $r3.<android.filterfw.core.ShaderProgram: void setClearsOutput(boolean)>(1);

        $r4 = r0.<android.filterpacks.ui.SurfaceTargetFilter: android.filterfw.core.ShaderProgram mProgram>;

        virtualinvoke $r4.<android.filterfw.core.ShaderProgram: void setClearColor(float,float,float)>(0.0F, 0.0F, 0.0F);

        $i1 = r0.<android.filterpacks.ui.SurfaceTargetFilter: int mScreenWidth>;

        $i0 = r0.<android.filterpacks.ui.SurfaceTargetFilter: int mScreenHeight>;

        r9 = staticinvoke <android.filterfw.format.ImageFormat: android.filterfw.core.MutableFrameFormat create(int,int,int,int)>($i1, $i0, 3, 3);

        $r5 = virtualinvoke r1.<android.filterfw.core.FilterContext: android.filterfw.core.FrameManager getFrameManager()>();

        $r6 = virtualinvoke $r5.<android.filterfw.core.FrameManager: android.filterfw.core.Frame newBoundFrame(android.filterfw.core.FrameFormat,int,long)>(r9, 101, 0L);

        $r7 = (android.filterfw.core.GLFrame) $r6;

        r0.<android.filterpacks.ui.SurfaceTargetFilter: android.filterfw.core.GLFrame mScreen> = $r7;

        virtualinvoke r0.<android.filterpacks.ui.SurfaceTargetFilter: void updateRenderMode()>();

        return;
    }

    public void process(android.filterfw.core.FilterContext)
    {
        android.filterpacks.ui.SurfaceTargetFilter r0;
        android.filterfw.core.Frame r1, r25;
        float f0, $f1, $f2, $f3, $f4;
        boolean $z0, $z1, z2, $z3;
        android.filterfw.core.FrameFormat $r2, $r3, $r4, $r13;
        int $i0, $i1, $i3, $i4;
        byte $b2;
        android.filterfw.core.GLEnvironment $r5, $r8;
        android.filterfw.core.GLFrame $r6;
        android.filterfw.core.ShaderProgram $r7;
        android.filterfw.core.FrameManager $r10;
        java.lang.StringBuilder $r11, $r16;
        java.lang.String $r15, $r21;
        android.filterfw.core.FilterContext r22;

        r0 := @this: android.filterpacks.ui.SurfaceTargetFilter;

        r22 := @parameter0: android.filterfw.core.FilterContext;

        $z0 = r0.<android.filterpacks.ui.SurfaceTargetFilter: boolean mLogVerbose>;

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("SurfaceRenderFilter", "Starting frame processing");

     label1:
        r1 = virtualinvoke r0.<android.filterpacks.ui.SurfaceTargetFilter: android.filterfw.core.Frame pullInput(java.lang.String)>("frame");

        z2 = 0;

        $r2 = virtualinvoke r1.<android.filterfw.core.Frame: android.filterfw.core.FrameFormat getFormat()>();

        $i0 = virtualinvoke $r2.<android.filterfw.core.FrameFormat: int getWidth()>();

        $f1 = (float) $i0;

        $r3 = virtualinvoke r1.<android.filterfw.core.Frame: android.filterfw.core.FrameFormat getFormat()>();

        $i1 = virtualinvoke $r3.<android.filterfw.core.FrameFormat: int getHeight()>();

        $f2 = (float) $i1;

        f0 = $f1 / $f2;

        $f3 = r0.<android.filterpacks.ui.SurfaceTargetFilter: float mAspectRatio>;

        $b2 = f0 cmpl $f3;

        if $b2 == 0 goto label3;

        $z1 = r0.<android.filterpacks.ui.SurfaceTargetFilter: boolean mLogVerbose>;

        if $z1 == 0 goto label2;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("New aspect ratio: ");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f0);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", previously: ");

        $f4 = r0.<android.filterpacks.ui.SurfaceTargetFilter: float mAspectRatio>;

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f4);

        $r21 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("SurfaceRenderFilter", $r21);

     label2:
        r0.<android.filterpacks.ui.SurfaceTargetFilter: float mAspectRatio> = f0;

        specialinvoke r0.<android.filterpacks.ui.SurfaceTargetFilter: void updateTargetRect()>();

     label3:
        $z3 = r0.<android.filterpacks.ui.SurfaceTargetFilter: boolean mLogVerbose>;

        if $z3 == 0 goto label4;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got input format: ");

        $r13 = virtualinvoke r1.<android.filterfw.core.Frame: android.filterfw.core.FrameFormat getFormat()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r15 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("SurfaceRenderFilter", $r15);

     label4:
        $r4 = virtualinvoke r1.<android.filterfw.core.Frame: android.filterfw.core.FrameFormat getFormat()>();

        $i3 = virtualinvoke $r4.<android.filterfw.core.FrameFormat: int getTarget()>();

        if $i3 == 3 goto label5;

        $r10 = virtualinvoke r22.<android.filterfw.core.FilterContext: android.filterfw.core.FrameManager getFrameManager()>();

        r25 = virtualinvoke $r10.<android.filterfw.core.FrameManager: android.filterfw.core.Frame duplicateFrameToTarget(android.filterfw.core.Frame,int)>(r1, 3);

        z2 = 1;

        goto label6;

     label5:
        r25 = r1;

     label6:
        $r5 = r0.<android.filterpacks.ui.SurfaceTargetFilter: android.filterfw.core.GLEnvironment mGlEnv>;

        $i4 = r0.<android.filterpacks.ui.SurfaceTargetFilter: int mSurfaceId>;

        virtualinvoke $r5.<android.filterfw.core.GLEnvironment: void activateSurfaceWithId(int)>($i4);

        $r7 = r0.<android.filterpacks.ui.SurfaceTargetFilter: android.filterfw.core.ShaderProgram mProgram>;

        $r6 = r0.<android.filterpacks.ui.SurfaceTargetFilter: android.filterfw.core.GLFrame mScreen>;

        virtualinvoke $r7.<android.filterfw.core.ShaderProgram: void process(android.filterfw.core.Frame,android.filterfw.core.Frame)>(r25, $r6);

        $r8 = r0.<android.filterpacks.ui.SurfaceTargetFilter: android.filterfw.core.GLEnvironment mGlEnv>;

        virtualinvoke $r8.<android.filterfw.core.GLEnvironment: void swapBuffers()>();

        if z2 == 0 goto label7;

        virtualinvoke r25.<android.filterfw.core.Frame: android.filterfw.core.Frame release()>();

     label7:
        return;
    }

    public void setupPorts()
    {
        android.filterpacks.ui.SurfaceTargetFilter r0;
        android.view.Surface $r1;
        java.lang.RuntimeException $r2;
        android.filterfw.core.MutableFrameFormat $r3;

        r0 := @this: android.filterpacks.ui.SurfaceTargetFilter;

        $r1 = r0.<android.filterpacks.ui.SurfaceTargetFilter: android.view.Surface mSurface>;

        if $r1 == null goto label1;

        $r3 = staticinvoke <android.filterfw.format.ImageFormat: android.filterfw.core.MutableFrameFormat create(int)>(3);

        virtualinvoke r0.<android.filterpacks.ui.SurfaceTargetFilter: void addMaskedInputPort(java.lang.String,android.filterfw.core.FrameFormat)>("frame", $r3);

        return;

     label1:
        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("NULL Surface passed to SurfaceTargetFilter");

        throw $r2;
    }

    public void tearDown(android.filterfw.core.FilterContext)
    {
        android.filterpacks.ui.SurfaceTargetFilter r0;
        android.filterfw.core.FilterContext r2;
        android.filterfw.core.GLFrame r3;

        r0 := @this: android.filterpacks.ui.SurfaceTargetFilter;

        r2 := @parameter0: android.filterfw.core.FilterContext;

        r3 = r0.<android.filterpacks.ui.SurfaceTargetFilter: android.filterfw.core.GLFrame mScreen>;

        if r3 == null goto label1;

        virtualinvoke r3.<android.filterfw.core.GLFrame: android.filterfw.core.Frame release()>();

     label1:
        return;
    }

    public void updateRenderMode()
    {
        android.filterpacks.ui.SurfaceTargetFilter r0;
        boolean $z0, $z1, $z2;
        java.lang.String $r1, $r2, $r5, $r9, r10;
        java.lang.StringBuilder $r3;
        java.lang.RuntimeException $r8;

        r0 := @this: android.filterpacks.ui.SurfaceTargetFilter;

        r10 = r0.<android.filterpacks.ui.SurfaceTargetFilter: java.lang.String mRenderModeString>;

        if r10 == null goto label4;

        $z0 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>("stretch");

        if $z0 == 0 goto label1;

        r0.<android.filterpacks.ui.SurfaceTargetFilter: int mRenderMode> = 0;

        goto label4;

     label1:
        $r1 = r0.<android.filterpacks.ui.SurfaceTargetFilter: java.lang.String mRenderModeString>;

        $z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("fit");

        if $z1 == 0 goto label2;

        r0.<android.filterpacks.ui.SurfaceTargetFilter: int mRenderMode> = 1;

        goto label4;

     label2:
        $r2 = r0.<android.filterpacks.ui.SurfaceTargetFilter: java.lang.String mRenderModeString>;

        $z2 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("fill_crop");

        if $z2 == 0 goto label3;

        r0.<android.filterpacks.ui.SurfaceTargetFilter: int mRenderMode> = 2;

        goto label4;

     label3:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown render mode \'");

        $r5 = r0.<android.filterpacks.ui.SurfaceTargetFilter: java.lang.String mRenderModeString>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'!");

        $r8 = new java.lang.RuntimeException;

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>($r9);

        throw $r8;

     label4:
        specialinvoke r0.<android.filterpacks.ui.SurfaceTargetFilter: void updateTargetRect()>();

        return;
    }

    public static void <clinit>()
    {
        <android.filterpacks.ui.SurfaceTargetFilter: java.lang.String TAG> = "SurfaceRenderFilter";

        return;
    }
}
