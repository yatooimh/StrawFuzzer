class android.filterpacks.videosrc.MediaSource$2 extends java.lang.Object implements android.media.MediaPlayer$OnPreparedListener
{
    final android.filterpacks.videosrc.MediaSource this$0;

    void <init>(android.filterpacks.videosrc.MediaSource)
    {
        android.filterpacks.videosrc.MediaSource$2 r0;
        android.filterpacks.videosrc.MediaSource r1;

        r0 := @this: android.filterpacks.videosrc.MediaSource$2;

        r1 := @parameter0: android.filterpacks.videosrc.MediaSource;

        r0.<android.filterpacks.videosrc.MediaSource$2: android.filterpacks.videosrc.MediaSource this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onPrepared(android.media.MediaPlayer)
    {
        android.filterpacks.videosrc.MediaSource$2 r0;
        android.filterpacks.videosrc.MediaSource r1, $r2, $r3, $r4;
        boolean $z0;
        java.lang.Throwable $r5;
        android.media.MediaPlayer r6;

        r0 := @this: android.filterpacks.videosrc.MediaSource$2;

        r6 := @parameter0: android.media.MediaPlayer;

        $r2 = r0.<android.filterpacks.videosrc.MediaSource$2: android.filterpacks.videosrc.MediaSource this$0>;

        $z0 = staticinvoke <android.filterpacks.videosrc.MediaSource: boolean access$000(android.filterpacks.videosrc.MediaSource)>($r2);

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("MediaSource", "MediaPlayer is prepared");

     label1:
        r1 = r0.<android.filterpacks.videosrc.MediaSource$2: android.filterpacks.videosrc.MediaSource this$0>;

        entermonitor r1;

     label2:
        $r3 = r0.<android.filterpacks.videosrc.MediaSource$2: android.filterpacks.videosrc.MediaSource this$0>;

        staticinvoke <android.filterpacks.videosrc.MediaSource: boolean access$602(android.filterpacks.videosrc.MediaSource,boolean)>($r3, 1);

        $r4 = r0.<android.filterpacks.videosrc.MediaSource$2: android.filterpacks.videosrc.MediaSource this$0>;

        virtualinvoke $r4.<java.lang.Object: void notify()>();

        exitmonitor r1;

     label3:
        return;

     label4:
        $r5 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r5;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }
}
