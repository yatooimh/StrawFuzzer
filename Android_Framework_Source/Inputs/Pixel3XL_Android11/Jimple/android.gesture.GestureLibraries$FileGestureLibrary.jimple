class android.gesture.GestureLibraries$FileGestureLibrary extends android.gesture.GestureLibrary
{
    private final java.io.FileDescriptor mFd;
    private final java.io.File mPath;

    public void <init>(java.io.File)
    {
        android.gesture.GestureLibraries$FileGestureLibrary r0;
        java.io.File r1;

        r0 := @this: android.gesture.GestureLibraries$FileGestureLibrary;

        r1 := @parameter0: java.io.File;

        specialinvoke r0.<android.gesture.GestureLibrary: void <init>()>();

        r0.<android.gesture.GestureLibraries$FileGestureLibrary: java.io.File mPath> = r1;

        r0.<android.gesture.GestureLibraries$FileGestureLibrary: java.io.FileDescriptor mFd> = null;

        return;
    }

    public void <init>(java.io.FileDescriptor)
    {
        android.gesture.GestureLibraries$FileGestureLibrary r0;
        java.io.FileDescriptor r1;

        r0 := @this: android.gesture.GestureLibraries$FileGestureLibrary;

        r1 := @parameter0: java.io.FileDescriptor;

        specialinvoke r0.<android.gesture.GestureLibrary: void <init>()>();

        r0.<android.gesture.GestureLibraries$FileGestureLibrary: java.io.File mPath> = null;

        r0.<android.gesture.GestureLibraries$FileGestureLibrary: java.io.FileDescriptor mFd> = r1;

        return;
    }

    public boolean isReadOnly()
    {
        android.gesture.GestureLibraries$FileGestureLibrary r0;
        java.io.File r1;
        boolean $z0, $z1;

        r0 := @this: android.gesture.GestureLibraries$FileGestureLibrary;

        r1 = r0.<android.gesture.GestureLibraries$FileGestureLibrary: java.io.File mPath>;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<java.io.File: boolean canWrite()>();

        $z1 = $z0 ^ 1;

        return $z1;

     label1:
        return 0;
    }

    public boolean load()
    {
        android.gesture.GestureLibraries$FileGestureLibrary r0;
        java.io.FileInputStream r1, r16;
        java.io.File $r2, $r7, r11;
        java.io.FileDescriptor $r3;
        boolean $z1, $z2, z3;
        java.lang.Throwable $r4, $r10;
        java.lang.StringBuilder $r5;
        java.lang.String $r9;
        android.gesture.GestureStore r12, r15;

        r0 := @this: android.gesture.GestureLibraries$FileGestureLibrary;

        z3 = 0;

        $r2 = r0.<android.gesture.GestureLibraries$FileGestureLibrary: java.io.File mPath>;

        if $r2 == null goto label5;

        r11 = r0.<android.gesture.GestureLibraries$FileGestureLibrary: java.io.File mPath>;

        z3 = 0;

        $z1 = virtualinvoke r11.<java.io.File: boolean exists()>();

        if $z1 == 0 goto label4;

        z3 = 0;

        $z2 = virtualinvoke r11.<java.io.File: boolean canRead()>();

        if $z2 == 0 goto label4;

     label1:
        r12 = r0.<android.gesture.GestureLibraries$FileGestureLibrary: android.gesture.GestureStore mStore>;

        r1 = new java.io.FileInputStream;

        specialinvoke r1.<java.io.FileInputStream: void <init>(java.io.File)>(r11);

        virtualinvoke r12.<android.gesture.GestureStore: void load(java.io.InputStream,boolean)>(r1, 1);

     label2:
        z3 = 1;

        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not load the gesture library from ");

        $r7 = r0.<android.gesture.GestureLibraries$FileGestureLibrary: java.io.File mPath>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("Gestures", $r9, $r4);

        z3 = 0;

     label4:
        goto label8;

     label5:
        r15 = r0.<android.gesture.GestureLibraries$FileGestureLibrary: android.gesture.GestureStore mStore>;

        r16 = new java.io.FileInputStream;

        $r3 = r0.<android.gesture.GestureLibraries$FileGestureLibrary: java.io.FileDescriptor mFd>;

        specialinvoke r16.<java.io.FileInputStream: void <init>(java.io.FileDescriptor)>($r3);

        virtualinvoke r15.<android.gesture.GestureStore: void load(java.io.InputStream,boolean)>(r16, 1);

     label6:
        z3 = 1;

        goto label8;

     label7:
        $r10 := @caughtexception;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("Gestures", "Could not load the gesture library", $r10);

     label8:
        return z3;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.io.IOException from label5 to label6 with label7;
    }

    public boolean save()
    {
        android.gesture.GestureLibraries$FileGestureLibrary r0;
        java.io.FileOutputStream r1, r18;
        android.gesture.GestureStore $r2, r14, r17;
        boolean $z1, $z2, $z4, z5;
        java.io.File $r3, $r8, r12, r13;
        java.io.FileDescriptor $r4;
        java.lang.Throwable $r5, $r11;
        java.lang.StringBuilder $r6;
        java.lang.String $r10;

        r0 := @this: android.gesture.GestureLibraries$FileGestureLibrary;

        $r2 = r0.<android.gesture.GestureLibraries$FileGestureLibrary: android.gesture.GestureStore mStore>;

        $z1 = virtualinvoke $r2.<android.gesture.GestureStore: boolean hasChanged()>();

        if $z1 != 0 goto label1;

        return 1;

     label1:
        z5 = 0;

        $r3 = r0.<android.gesture.GestureLibraries$FileGestureLibrary: java.io.File mPath>;

        if $r3 == null goto label6;

        r12 = r0.<android.gesture.GestureLibraries$FileGestureLibrary: java.io.File mPath>;

        r13 = virtualinvoke r12.<java.io.File: java.io.File getParentFile()>();

        $z2 = virtualinvoke r13.<java.io.File: boolean exists()>();

        if $z2 != 0 goto label2;

        $z4 = virtualinvoke r13.<java.io.File: boolean mkdirs()>();

        if $z4 != 0 goto label2;

        return 0;

     label2:
        virtualinvoke r12.<java.io.File: boolean createNewFile()>();

        r14 = r0.<android.gesture.GestureLibraries$FileGestureLibrary: android.gesture.GestureStore mStore>;

        r1 = new java.io.FileOutputStream;

        specialinvoke r1.<java.io.FileOutputStream: void <init>(java.io.File)>(r12);

        virtualinvoke r14.<android.gesture.GestureStore: void save(java.io.OutputStream,boolean)>(r1, 1);

     label3:
        z5 = 1;

        goto label5;

     label4:
        $r5 := @caughtexception;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not save the gesture library in ");

        $r8 = r0.<android.gesture.GestureLibraries$FileGestureLibrary: java.io.File mPath>;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("Gestures", $r10, $r5);

     label5:
        goto label9;

     label6:
        r17 = r0.<android.gesture.GestureLibraries$FileGestureLibrary: android.gesture.GestureStore mStore>;

        r18 = new java.io.FileOutputStream;

        $r4 = r0.<android.gesture.GestureLibraries$FileGestureLibrary: java.io.FileDescriptor mFd>;

        specialinvoke r18.<java.io.FileOutputStream: void <init>(java.io.FileDescriptor)>($r4);

        virtualinvoke r17.<android.gesture.GestureStore: void save(java.io.OutputStream,boolean)>(r18, 1);

     label7:
        z5 = 1;

        goto label9;

     label8:
        $r11 := @caughtexception;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("Gestures", "Could not save the gesture library", $r11);

        z5 = 0;

     label9:
        return z5;

        catch java.io.IOException from label2 to label3 with label4;
        catch java.io.IOException from label6 to label7 with label8;
    }
}
