class android.gesture.Instance extends java.lang.Object
{
    private static final float[] ORIENTATIONS;
    private static final int PATCH_SAMPLE_SIZE;
    private static final int SEQUENCE_SAMPLE_SIZE;
    final long id;
    final java.lang.String label;
    final float[] vector;

    static void <clinit>()
    {
        float[] $r0;

        <android.gesture.Instance: int SEQUENCE_SAMPLE_SIZE> = 16;

        <android.gesture.Instance: int PATCH_SAMPLE_SIZE> = 16;

        $r0 = newarray (float)[10];

        $r0[0] = 0.0F;

        $r0[1] = 0.7853982F;

        $r0[2] = 1.5707964F;

        $r0[3] = 2.3561945F;

        $r0[4] = 3.1415927F;

        $r0[5] = 0.0F;

        $r0[6] = -0.7853982F;

        $r0[7] = -1.5707964F;

        $r0[8] = -2.3561945F;

        $r0[9] = -3.1415927F;

        <android.gesture.Instance: float[] ORIENTATIONS> = $r0;

        return;
    }

    private void <init>(long, float[], java.lang.String)
    {
        android.gesture.Instance r0;
        long l0;
        float[] r1;
        java.lang.String r2;

        r0 := @this: android.gesture.Instance;

        l0 := @parameter0: long;

        r1 := @parameter1: float[];

        r2 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.gesture.Instance: long id> = l0;

        r0.<android.gesture.Instance: float[] vector> = r1;

        r0.<android.gesture.Instance: java.lang.String label> = r2;

        return;
    }

    static android.gesture.Instance createInstance(int, int, android.gesture.Gesture, java.lang.String)
    {
        int i0, i1;
        java.lang.String r0;
        android.gesture.Instance $r1, $r2, r5;
        long $l2, $l3;
        android.gesture.Gesture r3;
        float[] r4, r6;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r3 := @parameter2: android.gesture.Gesture;

        r0 := @parameter3: java.lang.String;

        if i0 != 2 goto label1;

        r4 = staticinvoke <android.gesture.Instance: float[] temporalSampler(int,android.gesture.Gesture)>(i1, r3);

        $r2 = new android.gesture.Instance;

        $l3 = virtualinvoke r3.<android.gesture.Gesture: long getID()>();

        specialinvoke $r2.<android.gesture.Instance: void <init>(long,float[],java.lang.String)>($l3, r4, r0);

        r5 = $r2;

        specialinvoke $r2.<android.gesture.Instance: void normalize()>();

        goto label2;

     label1:
        r6 = staticinvoke <android.gesture.Instance: float[] spatialSampler(android.gesture.Gesture)>(r3);

        $r1 = new android.gesture.Instance;

        $l2 = virtualinvoke r3.<android.gesture.Gesture: long getID()>();

        specialinvoke $r1.<android.gesture.Instance: void <init>(long,float[],java.lang.String)>($l2, r6, r0);

        r5 = $r1;

     label2:
        return r5;
    }

    private void normalize()
    {
        android.gesture.Instance r0;
        float[] r1;
        int i0, i1, i2;
        double $d0, $d1;
        float $f0, $f1, $f2, $f3, $f4, f5, f6;

        r0 := @this: android.gesture.Instance;

        r1 = r0.<android.gesture.Instance: float[] vector>;

        f5 = 0.0F;

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $f3 = r1[i1];

        $f2 = r1[i1];

        $f4 = $f3 * $f2;

        f5 = f5 + $f4;

        i1 = i1 + 1;

        goto label1;

     label2:
        $d0 = (double) f5;

        $d1 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        f6 = (float) $d1;

        i2 = 0;

     label3:
        if i2 >= i0 goto label4;

        $f0 = r1[i2];

        $f1 = $f0 / f6;

        r1[i2] = $f1;

        i2 = i2 + 1;

        goto label3;

     label4:
        return;
    }

    private static float[] spatialSampler(android.gesture.Gesture)
    {
        android.gesture.Gesture r0;
        float[] $r1;

        r0 := @parameter0: android.gesture.Gesture;

        $r1 = staticinvoke <android.gesture.GestureUtils: float[] spatialSampling(android.gesture.Gesture,int,boolean)>(r0, 16, 0);

        return $r1;
    }

    private static float[] temporalSampler(int, android.gesture.Gesture)
    {
        float[] r0, $r6, $r7, r9;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, f15, f16, f17;
        int i0, i2, i3;
        java.util.ArrayList $r1;
        java.lang.Object $r2;
        android.gesture.GestureStroke $r3;
        double $d0, $d1, $d2;
        byte $b1;
        android.gesture.Gesture r8;

        i2 := @parameter0: int;

        r8 := @parameter1: android.gesture.Gesture;

        $r1 = virtualinvoke r8.<android.gesture.Gesture: java.util.ArrayList getStrokes()>();

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r3 = (android.gesture.GestureStroke) $r2;

        r9 = staticinvoke <android.gesture.GestureUtils: float[] temporalSampling(android.gesture.GestureStroke,int)>($r3, 16);

        r0 = staticinvoke <android.gesture.GestureUtils: float[] computeCentroid(float[])>(r9);

        $f3 = r9[1];

        $f2 = r0[1];

        $f4 = $f3 - $f2;

        $d1 = (double) $f4;

        $f6 = r9[0];

        $f5 = r0[0];

        $f7 = $f6 - $f5;

        $d0 = (double) $f7;

        $d2 = staticinvoke <java.lang.Math: double atan2(double,double)>($d1, $d0);

        f0 = (float) $d2;

        f15 = neg f0;

        f16 = f15;

        if i2 == 1 goto label3;

        $r6 = <android.gesture.Instance: float[] ORIENTATIONS>;

        i0 = lengthof $r6;

        i3 = 0;

     label1:
        f16 = f15;

        if i3 >= i0 goto label3;

        $r7 = <android.gesture.Instance: float[] ORIENTATIONS>;

        $f12 = $r7[i3];

        f1 = $f12 - f0;

        f17 = f15;

        $f13 = staticinvoke <java.lang.Math: float abs(float)>(f1);

        $f14 = staticinvoke <java.lang.Math: float abs(float)>(f15);

        $b1 = $f13 cmpg $f14;

        if $b1 >= 0 goto label2;

        f17 = f1;

     label2:
        i3 = i3 + 1;

        f15 = f17;

        goto label1;

     label3:
        $f8 = r0[0];

        $f11 = neg $f8;

        $f9 = r0[1];

        $f10 = neg $f9;

        staticinvoke <android.gesture.GestureUtils: float[] translate(float[],float,float)>(r9, $f11, $f10);

        staticinvoke <android.gesture.GestureUtils: float[] rotate(float[],float)>(r9, f16);

        return r9;
    }
}
