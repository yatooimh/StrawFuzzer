public class android.graphics.BaseRecordingCanvas extends android.graphics.Canvas
{

    public void <init>(long)
    {
        android.graphics.BaseRecordingCanvas r0;
        long l0;

        r0 := @this: android.graphics.BaseRecordingCanvas;

        l0 := @parameter0: long;

        specialinvoke r0.<android.graphics.Canvas: void <init>(long)>(l0);

        return;
    }

    private static native void nDrawArc(long, float, float, float, float, float, float, boolean, long);

    private static native void nDrawBitmap(long, long, float, float, float, float, float, float, float, float, long, int, int);

    private static native void nDrawBitmap(long, long, float, float, long, int, int, int);

    private static native void nDrawBitmap(long, int[], int, int, float, float, int, int, boolean, long);

    private static native void nDrawBitmapMatrix(long, long, long, long);

    private static native void nDrawBitmapMesh(long, long, int, int, float[], int, int[], int, long);

    private static native void nDrawCircle(long, float, float, float, long);

    private static native void nDrawColor(long, int, int);

    private static native void nDrawColor(long, long, long, int);

    private static native void nDrawDoubleRoundRect(long, float, float, float, float, float, float, float, float, float, float, float, float, long);

    private static native void nDrawDoubleRoundRect(long, float, float, float, float, float[], float, float, float, float, float[], long);

    private static native void nDrawLine(long, float, float, float, float, long);

    private static native void nDrawLines(long, float[], int, int, long);

    private static native void nDrawNinePatch(long, long, long, float, float, float, float, long, int, int);

    private static native void nDrawOval(long, float, float, float, float, long);

    private static native void nDrawPaint(long, long);

    private static native void nDrawPath(long, long, long);

    private static native void nDrawPoint(long, float, float, long);

    private static native void nDrawPoints(long, float[], int, int, long);

    private static native void nDrawRect(long, float, float, float, float, long);

    private static native void nDrawRegion(long, long, long);

    private static native void nDrawRoundRect(long, float, float, float, float, float, float, long);

    private static native void nDrawText(long, java.lang.String, int, int, float, float, int, long);

    private static native void nDrawText(long, char[], int, int, float, float, int, long);

    private static native void nDrawTextOnPath(long, java.lang.String, long, float, float, int, long);

    private static native void nDrawTextOnPath(long, char[], int, int, long, float, float, int, long);

    private static native void nDrawTextRun(long, java.lang.String, int, int, int, int, float, float, boolean, long);

    private static native void nDrawTextRun(long, char[], int, int, int, int, float, float, boolean, long, long);

    private static native void nDrawVertices(long, int, int, float[], int, float[], int, int[], int, short[], int, int, long);

    public final void drawARGB(int, int, int, int)
    {
        android.graphics.BaseRecordingCanvas r0;
        int i0, i1, i2, i3, $i4;

        r0 := @this: android.graphics.BaseRecordingCanvas;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $i4 = staticinvoke <android.graphics.Color: int argb(int,int,int,int)>(i0, i1, i2, i3);

        virtualinvoke r0.<android.graphics.BaseRecordingCanvas: void drawColor(int)>($i4);

        return;
    }

    public final void drawArc(float, float, float, float, float, float, boolean, android.graphics.Paint)
    {
        android.graphics.BaseRecordingCanvas r0;
        float f0, f1, f2, f3, f4, f5;
        boolean z0;
        android.graphics.Paint r1;
        long $l0, $l1;

        r0 := @this: android.graphics.BaseRecordingCanvas;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        f4 := @parameter4: float;

        f5 := @parameter5: float;

        z0 := @parameter6: boolean;

        r1 := @parameter7: android.graphics.Paint;

        $l0 = r0.<android.graphics.BaseRecordingCanvas: long mNativeCanvasWrapper>;

        $l1 = virtualinvoke r1.<android.graphics.Paint: long getNativeInstance()>();

        staticinvoke <android.graphics.BaseRecordingCanvas: void nDrawArc(long,float,float,float,float,float,float,boolean,long)>($l0, f0, f1, f2, f3, f4, f5, z0, $l1);

        return;
    }

    public final void drawArc(android.graphics.RectF, float, float, boolean, android.graphics.Paint)
    {
        android.graphics.BaseRecordingCanvas r0;
        android.graphics.RectF r1;
        float f0, f1, $f2, $f3, $f4, $f5;
        boolean z0;
        android.graphics.Paint r2;

        r0 := @this: android.graphics.BaseRecordingCanvas;

        r1 := @parameter0: android.graphics.RectF;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        z0 := @parameter3: boolean;

        r2 := @parameter4: android.graphics.Paint;

        $f5 = r1.<android.graphics.RectF: float left>;

        $f4 = r1.<android.graphics.RectF: float top>;

        $f3 = r1.<android.graphics.RectF: float right>;

        $f2 = r1.<android.graphics.RectF: float bottom>;

        virtualinvoke r0.<android.graphics.BaseRecordingCanvas: void drawArc(float,float,float,float,float,float,boolean,android.graphics.Paint)>($f5, $f4, $f3, $f2, f0, f1, z0, r2);

        return;
    }

    public final void drawBitmap(android.graphics.Bitmap, float, float, android.graphics.Paint)
    {
        android.graphics.BaseRecordingCanvas r0;
        android.graphics.Bitmap r1;
        float f0, f1;
        android.graphics.Paint r2;
        long l0, l1, l5;
        int $i2, $i3, $i4;

        r0 := @this: android.graphics.BaseRecordingCanvas;

        r1 := @parameter0: android.graphics.Bitmap;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        r2 := @parameter3: android.graphics.Paint;

        virtualinvoke r0.<android.graphics.BaseRecordingCanvas: void throwIfCannotDraw(android.graphics.Bitmap)>(r1);

        l0 = r0.<android.graphics.BaseRecordingCanvas: long mNativeCanvasWrapper>;

        l1 = virtualinvoke r1.<android.graphics.Bitmap: long getNativeInstance()>();

        if r2 == null goto label1;

        l5 = virtualinvoke r2.<android.graphics.Paint: long getNativeInstance()>();

        goto label2;

     label1:
        l5 = 0L;

     label2:
        $i4 = r0.<android.graphics.BaseRecordingCanvas: int mDensity>;

        $i3 = r0.<android.graphics.BaseRecordingCanvas: int mScreenDensity>;

        $i2 = r1.<android.graphics.Bitmap: int mDensity>;

        staticinvoke <android.graphics.BaseRecordingCanvas: void nDrawBitmap(long,long,float,float,long,int,int,int)>(l0, l1, f0, f1, l5, $i4, $i3, $i2);

        return;
    }

    public final void drawBitmap(android.graphics.Bitmap, android.graphics.Matrix, android.graphics.Paint)
    {
        android.graphics.BaseRecordingCanvas r0;
        android.graphics.Bitmap r1;
        android.graphics.Matrix r2;
        android.graphics.Paint r3;
        long l0, l1, l2, l3;

        r0 := @this: android.graphics.BaseRecordingCanvas;

        r1 := @parameter0: android.graphics.Bitmap;

        r2 := @parameter1: android.graphics.Matrix;

        r3 := @parameter2: android.graphics.Paint;

        l0 = r0.<android.graphics.BaseRecordingCanvas: long mNativeCanvasWrapper>;

        l1 = virtualinvoke r1.<android.graphics.Bitmap: long getNativeInstance()>();

        l2 = virtualinvoke r2.<android.graphics.Matrix: long ni()>();

        if r3 == null goto label1;

        l3 = virtualinvoke r3.<android.graphics.Paint: long getNativeInstance()>();

        goto label2;

     label1:
        l3 = 0L;

     label2:
        staticinvoke <android.graphics.BaseRecordingCanvas: void nDrawBitmapMatrix(long,long,long,long)>(l0, l1, l2, l3);

        return;
    }

    public final void drawBitmap(android.graphics.Bitmap, android.graphics.Rect, android.graphics.Rect, android.graphics.Paint)
    {
        android.graphics.BaseRecordingCanvas r0;
        android.graphics.Bitmap r1;
        android.graphics.Rect r2, r3;
        android.graphics.Paint r4;
        long $l0, $l1, l8;
        int $i2, $i3, $i4, $i5, $i6, $i7, i9, i10, i11, i12;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;

        r0 := @this: android.graphics.BaseRecordingCanvas;

        r1 := @parameter0: android.graphics.Bitmap;

        r2 := @parameter1: android.graphics.Rect;

        r3 := @parameter2: android.graphics.Rect;

        r4 := @parameter3: android.graphics.Paint;

        if r3 == null goto label5;

        virtualinvoke r0.<android.graphics.BaseRecordingCanvas: void throwIfCannotDraw(android.graphics.Bitmap)>(r1);

        if r4 != null goto label1;

        l8 = 0L;

        goto label2;

     label1:
        l8 = virtualinvoke r4.<android.graphics.Paint: long getNativeInstance()>();

     label2:
        if r2 != null goto label3;

        i9 = 0;

        i10 = 0;

        i11 = virtualinvoke r1.<android.graphics.Bitmap: int getWidth()>();

        i12 = virtualinvoke r1.<android.graphics.Bitmap: int getHeight()>();

        goto label4;

     label3:
        i9 = r2.<android.graphics.Rect: int left>;

        i11 = r2.<android.graphics.Rect: int right>;

        i10 = r2.<android.graphics.Rect: int top>;

        i12 = r2.<android.graphics.Rect: int bottom>;

     label4:
        $l0 = r0.<android.graphics.BaseRecordingCanvas: long mNativeCanvasWrapper>;

        $l1 = virtualinvoke r1.<android.graphics.Bitmap: long getNativeInstance()>();

        $f7 = (float) i9;

        $f6 = (float) i10;

        $f5 = (float) i11;

        $f4 = (float) i12;

        $i2 = r3.<android.graphics.Rect: int left>;

        $f3 = (float) $i2;

        $i3 = r3.<android.graphics.Rect: int top>;

        $f2 = (float) $i3;

        $i4 = r3.<android.graphics.Rect: int right>;

        $f1 = (float) $i4;

        $i5 = r3.<android.graphics.Rect: int bottom>;

        $f0 = (float) $i5;

        $i7 = r0.<android.graphics.BaseRecordingCanvas: int mScreenDensity>;

        $i6 = r1.<android.graphics.Bitmap: int mDensity>;

        staticinvoke <android.graphics.BaseRecordingCanvas: void nDrawBitmap(long,long,float,float,float,float,float,float,float,float,long,int,int)>($l0, $l1, $f7, $f6, $f5, $f4, $f3, $f2, $f1, $f0, l8, $i7, $i6);

        return;

     label5:
        throw null;
    }

    public final void drawBitmap(android.graphics.Bitmap, android.graphics.Rect, android.graphics.RectF, android.graphics.Paint)
    {
        android.graphics.BaseRecordingCanvas r0;
        android.graphics.Bitmap r1;
        android.graphics.Rect r2;
        android.graphics.RectF r3;
        android.graphics.Paint r4;
        float f0, $f1, $f2, $f3, $f4, f5, f6, f7, f8, f9;
        int $i0, $i1, $i2, $i3, $i6, $i7, $i8, $i9;
        long $l4, $l5, l10;

        r0 := @this: android.graphics.BaseRecordingCanvas;

        r1 := @parameter0: android.graphics.Bitmap;

        r2 := @parameter1: android.graphics.Rect;

        r3 := @parameter2: android.graphics.RectF;

        r4 := @parameter3: android.graphics.Paint;

        if r3 == null goto label5;

        virtualinvoke r0.<android.graphics.BaseRecordingCanvas: void throwIfCannotDraw(android.graphics.Bitmap)>(r1);

        if r4 != null goto label1;

        l10 = 0L;

        goto label2;

     label1:
        l10 = virtualinvoke r4.<android.graphics.Paint: long getNativeInstance()>();

     label2:
        if r2 != null goto label3;

        f5 = 0.0F;

        f6 = 0.0F;

        $i8 = virtualinvoke r1.<android.graphics.Bitmap: int getWidth()>();

        f7 = (float) $i8;

        $i9 = virtualinvoke r1.<android.graphics.Bitmap: int getHeight()>();

        f0 = (float) $i9;

        f8 = f7;

        f9 = f0;

        goto label4;

     label3:
        $i0 = r2.<android.graphics.Rect: int left>;

        f5 = (float) $i0;

        $i1 = r2.<android.graphics.Rect: int right>;

        f8 = (float) $i1;

        $i2 = r2.<android.graphics.Rect: int top>;

        f6 = (float) $i2;

        $i3 = r2.<android.graphics.Rect: int bottom>;

        f9 = (float) $i3;

     label4:
        $l4 = r0.<android.graphics.BaseRecordingCanvas: long mNativeCanvasWrapper>;

        $l5 = virtualinvoke r1.<android.graphics.Bitmap: long getNativeInstance()>();

        $f4 = r3.<android.graphics.RectF: float left>;

        $f3 = r3.<android.graphics.RectF: float top>;

        $f2 = r3.<android.graphics.RectF: float right>;

        $f1 = r3.<android.graphics.RectF: float bottom>;

        $i7 = r0.<android.graphics.BaseRecordingCanvas: int mScreenDensity>;

        $i6 = r1.<android.graphics.Bitmap: int mDensity>;

        staticinvoke <android.graphics.BaseRecordingCanvas: void nDrawBitmap(long,long,float,float,float,float,float,float,float,float,long,int,int)>($l4, $l5, f5, f6, f8, f9, $f4, $f3, $f2, $f1, l10, $i7, $i6);

        return;

     label5:
        throw null;
    }

    public final void drawBitmap(int[], int, int, float, float, int, int, boolean, android.graphics.Paint)
    {
        android.graphics.BaseRecordingCanvas r0;
        int[] r1;
        int i0, i1, i2, i3, i4, i5, $i7, $i8, $i9, $i10, $i11;
        float f0, f1;
        boolean z0;
        android.graphics.Paint r2;
        long l6, l12;
        java.lang.IllegalArgumentException $r3, $r4, $r5;
        java.lang.ArrayIndexOutOfBoundsException $r6;

        r0 := @this: android.graphics.BaseRecordingCanvas;

        r1 := @parameter0: int[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        f0 := @parameter3: float;

        f1 := @parameter4: float;

        i2 := @parameter5: int;

        i3 := @parameter6: int;

        z0 := @parameter7: boolean;

        r2 := @parameter8: android.graphics.Paint;

        if i2 < 0 goto label8;

        if i3 < 0 goto label7;

        $i7 = staticinvoke <java.lang.Math: int abs(int)>(i1);

        if $i7 < i2 goto label6;

        $i8 = i3 - 1;

        $i9 = $i8 * i1;

        i4 = i0 + $i9;

        i5 = lengthof r1;

        if i0 < 0 goto label5;

        $i10 = i0 + i2;

        if $i10 > i5 goto label5;

        if i4 < 0 goto label5;

        $i11 = i4 + i2;

        if $i11 > i5 goto label5;

        if i2 == 0 goto label4;

        if i3 != 0 goto label1;

        goto label4;

     label1:
        l6 = r0.<android.graphics.BaseRecordingCanvas: long mNativeCanvasWrapper>;

        if r2 == null goto label2;

        l12 = virtualinvoke r2.<android.graphics.Paint: long getNativeInstance()>();

        goto label3;

     label2:
        l12 = 0L;

     label3:
        staticinvoke <android.graphics.BaseRecordingCanvas: void nDrawBitmap(long,int[],int,int,float,float,int,int,boolean,long)>(l6, r1, i0, i1, f0, f1, i2, i3, z0, l12);

        return;

     label4:
        return;

     label5:
        $r6 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r6.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r6;

     label6:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("abs(stride) must be >= width");

        throw $r5;

     label7:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("height must be >= 0");

        throw $r4;

     label8:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("width must be >= 0");

        throw $r3;
    }

    public final void drawBitmap(int[], int, int, int, int, int, int, boolean, android.graphics.Paint)
    {
        android.graphics.BaseRecordingCanvas r0;
        int[] r1;
        int i0, i1, i2, i3, i4, i5;
        boolean z0;
        android.graphics.Paint r2;
        float $f0, $f1;

        r0 := @this: android.graphics.BaseRecordingCanvas;

        r1 := @parameter0: int[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        i5 := @parameter6: int;

        z0 := @parameter7: boolean;

        r2 := @parameter8: android.graphics.Paint;

        $f1 = (float) i2;

        $f0 = (float) i3;

        virtualinvoke r0.<android.graphics.BaseRecordingCanvas: void drawBitmap(int[],int,int,float,float,int,int,boolean,android.graphics.Paint)>(r1, i0, i1, $f1, $f0, i4, i5, z0, r2);

        return;
    }

    public final void drawBitmapMesh(android.graphics.Bitmap, int, int, float[], int, int[], int, android.graphics.Paint)
    {
        android.graphics.BaseRecordingCanvas r0;
        android.graphics.Bitmap r1;
        int i0, i1, i2, i3, i4, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        float[] r2;
        int[] r3;
        android.graphics.Paint r4;
        long l5, l6, l15;
        java.lang.ArrayIndexOutOfBoundsException $r5;

        r0 := @this: android.graphics.BaseRecordingCanvas;

        r1 := @parameter0: android.graphics.Bitmap;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: float[];

        i2 := @parameter4: int;

        r3 := @parameter5: int[];

        i3 := @parameter6: int;

        r4 := @parameter7: android.graphics.Paint;

        $i7 = i0 | i1;

        $i8 = $i7 | i2;

        $i9 = $i8 | i3;

        if $i9 < 0 goto label6;

        if i0 == 0 goto label5;

        if i1 != 0 goto label1;

        goto label5;

     label1:
        $i11 = i0 + 1;

        $i10 = i1 + 1;

        i4 = $i11 * $i10;

        $i13 = lengthof r2;

        $i12 = i4 * 2;

        staticinvoke <android.graphics.BaseRecordingCanvas: void checkRange(int,int,int)>($i13, i2, $i12);

        if r3 == null goto label2;

        $i14 = lengthof r3;

        staticinvoke <android.graphics.BaseRecordingCanvas: void checkRange(int,int,int)>($i14, i3, i4);

     label2:
        l5 = r0.<android.graphics.BaseRecordingCanvas: long mNativeCanvasWrapper>;

        l6 = virtualinvoke r1.<android.graphics.Bitmap: long getNativeInstance()>();

        if r4 == null goto label3;

        l15 = virtualinvoke r4.<android.graphics.Paint: long getNativeInstance()>();

        goto label4;

     label3:
        l15 = 0L;

     label4:
        staticinvoke <android.graphics.BaseRecordingCanvas: void nDrawBitmapMesh(long,long,int,int,float[],int,int[],int,long)>(l5, l6, i0, i1, r2, i2, r3, i3, l15);

        return;

     label5:
        return;

     label6:
        $r5 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r5.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r5;
    }

    public final void drawCircle(float, float, float, android.graphics.Paint)
    {
        android.graphics.BaseRecordingCanvas r0;
        float f0, f1, f2;
        android.graphics.Paint r1;
        long $l0, $l1;

        r0 := @this: android.graphics.BaseRecordingCanvas;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        r1 := @parameter3: android.graphics.Paint;

        $l0 = r0.<android.graphics.BaseRecordingCanvas: long mNativeCanvasWrapper>;

        $l1 = virtualinvoke r1.<android.graphics.Paint: long getNativeInstance()>();

        staticinvoke <android.graphics.BaseRecordingCanvas: void nDrawCircle(long,float,float,float,long)>($l0, f0, f1, f2, $l1);

        return;
    }

    public final void drawColor(int)
    {
        android.graphics.BaseRecordingCanvas r0;
        int i0, $i2;
        android.graphics.BlendMode $r1;
        long $l1;
        android.graphics.Xfermode $r2;

        r0 := @this: android.graphics.BaseRecordingCanvas;

        i0 := @parameter0: int;

        $l1 = r0.<android.graphics.BaseRecordingCanvas: long mNativeCanvasWrapper>;

        $r1 = <android.graphics.BlendMode: android.graphics.BlendMode SRC_OVER>;

        $r2 = virtualinvoke $r1.<android.graphics.BlendMode: android.graphics.Xfermode getXfermode()>();

        $i2 = $r2.<android.graphics.Xfermode: int porterDuffMode>;

        staticinvoke <android.graphics.BaseRecordingCanvas: void nDrawColor(long,int,int)>($l1, i0, $i2);

        return;
    }

    public final void drawColor(int, android.graphics.BlendMode)
    {
        android.graphics.BaseRecordingCanvas r0;
        int i0, $i2;
        android.graphics.BlendMode r1;
        long $l1;
        android.graphics.Xfermode $r2;

        r0 := @this: android.graphics.BaseRecordingCanvas;

        i0 := @parameter0: int;

        r1 := @parameter1: android.graphics.BlendMode;

        $l1 = r0.<android.graphics.BaseRecordingCanvas: long mNativeCanvasWrapper>;

        $r2 = virtualinvoke r1.<android.graphics.BlendMode: android.graphics.Xfermode getXfermode()>();

        $i2 = $r2.<android.graphics.Xfermode: int porterDuffMode>;

        staticinvoke <android.graphics.BaseRecordingCanvas: void nDrawColor(long,int,int)>($l1, i0, $i2);

        return;
    }

    public final void drawColor(int, android.graphics.PorterDuff$Mode)
    {
        android.graphics.BaseRecordingCanvas r0;
        int i0, $i1;
        android.graphics.PorterDuff$Mode r1;
        long $l2;

        r0 := @this: android.graphics.BaseRecordingCanvas;

        i0 := @parameter0: int;

        r1 := @parameter1: android.graphics.PorterDuff$Mode;

        $l2 = r0.<android.graphics.BaseRecordingCanvas: long mNativeCanvasWrapper>;

        $i1 = r1.<android.graphics.PorterDuff$Mode: int nativeInt>;

        staticinvoke <android.graphics.BaseRecordingCanvas: void nDrawColor(long,int,int)>($l2, i0, $i1);

        return;
    }

    public final void drawColor(long, android.graphics.BlendMode)
    {
        android.graphics.BaseRecordingCanvas r0;
        long l0, $l1, $l2;
        android.graphics.BlendMode r1;
        android.graphics.ColorSpace r2;
        android.graphics.Xfermode $r3;
        int $i3;

        r0 := @this: android.graphics.BaseRecordingCanvas;

        l0 := @parameter0: long;

        r1 := @parameter1: android.graphics.BlendMode;

        r2 = staticinvoke <android.graphics.Color: android.graphics.ColorSpace colorSpace(long)>(l0);

        $l1 = r0.<android.graphics.BaseRecordingCanvas: long mNativeCanvasWrapper>;

        $l2 = virtualinvoke r2.<android.graphics.ColorSpace: long getNativeInstance()>();

        $r3 = virtualinvoke r1.<android.graphics.BlendMode: android.graphics.Xfermode getXfermode()>();

        $i3 = $r3.<android.graphics.Xfermode: int porterDuffMode>;

        staticinvoke <android.graphics.BaseRecordingCanvas: void nDrawColor(long,long,long,int)>($l1, $l2, l0, $i3);

        return;
    }

    public final void drawDoubleRoundRect(android.graphics.RectF, float, float, android.graphics.RectF, float, float, android.graphics.Paint)
    {
        android.graphics.BaseRecordingCanvas r0;
        android.graphics.RectF r1, r2;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11;
        android.graphics.Paint r3;
        long $l0, $l1;

        r0 := @this: android.graphics.BaseRecordingCanvas;

        r1 := @parameter0: android.graphics.RectF;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        r2 := @parameter3: android.graphics.RectF;

        f2 := @parameter4: float;

        f3 := @parameter5: float;

        r3 := @parameter6: android.graphics.Paint;

        $l0 = r0.<android.graphics.BaseRecordingCanvas: long mNativeCanvasWrapper>;

        $f4 = r1.<android.graphics.RectF: float left>;

        $f5 = r1.<android.graphics.RectF: float top>;

        $f6 = r1.<android.graphics.RectF: float right>;

        $f7 = r1.<android.graphics.RectF: float bottom>;

        $f8 = r2.<android.graphics.RectF: float left>;

        $f9 = r2.<android.graphics.RectF: float top>;

        $f10 = r2.<android.graphics.RectF: float right>;

        $f11 = r2.<android.graphics.RectF: float bottom>;

        $l1 = virtualinvoke r3.<android.graphics.Paint: long getNativeInstance()>();

        staticinvoke <android.graphics.BaseRecordingCanvas: void nDrawDoubleRoundRect(long,float,float,float,float,float,float,float,float,float,float,float,float,long)>($l0, $f4, $f5, $f6, $f7, f0, f1, $f8, $f9, $f10, $f11, f2, f3, $l1);

        return;
    }

    public final void drawDoubleRoundRect(android.graphics.RectF, float[], android.graphics.RectF, float[], android.graphics.Paint)
    {
        android.graphics.BaseRecordingCanvas r0;
        android.graphics.RectF r1, r3;
        float[] r2, r4;
        android.graphics.Paint r5;
        long $l0, $l1;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;

        r0 := @this: android.graphics.BaseRecordingCanvas;

        r1 := @parameter0: android.graphics.RectF;

        r2 := @parameter1: float[];

        r3 := @parameter2: android.graphics.RectF;

        r4 := @parameter3: float[];

        r5 := @parameter4: android.graphics.Paint;

        $l0 = r0.<android.graphics.BaseRecordingCanvas: long mNativeCanvasWrapper>;

        $f0 = r1.<android.graphics.RectF: float left>;

        $f1 = r1.<android.graphics.RectF: float top>;

        $f2 = r1.<android.graphics.RectF: float right>;

        $f3 = r1.<android.graphics.RectF: float bottom>;

        $f4 = r3.<android.graphics.RectF: float left>;

        $f5 = r3.<android.graphics.RectF: float top>;

        $f6 = r3.<android.graphics.RectF: float right>;

        $f7 = r3.<android.graphics.RectF: float bottom>;

        $l1 = virtualinvoke r5.<android.graphics.Paint: long getNativeInstance()>();

        staticinvoke <android.graphics.BaseRecordingCanvas: void nDrawDoubleRoundRect(long,float,float,float,float,float[],float,float,float,float,float[],long)>($l0, $f0, $f1, $f2, $f3, r2, $f4, $f5, $f6, $f7, r4, $l1);

        return;
    }

    public final void drawLine(float, float, float, float, android.graphics.Paint)
    {
        android.graphics.BaseRecordingCanvas r0;
        float f0, f1, f2, f3;
        android.graphics.Paint r1;
        long $l0, $l1;

        r0 := @this: android.graphics.BaseRecordingCanvas;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        r1 := @parameter4: android.graphics.Paint;

        $l0 = r0.<android.graphics.BaseRecordingCanvas: long mNativeCanvasWrapper>;

        $l1 = virtualinvoke r1.<android.graphics.Paint: long getNativeInstance()>();

        staticinvoke <android.graphics.BaseRecordingCanvas: void nDrawLine(long,float,float,float,float,long)>($l0, f0, f1, f2, f3, $l1);

        return;
    }

    public final void drawLines(float[], int, int, android.graphics.Paint)
    {
        android.graphics.BaseRecordingCanvas r0;
        float[] r1;
        int i0, i1;
        android.graphics.Paint r2;
        long $l2, $l3;

        r0 := @this: android.graphics.BaseRecordingCanvas;

        r1 := @parameter0: float[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: android.graphics.Paint;

        $l2 = r0.<android.graphics.BaseRecordingCanvas: long mNativeCanvasWrapper>;

        $l3 = virtualinvoke r2.<android.graphics.Paint: long getNativeInstance()>();

        staticinvoke <android.graphics.BaseRecordingCanvas: void nDrawLines(long,float[],int,int,long)>($l2, r1, i0, i1, $l3);

        return;
    }

    public final void drawLines(float[], android.graphics.Paint)
    {
        android.graphics.BaseRecordingCanvas r0;
        float[] r1;
        android.graphics.Paint r2;
        int $i0;

        r0 := @this: android.graphics.BaseRecordingCanvas;

        r1 := @parameter0: float[];

        r2 := @parameter1: android.graphics.Paint;

        $i0 = lengthof r1;

        virtualinvoke r0.<android.graphics.BaseRecordingCanvas: void drawLines(float[],int,int,android.graphics.Paint)>(r1, 0, $i0, r2);

        return;
    }

    public final void drawOval(float, float, float, float, android.graphics.Paint)
    {
        android.graphics.BaseRecordingCanvas r0;
        float f0, f1, f2, f3;
        android.graphics.Paint r1;
        long $l0, $l1;

        r0 := @this: android.graphics.BaseRecordingCanvas;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        r1 := @parameter4: android.graphics.Paint;

        $l0 = r0.<android.graphics.BaseRecordingCanvas: long mNativeCanvasWrapper>;

        $l1 = virtualinvoke r1.<android.graphics.Paint: long getNativeInstance()>();

        staticinvoke <android.graphics.BaseRecordingCanvas: void nDrawOval(long,float,float,float,float,long)>($l0, f0, f1, f2, f3, $l1);

        return;
    }

    public final void drawOval(android.graphics.RectF, android.graphics.Paint)
    {
        android.graphics.BaseRecordingCanvas r0;
        android.graphics.RectF r1;
        android.graphics.Paint r2;
        float $f0, $f1, $f2, $f3;

        r0 := @this: android.graphics.BaseRecordingCanvas;

        r1 := @parameter0: android.graphics.RectF;

        r2 := @parameter1: android.graphics.Paint;

        if r1 == null goto label1;

        $f3 = r1.<android.graphics.RectF: float left>;

        $f2 = r1.<android.graphics.RectF: float top>;

        $f1 = r1.<android.graphics.RectF: float right>;

        $f0 = r1.<android.graphics.RectF: float bottom>;

        virtualinvoke r0.<android.graphics.BaseRecordingCanvas: void drawOval(float,float,float,float,android.graphics.Paint)>($f3, $f2, $f1, $f0, r2);

        return;

     label1:
        throw null;
    }

    public final void drawPaint(android.graphics.Paint)
    {
        android.graphics.BaseRecordingCanvas r0;
        android.graphics.Paint r1;
        long $l0, $l1;

        r0 := @this: android.graphics.BaseRecordingCanvas;

        r1 := @parameter0: android.graphics.Paint;

        $l0 = r0.<android.graphics.BaseRecordingCanvas: long mNativeCanvasWrapper>;

        $l1 = virtualinvoke r1.<android.graphics.Paint: long getNativeInstance()>();

        staticinvoke <android.graphics.BaseRecordingCanvas: void nDrawPaint(long,long)>($l0, $l1);

        return;
    }

    public final void drawPatch(android.graphics.NinePatch, android.graphics.Rect, android.graphics.Paint)
    {
        android.graphics.BaseRecordingCanvas r0;
        android.graphics.NinePatch r1;
        android.graphics.Rect r2;
        android.graphics.Paint r3;
        android.graphics.Bitmap r4;
        long $l0, $l1, $l6, l9;
        int $i2, $i3, $i4, $i5, $i7, $i8;
        float $f0, $f1, $f2, $f3;

        r0 := @this: android.graphics.BaseRecordingCanvas;

        r1 := @parameter0: android.graphics.NinePatch;

        r2 := @parameter1: android.graphics.Rect;

        r3 := @parameter2: android.graphics.Paint;

        r4 = virtualinvoke r1.<android.graphics.NinePatch: android.graphics.Bitmap getBitmap()>();

        virtualinvoke r0.<android.graphics.BaseRecordingCanvas: void throwIfCannotDraw(android.graphics.Bitmap)>(r4);

        if r3 != null goto label1;

        l9 = 0L;

        goto label2;

     label1:
        l9 = virtualinvoke r3.<android.graphics.Paint: long getNativeInstance()>();

     label2:
        $l0 = r0.<android.graphics.BaseRecordingCanvas: long mNativeCanvasWrapper>;

        $l1 = virtualinvoke r4.<android.graphics.Bitmap: long getNativeInstance()>();

        $l6 = r1.<android.graphics.NinePatch: long mNativeChunk>;

        $i2 = r2.<android.graphics.Rect: int left>;

        $f0 = (float) $i2;

        $i3 = r2.<android.graphics.Rect: int top>;

        $f1 = (float) $i3;

        $i4 = r2.<android.graphics.Rect: int right>;

        $f2 = (float) $i4;

        $i5 = r2.<android.graphics.Rect: int bottom>;

        $f3 = (float) $i5;

        $i7 = r0.<android.graphics.BaseRecordingCanvas: int mDensity>;

        $i8 = virtualinvoke r1.<android.graphics.NinePatch: int getDensity()>();

        staticinvoke <android.graphics.BaseRecordingCanvas: void nDrawNinePatch(long,long,long,float,float,float,float,long,int,int)>($l0, $l1, $l6, $f0, $f1, $f2, $f3, l9, $i7, $i8);

        return;
    }

    public final void drawPatch(android.graphics.NinePatch, android.graphics.RectF, android.graphics.Paint)
    {
        android.graphics.BaseRecordingCanvas r0;
        android.graphics.NinePatch r1;
        android.graphics.RectF r2;
        android.graphics.Paint r3;
        android.graphics.Bitmap r4;
        long $l0, $l1, $l2, l5;
        float $f0, $f1, $f2, $f3;
        int $i3, $i4;

        r0 := @this: android.graphics.BaseRecordingCanvas;

        r1 := @parameter0: android.graphics.NinePatch;

        r2 := @parameter1: android.graphics.RectF;

        r3 := @parameter2: android.graphics.Paint;

        r4 = virtualinvoke r1.<android.graphics.NinePatch: android.graphics.Bitmap getBitmap()>();

        virtualinvoke r0.<android.graphics.BaseRecordingCanvas: void throwIfCannotDraw(android.graphics.Bitmap)>(r4);

        if r3 != null goto label1;

        l5 = 0L;

        goto label2;

     label1:
        l5 = virtualinvoke r3.<android.graphics.Paint: long getNativeInstance()>();

     label2:
        $l0 = r0.<android.graphics.BaseRecordingCanvas: long mNativeCanvasWrapper>;

        $l1 = virtualinvoke r4.<android.graphics.Bitmap: long getNativeInstance()>();

        $l2 = r1.<android.graphics.NinePatch: long mNativeChunk>;

        $f0 = r2.<android.graphics.RectF: float left>;

        $f1 = r2.<android.graphics.RectF: float top>;

        $f2 = r2.<android.graphics.RectF: float right>;

        $f3 = r2.<android.graphics.RectF: float bottom>;

        $i3 = r0.<android.graphics.BaseRecordingCanvas: int mDensity>;

        $i4 = virtualinvoke r1.<android.graphics.NinePatch: int getDensity()>();

        staticinvoke <android.graphics.BaseRecordingCanvas: void nDrawNinePatch(long,long,long,float,float,float,float,long,int,int)>($l0, $l1, $l2, $f0, $f1, $f2, $f3, l5, $i3, $i4);

        return;
    }

    public final void drawPath(android.graphics.Path, android.graphics.Paint)
    {
        android.graphics.BaseRecordingCanvas r0;
        android.graphics.Path r1;
        android.graphics.Paint r2;
        boolean $z0;
        long $l0, $l1, $l2, $l3, $l4, $l5;
        android.graphics.Region $r3, $r4;

        r0 := @this: android.graphics.BaseRecordingCanvas;

        r1 := @parameter0: android.graphics.Path;

        r2 := @parameter1: android.graphics.Paint;

        $z0 = r1.<android.graphics.Path: boolean isSimplePath>;

        if $z0 == 0 goto label1;

        $r3 = r1.<android.graphics.Path: android.graphics.Region rects>;

        if $r3 == null goto label1;

        $l3 = r0.<android.graphics.BaseRecordingCanvas: long mNativeCanvasWrapper>;

        $r4 = r1.<android.graphics.Path: android.graphics.Region rects>;

        $l4 = $r4.<android.graphics.Region: long mNativeRegion>;

        $l5 = virtualinvoke r2.<android.graphics.Paint: long getNativeInstance()>();

        staticinvoke <android.graphics.BaseRecordingCanvas: void nDrawRegion(long,long,long)>($l3, $l4, $l5);

        goto label2;

     label1:
        $l0 = r0.<android.graphics.BaseRecordingCanvas: long mNativeCanvasWrapper>;

        $l1 = virtualinvoke r1.<android.graphics.Path: long readOnlyNI()>();

        $l2 = virtualinvoke r2.<android.graphics.Paint: long getNativeInstance()>();

        staticinvoke <android.graphics.BaseRecordingCanvas: void nDrawPath(long,long,long)>($l0, $l1, $l2);

     label2:
        return;
    }

    public final void drawPicture(android.graphics.Picture)
    {
        android.graphics.BaseRecordingCanvas r0;
        android.graphics.Picture r1;
        int i0;

        r0 := @this: android.graphics.BaseRecordingCanvas;

        r1 := @parameter0: android.graphics.Picture;

        virtualinvoke r1.<android.graphics.Picture: void endRecording()>();

        i0 = virtualinvoke r0.<android.graphics.BaseRecordingCanvas: int save()>();

        virtualinvoke r1.<android.graphics.Picture: void draw(android.graphics.Canvas)>(r0);

        virtualinvoke r0.<android.graphics.BaseRecordingCanvas: void restoreToCount(int)>(i0);

        return;
    }

    public final void drawPicture(android.graphics.Picture, android.graphics.Rect)
    {
        android.graphics.BaseRecordingCanvas r0;
        android.graphics.Picture r1;
        android.graphics.Rect r2;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;

        r0 := @this: android.graphics.BaseRecordingCanvas;

        r1 := @parameter0: android.graphics.Picture;

        r2 := @parameter1: android.graphics.Rect;

        virtualinvoke r0.<android.graphics.BaseRecordingCanvas: int save()>();

        $i1 = r2.<android.graphics.Rect: int left>;

        $f1 = (float) $i1;

        $i2 = r2.<android.graphics.Rect: int top>;

        $f0 = (float) $i2;

        virtualinvoke r0.<android.graphics.BaseRecordingCanvas: void translate(float,float)>($f1, $f0);

        $i3 = virtualinvoke r1.<android.graphics.Picture: int getWidth()>();

        if $i3 <= 0 goto label1;

        $i4 = virtualinvoke r1.<android.graphics.Picture: int getHeight()>();

        if $i4 <= 0 goto label1;

        $i5 = virtualinvoke r2.<android.graphics.Rect: int width()>();

        $f2 = (float) $i5;

        $i6 = virtualinvoke r1.<android.graphics.Picture: int getWidth()>();

        $f3 = (float) $i6;

        $f4 = $f2 / $f3;

        $i7 = virtualinvoke r2.<android.graphics.Rect: int height()>();

        $f5 = (float) $i7;

        $i8 = virtualinvoke r1.<android.graphics.Picture: int getHeight()>();

        $f6 = (float) $i8;

        $f7 = $f5 / $f6;

        virtualinvoke r0.<android.graphics.BaseRecordingCanvas: void scale(float,float)>($f4, $f7);

     label1:
        virtualinvoke r0.<android.graphics.BaseRecordingCanvas: void drawPicture(android.graphics.Picture)>(r1);

        virtualinvoke r0.<android.graphics.BaseRecordingCanvas: void restore()>();

        return;
    }

    public final void drawPicture(android.graphics.Picture, android.graphics.RectF)
    {
        android.graphics.BaseRecordingCanvas r0;
        android.graphics.Picture r1;
        android.graphics.RectF r2;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;
        int $i1, $i2, $i3, $i4;

        r0 := @this: android.graphics.BaseRecordingCanvas;

        r1 := @parameter0: android.graphics.Picture;

        r2 := @parameter1: android.graphics.RectF;

        virtualinvoke r0.<android.graphics.BaseRecordingCanvas: int save()>();

        $f1 = r2.<android.graphics.RectF: float left>;

        $f0 = r2.<android.graphics.RectF: float top>;

        virtualinvoke r0.<android.graphics.BaseRecordingCanvas: void translate(float,float)>($f1, $f0);

        $i1 = virtualinvoke r1.<android.graphics.Picture: int getWidth()>();

        if $i1 <= 0 goto label1;

        $i2 = virtualinvoke r1.<android.graphics.Picture: int getHeight()>();

        if $i2 <= 0 goto label1;

        $f2 = virtualinvoke r2.<android.graphics.RectF: float width()>();

        $i3 = virtualinvoke r1.<android.graphics.Picture: int getWidth()>();

        $f3 = (float) $i3;

        $f4 = $f2 / $f3;

        $f5 = virtualinvoke r2.<android.graphics.RectF: float height()>();

        $i4 = virtualinvoke r1.<android.graphics.Picture: int getHeight()>();

        $f6 = (float) $i4;

        $f7 = $f5 / $f6;

        virtualinvoke r0.<android.graphics.BaseRecordingCanvas: void scale(float,float)>($f4, $f7);

     label1:
        virtualinvoke r0.<android.graphics.BaseRecordingCanvas: void drawPicture(android.graphics.Picture)>(r1);

        virtualinvoke r0.<android.graphics.BaseRecordingCanvas: void restore()>();

        return;
    }

    public final void drawPoint(float, float, android.graphics.Paint)
    {
        android.graphics.BaseRecordingCanvas r0;
        float f0, f1;
        android.graphics.Paint r1;
        long $l0, $l1;

        r0 := @this: android.graphics.BaseRecordingCanvas;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        r1 := @parameter2: android.graphics.Paint;

        $l0 = r0.<android.graphics.BaseRecordingCanvas: long mNativeCanvasWrapper>;

        $l1 = virtualinvoke r1.<android.graphics.Paint: long getNativeInstance()>();

        staticinvoke <android.graphics.BaseRecordingCanvas: void nDrawPoint(long,float,float,long)>($l0, f0, f1, $l1);

        return;
    }

    public final void drawPoints(float[], int, int, android.graphics.Paint)
    {
        android.graphics.BaseRecordingCanvas r0;
        float[] r1;
        int i0, i1;
        android.graphics.Paint r2;
        long $l2, $l3;

        r0 := @this: android.graphics.BaseRecordingCanvas;

        r1 := @parameter0: float[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: android.graphics.Paint;

        $l2 = r0.<android.graphics.BaseRecordingCanvas: long mNativeCanvasWrapper>;

        $l3 = virtualinvoke r2.<android.graphics.Paint: long getNativeInstance()>();

        staticinvoke <android.graphics.BaseRecordingCanvas: void nDrawPoints(long,float[],int,int,long)>($l2, r1, i0, i1, $l3);

        return;
    }

    public final void drawPoints(float[], android.graphics.Paint)
    {
        android.graphics.BaseRecordingCanvas r0;
        float[] r1;
        android.graphics.Paint r2;
        int $i0;

        r0 := @this: android.graphics.BaseRecordingCanvas;

        r1 := @parameter0: float[];

        r2 := @parameter1: android.graphics.Paint;

        $i0 = lengthof r1;

        virtualinvoke r0.<android.graphics.BaseRecordingCanvas: void drawPoints(float[],int,int,android.graphics.Paint)>(r1, 0, $i0, r2);

        return;
    }

    public final void drawPosText(java.lang.String, float[], android.graphics.Paint)
    {
        android.graphics.BaseRecordingCanvas r0;
        java.lang.String r1;
        float[] r2;
        android.graphics.Paint r3;
        char[] $r4;
        int $i0;

        r0 := @this: android.graphics.BaseRecordingCanvas;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: float[];

        r3 := @parameter2: android.graphics.Paint;

        $r4 = virtualinvoke r1.<java.lang.String: char[] toCharArray()>();

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        virtualinvoke r0.<android.graphics.BaseRecordingCanvas: void drawPosText(char[],int,int,float[],android.graphics.Paint)>($r4, 0, $i0, r2, r3);

        return;
    }

    public final void drawPosText(char[], int, int, float[], android.graphics.Paint)
    {
        android.graphics.BaseRecordingCanvas r0;
        char[] r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10;
        float[] r2;
        android.graphics.Paint r3;
        float $f0, $f1;
        java.lang.IndexOutOfBoundsException $r4;

        r0 := @this: android.graphics.BaseRecordingCanvas;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: float[];

        r3 := @parameter4: android.graphics.Paint;

        if i0 < 0 goto label3;

        $i3 = i0 + i1;

        $i2 = lengthof r1;

        if $i3 > $i2 goto label3;

        $i5 = i1 * 2;

        $i4 = lengthof r2;

        if $i5 > $i4 goto label3;

        i10 = 0;

     label1:
        if i10 >= i1 goto label2;

        $i9 = i0 + i10;

        $i6 = i10 * 2;

        $f1 = r2[$i6];

        $i7 = i10 * 2;

        $i8 = $i7 + 1;

        $f0 = r2[$i8];

        virtualinvoke r0.<android.graphics.BaseRecordingCanvas: void drawText(char[],int,int,float,float,android.graphics.Paint)>(r1, $i9, 1, $f1, $f0, r3);

        i10 = i10 + 1;

        goto label1;

     label2:
        return;

     label3:
        $r4 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r4.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r4;
    }

    public final void drawRGB(int, int, int)
    {
        android.graphics.BaseRecordingCanvas r0;
        int i0, i1, i2, $i3;

        r0 := @this: android.graphics.BaseRecordingCanvas;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $i3 = staticinvoke <android.graphics.Color: int rgb(int,int,int)>(i0, i1, i2);

        virtualinvoke r0.<android.graphics.BaseRecordingCanvas: void drawColor(int)>($i3);

        return;
    }

    public final void drawRect(float, float, float, float, android.graphics.Paint)
    {
        android.graphics.BaseRecordingCanvas r0;
        float f0, f1, f2, f3;
        android.graphics.Paint r1;
        long $l0, $l1;

        r0 := @this: android.graphics.BaseRecordingCanvas;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        r1 := @parameter4: android.graphics.Paint;

        $l0 = r0.<android.graphics.BaseRecordingCanvas: long mNativeCanvasWrapper>;

        $l1 = virtualinvoke r1.<android.graphics.Paint: long getNativeInstance()>();

        staticinvoke <android.graphics.BaseRecordingCanvas: void nDrawRect(long,float,float,float,float,long)>($l0, f0, f1, f2, f3, $l1);

        return;
    }

    public final void drawRect(android.graphics.Rect, android.graphics.Paint)
    {
        android.graphics.BaseRecordingCanvas r0;
        android.graphics.Rect r1;
        android.graphics.Paint r2;
        int $i0, $i1, $i2, $i3;
        float $f0, $f1, $f2, $f3;

        r0 := @this: android.graphics.BaseRecordingCanvas;

        r1 := @parameter0: android.graphics.Rect;

        r2 := @parameter1: android.graphics.Paint;

        $i0 = r1.<android.graphics.Rect: int left>;

        $f3 = (float) $i0;

        $i1 = r1.<android.graphics.Rect: int top>;

        $f2 = (float) $i1;

        $i2 = r1.<android.graphics.Rect: int right>;

        $f1 = (float) $i2;

        $i3 = r1.<android.graphics.Rect: int bottom>;

        $f0 = (float) $i3;

        virtualinvoke r0.<android.graphics.BaseRecordingCanvas: void drawRect(float,float,float,float,android.graphics.Paint)>($f3, $f2, $f1, $f0, r2);

        return;
    }

    public final void drawRect(android.graphics.RectF, android.graphics.Paint)
    {
        android.graphics.BaseRecordingCanvas r0;
        android.graphics.RectF r1;
        android.graphics.Paint r2;
        long $l0, $l1;
        float $f0, $f1, $f2, $f3;

        r0 := @this: android.graphics.BaseRecordingCanvas;

        r1 := @parameter0: android.graphics.RectF;

        r2 := @parameter1: android.graphics.Paint;

        $l0 = r0.<android.graphics.BaseRecordingCanvas: long mNativeCanvasWrapper>;

        $f0 = r1.<android.graphics.RectF: float left>;

        $f1 = r1.<android.graphics.RectF: float top>;

        $f2 = r1.<android.graphics.RectF: float right>;

        $f3 = r1.<android.graphics.RectF: float bottom>;

        $l1 = virtualinvoke r2.<android.graphics.Paint: long getNativeInstance()>();

        staticinvoke <android.graphics.BaseRecordingCanvas: void nDrawRect(long,float,float,float,float,long)>($l0, $f0, $f1, $f2, $f3, $l1);

        return;
    }

    public final void drawRoundRect(float, float, float, float, float, float, android.graphics.Paint)
    {
        android.graphics.BaseRecordingCanvas r0;
        float f0, f1, f2, f3, f4, f5;
        android.graphics.Paint r1;
        long $l0, $l1;

        r0 := @this: android.graphics.BaseRecordingCanvas;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        f4 := @parameter4: float;

        f5 := @parameter5: float;

        r1 := @parameter6: android.graphics.Paint;

        $l0 = r0.<android.graphics.BaseRecordingCanvas: long mNativeCanvasWrapper>;

        $l1 = virtualinvoke r1.<android.graphics.Paint: long getNativeInstance()>();

        staticinvoke <android.graphics.BaseRecordingCanvas: void nDrawRoundRect(long,float,float,float,float,float,float,long)>($l0, f0, f1, f2, f3, f4, f5, $l1);

        return;
    }

    public final void drawRoundRect(android.graphics.RectF, float, float, android.graphics.Paint)
    {
        android.graphics.BaseRecordingCanvas r0;
        android.graphics.RectF r1;
        float f0, f1, $f2, $f3, $f4, $f5;
        android.graphics.Paint r2;

        r0 := @this: android.graphics.BaseRecordingCanvas;

        r1 := @parameter0: android.graphics.RectF;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        r2 := @parameter3: android.graphics.Paint;

        $f5 = r1.<android.graphics.RectF: float left>;

        $f4 = r1.<android.graphics.RectF: float top>;

        $f3 = r1.<android.graphics.RectF: float right>;

        $f2 = r1.<android.graphics.RectF: float bottom>;

        virtualinvoke r0.<android.graphics.BaseRecordingCanvas: void drawRoundRect(float,float,float,float,float,float,android.graphics.Paint)>($f5, $f4, $f3, $f2, f0, f1, r2);

        return;
    }

    public final void drawText(java.lang.CharSequence, int, int, float, float, android.graphics.Paint)
    {
        android.graphics.BaseRecordingCanvas r0;
        java.lang.CharSequence r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i10, $i11, $i14;
        float f0, f1;
        android.graphics.Paint r2;
        char[] r3;
        java.lang.IndexOutOfBoundsException $r4;
        boolean $z0, $z1, $z2, $z3;
        long $l9, $l12, $l13, $l15;
        android.text.GraphicsOperations $r5;
        java.lang.String $r6;

        r0 := @this: android.graphics.BaseRecordingCanvas;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        f0 := @parameter3: float;

        f1 := @parameter4: float;

        r2 := @parameter5: android.graphics.Paint;

        $i3 = i0 | i1;

        $i2 = i1 - i0;

        $i4 = $i3 | $i2;

        $i5 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        $i6 = $i5 - i1;

        $i7 = $i4 | $i6;

        if $i7 < 0 goto label5;

        $z0 = r1 instanceof java.lang.String;

        if $z0 != 0 goto label3;

        $z1 = r1 instanceof android.text.SpannedString;

        if $z1 != 0 goto label3;

        $z2 = r1 instanceof android.text.SpannableString;

        if $z2 == 0 goto label1;

        goto label3;

     label1:
        $z3 = r1 instanceof android.text.GraphicsOperations;

        if $z3 == 0 goto label2;

        $r5 = (android.text.GraphicsOperations) r1;

        interfaceinvoke $r5.<android.text.GraphicsOperations: void drawText(android.graphics.BaseCanvas,int,int,float,float,android.graphics.Paint)>(r0, i0, i1, f0, f1, r2);

        goto label4;

     label2:
        $i8 = i1 - i0;

        r3 = staticinvoke <android.graphics.TemporaryBuffer: char[] obtain(int)>($i8);

        staticinvoke <android.text.TextUtils: void getChars(java.lang.CharSequence,int,int,char[],int)>(r1, i0, i1, r3, 0);

        $l9 = r0.<android.graphics.BaseRecordingCanvas: long mNativeCanvasWrapper>;

        $i10 = i1 - i0;

        $i11 = r2.<android.graphics.Paint: int mBidiFlags>;

        $l12 = virtualinvoke r2.<android.graphics.Paint: long getNativeInstance()>();

        staticinvoke <android.graphics.BaseRecordingCanvas: void nDrawText(long,char[],int,int,float,float,int,long)>($l9, r3, 0, $i10, f0, f1, $i11, $l12);

        staticinvoke <android.graphics.TemporaryBuffer: void recycle(char[])>(r3);

        goto label4;

     label3:
        $l13 = r0.<android.graphics.BaseRecordingCanvas: long mNativeCanvasWrapper>;

        $r6 = interfaceinvoke r1.<java.lang.CharSequence: java.lang.String toString()>();

        $i14 = r2.<android.graphics.Paint: int mBidiFlags>;

        $l15 = virtualinvoke r2.<android.graphics.Paint: long getNativeInstance()>();

        staticinvoke <android.graphics.BaseRecordingCanvas: void nDrawText(long,java.lang.String,int,int,float,float,int,long)>($l13, $r6, i0, i1, f0, f1, $i14, $l15);

     label4:
        return;

     label5:
        $r4 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r4.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r4;
    }

    public final void drawText(java.lang.String, float, float, android.graphics.Paint)
    {
        android.graphics.BaseRecordingCanvas r0;
        java.lang.String r1;
        float f0, f1;
        android.graphics.Paint r2;
        long $l0, $l3;
        int $i1, $i2;

        r0 := @this: android.graphics.BaseRecordingCanvas;

        r1 := @parameter0: java.lang.String;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        r2 := @parameter3: android.graphics.Paint;

        $l0 = r0.<android.graphics.BaseRecordingCanvas: long mNativeCanvasWrapper>;

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        $i2 = r2.<android.graphics.Paint: int mBidiFlags>;

        $l3 = virtualinvoke r2.<android.graphics.Paint: long getNativeInstance()>();

        staticinvoke <android.graphics.BaseRecordingCanvas: void nDrawText(long,java.lang.String,int,int,float,float,int,long)>($l0, r1, 0, $i1, f0, f1, $i2, $l3);

        return;
    }

    public final void drawText(java.lang.String, int, int, float, float, android.graphics.Paint)
    {
        android.graphics.BaseRecordingCanvas r0;
        java.lang.String r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i9;
        float f0, f1;
        android.graphics.Paint r2;
        java.lang.IndexOutOfBoundsException $r3;
        long $l8, $l10;

        r0 := @this: android.graphics.BaseRecordingCanvas;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        f0 := @parameter3: float;

        f1 := @parameter4: float;

        r2 := @parameter5: android.graphics.Paint;

        $i3 = i0 | i1;

        $i2 = i1 - i0;

        $i4 = $i3 | $i2;

        $i5 = virtualinvoke r1.<java.lang.String: int length()>();

        $i6 = $i5 - i1;

        $i7 = $i4 | $i6;

        if $i7 < 0 goto label1;

        $l8 = r0.<android.graphics.BaseRecordingCanvas: long mNativeCanvasWrapper>;

        $i9 = r2.<android.graphics.Paint: int mBidiFlags>;

        $l10 = virtualinvoke r2.<android.graphics.Paint: long getNativeInstance()>();

        staticinvoke <android.graphics.BaseRecordingCanvas: void nDrawText(long,java.lang.String,int,int,float,float,int,long)>($l8, r1, i0, i1, f0, f1, $i9, $l10);

        return;

     label1:
        $r3 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r3.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r3;
    }

    public final void drawText(char[], int, int, float, float, android.graphics.Paint)
    {
        android.graphics.BaseRecordingCanvas r0;
        char[] r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i10;
        float f0, f1;
        android.graphics.Paint r2;
        java.lang.IndexOutOfBoundsException $r3;
        long $l9, $l11;

        r0 := @this: android.graphics.BaseRecordingCanvas;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        f0 := @parameter3: float;

        f1 := @parameter4: float;

        r2 := @parameter5: android.graphics.Paint;

        $i3 = i0 | i1;

        $i2 = i0 + i1;

        $i7 = $i3 | $i2;

        $i4 = lengthof r1;

        $i5 = $i4 - i0;

        $i6 = $i5 - i1;

        $i8 = $i7 | $i6;

        if $i8 < 0 goto label1;

        $l9 = r0.<android.graphics.BaseRecordingCanvas: long mNativeCanvasWrapper>;

        $i10 = r2.<android.graphics.Paint: int mBidiFlags>;

        $l11 = virtualinvoke r2.<android.graphics.Paint: long getNativeInstance()>();

        staticinvoke <android.graphics.BaseRecordingCanvas: void nDrawText(long,char[],int,int,float,float,int,long)>($l9, r1, i0, i1, f0, f1, $i10, $l11);

        return;

     label1:
        $r3 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r3.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r3;
    }

    public final void drawTextOnPath(java.lang.String, android.graphics.Path, float, float, android.graphics.Paint)
    {
        android.graphics.BaseRecordingCanvas r0;
        java.lang.String r1;
        android.graphics.Path r2;
        float f0, f1;
        android.graphics.Paint r3;
        int $i0, $i3;
        long $l1, $l2, $l4;

        r0 := @this: android.graphics.BaseRecordingCanvas;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.graphics.Path;

        f0 := @parameter2: float;

        f1 := @parameter3: float;

        r3 := @parameter4: android.graphics.Paint;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        $l1 = r0.<android.graphics.BaseRecordingCanvas: long mNativeCanvasWrapper>;

        $l2 = virtualinvoke r2.<android.graphics.Path: long readOnlyNI()>();

        $i3 = r3.<android.graphics.Paint: int mBidiFlags>;

        $l4 = virtualinvoke r3.<android.graphics.Paint: long getNativeInstance()>();

        staticinvoke <android.graphics.BaseRecordingCanvas: void nDrawTextOnPath(long,java.lang.String,long,float,float,int,long)>($l1, r1, $l2, f0, f1, $i3, $l4);

        goto label1;

     label1:
        return;
    }

    public final void drawTextOnPath(char[], int, int, android.graphics.Path, float, float, android.graphics.Paint)
    {
        android.graphics.BaseRecordingCanvas r0;
        char[] r1;
        int i0, i1, $i2, $i3, $i6;
        android.graphics.Path r2;
        float f0, f1;
        android.graphics.Paint r3;
        java.lang.ArrayIndexOutOfBoundsException $r4;
        long $l4, $l5, $l7;

        r0 := @this: android.graphics.BaseRecordingCanvas;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: android.graphics.Path;

        f0 := @parameter4: float;

        f1 := @parameter5: float;

        r3 := @parameter6: android.graphics.Paint;

        if i0 < 0 goto label2;

        $i3 = i0 + i1;

        $i2 = lengthof r1;

        if $i3 > $i2 goto label1;

        $l4 = r0.<android.graphics.BaseRecordingCanvas: long mNativeCanvasWrapper>;

        $l5 = virtualinvoke r2.<android.graphics.Path: long readOnlyNI()>();

        $i6 = r3.<android.graphics.Paint: int mBidiFlags>;

        $l7 = virtualinvoke r3.<android.graphics.Paint: long getNativeInstance()>();

        staticinvoke <android.graphics.BaseRecordingCanvas: void nDrawTextOnPath(long,char[],int,int,long,float,float,int,long)>($l4, r1, i0, i1, $l5, f0, f1, $i6, $l7);

        return;

     label1:
        goto label2;

     label2:
        $r4 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r4.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r4;
    }

    public void drawTextRun(android.graphics.text.MeasuredText, int, int, int, int, float, float, boolean, android.graphics.Paint)
    {
        android.graphics.BaseRecordingCanvas r0;
        android.graphics.text.MeasuredText r1;
        int i0, i1, i2, i3, $i5, $i6;
        float f0, f1;
        boolean z0;
        android.graphics.Paint r2;
        long $l4, $l7, $l8;
        char[] $r3;

        r0 := @this: android.graphics.BaseRecordingCanvas;

        r1 := @parameter0: android.graphics.text.MeasuredText;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        f0 := @parameter5: float;

        f1 := @parameter6: float;

        z0 := @parameter7: boolean;

        r2 := @parameter8: android.graphics.Paint;

        $l4 = r0.<android.graphics.BaseRecordingCanvas: long mNativeCanvasWrapper>;

        $r3 = virtualinvoke r1.<android.graphics.text.MeasuredText: char[] getChars()>();

        $i5 = i1 - i0;

        $i6 = i3 - i2;

        $l7 = virtualinvoke r2.<android.graphics.Paint: long getNativeInstance()>();

        $l8 = virtualinvoke r1.<android.graphics.text.MeasuredText: long getNativePtr()>();

        staticinvoke <android.graphics.BaseRecordingCanvas: void nDrawTextRun(long,char[],int,int,int,int,float,float,boolean,long,long)>($l4, $r3, i0, $i5, i2, $i6, f0, f1, z0, $l7, $l8);

        return;
    }

    public final void drawTextRun(java.lang.CharSequence, int, int, int, int, float, float, boolean, android.graphics.Paint)
    {
        android.graphics.BaseRecordingCanvas r0;
        java.lang.CharSequence r1;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i18, $i19, $i21, $i22, $i23, $i24, $i25, i26, i27;
        float f0, f1;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        android.graphics.Paint r2;
        java.lang.NullPointerException $r3, $r4;
        java.lang.IndexOutOfBoundsException $r5;
        long $l17, $l20, $l28, $l29;
        android.text.MeasuredParagraph $r6;
        android.graphics.text.MeasuredText $r7;
        android.text.GraphicsOperations $r8;
        android.text.PrecomputedText r9;
        char[] r10;
        java.lang.String $r11;

        r0 := @this: android.graphics.BaseRecordingCanvas;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        f0 := @parameter5: float;

        f1 := @parameter6: float;

        z0 := @parameter7: boolean;

        r2 := @parameter8: android.graphics.Paint;

        if r1 == null goto label8;

        if r2 == null goto label7;

        $i5 = i0 | i1;

        $i6 = $i5 | i2;

        $i8 = $i6 | i3;

        $i7 = i0 - i2;

        $i10 = $i8 | $i7;

        $i9 = i1 - i0;

        $i12 = $i10 | $i9;

        $i11 = i3 - i1;

        $i13 = $i12 | $i11;

        $i14 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        $i15 = $i14 - i3;

        $i16 = $i13 | $i15;

        if $i16 < 0 goto label6;

        $z1 = r1 instanceof java.lang.String;

        if $z1 != 0 goto label4;

        $z2 = r1 instanceof android.text.SpannedString;

        if $z2 != 0 goto label4;

        $z3 = r1 instanceof android.text.SpannableString;

        if $z3 == 0 goto label1;

        goto label4;

     label1:
        $z4 = r1 instanceof android.text.GraphicsOperations;

        if $z4 == 0 goto label2;

        $r8 = (android.text.GraphicsOperations) r1;

        interfaceinvoke $r8.<android.text.GraphicsOperations: void drawTextRun(android.graphics.BaseCanvas,int,int,int,int,float,float,boolean,android.graphics.Paint)>(r0, i0, i1, i2, i3, f0, f1, z0, r2);

        goto label5;

     label2:
        $z5 = r1 instanceof android.text.PrecomputedText;

        if $z5 == 0 goto label3;

        r9 = (android.text.PrecomputedText) r1;

        i4 = virtualinvoke r9.<android.text.PrecomputedText: int findParaIndex(int)>(i0);

        $i21 = virtualinvoke r9.<android.text.PrecomputedText: int getParagraphEnd(int)>(i4);

        if i1 > $i21 goto label3;

        i26 = virtualinvoke r9.<android.text.PrecomputedText: int getParagraphStart(int)>(i4);

        $r6 = virtualinvoke r9.<android.text.PrecomputedText: android.text.MeasuredParagraph getMeasuredParagraph(int)>(i4);

        $r7 = virtualinvoke $r6.<android.text.MeasuredParagraph: android.graphics.text.MeasuredText getMeasuredText()>();

        $i25 = i0 - i26;

        $i24 = i1 - i26;

        $i23 = i2 - i26;

        $i22 = i3 - i26;

        virtualinvoke r0.<android.graphics.BaseRecordingCanvas: void drawTextRun(android.graphics.text.MeasuredText,int,int,int,int,float,float,boolean,android.graphics.Paint)>($r7, $i25, $i24, $i23, $i22, f0, f1, z0, r2);

        return;

     label3:
        i27 = i3 - i2;

        r10 = staticinvoke <android.graphics.TemporaryBuffer: char[] obtain(int)>(i27);

        staticinvoke <android.text.TextUtils: void getChars(java.lang.CharSequence,int,int,char[],int)>(r1, i2, i3, r10, 0);

        $l17 = r0.<android.graphics.BaseRecordingCanvas: long mNativeCanvasWrapper>;

        $i18 = i0 - i2;

        $i19 = i1 - i0;

        $l20 = virtualinvoke r2.<android.graphics.Paint: long getNativeInstance()>();

        staticinvoke <android.graphics.BaseRecordingCanvas: void nDrawTextRun(long,char[],int,int,int,int,float,float,boolean,long,long)>($l17, r10, $i18, $i19, 0, i27, f0, f1, z0, $l20, 0L);

        staticinvoke <android.graphics.TemporaryBuffer: void recycle(char[])>(r10);

        goto label5;

     label4:
        $l28 = r0.<android.graphics.BaseRecordingCanvas: long mNativeCanvasWrapper>;

        $r11 = interfaceinvoke r1.<java.lang.CharSequence: java.lang.String toString()>();

        $l29 = virtualinvoke r2.<android.graphics.Paint: long getNativeInstance()>();

        staticinvoke <android.graphics.BaseRecordingCanvas: void nDrawTextRun(long,java.lang.String,int,int,int,int,float,float,boolean,long)>($l28, $r11, i0, i1, i2, i3, f0, f1, z0, $l29);

     label5:
        return;

     label6:
        $r5 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r5.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r5;

     label7:
        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("paint is null");

        throw $r4;

     label8:
        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("text is null");

        throw $r3;
    }

    public final void drawTextRun(char[], int, int, int, int, float, float, boolean, android.graphics.Paint)
    {
        android.graphics.BaseRecordingCanvas r0;
        char[] r1;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16;
        float f0, f1;
        boolean z0;
        android.graphics.Paint r2;
        java.lang.NullPointerException $r3, $r4;
        java.lang.IndexOutOfBoundsException $r5;
        long $l17, $l18;

        r0 := @this: android.graphics.BaseRecordingCanvas;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        f0 := @parameter5: float;

        f1 := @parameter6: float;

        z0 := @parameter7: boolean;

        r2 := @parameter8: android.graphics.Paint;

        if r1 == null goto label3;

        if r2 == null goto label2;

        $i4 = i0 | i1;

        $i5 = $i4 | i2;

        $i7 = $i5 | i3;

        $i6 = i0 - i2;

        $i11 = $i7 | $i6;

        $i9 = i2 + i3;

        $i8 = i0 + i1;

        $i10 = $i9 - $i8;

        $i15 = $i11 | $i10;

        $i13 = lengthof r1;

        $i12 = i2 + i3;

        $i14 = $i13 - $i12;

        $i16 = $i15 | $i14;

        if $i16 < 0 goto label1;

        $l17 = r0.<android.graphics.BaseRecordingCanvas: long mNativeCanvasWrapper>;

        $l18 = virtualinvoke r2.<android.graphics.Paint: long getNativeInstance()>();

        staticinvoke <android.graphics.BaseRecordingCanvas: void nDrawTextRun(long,char[],int,int,int,int,float,float,boolean,long,long)>($l17, r1, i0, i1, i2, i3, f0, f1, z0, $l18, 0L);

        return;

     label1:
        $r5 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r5.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r5;

     label2:
        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("paint is null");

        throw $r4;

     label3:
        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("text is null");

        throw $r3;
    }

    public final void drawVertices(android.graphics.Canvas$VertexMode, int, float[], int, float[], int, int[], int, short[], int, int, android.graphics.Paint)
    {
        android.graphics.BaseRecordingCanvas r0;
        android.graphics.Canvas$VertexMode r1;
        int i0, i1, i2, i3, i4, i5, $i6, $i8, $i10, $i11, $i12, $i13;
        float[] r2, r3;
        int[] r4;
        short[] r5;
        android.graphics.Paint r6;
        long $l7, $l9;

        r0 := @this: android.graphics.BaseRecordingCanvas;

        r1 := @parameter0: android.graphics.Canvas$VertexMode;

        i0 := @parameter1: int;

        r2 := @parameter2: float[];

        i1 := @parameter3: int;

        r3 := @parameter4: float[];

        i2 := @parameter5: int;

        r4 := @parameter6: int[];

        i3 := @parameter7: int;

        r5 := @parameter8: short[];

        i4 := @parameter9: int;

        i5 := @parameter10: int;

        r6 := @parameter11: android.graphics.Paint;

        $i6 = lengthof r2;

        staticinvoke <android.graphics.BaseRecordingCanvas: void checkRange(int,int,int)>($i6, i1, i0);

        if r3 == null goto label1;

        $i13 = lengthof r3;

        staticinvoke <android.graphics.BaseRecordingCanvas: void checkRange(int,int,int)>($i13, i2, i0);

        goto label1;

     label1:
        if r4 == null goto label2;

        $i12 = lengthof r4;

        $i11 = i0 / 2;

        staticinvoke <android.graphics.BaseRecordingCanvas: void checkRange(int,int,int)>($i12, i3, $i11);

        goto label2;

     label2:
        if r5 == null goto label3;

        $i10 = lengthof r5;

        staticinvoke <android.graphics.BaseRecordingCanvas: void checkRange(int,int,int)>($i10, i4, i5);

        goto label3;

     label3:
        $l7 = r0.<android.graphics.BaseRecordingCanvas: long mNativeCanvasWrapper>;

        $i8 = r1.<android.graphics.Canvas$VertexMode: int nativeInt>;

        $l9 = virtualinvoke r6.<android.graphics.Paint: long getNativeInstance()>();

        staticinvoke <android.graphics.BaseRecordingCanvas: void nDrawVertices(long,int,int,float[],int,float[],int,int[],int,short[],int,int,long)>($l7, $i8, i0, r2, i1, r3, i2, r4, i3, r5, i4, i5, $l9);

        return;
    }
}
