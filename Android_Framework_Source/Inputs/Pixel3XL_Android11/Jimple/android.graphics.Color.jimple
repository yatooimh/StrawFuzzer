public class android.graphics.Color extends java.lang.Object
{
    public static final int BLACK;
    public static final int BLUE;
    public static final int CYAN;
    public static final int DKGRAY;
    public static final int GRAY;
    public static final int GREEN;
    public static final int LTGRAY;
    public static final int MAGENTA;
    public static final int RED;
    public static final int TRANSPARENT;
    public static final int WHITE;
    public static final int YELLOW;
    private static final java.util.HashMap sColorNameMap;
    private final android.graphics.ColorSpace mColorSpace;
    private final float[] mComponents;

    static void <clinit>()
    {
        java.lang.Integer r0, $r2, $r8, $r11, $r15, $r18, $r35, $r38, $r41, $r44, $r47, $r50, r54, r56, r58, r60, r62;
        java.util.HashMap $r1, $r7, $r10, $r14, $r17, $r22, $r24, $r26, $r28, $r30, $r32, $r34, $r37, $r40, $r43, $r46, $r49, r53, r55, r57, r59, r61, r63;

        <android.graphics.Color: int YELLOW> = -256;

        <android.graphics.Color: int WHITE> = -1;

        <android.graphics.Color: int TRANSPARENT> = 0;

        <android.graphics.Color: int RED> = -65536;

        <android.graphics.Color: int MAGENTA> = -65281;

        <android.graphics.Color: int LTGRAY> = -3355444;

        <android.graphics.Color: int GREEN> = -16711936;

        <android.graphics.Color: int GRAY> = -7829368;

        <android.graphics.Color: int DKGRAY> = -12303292;

        <android.graphics.Color: int CYAN> = -16711681;

        <android.graphics.Color: int BLUE> = -16776961;

        <android.graphics.Color: int BLACK> = -16777216;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        <android.graphics.Color: java.util.HashMap sColorNameMap> = $r1;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-16777216);

        virtualinvoke $r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("black", $r2);

        r53 = <android.graphics.Color: java.util.HashMap sColorNameMap>;

        r54 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-12303292);

        virtualinvoke r53.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("darkgray", r54);

        r55 = <android.graphics.Color: java.util.HashMap sColorNameMap>;

        r56 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-7829368);

        virtualinvoke r55.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("gray", r56);

        r57 = <android.graphics.Color: java.util.HashMap sColorNameMap>;

        r58 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-3355444);

        virtualinvoke r57.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("lightgray", r58);

        $r7 = <android.graphics.Color: java.util.HashMap sColorNameMap>;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1);

        virtualinvoke $r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("white", $r8);

        $r10 = <android.graphics.Color: java.util.HashMap sColorNameMap>;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-65536);

        virtualinvoke $r10.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("red", $r11);

        r59 = <android.graphics.Color: java.util.HashMap sColorNameMap>;

        r60 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-16711936);

        virtualinvoke r59.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("green", r60);

        $r14 = <android.graphics.Color: java.util.HashMap sColorNameMap>;

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-16776961);

        virtualinvoke $r14.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("blue", $r15);

        $r17 = <android.graphics.Color: java.util.HashMap sColorNameMap>;

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-256);

        virtualinvoke $r17.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("yellow", $r18);

        r61 = <android.graphics.Color: java.util.HashMap sColorNameMap>;

        r62 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-16711681);

        virtualinvoke r61.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("cyan", r62);

        r63 = <android.graphics.Color: java.util.HashMap sColorNameMap>;

        r0 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-65281);

        virtualinvoke r63.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("magenta", r0);

        $r22 = <android.graphics.Color: java.util.HashMap sColorNameMap>;

        virtualinvoke $r22.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("aqua", r62);

        $r24 = <android.graphics.Color: java.util.HashMap sColorNameMap>;

        virtualinvoke $r24.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("fuchsia", r0);

        $r26 = <android.graphics.Color: java.util.HashMap sColorNameMap>;

        virtualinvoke $r26.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("darkgrey", r54);

        $r28 = <android.graphics.Color: java.util.HashMap sColorNameMap>;

        virtualinvoke $r28.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("grey", r56);

        $r30 = <android.graphics.Color: java.util.HashMap sColorNameMap>;

        virtualinvoke $r30.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("lightgrey", r58);

        $r32 = <android.graphics.Color: java.util.HashMap sColorNameMap>;

        virtualinvoke $r32.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("lime", r60);

        $r34 = <android.graphics.Color: java.util.HashMap sColorNameMap>;

        $r35 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-8388608);

        virtualinvoke $r34.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("maroon", $r35);

        $r37 = <android.graphics.Color: java.util.HashMap sColorNameMap>;

        $r38 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-16777088);

        virtualinvoke $r37.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("navy", $r38);

        $r40 = <android.graphics.Color: java.util.HashMap sColorNameMap>;

        $r41 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-8355840);

        virtualinvoke $r40.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("olive", $r41);

        $r43 = <android.graphics.Color: java.util.HashMap sColorNameMap>;

        $r44 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-8388480);

        virtualinvoke $r43.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("purple", $r44);

        $r46 = <android.graphics.Color: java.util.HashMap sColorNameMap>;

        $r47 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-4144960);

        virtualinvoke $r46.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("silver", $r47);

        $r49 = <android.graphics.Color: java.util.HashMap sColorNameMap>;

        $r50 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-16744320);

        virtualinvoke $r49.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("teal", $r50);

        return;
    }

    public void <init>()
    {
        android.graphics.Color r0;
        float[] $r1;
        android.graphics.ColorSpace$Named $r2;
        android.graphics.ColorSpace $r3;

        r0 := @this: android.graphics.Color;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (float)[4];

        $r1[0] = 0.0F;

        $r1[1] = 0.0F;

        $r1[2] = 0.0F;

        $r1[3] = 1.0F;

        r0.<android.graphics.Color: float[] mComponents> = $r1;

        $r2 = <android.graphics.ColorSpace$Named: android.graphics.ColorSpace$Named SRGB>;

        $r3 = staticinvoke <android.graphics.ColorSpace: android.graphics.ColorSpace get(android.graphics.ColorSpace$Named)>($r2);

        r0.<android.graphics.Color: android.graphics.ColorSpace mColorSpace> = $r3;

        return;
    }

    private void <init>(float, float, float, float)
    {
        android.graphics.Color r0;
        float f0, f1, f2, f3;
        android.graphics.ColorSpace$Named $r1;
        android.graphics.ColorSpace $r2;

        r0 := @this: android.graphics.Color;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        $r1 = <android.graphics.ColorSpace$Named: android.graphics.ColorSpace$Named SRGB>;

        $r2 = staticinvoke <android.graphics.ColorSpace: android.graphics.ColorSpace get(android.graphics.ColorSpace$Named)>($r1);

        specialinvoke r0.<android.graphics.Color: void <init>(float,float,float,float,android.graphics.ColorSpace)>(f0, f1, f2, f3, $r2);

        return;
    }

    private void <init>(float, float, float, float, android.graphics.ColorSpace)
    {
        android.graphics.Color r0;
        float f0, f1, f2, f3;
        android.graphics.ColorSpace r1;
        float[] $r2;

        r0 := @this: android.graphics.Color;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        r1 := @parameter4: android.graphics.ColorSpace;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = newarray (float)[4];

        $r2[0] = f0;

        $r2[1] = f1;

        $r2[2] = f2;

        $r2[3] = f3;

        r0.<android.graphics.Color: float[] mComponents> = $r2;

        r0.<android.graphics.Color: android.graphics.ColorSpace mColorSpace> = r1;

        return;
    }

    private void <init>(float[], android.graphics.ColorSpace)
    {
        android.graphics.Color r0;
        float[] r1;
        android.graphics.ColorSpace r2;

        r0 := @this: android.graphics.Color;

        r1 := @parameter0: float[];

        r2 := @parameter1: android.graphics.ColorSpace;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.graphics.Color: float[] mComponents> = r1;

        r0.<android.graphics.Color: android.graphics.ColorSpace mColorSpace> = r2;

        return;
    }

    public static int HSVToColor(int, float[])
    {
        int i0, $i1, $i2;
        float[] r0;
        java.lang.RuntimeException $r1;

        i0 := @parameter0: int;

        r0 := @parameter1: float[];

        $i1 = lengthof r0;

        if $i1 < 3 goto label1;

        $i2 = staticinvoke <android.graphics.Color: int nativeHSVToColor(int,float[])>(i0, r0);

        return $i2;

     label1:
        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("3 components required for hsv");

        throw $r1;
    }

    public static int HSVToColor(float[])
    {
        float[] r0;
        int $i0;

        r0 := @parameter0: float[];

        $i0 = staticinvoke <android.graphics.Color: int HSVToColor(int,float[])>(255, r0);

        return $i0;
    }

    public static void RGBToHSV(int, int, int, float[])
    {
        int i0, i1, i2, $i3;
        float[] r0;
        java.lang.RuntimeException $r1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r0 := @parameter3: float[];

        $i3 = lengthof r0;

        if $i3 < 3 goto label1;

        staticinvoke <android.graphics.Color: void nativeRGBToHSV(int,int,int,float[])>(i0, i1, i2, r0);

        return;

     label1:
        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("3 components required for hsv");

        throw $r1;
    }

    public static float alpha(long)
    {
        long l0, $l1, $l3, $l4, $l5, $l6;
        byte $b2;
        float $f0, $f1, $f2, $f3;

        l0 := @parameter0: long;

        $l1 = 63L & l0;

        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label1;

        $l5 = l0 >> 56;

        $l6 = $l5 & 255L;

        $f2 = (float) $l6;

        $f3 = $f2 / 255.0F;

        return $f3;

     label1:
        $l3 = l0 >> 6;

        $l4 = $l3 & 1023L;

        $f0 = (float) $l4;

        $f1 = $f0 / 1023.0F;

        return $f1;
    }

    public static int alpha(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        $i1 = i0 >>> 24;

        return $i1;
    }

    public static int argb(float, float, float, float)
    {
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        $f4 = f0 * 255.0F;

        $f5 = $f4 + 0.5F;

        i0 = (int) $f5;

        $f6 = f1 * 255.0F;

        $f7 = $f6 + 0.5F;

        i1 = (int) $f7;

        $f8 = f2 * 255.0F;

        $f9 = $f8 + 0.5F;

        i2 = (int) $f9;

        $f10 = 255.0F * f3;

        $f11 = $f10 + 0.5F;

        $i8 = (int) $f11;

        $i4 = i0 << 24;

        $i3 = i1 << 16;

        $i6 = $i4 | $i3;

        $i5 = i2 << 8;

        $i7 = $i6 | $i5;

        $i9 = $i8 | $i7;

        return $i9;
    }

    public static int argb(int, int, int, int)
    {
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $i5 = i0 << 24;

        $i4 = i1 << 16;

        $i7 = $i5 | $i4;

        $i6 = i2 << 8;

        $i8 = $i7 | $i6;

        $i9 = $i8 | i3;

        return $i9;
    }

    public static float blue(long)
    {
        long l0, $l1, $l3, $l4, $l7, $l8;
        byte $b2;
        int $i5;
        short $s6;
        float $f0, $f1, $f2;

        l0 := @parameter0: long;

        $l1 = 63L & l0;

        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label1;

        $l7 = l0 >> 32;

        $l8 = $l7 & 255L;

        $f1 = (float) $l8;

        $f2 = $f1 / 255.0F;

        return $f2;

     label1:
        $l3 = l0 >> 16;

        $l4 = $l3 & 65535L;

        $i5 = (int) $l4;

        $s6 = (short) $i5;

        $f0 = staticinvoke <android.util.Half: float toFloat(short)>($s6);

        return $f0;
    }

    public static int blue(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        $i1 = i0 & 255;

        return $i1;
    }

    public static android.graphics.ColorSpace colorSpace(long)
    {
        long l0, $l1;
        int $i2;
        android.graphics.ColorSpace $r0;

        l0 := @parameter0: long;

        $l1 = 63L & l0;

        $i2 = (int) $l1;

        $r0 = staticinvoke <android.graphics.ColorSpace: android.graphics.ColorSpace get(int)>($i2);

        return $r0;
    }

    public static void colorToHSV(int, float[])
    {
        int i0, $i1, $i2, $i3, $i4, $i5;
        float[] r0;

        i0 := @parameter0: int;

        r0 := @parameter1: float[];

        $i1 = i0 >> 16;

        $i5 = $i1 & 255;

        $i2 = i0 >> 8;

        $i4 = $i2 & 255;

        $i3 = i0 & 255;

        staticinvoke <android.graphics.Color: void RGBToHSV(int,int,int,float[])>($i5, $i4, $i3, r0);

        return;
    }

    public static long convert(float, float, float, float, android.graphics.ColorSpace$Connector)
    {
        float f0, f1, f2, f3, $f4, $f5, $f6;
        android.graphics.ColorSpace$Connector r0;
        float[] r1;
        android.graphics.ColorSpace $r2;
        long $l0;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        r0 := @parameter4: android.graphics.ColorSpace$Connector;

        r1 = virtualinvoke r0.<android.graphics.ColorSpace$Connector: float[] transform(float,float,float)>(f0, f1, f2);

        $f4 = r1[0];

        $f5 = r1[1];

        $f6 = r1[2];

        $r2 = virtualinvoke r0.<android.graphics.ColorSpace$Connector: android.graphics.ColorSpace getDestination()>();

        $l0 = staticinvoke <android.graphics.Color: long pack(float,float,float,float,android.graphics.ColorSpace)>($f4, $f5, $f6, f3, $r2);

        return $l0;
    }

    public static long convert(float, float, float, float, android.graphics.ColorSpace, android.graphics.ColorSpace)
    {
        float f0, f1, f2, f3, $f4, $f5, $f6;
        android.graphics.ColorSpace r0, r2;
        android.graphics.ColorSpace$Connector $r1;
        long $l0;
        float[] r3;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        r2 := @parameter4: android.graphics.ColorSpace;

        r0 := @parameter5: android.graphics.ColorSpace;

        $r1 = staticinvoke <android.graphics.ColorSpace: android.graphics.ColorSpace$Connector connect(android.graphics.ColorSpace,android.graphics.ColorSpace)>(r2, r0);

        r3 = virtualinvoke $r1.<android.graphics.ColorSpace$Connector: float[] transform(float,float,float)>(f0, f1, f2);

        $f6 = r3[0];

        $f5 = r3[1];

        $f4 = r3[2];

        $l0 = staticinvoke <android.graphics.Color: long pack(float,float,float,float,android.graphics.ColorSpace)>($f6, $f5, $f4, f3, r0);

        return $l0;
    }

    public static long convert(int, android.graphics.ColorSpace)
    {
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        android.graphics.ColorSpace r0, $r2;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;
        android.graphics.ColorSpace$Named $r1;
        long $l8;

        i0 := @parameter0: int;

        r0 := @parameter1: android.graphics.ColorSpace;

        $i1 = i0 >> 16;

        $i2 = $i1 & 255;

        $f0 = (float) $i2;

        $f4 = $f0 / 255.0F;

        $i3 = i0 >> 8;

        $i4 = $i3 & 255;

        $f1 = (float) $i4;

        $f5 = $f1 / 255.0F;

        $i5 = i0 & 255;

        $f2 = (float) $i5;

        $f6 = $f2 / 255.0F;

        $i6 = i0 >> 24;

        $i7 = $i6 & 255;

        $f3 = (float) $i7;

        $f7 = $f3 / 255.0F;

        $r1 = <android.graphics.ColorSpace$Named: android.graphics.ColorSpace$Named SRGB>;

        $r2 = staticinvoke <android.graphics.ColorSpace: android.graphics.ColorSpace get(android.graphics.ColorSpace$Named)>($r1);

        $l8 = staticinvoke <android.graphics.Color: long convert(float,float,float,float,android.graphics.ColorSpace,android.graphics.ColorSpace)>($f4, $f5, $f6, $f7, $r2, r0);

        return $l8;
    }

    public static long convert(long, android.graphics.ColorSpace$Connector)
    {
        long l0, $l1;
        android.graphics.ColorSpace$Connector r0;
        float $f0, $f1, $f2, $f3;

        l0 := @parameter0: long;

        r0 := @parameter1: android.graphics.ColorSpace$Connector;

        $f0 = staticinvoke <android.graphics.Color: float red(long)>(l0);

        $f1 = staticinvoke <android.graphics.Color: float green(long)>(l0);

        $f2 = staticinvoke <android.graphics.Color: float blue(long)>(l0);

        $f3 = staticinvoke <android.graphics.Color: float alpha(long)>(l0);

        $l1 = staticinvoke <android.graphics.Color: long convert(float,float,float,float,android.graphics.ColorSpace$Connector)>($f0, $f1, $f2, $f3, r0);

        return $l1;
    }

    public static long convert(long, android.graphics.ColorSpace)
    {
        long l0, $l1;
        android.graphics.ColorSpace r0, $r1;
        float $f0, $f1, $f2, $f3;

        l0 := @parameter0: long;

        r0 := @parameter1: android.graphics.ColorSpace;

        $f0 = staticinvoke <android.graphics.Color: float red(long)>(l0);

        $f1 = staticinvoke <android.graphics.Color: float green(long)>(l0);

        $f2 = staticinvoke <android.graphics.Color: float blue(long)>(l0);

        $f3 = staticinvoke <android.graphics.Color: float alpha(long)>(l0);

        $r1 = staticinvoke <android.graphics.Color: android.graphics.ColorSpace colorSpace(long)>(l0);

        $l1 = staticinvoke <android.graphics.Color: long convert(float,float,float,float,android.graphics.ColorSpace,android.graphics.ColorSpace)>($f0, $f1, $f2, $f3, $r1, r0);

        return $l1;
    }

    public static int getHtmlColor(java.lang.String)
    {
        java.lang.Integer r0;
        int i0, $i1;
        java.util.Locale $r1;
        java.util.HashMap $r2;
        java.lang.String $r3, r6;
        java.lang.Object $r4;
        java.lang.Throwable $r5;

        r6 := @parameter0: java.lang.String;

        $r2 = <android.graphics.Color: java.util.HashMap sColorNameMap>;

        $r1 = <java.util.Locale: java.util.Locale ROOT>;

        $r3 = virtualinvoke r6.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r1);

        $r4 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r3);

        r0 = (java.lang.Integer) $r4;

        if r0 == null goto label1;

        $i1 = virtualinvoke r0.<java.lang.Integer: int intValue()>();

        return $i1;

     label1:
        i0 = staticinvoke <com.android.internal.util.XmlUtils: int convertValueToInt(java.lang.CharSequence,int)>(r6, -1);

     label2:
        return i0;

     label3:
        $r5 := @caughtexception;

        return -1;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public static float green(long)
    {
        long l0, $l1, $l3, $l4, $l7, $l8;
        byte $b2;
        int $i5;
        short $s6;
        float $f0, $f1, $f2;

        l0 := @parameter0: long;

        $l1 = 63L & l0;

        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label1;

        $l7 = l0 >> 40;

        $l8 = $l7 & 255L;

        $f1 = (float) $l8;

        $f2 = $f1 / 255.0F;

        return $f2;

     label1:
        $l3 = l0 >> 32;

        $l4 = $l3 & 65535L;

        $i5 = (int) $l4;

        $s6 = (short) $i5;

        $f0 = staticinvoke <android.util.Half: float toFloat(short)>($s6);

        return $f0;
    }

    public static int green(int)
    {
        int i0, $i1, $i2;

        i0 := @parameter0: int;

        $i1 = i0 >> 8;

        $i2 = $i1 & 255;

        return $i2;
    }

    public static boolean isInColorSpace(long, android.graphics.ColorSpace)
    {
        long l0, $l1;
        android.graphics.ColorSpace r0;
        int $i2, $i3;
        boolean z0;

        l0 := @parameter0: long;

        r0 := @parameter1: android.graphics.ColorSpace;

        $l1 = 63L & l0;

        $i2 = (int) $l1;

        $i3 = virtualinvoke r0.<android.graphics.ColorSpace: int getId()>();

        if $i2 != $i3 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public static boolean isSrgb(long)
    {
        long l0;
        android.graphics.ColorSpace $r0;
        boolean $z0;

        l0 := @parameter0: long;

        $r0 = staticinvoke <android.graphics.Color: android.graphics.ColorSpace colorSpace(long)>(l0);

        $z0 = virtualinvoke $r0.<android.graphics.ColorSpace: boolean isSrgb()>();

        return $z0;
    }

    public static boolean isWideGamut(long)
    {
        long l0;
        android.graphics.ColorSpace $r0;
        boolean $z0;

        l0 := @parameter0: long;

        $r0 = staticinvoke <android.graphics.Color: android.graphics.ColorSpace colorSpace(long)>(l0);

        $z0 = virtualinvoke $r0.<android.graphics.ColorSpace: boolean isWideGamut()>();

        return $z0;
    }

    public static float luminance(int)
    {
        int i0, $i1, $i2, $i3;
        java.util.function.DoubleUnaryOperator r0;
        android.graphics.ColorSpace$Named $r1;
        android.graphics.ColorSpace $r2;
        android.graphics.ColorSpace$Rgb $r3;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13;
        float $f0;

        i0 := @parameter0: int;

        $r1 = <android.graphics.ColorSpace$Named: android.graphics.ColorSpace$Named SRGB>;

        $r2 = staticinvoke <android.graphics.ColorSpace: android.graphics.ColorSpace get(android.graphics.ColorSpace$Named)>($r1);

        $r3 = (android.graphics.ColorSpace$Rgb) $r2;

        r0 = virtualinvoke $r3.<android.graphics.ColorSpace$Rgb: java.util.function.DoubleUnaryOperator getEotf()>();

        $i1 = staticinvoke <android.graphics.Color: int red(int)>(i0);

        $d0 = (double) $i1;

        $d1 = $d0 / 255.0;

        $d2 = interfaceinvoke r0.<java.util.function.DoubleUnaryOperator: double applyAsDouble(double)>($d1);

        $d3 = 0.2126 * $d2;

        $i2 = staticinvoke <android.graphics.Color: int green(int)>(i0);

        $d4 = (double) $i2;

        $d5 = $d4 / 255.0;

        $d6 = interfaceinvoke r0.<java.util.function.DoubleUnaryOperator: double applyAsDouble(double)>($d5);

        $d7 = 0.7152 * $d6;

        $d8 = $d3 + $d7;

        $i3 = staticinvoke <android.graphics.Color: int blue(int)>(i0);

        $d9 = (double) $i3;

        $d10 = $d9 / 255.0;

        $d11 = interfaceinvoke r0.<java.util.function.DoubleUnaryOperator: double applyAsDouble(double)>($d10);

        $d12 = 0.0722 * $d11;

        $d13 = $d8 + $d12;

        $f0 = (float) $d13;

        return $f0;
    }

    public static float luminance(long)
    {
        long l0;
        android.graphics.ColorSpace r0;
        android.graphics.ColorSpace$Model $r1, $r2, $r5;
        java.lang.StringBuilder $r3;
        java.lang.IllegalArgumentException $r7;
        java.lang.String $r8;
        android.graphics.ColorSpace$Rgb $r9;
        float $f0, $f1, $f2, $f3, $f4;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10;
        java.util.function.DoubleUnaryOperator r10;

        l0 := @parameter0: long;

        r0 = staticinvoke <android.graphics.Color: android.graphics.ColorSpace colorSpace(long)>(l0);

        $r1 = virtualinvoke r0.<android.graphics.ColorSpace: android.graphics.ColorSpace$Model getModel()>();

        $r2 = <android.graphics.ColorSpace$Model: android.graphics.ColorSpace$Model RGB>;

        if $r1 != $r2 goto label1;

        $r9 = (android.graphics.ColorSpace$Rgb) r0;

        r10 = virtualinvoke $r9.<android.graphics.ColorSpace$Rgb: java.util.function.DoubleUnaryOperator getEotf()>();

        $f0 = staticinvoke <android.graphics.Color: float red(long)>(l0);

        $d0 = (double) $f0;

        $d1 = interfaceinvoke r10.<java.util.function.DoubleUnaryOperator: double applyAsDouble(double)>($d0);

        $d2 = 0.2126 * $d1;

        $f1 = staticinvoke <android.graphics.Color: float green(long)>(l0);

        $d3 = (double) $f1;

        $d4 = interfaceinvoke r10.<java.util.function.DoubleUnaryOperator: double applyAsDouble(double)>($d3);

        $d5 = 0.7152 * $d4;

        $d6 = $d2 + $d5;

        $f2 = staticinvoke <android.graphics.Color: float blue(long)>(l0);

        $d7 = (double) $f2;

        $d8 = interfaceinvoke r10.<java.util.function.DoubleUnaryOperator: double applyAsDouble(double)>($d7);

        $d9 = 0.0722 * $d8;

        $d10 = $d6 + $d9;

        $f3 = (float) $d10;

        $f4 = staticinvoke <android.graphics.Color: float saturate(float)>($f3);

        return $f4;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The specified color must be encoded in an RGB color space. The supplied color space is ");

        $r5 = virtualinvoke r0.<android.graphics.ColorSpace: android.graphics.ColorSpace$Model getModel()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r7;
    }

    private static native int nativeHSVToColor(int, float[]);

    private static native void nativeRGBToHSV(int, int, int, float[]);

    public static long pack(float, float, float)
    {
        float f0, f1, f2;
        android.graphics.ColorSpace$Named $r0;
        android.graphics.ColorSpace $r1;
        long $l0;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        $r0 = <android.graphics.ColorSpace$Named: android.graphics.ColorSpace$Named SRGB>;

        $r1 = staticinvoke <android.graphics.ColorSpace: android.graphics.ColorSpace get(android.graphics.ColorSpace$Named)>($r0);

        $l0 = staticinvoke <android.graphics.Color: long pack(float,float,float,float,android.graphics.ColorSpace)>(f0, f1, f2, 1.0F, $r1);

        return $l0;
    }

    public static long pack(float, float, float, float)
    {
        float f0, f1, f2, f3;
        android.graphics.ColorSpace$Named $r0;
        android.graphics.ColorSpace $r1;
        long $l0;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        $r0 = <android.graphics.ColorSpace$Named: android.graphics.ColorSpace$Named SRGB>;

        $r1 = staticinvoke <android.graphics.ColorSpace: android.graphics.ColorSpace get(android.graphics.ColorSpace$Named)>($r0);

        $l0 = staticinvoke <android.graphics.Color: long pack(float,float,float,float,android.graphics.ColorSpace)>(f0, f1, f2, f3, $r1);

        return $l0;
    }

    public static long pack(float, float, float, float, android.graphics.ColorSpace)
    {
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15;
        android.graphics.ColorSpace r0;
        short s0, s35, s36;
        int i1, $i4, $i21, $i22, $i23, $i24, $i25, $i26, $i27, i31, i32, i33, i34;
        long l2, l3, $l5, $l6, $l7, $l8, $l9, $l10, $l11, $l12, $l13, $l14, $l15, $l16, $l17, $l18, $l19, $l20, $l28, $l29, $l30;
        boolean $z0;
        java.lang.IllegalArgumentException $r1, $r2;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        r0 := @parameter4: android.graphics.ColorSpace;

        $z0 = virtualinvoke r0.<android.graphics.ColorSpace: boolean isSrgb()>();

        if $z0 == 0 goto label1;

        $f8 = f3 * 255.0F;

        $f9 = $f8 + 0.5F;

        i31 = (int) $f9;

        $f10 = f0 * 255.0F;

        $f11 = $f10 + 0.5F;

        i32 = (int) $f11;

        $f12 = f1 * 255.0F;

        $f13 = $f12 + 0.5F;

        i33 = (int) $f13;

        $f14 = 255.0F * f2;

        $f15 = $f14 + 0.5F;

        $i26 = (int) $f15;

        $i22 = i32 << 16;

        $i21 = i31 << 24;

        $i24 = $i22 | $i21;

        $i23 = i33 << 8;

        $i25 = $i24 | $i23;

        $i27 = $i26 | $i25;

        $l28 = (long) $i27;

        $l29 = $l28 & 4294967295L;

        $l30 = $l29 << 32;

        return $l30;

     label1:
        i34 = virtualinvoke r0.<android.graphics.ColorSpace: int getId()>();

        if i34 == -1 goto label3;

        $i4 = virtualinvoke r0.<android.graphics.ColorSpace: int getComponentCount()>();

        if $i4 > 3 goto label2;

        s35 = staticinvoke <android.util.Half: short toHalf(float)>(f0);

        s0 = staticinvoke <android.util.Half: short toHalf(float)>(f1);

        s36 = staticinvoke <android.util.Half: short toHalf(float)>(f2);

        $f4 = staticinvoke <java.lang.Math: float min(float,float)>(f3, 1.0F);

        $f5 = staticinvoke <java.lang.Math: float max(float,float)>(0.0F, $f4);

        $f6 = $f5 * 1023.0F;

        $f7 = $f6 + 0.5F;

        i1 = (int) $f7;

        l2 = (long) s35;

        l3 = (long) s0;

        $l5 = (long) s36;

        $l6 = 65535L & $l5;

        $l12 = $l6 << 16;

        $l7 = l2 & 65535L;

        $l10 = $l7 << 48;

        $l8 = l3 & 65535L;

        $l9 = $l8 << 32;

        $l11 = $l10 | $l9;

        $l16 = $l12 | $l11;

        $l13 = (long) i1;

        $l14 = $l13 & 1023L;

        $l15 = $l14 << 6;

        $l19 = $l16 | $l15;

        $l17 = (long) i34;

        $l18 = $l17 & 63L;

        $l20 = $l19 | $l18;

        return $l20;

     label2:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The color space must use a color model with at most 3 components");

        throw $r2;

     label3:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unknown color space, please use a color space returned by ColorSpace.get()");

        throw $r1;
    }

    public static long pack(int)
    {
        int i0;
        long $l1, $l2, $l3;

        i0 := @parameter0: int;

        $l1 = (long) i0;

        $l2 = $l1 & 4294967295L;

        $l3 = $l2 << 32;

        return $l3;
    }

    public static int parseColor(java.lang.String)
    {
        char $c0;
        java.util.Locale $r0;
        java.util.HashMap $r1;
        java.lang.String $r2, $r5, r7;
        java.lang.Object $r3;
        java.lang.IllegalArgumentException $r4, $r6;
        int $i1, $i2, $i3, $i4;
        long l5;
        java.lang.Integer r8;

        r7 := @parameter0: java.lang.String;

        $c0 = virtualinvoke r7.<java.lang.String: char charAt(int)>(0);

        if $c0 != 35 goto label4;

        $r5 = virtualinvoke r7.<java.lang.String: java.lang.String substring(int)>(1);

        l5 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>($r5, 16);

        $i2 = virtualinvoke r7.<java.lang.String: int length()>();

        if $i2 != 7 goto label1;

        l5 = l5 | -16777216L;

        goto label2;

     label1:
        $i3 = virtualinvoke r7.<java.lang.String: int length()>();

        if $i3 != 9 goto label3;

     label2:
        $i4 = (int) l5;

        return $i4;

     label3:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unknown color");

        throw $r6;

     label4:
        $r1 = <android.graphics.Color: java.util.HashMap sColorNameMap>;

        $r0 = <java.util.Locale: java.util.Locale ROOT>;

        $r2 = virtualinvoke r7.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r0);

        $r3 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2);

        r8 = (java.lang.Integer) $r3;

        if r8 == null goto label5;

        $i1 = virtualinvoke r8.<java.lang.Integer: int intValue()>();

        return $i1;

     label5:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unknown color");

        throw $r4;
    }

    public static float red(long)
    {
        long l0, $l1, $l3, $l4, $l7, $l8;
        byte $b2;
        int $i5;
        short $s6;
        float $f0, $f1, $f2;

        l0 := @parameter0: long;

        $l1 = 63L & l0;

        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label1;

        $l7 = l0 >> 48;

        $l8 = $l7 & 255L;

        $f1 = (float) $l8;

        $f2 = $f1 / 255.0F;

        return $f2;

     label1:
        $l3 = l0 >> 48;

        $l4 = $l3 & 65535L;

        $i5 = (int) $l4;

        $s6 = (short) $i5;

        $f0 = staticinvoke <android.util.Half: float toFloat(short)>($s6);

        return $f0;
    }

    public static int red(int)
    {
        int i0, $i1, $i2;

        i0 := @parameter0: int;

        $i1 = i0 >> 16;

        $i2 = $i1 & 255;

        return $i2;
    }

    public static int rgb(float, float, float)
    {
        float f0, f1, f2, $f3, $f4, $f5, $f6, $f7, $f8;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        $f3 = f0 * 255.0F;

        $f4 = $f3 + 0.5F;

        i0 = (int) $f4;

        $f5 = f1 * 255.0F;

        $f6 = $f5 + 0.5F;

        i1 = (int) $f6;

        $f7 = 255.0F * f2;

        $f8 = $f7 + 0.5F;

        $i6 = (int) $f8;

        $i2 = i0 << 16;

        $i4 = $i2 | -16777216;

        $i3 = i1 << 8;

        $i5 = $i4 | $i3;

        $i7 = $i6 | $i5;

        return $i7;
    }

    public static int rgb(int, int, int)
    {
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $i3 = i0 << 16;

        $i5 = $i3 | -16777216;

        $i4 = i1 << 8;

        $i6 = $i5 | $i4;

        $i7 = $i6 | i2;

        return $i7;
    }

    private static float saturate(float)
    {
        byte $b0, $b1;
        float f1;

        f1 := @parameter0: float;

        $b0 = f1 cmpg 0.0F;

        if $b0 > 0 goto label1;

        f1 = 0.0F;

        goto label2;

     label1:
        $b1 = f1 cmpl 1.0F;

        if $b1 < 0 goto label2;

        f1 = 1.0F;

        goto label2;

     label2:
        return f1;
    }

    public static int toArgb(long)
    {
        long l0, $l4, $l13;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14;
        float[] r0;
        int i1, i2, i3, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i14;
        byte $b5;
        android.graphics.ColorSpace $r1;
        android.graphics.ColorSpace$Connector $r2;

        l0 := @parameter0: long;

        $l4 = 63L & l0;

        $b5 = $l4 cmp 0L;

        if $b5 != 0 goto label1;

        $l13 = l0 >> 32;

        $i14 = (int) $l13;

        return $i14;

     label1:
        f0 = staticinvoke <android.graphics.Color: float red(long)>(l0);

        f1 = staticinvoke <android.graphics.Color: float green(long)>(l0);

        f2 = staticinvoke <android.graphics.Color: float blue(long)>(l0);

        f3 = staticinvoke <android.graphics.Color: float alpha(long)>(l0);

        $r1 = staticinvoke <android.graphics.Color: android.graphics.ColorSpace colorSpace(long)>(l0);

        $r2 = staticinvoke <android.graphics.ColorSpace: android.graphics.ColorSpace$Connector connect(android.graphics.ColorSpace)>($r1);

        r0 = virtualinvoke $r2.<android.graphics.ColorSpace$Connector: float[] transform(float,float,float)>(f0, f1, f2);

        $f4 = f3 * 255.0F;

        $f5 = $f4 + 0.5F;

        i1 = (int) $f5;

        $f6 = r0[0];

        $f7 = $f6 * 255.0F;

        $f8 = $f7 + 0.5F;

        i2 = (int) $f8;

        $f9 = r0[1];

        $f10 = $f9 * 255.0F;

        $f11 = $f10 + 0.5F;

        i3 = (int) $f11;

        $f12 = r0[2];

        $f13 = $f12 * 255.0F;

        $f14 = $f13 + 0.5F;

        $i11 = (int) $f14;

        $i7 = i1 << 24;

        $i6 = i2 << 16;

        $i9 = $i7 | $i6;

        $i8 = i3 << 8;

        $i10 = $i9 | $i8;

        $i12 = $i11 | $i10;

        return $i12;
    }

    public static android.graphics.Color valueOf(float, float, float)
    {
        float f0, f1, f2;
        android.graphics.Color $r0;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        $r0 = new android.graphics.Color;

        specialinvoke $r0.<android.graphics.Color: void <init>(float,float,float,float)>(f0, f1, f2, 1.0F);

        return $r0;
    }

    public static android.graphics.Color valueOf(float, float, float, float)
    {
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7;
        android.graphics.Color $r0;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        $r0 = new android.graphics.Color;

        $f4 = staticinvoke <android.graphics.Color: float saturate(float)>(f0);

        $f5 = staticinvoke <android.graphics.Color: float saturate(float)>(f1);

        $f6 = staticinvoke <android.graphics.Color: float saturate(float)>(f2);

        $f7 = staticinvoke <android.graphics.Color: float saturate(float)>(f3);

        specialinvoke $r0.<android.graphics.Color: void <init>(float,float,float,float)>($f4, $f5, $f6, $f7);

        return $r0;
    }

    public static android.graphics.Color valueOf(float, float, float, float, android.graphics.ColorSpace)
    {
        float f0, f1, f2, f3;
        android.graphics.ColorSpace r0;
        int $i0;
        java.lang.IllegalArgumentException $r1;
        android.graphics.Color $r2;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        r0 := @parameter4: android.graphics.ColorSpace;

        $i0 = virtualinvoke r0.<android.graphics.ColorSpace: int getComponentCount()>();

        if $i0 > 3 goto label1;

        $r2 = new android.graphics.Color;

        specialinvoke $r2.<android.graphics.Color: void <init>(float,float,float,float,android.graphics.ColorSpace)>(f0, f1, f2, f3, r0);

        return $r2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The specified color space must use a color model with at most 3 color components");

        throw $r1;
    }

    public static android.graphics.Color valueOf(int)
    {
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        android.graphics.Color $r0;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;
        android.graphics.ColorSpace$Named $r1;
        android.graphics.ColorSpace $r2;

        i0 := @parameter0: int;

        $r0 = new android.graphics.Color;

        $i1 = i0 >> 16;

        $i2 = $i1 & 255;

        $f0 = (float) $i2;

        $f4 = $f0 / 255.0F;

        $i3 = i0 >> 8;

        $i4 = $i3 & 255;

        $f1 = (float) $i4;

        $f5 = $f1 / 255.0F;

        $i5 = i0 & 255;

        $f2 = (float) $i5;

        $f6 = $f2 / 255.0F;

        $i6 = i0 >> 24;

        $i7 = $i6 & 255;

        $f3 = (float) $i7;

        $f7 = $f3 / 255.0F;

        $r1 = <android.graphics.ColorSpace$Named: android.graphics.ColorSpace$Named SRGB>;

        $r2 = staticinvoke <android.graphics.ColorSpace: android.graphics.ColorSpace get(android.graphics.ColorSpace$Named)>($r1);

        specialinvoke $r0.<android.graphics.Color: void <init>(float,float,float,float,android.graphics.ColorSpace)>($f4, $f5, $f6, $f7, $r2);

        return $r0;
    }

    public static android.graphics.Color valueOf(long)
    {
        long l0;
        android.graphics.Color $r0;
        float $f0, $f1, $f2, $f3;
        android.graphics.ColorSpace $r1;

        l0 := @parameter0: long;

        $r0 = new android.graphics.Color;

        $f0 = staticinvoke <android.graphics.Color: float red(long)>(l0);

        $f1 = staticinvoke <android.graphics.Color: float green(long)>(l0);

        $f2 = staticinvoke <android.graphics.Color: float blue(long)>(l0);

        $f3 = staticinvoke <android.graphics.Color: float alpha(long)>(l0);

        $r1 = staticinvoke <android.graphics.Color: android.graphics.ColorSpace colorSpace(long)>(l0);

        specialinvoke $r0.<android.graphics.Color: void <init>(float,float,float,float,android.graphics.ColorSpace)>($f0, $f1, $f2, $f3, $r1);

        return $r0;
    }

    public static android.graphics.Color valueOf(float[], android.graphics.ColorSpace)
    {
        float[] r0, $r12;
        android.graphics.ColorSpace r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.StringBuilder $r3;
        java.lang.IllegalArgumentException $r9;
        java.lang.String $r10;
        android.graphics.Color $r11;

        r0 := @parameter0: float[];

        r1 := @parameter1: android.graphics.ColorSpace;

        $i0 = lengthof r0;

        $i1 = virtualinvoke r1.<android.graphics.ColorSpace: int getComponentCount()>();

        $i2 = $i1 + 1;

        if $i0 < $i2 goto label1;

        $r11 = new android.graphics.Color;

        $i6 = virtualinvoke r1.<android.graphics.ColorSpace: int getComponentCount()>();

        $i7 = $i6 + 1;

        $r12 = staticinvoke <java.util.Arrays: float[] copyOf(float[],int)>(r0, $i7);

        specialinvoke $r11.<android.graphics.Color: void <init>(float[],android.graphics.ColorSpace)>($r12, r1);

        return $r11;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Received a component array of length ");

        $i3 = lengthof r0;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but the color model requires ");

        $i4 = virtualinvoke r1.<android.graphics.ColorSpace: int getComponentCount()>();

        $i5 = $i4 + 1;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (including alpha)");

        $r9 = new java.lang.IllegalArgumentException;

        $r10 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r9;
    }

    public float alpha()
    {
        android.graphics.Color r0;
        float[] r1;
        int $i0, $i1;
        float $f0;

        r0 := @this: android.graphics.Color;

        r1 = r0.<android.graphics.Color: float[] mComponents>;

        $i0 = lengthof r1;

        $i1 = $i0 - 1;

        $f0 = r1[$i1];

        return $f0;
    }

    public float blue()
    {
        android.graphics.Color r0;
        float[] $r1;
        float $f0;

        r0 := @this: android.graphics.Color;

        $r1 = r0.<android.graphics.Color: float[] mComponents>;

        $f0 = $r1[2];

        return $f0;
    }

    public android.graphics.Color convert(android.graphics.ColorSpace)
    {
        android.graphics.Color r0, $r7;
        android.graphics.ColorSpace r1, $r5;
        android.graphics.ColorSpace$Connector r2;
        float[] r3, r4;
        float $f0, $f1, $f2, $f3;

        r0 := @this: android.graphics.Color;

        r1 := @parameter0: android.graphics.ColorSpace;

        $r5 = r0.<android.graphics.Color: android.graphics.ColorSpace mColorSpace>;

        r2 = staticinvoke <android.graphics.ColorSpace: android.graphics.ColorSpace$Connector connect(android.graphics.ColorSpace,android.graphics.ColorSpace)>($r5, r1);

        r3 = newarray (float)[4];

        r4 = r0.<android.graphics.Color: float[] mComponents>;

        $f0 = r4[0];

        r3[0] = $f0;

        $f1 = r4[1];

        r3[1] = $f1;

        $f2 = r4[2];

        r3[2] = $f2;

        $f3 = r4[3];

        r3[3] = $f3;

        virtualinvoke r2.<android.graphics.ColorSpace$Connector: float[] transform(float[])>(r3);

        $r7 = new android.graphics.Color;

        specialinvoke $r7.<android.graphics.Color: void <init>(float[],android.graphics.ColorSpace)>(r3, r1);

        return $r7;
    }

    public boolean equals(java.lang.Object)
    {
        android.graphics.Color r0, r8;
        java.lang.Class $r1, $r2;
        float[] $r3, $r4;
        boolean $z0, $z1;
        android.graphics.ColorSpace $r5, $r6;
        java.lang.Object r7;

        r0 := @this: android.graphics.Color;

        r7 := @parameter0: java.lang.Object;

        if r0 != r7 goto label1;

        return 1;

     label1:
        if r7 == null goto label4;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke r7.<java.lang.Object: java.lang.Class getClass()>();

        if $r1 == $r2 goto label2;

        goto label4;

     label2:
        r8 = (android.graphics.Color) r7;

        $r4 = r0.<android.graphics.Color: float[] mComponents>;

        $r3 = r8.<android.graphics.Color: float[] mComponents>;

        $z0 = staticinvoke <java.util.Arrays: boolean equals(float[],float[])>($r4, $r3);

        if $z0 != 0 goto label3;

        return 0;

     label3:
        $r6 = r0.<android.graphics.Color: android.graphics.ColorSpace mColorSpace>;

        $r5 = r8.<android.graphics.Color: android.graphics.ColorSpace mColorSpace>;

        $z1 = virtualinvoke $r6.<android.graphics.ColorSpace: boolean equals(java.lang.Object)>($r5);

        return $z1;

     label4:
        return 0;
    }

    public android.graphics.ColorSpace getColorSpace()
    {
        android.graphics.Color r0;
        android.graphics.ColorSpace $r1;

        r0 := @this: android.graphics.Color;

        $r1 = r0.<android.graphics.Color: android.graphics.ColorSpace mColorSpace>;

        return $r1;
    }

    public float getComponent(int)
    {
        android.graphics.Color r0;
        int i0;
        float[] $r1;
        float $f0;

        r0 := @this: android.graphics.Color;

        i0 := @parameter0: int;

        $r1 = r0.<android.graphics.Color: float[] mComponents>;

        $f0 = $r1[i0];

        return $f0;
    }

    public int getComponentCount()
    {
        android.graphics.Color r0;
        android.graphics.ColorSpace $r1;
        int $i0, $i1;

        r0 := @this: android.graphics.Color;

        $r1 = r0.<android.graphics.Color: android.graphics.ColorSpace mColorSpace>;

        $i0 = virtualinvoke $r1.<android.graphics.ColorSpace: int getComponentCount()>();

        $i1 = $i0 + 1;

        return $i1;
    }

    public float[] getComponents()
    {
        android.graphics.Color r0;
        float[] r1, $r2;
        int $i0;

        r0 := @this: android.graphics.Color;

        r1 = r0.<android.graphics.Color: float[] mComponents>;

        $i0 = lengthof r1;

        $r2 = staticinvoke <java.util.Arrays: float[] copyOf(float[],int)>(r1, $i0);

        return $r2;
    }

    public float[] getComponents(float[])
    {
        android.graphics.Color r0;
        int i0, $i1, $i2, $i3, $i4;
        float[] r1, $r4, $r8, r9, r10;
        java.lang.StringBuilder $r2;
        java.lang.IllegalArgumentException $r6;
        java.lang.String $r7;

        r0 := @this: android.graphics.Color;

        r9 := @parameter0: float[];

        if r9 != null goto label1;

        r10 = r0.<android.graphics.Color: float[] mComponents>;

        $i4 = lengthof r10;

        $r8 = staticinvoke <java.util.Arrays: float[] copyOf(float[],int)>(r10, $i4);

        return $r8;

     label1:
        i0 = lengthof r9;

        r1 = r0.<android.graphics.Color: float[] mComponents>;

        $i1 = lengthof r1;

        if i0 < $i1 goto label2;

        $i3 = lengthof r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r9, 0, $i3);

        return r9;

     label2:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The specified array\'s length must be at least ");

        $r4 = r0.<android.graphics.Color: float[] mComponents>;

        $i2 = lengthof $r4;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r6;
    }

    public android.graphics.ColorSpace$Model getModel()
    {
        android.graphics.Color r0;
        android.graphics.ColorSpace $r1;
        android.graphics.ColorSpace$Model $r2;

        r0 := @this: android.graphics.Color;

        $r1 = r0.<android.graphics.Color: android.graphics.ColorSpace mColorSpace>;

        $r2 = virtualinvoke $r1.<android.graphics.ColorSpace: android.graphics.ColorSpace$Model getModel()>();

        return $r2;
    }

    public float green()
    {
        android.graphics.Color r0;
        float[] $r1;
        float $f0;

        r0 := @this: android.graphics.Color;

        $r1 = r0.<android.graphics.Color: float[] mComponents>;

        $f0 = $r1[1];

        return $f0;
    }

    public int hashCode()
    {
        android.graphics.Color r0;
        float[] $r1;
        int $i0, $i1, $i2, $i3;
        android.graphics.ColorSpace $r2;

        r0 := @this: android.graphics.Color;

        $r1 = r0.<android.graphics.Color: float[] mComponents>;

        $i0 = staticinvoke <java.util.Arrays: int hashCode(float[])>($r1);

        $i1 = $i0 * 31;

        $r2 = r0.<android.graphics.Color: android.graphics.ColorSpace mColorSpace>;

        $i2 = virtualinvoke $r2.<android.graphics.ColorSpace: int hashCode()>();

        $i3 = $i1 + $i2;

        return $i3;
    }

    public boolean isSrgb()
    {
        android.graphics.Color r0;
        android.graphics.ColorSpace $r1;
        boolean $z0;

        r0 := @this: android.graphics.Color;

        $r1 = virtualinvoke r0.<android.graphics.Color: android.graphics.ColorSpace getColorSpace()>();

        $z0 = virtualinvoke $r1.<android.graphics.ColorSpace: boolean isSrgb()>();

        return $z0;
    }

    public boolean isWideGamut()
    {
        android.graphics.Color r0;
        android.graphics.ColorSpace $r1;
        boolean $z0;

        r0 := @this: android.graphics.Color;

        $r1 = virtualinvoke r0.<android.graphics.Color: android.graphics.ColorSpace getColorSpace()>();

        $z0 = virtualinvoke $r1.<android.graphics.ColorSpace: boolean isWideGamut()>();

        return $z0;
    }

    public float luminance()
    {
        android.graphics.Color r0;
        android.graphics.ColorSpace $r1, $r6, $r11;
        android.graphics.ColorSpace$Model $r2, $r3, $r7;
        java.lang.StringBuilder $r4;
        java.lang.IllegalArgumentException $r9;
        java.lang.String $r10;
        android.graphics.ColorSpace$Rgb $r12;
        float[] $r13, $r14, $r15;
        float $f0, $f1, $f2, $f3, $f4;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10;
        java.util.function.DoubleUnaryOperator r16;

        r0 := @this: android.graphics.Color;

        $r1 = r0.<android.graphics.Color: android.graphics.ColorSpace mColorSpace>;

        $r2 = virtualinvoke $r1.<android.graphics.ColorSpace: android.graphics.ColorSpace$Model getModel()>();

        $r3 = <android.graphics.ColorSpace$Model: android.graphics.ColorSpace$Model RGB>;

        if $r2 != $r3 goto label1;

        $r11 = r0.<android.graphics.Color: android.graphics.ColorSpace mColorSpace>;

        $r12 = (android.graphics.ColorSpace$Rgb) $r11;

        r16 = virtualinvoke $r12.<android.graphics.ColorSpace$Rgb: java.util.function.DoubleUnaryOperator getEotf()>();

        $r13 = r0.<android.graphics.Color: float[] mComponents>;

        $f0 = $r13[0];

        $d0 = (double) $f0;

        $d1 = interfaceinvoke r16.<java.util.function.DoubleUnaryOperator: double applyAsDouble(double)>($d0);

        $d3 = 0.2126 * $d1;

        $r14 = r0.<android.graphics.Color: float[] mComponents>;

        $f1 = $r14[1];

        $d2 = (double) $f1;

        $d4 = interfaceinvoke r16.<java.util.function.DoubleUnaryOperator: double applyAsDouble(double)>($d2);

        $d5 = 0.7152 * $d4;

        $d7 = $d3 + $d5;

        $r15 = r0.<android.graphics.Color: float[] mComponents>;

        $f2 = $r15[2];

        $d6 = (double) $f2;

        $d8 = interfaceinvoke r16.<java.util.function.DoubleUnaryOperator: double applyAsDouble(double)>($d6);

        $d9 = 0.0722 * $d8;

        $d10 = $d7 + $d9;

        $f3 = (float) $d10;

        $f4 = staticinvoke <android.graphics.Color: float saturate(float)>($f3);

        return $f4;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The specified color must be encoded in an RGB color space. The supplied color space is ");

        $r6 = r0.<android.graphics.Color: android.graphics.ColorSpace mColorSpace>;

        $r7 = virtualinvoke $r6.<android.graphics.ColorSpace: android.graphics.ColorSpace$Model getModel()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = new java.lang.IllegalArgumentException;

        $r10 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r9;
    }

    public long pack()
    {
        android.graphics.Color r0;
        float[] r1;
        android.graphics.ColorSpace $r2;
        float $f0, $f1, $f2, $f3;
        long $l0;

        r0 := @this: android.graphics.Color;

        r1 = r0.<android.graphics.Color: float[] mComponents>;

        $f3 = r1[0];

        $f2 = r1[1];

        $f1 = r1[2];

        $f0 = r1[3];

        $r2 = r0.<android.graphics.Color: android.graphics.ColorSpace mColorSpace>;

        $l0 = staticinvoke <android.graphics.Color: long pack(float,float,float,float,android.graphics.ColorSpace)>($f3, $f2, $f1, $f0, $r2);

        return $l0;
    }

    public float red()
    {
        android.graphics.Color r0;
        float[] $r1;
        float $f0;

        r0 := @this: android.graphics.Color;

        $r1 = r0.<android.graphics.Color: float[] mComponents>;

        $f0 = $r1[0];

        return $f0;
    }

    public int toArgb()
    {
        android.graphics.Color r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19;
        float[] r1, r6, r7;
        android.graphics.ColorSpace $r2, $r3;
        boolean $z0;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27;
        android.graphics.ColorSpace$Connector $r4;

        r0 := @this: android.graphics.Color;

        $r2 = r0.<android.graphics.Color: android.graphics.ColorSpace mColorSpace>;

        $z0 = virtualinvoke $r2.<android.graphics.ColorSpace: boolean isSrgb()>();

        if $z0 == 0 goto label1;

        r6 = r0.<android.graphics.Color: float[] mComponents>;

        $f16 = r6[3];

        $f17 = $f16 * 255.0F;

        $f18 = $f17 + 0.5F;

        i0 = (int) $f18;

        $f19 = r6[0];

        $f20 = $f19 * 255.0F;

        $f21 = $f20 + 0.5F;

        i1 = (int) $f21;

        $f22 = r6[1];

        $f23 = $f22 * 255.0F;

        $f24 = $f23 + 0.5F;

        i2 = (int) $f24;

        $f25 = r6[2];

        $f26 = $f25 * 255.0F;

        $f27 = $f26 + 0.5F;

        $i18 = (int) $f27;

        $i14 = i0 << 24;

        $i13 = i1 << 16;

        $i16 = $i14 | $i13;

        $i15 = i2 << 8;

        $i17 = $i16 | $i15;

        $i19 = $i18 | $i17;

        return $i19;

     label1:
        r1 = newarray (float)[4];

        r7 = r0.<android.graphics.Color: float[] mComponents>;

        $f0 = r7[0];

        r1[0] = $f0;

        $f1 = r7[1];

        r1[1] = $f1;

        $f2 = r7[2];

        r1[2] = $f2;

        $f3 = r7[3];

        r1[3] = $f3;

        $r3 = r0.<android.graphics.Color: android.graphics.ColorSpace mColorSpace>;

        $r4 = staticinvoke <android.graphics.ColorSpace: android.graphics.ColorSpace$Connector connect(android.graphics.ColorSpace)>($r3);

        virtualinvoke $r4.<android.graphics.ColorSpace$Connector: float[] transform(float[])>(r1);

        $f4 = r1[3];

        $f5 = $f4 * 255.0F;

        $f6 = $f5 + 0.5F;

        $i3 = (int) $f6;

        $i6 = $i3 << 24;

        $f7 = r1[0];

        $f8 = $f7 * 255.0F;

        $f9 = $f8 + 0.5F;

        $i4 = (int) $f9;

        $i5 = $i4 << 16;

        $i9 = $i6 | $i5;

        $f10 = r1[1];

        $f11 = $f10 * 255.0F;

        $f12 = $f11 + 0.5F;

        $i7 = (int) $f12;

        $i8 = $i7 << 8;

        $i11 = $i9 | $i8;

        $f13 = r1[2];

        $f14 = $f13 * 255.0F;

        $f15 = $f14 + 0.5F;

        $i10 = (int) $f15;

        $i12 = $i11 | $i10;

        return $i12;
    }

    public java.lang.String toString()
    {
        android.graphics.Color r0;
        float[] r2;
        int i0, i1;
        java.lang.StringBuilder $r3;
        android.graphics.ColorSpace $r4;
        java.lang.String $r5, $r8;
        float $f0;

        r0 := @this: android.graphics.Color;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("Color(");

        r2 = r0.<android.graphics.Color: float[] mComponents>;

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $f0 = r2[i1];

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        i1 = i1 + 1;

        goto label1;

     label2:
        $r4 = r0.<android.graphics.Color: android.graphics.ColorSpace mColorSpace>;

        $r5 = virtualinvoke $r4.<android.graphics.ColorSpace: java.lang.String getName()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }
}
