public class android.graphics.ColorSpace$Renderer extends java.lang.Object
{
    private static final int CHROMATICITY_RESOLUTION;
    private static final int NATIVE_SIZE;
    private static final double ONE_THIRD;
    private static final float[] SPECTRUM_LOCUS_X;
    private static final float[] SPECTRUM_LOCUS_Y;
    private static final float UCS_SCALE;
    private boolean mClip;
    private final java.util.List mColorSpaces;
    private final java.util.List mPoints;
    private boolean mShowWhitePoint;
    private int mSize;
    private boolean mUcs;

    static void <clinit>()
    {
        float[] $r0, $r1;

        <android.graphics.ColorSpace$Renderer: float UCS_SCALE> = 1.5F;

        <android.graphics.ColorSpace$Renderer: double ONE_THIRD> = 0.3333333333333333;

        <android.graphics.ColorSpace$Renderer: int NATIVE_SIZE> = 1440;

        <android.graphics.ColorSpace$Renderer: int CHROMATICITY_RESOLUTION> = 32;

        $r0 = newarray (float)[95];

        $r0[0] = 0.175596F;

        $r0[1] = 0.172787F;

        $r0[2] = 0.170806F;

        $r0[3] = 0.170085F;

        $r0[4] = 0.160343F;

        $r0[5] = 0.146958F;

        $r0[6] = 0.139149F;

        $r0[7] = 0.133536F;

        $r0[8] = 0.126688F;

        $r0[9] = 0.11583F;

        $r0[10] = 0.109616F;

        $r0[11] = 0.099146F;

        $r0[12] = 0.09131F;

        $r0[13] = 0.07813F;

        $r0[14] = 0.068717F;

        $r0[15] = 0.054675F;

        $r0[16] = 0.040763F;

        $r0[17] = 0.027497F;

        $r0[18] = 0.01627F;

        $r0[19] = 0.008169F;

        $r0[20] = 0.004876F;

        $r0[21] = 0.003983F;

        $r0[22] = 0.003859F;

        $r0[23] = 0.004646F;

        $r0[24] = 0.007988F;

        $r0[25] = 0.01387F;

        $r0[26] = 0.022244F;

        $r0[27] = 0.027273F;

        $r0[28] = 0.03282F;

        $r0[29] = 0.038851F;

        $r0[30] = 0.045327F;

        $r0[31] = 0.052175F;

        $r0[32] = 0.059323F;

        $r0[33] = 0.066713F;

        $r0[34] = 0.074299F;

        $r0[35] = 0.089937F;

        $r0[36] = 0.114155F;

        $r0[37] = 0.138695F;

        $r0[38] = 0.154714F;

        $r0[39] = 0.192865F;

        $r0[40] = 0.229607F;

        $r0[41] = 0.26576F;

        $r0[42] = 0.301588F;

        $r0[43] = 0.337346F;

        $r0[44] = 0.373083F;

        $r0[45] = 0.408717F;

        $r0[46] = 0.444043F;

        $r0[47] = 0.478755F;

        $r0[48] = 0.512467F;

        $r0[49] = 0.544767F;

        $r0[50] = 0.575132F;

        $r0[51] = 0.602914F;

        $r0[52] = 0.627018F;

        $r0[53] = 0.648215F;

        $r0[54] = 0.665746F;

        $r0[55] = 0.680061F;

        $r0[56] = 0.691487F;

        $r0[57] = 0.700589F;

        $r0[58] = 0.707901F;

        $r0[59] = 0.714015F;

        $r0[60] = 0.719017F;

        $r0[61] = 0.723016F;

        $r0[62] = 0.734674F;

        $r0[63] = 0.717203F;

        $r0[64] = 0.699732F;

        $r0[65] = 0.68226F;

        $r0[66] = 0.664789F;

        $r0[67] = 0.647318F;

        $r0[68] = 0.629847F;

        $r0[69] = 0.612376F;

        $r0[70] = 0.594905F;

        $r0[71] = 0.577433F;

        $r0[72] = 0.559962F;

        $r0[73] = 0.542491F;

        $r0[74] = 0.52502F;

        $r0[75] = 0.507549F;

        $r0[76] = 0.490077F;

        $r0[77] = 0.472606F;

        $r0[78] = 0.455135F;

        $r0[79] = 0.437664F;

        $r0[80] = 0.420193F;

        $r0[81] = 0.402721F;

        $r0[82] = 0.38525F;

        $r0[83] = 0.367779F;

        $r0[84] = 0.350308F;

        $r0[85] = 0.332837F;

        $r0[86] = 0.315366F;

        $r0[87] = 0.297894F;

        $r0[88] = 0.280423F;

        $r0[89] = 0.262952F;

        $r0[90] = 0.245481F;

        $r0[91] = 0.22801F;

        $r0[92] = 0.210538F;

        $r0[93] = 0.193067F;

        $r0[94] = 0.175596F;

        <android.graphics.ColorSpace$Renderer: float[] SPECTRUM_LOCUS_X> = $r0;

        $r1 = newarray (float)[95];

        $r1[0] = 0.005295F;

        $r1[1] = 0.0048F;

        $r1[2] = 0.005472F;

        $r1[3] = 0.005976F;

        $r1[4] = 0.014496F;

        $r1[5] = 0.026643F;

        $r1[6] = 0.035211F;

        $r1[7] = 0.042704F;

        $r1[8] = 0.053441F;

        $r1[9] = 0.073601F;

        $r1[10] = 0.086866F;

        $r1[11] = 0.112037F;

        $r1[12] = 0.132737F;

        $r1[13] = 0.170464F;

        $r1[14] = 0.200773F;

        $r1[15] = 0.254155F;

        $r1[16] = 0.317049F;

        $r1[17] = 0.387997F;

        $r1[18] = 0.463035F;

        $r1[19] = 0.538504F;

        $r1[20] = 0.587196F;

        $r1[21] = 0.610526F;

        $r1[22] = 0.654897F;

        $r1[23] = 0.67597F;

        $r1[24] = 0.715407F;

        $r1[25] = 0.750246F;

        $r1[26] = 0.779682F;

        $r1[27] = 0.792153F;

        $r1[28] = 0.802971F;

        $r1[29] = 0.812059F;

        $r1[30] = 0.81943F;

        $r1[31] = 0.8252F;

        $r1[32] = 0.82946F;

        $r1[33] = 0.832306F;

        $r1[34] = 0.833833F;

        $r1[35] = 0.833316F;

        $r1[36] = 0.826231F;

        $r1[37] = 0.814796F;

        $r1[38] = 0.805884F;

        $r1[39] = 0.781648F;

        $r1[40] = 0.754347F;

        $r1[41] = 0.724342F;

        $r1[42] = 0.692326F;

        $r1[43] = 0.658867F;

        $r1[44] = 0.62447F;

        $r1[45] = 0.589626F;

        $r1[46] = 0.554734F;

        $r1[47] = 0.520222F;

        $r1[48] = 0.486611F;

        $r1[49] = 0.454454F;

        $r1[50] = 0.424252F;

        $r1[51] = 0.396516F;

        $r1[52] = 0.37251F;

        $r1[53] = 0.351413F;

        $r1[54] = 0.334028F;

        $r1[55] = 0.319765F;

        $r1[56] = 0.308359F;

        $r1[57] = 0.299317F;

        $r1[58] = 0.292044F;

        $r1[59] = 0.285945F;

        $r1[60] = 0.280951F;

        $r1[61] = 0.276964F;

        $r1[62] = 0.265326F;

        $r1[63] = 0.2572F;

        $r1[64] = 0.249074F;

        $r1[65] = 0.240948F;

        $r1[66] = 0.232822F;

        $r1[67] = 0.224696F;

        $r1[68] = 0.21657F;

        $r1[69] = 0.208444F;

        $r1[70] = 0.200318F;

        $r1[71] = 0.192192F;

        $r1[72] = 0.184066F;

        $r1[73] = 0.17594F;

        $r1[74] = 0.167814F;

        $r1[75] = 0.159688F;

        $r1[76] = 0.151562F;

        $r1[77] = 0.143436F;

        $r1[78] = 0.135311F;

        $r1[79] = 0.127185F;

        $r1[80] = 0.119059F;

        $r1[81] = 0.110933F;

        $r1[82] = 0.102807F;

        $r1[83] = 0.094681F;

        $r1[84] = 0.086555F;

        $r1[85] = 0.078429F;

        $r1[86] = 0.070303F;

        $r1[87] = 0.062177F;

        $r1[88] = 0.054051F;

        $r1[89] = 0.045925F;

        $r1[90] = 0.037799F;

        $r1[91] = 0.029673F;

        $r1[92] = 0.021547F;

        $r1[93] = 0.013421F;

        $r1[94] = 0.005295F;

        <android.graphics.ColorSpace$Renderer: float[] SPECTRUM_LOCUS_Y> = $r1;

        return;
    }

    private void <init>()
    {
        android.graphics.ColorSpace$Renderer r0;
        java.util.ArrayList $r1, $r2;

        r0 := @this: android.graphics.ColorSpace$Renderer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.graphics.ColorSpace$Renderer: int mSize> = 1024;

        r0.<android.graphics.ColorSpace$Renderer: boolean mShowWhitePoint> = 1;

        r0.<android.graphics.ColorSpace$Renderer: boolean mClip> = 0;

        r0.<android.graphics.ColorSpace$Renderer: boolean mUcs> = 0;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(2);

        r0.<android.graphics.ColorSpace$Renderer: java.util.List mColorSpaces> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>(0);

        r0.<android.graphics.ColorSpace$Renderer: java.util.List mPoints> = $r2;

        return;
    }

    void <init>(android.graphics.ColorSpace$1)
    {
        android.graphics.ColorSpace$Renderer r0;
        android.graphics.ColorSpace$1 r1;

        r0 := @this: android.graphics.ColorSpace$Renderer;

        r1 := @parameter0: android.graphics.ColorSpace$1;

        specialinvoke r0.<android.graphics.ColorSpace$Renderer: void <init>()>();

        return;
    }

    private static void computeChromaticityMesh(float[], int[])
    {
        float[] r0, r3, r4, $r6, $r7, $r8, $r9, $r10, $r11, $r12;
        int[] r1;
        android.graphics.ColorSpace r2;
        float f0, f1, f2, f3, f4, f5, f6, f7, f8, f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, f28, f29, f30, f31;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, i19, i20, i21, i22, i23, i24, i25, i26, i27, i28, i29, i30, i31, i32, i33, i34, i35, i36;
        double d0, d1, d2, d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46, $d47, $d48, $d49, $d50, $d51, $d52, $d53, $d54, $d55, $d56, $d57, $d58, $d59, $d60, $d61, $d62, $d63, $d64, $d65;
        android.graphics.ColorSpace$Named $r5;

        r0 := @parameter0: float[];

        r1 := @parameter1: int[];

        $r5 = <android.graphics.ColorSpace$Named: android.graphics.ColorSpace$Named SRGB>;

        r2 = staticinvoke <android.graphics.ColorSpace: android.graphics.ColorSpace get(android.graphics.ColorSpace$Named)>($r5);

        r3 = newarray (float)[3];

        i19 = 0;

        i20 = 0;

        i21 = 0;

     label1:
        r4 = <android.graphics.ColorSpace$Renderer: float[] SPECTRUM_LOCUS_X>;

        $i2 = lengthof r4;

        if i21 >= $i2 goto label4;

        $i3 = lengthof r4;

        $i4 = $i3 - 1;

        $i5 = i21 % $i4;

        i22 = $i5 + 1;

        $r6 = <android.graphics.ColorSpace$Renderer: float[] SPECTRUM_LOCUS_Y>;

        $f10 = $r6[i21];

        $d4 = (double) $f10;

        $d7 = $d4 - 0.3333333333333333;

        $f11 = r4[i21];

        $d5 = (double) $f11;

        $d6 = $d5 - 0.3333333333333333;

        $d8 = staticinvoke <java.lang.Math: double atan2(double,double)>($d7, $d6);

        f0 = (float) $d8;

        $r7 = <android.graphics.ColorSpace$Renderer: float[] SPECTRUM_LOCUS_Y>;

        $f12 = $r7[i22];

        $d9 = (double) $f12;

        $d12 = $d9 - 0.3333333333333333;

        $r8 = <android.graphics.ColorSpace$Renderer: float[] SPECTRUM_LOCUS_X>;

        $f13 = $r8[i22];

        $d10 = (double) $f13;

        $d11 = $d10 - 0.3333333333333333;

        $d13 = staticinvoke <java.lang.Math: double atan2(double,double)>($d12, $d11);

        f1 = (float) $d13;

        $r9 = <android.graphics.ColorSpace$Renderer: float[] SPECTRUM_LOCUS_X>;

        $f14 = $r9[i21];

        $d14 = (double) $f14;

        $d15 = $d14 - 0.3333333333333333;

        $d16 = staticinvoke <android.graphics.ColorSpace$Renderer: double sqr(double)>($d15);

        $r10 = <android.graphics.ColorSpace$Renderer: float[] SPECTRUM_LOCUS_Y>;

        $f15 = $r10[i21];

        $d17 = (double) $f15;

        $d18 = $d17 - 0.3333333333333333;

        $d19 = staticinvoke <android.graphics.ColorSpace$Renderer: double sqr(double)>($d18);

        $d20 = $d16 + $d19;

        $d21 = staticinvoke <java.lang.Math: double pow(double,double)>($d20, 0.5);

        f2 = (float) $d21;

        $r11 = <android.graphics.ColorSpace$Renderer: float[] SPECTRUM_LOCUS_X>;

        $f16 = $r11[i22];

        $d22 = (double) $f16;

        $d23 = $d22 - 0.3333333333333333;

        $d24 = staticinvoke <android.graphics.ColorSpace$Renderer: double sqr(double)>($d23);

        $r12 = <android.graphics.ColorSpace$Renderer: float[] SPECTRUM_LOCUS_Y>;

        $f17 = $r12[i22];

        $d25 = (double) $f17;

        $d26 = $d25 - 0.3333333333333333;

        $d27 = staticinvoke <android.graphics.ColorSpace$Renderer: double sqr(double)>($d26);

        $d28 = $d24 + $d27;

        $d29 = staticinvoke <java.lang.Math: double pow(double,double)>($d28, 0.5);

        f3 = (float) $d29;

        i23 = 1;

        i0 = i21;

        i24 = i20;

        i25 = i19;

     label2:
        if i23 > 32 goto label3;

        $f18 = (float) i23;

        f28 = $f18 / 32.0F;

        $i6 = i23 - 1;

        $f19 = (float) $i6;

        f29 = $f19 / 32.0F;

        $d31 = (double) f2;

        $d30 = (double) f0;

        $d32 = staticinvoke <java.lang.Math: double cos(double)>($d30);

        d0 = $d31 * $d32;

        $d34 = (double) f2;

        $d33 = (double) f0;

        $d35 = staticinvoke <java.lang.Math: double sin(double)>($d33);

        d1 = $d34 * $d35;

        $d37 = (double) f3;

        $d36 = (double) f1;

        $d38 = staticinvoke <java.lang.Math: double cos(double)>($d36);

        d2 = $d37 * $d38;

        $d40 = (double) f3;

        $d39 = (double) f1;

        $d41 = staticinvoke <java.lang.Math: double sin(double)>($d39);

        d3 = $d40 * $d41;

        $d42 = (double) f28;

        $d43 = $d42 * d0;

        $d44 = $d43 + 0.3333333333333333;

        f4 = (float) $d44;

        $d45 = (double) f28;

        $d46 = $d45 * d1;

        $d47 = $d46 + 0.3333333333333333;

        f5 = (float) $d47;

        $d48 = (double) f29;

        $d49 = $d48 * d0;

        $d50 = $d49 + 0.3333333333333333;

        f6 = (float) $d50;

        $d51 = (double) f29;

        $d52 = $d51 * d1;

        $d53 = $d52 + 0.3333333333333333;

        f7 = (float) $d53;

        $d54 = (double) f29;

        $d55 = $d54 * d2;

        $d56 = $d55 + 0.3333333333333333;

        f8 = (float) $d56;

        $d57 = (double) f29;

        $d58 = $d57 * d3;

        $d59 = $d58 + 0.3333333333333333;

        f30 = (float) $d59;

        $d60 = (double) f28;

        $d61 = $d60 * d2;

        $d62 = $d61 + 0.3333333333333333;

        f9 = (float) $d62;

        $d63 = (double) f28;

        $d64 = $d63 * d3;

        $d65 = $d64 + 0.3333333333333333;

        f31 = (float) $d65;

        $f20 = 1.0F - f4;

        $f21 = $f20 - f5;

        $i7 = staticinvoke <android.graphics.ColorSpace$Renderer: int computeColor(float[],float,float,float,android.graphics.ColorSpace)>(r3, f4, f5, $f21, r2);

        r1[i24] = $i7;

        $i8 = i24 + 1;

        $f22 = 1.0F - f6;

        $f23 = $f22 - f7;

        $i9 = staticinvoke <android.graphics.ColorSpace$Renderer: int computeColor(float[],float,float,float,android.graphics.ColorSpace)>(r3, f6, f7, $f23, r2);

        r1[$i8] = $i9;

        $i10 = i24 + 2;

        $f24 = 1.0F - f8;

        $f25 = $f24 - f30;

        $i11 = staticinvoke <android.graphics.ColorSpace$Renderer: int computeColor(float[],float,float,float,android.graphics.ColorSpace)>(r3, f8, f30, $f25, r2);

        r1[$i10] = $i11;

        $i13 = i24 + 3;

        $i12 = r1[i24];

        r1[$i13] = $i12;

        $i16 = i24 + 4;

        $i14 = i24 + 2;

        $i15 = r1[$i14];

        r1[$i16] = $i15;

        $i17 = i24 + 5;

        $f26 = 1.0F - f9;

        $f27 = $f26 - f31;

        $i18 = staticinvoke <android.graphics.ColorSpace$Renderer: int computeColor(float[],float,float,float,android.graphics.ColorSpace)>(r3, f9, f31, $f27, r2);

        r1[$i17] = $i18;

        i26 = i25 + 1;

        r0[i25] = f4;

        i27 = i26 + 1;

        r0[i26] = f5;

        i28 = i27 + 1;

        r0[i27] = f6;

        i29 = i28 + 1;

        r0[i28] = f7;

        i30 = i29 + 1;

        r0[i29] = f8;

        i1 = i30 + 1;

        r0[i30] = f30;

        i31 = i1 + 1;

        r0[i1] = f4;

        i32 = i31 + 1;

        r0[i31] = f5;

        i33 = i32 + 1;

        r0[i32] = f8;

        i34 = i33 + 1;

        r0[i33] = f30;

        i35 = i34 + 1;

        r0[i34] = f9;

        r0[i35] = f31;

        i23 = i23 + 1;

        i24 = i24 + 6;

        i25 = i35 + 1;

        goto label2;

     label3:
        i36 = i0 + 1;

        i19 = i25;

        i20 = i24;

        i21 = i36;

        goto label1;

     label4:
        return;
    }

    private static int computeColor(float[], float, float, float, android.graphics.ColorSpace)
    {
        float[] r0;
        float f0, f1, f2, $f3, $f4, $f5, $f6, $f7, $f8;
        android.graphics.ColorSpace r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;

        r0 := @parameter0: float[];

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        f2 := @parameter3: float;

        r1 := @parameter4: android.graphics.ColorSpace;

        r0[0] = f0;

        r0[1] = f1;

        r0[2] = f2;

        virtualinvoke r1.<android.graphics.ColorSpace: float[] fromXyz(float[])>(r0);

        $f3 = r0[0];

        $f4 = $f3 * 255.0F;

        $i0 = (int) $f4;

        $i1 = $i0 & 255;

        $i2 = $i1 << 16;

        $i6 = $i2 | -16777216;

        $f5 = r0[1];

        $f6 = $f5 * 255.0F;

        $i3 = (int) $f6;

        $i4 = $i3 & 255;

        $i5 = $i4 << 8;

        $i9 = $i6 | $i5;

        $f7 = r0[2];

        $f8 = $f7 * 255.0F;

        $i7 = (int) $f8;

        $i8 = $i7 & 255;

        $i10 = $i9 | $i8;

        return $i10;
    }

    private void drawBox(android.graphics.Canvas, int, int, android.graphics.Paint, android.graphics.Path)
    {
        android.graphics.ColorSpace$Renderer r0;
        android.graphics.Canvas r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i11, $i12, i13, i14;
        android.graphics.Paint r2;
        android.graphics.Path r3;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, $f34, $f35, $f36, $f37, $f38, $f39, $f40, $f41, $f42, $f43, $f44, $f45, $f46, $f47, $f48, $f49, $f50, $f51, $f52, $f53, f54, f55, f56, f57, f58, f59, f60, f61, f62;
        boolean $z0;
        android.graphics.Paint$Style $r5, $r6, $r10;
        android.graphics.Typeface $r7;
        android.graphics.Rect $r9;
        java.lang.StringBuilder $r11;
        byte b10;
        java.lang.String r15;

        r0 := @this: android.graphics.ColorSpace$Renderer;

        r1 := @parameter0: android.graphics.Canvas;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: android.graphics.Paint;

        r3 := @parameter4: android.graphics.Path;

        $z0 = r0.<android.graphics.ColorSpace$Renderer: boolean mUcs>;

        if $z0 == 0 goto label1;

        b10 = 7;

        f54 = 1.5F;

        goto label2;

     label1:
        b10 = 10;

        f54 = 1.0F;

     label2:
        $r5 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke r2.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r5);

        virtualinvoke r2.<android.graphics.Paint: void setStrokeWidth(float)>(2.0F);

        virtualinvoke r2.<android.graphics.Paint: void setColor(int)>(-4144960);

        i11 = 1;

     label3:
        $i12 = b10 - 1;

        if i11 >= $i12 goto label4;

        $f42 = (float) i11;

        f55 = $f42 / 10.0F;

        $f43 = (float) i0;

        $f44 = $f43 * f55;

        f56 = $f44 * f54;

        $f48 = (float) i1;

        $f45 = (float) i1;

        $f46 = $f45 * f55;

        $f47 = $f46 * f54;

        f57 = $f48 - $f47;

        $f49 = (float) i0;

        $f50 = $f49 * 0.9F;

        virtualinvoke r1.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>(0.0F, f57, $f50, f57, r2);

        $f53 = (float) i1;

        $f51 = (float) i1;

        $f52 = $f51 * 0.1F;

        virtualinvoke r1.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>(f56, $f53, f56, $f52, r2);

        i11 = i11 + 1;

        goto label3;

     label4:
        virtualinvoke r2.<android.graphics.Paint: void setStrokeWidth(float)>(4.0F);

        virtualinvoke r2.<android.graphics.Paint: void setColor(int)>(-16777216);

        i13 = 1;

     label5:
        $i2 = b10 - 1;

        if i13 >= $i2 goto label6;

        $f28 = (float) i13;

        f58 = $f28 / 10.0F;

        $f29 = (float) i0;

        $f30 = $f29 * f58;

        f59 = $f30 * f54;

        $f34 = (float) i1;

        $f31 = (float) i1;

        $f32 = $f31 * f58;

        $f33 = $f32 * f54;

        f60 = $f34 - $f33;

        $f35 = (float) i0;

        $f36 = $f35 / 100.0F;

        virtualinvoke r1.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>(0.0F, f60, $f36, f60, r2);

        $f41 = (float) i1;

        $f39 = (float) i1;

        $f37 = (float) i1;

        $f38 = $f37 / 100.0F;

        $f40 = $f39 - $f38;

        virtualinvoke r1.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>(f59, $f41, f59, $f40, r2);

        i13 = i13 + 1;

        goto label5;

     label6:
        $r6 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;

        virtualinvoke r2.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r6);

        virtualinvoke r2.<android.graphics.Paint: void setTextSize(float)>(36.0F);

        $r7 = staticinvoke <android.graphics.Typeface: android.graphics.Typeface create(java.lang.String,int)>("sans-serif-light", 0);

        virtualinvoke r2.<android.graphics.Paint: android.graphics.Typeface setTypeface(android.graphics.Typeface)>($r7);

        $r9 = new android.graphics.Rect;

        specialinvoke $r9.<android.graphics.Rect: void <init>()>();

        i14 = 1;

     label7:
        $i3 = b10 - 1;

        if i14 >= $i3 goto label8;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0.");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i14);

        r15 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $i4 = virtualinvoke r15.<java.lang.String: int length()>();

        virtualinvoke r2.<android.graphics.Paint: void getTextBounds(java.lang.String,int,int,android.graphics.Rect)>(r15, 0, $i4, $r9);

        $f12 = (float) i14;

        f0 = $f12 / 10.0F;

        f1 = (float) i0;

        f61 = (float) i1;

        f62 = (float) i1;

        $f13 = (float) i0;

        $f14 = $f13 * -0.05F;

        $f15 = $f14 + 10.0F;

        $i5 = virtualinvoke $r9.<android.graphics.Rect: int height()>();

        $f16 = (float) $i5;

        $f20 = $f16 / 2.0F;

        $f17 = f62 * f0;

        $f18 = $f17 * f54;

        $f19 = f61 - $f18;

        $f21 = $f20 + $f19;

        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>(r15, $f15, $f21, r2);

        $f22 = f1 * f0;

        $f23 = $f22 * f54;

        $i6 = virtualinvoke $r9.<android.graphics.Rect: int width()>();

        $f24 = (float) $i6;

        $f25 = $f24 / 2.0F;

        $f26 = $f23 - $f25;

        $i7 = virtualinvoke $r9.<android.graphics.Rect: int height()>();

        $i8 = $i7 + i1;

        $i9 = $i8 + 16;

        $f27 = (float) $i9;

        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>(r15, $f26, $f27, r2);

        i14 = i14 + 1;

        goto label7;

     label8:
        $r10 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke r2.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r10);

        $f2 = (float) i1;

        virtualinvoke r3.<android.graphics.Path: void moveTo(float,float)>(0.0F, $f2);

        $f3 = (float) i0;

        $f5 = $f3 * 0.9F;

        $f4 = (float) i1;

        virtualinvoke r3.<android.graphics.Path: void lineTo(float,float)>($f5, $f4);

        $f6 = (float) i0;

        $f9 = $f6 * 0.9F;

        $f7 = (float) i1;

        $f8 = $f7 * 0.1F;

        virtualinvoke r3.<android.graphics.Path: void lineTo(float,float)>($f9, $f8);

        $f10 = (float) i1;

        $f11 = $f10 * 0.1F;

        virtualinvoke r3.<android.graphics.Path: void lineTo(float,float)>(0.0F, $f11);

        virtualinvoke r3.<android.graphics.Path: void close()>();

        virtualinvoke r1.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>(r3, r2);

        return;
    }

    private void drawGamuts(android.graphics.Canvas, int, int, android.graphics.Paint, android.graphics.Path, float[], float[])
    {
        android.graphics.ColorSpace$Renderer r0;
        android.graphics.Canvas r1;
        int i0, i1, i2;
        android.graphics.Paint r2;
        android.graphics.Path r3;
        float[] r4, r5;
        java.util.Iterator r6;
        android.util.Pair r7;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.List $r8;
        java.lang.Object $r9, $r10, $r11;
        java.lang.Integer $r12;
        android.graphics.ColorSpace$Model $r13, $r14;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, f32, f33;
        android.graphics.Paint$Style $r15, $r17;
        android.graphics.ColorSpace r18;
        android.graphics.ColorSpace$Rgb r19;

        r0 := @this: android.graphics.ColorSpace$Renderer;

        r1 := @parameter0: android.graphics.Canvas;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: android.graphics.Paint;

        r3 := @parameter4: android.graphics.Path;

        r4 := @parameter5: float[];

        r5 := @parameter6: float[];

        $z0 = r0.<android.graphics.ColorSpace$Renderer: boolean mUcs>;

        if $z0 == 0 goto label1;

        f32 = 1.5F;

        goto label2;

     label1:
        f32 = 1.0F;

     label2:
        f33 = 4.0F / f32;

        $r8 = r0.<android.graphics.ColorSpace$Renderer: java.util.List mColorSpaces>;

        r6 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z4 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label7;

        $r9 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r7 = (android.util.Pair) $r9;

        $r10 = r7.<android.util.Pair: java.lang.Object first>;

        r18 = (android.graphics.ColorSpace) $r10;

        $r11 = r7.<android.util.Pair: java.lang.Object second>;

        $r12 = (java.lang.Integer) $r11;

        i2 = virtualinvoke $r12.<java.lang.Integer: int intValue()>();

        $r13 = virtualinvoke r18.<android.graphics.ColorSpace: android.graphics.ColorSpace$Model getModel()>();

        $r14 = <android.graphics.ColorSpace$Model: android.graphics.ColorSpace$Model RGB>;

        if $r13 == $r14 goto label4;

        goto label3;

     label4:
        r19 = (android.graphics.ColorSpace$Rgb) r18;

        $z1 = r0.<android.graphics.ColorSpace$Renderer: boolean mUcs>;

        staticinvoke <android.graphics.ColorSpace$Renderer: void getPrimaries(android.graphics.ColorSpace$Rgb,float[],boolean)>(r19, r4, $z1);

        virtualinvoke r3.<android.graphics.Path: void rewind()>();

        $f1 = (float) i0;

        $f0 = r4[0];

        $f7 = $f1 * $f0;

        $f5 = (float) i1;

        $f3 = (float) i1;

        $f2 = r4[1];

        $f4 = $f3 * $f2;

        $f6 = $f5 - $f4;

        virtualinvoke r3.<android.graphics.Path: void moveTo(float,float)>($f7, $f6);

        $f9 = (float) i0;

        $f8 = r4[2];

        $f15 = $f9 * $f8;

        $f13 = (float) i1;

        $f11 = (float) i1;

        $f10 = r4[3];

        $f12 = $f11 * $f10;

        $f14 = $f13 - $f12;

        virtualinvoke r3.<android.graphics.Path: void lineTo(float,float)>($f15, $f14);

        $f17 = (float) i0;

        $f16 = r4[4];

        $f23 = $f17 * $f16;

        $f21 = (float) i1;

        $f19 = (float) i1;

        $f18 = r4[5];

        $f20 = $f19 * $f18;

        $f22 = $f21 - $f20;

        virtualinvoke r3.<android.graphics.Path: void lineTo(float,float)>($f23, $f22);

        virtualinvoke r3.<android.graphics.Path: void close()>();

        $r15 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke r2.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r15);

        virtualinvoke r2.<android.graphics.Paint: void setColor(int)>(i2);

        virtualinvoke r1.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>(r3, r2);

        $z2 = r0.<android.graphics.ColorSpace$Renderer: boolean mShowWhitePoint>;

        if $z2 == 0 goto label6;

        virtualinvoke r19.<android.graphics.ColorSpace$Rgb: float[] getWhitePoint(float[])>(r5);

        $z3 = r0.<android.graphics.ColorSpace$Renderer: boolean mUcs>;

        if $z3 == 0 goto label5;

        staticinvoke <android.graphics.ColorSpace: void access$3000(float[])>(r5);

     label5:
        $r17 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;

        virtualinvoke r2.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r17);

        virtualinvoke r2.<android.graphics.Paint: void setColor(int)>(i2);

        $f25 = (float) i0;

        $f24 = r5[0];

        $f31 = $f25 * $f24;

        $f29 = (float) i1;

        $f27 = (float) i1;

        $f26 = r5[1];

        $f28 = $f27 * $f26;

        $f30 = $f29 - $f28;

        virtualinvoke r1.<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>($f31, $f30, f33, r2);

     label6:
        goto label3;

     label7:
        return;
    }

    private void drawLocus(android.graphics.Canvas, int, int, android.graphics.Paint, android.graphics.Path, float[])
    {
        android.graphics.ColorSpace$Renderer r0;
        android.graphics.Canvas r1;
        android.graphics.Paint r2;
        android.graphics.Path r3;
        float[] r4, $r8, r21, $r24;
        int[] r5, r22;
        java.util.Iterator r6;
        android.graphics.ColorSpace r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i11, $i12, $i13, i14, i15, i16, $i17, i18, $i19, i20, $i21;
        boolean $z0, $z1, $z2, $z3, $z5;
        android.graphics.Canvas$VertexMode $r9, $r13, $r14;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, $f34, $f35, $f36, f37;
        android.graphics.Paint$Style $r10;
        java.util.List $r11, $r12;
        java.lang.Object $r15, $r17;
        android.util.Pair $r16;
        android.graphics.ColorSpace$Model $r18, $r19;
        android.graphics.ColorSpace$Rgb $r20;

        r0 := @this: android.graphics.ColorSpace$Renderer;

        r1 := @parameter0: android.graphics.Canvas;

        i14 := @parameter1: int;

        i15 := @parameter2: int;

        r2 := @parameter3: android.graphics.Paint;

        r3 := @parameter4: android.graphics.Path;

        r21 := @parameter5: float[];

        $r8 = <android.graphics.ColorSpace$Renderer: float[] SPECTRUM_LOCUS_X>;

        $i0 = lengthof $r8;

        $i1 = $i0 * 32;

        $i2 = $i1 * 6;

        $i3 = $i2 * 2;

        r4 = newarray (float)[$i3];

        $i4 = lengthof r4;

        r5 = newarray (int)[$i4];

        staticinvoke <android.graphics.ColorSpace$Renderer: void computeChromaticityMesh(float[],int[])>(r4, r5);

        $z0 = r0.<android.graphics.ColorSpace$Renderer: boolean mUcs>;

        if $z0 == 0 goto label01;

        staticinvoke <android.graphics.ColorSpace: void access$3000(float[])>(r4);

     label01:
        i16 = 0;

     label02:
        $i17 = lengthof r4;

        if i16 >= $i17 goto label03;

        $f28 = r4[i16];

        $f27 = (float) i14;

        $f29 = $f28 * $f27;

        r4[i16] = $f29;

        $i13 = i16 + 1;

        $f33 = (float) i15;

        $i12 = i16 + 1;

        $f31 = r4[$i12];

        $f30 = (float) i15;

        $f32 = $f31 * $f30;

        $f34 = $f33 - $f32;

        r4[$i13] = $f34;

        i16 = i16 + 2;

        goto label02;

     label03:
        $z1 = r0.<android.graphics.ColorSpace$Renderer: boolean mClip>;

        if $z1 == 0 goto label07;

        $r11 = r0.<android.graphics.ColorSpace$Renderer: java.util.List mColorSpaces>;

        $i7 = interfaceinvoke $r11.<java.util.List: int size()>();

        if $i7 <= 0 goto label07;

        $r12 = r0.<android.graphics.ColorSpace$Renderer: java.util.List mColorSpaces>;

        r6 = interfaceinvoke $r12.<java.util.List: java.util.Iterator iterator()>();

     label04:
        $z3 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label06;

        $r15 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        $r16 = (android.util.Pair) $r15;

        $r17 = $r16.<android.util.Pair: java.lang.Object first>;

        r7 = (android.graphics.ColorSpace) $r17;

        $r18 = virtualinvoke r7.<android.graphics.ColorSpace: android.graphics.ColorSpace$Model getModel()>();

        $r19 = <android.graphics.ColorSpace$Model: android.graphics.ColorSpace$Model RGB>;

        if $r18 == $r19 goto label05;

        goto label04;

     label05:
        $r20 = (android.graphics.ColorSpace$Rgb) r7;

        $z5 = r0.<android.graphics.ColorSpace$Renderer: boolean mUcs>;

        staticinvoke <android.graphics.ColorSpace$Renderer: void getPrimaries(android.graphics.ColorSpace$Rgb,float[],boolean)>($r20, r21, $z5);

     label06:
        virtualinvoke r3.<android.graphics.Path: void rewind()>();

        $f4 = (float) i14;

        $f3 = r21[0];

        $f10 = $f4 * $f3;

        $f8 = (float) i15;

        $f6 = (float) i15;

        $f5 = r21[1];

        $f7 = $f6 * $f5;

        $f9 = $f8 - $f7;

        virtualinvoke r3.<android.graphics.Path: void moveTo(float,float)>($f10, $f9);

        $f12 = (float) i14;

        $f11 = r21[2];

        $f18 = $f12 * $f11;

        $f16 = (float) i15;

        $f14 = (float) i15;

        $f13 = r21[3];

        $f15 = $f14 * $f13;

        $f17 = $f16 - $f15;

        virtualinvoke r3.<android.graphics.Path: void lineTo(float,float)>($f18, $f17);

        $f20 = (float) i14;

        $f19 = r21[4];

        $f26 = $f20 * $f19;

        $f24 = (float) i15;

        $f22 = (float) i15;

        $f21 = r21[5];

        $f23 = $f22 * $f21;

        $f25 = $f24 - $f23;

        virtualinvoke r3.<android.graphics.Path: void lineTo(float,float)>($f26, $f25);

        virtualinvoke r3.<android.graphics.Path: void close()>();

        $i8 = lengthof r5;

        r22 = newarray (int)[$i8];

        staticinvoke <java.util.Arrays: void fill(int[],int)>(r22, -9671572);

        $r13 = <android.graphics.Canvas$VertexMode: android.graphics.Canvas$VertexMode TRIANGLES>;

        $i9 = lengthof r4;

        virtualinvoke r1.<android.graphics.Canvas: void drawVertices(android.graphics.Canvas$VertexMode,int,float[],int,float[],int,int[],int,short[],int,int,android.graphics.Paint)>($r13, $i9, r4, 0, null, 0, r22, 0, null, 0, 0, r2);

        virtualinvoke r1.<android.graphics.Canvas: int save()>();

        virtualinvoke r1.<android.graphics.Canvas: boolean clipPath(android.graphics.Path)>(r3);

        $r14 = <android.graphics.Canvas$VertexMode: android.graphics.Canvas$VertexMode TRIANGLES>;

        $i11 = lengthof r4;

        virtualinvoke r1.<android.graphics.Canvas: void drawVertices(android.graphics.Canvas$VertexMode,int,float[],int,float[],int,int[],int,short[],int,int,android.graphics.Paint)>($r14, $i11, r4, 0, null, 0, r5, 0, null, 0, 0, r2);

        virtualinvoke r1.<android.graphics.Canvas: void restore()>();

        goto label08;

     label07:
        $r9 = <android.graphics.Canvas$VertexMode: android.graphics.Canvas$VertexMode TRIANGLES>;

        $i5 = lengthof r4;

        virtualinvoke r1.<android.graphics.Canvas: void drawVertices(android.graphics.Canvas$VertexMode,int,float[],int,float[],int,int[],int,short[],int,int,android.graphics.Paint)>($r9, $i5, r4, 0, null, 0, r5, 0, null, 0, 0, r2);

     label08:
        i18 = 372;

        virtualinvoke r3.<android.graphics.Path: void reset()>();

        $f35 = r4[372];

        $i19 = 372 + 1;

        $f36 = r4[$i19];

        virtualinvoke r3.<android.graphics.Path: void moveTo(float,float)>($f35, $f36);

        i20 = 2;

     label09:
        $r24 = <android.graphics.ColorSpace$Renderer: float[] SPECTRUM_LOCUS_X>;

        $i21 = lengthof $r24;

        if i20 >= $i21 goto label10;

        i18 = i18 + 384;

        $f2 = r4[i18];

        $i6 = i18 + 1;

        $f1 = r4[$i6];

        virtualinvoke r3.<android.graphics.Path: void lineTo(float,float)>($f2, $f1);

        i20 = i20 + 1;

        goto label09;

     label10:
        virtualinvoke r3.<android.graphics.Path: void close()>();

        $z2 = r0.<android.graphics.ColorSpace$Renderer: boolean mUcs>;

        if $z2 == 0 goto label11;

        f37 = 1.5F;

        goto label12;

     label11:
        f37 = 1.0F;

     label12:
        $f0 = 4.0F / f37;

        virtualinvoke r2.<android.graphics.Paint: void setStrokeWidth(float)>($f0);

        $r10 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke r2.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r10);

        virtualinvoke r2.<android.graphics.Paint: void setColor(int)>(-16777216);

        virtualinvoke r1.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>(r3, r2);

        return;
    }

    private void drawPoints(android.graphics.Canvas, int, int, android.graphics.Paint)
    {
        android.graphics.ColorSpace$Renderer r0;
        android.graphics.Canvas r1;
        int i0, i1, $i2;
        android.graphics.Paint r2;
        float[] r3, r4, $r10, $r11, $r12;
        java.util.Iterator r5;
        android.graphics.ColorSpace$Renderer$Point r6;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, f20, f21;
        android.graphics.Paint$Style $r7;
        boolean $z0, $z1, $z2;
        java.util.List $r8;
        java.lang.Object $r9;
        android.graphics.ColorSpace $r13;

        r0 := @this: android.graphics.ColorSpace$Renderer;

        r1 := @parameter0: android.graphics.Canvas;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: android.graphics.Paint;

        $r7 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;

        virtualinvoke r2.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r7);

        $z0 = r0.<android.graphics.ColorSpace$Renderer: boolean mUcs>;

        if $z0 == 0 goto label1;

        f20 = 1.5F;

        goto label2;

     label1:
        f20 = 1.0F;

     label2:
        f21 = 4.0F / f20;

        r3 = newarray (float)[3];

        r4 = newarray (float)[2];

        $r8 = r0.<android.graphics.ColorSpace$Renderer: java.util.List mPoints>;

        r5 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z2 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label5;

        $r9 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (android.graphics.ColorSpace$Renderer$Point) $r9;

        $r10 = r6.<android.graphics.ColorSpace$Renderer$Point: float[] mRgb>;

        $f1 = $r10[0];

        r3[0] = $f1;

        $r11 = r6.<android.graphics.ColorSpace$Renderer$Point: float[] mRgb>;

        $f2 = $r11[1];

        r3[1] = $f2;

        $r12 = r6.<android.graphics.ColorSpace$Renderer$Point: float[] mRgb>;

        $f3 = $r12[2];

        r3[2] = $f3;

        $r13 = r6.<android.graphics.ColorSpace$Renderer$Point: android.graphics.ColorSpace mColorSpace>;

        virtualinvoke $r13.<android.graphics.ColorSpace: float[] toXyz(float[])>(r3);

        $i2 = r6.<android.graphics.ColorSpace$Renderer$Point: int mColor>;

        virtualinvoke r2.<android.graphics.Paint: void setColor(int)>($i2);

        $f5 = r3[0];

        $f4 = r3[1];

        $f7 = $f5 + $f4;

        $f6 = r3[2];

        f0 = $f7 + $f6;

        $f8 = r3[0];

        $f9 = $f8 / f0;

        r4[0] = $f9;

        $f10 = r3[1];

        $f11 = $f10 / f0;

        r4[1] = $f11;

        $z1 = r0.<android.graphics.ColorSpace$Renderer: boolean mUcs>;

        if $z1 == 0 goto label4;

        staticinvoke <android.graphics.ColorSpace: void access$3000(float[])>(r4);

     label4:
        $f13 = (float) i0;

        $f12 = r4[0];

        $f19 = $f13 * $f12;

        $f17 = (float) i1;

        $f15 = (float) i1;

        $f14 = r4[1];

        $f16 = $f15 * $f14;

        $f18 = $f17 - $f16;

        virtualinvoke r1.<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>($f19, $f18, f21, r2);

        goto label3;

     label5:
        return;
    }

    private static void getPrimaries(android.graphics.ColorSpace$Rgb, float[], boolean)
    {
        android.graphics.ColorSpace$Rgb r0;
        float[] r1;
        boolean z0, $z1, $z2;
        android.graphics.ColorSpace$Named $r2, $r4;
        android.graphics.ColorSpace $r3, $r5;

        r0 := @parameter0: android.graphics.ColorSpace$Rgb;

        r1 := @parameter1: float[];

        z0 := @parameter2: boolean;

        $r2 = <android.graphics.ColorSpace$Named: android.graphics.ColorSpace$Named EXTENDED_SRGB>;

        $r3 = staticinvoke <android.graphics.ColorSpace: android.graphics.ColorSpace get(android.graphics.ColorSpace$Named)>($r2);

        $z1 = virtualinvoke r0.<android.graphics.ColorSpace$Rgb: boolean equals(java.lang.Object)>($r3);

        if $z1 != 0 goto label2;

        $r4 = <android.graphics.ColorSpace$Named: android.graphics.ColorSpace$Named LINEAR_EXTENDED_SRGB>;

        $r5 = staticinvoke <android.graphics.ColorSpace: android.graphics.ColorSpace get(android.graphics.ColorSpace$Named)>($r4);

        $z2 = virtualinvoke r0.<android.graphics.ColorSpace$Rgb: boolean equals(java.lang.Object)>($r5);

        if $z2 == 0 goto label1;

        goto label2;

     label1:
        virtualinvoke r0.<android.graphics.ColorSpace$Rgb: float[] getPrimaries(float[])>(r1);

        goto label3;

     label2:
        r1[0] = 1.41F;

        r1[1] = 0.33F;

        r1[2] = 0.27F;

        r1[3] = 1.24F;

        r1[4] = -0.23F;

        r1[5] = -0.57F;

     label3:
        if z0 == 0 goto label4;

        staticinvoke <android.graphics.ColorSpace: void access$3000(float[])>(r1);

     label4:
        return;
    }

    private void setTransform(android.graphics.Canvas, int, int, float[])
    {
        android.graphics.ColorSpace$Renderer r0;
        android.graphics.Canvas r1;
        int i0, i1, i2;
        float[] r2;
        java.util.Iterator r4;
        android.graphics.ColorSpace r5;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, $f34, $f35, $f36, $f37, $f38, $f39, $f40, $f41, $f42, f43;
        android.graphics.RectF $r6;
        java.util.List $r7;
        boolean $z0, $z1, $z2;
        java.lang.Object $r8, $r10;
        android.util.Pair $r9;
        android.graphics.ColorSpace$Model $r11, $r12;
        android.graphics.ColorSpace$Rgb $r13;

        r0 := @this: android.graphics.ColorSpace$Renderer;

        r1 := @parameter0: android.graphics.Canvas;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: float[];

        $r6 = new android.graphics.RectF;

        specialinvoke $r6.<android.graphics.RectF: void <init>()>();

        $r7 = r0.<android.graphics.ColorSpace$Renderer: java.util.List mColorSpaces>;

        r4 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label3;

        $r8 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        $r9 = (android.util.Pair) $r8;

        $r10 = $r9.<android.util.Pair: java.lang.Object first>;

        r5 = (android.graphics.ColorSpace) $r10;

        $r11 = virtualinvoke r5.<android.graphics.ColorSpace: android.graphics.ColorSpace$Model getModel()>();

        $r12 = <android.graphics.ColorSpace$Model: android.graphics.ColorSpace$Model RGB>;

        if $r11 == $r12 goto label2;

        goto label1;

     label2:
        $r13 = (android.graphics.ColorSpace$Rgb) r5;

        $z1 = r0.<android.graphics.ColorSpace$Renderer: boolean mUcs>;

        staticinvoke <android.graphics.ColorSpace$Renderer: void getPrimaries(android.graphics.ColorSpace$Rgb,float[],boolean)>($r13, r2, $z1);

        $f32 = $r6.<android.graphics.RectF: float left>;

        $f31 = r2[4];

        $f33 = staticinvoke <java.lang.Math: float min(float,float)>($f32, $f31);

        $r6.<android.graphics.RectF: float left> = $f33;

        $f35 = $r6.<android.graphics.RectF: float top>;

        $f34 = r2[5];

        $f36 = staticinvoke <java.lang.Math: float min(float,float)>($f35, $f34);

        $r6.<android.graphics.RectF: float top> = $f36;

        $f38 = $r6.<android.graphics.RectF: float right>;

        $f37 = r2[0];

        $f39 = staticinvoke <java.lang.Math: float max(float,float)>($f38, $f37);

        $r6.<android.graphics.RectF: float right> = $f39;

        $f41 = $r6.<android.graphics.RectF: float bottom>;

        $f40 = r2[3];

        $f42 = staticinvoke <java.lang.Math: float max(float,float)>($f41, $f40);

        $r6.<android.graphics.RectF: float bottom> = $f42;

        goto label1;

     label3:
        $z0 = r0.<android.graphics.ColorSpace$Renderer: boolean mUcs>;

        if $z0 == 0 goto label4;

        f43 = 0.6F;

        goto label5;

     label4:
        f43 = 0.9F;

     label5:
        $f1 = $r6.<android.graphics.RectF: float left>;

        $f2 = staticinvoke <java.lang.Math: float min(float,float)>(0.0F, $f1);

        $r6.<android.graphics.RectF: float left> = $f2;

        $f3 = $r6.<android.graphics.RectF: float top>;

        $f4 = staticinvoke <java.lang.Math: float min(float,float)>(0.0F, $f3);

        $r6.<android.graphics.RectF: float top> = $f4;

        $f5 = $r6.<android.graphics.RectF: float right>;

        $f6 = staticinvoke <java.lang.Math: float max(float,float)>(f43, $f5);

        $r6.<android.graphics.RectF: float right> = $f6;

        $f7 = $r6.<android.graphics.RectF: float bottom>;

        $f8 = staticinvoke <java.lang.Math: float max(float,float)>(f43, $f7);

        $r6.<android.graphics.RectF: float bottom> = $f8;

        $f9 = virtualinvoke $r6.<android.graphics.RectF: float width()>();

        $f10 = f43 / $f9;

        $f11 = virtualinvoke $r6.<android.graphics.RectF: float height()>();

        $f12 = f43 / $f11;

        f0 = staticinvoke <java.lang.Math: float min(float,float)>($f10, $f12);

        i2 = r0.<android.graphics.ColorSpace$Renderer: int mSize>;

        $f13 = (float) i2;

        $f16 = $f13 / 1440.0F;

        $f14 = (float) i2;

        $f15 = $f14 / 1440.0F;

        virtualinvoke r1.<android.graphics.Canvas: void scale(float,float)>($f16, $f15);

        virtualinvoke r1.<android.graphics.Canvas: void scale(float,float)>(f0, f0);

        $f17 = virtualinvoke $r6.<android.graphics.RectF: float width()>();

        $f19 = $f17 - f43;

        $f18 = (float) i0;

        $f20 = $f19 * $f18;

        $f21 = $f20 / 2.0F;

        $f22 = virtualinvoke $r6.<android.graphics.RectF: float height()>();

        $f24 = $f22 - f43;

        $f23 = (float) i1;

        $f25 = $f24 * $f23;

        $f26 = $f25 / 2.0F;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>($f21, $f26);

        $f27 = (float) i0;

        $f30 = $f27 * 0.05F;

        $f28 = (float) i1;

        $f29 = $f28 * -0.05F;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>($f30, $f29);

        return;
    }

    private void setUcsTransform(android.graphics.Canvas, int)
    {
        android.graphics.ColorSpace$Renderer r0;
        android.graphics.Canvas r1;
        int i0;
        boolean $z0;
        float $f0, $f1, $f2, $f3;

        r0 := @this: android.graphics.ColorSpace$Renderer;

        r1 := @parameter0: android.graphics.Canvas;

        i0 := @parameter1: int;

        $z0 = r0.<android.graphics.ColorSpace$Renderer: boolean mUcs>;

        if $z0 == 0 goto label1;

        $f2 = (float) i0;

        $f0 = (float) i0;

        $f1 = $f0 * 1.5F;

        $f3 = $f2 - $f1;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>(0.0F, $f3);

        virtualinvoke r1.<android.graphics.Canvas: void scale(float,float)>(1.5F, 1.5F);

     label1:
        return;
    }

    private static double sqr(double)
    {
        double d0, $d1;

        d0 := @parameter0: double;

        $d1 = d0 * d0;

        return $d1;
    }

    public android.graphics.ColorSpace$Renderer add(android.graphics.ColorSpace, float, float, float, int)
    {
        android.graphics.ColorSpace$Renderer r0;
        android.graphics.ColorSpace r1;
        float f0, f1, f2;
        int i0;
        android.graphics.ColorSpace$Renderer$Point $r2;
        float[] $r3;
        java.util.List $r4;

        r0 := @this: android.graphics.ColorSpace$Renderer;

        r1 := @parameter0: android.graphics.ColorSpace;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        f2 := @parameter3: float;

        i0 := @parameter4: int;

        $r4 = r0.<android.graphics.ColorSpace$Renderer: java.util.List mPoints>;

        $r2 = new android.graphics.ColorSpace$Renderer$Point;

        $r3 = newarray (float)[3];

        $r3[0] = f0;

        $r3[1] = f1;

        $r3[2] = f2;

        specialinvoke $r2.<android.graphics.ColorSpace$Renderer$Point: void <init>(android.graphics.ColorSpace,float[],int)>(r1, $r3, i0);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r2);

        return r0;
    }

    public android.graphics.ColorSpace$Renderer add(android.graphics.ColorSpace, int)
    {
        android.graphics.ColorSpace$Renderer r0;
        android.graphics.ColorSpace r1;
        int i0;
        android.util.Pair $r2;
        java.util.List $r3;
        java.lang.Integer $r4;

        r0 := @this: android.graphics.ColorSpace$Renderer;

        r1 := @parameter0: android.graphics.ColorSpace;

        i0 := @parameter1: int;

        $r3 = r0.<android.graphics.ColorSpace$Renderer: java.util.List mColorSpaces>;

        $r2 = new android.util.Pair;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        specialinvoke $r2.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>(r1, $r4);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r2);

        return r0;
    }

    public android.graphics.ColorSpace$Renderer clip(boolean)
    {
        android.graphics.ColorSpace$Renderer r0;
        boolean z0;

        r0 := @this: android.graphics.ColorSpace$Renderer;

        z0 := @parameter0: boolean;

        r0.<android.graphics.ColorSpace$Renderer: boolean mClip> = z0;

        return r0;
    }

    public android.graphics.Bitmap render()
    {
        android.graphics.ColorSpace$Renderer r0;
        int i0;
        android.graphics.Bitmap r2;
        float[] r4, r5;
        android.graphics.Paint $r7;
        android.graphics.Bitmap$Config $r8;
        android.graphics.Canvas $r9;
        android.graphics.Path $r10;

        r0 := @this: android.graphics.ColorSpace$Renderer;

        $r7 = new android.graphics.Paint;

        specialinvoke $r7.<android.graphics.Paint: void <init>(int)>(1);

        i0 = r0.<android.graphics.ColorSpace$Renderer: int mSize>;

        $r8 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        r2 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>(i0, i0, $r8);

        $r9 = new android.graphics.Canvas;

        specialinvoke $r9.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>(r2);

        r4 = newarray (float)[6];

        r5 = newarray (float)[2];

        $r10 = new android.graphics.Path;

        specialinvoke $r10.<android.graphics.Path: void <init>()>();

        specialinvoke r0.<android.graphics.ColorSpace$Renderer: void setTransform(android.graphics.Canvas,int,int,float[])>($r9, 1440, 1440, r4);

        specialinvoke r0.<android.graphics.ColorSpace$Renderer: void drawBox(android.graphics.Canvas,int,int,android.graphics.Paint,android.graphics.Path)>($r9, 1440, 1440, $r7, $r10);

        specialinvoke r0.<android.graphics.ColorSpace$Renderer: void setUcsTransform(android.graphics.Canvas,int)>($r9, 1440);

        specialinvoke r0.<android.graphics.ColorSpace$Renderer: void drawLocus(android.graphics.Canvas,int,int,android.graphics.Paint,android.graphics.Path,float[])>($r9, 1440, 1440, $r7, $r10, r4);

        specialinvoke r0.<android.graphics.ColorSpace$Renderer: void drawGamuts(android.graphics.Canvas,int,int,android.graphics.Paint,android.graphics.Path,float[],float[])>($r9, 1440, 1440, $r7, $r10, r4, r5);

        specialinvoke r0.<android.graphics.ColorSpace$Renderer: void drawPoints(android.graphics.Canvas,int,int,android.graphics.Paint)>($r9, 1440, 1440, $r7);

        return r2;
    }

    public android.graphics.ColorSpace$Renderer showWhitePoint(boolean)
    {
        android.graphics.ColorSpace$Renderer r0;
        boolean z0;

        r0 := @this: android.graphics.ColorSpace$Renderer;

        z0 := @parameter0: boolean;

        r0.<android.graphics.ColorSpace$Renderer: boolean mShowWhitePoint> = z0;

        return r0;
    }

    public android.graphics.ColorSpace$Renderer size(int)
    {
        android.graphics.ColorSpace$Renderer r0;
        int i0, $i1;

        r0 := @this: android.graphics.ColorSpace$Renderer;

        i0 := @parameter0: int;

        $i1 = staticinvoke <java.lang.Math: int max(int,int)>(128, i0);

        r0.<android.graphics.ColorSpace$Renderer: int mSize> = $i1;

        return r0;
    }

    public android.graphics.ColorSpace$Renderer uniformChromaticityScale(boolean)
    {
        android.graphics.ColorSpace$Renderer r0;
        boolean z0;

        r0 := @this: android.graphics.ColorSpace$Renderer;

        z0 := @parameter0: boolean;

        r0.<android.graphics.ColorSpace$Renderer: boolean mUcs> = z0;

        return r0;
    }
}
