public class android.graphics.ColorSpace$Rgb extends android.graphics.ColorSpace
{
    private final java.util.function.DoubleUnaryOperator mClampedEotf;
    private final java.util.function.DoubleUnaryOperator mClampedOetf;
    private final java.util.function.DoubleUnaryOperator mEotf;
    private final float[] mInverseTransform;
    private final boolean mIsSrgb;
    private final boolean mIsWideGamut;
    private final float mMax;
    private final float mMin;
    private final long mNativePtr;
    private final java.util.function.DoubleUnaryOperator mOetf;
    private final float[] mPrimaries;
    private final android.graphics.ColorSpace$Rgb$TransferParameters mTransferParameters;
    private final float[] mTransform;
    private final float[] mWhitePoint;

    private void <init>(android.graphics.ColorSpace$Rgb, float[], float[])
    {
        android.graphics.ColorSpace$Rgb r0, r1;
        float[] r2, r3, $r8;
        java.lang.String $r4;
        android.graphics.ColorSpace$Rgb$TransferParameters $r5;
        float $f0, $f1;
        java.util.function.DoubleUnaryOperator $r6, $r7;

        r0 := @this: android.graphics.ColorSpace$Rgb;

        r1 := @parameter0: android.graphics.ColorSpace$Rgb;

        r2 := @parameter1: float[];

        r3 := @parameter2: float[];

        $r4 = virtualinvoke r1.<android.graphics.ColorSpace$Rgb: java.lang.String getName()>();

        $r8 = r1.<android.graphics.ColorSpace$Rgb: float[] mPrimaries>;

        $r7 = r1.<android.graphics.ColorSpace$Rgb: java.util.function.DoubleUnaryOperator mOetf>;

        $r6 = r1.<android.graphics.ColorSpace$Rgb: java.util.function.DoubleUnaryOperator mEotf>;

        $f1 = r1.<android.graphics.ColorSpace$Rgb: float mMin>;

        $f0 = r1.<android.graphics.ColorSpace$Rgb: float mMax>;

        $r5 = r1.<android.graphics.ColorSpace$Rgb: android.graphics.ColorSpace$Rgb$TransferParameters mTransferParameters>;

        specialinvoke r0.<android.graphics.ColorSpace$Rgb: void <init>(java.lang.String,float[],float[],float[],java.util.function.DoubleUnaryOperator,java.util.function.DoubleUnaryOperator,float,float,android.graphics.ColorSpace$Rgb$TransferParameters,int)>($r4, $r8, r3, r2, $r7, $r6, $f1, $f0, $r5, -1);

        return;
    }

    void <init>(android.graphics.ColorSpace$Rgb, float[], float[], android.graphics.ColorSpace$1)
    {
        android.graphics.ColorSpace$Rgb r0, r1;
        float[] r2, r3;
        android.graphics.ColorSpace$1 r4;

        r0 := @this: android.graphics.ColorSpace$Rgb;

        r1 := @parameter0: android.graphics.ColorSpace$Rgb;

        r2 := @parameter1: float[];

        r3 := @parameter2: float[];

        r4 := @parameter3: android.graphics.ColorSpace$1;

        specialinvoke r0.<android.graphics.ColorSpace$Rgb: void <init>(android.graphics.ColorSpace$Rgb,float[],float[])>(r1, r2, r3);

        return;
    }

    public void <init>(java.lang.String, float[], double)
    {
        android.graphics.ColorSpace$Rgb r0;
        java.lang.String r1;
        float[] r2, $r3, $r4;
        double d0;

        r0 := @this: android.graphics.ColorSpace$Rgb;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: float[];

        d0 := @parameter2: double;

        $r3 = staticinvoke <android.graphics.ColorSpace$Rgb: float[] computePrimaries(float[])>(r2);

        $r4 = staticinvoke <android.graphics.ColorSpace$Rgb: float[] computeWhitePoint(float[])>(r2);

        specialinvoke r0.<android.graphics.ColorSpace$Rgb: void <init>(java.lang.String,float[],float[],double,float,float,int)>(r1, $r3, $r4, d0, 0.0F, 1.0F, -1);

        return;
    }

    public void <init>(java.lang.String, float[], android.graphics.ColorSpace$Rgb$TransferParameters)
    {
        android.graphics.ColorSpace$Rgb r0;
        java.lang.String r1;
        android.graphics.ColorSpace$Rgb$TransferParameters r2;
        float[] r3, r4, r5;
        boolean $z0, $z1;

        r0 := @this: android.graphics.ColorSpace$Rgb;

        r1 := @parameter0: java.lang.String;

        r4 := @parameter1: float[];

        r2 := @parameter2: android.graphics.ColorSpace$Rgb$TransferParameters;

        $z0 = staticinvoke <android.graphics.ColorSpace$Rgb: boolean isGray(float[])>(r4);

        if $z0 == 0 goto label1;

        r5 = staticinvoke <android.graphics.ColorSpace: float[] access$1100()>();

        goto label2;

     label1:
        r5 = staticinvoke <android.graphics.ColorSpace$Rgb: float[] computePrimaries(float[])>(r4);

     label2:
        r3 = staticinvoke <android.graphics.ColorSpace$Rgb: float[] computeWhitePoint(float[])>(r4);

        $z1 = staticinvoke <android.graphics.ColorSpace$Rgb: boolean isGray(float[])>(r4);

        if $z1 == 0 goto label3;

        goto label4;

     label3:
        r4 = null;

     label4:
        specialinvoke r0.<android.graphics.ColorSpace$Rgb: void <init>(java.lang.String,float[],float[],float[],android.graphics.ColorSpace$Rgb$TransferParameters,int)>(r1, r5, r3, r4, r2, -1);

        return;
    }

    public void <init>(java.lang.String, float[], java.util.function.DoubleUnaryOperator, java.util.function.DoubleUnaryOperator)
    {
        android.graphics.ColorSpace$Rgb r0;
        java.lang.String r1;
        float[] r2, $r5, $r6;
        java.util.function.DoubleUnaryOperator r3, r4;

        r0 := @this: android.graphics.ColorSpace$Rgb;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: float[];

        r3 := @parameter2: java.util.function.DoubleUnaryOperator;

        r4 := @parameter3: java.util.function.DoubleUnaryOperator;

        $r5 = staticinvoke <android.graphics.ColorSpace$Rgb: float[] computePrimaries(float[])>(r2);

        $r6 = staticinvoke <android.graphics.ColorSpace$Rgb: float[] computeWhitePoint(float[])>(r2);

        specialinvoke r0.<android.graphics.ColorSpace$Rgb: void <init>(java.lang.String,float[],float[],float[],java.util.function.DoubleUnaryOperator,java.util.function.DoubleUnaryOperator,float,float,android.graphics.ColorSpace$Rgb$TransferParameters,int)>(r1, $r5, $r6, null, r3, r4, 0.0F, 1.0F, null, -1);

        return;
    }

    public void <init>(java.lang.String, float[], float[], double)
    {
        android.graphics.ColorSpace$Rgb r0;
        java.lang.String r1;
        float[] r2, r3;
        double d0;

        r0 := @this: android.graphics.ColorSpace$Rgb;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: float[];

        r3 := @parameter2: float[];

        d0 := @parameter3: double;

        specialinvoke r0.<android.graphics.ColorSpace$Rgb: void <init>(java.lang.String,float[],float[],double,float,float,int)>(r1, r2, r3, d0, 0.0F, 1.0F, -1);

        return;
    }

    private void <init>(java.lang.String, float[], float[], double, float, float, int)
    {
        android.graphics.ColorSpace$Rgb r0;
        java.lang.String r1;
        float[] r2, r3;
        double d0;
        float f0, f1;
        int i0;
        byte $b1, $b2;
        java.lang.Object r7, r8;
        android.graphics._$$Lambda$ColorSpace$Rgb$CqKld6797g7__JnuY0NeFz5q4_E r9;
        android.graphics._$$Lambda$ColorSpace$Rgb$ZvS77aTfobOSa2o9MTqYMph4Rcg r10;
        android.graphics.ColorSpace$Rgb$TransferParameters r11;
        java.util.function.DoubleUnaryOperator r12, r13;

        r0 := @this: android.graphics.ColorSpace$Rgb;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: float[];

        r3 := @parameter2: float[];

        d0 := @parameter3: double;

        f0 := @parameter4: float;

        f1 := @parameter5: float;

        i0 := @parameter6: int;

        $b1 = d0 cmpl 1.0;

        if $b1 != 0 goto label1;

        r7 = staticinvoke <java.util.function.DoubleUnaryOperator: java.util.function.DoubleUnaryOperator identity()>();

        goto label2;

     label1:
        r9 = new android.graphics._$$Lambda$ColorSpace$Rgb$CqKld6797g7__JnuY0NeFz5q4_E;

        specialinvoke r9.<android.graphics._$$Lambda$ColorSpace$Rgb$CqKld6797g7__JnuY0NeFz5q4_E: void <init>(double)>(d0);

        r7 = r9;

     label2:
        $b2 = d0 cmpl 1.0;

        if $b2 != 0 goto label3;

        r8 = staticinvoke <java.util.function.DoubleUnaryOperator: java.util.function.DoubleUnaryOperator identity()>();

        goto label4;

     label3:
        r10 = new android.graphics._$$Lambda$ColorSpace$Rgb$ZvS77aTfobOSa2o9MTqYMph4Rcg;

        specialinvoke r10.<android.graphics._$$Lambda$ColorSpace$Rgb$ZvS77aTfobOSa2o9MTqYMph4Rcg: void <init>(double)>(d0);

        r8 = r10;

     label4:
        r11 = new android.graphics.ColorSpace$Rgb$TransferParameters;

        specialinvoke r11.<android.graphics.ColorSpace$Rgb$TransferParameters: void <init>(double,double,double,double,double)>(1.0, 0.0, 0.0, 0.0, d0);

        r12 = (java.util.function.DoubleUnaryOperator) r7;

        r13 = (java.util.function.DoubleUnaryOperator) r8;

        specialinvoke r0.<android.graphics.ColorSpace$Rgb: void <init>(java.lang.String,float[],float[],float[],java.util.function.DoubleUnaryOperator,java.util.function.DoubleUnaryOperator,float,float,android.graphics.ColorSpace$Rgb$TransferParameters,int)>(r1, r2, r3, null, r12, r13, f0, f1, r11, i0);

        return;
    }

    void <init>(java.lang.String, float[], float[], double, float, float, int, android.graphics.ColorSpace$1)
    {
        android.graphics.ColorSpace$Rgb r0;
        java.lang.String r1;
        float[] r2, r3;
        double d0;
        float f0, f1;
        int i0;
        android.graphics.ColorSpace$1 r4;

        r0 := @this: android.graphics.ColorSpace$Rgb;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: float[];

        r3 := @parameter2: float[];

        d0 := @parameter3: double;

        f0 := @parameter4: float;

        f1 := @parameter5: float;

        i0 := @parameter6: int;

        r4 := @parameter7: android.graphics.ColorSpace$1;

        specialinvoke r0.<android.graphics.ColorSpace$Rgb: void <init>(java.lang.String,float[],float[],double,float,float,int)>(r1, r2, r3, d0, f0, f1, i0);

        return;
    }

    public void <init>(java.lang.String, float[], float[], android.graphics.ColorSpace$Rgb$TransferParameters)
    {
        android.graphics.ColorSpace$Rgb r0;
        java.lang.String r1;
        float[] r2, r3;
        android.graphics.ColorSpace$Rgb$TransferParameters r4;

        r0 := @this: android.graphics.ColorSpace$Rgb;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: float[];

        r3 := @parameter2: float[];

        r4 := @parameter3: android.graphics.ColorSpace$Rgb$TransferParameters;

        specialinvoke r0.<android.graphics.ColorSpace$Rgb: void <init>(java.lang.String,float[],float[],float[],android.graphics.ColorSpace$Rgb$TransferParameters,int)>(r1, r2, r3, null, r4, -1);

        return;
    }

    public void <init>(java.lang.String, float[], float[], java.util.function.DoubleUnaryOperator, java.util.function.DoubleUnaryOperator, float, float)
    {
        android.graphics.ColorSpace$Rgb r0;
        java.lang.String r1;
        float[] r2, r3;
        java.util.function.DoubleUnaryOperator r4, r5;
        float f0, f1;

        r0 := @this: android.graphics.ColorSpace$Rgb;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: float[];

        r3 := @parameter2: float[];

        r4 := @parameter3: java.util.function.DoubleUnaryOperator;

        r5 := @parameter4: java.util.function.DoubleUnaryOperator;

        f0 := @parameter5: float;

        f1 := @parameter6: float;

        specialinvoke r0.<android.graphics.ColorSpace$Rgb: void <init>(java.lang.String,float[],float[],float[],java.util.function.DoubleUnaryOperator,java.util.function.DoubleUnaryOperator,float,float,android.graphics.ColorSpace$Rgb$TransferParameters,int)>(r1, r2, r3, null, r4, r5, f0, f1, null, -1);

        return;
    }

    private void <init>(java.lang.String, float[], float[], float[], android.graphics.ColorSpace$Rgb$TransferParameters, int)
    {
        android.graphics.ColorSpace$Rgb r0;
        java.lang.String r1;
        float[] r2, r3, r4;
        android.graphics.ColorSpace$Rgb$TransferParameters r5;
        int i0;
        double $d0, $d1, $d2, $d3;
        byte $b1, $b2, $b3, $b4;
        java.lang.Object r10, r11;
        android.graphics._$$Lambda$ColorSpace$Rgb$bWzafC8vMHNuVmRuTUPEFUMlfuY r12;
        android.graphics._$$Lambda$ColorSpace$Rgb$V_0lmM2WEpxGBDV_1G1wvvidn7Y r13;
        android.graphics._$$Lambda$ColorSpace$Rgb$b9VGKuNnse0bbguR9jbOM_wK2Ac r14;
        android.graphics._$$Lambda$ColorSpace$Rgb$iMkODTKa3_8kPZUnZZerD2Lv_yo r15;
        java.util.function.DoubleUnaryOperator r16, r17;

        r0 := @this: android.graphics.ColorSpace$Rgb;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: float[];

        r3 := @parameter2: float[];

        r4 := @parameter3: float[];

        r5 := @parameter4: android.graphics.ColorSpace$Rgb$TransferParameters;

        i0 := @parameter5: int;

        $d0 = r5.<android.graphics.ColorSpace$Rgb$TransferParameters: double e>;

        $b1 = $d0 cmpl 0.0;

        if $b1 != 0 goto label1;

        $d2 = r5.<android.graphics.ColorSpace$Rgb$TransferParameters: double f>;

        $b3 = $d2 cmpl 0.0;

        if $b3 != 0 goto label1;

        r12 = new android.graphics._$$Lambda$ColorSpace$Rgb$bWzafC8vMHNuVmRuTUPEFUMlfuY;

        specialinvoke r12.<android.graphics._$$Lambda$ColorSpace$Rgb$bWzafC8vMHNuVmRuTUPEFUMlfuY: void <init>(android.graphics.ColorSpace$Rgb$TransferParameters)>(r5);

        r10 = r12;

        goto label2;

     label1:
        r13 = new android.graphics._$$Lambda$ColorSpace$Rgb$V_0lmM2WEpxGBDV_1G1wvvidn7Y;

        specialinvoke r13.<android.graphics._$$Lambda$ColorSpace$Rgb$V_0lmM2WEpxGBDV_1G1wvvidn7Y: void <init>(android.graphics.ColorSpace$Rgb$TransferParameters)>(r5);

        r10 = r13;

     label2:
        $d3 = r5.<android.graphics.ColorSpace$Rgb$TransferParameters: double e>;

        $b4 = $d3 cmpl 0.0;

        if $b4 != 0 goto label3;

        $d1 = r5.<android.graphics.ColorSpace$Rgb$TransferParameters: double f>;

        $b2 = $d1 cmpl 0.0;

        if $b2 != 0 goto label3;

        r14 = new android.graphics._$$Lambda$ColorSpace$Rgb$b9VGKuNnse0bbguR9jbOM_wK2Ac;

        specialinvoke r14.<android.graphics._$$Lambda$ColorSpace$Rgb$b9VGKuNnse0bbguR9jbOM_wK2Ac: void <init>(android.graphics.ColorSpace$Rgb$TransferParameters)>(r5);

        r11 = r14;

        goto label4;

     label3:
        r15 = new android.graphics._$$Lambda$ColorSpace$Rgb$iMkODTKa3_8kPZUnZZerD2Lv_yo;

        specialinvoke r15.<android.graphics._$$Lambda$ColorSpace$Rgb$iMkODTKa3_8kPZUnZZerD2Lv_yo: void <init>(android.graphics.ColorSpace$Rgb$TransferParameters)>(r5);

        r11 = r15;

     label4:
        r16 = (java.util.function.DoubleUnaryOperator) r10;

        r17 = (java.util.function.DoubleUnaryOperator) r11;

        specialinvoke r0.<android.graphics.ColorSpace$Rgb: void <init>(java.lang.String,float[],float[],float[],java.util.function.DoubleUnaryOperator,java.util.function.DoubleUnaryOperator,float,float,android.graphics.ColorSpace$Rgb$TransferParameters,int)>(r1, r2, r3, r4, r16, r17, 0.0F, 1.0F, r5, i0);

        return;
    }

    void <init>(java.lang.String, float[], float[], float[], android.graphics.ColorSpace$Rgb$TransferParameters, int, android.graphics.ColorSpace$1)
    {
        android.graphics.ColorSpace$Rgb r0;
        java.lang.String r1;
        float[] r2, r3, r4;
        android.graphics.ColorSpace$Rgb$TransferParameters r5;
        int i0;
        android.graphics.ColorSpace$1 r6;

        r0 := @this: android.graphics.ColorSpace$Rgb;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: float[];

        r3 := @parameter2: float[];

        r4 := @parameter3: float[];

        r5 := @parameter4: android.graphics.ColorSpace$Rgb$TransferParameters;

        i0 := @parameter5: int;

        r6 := @parameter6: android.graphics.ColorSpace$1;

        specialinvoke r0.<android.graphics.ColorSpace$Rgb: void <init>(java.lang.String,float[],float[],float[],android.graphics.ColorSpace$Rgb$TransferParameters,int)>(r1, r2, r3, r4, r5, i0);

        return;
    }

    private void <init>(java.lang.String, float[], float[], float[], java.util.function.DoubleUnaryOperator, java.util.function.DoubleUnaryOperator, float, float, android.graphics.ColorSpace$Rgb$TransferParameters, int)
    {
        android.graphics.ColorSpace$Rgb r0;
        float[] r1, r2, $r18, $r24, $r25, $r29, $r30, $r31, $r37, $r40, $r53, $r54, r56, r57, r59, r60, r61;
        java.util.function.DoubleUnaryOperator r3, r4, $r27, $r28;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8;
        android.graphics.ColorSpace$Rgb$TransferParameters r5, $r32, $r44, $r45, $r46, $r47, $r48, $r49, $r50;
        int i0, $i1, $i2, $i4, $i5, $i8, $i9;
        android.graphics.ColorSpace$Model $r6;
        java.lang.IllegalArgumentException $r7, $r8, $r9, $r16, $r22;
        byte $b3;
        java.lang.StringBuilder $r10, $r19, $r33;
        java.lang.String $r17, $r23, $r43, r55;
        android.graphics._$$Lambda$ColorSpace$Rgb$8EkhO2jIf14tuA3BvrmYJMa7YXM $r26;
        boolean $z0, $z1;
        java.lang.IllegalStateException $r42;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6;
        long $l6, $l7;
        libcore.util.NativeAllocationRegistry $r51;

        r0 := @this: android.graphics.ColorSpace$Rgb;

        r55 := @parameter0: java.lang.String;

        r56 := @parameter1: float[];

        r1 := @parameter2: float[];

        r2 := @parameter3: float[];

        r3 := @parameter4: java.util.function.DoubleUnaryOperator;

        r4 := @parameter5: java.util.function.DoubleUnaryOperator;

        f0 := @parameter6: float;

        f1 := @parameter7: float;

        r5 := @parameter8: android.graphics.ColorSpace$Rgb$TransferParameters;

        i0 := @parameter9: int;

        $r6 = <android.graphics.ColorSpace$Model: android.graphics.ColorSpace$Model RGB>;

        specialinvoke r0.<android.graphics.ColorSpace: void <init>(java.lang.String,android.graphics.ColorSpace$Model,int)>(r55, $r6, i0);

        if r56 == null goto label12;

        $i1 = lengthof r56;

        if $i1 == 6 goto label01;

        $i9 = lengthof r56;

        if $i9 != 9 goto label12;

     label01:
        if r1 == null goto label11;

        $i2 = lengthof r1;

        if $i2 == 2 goto label02;

        $i8 = lengthof r1;

        if $i8 != 3 goto label11;

     label02:
        if r3 == null goto label10;

        if r4 == null goto label10;

        $b3 = f0 cmpl f1;

        if $b3 >= 0 goto label09;

        $r18 = staticinvoke <android.graphics.ColorSpace$Rgb: float[] xyWhitePoint(float[])>(r1);

        r0.<android.graphics.ColorSpace$Rgb: float[] mWhitePoint> = $r18;

        r57 = staticinvoke <android.graphics.ColorSpace$Rgb: float[] xyPrimaries(float[])>(r56);

        r0.<android.graphics.ColorSpace$Rgb: float[] mPrimaries> = r57;

        if r2 != null goto label03;

        $r53 = r0.<android.graphics.ColorSpace$Rgb: float[] mWhitePoint>;

        $r54 = staticinvoke <android.graphics.ColorSpace$Rgb: float[] computeXYZMatrix(float[],float[])>(r57, $r53);

        r0.<android.graphics.ColorSpace$Rgb: float[] mTransform> = $r54;

        goto label04;

     label03:
        $i4 = lengthof r2;

        if $i4 != 9 goto label08;

        r0.<android.graphics.ColorSpace$Rgb: float[] mTransform> = r2;

     label04:
        $r24 = r0.<android.graphics.ColorSpace$Rgb: float[] mTransform>;

        $r25 = staticinvoke <android.graphics.ColorSpace: float[] access$1200(float[])>($r24);

        r0.<android.graphics.ColorSpace$Rgb: float[] mInverseTransform> = $r25;

        r0.<android.graphics.ColorSpace$Rgb: java.util.function.DoubleUnaryOperator mOetf> = r3;

        r0.<android.graphics.ColorSpace$Rgb: java.util.function.DoubleUnaryOperator mEotf> = r4;

        r0.<android.graphics.ColorSpace$Rgb: float mMin> = f0;

        r0.<android.graphics.ColorSpace$Rgb: float mMax> = f1;

        $r26 = new android.graphics._$$Lambda$ColorSpace$Rgb$8EkhO2jIf14tuA3BvrmYJMa7YXM;

        specialinvoke $r26.<android.graphics._$$Lambda$ColorSpace$Rgb$8EkhO2jIf14tuA3BvrmYJMa7YXM: void <init>(android.graphics.ColorSpace$Rgb)>(r0);

        $r27 = interfaceinvoke r3.<java.util.function.DoubleUnaryOperator: java.util.function.DoubleUnaryOperator andThen(java.util.function.DoubleUnaryOperator)>($r26);

        r0.<android.graphics.ColorSpace$Rgb: java.util.function.DoubleUnaryOperator mClampedOetf> = $r27;

        $r28 = interfaceinvoke $r26.<java.util.function.DoubleUnaryOperator: java.util.function.DoubleUnaryOperator andThen(java.util.function.DoubleUnaryOperator)>(r4);

        r0.<android.graphics.ColorSpace$Rgb: java.util.function.DoubleUnaryOperator mClampedEotf> = $r28;

        r0.<android.graphics.ColorSpace$Rgb: android.graphics.ColorSpace$Rgb$TransferParameters mTransferParameters> = r5;

        $r29 = r0.<android.graphics.ColorSpace$Rgb: float[] mPrimaries>;

        $z0 = staticinvoke <android.graphics.ColorSpace$Rgb: boolean isWideGamut(float[],float,float)>($r29, f0, f1);

        r0.<android.graphics.ColorSpace$Rgb: boolean mIsWideGamut> = $z0;

        $r31 = r0.<android.graphics.ColorSpace$Rgb: float[] mPrimaries>;

        $r30 = r0.<android.graphics.ColorSpace$Rgb: float[] mWhitePoint>;

        $z1 = staticinvoke <android.graphics.ColorSpace$Rgb: boolean isSrgb(float[],float[],java.util.function.DoubleUnaryOperator,java.util.function.DoubleUnaryOperator,float,float,int)>($r31, $r30, r3, r4, f0, f1, i0);

        r0.<android.graphics.ColorSpace$Rgb: boolean mIsSrgb> = $z1;

        $r32 = r0.<android.graphics.ColorSpace$Rgb: android.graphics.ColorSpace$Rgb$TransferParameters mTransferParameters>;

        if $r32 == null goto label06;

        r59 = r0.<android.graphics.ColorSpace$Rgb: float[] mWhitePoint>;

        if r59 == null goto label05;

        r60 = r0.<android.graphics.ColorSpace$Rgb: float[] mTransform>;

        if r60 == null goto label05;

        r61 = staticinvoke <android.graphics.ColorSpace: float[] access$1300(float[],float[])>(r59, r60);

        $r44 = r0.<android.graphics.ColorSpace$Rgb: android.graphics.ColorSpace$Rgb$TransferParameters mTransferParameters>;

        $d0 = $r44.<android.graphics.ColorSpace$Rgb$TransferParameters: double a>;

        $f8 = (float) $d0;

        $r45 = r0.<android.graphics.ColorSpace$Rgb: android.graphics.ColorSpace$Rgb$TransferParameters mTransferParameters>;

        $d1 = $r45.<android.graphics.ColorSpace$Rgb$TransferParameters: double b>;

        $f7 = (float) $d1;

        $r46 = r0.<android.graphics.ColorSpace$Rgb: android.graphics.ColorSpace$Rgb$TransferParameters mTransferParameters>;

        $d2 = $r46.<android.graphics.ColorSpace$Rgb$TransferParameters: double c>;

        $f6 = (float) $d2;

        $r47 = r0.<android.graphics.ColorSpace$Rgb: android.graphics.ColorSpace$Rgb$TransferParameters mTransferParameters>;

        $d3 = $r47.<android.graphics.ColorSpace$Rgb$TransferParameters: double d>;

        $f5 = (float) $d3;

        $r48 = r0.<android.graphics.ColorSpace$Rgb: android.graphics.ColorSpace$Rgb$TransferParameters mTransferParameters>;

        $d4 = $r48.<android.graphics.ColorSpace$Rgb$TransferParameters: double e>;

        $f4 = (float) $d4;

        $r49 = r0.<android.graphics.ColorSpace$Rgb: android.graphics.ColorSpace$Rgb$TransferParameters mTransferParameters>;

        $d5 = $r49.<android.graphics.ColorSpace$Rgb$TransferParameters: double f>;

        $f3 = (float) $d5;

        $r50 = r0.<android.graphics.ColorSpace$Rgb: android.graphics.ColorSpace$Rgb$TransferParameters mTransferParameters>;

        $d6 = $r50.<android.graphics.ColorSpace$Rgb$TransferParameters: double g>;

        $f2 = (float) $d6;

        $l6 = staticinvoke <android.graphics.ColorSpace$Rgb: long nativeCreate(float,float,float,float,float,float,float,float[])>($f8, $f7, $f6, $f5, $f4, $f3, $f2, r61);

        r0.<android.graphics.ColorSpace$Rgb: long mNativePtr> = $l6;

        $r51 = <android.graphics.ColorSpace$Rgb$NoImagePreloadHolder: libcore.util.NativeAllocationRegistry sRegistry>;

        $l7 = r0.<android.graphics.ColorSpace$Rgb: long mNativePtr>;

        virtualinvoke $r51.<libcore.util.NativeAllocationRegistry: java.lang.Runnable registerNativeAllocation(java.lang.Object,long)>(r0, $l7);

        goto label07;

     label05:
        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ColorSpace (");

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") cannot create native object! mWhitePoint: ");

        $r37 = r0.<android.graphics.ColorSpace$Rgb: float[] mWhitePoint>;

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r37);

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mTransform: ");

        $r40 = r0.<android.graphics.ColorSpace$Rgb: float[] mTransform>;

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r40);

        $r42 = new java.lang.IllegalStateException;

        $r43 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r42.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r43);

        throw $r42;

     label06:
        r0.<android.graphics.ColorSpace$Rgb: long mNativePtr> = 0L;

     label07:
        return;

     label08:
        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Transform must have 9 entries! Has ");

        $i5 = lengthof r2;

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r22 = new java.lang.IllegalArgumentException;

        $r23 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r23);

        throw $r22;

     label09:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid range: min=");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f0);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", max=");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f1);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; min must be strictly < max");

        $r16 = new java.lang.IllegalArgumentException;

        $r17 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r17);

        throw $r16;

     label10:
        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The transfer functions of a color space cannot be null");

        throw $r9;

     label11:
        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The color space\'s white point must be defined as an array of 2 floats in xyY or 3 float in XYZ");

        throw $r8;

     label12:
        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The color space\'s primaries must be defined as an array of 6 floats in xyY or 9 floats in XYZ");

        throw $r7;
    }

    void <init>(java.lang.String, float[], float[], float[], java.util.function.DoubleUnaryOperator, java.util.function.DoubleUnaryOperator, float, float, android.graphics.ColorSpace$Rgb$TransferParameters, int, android.graphics.ColorSpace$1)
    {
        android.graphics.ColorSpace$Rgb r0;
        java.lang.String r1;
        float[] r2, r3, r4;
        java.util.function.DoubleUnaryOperator r5, r6;
        float f0, f1;
        android.graphics.ColorSpace$Rgb$TransferParameters r7;
        int i0;
        android.graphics.ColorSpace$1 r8;

        r0 := @this: android.graphics.ColorSpace$Rgb;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: float[];

        r3 := @parameter2: float[];

        r4 := @parameter3: float[];

        r5 := @parameter4: java.util.function.DoubleUnaryOperator;

        r6 := @parameter5: java.util.function.DoubleUnaryOperator;

        f0 := @parameter6: float;

        f1 := @parameter7: float;

        r7 := @parameter8: android.graphics.ColorSpace$Rgb$TransferParameters;

        i0 := @parameter9: int;

        r8 := @parameter10: android.graphics.ColorSpace$1;

        specialinvoke r0.<android.graphics.ColorSpace$Rgb: void <init>(java.lang.String,float[],float[],float[],java.util.function.DoubleUnaryOperator,java.util.function.DoubleUnaryOperator,float,float,android.graphics.ColorSpace$Rgb$TransferParameters,int)>(r1, r2, r3, r4, r5, r6, f0, f1, r7, i0);

        return;
    }

    static float[] access$000(android.graphics.ColorSpace$Rgb)
    {
        android.graphics.ColorSpace$Rgb r0;
        float[] $r1;

        r0 := @parameter0: android.graphics.ColorSpace$Rgb;

        $r1 = r0.<android.graphics.ColorSpace$Rgb: float[] mWhitePoint>;

        return $r1;
    }

    static float[] access$100(android.graphics.ColorSpace$Rgb)
    {
        android.graphics.ColorSpace$Rgb r0;
        float[] $r1;

        r0 := @parameter0: android.graphics.ColorSpace$Rgb;

        $r1 = r0.<android.graphics.ColorSpace$Rgb: float[] mTransform>;

        return $r1;
    }

    static long access$1400()
    {
        long $l0;

        $l0 = staticinvoke <android.graphics.ColorSpace$Rgb: long nativeGetNativeFinalizer()>();

        return $l0;
    }

    static java.util.function.DoubleUnaryOperator access$2500(android.graphics.ColorSpace$Rgb)
    {
        android.graphics.ColorSpace$Rgb r0;
        java.util.function.DoubleUnaryOperator $r1;

        r0 := @parameter0: android.graphics.ColorSpace$Rgb;

        $r1 = r0.<android.graphics.ColorSpace$Rgb: java.util.function.DoubleUnaryOperator mClampedEotf>;

        return $r1;
    }

    static java.util.function.DoubleUnaryOperator access$2600(android.graphics.ColorSpace$Rgb)
    {
        android.graphics.ColorSpace$Rgb r0;
        java.util.function.DoubleUnaryOperator $r1;

        r0 := @parameter0: android.graphics.ColorSpace$Rgb;

        $r1 = r0.<android.graphics.ColorSpace$Rgb: java.util.function.DoubleUnaryOperator mClampedOetf>;

        return $r1;
    }

    static float[] access$2700(android.graphics.ColorSpace$Rgb)
    {
        android.graphics.ColorSpace$Rgb r0;
        float[] $r1;

        r0 := @parameter0: android.graphics.ColorSpace$Rgb;

        $r1 = r0.<android.graphics.ColorSpace$Rgb: float[] mInverseTransform>;

        return $r1;
    }

    static android.graphics.ColorSpace$Rgb$TransferParameters access$300(android.graphics.ColorSpace$Rgb)
    {
        android.graphics.ColorSpace$Rgb r0;
        android.graphics.ColorSpace$Rgb$TransferParameters $r1;

        r0 := @parameter0: android.graphics.ColorSpace$Rgb;

        $r1 = r0.<android.graphics.ColorSpace$Rgb: android.graphics.ColorSpace$Rgb$TransferParameters mTransferParameters>;

        return $r1;
    }

    private static float area(float[])
    {
        float[] r0;
        float f0, f1, f2, f3, f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, f16, f17;
        byte $b0;

        r0 := @parameter0: float[];

        f0 = r0[0];

        f1 = r0[1];

        f2 = r0[2];

        f3 = r0[3];

        f4 = r0[4];

        f16 = r0[5];

        $f6 = f0 * f3;

        $f5 = f1 * f4;

        $f8 = $f6 + $f5;

        $f7 = f2 * f16;

        $f10 = $f8 + $f7;

        $f9 = f3 * f4;

        $f12 = $f10 - $f9;

        $f11 = f1 * f2;

        $f14 = $f12 - $f11;

        $f13 = f0 * f16;

        $f15 = $f14 - $f13;

        f17 = 0.5F * $f15;

        $b0 = f17 cmpg 0.0F;

        if $b0 >= 0 goto label1;

        f17 = neg f17;

        goto label1;

     label1:
        return f17;
    }

    private double clamp(double)
    {
        android.graphics.ColorSpace$Rgb r0;
        double $d0, $d1, d2;
        byte $b0, $b1;
        float f0;

        r0 := @this: android.graphics.ColorSpace$Rgb;

        d2 := @parameter0: double;

        f0 = r0.<android.graphics.ColorSpace$Rgb: float mMin>;

        $d0 = (double) f0;

        $b0 = d2 cmpg $d0;

        if $b0 >= 0 goto label2;

     label1:
        d2 = (double) f0;

        goto label3;

     label2:
        f0 = r0.<android.graphics.ColorSpace$Rgb: float mMax>;

        $d1 = (double) f0;

        $b1 = d2 cmpl $d1;

        if $b1 <= 0 goto label3;

        goto label1;

     label3:
        return d2;
    }

    private static boolean compare(double, java.util.function.DoubleUnaryOperator, java.util.function.DoubleUnaryOperator)
    {
        double d0, $d1, $d2, $d3, $d4;
        java.util.function.DoubleUnaryOperator r0, r1;
        byte $b0;
        boolean z0;

        d0 := @parameter0: double;

        r0 := @parameter1: java.util.function.DoubleUnaryOperator;

        r1 := @parameter2: java.util.function.DoubleUnaryOperator;

        $d1 = interfaceinvoke r0.<java.util.function.DoubleUnaryOperator: double applyAsDouble(double)>(d0);

        $d2 = interfaceinvoke r1.<java.util.function.DoubleUnaryOperator: double applyAsDouble(double)>(d0);

        $d3 = $d1 - $d2;

        $d4 = staticinvoke <java.lang.Math: double abs(double)>($d3);

        $b0 = $d4 cmpg 0.001;

        if $b0 > 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private static float[] computePrimaries(float[])
    {
        float[] r0, r1, $r2, $r3, $r4, $r5, r6, r7;
        float f0, f1, f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26;

        r6 := @parameter0: float[];

        $r2 = newarray (float)[3];

        $r2[0] = 1.0F;

        $r2[1] = 0.0F;

        $r2[2] = 0.0F;

        r0 = staticinvoke <android.graphics.ColorSpace: float[] access$1500(float[],float[])>(r6, $r2);

        $r3 = newarray (float)[3];

        $r3[0] = 0.0F;

        $r3[1] = 1.0F;

        $r3[2] = 0.0F;

        r1 = staticinvoke <android.graphics.ColorSpace: float[] access$1500(float[],float[])>(r6, $r3);

        $r4 = newarray (float)[3];

        $r4[0] = 0.0F;

        $r4[1] = 0.0F;

        $r4[2] = 1.0F;

        r7 = staticinvoke <android.graphics.ColorSpace: float[] access$1500(float[],float[])>(r6, $r4);

        $f4 = r0[0];

        $f3 = r0[1];

        $f6 = $f4 + $f3;

        $f5 = r0[2];

        f0 = $f6 + $f5;

        $f8 = r1[0];

        $f7 = r1[1];

        $f10 = $f8 + $f7;

        $f9 = r1[2];

        f1 = $f10 + $f9;

        $f12 = r7[0];

        $f11 = r7[1];

        $f14 = $f12 + $f11;

        $f13 = r7[2];

        f2 = $f14 + $f13;

        $r5 = newarray (float)[6];

        $f15 = r0[0];

        $f16 = $f15 / f0;

        $r5[0] = $f16;

        $f17 = r0[1];

        $f18 = $f17 / f0;

        $r5[1] = $f18;

        $f19 = r1[0];

        $f20 = $f19 / f1;

        $r5[2] = $f20;

        $f21 = r1[1];

        $f22 = $f21 / f1;

        $r5[3] = $f22;

        $f23 = r7[0];

        $f24 = $f23 / f2;

        $r5[4] = $f24;

        $f25 = r7[1];

        $f26 = $f25 / f2;

        $r5[5] = $f26;

        return $r5;
    }

    private static float[] computeWhitePoint(float[])
    {
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8;
        float[] $r0, $r1, r2, r3;

        r2 := @parameter0: float[];

        $r0 = newarray (float)[3];

        $r0[0] = 1.0F;

        $r0[1] = 1.0F;

        $r0[2] = 1.0F;

        r3 = staticinvoke <android.graphics.ColorSpace: float[] access$1500(float[],float[])>(r2, $r0);

        $f2 = r3[0];

        $f1 = r3[1];

        $f4 = $f2 + $f1;

        $f3 = r3[2];

        f0 = $f4 + $f3;

        $r1 = newarray (float)[2];

        $f5 = r3[0];

        $f6 = $f5 / f0;

        $r1[0] = $f6;

        $f7 = r3[1];

        $f8 = $f7 / f0;

        $r1[1] = $f8;

        return $r1;
    }

    private static float[] computeXYZMatrix(float[], float[])
    {
        float[] r0, r1, $r2;
        float f0, f1, f2, f3, f4, f5, f6, f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, $f34, $f35, $f36, $f37, $f38, $f39, $f40, $f41, $f42, $f43, f44, f45, f46, f47, f48, f49, f50, f51, f52, f53, f54, f55, f56, f57;

        r0 := @parameter0: float[];

        r1 := @parameter1: float[];

        f0 = r0[0];

        f1 = r0[1];

        f2 = r0[2];

        f3 = r0[3];

        f4 = r0[4];

        f5 = r0[5];

        f6 = r1[0];

        f44 = r1[1];

        $f8 = 1.0F - f0;

        f7 = $f8 / f1;

        $f9 = 1.0F - f2;

        f45 = $f9 / f3;

        $f10 = 1.0F - f4;

        f46 = $f10 / f5;

        $f11 = 1.0F - f6;

        f47 = $f11 / f44;

        f48 = f0 / f1;

        f49 = f2 / f3;

        f50 = f4 / f5;

        f51 = f6 / f44;

        $f13 = f47 - f7;

        $f12 = f49 - f48;

        $f17 = $f13 * $f12;

        $f15 = f51 - f48;

        $f14 = f45 - f7;

        $f16 = $f15 * $f14;

        $f25 = $f17 - $f16;

        $f19 = f46 - f7;

        $f18 = f49 - f48;

        $f23 = $f19 * $f18;

        $f21 = f50 - f48;

        $f20 = f45 - f7;

        $f22 = $f21 * $f20;

        $f24 = $f23 - $f22;

        f52 = $f25 / $f24;

        $f28 = f51 - f48;

        $f26 = f50 - f48;

        $f27 = $f26 * f52;

        $f30 = $f28 - $f27;

        $f29 = f49 - f48;

        f53 = $f30 / $f29;

        $f31 = 1.0F - f53;

        f54 = $f31 - f52;

        f55 = f54 / f1;

        f56 = f53 / f3;

        f57 = f52 / f5;

        $r2 = newarray (float)[9];

        $f32 = f55 * f0;

        $r2[0] = $f32;

        $r2[1] = f54;

        $f33 = 1.0F - f0;

        $f34 = $f33 - f1;

        $f35 = $f34 * f55;

        $r2[2] = $f35;

        $f36 = f56 * f2;

        $r2[3] = $f36;

        $r2[4] = f53;

        $f37 = 1.0F - f2;

        $f38 = $f37 - f3;

        $f39 = $f38 * f56;

        $r2[5] = $f39;

        $f40 = f57 * f4;

        $r2[6] = $f40;

        $r2[7] = f52;

        $f41 = 1.0F - f4;

        $f42 = $f41 - f5;

        $f43 = $f42 * f57;

        $r2[8] = $f43;

        return $r2;
    }

    private static boolean contains(float[], float[])
    {
        float[] r0, r1, r2;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, $f34, $f35, $f36, $f37, $f38, $f39, $f40, $f41, $f42, $f43, $f44, $f45, $f46, $f47, $f48, $f49, $f50, $f51, $f52, $f53, $f54, $f55, $f56, $f57, $f58, $f59, $f60, $f61, $f62, $f63, $f64, $f65, $f66, $f67, $f68, $f69, $f70, $f71;
        byte $b0, $b1, $b2, $b3, $b4, $b5;

        r0 := @parameter0: float[];

        r1 := @parameter1: float[];

        r2 = newarray (float)[6];

        $f1 = r0[0];

        $f0 = r1[0];

        $f2 = $f1 - $f0;

        r2[0] = $f2;

        $f4 = r0[1];

        $f3 = r1[1];

        $f5 = $f4 - $f3;

        r2[1] = $f5;

        $f7 = r0[2];

        $f6 = r1[2];

        $f8 = $f7 - $f6;

        r2[2] = $f8;

        $f10 = r0[3];

        $f9 = r1[3];

        $f11 = $f10 - $f9;

        r2[3] = $f11;

        $f13 = r0[4];

        $f12 = r1[4];

        $f14 = $f13 - $f12;

        r2[4] = $f14;

        $f16 = r0[5];

        $f15 = r1[5];

        $f17 = $f16 - $f15;

        r2[5] = $f17;

        $f25 = r2[0];

        $f24 = r2[1];

        $f19 = r1[0];

        $f18 = r1[4];

        $f23 = $f19 - $f18;

        $f21 = r1[1];

        $f20 = r1[5];

        $f22 = $f21 - $f20;

        $f26 = staticinvoke <android.graphics.ColorSpace$Rgb: float cross(float,float,float,float)>($f25, $f24, $f23, $f22);

        $b0 = $f26 cmpg 0.0F;

        if $b0 < 0 goto label6;

        $f28 = r1[0];

        $f27 = r1[2];

        $f34 = $f28 - $f27;

        $f30 = r1[1];

        $f29 = r1[3];

        $f33 = $f30 - $f29;

        $f32 = r2[0];

        $f31 = r2[1];

        $f35 = staticinvoke <android.graphics.ColorSpace$Rgb: float cross(float,float,float,float)>($f34, $f33, $f32, $f31);

        $b1 = $f35 cmpg 0.0F;

        if $b1 >= 0 goto label1;

        goto label6;

     label1:
        $f43 = r2[2];

        $f42 = r2[3];

        $f37 = r1[2];

        $f36 = r1[0];

        $f41 = $f37 - $f36;

        $f39 = r1[3];

        $f38 = r1[1];

        $f40 = $f39 - $f38;

        $f44 = staticinvoke <android.graphics.ColorSpace$Rgb: float cross(float,float,float,float)>($f43, $f42, $f41, $f40);

        $b2 = $f44 cmpg 0.0F;

        if $b2 < 0 goto label5;

        $f46 = r1[2];

        $f45 = r1[4];

        $f52 = $f46 - $f45;

        $f48 = r1[3];

        $f47 = r1[5];

        $f51 = $f48 - $f47;

        $f50 = r2[2];

        $f49 = r2[3];

        $f53 = staticinvoke <android.graphics.ColorSpace$Rgb: float cross(float,float,float,float)>($f52, $f51, $f50, $f49);

        $b3 = $f53 cmpg 0.0F;

        if $b3 >= 0 goto label2;

        goto label5;

     label2:
        $f61 = r2[4];

        $f60 = r2[5];

        $f55 = r1[4];

        $f54 = r1[2];

        $f59 = $f55 - $f54;

        $f57 = r1[5];

        $f56 = r1[3];

        $f58 = $f57 - $f56;

        $f62 = staticinvoke <android.graphics.ColorSpace$Rgb: float cross(float,float,float,float)>($f61, $f60, $f59, $f58);

        $b4 = $f62 cmpg 0.0F;

        if $b4 < 0 goto label4;

        $f64 = r1[4];

        $f63 = r1[0];

        $f70 = $f64 - $f63;

        $f66 = r1[5];

        $f65 = r1[1];

        $f69 = $f66 - $f65;

        $f68 = r2[4];

        $f67 = r2[5];

        $f71 = staticinvoke <android.graphics.ColorSpace$Rgb: float cross(float,float,float,float)>($f70, $f69, $f68, $f67);

        $b5 = $f71 cmpg 0.0F;

        if $b5 >= 0 goto label3;

        goto label4;

     label3:
        return 1;

     label4:
        return 0;

     label5:
        return 0;

     label6:
        return 0;
    }

    private static float cross(float, float, float, float)
    {
        float f0, f1, f2, f3, $f4, $f5, $f6;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        $f5 = f0 * f3;

        $f4 = f1 * f2;

        $f6 = $f5 - $f4;

        return $f6;
    }

    private static boolean isGray(float[])
    {
        float[] r0;
        int i0;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        byte $b1, $b2, $b3, $b4, $b5, $b6;
        boolean z0;

        r0 := @parameter0: float[];

        i0 = lengthof r0;

        z0 = 1;

        if i0 != 9 goto label1;

        $f0 = r0[1];

        $b1 = $f0 cmpl 0.0F;

        if $b1 != 0 goto label1;

        $f1 = r0[2];

        $b2 = $f1 cmpl 0.0F;

        if $b2 != 0 goto label1;

        $f2 = r0[3];

        $b3 = $f2 cmpl 0.0F;

        if $b3 != 0 goto label1;

        $f3 = r0[5];

        $b4 = $f3 cmpl 0.0F;

        if $b4 != 0 goto label1;

        $f4 = r0[6];

        $b5 = $f4 cmpl 0.0F;

        if $b5 != 0 goto label1;

        $f5 = r0[7];

        $b6 = $f5 cmpl 0.0F;

        if $b6 != 0 goto label1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private static boolean isSrgb(float[], float[], java.util.function.DoubleUnaryOperator, java.util.function.DoubleUnaryOperator, float, float, int)
    {
        float[] r0, $r3, $r4, r9;
        java.util.function.DoubleUnaryOperator r1, r2, $r7, $r8;
        float f0, f1;
        int i0;
        boolean $z0, $z1, $z2, $z3;
        byte $b1, $b2, $b3;
        android.graphics.ColorSpace$Named $r5;
        android.graphics.ColorSpace $r6;
        android.graphics.ColorSpace$Rgb r10;
        double d0;

        r9 := @parameter0: float[];

        r0 := @parameter1: float[];

        r1 := @parameter2: java.util.function.DoubleUnaryOperator;

        r2 := @parameter3: java.util.function.DoubleUnaryOperator;

        f0 := @parameter4: float;

        f1 := @parameter5: float;

        i0 := @parameter6: int;

        if i0 != 0 goto label1;

        return 1;

     label1:
        $r3 = staticinvoke <android.graphics.ColorSpace: float[] access$1600()>();

        $z0 = staticinvoke <android.graphics.ColorSpace: boolean access$1700(float[],float[])>(r9, $r3);

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r4 = <android.graphics.ColorSpace$Rgb: float[] ILLUMINANT_D65>;

        $z1 = staticinvoke <android.graphics.ColorSpace: boolean access$1700(float[],float[])>(r0, $r4);

        if $z1 != 0 goto label3;

        return 0;

     label3:
        $b1 = f0 cmpl 0.0F;

        if $b1 == 0 goto label4;

        return 0;

     label4:
        $b2 = f1 cmpl 1.0F;

        if $b2 == 0 goto label5;

        return 0;

     label5:
        $r5 = <android.graphics.ColorSpace$Named: android.graphics.ColorSpace$Named SRGB>;

        $r6 = staticinvoke <android.graphics.ColorSpace$Rgb: android.graphics.ColorSpace get(android.graphics.ColorSpace$Named)>($r5);

        r10 = (android.graphics.ColorSpace$Rgb) $r6;

        d0 = 0.0;

     label6:
        $b3 = d0 cmpg 1.0;

        if $b3 > 0 goto label9;

        $r7 = r10.<android.graphics.ColorSpace$Rgb: java.util.function.DoubleUnaryOperator mOetf>;

        $z2 = staticinvoke <android.graphics.ColorSpace$Rgb: boolean compare(double,java.util.function.DoubleUnaryOperator,java.util.function.DoubleUnaryOperator)>(d0, r1, $r7);

        if $z2 != 0 goto label7;

        return 0;

     label7:
        $r8 = r10.<android.graphics.ColorSpace$Rgb: java.util.function.DoubleUnaryOperator mEotf>;

        $z3 = staticinvoke <android.graphics.ColorSpace$Rgb: boolean compare(double,java.util.function.DoubleUnaryOperator,java.util.function.DoubleUnaryOperator)>(d0, r2, $r8);

        if $z3 != 0 goto label8;

        return 0;

     label8:
        d0 = d0 + 0.00392156862745098;

        goto label6;

     label9:
        return 1;
    }

    private static boolean isWideGamut(float[], float, float)
    {
        float[] r0, $r1, $r2;
        float f0, f1, $f2, $f3, $f4;
        byte $b0, $b1, $b2;
        boolean $z0, z1;

        r0 := @parameter0: float[];

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        $f2 = staticinvoke <android.graphics.ColorSpace$Rgb: float area(float[])>(r0);

        $r1 = staticinvoke <android.graphics.ColorSpace: float[] access$1800()>();

        $f3 = staticinvoke <android.graphics.ColorSpace$Rgb: float area(float[])>($r1);

        $f4 = $f2 / $f3;

        $b0 = $f4 cmpl 0.9F;

        if $b0 <= 0 goto label1;

        $r2 = staticinvoke <android.graphics.ColorSpace: float[] access$1600()>();

        $z0 = staticinvoke <android.graphics.ColorSpace$Rgb: boolean contains(float[],float[])>(r0, $r2);

        if $z0 != 0 goto label2;

     label1:
        $b1 = f0 cmpg 0.0F;

        if $b1 >= 0 goto label3;

        $b2 = f1 cmpl 1.0F;

        if $b2 <= 0 goto label3;

     label2:
        z1 = 1;

        goto label4;

     label3:
        z1 = 0;

     label4:
        return z1;
    }

    public static double lambda$8EkhO2jIf14tuA3BvrmYJMa7YXM(android.graphics.ColorSpace$Rgb, double)
    {
        android.graphics.ColorSpace$Rgb r0;
        double d0, $d1;

        r0 := @parameter0: android.graphics.ColorSpace$Rgb;

        d0 := @parameter1: double;

        $d1 = specialinvoke r0.<android.graphics.ColorSpace$Rgb: double clamp(double)>(d0);

        return $d1;
    }

    static double lambda$new$0(android.graphics.ColorSpace$Rgb$TransferParameters, double)
    {
        android.graphics.ColorSpace$Rgb$TransferParameters r0;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6;

        r0 := @parameter0: android.graphics.ColorSpace$Rgb$TransferParameters;

        d0 := @parameter1: double;

        $d5 = r0.<android.graphics.ColorSpace$Rgb$TransferParameters: double a>;

        $d4 = r0.<android.graphics.ColorSpace$Rgb$TransferParameters: double b>;

        $d3 = r0.<android.graphics.ColorSpace$Rgb$TransferParameters: double c>;

        $d2 = r0.<android.graphics.ColorSpace$Rgb$TransferParameters: double d>;

        $d1 = r0.<android.graphics.ColorSpace$Rgb$TransferParameters: double g>;

        $d6 = staticinvoke <android.graphics.ColorSpace: double access$2200(double,double,double,double,double,double)>(d0, $d5, $d4, $d3, $d2, $d1);

        return $d6;
    }

    static double lambda$new$1(android.graphics.ColorSpace$Rgb$TransferParameters, double)
    {
        android.graphics.ColorSpace$Rgb$TransferParameters r0;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8;

        r0 := @parameter0: android.graphics.ColorSpace$Rgb$TransferParameters;

        d0 := @parameter1: double;

        $d7 = r0.<android.graphics.ColorSpace$Rgb$TransferParameters: double a>;

        $d6 = r0.<android.graphics.ColorSpace$Rgb$TransferParameters: double b>;

        $d5 = r0.<android.graphics.ColorSpace$Rgb$TransferParameters: double c>;

        $d4 = r0.<android.graphics.ColorSpace$Rgb$TransferParameters: double d>;

        $d3 = r0.<android.graphics.ColorSpace$Rgb$TransferParameters: double e>;

        $d2 = r0.<android.graphics.ColorSpace$Rgb$TransferParameters: double f>;

        $d1 = r0.<android.graphics.ColorSpace$Rgb$TransferParameters: double g>;

        $d8 = staticinvoke <android.graphics.ColorSpace: double access$2100(double,double,double,double,double,double,double,double)>(d0, $d7, $d6, $d5, $d4, $d3, $d2, $d1);

        return $d8;
    }

    static double lambda$new$2(android.graphics.ColorSpace$Rgb$TransferParameters, double)
    {
        android.graphics.ColorSpace$Rgb$TransferParameters r0;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6;

        r0 := @parameter0: android.graphics.ColorSpace$Rgb$TransferParameters;

        d0 := @parameter1: double;

        $d5 = r0.<android.graphics.ColorSpace$Rgb$TransferParameters: double a>;

        $d4 = r0.<android.graphics.ColorSpace$Rgb$TransferParameters: double b>;

        $d3 = r0.<android.graphics.ColorSpace$Rgb$TransferParameters: double c>;

        $d2 = r0.<android.graphics.ColorSpace$Rgb$TransferParameters: double d>;

        $d1 = r0.<android.graphics.ColorSpace$Rgb$TransferParameters: double g>;

        $d6 = staticinvoke <android.graphics.ColorSpace: double access$2000(double,double,double,double,double,double)>(d0, $d5, $d4, $d3, $d2, $d1);

        return $d6;
    }

    static double lambda$new$3(android.graphics.ColorSpace$Rgb$TransferParameters, double)
    {
        android.graphics.ColorSpace$Rgb$TransferParameters r0;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8;

        r0 := @parameter0: android.graphics.ColorSpace$Rgb$TransferParameters;

        d0 := @parameter1: double;

        $d7 = r0.<android.graphics.ColorSpace$Rgb$TransferParameters: double a>;

        $d6 = r0.<android.graphics.ColorSpace$Rgb$TransferParameters: double b>;

        $d5 = r0.<android.graphics.ColorSpace$Rgb$TransferParameters: double c>;

        $d4 = r0.<android.graphics.ColorSpace$Rgb$TransferParameters: double d>;

        $d3 = r0.<android.graphics.ColorSpace$Rgb$TransferParameters: double e>;

        $d2 = r0.<android.graphics.ColorSpace$Rgb$TransferParameters: double f>;

        $d1 = r0.<android.graphics.ColorSpace$Rgb$TransferParameters: double g>;

        $d8 = staticinvoke <android.graphics.ColorSpace: double access$1900(double,double,double,double,double,double,double,double)>(d0, $d7, $d6, $d5, $d4, $d3, $d2, $d1);

        return $d8;
    }

    static double lambda$new$4(double, double)
    {
        double d0, $d2, $d3, d4;
        byte $b0;

        d0 := @parameter0: double;

        d4 := @parameter1: double;

        $b0 = d4 cmpg 0.0;

        if $b0 >= 0 goto label1;

        d4 = 0.0;

        goto label1;

     label1:
        $d2 = 1.0 / d0;

        $d3 = staticinvoke <java.lang.Math: double pow(double,double)>(d4, $d2);

        return $d3;
    }

    static double lambda$new$5(double, double)
    {
        double d0, $d2, d3;
        byte $b0;

        d0 := @parameter0: double;

        d3 := @parameter1: double;

        $b0 = d3 cmpg 0.0;

        if $b0 >= 0 goto label1;

        d3 = 0.0;

        goto label1;

     label1:
        $d2 = staticinvoke <java.lang.Math: double pow(double,double)>(d3, d0);

        return $d2;
    }

    private static native long nativeCreate(float, float, float, float, float, float, float, float[]);

    private static native long nativeGetNativeFinalizer();

    private static float[] xyPrimaries(float[])
    {
        float[] r0, r1;
        int $i0;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, f24, f25, f26;

        r0 := @parameter0: float[];

        r1 = newarray (float)[6];

        $i0 = lengthof r0;

        if $i0 != 9 goto label1;

        $f1 = r0[0];

        $f0 = r0[1];

        $f3 = $f1 + $f0;

        $f2 = r0[2];

        f24 = $f3 + $f2;

        $f4 = r0[0];

        $f5 = $f4 / f24;

        r1[0] = $f5;

        $f6 = r0[1];

        $f7 = $f6 / f24;

        r1[1] = $f7;

        $f9 = r0[3];

        $f8 = r0[4];

        $f11 = $f9 + $f8;

        $f10 = r0[5];

        f25 = $f11 + $f10;

        $f12 = r0[3];

        $f13 = $f12 / f25;

        r1[2] = $f13;

        $f14 = r0[4];

        $f15 = $f14 / f25;

        r1[3] = $f15;

        $f17 = r0[6];

        $f16 = r0[7];

        $f19 = $f17 + $f16;

        $f18 = r0[8];

        f26 = $f19 + $f18;

        $f20 = r0[6];

        $f21 = $f20 / f26;

        r1[4] = $f21;

        $f22 = r0[7];

        $f23 = $f22 / f26;

        r1[5] = $f23;

        goto label2;

     label1:
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, r1, 0, 6);

     label2:
        return r1;
    }

    private static float[] xyWhitePoint(float[])
    {
        float[] r0, r1;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8;
        int $i0;

        r0 := @parameter0: float[];

        r1 = newarray (float)[2];

        $i0 = lengthof r0;

        if $i0 != 3 goto label1;

        $f2 = r0[0];

        $f1 = r0[1];

        $f4 = $f2 + $f1;

        $f3 = r0[2];

        f0 = $f4 + $f3;

        $f5 = r0[0];

        $f6 = $f5 / f0;

        r1[0] = $f6;

        $f7 = r0[1];

        $f8 = $f7 / f0;

        r1[1] = $f8;

        goto label2;

     label1:
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, r1, 0, 2);

     label2:
        return r1;
    }

    public boolean equals(java.lang.Object)
    {
        android.graphics.ColorSpace$Rgb r0, r15;
        android.graphics.ColorSpace$Rgb$TransferParameters r1, $r8, $r13;
        java.lang.Class $r2, $r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        float $f0, $f1, $f2, $f3;
        int $i0, $i1;
        float[] $r4, $r5, $r6, $r7;
        java.util.function.DoubleUnaryOperator $r9, $r10, $r11, $r12;
        java.lang.Object r14;

        r0 := @this: android.graphics.ColorSpace$Rgb;

        r14 := @parameter0: java.lang.Object;

        if r0 != r14 goto label01;

        return 1;

     label01:
        if r14 == null goto label11;

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r14.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 == $r3 goto label02;

        goto label11;

     label02:
        $z0 = specialinvoke r0.<android.graphics.ColorSpace: boolean equals(java.lang.Object)>(r14);

        if $z0 != 0 goto label03;

        return 0;

     label03:
        r15 = (android.graphics.ColorSpace$Rgb) r14;

        $f1 = r15.<android.graphics.ColorSpace$Rgb: float mMin>;

        $f0 = r0.<android.graphics.ColorSpace$Rgb: float mMin>;

        $i0 = staticinvoke <java.lang.Float: int compare(float,float)>($f1, $f0);

        if $i0 == 0 goto label04;

        return 0;

     label04:
        $f3 = r15.<android.graphics.ColorSpace$Rgb: float mMax>;

        $f2 = r0.<android.graphics.ColorSpace$Rgb: float mMax>;

        $i1 = staticinvoke <java.lang.Float: int compare(float,float)>($f3, $f2);

        if $i1 == 0 goto label05;

        return 0;

     label05:
        $r5 = r0.<android.graphics.ColorSpace$Rgb: float[] mWhitePoint>;

        $r4 = r15.<android.graphics.ColorSpace$Rgb: float[] mWhitePoint>;

        $z1 = staticinvoke <java.util.Arrays: boolean equals(float[],float[])>($r5, $r4);

        if $z1 != 0 goto label06;

        return 0;

     label06:
        $r7 = r0.<android.graphics.ColorSpace$Rgb: float[] mPrimaries>;

        $r6 = r15.<android.graphics.ColorSpace$Rgb: float[] mPrimaries>;

        $z2 = staticinvoke <java.util.Arrays: boolean equals(float[],float[])>($r7, $r6);

        if $z2 != 0 goto label07;

        return 0;

     label07:
        r1 = r0.<android.graphics.ColorSpace$Rgb: android.graphics.ColorSpace$Rgb$TransferParameters mTransferParameters>;

        if r1 == null goto label08;

        $r13 = r15.<android.graphics.ColorSpace$Rgb: android.graphics.ColorSpace$Rgb$TransferParameters mTransferParameters>;

        $z5 = virtualinvoke r1.<android.graphics.ColorSpace$Rgb$TransferParameters: boolean equals(java.lang.Object)>($r13);

        return $z5;

     label08:
        $r8 = r15.<android.graphics.ColorSpace$Rgb: android.graphics.ColorSpace$Rgb$TransferParameters mTransferParameters>;

        if $r8 != null goto label09;

        return 1;

     label09:
        $r10 = r0.<android.graphics.ColorSpace$Rgb: java.util.function.DoubleUnaryOperator mOetf>;

        $r9 = r15.<android.graphics.ColorSpace$Rgb: java.util.function.DoubleUnaryOperator mOetf>;

        $z3 = virtualinvoke $r10.<java.lang.Object: boolean equals(java.lang.Object)>($r9);

        if $z3 != 0 goto label10;

        return 0;

     label10:
        $r12 = r0.<android.graphics.ColorSpace$Rgb: java.util.function.DoubleUnaryOperator mEotf>;

        $r11 = r15.<android.graphics.ColorSpace$Rgb: java.util.function.DoubleUnaryOperator mEotf>;

        $z4 = virtualinvoke $r12.<java.lang.Object: boolean equals(java.lang.Object)>($r11);

        return $z4;

     label11:
        return 0;
    }

    public float[] fromLinear(float, float, float)
    {
        android.graphics.ColorSpace$Rgb r0;
        float f0, f1, f2;
        float[] $r1, $r2;

        r0 := @this: android.graphics.ColorSpace$Rgb;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        $r1 = newarray (float)[3];

        $r1[0] = f0;

        $r1[1] = f1;

        $r1[2] = f2;

        $r2 = virtualinvoke r0.<android.graphics.ColorSpace$Rgb: float[] fromLinear(float[])>($r1);

        return $r2;
    }

    public float[] fromLinear(float[])
    {
        android.graphics.ColorSpace$Rgb r0;
        float[] r1;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        java.util.function.DoubleUnaryOperator $r2, $r3, $r4;

        r0 := @this: android.graphics.ColorSpace$Rgb;

        r1 := @parameter0: float[];

        $r2 = r0.<android.graphics.ColorSpace$Rgb: java.util.function.DoubleUnaryOperator mClampedOetf>;

        $f0 = r1[0];

        $d0 = (double) $f0;

        $d1 = interfaceinvoke $r2.<java.util.function.DoubleUnaryOperator: double applyAsDouble(double)>($d0);

        $f1 = (float) $d1;

        r1[0] = $f1;

        $r3 = r0.<android.graphics.ColorSpace$Rgb: java.util.function.DoubleUnaryOperator mClampedOetf>;

        $f2 = r1[1];

        $d2 = (double) $f2;

        $d3 = interfaceinvoke $r3.<java.util.function.DoubleUnaryOperator: double applyAsDouble(double)>($d2);

        $f3 = (float) $d3;

        r1[1] = $f3;

        $r4 = r0.<android.graphics.ColorSpace$Rgb: java.util.function.DoubleUnaryOperator mClampedOetf>;

        $f4 = r1[2];

        $d4 = (double) $f4;

        $d5 = interfaceinvoke $r4.<java.util.function.DoubleUnaryOperator: double applyAsDouble(double)>($d4);

        $f5 = (float) $d5;

        r1[2] = $f5;

        return r1;
    }

    public float[] fromXyz(float[])
    {
        android.graphics.ColorSpace$Rgb r0;
        float[] r1, $r2;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        java.util.function.DoubleUnaryOperator $r4, $r5, $r6;

        r0 := @this: android.graphics.ColorSpace$Rgb;

        r1 := @parameter0: float[];

        $r2 = r0.<android.graphics.ColorSpace$Rgb: float[] mInverseTransform>;

        staticinvoke <android.graphics.ColorSpace: float[] access$1500(float[],float[])>($r2, r1);

        $r4 = r0.<android.graphics.ColorSpace$Rgb: java.util.function.DoubleUnaryOperator mClampedOetf>;

        $f0 = r1[0];

        $d0 = (double) $f0;

        $d1 = interfaceinvoke $r4.<java.util.function.DoubleUnaryOperator: double applyAsDouble(double)>($d0);

        $f1 = (float) $d1;

        r1[0] = $f1;

        $r5 = r0.<android.graphics.ColorSpace$Rgb: java.util.function.DoubleUnaryOperator mClampedOetf>;

        $f2 = r1[1];

        $d2 = (double) $f2;

        $d3 = interfaceinvoke $r5.<java.util.function.DoubleUnaryOperator: double applyAsDouble(double)>($d2);

        $f3 = (float) $d3;

        r1[1] = $f3;

        $r6 = r0.<android.graphics.ColorSpace$Rgb: java.util.function.DoubleUnaryOperator mClampedOetf>;

        $f4 = r1[2];

        $d4 = (double) $f4;

        $d5 = interfaceinvoke $r6.<java.util.function.DoubleUnaryOperator: double applyAsDouble(double)>($d4);

        $f5 = (float) $d5;

        r1[2] = $f5;

        return r1;
    }

    public java.util.function.DoubleUnaryOperator getEotf()
    {
        android.graphics.ColorSpace$Rgb r0;
        java.util.function.DoubleUnaryOperator $r1;

        r0 := @this: android.graphics.ColorSpace$Rgb;

        $r1 = r0.<android.graphics.ColorSpace$Rgb: java.util.function.DoubleUnaryOperator mClampedEotf>;

        return $r1;
    }

    public float[] getInverseTransform()
    {
        android.graphics.ColorSpace$Rgb r0;
        float[] r1, $r2;
        int $i0;

        r0 := @this: android.graphics.ColorSpace$Rgb;

        r1 = r0.<android.graphics.ColorSpace$Rgb: float[] mInverseTransform>;

        $i0 = lengthof r1;

        $r2 = staticinvoke <java.util.Arrays: float[] copyOf(float[],int)>(r1, $i0);

        return $r2;
    }

    public float[] getInverseTransform(float[])
    {
        android.graphics.ColorSpace$Rgb r0;
        float[] r1, r2;
        int $i0;

        r0 := @this: android.graphics.ColorSpace$Rgb;

        r1 := @parameter0: float[];

        r2 = r0.<android.graphics.ColorSpace$Rgb: float[] mInverseTransform>;

        $i0 = lengthof r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r1, 0, $i0);

        return r1;
    }

    public float getMaxValue(int)
    {
        android.graphics.ColorSpace$Rgb r0;
        int i0;
        float $f0;

        r0 := @this: android.graphics.ColorSpace$Rgb;

        i0 := @parameter0: int;

        $f0 = r0.<android.graphics.ColorSpace$Rgb: float mMax>;

        return $f0;
    }

    public float getMinValue(int)
    {
        android.graphics.ColorSpace$Rgb r0;
        int i0;
        float $f0;

        r0 := @this: android.graphics.ColorSpace$Rgb;

        i0 := @parameter0: int;

        $f0 = r0.<android.graphics.ColorSpace$Rgb: float mMin>;

        return $f0;
    }

    long getNativeInstance()
    {
        android.graphics.ColorSpace$Rgb r0;
        long l0;
        byte $b1;
        java.lang.StringBuilder $r2;
        java.lang.IllegalArgumentException $r5;
        java.lang.String $r6;

        r0 := @this: android.graphics.ColorSpace$Rgb;

        l0 = r0.<android.graphics.ColorSpace$Rgb: long mNativePtr>;

        $b1 = l0 cmp 0L;

        if $b1 == 0 goto label1;

        return l0;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ColorSpace must use an ICC parametric transfer function! used ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r5;
    }

    public java.util.function.DoubleUnaryOperator getOetf()
    {
        android.graphics.ColorSpace$Rgb r0;
        java.util.function.DoubleUnaryOperator $r1;

        r0 := @this: android.graphics.ColorSpace$Rgb;

        $r1 = r0.<android.graphics.ColorSpace$Rgb: java.util.function.DoubleUnaryOperator mClampedOetf>;

        return $r1;
    }

    public float[] getPrimaries()
    {
        android.graphics.ColorSpace$Rgb r0;
        float[] r1, $r2;
        int $i0;

        r0 := @this: android.graphics.ColorSpace$Rgb;

        r1 = r0.<android.graphics.ColorSpace$Rgb: float[] mPrimaries>;

        $i0 = lengthof r1;

        $r2 = staticinvoke <java.util.Arrays: float[] copyOf(float[],int)>(r1, $i0);

        return $r2;
    }

    public float[] getPrimaries(float[])
    {
        android.graphics.ColorSpace$Rgb r0;
        float[] r1, r2;
        int $i0;

        r0 := @this: android.graphics.ColorSpace$Rgb;

        r1 := @parameter0: float[];

        r2 = r0.<android.graphics.ColorSpace$Rgb: float[] mPrimaries>;

        $i0 = lengthof r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r1, 0, $i0);

        return r1;
    }

    public android.graphics.ColorSpace$Rgb$TransferParameters getTransferParameters()
    {
        android.graphics.ColorSpace$Rgb r0;
        android.graphics.ColorSpace$Rgb$TransferParameters $r1;

        r0 := @this: android.graphics.ColorSpace$Rgb;

        $r1 = r0.<android.graphics.ColorSpace$Rgb: android.graphics.ColorSpace$Rgb$TransferParameters mTransferParameters>;

        return $r1;
    }

    public float[] getTransform()
    {
        android.graphics.ColorSpace$Rgb r0;
        float[] r1, $r2;
        int $i0;

        r0 := @this: android.graphics.ColorSpace$Rgb;

        r1 = r0.<android.graphics.ColorSpace$Rgb: float[] mTransform>;

        $i0 = lengthof r1;

        $r2 = staticinvoke <java.util.Arrays: float[] copyOf(float[],int)>(r1, $i0);

        return $r2;
    }

    public float[] getTransform(float[])
    {
        android.graphics.ColorSpace$Rgb r0;
        float[] r1, r2;
        int $i0;

        r0 := @this: android.graphics.ColorSpace$Rgb;

        r1 := @parameter0: float[];

        r2 = r0.<android.graphics.ColorSpace$Rgb: float[] mTransform>;

        $i0 = lengthof r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r1, 0, $i0);

        return r1;
    }

    public float[] getWhitePoint()
    {
        android.graphics.ColorSpace$Rgb r0;
        float[] r1, $r2;
        int $i0;

        r0 := @this: android.graphics.ColorSpace$Rgb;

        r1 = r0.<android.graphics.ColorSpace$Rgb: float[] mWhitePoint>;

        $i0 = lengthof r1;

        $r2 = staticinvoke <java.util.Arrays: float[] copyOf(float[],int)>(r1, $i0);

        return $r2;
    }

    public float[] getWhitePoint(float[])
    {
        android.graphics.ColorSpace$Rgb r0;
        float[] r1, r2;
        float $f0, $f1;

        r0 := @this: android.graphics.ColorSpace$Rgb;

        r1 := @parameter0: float[];

        r2 = r0.<android.graphics.ColorSpace$Rgb: float[] mWhitePoint>;

        $f0 = r2[0];

        r1[0] = $f0;

        $f1 = r2[1];

        r1[1] = $f1;

        return r1;
    }

    public int hashCode()
    {
        android.graphics.ColorSpace$Rgb r0;
        int i0, i1, i2, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, i19, i20, i21, i22, i23;
        android.graphics.ColorSpace$Rgb$TransferParameters r1, $r4;
        float[] $r2, $r3;
        byte $b3, $b4;
        java.util.function.DoubleUnaryOperator $r5, $r6;
        float f0, f1;

        r0 := @this: android.graphics.ColorSpace$Rgb;

        i0 = specialinvoke r0.<android.graphics.ColorSpace: int hashCode()>();

        $r2 = r0.<android.graphics.ColorSpace$Rgb: float[] mWhitePoint>;

        i1 = staticinvoke <java.util.Arrays: int hashCode(float[])>($r2);

        $r3 = r0.<android.graphics.ColorSpace$Rgb: float[] mPrimaries>;

        i2 = staticinvoke <java.util.Arrays: int hashCode(float[])>($r3);

        f0 = r0.<android.graphics.ColorSpace$Rgb: float mMin>;

        i19 = 0;

        $b3 = f0 cmpl 0.0F;

        if $b3 == 0 goto label1;

        i20 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f0);

        goto label2;

     label1:
        i20 = 0;

     label2:
        f1 = r0.<android.graphics.ColorSpace$Rgb: float mMax>;

        $b4 = f1 cmpl 0.0F;

        if $b4 == 0 goto label3;

        i21 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f1);

        goto label4;

     label3:
        i21 = 0;

     label4:
        r1 = r0.<android.graphics.ColorSpace$Rgb: android.graphics.ColorSpace$Rgb$TransferParameters mTransferParameters>;

        if r1 == null goto label5;

        i19 = virtualinvoke r1.<android.graphics.ColorSpace$Rgb$TransferParameters: int hashCode()>();

     label5:
        $i5 = i0 * 31;

        $i6 = $i5 + i1;

        $i7 = $i6 * 31;

        $i8 = $i7 + i2;

        $i9 = $i8 * 31;

        $i10 = $i9 + i20;

        $i11 = $i10 * 31;

        $i12 = $i11 + i21;

        $i13 = $i12 * 31;

        i22 = $i13 + i19;

        i23 = i22;

        $r4 = r0.<android.graphics.ColorSpace$Rgb: android.graphics.ColorSpace$Rgb$TransferParameters mTransferParameters>;

        if $r4 != null goto label6;

        $i14 = i22 * 31;

        $r5 = r0.<android.graphics.ColorSpace$Rgb: java.util.function.DoubleUnaryOperator mOetf>;

        $i15 = virtualinvoke $r5.<java.lang.Object: int hashCode()>();

        $i16 = $i14 + $i15;

        $i17 = $i16 * 31;

        $r6 = r0.<android.graphics.ColorSpace$Rgb: java.util.function.DoubleUnaryOperator mEotf>;

        $i18 = virtualinvoke $r6.<java.lang.Object: int hashCode()>();

        i23 = $i17 + $i18;

     label6:
        return i23;
    }

    public boolean isSrgb()
    {
        android.graphics.ColorSpace$Rgb r0;
        boolean $z0;

        r0 := @this: android.graphics.ColorSpace$Rgb;

        $z0 = r0.<android.graphics.ColorSpace$Rgb: boolean mIsSrgb>;

        return $z0;
    }

    public boolean isWideGamut()
    {
        android.graphics.ColorSpace$Rgb r0;
        boolean $z0;

        r0 := @this: android.graphics.ColorSpace$Rgb;

        $z0 = r0.<android.graphics.ColorSpace$Rgb: boolean mIsWideGamut>;

        return $z0;
    }

    public float[] toLinear(float, float, float)
    {
        android.graphics.ColorSpace$Rgb r0;
        float f0, f1, f2;
        float[] $r1, $r2;

        r0 := @this: android.graphics.ColorSpace$Rgb;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        $r1 = newarray (float)[3];

        $r1[0] = f0;

        $r1[1] = f1;

        $r1[2] = f2;

        $r2 = virtualinvoke r0.<android.graphics.ColorSpace$Rgb: float[] toLinear(float[])>($r1);

        return $r2;
    }

    public float[] toLinear(float[])
    {
        android.graphics.ColorSpace$Rgb r0;
        float[] r1;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        java.util.function.DoubleUnaryOperator $r2, $r3, $r4;

        r0 := @this: android.graphics.ColorSpace$Rgb;

        r1 := @parameter0: float[];

        $r2 = r0.<android.graphics.ColorSpace$Rgb: java.util.function.DoubleUnaryOperator mClampedEotf>;

        $f0 = r1[0];

        $d0 = (double) $f0;

        $d1 = interfaceinvoke $r2.<java.util.function.DoubleUnaryOperator: double applyAsDouble(double)>($d0);

        $f1 = (float) $d1;

        r1[0] = $f1;

        $r3 = r0.<android.graphics.ColorSpace$Rgb: java.util.function.DoubleUnaryOperator mClampedEotf>;

        $f2 = r1[1];

        $d2 = (double) $f2;

        $d3 = interfaceinvoke $r3.<java.util.function.DoubleUnaryOperator: double applyAsDouble(double)>($d2);

        $f3 = (float) $d3;

        r1[1] = $f3;

        $r4 = r0.<android.graphics.ColorSpace$Rgb: java.util.function.DoubleUnaryOperator mClampedEotf>;

        $f4 = r1[2];

        $d4 = (double) $f4;

        $d5 = interfaceinvoke $r4.<java.util.function.DoubleUnaryOperator: double applyAsDouble(double)>($d4);

        $f5 = (float) $d5;

        r1[2] = $f5;

        return r1;
    }

    public float[] toXyz(float[])
    {
        android.graphics.ColorSpace$Rgb r0;
        float[] r1, $r5, $r6;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        java.util.function.DoubleUnaryOperator $r2, $r3, $r4;

        r0 := @this: android.graphics.ColorSpace$Rgb;

        r1 := @parameter0: float[];

        $r2 = r0.<android.graphics.ColorSpace$Rgb: java.util.function.DoubleUnaryOperator mClampedEotf>;

        $f0 = r1[0];

        $d0 = (double) $f0;

        $d1 = interfaceinvoke $r2.<java.util.function.DoubleUnaryOperator: double applyAsDouble(double)>($d0);

        $f1 = (float) $d1;

        r1[0] = $f1;

        $r3 = r0.<android.graphics.ColorSpace$Rgb: java.util.function.DoubleUnaryOperator mClampedEotf>;

        $f2 = r1[1];

        $d2 = (double) $f2;

        $d3 = interfaceinvoke $r3.<java.util.function.DoubleUnaryOperator: double applyAsDouble(double)>($d2);

        $f3 = (float) $d3;

        r1[1] = $f3;

        $r4 = r0.<android.graphics.ColorSpace$Rgb: java.util.function.DoubleUnaryOperator mClampedEotf>;

        $f4 = r1[2];

        $d4 = (double) $f4;

        $d5 = interfaceinvoke $r4.<java.util.function.DoubleUnaryOperator: double applyAsDouble(double)>($d4);

        $f5 = (float) $d5;

        r1[2] = $f5;

        $r5 = r0.<android.graphics.ColorSpace$Rgb: float[] mTransform>;

        $r6 = staticinvoke <android.graphics.ColorSpace: float[] access$1500(float[],float[])>($r5, r1);

        return $r6;
    }
}
