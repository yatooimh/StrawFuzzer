public class android.graphics.FontListParser extends java.lang.Object
{
    private static final java.util.regex.Pattern FILENAME_WHITESPACE_PATTERN;

    static void <clinit>()
    {
        java.util.regex.Pattern $r0;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("^[ \\n\\r\\t]+|[ \\n\\r\\t]+$");

        <android.graphics.FontListParser: java.util.regex.Pattern FILENAME_WHITESPACE_PATTERN> = $r0;

        return;
    }

    public void <init>()
    {
        android.graphics.FontListParser r0;

        r0 := @this: android.graphics.FontListParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static android.text.FontConfig parse(java.io.InputStream) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        java.io.InputStream r0;
        android.text.FontConfig $r1;

        r0 := @parameter0: java.io.InputStream;

        $r1 = staticinvoke <android.graphics.FontListParser: android.text.FontConfig parse(java.io.InputStream,java.lang.String)>(r0, "/system/fonts");

        return $r1;
    }

    public static android.text.FontConfig parse(java.io.InputStream, java.lang.String) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        java.io.InputStream r0;
        org.xmlpull.v1.XmlPullParser r1;
        java.lang.Throwable $r2;
        java.lang.String r3;
        android.text.FontConfig r4;

        r0 := @parameter0: java.io.InputStream;

        r3 := @parameter1: java.lang.String;

     label1:
        r1 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

        interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>(r0, null);

        interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int nextTag()>();

        r4 = staticinvoke <android.graphics.FontListParser: android.text.FontConfig readFamilies(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, r3);

     label2:
        virtualinvoke r0.<java.io.InputStream: void close()>();

        return r4;

     label3:
        $r2 := @caughtexception;

        virtualinvoke r0.<java.io.InputStream: void close()>();

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static android.text.FontConfig$Alias readAlias(org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String r1, r2, r3;
        android.text.FontConfig$Alias $r4;
        int i0;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

        r2 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "to");

        r3 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "weight");

        if r3 != null goto label1;

        i0 = 400;

        goto label2;

     label1:
        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r3);

     label2:
        staticinvoke <android.graphics.FontListParser: void skip(org.xmlpull.v1.XmlPullParser)>(r0);

        $r4 = new android.text.FontConfig$Alias;

        specialinvoke $r4.<android.text.FontConfig$Alias: void <init>(java.lang.String,java.lang.String,int)>(r1, r2, i0);

        return $r4;
    }

    private static android.graphics.fonts.FontVariationAxis readAxis(org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String r1, r2;
        android.graphics.fonts.FontVariationAxis $r3;
        float $f0;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "tag");

        r2 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "stylevalue");

        staticinvoke <android.graphics.FontListParser: void skip(org.xmlpull.v1.XmlPullParser)>(r0);

        $r3 = new android.graphics.fonts.FontVariationAxis;

        $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>(r2);

        specialinvoke $r3.<android.graphics.fonts.FontVariationAxis: void <init>(java.lang.String,float)>(r1, $f0);

        return $r3;
    }

    private static android.text.FontConfig readFamilies(org.xmlpull.v1.XmlPullParser, java.lang.String) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String r1, r4;
        java.util.ArrayList $r5, $r6;
        android.text.FontConfig $r7;
        int $i0, $i1, $i2, $i3;
        android.text.FontConfig$Family[] $r8, $r10;
        java.lang.Object[] $r9, $r12;
        android.text.FontConfig$Alias[] $r11, $r13;
        boolean $z0, $z1;
        android.text.FontConfig$Alias $r14;
        android.text.FontConfig$Family $r15;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: java.lang.String;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: void require(int,java.lang.String,java.lang.String)>(2, null, "familyset");

     label1:
        $i3 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i3 == 3 goto label6;

        $i2 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

        if $i2 == 2 goto label2;

        goto label1;

     label2:
        r4 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("family");

        if $z0 == 0 goto label3;

        $r15 = staticinvoke <android.graphics.FontListParser: android.text.FontConfig$Family readFamily(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r0, r1);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r15);

        goto label5;

     label3:
        $z1 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("alias");

        if $z1 == 0 goto label4;

        $r14 = staticinvoke <android.graphics.FontListParser: android.text.FontConfig$Alias readAlias(org.xmlpull.v1.XmlPullParser)>(r0);

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r14);

        goto label5;

     label4:
        staticinvoke <android.graphics.FontListParser: void skip(org.xmlpull.v1.XmlPullParser)>(r0);

     label5:
        goto label1;

     label6:
        $r7 = new android.text.FontConfig;

        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        $r8 = newarray (android.text.FontConfig$Family)[$i0];

        $r9 = interfaceinvoke $r5.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r8);

        $r10 = (android.text.FontConfig$Family[]) $r9;

        $i1 = interfaceinvoke $r6.<java.util.List: int size()>();

        $r11 = newarray (android.text.FontConfig$Alias)[$i1];

        $r12 = interfaceinvoke $r6.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11);

        $r13 = (android.text.FontConfig$Alias[]) $r12;

        specialinvoke $r7.<android.text.FontConfig: void <init>(android.text.FontConfig$Family[],android.text.FontConfig$Alias[])>($r10, $r13);

        return $r7;
    }

    public static android.text.FontConfig$Family readFamily(org.xmlpull.v1.XmlPullParser, java.lang.String) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String r1, r2, r3, r4, $r7;
        java.util.ArrayList $r6;
        boolean $z0, $z1, $z2;
        int $i1, $i2, $i4;
        android.text.FontConfig$Font $r8;
        byte b3;
        android.text.FontConfig$Family $r9;
        android.text.FontConfig$Font[] $r10, $r12;
        java.lang.Object[] $r11;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: java.lang.String;

        r2 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

        r3 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>("", "lang");

        r4 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "variant");

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

     label1:
        $i2 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i2 == 3 goto label5;

        $i1 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

        if $i1 == 2 goto label2;

        goto label1;

     label2:
        $r7 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z2 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("font");

        if $z2 == 0 goto label3;

        $r8 = staticinvoke <android.graphics.FontListParser: android.text.FontConfig$Font readFont(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r0, r1);

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r8);

        goto label4;

     label3:
        staticinvoke <android.graphics.FontListParser: void skip(org.xmlpull.v1.XmlPullParser)>(r0);

     label4:
        goto label1;

     label5:
        b3 = 0;

        if r4 == null goto label7;

        $z0 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("compact");

        if $z0 == 0 goto label6;

        b3 = 1;

        goto label7;

     label6:
        b3 = 0;

        $z1 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("elegant");

        if $z1 == 0 goto label7;

        b3 = 2;

     label7:
        $r9 = new android.text.FontConfig$Family;

        $i4 = interfaceinvoke $r6.<java.util.List: int size()>();

        $r10 = newarray (android.text.FontConfig$Font)[$i4];

        $r11 = interfaceinvoke $r6.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10);

        $r12 = (android.text.FontConfig$Font[]) $r11;

        specialinvoke $r9.<android.text.FontConfig$Family: void <init>(java.lang.String,android.text.FontConfig$Font[],java.lang.String,int)>(r2, $r12, r3, b3);

        return $r9;
    }

    private static android.text.FontConfig$Font readFont(org.xmlpull.v1.XmlPullParser, java.lang.String) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        java.lang.String r0, $r2, $r3, $r11, $r15, $r17, r20, r22, r23, r25;
        boolean z0, $z1;
        java.util.ArrayList $r1;
        java.lang.StringBuilder $r4, $r7;
        java.util.regex.Pattern $r5;
        java.util.regex.Matcher $r6;
        android.text.FontConfig$Font $r10;
        int $i0, $i1, $i2, i3, i4, $i5;
        android.graphics.fonts.FontVariationAxis[] $r12, $r14;
        java.lang.Object[] $r13;
        android.graphics.fonts.FontVariationAxis $r16;
        org.xmlpull.v1.XmlPullParser r19;

        r19 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r0 := @parameter1: java.lang.String;

        r20 = interfaceinvoke r19.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "index");

        if r20 != null goto label01;

        i3 = 0;

        goto label02;

     label01:
        i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r20);

     label02:
        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r22 = interfaceinvoke r19.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "weight");

        if r22 != null goto label03;

        i4 = 400;

        goto label04;

     label03:
        i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r22);

     label04:
        $r2 = "italic";

        $r3 = interfaceinvoke r19.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "style");

        z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        r23 = interfaceinvoke r19.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "fallbackFor");

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

     label05:
        $i5 = interfaceinvoke r19.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i5 == 3 goto label10;

        $i1 = interfaceinvoke r19.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

        if $i1 != 4 goto label06;

        $r17 = interfaceinvoke r19.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

     label06:
        $i2 = interfaceinvoke r19.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

        if $i2 == 2 goto label07;

        goto label05;

     label07:
        $r15 = interfaceinvoke r19.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z1 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>("axis");

        if $z1 == 0 goto label08;

        $r16 = staticinvoke <android.graphics.FontListParser: android.graphics.fonts.FontVariationAxis readAxis(org.xmlpull.v1.XmlPullParser)>(r19);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r16);

        goto label09;

     label08:
        staticinvoke <android.graphics.FontListParser: void skip(org.xmlpull.v1.XmlPullParser)>(r19);

     label09:
        goto label05;

     label10:
        $r5 = <android.graphics.FontListParser: java.util.regex.Pattern FILENAME_WHITESPACE_PATTERN>;

        $r6 = virtualinvoke $r5.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r4);

        r25 = virtualinvoke $r6.<java.util.regex.Matcher: java.lang.String replaceAll(java.lang.String)>("");

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r25);

        $r10 = new android.text.FontConfig$Font;

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $r12 = newarray (android.graphics.fonts.FontVariationAxis)[$i0];

        $r13 = interfaceinvoke $r1.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r12);

        $r14 = (android.graphics.fonts.FontVariationAxis[]) $r13;

        specialinvoke $r10.<android.text.FontConfig$Font: void <init>(java.lang.String,int,android.graphics.fonts.FontVariationAxis[],int,boolean,java.lang.String)>($r11, i3, $r14, i4, z0, r23);

        return $r10;
    }

    public static void skip(org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser r0;
        int i0, i1;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        i1 = 1;

     label1:
        if i1 <= 0 goto label5;

        i0 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i0 == 2 goto label3;

        if i0 == 3 goto label2;

        goto label4;

     label2:
        i1 = i1 + -1;

        goto label4;

     label3:
        i1 = i1 + 1;

     label4:
        goto label1;

     label5:
        return;
    }
}
