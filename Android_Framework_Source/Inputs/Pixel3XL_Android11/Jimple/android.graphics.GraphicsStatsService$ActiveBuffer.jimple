final class android.graphics.GraphicsStatsService$ActiveBuffer extends java.lang.Object implements android.os.IBinder$DeathRecipient
{
    final android.view.IGraphicsStatsCallback mCallback;
    final android.graphics.GraphicsStatsService$BufferInfo mInfo;
    java.nio.ByteBuffer mMapping;
    final int mPid;
    android.os.SharedMemory mProcessBuffer;
    final android.os.IBinder mToken;
    final int mUid;
    final android.graphics.GraphicsStatsService this$0;

    void <init>(android.graphics.GraphicsStatsService, android.view.IGraphicsStatsCallback, int, int, java.lang.String, long) throws android.os.RemoteException, java.io.IOException
    {
        android.graphics.GraphicsStatsService$ActiveBuffer r0;
        android.graphics.GraphicsStatsService r1;
        int i0, i1, $i4, $i5;
        java.lang.String r2, $r6;
        long l2, $l3;
        java.nio.ByteBuffer $r7, $r8, $r10;
        byte[] $r11;
        java.lang.Throwable $r13;
        android.view.IGraphicsStatsCallback r15;
        android.os.IBinder r16;
        android.os.SharedMemory r18;
        android.graphics.GraphicsStatsService$BufferInfo r20;
        java.lang.StringBuilder r21;
        android.system.ErrnoException r22;

        r0 := @this: android.graphics.GraphicsStatsService$ActiveBuffer;

        r1 := @parameter0: android.graphics.GraphicsStatsService;

        r15 := @parameter1: android.view.IGraphicsStatsCallback;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r2 := @parameter4: java.lang.String;

        l2 := @parameter5: long;

        r0.<android.graphics.GraphicsStatsService$ActiveBuffer: android.graphics.GraphicsStatsService this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r20 = new android.graphics.GraphicsStatsService$BufferInfo;

        $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        specialinvoke r20.<android.graphics.GraphicsStatsService$BufferInfo: void <init>(android.graphics.GraphicsStatsService,java.lang.String,long,long)>(r1, r2, l2, $l3);

        r0.<android.graphics.GraphicsStatsService$ActiveBuffer: android.graphics.GraphicsStatsService$BufferInfo mInfo> = r20;

        r0.<android.graphics.GraphicsStatsService$ActiveBuffer: int mUid> = i0;

        r0.<android.graphics.GraphicsStatsService$ActiveBuffer: int mPid> = i1;

        r0.<android.graphics.GraphicsStatsService$ActiveBuffer: android.view.IGraphicsStatsCallback mCallback> = r15;

        r16 = interfaceinvoke r15.<android.view.IGraphicsStatsCallback: android.os.IBinder asBinder()>();

        r0.<android.graphics.GraphicsStatsService$ActiveBuffer: android.os.IBinder mToken> = r16;

        interfaceinvoke r16.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>(r0, 0);

     label1:
        r21 = new java.lang.StringBuilder;

        specialinvoke r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GFXStats-");

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r6 = virtualinvoke r21.<java.lang.StringBuilder: java.lang.String toString()>();

        $i4 = staticinvoke <android.graphics.GraphicsStatsService: int access$200(android.graphics.GraphicsStatsService)>(r1);

        r18 = staticinvoke <android.os.SharedMemory: android.os.SharedMemory create(java.lang.String,int)>($r6, $i4);

        r0.<android.graphics.GraphicsStatsService$ActiveBuffer: android.os.SharedMemory mProcessBuffer> = r18;

        $r7 = virtualinvoke r18.<android.os.SharedMemory: java.nio.ByteBuffer mapReadWrite()>();

        r0.<android.graphics.GraphicsStatsService$ActiveBuffer: java.nio.ByteBuffer mMapping> = $r7;

     label2:
        goto label4;

     label3:
        $r13 := @caughtexception;

        r22 = (android.system.ErrnoException) $r13;

        virtualinvoke r22.<android.system.ErrnoException: java.io.IOException rethrowAsIOException()>();

     label4:
        $r8 = r0.<android.graphics.GraphicsStatsService$ActiveBuffer: java.nio.ByteBuffer mMapping>;

        virtualinvoke $r8.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(0);

        $r10 = r0.<android.graphics.GraphicsStatsService$ActiveBuffer: java.nio.ByteBuffer mMapping>;

        $r11 = staticinvoke <android.graphics.GraphicsStatsService: byte[] access$300(android.graphics.GraphicsStatsService)>(r1);

        $i5 = staticinvoke <android.graphics.GraphicsStatsService: int access$200(android.graphics.GraphicsStatsService)>(r1);

        virtualinvoke $r10.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[],int,int)>($r11, 0, $i5);

        return;

        catch android.system.ErrnoException from label1 to label2 with label3;
    }

    public void binderDied()
    {
        android.graphics.GraphicsStatsService$ActiveBuffer r0;
        android.os.IBinder $r1;
        android.graphics.GraphicsStatsService $r2;

        r0 := @this: android.graphics.GraphicsStatsService$ActiveBuffer;

        $r1 = r0.<android.graphics.GraphicsStatsService$ActiveBuffer: android.os.IBinder mToken>;

        interfaceinvoke $r1.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>(r0, 0);

        $r2 = r0.<android.graphics.GraphicsStatsService$ActiveBuffer: android.graphics.GraphicsStatsService this$0>;

        staticinvoke <android.graphics.GraphicsStatsService: void access$400(android.graphics.GraphicsStatsService,android.graphics.GraphicsStatsService$ActiveBuffer)>($r2, r0);

        return;
    }

    void closeAllBuffers()
    {
        android.graphics.GraphicsStatsService$ActiveBuffer r0;
        java.nio.ByteBuffer r1;
        android.os.SharedMemory r2;

        r0 := @this: android.graphics.GraphicsStatsService$ActiveBuffer;

        r1 = r0.<android.graphics.GraphicsStatsService$ActiveBuffer: java.nio.ByteBuffer mMapping>;

        if r1 == null goto label1;

        staticinvoke <android.os.SharedMemory: void unmap(java.nio.ByteBuffer)>(r1);

        r0.<android.graphics.GraphicsStatsService$ActiveBuffer: java.nio.ByteBuffer mMapping> = null;

     label1:
        r2 = r0.<android.graphics.GraphicsStatsService$ActiveBuffer: android.os.SharedMemory mProcessBuffer>;

        if r2 == null goto label2;

        virtualinvoke r2.<android.os.SharedMemory: void close()>();

        r0.<android.graphics.GraphicsStatsService$ActiveBuffer: android.os.SharedMemory mProcessBuffer> = null;

     label2:
        return;
    }

    android.os.ParcelFileDescriptor getPfd()
    {
        android.graphics.GraphicsStatsService$ActiveBuffer r0;
        android.os.SharedMemory $r1;
        java.lang.Throwable $r2;
        java.lang.IllegalStateException $r3;
        android.os.ParcelFileDescriptor r4;

        r0 := @this: android.graphics.GraphicsStatsService$ActiveBuffer;

     label1:
        $r1 = r0.<android.graphics.GraphicsStatsService$ActiveBuffer: android.os.SharedMemory mProcessBuffer>;

        r4 = virtualinvoke $r1.<android.os.SharedMemory: android.os.ParcelFileDescriptor getFdDup()>();

     label2:
        return r4;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>("Failed to get PFD from memory file", $r2);

        throw $r3;

        catch java.io.IOException from label1 to label2 with label3;
    }

    void readBytes(byte[], int) throws java.io.IOException
    {
        android.graphics.GraphicsStatsService$ActiveBuffer r0;
        byte[] r1;
        int i0;
        java.nio.ByteBuffer r2, $r5;
        java.io.IOException $r3;

        r0 := @this: android.graphics.GraphicsStatsService$ActiveBuffer;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        r2 = r0.<android.graphics.GraphicsStatsService$ActiveBuffer: java.nio.ByteBuffer mMapping>;

        if r2 == null goto label1;

        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(0);

        $r5 = r0.<android.graphics.GraphicsStatsService$ActiveBuffer: java.nio.ByteBuffer mMapping>;

        virtualinvoke $r5.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[],int,int)>(r1, 0, i0);

        return;

     label1:
        $r3 = new java.io.IOException;

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>("SharedMemory has been deactivated");

        throw $r3;
    }
}
