public class android.graphics.GraphicsStatsService extends android.view.IGraphicsStats$Stub
{
    private static final int AID_STATSD;
    private static final int DELETE_OLD;
    public static final java.lang.String GRAPHICS_STATS_SERVICE;
    private static final int SAVE_BUFFER;
    private static final java.lang.String TAG;
    private java.util.ArrayList mActive;
    private final android.app.AlarmManager mAlarmManager;
    private final android.app.AppOpsManager mAppOps;
    private final int mAshmemSize;
    private final android.content.Context mContext;
    private final java.lang.Object mFileAccessLock;
    private java.io.File mGraphicsStatsDir;
    private final java.lang.Object mLock;
    private boolean mRotateIsScheduled;
    private android.os.Handler mWriteOutHandler;
    private final byte[] mZeroData;

    public void <init>(android.content.Context)
    {
        android.graphics.GraphicsStatsService r0;
        int i0;
        byte[] $r1;
        java.lang.Object $r2, $r4, $r5, $r7;
        java.util.ArrayList $r3;
        android.app.AppOpsManager $r6;
        android.app.AlarmManager $r8;
        java.io.File $r9, $r10, $r11, $r12, $r15;
        boolean $z1;
        java.lang.StringBuilder $r13;
        java.lang.String $r16, $r19;
        java.lang.IllegalStateException $r18;
        android.os.HandlerThread $r20;
        android.os.Handler $r21;
        android.os.Looper $r22;
        android.graphics.GraphicsStatsService$1 $r23;
        android.content.Context r24;

        r0 := @this: android.graphics.GraphicsStatsService;

        r24 := @parameter0: android.content.Context;

        specialinvoke r0.<android.view.IGraphicsStats$Stub: void <init>()>();

        i0 = staticinvoke <android.graphics.GraphicsStatsService: int nGetAshmemSize()>();

        r0.<android.graphics.GraphicsStatsService: int mAshmemSize> = i0;

        $r1 = newarray (byte)[i0];

        r0.<android.graphics.GraphicsStatsService: byte[] mZeroData> = $r1;

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<android.graphics.GraphicsStatsService: java.lang.Object mLock> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<android.graphics.GraphicsStatsService: java.util.ArrayList mActive> = $r3;

        $r4 = new java.lang.Object;

        specialinvoke $r4.<java.lang.Object: void <init>()>();

        r0.<android.graphics.GraphicsStatsService: java.lang.Object mFileAccessLock> = $r4;

        r0.<android.graphics.GraphicsStatsService: boolean mRotateIsScheduled> = 0;

        r0.<android.graphics.GraphicsStatsService: android.content.Context mContext> = r24;

        $r5 = virtualinvoke r24.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/app/AppOpsManager;");

        $r6 = (android.app.AppOpsManager) $r5;

        r0.<android.graphics.GraphicsStatsService: android.app.AppOpsManager mAppOps> = $r6;

        $r7 = virtualinvoke r24.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/app/AlarmManager;");

        $r8 = (android.app.AlarmManager) $r7;

        r0.<android.graphics.GraphicsStatsService: android.app.AlarmManager mAlarmManager> = $r8;

        $r9 = new java.io.File;

        $r10 = new java.io.File;

        $r11 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        specialinvoke $r10.<java.io.File: void <init>(java.io.File,java.lang.String)>($r11, "system");

        specialinvoke $r9.<java.io.File: void <init>(java.io.File,java.lang.String)>($r10, "graphicsstats");

        r0.<android.graphics.GraphicsStatsService: java.io.File mGraphicsStatsDir> = $r9;

        virtualinvoke $r9.<java.io.File: boolean mkdirs()>();

        $r12 = r0.<android.graphics.GraphicsStatsService: java.io.File mGraphicsStatsDir>;

        $z1 = virtualinvoke $r12.<java.io.File: boolean exists()>();

        if $z1 == 0 goto label1;

        $r20 = new android.os.HandlerThread;

        specialinvoke $r20.<android.os.HandlerThread: void <init>(java.lang.String,int)>("GraphicsStats-disk", 10);

        virtualinvoke $r20.<android.os.HandlerThread: void start()>();

        $r21 = new android.os.Handler;

        $r22 = virtualinvoke $r20.<android.os.HandlerThread: android.os.Looper getLooper()>();

        $r23 = new android.graphics.GraphicsStatsService$1;

        specialinvoke $r23.<android.graphics.GraphicsStatsService$1: void <init>(android.graphics.GraphicsStatsService)>(r0);

        specialinvoke $r21.<android.os.Handler: void <init>(android.os.Looper,android.os.Handler$Callback)>($r22, $r23);

        r0.<android.graphics.GraphicsStatsService: android.os.Handler mWriteOutHandler> = $r21;

        specialinvoke r0.<android.graphics.GraphicsStatsService: void nativeInit()>();

        return;

     label1:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Graphics stats directory does not exist: ");

        $r15 = r0.<android.graphics.GraphicsStatsService: java.io.File mGraphicsStatsDir>;

        $r16 = virtualinvoke $r15.<java.io.File: java.lang.String getAbsolutePath()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = new java.lang.IllegalStateException;

        $r19 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r19);

        throw $r18;
    }

    static void access$000(android.graphics.GraphicsStatsService, android.graphics.GraphicsStatsService$HistoricalBuffer)
    {
        android.graphics.GraphicsStatsService r0;
        android.graphics.GraphicsStatsService$HistoricalBuffer r1;

        r0 := @parameter0: android.graphics.GraphicsStatsService;

        r1 := @parameter1: android.graphics.GraphicsStatsService$HistoricalBuffer;

        specialinvoke r0.<android.graphics.GraphicsStatsService: void saveBuffer(android.graphics.GraphicsStatsService$HistoricalBuffer)>(r1);

        return;
    }

    static void access$100(android.graphics.GraphicsStatsService)
    {
        android.graphics.GraphicsStatsService r0;

        r0 := @parameter0: android.graphics.GraphicsStatsService;

        specialinvoke r0.<android.graphics.GraphicsStatsService: void deleteOldBuffers()>();

        return;
    }

    static int access$200(android.graphics.GraphicsStatsService)
    {
        android.graphics.GraphicsStatsService r0;
        int $i0;

        r0 := @parameter0: android.graphics.GraphicsStatsService;

        $i0 = r0.<android.graphics.GraphicsStatsService: int mAshmemSize>;

        return $i0;
    }

    static byte[] access$300(android.graphics.GraphicsStatsService)
    {
        android.graphics.GraphicsStatsService r0;
        byte[] $r1;

        r0 := @parameter0: android.graphics.GraphicsStatsService;

        $r1 = r0.<android.graphics.GraphicsStatsService: byte[] mZeroData>;

        return $r1;
    }

    static void access$400(android.graphics.GraphicsStatsService, android.graphics.GraphicsStatsService$ActiveBuffer)
    {
        android.graphics.GraphicsStatsService r0;
        android.graphics.GraphicsStatsService$ActiveBuffer r1;

        r0 := @parameter0: android.graphics.GraphicsStatsService;

        r1 := @parameter1: android.graphics.GraphicsStatsService$ActiveBuffer;

        specialinvoke r0.<android.graphics.GraphicsStatsService: void processDied(android.graphics.GraphicsStatsService$ActiveBuffer)>(r1);

        return;
    }

    private void addToSaveQueue(android.graphics.GraphicsStatsService$ActiveBuffer)
    {
        android.graphics.GraphicsStatsService r0;
        android.graphics.GraphicsStatsService$ActiveBuffer r1;
        android.os.Handler $r3;
        android.os.Message $r4;
        java.lang.Throwable $r5;
        java.lang.StringBuilder $r6;
        android.graphics.GraphicsStatsService$BufferInfo $r8;
        java.lang.String $r9, $r11;
        android.graphics.GraphicsStatsService$HistoricalBuffer r12;

        r0 := @this: android.graphics.GraphicsStatsService;

        r1 := @parameter0: android.graphics.GraphicsStatsService$ActiveBuffer;

     label1:
        r12 = new android.graphics.GraphicsStatsService$HistoricalBuffer;

        specialinvoke r12.<android.graphics.GraphicsStatsService$HistoricalBuffer: void <init>(android.graphics.GraphicsStatsService,android.graphics.GraphicsStatsService$ActiveBuffer)>(r0, r1);

        $r3 = r0.<android.graphics.GraphicsStatsService: android.os.Handler mWriteOutHandler>;

        $r4 = staticinvoke <android.os.Message: android.os.Message obtain(android.os.Handler,int,java.lang.Object)>($r3, 1, r12);

        virtualinvoke $r4.<android.os.Message: void sendToTarget()>();

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to copy graphicsstats from ");

        $r8 = r1.<android.graphics.GraphicsStatsService$ActiveBuffer: android.graphics.GraphicsStatsService$BufferInfo mInfo>;

        $r9 = $r8.<android.graphics.GraphicsStatsService$BufferInfo: java.lang.String mPackageName>;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("GraphicsStatsService", $r11, $r5);

     label4:
        virtualinvoke r1.<android.graphics.GraphicsStatsService$ActiveBuffer: void closeAllBuffers()>();

        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private void deleteOldBuffers()
    {
        android.graphics.GraphicsStatsService r0;
        java.lang.Object r1;
        java.io.File[] r2;
        int i0, $i1, $i2, $i3, $i4, $i5, i8, i9;
        java.io.File $r3, $r4, $r6, r12;
        long $l6, $l7;
        java.lang.String $r5, $r7;
        java.lang.Throwable $r8, $r9;
        long[] r10;

        r0 := @this: android.graphics.GraphicsStatsService;

        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(524288L, "deleting old graphicsstats buffers");

        r1 = r0.<android.graphics.GraphicsStatsService: java.lang.Object mFileAccessLock>;

        entermonitor r1;

     label01:
        $r3 = r0.<android.graphics.GraphicsStatsService: java.io.File mGraphicsStatsDir>;

        r2 = virtualinvoke $r3.<java.io.File: java.io.File[] listFiles()>();

     label02:
        if r2 == null goto label21;

     label03:
        $i1 = lengthof r2;

        if $i1 > 3 goto label05;

     label04:
        goto label21;

     label05:
        $i2 = lengthof r2;

        r10 = newarray (long)[$i2];

     label06:
        i8 = 0;

     label07:
        i0 = lengthof r2;

     label08:
        if i8 >= i0 goto label13;

     label09:
        $r6 = r2[i8];

        $r7 = virtualinvoke $r6.<java.io.File: java.lang.String getName()>();

        $l7 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r7);

        r10[i8] = $l7;

     label10:
        goto label12;

     label11:
        $r8 := @caughtexception;

     label12:
        i8 = i8 + 1;

        goto label07;

     label13:
        $i3 = lengthof r10;

        if $i3 > 3 goto label15;

        exitmonitor r1;

     label14:
        return;

     label15:
        staticinvoke <java.util.Arrays: void sort(long[])>(r10);

     label16:
        i9 = 0;

     label17:
        $i4 = lengthof r10;

        $i5 = $i4 - 3;

        if i9 >= $i5 goto label19;

        r12 = new java.io.File;

        $r4 = r0.<android.graphics.GraphicsStatsService: java.io.File mGraphicsStatsDir>;

        $l6 = r10[i9];

        $r5 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l6);

        specialinvoke r12.<java.io.File: void <init>(java.io.File,java.lang.String)>($r4, $r5);

        specialinvoke r0.<android.graphics.GraphicsStatsService: void deleteRecursiveLocked(java.io.File)>(r12);

     label18:
        i9 = i9 + 1;

        goto label17;

     label19:
        exitmonitor r1;

     label20:
        staticinvoke <android.os.Trace: void traceEnd(long)>(524288L);

        return;

     label21:
        exitmonitor r1;

     label22:
        return;

     label23:
        $r9 := @caughtexception;

     label24:
        exitmonitor r1;

     label25:
        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label23;
        catch java.lang.Throwable from label03 to label04 with label23;
        catch java.lang.Throwable from label05 to label06 with label23;
        catch java.lang.Throwable from label07 to label08 with label23;
        catch java.lang.NumberFormatException from label09 to label10 with label11;
        catch java.lang.Throwable from label09 to label10 with label23;
        catch java.lang.Throwable from label13 to label14 with label23;
        catch java.lang.Throwable from label15 to label16 with label23;
        catch java.lang.Throwable from label17 to label18 with label23;
        catch java.lang.Throwable from label19 to label20 with label23;
        catch java.lang.Throwable from label21 to label22 with label23;
        catch java.lang.Throwable from label24 to label25 with label23;
    }

    private void deleteRecursiveLocked(java.io.File)
    {
        android.graphics.GraphicsStatsService r0;
        java.io.File r1, $r8;
        int i0, i2;
        boolean $z0, $z1;
        java.lang.StringBuilder $r2;
        java.lang.String $r4, $r7;
        java.io.File[] r9;

        r0 := @this: android.graphics.GraphicsStatsService;

        r1 := @parameter0: java.io.File;

        $z0 = virtualinvoke r1.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label2;

        r9 = virtualinvoke r1.<java.io.File: java.io.File[] listFiles()>();

        i0 = lengthof r9;

        i2 = 0;

     label1:
        if i2 >= i0 goto label2;

        $r8 = r9[i2];

        specialinvoke r0.<android.graphics.GraphicsStatsService: void deleteRecursiveLocked(java.io.File)>($r8);

        i2 = i2 + 1;

        goto label1;

     label2:
        $z1 = virtualinvoke r1.<java.io.File: boolean delete()>();

        if $z1 != 0 goto label3;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to delete \'");

        $r4 = virtualinvoke r1.<java.io.File: java.lang.String getAbsolutePath()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'!");

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("GraphicsStatsService", $r7);

     label3:
        return;
    }

    private java.util.HashSet dumpActiveLocked(long, java.util.ArrayList)
    {
        android.graphics.GraphicsStatsService r0;
        long l0, $l3, $l4, $l5;
        java.util.ArrayList r1;
        android.graphics.GraphicsStatsService$HistoricalBuffer r3;
        java.io.File r4;
        java.util.HashSet $r5;
        int $i1, $i2, i6;
        java.lang.Object $r6;
        android.graphics.GraphicsStatsService$BufferInfo $r7, $r9, $r10, $r11, $r12;
        java.lang.String $r8, $r14;
        byte[] $r13;

        r0 := @this: android.graphics.GraphicsStatsService;

        l0 := @parameter0: long;

        r1 := @parameter1: java.util.ArrayList;

        $r5 = new java.util.HashSet;

        $i1 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        specialinvoke $r5.<java.util.HashSet: void <init>(int)>($i1);

        i6 = 0;

     label1:
        $i2 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if i6 >= $i2 goto label2;

        $r6 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i6);

        r3 = (android.graphics.GraphicsStatsService$HistoricalBuffer) $r6;

        $r7 = r3.<android.graphics.GraphicsStatsService$HistoricalBuffer: android.graphics.GraphicsStatsService$BufferInfo mInfo>;

        r4 = specialinvoke r0.<android.graphics.GraphicsStatsService: java.io.File pathForApp(android.graphics.GraphicsStatsService$BufferInfo)>($r7);

        virtualinvoke $r5.<java.util.HashSet: boolean add(java.lang.Object)>(r4);

        $r8 = virtualinvoke r4.<java.io.File: java.lang.String getAbsolutePath()>();

        $r9 = r3.<android.graphics.GraphicsStatsService$HistoricalBuffer: android.graphics.GraphicsStatsService$BufferInfo mInfo>;

        $r14 = $r9.<android.graphics.GraphicsStatsService$BufferInfo: java.lang.String mPackageName>;

        $r10 = r3.<android.graphics.GraphicsStatsService$HistoricalBuffer: android.graphics.GraphicsStatsService$BufferInfo mInfo>;

        $l5 = $r10.<android.graphics.GraphicsStatsService$BufferInfo: long mVersionCode>;

        $r11 = r3.<android.graphics.GraphicsStatsService$HistoricalBuffer: android.graphics.GraphicsStatsService$BufferInfo mInfo>;

        $l4 = $r11.<android.graphics.GraphicsStatsService$BufferInfo: long mStartTime>;

        $r12 = r3.<android.graphics.GraphicsStatsService$HistoricalBuffer: android.graphics.GraphicsStatsService$BufferInfo mInfo>;

        $l3 = $r12.<android.graphics.GraphicsStatsService$BufferInfo: long mEndTime>;

        $r13 = r3.<android.graphics.GraphicsStatsService$HistoricalBuffer: byte[] mData>;

        staticinvoke <android.graphics.GraphicsStatsService: void nAddToDump(long,java.lang.String,java.lang.String,long,long,long,byte[])>(l0, $r8, $r14, $l5, $l4, $l3, $r13);

        i6 = i6 + 1;

        goto label1;

     label2:
        return $r5;
    }

    private void dumpHistoricalLocked(long, java.util.HashSet)
    {
        android.graphics.GraphicsStatsService r0;
        long l0;
        java.util.HashSet r1;
        java.io.File[] r2, r3, r4;
        int i1, i2, i3, i4, i5, i6;
        java.io.File $r6, $r7, $r8, $r9, $r10;
        boolean $z0;
        java.lang.String $r11;

        r0 := @this: android.graphics.GraphicsStatsService;

        l0 := @parameter0: long;

        r1 := @parameter1: java.util.HashSet;

        $r6 = r0.<android.graphics.GraphicsStatsService: java.io.File mGraphicsStatsDir>;

        r2 = virtualinvoke $r6.<java.io.File: java.io.File[] listFiles()>();

        i1 = lengthof r2;

        i4 = 0;

     label1:
        if i4 >= i1 goto label8;

        $r7 = r2[i4];

        r3 = virtualinvoke $r7.<java.io.File: java.io.File[] listFiles()>();

        i2 = lengthof r3;

        i5 = 0;

     label2:
        if i5 >= i2 goto label7;

        $r8 = r3[i5];

        r4 = virtualinvoke $r8.<java.io.File: java.io.File[] listFiles()>();

        i3 = lengthof r4;

        i6 = 0;

     label3:
        if i6 >= i3 goto label6;

        $r9 = new java.io.File;

        $r10 = r4[i6];

        specialinvoke $r9.<java.io.File: void <init>(java.io.File,java.lang.String)>($r10, "total");

        $z0 = virtualinvoke r1.<java.util.HashSet: boolean contains(java.lang.Object)>($r9);

        if $z0 == 0 goto label4;

        goto label5;

     label4:
        $r11 = virtualinvoke $r9.<java.io.File: java.lang.String getAbsolutePath()>();

        staticinvoke <android.graphics.GraphicsStatsService: void nAddToDump(long,java.lang.String)>(l0, $r11);

     label5:
        i6 = i6 + 1;

        goto label3;

     label6:
        i5 = i5 + 1;

        goto label2;

     label7:
        i4 = i4 + 1;

        goto label1;

     label8:
        return;
    }

    private android.graphics.GraphicsStatsService$ActiveBuffer fetchActiveBuffersLocked(android.view.IGraphicsStatsCallback, int, int, java.lang.String, long) throws android.os.RemoteException
    {
        android.graphics.GraphicsStatsService r0;
        int i0, i1, i3, $i6, $i7, i10;
        java.lang.String r1;
        long l2, l4, $l5, $l8;
        java.util.ArrayList $r2, $r4, $r5;
        java.util.Calendar $r3;
        java.lang.Object $r6;
        android.graphics.GraphicsStatsService$BufferInfo $r7;
        byte $b9;
        java.lang.Throwable $r8;
        android.os.RemoteException $r9;
        android.view.IGraphicsStatsCallback r10;
        android.graphics.GraphicsStatsService$ActiveBuffer r11, r12;

        r0 := @this: android.graphics.GraphicsStatsService;

        r10 := @parameter0: android.view.IGraphicsStatsCallback;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: java.lang.String;

        l2 := @parameter4: long;

        $r2 = r0.<android.graphics.GraphicsStatsService: java.util.ArrayList mActive>;

        i3 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        $l5 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r3 = specialinvoke r0.<android.graphics.GraphicsStatsService: java.util.Calendar normalizeDate(long)>($l5);

        l4 = virtualinvoke $r3.<java.util.Calendar: long getTimeInMillis()>();

        i10 = 0;

     label1:
        if i10 >= i3 goto label4;

        $r5 = r0.<android.graphics.GraphicsStatsService: java.util.ArrayList mActive>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i10);

        r11 = (android.graphics.GraphicsStatsService$ActiveBuffer) $r6;

        $i6 = r11.<android.graphics.GraphicsStatsService$ActiveBuffer: int mPid>;

        if $i6 != i1 goto label3;

        $i7 = r11.<android.graphics.GraphicsStatsService$ActiveBuffer: int mUid>;

        if $i7 != i0 goto label3;

        $r7 = r11.<android.graphics.GraphicsStatsService$ActiveBuffer: android.graphics.GraphicsStatsService$BufferInfo mInfo>;

        $l8 = $r7.<android.graphics.GraphicsStatsService$BufferInfo: long mStartTime>;

        $b9 = $l8 cmp l4;

        if $b9 >= 0 goto label2;

        virtualinvoke r11.<android.graphics.GraphicsStatsService$ActiveBuffer: void binderDied()>();

        goto label4;

     label2:
        return r11;

     label3:
        i10 = i10 + 1;

        goto label1;

     label4:
        r12 = new android.graphics.GraphicsStatsService$ActiveBuffer;

        specialinvoke r12.<android.graphics.GraphicsStatsService$ActiveBuffer: void <init>(android.graphics.GraphicsStatsService,android.view.IGraphicsStatsCallback,int,int,java.lang.String,long)>(r0, r10, i0, i1, r1, l2);

        $r4 = r0.<android.graphics.GraphicsStatsService: java.util.ArrayList mActive>;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r12);

     label5:
        return r12;

     label6:
        $r8 := @caughtexception;

        $r9 = new android.os.RemoteException;

        specialinvoke $r9.<android.os.RemoteException: void <init>(java.lang.String)>("Failed to allocate space");

        throw $r9;

        catch java.io.IOException from label4 to label5 with label6;
    }

    public static void lambda$an-DvOX2nWltnD5OBOre5S9EpXs(android.graphics.GraphicsStatsService)
    {
        android.graphics.GraphicsStatsService r0;

        r0 := @parameter0: android.graphics.GraphicsStatsService;

        specialinvoke r0.<android.graphics.GraphicsStatsService: void onAlarm()>();

        return;
    }

    private static native void nAddToDump(long, java.lang.String);

    private static native void nAddToDump(long, java.lang.String, java.lang.String, long, long, long, byte[]);

    private static native long nCreateDump(int, boolean);

    private static native void nFinishDump(long);

    private static native void nFinishDumpInMemory(long, long, boolean);

    private static native int nGetAshmemSize();

    private static native void nSaveBuffer(java.lang.String, java.lang.String, long, long, long, byte[]);

    private static native void nativeDestructor();

    private native void nativeInit();

    private java.util.Calendar normalizeDate(long)
    {
        android.graphics.GraphicsStatsService r0;
        long l0;
        java.util.Calendar r1;
        java.util.TimeZone $r2;

        r0 := @this: android.graphics.GraphicsStatsService;

        l0 := @parameter0: long;

        $r2 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("UTC");

        r1 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone)>($r2);

        virtualinvoke r1.<java.util.Calendar: void setTimeInMillis(long)>(l0);

        virtualinvoke r1.<java.util.Calendar: void set(int,int)>(11, 0);

        virtualinvoke r1.<java.util.Calendar: void set(int,int)>(12, 0);

        virtualinvoke r1.<java.util.Calendar: void set(int,int)>(13, 0);

        virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 0);

        return r1;
    }

    private void onAlarm()
    {
        android.graphics.GraphicsStatsService r0;
        int i0, $i1, i3;
        android.graphics.GraphicsStatsService$ActiveBuffer r1;
        android.graphics.GraphicsStatsService$ActiveBuffer[] $r2, r15;
        java.util.ArrayList $r3;
        java.lang.Object[] $r4, $r8;
        android.os.Handler $r5;
        android.view.IGraphicsStatsCallback $r6;
        android.os.RemoteException $r7;
        android.graphics.GraphicsStatsService$BufferInfo $r9;
        java.lang.String $r10, $r12;
        java.lang.Integer $r11;
        java.lang.Throwable $r13;
        java.lang.Object r14;

        r0 := @this: android.graphics.GraphicsStatsService;

        r14 = r0.<android.graphics.GraphicsStatsService: java.lang.Object mLock>;

        entermonitor r14;

     label01:
        r0.<android.graphics.GraphicsStatsService: boolean mRotateIsScheduled> = 0;

        specialinvoke r0.<android.graphics.GraphicsStatsService: void scheduleRotateLocked()>();

        $r3 = r0.<android.graphics.GraphicsStatsService: java.util.ArrayList mActive>;

        $r2 = newarray (android.graphics.GraphicsStatsService$ActiveBuffer)[0];

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r2);

        r15 = (android.graphics.GraphicsStatsService$ActiveBuffer[]) $r4;

        exitmonitor r14;

     label02:
        i0 = lengthof r15;

        i3 = 0;

     label03:
        if i3 >= i0 goto label08;

        r1 = r15[i3];

     label04:
        $r6 = r1.<android.graphics.GraphicsStatsService$ActiveBuffer: android.view.IGraphicsStatsCallback mCallback>;

        interfaceinvoke $r6.<android.view.IGraphicsStatsCallback: void onRotateGraphicsStatsBuffer()>();

     label05:
        goto label07;

     label06:
        $r7 := @caughtexception;

        $r8 = newarray (java.lang.Object)[2];

        $r9 = r1.<android.graphics.GraphicsStatsService$ActiveBuffer: android.graphics.GraphicsStatsService$BufferInfo mInfo>;

        $r10 = $r9.<android.graphics.GraphicsStatsService$BufferInfo: java.lang.String mPackageName>;

        $r8[0] = $r10;

        $i1 = r1.<android.graphics.GraphicsStatsService$ActiveBuffer: int mPid>;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r8[1] = $r11;

        $r12 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Failed to notify \'%s\' (pid=%d) to rotate buffers", $r8);

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("GraphicsStatsService", $r12, $r7);

     label07:
        i3 = i3 + 1;

        goto label03;

     label08:
        $r5 = r0.<android.graphics.GraphicsStatsService: android.os.Handler mWriteOutHandler>;

        virtualinvoke $r5.<android.os.Handler: boolean sendEmptyMessageDelayed(int,long)>(2, 10000L);

        return;

     label09:
        $r13 := @caughtexception;

     label10:
        exitmonitor r14;

     label11:
        throw $r13;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch android.os.RemoteException from label04 to label05 with label06;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    private java.io.File pathForApp(android.graphics.GraphicsStatsService$BufferInfo)
    {
        android.graphics.GraphicsStatsService r0;
        java.lang.Object[] $r1;
        long $l0, $l1, $l2;
        java.util.Calendar $r2;
        java.lang.Long $r3, $r5;
        java.lang.String $r4, r9;
        java.io.File $r6, $r7;
        android.graphics.GraphicsStatsService$BufferInfo r8;

        r0 := @this: android.graphics.GraphicsStatsService;

        r8 := @parameter0: android.graphics.GraphicsStatsService$BufferInfo;

        $r1 = newarray (java.lang.Object)[3];

        $l0 = r8.<android.graphics.GraphicsStatsService$BufferInfo: long mStartTime>;

        $r2 = specialinvoke r0.<android.graphics.GraphicsStatsService: java.util.Calendar normalizeDate(long)>($l0);

        $l1 = virtualinvoke $r2.<java.util.Calendar: long getTimeInMillis()>();

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r1[0] = $r3;

        $r4 = r8.<android.graphics.GraphicsStatsService$BufferInfo: java.lang.String mPackageName>;

        $r1[1] = $r4;

        $l2 = r8.<android.graphics.GraphicsStatsService$BufferInfo: long mVersionCode>;

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r1[2] = $r5;

        r9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%d/%s/%d/total", $r1);

        $r6 = new java.io.File;

        $r7 = r0.<android.graphics.GraphicsStatsService: java.io.File mGraphicsStatsDir>;

        specialinvoke $r6.<java.io.File: void <init>(java.io.File,java.lang.String)>($r7, r9);

        return $r6;
    }

    private void processDied(android.graphics.GraphicsStatsService$ActiveBuffer)
    {
        android.graphics.GraphicsStatsService r0;
        java.lang.Object r1;
        java.util.ArrayList $r2;
        java.lang.Throwable $r3;
        android.graphics.GraphicsStatsService$ActiveBuffer r4;

        r0 := @this: android.graphics.GraphicsStatsService;

        r4 := @parameter0: android.graphics.GraphicsStatsService$ActiveBuffer;

        r1 = r0.<android.graphics.GraphicsStatsService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<android.graphics.GraphicsStatsService: java.util.ArrayList mActive>;

        virtualinvoke $r2.<java.util.ArrayList: boolean remove(java.lang.Object)>(r4);

        exitmonitor r1;

     label2:
        specialinvoke r0.<android.graphics.GraphicsStatsService: void addToSaveQueue(android.graphics.GraphicsStatsService$ActiveBuffer)>(r4);

        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private void pullGraphicsStats(boolean, long) throws android.os.RemoteException
    {
        android.graphics.GraphicsStatsService r0;
        boolean z0, $z1;
        long l0, l1;
        int $i2;
        java.io.StringWriter $r2;
        com.android.internal.util.FastPrintWriter $r3;
        android.content.Context $r4;
        android.os.RemoteException $r5;
        java.lang.String $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.graphics.GraphicsStatsService;

        z0 := @parameter0: boolean;

        l0 := @parameter1: long;

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if $i2 == 1066 goto label2;

        $r2 = new java.io.StringWriter;

        specialinvoke $r2.<java.io.StringWriter: void <init>()>();

        $r3 = new com.android.internal.util.FastPrintWriter;

        specialinvoke $r3.<com.android.internal.util.FastPrintWriter: void <init>(java.io.Writer)>($r2);

        $r4 = r0.<android.graphics.GraphicsStatsService: android.content.Context mContext>;

        $z1 = staticinvoke <com.android.internal.util.DumpUtils: boolean checkDumpAndUsageStatsPermission(android.content.Context,java.lang.String,java.io.PrintWriter)>($r4, "GraphicsStatsService", $r3);

        if $z1 == 0 goto label1;

        goto label2;

     label1:
        virtualinvoke $r3.<java.io.PrintWriter: void flush()>();

        $r5 = new android.os.RemoteException;

        $r6 = virtualinvoke $r2.<java.io.StringWriter: java.lang.String toString()>();

        specialinvoke $r5.<android.os.RemoteException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label2:
        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label3:
        specialinvoke r0.<android.graphics.GraphicsStatsService: void pullGraphicsStatsImpl(boolean,long)>(z0, l0);

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return;

     label5:
        $r7 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r7;

        catch java.lang.Throwable from label3 to label4 with label5;
    }

    private void pullGraphicsStatsImpl(boolean, long)
    {
        android.graphics.GraphicsStatsService r0;
        boolean z0, $z1, $z2;
        long l0, l1, $l4, $l7, $l8, l9, l12;
        java.io.File[] r1, r34;
        int i2, i3, $i5, i10, i11, i15, i23;
        java.io.File r2, r3, $r8, $r9, r33;
        java.util.Calendar $r4, $r14;
        java.util.ArrayList $r5, $r11, r24, $r25;
        java.lang.Object[] $r6;
        java.lang.Long $r7;
        java.lang.String $r10, r32;
        java.lang.Object $r12, r23, r30;
        android.graphics.GraphicsStatsService$BufferInfo $r13;
        byte $b6;
        java.lang.Throwable $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, r29, r35, r36;
        android.graphics.GraphicsStatsService$ActiveBuffer r26;
        android.graphics.GraphicsStatsService$HistoricalBuffer r27;
        java.util.HashSet r31;

        r0 := @this: android.graphics.GraphicsStatsService;

        z0 := @parameter0: boolean;

        l0 := @parameter1: long;

        if z0 == 0 goto label01;

        $l7 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l8 = $l7 - 86400000L;

        $r14 = specialinvoke r0.<android.graphics.GraphicsStatsService: java.util.Calendar normalizeDate(long)>($l8);

        l9 = virtualinvoke $r14.<java.util.Calendar: long getTimeInMillis()>();

        goto label02;

     label01:
        $l4 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r4 = specialinvoke r0.<android.graphics.GraphicsStatsService: java.util.Calendar normalizeDate(long)>($l4);

        l9 = virtualinvoke $r4.<java.util.Calendar: long getTimeInMillis()>();

     label02:
        r23 = r0.<android.graphics.GraphicsStatsService: java.lang.Object mLock>;

        entermonitor r23;

     label03:
        r24 = new java.util.ArrayList;

        $r5 = r0.<android.graphics.GraphicsStatsService: java.util.ArrayList mActive>;

        $i5 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        specialinvoke r24.<java.util.ArrayList: void <init>(int)>($i5);

     label04:
        i10 = 0;

     label05:
        $r25 = r0.<android.graphics.GraphicsStatsService: java.util.ArrayList mActive>;

        i11 = virtualinvoke $r25.<java.util.ArrayList: int size()>();

     label06:
        if i10 >= i11 goto label14;

     label07:
        $r11 = r0.<android.graphics.GraphicsStatsService: java.util.ArrayList mActive>;

        $r12 = virtualinvoke $r11.<java.util.ArrayList: java.lang.Object get(int)>(i10);

        r26 = (android.graphics.GraphicsStatsService$ActiveBuffer) $r12;

        $r13 = r26.<android.graphics.GraphicsStatsService$ActiveBuffer: android.graphics.GraphicsStatsService$BufferInfo mInfo>;

        l12 = $r13.<android.graphics.GraphicsStatsService$BufferInfo: long mStartTime>;

     label08:
        $b6 = l12 cmp l9;

        if $b6 != 0 goto label12;

     label09:
        r27 = new android.graphics.GraphicsStatsService$HistoricalBuffer;

        specialinvoke r27.<android.graphics.GraphicsStatsService$HistoricalBuffer: void <init>(android.graphics.GraphicsStatsService,android.graphics.GraphicsStatsService$ActiveBuffer)>(r0, r26);

        virtualinvoke r24.<java.util.ArrayList: boolean add(java.lang.Object)>(r27);

     label10:
        goto label12;

     label11:
        $r17 := @caughtexception;

     label12:
        i10 = i10 + 1;

        goto label05;

     label13:
        $r22 := @caughtexception;

        r29 = $r22;

        goto label47;

     label14:
        exitmonitor r23;

     label15:
        l1 = staticinvoke <android.graphics.GraphicsStatsService: long nCreateDump(int,boolean)>(-1, 1);

     label16:
        r30 = r0.<android.graphics.GraphicsStatsService: java.lang.Object mFileAccessLock>;

        entermonitor r30;

     label17:
        r31 = specialinvoke r0.<android.graphics.GraphicsStatsService: java.util.HashSet dumpActiveLocked(long,java.util.ArrayList)>(l1, r24);

     label18:
        virtualinvoke r24.<java.util.ArrayList: void clear()>();

     label19:
        i15 = 0;

     label20:
        $r6 = newarray (java.lang.Object)[1];

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l9);

        $r6[0] = $r7;

        r32 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%d", $r6);

     label21:
        r33 = new java.io.File;

     label22:
        $r8 = r0.<android.graphics.GraphicsStatsService: java.io.File mGraphicsStatsDir>;

        specialinvoke r33.<java.io.File: void <init>(java.io.File,java.lang.String)>($r8, r32);

     label23:
        $z1 = virtualinvoke r33.<java.io.File: boolean exists()>();

        if $z1 == 0 goto label37;

     label24:
        r1 = virtualinvoke r33.<java.io.File: java.io.File[] listFiles()>();

     label25:
        i2 = lengthof r1;

     label26:
        if i15 >= i2 goto label36;

     label27:
        $r9 = r1[i15];

        r34 = virtualinvoke $r9.<java.io.File: java.io.File[] listFiles()>();

     label28:
        i3 = lengthof r34;

     label29:
        i23 = 0;

     label30:
        if i23 >= i3 goto label35;

        r2 = r34[i23];

     label31:
        r3 = new java.io.File;

        specialinvoke r3.<java.io.File: void <init>(java.io.File,java.lang.String)>(r2, "total");

        $z2 = virtualinvoke r31.<java.util.HashSet: boolean contains(java.lang.Object)>(r3);

        if $z2 == 0 goto label33;

     label32:
        goto label34;

     label33:
        $r10 = virtualinvoke r3.<java.io.File: java.lang.String getAbsolutePath()>();

        staticinvoke <android.graphics.GraphicsStatsService: void nAddToDump(long,java.lang.String)>(l1, $r10);

     label34:
        i23 = i23 + 1;

        goto label30;

     label35:
        i15 = i15 + 1;

        goto label26;

     label36:
        goto label37;

     label37:
        exitmonitor r30;

     label38:
        staticinvoke <android.graphics.GraphicsStatsService: void nFinishDumpInMemory(long,long,boolean)>(l1, l0, z0);

        return;

     label39:
        $r18 := @caughtexception;

        r35 = $r18;

     label40:
        exitmonitor r30;

     label41:
        throw r35;

     label42:
        $r19 := @caughtexception;

        r36 = $r19;

        goto label45;

     label43:
        $r15 := @caughtexception;

        r35 = $r15;

        goto label40;

     label44:
        $r20 := @caughtexception;

        r36 = $r20;

     label45:
        staticinvoke <android.graphics.GraphicsStatsService: void nFinishDumpInMemory(long,long,boolean)>(l1, l0, z0);

        throw r36;

     label46:
        $r21 := @caughtexception;

        r29 = $r21;

     label47:
        exitmonitor r23;

     label48:
        throw r29;

     label49:
        $r16 := @caughtexception;

        r29 = $r16;

        goto label47;

        catch java.lang.Throwable from label03 to label04 with label46;
        catch java.lang.Throwable from label05 to label06 with label46;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.io.IOException from label09 to label10 with label11;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label14 to label15 with label46;
        catch java.lang.Throwable from label16 to label17 with label44;
        catch java.lang.Throwable from label17 to label18 with label39;
        catch java.lang.Throwable from label18 to label19 with label39;
        catch java.lang.Throwable from label20 to label21 with label39;
        catch java.lang.Throwable from label21 to label22 with label39;
        catch java.lang.Throwable from label22 to label23 with label39;
        catch java.lang.Throwable from label23 to label24 with label39;
        catch java.lang.Throwable from label24 to label25 with label39;
        catch java.lang.Throwable from label25 to label26 with label39;
        catch java.lang.Throwable from label27 to label28 with label39;
        catch java.lang.Throwable from label28 to label29 with label43;
        catch java.lang.Throwable from label31 to label32 with label43;
        catch java.lang.Throwable from label33 to label34 with label43;
        catch java.lang.Throwable from label37 to label38 with label43;
        catch java.lang.Throwable from label40 to label41 with label43;
        catch java.lang.Throwable from label41 to label42 with label42;
        catch java.lang.Throwable from label47 to label48 with label49;
    }

    private android.os.ParcelFileDescriptor requestBufferForProcessLocked(android.view.IGraphicsStatsCallback, int, int, java.lang.String, long) throws android.os.RemoteException
    {
        android.graphics.GraphicsStatsService r0;
        int i0, i1;
        java.lang.String r1;
        long l2;
        android.os.ParcelFileDescriptor $r2;
        android.view.IGraphicsStatsCallback r3;
        android.graphics.GraphicsStatsService$ActiveBuffer r4;

        r0 := @this: android.graphics.GraphicsStatsService;

        r3 := @parameter0: android.view.IGraphicsStatsCallback;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: java.lang.String;

        l2 := @parameter4: long;

        r4 = specialinvoke r0.<android.graphics.GraphicsStatsService: android.graphics.GraphicsStatsService$ActiveBuffer fetchActiveBuffersLocked(android.view.IGraphicsStatsCallback,int,int,java.lang.String,long)>(r3, i0, i1, r1, l2);

        specialinvoke r0.<android.graphics.GraphicsStatsService: void scheduleRotateLocked()>();

        $r2 = virtualinvoke r4.<android.graphics.GraphicsStatsService$ActiveBuffer: android.os.ParcelFileDescriptor getPfd()>();

        return $r2;
    }

    private void saveBuffer(android.graphics.GraphicsStatsService$HistoricalBuffer)
    {
        android.graphics.GraphicsStatsService r0;
        java.io.File r1, r2;
        boolean $z0, $z2;
        android.graphics.GraphicsStatsService$BufferInfo $r3, $r5, $r6, $r7, $r8, $r18;
        java.lang.String $r4, $r10, $r12, $r15, $r19, $r21;
        byte[] $r9;
        long $l0, $l1, $l2;
        java.lang.StringBuilder $r16, r26;
        java.lang.Throwable $r22;
        android.graphics.GraphicsStatsService$HistoricalBuffer r23;
        java.lang.Object r25;

        r0 := @this: android.graphics.GraphicsStatsService;

        r23 := @parameter0: android.graphics.GraphicsStatsService$HistoricalBuffer;

        $z0 = staticinvoke <android.os.Trace: boolean isTagEnabled(long)>(524288L);

        if $z0 == 0 goto label1;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("saving graphicsstats for ");

        $r18 = r23.<android.graphics.GraphicsStatsService$HistoricalBuffer: android.graphics.GraphicsStatsService$BufferInfo mInfo>;

        $r19 = $r18.<android.graphics.GraphicsStatsService$BufferInfo: java.lang.String mPackageName>;

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(524288L, $r21);

     label1:
        r25 = r0.<android.graphics.GraphicsStatsService: java.lang.Object mFileAccessLock>;

        entermonitor r25;

     label2:
        $r3 = r23.<android.graphics.GraphicsStatsService$HistoricalBuffer: android.graphics.GraphicsStatsService$BufferInfo mInfo>;

        r1 = specialinvoke r0.<android.graphics.GraphicsStatsService: java.io.File pathForApp(android.graphics.GraphicsStatsService$BufferInfo)>($r3);

        r2 = virtualinvoke r1.<java.io.File: java.io.File getParentFile()>();

        virtualinvoke r2.<java.io.File: boolean mkdirs()>();

        $z2 = virtualinvoke r2.<java.io.File: boolean exists()>();

        if $z2 != 0 goto label4;

        r26 = new java.lang.StringBuilder;

        specialinvoke r26.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to create path: \'");

        $r12 = virtualinvoke r2.<java.io.File: java.lang.String getAbsolutePath()>();

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r15 = virtualinvoke r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("GraphicsStatsService", $r15);

        exitmonitor r25;

     label3:
        return;

     label4:
        $r4 = virtualinvoke r1.<java.io.File: java.lang.String getAbsolutePath()>();

        $r5 = r23.<android.graphics.GraphicsStatsService$HistoricalBuffer: android.graphics.GraphicsStatsService$BufferInfo mInfo>;

        $r10 = $r5.<android.graphics.GraphicsStatsService$BufferInfo: java.lang.String mPackageName>;

        $r6 = r23.<android.graphics.GraphicsStatsService$HistoricalBuffer: android.graphics.GraphicsStatsService$BufferInfo mInfo>;

        $l2 = $r6.<android.graphics.GraphicsStatsService$BufferInfo: long mVersionCode>;

        $r7 = r23.<android.graphics.GraphicsStatsService$HistoricalBuffer: android.graphics.GraphicsStatsService$BufferInfo mInfo>;

        $l1 = $r7.<android.graphics.GraphicsStatsService$BufferInfo: long mStartTime>;

        $r8 = r23.<android.graphics.GraphicsStatsService$HistoricalBuffer: android.graphics.GraphicsStatsService$BufferInfo mInfo>;

        $l0 = $r8.<android.graphics.GraphicsStatsService$BufferInfo: long mEndTime>;

        $r9 = r23.<android.graphics.GraphicsStatsService$HistoricalBuffer: byte[] mData>;

        staticinvoke <android.graphics.GraphicsStatsService: void nSaveBuffer(java.lang.String,java.lang.String,long,long,long,byte[])>($r4, $r10, $l2, $l1, $l0, $r9);

        exitmonitor r25;

     label5:
        staticinvoke <android.os.Trace: void traceEnd(long)>(524288L);

        return;

     label6:
        $r22 := @caughtexception;

     label7:
        exitmonitor r25;

     label8:
        throw $r22;

        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    private void scheduleRotateLocked()
    {
        android.graphics.GraphicsStatsService r0;
        java.util.Calendar r1;
        boolean $z0;
        long $l0, $l1;
        android.app.AlarmManager $r2;
        android.graphics._$$Lambda$GraphicsStatsService$an_DvOX2nWltnD5OBOre5S9EpXs $r3;
        android.os.Handler $r4;

        r0 := @this: android.graphics.GraphicsStatsService;

        $z0 = r0.<android.graphics.GraphicsStatsService: boolean mRotateIsScheduled>;

        if $z0 == 0 goto label1;

        return;

     label1:
        r0.<android.graphics.GraphicsStatsService: boolean mRotateIsScheduled> = 1;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r1 = specialinvoke r0.<android.graphics.GraphicsStatsService: java.util.Calendar normalizeDate(long)>($l0);

        virtualinvoke r1.<java.util.Calendar: void add(int,int)>(5, 1);

        $r2 = r0.<android.graphics.GraphicsStatsService: android.app.AlarmManager mAlarmManager>;

        $l1 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>();

        $r3 = new android.graphics._$$Lambda$GraphicsStatsService$an_DvOX2nWltnD5OBOre5S9EpXs;

        specialinvoke $r3.<android.graphics._$$Lambda$GraphicsStatsService$an_DvOX2nWltnD5OBOre5S9EpXs: void <init>(android.graphics.GraphicsStatsService)>(r0);

        $r4 = r0.<android.graphics.GraphicsStatsService: android.os.Handler mWriteOutHandler>;

        virtualinvoke $r2.<android.app.AlarmManager: void setExact(int,long,java.lang.String,android.app.AlarmManager$OnAlarmListener,android.os.Handler)>(1, $l1, "GraphicsStatsService", $r3, $r4);

        return;
    }

    protected void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        android.graphics.GraphicsStatsService r0;
        long l0;
        android.content.Context $r1;
        boolean $z1, $z3, z4;
        java.util.ArrayList $r2, $r3, r16, $r17;
        int $i1, $i2, i3, i4, i5, i6;
        java.lang.Object $r4, r15, r20;
        android.graphics.GraphicsStatsService$ActiveBuffer $r5;
        java.lang.String $r6, $r7;
        java.lang.Throwable $r8, $r9, $r10, $r11;
        java.io.FileDescriptor r12;
        java.io.PrintWriter r13;
        java.lang.String[] r14;
        android.graphics.GraphicsStatsService$HistoricalBuffer r18;
        java.util.HashSet r21;

        r0 := @this: android.graphics.GraphicsStatsService;

        r12 := @parameter0: java.io.FileDescriptor;

        r13 := @parameter1: java.io.PrintWriter;

        r14 := @parameter2: java.lang.String[];

        $r1 = r0.<android.graphics.GraphicsStatsService: android.content.Context mContext>;

        $z1 = staticinvoke <com.android.internal.util.DumpUtils: boolean checkDumpAndUsageStatsPermission(android.content.Context,java.lang.String,java.io.PrintWriter)>($r1, "GraphicsStatsService", r13);

        if $z1 != 0 goto label01;

        return;

     label01:
        i3 = lengthof r14;

        i4 = 0;

     label02:
        z4 = 0;

        if i4 >= i3 goto label04;

        $r7 = "--proto";

        $r6 = r14[i4];

        $z3 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z3 == 0 goto label03;

        z4 = 1;

        goto label04;

     label03:
        i4 = i4 + 1;

        goto label02;

     label04:
        r15 = r0.<android.graphics.GraphicsStatsService: java.lang.Object mLock>;

        entermonitor r15;

     label05:
        r16 = new java.util.ArrayList;

        $r2 = r0.<android.graphics.GraphicsStatsService: java.util.ArrayList mActive>;

        $i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        specialinvoke r16.<java.util.ArrayList: void <init>(int)>($i1);

     label06:
        i5 = 0;

     label07:
        $r17 = r0.<android.graphics.GraphicsStatsService: java.util.ArrayList mActive>;

        i6 = virtualinvoke $r17.<java.util.ArrayList: int size()>();

     label08:
        if i5 >= i6 goto label13;

     label09:
        r18 = new android.graphics.GraphicsStatsService$HistoricalBuffer;

        $r3 = r0.<android.graphics.GraphicsStatsService: java.util.ArrayList mActive>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        $r5 = (android.graphics.GraphicsStatsService$ActiveBuffer) $r4;

        specialinvoke r18.<android.graphics.GraphicsStatsService$HistoricalBuffer: void <init>(android.graphics.GraphicsStatsService,android.graphics.GraphicsStatsService$ActiveBuffer)>(r0, $r5);

        virtualinvoke r16.<java.util.ArrayList: boolean add(java.lang.Object)>(r18);

     label10:
        goto label12;

     label11:
        $r10 := @caughtexception;

     label12:
        i5 = i5 + 1;

        goto label07;

     label13:
        exitmonitor r15;

     label14:
        $i2 = virtualinvoke r12.<java.io.FileDescriptor: int getInt$()>();

        l0 = staticinvoke <android.graphics.GraphicsStatsService: long nCreateDump(int,boolean)>($i2, z4);

     label15:
        r20 = r0.<android.graphics.GraphicsStatsService: java.lang.Object mFileAccessLock>;

        entermonitor r20;

     label16:
        r21 = specialinvoke r0.<android.graphics.GraphicsStatsService: java.util.HashSet dumpActiveLocked(long,java.util.ArrayList)>(l0, r16);

        virtualinvoke r16.<java.util.ArrayList: void clear()>();

        specialinvoke r0.<android.graphics.GraphicsStatsService: void dumpHistoricalLocked(long,java.util.HashSet)>(l0, r21);

        exitmonitor r20;

     label17:
        staticinvoke <android.graphics.GraphicsStatsService: void nFinishDump(long)>(l0);

        return;

     label18:
        $r9 := @caughtexception;

     label19:
        exitmonitor r20;

     label20:
        throw $r9;

     label21:
        $r11 := @caughtexception;

        staticinvoke <android.graphics.GraphicsStatsService: void nFinishDump(long)>(l0);

        throw $r11;

     label22:
        $r8 := @caughtexception;

     label23:
        exitmonitor r15;

     label24:
        throw $r8;

        catch java.lang.Throwable from label05 to label06 with label22;
        catch java.lang.Throwable from label07 to label08 with label22;
        catch java.io.IOException from label09 to label10 with label11;
        catch java.lang.Throwable from label09 to label10 with label22;
        catch java.lang.Throwable from label13 to label14 with label22;
        catch java.lang.Throwable from label15 to label16 with label21;
        catch java.lang.Throwable from label16 to label17 with label18;
        catch java.lang.Throwable from label19 to label20 with label18;
        catch java.lang.Throwable from label20 to label21 with label21;
        catch java.lang.Throwable from label23 to label24 with label22;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.graphics.GraphicsStatsService r0;

        r0 := @this: android.graphics.GraphicsStatsService;

        staticinvoke <android.graphics.GraphicsStatsService: void nativeDestructor()>();

        return;
    }

    public android.os.ParcelFileDescriptor requestBufferForProcess(java.lang.String, android.view.IGraphicsStatsCallback) throws android.os.RemoteException
    {
        android.graphics.GraphicsStatsService r0;
        int i0, i1, $i4;
        long l2, l3;
        android.app.AppOpsManager $r1;
        android.content.Context $r2;
        android.content.pm.PackageManager $r3;
        java.lang.Throwable $r4, $r10, $r11, r19;
        android.content.pm.PackageManager$NameNotFoundException $r5;
        java.lang.String $r9, r12;
        android.view.IGraphicsStatsCallback r13;
        android.content.pm.PackageInfo r14;
        java.lang.Object r15, r17, r20;
        android.os.ParcelFileDescriptor r18;
        android.os.RemoteException r23;
        java.lang.StringBuilder r24;

        r0 := @this: android.graphics.GraphicsStatsService;

        r12 := @parameter0: java.lang.String;

        r13 := @parameter1: android.view.IGraphicsStatsCallback;

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label01:
        $r1 = r0.<android.graphics.GraphicsStatsService: android.app.AppOpsManager mAppOps>;

        virtualinvoke $r1.<android.app.AppOpsManager: void checkPackage(int,java.lang.String)>(i0, r12);

        $r2 = r0.<android.graphics.GraphicsStatsService: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $i4 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        r14 = virtualinvoke $r3.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfoAsUser(java.lang.String,int,int)>(r12, 0, $i4);

        r15 = r0.<android.graphics.GraphicsStatsService: java.lang.Object mLock>;

        entermonitor r15;

     label02:
        l3 = virtualinvoke r14.<android.content.pm.PackageInfo: long getLongVersionCode()>();

     label03:
        r17 = r15;

     label04:
        r18 = specialinvoke r0.<android.graphics.GraphicsStatsService: android.os.ParcelFileDescriptor requestBufferForProcessLocked(android.view.IGraphicsStatsCallback,int,int,java.lang.String,long)>(r13, i0, i1, r12, l3);

     label05:
        r17 = r15;

     label06:
        exitmonitor r15;

     label07:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        return r18;

     label08:
        $r10 := @caughtexception;

        r19 = $r10;

        r20 = r17;

        goto label10;

     label09:
        $r11 := @caughtexception;

        r19 = $r11;

        r20 = r15;

     label10:
        r17 = r20;

     label11:
        exitmonitor r20;

     label12:
        throw r19;

     label13:
        $r4 := @caughtexception;

        goto label16;

     label14:
        $r5 := @caughtexception;

     label15:
        r23 = new android.os.RemoteException;

        r24 = new java.lang.StringBuilder;

        specialinvoke r24.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to find package: \'");

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12);

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r9 = virtualinvoke r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r23.<android.os.RemoteException: void <init>(java.lang.String)>($r9);

        throw r23;

     label16:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw $r4;

        catch android.content.pm.PackageManager$NameNotFoundException from label01 to label02 with label14;
        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label11 to label12 with label08;
        catch android.content.pm.PackageManager$NameNotFoundException from label12 to label13 with label14;
        catch java.lang.Throwable from label12 to label13 with label13;
        catch java.lang.Throwable from label15 to label16 with label13;
    }

    public static void <clinit>()
    {
        <android.graphics.GraphicsStatsService: java.lang.String TAG> = "GraphicsStatsService";

        <android.graphics.GraphicsStatsService: int SAVE_BUFFER> = 1;

        <android.graphics.GraphicsStatsService: java.lang.String GRAPHICS_STATS_SERVICE> = "graphicsstats";

        <android.graphics.GraphicsStatsService: int DELETE_OLD> = 2;

        <android.graphics.GraphicsStatsService: int AID_STATSD> = 1066;

        return;
    }
}
