class android.graphics.HardwareRenderer$ProcessInitializer extends java.lang.Object
{
    static android.graphics.HardwareRenderer$ProcessInitializer sInstance;
    private android.view.IGraphicsStatsCallback mGraphicsStatsCallback;
    private android.view.IGraphicsStats mGraphicsStatsService;
    private boolean mInitialized;
    private java.lang.String mPackageName;

    static void <clinit>()
    {
        android.graphics.HardwareRenderer$ProcessInitializer $r0;

        $r0 = new android.graphics.HardwareRenderer$ProcessInitializer;

        specialinvoke $r0.<android.graphics.HardwareRenderer$ProcessInitializer: void <init>()>();

        <android.graphics.HardwareRenderer$ProcessInitializer: android.graphics.HardwareRenderer$ProcessInitializer sInstance> = $r0;

        return;
    }

    private void <init>()
    {
        android.graphics.HardwareRenderer$ProcessInitializer r0;
        android.graphics.HardwareRenderer$ProcessInitializer$1 $r1;

        r0 := @this: android.graphics.HardwareRenderer$ProcessInitializer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.graphics.HardwareRenderer$ProcessInitializer: boolean mInitialized> = 0;

        $r1 = new android.graphics.HardwareRenderer$ProcessInitializer$1;

        specialinvoke $r1.<android.graphics.HardwareRenderer$ProcessInitializer$1: void <init>(android.graphics.HardwareRenderer$ProcessInitializer)>(r0);

        r0.<android.graphics.HardwareRenderer$ProcessInitializer: android.view.IGraphicsStatsCallback mGraphicsStatsCallback> = $r1;

        return;
    }

    static void access$400(android.graphics.HardwareRenderer$ProcessInitializer)
    {
        android.graphics.HardwareRenderer$ProcessInitializer r0;

        r0 := @parameter0: android.graphics.HardwareRenderer$ProcessInitializer;

        specialinvoke r0.<android.graphics.HardwareRenderer$ProcessInitializer: void rotateBuffer()>();

        return;
    }

    private void initGraphicsStats()
    {
        android.graphics.HardwareRenderer$ProcessInitializer r0;
        java.lang.String $r1;
        android.view.IGraphicsStats $r2;
        java.lang.Throwable $r3;
        android.os.IBinder r4;

        r0 := @this: android.graphics.HardwareRenderer$ProcessInitializer;

        $r1 = r0.<android.graphics.HardwareRenderer$ProcessInitializer: java.lang.String mPackageName>;

        if $r1 != null goto label1;

        return;

     label1:
        r4 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("graphicsstats");

     label2:
        if r4 != null goto label3;

        return;

     label3:
        $r2 = staticinvoke <android.view.IGraphicsStats$Stub: android.view.IGraphicsStats asInterface(android.os.IBinder)>(r4);

        r0.<android.graphics.HardwareRenderer$ProcessInitializer: android.view.IGraphicsStats mGraphicsStatsService> = $r2;

        specialinvoke r0.<android.graphics.HardwareRenderer$ProcessInitializer: void requestBuffer()>();

     label4:
        goto label6;

     label5:
        $r3 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("HardwareRenderer", "Could not acquire gfx stats buffer", $r3);

     label6:
        return;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    private void initSched(long)
    {
        android.graphics.HardwareRenderer$ProcessInitializer r0;
        long l0;
        int i1;
        android.app.IActivityManager $r2;
        java.lang.Throwable $r3;

        r0 := @this: android.graphics.HardwareRenderer$ProcessInitializer;

        l0 := @parameter0: long;

     label1:
        i1 = staticinvoke <android.graphics.HardwareRenderer: int access$500(long)>(l0);

        $r2 = staticinvoke <android.app.ActivityManager: android.app.IActivityManager getService()>();

        interfaceinvoke $r2.<android.app.IActivityManager: void setRenderThread(int)>(i1);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("HardwareRenderer", "Failed to set scheduler for RenderThread", $r3);

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private void requestBuffer()
    {
        android.graphics.HardwareRenderer$ProcessInitializer r0;
        android.view.IGraphicsStatsCallback $r1;
        java.lang.String $r2;
        android.view.IGraphicsStats $r3;
        int $i0;
        java.lang.Throwable $r4;
        android.os.ParcelFileDescriptor r5;

        r0 := @this: android.graphics.HardwareRenderer$ProcessInitializer;

     label1:
        $r3 = r0.<android.graphics.HardwareRenderer$ProcessInitializer: android.view.IGraphicsStats mGraphicsStatsService>;

        $r2 = r0.<android.graphics.HardwareRenderer$ProcessInitializer: java.lang.String mPackageName>;

        $r1 = r0.<android.graphics.HardwareRenderer$ProcessInitializer: android.view.IGraphicsStatsCallback mGraphicsStatsCallback>;

        r5 = interfaceinvoke $r3.<android.view.IGraphicsStats: android.os.ParcelFileDescriptor requestBufferForProcess(java.lang.String,android.view.IGraphicsStatsCallback)>($r2, $r1);

        $i0 = virtualinvoke r5.<android.os.ParcelFileDescriptor: int getFd()>();

        staticinvoke <android.graphics.HardwareRenderer: void access$700(int)>($i0);

        virtualinvoke r5.<android.os.ParcelFileDescriptor: void close()>();

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("HardwareRenderer", "Could not acquire gfx stats buffer", $r4);

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private void rotateBuffer()
    {
        android.graphics.HardwareRenderer$ProcessInitializer r0;

        r0 := @this: android.graphics.HardwareRenderer$ProcessInitializer;

        staticinvoke <android.graphics.HardwareRenderer: void access$600()>();

        specialinvoke r0.<android.graphics.HardwareRenderer$ProcessInitializer: void requestBuffer()>();

        return;
    }

    void init(long)
    {
        android.graphics.HardwareRenderer$ProcessInitializer r0;
        long l0;
        boolean z0;
        java.lang.Throwable $r2;

        r0 := @this: android.graphics.HardwareRenderer$ProcessInitializer;

        l0 := @parameter0: long;

        entermonitor r0;

     label1:
        z0 = r0.<android.graphics.HardwareRenderer$ProcessInitializer: boolean mInitialized>;

     label2:
        if z0 == 0 goto label3;

        exitmonitor r0;

        return;

     label3:
        r0.<android.graphics.HardwareRenderer$ProcessInitializer: boolean mInitialized> = 1;

        specialinvoke r0.<android.graphics.HardwareRenderer$ProcessInitializer: void initSched(long)>(l0);

        specialinvoke r0.<android.graphics.HardwareRenderer$ProcessInitializer: void initGraphicsStats()>();

     label4:
        exitmonitor r0;

        return;

     label5:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    void setPackageName(java.lang.String)
    {
        android.graphics.HardwareRenderer$ProcessInitializer r0;
        boolean z0;
        java.lang.Throwable $r1;
        java.lang.String r2;

        r0 := @this: android.graphics.HardwareRenderer$ProcessInitializer;

        r2 := @parameter0: java.lang.String;

        entermonitor r0;

     label1:
        z0 = r0.<android.graphics.HardwareRenderer$ProcessInitializer: boolean mInitialized>;

     label2:
        if z0 == 0 goto label3;

        exitmonitor r0;

        return;

     label3:
        r0.<android.graphics.HardwareRenderer$ProcessInitializer: java.lang.String mPackageName> = r2;

     label4:
        exitmonitor r0;

        return;

     label5:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }
}
