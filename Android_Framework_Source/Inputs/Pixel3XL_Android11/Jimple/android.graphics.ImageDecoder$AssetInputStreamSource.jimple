public class android.graphics.ImageDecoder$AssetInputStreamSource extends android.graphics.ImageDecoder$Source
{
    private android.content.res.AssetManager$AssetInputStream mAssetInputStream;
    private final int mDensity;
    private final android.content.res.Resources mResources;

    public void <init>(android.content.res.AssetManager$AssetInputStream, android.content.res.Resources, android.util.TypedValue)
    {
        android.graphics.ImageDecoder$AssetInputStreamSource r0;
        android.content.res.AssetManager$AssetInputStream r1;
        android.content.res.Resources r2;
        android.util.TypedValue r3;
        int $i0, $i1, $i2;

        r0 := @this: android.graphics.ImageDecoder$AssetInputStreamSource;

        r1 := @parameter0: android.content.res.AssetManager$AssetInputStream;

        r2 := @parameter1: android.content.res.Resources;

        r3 := @parameter2: android.util.TypedValue;

        specialinvoke r0.<android.graphics.ImageDecoder$Source: void <init>(android.graphics.ImageDecoder$1)>(null);

        r0.<android.graphics.ImageDecoder$AssetInputStreamSource: android.content.res.AssetManager$AssetInputStream mAssetInputStream> = r1;

        r0.<android.graphics.ImageDecoder$AssetInputStreamSource: android.content.res.Resources mResources> = r2;

        $i0 = r3.<android.util.TypedValue: int density>;

        if $i0 != 0 goto label1;

        r0.<android.graphics.ImageDecoder$AssetInputStreamSource: int mDensity> = 160;

        goto label3;

     label1:
        $i1 = r3.<android.util.TypedValue: int density>;

        if $i1 == 65535 goto label2;

        $i2 = r3.<android.util.TypedValue: int density>;

        r0.<android.graphics.ImageDecoder$AssetInputStreamSource: int mDensity> = $i2;

        goto label3;

     label2:
        r0.<android.graphics.ImageDecoder$AssetInputStreamSource: int mDensity> = 0;

     label3:
        return;
    }

    public android.graphics.ImageDecoder createImageDecoder(boolean) throws java.io.IOException
    {
        android.graphics.ImageDecoder$AssetInputStreamSource r0;
        boolean z0;
        android.content.res.AssetManager$AssetInputStream $r1, r3;
        java.lang.Throwable $r2;
        android.graphics.ImageDecoder r4;
        java.io.IOException r5;

        r0 := @this: android.graphics.ImageDecoder$AssetInputStreamSource;

        z0 := @parameter0: boolean;

        entermonitor r0;

     label1:
        $r1 = r0.<android.graphics.ImageDecoder$AssetInputStreamSource: android.content.res.AssetManager$AssetInputStream mAssetInputStream>;

        if $r1 == null goto label3;

        r3 = r0.<android.graphics.ImageDecoder$AssetInputStreamSource: android.content.res.AssetManager$AssetInputStream mAssetInputStream>;

        r0.<android.graphics.ImageDecoder$AssetInputStreamSource: android.content.res.AssetManager$AssetInputStream mAssetInputStream> = null;

        r4 = staticinvoke <android.graphics.ImageDecoder: android.graphics.ImageDecoder access$500(android.content.res.AssetManager$AssetInputStream,boolean,android.graphics.ImageDecoder$Source)>(r3, z0, r0);

        exitmonitor r0;

     label2:
        return r4;

     label3:
        r5 = new java.io.IOException;

        specialinvoke r5.<java.io.IOException: void <init>(java.lang.String)>("Cannot reuse AssetInputStreamSource");

        throw r5;

     label4:
        $r2 := @caughtexception;

     label5:
        exitmonitor r0;

     label6:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label3 to label4 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public int getDensity()
    {
        android.graphics.ImageDecoder$AssetInputStreamSource r0;
        int $i0;

        r0 := @this: android.graphics.ImageDecoder$AssetInputStreamSource;

        $i0 = r0.<android.graphics.ImageDecoder$AssetInputStreamSource: int mDensity>;

        return $i0;
    }

    public android.content.res.Resources getResources()
    {
        android.graphics.ImageDecoder$AssetInputStreamSource r0;
        android.content.res.Resources $r1;

        r0 := @this: android.graphics.ImageDecoder$AssetInputStreamSource;

        $r1 = r0.<android.graphics.ImageDecoder$AssetInputStreamSource: android.content.res.Resources mResources>;

        return $r1;
    }
}
