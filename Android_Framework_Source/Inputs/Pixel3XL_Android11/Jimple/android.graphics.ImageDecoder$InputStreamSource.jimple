class android.graphics.ImageDecoder$InputStreamSource extends android.graphics.ImageDecoder$Source
{
    final int mInputDensity;
    java.io.InputStream mInputStream;
    final android.content.res.Resources mResources;

    void <init>(android.content.res.Resources, java.io.InputStream, int)
    {
        android.graphics.ImageDecoder$InputStreamSource r0;
        android.content.res.Resources r1;
        java.io.InputStream r2;
        int i0;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: android.graphics.ImageDecoder$InputStreamSource;

        r1 := @parameter0: android.content.res.Resources;

        r2 := @parameter1: java.io.InputStream;

        i0 := @parameter2: int;

        specialinvoke r0.<android.graphics.ImageDecoder$Source: void <init>(android.graphics.ImageDecoder$1)>(null);

        if r2 == null goto label1;

        r0.<android.graphics.ImageDecoder$InputStreamSource: android.content.res.Resources mResources> = r1;

        r0.<android.graphics.ImageDecoder$InputStreamSource: java.io.InputStream mInputStream> = r2;

        r0.<android.graphics.ImageDecoder$InputStreamSource: int mInputDensity> = i0;

        return;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The InputStream cannot be null");

        throw $r3;
    }

    public android.graphics.ImageDecoder createImageDecoder(boolean) throws java.io.IOException
    {
        android.graphics.ImageDecoder$InputStreamSource r0;
        boolean z0;
        java.io.InputStream $r1, r3;
        java.lang.Throwable $r2;
        android.graphics.ImageDecoder r4;
        java.io.IOException r5;

        r0 := @this: android.graphics.ImageDecoder$InputStreamSource;

        z0 := @parameter0: boolean;

        entermonitor r0;

     label1:
        $r1 = r0.<android.graphics.ImageDecoder$InputStreamSource: java.io.InputStream mInputStream>;

        if $r1 == null goto label3;

        r3 = r0.<android.graphics.ImageDecoder$InputStreamSource: java.io.InputStream mInputStream>;

        r0.<android.graphics.ImageDecoder$InputStreamSource: java.io.InputStream mInputStream> = null;

        r4 = staticinvoke <android.graphics.ImageDecoder: android.graphics.ImageDecoder access$300(java.io.InputStream,boolean,boolean,android.graphics.ImageDecoder$Source)>(r3, 0, z0, r0);

        exitmonitor r0;

     label2:
        return r4;

     label3:
        r5 = new java.io.IOException;

        specialinvoke r5.<java.io.IOException: void <init>(java.lang.String)>("Cannot reuse InputStreamSource");

        throw r5;

     label4:
        $r2 := @caughtexception;

     label5:
        exitmonitor r0;

     label6:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label3 to label4 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public int getDensity()
    {
        android.graphics.ImageDecoder$InputStreamSource r0;
        int $i0;

        r0 := @this: android.graphics.ImageDecoder$InputStreamSource;

        $i0 = r0.<android.graphics.ImageDecoder$InputStreamSource: int mInputDensity>;

        return $i0;
    }

    public android.content.res.Resources getResources()
    {
        android.graphics.ImageDecoder$InputStreamSource r0;
        android.content.res.Resources $r1;

        r0 := @this: android.graphics.ImageDecoder$InputStreamSource;

        $r1 = r0.<android.graphics.ImageDecoder$InputStreamSource: android.content.res.Resources mResources>;

        return $r1;
    }
}
