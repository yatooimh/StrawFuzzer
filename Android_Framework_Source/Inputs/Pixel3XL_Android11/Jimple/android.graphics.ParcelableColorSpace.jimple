public final class android.graphics.ParcelableColorSpace extends android.graphics.ColorSpace implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    private final android.graphics.ColorSpace mColorSpace;

    static void <clinit>()
    {
        android.graphics.ParcelableColorSpace$1 $r0;

        $r0 = new android.graphics.ParcelableColorSpace$1;

        specialinvoke $r0.<android.graphics.ParcelableColorSpace$1: void <init>()>();

        <android.graphics.ParcelableColorSpace: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    public void <init>(android.graphics.ColorSpace)
    {
        android.graphics.ParcelableColorSpace r0;
        java.lang.String $r1;
        android.graphics.ColorSpace$Model $r2;
        int $i0, $i1;
        boolean $z0;
        java.lang.IllegalArgumentException $r3, $r6;
        android.graphics.ColorSpace$Rgb $r4;
        android.graphics.ColorSpace$Rgb$TransferParameters $r5;
        android.graphics.ColorSpace r7, r8;

        r0 := @this: android.graphics.ParcelableColorSpace;

        r7 := @parameter0: android.graphics.ColorSpace;

        $r1 = virtualinvoke r7.<android.graphics.ColorSpace: java.lang.String getName()>();

        $r2 = virtualinvoke r7.<android.graphics.ColorSpace: android.graphics.ColorSpace$Model getModel()>();

        $i0 = virtualinvoke r7.<android.graphics.ColorSpace: int getId()>();

        specialinvoke r0.<android.graphics.ColorSpace: void <init>(java.lang.String,android.graphics.ColorSpace$Model,int)>($r1, $r2, $i0);

        r0.<android.graphics.ParcelableColorSpace: android.graphics.ColorSpace mColorSpace> = r7;

        $i1 = virtualinvoke r7.<android.graphics.ColorSpace: int getId()>();

        if $i1 != -1 goto label3;

        r8 = r0.<android.graphics.ParcelableColorSpace: android.graphics.ColorSpace mColorSpace>;

        $z0 = r8 instanceof android.graphics.ColorSpace$Rgb;

        if $z0 == 0 goto label2;

        $r4 = (android.graphics.ColorSpace$Rgb) r8;

        $r5 = virtualinvoke $r4.<android.graphics.ColorSpace$Rgb: android.graphics.ColorSpace$Rgb$TransferParameters getTransferParameters()>();

        if $r5 == null goto label1;

        goto label3;

     label1:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("ColorSpace must use an ICC parametric transfer function to be parcelable");

        throw $r6;

     label2:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unable to parcel unknown ColorSpaces that are not ColorSpace.Rgb");

        throw $r3;

     label3:
        return;
    }

    public static boolean isParcelable(android.graphics.ColorSpace)
    {
        android.graphics.ColorSpace r0;
        int $i0;
        boolean $z0;
        android.graphics.ColorSpace$Rgb $r1;
        android.graphics.ColorSpace$Rgb$TransferParameters $r2;

        r0 := @parameter0: android.graphics.ColorSpace;

        $i0 = virtualinvoke r0.<android.graphics.ColorSpace: int getId()>();

        if $i0 != -1 goto label2;

        $z0 = r0 instanceof android.graphics.ColorSpace$Rgb;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r1 = (android.graphics.ColorSpace$Rgb) r0;

        $r2 = virtualinvoke $r1.<android.graphics.ColorSpace$Rgb: android.graphics.ColorSpace$Rgb$TransferParameters getTransferParameters()>();

        if $r2 != null goto label2;

        return 0;

     label2:
        return 1;
    }

    public int describeContents()
    {
        android.graphics.ParcelableColorSpace r0;

        r0 := @this: android.graphics.ParcelableColorSpace;

        return 0;
    }

    public boolean equals(java.lang.Object)
    {
        android.graphics.ParcelableColorSpace r0, r6;
        java.lang.Class $r1, $r2;
        android.graphics.ColorSpace $r3, $r4;
        boolean $z0;
        java.lang.Object r5;

        r0 := @this: android.graphics.ParcelableColorSpace;

        r5 := @parameter0: java.lang.Object;

        if r0 != r5 goto label1;

        return 1;

     label1:
        if r5 == null goto label3;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke r5.<java.lang.Object: java.lang.Class getClass()>();

        if $r1 == $r2 goto label2;

        goto label3;

     label2:
        r6 = (android.graphics.ParcelableColorSpace) r5;

        $r4 = r0.<android.graphics.ParcelableColorSpace: android.graphics.ColorSpace mColorSpace>;

        $r3 = r6.<android.graphics.ParcelableColorSpace: android.graphics.ColorSpace mColorSpace>;

        $z0 = virtualinvoke $r4.<android.graphics.ColorSpace: boolean equals(java.lang.Object)>($r3);

        return $z0;

     label3:
        return 0;
    }

    public float[] fromXyz(float[])
    {
        android.graphics.ParcelableColorSpace r0;
        float[] r1, $r3;
        android.graphics.ColorSpace $r2;

        r0 := @this: android.graphics.ParcelableColorSpace;

        r1 := @parameter0: float[];

        $r2 = r0.<android.graphics.ParcelableColorSpace: android.graphics.ColorSpace mColorSpace>;

        $r3 = virtualinvoke $r2.<android.graphics.ColorSpace: float[] fromXyz(float[])>(r1);

        return $r3;
    }

    public android.graphics.ColorSpace getColorSpace()
    {
        android.graphics.ParcelableColorSpace r0;
        android.graphics.ColorSpace $r1;

        r0 := @this: android.graphics.ParcelableColorSpace;

        $r1 = r0.<android.graphics.ParcelableColorSpace: android.graphics.ColorSpace mColorSpace>;

        return $r1;
    }

    public float getMaxValue(int)
    {
        android.graphics.ParcelableColorSpace r0;
        int i0;
        android.graphics.ColorSpace $r1;
        float $f0;

        r0 := @this: android.graphics.ParcelableColorSpace;

        i0 := @parameter0: int;

        $r1 = r0.<android.graphics.ParcelableColorSpace: android.graphics.ColorSpace mColorSpace>;

        $f0 = virtualinvoke $r1.<android.graphics.ColorSpace: float getMaxValue(int)>(i0);

        return $f0;
    }

    public float getMinValue(int)
    {
        android.graphics.ParcelableColorSpace r0;
        int i0;
        android.graphics.ColorSpace $r1;
        float $f0;

        r0 := @this: android.graphics.ParcelableColorSpace;

        i0 := @parameter0: int;

        $r1 = r0.<android.graphics.ParcelableColorSpace: android.graphics.ColorSpace mColorSpace>;

        $f0 = virtualinvoke $r1.<android.graphics.ColorSpace: float getMinValue(int)>(i0);

        return $f0;
    }

    long getNativeInstance()
    {
        android.graphics.ParcelableColorSpace r0;
        android.graphics.ColorSpace $r1;
        long $l0;

        r0 := @this: android.graphics.ParcelableColorSpace;

        $r1 = r0.<android.graphics.ParcelableColorSpace: android.graphics.ColorSpace mColorSpace>;

        $l0 = virtualinvoke $r1.<android.graphics.ColorSpace: long getNativeInstance()>();

        return $l0;
    }

    public int hashCode()
    {
        android.graphics.ParcelableColorSpace r0;
        android.graphics.ColorSpace $r1;
        int $i0;

        r0 := @this: android.graphics.ParcelableColorSpace;

        $r1 = r0.<android.graphics.ParcelableColorSpace: android.graphics.ColorSpace mColorSpace>;

        $i0 = virtualinvoke $r1.<android.graphics.ColorSpace: int hashCode()>();

        return $i0;
    }

    public boolean isWideGamut()
    {
        android.graphics.ParcelableColorSpace r0;
        android.graphics.ColorSpace $r1;
        boolean $z0;

        r0 := @this: android.graphics.ParcelableColorSpace;

        $r1 = r0.<android.graphics.ParcelableColorSpace: android.graphics.ColorSpace mColorSpace>;

        $z0 = virtualinvoke $r1.<android.graphics.ColorSpace: boolean isWideGamut()>();

        return $z0;
    }

    public float[] toXyz(float[])
    {
        android.graphics.ParcelableColorSpace r0;
        float[] r1, $r3;
        android.graphics.ColorSpace $r2;

        r0 := @this: android.graphics.ParcelableColorSpace;

        r1 := @parameter0: float[];

        $r2 = r0.<android.graphics.ParcelableColorSpace: android.graphics.ColorSpace mColorSpace>;

        $r3 = virtualinvoke $r2.<android.graphics.ColorSpace: float[] toXyz(float[])>(r1);

        return $r3;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.graphics.ParcelableColorSpace r0;
        android.os.Parcel r1;
        android.graphics.ColorSpace $r2, $r3;
        java.lang.String $r4;
        float[] $r5, $r6;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6;
        int i0, i1;
        android.graphics.ColorSpace$Rgb r7;
        android.graphics.ColorSpace$Rgb$TransferParameters r8;

        r0 := @this: android.graphics.ParcelableColorSpace;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $r2 = r0.<android.graphics.ParcelableColorSpace: android.graphics.ColorSpace mColorSpace>;

        i1 = virtualinvoke $r2.<android.graphics.ColorSpace: int getId()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        if i1 != -1 goto label1;

        $r3 = r0.<android.graphics.ParcelableColorSpace: android.graphics.ColorSpace mColorSpace>;

        r7 = (android.graphics.ColorSpace$Rgb) $r3;

        $r4 = virtualinvoke r7.<android.graphics.ColorSpace$Rgb: java.lang.String getName()>();

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r4);

        $r5 = virtualinvoke r7.<android.graphics.ColorSpace$Rgb: float[] getPrimaries()>();

        virtualinvoke r1.<android.os.Parcel: void writeFloatArray(float[])>($r5);

        $r6 = virtualinvoke r7.<android.graphics.ColorSpace$Rgb: float[] getWhitePoint()>();

        virtualinvoke r1.<android.os.Parcel: void writeFloatArray(float[])>($r6);

        r8 = virtualinvoke r7.<android.graphics.ColorSpace$Rgb: android.graphics.ColorSpace$Rgb$TransferParameters getTransferParameters()>();

        $d0 = r8.<android.graphics.ColorSpace$Rgb$TransferParameters: double a>;

        virtualinvoke r1.<android.os.Parcel: void writeDouble(double)>($d0);

        $d1 = r8.<android.graphics.ColorSpace$Rgb$TransferParameters: double b>;

        virtualinvoke r1.<android.os.Parcel: void writeDouble(double)>($d1);

        $d2 = r8.<android.graphics.ColorSpace$Rgb$TransferParameters: double c>;

        virtualinvoke r1.<android.os.Parcel: void writeDouble(double)>($d2);

        $d3 = r8.<android.graphics.ColorSpace$Rgb$TransferParameters: double d>;

        virtualinvoke r1.<android.os.Parcel: void writeDouble(double)>($d3);

        $d4 = r8.<android.graphics.ColorSpace$Rgb$TransferParameters: double e>;

        virtualinvoke r1.<android.os.Parcel: void writeDouble(double)>($d4);

        $d5 = r8.<android.graphics.ColorSpace$Rgb$TransferParameters: double f>;

        virtualinvoke r1.<android.os.Parcel: void writeDouble(double)>($d5);

        $d6 = r8.<android.graphics.ColorSpace$Rgb$TransferParameters: double g>;

        virtualinvoke r1.<android.os.Parcel: void writeDouble(double)>($d6);

     label1:
        return;
    }
}
