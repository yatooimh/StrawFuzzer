public class android.graphics.RadialGradient extends android.graphics.Shader
{
    private int mCenterColor;
    private final long[] mColorLongs;
    private int[] mColors;
    private int mEdgeColor;
    private float[] mPositions;
    private float mRadius;
    private android.graphics.Shader$TileMode mTileMode;
    private float mX;
    private float mY;

    public void <init>(float, float, float, int, int, android.graphics.Shader$TileMode)
    {
        android.graphics.RadialGradient r0;
        float f0, f1, f2;
        int i0, i1;
        android.graphics.Shader$TileMode r1;
        long $l2, $l3;

        r0 := @this: android.graphics.RadialGradient;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        r1 := @parameter5: android.graphics.Shader$TileMode;

        $l2 = staticinvoke <android.graphics.Color: long pack(int)>(i0);

        $l3 = staticinvoke <android.graphics.Color: long pack(int)>(i1);

        specialinvoke r0.<android.graphics.RadialGradient: void <init>(float,float,float,long,long,android.graphics.Shader$TileMode)>(f0, f1, f2, $l2, $l3, r1);

        return;
    }

    public void <init>(float, float, float, long, long, android.graphics.Shader$TileMode)
    {
        android.graphics.RadialGradient r0;
        float f0, f1, f2;
        long l0, l1;
        android.graphics.Shader$TileMode r1;
        long[] $r2;

        r0 := @this: android.graphics.RadialGradient;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        l0 := @parameter3: long;

        l1 := @parameter4: long;

        r1 := @parameter5: android.graphics.Shader$TileMode;

        $r2 = newarray (long)[2];

        $r2[0] = l0;

        $r2[1] = l1;

        specialinvoke r0.<android.graphics.RadialGradient: void <init>(float,float,float,long[],float[],android.graphics.Shader$TileMode)>(f0, f1, f2, $r2, null, r1);

        return;
    }

    public void <init>(float, float, float, int[], float[], android.graphics.Shader$TileMode)
    {
        android.graphics.RadialGradient r0;
        float f0, f1, f2;
        int[] r1;
        float[] r2;
        android.graphics.Shader$TileMode r3;
        long[] $r4;
        android.graphics.ColorSpace$Named $r5;
        android.graphics.ColorSpace $r6;

        r0 := @this: android.graphics.RadialGradient;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        r1 := @parameter3: int[];

        r2 := @parameter4: float[];

        r3 := @parameter5: android.graphics.Shader$TileMode;

        $r4 = staticinvoke <android.graphics.RadialGradient: long[] convertColors(int[])>(r1);

        $r5 = <android.graphics.ColorSpace$Named: android.graphics.ColorSpace$Named SRGB>;

        $r6 = staticinvoke <android.graphics.ColorSpace: android.graphics.ColorSpace get(android.graphics.ColorSpace$Named)>($r5);

        specialinvoke r0.<android.graphics.RadialGradient: void <init>(float,float,float,long[],float[],android.graphics.Shader$TileMode,android.graphics.ColorSpace)>(f0, f1, f2, $r4, r2, r3, $r6);

        return;
    }

    public void <init>(float, float, float, long[], float[], android.graphics.Shader$TileMode)
    {
        android.graphics.RadialGradient r0;
        float f0, f1, f2;
        long[] r1, $r5;
        float[] r2;
        android.graphics.Shader$TileMode r3;
        java.lang.Object $r4;
        android.graphics.ColorSpace $r6;

        r0 := @this: android.graphics.RadialGradient;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        r1 := @parameter3: long[];

        r2 := @parameter4: float[];

        r3 := @parameter5: android.graphics.Shader$TileMode;

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Object clone()>();

        $r5 = (long[]) $r4;

        $r6 = staticinvoke <android.graphics.RadialGradient: android.graphics.ColorSpace detectColorSpace(long[])>(r1);

        specialinvoke r0.<android.graphics.RadialGradient: void <init>(float,float,float,long[],float[],android.graphics.Shader$TileMode,android.graphics.ColorSpace)>(f0, f1, f2, $r5, r2, r3, $r6);

        return;
    }

    private void <init>(float, float, float, long[], float[], android.graphics.Shader$TileMode, android.graphics.ColorSpace)
    {
        android.graphics.RadialGradient r0;
        float f0, f1, f2;
        float[] r1, r8;
        android.graphics.Shader$TileMode r2;
        android.graphics.ColorSpace r3;
        byte $b0;
        java.lang.IllegalArgumentException $r4, $r6;
        java.lang.Object $r5;
        int $i1, $i2;
        long[] r7;

        r0 := @this: android.graphics.RadialGradient;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        r7 := @parameter3: long[];

        r1 := @parameter4: float[];

        r2 := @parameter5: android.graphics.Shader$TileMode;

        r3 := @parameter6: android.graphics.ColorSpace;

        specialinvoke r0.<android.graphics.Shader: void <init>(android.graphics.ColorSpace)>(r3);

        $b0 = f2 cmpg 0.0F;

        if $b0 <= 0 goto label5;

        if r1 == null goto label2;

        $i2 = lengthof r7;

        $i1 = lengthof r1;

        if $i2 != $i1 goto label1;

        goto label2;

     label1:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("color and position arrays must be of equal length");

        throw $r6;

     label2:
        r0.<android.graphics.RadialGradient: float mX> = f0;

        r0.<android.graphics.RadialGradient: float mY> = f1;

        r0.<android.graphics.RadialGradient: float mRadius> = f2;

        r0.<android.graphics.RadialGradient: long[] mColorLongs> = r7;

        if r1 == null goto label3;

        $r5 = virtualinvoke r1.<java.lang.Object: java.lang.Object clone()>();

        r8 = (float[]) $r5;

        goto label4;

     label3:
        r8 = null;

     label4:
        r0.<android.graphics.RadialGradient: float[] mPositions> = r8;

        r0.<android.graphics.RadialGradient: android.graphics.Shader$TileMode mTileMode> = r2;

        return;

     label5:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("radius must be > 0");

        throw $r4;
    }

    private static native long nativeCreate(long, float, float, float, long[], float[], int, long);

    long createNativeInstance(long)
    {
        android.graphics.RadialGradient r0;
        long l0, $l2, $l3;
        android.graphics.Shader$TileMode $r1;
        float $f0, $f1, $f2;
        long[] $r2;
        float[] $r3;
        int $i1;
        android.graphics.ColorSpace $r4;

        r0 := @this: android.graphics.RadialGradient;

        l0 := @parameter0: long;

        $f0 = r0.<android.graphics.RadialGradient: float mX>;

        $f1 = r0.<android.graphics.RadialGradient: float mY>;

        $f2 = r0.<android.graphics.RadialGradient: float mRadius>;

        $r2 = r0.<android.graphics.RadialGradient: long[] mColorLongs>;

        $r3 = r0.<android.graphics.RadialGradient: float[] mPositions>;

        $r1 = r0.<android.graphics.RadialGradient: android.graphics.Shader$TileMode mTileMode>;

        $i1 = $r1.<android.graphics.Shader$TileMode: int nativeInt>;

        $r4 = virtualinvoke r0.<android.graphics.RadialGradient: android.graphics.ColorSpace colorSpace()>();

        $l2 = virtualinvoke $r4.<android.graphics.ColorSpace: long getNativeInstance()>();

        $l3 = staticinvoke <android.graphics.RadialGradient: long nativeCreate(long,float,float,float,long[],float[],int,long)>(l0, $f0, $f1, $f2, $r2, $r3, $i1, $l2);

        return $l3;
    }
}
