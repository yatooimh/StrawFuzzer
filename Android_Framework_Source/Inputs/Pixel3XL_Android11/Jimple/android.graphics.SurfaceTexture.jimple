public class android.graphics.SurfaceTexture extends java.lang.Object
{
    private final android.os.Looper mCreatorLooper;
    private long mFrameAvailableListener;
    private boolean mIsSingleBuffered;
    private android.os.Handler mOnFrameAvailableHandler;
    private long mProducer;
    private long mSurfaceTexture;

    public void <init>(int)
    {
        android.graphics.SurfaceTexture r0;
        int i0;

        r0 := @this: android.graphics.SurfaceTexture;

        i0 := @parameter0: int;

        specialinvoke r0.<android.graphics.SurfaceTexture: void <init>(int,boolean)>(i0, 0);

        return;
    }

    public void <init>(int, boolean)
    {
        android.graphics.SurfaceTexture r0;
        int i0;
        boolean z0;
        android.os.Looper $r1;
        java.lang.ref.WeakReference $r2;

        r0 := @this: android.graphics.SurfaceTexture;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        r0.<android.graphics.SurfaceTexture: android.os.Looper mCreatorLooper> = $r1;

        r0.<android.graphics.SurfaceTexture: boolean mIsSingleBuffered> = z0;

        $r2 = new java.lang.ref.WeakReference;

        specialinvoke $r2.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r0);

        specialinvoke r0.<android.graphics.SurfaceTexture: void nativeInit(boolean,int,boolean,java.lang.ref.WeakReference)>(0, i0, z0, $r2);

        return;
    }

    public void <init>(boolean)
    {
        android.graphics.SurfaceTexture r0;
        boolean z0;
        android.os.Looper $r1;
        java.lang.ref.WeakReference $r2;

        r0 := @this: android.graphics.SurfaceTexture;

        z0 := @parameter0: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        r0.<android.graphics.SurfaceTexture: android.os.Looper mCreatorLooper> = $r1;

        r0.<android.graphics.SurfaceTexture: boolean mIsSingleBuffered> = z0;

        $r2 = new java.lang.ref.WeakReference;

        specialinvoke $r2.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r0);

        specialinvoke r0.<android.graphics.SurfaceTexture: void nativeInit(boolean,int,boolean,java.lang.ref.WeakReference)>(1, 0, z0, $r2);

        return;
    }

    private native int nativeAttachToGLContext(int);

    private native int nativeDetachFromGLContext();

    private native void nativeFinalize();

    private native long nativeGetTimestamp();

    private native void nativeGetTransformMatrix(float[]);

    private native void nativeInit(boolean, int, boolean, java.lang.ref.WeakReference) throws android.view.Surface$OutOfResourcesException;

    private native boolean nativeIsReleased();

    private native void nativeRelease();

    private native void nativeReleaseTexImage();

    private native void nativeSetDefaultBufferSize(int, int);

    private native void nativeUpdateTexImage();

    private static void postEventFromNative(java.lang.ref.WeakReference)
    {
        java.lang.Object $r0;
        java.lang.ref.WeakReference r1;
        android.graphics.SurfaceTexture r2;
        android.os.Handler r3;

        r1 := @parameter0: java.lang.ref.WeakReference;

        $r0 = virtualinvoke r1.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r2 = (android.graphics.SurfaceTexture) $r0;

        if r2 == null goto label1;

        r3 = r2.<android.graphics.SurfaceTexture: android.os.Handler mOnFrameAvailableHandler>;

        if r3 == null goto label1;

        virtualinvoke r3.<android.os.Handler: boolean sendEmptyMessage(int)>(0);

     label1:
        return;
    }

    public void attachToGLContext(int)
    {
        android.graphics.SurfaceTexture r0;
        int i0, $i1;
        java.lang.RuntimeException $r1;

        r0 := @this: android.graphics.SurfaceTexture;

        i0 := @parameter0: int;

        $i1 = specialinvoke r0.<android.graphics.SurfaceTexture: int nativeAttachToGLContext(int)>(i0);

        if $i1 != 0 goto label1;

        return;

     label1:
        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Error during attachToGLContext (see logcat for details)");

        throw $r1;
    }

    public void detachFromGLContext()
    {
        android.graphics.SurfaceTexture r0;
        int $i0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.graphics.SurfaceTexture;

        $i0 = specialinvoke r0.<android.graphics.SurfaceTexture: int nativeDetachFromGLContext()>();

        if $i0 != 0 goto label1;

        return;

     label1:
        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Error during detachFromGLContext (see logcat for details)");

        throw $r1;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.graphics.SurfaceTexture r0;
        java.lang.Throwable $r2;

        r0 := @this: android.graphics.SurfaceTexture;

     label1:
        specialinvoke r0.<android.graphics.SurfaceTexture: void nativeFinalize()>();

     label2:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        return;

     label3:
        $r2 := @caughtexception;

        specialinvoke r0.<java.lang.Object: void finalize()>();

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public long getTimestamp()
    {
        android.graphics.SurfaceTexture r0;
        long $l0;

        r0 := @this: android.graphics.SurfaceTexture;

        $l0 = specialinvoke r0.<android.graphics.SurfaceTexture: long nativeGetTimestamp()>();

        return $l0;
    }

    public void getTransformMatrix(float[])
    {
        android.graphics.SurfaceTexture r0;
        float[] r1;
        int $i0;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: android.graphics.SurfaceTexture;

        r1 := @parameter0: float[];

        $i0 = lengthof r1;

        if $i0 != 16 goto label1;

        specialinvoke r0.<android.graphics.SurfaceTexture: void nativeGetTransformMatrix(float[])>(r1);

        return;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r2;
    }

    public boolean isReleased()
    {
        android.graphics.SurfaceTexture r0;
        boolean $z0;

        r0 := @this: android.graphics.SurfaceTexture;

        $z0 = specialinvoke r0.<android.graphics.SurfaceTexture: boolean nativeIsReleased()>();

        return $z0;
    }

    public boolean isSingleBuffered()
    {
        android.graphics.SurfaceTexture r0;
        boolean $z0;

        r0 := @this: android.graphics.SurfaceTexture;

        $z0 = r0.<android.graphics.SurfaceTexture: boolean mIsSingleBuffered>;

        return $z0;
    }

    public void release()
    {
        android.graphics.SurfaceTexture r0;

        r0 := @this: android.graphics.SurfaceTexture;

        specialinvoke r0.<android.graphics.SurfaceTexture: void nativeRelease()>();

        return;
    }

    public void releaseTexImage()
    {
        android.graphics.SurfaceTexture r0;

        r0 := @this: android.graphics.SurfaceTexture;

        specialinvoke r0.<android.graphics.SurfaceTexture: void nativeReleaseTexImage()>();

        return;
    }

    public void setDefaultBufferSize(int, int)
    {
        android.graphics.SurfaceTexture r0;
        int i0, i1;

        r0 := @this: android.graphics.SurfaceTexture;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<android.graphics.SurfaceTexture: void nativeSetDefaultBufferSize(int,int)>(i0, i1);

        return;
    }

    public void setOnFrameAvailableListener(android.graphics.SurfaceTexture$OnFrameAvailableListener)
    {
        android.graphics.SurfaceTexture r0;
        android.graphics.SurfaceTexture$OnFrameAvailableListener r1;

        r0 := @this: android.graphics.SurfaceTexture;

        r1 := @parameter0: android.graphics.SurfaceTexture$OnFrameAvailableListener;

        virtualinvoke r0.<android.graphics.SurfaceTexture: void setOnFrameAvailableListener(android.graphics.SurfaceTexture$OnFrameAvailableListener,android.os.Handler)>(r1, null);

        return;
    }

    public void setOnFrameAvailableListener(android.graphics.SurfaceTexture$OnFrameAvailableListener, android.os.Handler)
    {
        android.graphics.SurfaceTexture r0;
        android.graphics.SurfaceTexture$OnFrameAvailableListener r1;
        android.os.Handler r2;
        android.os.Looper r3;
        android.graphics.SurfaceTexture$1 $r4;

        r0 := @this: android.graphics.SurfaceTexture;

        r1 := @parameter0: android.graphics.SurfaceTexture$OnFrameAvailableListener;

        r2 := @parameter1: android.os.Handler;

        if r1 == null goto label4;

        if r2 == null goto label1;

        r3 = virtualinvoke r2.<android.os.Handler: android.os.Looper getLooper()>();

        goto label3;

     label1:
        r3 = r0.<android.graphics.SurfaceTexture: android.os.Looper mCreatorLooper>;

        if r3 == null goto label2;

        goto label3;

     label2:
        r3 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

     label3:
        $r4 = new android.graphics.SurfaceTexture$1;

        specialinvoke $r4.<android.graphics.SurfaceTexture$1: void <init>(android.graphics.SurfaceTexture,android.os.Looper,android.os.Handler$Callback,boolean,android.graphics.SurfaceTexture$OnFrameAvailableListener)>(r0, r3, null, 1, r1);

        r0.<android.graphics.SurfaceTexture: android.os.Handler mOnFrameAvailableHandler> = $r4;

        goto label5;

     label4:
        r0.<android.graphics.SurfaceTexture: android.os.Handler mOnFrameAvailableHandler> = null;

     label5:
        return;
    }

    public void updateTexImage()
    {
        android.graphics.SurfaceTexture r0;

        r0 := @this: android.graphics.SurfaceTexture;

        specialinvoke r0.<android.graphics.SurfaceTexture: void nativeUpdateTexImage()>();

        return;
    }
}
