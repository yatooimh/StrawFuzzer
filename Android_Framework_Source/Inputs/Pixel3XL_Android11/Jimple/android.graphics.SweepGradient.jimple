public class android.graphics.SweepGradient extends android.graphics.Shader
{
    private int mColor0;
    private int mColor1;
    private final long[] mColorLongs;
    private int[] mColors;
    private float mCx;
    private float mCy;
    private float[] mPositions;

    public void <init>(float, float, int, int)
    {
        android.graphics.SweepGradient r0;
        float f0, f1;
        int i0, i1;
        long $l2, $l3;

        r0 := @this: android.graphics.SweepGradient;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $l2 = staticinvoke <android.graphics.Color: long pack(int)>(i0);

        $l3 = staticinvoke <android.graphics.Color: long pack(int)>(i1);

        specialinvoke r0.<android.graphics.SweepGradient: void <init>(float,float,long,long)>(f0, f1, $l2, $l3);

        return;
    }

    public void <init>(float, float, long, long)
    {
        android.graphics.SweepGradient r0;
        float f0, f1;
        long l0, l1;
        long[] $r1;

        r0 := @this: android.graphics.SweepGradient;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        l0 := @parameter2: long;

        l1 := @parameter3: long;

        $r1 = newarray (long)[2];

        $r1[0] = l0;

        $r1[1] = l1;

        specialinvoke r0.<android.graphics.SweepGradient: void <init>(float,float,long[],float[])>(f0, f1, $r1, null);

        return;
    }

    public void <init>(float, float, int[], float[])
    {
        android.graphics.SweepGradient r0;
        float f0, f1;
        int[] r1;
        float[] r2;
        long[] $r3;
        android.graphics.ColorSpace$Named $r4;
        android.graphics.ColorSpace $r5;

        r0 := @this: android.graphics.SweepGradient;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        r1 := @parameter2: int[];

        r2 := @parameter3: float[];

        $r3 = staticinvoke <android.graphics.SweepGradient: long[] convertColors(int[])>(r1);

        $r4 = <android.graphics.ColorSpace$Named: android.graphics.ColorSpace$Named SRGB>;

        $r5 = staticinvoke <android.graphics.ColorSpace: android.graphics.ColorSpace get(android.graphics.ColorSpace$Named)>($r4);

        specialinvoke r0.<android.graphics.SweepGradient: void <init>(float,float,long[],float[],android.graphics.ColorSpace)>(f0, f1, $r3, r2, $r5);

        return;
    }

    public void <init>(float, float, long[], float[])
    {
        android.graphics.SweepGradient r0;
        float f0, f1;
        long[] r1, $r4;
        float[] r2;
        java.lang.Object $r3;
        android.graphics.ColorSpace $r5;

        r0 := @this: android.graphics.SweepGradient;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        r1 := @parameter2: long[];

        r2 := @parameter3: float[];

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Object clone()>();

        $r4 = (long[]) $r3;

        $r5 = staticinvoke <android.graphics.SweepGradient: android.graphics.ColorSpace detectColorSpace(long[])>(r1);

        specialinvoke r0.<android.graphics.SweepGradient: void <init>(float,float,long[],float[],android.graphics.ColorSpace)>(f0, f1, $r4, r2, $r5);

        return;
    }

    private void <init>(float, float, long[], float[], android.graphics.ColorSpace)
    {
        android.graphics.SweepGradient r0;
        float f0, f1;
        float[] r1, r6;
        android.graphics.ColorSpace r2;
        java.lang.Object $r3;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r4;
        long[] r5;

        r0 := @this: android.graphics.SweepGradient;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        r5 := @parameter2: long[];

        r1 := @parameter3: float[];

        r2 := @parameter4: android.graphics.ColorSpace;

        specialinvoke r0.<android.graphics.Shader: void <init>(android.graphics.ColorSpace)>(r2);

        if r1 == null goto label2;

        $i1 = lengthof r5;

        $i0 = lengthof r1;

        if $i1 != $i0 goto label1;

        goto label2;

     label1:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("color and position arrays must be of equal length");

        throw $r4;

     label2:
        r0.<android.graphics.SweepGradient: float mCx> = f0;

        r0.<android.graphics.SweepGradient: float mCy> = f1;

        r0.<android.graphics.SweepGradient: long[] mColorLongs> = r5;

        if r1 == null goto label3;

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Object clone()>();

        r6 = (float[]) $r3;

        goto label4;

     label3:
        r6 = null;

     label4:
        r0.<android.graphics.SweepGradient: float[] mPositions> = r6;

        return;
    }

    private static native long nativeCreate(long, float, float, long[], float[], long);

    long createNativeInstance(long)
    {
        android.graphics.SweepGradient r0;
        long l0, $l1, $l2;
        float $f0, $f1;
        long[] $r1;
        float[] $r2;
        android.graphics.ColorSpace $r3;

        r0 := @this: android.graphics.SweepGradient;

        l0 := @parameter0: long;

        $f0 = r0.<android.graphics.SweepGradient: float mCx>;

        $f1 = r0.<android.graphics.SweepGradient: float mCy>;

        $r1 = r0.<android.graphics.SweepGradient: long[] mColorLongs>;

        $r2 = r0.<android.graphics.SweepGradient: float[] mPositions>;

        $r3 = virtualinvoke r0.<android.graphics.SweepGradient: android.graphics.ColorSpace colorSpace()>();

        $l1 = virtualinvoke $r3.<android.graphics.ColorSpace: long getNativeInstance()>();

        $l2 = staticinvoke <android.graphics.SweepGradient: long nativeCreate(long,float,float,long[],float[],long)>(l0, $f0, $f1, $r1, $r2, $l1);

        return $l2;
    }
}
