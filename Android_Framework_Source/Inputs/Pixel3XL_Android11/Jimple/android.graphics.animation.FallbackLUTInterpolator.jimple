public class android.graphics.animation.FallbackLUTInterpolator extends java.lang.Object implements android.graphics.animation.NativeInterpolator, android.animation.TimeInterpolator
{
    private static final int MAX_SAMPLE_POINTS;
    private final float[] mLut;
    private android.animation.TimeInterpolator mSourceInterpolator;

    public void <init>(android.animation.TimeInterpolator, long)
    {
        android.graphics.animation.FallbackLUTInterpolator r0;
        android.animation.TimeInterpolator r1;
        long l0;
        float[] $r2;

        r0 := @this: android.graphics.animation.FallbackLUTInterpolator;

        r1 := @parameter0: android.animation.TimeInterpolator;

        l0 := @parameter1: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.graphics.animation.FallbackLUTInterpolator: android.animation.TimeInterpolator mSourceInterpolator> = r1;

        $r2 = staticinvoke <android.graphics.animation.FallbackLUTInterpolator: float[] createLUT(android.animation.TimeInterpolator,long)>(r1, l0);

        r0.<android.graphics.animation.FallbackLUTInterpolator: float[] mLut> = $r2;

        return;
    }

    private static float[] createLUT(android.animation.TimeInterpolator, long)
    {
        android.animation.TimeInterpolator r0;
        long l0, $l2, $l3;
        int i1, $i4, $i5, $i6, i7, i8;
        float[] r1;
        float f0, $f1, $f2, $f3;
        android.view.Choreographer $r2;
        double $d0, $d1, $d2, $d3;

        r0 := @parameter0: android.animation.TimeInterpolator;

        l0 := @parameter1: long;

        $r2 = staticinvoke <android.view.Choreographer: android.view.Choreographer getInstance()>();

        $l2 = virtualinvoke $r2.<android.view.Choreographer: long getFrameIntervalNanos()>();

        $l3 = $l2 / 1000000L;

        i7 = (int) $l3;

        $d1 = (double) l0;

        $d0 = (double) i7;

        $d2 = $d1 / $d0;

        $d3 = staticinvoke <java.lang.Math: double ceil(double)>($d2);

        $i4 = (int) $d3;

        $i5 = staticinvoke <java.lang.Math: int max(int,int)>(2, $i4);

        i1 = staticinvoke <java.lang.Math: int min(int,int)>($i5, 300);

        r1 = newarray (float)[i1];

        $i6 = i1 - 1;

        f0 = (float) $i6;

        i8 = 0;

     label1:
        if i8 >= i1 goto label2;

        $f1 = (float) i8;

        $f2 = $f1 / f0;

        $f3 = interfaceinvoke r0.<android.animation.TimeInterpolator: float getInterpolation(float)>($f2);

        r1[i8] = $f3;

        i8 = i8 + 1;

        goto label1;

     label2:
        return r1;
    }

    public static long createNativeInterpolator(android.animation.TimeInterpolator, long)
    {
        android.animation.TimeInterpolator r0;
        long l0, $l1;
        float[] $r1;

        r0 := @parameter0: android.animation.TimeInterpolator;

        l0 := @parameter1: long;

        $r1 = staticinvoke <android.graphics.animation.FallbackLUTInterpolator: float[] createLUT(android.animation.TimeInterpolator,long)>(r0, l0);

        $l1 = staticinvoke <android.graphics.animation.NativeInterpolatorFactory: long createLutInterpolator(float[])>($r1);

        return $l1;
    }

    public long createNativeInterpolator()
    {
        android.graphics.animation.FallbackLUTInterpolator r0;
        float[] $r1;
        long $l0;

        r0 := @this: android.graphics.animation.FallbackLUTInterpolator;

        $r1 = r0.<android.graphics.animation.FallbackLUTInterpolator: float[] mLut>;

        $l0 = staticinvoke <android.graphics.animation.NativeInterpolatorFactory: long createLutInterpolator(float[])>($r1);

        return $l0;
    }

    public float getInterpolation(float)
    {
        android.graphics.animation.FallbackLUTInterpolator r0;
        float f0, $f1;
        android.animation.TimeInterpolator $r1;

        r0 := @this: android.graphics.animation.FallbackLUTInterpolator;

        f0 := @parameter0: float;

        $r1 = r0.<android.graphics.animation.FallbackLUTInterpolator: android.animation.TimeInterpolator mSourceInterpolator>;

        $f1 = interfaceinvoke $r1.<android.animation.TimeInterpolator: float getInterpolation(float)>(f0);

        return $f1;
    }

    public static void <clinit>()
    {
        <android.graphics.animation.FallbackLUTInterpolator: int MAX_SAMPLE_POINTS> = 300;

        return;
    }
}
