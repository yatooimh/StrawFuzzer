public final class android.graphics.animation.NativeInterpolatorFactory extends java.lang.Object
{

    private void <init>()
    {
        android.graphics.animation.NativeInterpolatorFactory r0;

        r0 := @this: android.graphics.animation.NativeInterpolatorFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static native long createAccelerateDecelerateInterpolator();

    public static native long createAccelerateInterpolator(float);

    public static native long createAnticipateInterpolator(float);

    public static native long createAnticipateOvershootInterpolator(float);

    public static native long createBounceInterpolator();

    public static native long createCycleInterpolator(float);

    public static native long createDecelerateInterpolator(float);

    public static native long createLinearInterpolator();

    public static native long createLutInterpolator(float[]);

    public static long createNativeInterpolator(android.animation.TimeInterpolator, long)
    {
        android.animation.TimeInterpolator r0;
        long l0, $l1, $l2, $l3;
        boolean $z0;
        android.graphics.animation.NativeInterpolator $r1;

        r0 := @parameter0: android.animation.TimeInterpolator;

        l0 := @parameter1: long;

        if r0 != null goto label1;

        $l3 = staticinvoke <android.graphics.animation.NativeInterpolatorFactory: long createLinearInterpolator()>();

        return $l3;

     label1:
        $z0 = staticinvoke <android.graphics.animation.RenderNodeAnimator: boolean isNativeInterpolator(android.animation.TimeInterpolator)>(r0);

        if $z0 == 0 goto label2;

        $r1 = (android.graphics.animation.NativeInterpolator) r0;

        $l2 = interfaceinvoke $r1.<android.graphics.animation.NativeInterpolator: long createNativeInterpolator()>();

        return $l2;

     label2:
        $l1 = staticinvoke <android.graphics.animation.FallbackLUTInterpolator: long createNativeInterpolator(android.animation.TimeInterpolator,long)>(r0, l0);

        return $l1;
    }

    public static native long createOvershootInterpolator(float);

    public static native long createPathInterpolator(float[], float[]);
}
