public class android.graphics.drawable.AnimatedImageDrawable extends android.graphics.drawable.Drawable implements android.graphics.drawable.Animatable2
{
    private static final int FINISHED;
    public static final int LOOP_INFINITE;
    public static final int REPEAT_INFINITE;
    private static final int REPEAT_UNDEFINED;
    private java.util.ArrayList mAnimationCallbacks;
    private android.graphics.ColorFilter mColorFilter;
    private android.os.Handler mHandler;
    private int mIntrinsicHeight;
    private int mIntrinsicWidth;
    private java.lang.Runnable mRunnable;
    private boolean mStarting;
    private android.graphics.drawable.AnimatedImageDrawable$State mState;

    public void <init>()
    {
        android.graphics.drawable.AnimatedImageDrawable r0;
        android.graphics.drawable.AnimatedImageDrawable$State $r1;

        r0 := @this: android.graphics.drawable.AnimatedImageDrawable;

        specialinvoke r0.<android.graphics.drawable.Drawable: void <init>()>();

        r0.<android.graphics.drawable.AnimatedImageDrawable: java.util.ArrayList mAnimationCallbacks> = null;

        $r1 = new android.graphics.drawable.AnimatedImageDrawable$State;

        specialinvoke $r1.<android.graphics.drawable.AnimatedImageDrawable$State: void <init>(android.graphics.drawable.AnimatedImageDrawable,long,java.io.InputStream,android.content.res.AssetFileDescriptor)>(r0, 0L, null, null);

        r0.<android.graphics.drawable.AnimatedImageDrawable: android.graphics.drawable.AnimatedImageDrawable$State mState> = $r1;

        return;
    }

    public void <init>(long, android.graphics.ImageDecoder, int, int, long, boolean, int, int, android.graphics.Rect, java.io.InputStream, android.content.res.AssetFileDescriptor) throws java.io.IOException
    {
        android.graphics.drawable.AnimatedImageDrawable r0;
        long l0, $l13, $l14, $l15, $l16, l17, l22;
        boolean z0;
        int i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i18, i19, i20, i21;
        java.io.InputStream r1;
        android.content.res.AssetFileDescriptor r2;
        android.graphics.drawable.AnimatedImageDrawable$State $r3, r11;
        java.lang.Class $r4;
        java.lang.ClassLoader $r5;
        android.graphics.ImageDecoder r7;
        android.graphics.Rect r8;
        libcore.util.NativeAllocationRegistry r10;

        r0 := @this: android.graphics.drawable.AnimatedImageDrawable;

        l17 := @parameter0: long;

        r7 := @parameter1: android.graphics.ImageDecoder;

        i18 := @parameter2: int;

        i19 := @parameter3: int;

        l0 := @parameter4: long;

        z0 := @parameter5: boolean;

        i1 := @parameter6: int;

        i2 := @parameter7: int;

        r8 := @parameter8: android.graphics.Rect;

        r1 := @parameter9: java.io.InputStream;

        r2 := @parameter10: android.content.res.AssetFileDescriptor;

        specialinvoke r0.<android.graphics.drawable.Drawable: void <init>()>();

        r0.<android.graphics.drawable.AnimatedImageDrawable: java.util.ArrayList mAnimationCallbacks> = null;

        i20 = staticinvoke <android.graphics.Bitmap: int scaleFromDensity(int,int,int)>(i18, i1, i2);

        i21 = staticinvoke <android.graphics.Bitmap: int scaleFromDensity(int,int,int)>(i19, i1, i2);

        if r8 != null goto label1;

        r0.<android.graphics.drawable.AnimatedImageDrawable: int mIntrinsicWidth> = i20;

        r0.<android.graphics.drawable.AnimatedImageDrawable: int mIntrinsicHeight> = i21;

        goto label2;

     label1:
        $i3 = r8.<android.graphics.Rect: int left>;

        $i4 = staticinvoke <android.graphics.Bitmap: int scaleFromDensity(int,int,int)>($i3, i1, i2);

        $i5 = r8.<android.graphics.Rect: int top>;

        $i6 = staticinvoke <android.graphics.Bitmap: int scaleFromDensity(int,int,int)>($i5, i1, i2);

        $i7 = r8.<android.graphics.Rect: int right>;

        $i8 = staticinvoke <android.graphics.Bitmap: int scaleFromDensity(int,int,int)>($i7, i1, i2);

        $i9 = r8.<android.graphics.Rect: int bottom>;

        $i10 = staticinvoke <android.graphics.Bitmap: int scaleFromDensity(int,int,int)>($i9, i1, i2);

        virtualinvoke r8.<android.graphics.Rect: void set(int,int,int,int)>($i4, $i6, $i8, $i10);

        $i11 = virtualinvoke r8.<android.graphics.Rect: int width()>();

        r0.<android.graphics.drawable.AnimatedImageDrawable: int mIntrinsicWidth> = $i11;

        $i12 = virtualinvoke r8.<android.graphics.Rect: int height()>();

        r0.<android.graphics.drawable.AnimatedImageDrawable: int mIntrinsicHeight> = $i12;

     label2:
        $r3 = new android.graphics.drawable.AnimatedImageDrawable$State;

        $l13 = staticinvoke <android.graphics.drawable.AnimatedImageDrawable: long nCreate(long,android.graphics.ImageDecoder,int,int,long,boolean,android.graphics.Rect)>(l17, r7, i20, i21, l0, z0, r8);

        specialinvoke $r3.<android.graphics.drawable.AnimatedImageDrawable$State: void <init>(android.graphics.drawable.AnimatedImageDrawable,long,java.io.InputStream,android.content.res.AssetFileDescriptor)>(r0, $l13, r1, r2);

        r0.<android.graphics.drawable.AnimatedImageDrawable: android.graphics.drawable.AnimatedImageDrawable$State mState> = $r3;

        $l14 = $r3.<android.graphics.drawable.AnimatedImageDrawable$State: long mNativePtr>;

        l22 = staticinvoke <android.graphics.drawable.AnimatedImageDrawable: long nNativeByteSize(long)>($l14);

        $r4 = class "Landroid/graphics/drawable/AnimatedImageDrawable;";

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $l15 = staticinvoke <android.graphics.drawable.AnimatedImageDrawable: long nGetNativeFinalizer()>();

        r10 = staticinvoke <libcore.util.NativeAllocationRegistry: libcore.util.NativeAllocationRegistry createMalloced(java.lang.ClassLoader,long,long)>($r5, $l15, l22);

        r11 = r0.<android.graphics.drawable.AnimatedImageDrawable: android.graphics.drawable.AnimatedImageDrawable$State mState>;

        $l16 = r11.<android.graphics.drawable.AnimatedImageDrawable$State: long mNativePtr>;

        virtualinvoke r10.<libcore.util.NativeAllocationRegistry: java.lang.Runnable registerNativeAllocation(java.lang.Object,long)>(r11, $l16);

        return;
    }

    private android.os.Handler getHandler()
    {
        android.graphics.drawable.AnimatedImageDrawable r0;
        android.os.Handler $r1, $r2, $r3;
        android.os.Looper $r4;

        r0 := @this: android.graphics.drawable.AnimatedImageDrawable;

        $r1 = r0.<android.graphics.drawable.AnimatedImageDrawable: android.os.Handler mHandler>;

        if $r1 != null goto label1;

        $r3 = new android.os.Handler;

        $r4 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke $r3.<android.os.Handler: void <init>(android.os.Looper)>($r4);

        r0.<android.graphics.drawable.AnimatedImageDrawable: android.os.Handler mHandler> = $r3;

     label1:
        $r2 = r0.<android.graphics.drawable.AnimatedImageDrawable: android.os.Handler mHandler>;

        return $r2;
    }

    static void lambda$updateStateFromTypedArray$0(android.graphics.ImageDecoder, android.graphics.ImageDecoder$ImageInfo, android.graphics.ImageDecoder$Source)
    {
        android.graphics.ImageDecoder r0;
        android.graphics.ImageDecoder$ImageInfo r1;
        android.graphics.ImageDecoder$Source r2;
        boolean $z0;
        java.lang.IllegalArgumentException $r3;

        r0 := @parameter0: android.graphics.ImageDecoder;

        r1 := @parameter1: android.graphics.ImageDecoder$ImageInfo;

        r2 := @parameter2: android.graphics.ImageDecoder$Source;

        $z0 = virtualinvoke r1.<android.graphics.ImageDecoder$ImageInfo: boolean isAnimated()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("image is not animated");

        throw $r3;
    }

    private static native long nCreate(long, android.graphics.ImageDecoder, int, int, long, boolean, android.graphics.Rect) throws java.io.IOException;

    private static native long nDraw(long, long);

    private static native int nGetAlpha(long);

    private static native long nGetNativeFinalizer();

    private static native int nGetRepeatCount(long);

    private static native boolean nIsRunning(long);

    private static native long nNativeByteSize(long);

    private static native void nSetAlpha(long, int);

    private static native void nSetColorFilter(long, long);

    private static native void nSetMirrored(long, boolean);

    private static native void nSetOnAnimationEndListener(long, android.graphics.drawable.AnimatedImageDrawable);

    private static native void nSetRepeatCount(long, int);

    private static native boolean nStart(long);

    private static native boolean nStop(long);

    private void onAnimationEnd()
    {
        android.graphics.drawable.AnimatedImageDrawable r0;
        boolean $z0;
        java.lang.Object $r1;
        android.graphics.drawable.Animatable2$AnimationCallback $r2;
        java.util.ArrayList r3;
        java.util.Iterator r4;

        r0 := @this: android.graphics.drawable.AnimatedImageDrawable;

        r3 = r0.<android.graphics.drawable.AnimatedImageDrawable: java.util.ArrayList mAnimationCallbacks>;

        if r3 == null goto label2;

        r4 = virtualinvoke r3.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r1 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        $r2 = (android.graphics.drawable.Animatable2$AnimationCallback) $r1;

        virtualinvoke $r2.<android.graphics.drawable.Animatable2$AnimationCallback: void onAnimationEnd(android.graphics.drawable.Drawable)>(r0);

        goto label1;

     label2:
        return;
    }

    private void postOnAnimationEnd()
    {
        android.graphics.drawable.AnimatedImageDrawable r0;
        java.util.ArrayList $r1;
        android.os.Handler $r2;
        android.graphics.drawable._$$Lambda$AnimatedImageDrawable$dGAkP_tKNvqn_qCWdrQRL806ExQ $r3;

        r0 := @this: android.graphics.drawable.AnimatedImageDrawable;

        $r1 = r0.<android.graphics.drawable.AnimatedImageDrawable: java.util.ArrayList mAnimationCallbacks>;

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = specialinvoke r0.<android.graphics.drawable.AnimatedImageDrawable: android.os.Handler getHandler()>();

        $r3 = new android.graphics.drawable._$$Lambda$AnimatedImageDrawable$dGAkP_tKNvqn_qCWdrQRL806ExQ;

        specialinvoke $r3.<android.graphics.drawable._$$Lambda$AnimatedImageDrawable$dGAkP_tKNvqn_qCWdrQRL806ExQ: void <init>(android.graphics.drawable.AnimatedImageDrawable)>(r0);

        virtualinvoke $r2.<android.os.Handler: boolean post(java.lang.Runnable)>($r3);

        return;
    }

    private void postOnAnimationStart()
    {
        android.graphics.drawable.AnimatedImageDrawable r0;
        java.util.ArrayList $r1;
        android.os.Handler $r2;
        android.graphics.drawable._$$Lambda$AnimatedImageDrawable$6aWLU8OYhdfACSejz5_iGirYxUk $r3;

        r0 := @this: android.graphics.drawable.AnimatedImageDrawable;

        $r1 = r0.<android.graphics.drawable.AnimatedImageDrawable: java.util.ArrayList mAnimationCallbacks>;

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = specialinvoke r0.<android.graphics.drawable.AnimatedImageDrawable: android.os.Handler getHandler()>();

        $r3 = new android.graphics.drawable._$$Lambda$AnimatedImageDrawable$6aWLU8OYhdfACSejz5_iGirYxUk;

        specialinvoke $r3.<android.graphics.drawable._$$Lambda$AnimatedImageDrawable$6aWLU8OYhdfACSejz5_iGirYxUk: void <init>(android.graphics.drawable.AnimatedImageDrawable)>(r0);

        virtualinvoke $r2.<android.os.Handler: boolean post(java.lang.Runnable)>($r3);

        return;
    }

    private void updateStateFromTypedArray(android.content.res.TypedArray, int) throws org.xmlpull.v1.XmlPullParserException
    {
        android.graphics.drawable.AnimatedImageDrawable r0, r39;
        android.content.res.TypedArray r1;
        android.content.res.Resources r2;
        int i0, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, i16, $i17, i18, i21;
        boolean $z0, $z1, $z2, $z3;
        android.graphics.drawable.AnimatedImageDrawable$State $r3, $r4, $r5, $r13, $r22, $r23, r33, $r43, $r45;
        long $l1, $l19;
        byte $b2, $b20;
        int[] $r6, $r14, $r44;
        java.lang.String $r8, $r12, $r17, $r21, $r28, $r32;
        android.util.DisplayMetrics $r24, $r25;
        java.lang.Throwable $r26, r55, r56, r57;
        java.io.InputStream $r35;
        android.graphics.ImageDecoder$Source $r36;
        android.graphics.drawable.'-$$Lambda$AnimatedImageDrawable$Cgt3NliB7ZYUONyDd-eQGdYbEKc' $r37;
        android.graphics.drawable.Drawable r38;
        android.util.TypedValue r47;
        java.lang.StringBuilder r48, r50, r52;
        org.xmlpull.v1.XmlPullParserException r49, r51, r53;
        android.graphics.ImageDecoder$OnHeaderDecodedListener r54;

        r0 := @this: android.graphics.drawable.AnimatedImageDrawable;

        r1 := @parameter0: android.content.res.TypedArray;

        i15 := @parameter1: int;

        r33 = r0.<android.graphics.drawable.AnimatedImageDrawable: android.graphics.drawable.AnimatedImageDrawable$State mState>;

        r2 = virtualinvoke r1.<android.content.res.TypedArray: android.content.res.Resources getResources()>();

        i0 = virtualinvoke r1.<android.content.res.TypedArray: int getResourceId(int,int)>(0, 0);

        if i0 == 0 goto label08;

        r47 = new android.util.TypedValue;

        specialinvoke r47.<android.util.TypedValue: void <init>()>();

        virtualinvoke r2.<android.content.res.Resources: void getValueForDensity(int,int,android.util.TypedValue,boolean)>(i0, i15, r47, 1);

        if i15 <= 0 goto label02;

        $i7 = r47.<android.util.TypedValue: int density>;

        if $i7 <= 0 goto label02;

        $i8 = r47.<android.util.TypedValue: int density>;

        if $i8 == 65535 goto label02;

        $i9 = r47.<android.util.TypedValue: int density>;

        if $i9 != i15 goto label01;

        $r25 = virtualinvoke r2.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $i14 = $r25.<android.util.DisplayMetrics: int densityDpi>;

        r47.<android.util.TypedValue: int density> = $i14;

        goto label02;

     label01:
        $i10 = r47.<android.util.TypedValue: int density>;

        $r24 = virtualinvoke r2.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $i11 = $r24.<android.util.DisplayMetrics: int densityDpi>;

        $i12 = $i10 * $i11;

        $i13 = $i12 / i15;

        r47.<android.util.TypedValue: int density> = $i13;

     label02:
        i16 = 0;

        $i17 = r47.<android.util.TypedValue: int density>;

        if $i17 != 0 goto label03;

        i16 = 160;

        goto label04;

     label03:
        $i4 = r47.<android.util.TypedValue: int density>;

        if $i4 == 65535 goto label04;

        i16 = r47.<android.util.TypedValue: int density>;

     label04:
        $r35 = virtualinvoke r2.<android.content.res.Resources: java.io.InputStream openRawResource(int,android.util.TypedValue)>(i0, r47);

        $r36 = staticinvoke <android.graphics.ImageDecoder: android.graphics.ImageDecoder$Source createSource(android.content.res.Resources,java.io.InputStream,int)>(r2, $r35, i16);

        $r37 = <android.graphics.drawable._$$Lambda$AnimatedImageDrawable$Cgt3NliB7ZYUONyDd_eQGdYbEKc: android.graphics.drawable.'-$$Lambda$AnimatedImageDrawable$Cgt3NliB7ZYUONyDd-eQGdYbEKc' INSTANCE>;

        r54 = (android.graphics.ImageDecoder$OnHeaderDecodedListener) $r37;

        r38 = staticinvoke <android.graphics.ImageDecoder: android.graphics.drawable.Drawable decodeDrawable(android.graphics.ImageDecoder$Source,android.graphics.ImageDecoder$OnHeaderDecodedListener)>($r36, r54);

     label05:
        $z3 = r38 instanceof android.graphics.drawable.AnimatedImageDrawable;

        if $z3 == 0 goto label06;

        $r22 = r0.<android.graphics.drawable.AnimatedImageDrawable: android.graphics.drawable.AnimatedImageDrawable$State mState>;

        i18 = $r22.<android.graphics.drawable.AnimatedImageDrawable$State: int mRepeatCount>;

        r39 = (android.graphics.drawable.AnimatedImageDrawable) r38;

        $r23 = r39.<android.graphics.drawable.AnimatedImageDrawable: android.graphics.drawable.AnimatedImageDrawable$State mState>;

        r0.<android.graphics.drawable.AnimatedImageDrawable: android.graphics.drawable.AnimatedImageDrawable$State mState> = $r23;

        r39.<android.graphics.drawable.AnimatedImageDrawable: android.graphics.drawable.AnimatedImageDrawable$State mState> = null;

        $i5 = r39.<android.graphics.drawable.AnimatedImageDrawable: int mIntrinsicWidth>;

        r0.<android.graphics.drawable.AnimatedImageDrawable: int mIntrinsicWidth> = $i5;

        $i6 = r39.<android.graphics.drawable.AnimatedImageDrawable: int mIntrinsicHeight>;

        r0.<android.graphics.drawable.AnimatedImageDrawable: int mIntrinsicHeight> = $i6;

        if i18 == -2 goto label08;

        virtualinvoke r0.<android.graphics.drawable.AnimatedImageDrawable: void setRepeatCount(int)>(i18);

        goto label08;

     label06:
        r48 = new java.lang.StringBuilder;

        specialinvoke r48.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke r1.<android.content.res.TypedArray: java.lang.String getPositionDescription()>();

        virtualinvoke r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        virtualinvoke r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": <animated-image> did not decode animated");

        r49 = new org.xmlpull.v1.XmlPullParserException;

        $r21 = virtualinvoke r48.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r49.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r21);

        r55 = (java.lang.Throwable) r49;

        throw r55;

     label07:
        $r26 := @caughtexception;

        r50 = new java.lang.StringBuilder;

        specialinvoke r50.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke r1.<android.content.res.TypedArray: java.lang.String getPositionDescription()>();

        virtualinvoke r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        virtualinvoke r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": <animated-image> requires a valid \'src\' attribute");

        r51 = new org.xmlpull.v1.XmlPullParserException;

        $r32 = virtualinvoke r50.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r51.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String,org.xmlpull.v1.XmlPullParser,java.lang.Throwable)>($r32, null, $r26);

        r56 = (java.lang.Throwable) r51;

        throw r56;

     label08:
        $r43 = r0.<android.graphics.drawable.AnimatedImageDrawable: android.graphics.drawable.AnimatedImageDrawable$State mState>;

        $r44 = virtualinvoke r1.<android.content.res.TypedArray: int[] extractThemeAttrs()>();

        $r43.<android.graphics.drawable.AnimatedImageDrawable$State: int[] mThemeAttrs> = $r44;

        $r45 = r0.<android.graphics.drawable.AnimatedImageDrawable: android.graphics.drawable.AnimatedImageDrawable$State mState>;

        $l19 = $r45.<android.graphics.drawable.AnimatedImageDrawable$State: long mNativePtr>;

        $b20 = $l19 cmp 0L;

        if $b20 != 0 goto label10;

        $r5 = r0.<android.graphics.drawable.AnimatedImageDrawable: android.graphics.drawable.AnimatedImageDrawable$State mState>;

        $r6 = $r5.<android.graphics.drawable.AnimatedImageDrawable$State: int[] mThemeAttrs>;

        if $r6 == null goto label09;

        $r13 = r0.<android.graphics.drawable.AnimatedImageDrawable: android.graphics.drawable.AnimatedImageDrawable$State mState>;

        $r14 = $r13.<android.graphics.drawable.AnimatedImageDrawable$State: int[] mThemeAttrs>;

        $i3 = $r14[0];

        if $i3 == 0 goto label09;

        goto label10;

     label09:
        r52 = new java.lang.StringBuilder;

        specialinvoke r52.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke r1.<android.content.res.TypedArray: java.lang.String getPositionDescription()>();

        virtualinvoke r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": <animated-image> requires a valid \'src\' attribute");

        r53 = new org.xmlpull.v1.XmlPullParserException;

        $r12 = virtualinvoke r52.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r53.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r12);

        r57 = (java.lang.Throwable) r53;

        throw r57;

     label10:
        $r3 = r0.<android.graphics.drawable.AnimatedImageDrawable: android.graphics.drawable.AnimatedImageDrawable$State mState>;

        $z0 = r33.<android.graphics.drawable.AnimatedImageDrawable$State: boolean mAutoMirrored>;

        $z1 = virtualinvoke r1.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(3, $z0);

        $r3.<android.graphics.drawable.AnimatedImageDrawable$State: boolean mAutoMirrored> = $z1;

        i21 = virtualinvoke r1.<android.content.res.TypedArray: int getInt(int,int)>(1, -2);

        if i21 == -2 goto label11;

        virtualinvoke r0.<android.graphics.drawable.AnimatedImageDrawable: void setRepeatCount(int)>(i21);

     label11:
        $z2 = virtualinvoke r1.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(2, 0);

        if $z2 == 0 goto label12;

        $r4 = r0.<android.graphics.drawable.AnimatedImageDrawable: android.graphics.drawable.AnimatedImageDrawable$State mState>;

        $l1 = $r4.<android.graphics.drawable.AnimatedImageDrawable$State: long mNativePtr>;

        $b2 = $l1 cmp 0L;

        if $b2 == 0 goto label12;

        virtualinvoke r0.<android.graphics.drawable.AnimatedImageDrawable: void start()>();

     label12:
        return;

        catch java.io.IOException from label04 to label05 with label07;
    }

    public void clearAnimationCallbacks()
    {
        android.graphics.drawable.AnimatedImageDrawable r0;
        java.util.ArrayList $r1;
        android.graphics.drawable.AnimatedImageDrawable$State $r2;
        long $l0;

        r0 := @this: android.graphics.drawable.AnimatedImageDrawable;

        $r1 = r0.<android.graphics.drawable.AnimatedImageDrawable: java.util.ArrayList mAnimationCallbacks>;

        if $r1 == null goto label1;

        r0.<android.graphics.drawable.AnimatedImageDrawable: java.util.ArrayList mAnimationCallbacks> = null;

        $r2 = r0.<android.graphics.drawable.AnimatedImageDrawable: android.graphics.drawable.AnimatedImageDrawable$State mState>;

        $l0 = $r2.<android.graphics.drawable.AnimatedImageDrawable$State: long mNativePtr>;

        staticinvoke <android.graphics.drawable.AnimatedImageDrawable: void nSetOnAnimationEndListener(long,android.graphics.drawable.AnimatedImageDrawable)>($l0, null);

     label1:
        return;
    }

    public void draw(android.graphics.Canvas)
    {
        android.graphics.drawable.AnimatedImageDrawable r0;
        android.graphics.Canvas r1;
        long l0, $l1, $l3, $l4, $l7, $l8;
        android.graphics.drawable.AnimatedImageDrawable$State $r2, $r4;
        byte $b2, $b5, $b6;
        java.lang.IllegalStateException $r3;
        boolean $z0;
        java.lang.Runnable $r5, $r6;
        android.graphics.drawable._$$Lambda$AlQeVq8Y_kfuQeb_JLZ0ueV4DE8 $r7;

        r0 := @this: android.graphics.drawable.AnimatedImageDrawable;

        r1 := @parameter0: android.graphics.Canvas;

        $r2 = r0.<android.graphics.drawable.AnimatedImageDrawable: android.graphics.drawable.AnimatedImageDrawable$State mState>;

        $l1 = $r2.<android.graphics.drawable.AnimatedImageDrawable$State: long mNativePtr>;

        $b2 = $l1 cmp 0L;

        if $b2 == 0 goto label5;

        $z0 = r0.<android.graphics.drawable.AnimatedImageDrawable: boolean mStarting>;

        if $z0 == 0 goto label1;

        r0.<android.graphics.drawable.AnimatedImageDrawable: boolean mStarting> = 0;

        specialinvoke r0.<android.graphics.drawable.AnimatedImageDrawable: void postOnAnimationStart()>();

     label1:
        $r4 = r0.<android.graphics.drawable.AnimatedImageDrawable: android.graphics.drawable.AnimatedImageDrawable$State mState>;

        $l3 = $r4.<android.graphics.drawable.AnimatedImageDrawable$State: long mNativePtr>;

        $l4 = virtualinvoke r1.<android.graphics.Canvas: long getNativeCanvasWrapper()>();

        l0 = staticinvoke <android.graphics.drawable.AnimatedImageDrawable: long nDraw(long,long)>($l3, $l4);

        $b5 = l0 cmp 0L;

        if $b5 <= 0 goto label3;

        $r5 = r0.<android.graphics.drawable.AnimatedImageDrawable: java.lang.Runnable mRunnable>;

        if $r5 != null goto label2;

        $r7 = new android.graphics.drawable._$$Lambda$AlQeVq8Y_kfuQeb_JLZ0ueV4DE8;

        specialinvoke $r7.<android.graphics.drawable._$$Lambda$AlQeVq8Y_kfuQeb_JLZ0ueV4DE8: void <init>(android.graphics.drawable.AnimatedImageDrawable)>(r0);

        r0.<android.graphics.drawable.AnimatedImageDrawable: java.lang.Runnable mRunnable> = $r7;

     label2:
        $r6 = r0.<android.graphics.drawable.AnimatedImageDrawable: java.lang.Runnable mRunnable>;

        $l7 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l8 = $l7 + l0;

        virtualinvoke r0.<android.graphics.drawable.AnimatedImageDrawable: void scheduleSelf(java.lang.Runnable,long)>($r6, $l8);

        goto label4;

     label3:
        $b6 = l0 cmp -1L;

        if $b6 != 0 goto label4;

        specialinvoke r0.<android.graphics.drawable.AnimatedImageDrawable: void postOnAnimationEnd()>();

     label4:
        return;

     label5:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("called draw on empty AnimatedImageDrawable");

        throw $r3;
    }

    public int getAlpha()
    {
        android.graphics.drawable.AnimatedImageDrawable r0;
        android.graphics.drawable.AnimatedImageDrawable$State $r1, $r3;
        long $l0, $l2;
        byte $b1;
        java.lang.IllegalStateException $r2;
        int $i3;

        r0 := @this: android.graphics.drawable.AnimatedImageDrawable;

        $r1 = r0.<android.graphics.drawable.AnimatedImageDrawable: android.graphics.drawable.AnimatedImageDrawable$State mState>;

        $l0 = $r1.<android.graphics.drawable.AnimatedImageDrawable$State: long mNativePtr>;

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label1;

        $r3 = r0.<android.graphics.drawable.AnimatedImageDrawable: android.graphics.drawable.AnimatedImageDrawable$State mState>;

        $l2 = $r3.<android.graphics.drawable.AnimatedImageDrawable$State: long mNativePtr>;

        $i3 = staticinvoke <android.graphics.drawable.AnimatedImageDrawable: int nGetAlpha(long)>($l2);

        return $i3;

     label1:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("called getAlpha on empty AnimatedImageDrawable");

        throw $r2;
    }

    public android.graphics.ColorFilter getColorFilter()
    {
        android.graphics.drawable.AnimatedImageDrawable r0;
        android.graphics.ColorFilter $r1;

        r0 := @this: android.graphics.drawable.AnimatedImageDrawable;

        $r1 = r0.<android.graphics.drawable.AnimatedImageDrawable: android.graphics.ColorFilter mColorFilter>;

        return $r1;
    }

    public int getIntrinsicHeight()
    {
        android.graphics.drawable.AnimatedImageDrawable r0;
        int $i0;

        r0 := @this: android.graphics.drawable.AnimatedImageDrawable;

        $i0 = r0.<android.graphics.drawable.AnimatedImageDrawable: int mIntrinsicHeight>;

        return $i0;
    }

    public int getIntrinsicWidth()
    {
        android.graphics.drawable.AnimatedImageDrawable r0;
        int $i0;

        r0 := @this: android.graphics.drawable.AnimatedImageDrawable;

        $i0 = r0.<android.graphics.drawable.AnimatedImageDrawable: int mIntrinsicWidth>;

        return $i0;
    }

    public int getLoopCount(int)
    {
        android.graphics.drawable.AnimatedImageDrawable r0;
        int i0, $i1;

        r0 := @this: android.graphics.drawable.AnimatedImageDrawable;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<android.graphics.drawable.AnimatedImageDrawable: int getRepeatCount()>();

        return $i1;
    }

    public int getOpacity()
    {
        android.graphics.drawable.AnimatedImageDrawable r0;

        r0 := @this: android.graphics.drawable.AnimatedImageDrawable;

        return -3;
    }

    public int getRepeatCount()
    {
        android.graphics.drawable.AnimatedImageDrawable r0;
        android.graphics.drawable.AnimatedImageDrawable$State r1, $r2, $r4, $r5;
        long $l0, $l4;
        byte $b1;
        java.lang.IllegalStateException $r3;
        int $i2, $i3, $i5;

        r0 := @this: android.graphics.drawable.AnimatedImageDrawable;

        $r2 = r0.<android.graphics.drawable.AnimatedImageDrawable: android.graphics.drawable.AnimatedImageDrawable$State mState>;

        $l0 = $r2.<android.graphics.drawable.AnimatedImageDrawable$State: long mNativePtr>;

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label2;

        $r4 = r0.<android.graphics.drawable.AnimatedImageDrawable: android.graphics.drawable.AnimatedImageDrawable$State mState>;

        $i2 = $r4.<android.graphics.drawable.AnimatedImageDrawable$State: int mRepeatCount>;

        if $i2 != -2 goto label1;

        r1 = r0.<android.graphics.drawable.AnimatedImageDrawable: android.graphics.drawable.AnimatedImageDrawable$State mState>;

        $l4 = r1.<android.graphics.drawable.AnimatedImageDrawable$State: long mNativePtr>;

        $i5 = staticinvoke <android.graphics.drawable.AnimatedImageDrawable: int nGetRepeatCount(long)>($l4);

        r1.<android.graphics.drawable.AnimatedImageDrawable$State: int mRepeatCount> = $i5;

     label1:
        $r5 = r0.<android.graphics.drawable.AnimatedImageDrawable: android.graphics.drawable.AnimatedImageDrawable$State mState>;

        $i3 = $r5.<android.graphics.drawable.AnimatedImageDrawable$State: int mRepeatCount>;

        return $i3;

     label2:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("called getRepeatCount on empty AnimatedImageDrawable");

        throw $r3;
    }

    public void inflate(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.graphics.drawable.AnimatedImageDrawable r0;
        android.content.res.Resources r1;
        org.xmlpull.v1.XmlPullParser r2;
        android.util.AttributeSet r3;
        android.content.res.Resources$Theme r4;
        int[] $r5;
        android.content.res.TypedArray $r6;
        int $i0;

        r0 := @this: android.graphics.drawable.AnimatedImageDrawable;

        r1 := @parameter0: android.content.res.Resources;

        r2 := @parameter1: org.xmlpull.v1.XmlPullParser;

        r3 := @parameter2: android.util.AttributeSet;

        r4 := @parameter3: android.content.res.Resources$Theme;

        specialinvoke r0.<android.graphics.drawable.Drawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>(r1, r2, r3, r4);

        $r5 = <com.android.internal.R$styleable: int[] AnimatedImageDrawable>;

        $r6 = staticinvoke <android.graphics.drawable.AnimatedImageDrawable: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>(r1, r4, r3, $r5);

        $i0 = r0.<android.graphics.drawable.AnimatedImageDrawable: int mSrcDensityOverride>;

        specialinvoke r0.<android.graphics.drawable.AnimatedImageDrawable: void updateStateFromTypedArray(android.content.res.TypedArray,int)>($r6, $i0);

        return;
    }

    public final boolean isAutoMirrored()
    {
        android.graphics.drawable.AnimatedImageDrawable r0;
        android.graphics.drawable.AnimatedImageDrawable$State $r1;
        boolean $z0;

        r0 := @this: android.graphics.drawable.AnimatedImageDrawable;

        $r1 = r0.<android.graphics.drawable.AnimatedImageDrawable: android.graphics.drawable.AnimatedImageDrawable$State mState>;

        $z0 = $r1.<android.graphics.drawable.AnimatedImageDrawable$State: boolean mAutoMirrored>;

        return $z0;
    }

    public boolean isRunning()
    {
        android.graphics.drawable.AnimatedImageDrawable r0;
        android.graphics.drawable.AnimatedImageDrawable$State $r1, $r3;
        long $l0, $l2;
        byte $b1;
        java.lang.IllegalStateException $r2;
        boolean $z0;

        r0 := @this: android.graphics.drawable.AnimatedImageDrawable;

        $r1 = r0.<android.graphics.drawable.AnimatedImageDrawable: android.graphics.drawable.AnimatedImageDrawable$State mState>;

        $l0 = $r1.<android.graphics.drawable.AnimatedImageDrawable$State: long mNativePtr>;

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label1;

        $r3 = r0.<android.graphics.drawable.AnimatedImageDrawable: android.graphics.drawable.AnimatedImageDrawable$State mState>;

        $l2 = $r3.<android.graphics.drawable.AnimatedImageDrawable$State: long mNativePtr>;

        $z0 = staticinvoke <android.graphics.drawable.AnimatedImageDrawable: boolean nIsRunning(long)>($l2);

        return $z0;

     label1:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("called isRunning on empty AnimatedImageDrawable");

        throw $r2;
    }

    public void lambda$postOnAnimationEnd$2$AnimatedImageDrawable()
    {
        android.graphics.drawable.AnimatedImageDrawable r0;
        java.util.Iterator r1;
        java.util.ArrayList $r2;
        boolean $z0;
        java.lang.Object $r3;
        android.graphics.drawable.Animatable2$AnimationCallback $r4;

        r0 := @this: android.graphics.drawable.AnimatedImageDrawable;

        $r2 = r0.<android.graphics.drawable.AnimatedImageDrawable: java.util.ArrayList mAnimationCallbacks>;

        r1 = virtualinvoke $r2.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (android.graphics.drawable.Animatable2$AnimationCallback) $r3;

        virtualinvoke $r4.<android.graphics.drawable.Animatable2$AnimationCallback: void onAnimationEnd(android.graphics.drawable.Drawable)>(r0);

        goto label1;

     label2:
        return;
    }

    public void lambda$postOnAnimationStart$1$AnimatedImageDrawable()
    {
        android.graphics.drawable.AnimatedImageDrawable r0;
        java.util.Iterator r1;
        java.util.ArrayList $r2;
        boolean $z0;
        java.lang.Object $r3;
        android.graphics.drawable.Animatable2$AnimationCallback $r4;

        r0 := @this: android.graphics.drawable.AnimatedImageDrawable;

        $r2 = r0.<android.graphics.drawable.AnimatedImageDrawable: java.util.ArrayList mAnimationCallbacks>;

        r1 = virtualinvoke $r2.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (android.graphics.drawable.Animatable2$AnimationCallback) $r3;

        virtualinvoke $r4.<android.graphics.drawable.Animatable2$AnimationCallback: void onAnimationStart(android.graphics.drawable.Drawable)>(r0);

        goto label1;

     label2:
        return;
    }

    public boolean onLayoutDirectionChanged(int)
    {
        android.graphics.drawable.AnimatedImageDrawable r0;
        int i0;
        boolean z0, z1;
        android.graphics.drawable.AnimatedImageDrawable$State $r1, $r2, $r3;
        long $l1, $l3;
        byte $b2;

        r0 := @this: android.graphics.drawable.AnimatedImageDrawable;

        i0 := @parameter0: int;

        $r1 = r0.<android.graphics.drawable.AnimatedImageDrawable: android.graphics.drawable.AnimatedImageDrawable$State mState>;

        z0 = $r1.<android.graphics.drawable.AnimatedImageDrawable$State: boolean mAutoMirrored>;

        z1 = 0;

        if z0 == 0 goto label3;

        $r2 = r0.<android.graphics.drawable.AnimatedImageDrawable: android.graphics.drawable.AnimatedImageDrawable$State mState>;

        $l1 = $r2.<android.graphics.drawable.AnimatedImageDrawable$State: long mNativePtr>;

        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label1;

        goto label3;

     label1:
        if i0 != 1 goto label2;

        z1 = 1;

     label2:
        $r3 = r0.<android.graphics.drawable.AnimatedImageDrawable: android.graphics.drawable.AnimatedImageDrawable$State mState>;

        $l3 = $r3.<android.graphics.drawable.AnimatedImageDrawable$State: long mNativePtr>;

        staticinvoke <android.graphics.drawable.AnimatedImageDrawable: void nSetMirrored(long,boolean)>($l3, z1);

        return 1;

     label3:
        return 0;
    }

    public void registerAnimationCallback(android.graphics.drawable.Animatable2$AnimationCallback)
    {
        android.graphics.drawable.AnimatedImageDrawable r0;
        android.graphics.drawable.Animatable2$AnimationCallback r1;
        java.util.ArrayList $r2, $r3, $r4, $r5;
        boolean $z0;
        android.graphics.drawable.AnimatedImageDrawable$State $r6;
        long $l0;

        r0 := @this: android.graphics.drawable.AnimatedImageDrawable;

        r1 := @parameter0: android.graphics.drawable.Animatable2$AnimationCallback;

        if r1 != null goto label1;

        return;

     label1:
        $r2 = r0.<android.graphics.drawable.AnimatedImageDrawable: java.util.ArrayList mAnimationCallbacks>;

        if $r2 != null goto label2;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<android.graphics.drawable.AnimatedImageDrawable: java.util.ArrayList mAnimationCallbacks> = $r5;

        $r6 = r0.<android.graphics.drawable.AnimatedImageDrawable: android.graphics.drawable.AnimatedImageDrawable$State mState>;

        $l0 = $r6.<android.graphics.drawable.AnimatedImageDrawable$State: long mNativePtr>;

        staticinvoke <android.graphics.drawable.AnimatedImageDrawable: void nSetOnAnimationEndListener(long,android.graphics.drawable.AnimatedImageDrawable)>($l0, r0);

     label2:
        $r3 = r0.<android.graphics.drawable.AnimatedImageDrawable: java.util.ArrayList mAnimationCallbacks>;

        $z0 = virtualinvoke $r3.<java.util.ArrayList: boolean contains(java.lang.Object)>(r1);

        if $z0 != 0 goto label3;

        $r4 = r0.<android.graphics.drawable.AnimatedImageDrawable: java.util.ArrayList mAnimationCallbacks>;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

     label3:
        return;
    }

    public void setAlpha(int)
    {
        android.graphics.drawable.AnimatedImageDrawable r0;
        int i0;
        java.lang.StringBuilder $r2;
        java.lang.IllegalArgumentException $r5;
        java.lang.String $r6;
        android.graphics.drawable.AnimatedImageDrawable$State $r7, $r9;
        long $l1, $l3;
        byte $b2;
        java.lang.IllegalStateException $r8;

        r0 := @this: android.graphics.drawable.AnimatedImageDrawable;

        i0 := @parameter0: int;

        if i0 < 0 goto label2;

        if i0 > 255 goto label2;

        $r7 = r0.<android.graphics.drawable.AnimatedImageDrawable: android.graphics.drawable.AnimatedImageDrawable$State mState>;

        $l1 = $r7.<android.graphics.drawable.AnimatedImageDrawable$State: long mNativePtr>;

        $b2 = $l1 cmp 0L;

        if $b2 == 0 goto label1;

        $r9 = r0.<android.graphics.drawable.AnimatedImageDrawable: android.graphics.drawable.AnimatedImageDrawable$State mState>;

        $l3 = $r9.<android.graphics.drawable.AnimatedImageDrawable$State: long mNativePtr>;

        staticinvoke <android.graphics.drawable.AnimatedImageDrawable: void nSetAlpha(long,int)>($l3, i0);

        virtualinvoke r0.<android.graphics.drawable.AnimatedImageDrawable: void invalidateSelf()>();

        return;

     label1:
        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>("called setAlpha on empty AnimatedImageDrawable");

        throw $r8;

     label2:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Alpha must be between 0 and 255! provided ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r5;
    }

    public void setAutoMirrored(boolean)
    {
        android.graphics.drawable.AnimatedImageDrawable r0;
        boolean z0, $z1;
        android.graphics.drawable.AnimatedImageDrawable$State $r1, $r2, $r3, $r4;
        int $i0;
        long $l1, $l3;
        byte $b2;

        r0 := @this: android.graphics.drawable.AnimatedImageDrawable;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.graphics.drawable.AnimatedImageDrawable: android.graphics.drawable.AnimatedImageDrawable$State mState>;

        $z1 = $r1.<android.graphics.drawable.AnimatedImageDrawable$State: boolean mAutoMirrored>;

        if $z1 == z0 goto label1;

        $r2 = r0.<android.graphics.drawable.AnimatedImageDrawable: android.graphics.drawable.AnimatedImageDrawable$State mState>;

        $r2.<android.graphics.drawable.AnimatedImageDrawable$State: boolean mAutoMirrored> = z0;

        $i0 = virtualinvoke r0.<android.graphics.drawable.AnimatedImageDrawable: int getLayoutDirection()>();

        if $i0 != 1 goto label1;

        $r3 = r0.<android.graphics.drawable.AnimatedImageDrawable: android.graphics.drawable.AnimatedImageDrawable$State mState>;

        $l1 = $r3.<android.graphics.drawable.AnimatedImageDrawable$State: long mNativePtr>;

        $b2 = $l1 cmp 0L;

        if $b2 == 0 goto label1;

        $r4 = r0.<android.graphics.drawable.AnimatedImageDrawable: android.graphics.drawable.AnimatedImageDrawable$State mState>;

        $l3 = $r4.<android.graphics.drawable.AnimatedImageDrawable$State: long mNativePtr>;

        staticinvoke <android.graphics.drawable.AnimatedImageDrawable: void nSetMirrored(long,boolean)>($l3, z0);

        virtualinvoke r0.<android.graphics.drawable.AnimatedImageDrawable: void invalidateSelf()>();

     label1:
        return;
    }

    public void setColorFilter(android.graphics.ColorFilter)
    {
        android.graphics.drawable.AnimatedImageDrawable r0;
        android.graphics.ColorFilter r1, $r4;
        long l0, $l2, l3;
        android.graphics.drawable.AnimatedImageDrawable$State $r2, $r5;
        byte $b1;
        java.lang.IllegalStateException $r3;

        r0 := @this: android.graphics.drawable.AnimatedImageDrawable;

        r1 := @parameter0: android.graphics.ColorFilter;

        $r2 = r0.<android.graphics.drawable.AnimatedImageDrawable: android.graphics.drawable.AnimatedImageDrawable$State mState>;

        l0 = $r2.<android.graphics.drawable.AnimatedImageDrawable$State: long mNativePtr>;

        l3 = 0L;

        $b1 = l0 cmp 0L;

        if $b1 == 0 goto label4;

        $r4 = r0.<android.graphics.drawable.AnimatedImageDrawable: android.graphics.ColorFilter mColorFilter>;

        if r1 == $r4 goto label3;

        r0.<android.graphics.drawable.AnimatedImageDrawable: android.graphics.ColorFilter mColorFilter> = r1;

        if r1 != null goto label1;

        goto label2;

     label1:
        l3 = virtualinvoke r1.<android.graphics.ColorFilter: long getNativeInstance()>();

     label2:
        $r5 = r0.<android.graphics.drawable.AnimatedImageDrawable: android.graphics.drawable.AnimatedImageDrawable$State mState>;

        $l2 = $r5.<android.graphics.drawable.AnimatedImageDrawable$State: long mNativePtr>;

        staticinvoke <android.graphics.drawable.AnimatedImageDrawable: void nSetColorFilter(long,long)>($l2, l3);

        virtualinvoke r0.<android.graphics.drawable.AnimatedImageDrawable: void invalidateSelf()>();

     label3:
        return;

     label4:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("called setColorFilter on empty AnimatedImageDrawable");

        throw $r3;
    }

    public void setLoopCount(int)
    {
        android.graphics.drawable.AnimatedImageDrawable r0;
        int i0;

        r0 := @this: android.graphics.drawable.AnimatedImageDrawable;

        i0 := @parameter0: int;

        virtualinvoke r0.<android.graphics.drawable.AnimatedImageDrawable: void setRepeatCount(int)>(i0);

        return;
    }

    public void setRepeatCount(int)
    {
        android.graphics.drawable.AnimatedImageDrawable r0;
        int i0, $i1;
        java.lang.StringBuilder $r2;
        java.lang.IllegalArgumentException $r5;
        java.lang.String $r6;
        android.graphics.drawable.AnimatedImageDrawable$State $r7, $r8, $r9, $r10;
        long $l2, $l4;
        byte $b3;

        r0 := @this: android.graphics.drawable.AnimatedImageDrawable;

        i0 := @parameter0: int;

        if i0 < -1 goto label2;

        $r7 = r0.<android.graphics.drawable.AnimatedImageDrawable: android.graphics.drawable.AnimatedImageDrawable$State mState>;

        $i1 = $r7.<android.graphics.drawable.AnimatedImageDrawable$State: int mRepeatCount>;

        if $i1 == i0 goto label1;

        $r8 = r0.<android.graphics.drawable.AnimatedImageDrawable: android.graphics.drawable.AnimatedImageDrawable$State mState>;

        $r8.<android.graphics.drawable.AnimatedImageDrawable$State: int mRepeatCount> = i0;

        $r9 = r0.<android.graphics.drawable.AnimatedImageDrawable: android.graphics.drawable.AnimatedImageDrawable$State mState>;

        $l2 = $r9.<android.graphics.drawable.AnimatedImageDrawable$State: long mNativePtr>;

        $b3 = $l2 cmp 0L;

        if $b3 == 0 goto label1;

        $r10 = r0.<android.graphics.drawable.AnimatedImageDrawable: android.graphics.drawable.AnimatedImageDrawable$State mState>;

        $l4 = $r10.<android.graphics.drawable.AnimatedImageDrawable$State: long mNativePtr>;

        staticinvoke <android.graphics.drawable.AnimatedImageDrawable: void nSetRepeatCount(long,int)>($l4, i0);

     label1:
        return;

     label2:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid value passed to setRepeatCount");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r5;
    }

    public void start()
    {
        android.graphics.drawable.AnimatedImageDrawable r0;
        android.graphics.drawable.AnimatedImageDrawable$State $r1, $r3;
        long $l0, $l2;
        byte $b1;
        java.lang.IllegalStateException $r2;
        boolean $z0;

        r0 := @this: android.graphics.drawable.AnimatedImageDrawable;

        $r1 = r0.<android.graphics.drawable.AnimatedImageDrawable: android.graphics.drawable.AnimatedImageDrawable$State mState>;

        $l0 = $r1.<android.graphics.drawable.AnimatedImageDrawable$State: long mNativePtr>;

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label2;

        $r3 = r0.<android.graphics.drawable.AnimatedImageDrawable: android.graphics.drawable.AnimatedImageDrawable$State mState>;

        $l2 = $r3.<android.graphics.drawable.AnimatedImageDrawable$State: long mNativePtr>;

        $z0 = staticinvoke <android.graphics.drawable.AnimatedImageDrawable: boolean nStart(long)>($l2);

        if $z0 == 0 goto label1;

        r0.<android.graphics.drawable.AnimatedImageDrawable: boolean mStarting> = 1;

        virtualinvoke r0.<android.graphics.drawable.AnimatedImageDrawable: void invalidateSelf()>();

     label1:
        return;

     label2:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("called start on empty AnimatedImageDrawable");

        throw $r2;
    }

    public void stop()
    {
        android.graphics.drawable.AnimatedImageDrawable r0;
        android.graphics.drawable.AnimatedImageDrawable$State $r1, $r3;
        long $l0, $l2;
        byte $b1;
        java.lang.IllegalStateException $r2;
        boolean $z0;

        r0 := @this: android.graphics.drawable.AnimatedImageDrawable;

        $r1 = r0.<android.graphics.drawable.AnimatedImageDrawable: android.graphics.drawable.AnimatedImageDrawable$State mState>;

        $l0 = $r1.<android.graphics.drawable.AnimatedImageDrawable$State: long mNativePtr>;

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label2;

        $r3 = r0.<android.graphics.drawable.AnimatedImageDrawable: android.graphics.drawable.AnimatedImageDrawable$State mState>;

        $l2 = $r3.<android.graphics.drawable.AnimatedImageDrawable$State: long mNativePtr>;

        $z0 = staticinvoke <android.graphics.drawable.AnimatedImageDrawable: boolean nStop(long)>($l2);

        if $z0 == 0 goto label1;

        specialinvoke r0.<android.graphics.drawable.AnimatedImageDrawable: void postOnAnimationEnd()>();

     label1:
        return;

     label2:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("called stop on empty AnimatedImageDrawable");

        throw $r2;
    }

    public boolean unregisterAnimationCallback(android.graphics.drawable.Animatable2$AnimationCallback)
    {
        android.graphics.drawable.AnimatedImageDrawable r0;
        android.graphics.drawable.Animatable2$AnimationCallback r1;
        java.util.ArrayList r2, $r3;
        boolean $z0, $z1;

        r0 := @this: android.graphics.drawable.AnimatedImageDrawable;

        r1 := @parameter0: android.graphics.drawable.Animatable2$AnimationCallback;

        if r1 == null goto label3;

        r2 = r0.<android.graphics.drawable.AnimatedImageDrawable: java.util.ArrayList mAnimationCallbacks>;

        if r2 == null goto label3;

        $z0 = virtualinvoke r2.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        goto label3;

     label1:
        $r3 = r0.<android.graphics.drawable.AnimatedImageDrawable: java.util.ArrayList mAnimationCallbacks>;

        $z1 = virtualinvoke $r3.<java.util.ArrayList: boolean isEmpty()>();

        if $z1 == 0 goto label2;

        virtualinvoke r0.<android.graphics.drawable.AnimatedImageDrawable: void clearAnimationCallbacks()>();

     label2:
        return 1;

     label3:
        return 0;
    }

    public static void <clinit>()
    {
        <android.graphics.drawable.AnimatedImageDrawable: int REPEAT_UNDEFINED> = -2;

        <android.graphics.drawable.AnimatedImageDrawable: int REPEAT_INFINITE> = -1;

        <android.graphics.drawable.AnimatedImageDrawable: int LOOP_INFINITE> = -1;

        <android.graphics.drawable.AnimatedImageDrawable: int FINISHED> = -1;

        return;
    }
}
