public class android.graphics.drawable.AnimatedStateListDrawable extends android.graphics.drawable.StateListDrawable
{
    private static final java.lang.String ELEMENT_ITEM;
    private static final java.lang.String ELEMENT_TRANSITION;
    private static final java.lang.String LOGTAG;
    private boolean mMutated;
    private android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState mState;
    private android.graphics.drawable.AnimatedStateListDrawable$Transition mTransition;
    private int mTransitionFromIndex;
    private int mTransitionToIndex;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        <android.graphics.drawable.AnimatedStateListDrawable: java.lang.String ELEMENT_TRANSITION> = "transition";

        <android.graphics.drawable.AnimatedStateListDrawable: java.lang.String ELEMENT_ITEM> = "item";

        $r0 = class "Landroid/graphics/drawable/AnimatedStateListDrawable;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <android.graphics.drawable.AnimatedStateListDrawable: java.lang.String LOGTAG> = $r1;

        return;
    }

    public void <init>()
    {
        android.graphics.drawable.AnimatedStateListDrawable r0;

        r0 := @this: android.graphics.drawable.AnimatedStateListDrawable;

        specialinvoke r0.<android.graphics.drawable.AnimatedStateListDrawable: void <init>(android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState,android.content.res.Resources)>(null, null);

        return;
    }

    private void <init>(android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState, android.content.res.Resources)
    {
        android.graphics.drawable.AnimatedStateListDrawable r0;
        android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState r1, $r3;
        android.content.res.Resources r2;
        int[] $r4;

        r0 := @this: android.graphics.drawable.AnimatedStateListDrawable;

        r1 := @parameter0: android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState;

        r2 := @parameter1: android.content.res.Resources;

        specialinvoke r0.<android.graphics.drawable.StateListDrawable: void <init>(android.graphics.drawable.StateListDrawable$StateListState)>(null);

        r0.<android.graphics.drawable.AnimatedStateListDrawable: int mTransitionToIndex> = -1;

        r0.<android.graphics.drawable.AnimatedStateListDrawable: int mTransitionFromIndex> = -1;

        $r3 = new android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState;

        specialinvoke $r3.<android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState: void <init>(android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState,android.graphics.drawable.AnimatedStateListDrawable,android.content.res.Resources)>(r1, r0, r2);

        virtualinvoke r0.<android.graphics.drawable.AnimatedStateListDrawable: void setConstantState(android.graphics.drawable.DrawableContainer$DrawableContainerState)>($r3);

        $r4 = virtualinvoke r0.<android.graphics.drawable.AnimatedStateListDrawable: int[] getState()>();

        virtualinvoke r0.<android.graphics.drawable.AnimatedStateListDrawable: boolean onStateChange(int[])>($r4);

        virtualinvoke r0.<android.graphics.drawable.AnimatedStateListDrawable: void jumpToCurrentState()>();

        return;
    }

    void <init>(android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState, android.content.res.Resources, android.graphics.drawable.AnimatedStateListDrawable$1)
    {
        android.graphics.drawable.AnimatedStateListDrawable r0;
        android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState r1;
        android.content.res.Resources r2;
        android.graphics.drawable.AnimatedStateListDrawable$1 r3;

        r0 := @this: android.graphics.drawable.AnimatedStateListDrawable;

        r1 := @parameter0: android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState;

        r2 := @parameter1: android.content.res.Resources;

        r3 := @parameter2: android.graphics.drawable.AnimatedStateListDrawable$1;

        specialinvoke r0.<android.graphics.drawable.AnimatedStateListDrawable: void <init>(android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState,android.content.res.Resources)>(r1, r2);

        return;
    }

    static java.lang.String access$100()
    {
        java.lang.String $r0;

        $r0 = <android.graphics.drawable.AnimatedStateListDrawable: java.lang.String LOGTAG>;

        return $r0;
    }

    private void inflateChildElements(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.graphics.drawable.AnimatedStateListDrawable r0;
        android.content.res.Resources r1;
        org.xmlpull.v1.XmlPullParser r2;
        android.util.AttributeSet r3;
        android.content.res.Resources$Theme r4;
        int i0, i1, i2, $i3;
        java.lang.String $r5, $r6;
        boolean $z0, $z1;

        r0 := @this: android.graphics.drawable.AnimatedStateListDrawable;

        r1 := @parameter0: android.content.res.Resources;

        r2 := @parameter1: org.xmlpull.v1.XmlPullParser;

        r3 := @parameter2: android.util.AttributeSet;

        r4 := @parameter3: android.content.res.Resources$Theme;

        $i3 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        i0 = $i3 + 1;

     label1:
        i1 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i1 == 1 goto label6;

        i2 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if i2 >= i0 goto label2;

        if i1 == 3 goto label6;

     label2:
        if i1 == 2 goto label3;

        goto label1;

     label3:
        if i2 <= i0 goto label4;

        goto label1;

     label4:
        $r5 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z0 == 0 goto label5;

        specialinvoke r0.<android.graphics.drawable.AnimatedStateListDrawable: int parseItem(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>(r1, r2, r3, r4);

        goto label1;

     label5:
        $r6 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("transition");

        if $z1 == 0 goto label1;

        specialinvoke r0.<android.graphics.drawable.AnimatedStateListDrawable: int parseTransition(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>(r1, r2, r3, r4);

        goto label1;

     label6:
        return;
    }

    private void init()
    {
        android.graphics.drawable.AnimatedStateListDrawable r0;
        int[] $r1;

        r0 := @this: android.graphics.drawable.AnimatedStateListDrawable;

        $r1 = virtualinvoke r0.<android.graphics.drawable.AnimatedStateListDrawable: int[] getState()>();

        virtualinvoke r0.<android.graphics.drawable.AnimatedStateListDrawable: boolean onStateChange(int[])>($r1);

        return;
    }

    private int parseItem(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.graphics.drawable.AnimatedStateListDrawable r0;
        org.xmlpull.v1.XmlPullParser r1;
        android.util.AttributeSet r2;
        android.content.res.Resources$Theme r3;
        int i0, i1, $i2;
        android.graphics.drawable.Drawable r4, r16;
        int[] r5, $r6;
        android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState $r7;
        java.lang.String $r9, $r13;
        android.content.res.Resources r14;
        android.content.res.TypedArray r15;
        java.lang.StringBuilder r18;
        org.xmlpull.v1.XmlPullParserException r19;
        java.lang.Throwable r20;

        r0 := @this: android.graphics.drawable.AnimatedStateListDrawable;

        r14 := @parameter0: android.content.res.Resources;

        r1 := @parameter1: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter2: android.util.AttributeSet;

        r3 := @parameter3: android.content.res.Resources$Theme;

        $r6 = <com.android.internal.R$styleable: int[] AnimatedStateListDrawableItem>;

        r15 = staticinvoke <android.graphics.drawable.AnimatedStateListDrawable: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>(r14, r3, r2, $r6);

        i0 = virtualinvoke r15.<android.content.res.TypedArray: int getResourceId(int,int)>(0, 0);

        r4 = virtualinvoke r15.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(1);

        virtualinvoke r15.<android.content.res.TypedArray: void recycle()>();

        r5 = virtualinvoke r0.<android.graphics.drawable.AnimatedStateListDrawable: int[] extractStateSet(android.util.AttributeSet)>(r2);

        r16 = r4;

        if r4 != null goto label4;

     label1:
        i1 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i1 != 4 goto label2;

        goto label1;

     label2:
        if i1 != 2 goto label3;

        r16 = staticinvoke <android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>(r14, r1, r2, r3);

        goto label4;

     label3:
        r18 = new java.lang.StringBuilder;

        specialinvoke r18.<java.lang.StringBuilder: void <init>()>();

        $r9 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": <item> tag requires a \'drawable\' attribute or child tag defining a drawable");

        r19 = new org.xmlpull.v1.XmlPullParserException;

        $r13 = virtualinvoke r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r19.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r13);

        r20 = (java.lang.Throwable) r19;

        throw r20;

     label4:
        $r7 = r0.<android.graphics.drawable.AnimatedStateListDrawable: android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState mState>;

        $i2 = virtualinvoke $r7.<android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState: int addStateSet(int[],android.graphics.drawable.Drawable,int)>(r5, r16, i0);

        return $i2;
    }

    private int parseTransition(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.graphics.drawable.AnimatedStateListDrawable r0;
        org.xmlpull.v1.XmlPullParser r1;
        android.util.AttributeSet r2;
        android.content.res.Resources$Theme r3;
        int i0, i1, i2, $i3;
        boolean z0;
        android.graphics.drawable.Drawable r4, r15;
        int[] $r5;
        android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState $r6;
        java.lang.String $r8, $r12;
        android.content.res.Resources r13;
        android.content.res.TypedArray r14;
        java.lang.StringBuilder r17;
        org.xmlpull.v1.XmlPullParserException r18;
        java.lang.Throwable r19;

        r0 := @this: android.graphics.drawable.AnimatedStateListDrawable;

        r13 := @parameter0: android.content.res.Resources;

        r1 := @parameter1: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter2: android.util.AttributeSet;

        r3 := @parameter3: android.content.res.Resources$Theme;

        $r5 = <com.android.internal.R$styleable: int[] AnimatedStateListDrawableTransition>;

        r14 = staticinvoke <android.graphics.drawable.AnimatedStateListDrawable: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>(r13, r3, r2, $r5);

        i0 = virtualinvoke r14.<android.content.res.TypedArray: int getResourceId(int,int)>(2, 0);

        i1 = virtualinvoke r14.<android.content.res.TypedArray: int getResourceId(int,int)>(1, 0);

        z0 = virtualinvoke r14.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(3, 0);

        r4 = virtualinvoke r14.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(0);

        virtualinvoke r14.<android.content.res.TypedArray: void recycle()>();

        r15 = r4;

        if r4 != null goto label4;

     label1:
        i2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i2 != 4 goto label2;

        goto label1;

     label2:
        if i2 != 2 goto label3;

        r15 = staticinvoke <android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>(r13, r1, r2, r3);

        goto label4;

     label3:
        r17 = new java.lang.StringBuilder;

        specialinvoke r17.<java.lang.StringBuilder: void <init>()>();

        $r8 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": <transition> tag requires a \'drawable\' attribute or child tag defining a drawable");

        r18 = new org.xmlpull.v1.XmlPullParserException;

        $r12 = virtualinvoke r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r18.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r12);

        r19 = (java.lang.Throwable) r18;

        throw r19;

     label4:
        $r6 = r0.<android.graphics.drawable.AnimatedStateListDrawable: android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState mState>;

        $i3 = virtualinvoke $r6.<android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState: int addTransition(int,int,android.graphics.drawable.Drawable,boolean)>(i0, i1, r15, z0);

        return $i3;
    }

    private boolean selectTransition(int)
    {
        android.graphics.drawable.AnimatedStateListDrawable r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, i7;
        android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState r1;
        boolean z0, $z2, $z3, $z4, $z5, z6, z7;
        android.graphics.drawable.AnimatedStateListDrawable$AnimatableTransition $r2;
        android.graphics.drawable.Animatable $r3;
        android.graphics.drawable.AnimatedStateListDrawable$AnimatedVectorDrawableTransition $r4;
        android.graphics.drawable.AnimatedVectorDrawable $r5;
        android.graphics.drawable.AnimatedStateListDrawable$AnimationDrawableTransition $r6;
        android.graphics.drawable.AnimationDrawable $r7;
        android.graphics.drawable.AnimatedStateListDrawable$Transition r8, r10;
        android.graphics.drawable.Drawable r9;

        r0 := @this: android.graphics.drawable.AnimatedStateListDrawable;

        i0 := @parameter0: int;

        r8 = r0.<android.graphics.drawable.AnimatedStateListDrawable: android.graphics.drawable.AnimatedStateListDrawable$Transition mTransition>;

        if r8 == null goto label03;

        $i4 = r0.<android.graphics.drawable.AnimatedStateListDrawable: int mTransitionToIndex>;

        if i0 != $i4 goto label01;

        return 1;

     label01:
        $i5 = r0.<android.graphics.drawable.AnimatedStateListDrawable: int mTransitionFromIndex>;

        if i0 != $i5 goto label02;

        $z5 = virtualinvoke r8.<android.graphics.drawable.AnimatedStateListDrawable$Transition: boolean canReverse()>();

        if $z5 == 0 goto label02;

        virtualinvoke r8.<android.graphics.drawable.AnimatedStateListDrawable$Transition: void reverse()>();

        $i6 = r0.<android.graphics.drawable.AnimatedStateListDrawable: int mTransitionFromIndex>;

        r0.<android.graphics.drawable.AnimatedStateListDrawable: int mTransitionToIndex> = $i6;

        r0.<android.graphics.drawable.AnimatedStateListDrawable: int mTransitionFromIndex> = i0;

        return 1;

     label02:
        i7 = r0.<android.graphics.drawable.AnimatedStateListDrawable: int mTransitionToIndex>;

        virtualinvoke r8.<android.graphics.drawable.AnimatedStateListDrawable$Transition: void stop()>();

        goto label04;

     label03:
        i7 = virtualinvoke r0.<android.graphics.drawable.AnimatedStateListDrawable: int getCurrentIndex()>();

     label04:
        r0.<android.graphics.drawable.AnimatedStateListDrawable: android.graphics.drawable.AnimatedStateListDrawable$Transition mTransition> = null;

        r0.<android.graphics.drawable.AnimatedStateListDrawable: int mTransitionFromIndex> = -1;

        r0.<android.graphics.drawable.AnimatedStateListDrawable: int mTransitionToIndex> = -1;

        r1 = r0.<android.graphics.drawable.AnimatedStateListDrawable: android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState mState>;

        i1 = virtualinvoke r1.<android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState: int getKeyframeIdAt(int)>(i7);

        i2 = virtualinvoke r1.<android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState: int getKeyframeIdAt(int)>(i0);

        if i2 == 0 goto label11;

        if i1 != 0 goto label05;

        goto label11;

     label05:
        i3 = virtualinvoke r1.<android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState: int indexOfTransition(int,int)>(i1, i2);

        if i3 >= 0 goto label06;

        return 0;

     label06:
        z0 = virtualinvoke r1.<android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState: boolean transitionHasReversibleFlag(int,int)>(i1, i2);

        virtualinvoke r0.<android.graphics.drawable.AnimatedStateListDrawable: boolean selectDrawable(int)>(i3);

        r9 = virtualinvoke r0.<android.graphics.drawable.AnimatedStateListDrawable: android.graphics.drawable.Drawable getCurrent()>();

        $z2 = r9 instanceof android.graphics.drawable.AnimationDrawable;

        if $z2 == 0 goto label07;

        z6 = virtualinvoke r1.<android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState: boolean isTransitionReversed(int,int)>(i1, i2);

        $r6 = new android.graphics.drawable.AnimatedStateListDrawable$AnimationDrawableTransition;

        $r7 = (android.graphics.drawable.AnimationDrawable) r9;

        specialinvoke $r6.<android.graphics.drawable.AnimatedStateListDrawable$AnimationDrawableTransition: void <init>(android.graphics.drawable.AnimationDrawable,boolean,boolean)>($r7, z6, z0);

        r10 = $r6;

        goto label09;

     label07:
        $z3 = r9 instanceof android.graphics.drawable.AnimatedVectorDrawable;

        if $z3 == 0 goto label08;

        z7 = virtualinvoke r1.<android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState: boolean isTransitionReversed(int,int)>(i1, i2);

        $r4 = new android.graphics.drawable.AnimatedStateListDrawable$AnimatedVectorDrawableTransition;

        $r5 = (android.graphics.drawable.AnimatedVectorDrawable) r9;

        specialinvoke $r4.<android.graphics.drawable.AnimatedStateListDrawable$AnimatedVectorDrawableTransition: void <init>(android.graphics.drawable.AnimatedVectorDrawable,boolean,boolean)>($r5, z7, z0);

        r10 = $r4;

        goto label09;

     label08:
        $z4 = r9 instanceof android.graphics.drawable.Animatable;

        if $z4 == 0 goto label10;

        $r2 = new android.graphics.drawable.AnimatedStateListDrawable$AnimatableTransition;

        $r3 = (android.graphics.drawable.Animatable) r9;

        specialinvoke $r2.<android.graphics.drawable.AnimatedStateListDrawable$AnimatableTransition: void <init>(android.graphics.drawable.Animatable)>($r3);

        r10 = $r2;

     label09:
        virtualinvoke r10.<android.graphics.drawable.AnimatedStateListDrawable$Transition: void start()>();

        r0.<android.graphics.drawable.AnimatedStateListDrawable: android.graphics.drawable.AnimatedStateListDrawable$Transition mTransition> = r10;

        r0.<android.graphics.drawable.AnimatedStateListDrawable: int mTransitionFromIndex> = i7;

        r0.<android.graphics.drawable.AnimatedStateListDrawable: int mTransitionToIndex> = i0;

        return 1;

     label10:
        return 0;

     label11:
        return 0;
    }

    private void updateStateFromTypedArray(android.content.res.TypedArray)
    {
        android.graphics.drawable.AnimatedStateListDrawable r0;
        android.content.res.TypedArray r1;
        android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        int[] $r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;

        r0 := @this: android.graphics.drawable.AnimatedStateListDrawable;

        r1 := @parameter0: android.content.res.TypedArray;

        r2 = r0.<android.graphics.drawable.AnimatedStateListDrawable: android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState mState>;

        $i0 = r2.<android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState: int mChangingConfigurations>;

        $i1 = virtualinvoke r1.<android.content.res.TypedArray: int getChangingConfigurations()>();

        $i2 = $i0 | $i1;

        r2.<android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState: int mChangingConfigurations> = $i2;

        $r3 = virtualinvoke r1.<android.content.res.TypedArray: int[] extractThemeAttrs()>();

        r2.<android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState: int[] mAnimThemeAttrs> = $r3;

        $z0 = r2.<android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState: boolean mVariablePadding>;

        $z1 = virtualinvoke r1.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(2, $z0);

        virtualinvoke r2.<android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState: void setVariablePadding(boolean)>($z1);

        $z2 = r2.<android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState: boolean mConstantSize>;

        $z3 = virtualinvoke r1.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(3, $z2);

        virtualinvoke r2.<android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState: void setConstantSize(boolean)>($z3);

        $i3 = r2.<android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState: int mEnterFadeDuration>;

        $i4 = virtualinvoke r1.<android.content.res.TypedArray: int getInt(int,int)>(4, $i3);

        virtualinvoke r2.<android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState: void setEnterFadeDuration(int)>($i4);

        $i5 = r2.<android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState: int mExitFadeDuration>;

        $i6 = virtualinvoke r1.<android.content.res.TypedArray: int getInt(int,int)>(5, $i5);

        virtualinvoke r2.<android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState: void setExitFadeDuration(int)>($i6);

        $z4 = r2.<android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState: boolean mDither>;

        $z5 = virtualinvoke r1.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(0, $z4);

        virtualinvoke r0.<android.graphics.drawable.AnimatedStateListDrawable: void setDither(boolean)>($z5);

        $z6 = r2.<android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState: boolean mAutoMirrored>;

        $z7 = virtualinvoke r1.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(6, $z6);

        virtualinvoke r0.<android.graphics.drawable.AnimatedStateListDrawable: void setAutoMirrored(boolean)>($z7);

        return;
    }

    public void addState(int[], android.graphics.drawable.Drawable, int)
    {
        android.graphics.drawable.AnimatedStateListDrawable r0;
        int[] r1, $r5;
        android.graphics.drawable.Drawable r2;
        int i0;
        java.lang.IllegalArgumentException $r3;
        android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState $r4;

        r0 := @this: android.graphics.drawable.AnimatedStateListDrawable;

        r1 := @parameter0: int[];

        r2 := @parameter1: android.graphics.drawable.Drawable;

        i0 := @parameter2: int;

        if r2 == null goto label1;

        $r4 = r0.<android.graphics.drawable.AnimatedStateListDrawable: android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState mState>;

        virtualinvoke $r4.<android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState: int addStateSet(int[],android.graphics.drawable.Drawable,int)>(r1, r2, i0);

        $r5 = virtualinvoke r0.<android.graphics.drawable.AnimatedStateListDrawable: int[] getState()>();

        virtualinvoke r0.<android.graphics.drawable.AnimatedStateListDrawable: boolean onStateChange(int[])>($r5);

        return;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Drawable must not be null");

        throw $r3;
    }

    public void addTransition(int, int, android.graphics.drawable.Drawable, boolean)
    {
        android.graphics.drawable.AnimatedStateListDrawable r0;
        int i0, i1;
        android.graphics.drawable.Drawable r1;
        boolean z0;
        java.lang.IllegalArgumentException $r2;
        android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState $r3;

        r0 := @this: android.graphics.drawable.AnimatedStateListDrawable;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.graphics.drawable.Drawable;

        z0 := @parameter3: boolean;

        if r1 == null goto label1;

        $r3 = r0.<android.graphics.drawable.AnimatedStateListDrawable: android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState mState>;

        virtualinvoke $r3.<android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState: int addTransition(int,int,android.graphics.drawable.Drawable,boolean)>(i0, i1, r1, z0);

        return;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Transition drawable must not be null");

        throw $r2;
    }

    public void applyTheme(android.content.res.Resources$Theme)
    {
        android.graphics.drawable.AnimatedStateListDrawable r0;
        android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState r1;
        int[] $r2, $r3, $r4;
        android.content.res.Resources$Theme r5;
        android.content.res.TypedArray r6;

        r0 := @this: android.graphics.drawable.AnimatedStateListDrawable;

        r5 := @parameter0: android.content.res.Resources$Theme;

        specialinvoke r0.<android.graphics.drawable.StateListDrawable: void applyTheme(android.content.res.Resources$Theme)>(r5);

        r1 = r0.<android.graphics.drawable.AnimatedStateListDrawable: android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState mState>;

        if r1 == null goto label2;

        $r2 = r1.<android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState: int[] mAnimThemeAttrs>;

        if $r2 != null goto label1;

        goto label2;

     label1:
        $r4 = r1.<android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState: int[] mAnimThemeAttrs>;

        $r3 = <com.android.internal.R$styleable: int[] AnimatedRotateDrawable>;

        r6 = virtualinvoke r5.<android.content.res.Resources$Theme: android.content.res.TypedArray resolveAttributes(int[],int[])>($r4, $r3);

        specialinvoke r0.<android.graphics.drawable.AnimatedStateListDrawable: void updateStateFromTypedArray(android.content.res.TypedArray)>(r6);

        virtualinvoke r6.<android.content.res.TypedArray: void recycle()>();

        specialinvoke r0.<android.graphics.drawable.AnimatedStateListDrawable: void init()>();

        return;

     label2:
        return;
    }

    public void clearMutated()
    {
        android.graphics.drawable.AnimatedStateListDrawable r0;

        r0 := @this: android.graphics.drawable.AnimatedStateListDrawable;

        specialinvoke r0.<android.graphics.drawable.StateListDrawable: void clearMutated()>();

        r0.<android.graphics.drawable.AnimatedStateListDrawable: boolean mMutated> = 0;

        return;
    }

    android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState cloneConstantState()
    {
        android.graphics.drawable.AnimatedStateListDrawable r0;
        android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState $r1, $r2;

        r0 := @this: android.graphics.drawable.AnimatedStateListDrawable;

        $r1 = new android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState;

        $r2 = r0.<android.graphics.drawable.AnimatedStateListDrawable: android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState mState>;

        specialinvoke $r1.<android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState: void <init>(android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState,android.graphics.drawable.AnimatedStateListDrawable,android.content.res.Resources)>($r2, r0, null);

        return $r1;
    }

    volatile android.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState()
    {
        android.graphics.drawable.AnimatedStateListDrawable r0;
        android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState $r1;

        r0 := @this: android.graphics.drawable.AnimatedStateListDrawable;

        $r1 = virtualinvoke r0.<android.graphics.drawable.AnimatedStateListDrawable: android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState cloneConstantState()>();

        return $r1;
    }

    volatile android.graphics.drawable.StateListDrawable$StateListState cloneConstantState()
    {
        android.graphics.drawable.AnimatedStateListDrawable r0;
        android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState $r1;

        r0 := @this: android.graphics.drawable.AnimatedStateListDrawable;

        $r1 = virtualinvoke r0.<android.graphics.drawable.AnimatedStateListDrawable: android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState cloneConstantState()>();

        return $r1;
    }

    public void inflate(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.graphics.drawable.AnimatedStateListDrawable r0;
        android.content.res.Resources r1;
        org.xmlpull.v1.XmlPullParser r2;
        android.util.AttributeSet r3;
        android.content.res.Resources$Theme r4;
        android.content.res.TypedArray r5;
        int[] $r6;

        r0 := @this: android.graphics.drawable.AnimatedStateListDrawable;

        r1 := @parameter0: android.content.res.Resources;

        r2 := @parameter1: org.xmlpull.v1.XmlPullParser;

        r3 := @parameter2: android.util.AttributeSet;

        r4 := @parameter3: android.content.res.Resources$Theme;

        $r6 = <com.android.internal.R$styleable: int[] AnimatedStateListDrawable>;

        r5 = staticinvoke <android.graphics.drawable.AnimatedStateListDrawable: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>(r1, r4, r3, $r6);

        specialinvoke r0.<android.graphics.drawable.StateListDrawable: void inflateWithAttributes(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.TypedArray,int)>(r1, r2, r5, 1);

        specialinvoke r0.<android.graphics.drawable.AnimatedStateListDrawable: void updateStateFromTypedArray(android.content.res.TypedArray)>(r5);

        virtualinvoke r0.<android.graphics.drawable.AnimatedStateListDrawable: void updateDensity(android.content.res.Resources)>(r1);

        virtualinvoke r5.<android.content.res.TypedArray: void recycle()>();

        specialinvoke r0.<android.graphics.drawable.AnimatedStateListDrawable: void inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>(r1, r2, r3, r4);

        specialinvoke r0.<android.graphics.drawable.AnimatedStateListDrawable: void init()>();

        return;
    }

    public boolean isStateful()
    {
        android.graphics.drawable.AnimatedStateListDrawable r0;

        r0 := @this: android.graphics.drawable.AnimatedStateListDrawable;

        return 1;
    }

    public void jumpToCurrentState()
    {
        android.graphics.drawable.AnimatedStateListDrawable r0;
        android.graphics.drawable.AnimatedStateListDrawable$Transition r1;
        int $i0;

        r0 := @this: android.graphics.drawable.AnimatedStateListDrawable;

        specialinvoke r0.<android.graphics.drawable.StateListDrawable: void jumpToCurrentState()>();

        r1 = r0.<android.graphics.drawable.AnimatedStateListDrawable: android.graphics.drawable.AnimatedStateListDrawable$Transition mTransition>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.graphics.drawable.AnimatedStateListDrawable$Transition: void stop()>();

        r0.<android.graphics.drawable.AnimatedStateListDrawable: android.graphics.drawable.AnimatedStateListDrawable$Transition mTransition> = null;

        $i0 = r0.<android.graphics.drawable.AnimatedStateListDrawable: int mTransitionToIndex>;

        virtualinvoke r0.<android.graphics.drawable.AnimatedStateListDrawable: boolean selectDrawable(int)>($i0);

        r0.<android.graphics.drawable.AnimatedStateListDrawable: int mTransitionToIndex> = -1;

        r0.<android.graphics.drawable.AnimatedStateListDrawable: int mTransitionFromIndex> = -1;

     label1:
        return;
    }

    public android.graphics.drawable.Drawable mutate()
    {
        android.graphics.drawable.AnimatedStateListDrawable r0;
        boolean $z0;
        android.graphics.drawable.Drawable $r1;
        android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState $r2;

        r0 := @this: android.graphics.drawable.AnimatedStateListDrawable;

        $z0 = r0.<android.graphics.drawable.AnimatedStateListDrawable: boolean mMutated>;

        if $z0 != 0 goto label1;

        $r1 = specialinvoke r0.<android.graphics.drawable.StateListDrawable: android.graphics.drawable.Drawable mutate()>();

        if $r1 != r0 goto label1;

        $r2 = r0.<android.graphics.drawable.AnimatedStateListDrawable: android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState mState>;

        virtualinvoke $r2.<android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState: void mutate()>();

        r0.<android.graphics.drawable.AnimatedStateListDrawable: boolean mMutated> = 1;

     label1:
        return r0;
    }

    protected boolean onStateChange(int[])
    {
        android.graphics.drawable.AnimatedStateListDrawable r0;
        int[] r1;
        int i0, $i1;
        android.graphics.drawable.Drawable r2;
        android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState $r3;
        boolean $z0, $z1, $z2, z3, z4;

        r0 := @this: android.graphics.drawable.AnimatedStateListDrawable;

        r1 := @parameter0: int[];

        $r3 = r0.<android.graphics.drawable.AnimatedStateListDrawable: android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState mState>;

        i0 = virtualinvoke $r3.<android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState: int indexOfKeyframe(int[])>(r1);

        $i1 = virtualinvoke r0.<android.graphics.drawable.AnimatedStateListDrawable: int getCurrentIndex()>();

        if i0 == $i1 goto label2;

        $z1 = specialinvoke r0.<android.graphics.drawable.AnimatedStateListDrawable: boolean selectTransition(int)>(i0);

        if $z1 != 0 goto label1;

        $z2 = virtualinvoke r0.<android.graphics.drawable.AnimatedStateListDrawable: boolean selectDrawable(int)>(i0);

        if $z2 == 0 goto label2;

     label1:
        z3 = 1;

        goto label3;

     label2:
        z3 = 0;

     label3:
        r2 = virtualinvoke r0.<android.graphics.drawable.AnimatedStateListDrawable: android.graphics.drawable.Drawable getCurrent()>();

        z4 = z3;

        if r2 == null goto label4;

        $z0 = virtualinvoke r2.<android.graphics.drawable.Drawable: boolean setState(int[])>(r1);

        z4 = z3 | $z0;

     label4:
        return z4;
    }

    protected void setConstantState(android.graphics.drawable.DrawableContainer$DrawableContainerState)
    {
        android.graphics.drawable.AnimatedStateListDrawable r0;
        android.graphics.drawable.DrawableContainer$DrawableContainerState r1;
        boolean $z0;
        android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState $r2;

        r0 := @this: android.graphics.drawable.AnimatedStateListDrawable;

        r1 := @parameter0: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        specialinvoke r0.<android.graphics.drawable.StateListDrawable: void setConstantState(android.graphics.drawable.DrawableContainer$DrawableContainerState)>(r1);

        $z0 = r1 instanceof android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState;

        if $z0 == 0 goto label1;

        $r2 = (android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState) r1;

        r0.<android.graphics.drawable.AnimatedStateListDrawable: android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState mState> = $r2;

     label1:
        return;
    }

    public boolean setVisible(boolean, boolean)
    {
        android.graphics.drawable.AnimatedStateListDrawable r0;
        boolean z0, z1, z2;
        android.graphics.drawable.AnimatedStateListDrawable$Transition $r1, $r2;

        r0 := @this: android.graphics.drawable.AnimatedStateListDrawable;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        z2 = specialinvoke r0.<android.graphics.drawable.StateListDrawable: boolean setVisible(boolean,boolean)>(z0, z1);

        $r1 = r0.<android.graphics.drawable.AnimatedStateListDrawable: android.graphics.drawable.AnimatedStateListDrawable$Transition mTransition>;

        if $r1 == null goto label3;

        if z2 != 0 goto label1;

        if z1 == 0 goto label3;

     label1:
        if z0 == 0 goto label2;

        $r2 = r0.<android.graphics.drawable.AnimatedStateListDrawable: android.graphics.drawable.AnimatedStateListDrawable$Transition mTransition>;

        virtualinvoke $r2.<android.graphics.drawable.AnimatedStateListDrawable$Transition: void start()>();

        goto label3;

     label2:
        virtualinvoke r0.<android.graphics.drawable.AnimatedStateListDrawable: void jumpToCurrentState()>();

     label3:
        return z2;
    }
}
