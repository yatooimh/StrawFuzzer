public class android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT extends java.lang.Object implements android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimator, android.view.NativeVectorDrawableAnimator
{
    private static final int END_ANIMATION;
    private static final int MAX_SAMPLE_POINTS;
    private static final int RESET_ANIMATION;
    private static final int REVERSE_ANIMATION;
    private static final int START_ANIMATION;
    private boolean mContainsSequentialAnimators;
    private final android.graphics.drawable.AnimatedVectorDrawable mDrawable;
    private android.os.Handler mHandler;
    private boolean mInitialized;
    private boolean mIsInfinite;
    private boolean mIsReversible;
    private int mLastListenerId;
    private java.lang.ref.WeakReference mLastSeenTarget;
    private android.animation.Animator$AnimatorListener mListener;
    private final android.util.IntArray mPendingAnimationActions;
    private long mSetPtr;
    private final com.android.internal.util.VirtualRefBasePtr mSetRefBasePtr;
    private final android.util.LongArray mStartDelays;
    private boolean mStarted;
    private android.animation.PropertyValuesHolder$PropertyValues mTmpValues;

    void <init>(android.graphics.drawable.AnimatedVectorDrawable)
    {
        android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT r0;
        android.graphics.drawable.AnimatedVectorDrawable r1;
        long l0;
        android.util.LongArray $r2;
        android.animation.PropertyValuesHolder$PropertyValues $r3;
        android.util.IntArray $r4;
        com.android.internal.util.VirtualRefBasePtr $r5;

        r0 := @this: android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT;

        r1 := @parameter0: android.graphics.drawable.AnimatedVectorDrawable;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: android.animation.Animator$AnimatorListener mListener> = null;

        $r2 = new android.util.LongArray;

        specialinvoke $r2.<android.util.LongArray: void <init>()>();

        r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: android.util.LongArray mStartDelays> = $r2;

        $r3 = new android.animation.PropertyValuesHolder$PropertyValues;

        specialinvoke $r3.<android.animation.PropertyValuesHolder$PropertyValues: void <init>()>();

        r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: android.animation.PropertyValuesHolder$PropertyValues mTmpValues> = $r3;

        r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: long mSetPtr> = 0L;

        r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: boolean mContainsSequentialAnimators> = 0;

        r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: boolean mStarted> = 0;

        r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: boolean mInitialized> = 0;

        r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: boolean mIsReversible> = 0;

        r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: boolean mIsInfinite> = 0;

        r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: java.lang.ref.WeakReference mLastSeenTarget> = null;

        r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: int mLastListenerId> = 0;

        $r4 = new android.util.IntArray;

        specialinvoke $r4.<android.util.IntArray: void <init>()>();

        r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: android.util.IntArray mPendingAnimationActions> = $r4;

        r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: android.graphics.drawable.AnimatedVectorDrawable mDrawable> = r1;

        l0 = staticinvoke <android.graphics.drawable.AnimatedVectorDrawable: long access$800()>();

        r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: long mSetPtr> = l0;

        $r5 = new com.android.internal.util.VirtualRefBasePtr;

        specialinvoke $r5.<com.android.internal.util.VirtualRefBasePtr: void <init>(long)>(l0);

        r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: com.android.internal.util.VirtualRefBasePtr mSetRefBasePtr> = $r5;

        return;
    }

    static android.util.IntArray access$000(android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT)
    {
        android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT r0;
        android.util.IntArray $r1;

        r0 := @parameter0: android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT;

        $r1 = r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: android.util.IntArray mPendingAnimationActions>;

        return $r1;
    }

    static android.animation.Animator$AnimatorListener access$200(android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT)
    {
        android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT r0;
        android.animation.Animator$AnimatorListener $r1;

        r0 := @parameter0: android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT;

        $r1 = r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: android.animation.Animator$AnimatorListener mListener>;

        return $r1;
    }

    static void access$300(android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT, android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimator)
    {
        android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT r0;
        android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimator r1;

        r0 := @parameter0: android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT;

        r1 := @parameter1: android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimator;

        specialinvoke r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: void transferPendingActions(android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimator)>(r1);

        return;
    }

    private void addPendingAction(int)
    {
        android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT r0;
        int i0;
        android.util.IntArray $r1;

        r0 := @this: android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT;

        i0 := @parameter0: int;

        specialinvoke r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: void invalidateOwningView()>();

        $r1 = r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: android.util.IntArray mPendingAnimationActions>;

        virtualinvoke $r1.<android.util.IntArray: void add(int)>(i0);

        return;
    }

    private static void callOnFinished(android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT, int)
    {
        android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT r0;
        int i0;
        android.graphics.drawable._$$Lambda$AnimatedVectorDrawable$VectorDrawableAnimatorRT$PzjgSeyQweoFjbEZJP80UteZqm8 $r1;
        android.os.Handler $r2;

        r0 := @parameter0: android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT;

        i0 := @parameter1: int;

        $r2 = r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: android.os.Handler mHandler>;

        $r1 = new android.graphics.drawable._$$Lambda$AnimatedVectorDrawable$VectorDrawableAnimatorRT$PzjgSeyQweoFjbEZJP80UteZqm8;

        specialinvoke $r1.<android.graphics.drawable._$$Lambda$AnimatedVectorDrawable$VectorDrawableAnimatorRT$PzjgSeyQweoFjbEZJP80UteZqm8: void <init>(android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT,int)>(r0, i0);

        virtualinvoke $r2.<android.os.Handler: boolean post(java.lang.Runnable)>($r1);

        return;
    }

    private static float[] createFloatDataPoints(android.animation.PropertyValuesHolder$PropertyValues$DataSource, long)
    {
        android.animation.PropertyValuesHolder$PropertyValues$DataSource r0;
        long l0;
        int i1, $i2, i3;
        float[] r1;
        float f0, $f1, $f2, $f3;
        java.lang.Object $r2;
        java.lang.Float $r3;

        r0 := @parameter0: android.animation.PropertyValuesHolder$PropertyValues$DataSource;

        l0 := @parameter1: long;

        i1 = staticinvoke <android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: int getFrameCount(long)>(l0);

        r1 = newarray (float)[i1];

        $i2 = i1 - 1;

        f0 = (float) $i2;

        i3 = 0;

     label1:
        if i3 >= i1 goto label2;

        $f1 = (float) i3;

        $f2 = $f1 / f0;

        $r2 = interfaceinvoke r0.<android.animation.PropertyValuesHolder$PropertyValues$DataSource: java.lang.Object getValueAtFraction(float)>($f2);

        $r3 = (java.lang.Float) $r2;

        $f3 = virtualinvoke $r3.<java.lang.Float: float floatValue()>();

        r1[i3] = $f3;

        i3 = i3 + 1;

        goto label1;

     label2:
        return r1;
    }

    private static int[] createIntDataPoints(android.animation.PropertyValuesHolder$PropertyValues$DataSource, long)
    {
        android.animation.PropertyValuesHolder$PropertyValues$DataSource r0;
        long l0;
        int i1, $i2, $i3, i4;
        int[] r1;
        float f0, $f1, $f2;
        java.lang.Object $r2;
        java.lang.Integer $r3;

        r0 := @parameter0: android.animation.PropertyValuesHolder$PropertyValues$DataSource;

        l0 := @parameter1: long;

        i1 = staticinvoke <android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: int getFrameCount(long)>(l0);

        r1 = newarray (int)[i1];

        $i2 = i1 - 1;

        f0 = (float) $i2;

        i4 = 0;

     label1:
        if i4 >= i1 goto label2;

        $f1 = (float) i4;

        $f2 = $f1 / f0;

        $r2 = interfaceinvoke r0.<android.animation.PropertyValuesHolder$PropertyValues$DataSource: java.lang.Object getValueAtFraction(float)>($f2);

        $r3 = (java.lang.Integer) $r2;

        $i3 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        r1[i4] = $i3;

        i4 = i4 + 1;

        goto label1;

     label2:
        return r1;
    }

    private void createNativeChildAnimator(long, long, android.animation.ObjectAnimator)
    {
        android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT r0;
        long l0, l2, l3, $l4, $l5, l7, l8, l9, l10;
        android.animation.ObjectAnimator r1;
        int i1, $i6;
        android.animation.TimeInterpolator r2;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        android.util.LongArray $r3;

        r0 := @this: android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT;

        l0 := @parameter0: long;

        l7 := @parameter1: long;

        r1 := @parameter2: android.animation.ObjectAnimator;

        l8 = virtualinvoke r1.<android.animation.ObjectAnimator: long getDuration()>();

        i1 = virtualinvoke r1.<android.animation.ObjectAnimator: int getRepeatCount()>();

        l2 = virtualinvoke r1.<android.animation.ObjectAnimator: long getStartDelay()>();

        r2 = virtualinvoke r1.<android.animation.ObjectAnimator: android.animation.TimeInterpolator getInterpolator()>();

        l3 = staticinvoke <android.graphics.animation.NativeInterpolatorFactory: long createNativeInterpolator(android.animation.TimeInterpolator,long)>(r2, l8);

        $l4 = l7 + l2;

        $f0 = (float) $l4;

        $f1 = staticinvoke <android.animation.ValueAnimator: float getDurationScale()>();

        $f2 = $f0 * $f1;

        l9 = (long) $f2;

        $f3 = (float) l8;

        $f4 = staticinvoke <android.animation.ValueAnimator: float getDurationScale()>();

        $f5 = $f3 * $f4;

        l10 = (long) $f5;

        $r3 = r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: android.util.LongArray mStartDelays>;

        virtualinvoke $r3.<android.util.LongArray: void add(long)>(l9);

        $l5 = r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: long mSetPtr>;

        $i6 = virtualinvoke r1.<android.animation.ObjectAnimator: int getRepeatMode()>();

        staticinvoke <android.graphics.drawable.AnimatedVectorDrawable: void access$1800(long,long,long,long,long,int,int)>($l5, l0, l3, l9, l10, i1, $i6);

        return;
    }

    private void createRTAnimator(android.animation.ObjectAnimator, long)
    {
        android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT r0;
        android.animation.ObjectAnimator r1;
        long l0;
        android.animation.PropertyValuesHolder[] r2;
        java.lang.Object r3, $r8;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        android.graphics.drawable.VectorDrawable$VectorDrawableState $r4;
        int $i1, i2;
        android.animation.PropertyValuesHolder$PropertyValues $r5, $r7, $r13;
        android.animation.PropertyValuesHolder $r6;
        android.graphics.drawable.AnimatedVectorDrawable $r9;
        android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState $r10;
        java.lang.IllegalArgumentException $r11;
        android.graphics.drawable.VectorDrawable$VFullPath $r12;
        java.lang.String $r14;
        android.graphics.drawable.VectorDrawable$VPath $r15;
        android.graphics.drawable.VectorDrawable$VGroup $r16;

        r0 := @this: android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT;

        r1 := @parameter0: android.animation.ObjectAnimator;

        l0 := @parameter1: long;

        r2 = virtualinvoke r1.<android.animation.ObjectAnimator: android.animation.PropertyValuesHolder[] getValues()>();

        r3 = virtualinvoke r1.<android.animation.ObjectAnimator: java.lang.Object getTarget()>();

        $z0 = r3 instanceof android.graphics.drawable.VectorDrawable$VGroup;

        if $z0 == 0 goto label1;

        $r16 = (android.graphics.drawable.VectorDrawable$VGroup) r3;

        specialinvoke r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: void createRTAnimatorForGroup(android.animation.PropertyValuesHolder[],android.animation.ObjectAnimator,android.graphics.drawable.VectorDrawable$VGroup,long)>(r2, r1, $r16, l0);

        goto label9;

     label1:
        $z1 = r3 instanceof android.graphics.drawable.VectorDrawable$VPath;

        if $z1 == 0 goto label8;

        i2 = 0;

     label2:
        $i1 = lengthof r2;

        if i2 >= $i1 goto label7;

        $r6 = r2[i2];

        $r5 = r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: android.animation.PropertyValuesHolder$PropertyValues mTmpValues>;

        virtualinvoke $r6.<android.animation.PropertyValuesHolder: void getPropertyValues(android.animation.PropertyValuesHolder$PropertyValues)>($r5);

        $r7 = r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: android.animation.PropertyValuesHolder$PropertyValues mTmpValues>;

        $r8 = $r7.<android.animation.PropertyValuesHolder$PropertyValues: java.lang.Object endValue>;

        $z3 = $r8 instanceof android.util.PathParser$PathData;

        if $z3 == 0 goto label3;

        $r13 = r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: android.animation.PropertyValuesHolder$PropertyValues mTmpValues>;

        $r14 = $r13.<android.animation.PropertyValuesHolder$PropertyValues: java.lang.String propertyName>;

        $z6 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>("pathData");

        if $z6 == 0 goto label3;

        $r15 = (android.graphics.drawable.VectorDrawable$VPath) r3;

        specialinvoke r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: void createRTAnimatorForPath(android.animation.ObjectAnimator,android.graphics.drawable.VectorDrawable$VPath,long)>(r1, $r15, l0);

        goto label5;

     label3:
        $z4 = r3 instanceof android.graphics.drawable.VectorDrawable$VFullPath;

        if $z4 == 0 goto label4;

        $r12 = (android.graphics.drawable.VectorDrawable$VFullPath) r3;

        specialinvoke r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: void createRTAnimatorForFullPath(android.animation.ObjectAnimator,android.graphics.drawable.VectorDrawable$VFullPath,long)>(r1, $r12, l0);

        goto label5;

     label4:
        $r9 = r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: android.graphics.drawable.AnimatedVectorDrawable mDrawable>;

        $r10 = staticinvoke <android.graphics.drawable.AnimatedVectorDrawable: android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState access$900(android.graphics.drawable.AnimatedVectorDrawable)>($r9);

        $z5 = staticinvoke <android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState: boolean access$100(android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState)>($r10);

        if $z5 == 0 goto label6;

     label5:
        i2 = i2 + 1;

        goto label2;

     label6:
        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("ClipPath only supports PathData property");

        throw $r11;

     label7:
        goto label9;

     label8:
        $z2 = r3 instanceof android.graphics.drawable.VectorDrawable$VectorDrawableState;

        if $z2 == 0 goto label9;

        $r4 = (android.graphics.drawable.VectorDrawable$VectorDrawableState) r3;

        specialinvoke r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: void createRTAnimatorForRootGroup(android.animation.PropertyValuesHolder[],android.animation.ObjectAnimator,android.graphics.drawable.VectorDrawable$VectorDrawableState,long)>(r2, r1, $r4, l0);

     label9:
        return;
    }

    private void createRTAnimatorForFullPath(android.animation.ObjectAnimator, android.graphics.drawable.VectorDrawable$VFullPath, long)
    {
        android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT r0;
        long l0, $l2, $l6, l8, l9, l10, l11;
        int i1, $i3, $i4, $i5, $i7;
        android.animation.PropertyValuesHolder$PropertyValues $r1, $r3, $r5, $r8, $r11, $r13, $r19, $r25, $r28, $r30, $r33, $r36, $r38, $r40, $r47;
        java.lang.String $r2, $r20, $r24, $r52;
        java.lang.Class $r4, $r26, $r27, $r29, $r41, $r42, $r48;
        java.lang.Object $r6, $r9, $r31, $r34;
        java.lang.Float $r7, $r10;
        float $f0, $f1;
        android.animation.PropertyValuesHolder$PropertyValues$DataSource $r12, $r14, $r37, $r39;
        android.graphics.drawable.AnimatedVectorDrawable $r15, $r43;
        android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState $r16, $r44;
        boolean $z0, $z1;
        java.lang.StringBuilder $r17, $r45;
        java.lang.IllegalArgumentException $r23;
        java.lang.Integer $r32, $r35;
        java.lang.UnsupportedOperationException $r51;
        android.animation.ObjectAnimator r53;
        android.graphics.drawable.VectorDrawable$VFullPath r54;
        int[] r56;
        float[] r58;

        r0 := @this: android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT;

        r53 := @parameter0: android.animation.ObjectAnimator;

        r54 := @parameter1: android.graphics.drawable.VectorDrawable$VFullPath;

        l0 := @parameter2: long;

        $r1 = r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: android.animation.PropertyValuesHolder$PropertyValues mTmpValues>;

        $r2 = $r1.<android.animation.PropertyValuesHolder$PropertyValues: java.lang.String propertyName>;

        i1 = virtualinvoke r54.<android.graphics.drawable.VectorDrawable$VFullPath: int getPropertyIndex(java.lang.String)>($r2);

        l8 = virtualinvoke r54.<android.graphics.drawable.VectorDrawable$VFullPath: long getNativePtr()>();

        $r3 = r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: android.animation.PropertyValuesHolder$PropertyValues mTmpValues>;

        $r4 = $r3.<android.animation.PropertyValuesHolder$PropertyValues: java.lang.Class type>;

        if $r4 == class "Ljava/lang/Float;" goto label5;

        $r25 = r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: android.animation.PropertyValuesHolder$PropertyValues mTmpValues>;

        $r27 = $r25.<android.animation.PropertyValuesHolder$PropertyValues: java.lang.Class type>;

        $r26 = <java.lang.Float: java.lang.Class TYPE>;

        if $r27 != $r26 goto label1;

        goto label5;

     label1:
        $r28 = r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: android.animation.PropertyValuesHolder$PropertyValues mTmpValues>;

        $r29 = $r28.<android.animation.PropertyValuesHolder$PropertyValues: java.lang.Class type>;

        if $r29 == class "Ljava/lang/Integer;" goto label4;

        $r40 = r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: android.animation.PropertyValuesHolder$PropertyValues mTmpValues>;

        $r42 = $r40.<android.animation.PropertyValuesHolder$PropertyValues: java.lang.Class type>;

        $r41 = <java.lang.Integer: java.lang.Class TYPE>;

        if $r42 != $r41 goto label2;

        goto label4;

     label2:
        $r43 = r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: android.graphics.drawable.AnimatedVectorDrawable mDrawable>;

        $r44 = staticinvoke <android.graphics.drawable.AnimatedVectorDrawable: android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState access$900(android.graphics.drawable.AnimatedVectorDrawable)>($r43);

        $z1 = staticinvoke <android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState: boolean access$100(android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState)>($r44);

        if $z1 == 0 goto label3;

        return;

     label3:
        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported type: ");

        $r47 = r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: android.animation.PropertyValuesHolder$PropertyValues mTmpValues>;

        $r48 = $r47.<android.animation.PropertyValuesHolder$PropertyValues: java.lang.Class type>;

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r48);

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Only float, int or PathData value is supported for Paths.");

        $r51 = new java.lang.UnsupportedOperationException;

        $r52 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r51.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r52);

        throw $r51;

     label4:
        $r30 = r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: android.animation.PropertyValuesHolder$PropertyValues mTmpValues>;

        $r31 = $r30.<android.animation.PropertyValuesHolder$PropertyValues: java.lang.Object startValue>;

        $r32 = (java.lang.Integer) $r31;

        $i4 = virtualinvoke $r32.<java.lang.Integer: int intValue()>();

        $r33 = r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: android.animation.PropertyValuesHolder$PropertyValues mTmpValues>;

        $r34 = $r33.<android.animation.PropertyValuesHolder$PropertyValues: java.lang.Object endValue>;

        $r35 = (java.lang.Integer) $r34;

        $i5 = virtualinvoke $r35.<java.lang.Integer: int intValue()>();

        l9 = staticinvoke <android.graphics.drawable.AnimatedVectorDrawable: long access$1500(long,int,int,int)>(l8, i1, $i4, $i5);

        l10 = l9;

        $r36 = r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: android.animation.PropertyValuesHolder$PropertyValues mTmpValues>;

        $r37 = $r36.<android.animation.PropertyValuesHolder$PropertyValues: android.animation.PropertyValuesHolder$PropertyValues$DataSource dataSource>;

        if $r37 == null goto label8;

        $r38 = r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: android.animation.PropertyValuesHolder$PropertyValues mTmpValues>;

        $r39 = $r38.<android.animation.PropertyValuesHolder$PropertyValues: android.animation.PropertyValuesHolder$PropertyValues$DataSource dataSource>;

        $l6 = virtualinvoke r53.<android.animation.ObjectAnimator: long getDuration()>();

        r56 = staticinvoke <android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: int[] createIntDataPoints(android.animation.PropertyValuesHolder$PropertyValues$DataSource,long)>($r39, $l6);

        $i7 = lengthof r56;

        staticinvoke <android.graphics.drawable.AnimatedVectorDrawable: void access$1600(long,int[],int)>(l9, r56, $i7);

        l10 = l9;

        goto label8;

     label5:
        if i1 >= 0 goto label7;

        $r15 = r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: android.graphics.drawable.AnimatedVectorDrawable mDrawable>;

        $r16 = staticinvoke <android.graphics.drawable.AnimatedVectorDrawable: android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState access$900(android.graphics.drawable.AnimatedVectorDrawable)>($r15);

        $z0 = staticinvoke <android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState: boolean access$100(android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState)>($r16);

        if $z0 == 0 goto label6;

        return;

     label6:
        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Property: ");

        $r19 = r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: android.animation.PropertyValuesHolder$PropertyValues mTmpValues>;

        $r20 = $r19.<android.animation.PropertyValuesHolder$PropertyValues: java.lang.String propertyName>;

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not supported for FullPath");

        $r23 = new java.lang.IllegalArgumentException;

        $r24 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r23.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r24);

        throw $r23;

     label7:
        $r5 = r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: android.animation.PropertyValuesHolder$PropertyValues mTmpValues>;

        $r6 = $r5.<android.animation.PropertyValuesHolder$PropertyValues: java.lang.Object startValue>;

        $r7 = (java.lang.Float) $r6;

        $f0 = virtualinvoke $r7.<java.lang.Float: float floatValue()>();

        $r8 = r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: android.animation.PropertyValuesHolder$PropertyValues mTmpValues>;

        $r9 = $r8.<android.animation.PropertyValuesHolder$PropertyValues: java.lang.Object endValue>;

        $r10 = (java.lang.Float) $r9;

        $f1 = virtualinvoke $r10.<java.lang.Float: float floatValue()>();

        l11 = staticinvoke <android.graphics.drawable.AnimatedVectorDrawable: long access$1400(long,int,float,float)>(l8, i1, $f0, $f1);

        l10 = l11;

        $r11 = r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: android.animation.PropertyValuesHolder$PropertyValues mTmpValues>;

        $r12 = $r11.<android.animation.PropertyValuesHolder$PropertyValues: android.animation.PropertyValuesHolder$PropertyValues$DataSource dataSource>;

        if $r12 == null goto label8;

        $r13 = r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: android.animation.PropertyValuesHolder$PropertyValues mTmpValues>;

        $r14 = $r13.<android.animation.PropertyValuesHolder$PropertyValues: android.animation.PropertyValuesHolder$PropertyValues$DataSource dataSource>;

        $l2 = virtualinvoke r53.<android.animation.ObjectAnimator: long getDuration()>();

        r58 = staticinvoke <android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: float[] createFloatDataPoints(android.animation.PropertyValuesHolder$PropertyValues$DataSource,long)>($r14, $l2);

        $i3 = lengthof r58;

        staticinvoke <android.graphics.drawable.AnimatedVectorDrawable: void access$1200(long,float[],int)>(l11, r58, $i3);

        l10 = l11;

     label8:
        specialinvoke r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: void createNativeChildAnimator(long,long,android.animation.ObjectAnimator)>(l10, l0, r53);

        return;
    }

    private void createRTAnimatorForGroup(android.animation.PropertyValuesHolder[], android.animation.ObjectAnimator, android.graphics.drawable.VectorDrawable$VGroup, long)
    {
        android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT r0;
        android.animation.PropertyValuesHolder[] r1;
        android.animation.ObjectAnimator r2;
        long l0, l1, l3, $l5;
        int i2, $i4, $i6, i7;
        android.animation.PropertyValuesHolder$PropertyValues $r3, $r5, $r7, $r9, $r12, $r15, $r17, $r19;
        android.animation.PropertyValuesHolder $r4;
        java.lang.String $r6;
        java.lang.Class $r8, $r20, $r21;
        java.lang.Object $r10, $r13;
        java.lang.Float $r11, $r14;
        float $f0, $f1;
        android.animation.PropertyValuesHolder$PropertyValues$DataSource $r16, $r18;
        android.graphics.drawable.VectorDrawable$VGroup r22;
        float[] r23;

        r0 := @this: android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT;

        r1 := @parameter0: android.animation.PropertyValuesHolder[];

        r2 := @parameter1: android.animation.ObjectAnimator;

        r22 := @parameter2: android.graphics.drawable.VectorDrawable$VGroup;

        l0 := @parameter3: long;

        l1 = virtualinvoke r22.<android.graphics.drawable.VectorDrawable$VGroup: long getNativePtr()>();

        i7 = 0;

     label1:
        $i4 = lengthof r1;

        if i7 >= $i4 goto label6;

        $r4 = r1[i7];

        $r3 = r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: android.animation.PropertyValuesHolder$PropertyValues mTmpValues>;

        virtualinvoke $r4.<android.animation.PropertyValuesHolder: void getPropertyValues(android.animation.PropertyValuesHolder$PropertyValues)>($r3);

        $r5 = r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: android.animation.PropertyValuesHolder$PropertyValues mTmpValues>;

        $r6 = $r5.<android.animation.PropertyValuesHolder$PropertyValues: java.lang.String propertyName>;

        i2 = staticinvoke <android.graphics.drawable.VectorDrawable$VGroup: int getPropertyIndex(java.lang.String)>($r6);

        $r7 = r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: android.animation.PropertyValuesHolder$PropertyValues mTmpValues>;

        $r8 = $r7.<android.animation.PropertyValuesHolder$PropertyValues: java.lang.Class type>;

        if $r8 == class "Ljava/lang/Float;" goto label2;

        $r19 = r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: android.animation.PropertyValuesHolder$PropertyValues mTmpValues>;

        $r21 = $r19.<android.animation.PropertyValuesHolder$PropertyValues: java.lang.Class type>;

        $r20 = <java.lang.Float: java.lang.Class TYPE>;

        if $r21 == $r20 goto label2;

        goto label5;

     label2:
        if i2 >= 0 goto label3;

        goto label5;

     label3:
        $r9 = r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: android.animation.PropertyValuesHolder$PropertyValues mTmpValues>;

        $r10 = $r9.<android.animation.PropertyValuesHolder$PropertyValues: java.lang.Object startValue>;

        $r11 = (java.lang.Float) $r10;

        $f0 = virtualinvoke $r11.<java.lang.Float: float floatValue()>();

        $r12 = r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: android.animation.PropertyValuesHolder$PropertyValues mTmpValues>;

        $r13 = $r12.<android.animation.PropertyValuesHolder$PropertyValues: java.lang.Object endValue>;

        $r14 = (java.lang.Float) $r13;

        $f1 = virtualinvoke $r14.<java.lang.Float: float floatValue()>();

        l3 = staticinvoke <android.graphics.drawable.AnimatedVectorDrawable: long access$1100(long,int,float,float)>(l1, i2, $f0, $f1);

        $r15 = r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: android.animation.PropertyValuesHolder$PropertyValues mTmpValues>;

        $r16 = $r15.<android.animation.PropertyValuesHolder$PropertyValues: android.animation.PropertyValuesHolder$PropertyValues$DataSource dataSource>;

        if $r16 == null goto label4;

        $r17 = r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: android.animation.PropertyValuesHolder$PropertyValues mTmpValues>;

        $r18 = $r17.<android.animation.PropertyValuesHolder$PropertyValues: android.animation.PropertyValuesHolder$PropertyValues$DataSource dataSource>;

        $l5 = virtualinvoke r2.<android.animation.ObjectAnimator: long getDuration()>();

        r23 = staticinvoke <android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: float[] createFloatDataPoints(android.animation.PropertyValuesHolder$PropertyValues$DataSource,long)>($r18, $l5);

        $i6 = lengthof r23;

        staticinvoke <android.graphics.drawable.AnimatedVectorDrawable: void access$1200(long,float[],int)>(l3, r23, $i6);

     label4:
        specialinvoke r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: void createNativeChildAnimator(long,long,android.animation.ObjectAnimator)>(l3, l0, r2);

     label5:
        i7 = i7 + 1;

        goto label1;

     label6:
        return;
    }

    private void createRTAnimatorForPath(android.animation.ObjectAnimator, android.graphics.drawable.VectorDrawable$VPath, long)
    {
        android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT r0;
        android.animation.ObjectAnimator r1;
        android.graphics.drawable.VectorDrawable$VPath r2;
        long l0, $l1, $l2, $l3, $l4;
        android.animation.PropertyValuesHolder$PropertyValues $r3, $r6;
        java.lang.Object $r4, $r7;
        android.util.PathParser$PathData $r5, $r8;

        r0 := @this: android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT;

        r1 := @parameter0: android.animation.ObjectAnimator;

        r2 := @parameter1: android.graphics.drawable.VectorDrawable$VPath;

        l0 := @parameter2: long;

        $l1 = virtualinvoke r2.<android.graphics.drawable.VectorDrawable$VPath: long getNativePtr()>();

        $r3 = r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: android.animation.PropertyValuesHolder$PropertyValues mTmpValues>;

        $r4 = $r3.<android.animation.PropertyValuesHolder$PropertyValues: java.lang.Object startValue>;

        $r5 = (android.util.PathParser$PathData) $r4;

        $l2 = virtualinvoke $r5.<android.util.PathParser$PathData: long getNativePtr()>();

        $r6 = r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: android.animation.PropertyValuesHolder$PropertyValues mTmpValues>;

        $r7 = $r6.<android.animation.PropertyValuesHolder$PropertyValues: java.lang.Object endValue>;

        $r8 = (android.util.PathParser$PathData) $r7;

        $l3 = virtualinvoke $r8.<android.util.PathParser$PathData: long getNativePtr()>();

        $l4 = staticinvoke <android.graphics.drawable.AnimatedVectorDrawable: long access$1300(long,long,long)>($l1, $l2, $l3);

        specialinvoke r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: void createNativeChildAnimator(long,long,android.animation.ObjectAnimator)>($l4, l0, r1);

        return;
    }

    private void createRTAnimatorForRootGroup(android.animation.PropertyValuesHolder[], android.animation.ObjectAnimator, android.graphics.drawable.VectorDrawable$VectorDrawableState, long)
    {
        android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT r0;
        android.animation.ObjectAnimator r1;
        long l0, $l2, l4, l6;
        java.lang.String $r2, $r13;
        boolean $z0, $z1, $z2, $z3;
        int $i1, $i3, i5;
        float $f0, $f1;
        android.animation.PropertyValuesHolder$PropertyValues $r3, $r5, $r10, $r12, $r14, $r16;
        android.animation.PropertyValuesHolder$PropertyValues$DataSource $r4, $r6;
        android.graphics.drawable.AnimatedVectorDrawable $r7, $r18;
        android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState $r8, $r19;
        java.lang.UnsupportedOperationException $r9, $r20;
        android.animation.PropertyValuesHolder $r11;
        java.lang.Object $r15, $r17;
        android.animation.PropertyValuesHolder[] r21;
        android.graphics.drawable.VectorDrawable$VectorDrawableState r22;
        java.lang.Float r23, r24;
        float[] r25;

        r0 := @this: android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT;

        r21 := @parameter0: android.animation.PropertyValuesHolder[];

        r1 := @parameter1: android.animation.ObjectAnimator;

        r22 := @parameter2: android.graphics.drawable.VectorDrawable$VectorDrawableState;

        l0 := @parameter3: long;

        l4 = virtualinvoke r22.<android.graphics.drawable.VectorDrawable$VectorDrawableState: long getNativeRenderer()>();

        $r2 = virtualinvoke r1.<android.animation.ObjectAnimator: java.lang.String getPropertyName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("alpha");

        if $z0 != 0 goto label2;

        $r18 = r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: android.graphics.drawable.AnimatedVectorDrawable mDrawable>;

        $r19 = staticinvoke <android.graphics.drawable.AnimatedVectorDrawable: android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState access$900(android.graphics.drawable.AnimatedVectorDrawable)>($r18);

        $z3 = staticinvoke <android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState: boolean access$100(android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState)>($r19);

        if $z3 == 0 goto label1;

        return;

     label1:
        $r20 = new java.lang.UnsupportedOperationException;

        specialinvoke $r20.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Only alpha is supported for root group");

        throw $r20;

     label2:
        i5 = 0;

     label3:
        $i1 = lengthof r21;

        if i5 >= $i1 goto label5;

        $r11 = r21[i5];

        $r10 = r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: android.animation.PropertyValuesHolder$PropertyValues mTmpValues>;

        virtualinvoke $r11.<android.animation.PropertyValuesHolder: void getPropertyValues(android.animation.PropertyValuesHolder$PropertyValues)>($r10);

        $r12 = r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: android.animation.PropertyValuesHolder$PropertyValues mTmpValues>;

        $r13 = $r12.<android.animation.PropertyValuesHolder$PropertyValues: java.lang.String propertyName>;

        $z2 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>("alpha");

        if $z2 == 0 goto label4;

        $r14 = r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: android.animation.PropertyValuesHolder$PropertyValues mTmpValues>;

        $r15 = $r14.<android.animation.PropertyValuesHolder$PropertyValues: java.lang.Object startValue>;

        r23 = (java.lang.Float) $r15;

        $r16 = r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: android.animation.PropertyValuesHolder$PropertyValues mTmpValues>;

        $r17 = $r16.<android.animation.PropertyValuesHolder$PropertyValues: java.lang.Object endValue>;

        r24 = (java.lang.Float) $r17;

        goto label6;

     label4:
        i5 = i5 + 1;

        goto label3;

     label5:
        r23 = null;

        r24 = null;

     label6:
        if r23 != null goto label8;

        if r24 != null goto label8;

        $r7 = r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: android.graphics.drawable.AnimatedVectorDrawable mDrawable>;

        $r8 = staticinvoke <android.graphics.drawable.AnimatedVectorDrawable: android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState access$900(android.graphics.drawable.AnimatedVectorDrawable)>($r7);

        $z1 = staticinvoke <android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState: boolean access$100(android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState)>($r8);

        if $z1 == 0 goto label7;

        return;

     label7:
        $r9 = new java.lang.UnsupportedOperationException;

        specialinvoke $r9.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("No alpha values are specified");

        throw $r9;

     label8:
        $f0 = virtualinvoke r23.<java.lang.Float: float floatValue()>();

        $f1 = virtualinvoke r24.<java.lang.Float: float floatValue()>();

        l6 = staticinvoke <android.graphics.drawable.AnimatedVectorDrawable: long access$1700(long,float,float)>(l4, $f0, $f1);

        $r3 = r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: android.animation.PropertyValuesHolder$PropertyValues mTmpValues>;

        $r4 = $r3.<android.animation.PropertyValuesHolder$PropertyValues: android.animation.PropertyValuesHolder$PropertyValues$DataSource dataSource>;

        if $r4 == null goto label9;

        $r5 = r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: android.animation.PropertyValuesHolder$PropertyValues mTmpValues>;

        $r6 = $r5.<android.animation.PropertyValuesHolder$PropertyValues: android.animation.PropertyValuesHolder$PropertyValues$DataSource dataSource>;

        $l2 = virtualinvoke r1.<android.animation.ObjectAnimator: long getDuration()>();

        r25 = staticinvoke <android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: float[] createFloatDataPoints(android.animation.PropertyValuesHolder$PropertyValues$DataSource,long)>($r6, $l2);

        $i3 = lengthof r25;

        staticinvoke <android.graphics.drawable.AnimatedVectorDrawable: void access$1200(long,float[],int)>(l6, r25, $i3);

     label9:
        specialinvoke r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: void createNativeChildAnimator(long,long,android.animation.ObjectAnimator)>(l6, l0, r1);

        return;
    }

    private void endAnimation()
    {
        android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT r0;
        long $l0;

        r0 := @this: android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT;

        $l0 = r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: long mSetPtr>;

        staticinvoke <android.graphics.drawable.AnimatedVectorDrawable: void access$2000(long)>($l0);

        specialinvoke r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: void invalidateOwningView()>();

        return;
    }

    private static int getFrameCount(long)
    {
        long l0, $l2, $l3;
        int i1, $i4, i6, i7;
        android.view.Choreographer $r1;
        double $d0, $d1, $d2, $d3;
        java.lang.StringBuilder $r2;
        java.lang.String $r6;

        l0 := @parameter0: long;

        $r1 = staticinvoke <android.view.Choreographer: android.view.Choreographer getInstance()>();

        $l2 = virtualinvoke $r1.<android.view.Choreographer: long getFrameIntervalNanos()>();

        $l3 = $l2 / 1000000L;

        i6 = (int) $l3;

        $d1 = (double) l0;

        $d0 = (double) i6;

        $d2 = $d1 / $d0;

        $d3 = staticinvoke <java.lang.Math: double ceil(double)>($d2);

        $i4 = (int) $d3;

        i1 = staticinvoke <java.lang.Math: int max(int,int)>(2, $i4);

        i7 = i1;

        if i1 <= 300 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duration for the animation is too long :");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", the animation will subsample the keyframe or path data.");

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("AnimatedVectorDrawable", $r6);

        i7 = 300;

     label1:
        return i7;
    }

    private void handlePendingAction(int)
    {
        android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT r0;
        int i0;
        java.lang.StringBuilder $r2;
        java.lang.UnsupportedOperationException $r6;
        java.lang.String $r7;

        r0 := @this: android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT;

        i0 := @parameter0: int;

        if i0 != 1 goto label1;

        specialinvoke r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: void startAnimation()>();

        goto label4;

     label1:
        if i0 != 2 goto label2;

        specialinvoke r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: void reverseAnimation()>();

        goto label4;

     label2:
        if i0 != 3 goto label3;

        specialinvoke r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: void resetAnimation()>();

        goto label4;

     label3:
        if i0 != 4 goto label5;

        specialinvoke r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: void endAnimation()>();

     label4:
        return;

     label5:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Animation action ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("is not supported");

        $r6 = new java.lang.UnsupportedOperationException;

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r7);

        throw $r6;
    }

    private void invalidateOwningView()
    {
        android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT r0;
        android.graphics.drawable.AnimatedVectorDrawable $r1;

        r0 := @this: android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT;

        $r1 = r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: android.graphics.drawable.AnimatedVectorDrawable mDrawable>;

        virtualinvoke $r1.<android.graphics.drawable.AnimatedVectorDrawable: void invalidateSelf()>();

        return;
    }

    static void lambda$callOnFinished$0(android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT, int)
    {
        android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT r0;
        int i0;

        r0 := @parameter0: android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT;

        i0 := @parameter1: int;

        specialinvoke r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: void onAnimationEnd(int)>(i0);

        return;
    }

    private void onAnimationEnd(int)
    {
        android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT r0;
        int i0, $i1;
        android.animation.Animator$AnimatorListener r1;

        r0 := @this: android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT;

        i0 := @parameter0: int;

        $i1 = r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: int mLastListenerId>;

        if i0 == $i1 goto label1;

        return;

     label1:
        r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: boolean mStarted> = 0;

        specialinvoke r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: void invalidateOwningView()>();

        r1 = r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: android.animation.Animator$AnimatorListener mListener>;

        if r1 == null goto label2;

        interfaceinvoke r1.<android.animation.Animator$AnimatorListener: void onAnimationEnd(android.animation.Animator)>(null);

     label2:
        return;
    }

    private void parseAnimatorSet(android.animation.AnimatorSet, long)
    {
        android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT r0;
        java.util.ArrayList r1;
        boolean z0, $z1, $z2;
        int $i0, i3;
        java.lang.Object $r2;
        long $l1, l2, l4;
        android.animation.ObjectAnimator $r3;
        android.animation.AnimatorSet $r4, r5;
        android.animation.Animator r6;

        r0 := @this: android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT;

        r5 := @parameter0: android.animation.AnimatorSet;

        l2 := @parameter1: long;

        r1 = virtualinvoke r5.<android.animation.AnimatorSet: java.util.ArrayList getChildAnimations()>();

        z0 = virtualinvoke r5.<android.animation.AnimatorSet: boolean shouldPlayTogether()>();

        i3 = 0;

     label1:
        $i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if i3 >= $i0 goto label5;

        $r2 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r6 = (android.animation.Animator) $r2;

        $z1 = r6 instanceof android.animation.AnimatorSet;

        if $z1 == 0 goto label2;

        $r4 = (android.animation.AnimatorSet) r6;

        specialinvoke r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: void parseAnimatorSet(android.animation.AnimatorSet,long)>($r4, l2);

        goto label3;

     label2:
        $z2 = r6 instanceof android.animation.ObjectAnimator;

        if $z2 == 0 goto label3;

        $r3 = (android.animation.ObjectAnimator) r6;

        specialinvoke r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: void createRTAnimator(android.animation.ObjectAnimator,long)>($r3, l2);

     label3:
        l4 = l2;

        if z0 != 0 goto label4;

        $l1 = virtualinvoke r6.<android.animation.Animator: long getTotalDuration()>();

        l4 = l2 + $l1;

        r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: boolean mContainsSequentialAnimators> = 1;

     label4:
        i3 = i3 + 1;

        l2 = l4;

        goto label1;

     label5:
        return;
    }

    private void resetAnimation()
    {
        android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT r0;
        long $l0;

        r0 := @this: android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT;

        $l0 = r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: long mSetPtr>;

        staticinvoke <android.graphics.drawable.AnimatedVectorDrawable: void access$2100(long)>($l0);

        specialinvoke r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: void invalidateOwningView()>();

        return;
    }

    private void reverseAnimation()
    {
        android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT r0;
        long l0;
        int i1, $i2;
        android.animation.Animator$AnimatorListener r1;

        r0 := @this: android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT;

        r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: boolean mStarted> = 1;

        l0 = r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: long mSetPtr>;

        $i2 = r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: int mLastListenerId>;

        i1 = $i2 + 1;

        r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: int mLastListenerId> = i1;

        staticinvoke <android.graphics.drawable.AnimatedVectorDrawable: void access$2200(long,android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT,int)>(l0, r0, i1);

        specialinvoke r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: void invalidateOwningView()>();

        r1 = r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: android.animation.Animator$AnimatorListener mListener>;

        if r1 == null goto label1;

        interfaceinvoke r1.<android.animation.Animator$AnimatorListener: void onAnimationStart(android.animation.Animator)>(null);

     label1:
        return;
    }

    private void startAnimation()
    {
        android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT r0;
        long l0;
        int i1, $i2;
        android.animation.Animator$AnimatorListener r1;
        android.os.Handler $r2, $r3;

        r0 := @this: android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT;

        r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: boolean mStarted> = 1;

        $r2 = r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: android.os.Handler mHandler>;

        if $r2 != null goto label1;

        $r3 = new android.os.Handler;

        specialinvoke $r3.<android.os.Handler: void <init>()>();

        r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: android.os.Handler mHandler> = $r3;

     label1:
        l0 = r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: long mSetPtr>;

        $i2 = r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: int mLastListenerId>;

        i1 = $i2 + 1;

        r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: int mLastListenerId> = i1;

        staticinvoke <android.graphics.drawable.AnimatedVectorDrawable: void access$1900(long,android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT,int)>(l0, r0, i1);

        specialinvoke r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: void invalidateOwningView()>();

        r1 = r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: android.animation.Animator$AnimatorListener mListener>;

        if r1 == null goto label2;

        interfaceinvoke r1.<android.animation.Animator$AnimatorListener: void onAnimationStart(android.animation.Animator)>(null);

     label2:
        return;
    }

    private void transferPendingActions(android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimator)
    {
        android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT r0;
        int i0, $i1, i2;
        android.util.IntArray $r1, $r2, $r3;
        java.lang.StringBuilder $r4;
        java.lang.UnsupportedOperationException $r8;
        java.lang.String $r9;
        android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimator r10;

        r0 := @this: android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT;

        r10 := @parameter0: android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimator;

        i2 = 0;

     label1:
        $r1 = r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: android.util.IntArray mPendingAnimationActions>;

        $i1 = virtualinvoke $r1.<android.util.IntArray: int size()>();

        if i2 >= $i1 goto label7;

        $r3 = r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: android.util.IntArray mPendingAnimationActions>;

        i0 = virtualinvoke $r3.<android.util.IntArray: int get(int)>(i2);

        if i0 != 1 goto label2;

        interfaceinvoke r10.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimator: void start()>();

        goto label5;

     label2:
        if i0 != 4 goto label3;

        interfaceinvoke r10.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimator: void end()>();

        goto label5;

     label3:
        if i0 != 2 goto label4;

        interfaceinvoke r10.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimator: void reverse()>();

        goto label5;

     label4:
        if i0 != 3 goto label6;

        interfaceinvoke r10.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimator: void reset()>();

     label5:
        i2 = i2 + 1;

        goto label1;

     label6:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Animation action ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("is not supported");

        $r8 = new java.lang.UnsupportedOperationException;

        $r9 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r9);

        throw $r8;

     label7:
        $r2 = r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: android.util.IntArray mPendingAnimationActions>;

        virtualinvoke $r2.<android.util.IntArray: void clear()>();

        return;
    }

    private boolean useLastSeenTarget()
    {
        android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT r0;
        java.lang.ref.WeakReference r1;
        java.lang.Object $r2;
        android.graphics.RenderNode $r3;
        boolean $z0;

        r0 := @this: android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT;

        r1 = r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: java.lang.ref.WeakReference mLastSeenTarget>;

        if r1 == null goto label1;

        $r2 = virtualinvoke r1.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r3 = (android.graphics.RenderNode) $r2;

        $z0 = specialinvoke r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: boolean useTarget(android.graphics.RenderNode)>($r3);

        return $z0;

     label1:
        return 0;
    }

    private boolean useTarget(android.graphics.RenderNode)
    {
        android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT r0;
        android.graphics.RenderNode r1;
        boolean $z0;

        r0 := @this: android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT;

        r1 := @parameter0: android.graphics.RenderNode;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<android.graphics.RenderNode: boolean isAttached()>();

        if $z0 == 0 goto label1;

        virtualinvoke r1.<android.graphics.RenderNode: void registerVectorDrawableAnimator(android.view.NativeVectorDrawableAnimator)>(r0);

        return 1;

     label1:
        return 0;
    }

    public boolean canReverse()
    {
        android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT r0;
        boolean $z0;

        r0 := @this: android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT;

        $z0 = r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: boolean mIsReversible>;

        return $z0;
    }

    public void end()
    {
        android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT r0;
        boolean $z0, $z1;

        r0 := @this: android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT;

        $z0 = r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: boolean mInitialized>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $z1 = specialinvoke r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: boolean useLastSeenTarget()>();

        if $z1 == 0 goto label2;

        specialinvoke r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: void endAnimation()>();

        goto label3;

     label2:
        specialinvoke r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: void addPendingAction(int)>(4);

     label3:
        return;
    }

    public long getAnimatorNativePtr()
    {
        android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT r0;
        long $l0;

        r0 := @this: android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT;

        $l0 = r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: long mSetPtr>;

        return $l0;
    }

    public void init(android.animation.AnimatorSet)
    {
        android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT r0;
        android.animation.AnimatorSet r1;
        long l0, $l1, $l2, $l5;
        boolean $z0, $z1, z2;
        java.lang.UnsupportedOperationException $r2;
        android.graphics.drawable.AnimatedVectorDrawable $r3;
        android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState $r4;
        android.graphics.drawable.VectorDrawable $r5;
        byte $b3, $b6;
        android.util.LongArray $r6, $r7;
        int $i4, i7;

        r0 := @this: android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT;

        r1 := @parameter0: android.animation.AnimatorSet;

        $z0 = r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: boolean mInitialized>;

        if $z0 != 0 goto label7;

        specialinvoke r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: void parseAnimatorSet(android.animation.AnimatorSet,long)>(r1, 0L);

        $r3 = r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: android.graphics.drawable.AnimatedVectorDrawable mDrawable>;

        $r4 = staticinvoke <android.graphics.drawable.AnimatedVectorDrawable: android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState access$900(android.graphics.drawable.AnimatedVectorDrawable)>($r3);

        $r5 = $r4.<android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState: android.graphics.drawable.VectorDrawable mVectorDrawable>;

        l0 = virtualinvoke $r5.<android.graphics.drawable.VectorDrawable: long getNativeTree()>();

        $l1 = r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: long mSetPtr>;

        staticinvoke <android.graphics.drawable.AnimatedVectorDrawable: void access$1000(long,long)>($l1, l0);

        r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: boolean mInitialized> = 1;

        $l2 = virtualinvoke r1.<android.animation.AnimatorSet: long getTotalDuration()>();

        $b3 = $l2 cmp -1L;

        if $b3 != 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: boolean mIsInfinite> = z2;

        r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: boolean mIsReversible> = 1;

        $z1 = r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: boolean mContainsSequentialAnimators>;

        if $z1 == 0 goto label3;

        r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: boolean mIsReversible> = 0;

        goto label6;

     label3:
        i7 = 0;

     label4:
        $r6 = r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: android.util.LongArray mStartDelays>;

        $i4 = virtualinvoke $r6.<android.util.LongArray: int size()>();

        if i7 >= $i4 goto label6;

        $r7 = r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: android.util.LongArray mStartDelays>;

        $l5 = virtualinvoke $r7.<android.util.LongArray: long get(int)>(i7);

        $b6 = $l5 cmp 0L;

        if $b6 <= 0 goto label5;

        r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: boolean mIsReversible> = 0;

        return;

     label5:
        i7 = i7 + 1;

        goto label4;

     label6:
        return;

     label7:
        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("VectorDrawableAnimator cannot be re-initialized");

        throw $r2;
    }

    public boolean isInfinite()
    {
        android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT r0;
        boolean $z0;

        r0 := @this: android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT;

        $z0 = r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: boolean mIsInfinite>;

        return $z0;
    }

    public boolean isRunning()
    {
        android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT r0;
        boolean $z0, $z1;

        r0 := @this: android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT;

        $z0 = r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: boolean mInitialized>;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $z1 = r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: boolean mStarted>;

        return $z1;
    }

    public boolean isStarted()
    {
        android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT r0;
        boolean $z0;

        r0 := @this: android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT;

        $z0 = r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: boolean mStarted>;

        return $z0;
    }

    public void onDraw(android.graphics.Canvas)
    {
        android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT r0;
        android.graphics.Canvas r1;
        boolean $z0;
        android.graphics.RecordingCanvas $r2;

        r0 := @this: android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT;

        r1 := @parameter0: android.graphics.Canvas;

        $z0 = virtualinvoke r1.<android.graphics.Canvas: boolean isHardwareAccelerated()>();

        if $z0 == 0 goto label1;

        $r2 = (android.graphics.RecordingCanvas) r1;

        virtualinvoke r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: void recordLastSeenTarget(android.graphics.RecordingCanvas)>($r2);

     label1:
        return;
    }

    public void pause()
    {
        android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT r0;

        r0 := @this: android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT;

        return;
    }

    protected void recordLastSeenTarget(android.graphics.RecordingCanvas)
    {
        android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT r0;
        java.lang.ref.WeakReference $r1;
        boolean $z0, $z1;
        android.util.IntArray $r2, $r3, $r4, $r5;
        int $i0, $i1, $i2, i3;
        android.graphics.RecordingCanvas r6;
        android.graphics.RenderNode r7;

        r0 := @this: android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT;

        r6 := @parameter0: android.graphics.RecordingCanvas;

        r7 = r6.<android.graphics.RecordingCanvas: android.graphics.RenderNode mNode>;

        $r1 = new java.lang.ref.WeakReference;

        specialinvoke $r1.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r7);

        r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: java.lang.ref.WeakReference mLastSeenTarget> = $r1;

        $z0 = r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: boolean mInitialized>;

        if $z0 != 0 goto label1;

        $r5 = r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: android.util.IntArray mPendingAnimationActions>;

        $i2 = virtualinvoke $r5.<android.util.IntArray: int size()>();

        if $i2 <= 0 goto label4;

     label1:
        $z1 = specialinvoke r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: boolean useTarget(android.graphics.RenderNode)>(r7);

        if $z1 == 0 goto label4;

        i3 = 0;

     label2:
        $r2 = r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: android.util.IntArray mPendingAnimationActions>;

        $i0 = virtualinvoke $r2.<android.util.IntArray: int size()>();

        if i3 >= $i0 goto label3;

        $r4 = r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: android.util.IntArray mPendingAnimationActions>;

        $i1 = virtualinvoke $r4.<android.util.IntArray: int get(int)>(i3);

        specialinvoke r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: void handlePendingAction(int)>($i1);

        i3 = i3 + 1;

        goto label2;

     label3:
        $r3 = r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: android.util.IntArray mPendingAnimationActions>;

        virtualinvoke $r3.<android.util.IntArray: void clear()>();

     label4:
        return;
    }

    public void removeListener(android.animation.Animator$AnimatorListener)
    {
        android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT r0;
        android.animation.Animator$AnimatorListener r1;

        r0 := @this: android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT;

        r1 := @parameter0: android.animation.Animator$AnimatorListener;

        r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: android.animation.Animator$AnimatorListener mListener> = null;

        return;
    }

    public void reset()
    {
        android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT r0;
        boolean $z0, $z1;

        r0 := @this: android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT;

        $z0 = r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: boolean mInitialized>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $z1 = specialinvoke r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: boolean useLastSeenTarget()>();

        if $z1 == 0 goto label2;

        specialinvoke r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: void resetAnimation()>();

        goto label3;

     label2:
        specialinvoke r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: void addPendingAction(int)>(3);

     label3:
        return;
    }

    public void resume()
    {
        android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT r0;

        r0 := @this: android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT;

        return;
    }

    public void reverse()
    {
        android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT r0;
        boolean $z0, $z1, $z2;

        r0 := @this: android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT;

        $z0 = r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: boolean mIsReversible>;

        if $z0 == 0 goto label4;

        $z1 = r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: boolean mInitialized>;

        if $z1 != 0 goto label1;

        goto label4;

     label1:
        $z2 = specialinvoke r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: boolean useLastSeenTarget()>();

        if $z2 == 0 goto label2;

        specialinvoke r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: void reverseAnimation()>();

        goto label3;

     label2:
        specialinvoke r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: void addPendingAction(int)>(2);

     label3:
        return;

     label4:
        return;
    }

    public void setListener(android.animation.Animator$AnimatorListener)
    {
        android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT r0;
        android.animation.Animator$AnimatorListener r1;

        r0 := @this: android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT;

        r1 := @parameter0: android.animation.Animator$AnimatorListener;

        r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: android.animation.Animator$AnimatorListener mListener> = r1;

        return;
    }

    public void start()
    {
        android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT r0;
        boolean $z0, $z1;

        r0 := @this: android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT;

        $z0 = r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: boolean mInitialized>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $z1 = specialinvoke r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: boolean useLastSeenTarget()>();

        if $z1 == 0 goto label2;

        specialinvoke r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: void startAnimation()>();

        goto label3;

     label2:
        specialinvoke r0.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: void addPendingAction(int)>(1);

     label3:
        return;
    }

    public static void <clinit>()
    {
        <android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: int START_ANIMATION> = 1;

        <android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: int REVERSE_ANIMATION> = 2;

        <android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: int RESET_ANIMATION> = 3;

        <android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: int MAX_SAMPLE_POINTS> = 300;

        <android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: int END_ANIMATION> = 4;

        return;
    }
}
