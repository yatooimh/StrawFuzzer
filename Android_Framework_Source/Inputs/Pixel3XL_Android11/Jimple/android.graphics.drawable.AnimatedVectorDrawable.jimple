public class android.graphics.drawable.AnimatedVectorDrawable extends android.graphics.drawable.Drawable implements android.graphics.drawable.Animatable2
{
    private static final java.lang.String ANIMATED_VECTOR;
    private static final boolean DBG_ANIMATION_VECTOR_DRAWABLE;
    private static final java.lang.String LOGTAG;
    private static final java.lang.String TARGET;
    private android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState mAnimatedVectorState;
    private java.util.ArrayList mAnimationCallbacks;
    private android.animation.Animator$AnimatorListener mAnimatorListener;
    private android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimator mAnimatorSet;
    private android.animation.AnimatorSet mAnimatorSetFromXml;
    private final android.graphics.drawable.Drawable$Callback mCallback;
    private boolean mMutated;
    private android.content.res.Resources mRes;

    public void <init>()
    {
        android.graphics.drawable.AnimatedVectorDrawable r0;

        r0 := @this: android.graphics.drawable.AnimatedVectorDrawable;

        specialinvoke r0.<android.graphics.drawable.AnimatedVectorDrawable: void <init>(android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState,android.content.res.Resources)>(null, null);

        return;
    }

    private void <init>(android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState, android.content.res.Resources)
    {
        android.graphics.drawable.AnimatedVectorDrawable r0;
        android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState r1, $r5;
        android.content.res.Resources r2;
        android.graphics.drawable.AnimatedVectorDrawable$1 $r4;
        android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT $r6;

        r0 := @this: android.graphics.drawable.AnimatedVectorDrawable;

        r1 := @parameter0: android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState;

        r2 := @parameter1: android.content.res.Resources;

        specialinvoke r0.<android.graphics.drawable.Drawable: void <init>()>();

        r0.<android.graphics.drawable.AnimatedVectorDrawable: android.animation.AnimatorSet mAnimatorSetFromXml> = null;

        r0.<android.graphics.drawable.AnimatedVectorDrawable: java.util.ArrayList mAnimationCallbacks> = null;

        r0.<android.graphics.drawable.AnimatedVectorDrawable: android.animation.Animator$AnimatorListener mAnimatorListener> = null;

        $r4 = new android.graphics.drawable.AnimatedVectorDrawable$1;

        specialinvoke $r4.<android.graphics.drawable.AnimatedVectorDrawable$1: void <init>(android.graphics.drawable.AnimatedVectorDrawable)>(r0);

        r0.<android.graphics.drawable.AnimatedVectorDrawable: android.graphics.drawable.Drawable$Callback mCallback> = $r4;

        $r5 = new android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState;

        specialinvoke $r5.<android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState: void <init>(android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState,android.graphics.drawable.Drawable$Callback,android.content.res.Resources)>(r1, $r4, r2);

        r0.<android.graphics.drawable.AnimatedVectorDrawable: android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState mAnimatedVectorState> = $r5;

        $r6 = new android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT;

        specialinvoke $r6.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: void <init>(android.graphics.drawable.AnimatedVectorDrawable)>(r0);

        r0.<android.graphics.drawable.AnimatedVectorDrawable: android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimator mAnimatorSet> = $r6;

        r0.<android.graphics.drawable.AnimatedVectorDrawable: android.content.res.Resources mRes> = r2;

        return;
    }

    void <init>(android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState, android.content.res.Resources, android.graphics.drawable.AnimatedVectorDrawable$1)
    {
        android.graphics.drawable.AnimatedVectorDrawable r0;
        android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState r1;
        android.content.res.Resources r2;
        android.graphics.drawable.AnimatedVectorDrawable$1 r3;

        r0 := @this: android.graphics.drawable.AnimatedVectorDrawable;

        r1 := @parameter0: android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState;

        r2 := @parameter1: android.content.res.Resources;

        r3 := @parameter2: android.graphics.drawable.AnimatedVectorDrawable$1;

        specialinvoke r0.<android.graphics.drawable.AnimatedVectorDrawable: void <init>(android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState,android.content.res.Resources)>(r1, r2);

        return;
    }

    static void access$1000(long, long)
    {
        long l0, l1;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        staticinvoke <android.graphics.drawable.AnimatedVectorDrawable: void nSetVectorDrawableTarget(long,long)>(l0, l1);

        return;
    }

    static long access$1100(long, int, float, float)
    {
        long l0, $l2;
        int i1;
        float f0, f1;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        f0 := @parameter2: float;

        f1 := @parameter3: float;

        $l2 = staticinvoke <android.graphics.drawable.AnimatedVectorDrawable: long nCreateGroupPropertyHolder(long,int,float,float)>(l0, i1, f0, f1);

        return $l2;
    }

    static void access$1200(long, float[], int)
    {
        long l0;
        float[] r0;
        int i1;

        l0 := @parameter0: long;

        r0 := @parameter1: float[];

        i1 := @parameter2: int;

        staticinvoke <android.graphics.drawable.AnimatedVectorDrawable: void nSetPropertyHolderData(long,float[],int)>(l0, r0, i1);

        return;
    }

    static long access$1300(long, long, long)
    {
        long l0, l1, l2, $l3;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        $l3 = staticinvoke <android.graphics.drawable.AnimatedVectorDrawable: long nCreatePathDataPropertyHolder(long,long,long)>(l0, l1, l2);

        return $l3;
    }

    static long access$1400(long, int, float, float)
    {
        long l0, $l2;
        int i1;
        float f0, f1;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        f0 := @parameter2: float;

        f1 := @parameter3: float;

        $l2 = staticinvoke <android.graphics.drawable.AnimatedVectorDrawable: long nCreatePathPropertyHolder(long,int,float,float)>(l0, i1, f0, f1);

        return $l2;
    }

    static long access$1500(long, int, int, int)
    {
        long l0, $l4;
        int i1, i2, i3;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $l4 = staticinvoke <android.graphics.drawable.AnimatedVectorDrawable: long nCreatePathColorPropertyHolder(long,int,int,int)>(l0, i1, i2, i3);

        return $l4;
    }

    static void access$1600(long, int[], int)
    {
        long l0;
        int[] r0;
        int i1;

        l0 := @parameter0: long;

        r0 := @parameter1: int[];

        i1 := @parameter2: int;

        staticinvoke <android.graphics.drawable.AnimatedVectorDrawable: void nSetPropertyHolderData(long,int[],int)>(l0, r0, i1);

        return;
    }

    static long access$1700(long, float, float)
    {
        long l0, $l1;
        float f0, f1;

        l0 := @parameter0: long;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        $l1 = staticinvoke <android.graphics.drawable.AnimatedVectorDrawable: long nCreateRootAlphaPropertyHolder(long,float,float)>(l0, f0, f1);

        return $l1;
    }

    static void access$1800(long, long, long, long, long, int, int)
    {
        long l0, l1, l2, l3, l4;
        int i5, i6;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        l3 := @parameter3: long;

        l4 := @parameter4: long;

        i5 := @parameter5: int;

        i6 := @parameter6: int;

        staticinvoke <android.graphics.drawable.AnimatedVectorDrawable: void nAddAnimator(long,long,long,long,long,int,int)>(l0, l1, l2, l3, l4, i5, i6);

        return;
    }

    static void access$1900(long, android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT, int)
    {
        long l0;
        android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT r0;
        int i1;

        l0 := @parameter0: long;

        r0 := @parameter1: android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT;

        i1 := @parameter2: int;

        staticinvoke <android.graphics.drawable.AnimatedVectorDrawable: void nStart(long,android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT,int)>(l0, r0, i1);

        return;
    }

    static void access$2000(long)
    {
        long l0;

        l0 := @parameter0: long;

        staticinvoke <android.graphics.drawable.AnimatedVectorDrawable: void nEnd(long)>(l0);

        return;
    }

    static void access$2100(long)
    {
        long l0;

        l0 := @parameter0: long;

        staticinvoke <android.graphics.drawable.AnimatedVectorDrawable: void nReset(long)>(l0);

        return;
    }

    static void access$2200(long, android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT, int)
    {
        long l0;
        android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT r0;
        int i1;

        l0 := @parameter0: long;

        r0 := @parameter1: android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT;

        i1 := @parameter2: int;

        staticinvoke <android.graphics.drawable.AnimatedVectorDrawable: void nReverse(long,android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT,int)>(l0, r0, i1);

        return;
    }

    static boolean access$400()
    {
        boolean $z0;

        $z0 = staticinvoke <android.graphics.drawable.AnimatedVectorDrawable: boolean shouldIgnoreInvalidAnimation()>();

        return $z0;
    }

    static void access$600(android.animation.Animator, java.lang.String, android.graphics.drawable.VectorDrawable, boolean)
    {
        android.animation.Animator r0;
        java.lang.String r1;
        android.graphics.drawable.VectorDrawable r2;
        boolean z0;

        r0 := @parameter0: android.animation.Animator;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.graphics.drawable.VectorDrawable;

        z0 := @parameter3: boolean;

        staticinvoke <android.graphics.drawable.AnimatedVectorDrawable: void updateAnimatorProperty(android.animation.Animator,java.lang.String,android.graphics.drawable.VectorDrawable,boolean)>(r0, r1, r2, z0);

        return;
    }

    static java.util.ArrayList access$700(android.graphics.drawable.AnimatedVectorDrawable)
    {
        android.graphics.drawable.AnimatedVectorDrawable r0;
        java.util.ArrayList $r1;

        r0 := @parameter0: android.graphics.drawable.AnimatedVectorDrawable;

        $r1 = r0.<android.graphics.drawable.AnimatedVectorDrawable: java.util.ArrayList mAnimationCallbacks>;

        return $r1;
    }

    static long access$800()
    {
        long $l0;

        $l0 = staticinvoke <android.graphics.drawable.AnimatedVectorDrawable: long nCreateAnimatorSet()>();

        return $l0;
    }

    static android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState access$900(android.graphics.drawable.AnimatedVectorDrawable)
    {
        android.graphics.drawable.AnimatedVectorDrawable r0;
        android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState $r1;

        r0 := @parameter0: android.graphics.drawable.AnimatedVectorDrawable;

        $r1 = r0.<android.graphics.drawable.AnimatedVectorDrawable: android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState mAnimatedVectorState>;

        return $r1;
    }

    private static boolean containsSameValueType(android.animation.PropertyValuesHolder, android.util.Property)
    {
        java.lang.Class r0, $r1, $r2, $r3, r6, r7;
        android.animation.PropertyValuesHolder r4;
        android.util.Property r5;
        boolean z2, z3, z4;

        r4 := @parameter0: android.animation.PropertyValuesHolder;

        r5 := @parameter1: android.util.Property;

        r6 = virtualinvoke r4.<android.animation.PropertyValuesHolder: java.lang.Class getValueType()>();

        r0 = virtualinvoke r5.<android.util.Property: java.lang.Class getType()>();

        r7 = <java.lang.Float: java.lang.Class TYPE>;

        z2 = 0;

        if r6 == r7 goto label7;

        if r6 != class "Ljava/lang/Float;" goto label1;

        goto label7;

     label1:
        $r2 = <java.lang.Integer: java.lang.Class TYPE>;

        if r6 == $r2 goto label4;

        if r6 != class "Ljava/lang/Integer;" goto label2;

        goto label4;

     label2:
        if r6 != r0 goto label3;

        z2 = 1;

     label3:
        return z2;

     label4:
        $r3 = <java.lang.Integer: java.lang.Class TYPE>;

        if r0 == $r3 goto label5;

        z3 = 0;

        if r0 != class "Ljava/lang/Integer;" goto label6;

     label5:
        z3 = 1;

     label6:
        return z3;

     label7:
        $r1 = <java.lang.Float: java.lang.Class TYPE>;

        if r0 == $r1 goto label8;

        z4 = 0;

        if r0 != class "Ljava/lang/Float;" goto label9;

     label8:
        z4 = 1;

     label9:
        return z4;
    }

    private void ensureAnimatorSet()
    {
        android.graphics.drawable.AnimatedVectorDrawable r0;
        android.animation.AnimatorSet $r2, $r3, $r6;
        android.content.res.Resources $r4;
        android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState $r5;
        android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimator $r7;

        r0 := @this: android.graphics.drawable.AnimatedVectorDrawable;

        $r2 = r0.<android.graphics.drawable.AnimatedVectorDrawable: android.animation.AnimatorSet mAnimatorSetFromXml>;

        if $r2 != null goto label1;

        $r3 = new android.animation.AnimatorSet;

        specialinvoke $r3.<android.animation.AnimatorSet: void <init>()>();

        r0.<android.graphics.drawable.AnimatedVectorDrawable: android.animation.AnimatorSet mAnimatorSetFromXml> = $r3;

        $r5 = r0.<android.graphics.drawable.AnimatedVectorDrawable: android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState mAnimatedVectorState>;

        $r4 = r0.<android.graphics.drawable.AnimatedVectorDrawable: android.content.res.Resources mRes>;

        virtualinvoke $r5.<android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState: void prepareLocalAnimators(android.animation.AnimatorSet,android.content.res.Resources)>($r3, $r4);

        $r7 = r0.<android.graphics.drawable.AnimatedVectorDrawable: android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimator mAnimatorSet>;

        $r6 = r0.<android.graphics.drawable.AnimatedVectorDrawable: android.animation.AnimatorSet mAnimatorSetFromXml>;

        interfaceinvoke $r7.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimator: void init(android.animation.AnimatorSet)>($r6);

        r0.<android.graphics.drawable.AnimatedVectorDrawable: android.content.res.Resources mRes> = null;

     label1:
        return;
    }

    private void fallbackOntoUI()
    {
        android.graphics.drawable.AnimatedVectorDrawable r0;
        android.animation.AnimatorSet r2;
        boolean $z0;
        android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorUI $r3;
        android.animation.Animator$AnimatorListener $r4, $r7;
        android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimator $r5, $r6, r8;
        android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT r9;

        r0 := @this: android.graphics.drawable.AnimatedVectorDrawable;

        r8 = r0.<android.graphics.drawable.AnimatedVectorDrawable: android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimator mAnimatorSet>;

        $z0 = r8 instanceof android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT;

        if $z0 == 0 goto label3;

        r9 = (android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT) r8;

        $r3 = new android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorUI;

        specialinvoke $r3.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorUI: void <init>(android.graphics.drawable.AnimatedVectorDrawable)>(r0);

        r0.<android.graphics.drawable.AnimatedVectorDrawable: android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimator mAnimatorSet> = $r3;

        r2 = r0.<android.graphics.drawable.AnimatedVectorDrawable: android.animation.AnimatorSet mAnimatorSetFromXml>;

        if r2 == null goto label1;

        interfaceinvoke $r3.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimator: void init(android.animation.AnimatorSet)>(r2);

     label1:
        $r4 = staticinvoke <android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: android.animation.Animator$AnimatorListener access$200(android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT)>(r9);

        if $r4 == null goto label2;

        $r6 = r0.<android.graphics.drawable.AnimatedVectorDrawable: android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimator mAnimatorSet>;

        $r7 = staticinvoke <android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: android.animation.Animator$AnimatorListener access$200(android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT)>(r9);

        interfaceinvoke $r6.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimator: void setListener(android.animation.Animator$AnimatorListener)>($r7);

     label2:
        $r5 = r0.<android.graphics.drawable.AnimatedVectorDrawable: android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimator mAnimatorSet>;

        staticinvoke <android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: void access$300(android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT,android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimator)>(r9, $r5);

     label3:
        return;
    }

    private static native void nAddAnimator(long, long, long, long, long, int, int);

    private static native long nCreateAnimatorSet();

    private static native long nCreateGroupPropertyHolder(long, int, float, float);

    private static native long nCreatePathColorPropertyHolder(long, int, int, int);

    private static native long nCreatePathDataPropertyHolder(long, long, long);

    private static native long nCreatePathPropertyHolder(long, int, float, float);

    private static native long nCreateRootAlphaPropertyHolder(long, float, float);

    private static native void nEnd(long);

    private static native void nReset(long);

    private static native void nReverse(long, android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT, int);

    private static native void nSetPropertyHolderData(long, float[], int);

    private static native void nSetPropertyHolderData(long, int[], int);

    private static native void nSetVectorDrawableTarget(long, long);

    private static native void nStart(long, android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT, int);

    private void removeAnimatorSetListener()
    {
        android.graphics.drawable.AnimatedVectorDrawable r0;
        android.animation.Animator$AnimatorListener r1;
        android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimator $r2;

        r0 := @this: android.graphics.drawable.AnimatedVectorDrawable;

        r1 = r0.<android.graphics.drawable.AnimatedVectorDrawable: android.animation.Animator$AnimatorListener mAnimatorListener>;

        if r1 == null goto label1;

        $r2 = r0.<android.graphics.drawable.AnimatedVectorDrawable: android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimator mAnimatorSet>;

        interfaceinvoke $r2.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimator: void removeListener(android.animation.Animator$AnimatorListener)>(r1);

        r0.<android.graphics.drawable.AnimatedVectorDrawable: android.animation.Animator$AnimatorListener mAnimatorListener> = null;

     label1:
        return;
    }

    private static boolean shouldIgnoreInvalidAnimation()
    {
        android.app.Application r0;
        android.content.pm.ApplicationInfo $r1, $r2;
        int $i0;

        r0 = staticinvoke <android.app.ActivityThread: android.app.Application currentApplication()>();

        if r0 == null goto label3;

        $r1 = virtualinvoke r0.<android.app.Application: android.content.pm.ApplicationInfo getApplicationInfo()>();

        if $r1 != null goto label1;

        goto label3;

     label1:
        $r2 = virtualinvoke r0.<android.app.Application: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $i0 = $r2.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i0 >= 24 goto label2;

        return 1;

     label2:
        return 0;

     label3:
        return 1;
    }

    private static void updateAnimatorProperty(android.animation.Animator, java.lang.String, android.graphics.drawable.VectorDrawable, boolean)
    {
        android.graphics.drawable.VectorDrawable r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;
        android.animation.PropertyValuesHolder[] r1;
        android.animation.PropertyValuesHolder r2;
        java.lang.String r3, $r15, $r19, $r22, r26;
        java.lang.Object r4, $r7;
        android.animation.AnimatorSet $r5;
        java.util.ArrayList $r6;
        android.animation.Animator $r8, r25;
        android.animation.ObjectAnimator $r9;
        int $i0, i1;
        java.lang.StringBuilder $r10;
        java.lang.Class $r14, $r18;
        java.lang.RuntimeException $r21;
        android.graphics.drawable.VectorDrawable$VectorDrawableState $r23;
        android.graphics.drawable.VectorDrawable$VObject $r24;
        android.util.Property r27;
        java.util.Iterator r29;

        r25 := @parameter0: android.animation.Animator;

        r26 := @parameter1: java.lang.String;

        r0 := @parameter2: android.graphics.drawable.VectorDrawable;

        z0 := @parameter3: boolean;

        $z1 = r25 instanceof android.animation.ObjectAnimator;

        if $z1 == 0 goto label08;

        $r9 = (android.animation.ObjectAnimator) r25;

        r1 = virtualinvoke $r9.<android.animation.ObjectAnimator: android.animation.PropertyValuesHolder[] getValues()>();

        i1 = 0;

     label01:
        $i0 = lengthof r1;

        if i1 >= $i0 goto label07;

        r2 = r1[i1];

        r3 = virtualinvoke r2.<android.animation.PropertyValuesHolder: java.lang.String getPropertyName()>();

        r4 = virtualinvoke r0.<android.graphics.drawable.VectorDrawable: java.lang.Object getTargetByName(java.lang.String)>(r26);

        r27 = null;

        $z4 = r4 instanceof android.graphics.drawable.VectorDrawable$VObject;

        if $z4 == 0 goto label02;

        $r24 = (android.graphics.drawable.VectorDrawable$VObject) r4;

        r27 = virtualinvoke $r24.<android.graphics.drawable.VectorDrawable$VObject: android.util.Property getProperty(java.lang.String)>(r3);

        goto label03;

     label02:
        $z5 = r4 instanceof android.graphics.drawable.VectorDrawable$VectorDrawableState;

        if $z5 == 0 goto label03;

        $r23 = (android.graphics.drawable.VectorDrawable$VectorDrawableState) r4;

        r27 = virtualinvoke $r23.<android.graphics.drawable.VectorDrawable$VectorDrawableState: android.util.Property getProperty(java.lang.String)>(r3);

     label03:
        if r27 == null goto label06;

        $z6 = staticinvoke <android.graphics.drawable.AnimatedVectorDrawable: boolean containsSameValueType(android.animation.PropertyValuesHolder,android.util.Property)>(r2, r27);

        if $z6 == 0 goto label04;

        virtualinvoke r2.<android.animation.PropertyValuesHolder: void setProperty(android.util.Property)>(r27);

        goto label06;

     label04:
        if z0 == 0 goto label05;

        goto label06;

     label05:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Wrong valueType for Property: ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".  Expected type: ");

        $r14 = virtualinvoke r27.<android.util.Property: java.lang.Class getType()>();

        $r15 = virtualinvoke $r14.<java.lang.Class: java.lang.String toString()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Actual type defined in resources: ");

        $r18 = virtualinvoke r2.<android.animation.PropertyValuesHolder: java.lang.Class getValueType()>();

        $r19 = virtualinvoke $r18.<java.lang.Class: java.lang.String toString()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = new java.lang.RuntimeException;

        $r22 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r21.<java.lang.RuntimeException: void <init>(java.lang.String)>($r22);

        throw $r21;

     label06:
        i1 = i1 + 1;

        goto label01;

     label07:
        goto label10;

     label08:
        $z2 = r25 instanceof android.animation.AnimatorSet;

        if $z2 == 0 goto label10;

        $r5 = (android.animation.AnimatorSet) r25;

        $r6 = virtualinvoke $r5.<android.animation.AnimatorSet: java.util.ArrayList getChildAnimations()>();

        r29 = virtualinvoke $r6.<java.util.ArrayList: java.util.Iterator iterator()>();

     label09:
        $z3 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label10;

        $r7 = interfaceinvoke r29.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (android.animation.Animator) $r7;

        staticinvoke <android.graphics.drawable.AnimatedVectorDrawable: void updateAnimatorProperty(android.animation.Animator,java.lang.String,android.graphics.drawable.VectorDrawable,boolean)>($r8, r26, r0, z0);

        goto label09;

     label10:
        return;
    }

    public void applyTheme(android.content.res.Resources$Theme)
    {
        android.graphics.drawable.AnimatedVectorDrawable r0;
        android.content.res.Resources$Theme r1;
        android.graphics.drawable.VectorDrawable r2;
        android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState $r3, $r4, $r6;
        java.util.ArrayList $r5;
        android.content.res.Resources $r7;
        boolean $z0;

        r0 := @this: android.graphics.drawable.AnimatedVectorDrawable;

        r1 := @parameter0: android.content.res.Resources$Theme;

        specialinvoke r0.<android.graphics.drawable.Drawable: void applyTheme(android.content.res.Resources$Theme)>(r1);

        $r3 = r0.<android.graphics.drawable.AnimatedVectorDrawable: android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState mAnimatedVectorState>;

        r2 = $r3.<android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState: android.graphics.drawable.VectorDrawable mVectorDrawable>;

        if r2 == null goto label1;

        $z0 = virtualinvoke r2.<android.graphics.drawable.VectorDrawable: boolean canApplyTheme()>();

        if $z0 == 0 goto label1;

        virtualinvoke r2.<android.graphics.drawable.VectorDrawable: void applyTheme(android.content.res.Resources$Theme)>(r1);

     label1:
        if r1 == null goto label2;

        $r6 = r0.<android.graphics.drawable.AnimatedVectorDrawable: android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState mAnimatedVectorState>;

        $r7 = virtualinvoke r1.<android.content.res.Resources$Theme: android.content.res.Resources getResources()>();

        virtualinvoke $r6.<android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState: void inflatePendingAnimators(android.content.res.Resources,android.content.res.Resources$Theme)>($r7, r1);

     label2:
        $r4 = r0.<android.graphics.drawable.AnimatedVectorDrawable: android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState mAnimatedVectorState>;

        $r5 = $r4.<android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState: java.util.ArrayList mPendingAnims>;

        if $r5 != null goto label3;

        r0.<android.graphics.drawable.AnimatedVectorDrawable: android.content.res.Resources mRes> = null;

     label3:
        return;
    }

    public boolean canApplyTheme()
    {
        android.graphics.drawable.AnimatedVectorDrawable r0;
        android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState r1;
        boolean $z0, $z1, z2;

        r0 := @this: android.graphics.drawable.AnimatedVectorDrawable;

        r1 = r0.<android.graphics.drawable.AnimatedVectorDrawable: android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState mAnimatedVectorState>;

        if r1 == null goto label1;

        $z1 = virtualinvoke r1.<android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState: boolean canApplyTheme()>();

        if $z1 != 0 goto label2;

     label1:
        $z0 = specialinvoke r0.<android.graphics.drawable.Drawable: boolean canApplyTheme()>();

        if $z0 == 0 goto label3;

     label2:
        z2 = 1;

        goto label4;

     label3:
        z2 = 0;

     label4:
        return z2;
    }

    public boolean canReverse()
    {
        android.graphics.drawable.AnimatedVectorDrawable r0;
        android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimator $r1;
        boolean $z0;

        r0 := @this: android.graphics.drawable.AnimatedVectorDrawable;

        $r1 = r0.<android.graphics.drawable.AnimatedVectorDrawable: android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimator mAnimatorSet>;

        $z0 = interfaceinvoke $r1.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimator: boolean canReverse()>();

        return $z0;
    }

    public void clearAnimationCallbacks()
    {
        android.graphics.drawable.AnimatedVectorDrawable r0;
        java.util.ArrayList r1;

        r0 := @this: android.graphics.drawable.AnimatedVectorDrawable;

        specialinvoke r0.<android.graphics.drawable.AnimatedVectorDrawable: void removeAnimatorSetListener()>();

        r1 = r0.<android.graphics.drawable.AnimatedVectorDrawable: java.util.ArrayList mAnimationCallbacks>;

        if r1 != null goto label1;

        return;

     label1:
        virtualinvoke r1.<java.util.ArrayList: void clear()>();

        return;
    }

    public void clearMutated()
    {
        android.graphics.drawable.AnimatedVectorDrawable r0;
        android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState $r1, $r3;
        android.graphics.drawable.VectorDrawable $r2, $r4;

        r0 := @this: android.graphics.drawable.AnimatedVectorDrawable;

        specialinvoke r0.<android.graphics.drawable.Drawable: void clearMutated()>();

        $r1 = r0.<android.graphics.drawable.AnimatedVectorDrawable: android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState mAnimatedVectorState>;

        $r2 = $r1.<android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState: android.graphics.drawable.VectorDrawable mVectorDrawable>;

        if $r2 == null goto label1;

        $r3 = r0.<android.graphics.drawable.AnimatedVectorDrawable: android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState mAnimatedVectorState>;

        $r4 = $r3.<android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState: android.graphics.drawable.VectorDrawable mVectorDrawable>;

        virtualinvoke $r4.<android.graphics.drawable.VectorDrawable: void clearMutated()>();

     label1:
        r0.<android.graphics.drawable.AnimatedVectorDrawable: boolean mMutated> = 0;

        return;
    }

    public void draw(android.graphics.Canvas)
    {
        android.graphics.drawable.AnimatedVectorDrawable r0;
        android.graphics.Canvas r1;
        android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimator r2, $r3, $r6;
        boolean $z0, $z1, $z2;
        android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT $r4;
        android.util.IntArray $r5;
        int $i0;
        android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState $r7;
        android.graphics.drawable.VectorDrawable $r8;

        r0 := @this: android.graphics.drawable.AnimatedVectorDrawable;

        r1 := @parameter0: android.graphics.Canvas;

        $z0 = virtualinvoke r1.<android.graphics.Canvas: boolean isHardwareAccelerated()>();

        if $z0 != 0 goto label1;

        r2 = r0.<android.graphics.drawable.AnimatedVectorDrawable: android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimator mAnimatorSet>;

        $z1 = r2 instanceof android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT;

        if $z1 == 0 goto label1;

        $z2 = interfaceinvoke r2.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimator: boolean isRunning()>();

        if $z2 != 0 goto label1;

        $r3 = r0.<android.graphics.drawable.AnimatedVectorDrawable: android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimator mAnimatorSet>;

        $r4 = (android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT) $r3;

        $r5 = staticinvoke <android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: android.util.IntArray access$000(android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT)>($r4);

        $i0 = virtualinvoke $r5.<android.util.IntArray: int size()>();

        if $i0 <= 0 goto label1;

        specialinvoke r0.<android.graphics.drawable.AnimatedVectorDrawable: void fallbackOntoUI()>();

     label1:
        $r6 = r0.<android.graphics.drawable.AnimatedVectorDrawable: android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimator mAnimatorSet>;

        interfaceinvoke $r6.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimator: void onDraw(android.graphics.Canvas)>(r1);

        $r7 = r0.<android.graphics.drawable.AnimatedVectorDrawable: android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState mAnimatedVectorState>;

        $r8 = $r7.<android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState: android.graphics.drawable.VectorDrawable mVectorDrawable>;

        virtualinvoke $r8.<android.graphics.drawable.VectorDrawable: void draw(android.graphics.Canvas)>(r1);

        return;
    }

    public void forceAnimationOnUI()
    {
        android.graphics.drawable.AnimatedVectorDrawable r0;
        android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimator r1;
        boolean $z0, $z1;
        android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT $r2;
        java.lang.UnsupportedOperationException $r3;

        r0 := @this: android.graphics.drawable.AnimatedVectorDrawable;

        r1 = r0.<android.graphics.drawable.AnimatedVectorDrawable: android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimator mAnimatorSet>;

        $z0 = r1 instanceof android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT;

        if $z0 == 0 goto label2;

        $r2 = (android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT) r1;

        $z1 = virtualinvoke $r2.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT: boolean isRunning()>();

        if $z1 != 0 goto label1;

        specialinvoke r0.<android.graphics.drawable.AnimatedVectorDrawable: void fallbackOntoUI()>();

        goto label2;

     label1:
        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Cannot force Animated Vector Drawable to run on UI thread when the animation has started on RenderThread.");

        throw $r3;

     label2:
        return;
    }

    public int getAlpha()
    {
        android.graphics.drawable.AnimatedVectorDrawable r0;
        android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState $r1;
        android.graphics.drawable.VectorDrawable $r2;
        int $i0;

        r0 := @this: android.graphics.drawable.AnimatedVectorDrawable;

        $r1 = r0.<android.graphics.drawable.AnimatedVectorDrawable: android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState mAnimatedVectorState>;

        $r2 = $r1.<android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState: android.graphics.drawable.VectorDrawable mVectorDrawable>;

        $i0 = virtualinvoke $r2.<android.graphics.drawable.VectorDrawable: int getAlpha()>();

        return $i0;
    }

    public int getChangingConfigurations()
    {
        android.graphics.drawable.AnimatedVectorDrawable r0;
        int $i0, $i1, $i2;
        android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState $r1;

        r0 := @this: android.graphics.drawable.AnimatedVectorDrawable;

        $i0 = specialinvoke r0.<android.graphics.drawable.Drawable: int getChangingConfigurations()>();

        $r1 = r0.<android.graphics.drawable.AnimatedVectorDrawable: android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState mAnimatedVectorState>;

        $i1 = virtualinvoke $r1.<android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState: int getChangingConfigurations()>();

        $i2 = $i0 | $i1;

        return $i2;
    }

    public android.graphics.ColorFilter getColorFilter()
    {
        android.graphics.drawable.AnimatedVectorDrawable r0;
        android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState $r1;
        android.graphics.drawable.VectorDrawable $r2;
        android.graphics.ColorFilter $r3;

        r0 := @this: android.graphics.drawable.AnimatedVectorDrawable;

        $r1 = r0.<android.graphics.drawable.AnimatedVectorDrawable: android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState mAnimatedVectorState>;

        $r2 = $r1.<android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState: android.graphics.drawable.VectorDrawable mVectorDrawable>;

        $r3 = virtualinvoke $r2.<android.graphics.drawable.VectorDrawable: android.graphics.ColorFilter getColorFilter()>();

        return $r3;
    }

    public android.graphics.drawable.Drawable$ConstantState getConstantState()
    {
        android.graphics.drawable.AnimatedVectorDrawable r0;
        android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState $r1, $r2;
        int $i0;

        r0 := @this: android.graphics.drawable.AnimatedVectorDrawable;

        $r1 = r0.<android.graphics.drawable.AnimatedVectorDrawable: android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState mAnimatedVectorState>;

        $i0 = virtualinvoke r0.<android.graphics.drawable.AnimatedVectorDrawable: int getChangingConfigurations()>();

        $r1.<android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState: int mChangingConfigurations> = $i0;

        $r2 = r0.<android.graphics.drawable.AnimatedVectorDrawable: android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState mAnimatedVectorState>;

        return $r2;
    }

    public int getIntrinsicHeight()
    {
        android.graphics.drawable.AnimatedVectorDrawable r0;
        android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState $r1;
        android.graphics.drawable.VectorDrawable $r2;
        int $i0;

        r0 := @this: android.graphics.drawable.AnimatedVectorDrawable;

        $r1 = r0.<android.graphics.drawable.AnimatedVectorDrawable: android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState mAnimatedVectorState>;

        $r2 = $r1.<android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState: android.graphics.drawable.VectorDrawable mVectorDrawable>;

        $i0 = virtualinvoke $r2.<android.graphics.drawable.VectorDrawable: int getIntrinsicHeight()>();

        return $i0;
    }

    public int getIntrinsicWidth()
    {
        android.graphics.drawable.AnimatedVectorDrawable r0;
        android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState $r1;
        android.graphics.drawable.VectorDrawable $r2;
        int $i0;

        r0 := @this: android.graphics.drawable.AnimatedVectorDrawable;

        $r1 = r0.<android.graphics.drawable.AnimatedVectorDrawable: android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState mAnimatedVectorState>;

        $r2 = $r1.<android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState: android.graphics.drawable.VectorDrawable mVectorDrawable>;

        $i0 = virtualinvoke $r2.<android.graphics.drawable.VectorDrawable: int getIntrinsicWidth()>();

        return $i0;
    }

    public int getOpacity()
    {
        android.graphics.drawable.AnimatedVectorDrawable r0;

        r0 := @this: android.graphics.drawable.AnimatedVectorDrawable;

        return -3;
    }

    public android.graphics.Insets getOpticalInsets()
    {
        android.graphics.drawable.AnimatedVectorDrawable r0;
        android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState $r1;
        android.graphics.drawable.VectorDrawable $r2;
        android.graphics.Insets $r3;

        r0 := @this: android.graphics.drawable.AnimatedVectorDrawable;

        $r1 = r0.<android.graphics.drawable.AnimatedVectorDrawable: android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState mAnimatedVectorState>;

        $r2 = $r1.<android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState: android.graphics.drawable.VectorDrawable mVectorDrawable>;

        $r3 = virtualinvoke $r2.<android.graphics.drawable.VectorDrawable: android.graphics.Insets getOpticalInsets()>();

        return $r3;
    }

    public void getOutline(android.graphics.Outline)
    {
        android.graphics.drawable.AnimatedVectorDrawable r0;
        android.graphics.Outline r1;
        android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState $r2;
        android.graphics.drawable.VectorDrawable $r3;

        r0 := @this: android.graphics.drawable.AnimatedVectorDrawable;

        r1 := @parameter0: android.graphics.Outline;

        $r2 = r0.<android.graphics.drawable.AnimatedVectorDrawable: android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState mAnimatedVectorState>;

        $r3 = $r2.<android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState: android.graphics.drawable.VectorDrawable mVectorDrawable>;

        virtualinvoke $r3.<android.graphics.drawable.VectorDrawable: void getOutline(android.graphics.Outline)>(r1);

        return;
    }

    public void inflate(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.graphics.drawable.AnimatedVectorDrawable r0;
        org.xmlpull.v1.XmlPullParser r1;
        android.util.AttributeSet r2;
        android.content.res.Resources$Theme r3;
        android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState r4;
        int i0, $i1, $i2, i3, i4, i5;
        android.animation.Animator r5;
        java.util.ArrayList $r6;
        java.lang.String $r7, $r8, r18, r22;
        boolean $z0, $z1, $z2;
        int[] $r9, $r11;
        android.graphics.drawable.VectorDrawable $r10, $r15, $r16, r20;
        android.graphics.drawable.Drawable $r12, $r13;
        android.graphics.drawable.Drawable$Callback $r14;
        android.content.res.Resources r17;
        float f0, f1;
        android.content.res.TypedArray r19, r21;

        r0 := @this: android.graphics.drawable.AnimatedVectorDrawable;

        r17 := @parameter0: android.content.res.Resources;

        r1 := @parameter1: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter2: android.util.AttributeSet;

        r3 := @parameter3: android.content.res.Resources$Theme;

        r4 = r0.<android.graphics.drawable.AnimatedVectorDrawable: android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState mAnimatedVectorState>;

        i3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

        f0 = 1.0F;

        i0 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label01:
        if i3 == 1 goto label10;

        $i1 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        $i2 = i0 + 1;

        if $i1 >= $i2 goto label02;

        if i3 == 3 goto label10;

     label02:
        f1 = f0;

        if i3 != 2 goto label09;

        r18 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r7 = "animated-vector";

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r18);

        if $z0 == 0 goto label06;

        $r11 = <com.android.internal.R$styleable: int[] AnimatedVectorDrawable>;

        r19 = staticinvoke <android.graphics.drawable.AnimatedVectorDrawable: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>(r17, r3, r2, $r11);

        i4 = virtualinvoke r19.<android.content.res.TypedArray: int getResourceId(int,int)>(0, 0);

        if i4 == 0 goto label04;

        $r12 = virtualinvoke r17.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources$Theme)>(i4, r3);

        $r13 = virtualinvoke $r12.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        r20 = (android.graphics.drawable.VectorDrawable) $r13;

        virtualinvoke r20.<android.graphics.drawable.VectorDrawable: void setAllowCaching(boolean)>(0);

        $r14 = r0.<android.graphics.drawable.AnimatedVectorDrawable: android.graphics.drawable.Drawable$Callback mCallback>;

        virtualinvoke r20.<android.graphics.drawable.VectorDrawable: void setCallback(android.graphics.drawable.Drawable$Callback)>($r14);

        f0 = virtualinvoke r20.<android.graphics.drawable.VectorDrawable: float getPixelSize()>();

        $r15 = r4.<android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState: android.graphics.drawable.VectorDrawable mVectorDrawable>;

        if $r15 == null goto label03;

        $r16 = r4.<android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState: android.graphics.drawable.VectorDrawable mVectorDrawable>;

        virtualinvoke $r16.<android.graphics.drawable.VectorDrawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(null);

     label03:
        r4.<android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState: android.graphics.drawable.VectorDrawable mVectorDrawable> = r20;

     label04:
        virtualinvoke r19.<android.content.res.TypedArray: void recycle()>();

        f1 = f0;

     label05:
        goto label09;

     label06:
        f1 = f0;

        $r8 = "target";

        $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r18);

        if $z1 == 0 goto label05;

        $r9 = <com.android.internal.R$styleable: int[] AnimatedVectorDrawableTarget>;

        r21 = staticinvoke <android.graphics.drawable.AnimatedVectorDrawable: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>(r17, r3, r2, $r9);

        r22 = virtualinvoke r21.<android.content.res.TypedArray: java.lang.String getString(int)>(0);

        i5 = virtualinvoke r21.<android.content.res.TypedArray: int getResourceId(int,int)>(1, 0);

        if i5 == 0 goto label08;

        if r3 == null goto label07;

        r5 = staticinvoke <android.animation.AnimatorInflater: android.animation.Animator loadAnimator(android.content.res.Resources,android.content.res.Resources$Theme,int,float)>(r17, r3, i5, f0);

        $r10 = r4.<android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState: android.graphics.drawable.VectorDrawable mVectorDrawable>;

        $z2 = staticinvoke <android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState: boolean access$100(android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState)>(r4);

        staticinvoke <android.graphics.drawable.AnimatedVectorDrawable: void updateAnimatorProperty(android.animation.Animator,java.lang.String,android.graphics.drawable.VectorDrawable,boolean)>(r5, r22, $r10, $z2);

        virtualinvoke r4.<android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState: void addTargetAnimator(java.lang.String,android.animation.Animator)>(r22, r5);

        goto label08;

     label07:
        virtualinvoke r4.<android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState: void addPendingAnimator(int,float,java.lang.String)>(i5, f0, r22);

     label08:
        virtualinvoke r21.<android.content.res.TypedArray: void recycle()>();

        f1 = f0;

     label09:
        i3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        f0 = f1;

        goto label01;

     label10:
        $r6 = r4.<android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState: java.util.ArrayList mPendingAnims>;

        if $r6 != null goto label11;

        r17 = null;

        goto label11;

     label11:
        r0.<android.graphics.drawable.AnimatedVectorDrawable: android.content.res.Resources mRes> = r17;

        return;
    }

    public boolean isRunning()
    {
        android.graphics.drawable.AnimatedVectorDrawable r0;
        android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimator $r1;
        boolean $z0;

        r0 := @this: android.graphics.drawable.AnimatedVectorDrawable;

        $r1 = r0.<android.graphics.drawable.AnimatedVectorDrawable: android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimator mAnimatorSet>;

        $z0 = interfaceinvoke $r1.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimator: boolean isRunning()>();

        return $z0;
    }

    public boolean isStateful()
    {
        android.graphics.drawable.AnimatedVectorDrawable r0;
        android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState $r1;
        android.graphics.drawable.VectorDrawable $r2;
        boolean $z0;

        r0 := @this: android.graphics.drawable.AnimatedVectorDrawable;

        $r1 = r0.<android.graphics.drawable.AnimatedVectorDrawable: android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState mAnimatedVectorState>;

        $r2 = $r1.<android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState: android.graphics.drawable.VectorDrawable mVectorDrawable>;

        $z0 = virtualinvoke $r2.<android.graphics.drawable.VectorDrawable: boolean isStateful()>();

        return $z0;
    }

    public android.graphics.drawable.Drawable mutate()
    {
        android.graphics.drawable.AnimatedVectorDrawable r0;
        boolean $z0;
        android.graphics.drawable.Drawable $r1;
        android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState $r2, $r5;
        android.content.res.Resources $r3;
        android.graphics.drawable.Drawable$Callback $r4;

        r0 := @this: android.graphics.drawable.AnimatedVectorDrawable;

        $z0 = r0.<android.graphics.drawable.AnimatedVectorDrawable: boolean mMutated>;

        if $z0 != 0 goto label1;

        $r1 = specialinvoke r0.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        if $r1 != r0 goto label1;

        $r2 = new android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState;

        $r5 = r0.<android.graphics.drawable.AnimatedVectorDrawable: android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState mAnimatedVectorState>;

        $r4 = r0.<android.graphics.drawable.AnimatedVectorDrawable: android.graphics.drawable.Drawable$Callback mCallback>;

        $r3 = r0.<android.graphics.drawable.AnimatedVectorDrawable: android.content.res.Resources mRes>;

        specialinvoke $r2.<android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState: void <init>(android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState,android.graphics.drawable.Drawable$Callback,android.content.res.Resources)>($r5, $r4, $r3);

        r0.<android.graphics.drawable.AnimatedVectorDrawable: android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState mAnimatedVectorState> = $r2;

        r0.<android.graphics.drawable.AnimatedVectorDrawable: boolean mMutated> = 1;

     label1:
        return r0;
    }

    protected void onBoundsChange(android.graphics.Rect)
    {
        android.graphics.drawable.AnimatedVectorDrawable r0;
        android.graphics.Rect r1;
        android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState $r2;
        android.graphics.drawable.VectorDrawable $r3;

        r0 := @this: android.graphics.drawable.AnimatedVectorDrawable;

        r1 := @parameter0: android.graphics.Rect;

        $r2 = r0.<android.graphics.drawable.AnimatedVectorDrawable: android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState mAnimatedVectorState>;

        $r3 = $r2.<android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState: android.graphics.drawable.VectorDrawable mVectorDrawable>;

        virtualinvoke $r3.<android.graphics.drawable.VectorDrawable: void setBounds(android.graphics.Rect)>(r1);

        return;
    }

    public boolean onLayoutDirectionChanged(int)
    {
        android.graphics.drawable.AnimatedVectorDrawable r0;
        int i0;
        android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState $r1;
        android.graphics.drawable.VectorDrawable $r2;
        boolean $z0;

        r0 := @this: android.graphics.drawable.AnimatedVectorDrawable;

        i0 := @parameter0: int;

        $r1 = r0.<android.graphics.drawable.AnimatedVectorDrawable: android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState mAnimatedVectorState>;

        $r2 = $r1.<android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState: android.graphics.drawable.VectorDrawable mVectorDrawable>;

        $z0 = virtualinvoke $r2.<android.graphics.drawable.VectorDrawable: boolean setLayoutDirection(int)>(i0);

        return $z0;
    }

    protected boolean onLevelChange(int)
    {
        android.graphics.drawable.AnimatedVectorDrawable r0;
        int i0;
        android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState $r1;
        android.graphics.drawable.VectorDrawable $r2;
        boolean $z0;

        r0 := @this: android.graphics.drawable.AnimatedVectorDrawable;

        i0 := @parameter0: int;

        $r1 = r0.<android.graphics.drawable.AnimatedVectorDrawable: android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState mAnimatedVectorState>;

        $r2 = $r1.<android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState: android.graphics.drawable.VectorDrawable mVectorDrawable>;

        $z0 = virtualinvoke $r2.<android.graphics.drawable.VectorDrawable: boolean setLevel(int)>(i0);

        return $z0;
    }

    protected boolean onStateChange(int[])
    {
        android.graphics.drawable.AnimatedVectorDrawable r0;
        int[] r1;
        android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState $r2;
        android.graphics.drawable.VectorDrawable $r3;
        boolean $z0;

        r0 := @this: android.graphics.drawable.AnimatedVectorDrawable;

        r1 := @parameter0: int[];

        $r2 = r0.<android.graphics.drawable.AnimatedVectorDrawable: android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState mAnimatedVectorState>;

        $r3 = $r2.<android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState: android.graphics.drawable.VectorDrawable mVectorDrawable>;

        $z0 = virtualinvoke $r3.<android.graphics.drawable.VectorDrawable: boolean setState(int[])>(r1);

        return $z0;
    }

    public void registerAnimationCallback(android.graphics.drawable.Animatable2$AnimationCallback)
    {
        android.graphics.drawable.AnimatedVectorDrawable r0;
        android.graphics.drawable.Animatable2$AnimationCallback r1;
        java.util.ArrayList $r2, $r3, $r8;
        android.animation.Animator$AnimatorListener $r4, $r5;
        android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimator $r6;
        android.graphics.drawable.AnimatedVectorDrawable$2 $r7;

        r0 := @this: android.graphics.drawable.AnimatedVectorDrawable;

        r1 := @parameter0: android.graphics.drawable.Animatable2$AnimationCallback;

        if r1 != null goto label1;

        return;

     label1:
        $r2 = r0.<android.graphics.drawable.AnimatedVectorDrawable: java.util.ArrayList mAnimationCallbacks>;

        if $r2 != null goto label2;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r0.<android.graphics.drawable.AnimatedVectorDrawable: java.util.ArrayList mAnimationCallbacks> = $r8;

     label2:
        $r3 = r0.<android.graphics.drawable.AnimatedVectorDrawable: java.util.ArrayList mAnimationCallbacks>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        $r4 = r0.<android.graphics.drawable.AnimatedVectorDrawable: android.animation.Animator$AnimatorListener mAnimatorListener>;

        if $r4 != null goto label3;

        $r7 = new android.graphics.drawable.AnimatedVectorDrawable$2;

        specialinvoke $r7.<android.graphics.drawable.AnimatedVectorDrawable$2: void <init>(android.graphics.drawable.AnimatedVectorDrawable)>(r0);

        r0.<android.graphics.drawable.AnimatedVectorDrawable: android.animation.Animator$AnimatorListener mAnimatorListener> = $r7;

     label3:
        $r6 = r0.<android.graphics.drawable.AnimatedVectorDrawable: android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimator mAnimatorSet>;

        $r5 = r0.<android.graphics.drawable.AnimatedVectorDrawable: android.animation.Animator$AnimatorListener mAnimatorListener>;

        interfaceinvoke $r6.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimator: void setListener(android.animation.Animator$AnimatorListener)>($r5);

        return;
    }

    public void reset()
    {
        android.graphics.drawable.AnimatedVectorDrawable r0;
        android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimator $r1;

        r0 := @this: android.graphics.drawable.AnimatedVectorDrawable;

        specialinvoke r0.<android.graphics.drawable.AnimatedVectorDrawable: void ensureAnimatorSet()>();

        $r1 = r0.<android.graphics.drawable.AnimatedVectorDrawable: android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimator mAnimatorSet>;

        interfaceinvoke $r1.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimator: void reset()>();

        return;
    }

    public void reverse()
    {
        android.graphics.drawable.AnimatedVectorDrawable r0;
        boolean $z0;
        android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimator $r1;

        r0 := @this: android.graphics.drawable.AnimatedVectorDrawable;

        specialinvoke r0.<android.graphics.drawable.AnimatedVectorDrawable: void ensureAnimatorSet()>();

        $z0 = virtualinvoke r0.<android.graphics.drawable.AnimatedVectorDrawable: boolean canReverse()>();

        if $z0 != 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("AnimatedVectorDrawable", "AnimatedVectorDrawable can\'t reverse()");

        return;

     label1:
        $r1 = r0.<android.graphics.drawable.AnimatedVectorDrawable: android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimator mAnimatorSet>;

        interfaceinvoke $r1.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimator: void reverse()>();

        return;
    }

    public void setAlpha(int)
    {
        android.graphics.drawable.AnimatedVectorDrawable r0;
        int i0;
        android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState $r1;
        android.graphics.drawable.VectorDrawable $r2;

        r0 := @this: android.graphics.drawable.AnimatedVectorDrawable;

        i0 := @parameter0: int;

        $r1 = r0.<android.graphics.drawable.AnimatedVectorDrawable: android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState mAnimatedVectorState>;

        $r2 = $r1.<android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState: android.graphics.drawable.VectorDrawable mVectorDrawable>;

        virtualinvoke $r2.<android.graphics.drawable.VectorDrawable: void setAlpha(int)>(i0);

        return;
    }

    public void setColorFilter(android.graphics.ColorFilter)
    {
        android.graphics.drawable.AnimatedVectorDrawable r0;
        android.graphics.ColorFilter r1;
        android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState $r2;
        android.graphics.drawable.VectorDrawable $r3;

        r0 := @this: android.graphics.drawable.AnimatedVectorDrawable;

        r1 := @parameter0: android.graphics.ColorFilter;

        $r2 = r0.<android.graphics.drawable.AnimatedVectorDrawable: android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState mAnimatedVectorState>;

        $r3 = $r2.<android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState: android.graphics.drawable.VectorDrawable mVectorDrawable>;

        virtualinvoke $r3.<android.graphics.drawable.VectorDrawable: void setColorFilter(android.graphics.ColorFilter)>(r1);

        return;
    }

    public void setHotspot(float, float)
    {
        android.graphics.drawable.AnimatedVectorDrawable r0;
        float f0, f1;
        android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState $r1;
        android.graphics.drawable.VectorDrawable $r2;

        r0 := @this: android.graphics.drawable.AnimatedVectorDrawable;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r1 = r0.<android.graphics.drawable.AnimatedVectorDrawable: android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState mAnimatedVectorState>;

        $r2 = $r1.<android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState: android.graphics.drawable.VectorDrawable mVectorDrawable>;

        virtualinvoke $r2.<android.graphics.drawable.VectorDrawable: void setHotspot(float,float)>(f0, f1);

        return;
    }

    public void setHotspotBounds(int, int, int, int)
    {
        android.graphics.drawable.AnimatedVectorDrawable r0;
        int i0, i1, i2, i3;
        android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState $r1;
        android.graphics.drawable.VectorDrawable $r2;

        r0 := @this: android.graphics.drawable.AnimatedVectorDrawable;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $r1 = r0.<android.graphics.drawable.AnimatedVectorDrawable: android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState mAnimatedVectorState>;

        $r2 = $r1.<android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState: android.graphics.drawable.VectorDrawable mVectorDrawable>;

        virtualinvoke $r2.<android.graphics.drawable.VectorDrawable: void setHotspotBounds(int,int,int,int)>(i0, i1, i2, i3);

        return;
    }

    public void setTintBlendMode(android.graphics.BlendMode)
    {
        android.graphics.drawable.AnimatedVectorDrawable r0;
        android.graphics.BlendMode r1;
        android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState $r2;
        android.graphics.drawable.VectorDrawable $r3;

        r0 := @this: android.graphics.drawable.AnimatedVectorDrawable;

        r1 := @parameter0: android.graphics.BlendMode;

        $r2 = r0.<android.graphics.drawable.AnimatedVectorDrawable: android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState mAnimatedVectorState>;

        $r3 = $r2.<android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState: android.graphics.drawable.VectorDrawable mVectorDrawable>;

        virtualinvoke $r3.<android.graphics.drawable.VectorDrawable: void setTintBlendMode(android.graphics.BlendMode)>(r1);

        return;
    }

    public void setTintList(android.content.res.ColorStateList)
    {
        android.graphics.drawable.AnimatedVectorDrawable r0;
        android.content.res.ColorStateList r1;
        android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState $r2;
        android.graphics.drawable.VectorDrawable $r3;

        r0 := @this: android.graphics.drawable.AnimatedVectorDrawable;

        r1 := @parameter0: android.content.res.ColorStateList;

        $r2 = r0.<android.graphics.drawable.AnimatedVectorDrawable: android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState mAnimatedVectorState>;

        $r3 = $r2.<android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState: android.graphics.drawable.VectorDrawable mVectorDrawable>;

        virtualinvoke $r3.<android.graphics.drawable.VectorDrawable: void setTintList(android.content.res.ColorStateList)>(r1);

        return;
    }

    public boolean setVisible(boolean, boolean)
    {
        android.graphics.drawable.AnimatedVectorDrawable r0;
        boolean z0, z1, $z2, $z4, $z5;
        android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimator $r1, $r2, $r3, $r4;
        android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState $r5;
        android.graphics.drawable.VectorDrawable $r6;

        r0 := @this: android.graphics.drawable.AnimatedVectorDrawable;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        $r1 = r0.<android.graphics.drawable.AnimatedVectorDrawable: android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimator mAnimatorSet>;

        $z2 = interfaceinvoke $r1.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimator: boolean isInfinite()>();

        if $z2 == 0 goto label2;

        $r2 = r0.<android.graphics.drawable.AnimatedVectorDrawable: android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimator mAnimatorSet>;

        $z4 = interfaceinvoke $r2.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimator: boolean isStarted()>();

        if $z4 == 0 goto label2;

        if z0 == 0 goto label1;

        $r4 = r0.<android.graphics.drawable.AnimatedVectorDrawable: android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimator mAnimatorSet>;

        interfaceinvoke $r4.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimator: void resume()>();

        goto label2;

     label1:
        $r3 = r0.<android.graphics.drawable.AnimatedVectorDrawable: android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimator mAnimatorSet>;

        interfaceinvoke $r3.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimator: void pause()>();

     label2:
        $r5 = r0.<android.graphics.drawable.AnimatedVectorDrawable: android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState mAnimatedVectorState>;

        $r6 = $r5.<android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState: android.graphics.drawable.VectorDrawable mVectorDrawable>;

        virtualinvoke $r6.<android.graphics.drawable.VectorDrawable: boolean setVisible(boolean,boolean)>(z0, z1);

        $z5 = specialinvoke r0.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>(z0, z1);

        return $z5;
    }

    public void start()
    {
        android.graphics.drawable.AnimatedVectorDrawable r0;
        android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimator $r1;

        r0 := @this: android.graphics.drawable.AnimatedVectorDrawable;

        specialinvoke r0.<android.graphics.drawable.AnimatedVectorDrawable: void ensureAnimatorSet()>();

        $r1 = r0.<android.graphics.drawable.AnimatedVectorDrawable: android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimator mAnimatorSet>;

        interfaceinvoke $r1.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimator: void start()>();

        return;
    }

    public void stop()
    {
        android.graphics.drawable.AnimatedVectorDrawable r0;
        android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimator $r1;

        r0 := @this: android.graphics.drawable.AnimatedVectorDrawable;

        $r1 = r0.<android.graphics.drawable.AnimatedVectorDrawable: android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimator mAnimatorSet>;

        interfaceinvoke $r1.<android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimator: void end()>();

        return;
    }

    public boolean unregisterAnimationCallback(android.graphics.drawable.Animatable2$AnimationCallback)
    {
        android.graphics.drawable.AnimatedVectorDrawable r0;
        android.graphics.drawable.Animatable2$AnimationCallback r1;
        java.util.ArrayList r2, $r3;
        boolean z0;
        int $i0;

        r0 := @this: android.graphics.drawable.AnimatedVectorDrawable;

        r1 := @parameter0: android.graphics.drawable.Animatable2$AnimationCallback;

        r2 = r0.<android.graphics.drawable.AnimatedVectorDrawable: java.util.ArrayList mAnimationCallbacks>;

        if r2 == null goto label3;

        if r1 != null goto label1;

        goto label3;

     label1:
        z0 = virtualinvoke r2.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        $r3 = r0.<android.graphics.drawable.AnimatedVectorDrawable: java.util.ArrayList mAnimationCallbacks>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if $i0 != 0 goto label2;

        specialinvoke r0.<android.graphics.drawable.AnimatedVectorDrawable: void removeAnimatorSetListener()>();

     label2:
        return z0;

     label3:
        return 0;
    }

    public static void <clinit>()
    {
        <android.graphics.drawable.AnimatedVectorDrawable: java.lang.String TARGET> = "target";

        <android.graphics.drawable.AnimatedVectorDrawable: java.lang.String LOGTAG> = "AnimatedVectorDrawable";

        <android.graphics.drawable.AnimatedVectorDrawable: boolean DBG_ANIMATION_VECTOR_DRAWABLE> = 0;

        <android.graphics.drawable.AnimatedVectorDrawable: java.lang.String ANIMATED_VECTOR> = "animated-vector";

        return;
    }
}
