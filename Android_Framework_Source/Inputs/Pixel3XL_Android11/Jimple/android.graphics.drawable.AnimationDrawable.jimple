public class android.graphics.drawable.AnimationDrawable extends android.graphics.drawable.DrawableContainer implements java.lang.Runnable, android.graphics.drawable.Animatable
{
    private boolean mAnimating;
    private android.graphics.drawable.AnimationDrawable$AnimationState mAnimationState;
    private int mCurFrame;
    private boolean mMutated;
    private boolean mRunning;

    public void <init>()
    {
        android.graphics.drawable.AnimationDrawable r0;

        r0 := @this: android.graphics.drawable.AnimationDrawable;

        specialinvoke r0.<android.graphics.drawable.AnimationDrawable: void <init>(android.graphics.drawable.AnimationDrawable$AnimationState,android.content.res.Resources)>(null, null);

        return;
    }

    private void <init>(android.graphics.drawable.AnimationDrawable$AnimationState, android.content.res.Resources)
    {
        android.graphics.drawable.AnimationDrawable r0;
        android.graphics.drawable.AnimationDrawable$AnimationState r1, $r3;
        android.content.res.Resources r2;

        r0 := @this: android.graphics.drawable.AnimationDrawable;

        r1 := @parameter0: android.graphics.drawable.AnimationDrawable$AnimationState;

        r2 := @parameter1: android.content.res.Resources;

        specialinvoke r0.<android.graphics.drawable.DrawableContainer: void <init>()>();

        r0.<android.graphics.drawable.AnimationDrawable: int mCurFrame> = 0;

        $r3 = new android.graphics.drawable.AnimationDrawable$AnimationState;

        specialinvoke $r3.<android.graphics.drawable.AnimationDrawable$AnimationState: void <init>(android.graphics.drawable.AnimationDrawable$AnimationState,android.graphics.drawable.AnimationDrawable,android.content.res.Resources)>(r1, r0, r2);

        virtualinvoke r0.<android.graphics.drawable.AnimationDrawable: void setConstantState(android.graphics.drawable.DrawableContainer$DrawableContainerState)>($r3);

        if r1 == null goto label1;

        specialinvoke r0.<android.graphics.drawable.AnimationDrawable: void setFrame(int,boolean,boolean)>(0, 1, 0);

     label1:
        return;
    }

    void <init>(android.graphics.drawable.AnimationDrawable$AnimationState, android.content.res.Resources, android.graphics.drawable.AnimationDrawable$1)
    {
        android.graphics.drawable.AnimationDrawable r0;
        android.graphics.drawable.AnimationDrawable$AnimationState r1;
        android.content.res.Resources r2;
        android.graphics.drawable.AnimationDrawable$1 r3;

        r0 := @this: android.graphics.drawable.AnimationDrawable;

        r1 := @parameter0: android.graphics.drawable.AnimationDrawable$AnimationState;

        r2 := @parameter1: android.content.res.Resources;

        r3 := @parameter2: android.graphics.drawable.AnimationDrawable$1;

        specialinvoke r0.<android.graphics.drawable.AnimationDrawable: void <init>(android.graphics.drawable.AnimationDrawable$AnimationState,android.content.res.Resources)>(r1, r2);

        return;
    }

    private void inflateChildElements(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.graphics.drawable.AnimationDrawable r0;
        org.xmlpull.v1.XmlPullParser r1;
        android.util.AttributeSet r2;
        android.content.res.Resources$Theme r3;
        int i0, $i1, i2, i3, i4, i5;
        android.graphics.drawable.Drawable r4, r22;
        java.lang.String $r5, $r8, $r12, $r15, $r19;
        boolean $z0;
        int[] $r6;
        android.graphics.drawable.AnimationDrawable$AnimationState $r13;
        android.content.res.Resources r20;
        android.content.res.TypedArray r21;
        java.lang.StringBuilder r25, r27;
        org.xmlpull.v1.XmlPullParserException r26, r28;
        java.lang.Throwable r29, r30;

        r0 := @this: android.graphics.drawable.AnimationDrawable;

        r20 := @parameter0: android.content.res.Resources;

        r1 := @parameter1: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter2: android.util.AttributeSet;

        r3 := @parameter3: android.content.res.Resources$Theme;

        $i1 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        i0 = $i1 + 1;

     label01:
        i2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i2 == 1 goto label11;

        i3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if i3 >= i0 goto label02;

        if i2 == 3 goto label11;

     label02:
        if i2 == 2 goto label03;

        goto label01;

     label03:
        if i3 > i0 goto label01;

        $r5 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z0 != 0 goto label04;

        goto label01;

     label04:
        $r6 = <com.android.internal.R$styleable: int[] AnimationDrawableItem>;

        r21 = staticinvoke <android.graphics.drawable.AnimationDrawable: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>(r20, r3, r2, $r6);

        i4 = virtualinvoke r21.<android.content.res.TypedArray: int getInt(int,int)>(0, -1);

        if i4 < 0 goto label10;

        r4 = virtualinvoke r21.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(1);

        virtualinvoke r21.<android.content.res.TypedArray: void recycle()>();

        r22 = r4;

        if r4 != null goto label08;

     label05:
        i5 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i5 != 4 goto label06;

        goto label05;

     label06:
        if i5 != 2 goto label07;

        r22 = staticinvoke <android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>(r20, r1, r2, r3);

        goto label08;

     label07:
        r25 = new java.lang.StringBuilder;

        specialinvoke r25.<java.lang.StringBuilder: void <init>()>();

        $r15 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": <item> tag requires a \'drawable\' attribute or child tag defining a drawable");

        r26 = new org.xmlpull.v1.XmlPullParserException;

        $r19 = virtualinvoke r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r26.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r19);

        r29 = (java.lang.Throwable) r26;

        throw r29;

     label08:
        $r13 = r0.<android.graphics.drawable.AnimationDrawable: android.graphics.drawable.AnimationDrawable$AnimationState mAnimationState>;

        virtualinvoke $r13.<android.graphics.drawable.AnimationDrawable$AnimationState: void addFrame(android.graphics.drawable.Drawable,int)>(r22, i4);

        if r22 == null goto label09;

        virtualinvoke r22.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(r0);

     label09:
        goto label01;

     label10:
        r27 = new java.lang.StringBuilder;

        specialinvoke r27.<java.lang.StringBuilder: void <init>()>();

        $r8 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": <item> tag requires a \'duration\' attribute");

        r28 = new org.xmlpull.v1.XmlPullParserException;

        $r12 = virtualinvoke r27.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r28.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r12);

        r30 = (java.lang.Throwable) r28;

        throw r30;

     label11:
        return;
    }

    private void nextFrame(boolean)
    {
        android.graphics.drawable.AnimationDrawable r0;
        boolean z0, $z1, z2, z3, $z4;
        int i0, i1, $i2, i3, i4;
        android.graphics.drawable.AnimationDrawable$AnimationState $r1, $r2, $r3;

        r0 := @this: android.graphics.drawable.AnimationDrawable;

        z0 := @parameter0: boolean;

        i3 = r0.<android.graphics.drawable.AnimationDrawable: int mCurFrame>;

        z2 = 1;

        i0 = i3 + 1;

        $r1 = r0.<android.graphics.drawable.AnimationDrawable: android.graphics.drawable.AnimationDrawable$AnimationState mAnimationState>;

        i1 = virtualinvoke $r1.<android.graphics.drawable.AnimationDrawable$AnimationState: int getChildCount()>();

        $r2 = r0.<android.graphics.drawable.AnimationDrawable: android.graphics.drawable.AnimationDrawable$AnimationState mAnimationState>;

        $z1 = staticinvoke <android.graphics.drawable.AnimationDrawable$AnimationState: boolean access$000(android.graphics.drawable.AnimationDrawable$AnimationState)>($r2);

        if $z1 == 0 goto label1;

        $i2 = i1 - 1;

        if i0 < $i2 goto label1;

        z3 = 1;

        goto label2;

     label1:
        z3 = 0;

     label2:
        i4 = i0;

        $r3 = r0.<android.graphics.drawable.AnimationDrawable: android.graphics.drawable.AnimationDrawable$AnimationState mAnimationState>;

        $z4 = staticinvoke <android.graphics.drawable.AnimationDrawable$AnimationState: boolean access$000(android.graphics.drawable.AnimationDrawable$AnimationState)>($r3);

        if $z4 != 0 goto label3;

        i4 = i0;

        if i0 < i1 goto label3;

        i4 = 0;

     label3:
        if z3 != 0 goto label4;

        goto label5;

     label4:
        z2 = 0;

     label5:
        specialinvoke r0.<android.graphics.drawable.AnimationDrawable: void setFrame(int,boolean,boolean)>(i4, z0, z2);

        return;
    }

    private void setFrame(int, boolean, boolean)
    {
        android.graphics.drawable.AnimationDrawable r0;
        int i0, $i1, $i3;
        boolean z0, z1;
        android.graphics.drawable.AnimationDrawable$AnimationState $r1, $r2;
        long $l2, $l4, $l5;
        int[] $r3;

        r0 := @this: android.graphics.drawable.AnimationDrawable;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        $r1 = r0.<android.graphics.drawable.AnimationDrawable: android.graphics.drawable.AnimationDrawable$AnimationState mAnimationState>;

        $i1 = virtualinvoke $r1.<android.graphics.drawable.AnimationDrawable$AnimationState: int getChildCount()>();

        if i0 < $i1 goto label1;

        return;

     label1:
        r0.<android.graphics.drawable.AnimationDrawable: boolean mAnimating> = z1;

        r0.<android.graphics.drawable.AnimationDrawable: int mCurFrame> = i0;

        virtualinvoke r0.<android.graphics.drawable.AnimationDrawable: boolean selectDrawable(int)>(i0);

        if z0 != 0 goto label2;

        if z1 == 0 goto label3;

     label2:
        virtualinvoke r0.<android.graphics.drawable.AnimationDrawable: void unscheduleSelf(java.lang.Runnable)>(r0);

     label3:
        if z1 == 0 goto label4;

        r0.<android.graphics.drawable.AnimationDrawable: int mCurFrame> = i0;

        r0.<android.graphics.drawable.AnimationDrawable: boolean mRunning> = 1;

        $l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r2 = r0.<android.graphics.drawable.AnimationDrawable: android.graphics.drawable.AnimationDrawable$AnimationState mAnimationState>;

        $r3 = staticinvoke <android.graphics.drawable.AnimationDrawable$AnimationState: int[] access$100(android.graphics.drawable.AnimationDrawable$AnimationState)>($r2);

        $i3 = $r3[i0];

        $l4 = (long) $i3;

        $l5 = $l2 + $l4;

        virtualinvoke r0.<android.graphics.drawable.AnimationDrawable: void scheduleSelf(java.lang.Runnable,long)>(r0, $l5);

     label4:
        return;
    }

    private void updateStateFromTypedArray(android.content.res.TypedArray)
    {
        android.graphics.drawable.AnimationDrawable r0;
        android.content.res.TypedArray r1;
        boolean $z0, $z1, $z2, $z3;
        android.graphics.drawable.AnimationDrawable$AnimationState r2, r3;

        r0 := @this: android.graphics.drawable.AnimationDrawable;

        r1 := @parameter0: android.content.res.TypedArray;

        r2 = r0.<android.graphics.drawable.AnimationDrawable: android.graphics.drawable.AnimationDrawable$AnimationState mAnimationState>;

        $z0 = r2.<android.graphics.drawable.AnimationDrawable$AnimationState: boolean mVariablePadding>;

        $z1 = virtualinvoke r1.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(1, $z0);

        r2.<android.graphics.drawable.AnimationDrawable$AnimationState: boolean mVariablePadding> = $z1;

        r3 = r0.<android.graphics.drawable.AnimationDrawable: android.graphics.drawable.AnimationDrawable$AnimationState mAnimationState>;

        $z2 = staticinvoke <android.graphics.drawable.AnimationDrawable$AnimationState: boolean access$000(android.graphics.drawable.AnimationDrawable$AnimationState)>(r3);

        $z3 = virtualinvoke r1.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(2, $z2);

        staticinvoke <android.graphics.drawable.AnimationDrawable$AnimationState: boolean access$002(android.graphics.drawable.AnimationDrawable$AnimationState,boolean)>(r3, $z3);

        return;
    }

    public void addFrame(android.graphics.drawable.Drawable, int)
    {
        android.graphics.drawable.AnimationDrawable r0;
        android.graphics.drawable.Drawable r1;
        int i0;
        android.graphics.drawable.AnimationDrawable$AnimationState $r2;
        boolean $z0;

        r0 := @this: android.graphics.drawable.AnimationDrawable;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        i0 := @parameter1: int;

        $r2 = r0.<android.graphics.drawable.AnimationDrawable: android.graphics.drawable.AnimationDrawable$AnimationState mAnimationState>;

        virtualinvoke $r2.<android.graphics.drawable.AnimationDrawable$AnimationState: void addFrame(android.graphics.drawable.Drawable,int)>(r1, i0);

        $z0 = r0.<android.graphics.drawable.AnimationDrawable: boolean mRunning>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<android.graphics.drawable.AnimationDrawable: void setFrame(int,boolean,boolean)>(0, 1, 0);

     label1:
        return;
    }

    public void clearMutated()
    {
        android.graphics.drawable.AnimationDrawable r0;

        r0 := @this: android.graphics.drawable.AnimationDrawable;

        specialinvoke r0.<android.graphics.drawable.DrawableContainer: void clearMutated()>();

        r0.<android.graphics.drawable.AnimationDrawable: boolean mMutated> = 0;

        return;
    }

    android.graphics.drawable.AnimationDrawable$AnimationState cloneConstantState()
    {
        android.graphics.drawable.AnimationDrawable r0;
        android.graphics.drawable.AnimationDrawable$AnimationState $r1, $r2;

        r0 := @this: android.graphics.drawable.AnimationDrawable;

        $r1 = new android.graphics.drawable.AnimationDrawable$AnimationState;

        $r2 = r0.<android.graphics.drawable.AnimationDrawable: android.graphics.drawable.AnimationDrawable$AnimationState mAnimationState>;

        specialinvoke $r1.<android.graphics.drawable.AnimationDrawable$AnimationState: void <init>(android.graphics.drawable.AnimationDrawable$AnimationState,android.graphics.drawable.AnimationDrawable,android.content.res.Resources)>($r2, r0, null);

        return $r1;
    }

    volatile android.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState()
    {
        android.graphics.drawable.AnimationDrawable r0;
        android.graphics.drawable.AnimationDrawable$AnimationState $r1;

        r0 := @this: android.graphics.drawable.AnimationDrawable;

        $r1 = virtualinvoke r0.<android.graphics.drawable.AnimationDrawable: android.graphics.drawable.AnimationDrawable$AnimationState cloneConstantState()>();

        return $r1;
    }

    public int getDuration(int)
    {
        android.graphics.drawable.AnimationDrawable r0;
        int i0, $i1;
        android.graphics.drawable.AnimationDrawable$AnimationState $r1;
        int[] $r2;

        r0 := @this: android.graphics.drawable.AnimationDrawable;

        i0 := @parameter0: int;

        $r1 = r0.<android.graphics.drawable.AnimationDrawable: android.graphics.drawable.AnimationDrawable$AnimationState mAnimationState>;

        $r2 = staticinvoke <android.graphics.drawable.AnimationDrawable$AnimationState: int[] access$100(android.graphics.drawable.AnimationDrawable$AnimationState)>($r1);

        $i1 = $r2[i0];

        return $i1;
    }

    public android.graphics.drawable.Drawable getFrame(int)
    {
        android.graphics.drawable.AnimationDrawable r0;
        int i0;
        android.graphics.drawable.AnimationDrawable$AnimationState $r1;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: android.graphics.drawable.AnimationDrawable;

        i0 := @parameter0: int;

        $r1 = r0.<android.graphics.drawable.AnimationDrawable: android.graphics.drawable.AnimationDrawable$AnimationState mAnimationState>;

        $r2 = virtualinvoke $r1.<android.graphics.drawable.AnimationDrawable$AnimationState: android.graphics.drawable.Drawable getChild(int)>(i0);

        return $r2;
    }

    public int getNumberOfFrames()
    {
        android.graphics.drawable.AnimationDrawable r0;
        android.graphics.drawable.AnimationDrawable$AnimationState $r1;
        int $i0;

        r0 := @this: android.graphics.drawable.AnimationDrawable;

        $r1 = r0.<android.graphics.drawable.AnimationDrawable: android.graphics.drawable.AnimationDrawable$AnimationState mAnimationState>;

        $i0 = virtualinvoke $r1.<android.graphics.drawable.AnimationDrawable$AnimationState: int getChildCount()>();

        return $i0;
    }

    public void inflate(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.graphics.drawable.AnimationDrawable r0;
        android.content.res.Resources r1;
        org.xmlpull.v1.XmlPullParser r2;
        android.util.AttributeSet r3;
        android.content.res.Resources$Theme r4;
        android.content.res.TypedArray r5;
        int[] $r6;

        r0 := @this: android.graphics.drawable.AnimationDrawable;

        r1 := @parameter0: android.content.res.Resources;

        r2 := @parameter1: org.xmlpull.v1.XmlPullParser;

        r3 := @parameter2: android.util.AttributeSet;

        r4 := @parameter3: android.content.res.Resources$Theme;

        $r6 = <com.android.internal.R$styleable: int[] AnimationDrawable>;

        r5 = staticinvoke <android.graphics.drawable.AnimationDrawable: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>(r1, r4, r3, $r6);

        specialinvoke r0.<android.graphics.drawable.DrawableContainer: void inflateWithAttributes(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.TypedArray,int)>(r1, r2, r5, 0);

        specialinvoke r0.<android.graphics.drawable.AnimationDrawable: void updateStateFromTypedArray(android.content.res.TypedArray)>(r5);

        virtualinvoke r0.<android.graphics.drawable.AnimationDrawable: void updateDensity(android.content.res.Resources)>(r1);

        virtualinvoke r5.<android.content.res.TypedArray: void recycle()>();

        specialinvoke r0.<android.graphics.drawable.AnimationDrawable: void inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>(r1, r2, r3, r4);

        specialinvoke r0.<android.graphics.drawable.AnimationDrawable: void setFrame(int,boolean,boolean)>(0, 1, 0);

        return;
    }

    public boolean isOneShot()
    {
        android.graphics.drawable.AnimationDrawable r0;
        android.graphics.drawable.AnimationDrawable$AnimationState $r1;
        boolean $z0;

        r0 := @this: android.graphics.drawable.AnimationDrawable;

        $r1 = r0.<android.graphics.drawable.AnimationDrawable: android.graphics.drawable.AnimationDrawable$AnimationState mAnimationState>;

        $z0 = staticinvoke <android.graphics.drawable.AnimationDrawable$AnimationState: boolean access$000(android.graphics.drawable.AnimationDrawable$AnimationState)>($r1);

        return $z0;
    }

    public boolean isRunning()
    {
        android.graphics.drawable.AnimationDrawable r0;
        boolean $z0;

        r0 := @this: android.graphics.drawable.AnimationDrawable;

        $z0 = r0.<android.graphics.drawable.AnimationDrawable: boolean mRunning>;

        return $z0;
    }

    public android.graphics.drawable.Drawable mutate()
    {
        android.graphics.drawable.AnimationDrawable r0;
        boolean $z0;
        android.graphics.drawable.Drawable $r1;
        android.graphics.drawable.AnimationDrawable$AnimationState $r2;

        r0 := @this: android.graphics.drawable.AnimationDrawable;

        $z0 = r0.<android.graphics.drawable.AnimationDrawable: boolean mMutated>;

        if $z0 != 0 goto label1;

        $r1 = specialinvoke r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mutate()>();

        if $r1 != r0 goto label1;

        $r2 = r0.<android.graphics.drawable.AnimationDrawable: android.graphics.drawable.AnimationDrawable$AnimationState mAnimationState>;

        staticinvoke <android.graphics.drawable.AnimationDrawable$AnimationState: void access$200(android.graphics.drawable.AnimationDrawable$AnimationState)>($r2);

        r0.<android.graphics.drawable.AnimationDrawable: boolean mMutated> = 1;

     label1:
        return r0;
    }

    public void run()
    {
        android.graphics.drawable.AnimationDrawable r0;

        r0 := @this: android.graphics.drawable.AnimationDrawable;

        specialinvoke r0.<android.graphics.drawable.AnimationDrawable: void nextFrame(boolean)>(0);

        return;
    }

    protected void setConstantState(android.graphics.drawable.DrawableContainer$DrawableContainerState)
    {
        android.graphics.drawable.AnimationDrawable r0;
        android.graphics.drawable.DrawableContainer$DrawableContainerState r1;
        boolean $z0;
        android.graphics.drawable.AnimationDrawable$AnimationState $r2;

        r0 := @this: android.graphics.drawable.AnimationDrawable;

        r1 := @parameter0: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        specialinvoke r0.<android.graphics.drawable.DrawableContainer: void setConstantState(android.graphics.drawable.DrawableContainer$DrawableContainerState)>(r1);

        $z0 = r1 instanceof android.graphics.drawable.AnimationDrawable$AnimationState;

        if $z0 == 0 goto label1;

        $r2 = (android.graphics.drawable.AnimationDrawable$AnimationState) r1;

        r0.<android.graphics.drawable.AnimationDrawable: android.graphics.drawable.AnimationDrawable$AnimationState mAnimationState> = $r2;

     label1:
        return;
    }

    public void setOneShot(boolean)
    {
        android.graphics.drawable.AnimationDrawable r0;
        boolean z0;
        android.graphics.drawable.AnimationDrawable$AnimationState $r1;

        r0 := @this: android.graphics.drawable.AnimationDrawable;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.graphics.drawable.AnimationDrawable: android.graphics.drawable.AnimationDrawable$AnimationState mAnimationState>;

        staticinvoke <android.graphics.drawable.AnimationDrawable$AnimationState: boolean access$002(android.graphics.drawable.AnimationDrawable$AnimationState,boolean)>($r1, z0);

        return;
    }

    public boolean setVisible(boolean, boolean)
    {
        android.graphics.drawable.AnimationDrawable r0;
        boolean z0, z1, z2, $z3, $z4, $z5, z6;
        android.graphics.drawable.AnimationDrawable$AnimationState $r1, $r2;
        int $i1, $i2, i3;

        r0 := @this: android.graphics.drawable.AnimationDrawable;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        z2 = specialinvoke r0.<android.graphics.drawable.DrawableContainer: boolean setVisible(boolean,boolean)>(z0, z1);

        if z0 == 0 goto label8;

        if z1 != 0 goto label1;

        if z2 == 0 goto label9;

     label1:
        if z1 != 0 goto label4;

        $z4 = r0.<android.graphics.drawable.AnimationDrawable: boolean mRunning>;

        if $z4 != 0 goto label2;

        $r2 = r0.<android.graphics.drawable.AnimationDrawable: android.graphics.drawable.AnimationDrawable$AnimationState mAnimationState>;

        $z5 = staticinvoke <android.graphics.drawable.AnimationDrawable$AnimationState: boolean access$000(android.graphics.drawable.AnimationDrawable$AnimationState)>($r2);

        if $z5 == 0 goto label4;

     label2:
        $i1 = r0.<android.graphics.drawable.AnimationDrawable: int mCurFrame>;

        $r1 = r0.<android.graphics.drawable.AnimationDrawable: android.graphics.drawable.AnimationDrawable$AnimationState mAnimationState>;

        $i2 = virtualinvoke $r1.<android.graphics.drawable.AnimationDrawable$AnimationState: int getChildCount()>();

        if $i1 < $i2 goto label3;

        goto label4;

     label3:
        z6 = 0;

        goto label5;

     label4:
        z6 = 1;

     label5:
        if z6 == 0 goto label6;

        i3 = 0;

        goto label7;

     label6:
        i3 = r0.<android.graphics.drawable.AnimationDrawable: int mCurFrame>;

     label7:
        $z3 = r0.<android.graphics.drawable.AnimationDrawable: boolean mAnimating>;

        specialinvoke r0.<android.graphics.drawable.AnimationDrawable: void setFrame(int,boolean,boolean)>(i3, 1, $z3);

        goto label9;

     label8:
        virtualinvoke r0.<android.graphics.drawable.AnimationDrawable: void unscheduleSelf(java.lang.Runnable)>(r0);

     label9:
        return z2;
    }

    public void start()
    {
        android.graphics.drawable.AnimationDrawable r0;
        boolean $z0, $z1, z2;
        android.graphics.drawable.AnimationDrawable$AnimationState $r1, $r2;
        int $i0;

        r0 := @this: android.graphics.drawable.AnimationDrawable;

        z2 = 1;

        r0.<android.graphics.drawable.AnimationDrawable: boolean mAnimating> = 1;

        $z0 = virtualinvoke r0.<android.graphics.drawable.AnimationDrawable: boolean isRunning()>();

        if $z0 != 0 goto label3;

        $r1 = r0.<android.graphics.drawable.AnimationDrawable: android.graphics.drawable.AnimationDrawable$AnimationState mAnimationState>;

        $i0 = virtualinvoke $r1.<android.graphics.drawable.AnimationDrawable$AnimationState: int getChildCount()>();

        if $i0 > 1 goto label2;

        $r2 = r0.<android.graphics.drawable.AnimationDrawable: android.graphics.drawable.AnimationDrawable$AnimationState mAnimationState>;

        $z1 = staticinvoke <android.graphics.drawable.AnimationDrawable$AnimationState: boolean access$000(android.graphics.drawable.AnimationDrawable$AnimationState)>($r2);

        if $z1 != 0 goto label1;

        goto label2;

     label1:
        z2 = 0;

        goto label2;

     label2:
        specialinvoke r0.<android.graphics.drawable.AnimationDrawable: void setFrame(int,boolean,boolean)>(0, 0, z2);

     label3:
        return;
    }

    public void stop()
    {
        android.graphics.drawable.AnimationDrawable r0;
        boolean $z0;

        r0 := @this: android.graphics.drawable.AnimationDrawable;

        r0.<android.graphics.drawable.AnimationDrawable: boolean mAnimating> = 0;

        $z0 = virtualinvoke r0.<android.graphics.drawable.AnimationDrawable: boolean isRunning()>();

        if $z0 == 0 goto label1;

        r0.<android.graphics.drawable.AnimationDrawable: int mCurFrame> = 0;

        virtualinvoke r0.<android.graphics.drawable.AnimationDrawable: void unscheduleSelf(java.lang.Runnable)>(r0);

     label1:
        return;
    }

    public void unscheduleSelf(java.lang.Runnable)
    {
        android.graphics.drawable.AnimationDrawable r0;
        java.lang.Runnable r1;

        r0 := @this: android.graphics.drawable.AnimationDrawable;

        r1 := @parameter0: java.lang.Runnable;

        r0.<android.graphics.drawable.AnimationDrawable: boolean mRunning> = 0;

        specialinvoke r0.<android.graphics.drawable.DrawableContainer: void unscheduleSelf(java.lang.Runnable)>(r1);

        return;
    }
}
