public class android.graphics.drawable.ColorDrawable extends android.graphics.drawable.Drawable
{
    private android.graphics.BlendModeColorFilter mBlendModeColorFilter;
    private android.graphics.drawable.ColorDrawable$ColorState mColorState;
    private boolean mMutated;
    private final android.graphics.Paint mPaint;

    public void <init>()
    {
        android.graphics.drawable.ColorDrawable r0;
        android.graphics.Paint $r1;
        android.graphics.drawable.ColorDrawable$ColorState $r2;

        r0 := @this: android.graphics.drawable.ColorDrawable;

        specialinvoke r0.<android.graphics.drawable.Drawable: void <init>()>();

        $r1 = new android.graphics.Paint;

        specialinvoke $r1.<android.graphics.Paint: void <init>(int)>(1);

        r0.<android.graphics.drawable.ColorDrawable: android.graphics.Paint mPaint> = $r1;

        $r2 = new android.graphics.drawable.ColorDrawable$ColorState;

        specialinvoke $r2.<android.graphics.drawable.ColorDrawable$ColorState: void <init>()>();

        r0.<android.graphics.drawable.ColorDrawable: android.graphics.drawable.ColorDrawable$ColorState mColorState> = $r2;

        return;
    }

    public void <init>(int)
    {
        android.graphics.drawable.ColorDrawable r0;
        int i0;
        android.graphics.Paint $r1;
        android.graphics.drawable.ColorDrawable$ColorState $r2;

        r0 := @this: android.graphics.drawable.ColorDrawable;

        i0 := @parameter0: int;

        specialinvoke r0.<android.graphics.drawable.Drawable: void <init>()>();

        $r1 = new android.graphics.Paint;

        specialinvoke $r1.<android.graphics.Paint: void <init>(int)>(1);

        r0.<android.graphics.drawable.ColorDrawable: android.graphics.Paint mPaint> = $r1;

        $r2 = new android.graphics.drawable.ColorDrawable$ColorState;

        specialinvoke $r2.<android.graphics.drawable.ColorDrawable$ColorState: void <init>()>();

        r0.<android.graphics.drawable.ColorDrawable: android.graphics.drawable.ColorDrawable$ColorState mColorState> = $r2;

        virtualinvoke r0.<android.graphics.drawable.ColorDrawable: void setColor(int)>(i0);

        return;
    }

    private void <init>(android.graphics.drawable.ColorDrawable$ColorState, android.content.res.Resources)
    {
        android.graphics.drawable.ColorDrawable r0;
        android.graphics.drawable.ColorDrawable$ColorState r1;
        android.content.res.Resources r2;
        android.graphics.Paint $r3;

        r0 := @this: android.graphics.drawable.ColorDrawable;

        r1 := @parameter0: android.graphics.drawable.ColorDrawable$ColorState;

        r2 := @parameter1: android.content.res.Resources;

        specialinvoke r0.<android.graphics.drawable.Drawable: void <init>()>();

        $r3 = new android.graphics.Paint;

        specialinvoke $r3.<android.graphics.Paint: void <init>(int)>(1);

        r0.<android.graphics.drawable.ColorDrawable: android.graphics.Paint mPaint> = $r3;

        r0.<android.graphics.drawable.ColorDrawable: android.graphics.drawable.ColorDrawable$ColorState mColorState> = r1;

        specialinvoke r0.<android.graphics.drawable.ColorDrawable: void updateLocalState(android.content.res.Resources)>(r2);

        return;
    }

    void <init>(android.graphics.drawable.ColorDrawable$ColorState, android.content.res.Resources, android.graphics.drawable.ColorDrawable$1)
    {
        android.graphics.drawable.ColorDrawable r0;
        android.graphics.drawable.ColorDrawable$ColorState r1;
        android.content.res.Resources r2;
        android.graphics.drawable.ColorDrawable$1 r3;

        r0 := @this: android.graphics.drawable.ColorDrawable;

        r1 := @parameter0: android.graphics.drawable.ColorDrawable$ColorState;

        r2 := @parameter1: android.content.res.Resources;

        r3 := @parameter2: android.graphics.drawable.ColorDrawable$1;

        specialinvoke r0.<android.graphics.drawable.ColorDrawable: void <init>(android.graphics.drawable.ColorDrawable$ColorState,android.content.res.Resources)>(r1, r2);

        return;
    }

    private void updateLocalState(android.content.res.Resources)
    {
        android.graphics.drawable.ColorDrawable r0;
        android.content.res.Resources r1;
        android.graphics.drawable.ColorDrawable$ColorState $r2, $r3;
        android.graphics.BlendMode $r4;
        android.content.res.ColorStateList $r5;
        android.graphics.BlendModeColorFilter $r6, $r7;

        r0 := @this: android.graphics.drawable.ColorDrawable;

        r1 := @parameter0: android.content.res.Resources;

        $r6 = r0.<android.graphics.drawable.ColorDrawable: android.graphics.BlendModeColorFilter mBlendModeColorFilter>;

        $r2 = r0.<android.graphics.drawable.ColorDrawable: android.graphics.drawable.ColorDrawable$ColorState mColorState>;

        $r5 = $r2.<android.graphics.drawable.ColorDrawable$ColorState: android.content.res.ColorStateList mTint>;

        $r3 = r0.<android.graphics.drawable.ColorDrawable: android.graphics.drawable.ColorDrawable$ColorState mColorState>;

        $r4 = $r3.<android.graphics.drawable.ColorDrawable$ColorState: android.graphics.BlendMode mBlendMode>;

        $r7 = virtualinvoke r0.<android.graphics.drawable.ColorDrawable: android.graphics.BlendModeColorFilter updateBlendModeFilter(android.graphics.BlendModeColorFilter,android.content.res.ColorStateList,android.graphics.BlendMode)>($r6, $r5, $r4);

        r0.<android.graphics.drawable.ColorDrawable: android.graphics.BlendModeColorFilter mBlendModeColorFilter> = $r7;

        return;
    }

    private void updateStateFromTypedArray(android.content.res.TypedArray)
    {
        android.graphics.drawable.ColorDrawable r0;
        android.content.res.TypedArray r1;
        android.graphics.drawable.ColorDrawable$ColorState r2;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        int[] $r3;

        r0 := @this: android.graphics.drawable.ColorDrawable;

        r1 := @parameter0: android.content.res.TypedArray;

        r2 = r0.<android.graphics.drawable.ColorDrawable: android.graphics.drawable.ColorDrawable$ColorState mColorState>;

        $i0 = r2.<android.graphics.drawable.ColorDrawable$ColorState: int mChangingConfigurations>;

        $i1 = virtualinvoke r1.<android.content.res.TypedArray: int getChangingConfigurations()>();

        $i2 = $i0 | $i1;

        r2.<android.graphics.drawable.ColorDrawable$ColorState: int mChangingConfigurations> = $i2;

        $r3 = virtualinvoke r1.<android.content.res.TypedArray: int[] extractThemeAttrs()>();

        r2.<android.graphics.drawable.ColorDrawable$ColorState: int[] mThemeAttrs> = $r3;

        $i3 = r2.<android.graphics.drawable.ColorDrawable$ColorState: int mBaseColor>;

        $i4 = virtualinvoke r1.<android.content.res.TypedArray: int getColor(int,int)>(0, $i3);

        r2.<android.graphics.drawable.ColorDrawable$ColorState: int mBaseColor> = $i4;

        $i5 = r2.<android.graphics.drawable.ColorDrawable$ColorState: int mBaseColor>;

        r2.<android.graphics.drawable.ColorDrawable$ColorState: int mUseColor> = $i5;

        return;
    }

    public void applyTheme(android.content.res.Resources$Theme)
    {
        android.graphics.drawable.ColorDrawable r0;
        android.content.res.Resources$Theme r1;
        android.graphics.drawable.ColorDrawable$ColorState r2;
        android.content.res.TypedArray r3;
        int[] $r4, $r9, $r10;
        android.content.res.ColorStateList $r5, $r6, $r7, $r8;
        boolean $z0;
        android.content.res.Resources $r11;

        r0 := @this: android.graphics.drawable.ColorDrawable;

        r1 := @parameter0: android.content.res.Resources$Theme;

        specialinvoke r0.<android.graphics.drawable.Drawable: void applyTheme(android.content.res.Resources$Theme)>(r1);

        r2 = r0.<android.graphics.drawable.ColorDrawable: android.graphics.drawable.ColorDrawable$ColorState mColorState>;

        if r2 != null goto label1;

        return;

     label1:
        $r4 = r2.<android.graphics.drawable.ColorDrawable$ColorState: int[] mThemeAttrs>;

        if $r4 == null goto label2;

        $r10 = r2.<android.graphics.drawable.ColorDrawable$ColorState: int[] mThemeAttrs>;

        $r9 = <com.android.internal.R$styleable: int[] ColorDrawable>;

        r3 = virtualinvoke r1.<android.content.res.Resources$Theme: android.content.res.TypedArray resolveAttributes(int[],int[])>($r10, $r9);

        specialinvoke r0.<android.graphics.drawable.ColorDrawable: void updateStateFromTypedArray(android.content.res.TypedArray)>(r3);

        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

     label2:
        $r5 = r2.<android.graphics.drawable.ColorDrawable$ColorState: android.content.res.ColorStateList mTint>;

        if $r5 == null goto label3;

        $r6 = r2.<android.graphics.drawable.ColorDrawable$ColorState: android.content.res.ColorStateList mTint>;

        $z0 = virtualinvoke $r6.<android.content.res.ColorStateList: boolean canApplyTheme()>();

        if $z0 == 0 goto label3;

        $r7 = r2.<android.graphics.drawable.ColorDrawable$ColorState: android.content.res.ColorStateList mTint>;

        $r8 = virtualinvoke $r7.<android.content.res.ColorStateList: android.content.res.ColorStateList obtainForTheme(android.content.res.Resources$Theme)>(r1);

        r2.<android.graphics.drawable.ColorDrawable$ColorState: android.content.res.ColorStateList mTint> = $r8;

     label3:
        $r11 = virtualinvoke r1.<android.content.res.Resources$Theme: android.content.res.Resources getResources()>();

        specialinvoke r0.<android.graphics.drawable.ColorDrawable: void updateLocalState(android.content.res.Resources)>($r11);

        return;
    }

    public boolean canApplyTheme()
    {
        android.graphics.drawable.ColorDrawable r0;
        android.graphics.drawable.ColorDrawable$ColorState $r1;
        boolean $z0, $z1, z2;

        r0 := @this: android.graphics.drawable.ColorDrawable;

        $r1 = r0.<android.graphics.drawable.ColorDrawable: android.graphics.drawable.ColorDrawable$ColorState mColorState>;

        $z0 = virtualinvoke $r1.<android.graphics.drawable.ColorDrawable$ColorState: boolean canApplyTheme()>();

        if $z0 != 0 goto label2;

        $z1 = specialinvoke r0.<android.graphics.drawable.Drawable: boolean canApplyTheme()>();

        if $z1 == 0 goto label1;

        goto label2;

     label1:
        z2 = 0;

        goto label3;

     label2:
        z2 = 1;

     label3:
        return z2;
    }

    public void clearMutated()
    {
        android.graphics.drawable.ColorDrawable r0;

        r0 := @this: android.graphics.drawable.ColorDrawable;

        specialinvoke r0.<android.graphics.drawable.Drawable: void clearMutated()>();

        r0.<android.graphics.drawable.ColorDrawable: boolean mMutated> = 0;

        return;
    }

    public void draw(android.graphics.Canvas)
    {
        android.graphics.drawable.ColorDrawable r0;
        android.graphics.Canvas r1;
        android.graphics.ColorFilter r2;
        android.graphics.Paint $r3, $r6, $r8, $r9, $r12;
        android.graphics.drawable.ColorDrawable$ColorState $r4, $r5;
        int $i0, $i1, $i2;
        android.graphics.Rect $r7;
        android.graphics.BlendModeColorFilter $r11, $r14;

        r0 := @this: android.graphics.drawable.ColorDrawable;

        r1 := @parameter0: android.graphics.Canvas;

        $r3 = r0.<android.graphics.drawable.ColorDrawable: android.graphics.Paint mPaint>;

        r2 = virtualinvoke $r3.<android.graphics.Paint: android.graphics.ColorFilter getColorFilter()>();

        $r4 = r0.<android.graphics.drawable.ColorDrawable: android.graphics.drawable.ColorDrawable$ColorState mColorState>;

        $i0 = $r4.<android.graphics.drawable.ColorDrawable$ColorState: int mUseColor>;

        $i1 = $i0 >>> 24;

        if $i1 != 0 goto label1;

        if r2 != null goto label1;

        $r14 = r0.<android.graphics.drawable.ColorDrawable: android.graphics.BlendModeColorFilter mBlendModeColorFilter>;

        if $r14 == null goto label3;

     label1:
        if r2 != null goto label2;

        $r12 = r0.<android.graphics.drawable.ColorDrawable: android.graphics.Paint mPaint>;

        $r11 = r0.<android.graphics.drawable.ColorDrawable: android.graphics.BlendModeColorFilter mBlendModeColorFilter>;

        virtualinvoke $r12.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>($r11);

     label2:
        $r6 = r0.<android.graphics.drawable.ColorDrawable: android.graphics.Paint mPaint>;

        $r5 = r0.<android.graphics.drawable.ColorDrawable: android.graphics.drawable.ColorDrawable$ColorState mColorState>;

        $i2 = $r5.<android.graphics.drawable.ColorDrawable$ColorState: int mUseColor>;

        virtualinvoke $r6.<android.graphics.Paint: void setColor(int)>($i2);

        $r7 = virtualinvoke r0.<android.graphics.drawable.ColorDrawable: android.graphics.Rect getBounds()>();

        $r8 = r0.<android.graphics.drawable.ColorDrawable: android.graphics.Paint mPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawRect(android.graphics.Rect,android.graphics.Paint)>($r7, $r8);

        $r9 = r0.<android.graphics.drawable.ColorDrawable: android.graphics.Paint mPaint>;

        virtualinvoke $r9.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>(r2);

     label3:
        return;
    }

    public int getAlpha()
    {
        android.graphics.drawable.ColorDrawable r0;
        android.graphics.drawable.ColorDrawable$ColorState $r1;
        int $i0, $i1;

        r0 := @this: android.graphics.drawable.ColorDrawable;

        $r1 = r0.<android.graphics.drawable.ColorDrawable: android.graphics.drawable.ColorDrawable$ColorState mColorState>;

        $i0 = $r1.<android.graphics.drawable.ColorDrawable$ColorState: int mUseColor>;

        $i1 = $i0 >>> 24;

        return $i1;
    }

    public int getChangingConfigurations()
    {
        android.graphics.drawable.ColorDrawable r0;
        int $i0, $i1, $i2;
        android.graphics.drawable.ColorDrawable$ColorState $r1;

        r0 := @this: android.graphics.drawable.ColorDrawable;

        $i0 = specialinvoke r0.<android.graphics.drawable.Drawable: int getChangingConfigurations()>();

        $r1 = r0.<android.graphics.drawable.ColorDrawable: android.graphics.drawable.ColorDrawable$ColorState mColorState>;

        $i1 = virtualinvoke $r1.<android.graphics.drawable.ColorDrawable$ColorState: int getChangingConfigurations()>();

        $i2 = $i0 | $i1;

        return $i2;
    }

    public int getColor()
    {
        android.graphics.drawable.ColorDrawable r0;
        android.graphics.drawable.ColorDrawable$ColorState $r1;
        int $i0;

        r0 := @this: android.graphics.drawable.ColorDrawable;

        $r1 = r0.<android.graphics.drawable.ColorDrawable: android.graphics.drawable.ColorDrawable$ColorState mColorState>;

        $i0 = $r1.<android.graphics.drawable.ColorDrawable$ColorState: int mUseColor>;

        return $i0;
    }

    public android.graphics.ColorFilter getColorFilter()
    {
        android.graphics.drawable.ColorDrawable r0;
        android.graphics.Paint $r1;
        android.graphics.ColorFilter $r2;

        r0 := @this: android.graphics.drawable.ColorDrawable;

        $r1 = r0.<android.graphics.drawable.ColorDrawable: android.graphics.Paint mPaint>;

        $r2 = virtualinvoke $r1.<android.graphics.Paint: android.graphics.ColorFilter getColorFilter()>();

        return $r2;
    }

    public android.graphics.drawable.Drawable$ConstantState getConstantState()
    {
        android.graphics.drawable.ColorDrawable r0;
        android.graphics.drawable.ColorDrawable$ColorState $r1;

        r0 := @this: android.graphics.drawable.ColorDrawable;

        $r1 = r0.<android.graphics.drawable.ColorDrawable: android.graphics.drawable.ColorDrawable$ColorState mColorState>;

        return $r1;
    }

    public int getOpacity()
    {
        android.graphics.drawable.ColorDrawable r0;
        int i0, $i1;
        android.graphics.BlendModeColorFilter $r1;
        android.graphics.Paint $r2;
        android.graphics.ColorFilter $r3;
        android.graphics.drawable.ColorDrawable$ColorState $r4;

        r0 := @this: android.graphics.drawable.ColorDrawable;

        $r1 = r0.<android.graphics.drawable.ColorDrawable: android.graphics.BlendModeColorFilter mBlendModeColorFilter>;

        if $r1 != null goto label4;

        $r2 = r0.<android.graphics.drawable.ColorDrawable: android.graphics.Paint mPaint>;

        $r3 = virtualinvoke $r2.<android.graphics.Paint: android.graphics.ColorFilter getColorFilter()>();

        if $r3 == null goto label1;

        goto label4;

     label1:
        $r4 = r0.<android.graphics.drawable.ColorDrawable: android.graphics.drawable.ColorDrawable$ColorState mColorState>;

        $i1 = $r4.<android.graphics.drawable.ColorDrawable$ColorState: int mUseColor>;

        i0 = $i1 >>> 24;

        if i0 == 0 goto label3;

        if i0 == 255 goto label2;

        return -3;

     label2:
        return -1;

     label3:
        return -2;

     label4:
        return -3;
    }

    public void getOutline(android.graphics.Outline)
    {
        android.graphics.drawable.ColorDrawable r0;
        android.graphics.Outline r1;
        android.graphics.Rect $r2;
        int $i0;
        float $f0, $f1;

        r0 := @this: android.graphics.drawable.ColorDrawable;

        r1 := @parameter0: android.graphics.Outline;

        $r2 = virtualinvoke r0.<android.graphics.drawable.ColorDrawable: android.graphics.Rect getBounds()>();

        virtualinvoke r1.<android.graphics.Outline: void setRect(android.graphics.Rect)>($r2);

        $i0 = virtualinvoke r0.<android.graphics.drawable.ColorDrawable: int getAlpha()>();

        $f0 = (float) $i0;

        $f1 = $f0 / 255.0F;

        virtualinvoke r1.<android.graphics.Outline: void setAlpha(float)>($f1);

        return;
    }

    public android.graphics.Xfermode getXfermode()
    {
        android.graphics.drawable.ColorDrawable r0;
        android.graphics.Paint $r1;
        android.graphics.Xfermode $r2;

        r0 := @this: android.graphics.drawable.ColorDrawable;

        $r1 = r0.<android.graphics.drawable.ColorDrawable: android.graphics.Paint mPaint>;

        $r2 = virtualinvoke $r1.<android.graphics.Paint: android.graphics.Xfermode getXfermode()>();

        return $r2;
    }

    public boolean hasFocusStateSpecified()
    {
        android.graphics.drawable.ColorDrawable r0;
        android.graphics.drawable.ColorDrawable$ColorState $r1, $r3;
        android.content.res.ColorStateList $r2, $r4;
        boolean $z0, z1;

        r0 := @this: android.graphics.drawable.ColorDrawable;

        $r1 = r0.<android.graphics.drawable.ColorDrawable: android.graphics.drawable.ColorDrawable$ColorState mColorState>;

        $r2 = $r1.<android.graphics.drawable.ColorDrawable$ColorState: android.content.res.ColorStateList mTint>;

        if $r2 == null goto label1;

        $r3 = r0.<android.graphics.drawable.ColorDrawable: android.graphics.drawable.ColorDrawable$ColorState mColorState>;

        $r4 = $r3.<android.graphics.drawable.ColorDrawable$ColorState: android.content.res.ColorStateList mTint>;

        $z0 = virtualinvoke $r4.<android.content.res.ColorStateList: boolean hasFocusStateSpecified()>();

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public void inflate(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.graphics.drawable.ColorDrawable r0;
        android.content.res.Resources r1;
        android.util.AttributeSet r2;
        android.content.res.Resources$Theme r3;
        int[] $r4;
        org.xmlpull.v1.XmlPullParser r5;
        android.content.res.TypedArray r6;

        r0 := @this: android.graphics.drawable.ColorDrawable;

        r1 := @parameter0: android.content.res.Resources;

        r5 := @parameter1: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter2: android.util.AttributeSet;

        r3 := @parameter3: android.content.res.Resources$Theme;

        specialinvoke r0.<android.graphics.drawable.Drawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>(r1, r5, r2, r3);

        $r4 = <com.android.internal.R$styleable: int[] ColorDrawable>;

        r6 = staticinvoke <android.graphics.drawable.ColorDrawable: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>(r1, r3, r2, $r4);

        specialinvoke r0.<android.graphics.drawable.ColorDrawable: void updateStateFromTypedArray(android.content.res.TypedArray)>(r6);

        virtualinvoke r6.<android.content.res.TypedArray: void recycle()>();

        specialinvoke r0.<android.graphics.drawable.ColorDrawable: void updateLocalState(android.content.res.Resources)>(r1);

        return;
    }

    public boolean isStateful()
    {
        android.graphics.drawable.ColorDrawable r0;
        android.graphics.drawable.ColorDrawable$ColorState $r1, $r3;
        android.content.res.ColorStateList $r2, $r4;
        boolean $z0, z1;

        r0 := @this: android.graphics.drawable.ColorDrawable;

        $r1 = r0.<android.graphics.drawable.ColorDrawable: android.graphics.drawable.ColorDrawable$ColorState mColorState>;

        $r2 = $r1.<android.graphics.drawable.ColorDrawable$ColorState: android.content.res.ColorStateList mTint>;

        if $r2 == null goto label1;

        $r3 = r0.<android.graphics.drawable.ColorDrawable: android.graphics.drawable.ColorDrawable$ColorState mColorState>;

        $r4 = $r3.<android.graphics.drawable.ColorDrawable$ColorState: android.content.res.ColorStateList mTint>;

        $z0 = virtualinvoke $r4.<android.content.res.ColorStateList: boolean isStateful()>();

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public android.graphics.drawable.Drawable mutate()
    {
        android.graphics.drawable.ColorDrawable r0;
        boolean $z0;
        android.graphics.drawable.Drawable $r1;
        android.graphics.drawable.ColorDrawable$ColorState $r2, $r3;

        r0 := @this: android.graphics.drawable.ColorDrawable;

        $z0 = r0.<android.graphics.drawable.ColorDrawable: boolean mMutated>;

        if $z0 != 0 goto label1;

        $r1 = specialinvoke r0.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        if $r1 != r0 goto label1;

        $r2 = new android.graphics.drawable.ColorDrawable$ColorState;

        $r3 = r0.<android.graphics.drawable.ColorDrawable: android.graphics.drawable.ColorDrawable$ColorState mColorState>;

        specialinvoke $r2.<android.graphics.drawable.ColorDrawable$ColorState: void <init>(android.graphics.drawable.ColorDrawable$ColorState)>($r3);

        r0.<android.graphics.drawable.ColorDrawable: android.graphics.drawable.ColorDrawable$ColorState mColorState> = $r2;

        r0.<android.graphics.drawable.ColorDrawable: boolean mMutated> = 1;

     label1:
        return r0;
    }

    protected boolean onStateChange(int[])
    {
        android.graphics.drawable.ColorDrawable r0;
        android.content.res.ColorStateList $r1, $r4;
        android.graphics.BlendMode $r2, $r3;
        android.graphics.BlendModeColorFilter $r5, $r6;
        int[] r7;
        android.graphics.drawable.ColorDrawable$ColorState r8;

        r0 := @this: android.graphics.drawable.ColorDrawable;

        r7 := @parameter0: int[];

        r8 = r0.<android.graphics.drawable.ColorDrawable: android.graphics.drawable.ColorDrawable$ColorState mColorState>;

        $r1 = r8.<android.graphics.drawable.ColorDrawable$ColorState: android.content.res.ColorStateList mTint>;

        if $r1 == null goto label1;

        $r2 = r8.<android.graphics.drawable.ColorDrawable$ColorState: android.graphics.BlendMode mBlendMode>;

        if $r2 == null goto label1;

        $r5 = r0.<android.graphics.drawable.ColorDrawable: android.graphics.BlendModeColorFilter mBlendModeColorFilter>;

        $r4 = r8.<android.graphics.drawable.ColorDrawable$ColorState: android.content.res.ColorStateList mTint>;

        $r3 = r8.<android.graphics.drawable.ColorDrawable$ColorState: android.graphics.BlendMode mBlendMode>;

        $r6 = virtualinvoke r0.<android.graphics.drawable.ColorDrawable: android.graphics.BlendModeColorFilter updateBlendModeFilter(android.graphics.BlendModeColorFilter,android.content.res.ColorStateList,android.graphics.BlendMode)>($r5, $r4, $r3);

        r0.<android.graphics.drawable.ColorDrawable: android.graphics.BlendModeColorFilter mBlendModeColorFilter> = $r6;

        return 1;

     label1:
        return 0;
    }

    public void setAlpha(int)
    {
        android.graphics.drawable.ColorDrawable r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12;
        android.graphics.drawable.ColorDrawable$ColorState $r1, $r2, $r3, $r4;

        r0 := @this: android.graphics.drawable.ColorDrawable;

        i11 := @parameter0: int;

        $r1 = r0.<android.graphics.drawable.ColorDrawable: android.graphics.drawable.ColorDrawable$ColorState mColorState>;

        i0 = $r1.<android.graphics.drawable.ColorDrawable$ColorState: int mBaseColor>;

        $r2 = r0.<android.graphics.drawable.ColorDrawable: android.graphics.drawable.ColorDrawable$ColorState mColorState>;

        $i1 = $r2.<android.graphics.drawable.ColorDrawable$ColorState: int mBaseColor>;

        $i2 = $i1 << 8;

        $i9 = $i2 >>> 8;

        $i5 = i0 >>> 24;

        $i3 = i11 >> 7;

        $i4 = i11 + $i3;

        $i6 = $i5 * $i4;

        $i7 = $i6 >> 8;

        $i8 = $i7 << 24;

        i12 = $i9 | $i8;

        $r3 = r0.<android.graphics.drawable.ColorDrawable: android.graphics.drawable.ColorDrawable$ColorState mColorState>;

        $i10 = $r3.<android.graphics.drawable.ColorDrawable$ColorState: int mUseColor>;

        if $i10 == i12 goto label1;

        $r4 = r0.<android.graphics.drawable.ColorDrawable: android.graphics.drawable.ColorDrawable$ColorState mColorState>;

        $r4.<android.graphics.drawable.ColorDrawable$ColorState: int mUseColor> = i12;

        virtualinvoke r0.<android.graphics.drawable.ColorDrawable: void invalidateSelf()>();

     label1:
        return;
    }

    public void setColor(int)
    {
        android.graphics.drawable.ColorDrawable r0;
        int i0, $i1, $i2;
        android.graphics.drawable.ColorDrawable$ColorState r1, $r2, $r3;

        r0 := @this: android.graphics.drawable.ColorDrawable;

        i0 := @parameter0: int;

        $r2 = r0.<android.graphics.drawable.ColorDrawable: android.graphics.drawable.ColorDrawable$ColorState mColorState>;

        $i1 = $r2.<android.graphics.drawable.ColorDrawable$ColorState: int mBaseColor>;

        if $i1 != i0 goto label1;

        $r3 = r0.<android.graphics.drawable.ColorDrawable: android.graphics.drawable.ColorDrawable$ColorState mColorState>;

        $i2 = $r3.<android.graphics.drawable.ColorDrawable$ColorState: int mUseColor>;

        if $i2 == i0 goto label2;

     label1:
        r1 = r0.<android.graphics.drawable.ColorDrawable: android.graphics.drawable.ColorDrawable$ColorState mColorState>;

        r1.<android.graphics.drawable.ColorDrawable$ColorState: int mUseColor> = i0;

        r1.<android.graphics.drawable.ColorDrawable$ColorState: int mBaseColor> = i0;

        virtualinvoke r0.<android.graphics.drawable.ColorDrawable: void invalidateSelf()>();

     label2:
        return;
    }

    public void setColorFilter(android.graphics.ColorFilter)
    {
        android.graphics.drawable.ColorDrawable r0;
        android.graphics.ColorFilter r1;
        android.graphics.Paint $r2;

        r0 := @this: android.graphics.drawable.ColorDrawable;

        r1 := @parameter0: android.graphics.ColorFilter;

        $r2 = r0.<android.graphics.drawable.ColorDrawable: android.graphics.Paint mPaint>;

        virtualinvoke $r2.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>(r1);

        return;
    }

    public void setTintBlendMode(android.graphics.BlendMode)
    {
        android.graphics.drawable.ColorDrawable r0;
        android.graphics.BlendMode r1;
        android.graphics.drawable.ColorDrawable$ColorState $r2, $r3;
        android.content.res.ColorStateList $r4;
        android.graphics.BlendModeColorFilter $r5, $r6;

        r0 := @this: android.graphics.drawable.ColorDrawable;

        r1 := @parameter0: android.graphics.BlendMode;

        $r2 = r0.<android.graphics.drawable.ColorDrawable: android.graphics.drawable.ColorDrawable$ColorState mColorState>;

        $r2.<android.graphics.drawable.ColorDrawable$ColorState: android.graphics.BlendMode mBlendMode> = r1;

        $r5 = r0.<android.graphics.drawable.ColorDrawable: android.graphics.BlendModeColorFilter mBlendModeColorFilter>;

        $r3 = r0.<android.graphics.drawable.ColorDrawable: android.graphics.drawable.ColorDrawable$ColorState mColorState>;

        $r4 = $r3.<android.graphics.drawable.ColorDrawable$ColorState: android.content.res.ColorStateList mTint>;

        $r6 = virtualinvoke r0.<android.graphics.drawable.ColorDrawable: android.graphics.BlendModeColorFilter updateBlendModeFilter(android.graphics.BlendModeColorFilter,android.content.res.ColorStateList,android.graphics.BlendMode)>($r5, $r4, r1);

        r0.<android.graphics.drawable.ColorDrawable: android.graphics.BlendModeColorFilter mBlendModeColorFilter> = $r6;

        virtualinvoke r0.<android.graphics.drawable.ColorDrawable: void invalidateSelf()>();

        return;
    }

    public void setTintList(android.content.res.ColorStateList)
    {
        android.graphics.drawable.ColorDrawable r0;
        android.content.res.ColorStateList r1;
        android.graphics.drawable.ColorDrawable$ColorState $r2, $r3;
        android.graphics.BlendMode $r4;
        android.graphics.BlendModeColorFilter $r5, $r6;

        r0 := @this: android.graphics.drawable.ColorDrawable;

        r1 := @parameter0: android.content.res.ColorStateList;

        $r2 = r0.<android.graphics.drawable.ColorDrawable: android.graphics.drawable.ColorDrawable$ColorState mColorState>;

        $r2.<android.graphics.drawable.ColorDrawable$ColorState: android.content.res.ColorStateList mTint> = r1;

        $r5 = r0.<android.graphics.drawable.ColorDrawable: android.graphics.BlendModeColorFilter mBlendModeColorFilter>;

        $r3 = r0.<android.graphics.drawable.ColorDrawable: android.graphics.drawable.ColorDrawable$ColorState mColorState>;

        $r4 = $r3.<android.graphics.drawable.ColorDrawable$ColorState: android.graphics.BlendMode mBlendMode>;

        $r6 = virtualinvoke r0.<android.graphics.drawable.ColorDrawable: android.graphics.BlendModeColorFilter updateBlendModeFilter(android.graphics.BlendModeColorFilter,android.content.res.ColorStateList,android.graphics.BlendMode)>($r5, r1, $r4);

        r0.<android.graphics.drawable.ColorDrawable: android.graphics.BlendModeColorFilter mBlendModeColorFilter> = $r6;

        virtualinvoke r0.<android.graphics.drawable.ColorDrawable: void invalidateSelf()>();

        return;
    }

    public void setXfermode(android.graphics.Xfermode)
    {
        android.graphics.drawable.ColorDrawable r0;
        android.graphics.Xfermode r1;
        android.graphics.Paint $r2;

        r0 := @this: android.graphics.drawable.ColorDrawable;

        r1 := @parameter0: android.graphics.Xfermode;

        $r2 = r0.<android.graphics.drawable.ColorDrawable: android.graphics.Paint mPaint>;

        virtualinvoke $r2.<android.graphics.Paint: android.graphics.Xfermode setXfermode(android.graphics.Xfermode)>(r1);

        virtualinvoke r0.<android.graphics.drawable.ColorDrawable: void invalidateSelf()>();

        return;
    }
}
