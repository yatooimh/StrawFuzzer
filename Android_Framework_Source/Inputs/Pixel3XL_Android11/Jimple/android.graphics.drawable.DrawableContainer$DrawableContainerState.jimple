public abstract class android.graphics.drawable.DrawableContainer$DrawableContainerState extends android.graphics.drawable.Drawable$ConstantState
{
    boolean mAutoMirrored;
    android.graphics.BlendMode mBlendMode;
    boolean mCanConstantState;
    int mChangingConfigurations;
    boolean mCheckedConstantSize;
    boolean mCheckedConstantState;
    boolean mCheckedOpacity;
    boolean mCheckedPadding;
    boolean mCheckedStateful;
    int mChildrenChangingConfigurations;
    android.graphics.ColorFilter mColorFilter;
    int mConstantHeight;
    int mConstantMinimumHeight;
    int mConstantMinimumWidth;
    android.graphics.Rect mConstantPadding;
    boolean mConstantSize;
    int mConstantWidth;
    int mDensity;
    boolean mDither;
    android.util.SparseArray mDrawableFutures;
    android.graphics.drawable.Drawable[] mDrawables;
    int mEnterFadeDuration;
    int mExitFadeDuration;
    boolean mHasColorFilter;
    boolean mHasTintList;
    boolean mHasTintMode;
    int mLayoutDirection;
    boolean mMutated;
    int mNumChildren;
    int mOpacity;
    final android.graphics.drawable.DrawableContainer mOwner;
    android.content.res.Resources mSourceRes;
    boolean mStateful;
    android.content.res.ColorStateList mTintList;
    boolean mVariablePadding;

    protected void <init>(android.graphics.drawable.DrawableContainer$DrawableContainerState, android.graphics.drawable.DrawableContainer, android.content.res.Resources)
    {
        android.graphics.drawable.DrawableContainer$DrawableContainerState r0, r16;
        android.content.res.Resources r1, r18;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, i16, i17;
        android.graphics.drawable.Drawable[] $r2, $r6, $r11, r19;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        android.graphics.ColorFilter $r3;
        android.content.res.ColorStateList $r4;
        android.graphics.BlendMode $r5;
        android.util.SparseArray $r7, $r12, $r13, r20;
        android.graphics.drawable.Drawable $r8, $r9, $r10;
        android.graphics.Rect $r14, $r15;
        android.graphics.drawable.DrawableContainer r17;
        android.graphics.drawable.Drawable$ConstantState r21;

        r0 := @this: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        r16 := @parameter0: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        r17 := @parameter1: android.graphics.drawable.DrawableContainer;

        r1 := @parameter2: android.content.res.Resources;

        specialinvoke r0.<android.graphics.drawable.Drawable$ConstantState: void <init>()>();

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mDensity> = 160;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mVariablePadding> = 0;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mConstantSize> = 0;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mDither> = 1;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mEnterFadeDuration> = 0;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mExitFadeDuration> = 0;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.DrawableContainer mOwner> = r17;

        if r1 == null goto label01;

        r18 = r1;

        goto label03;

     label01:
        if r16 == null goto label02;

        r18 = r16.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.content.res.Resources mSourceRes>;

        goto label03;

     label02:
        r18 = null;

     label03:
        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.content.res.Resources mSourceRes> = r18;

        if r16 == null goto label04;

        i15 = r16.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mDensity>;

        goto label05;

     label04:
        i15 = 0;

     label05:
        i16 = staticinvoke <android.graphics.drawable.Drawable: int resolveDensity(android.content.res.Resources,int)>(r1, i15);

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mDensity> = i16;

        if r16 == null goto label16;

        $i1 = r16.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mChangingConfigurations>;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mChangingConfigurations> = $i1;

        $i2 = r16.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mChildrenChangingConfigurations>;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mChildrenChangingConfigurations> = $i2;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedConstantState> = 1;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCanConstantState> = 1;

        $z0 = r16.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mVariablePadding>;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mVariablePadding> = $z0;

        $z1 = r16.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mConstantSize>;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mConstantSize> = $z1;

        $z2 = r16.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mDither>;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mDither> = $z2;

        $z3 = r16.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mMutated>;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mMutated> = $z3;

        $i3 = r16.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mLayoutDirection>;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mLayoutDirection> = $i3;

        $i4 = r16.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mEnterFadeDuration>;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mEnterFadeDuration> = $i4;

        $i5 = r16.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mExitFadeDuration>;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mExitFadeDuration> = $i5;

        $z4 = r16.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mAutoMirrored>;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mAutoMirrored> = $z4;

        $r3 = r16.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.ColorFilter mColorFilter>;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.ColorFilter mColorFilter> = $r3;

        $z5 = r16.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mHasColorFilter>;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mHasColorFilter> = $z5;

        $r4 = r16.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.content.res.ColorStateList mTintList>;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.content.res.ColorStateList mTintList> = $r4;

        $r5 = r16.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.BlendMode mBlendMode>;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.BlendMode mBlendMode> = $r5;

        $z6 = r16.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mHasTintList>;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mHasTintList> = $z6;

        $z7 = r16.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mHasTintMode>;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mHasTintMode> = $z7;

        $i6 = r16.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mDensity>;

        if $i6 != i16 goto label07;

        $z10 = r16.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedPadding>;

        if $z10 == 0 goto label06;

        $r14 = new android.graphics.Rect;

        $r15 = r16.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.Rect mConstantPadding>;

        specialinvoke $r14.<android.graphics.Rect: void <init>(android.graphics.Rect)>($r15);

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.Rect mConstantPadding> = $r14;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedPadding> = 1;

     label06:
        $z11 = r16.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedConstantSize>;

        if $z11 == 0 goto label07;

        $i11 = r16.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantWidth>;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantWidth> = $i11;

        $i12 = r16.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantHeight>;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantHeight> = $i12;

        $i13 = r16.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantMinimumWidth>;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantMinimumWidth> = $i13;

        $i14 = r16.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantMinimumHeight>;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantMinimumHeight> = $i14;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedConstantSize> = 1;

     label07:
        $z12 = r16.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedOpacity>;

        if $z12 == 0 goto label08;

        $i10 = r16.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mOpacity>;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mOpacity> = $i10;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedOpacity> = 1;

     label08:
        $z8 = r16.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedStateful>;

        if $z8 == 0 goto label09;

        $z9 = r16.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mStateful>;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mStateful> = $z9;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedStateful> = 1;

     label09:
        r19 = r16.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] mDrawables>;

        $i7 = lengthof r19;

        $r6 = newarray (android.graphics.drawable.Drawable)[$i7];

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] mDrawables> = $r6;

        $i8 = r16.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mNumChildren>;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mNumChildren> = $i8;

        r20 = r16.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.util.SparseArray mDrawableFutures>;

        if r20 == null goto label10;

        $r13 = virtualinvoke r20.<android.util.SparseArray: android.util.SparseArray clone()>();

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.util.SparseArray mDrawableFutures> = $r13;

        goto label11;

     label10:
        $r7 = new android.util.SparseArray;

        $i9 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mNumChildren>;

        specialinvoke $r7.<android.util.SparseArray: void <init>(int)>($i9);

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.util.SparseArray mDrawableFutures> = $r7;

     label11:
        i0 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mNumChildren>;

        i17 = 0;

     label12:
        if i17 >= i0 goto label15;

        $r8 = r19[i17];

        if $r8 == null goto label14;

        $r9 = r19[i17];

        r21 = virtualinvoke $r9.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>();

        if r21 == null goto label13;

        $r12 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.util.SparseArray mDrawableFutures>;

        virtualinvoke $r12.<android.util.SparseArray: void put(int,java.lang.Object)>(i17, r21);

        goto label14;

     label13:
        $r11 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] mDrawables>;

        $r10 = r19[i17];

        $r11[i17] = $r10;

     label14:
        i17 = i17 + 1;

        goto label12;

     label15:
        goto label17;

     label16:
        $r2 = newarray (android.graphics.drawable.Drawable)[10];

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] mDrawables> = $r2;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mNumChildren> = 0;

     label17:
        return;
    }

    static void access$100(android.graphics.drawable.DrawableContainer$DrawableContainerState)
    {
        android.graphics.drawable.DrawableContainer$DrawableContainerState r0;

        r0 := @parameter0: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        specialinvoke r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: void mutate()>();

        return;
    }

    private void createAllFutures()
    {
        android.graphics.drawable.DrawableContainer$DrawableContainerState r0;
        int i0, i1, i2;
        android.util.SparseArray $r1, $r2, r8;
        java.lang.Object $r3;
        android.content.res.Resources $r4;
        android.graphics.drawable.Drawable[] $r5;
        android.graphics.drawable.Drawable $r6, $r7;
        android.graphics.drawable.Drawable$ConstantState r9;

        r0 := @this: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        r8 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.util.SparseArray mDrawableFutures>;

        if r8 == null goto label3;

        i0 = virtualinvoke r8.<android.util.SparseArray: int size()>();

        i2 = 0;

     label1:
        if i2 >= i0 goto label2;

        $r1 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.util.SparseArray mDrawableFutures>;

        i1 = virtualinvoke $r1.<android.util.SparseArray: int keyAt(int)>(i2);

        $r2 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.util.SparseArray mDrawableFutures>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        r9 = (android.graphics.drawable.Drawable$ConstantState) $r3;

        $r5 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] mDrawables>;

        $r4 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.content.res.Resources mSourceRes>;

        $r6 = virtualinvoke r9.<android.graphics.drawable.Drawable$ConstantState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)>($r4);

        $r7 = specialinvoke r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable prepareDrawable(android.graphics.drawable.Drawable)>($r6);

        $r5[i1] = $r7;

        i2 = i2 + 1;

        goto label1;

     label2:
        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.util.SparseArray mDrawableFutures> = null;

     label3:
        return;
    }

    private void mutate()
    {
        android.graphics.drawable.DrawableContainer$DrawableContainerState r0;
        int i0, i1;
        android.graphics.drawable.Drawable[] r1;
        android.graphics.drawable.Drawable $r2, $r3;

        r0 := @this: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        i0 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mNumChildren>;

        r1 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] mDrawables>;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r2 = r1[i1];

        if $r2 == null goto label2;

        $r3 = r1[i1];

        virtualinvoke $r3.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mMutated> = 1;

        return;
    }

    private android.graphics.drawable.Drawable prepareDrawable(android.graphics.drawable.Drawable)
    {
        android.graphics.drawable.DrawableContainer$DrawableContainerState r0;
        int $i0;
        android.graphics.drawable.DrawableContainer $r1;
        android.graphics.drawable.Drawable r2, r3;

        r0 := @this: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        r2 := @parameter0: android.graphics.drawable.Drawable;

        $i0 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mLayoutDirection>;

        virtualinvoke r2.<android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>($i0);

        r3 = virtualinvoke r2.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        $r1 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.DrawableContainer mOwner>;

        virtualinvoke r3.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>($r1);

        return r3;
    }

    public final int addChild(android.graphics.drawable.Drawable)
    {
        android.graphics.drawable.DrawableContainer$DrawableContainerState r0;
        android.graphics.drawable.Drawable r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        android.graphics.drawable.Drawable[] $r2, $r5;
        android.graphics.drawable.DrawableContainer $r4;

        r0 := @this: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        i0 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mNumChildren>;

        $r2 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] mDrawables>;

        $i1 = lengthof $r2;

        if i0 < $i1 goto label1;

        $i7 = i0 + 10;

        virtualinvoke r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: void growArray(int,int)>(i0, $i7);

     label1:
        virtualinvoke r1.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        virtualinvoke r1.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>(0, 1);

        $r4 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.DrawableContainer mOwner>;

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>($r4);

        $r5 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] mDrawables>;

        $r5[i0] = r1;

        $i2 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mNumChildren>;

        $i3 = $i2 + 1;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mNumChildren> = $i3;

        $i4 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mChildrenChangingConfigurations>;

        $i5 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getChangingConfigurations()>();

        $i6 = $i4 | $i5;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mChildrenChangingConfigurations> = $i6;

        virtualinvoke r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: void invalidateCache()>();

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.Rect mConstantPadding> = null;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedPadding> = 0;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedConstantSize> = 0;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedConstantState> = 0;

        return i0;
    }

    final void applyTheme(android.content.res.Resources$Theme)
    {
        android.graphics.drawable.DrawableContainer$DrawableContainerState r0;
        android.content.res.Resources$Theme r1;
        int i0, $i1, $i2, $i3, i4;
        android.graphics.drawable.Drawable[] r2;
        android.content.res.Resources $r3;
        android.graphics.drawable.Drawable $r4, $r5, $r6, $r7;
        boolean $z0;

        r0 := @this: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        r1 := @parameter0: android.content.res.Resources$Theme;

        if r1 == null goto label4;

        specialinvoke r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: void createAllFutures()>();

        i0 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mNumChildren>;

        r2 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] mDrawables>;

        i4 = 0;

     label1:
        if i4 >= i0 goto label3;

        $r4 = r2[i4];

        if $r4 == null goto label2;

        $r5 = r2[i4];

        $z0 = virtualinvoke $r5.<android.graphics.drawable.Drawable: boolean canApplyTheme()>();

        if $z0 == 0 goto label2;

        $r6 = r2[i4];

        virtualinvoke $r6.<android.graphics.drawable.Drawable: void applyTheme(android.content.res.Resources$Theme)>(r1);

        $i1 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mChildrenChangingConfigurations>;

        $r7 = r2[i4];

        $i2 = virtualinvoke $r7.<android.graphics.drawable.Drawable: int getChangingConfigurations()>();

        $i3 = $i1 | $i2;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mChildrenChangingConfigurations> = $i3;

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        $r3 = virtualinvoke r1.<android.content.res.Resources$Theme: android.content.res.Resources getResources()>();

        virtualinvoke r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: void updateDensity(android.content.res.Resources)>($r3);

     label4:
        return;
    }

    public boolean canApplyTheme()
    {
        android.graphics.drawable.DrawableContainer$DrawableContainerState r0;
        int i0, i1;
        android.graphics.drawable.Drawable[] r1;
        android.util.SparseArray $r2;
        java.lang.Object $r3;
        boolean $z0, $z1;
        android.graphics.drawable.Drawable r4;
        android.graphics.drawable.Drawable$ConstantState r5;

        r0 := @this: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        i0 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mNumChildren>;

        r1 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] mDrawables>;

        i1 = 0;

     label1:
        if i1 >= i0 goto label4;

        r4 = r1[i1];

        if r4 == null goto label2;

        $z1 = virtualinvoke r4.<android.graphics.drawable.Drawable: boolean canApplyTheme()>();

        if $z1 == 0 goto label3;

        return 1;

     label2:
        $r2 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.util.SparseArray mDrawableFutures>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i1);

        r5 = (android.graphics.drawable.Drawable$ConstantState) $r3;

        if r5 == null goto label3;

        $z0 = virtualinvoke r5.<android.graphics.drawable.Drawable$ConstantState: boolean canApplyTheme()>();

        if $z0 == 0 goto label3;

        return 1;

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        return 0;
    }

    public boolean canConstantState()
    {
        android.graphics.drawable.DrawableContainer$DrawableContainerState r0;
        boolean z0, $z1;
        int i0, i1;
        android.graphics.drawable.Drawable $r1;
        android.graphics.drawable.Drawable$ConstantState $r2;
        java.lang.Throwable $r3;
        android.graphics.drawable.Drawable[] r4;

        r0 := @this: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        entermonitor r0;

     label01:
        $z1 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedConstantState>;

        if $z1 == 0 goto label03;

        z0 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCanConstantState>;

     label02:
        exitmonitor r0;

        return z0;

     label03:
        specialinvoke r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: void createAllFutures()>();

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedConstantState> = 1;

        i0 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mNumChildren>;

        r4 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] mDrawables>;

     label04:
        i1 = 0;

     label05:
        if i1 >= i0 goto label09;

     label06:
        $r1 = r4[i1];

        $r2 = virtualinvoke $r1.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>();

        if $r2 != null goto label08;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCanConstantState> = 0;

     label07:
        exitmonitor r0;

        return 0;

     label08:
        i1 = i1 + 1;

        goto label05;

     label09:
        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCanConstantState> = 1;

     label10:
        exitmonitor r0;

        return 1;

     label11:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
    }

    final void clearMutated()
    {
        android.graphics.drawable.DrawableContainer$DrawableContainerState r0;
        int i0, i1;
        android.graphics.drawable.Drawable[] r1;
        android.graphics.drawable.Drawable $r2, $r3;

        r0 := @this: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        i0 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mNumChildren>;

        r1 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] mDrawables>;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r2 = r1[i1];

        if $r2 == null goto label2;

        $r3 = r1[i1];

        virtualinvoke $r3.<android.graphics.drawable.Drawable: void clearMutated()>();

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mMutated> = 0;

        return;
    }

    protected void computeConstantSize()
    {
        android.graphics.drawable.DrawableContainer$DrawableContainerState r0;
        int i0, $i1, $i2, $i3, $i4, i5, i6, i7, i8, i9;
        android.graphics.drawable.Drawable[] r1;
        android.graphics.drawable.Drawable r2;

        r0 := @this: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedConstantSize> = 1;

        specialinvoke r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: void createAllFutures()>();

        i0 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mNumChildren>;

        r1 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] mDrawables>;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantHeight> = -1;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantWidth> = -1;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantMinimumHeight> = 0;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantMinimumWidth> = 0;

        i5 = 0;

     label1:
        if i5 >= i0 goto label6;

        r2 = r1[i5];

        i6 = virtualinvoke r2.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $i1 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantWidth>;

        if i6 <= $i1 goto label2;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantWidth> = i6;

     label2:
        i7 = virtualinvoke r2.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        $i2 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantHeight>;

        if i7 <= $i2 goto label3;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantHeight> = i7;

     label3:
        i8 = virtualinvoke r2.<android.graphics.drawable.Drawable: int getMinimumWidth()>();

        $i3 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantMinimumWidth>;

        if i8 <= $i3 goto label4;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantMinimumWidth> = i8;

     label4:
        i9 = virtualinvoke r2.<android.graphics.drawable.Drawable: int getMinimumHeight()>();

        $i4 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantMinimumHeight>;

        if i9 <= $i4 goto label5;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantMinimumHeight> = i9;

     label5:
        i5 = i5 + 1;

        goto label1;

     label6:
        return;
    }

    final int getCapacity()
    {
        android.graphics.drawable.DrawableContainer$DrawableContainerState r0;
        android.graphics.drawable.Drawable[] $r1;
        int $i0;

        r0 := @this: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        $r1 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] mDrawables>;

        $i0 = lengthof $r1;

        return $i0;
    }

    public int getChangingConfigurations()
    {
        android.graphics.drawable.DrawableContainer$DrawableContainerState r0;
        int $i0, $i1, $i2;

        r0 := @this: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        $i1 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mChangingConfigurations>;

        $i0 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mChildrenChangingConfigurations>;

        $i2 = $i1 | $i0;

        return $i2;
    }

    public final android.graphics.drawable.Drawable getChild(int)
    {
        android.graphics.drawable.DrawableContainer$DrawableContainerState r0;
        int i0, i1, $i2;
        android.graphics.drawable.Drawable[] $r1, $r7;
        android.util.SparseArray $r2, $r8, $r9, r11;
        java.lang.Object $r3;
        android.content.res.Resources $r4;
        android.graphics.drawable.Drawable$ConstantState $r5;
        android.graphics.drawable.Drawable $r6, r10, r12;

        r0 := @this: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        i0 := @parameter0: int;

        $r1 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] mDrawables>;

        r10 = $r1[i0];

        if r10 == null goto label1;

        return r10;

     label1:
        r11 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.util.SparseArray mDrawableFutures>;

        if r11 == null goto label3;

        i1 = virtualinvoke r11.<android.util.SparseArray: int indexOfKey(int)>(i0);

        if i1 < 0 goto label3;

        $r2 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.util.SparseArray mDrawableFutures>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        $r5 = (android.graphics.drawable.Drawable$ConstantState) $r3;

        $r4 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.content.res.Resources mSourceRes>;

        $r6 = virtualinvoke $r5.<android.graphics.drawable.Drawable$ConstantState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)>($r4);

        r12 = specialinvoke r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable prepareDrawable(android.graphics.drawable.Drawable)>($r6);

        $r7 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] mDrawables>;

        $r7[i0] = r12;

        $r8 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.util.SparseArray mDrawableFutures>;

        virtualinvoke $r8.<android.util.SparseArray: void removeAt(int)>(i1);

        $r9 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.util.SparseArray mDrawableFutures>;

        $i2 = virtualinvoke $r9.<android.util.SparseArray: int size()>();

        if $i2 != 0 goto label2;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.util.SparseArray mDrawableFutures> = null;

     label2:
        return r12;

     label3:
        return null;
    }

    public final int getChildCount()
    {
        android.graphics.drawable.DrawableContainer$DrawableContainerState r0;
        int $i0;

        r0 := @this: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        $i0 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mNumChildren>;

        return $i0;
    }

    public final android.graphics.drawable.Drawable[] getChildren()
    {
        android.graphics.drawable.DrawableContainer$DrawableContainerState r0;
        android.graphics.drawable.Drawable[] $r1;

        r0 := @this: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        specialinvoke r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: void createAllFutures()>();

        $r1 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] mDrawables>;

        return $r1;
    }

    public final int getConstantHeight()
    {
        android.graphics.drawable.DrawableContainer$DrawableContainerState r0;
        boolean $z0;
        int $i0;

        r0 := @this: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        $z0 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedConstantSize>;

        if $z0 != 0 goto label1;

        virtualinvoke r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: void computeConstantSize()>();

     label1:
        $i0 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantHeight>;

        return $i0;
    }

    public final int getConstantMinimumHeight()
    {
        android.graphics.drawable.DrawableContainer$DrawableContainerState r0;
        boolean $z0;
        int $i0;

        r0 := @this: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        $z0 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedConstantSize>;

        if $z0 != 0 goto label1;

        virtualinvoke r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: void computeConstantSize()>();

     label1:
        $i0 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantMinimumHeight>;

        return $i0;
    }

    public final int getConstantMinimumWidth()
    {
        android.graphics.drawable.DrawableContainer$DrawableContainerState r0;
        boolean $z0;
        int $i0;

        r0 := @this: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        $z0 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedConstantSize>;

        if $z0 != 0 goto label1;

        virtualinvoke r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: void computeConstantSize()>();

     label1:
        $i0 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantMinimumWidth>;

        return $i0;
    }

    public final android.graphics.Rect getConstantPadding()
    {
        android.graphics.drawable.DrawableContainer$DrawableContainerState r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13;
        android.graphics.drawable.Drawable[] r2;
        boolean $z0, $z1, $z2;
        android.graphics.Rect $r3, $r4, $r5, $r7, r8, r9, r10;
        android.graphics.drawable.Drawable $r6;

        r0 := @this: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        $z0 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mVariablePadding>;

        if $z0 == 0 goto label01;

        return null;

     label01:
        $r3 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.Rect mConstantPadding>;

        if $r3 != null goto label10;

        $z1 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedPadding>;

        if $z1 == 0 goto label02;

        goto label10;

     label02:
        specialinvoke r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: void createAllFutures()>();

        r8 = null;

        $r5 = new android.graphics.Rect;

        specialinvoke $r5.<android.graphics.Rect: void <init>()>();

        i0 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mNumChildren>;

        r2 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] mDrawables>;

        i13 = 0;

     label03:
        if i13 >= i0 goto label09;

        r9 = r8;

        $r6 = r2[i13];

        $z2 = virtualinvoke $r6.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>($r5);

        if $z2 == 0 goto label08;

        r10 = r8;

        if r8 != null goto label04;

        $r7 = new android.graphics.Rect;

        specialinvoke $r7.<android.graphics.Rect: void <init>(int,int,int,int)>(0, 0, 0, 0);

        r10 = $r7;

     label04:
        $i2 = $r5.<android.graphics.Rect: int left>;

        $i1 = r10.<android.graphics.Rect: int left>;

        if $i2 <= $i1 goto label05;

        $i12 = $r5.<android.graphics.Rect: int left>;

        r10.<android.graphics.Rect: int left> = $i12;

     label05:
        $i4 = $r5.<android.graphics.Rect: int top>;

        $i3 = r10.<android.graphics.Rect: int top>;

        if $i4 <= $i3 goto label06;

        $i11 = $r5.<android.graphics.Rect: int top>;

        r10.<android.graphics.Rect: int top> = $i11;

     label06:
        $i6 = $r5.<android.graphics.Rect: int right>;

        $i5 = r10.<android.graphics.Rect: int right>;

        if $i6 <= $i5 goto label07;

        $i10 = $r5.<android.graphics.Rect: int right>;

        r10.<android.graphics.Rect: int right> = $i10;

     label07:
        r9 = r10;

        $i8 = $r5.<android.graphics.Rect: int bottom>;

        $i7 = r10.<android.graphics.Rect: int bottom>;

        if $i8 <= $i7 goto label08;

        $i9 = $r5.<android.graphics.Rect: int bottom>;

        r10.<android.graphics.Rect: int bottom> = $i9;

        r9 = r10;

     label08:
        i13 = i13 + 1;

        r8 = r9;

        goto label03;

     label09:
        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedPadding> = 1;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.Rect mConstantPadding> = r8;

        return r8;

     label10:
        $r4 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.Rect mConstantPadding>;

        return $r4;
    }

    public final int getConstantWidth()
    {
        android.graphics.drawable.DrawableContainer$DrawableContainerState r0;
        boolean $z0;
        int $i0;

        r0 := @this: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        $z0 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedConstantSize>;

        if $z0 != 0 goto label1;

        virtualinvoke r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: void computeConstantSize()>();

     label1:
        $i0 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantWidth>;

        return $i0;
    }

    public final int getEnterFadeDuration()
    {
        android.graphics.drawable.DrawableContainer$DrawableContainerState r0;
        int $i0;

        r0 := @this: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        $i0 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mEnterFadeDuration>;

        return $i0;
    }

    public final int getExitFadeDuration()
    {
        android.graphics.drawable.DrawableContainer$DrawableContainerState r0;
        int $i0;

        r0 := @this: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        $i0 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mExitFadeDuration>;

        return $i0;
    }

    public final int getOpacity()
    {
        android.graphics.drawable.DrawableContainer$DrawableContainerState r0;
        int i0, $i1, $i2, i3, i4;
        android.graphics.drawable.Drawable[] r1;
        boolean $z0;
        android.graphics.drawable.Drawable $r2, $r3;

        r0 := @this: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        $z0 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedOpacity>;

        if $z0 == 0 goto label1;

        $i2 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mOpacity>;

        return $i2;

     label1:
        specialinvoke r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: void createAllFutures()>();

        i0 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mNumChildren>;

        r1 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] mDrawables>;

        if i0 <= 0 goto label2;

        $r3 = r1[0];

        i3 = virtualinvoke $r3.<android.graphics.drawable.Drawable: int getOpacity()>();

        goto label3;

     label2:
        i3 = -2;

     label3:
        i4 = 1;

     label4:
        if i4 >= i0 goto label5;

        $r2 = r1[i4];

        $i1 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getOpacity()>();

        i3 = staticinvoke <android.graphics.drawable.Drawable: int resolveOpacity(int,int)>(i3, $i1);

        i4 = i4 + 1;

        goto label4;

     label5:
        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mOpacity> = i3;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedOpacity> = 1;

        return i3;
    }

    public void growArray(int, int)
    {
        android.graphics.drawable.DrawableContainer$DrawableContainerState r0;
        int i0, i1;
        android.graphics.drawable.Drawable[] r1, $r2;

        r0 := @this: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = newarray (android.graphics.drawable.Drawable)[i1];

        $r2 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] mDrawables>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, r1, 0, i0);

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] mDrawables> = r1;

        return;
    }

    void invalidateCache()
    {
        android.graphics.drawable.DrawableContainer$DrawableContainerState r0;

        r0 := @this: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedOpacity> = 0;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedStateful> = 0;

        return;
    }

    public final boolean isConstantSize()
    {
        android.graphics.drawable.DrawableContainer$DrawableContainerState r0;
        boolean $z0;

        r0 := @this: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        $z0 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mConstantSize>;

        return $z0;
    }

    public final boolean isStateful()
    {
        android.graphics.drawable.DrawableContainer$DrawableContainerState r0;
        int i0, i1;
        android.graphics.drawable.Drawable[] r1;
        boolean $z1, $z2, $z3, z4;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        $z1 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedStateful>;

        if $z1 == 0 goto label1;

        $z3 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mStateful>;

        return $z3;

     label1:
        specialinvoke r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: void createAllFutures()>();

        i0 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mNumChildren>;

        r1 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] mDrawables>;

        i1 = 0;

     label2:
        z4 = 0;

        if i1 >= i0 goto label4;

        $r2 = r1[i1];

        $z2 = virtualinvoke $r2.<android.graphics.drawable.Drawable: boolean isStateful()>();

        if $z2 == 0 goto label3;

        z4 = 1;

        goto label4;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mStateful> = z4;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedStateful> = 1;

        return z4;
    }

    public final void setConstantSize(boolean)
    {
        android.graphics.drawable.DrawableContainer$DrawableContainerState r0;
        boolean z0;

        r0 := @this: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        z0 := @parameter0: boolean;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mConstantSize> = z0;

        return;
    }

    public final void setEnterFadeDuration(int)
    {
        android.graphics.drawable.DrawableContainer$DrawableContainerState r0;
        int i0;

        r0 := @this: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        i0 := @parameter0: int;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mEnterFadeDuration> = i0;

        return;
    }

    public final void setExitFadeDuration(int)
    {
        android.graphics.drawable.DrawableContainer$DrawableContainerState r0;
        int i0;

        r0 := @this: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        i0 := @parameter0: int;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mExitFadeDuration> = i0;

        return;
    }

    final boolean setLayoutDirection(int, int)
    {
        android.graphics.drawable.DrawableContainer$DrawableContainerState r0;
        int i0, i1, i2, i3;
        android.graphics.drawable.Drawable[] r1;
        boolean z0, z1, z2;
        android.graphics.drawable.Drawable $r2, $r3;

        r0 := @this: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z1 = 0;

        i2 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mNumChildren>;

        r1 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] mDrawables>;

        i3 = 0;

     label1:
        if i3 >= i2 goto label3;

        z2 = z1;

        $r2 = r1[i3];

        if $r2 == null goto label2;

        $r3 = r1[i3];

        z0 = virtualinvoke $r3.<android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>(i0);

        z2 = z1;

        if i3 != i1 goto label2;

        z2 = z0;

     label2:
        i3 = i3 + 1;

        z1 = z2;

        goto label1;

     label3:
        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mLayoutDirection> = i0;

        return z1;
    }

    public final void setVariablePadding(boolean)
    {
        android.graphics.drawable.DrawableContainer$DrawableContainerState r0;
        boolean z0;

        r0 := @this: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        z0 := @parameter0: boolean;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mVariablePadding> = z0;

        return;
    }

    final void updateDensity(android.content.res.Resources)
    {
        android.graphics.drawable.DrawableContainer$DrawableContainerState r0;
        android.content.res.Resources r1;
        int i0, i1, $i2;

        r0 := @this: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        r1 := @parameter0: android.content.res.Resources;

        if r1 == null goto label1;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.content.res.Resources mSourceRes> = r1;

        $i2 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mDensity>;

        i0 = staticinvoke <android.graphics.drawable.Drawable: int resolveDensity(android.content.res.Resources,int)>(r1, $i2);

        i1 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mDensity>;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mDensity> = i0;

        if i1 == i0 goto label1;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedConstantSize> = 0;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedPadding> = 0;

     label1:
        return;
    }
}
