public class android.graphics.drawable.DrawableContainer extends android.graphics.drawable.Drawable implements android.graphics.drawable.Drawable$Callback
{
    private static final boolean DEBUG;
    private static final boolean DEFAULT_DITHER;
    private static final java.lang.String TAG;
    private int mAlpha;
    private java.lang.Runnable mAnimationRunnable;
    private android.graphics.drawable.DrawableContainer$BlockInvalidateCallback mBlockInvalidateCallback;
    private int mCurIndex;
    private android.graphics.drawable.Drawable mCurrDrawable;
    private android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState;
    private long mEnterAnimationEnd;
    private long mExitAnimationEnd;
    private boolean mHasAlpha;
    private android.graphics.Rect mHotspotBounds;
    private android.graphics.drawable.Drawable mLastDrawable;
    private int mLastIndex;
    private boolean mMutated;

    public void <init>()
    {
        android.graphics.drawable.DrawableContainer r0;

        r0 := @this: android.graphics.drawable.DrawableContainer;

        specialinvoke r0.<android.graphics.drawable.Drawable: void <init>()>();

        r0.<android.graphics.drawable.DrawableContainer: int mAlpha> = 255;

        r0.<android.graphics.drawable.DrawableContainer: int mCurIndex> = -1;

        r0.<android.graphics.drawable.DrawableContainer: int mLastIndex> = -1;

        return;
    }

    private void initializeDrawableForDisplay(android.graphics.drawable.Drawable)
    {
        android.graphics.drawable.DrawableContainer r0;
        android.graphics.drawable.Drawable r1;
        android.graphics.drawable.DrawableContainer$BlockInvalidateCallback $r2, $r3, $r5, $r9, $r17, $r19;
        android.graphics.drawable.Drawable$Callback $r4, $r10, $r20;
        android.graphics.drawable.DrawableContainer$DrawableContainerState $r6, $r7, $r8, $r11, $r13, $r15, $r21, $r22, $r25;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        boolean $z0, $z1, $z6, $z7, $z8, $z9, $z10;
        android.graphics.BlendMode $r12;
        android.content.res.ColorStateList $r14;
        android.graphics.ColorFilter $r16;
        java.lang.Throwable $r18;
        int[] $r23;
        android.graphics.Rect $r24, r26;

        r0 := @this: android.graphics.drawable.DrawableContainer;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$BlockInvalidateCallback mBlockInvalidateCallback>;

        if $r2 != null goto label01;

        $r17 = new android.graphics.drawable.DrawableContainer$BlockInvalidateCallback;

        specialinvoke $r17.<android.graphics.drawable.DrawableContainer$BlockInvalidateCallback: void <init>(android.graphics.drawable.DrawableContainer$1)>(null);

        r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$BlockInvalidateCallback mBlockInvalidateCallback> = $r17;

     label01:
        $r3 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$BlockInvalidateCallback mBlockInvalidateCallback>;

        $r4 = virtualinvoke r1.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$Callback getCallback()>();

        $r5 = virtualinvoke $r3.<android.graphics.drawable.DrawableContainer$BlockInvalidateCallback: android.graphics.drawable.DrawableContainer$BlockInvalidateCallback wrap(android.graphics.drawable.Drawable$Callback)>($r4);

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>($r5);

     label02:
        $r6 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $i0 = $r6.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mEnterFadeDuration>;

        if $i0 > 0 goto label03;

        $z6 = r0.<android.graphics.drawable.DrawableContainer: boolean mHasAlpha>;

        if $z6 == 0 goto label03;

        $i5 = r0.<android.graphics.drawable.DrawableContainer: int mAlpha>;

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setAlpha(int)>($i5);

     label03:
        $r21 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $z7 = $r21.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mHasColorFilter>;

        if $z7 == 0 goto label05;

        $r15 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $r16 = $r15.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.ColorFilter mColorFilter>;

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setColorFilter(android.graphics.ColorFilter)>($r16);

     label04:
        goto label07;

     label05:
        $r7 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $z0 = $r7.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mHasTintList>;

        if $z0 == 0 goto label06;

        $r13 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $r14 = $r13.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.content.res.ColorStateList mTintList>;

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setTintList(android.content.res.ColorStateList)>($r14);

     label06:
        $r8 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $z1 = $r8.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mHasTintMode>;

        if $z1 == 0 goto label07;

        $r11 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $r12 = $r11.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.BlendMode mBlendMode>;

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setTintBlendMode(android.graphics.BlendMode)>($r12);

     label07:
        $z8 = virtualinvoke r0.<android.graphics.drawable.DrawableContainer: boolean isVisible()>();

        virtualinvoke r1.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>($z8, 1);

        $r22 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $z9 = $r22.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mDither>;

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setDither(boolean)>($z9);

        $r23 = virtualinvoke r0.<android.graphics.drawable.DrawableContainer: int[] getState()>();

        virtualinvoke r1.<android.graphics.drawable.Drawable: boolean setState(int[])>($r23);

        $i6 = virtualinvoke r0.<android.graphics.drawable.DrawableContainer: int getLevel()>();

        virtualinvoke r1.<android.graphics.drawable.Drawable: boolean setLevel(int)>($i6);

        $r24 = virtualinvoke r0.<android.graphics.drawable.DrawableContainer: android.graphics.Rect getBounds()>();

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setBounds(android.graphics.Rect)>($r24);

        $i7 = virtualinvoke r0.<android.graphics.drawable.DrawableContainer: int getLayoutDirection()>();

        virtualinvoke r1.<android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>($i7);

        $r25 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $z10 = $r25.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mAutoMirrored>;

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setAutoMirrored(boolean)>($z10);

        r26 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.Rect mHotspotBounds>;

     label08:
        if r26 == null goto label10;

     label09:
        $i4 = r26.<android.graphics.Rect: int left>;

        $i3 = r26.<android.graphics.Rect: int top>;

        $i2 = r26.<android.graphics.Rect: int right>;

        $i1 = r26.<android.graphics.Rect: int bottom>;

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setHotspotBounds(int,int,int,int)>($i4, $i3, $i2, $i1);

     label10:
        $r9 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$BlockInvalidateCallback mBlockInvalidateCallback>;

        $r10 = virtualinvoke $r9.<android.graphics.drawable.DrawableContainer$BlockInvalidateCallback: android.graphics.drawable.Drawable$Callback unwrap()>();

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>($r10);

        return;

     label11:
        $r18 := @caughtexception;

        $r19 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$BlockInvalidateCallback mBlockInvalidateCallback>;

        $r20 = virtualinvoke $r19.<android.graphics.drawable.DrawableContainer$BlockInvalidateCallback: android.graphics.drawable.Drawable$Callback unwrap()>();

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>($r20);

        throw $r18;

        catch java.lang.Throwable from label02 to label03 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
    }

    private boolean needsMirroring()
    {
        android.graphics.drawable.DrawableContainer r0;
        boolean z0, z1;
        int $i0;

        r0 := @this: android.graphics.drawable.DrawableContainer;

        z0 = virtualinvoke r0.<android.graphics.drawable.DrawableContainer: boolean isAutoMirrored()>();

        z1 = 1;

        if z0 == 0 goto label1;

        $i0 = virtualinvoke r0.<android.graphics.drawable.DrawableContainer: int getLayoutDirection()>();

        if $i0 != 1 goto label1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    void animate(boolean)
    {
        android.graphics.drawable.DrawableContainer r0;
        boolean z0, z3, z4;
        long l0, $l1, $l4, $l5, $l13, $l14, l22, l24;
        java.lang.Runnable $r1;
        byte $b2, $b3, $b11, $b12;
        android.graphics.drawable.DrawableContainer$DrawableContainerState $r2, $r4;
        int $i6, $i7, $i8, $i9, $i10, $i15, $i16, $i17, $i18, $i19, $i20, $i21, i23, i25;
        android.graphics.drawable.Drawable $r3, $r5, r6, r7;

        r0 := @this: android.graphics.drawable.DrawableContainer;

        z0 := @parameter0: boolean;

        r0.<android.graphics.drawable.DrawableContainer: boolean mHasAlpha> = 1;

        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r6 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if r6 == null goto label2;

        l22 = r0.<android.graphics.drawable.DrawableContainer: long mEnterAnimationEnd>;

        z3 = 0;

        $b11 = l22 cmp 0L;

        if $b11 == 0 goto label3;

        $b12 = l22 cmp l0;

        if $b12 > 0 goto label1;

        $i21 = r0.<android.graphics.drawable.DrawableContainer: int mAlpha>;

        virtualinvoke r6.<android.graphics.drawable.Drawable: void setAlpha(int)>($i21);

        r0.<android.graphics.drawable.DrawableContainer: long mEnterAnimationEnd> = 0L;

        z3 = 0;

        goto label3;

     label1:
        $l13 = l22 - l0;

        $l14 = $l13 * 255L;

        $i16 = (int) $l14;

        $r4 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $i15 = $r4.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mEnterFadeDuration>;

        i23 = $i16 / $i15;

        $r5 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        $i18 = 255 - i23;

        $i17 = r0.<android.graphics.drawable.DrawableContainer: int mAlpha>;

        $i19 = $i18 * $i17;

        $i20 = $i19 / 255;

        virtualinvoke $r5.<android.graphics.drawable.Drawable: void setAlpha(int)>($i20);

        z3 = 1;

        goto label3;

     label2:
        r0.<android.graphics.drawable.DrawableContainer: long mEnterAnimationEnd> = 0L;

        z3 = 0;

     label3:
        r7 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mLastDrawable>;

        if r7 == null goto label5;

        l24 = r0.<android.graphics.drawable.DrawableContainer: long mExitAnimationEnd>;

        z4 = z3;

        $b2 = l24 cmp 0L;

        if $b2 == 0 goto label6;

        $b3 = l24 cmp l0;

        if $b3 > 0 goto label4;

        virtualinvoke r7.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>(0, 0);

        r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mLastDrawable> = null;

        r0.<android.graphics.drawable.DrawableContainer: int mLastIndex> = -1;

        r0.<android.graphics.drawable.DrawableContainer: long mExitAnimationEnd> = 0L;

        z4 = z3;

        goto label6;

     label4:
        $l4 = l24 - l0;

        $l5 = $l4 * 255L;

        $i7 = (int) $l5;

        $r2 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $i6 = $r2.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mExitFadeDuration>;

        i25 = $i7 / $i6;

        $r3 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mLastDrawable>;

        $i8 = r0.<android.graphics.drawable.DrawableContainer: int mAlpha>;

        $i9 = $i8 * i25;

        $i10 = $i9 / 255;

        virtualinvoke $r3.<android.graphics.drawable.Drawable: void setAlpha(int)>($i10);

        z4 = 1;

        goto label6;

     label5:
        r0.<android.graphics.drawable.DrawableContainer: long mExitAnimationEnd> = 0L;

        z4 = z3;

     label6:
        if z0 == 0 goto label7;

        if z4 == 0 goto label7;

        $r1 = r0.<android.graphics.drawable.DrawableContainer: java.lang.Runnable mAnimationRunnable>;

        $l1 = 16L + l0;

        virtualinvoke r0.<android.graphics.drawable.DrawableContainer: void scheduleSelf(java.lang.Runnable,long)>($r1, $l1);

     label7:
        return;
    }

    public void applyTheme(android.content.res.Resources$Theme)
    {
        android.graphics.drawable.DrawableContainer r0;
        android.content.res.Resources$Theme r1;
        android.graphics.drawable.DrawableContainer$DrawableContainerState $r2;

        r0 := @this: android.graphics.drawable.DrawableContainer;

        r1 := @parameter0: android.content.res.Resources$Theme;

        $r2 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        virtualinvoke $r2.<android.graphics.drawable.DrawableContainer$DrawableContainerState: void applyTheme(android.content.res.Resources$Theme)>(r1);

        return;
    }

    public boolean canApplyTheme()
    {
        android.graphics.drawable.DrawableContainer r0;
        android.graphics.drawable.DrawableContainer$DrawableContainerState $r1;
        boolean $z0;

        r0 := @this: android.graphics.drawable.DrawableContainer;

        $r1 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $z0 = virtualinvoke $r1.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean canApplyTheme()>();

        return $z0;
    }

    public void clearMutated()
    {
        android.graphics.drawable.DrawableContainer r0;
        android.graphics.drawable.DrawableContainer$DrawableContainerState $r1;

        r0 := @this: android.graphics.drawable.DrawableContainer;

        specialinvoke r0.<android.graphics.drawable.Drawable: void clearMutated()>();

        $r1 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        virtualinvoke $r1.<android.graphics.drawable.DrawableContainer$DrawableContainerState: void clearMutated()>();

        r0.<android.graphics.drawable.DrawableContainer: boolean mMutated> = 0;

        return;
    }

    android.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState()
    {
        android.graphics.drawable.DrawableContainer r0;
        android.graphics.drawable.DrawableContainer$DrawableContainerState $r1;

        r0 := @this: android.graphics.drawable.DrawableContainer;

        $r1 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        return $r1;
    }

    public void draw(android.graphics.Canvas)
    {
        android.graphics.drawable.DrawableContainer r0;
        android.graphics.Canvas r1;
        android.graphics.drawable.Drawable r2, r3;

        r0 := @this: android.graphics.drawable.DrawableContainer;

        r1 := @parameter0: android.graphics.Canvas;

        r2 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if r2 == null goto label1;

        virtualinvoke r2.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

     label1:
        r3 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mLastDrawable>;

        if r3 == null goto label2;

        virtualinvoke r3.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

     label2:
        return;
    }

    public int getAlpha()
    {
        android.graphics.drawable.DrawableContainer r0;
        int $i0;

        r0 := @this: android.graphics.drawable.DrawableContainer;

        $i0 = r0.<android.graphics.drawable.DrawableContainer: int mAlpha>;

        return $i0;
    }

    public int getChangingConfigurations()
    {
        android.graphics.drawable.DrawableContainer r0;
        int $i0, $i1, $i2;
        android.graphics.drawable.DrawableContainer$DrawableContainerState $r1;

        r0 := @this: android.graphics.drawable.DrawableContainer;

        $i0 = specialinvoke r0.<android.graphics.drawable.Drawable: int getChangingConfigurations()>();

        $r1 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $i1 = virtualinvoke $r1.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int getChangingConfigurations()>();

        $i2 = $i0 | $i1;

        return $i2;
    }

    public android.graphics.drawable.Drawable$ConstantState getConstantState()
    {
        android.graphics.drawable.DrawableContainer r0;
        android.graphics.drawable.DrawableContainer$DrawableContainerState $r1, $r2, $r3;
        boolean $z0;
        int $i0;

        r0 := @this: android.graphics.drawable.DrawableContainer;

        $r1 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $z0 = virtualinvoke $r1.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean canConstantState()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $i0 = virtualinvoke r0.<android.graphics.drawable.DrawableContainer: int getChangingConfigurations()>();

        $r2.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mChangingConfigurations> = $i0;

        $r3 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        return $r3;

     label1:
        return null;
    }

    public android.graphics.drawable.Drawable getCurrent()
    {
        android.graphics.drawable.DrawableContainer r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: android.graphics.drawable.DrawableContainer;

        $r1 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        return $r1;
    }

    public int getCurrentIndex()
    {
        android.graphics.drawable.DrawableContainer r0;
        int $i0;

        r0 := @this: android.graphics.drawable.DrawableContainer;

        $i0 = r0.<android.graphics.drawable.DrawableContainer: int mCurIndex>;

        return $i0;
    }

    public void getHotspotBounds(android.graphics.Rect)
    {
        android.graphics.drawable.DrawableContainer r0;
        android.graphics.Rect r1, r2;

        r0 := @this: android.graphics.drawable.DrawableContainer;

        r1 := @parameter0: android.graphics.Rect;

        r2 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.Rect mHotspotBounds>;

        if r2 == null goto label1;

        virtualinvoke r1.<android.graphics.Rect: void set(android.graphics.Rect)>(r2);

        goto label2;

     label1:
        specialinvoke r0.<android.graphics.drawable.Drawable: void getHotspotBounds(android.graphics.Rect)>(r1);

     label2:
        return;
    }

    public int getIntrinsicHeight()
    {
        android.graphics.drawable.DrawableContainer r0;
        android.graphics.drawable.Drawable r1;
        android.graphics.drawable.DrawableContainer$DrawableContainerState $r2, $r3;
        boolean $z0;
        int $i0, i1;

        r0 := @this: android.graphics.drawable.DrawableContainer;

        $r2 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $z0 = virtualinvoke $r2.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean isConstantSize()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $i0 = virtualinvoke $r3.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int getConstantHeight()>();

        return $i0;

     label1:
        r1 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if r1 == null goto label2;

        i1 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        goto label3;

     label2:
        i1 = -1;

     label3:
        return i1;
    }

    public int getIntrinsicWidth()
    {
        android.graphics.drawable.DrawableContainer r0;
        android.graphics.drawable.Drawable r1;
        android.graphics.drawable.DrawableContainer$DrawableContainerState $r2, $r3;
        boolean $z0;
        int $i0, i1;

        r0 := @this: android.graphics.drawable.DrawableContainer;

        $r2 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $z0 = virtualinvoke $r2.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean isConstantSize()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $i0 = virtualinvoke $r3.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int getConstantWidth()>();

        return $i0;

     label1:
        r1 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if r1 == null goto label2;

        i1 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        goto label3;

     label2:
        i1 = -1;

     label3:
        return i1;
    }

    public int getMinimumHeight()
    {
        android.graphics.drawable.DrawableContainer r0;
        android.graphics.drawable.Drawable r1;
        android.graphics.drawable.DrawableContainer$DrawableContainerState $r2, $r3;
        boolean $z0;
        int $i0, i1;

        r0 := @this: android.graphics.drawable.DrawableContainer;

        $r2 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $z0 = virtualinvoke $r2.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean isConstantSize()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $i0 = virtualinvoke $r3.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int getConstantMinimumHeight()>();

        return $i0;

     label1:
        r1 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if r1 == null goto label2;

        i1 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getMinimumHeight()>();

        goto label3;

     label2:
        i1 = 0;

     label3:
        return i1;
    }

    public int getMinimumWidth()
    {
        android.graphics.drawable.DrawableContainer r0;
        android.graphics.drawable.Drawable r1;
        android.graphics.drawable.DrawableContainer$DrawableContainerState $r2, $r3;
        boolean $z0;
        int $i0, i1;

        r0 := @this: android.graphics.drawable.DrawableContainer;

        $r2 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $z0 = virtualinvoke $r2.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean isConstantSize()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $i0 = virtualinvoke $r3.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int getConstantMinimumWidth()>();

        return $i0;

     label1:
        r1 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if r1 == null goto label2;

        i1 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getMinimumWidth()>();

        goto label3;

     label2:
        i1 = 0;

     label3:
        return i1;
    }

    public int getOpacity()
    {
        android.graphics.drawable.DrawableContainer r0;
        android.graphics.drawable.Drawable r1;
        boolean $z0;
        android.graphics.drawable.DrawableContainer$DrawableContainerState $r2;
        int i0;

        r0 := @this: android.graphics.drawable.DrawableContainer;

        r1 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if r1 == null goto label2;

        $z0 = virtualinvoke r1.<android.graphics.drawable.Drawable: boolean isVisible()>();

        if $z0 != 0 goto label1;

        goto label2;

     label1:
        $r2 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        i0 = virtualinvoke $r2.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int getOpacity()>();

        goto label3;

     label2:
        i0 = -2;

     label3:
        return i0;
    }

    public android.graphics.Insets getOpticalInsets()
    {
        android.graphics.drawable.DrawableContainer r0;
        android.graphics.drawable.Drawable r1;
        android.graphics.Insets $r2, $r3;

        r0 := @this: android.graphics.drawable.DrawableContainer;

        r1 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if r1 == null goto label1;

        $r3 = virtualinvoke r1.<android.graphics.drawable.Drawable: android.graphics.Insets getOpticalInsets()>();

        return $r3;

     label1:
        $r2 = <android.graphics.Insets: android.graphics.Insets NONE>;

        return $r2;
    }

    public void getOutline(android.graphics.Outline)
    {
        android.graphics.drawable.DrawableContainer r0;
        android.graphics.Outline r1;
        android.graphics.drawable.Drawable r2;

        r0 := @this: android.graphics.drawable.DrawableContainer;

        r1 := @parameter0: android.graphics.Outline;

        r2 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if r2 == null goto label1;

        virtualinvoke r2.<android.graphics.drawable.Drawable: void getOutline(android.graphics.Outline)>(r1);

     label1:
        return;
    }

    public boolean getPadding(android.graphics.Rect)
    {
        android.graphics.drawable.DrawableContainer r0;
        android.graphics.Rect r1, r3;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        android.graphics.drawable.DrawableContainer$DrawableContainerState $r2;
        boolean z0, $z1;
        android.graphics.drawable.Drawable r4;

        r0 := @this: android.graphics.drawable.DrawableContainer;

        r1 := @parameter0: android.graphics.Rect;

        $r2 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        r3 = virtualinvoke $r2.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.Rect getConstantPadding()>();

        if r3 == null goto label3;

        virtualinvoke r1.<android.graphics.Rect: void set(android.graphics.Rect)>(r3);

        $i3 = r3.<android.graphics.Rect: int left>;

        $i2 = r3.<android.graphics.Rect: int top>;

        $i5 = $i3 | $i2;

        $i4 = r3.<android.graphics.Rect: int bottom>;

        $i7 = $i5 | $i4;

        $i6 = r3.<android.graphics.Rect: int right>;

        $i8 = $i7 | $i6;

        if $i8 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        goto label5;

     label3:
        r4 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if r4 == null goto label4;

        z0 = virtualinvoke r4.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>(r1);

        goto label5;

     label4:
        z0 = specialinvoke r0.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>(r1);

     label5:
        $z1 = specialinvoke r0.<android.graphics.drawable.DrawableContainer: boolean needsMirroring()>();

        if $z1 == 0 goto label6;

        i0 = r1.<android.graphics.Rect: int left>;

        $i1 = r1.<android.graphics.Rect: int right>;

        r1.<android.graphics.Rect: int left> = $i1;

        r1.<android.graphics.Rect: int right> = i0;

     label6:
        return z0;
    }

    public boolean hasFocusStateSpecified()
    {
        android.graphics.drawable.DrawableContainer r0;
        boolean $z0, $z1;
        android.graphics.drawable.Drawable r1, r2;

        r0 := @this: android.graphics.drawable.DrawableContainer;

        r1 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if r1 == null goto label1;

        $z1 = virtualinvoke r1.<android.graphics.drawable.Drawable: boolean hasFocusStateSpecified()>();

        return $z1;

     label1:
        r2 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mLastDrawable>;

        if r2 == null goto label2;

        $z0 = virtualinvoke r2.<android.graphics.drawable.Drawable: boolean hasFocusStateSpecified()>();

        return $z0;

     label2:
        return 0;
    }

    public void invalidateDrawable(android.graphics.drawable.Drawable)
    {
        android.graphics.drawable.DrawableContainer r0;
        android.graphics.drawable.Drawable r1, $r3;
        android.graphics.drawable.DrawableContainer$DrawableContainerState r2;
        android.graphics.drawable.Drawable$Callback $r4, $r5;

        r0 := @this: android.graphics.drawable.DrawableContainer;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r2 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        if r2 == null goto label1;

        virtualinvoke r2.<android.graphics.drawable.DrawableContainer$DrawableContainerState: void invalidateCache()>();

     label1:
        $r3 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if r1 != $r3 goto label2;

        $r4 = virtualinvoke r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable$Callback getCallback()>();

        if $r4 == null goto label2;

        $r5 = virtualinvoke r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable$Callback getCallback()>();

        interfaceinvoke $r5.<android.graphics.drawable.Drawable$Callback: void invalidateDrawable(android.graphics.drawable.Drawable)>(r0);

     label2:
        return;
    }

    public boolean isAutoMirrored()
    {
        android.graphics.drawable.DrawableContainer r0;
        android.graphics.drawable.DrawableContainer$DrawableContainerState $r1;
        boolean $z0;

        r0 := @this: android.graphics.drawable.DrawableContainer;

        $r1 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $z0 = $r1.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mAutoMirrored>;

        return $z0;
    }

    public boolean isStateful()
    {
        android.graphics.drawable.DrawableContainer r0;
        android.graphics.drawable.DrawableContainer$DrawableContainerState $r1;
        boolean $z0;

        r0 := @this: android.graphics.drawable.DrawableContainer;

        $r1 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $z0 = virtualinvoke $r1.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean isStateful()>();

        return $z0;
    }

    public void jumpToCurrentState()
    {
        android.graphics.drawable.DrawableContainer r0;
        long $l0, $l3;
        byte $b1, $b4;
        boolean $z0, z1;
        int $i2;
        android.graphics.drawable.Drawable $r1, r2, r3;

        r0 := @this: android.graphics.drawable.DrawableContainer;

        z1 = 0;

        r2 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mLastDrawable>;

        if r2 == null goto label1;

        virtualinvoke r2.<android.graphics.drawable.Drawable: void jumpToCurrentState()>();

        r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mLastDrawable> = null;

        r0.<android.graphics.drawable.DrawableContainer: int mLastIndex> = -1;

        z1 = 1;

     label1:
        r3 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if r3 == null goto label2;

        virtualinvoke r3.<android.graphics.drawable.Drawable: void jumpToCurrentState()>();

        $z0 = r0.<android.graphics.drawable.DrawableContainer: boolean mHasAlpha>;

        if $z0 == 0 goto label2;

        $r1 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        $i2 = r0.<android.graphics.drawable.DrawableContainer: int mAlpha>;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: void setAlpha(int)>($i2);

     label2:
        $l3 = r0.<android.graphics.drawable.DrawableContainer: long mExitAnimationEnd>;

        $b4 = $l3 cmp 0L;

        if $b4 == 0 goto label3;

        r0.<android.graphics.drawable.DrawableContainer: long mExitAnimationEnd> = 0L;

        z1 = 1;

     label3:
        $l0 = r0.<android.graphics.drawable.DrawableContainer: long mEnterAnimationEnd>;

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label4;

        r0.<android.graphics.drawable.DrawableContainer: long mEnterAnimationEnd> = 0L;

        z1 = 1;

     label4:
        if z1 == 0 goto label5;

        virtualinvoke r0.<android.graphics.drawable.DrawableContainer: void invalidateSelf()>();

     label5:
        return;
    }

    public android.graphics.drawable.Drawable mutate()
    {
        android.graphics.drawable.DrawableContainer r0;
        android.graphics.drawable.DrawableContainer$DrawableContainerState r1;
        boolean $z0;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: android.graphics.drawable.DrawableContainer;

        $z0 = r0.<android.graphics.drawable.DrawableContainer: boolean mMutated>;

        if $z0 != 0 goto label1;

        $r2 = specialinvoke r0.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        if $r2 != r0 goto label1;

        r1 = virtualinvoke r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState()>();

        staticinvoke <android.graphics.drawable.DrawableContainer$DrawableContainerState: void access$100(android.graphics.drawable.DrawableContainer$DrawableContainerState)>(r1);

        virtualinvoke r0.<android.graphics.drawable.DrawableContainer: void setConstantState(android.graphics.drawable.DrawableContainer$DrawableContainerState)>(r1);

        r0.<android.graphics.drawable.DrawableContainer: boolean mMutated> = 1;

     label1:
        return r0;
    }

    protected void onBoundsChange(android.graphics.Rect)
    {
        android.graphics.drawable.DrawableContainer r0;
        android.graphics.Rect r1;
        android.graphics.drawable.Drawable r2, r3;

        r0 := @this: android.graphics.drawable.DrawableContainer;

        r1 := @parameter0: android.graphics.Rect;

        r2 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mLastDrawable>;

        if r2 == null goto label1;

        virtualinvoke r2.<android.graphics.drawable.Drawable: void setBounds(android.graphics.Rect)>(r1);

     label1:
        r3 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if r3 == null goto label2;

        virtualinvoke r3.<android.graphics.drawable.Drawable: void setBounds(android.graphics.Rect)>(r1);

     label2:
        return;
    }

    public boolean onLayoutDirectionChanged(int)
    {
        android.graphics.drawable.DrawableContainer r0;
        int i0, $i1;
        android.graphics.drawable.DrawableContainer$DrawableContainerState $r1;
        boolean $z0;

        r0 := @this: android.graphics.drawable.DrawableContainer;

        i0 := @parameter0: int;

        $r1 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $i1 = virtualinvoke r0.<android.graphics.drawable.DrawableContainer: int getCurrentIndex()>();

        $z0 = virtualinvoke $r1.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean setLayoutDirection(int,int)>(i0, $i1);

        return $z0;
    }

    protected boolean onLevelChange(int)
    {
        android.graphics.drawable.DrawableContainer r0;
        int i0;
        boolean $z0, $z1;
        android.graphics.drawable.Drawable r1, r2;

        r0 := @this: android.graphics.drawable.DrawableContainer;

        i0 := @parameter0: int;

        r1 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mLastDrawable>;

        if r1 == null goto label1;

        $z1 = virtualinvoke r1.<android.graphics.drawable.Drawable: boolean setLevel(int)>(i0);

        return $z1;

     label1:
        r2 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if r2 == null goto label2;

        $z0 = virtualinvoke r2.<android.graphics.drawable.Drawable: boolean setLevel(int)>(i0);

        return $z0;

     label2:
        return 0;
    }

    protected boolean onStateChange(int[])
    {
        android.graphics.drawable.DrawableContainer r0;
        int[] r1;
        boolean $z0, $z1;
        android.graphics.drawable.Drawable r2, r3;

        r0 := @this: android.graphics.drawable.DrawableContainer;

        r1 := @parameter0: int[];

        r2 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mLastDrawable>;

        if r2 == null goto label1;

        $z1 = virtualinvoke r2.<android.graphics.drawable.Drawable: boolean setState(int[])>(r1);

        return $z1;

     label1:
        r3 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if r3 == null goto label2;

        $z0 = virtualinvoke r3.<android.graphics.drawable.Drawable: boolean setState(int[])>(r1);

        return $z0;

     label2:
        return 0;
    }

    public void scheduleDrawable(android.graphics.drawable.Drawable, java.lang.Runnable, long)
    {
        android.graphics.drawable.DrawableContainer r0;
        android.graphics.drawable.Drawable r1, $r3;
        java.lang.Runnable r2;
        long l0;
        android.graphics.drawable.Drawable$Callback $r4, $r5;

        r0 := @this: android.graphics.drawable.DrawableContainer;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r2 := @parameter1: java.lang.Runnable;

        l0 := @parameter2: long;

        $r3 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if r1 != $r3 goto label1;

        $r4 = virtualinvoke r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable$Callback getCallback()>();

        if $r4 == null goto label1;

        $r5 = virtualinvoke r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable$Callback getCallback()>();

        interfaceinvoke $r5.<android.graphics.drawable.Drawable$Callback: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)>(r0, r2, l0);

     label1:
        return;
    }

    public boolean selectDrawable(int)
    {
        android.graphics.drawable.DrawableContainer r0;
        int i0, $i2, $i3, $i6, $i7, $i8, $i11, $i12;
        long l1, $l4, $l9, $l10, $l13, $l14, $l15;
        android.graphics.drawable.DrawableContainer$DrawableContainerState $r1, $r3, $r4, $r5, $r6, $r7;
        android.graphics.drawable.DrawableContainer$1 $r2;
        byte $b5, $b16;
        android.graphics.drawable.Drawable r8, r9, r10, r11;
        java.lang.Runnable r12;

        r0 := @this: android.graphics.drawable.DrawableContainer;

        i0 := @parameter0: int;

        $i2 = r0.<android.graphics.drawable.DrawableContainer: int mCurIndex>;

        if i0 != $i2 goto label01;

        return 0;

     label01:
        l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r1 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $i3 = $r1.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mExitFadeDuration>;

        if $i3 <= 0 goto label04;

        r8 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mLastDrawable>;

        if r8 == null goto label02;

        virtualinvoke r8.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>(0, 0);

     label02:
        r9 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if r9 == null goto label03;

        r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mLastDrawable> = r9;

        $i11 = r0.<android.graphics.drawable.DrawableContainer: int mCurIndex>;

        r0.<android.graphics.drawable.DrawableContainer: int mLastIndex> = $i11;

        $r7 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $i12 = $r7.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mExitFadeDuration>;

        $l13 = (long) $i12;

        $l14 = $l13 + l1;

        r0.<android.graphics.drawable.DrawableContainer: long mExitAnimationEnd> = $l14;

        goto label05;

     label03:
        r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mLastDrawable> = null;

        r0.<android.graphics.drawable.DrawableContainer: int mLastIndex> = -1;

        r0.<android.graphics.drawable.DrawableContainer: long mExitAnimationEnd> = 0L;

        goto label05;

     label04:
        r10 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if r10 == null goto label05;

        virtualinvoke r10.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>(0, 0);

     label05:
        if i0 < 0 goto label08;

        $r3 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $i6 = $r3.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mNumChildren>;

        if i0 >= $i6 goto label08;

        $r4 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        r11 = virtualinvoke $r4.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable getChild(int)>(i0);

        r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable> = r11;

        r0.<android.graphics.drawable.DrawableContainer: int mCurIndex> = i0;

        if r11 == null goto label07;

        $r5 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $i7 = $r5.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mEnterFadeDuration>;

        if $i7 <= 0 goto label06;

        $r6 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $i8 = $r6.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mEnterFadeDuration>;

        $l9 = (long) $i8;

        $l10 = $l9 + l1;

        r0.<android.graphics.drawable.DrawableContainer: long mEnterAnimationEnd> = $l10;

     label06:
        specialinvoke r0.<android.graphics.drawable.DrawableContainer: void initializeDrawableForDisplay(android.graphics.drawable.Drawable)>(r11);

     label07:
        goto label09;

     label08:
        r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable> = null;

        r0.<android.graphics.drawable.DrawableContainer: int mCurIndex> = -1;

     label09:
        $l15 = r0.<android.graphics.drawable.DrawableContainer: long mEnterAnimationEnd>;

        $b16 = $l15 cmp 0L;

        if $b16 != 0 goto label10;

        $l4 = r0.<android.graphics.drawable.DrawableContainer: long mExitAnimationEnd>;

        $b5 = $l4 cmp 0L;

        if $b5 == 0 goto label13;

     label10:
        r12 = r0.<android.graphics.drawable.DrawableContainer: java.lang.Runnable mAnimationRunnable>;

        if r12 != null goto label11;

        $r2 = new android.graphics.drawable.DrawableContainer$1;

        specialinvoke $r2.<android.graphics.drawable.DrawableContainer$1: void <init>(android.graphics.drawable.DrawableContainer)>(r0);

        r0.<android.graphics.drawable.DrawableContainer: java.lang.Runnable mAnimationRunnable> = $r2;

        goto label12;

     label11:
        virtualinvoke r0.<android.graphics.drawable.DrawableContainer: void unscheduleSelf(java.lang.Runnable)>(r12);

     label12:
        virtualinvoke r0.<android.graphics.drawable.DrawableContainer: void animate(boolean)>(1);

     label13:
        virtualinvoke r0.<android.graphics.drawable.DrawableContainer: void invalidateSelf()>();

        return 1;
    }

    public void setAlpha(int)
    {
        android.graphics.drawable.DrawableContainer r0;
        int i0, $i3;
        android.graphics.drawable.Drawable r1;
        boolean $z0;
        long $l1;
        byte $b2;

        r0 := @this: android.graphics.drawable.DrawableContainer;

        i0 := @parameter0: int;

        $z0 = r0.<android.graphics.drawable.DrawableContainer: boolean mHasAlpha>;

        if $z0 == 0 goto label1;

        $i3 = r0.<android.graphics.drawable.DrawableContainer: int mAlpha>;

        if $i3 == i0 goto label3;

     label1:
        r0.<android.graphics.drawable.DrawableContainer: boolean mHasAlpha> = 1;

        r0.<android.graphics.drawable.DrawableContainer: int mAlpha> = i0;

        r1 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if r1 == null goto label3;

        $l1 = r0.<android.graphics.drawable.DrawableContainer: long mEnterAnimationEnd>;

        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label2;

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setAlpha(int)>(i0);

        goto label3;

     label2:
        virtualinvoke r0.<android.graphics.drawable.DrawableContainer: void animate(boolean)>(0);

     label3:
        return;
    }

    public void setAutoMirrored(boolean)
    {
        android.graphics.drawable.DrawableContainer r0;
        boolean z0, $z1, $z2;
        android.graphics.drawable.Drawable r1;
        android.graphics.drawable.DrawableContainer$DrawableContainerState $r2, $r3, $r4;

        r0 := @this: android.graphics.drawable.DrawableContainer;

        z0 := @parameter0: boolean;

        $r2 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $z1 = $r2.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mAutoMirrored>;

        if $z1 == z0 goto label1;

        $r3 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $r3.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mAutoMirrored> = z0;

        r1 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if r1 == null goto label1;

        $r4 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $z2 = $r4.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mAutoMirrored>;

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setAutoMirrored(boolean)>($z2);

     label1:
        return;
    }

    public void setColorFilter(android.graphics.ColorFilter)
    {
        android.graphics.drawable.DrawableContainer r0;
        android.graphics.ColorFilter r1, $r5;
        android.graphics.drawable.Drawable r2;
        android.graphics.drawable.DrawableContainer$DrawableContainerState $r3, $r4, $r6;

        r0 := @this: android.graphics.drawable.DrawableContainer;

        r1 := @parameter0: android.graphics.ColorFilter;

        $r3 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $r3.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mHasColorFilter> = 1;

        $r4 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $r5 = $r4.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.ColorFilter mColorFilter>;

        if $r5 == r1 goto label1;

        $r6 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $r6.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.ColorFilter mColorFilter> = r1;

        r2 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if r2 == null goto label1;

        virtualinvoke r2.<android.graphics.drawable.Drawable: void setColorFilter(android.graphics.ColorFilter)>(r1);

     label1:
        return;
    }

    protected void setConstantState(android.graphics.drawable.DrawableContainer$DrawableContainerState)
    {
        android.graphics.drawable.DrawableContainer r0;
        int i0;
        android.graphics.drawable.DrawableContainer$DrawableContainerState r1;
        android.graphics.drawable.Drawable r2;

        r0 := @this: android.graphics.drawable.DrawableContainer;

        r1 := @parameter0: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState> = r1;

        i0 = r0.<android.graphics.drawable.DrawableContainer: int mCurIndex>;

        if i0 < 0 goto label1;

        r2 = virtualinvoke r1.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable getChild(int)>(i0);

        r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable> = r2;

        if r2 == null goto label1;

        specialinvoke r0.<android.graphics.drawable.DrawableContainer: void initializeDrawableForDisplay(android.graphics.drawable.Drawable)>(r2);

     label1:
        r0.<android.graphics.drawable.DrawableContainer: int mLastIndex> = -1;

        r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mLastDrawable> = null;

        return;
    }

    public void setCurrentIndex(int)
    {
        android.graphics.drawable.DrawableContainer r0;
        int i0;

        r0 := @this: android.graphics.drawable.DrawableContainer;

        i0 := @parameter0: int;

        virtualinvoke r0.<android.graphics.drawable.DrawableContainer: boolean selectDrawable(int)>(i0);

        return;
    }

    public void setDither(boolean)
    {
        android.graphics.drawable.DrawableContainer r0;
        boolean z0, $z1, $z2;
        android.graphics.drawable.Drawable r1;
        android.graphics.drawable.DrawableContainer$DrawableContainerState $r2, $r3, $r4;

        r0 := @this: android.graphics.drawable.DrawableContainer;

        z0 := @parameter0: boolean;

        $r2 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $z1 = $r2.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mDither>;

        if $z1 == z0 goto label1;

        $r3 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $r3.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mDither> = z0;

        r1 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if r1 == null goto label1;

        $r4 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $z2 = $r4.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mDither>;

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setDither(boolean)>($z2);

     label1:
        return;
    }

    public void setEnterFadeDuration(int)
    {
        android.graphics.drawable.DrawableContainer r0;
        int i0;
        android.graphics.drawable.DrawableContainer$DrawableContainerState $r1;

        r0 := @this: android.graphics.drawable.DrawableContainer;

        i0 := @parameter0: int;

        $r1 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $r1.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mEnterFadeDuration> = i0;

        return;
    }

    public void setExitFadeDuration(int)
    {
        android.graphics.drawable.DrawableContainer r0;
        int i0;
        android.graphics.drawable.DrawableContainer$DrawableContainerState $r1;

        r0 := @this: android.graphics.drawable.DrawableContainer;

        i0 := @parameter0: int;

        $r1 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $r1.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mExitFadeDuration> = i0;

        return;
    }

    public void setHotspot(float, float)
    {
        android.graphics.drawable.DrawableContainer r0;
        float f0, f1;
        android.graphics.drawable.Drawable r1;

        r0 := @this: android.graphics.drawable.DrawableContainer;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        r1 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setHotspot(float,float)>(f0, f1);

     label1:
        return;
    }

    public void setHotspotBounds(int, int, int, int)
    {
        android.graphics.drawable.DrawableContainer r0;
        int i0, i1, i2, i3;
        android.graphics.Rect $r1, r2;
        android.graphics.drawable.Drawable r3;

        r0 := @this: android.graphics.drawable.DrawableContainer;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r2 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.Rect mHotspotBounds>;

        if r2 != null goto label1;

        $r1 = new android.graphics.Rect;

        specialinvoke $r1.<android.graphics.Rect: void <init>(int,int,int,int)>(i0, i1, i2, i3);

        r0.<android.graphics.drawable.DrawableContainer: android.graphics.Rect mHotspotBounds> = $r1;

        goto label2;

     label1:
        virtualinvoke r2.<android.graphics.Rect: void set(int,int,int,int)>(i0, i1, i2, i3);

     label2:
        r3 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if r3 == null goto label3;

        virtualinvoke r3.<android.graphics.drawable.Drawable: void setHotspotBounds(int,int,int,int)>(i0, i1, i2, i3);

     label3:
        return;
    }

    public void setTintBlendMode(android.graphics.BlendMode)
    {
        android.graphics.drawable.DrawableContainer r0;
        android.graphics.BlendMode r1, $r5;
        android.graphics.drawable.Drawable r2;
        android.graphics.drawable.DrawableContainer$DrawableContainerState $r3, $r4, $r6;

        r0 := @this: android.graphics.drawable.DrawableContainer;

        r1 := @parameter0: android.graphics.BlendMode;

        $r3 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $r3.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mHasTintMode> = 1;

        $r4 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $r5 = $r4.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.BlendMode mBlendMode>;

        if $r5 == r1 goto label1;

        $r6 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $r6.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.BlendMode mBlendMode> = r1;

        r2 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if r2 == null goto label1;

        virtualinvoke r2.<android.graphics.drawable.Drawable: void setTintBlendMode(android.graphics.BlendMode)>(r1);

     label1:
        return;
    }

    public void setTintList(android.content.res.ColorStateList)
    {
        android.graphics.drawable.DrawableContainer r0;
        android.content.res.ColorStateList r1, $r5;
        android.graphics.drawable.Drawable r2;
        android.graphics.drawable.DrawableContainer$DrawableContainerState $r3, $r4, $r6;

        r0 := @this: android.graphics.drawable.DrawableContainer;

        r1 := @parameter0: android.content.res.ColorStateList;

        $r3 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $r3.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mHasTintList> = 1;

        $r4 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $r5 = $r4.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.content.res.ColorStateList mTintList>;

        if $r5 == r1 goto label1;

        $r6 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $r6.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.content.res.ColorStateList mTintList> = r1;

        r2 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if r2 == null goto label1;

        virtualinvoke r2.<android.graphics.drawable.Drawable: void setTintList(android.content.res.ColorStateList)>(r1);

     label1:
        return;
    }

    public boolean setVisible(boolean, boolean)
    {
        android.graphics.drawable.DrawableContainer r0;
        boolean z0, z1, z2;
        android.graphics.drawable.Drawable r1, r2;

        r0 := @this: android.graphics.drawable.DrawableContainer;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        z2 = specialinvoke r0.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>(z0, z1);

        r1 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mLastDrawable>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>(z0, z1);

     label1:
        r2 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if r2 == null goto label2;

        virtualinvoke r2.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>(z0, z1);

     label2:
        return z2;
    }

    public void unscheduleDrawable(android.graphics.drawable.Drawable, java.lang.Runnable)
    {
        android.graphics.drawable.DrawableContainer r0;
        android.graphics.drawable.Drawable r1, $r3;
        java.lang.Runnable r2;
        android.graphics.drawable.Drawable$Callback $r4, $r5;

        r0 := @this: android.graphics.drawable.DrawableContainer;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r2 := @parameter1: java.lang.Runnable;

        $r3 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if r1 != $r3 goto label1;

        $r4 = virtualinvoke r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable$Callback getCallback()>();

        if $r4 == null goto label1;

        $r5 = virtualinvoke r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable$Callback getCallback()>();

        interfaceinvoke $r5.<android.graphics.drawable.Drawable$Callback: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)>(r0, r2);

     label1:
        return;
    }

    protected final void updateDensity(android.content.res.Resources)
    {
        android.graphics.drawable.DrawableContainer r0;
        android.content.res.Resources r1;
        android.graphics.drawable.DrawableContainer$DrawableContainerState $r2;

        r0 := @this: android.graphics.drawable.DrawableContainer;

        r1 := @parameter0: android.content.res.Resources;

        $r2 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        virtualinvoke $r2.<android.graphics.drawable.DrawableContainer$DrawableContainerState: void updateDensity(android.content.res.Resources)>(r1);

        return;
    }

    public static void <clinit>()
    {
        <android.graphics.drawable.DrawableContainer: java.lang.String TAG> = "DrawableContainer";

        <android.graphics.drawable.DrawableContainer: boolean DEFAULT_DITHER> = 1;

        <android.graphics.drawable.DrawableContainer: boolean DEBUG> = 0;

        return;
    }
}
