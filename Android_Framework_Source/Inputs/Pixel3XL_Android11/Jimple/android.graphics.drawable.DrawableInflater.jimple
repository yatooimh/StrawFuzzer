public final class android.graphics.drawable.DrawableInflater extends java.lang.Object
{
    private static final java.util.HashMap CONSTRUCTOR_MAP;
    private final java.lang.ClassLoader mClassLoader;
    private final android.content.res.Resources mRes;

    static void <clinit>()
    {
        java.util.HashMap $r0;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <android.graphics.drawable.DrawableInflater: java.util.HashMap CONSTRUCTOR_MAP> = $r0;

        return;
    }

    public void <init>(android.content.res.Resources, java.lang.ClassLoader)
    {
        android.graphics.drawable.DrawableInflater r0;
        android.content.res.Resources r1;
        java.lang.ClassLoader r2;

        r0 := @this: android.graphics.drawable.DrawableInflater;

        r1 := @parameter0: android.content.res.Resources;

        r2 := @parameter1: java.lang.ClassLoader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.graphics.drawable.DrawableInflater: android.content.res.Resources mRes> = r1;

        r0.<android.graphics.drawable.DrawableInflater: java.lang.ClassLoader mClassLoader> = r2;

        return;
    }

    private android.graphics.drawable.Drawable inflateFromClass(java.lang.String)
    {
        android.graphics.drawable.DrawableInflater r0;
        java.util.HashMap r1, $r2, $r10;
        java.lang.Object $r3, $r5;
        java.lang.Object[] $r4;
        java.lang.ClassLoader $r6;
        java.lang.Class $r7, $r8;
        java.lang.Class[] $r9;
        java.lang.ClassNotFoundException $r12;
        java.lang.StringBuilder $r13, $r20, $r27, $r34;
        android.view.InflateException $r16, $r23, $r30, $r37;
        java.lang.String $r17, $r24, $r31, $r38, r41;
        java.lang.Exception $r19;
        java.lang.Throwable $r26, $r40;
        java.lang.ClassCastException $r33;
        java.lang.reflect.Constructor r42, r43;
        android.graphics.drawable.Drawable r44;

        r0 := @this: android.graphics.drawable.DrawableInflater;

        r41 := @parameter0: java.lang.String;

     label01:
        r1 = <android.graphics.drawable.DrawableInflater: java.util.HashMap CONSTRUCTOR_MAP>;

        entermonitor r1;

     label02:
        $r2 = <android.graphics.drawable.DrawableInflater: java.util.HashMap CONSTRUCTOR_MAP>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r41);

        r42 = (java.lang.reflect.Constructor) $r3;

     label03:
        r43 = r42;

        if r42 != null goto label05;

     label04:
        $r6 = r0.<android.graphics.drawable.DrawableInflater: java.lang.ClassLoader mClassLoader>;

        $r7 = virtualinvoke $r6.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(r41);

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.Class asSubclass(java.lang.Class)>(class "Landroid/graphics/drawable/Drawable;");

        $r9 = newarray (java.lang.Class)[0];

        r43 = virtualinvoke $r8.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r9);

        $r10 = <android.graphics.drawable.DrawableInflater: java.util.HashMap CONSTRUCTOR_MAP>;

        virtualinvoke $r10.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r41, r43);

     label05:
        exitmonitor r1;

     label06:
        $r4 = newarray (java.lang.Object)[0];

        $r5 = virtualinvoke r43.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r4);

        r44 = (android.graphics.drawable.Drawable) $r5;

     label07:
        return r44;

     label08:
        $r40 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r40;

     label11:
        $r19 := @caughtexception;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error inflating class ");

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r41);

        $r23 = new android.view.InflateException;

        $r24 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r23.<android.view.InflateException: void <init>(java.lang.String)>($r24);

        virtualinvoke $r23.<android.view.InflateException: java.lang.Throwable initCause(java.lang.Throwable)>($r19);

        throw $r23;

     label12:
        $r12 := @caughtexception;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Class not found ");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r41);

        $r16 = new android.view.InflateException;

        $r17 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<android.view.InflateException: void <init>(java.lang.String)>($r17);

        virtualinvoke $r16.<android.view.InflateException: java.lang.Throwable initCause(java.lang.Throwable)>($r12);

        throw $r16;

     label13:
        $r33 := @caughtexception;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Class is not a Drawable ");

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r41);

        $r37 = new android.view.InflateException;

        $r38 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r37.<android.view.InflateException: void <init>(java.lang.String)>($r38);

        virtualinvoke $r37.<android.view.InflateException: java.lang.Throwable initCause(java.lang.Throwable)>($r33);

        throw $r37;

     label14:
        $r26 := @caughtexception;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error inflating class ");

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r41);

        $r30 = new android.view.InflateException;

        $r31 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r30.<android.view.InflateException: void <init>(java.lang.String)>($r31);

        virtualinvoke $r30.<android.view.InflateException: java.lang.Throwable initCause(java.lang.Throwable)>($r26);

        throw $r30;

        catch java.lang.NoSuchMethodException from label01 to label02 with label14;
        catch java.lang.ClassCastException from label01 to label02 with label13;
        catch java.lang.ClassNotFoundException from label01 to label02 with label12;
        catch java.lang.Exception from label01 to label02 with label11;
        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.NoSuchMethodException from label06 to label07 with label14;
        catch java.lang.ClassCastException from label06 to label07 with label13;
        catch java.lang.ClassNotFoundException from label06 to label07 with label12;
        catch java.lang.Exception from label06 to label07 with label11;
        catch java.lang.Throwable from label09 to label10 with label08;
        catch java.lang.NoSuchMethodException from label10 to label11 with label14;
        catch java.lang.ClassCastException from label10 to label11 with label13;
        catch java.lang.ClassNotFoundException from label10 to label11 with label12;
        catch java.lang.Exception from label10 to label11 with label11;
    }

    private android.graphics.drawable.Drawable inflateFromTag(java.lang.String)
    {
        android.graphics.drawable.DrawableInflater r0;
        java.lang.String r1;
        int $i0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19;
        android.graphics.drawable.AnimatedImageDrawable $r2;
        android.graphics.drawable.NinePatchDrawable $r3;
        android.graphics.drawable.BitmapDrawable $r4;
        android.graphics.drawable.InsetDrawable $r5;
        android.graphics.drawable.AnimationDrawable $r6;
        android.graphics.drawable.AnimatedRotateDrawable $r7;
        android.graphics.drawable.RotateDrawable $r8;
        android.graphics.drawable.ClipDrawable $r9;
        android.graphics.drawable.ScaleDrawable $r10;
        android.graphics.drawable.AnimatedVectorDrawable $r11;
        android.graphics.drawable.VectorDrawable $r12;
        android.graphics.drawable.GradientDrawable $r13;
        android.graphics.drawable.ColorDrawable $r14;
        android.graphics.drawable.AdaptiveIconDrawable $r15;
        android.graphics.drawable.RippleDrawable $r16;
        android.graphics.drawable.TransitionDrawable $r17;
        android.graphics.drawable.LayerDrawable $r18;
        android.graphics.drawable.LevelListDrawable $r19;
        android.graphics.drawable.AnimatedStateListDrawable $r20;
        android.graphics.drawable.StateListDrawable $r21;
        byte b1;

        r0 := @this: android.graphics.drawable.DrawableInflater;

        r1 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r1.<java.lang.String: int hashCode()>();

        lookupswitch($i0)
        {
            case -2024464016: goto label21;
            case -1724158635: goto label20;
            case -1671889043: goto label19;
            case -1493546681: goto label18;
            case -1388777169: goto label17;
            case -930826704: goto label16;
            case -925180581: goto label15;
            case -820387517: goto label14;
            case -510364471: goto label13;
            case -94197862: goto label12;
            case 3056464: goto label11;
            case 94842723: goto label10;
            case 100360477: goto label09;
            case 109250890: goto label08;
            case 109399969: goto label07;
            case 160680263: goto label06;
            case 1191572447: goto label05;
            case 1442046129: goto label04;
            case 2013827269: goto label03;
            case 2118620333: goto label02;
            default: goto label01;
        };

     label01:
        goto label22;

     label02:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("animated-vector");

        if $z0 == 0 goto label01;

        b1 = 10;

        goto label23;

     label03:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("animated-rotate");

        if $z1 == 0 goto label01;

        b1 = 14;

        goto label23;

     label04:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("animated-image");

        if $z2 == 0 goto label01;

        b1 = 19;

        goto label23;

     label05:
        $z3 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("selector");

        if $z3 == 0 goto label01;

        b1 = 0;

        goto label23;

     label06:
        $z4 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("level-list");

        if $z4 == 0 goto label01;

        b1 = 2;

        goto label23;

     label07:
        $z5 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("shape");

        if $z5 == 0 goto label01;

        b1 = 8;

        goto label23;

     label08:
        $z6 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("scale");

        if $z6 == 0 goto label01;

        b1 = 11;

        goto label23;

     label09:
        $z7 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("inset");

        if $z7 == 0 goto label01;

        b1 = 16;

        goto label23;

     label10:
        $z8 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("color");

        if $z8 == 0 goto label01;

        b1 = 7;

        goto label23;

     label11:
        $z9 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("clip");

        if $z9 == 0 goto label01;

        b1 = 12;

        goto label23;

     label12:
        $z10 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("layer-list");

        if $z10 == 0 goto label01;

        b1 = 3;

        goto label23;

     label13:
        $z11 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("animated-selector");

        if $z11 == 0 goto label01;

        b1 = 1;

        goto label23;

     label14:
        $z12 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("vector");

        if $z12 == 0 goto label01;

        b1 = 9;

        goto label23;

     label15:
        $z13 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("rotate");

        if $z13 == 0 goto label01;

        b1 = 13;

        goto label23;

     label16:
        $z14 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("ripple");

        if $z14 == 0 goto label01;

        b1 = 5;

        goto label23;

     label17:
        $z15 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("bitmap");

        if $z15 == 0 goto label01;

        b1 = 17;

        goto label23;

     label18:
        $z16 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("animation-list");

        if $z16 == 0 goto label01;

        b1 = 15;

        goto label23;

     label19:
        $z17 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("nine-patch");

        if $z17 == 0 goto label01;

        b1 = 18;

        goto label23;

     label20:
        $z18 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("transition");

        if $z18 == 0 goto label01;

        b1 = 4;

        goto label23;

     label21:
        $z19 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("adaptive-icon");

        if $z19 == 0 goto label01;

        b1 = 6;

        goto label23;

     label22:
        b1 = -1;

     label23:
        tableswitch(b1)
        {
            case 0: goto label44;
            case 1: goto label43;
            case 2: goto label42;
            case 3: goto label41;
            case 4: goto label40;
            case 5: goto label39;
            case 6: goto label38;
            case 7: goto label37;
            case 8: goto label36;
            case 9: goto label35;
            case 10: goto label34;
            case 11: goto label33;
            case 12: goto label32;
            case 13: goto label31;
            case 14: goto label30;
            case 15: goto label29;
            case 16: goto label28;
            case 17: goto label27;
            case 18: goto label26;
            case 19: goto label25;
            default: goto label24;
        };

     label24:
        return null;

     label25:
        $r2 = new android.graphics.drawable.AnimatedImageDrawable;

        specialinvoke $r2.<android.graphics.drawable.AnimatedImageDrawable: void <init>()>();

        return $r2;

     label26:
        $r3 = new android.graphics.drawable.NinePatchDrawable;

        specialinvoke $r3.<android.graphics.drawable.NinePatchDrawable: void <init>()>();

        return $r3;

     label27:
        $r4 = new android.graphics.drawable.BitmapDrawable;

        specialinvoke $r4.<android.graphics.drawable.BitmapDrawable: void <init>()>();

        return $r4;

     label28:
        $r5 = new android.graphics.drawable.InsetDrawable;

        specialinvoke $r5.<android.graphics.drawable.InsetDrawable: void <init>()>();

        return $r5;

     label29:
        $r6 = new android.graphics.drawable.AnimationDrawable;

        specialinvoke $r6.<android.graphics.drawable.AnimationDrawable: void <init>()>();

        return $r6;

     label30:
        $r7 = new android.graphics.drawable.AnimatedRotateDrawable;

        specialinvoke $r7.<android.graphics.drawable.AnimatedRotateDrawable: void <init>()>();

        return $r7;

     label31:
        $r8 = new android.graphics.drawable.RotateDrawable;

        specialinvoke $r8.<android.graphics.drawable.RotateDrawable: void <init>()>();

        return $r8;

     label32:
        $r9 = new android.graphics.drawable.ClipDrawable;

        specialinvoke $r9.<android.graphics.drawable.ClipDrawable: void <init>()>();

        return $r9;

     label33:
        $r10 = new android.graphics.drawable.ScaleDrawable;

        specialinvoke $r10.<android.graphics.drawable.ScaleDrawable: void <init>()>();

        return $r10;

     label34:
        $r11 = new android.graphics.drawable.AnimatedVectorDrawable;

        specialinvoke $r11.<android.graphics.drawable.AnimatedVectorDrawable: void <init>()>();

        return $r11;

     label35:
        $r12 = new android.graphics.drawable.VectorDrawable;

        specialinvoke $r12.<android.graphics.drawable.VectorDrawable: void <init>()>();

        return $r12;

     label36:
        $r13 = new android.graphics.drawable.GradientDrawable;

        specialinvoke $r13.<android.graphics.drawable.GradientDrawable: void <init>()>();

        return $r13;

     label37:
        $r14 = new android.graphics.drawable.ColorDrawable;

        specialinvoke $r14.<android.graphics.drawable.ColorDrawable: void <init>()>();

        return $r14;

     label38:
        $r15 = new android.graphics.drawable.AdaptiveIconDrawable;

        specialinvoke $r15.<android.graphics.drawable.AdaptiveIconDrawable: void <init>()>();

        return $r15;

     label39:
        $r16 = new android.graphics.drawable.RippleDrawable;

        specialinvoke $r16.<android.graphics.drawable.RippleDrawable: void <init>()>();

        return $r16;

     label40:
        $r17 = new android.graphics.drawable.TransitionDrawable;

        specialinvoke $r17.<android.graphics.drawable.TransitionDrawable: void <init>()>();

        return $r17;

     label41:
        $r18 = new android.graphics.drawable.LayerDrawable;

        specialinvoke $r18.<android.graphics.drawable.LayerDrawable: void <init>()>();

        return $r18;

     label42:
        $r19 = new android.graphics.drawable.LevelListDrawable;

        specialinvoke $r19.<android.graphics.drawable.LevelListDrawable: void <init>()>();

        return $r19;

     label43:
        $r20 = new android.graphics.drawable.AnimatedStateListDrawable;

        specialinvoke $r20.<android.graphics.drawable.AnimatedStateListDrawable: void <init>()>();

        return $r20;

     label44:
        $r21 = new android.graphics.drawable.StateListDrawable;

        specialinvoke $r21.<android.graphics.drawable.StateListDrawable: void <init>()>();

        return $r21;
    }

    public static android.graphics.drawable.Drawable loadDrawable(android.content.Context, int)
    {
        android.content.Context r0;
        int i0;
        android.content.res.Resources $r1;
        android.content.res.Resources$Theme $r2;
        android.graphics.drawable.Drawable $r3;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        $r1 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke r0.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $r3 = staticinvoke <android.graphics.drawable.DrawableInflater: android.graphics.drawable.Drawable loadDrawable(android.content.res.Resources,android.content.res.Resources$Theme,int)>($r1, $r2, i0);

        return $r3;
    }

    public static android.graphics.drawable.Drawable loadDrawable(android.content.res.Resources, android.content.res.Resources$Theme, int)
    {
        android.content.res.Resources r0;
        android.content.res.Resources$Theme r1;
        int i0;
        android.graphics.drawable.Drawable $r2;

        r0 := @parameter0: android.content.res.Resources;

        r1 := @parameter1: android.content.res.Resources$Theme;

        i0 := @parameter2: int;

        $r2 = virtualinvoke r0.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources$Theme)>(i0, r1);

        return $r2;
    }

    public android.graphics.drawable.Drawable inflateFromXml(java.lang.String, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.graphics.drawable.DrawableInflater r0;
        java.lang.String r1;
        org.xmlpull.v1.XmlPullParser r2;
        android.util.AttributeSet r3;
        android.content.res.Resources$Theme r4;
        android.graphics.drawable.Drawable $r5;

        r0 := @this: android.graphics.drawable.DrawableInflater;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.xmlpull.v1.XmlPullParser;

        r3 := @parameter2: android.util.AttributeSet;

        r4 := @parameter3: android.content.res.Resources$Theme;

        $r5 = virtualinvoke r0.<android.graphics.drawable.DrawableInflater: android.graphics.drawable.Drawable inflateFromXmlForDensity(java.lang.String,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,int,android.content.res.Resources$Theme)>(r1, r2, r3, 0, r4);

        return $r5;
    }

    android.graphics.drawable.Drawable inflateFromXmlForDensity(java.lang.String, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, int, android.content.res.Resources$Theme) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.graphics.drawable.DrawableInflater r0;
        org.xmlpull.v1.XmlPullParser r1;
        android.util.AttributeSet r2;
        int i0;
        android.content.res.Resources$Theme r3;
        android.graphics.drawable.Drawable r4, r9;
        boolean $z0;
        android.content.res.Resources $r5;
        android.view.InflateException $r6;
        java.lang.String r7, r8;

        r0 := @this: android.graphics.drawable.DrawableInflater;

        r7 := @parameter0: java.lang.String;

        r1 := @parameter1: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter2: android.util.AttributeSet;

        i0 := @parameter3: int;

        r3 := @parameter4: android.content.res.Resources$Theme;

        r8 = r7;

        $z0 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>("drawable");

        if $z0 == 0 goto label2;

        r8 = interfaceinvoke r2.<android.util.AttributeSet: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "class");

        if r8 == null goto label1;

        goto label2;

     label1:
        $r6 = new android.view.InflateException;

        specialinvoke $r6.<android.view.InflateException: void <init>(java.lang.String)>("<drawable> tag must specify class attribute");

        throw $r6;

     label2:
        r4 = specialinvoke r0.<android.graphics.drawable.DrawableInflater: android.graphics.drawable.Drawable inflateFromTag(java.lang.String)>(r8);

        r9 = r4;

        if r4 != null goto label3;

        r9 = specialinvoke r0.<android.graphics.drawable.DrawableInflater: android.graphics.drawable.Drawable inflateFromClass(java.lang.String)>(r8);

     label3:
        virtualinvoke r9.<android.graphics.drawable.Drawable: void setSrcDensityOverride(int)>(i0);

        $r5 = r0.<android.graphics.drawable.DrawableInflater: android.content.res.Resources mRes>;

        virtualinvoke r9.<android.graphics.drawable.Drawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>($r5, r1, r2, r3);

        return r9;
    }
}
