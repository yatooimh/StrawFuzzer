abstract class android.graphics.drawable.DrawableWrapper$DrawableWrapperState extends android.graphics.drawable.Drawable$ConstantState
{
    int mChangingConfigurations;
    int mDensity;
    android.graphics.drawable.Drawable$ConstantState mDrawableState;
    int mSrcDensityOverride;
    private int[] mThemeAttrs;

    void <init>(android.graphics.drawable.DrawableWrapper$DrawableWrapperState, android.content.res.Resources)
    {
        android.graphics.drawable.DrawableWrapper$DrawableWrapperState r0, r1;
        android.content.res.Resources r2;
        android.util.DisplayMetrics $r3;
        int[] $r4;
        int $i1, $i2, i3;
        android.graphics.drawable.Drawable$ConstantState $r5;

        r0 := @this: android.graphics.drawable.DrawableWrapper$DrawableWrapperState;

        r1 := @parameter0: android.graphics.drawable.DrawableWrapper$DrawableWrapperState;

        r2 := @parameter1: android.content.res.Resources;

        specialinvoke r0.<android.graphics.drawable.Drawable$ConstantState: void <init>()>();

        r0.<android.graphics.drawable.DrawableWrapper$DrawableWrapperState: int mDensity> = 160;

        r0.<android.graphics.drawable.DrawableWrapper$DrawableWrapperState: int mSrcDensityOverride> = 0;

        if r1 == null goto label1;

        $r4 = r1.<android.graphics.drawable.DrawableWrapper$DrawableWrapperState: int[] mThemeAttrs>;

        r0.<android.graphics.drawable.DrawableWrapper$DrawableWrapperState: int[] mThemeAttrs> = $r4;

        $i1 = r1.<android.graphics.drawable.DrawableWrapper$DrawableWrapperState: int mChangingConfigurations>;

        r0.<android.graphics.drawable.DrawableWrapper$DrawableWrapperState: int mChangingConfigurations> = $i1;

        $r5 = r1.<android.graphics.drawable.DrawableWrapper$DrawableWrapperState: android.graphics.drawable.Drawable$ConstantState mDrawableState>;

        r0.<android.graphics.drawable.DrawableWrapper$DrawableWrapperState: android.graphics.drawable.Drawable$ConstantState mDrawableState> = $r5;

        $i2 = r1.<android.graphics.drawable.DrawableWrapper$DrawableWrapperState: int mSrcDensityOverride>;

        r0.<android.graphics.drawable.DrawableWrapper$DrawableWrapperState: int mSrcDensityOverride> = $i2;

     label1:
        if r2 == null goto label2;

        $r3 = virtualinvoke r2.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        i3 = $r3.<android.util.DisplayMetrics: int densityDpi>;

        goto label4;

     label2:
        if r1 == null goto label3;

        i3 = r1.<android.graphics.drawable.DrawableWrapper$DrawableWrapperState: int mDensity>;

        goto label4;

     label3:
        i3 = 0;

     label4:
        if i3 != 0 goto label5;

        i3 = 160;

        goto label5;

     label5:
        r0.<android.graphics.drawable.DrawableWrapper$DrawableWrapperState: int mDensity> = i3;

        return;
    }

    static int[] access$000(android.graphics.drawable.DrawableWrapper$DrawableWrapperState)
    {
        android.graphics.drawable.DrawableWrapper$DrawableWrapperState r0;
        int[] $r1;

        r0 := @parameter0: android.graphics.drawable.DrawableWrapper$DrawableWrapperState;

        $r1 = r0.<android.graphics.drawable.DrawableWrapper$DrawableWrapperState: int[] mThemeAttrs>;

        return $r1;
    }

    static int[] access$002(android.graphics.drawable.DrawableWrapper$DrawableWrapperState, int[])
    {
        android.graphics.drawable.DrawableWrapper$DrawableWrapperState r0;
        int[] r1;

        r0 := @parameter0: android.graphics.drawable.DrawableWrapper$DrawableWrapperState;

        r1 := @parameter1: int[];

        r0.<android.graphics.drawable.DrawableWrapper$DrawableWrapperState: int[] mThemeAttrs> = r1;

        return r1;
    }

    public boolean canApplyTheme()
    {
        android.graphics.drawable.DrawableWrapper$DrawableWrapperState r0;
        android.graphics.drawable.Drawable$ConstantState r1;
        int[] $r2;
        boolean $z0, $z1, z2;

        r0 := @this: android.graphics.drawable.DrawableWrapper$DrawableWrapperState;

        $r2 = r0.<android.graphics.drawable.DrawableWrapper$DrawableWrapperState: int[] mThemeAttrs>;

        if $r2 != null goto label3;

        r1 = r0.<android.graphics.drawable.DrawableWrapper$DrawableWrapperState: android.graphics.drawable.Drawable$ConstantState mDrawableState>;

        if r1 == null goto label1;

        $z1 = virtualinvoke r1.<android.graphics.drawable.Drawable$ConstantState: boolean canApplyTheme()>();

        if $z1 != 0 goto label3;

     label1:
        $z0 = specialinvoke r0.<android.graphics.drawable.Drawable$ConstantState: boolean canApplyTheme()>();

        if $z0 == 0 goto label2;

        goto label3;

     label2:
        z2 = 0;

        goto label4;

     label3:
        z2 = 1;

     label4:
        return z2;
    }

    public boolean canConstantState()
    {
        android.graphics.drawable.DrawableWrapper$DrawableWrapperState r0;
        android.graphics.drawable.Drawable$ConstantState $r1;
        boolean z0;

        r0 := @this: android.graphics.drawable.DrawableWrapper$DrawableWrapperState;

        $r1 = r0.<android.graphics.drawable.DrawableWrapper$DrawableWrapperState: android.graphics.drawable.Drawable$ConstantState mDrawableState>;

        if $r1 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public int getChangingConfigurations()
    {
        android.graphics.drawable.DrawableWrapper$DrawableWrapperState r0;
        int i0, $i1, i2;
        android.graphics.drawable.Drawable$ConstantState r1;

        r0 := @this: android.graphics.drawable.DrawableWrapper$DrawableWrapperState;

        i0 = r0.<android.graphics.drawable.DrawableWrapper$DrawableWrapperState: int mChangingConfigurations>;

        r1 = r0.<android.graphics.drawable.DrawableWrapper$DrawableWrapperState: android.graphics.drawable.Drawable$ConstantState mDrawableState>;

        if r1 == null goto label1;

        i2 = virtualinvoke r1.<android.graphics.drawable.Drawable$ConstantState: int getChangingConfigurations()>();

        goto label2;

     label1:
        i2 = 0;

     label2:
        $i1 = i0 | i2;

        return $i1;
    }

    public android.graphics.drawable.Drawable newDrawable()
    {
        android.graphics.drawable.DrawableWrapper$DrawableWrapperState r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: android.graphics.drawable.DrawableWrapper$DrawableWrapperState;

        $r1 = virtualinvoke r0.<android.graphics.drawable.DrawableWrapper$DrawableWrapperState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)>(null);

        return $r1;
    }

    public abstract android.graphics.drawable.Drawable newDrawable(android.content.res.Resources);

    void onDensityChanged(int, int)
    {
        android.graphics.drawable.DrawableWrapper$DrawableWrapperState r0;
        int i0, i1;

        r0 := @this: android.graphics.drawable.DrawableWrapper$DrawableWrapperState;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return;
    }

    public final void setDensity(int)
    {
        android.graphics.drawable.DrawableWrapper$DrawableWrapperState r0;
        int i0, i1, $i2;

        r0 := @this: android.graphics.drawable.DrawableWrapper$DrawableWrapperState;

        i0 := @parameter0: int;

        $i2 = r0.<android.graphics.drawable.DrawableWrapper$DrawableWrapperState: int mDensity>;

        if $i2 == i0 goto label1;

        i1 = r0.<android.graphics.drawable.DrawableWrapper$DrawableWrapperState: int mDensity>;

        r0.<android.graphics.drawable.DrawableWrapper$DrawableWrapperState: int mDensity> = i0;

        virtualinvoke r0.<android.graphics.drawable.DrawableWrapper$DrawableWrapperState: void onDensityChanged(int,int)>(i1, i0);

     label1:
        return;
    }
}
