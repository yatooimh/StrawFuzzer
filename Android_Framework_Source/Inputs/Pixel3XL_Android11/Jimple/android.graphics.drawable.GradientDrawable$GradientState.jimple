final class android.graphics.drawable.GradientDrawable$GradientState extends android.graphics.drawable.Drawable$ConstantState
{
    public int mAngle;
    int[] mAttrCorners;
    int[] mAttrGradient;
    int[] mAttrPadding;
    int[] mAttrSize;
    int[] mAttrSolid;
    int[] mAttrStroke;
    android.graphics.BlendMode mBlendMode;
    float mCenterX;
    float mCenterY;
    public int mChangingConfigurations;
    int mDensity;
    public boolean mDither;
    public int mGradient;
    public int[] mGradientColors;
    float mGradientRadius;
    int mGradientRadiusType;
    public int mHeight;
    public int mInnerRadius;
    public float mInnerRadiusRatio;
    boolean mOpaqueOverBounds;
    boolean mOpaqueOverShape;
    public android.graphics.Insets mOpticalInsets;
    public android.graphics.drawable.GradientDrawable$Orientation mOrientation;
    public android.graphics.Rect mPadding;
    public float[] mPositions;
    public float mRadius;
    public float[] mRadiusArray;
    public int mShape;
    public android.content.res.ColorStateList mSolidColors;
    public android.content.res.ColorStateList mStrokeColors;
    public float mStrokeDashGap;
    public float mStrokeDashWidth;
    public int mStrokeWidth;
    public int[] mTempColors;
    public float[] mTempPositions;
    int[] mThemeAttrs;
    public int mThickness;
    public float mThicknessRatio;
    android.content.res.ColorStateList mTint;
    boolean mUseLevel;
    boolean mUseLevelForShape;
    public int mWidth;

    public void <init>(android.graphics.drawable.GradientDrawable$GradientState, android.content.res.Resources)
    {
        android.graphics.drawable.GradientDrawable$GradientState r0, r1;
        android.content.res.Resources r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        android.graphics.Insets $r3, $r9;
        android.graphics.BlendMode $r4, $r11;
        android.graphics.drawable.GradientDrawable$Orientation $r5;
        android.content.res.ColorStateList $r6, $r7, $r10;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;
        android.graphics.Rect $r8, $r19, $r20;
        boolean $z0, $z1, $z2, $z3, $z4;
        int[] $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r26, r27;
        java.lang.Object $r21, $r23, $r25;
        float[] $r22, $r24, r28, r29;

        r0 := @this: android.graphics.drawable.GradientDrawable$GradientState;

        r1 := @parameter0: android.graphics.drawable.GradientDrawable$GradientState;

        r2 := @parameter1: android.content.res.Resources;

        specialinvoke r0.<android.graphics.drawable.Drawable$ConstantState: void <init>()>();

        r0.<android.graphics.drawable.GradientDrawable$GradientState: int mShape> = 0;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: int mGradient> = 0;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: int mAngle> = 0;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: int mStrokeWidth> = -1;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: float mStrokeDashWidth> = 0.0F;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: float mStrokeDashGap> = 0.0F;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: float mRadius> = 0.0F;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: float[] mRadiusArray> = null;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.Rect mPadding> = null;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: int mWidth> = -1;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: int mHeight> = -1;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: float mInnerRadiusRatio> = 3.0F;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: float mThicknessRatio> = 9.0F;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: int mInnerRadius> = -1;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: int mThickness> = -1;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: boolean mDither> = 0;

        $r3 = <android.graphics.Insets: android.graphics.Insets NONE>;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.Insets mOpticalInsets> = $r3;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: float mCenterX> = 0.5F;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: float mCenterY> = 0.5F;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: float mGradientRadius> = 0.5F;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: int mGradientRadiusType> = 0;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: boolean mUseLevel> = 0;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: boolean mUseLevelForShape> = 1;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: android.content.res.ColorStateList mTint> = null;

        $r4 = <android.graphics.drawable.Drawable: android.graphics.BlendMode DEFAULT_BLEND_MODE>;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.BlendMode mBlendMode> = $r4;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: int mDensity> = 160;

        $i2 = r1.<android.graphics.drawable.GradientDrawable$GradientState: int mChangingConfigurations>;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: int mChangingConfigurations> = $i2;

        $i3 = r1.<android.graphics.drawable.GradientDrawable$GradientState: int mShape>;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: int mShape> = $i3;

        $i4 = r1.<android.graphics.drawable.GradientDrawable$GradientState: int mGradient>;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: int mGradient> = $i4;

        $i5 = r1.<android.graphics.drawable.GradientDrawable$GradientState: int mAngle>;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: int mAngle> = $i5;

        $r5 = r1.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.drawable.GradientDrawable$Orientation mOrientation>;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.drawable.GradientDrawable$Orientation mOrientation> = $r5;

        $r6 = r1.<android.graphics.drawable.GradientDrawable$GradientState: android.content.res.ColorStateList mSolidColors>;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: android.content.res.ColorStateList mSolidColors> = $r6;

        r27 = r1.<android.graphics.drawable.GradientDrawable$GradientState: int[] mGradientColors>;

        if r27 == null goto label1;

        $r25 = virtualinvoke r27.<java.lang.Object: java.lang.Object clone()>();

        $r26 = (int[]) $r25;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: int[] mGradientColors> = $r26;

     label1:
        r28 = r1.<android.graphics.drawable.GradientDrawable$GradientState: float[] mPositions>;

        if r28 == null goto label2;

        $r23 = virtualinvoke r28.<java.lang.Object: java.lang.Object clone()>();

        $r24 = (float[]) $r23;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: float[] mPositions> = $r24;

     label2:
        $r7 = r1.<android.graphics.drawable.GradientDrawable$GradientState: android.content.res.ColorStateList mStrokeColors>;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: android.content.res.ColorStateList mStrokeColors> = $r7;

        $i6 = r1.<android.graphics.drawable.GradientDrawable$GradientState: int mStrokeWidth>;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: int mStrokeWidth> = $i6;

        $f0 = r1.<android.graphics.drawable.GradientDrawable$GradientState: float mStrokeDashWidth>;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: float mStrokeDashWidth> = $f0;

        $f1 = r1.<android.graphics.drawable.GradientDrawable$GradientState: float mStrokeDashGap>;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: float mStrokeDashGap> = $f1;

        $f2 = r1.<android.graphics.drawable.GradientDrawable$GradientState: float mRadius>;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: float mRadius> = $f2;

        r29 = r1.<android.graphics.drawable.GradientDrawable$GradientState: float[] mRadiusArray>;

        if r29 == null goto label3;

        $r21 = virtualinvoke r29.<java.lang.Object: java.lang.Object clone()>();

        $r22 = (float[]) $r21;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: float[] mRadiusArray> = $r22;

     label3:
        $r8 = r1.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.Rect mPadding>;

        if $r8 == null goto label4;

        $r19 = new android.graphics.Rect;

        $r20 = r1.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.Rect mPadding>;

        specialinvoke $r19.<android.graphics.Rect: void <init>(android.graphics.Rect)>($r20);

        r0.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.Rect mPadding> = $r19;

     label4:
        $i7 = r1.<android.graphics.drawable.GradientDrawable$GradientState: int mWidth>;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: int mWidth> = $i7;

        $i8 = r1.<android.graphics.drawable.GradientDrawable$GradientState: int mHeight>;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: int mHeight> = $i8;

        $f3 = r1.<android.graphics.drawable.GradientDrawable$GradientState: float mInnerRadiusRatio>;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: float mInnerRadiusRatio> = $f3;

        $f4 = r1.<android.graphics.drawable.GradientDrawable$GradientState: float mThicknessRatio>;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: float mThicknessRatio> = $f4;

        $i9 = r1.<android.graphics.drawable.GradientDrawable$GradientState: int mInnerRadius>;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: int mInnerRadius> = $i9;

        $i10 = r1.<android.graphics.drawable.GradientDrawable$GradientState: int mThickness>;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: int mThickness> = $i10;

        $z0 = r1.<android.graphics.drawable.GradientDrawable$GradientState: boolean mDither>;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: boolean mDither> = $z0;

        $r9 = r1.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.Insets mOpticalInsets>;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.Insets mOpticalInsets> = $r9;

        $f5 = r1.<android.graphics.drawable.GradientDrawable$GradientState: float mCenterX>;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: float mCenterX> = $f5;

        $f6 = r1.<android.graphics.drawable.GradientDrawable$GradientState: float mCenterY>;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: float mCenterY> = $f6;

        $f7 = r1.<android.graphics.drawable.GradientDrawable$GradientState: float mGradientRadius>;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: float mGradientRadius> = $f7;

        $i11 = r1.<android.graphics.drawable.GradientDrawable$GradientState: int mGradientRadiusType>;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: int mGradientRadiusType> = $i11;

        $z1 = r1.<android.graphics.drawable.GradientDrawable$GradientState: boolean mUseLevel>;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: boolean mUseLevel> = $z1;

        $z2 = r1.<android.graphics.drawable.GradientDrawable$GradientState: boolean mUseLevelForShape>;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: boolean mUseLevelForShape> = $z2;

        $z3 = r1.<android.graphics.drawable.GradientDrawable$GradientState: boolean mOpaqueOverBounds>;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: boolean mOpaqueOverBounds> = $z3;

        $z4 = r1.<android.graphics.drawable.GradientDrawable$GradientState: boolean mOpaqueOverShape>;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: boolean mOpaqueOverShape> = $z4;

        $r10 = r1.<android.graphics.drawable.GradientDrawable$GradientState: android.content.res.ColorStateList mTint>;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: android.content.res.ColorStateList mTint> = $r10;

        $r11 = r1.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.BlendMode mBlendMode>;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.BlendMode mBlendMode> = $r11;

        $r12 = r1.<android.graphics.drawable.GradientDrawable$GradientState: int[] mThemeAttrs>;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: int[] mThemeAttrs> = $r12;

        $r13 = r1.<android.graphics.drawable.GradientDrawable$GradientState: int[] mAttrSize>;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: int[] mAttrSize> = $r13;

        $r14 = r1.<android.graphics.drawable.GradientDrawable$GradientState: int[] mAttrGradient>;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: int[] mAttrGradient> = $r14;

        $r15 = r1.<android.graphics.drawable.GradientDrawable$GradientState: int[] mAttrSolid>;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: int[] mAttrSolid> = $r15;

        $r16 = r1.<android.graphics.drawable.GradientDrawable$GradientState: int[] mAttrStroke>;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: int[] mAttrStroke> = $r16;

        $r17 = r1.<android.graphics.drawable.GradientDrawable$GradientState: int[] mAttrCorners>;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: int[] mAttrCorners> = $r17;

        $r18 = r1.<android.graphics.drawable.GradientDrawable$GradientState: int[] mAttrPadding>;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: int[] mAttrPadding> = $r18;

        $i12 = r1.<android.graphics.drawable.GradientDrawable$GradientState: int mDensity>;

        i0 = staticinvoke <android.graphics.drawable.Drawable: int resolveDensity(android.content.res.Resources,int)>(r2, $i12);

        r0.<android.graphics.drawable.GradientDrawable$GradientState: int mDensity> = i0;

        i1 = r1.<android.graphics.drawable.GradientDrawable$GradientState: int mDensity>;

        if i1 == i0 goto label5;

        specialinvoke r0.<android.graphics.drawable.GradientDrawable$GradientState: void applyDensityScaling(int,int)>(i1, i0);

     label5:
        return;
    }

    public void <init>(android.graphics.drawable.GradientDrawable$Orientation, int[])
    {
        android.graphics.drawable.GradientDrawable$GradientState r0;
        android.graphics.drawable.GradientDrawable$Orientation r1;
        int[] r2;
        android.graphics.Insets $r3;
        android.graphics.BlendMode $r4;

        r0 := @this: android.graphics.drawable.GradientDrawable$GradientState;

        r1 := @parameter0: android.graphics.drawable.GradientDrawable$Orientation;

        r2 := @parameter1: int[];

        specialinvoke r0.<android.graphics.drawable.Drawable$ConstantState: void <init>()>();

        r0.<android.graphics.drawable.GradientDrawable$GradientState: int mShape> = 0;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: int mGradient> = 0;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: int mAngle> = 0;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: int mStrokeWidth> = -1;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: float mStrokeDashWidth> = 0.0F;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: float mStrokeDashGap> = 0.0F;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: float mRadius> = 0.0F;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: float[] mRadiusArray> = null;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.Rect mPadding> = null;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: int mWidth> = -1;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: int mHeight> = -1;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: float mInnerRadiusRatio> = 3.0F;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: float mThicknessRatio> = 9.0F;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: int mInnerRadius> = -1;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: int mThickness> = -1;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: boolean mDither> = 0;

        $r3 = <android.graphics.Insets: android.graphics.Insets NONE>;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.Insets mOpticalInsets> = $r3;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: float mCenterX> = 0.5F;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: float mCenterY> = 0.5F;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: float mGradientRadius> = 0.5F;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: int mGradientRadiusType> = 0;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: boolean mUseLevel> = 0;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: boolean mUseLevelForShape> = 1;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: android.content.res.ColorStateList mTint> = null;

        $r4 = <android.graphics.drawable.Drawable: android.graphics.BlendMode DEFAULT_BLEND_MODE>;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.BlendMode mBlendMode> = $r4;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: int mDensity> = 160;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.drawable.GradientDrawable$Orientation mOrientation> = r1;

        virtualinvoke r0.<android.graphics.drawable.GradientDrawable$GradientState: void setGradientColors(int[])>(r2);

        return;
    }

    static void access$100(android.graphics.drawable.GradientDrawable$GradientState)
    {
        android.graphics.drawable.GradientDrawable$GradientState r0;

        r0 := @parameter0: android.graphics.drawable.GradientDrawable$GradientState;

        specialinvoke r0.<android.graphics.drawable.GradientDrawable$GradientState: void computeOpacity()>();

        return;
    }

    private void applyDensityScaling(int, int)
    {
        android.graphics.drawable.GradientDrawable$GradientState r0;
        int i0, i1, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, i35, i36, i37, i38, i39;
        android.graphics.Insets $r1, $r2, $r3, $r4, $r5, $r6, $r7;
        byte $b2, $b3, $b4;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, f15, f16;
        android.graphics.Rect r8, r9, r10, r11;
        float[] r12, r13, r14, r15;

        r0 := @this: android.graphics.drawable.GradientDrawable$GradientState;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i35 = r0.<android.graphics.drawable.GradientDrawable$GradientState: int mInnerRadius>;

        if i35 <= 0 goto label01;

        $i34 = staticinvoke <android.graphics.drawable.Drawable: int scaleFromDensity(int,int,int,boolean)>(i35, i0, i1, 1);

        r0.<android.graphics.drawable.GradientDrawable$GradientState: int mInnerRadius> = $i34;

     label01:
        i36 = r0.<android.graphics.drawable.GradientDrawable$GradientState: int mThickness>;

        if i36 <= 0 goto label02;

        $i33 = staticinvoke <android.graphics.drawable.Drawable: int scaleFromDensity(int,int,int,boolean)>(i36, i0, i1, 1);

        r0.<android.graphics.drawable.GradientDrawable$GradientState: int mThickness> = $i33;

     label02:
        $r2 = r0.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.Insets mOpticalInsets>;

        $r1 = <android.graphics.Insets: android.graphics.Insets NONE>;

        if $r2 == $r1 goto label03;

        $r3 = r0.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.Insets mOpticalInsets>;

        $i25 = $r3.<android.graphics.Insets: int left>;

        $i26 = staticinvoke <android.graphics.drawable.Drawable: int scaleFromDensity(int,int,int,boolean)>($i25, i0, i1, 1);

        $r4 = r0.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.Insets mOpticalInsets>;

        $i27 = $r4.<android.graphics.Insets: int top>;

        $i28 = staticinvoke <android.graphics.drawable.Drawable: int scaleFromDensity(int,int,int,boolean)>($i27, i0, i1, 1);

        $r5 = r0.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.Insets mOpticalInsets>;

        $i29 = $r5.<android.graphics.Insets: int right>;

        $i30 = staticinvoke <android.graphics.drawable.Drawable: int scaleFromDensity(int,int,int,boolean)>($i29, i0, i1, 1);

        $r6 = r0.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.Insets mOpticalInsets>;

        $i31 = $r6.<android.graphics.Insets: int bottom>;

        $i32 = staticinvoke <android.graphics.drawable.Drawable: int scaleFromDensity(int,int,int,boolean)>($i31, i0, i1, 1);

        $r7 = staticinvoke <android.graphics.Insets: android.graphics.Insets of(int,int,int,int)>($i26, $i28, $i30, $i32);

        r0.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.Insets mOpticalInsets> = $r7;

     label03:
        r8 = r0.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.Rect mPadding>;

        if r8 == null goto label04;

        $i17 = r8.<android.graphics.Rect: int left>;

        $i18 = staticinvoke <android.graphics.drawable.Drawable: int scaleFromDensity(int,int,int,boolean)>($i17, i0, i1, 0);

        r8.<android.graphics.Rect: int left> = $i18;

        r9 = r0.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.Rect mPadding>;

        $i19 = r9.<android.graphics.Rect: int top>;

        $i20 = staticinvoke <android.graphics.drawable.Drawable: int scaleFromDensity(int,int,int,boolean)>($i19, i0, i1, 0);

        r9.<android.graphics.Rect: int top> = $i20;

        r10 = r0.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.Rect mPadding>;

        $i21 = r10.<android.graphics.Rect: int right>;

        $i22 = staticinvoke <android.graphics.drawable.Drawable: int scaleFromDensity(int,int,int,boolean)>($i21, i0, i1, 0);

        r10.<android.graphics.Rect: int right> = $i22;

        r11 = r0.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.Rect mPadding>;

        $i23 = r11.<android.graphics.Rect: int bottom>;

        $i24 = staticinvoke <android.graphics.drawable.Drawable: int scaleFromDensity(int,int,int,boolean)>($i23, i0, i1, 0);

        r11.<android.graphics.Rect: int bottom> = $i24;

     label04:
        f15 = r0.<android.graphics.drawable.GradientDrawable$GradientState: float mRadius>;

        $b2 = f15 cmpl 0.0F;

        if $b2 <= 0 goto label05;

        $f14 = staticinvoke <android.graphics.drawable.Drawable: float scaleFromDensity(float,int,int)>(f15, i0, i1);

        r0.<android.graphics.drawable.GradientDrawable$GradientState: float mRadius> = $f14;

     label05:
        r12 = r0.<android.graphics.drawable.GradientDrawable$GradientState: float[] mRadiusArray>;

        if r12 == null goto label06;

        $f6 = r12[0];

        $i9 = (int) $f6;

        $i10 = staticinvoke <android.graphics.drawable.Drawable: int scaleFromDensity(int,int,int,boolean)>($i9, i0, i1, 1);

        $f7 = (float) $i10;

        r12[0] = $f7;

        r13 = r0.<android.graphics.drawable.GradientDrawable$GradientState: float[] mRadiusArray>;

        $f8 = r13[1];

        $i11 = (int) $f8;

        $i12 = staticinvoke <android.graphics.drawable.Drawable: int scaleFromDensity(int,int,int,boolean)>($i11, i0, i1, 1);

        $f9 = (float) $i12;

        r13[1] = $f9;

        r14 = r0.<android.graphics.drawable.GradientDrawable$GradientState: float[] mRadiusArray>;

        $f10 = r14[2];

        $i13 = (int) $f10;

        $i14 = staticinvoke <android.graphics.drawable.Drawable: int scaleFromDensity(int,int,int,boolean)>($i13, i0, i1, 1);

        $f11 = (float) $i14;

        r14[2] = $f11;

        r15 = r0.<android.graphics.drawable.GradientDrawable$GradientState: float[] mRadiusArray>;

        $f12 = r15[3];

        $i15 = (int) $f12;

        $i16 = staticinvoke <android.graphics.drawable.Drawable: int scaleFromDensity(int,int,int,boolean)>($i15, i0, i1, 1);

        $f13 = (float) $i16;

        r15[3] = $f13;

     label06:
        i37 = r0.<android.graphics.drawable.GradientDrawable$GradientState: int mStrokeWidth>;

        if i37 <= 0 goto label07;

        $i8 = staticinvoke <android.graphics.drawable.Drawable: int scaleFromDensity(int,int,int,boolean)>(i37, i0, i1, 1);

        r0.<android.graphics.drawable.GradientDrawable$GradientState: int mStrokeWidth> = $i8;

     label07:
        $f0 = r0.<android.graphics.drawable.GradientDrawable$GradientState: float mStrokeDashWidth>;

        $b3 = $f0 cmpl 0.0F;

        if $b3 <= 0 goto label08;

        $f4 = r0.<android.graphics.drawable.GradientDrawable$GradientState: float mStrokeDashGap>;

        $f5 = staticinvoke <android.graphics.drawable.Drawable: float scaleFromDensity(float,int,int)>($f4, i0, i1);

        r0.<android.graphics.drawable.GradientDrawable$GradientState: float mStrokeDashWidth> = $f5;

     label08:
        f16 = r0.<android.graphics.drawable.GradientDrawable$GradientState: float mStrokeDashGap>;

        $b4 = f16 cmpl 0.0F;

        if $b4 <= 0 goto label09;

        $f3 = staticinvoke <android.graphics.drawable.Drawable: float scaleFromDensity(float,int,int)>(f16, i0, i1);

        r0.<android.graphics.drawable.GradientDrawable$GradientState: float mStrokeDashGap> = $f3;

     label09:
        $i5 = r0.<android.graphics.drawable.GradientDrawable$GradientState: int mGradientRadiusType>;

        if $i5 != 0 goto label10;

        $f1 = r0.<android.graphics.drawable.GradientDrawable$GradientState: float mGradientRadius>;

        $f2 = staticinvoke <android.graphics.drawable.Drawable: float scaleFromDensity(float,int,int)>($f1, i0, i1);

        r0.<android.graphics.drawable.GradientDrawable$GradientState: float mGradientRadius> = $f2;

     label10:
        i38 = r0.<android.graphics.drawable.GradientDrawable$GradientState: int mWidth>;

        if i38 <= 0 goto label11;

        $i7 = staticinvoke <android.graphics.drawable.Drawable: int scaleFromDensity(int,int,int,boolean)>(i38, i0, i1, 1);

        r0.<android.graphics.drawable.GradientDrawable$GradientState: int mWidth> = $i7;

     label11:
        i39 = r0.<android.graphics.drawable.GradientDrawable$GradientState: int mHeight>;

        if i39 <= 0 goto label12;

        $i6 = staticinvoke <android.graphics.drawable.Drawable: int scaleFromDensity(int,int,int,boolean)>(i39, i0, i1, 1);

        r0.<android.graphics.drawable.GradientDrawable$GradientState: int mHeight> = $i6;

     label12:
        return;
    }

    private void computeOpacity()
    {
        android.graphics.drawable.GradientDrawable$GradientState r0;
        int[] r1, $r2, $r3;
        int $i0, $i2, $i3, i4;
        float $f0;
        byte $b1;
        float[] $r4;
        android.content.res.ColorStateList $r5;
        boolean $z1, z2;

        r0 := @this: android.graphics.drawable.GradientDrawable$GradientState;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: boolean mOpaqueOverBounds> = 0;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: boolean mOpaqueOverShape> = 0;

        $r2 = r0.<android.graphics.drawable.GradientDrawable$GradientState: int[] mGradientColors>;

        if $r2 == null goto label3;

        i4 = 0;

     label1:
        r1 = r0.<android.graphics.drawable.GradientDrawable$GradientState: int[] mGradientColors>;

        $i2 = lengthof r1;

        if i4 >= $i2 goto label3;

        $i3 = r1[i4];

        $z1 = staticinvoke <android.graphics.drawable.GradientDrawable: boolean isOpaque(int)>($i3);

        if $z1 != 0 goto label2;

        return;

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        $r3 = r0.<android.graphics.drawable.GradientDrawable$GradientState: int[] mGradientColors>;

        if $r3 != null goto label4;

        $r5 = r0.<android.graphics.drawable.GradientDrawable$GradientState: android.content.res.ColorStateList mSolidColors>;

        if $r5 != null goto label4;

        return;

     label4:
        r0.<android.graphics.drawable.GradientDrawable$GradientState: boolean mOpaqueOverShape> = 1;

        z2 = 0;

        $i0 = r0.<android.graphics.drawable.GradientDrawable$GradientState: int mShape>;

        if $i0 != 0 goto label5;

        z2 = 0;

        $f0 = r0.<android.graphics.drawable.GradientDrawable$GradientState: float mRadius>;

        $b1 = $f0 cmpg 0.0F;

        if $b1 > 0 goto label5;

        z2 = 0;

        $r4 = r0.<android.graphics.drawable.GradientDrawable$GradientState: float[] mRadiusArray>;

        if $r4 != null goto label5;

        z2 = 1;

     label5:
        r0.<android.graphics.drawable.GradientDrawable$GradientState: boolean mOpaqueOverBounds> = z2;

        return;
    }

    public boolean canApplyTheme()
    {
        android.graphics.drawable.GradientDrawable$GradientState r0;
        int[] $r1, $r2, $r3, $r4, $r5, $r6, $r7;
        boolean $z0, $z1, $z2, $z3, z4;
        android.content.res.ColorStateList r8, r9, r10;

        r0 := @this: android.graphics.drawable.GradientDrawable$GradientState;

        $r1 = r0.<android.graphics.drawable.GradientDrawable$GradientState: int[] mThemeAttrs>;

        if $r1 != null goto label5;

        $r2 = r0.<android.graphics.drawable.GradientDrawable$GradientState: int[] mAttrSize>;

        if $r2 != null goto label5;

        $r3 = r0.<android.graphics.drawable.GradientDrawable$GradientState: int[] mAttrGradient>;

        if $r3 != null goto label5;

        $r4 = r0.<android.graphics.drawable.GradientDrawable$GradientState: int[] mAttrSolid>;

        if $r4 != null goto label5;

        $r5 = r0.<android.graphics.drawable.GradientDrawable$GradientState: int[] mAttrStroke>;

        if $r5 != null goto label5;

        $r6 = r0.<android.graphics.drawable.GradientDrawable$GradientState: int[] mAttrCorners>;

        if $r6 != null goto label5;

        $r7 = r0.<android.graphics.drawable.GradientDrawable$GradientState: int[] mAttrPadding>;

        if $r7 != null goto label5;

        r8 = r0.<android.graphics.drawable.GradientDrawable$GradientState: android.content.res.ColorStateList mTint>;

        if r8 == null goto label1;

        $z3 = virtualinvoke r8.<android.content.res.ColorStateList: boolean canApplyTheme()>();

        if $z3 != 0 goto label5;

     label1:
        r9 = r0.<android.graphics.drawable.GradientDrawable$GradientState: android.content.res.ColorStateList mStrokeColors>;

        if r9 == null goto label2;

        $z2 = virtualinvoke r9.<android.content.res.ColorStateList: boolean canApplyTheme()>();

        if $z2 != 0 goto label5;

     label2:
        r10 = r0.<android.graphics.drawable.GradientDrawable$GradientState: android.content.res.ColorStateList mSolidColors>;

        if r10 == null goto label3;

        $z1 = virtualinvoke r10.<android.content.res.ColorStateList: boolean canApplyTheme()>();

        if $z1 != 0 goto label5;

     label3:
        $z0 = specialinvoke r0.<android.graphics.drawable.Drawable$ConstantState: boolean canApplyTheme()>();

        if $z0 == 0 goto label4;

        goto label5;

     label4:
        z4 = 0;

        goto label6;

     label5:
        z4 = 1;

     label6:
        return z4;
    }

    public int getChangingConfigurations()
    {
        android.graphics.drawable.GradientDrawable$GradientState r0;
        int i0, $i1, $i2, $i3, i4, i5, i6;
        android.content.res.ColorStateList r1, r2, r3;

        r0 := @this: android.graphics.drawable.GradientDrawable$GradientState;

        i0 = r0.<android.graphics.drawable.GradientDrawable$GradientState: int mChangingConfigurations>;

        r1 = r0.<android.graphics.drawable.GradientDrawable$GradientState: android.content.res.ColorStateList mStrokeColors>;

        i4 = 0;

        if r1 == null goto label1;

        i5 = virtualinvoke r1.<android.content.res.ColorStateList: int getChangingConfigurations()>();

        goto label2;

     label1:
        i5 = 0;

     label2:
        r2 = r0.<android.graphics.drawable.GradientDrawable$GradientState: android.content.res.ColorStateList mSolidColors>;

        if r2 == null goto label3;

        i6 = virtualinvoke r2.<android.content.res.ColorStateList: int getChangingConfigurations()>();

        goto label4;

     label3:
        i6 = 0;

     label4:
        r3 = r0.<android.graphics.drawable.GradientDrawable$GradientState: android.content.res.ColorStateList mTint>;

        if r3 == null goto label5;

        i4 = virtualinvoke r3.<android.content.res.ColorStateList: int getChangingConfigurations()>();

     label5:
        $i1 = i0 | i5;

        $i2 = $i1 | i6;

        $i3 = $i2 | i4;

        return $i3;
    }

    public android.graphics.drawable.GradientDrawable$Orientation getOrientation()
    {
        android.graphics.drawable.GradientDrawable$GradientState r0;
        android.graphics.drawable.GradientDrawable$Orientation $r1;

        r0 := @this: android.graphics.drawable.GradientDrawable$GradientState;

        $r1 = r0.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.drawable.GradientDrawable$Orientation mOrientation>;

        return $r1;
    }

    public boolean hasCenterColor()
    {
        android.graphics.drawable.GradientDrawable$GradientState r0;
        int[] r1;
        int $i0;
        boolean z0;

        r0 := @this: android.graphics.drawable.GradientDrawable$GradientState;

        r1 = r0.<android.graphics.drawable.GradientDrawable$GradientState: int[] mGradientColors>;

        if r1 == null goto label1;

        $i0 = lengthof r1;

        if $i0 != 3 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public android.graphics.drawable.Drawable newDrawable()
    {
        android.graphics.drawable.GradientDrawable$GradientState r0;
        android.graphics.drawable.GradientDrawable $r1;

        r0 := @this: android.graphics.drawable.GradientDrawable$GradientState;

        $r1 = new android.graphics.drawable.GradientDrawable;

        specialinvoke $r1.<android.graphics.drawable.GradientDrawable: void <init>(android.graphics.drawable.GradientDrawable$GradientState,android.content.res.Resources,android.graphics.drawable.GradientDrawable$1)>(r0, null, null);

        return $r1;
    }

    public android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)
    {
        android.graphics.drawable.GradientDrawable$GradientState r0, $r3, r4;
        android.content.res.Resources r1;
        int $i0, $i1, $i2;
        android.graphics.drawable.GradientDrawable $r2;

        r0 := @this: android.graphics.drawable.GradientDrawable$GradientState;

        r1 := @parameter0: android.content.res.Resources;

        $i0 = r0.<android.graphics.drawable.GradientDrawable$GradientState: int mDensity>;

        $i1 = staticinvoke <android.graphics.drawable.Drawable: int resolveDensity(android.content.res.Resources,int)>(r1, $i0);

        $i2 = r0.<android.graphics.drawable.GradientDrawable$GradientState: int mDensity>;

        if $i1 == $i2 goto label1;

        $r3 = new android.graphics.drawable.GradientDrawable$GradientState;

        specialinvoke $r3.<android.graphics.drawable.GradientDrawable$GradientState: void <init>(android.graphics.drawable.GradientDrawable$GradientState,android.content.res.Resources)>(r0, r1);

        r4 = $r3;

        goto label2;

     label1:
        r4 = r0;

     label2:
        $r2 = new android.graphics.drawable.GradientDrawable;

        specialinvoke $r2.<android.graphics.drawable.GradientDrawable: void <init>(android.graphics.drawable.GradientDrawable$GradientState,android.content.res.Resources,android.graphics.drawable.GradientDrawable$1)>(r4, r1, null);

        return $r2;
    }

    public void setCornerRadii(float[])
    {
        android.graphics.drawable.GradientDrawable$GradientState r0;
        float[] r1;

        r0 := @this: android.graphics.drawable.GradientDrawable$GradientState;

        r1 := @parameter0: float[];

        r0.<android.graphics.drawable.GradientDrawable$GradientState: float[] mRadiusArray> = r1;

        if r1 != null goto label1;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: float mRadius> = 0.0F;

     label1:
        specialinvoke r0.<android.graphics.drawable.GradientDrawable$GradientState: void computeOpacity()>();

        return;
    }

    public void setCornerRadius(float)
    {
        android.graphics.drawable.GradientDrawable$GradientState r0;
        float f0, f1;
        byte $b0;

        r0 := @this: android.graphics.drawable.GradientDrawable$GradientState;

        f0 := @parameter0: float;

        f1 = f0;

        $b0 = f0 cmpg 0.0F;

        if $b0 >= 0 goto label1;

        f1 = 0.0F;

     label1:
        r0.<android.graphics.drawable.GradientDrawable$GradientState: float mRadius> = f1;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: float[] mRadiusArray> = null;

        specialinvoke r0.<android.graphics.drawable.GradientDrawable$GradientState: void computeOpacity()>();

        return;
    }

    public final void setDensity(int)
    {
        android.graphics.drawable.GradientDrawable$GradientState r0;
        int i0, i1, $i2;

        r0 := @this: android.graphics.drawable.GradientDrawable$GradientState;

        i0 := @parameter0: int;

        $i2 = r0.<android.graphics.drawable.GradientDrawable$GradientState: int mDensity>;

        if $i2 == i0 goto label1;

        i1 = r0.<android.graphics.drawable.GradientDrawable$GradientState: int mDensity>;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: int mDensity> = i0;

        specialinvoke r0.<android.graphics.drawable.GradientDrawable$GradientState: void applyDensityScaling(int,int)>(i1, i0);

     label1:
        return;
    }

    public void setGradientCenter(float, float)
    {
        android.graphics.drawable.GradientDrawable$GradientState r0;
        float f0, f1;

        r0 := @this: android.graphics.drawable.GradientDrawable$GradientState;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: float mCenterX> = f0;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: float mCenterY> = f1;

        return;
    }

    public void setGradientColors(int[])
    {
        android.graphics.drawable.GradientDrawable$GradientState r0;
        int[] r1;

        r0 := @this: android.graphics.drawable.GradientDrawable$GradientState;

        r1 := @parameter0: int[];

        r0.<android.graphics.drawable.GradientDrawable$GradientState: int[] mGradientColors> = r1;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: android.content.res.ColorStateList mSolidColors> = null;

        specialinvoke r0.<android.graphics.drawable.GradientDrawable$GradientState: void computeOpacity()>();

        return;
    }

    public void setGradientRadius(float, int)
    {
        android.graphics.drawable.GradientDrawable$GradientState r0;
        float f0;
        int i0;

        r0 := @this: android.graphics.drawable.GradientDrawable$GradientState;

        f0 := @parameter0: float;

        i0 := @parameter1: int;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: float mGradientRadius> = f0;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: int mGradientRadiusType> = i0;

        return;
    }

    public void setGradientType(int)
    {
        android.graphics.drawable.GradientDrawable$GradientState r0;
        int i0;

        r0 := @this: android.graphics.drawable.GradientDrawable$GradientState;

        i0 := @parameter0: int;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: int mGradient> = i0;

        return;
    }

    public void setShape(int)
    {
        android.graphics.drawable.GradientDrawable$GradientState r0;
        int i0;

        r0 := @this: android.graphics.drawable.GradientDrawable$GradientState;

        i0 := @parameter0: int;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: int mShape> = i0;

        specialinvoke r0.<android.graphics.drawable.GradientDrawable$GradientState: void computeOpacity()>();

        return;
    }

    public void setSize(int, int)
    {
        android.graphics.drawable.GradientDrawable$GradientState r0;
        int i0, i1;

        r0 := @this: android.graphics.drawable.GradientDrawable$GradientState;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: int mWidth> = i0;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: int mHeight> = i1;

        return;
    }

    public void setSolidColors(android.content.res.ColorStateList)
    {
        android.graphics.drawable.GradientDrawable$GradientState r0;
        android.content.res.ColorStateList r1;

        r0 := @this: android.graphics.drawable.GradientDrawable$GradientState;

        r1 := @parameter0: android.content.res.ColorStateList;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: int[] mGradientColors> = null;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: android.content.res.ColorStateList mSolidColors> = r1;

        specialinvoke r0.<android.graphics.drawable.GradientDrawable$GradientState: void computeOpacity()>();

        return;
    }

    public void setStroke(int, android.content.res.ColorStateList, float, float)
    {
        android.graphics.drawable.GradientDrawable$GradientState r0;
        int i0;
        android.content.res.ColorStateList r1;
        float f0, f1;

        r0 := @this: android.graphics.drawable.GradientDrawable$GradientState;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.res.ColorStateList;

        f0 := @parameter2: float;

        f1 := @parameter3: float;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: int mStrokeWidth> = i0;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: android.content.res.ColorStateList mStrokeColors> = r1;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: float mStrokeDashWidth> = f0;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: float mStrokeDashGap> = f1;

        specialinvoke r0.<android.graphics.drawable.GradientDrawable$GradientState: void computeOpacity()>();

        return;
    }
}
