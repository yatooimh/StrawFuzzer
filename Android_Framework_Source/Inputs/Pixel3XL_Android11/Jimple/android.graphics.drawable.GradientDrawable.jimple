public class android.graphics.drawable.GradientDrawable extends android.graphics.drawable.Drawable
{
    private static final float DEFAULT_INNER_RADIUS_RATIO;
    private static final android.graphics.drawable.GradientDrawable$Orientation DEFAULT_ORIENTATION;
    private static final float DEFAULT_THICKNESS_RATIO;
    public static final int LINE;
    public static final int LINEAR_GRADIENT;
    public static final int OVAL;
    public static final int RADIAL_GRADIENT;
    private static final int RADIUS_TYPE_FRACTION;
    private static final int RADIUS_TYPE_FRACTION_PARENT;
    private static final int RADIUS_TYPE_PIXELS;
    public static final int RECTANGLE;
    public static final int RING;
    public static final int SWEEP_GRADIENT;
    public static boolean sWrapNegativeAngleMeasurements;
    private int mAlpha;
    private android.graphics.BlendModeColorFilter mBlendModeColorFilter;
    private android.graphics.ColorFilter mColorFilter;
    private final android.graphics.Paint mFillPaint;
    private boolean mGradientIsDirty;
    private float mGradientRadius;
    private android.graphics.drawable.GradientDrawable$GradientState mGradientState;
    private android.graphics.Paint mLayerPaint;
    private boolean mMutated;
    private android.graphics.Rect mPadding;
    private final android.graphics.Path mPath;
    private boolean mPathIsDirty;
    private final android.graphics.RectF mRect;
    private android.graphics.Path mRingPath;
    private android.graphics.Paint mStrokePaint;

    static void <clinit>()
    {
        android.graphics.drawable.GradientDrawable$Orientation $r0;

        <android.graphics.drawable.GradientDrawable: int SWEEP_GRADIENT> = 2;

        <android.graphics.drawable.GradientDrawable: int RING> = 3;

        <android.graphics.drawable.GradientDrawable: int RECTANGLE> = 0;

        <android.graphics.drawable.GradientDrawable: int RADIUS_TYPE_PIXELS> = 0;

        <android.graphics.drawable.GradientDrawable: int RADIUS_TYPE_FRACTION_PARENT> = 2;

        <android.graphics.drawable.GradientDrawable: int RADIUS_TYPE_FRACTION> = 1;

        <android.graphics.drawable.GradientDrawable: int RADIAL_GRADIENT> = 1;

        <android.graphics.drawable.GradientDrawable: int OVAL> = 1;

        <android.graphics.drawable.GradientDrawable: int LINEAR_GRADIENT> = 0;

        <android.graphics.drawable.GradientDrawable: int LINE> = 2;

        <android.graphics.drawable.GradientDrawable: float DEFAULT_THICKNESS_RATIO> = 9.0F;

        <android.graphics.drawable.GradientDrawable: float DEFAULT_INNER_RADIUS_RATIO> = 3.0F;

        <android.graphics.drawable.GradientDrawable: boolean sWrapNegativeAngleMeasurements> = 1;

        $r0 = <android.graphics.drawable.GradientDrawable$Orientation: android.graphics.drawable.GradientDrawable$Orientation TOP_BOTTOM>;

        <android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$Orientation DEFAULT_ORIENTATION> = $r0;

        return;
    }

    public void <init>()
    {
        android.graphics.drawable.GradientDrawable r0;
        android.graphics.drawable.GradientDrawable$GradientState $r1;
        android.graphics.drawable.GradientDrawable$Orientation $r2;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        $r1 = new android.graphics.drawable.GradientDrawable$GradientState;

        $r2 = <android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$Orientation DEFAULT_ORIENTATION>;

        specialinvoke $r1.<android.graphics.drawable.GradientDrawable$GradientState: void <init>(android.graphics.drawable.GradientDrawable$Orientation,int[])>($r2, null);

        specialinvoke r0.<android.graphics.drawable.GradientDrawable: void <init>(android.graphics.drawable.GradientDrawable$GradientState,android.content.res.Resources)>($r1, null);

        return;
    }

    private void <init>(android.graphics.drawable.GradientDrawable$GradientState, android.content.res.Resources)
    {
        android.graphics.drawable.GradientDrawable r0;
        android.graphics.drawable.GradientDrawable$GradientState r1;
        android.content.res.Resources r2;
        android.graphics.Paint $r3;
        android.graphics.Path $r4;
        android.graphics.RectF $r5;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        r1 := @parameter0: android.graphics.drawable.GradientDrawable$GradientState;

        r2 := @parameter1: android.content.res.Resources;

        specialinvoke r0.<android.graphics.drawable.Drawable: void <init>()>();

        $r3 = new android.graphics.Paint;

        specialinvoke $r3.<android.graphics.Paint: void <init>(int)>(1);

        r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint> = $r3;

        r0.<android.graphics.drawable.GradientDrawable: int mAlpha> = 255;

        $r4 = new android.graphics.Path;

        specialinvoke $r4.<android.graphics.Path: void <init>()>();

        r0.<android.graphics.drawable.GradientDrawable: android.graphics.Path mPath> = $r4;

        $r5 = new android.graphics.RectF;

        specialinvoke $r5.<android.graphics.RectF: void <init>()>();

        r0.<android.graphics.drawable.GradientDrawable: android.graphics.RectF mRect> = $r5;

        r0.<android.graphics.drawable.GradientDrawable: boolean mPathIsDirty> = 1;

        r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState> = r1;

        specialinvoke r0.<android.graphics.drawable.GradientDrawable: void updateLocalState(android.content.res.Resources)>(r2);

        return;
    }

    void <init>(android.graphics.drawable.GradientDrawable$GradientState, android.content.res.Resources, android.graphics.drawable.GradientDrawable$1)
    {
        android.graphics.drawable.GradientDrawable r0;
        android.graphics.drawable.GradientDrawable$GradientState r1;
        android.content.res.Resources r2;
        android.graphics.drawable.GradientDrawable$1 r3;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        r1 := @parameter0: android.graphics.drawable.GradientDrawable$GradientState;

        r2 := @parameter1: android.content.res.Resources;

        r3 := @parameter2: android.graphics.drawable.GradientDrawable$1;

        specialinvoke r0.<android.graphics.drawable.GradientDrawable: void <init>(android.graphics.drawable.GradientDrawable$GradientState,android.content.res.Resources)>(r1, r2);

        return;
    }

    public void <init>(android.graphics.drawable.GradientDrawable$Orientation, int[])
    {
        android.graphics.drawable.GradientDrawable r0;
        android.graphics.drawable.GradientDrawable$Orientation r1;
        int[] r2;
        android.graphics.drawable.GradientDrawable$GradientState $r3;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        r1 := @parameter0: android.graphics.drawable.GradientDrawable$Orientation;

        r2 := @parameter1: int[];

        $r3 = new android.graphics.drawable.GradientDrawable$GradientState;

        specialinvoke $r3.<android.graphics.drawable.GradientDrawable$GradientState: void <init>(android.graphics.drawable.GradientDrawable$Orientation,int[])>(r1, r2);

        specialinvoke r0.<android.graphics.drawable.GradientDrawable: void <init>(android.graphics.drawable.GradientDrawable$GradientState,android.content.res.Resources)>($r3, null);

        return;
    }

    private void applyThemeChildElements(android.content.res.Resources$Theme)
    {
        android.graphics.drawable.GradientDrawable r0;
        android.graphics.drawable.GradientDrawable$GradientState r1;
        int[] $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r19, $r20;
        android.content.res.Resources $r18;
        java.lang.Throwable $r21;
        android.content.res.Resources$Theme r22;
        android.content.res.TypedArray r23, r24, r26, r27, r28, r29;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        r22 := @parameter0: android.content.res.Resources$Theme;

        r1 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $r2 = r1.<android.graphics.drawable.GradientDrawable$GradientState: int[] mAttrSize>;

        if $r2 == null goto label1;

        $r20 = r1.<android.graphics.drawable.GradientDrawable$GradientState: int[] mAttrSize>;

        $r19 = <com.android.internal.R$styleable: int[] GradientDrawableSize>;

        r23 = virtualinvoke r22.<android.content.res.Resources$Theme: android.content.res.TypedArray resolveAttributes(int[],int[])>($r20, $r19);

        specialinvoke r0.<android.graphics.drawable.GradientDrawable: void updateGradientDrawableSize(android.content.res.TypedArray)>(r23);

        virtualinvoke r23.<android.content.res.TypedArray: void recycle()>();

     label1:
        $r3 = r1.<android.graphics.drawable.GradientDrawable$GradientState: int[] mAttrGradient>;

        if $r3 == null goto label5;

        $r17 = r1.<android.graphics.drawable.GradientDrawable$GradientState: int[] mAttrGradient>;

        $r16 = <com.android.internal.R$styleable: int[] GradientDrawableGradient>;

        r24 = virtualinvoke r22.<android.content.res.Resources$Theme: android.content.res.TypedArray resolveAttributes(int[],int[])>($r17, $r16);

     label2:
        $r18 = virtualinvoke r22.<android.content.res.Resources$Theme: android.content.res.Resources getResources()>();

        specialinvoke r0.<android.graphics.drawable.GradientDrawable: void updateGradientDrawableGradient(android.content.res.Resources,android.content.res.TypedArray)>($r18, r24);

     label3:
        virtualinvoke r24.<android.content.res.TypedArray: void recycle()>();

        goto label5;

     label4:
        $r21 := @caughtexception;

        virtualinvoke r24.<android.content.res.TypedArray: void recycle()>();

        throw $r21;

     label5:
        $r4 = r1.<android.graphics.drawable.GradientDrawable$GradientState: int[] mAttrSolid>;

        if $r4 == null goto label6;

        $r15 = r1.<android.graphics.drawable.GradientDrawable$GradientState: int[] mAttrSolid>;

        $r14 = <com.android.internal.R$styleable: int[] GradientDrawableSolid>;

        r26 = virtualinvoke r22.<android.content.res.Resources$Theme: android.content.res.TypedArray resolveAttributes(int[],int[])>($r15, $r14);

        specialinvoke r0.<android.graphics.drawable.GradientDrawable: void updateGradientDrawableSolid(android.content.res.TypedArray)>(r26);

        virtualinvoke r26.<android.content.res.TypedArray: void recycle()>();

     label6:
        $r5 = r1.<android.graphics.drawable.GradientDrawable$GradientState: int[] mAttrStroke>;

        if $r5 == null goto label7;

        $r13 = r1.<android.graphics.drawable.GradientDrawable$GradientState: int[] mAttrStroke>;

        $r12 = <com.android.internal.R$styleable: int[] GradientDrawableStroke>;

        r27 = virtualinvoke r22.<android.content.res.Resources$Theme: android.content.res.TypedArray resolveAttributes(int[],int[])>($r13, $r12);

        specialinvoke r0.<android.graphics.drawable.GradientDrawable: void updateGradientDrawableStroke(android.content.res.TypedArray)>(r27);

        virtualinvoke r27.<android.content.res.TypedArray: void recycle()>();

     label7:
        $r6 = r1.<android.graphics.drawable.GradientDrawable$GradientState: int[] mAttrCorners>;

        if $r6 == null goto label8;

        $r11 = r1.<android.graphics.drawable.GradientDrawable$GradientState: int[] mAttrCorners>;

        $r10 = <com.android.internal.R$styleable: int[] DrawableCorners>;

        r28 = virtualinvoke r22.<android.content.res.Resources$Theme: android.content.res.TypedArray resolveAttributes(int[],int[])>($r11, $r10);

        specialinvoke r0.<android.graphics.drawable.GradientDrawable: void updateDrawableCorners(android.content.res.TypedArray)>(r28);

        virtualinvoke r28.<android.content.res.TypedArray: void recycle()>();

     label8:
        $r7 = r1.<android.graphics.drawable.GradientDrawable$GradientState: int[] mAttrPadding>;

        if $r7 == null goto label9;

        $r9 = r1.<android.graphics.drawable.GradientDrawable$GradientState: int[] mAttrPadding>;

        $r8 = <com.android.internal.R$styleable: int[] GradientDrawablePadding>;

        r29 = virtualinvoke r22.<android.content.res.Resources$Theme: android.content.res.TypedArray resolveAttributes(int[],int[])>($r9, $r8);

        specialinvoke r0.<android.graphics.drawable.GradientDrawable: void updateGradientDrawablePadding(android.content.res.TypedArray)>(r29);

        virtualinvoke r29.<android.content.res.TypedArray: void recycle()>();

     label9:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    private void buildPathIfDirty()
    {
        android.graphics.drawable.GradientDrawable r0;
        android.graphics.drawable.GradientDrawable$GradientState r1;
        boolean $z0;
        android.graphics.Path $r2, $r6;
        android.graphics.Path$Direction $r3;
        float[] $r4;
        android.graphics.RectF $r5;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        r1 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $z0 = r0.<android.graphics.drawable.GradientDrawable: boolean mPathIsDirty>;

        if $z0 == 0 goto label1;

        specialinvoke r0.<android.graphics.drawable.GradientDrawable: boolean ensureValidRect()>();

        $r2 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Path mPath>;

        virtualinvoke $r2.<android.graphics.Path: void reset()>();

        $r6 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Path mPath>;

        $r5 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.RectF mRect>;

        $r4 = r1.<android.graphics.drawable.GradientDrawable$GradientState: float[] mRadiusArray>;

        $r3 = <android.graphics.Path$Direction: android.graphics.Path$Direction CW>;

        virtualinvoke $r6.<android.graphics.Path: void addRoundRect(android.graphics.RectF,float[],android.graphics.Path$Direction)>($r5, $r4, $r3);

        r0.<android.graphics.drawable.GradientDrawable: boolean mPathIsDirty> = 0;

     label1:
        return;
    }

    private android.graphics.Path buildRing(android.graphics.drawable.GradientDrawable$GradientState)
    {
        android.graphics.drawable.GradientDrawable r0;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, f18, f19, f20;
        android.graphics.Path $r1, $r9, $r10, r15, r16;
        boolean $z0, $z1, $z2;
        android.graphics.RectF $r2, $r3, $r4, $r5;
        int $i0, $i1, $i4, $i5, $i6;
        byte $b2, $b3;
        android.graphics.Path$Direction $r6, $r7;
        android.graphics.Path$FillType $r8;
        android.graphics.drawable.GradientDrawable$GradientState r11;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        r11 := @parameter0: android.graphics.drawable.GradientDrawable$GradientState;

        $r1 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Path mRingPath>;

        if $r1 == null goto label02;

        $z1 = r11.<android.graphics.drawable.GradientDrawable$GradientState: boolean mUseLevelForShape>;

        if $z1 == 0 goto label01;

        $z2 = r0.<android.graphics.drawable.GradientDrawable: boolean mPathIsDirty>;

        if $z2 != 0 goto label02;

     label01:
        $r10 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Path mRingPath>;

        return $r10;

     label02:
        r0.<android.graphics.drawable.GradientDrawable: boolean mPathIsDirty> = 0;

        $z0 = r11.<android.graphics.drawable.GradientDrawable$GradientState: boolean mUseLevelForShape>;

        if $z0 == 0 goto label03;

        $i6 = virtualinvoke r0.<android.graphics.drawable.GradientDrawable: int getLevel()>();

        $f16 = (float) $i6;

        $f17 = $f16 * 360.0F;

        f18 = $f17 / 10000.0F;

        goto label04;

     label03:
        f18 = 360.0F;

     label04:
        $r2 = new android.graphics.RectF;

        $r3 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.RectF mRect>;

        specialinvoke $r2.<android.graphics.RectF: void <init>(android.graphics.RectF)>($r3);

        $f2 = virtualinvoke $r2.<android.graphics.RectF: float width()>();

        f0 = $f2 / 2.0F;

        $f3 = virtualinvoke $r2.<android.graphics.RectF: float height()>();

        f1 = $f3 / 2.0F;

        $i0 = r11.<android.graphics.drawable.GradientDrawable$GradientState: int mThickness>;

        if $i0 == -1 goto label05;

        $i5 = r11.<android.graphics.drawable.GradientDrawable$GradientState: int mThickness>;

        f19 = (float) $i5;

        goto label06;

     label05:
        $f4 = virtualinvoke $r2.<android.graphics.RectF: float width()>();

        $f5 = r11.<android.graphics.drawable.GradientDrawable$GradientState: float mThicknessRatio>;

        f19 = $f4 / $f5;

     label06:
        $i1 = r11.<android.graphics.drawable.GradientDrawable$GradientState: int mInnerRadius>;

        if $i1 == -1 goto label07;

        $i4 = r11.<android.graphics.drawable.GradientDrawable$GradientState: int mInnerRadius>;

        f20 = (float) $i4;

        goto label08;

     label07:
        $f6 = virtualinvoke $r2.<android.graphics.RectF: float width()>();

        $f7 = r11.<android.graphics.drawable.GradientDrawable$GradientState: float mInnerRadiusRatio>;

        f20 = $f6 / $f7;

     label08:
        $r4 = new android.graphics.RectF;

        specialinvoke $r4.<android.graphics.RectF: void <init>(android.graphics.RectF)>($r2);

        $f9 = f0 - f20;

        $f8 = f1 - f20;

        virtualinvoke $r4.<android.graphics.RectF: void inset(float,float)>($f9, $f8);

        $r5 = new android.graphics.RectF;

        specialinvoke $r5.<android.graphics.RectF: void <init>(android.graphics.RectF)>($r4);

        $f11 = neg f19;

        $f10 = neg f19;

        virtualinvoke $r5.<android.graphics.RectF: void inset(float,float)>($f11, $f10);

        r15 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Path mRingPath>;

        if r15 != null goto label09;

        $r9 = new android.graphics.Path;

        specialinvoke $r9.<android.graphics.Path: void <init>()>();

        r0.<android.graphics.drawable.GradientDrawable: android.graphics.Path mRingPath> = $r9;

        goto label10;

     label09:
        virtualinvoke r15.<android.graphics.Path: void reset()>();

     label10:
        r16 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Path mRingPath>;

        $b2 = f18 cmpg 360.0F;

        if $b2 >= 0 goto label11;

        $b3 = f18 cmpl -360.0F;

        if $b3 <= 0 goto label11;

        $r8 = <android.graphics.Path$FillType: android.graphics.Path$FillType EVEN_ODD>;

        virtualinvoke r16.<android.graphics.Path: void setFillType(android.graphics.Path$FillType)>($r8);

        $f12 = f0 + f20;

        virtualinvoke r16.<android.graphics.Path: void moveTo(float,float)>($f12, f1);

        $f13 = f0 + f20;

        $f14 = $f13 + f19;

        virtualinvoke r16.<android.graphics.Path: void lineTo(float,float)>($f14, f1);

        virtualinvoke r16.<android.graphics.Path: void arcTo(android.graphics.RectF,float,float,boolean)>($r5, 0.0F, f18, 0);

        $f15 = neg f18;

        virtualinvoke r16.<android.graphics.Path: void arcTo(android.graphics.RectF,float,float,boolean)>($r4, f18, $f15, 0);

        virtualinvoke r16.<android.graphics.Path: void close()>();

        goto label12;

     label11:
        $r6 = <android.graphics.Path$Direction: android.graphics.Path$Direction CW>;

        virtualinvoke r16.<android.graphics.Path: void addOval(android.graphics.RectF,android.graphics.Path$Direction)>($r5, $r6);

        $r7 = <android.graphics.Path$Direction: android.graphics.Path$Direction CCW>;

        virtualinvoke r16.<android.graphics.Path: void addOval(android.graphics.RectF,android.graphics.Path$Direction)>($r4, $r7);

     label12:
        return r16;
    }

    private boolean ensureValidRect()
    {
        android.graphics.drawable.GradientDrawable r0;
        android.graphics.drawable.GradientDrawable$GradientState r1;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, $f34, $f35, $f36, $f37, $f38, $f39, $f40, $f41, $f42, $f43, f44, f45, f46, f47, f48, f49, f50, f51, f52, f53, f54, f55, f56, f57, f58, f59, f60, f61, f62, f63, f64, f65, f66, f67, f68, f69, f70, f71, f72, f73, f74, f75, f76, f77, f78, f79, $f80, f81, $f82, f83;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, i24, $i25, $i26, $i27, $i28, i29;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        android.graphics.RectF $r2, r17, $r27;
        android.graphics.Paint $r3, $r5, $r9, r15, $r18;
        android.graphics.SweepGradient $r4;
        byte $b15;
        android.graphics.RadialGradient $r7;
        android.graphics.Shader$TileMode $r8, $r21;
        android.graphics.drawable.GradientDrawable$Orientation $r11;
        int[] $r12, r16, r22, r24;
        android.graphics.Rect r14;
        android.graphics.LinearGradient $r19;
        float[] $r20, r23, r25;
        android.content.res.ColorStateList $r26;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        $z0 = r0.<android.graphics.drawable.GradientDrawable: boolean mGradientIsDirty>;

        if $z0 == 0 goto label30;

        r0.<android.graphics.drawable.GradientDrawable: boolean mGradientIsDirty> = 0;

        r14 = virtualinvoke r0.<android.graphics.drawable.GradientDrawable: android.graphics.Rect getBounds()>();

        f44 = 0.0F;

        r15 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        if r15 == null goto label01;

        $f43 = virtualinvoke r15.<android.graphics.Paint: float getStrokeWidth()>();

        f44 = $f43 * 0.5F;

     label01:
        r1 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $r2 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.RectF mRect>;

        $i1 = r14.<android.graphics.Rect: int left>;

        $f1 = (float) $i1;

        $f8 = $f1 + f44;

        $i2 = r14.<android.graphics.Rect: int top>;

        $f2 = (float) $i2;

        $f7 = $f2 + f44;

        $i3 = r14.<android.graphics.Rect: int right>;

        $f3 = (float) $i3;

        $f6 = $f3 - f44;

        $i4 = r14.<android.graphics.Rect: int bottom>;

        $f4 = (float) $i4;

        $f5 = $f4 - f44;

        virtualinvoke $r2.<android.graphics.RectF: void set(float,float,float,float)>($f8, $f7, $f6, $f5);

        r16 = r1.<android.graphics.drawable.GradientDrawable$GradientState: int[] mGradientColors>;

        if r16 == null goto label30;

        r17 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.RectF mRect>;

        i24 = r1.<android.graphics.drawable.GradientDrawable$GradientState: int mGradient>;

        f45 = 1.0F;

        if i24 != 0 goto label12;

        $z2 = r1.<android.graphics.drawable.GradientDrawable$GradientState: boolean mUseLevel>;

        if $z2 == 0 goto label02;

        $i23 = virtualinvoke r0.<android.graphics.drawable.GradientDrawable: int getLevel()>();

        $f42 = (float) $i23;

        f45 = $f42 / 10000.0F;

     label02:
        $r12 = <android.graphics.drawable.GradientDrawable$1: int[] $SwitchMap$android$graphics$drawable$GradientDrawable$Orientation>;

        $r11 = r1.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.drawable.GradientDrawable$Orientation mOrientation>;

        $i21 = virtualinvoke $r11.<android.graphics.drawable.GradientDrawable$Orientation: int ordinal()>();

        $i22 = $r12[$i21];

        tableswitch($i22)
        {
            case 1: goto label10;
            case 2: goto label09;
            case 3: goto label08;
            case 4: goto label07;
            case 5: goto label06;
            case 6: goto label05;
            case 7: goto label04;
            default: goto label03;
        };

     label03:
        f46 = r17.<android.graphics.RectF: float left>;

        f47 = r17.<android.graphics.RectF: float top>;

        $f40 = r17.<android.graphics.RectF: float right>;

        f48 = $f40 * f45;

        $f41 = r17.<android.graphics.RectF: float bottom>;

        f49 = $f41 * f45;

        f50 = f46;

        goto label11;

     label04:
        f51 = r17.<android.graphics.RectF: float left>;

        f47 = r17.<android.graphics.RectF: float top>;

        $f30 = r17.<android.graphics.RectF: float right>;

        f48 = $f30 * f45;

        f49 = f47;

        f50 = f51;

        goto label11;

     label05:
        f52 = r17.<android.graphics.RectF: float left>;

        f47 = r17.<android.graphics.RectF: float bottom>;

        $f31 = r17.<android.graphics.RectF: float right>;

        f48 = $f31 * f45;

        $f32 = r17.<android.graphics.RectF: float top>;

        f49 = $f32 * f45;

        f50 = f52;

        goto label11;

     label06:
        f53 = r17.<android.graphics.RectF: float left>;

        f54 = r17.<android.graphics.RectF: float bottom>;

        f48 = f53;

        $f33 = r17.<android.graphics.RectF: float top>;

        f49 = $f33 * f45;

        f50 = f53;

        f47 = f54;

        goto label11;

     label07:
        f55 = r17.<android.graphics.RectF: float right>;

        f47 = r17.<android.graphics.RectF: float bottom>;

        $f34 = r17.<android.graphics.RectF: float left>;

        f48 = $f34 * f45;

        $f35 = r17.<android.graphics.RectF: float top>;

        f49 = $f35 * f45;

        f50 = f55;

        goto label11;

     label08:
        f56 = r17.<android.graphics.RectF: float right>;

        f47 = r17.<android.graphics.RectF: float top>;

        $f36 = r17.<android.graphics.RectF: float left>;

        f48 = $f36 * f45;

        f49 = f47;

        f50 = f56;

        goto label11;

     label09:
        f57 = r17.<android.graphics.RectF: float right>;

        f47 = r17.<android.graphics.RectF: float top>;

        $f37 = r17.<android.graphics.RectF: float left>;

        f48 = $f37 * f45;

        $f38 = r17.<android.graphics.RectF: float bottom>;

        f49 = $f38 * f45;

        f50 = f57;

        goto label11;

     label10:
        f58 = r17.<android.graphics.RectF: float left>;

        f47 = r17.<android.graphics.RectF: float top>;

        f48 = f58;

        $f39 = r17.<android.graphics.RectF: float bottom>;

        f49 = $f39 * f45;

        f50 = f58;

     label11:
        $r18 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        $r19 = new android.graphics.LinearGradient;

        $r20 = r1.<android.graphics.drawable.GradientDrawable$GradientState: float[] mPositions>;

        $r21 = <android.graphics.Shader$TileMode: android.graphics.Shader$TileMode CLAMP>;

        specialinvoke $r19.<android.graphics.LinearGradient: void <init>(float,float,float,float,int[],float[],android.graphics.Shader$TileMode)>(f50, f47, f48, f49, r16, $r20, $r21);

        virtualinvoke $r18.<android.graphics.Paint: android.graphics.Shader setShader(android.graphics.Shader)>($r19);

        goto label29;

     label12:
        $i5 = r1.<android.graphics.drawable.GradientDrawable$GradientState: int mGradient>;

        if $i5 != 1 goto label21;

        f59 = r17.<android.graphics.RectF: float left>;

        f60 = r17.<android.graphics.RectF: float right>;

        f61 = r17.<android.graphics.RectF: float left>;

        f62 = r1.<android.graphics.drawable.GradientDrawable$GradientState: float mCenterX>;

        f0 = r17.<android.graphics.RectF: float top>;

        f63 = r17.<android.graphics.RectF: float bottom>;

        f64 = r17.<android.graphics.RectF: float top>;

        f65 = r1.<android.graphics.drawable.GradientDrawable$GradientState: float mCenterY>;

        f66 = r1.<android.graphics.drawable.GradientDrawable$GradientState: float mGradientRadius>;

        $i13 = r1.<android.graphics.drawable.GradientDrawable$GradientState: int mGradientRadiusType>;

        if $i13 != 1 goto label17;

        $i17 = r1.<android.graphics.drawable.GradientDrawable$GradientState: int mWidth>;

        if $i17 < 0 goto label13;

        $i20 = r1.<android.graphics.drawable.GradientDrawable$GradientState: int mWidth>;

        f67 = (float) $i20;

        goto label14;

     label13:
        f67 = virtualinvoke r17.<android.graphics.RectF: float width()>();

     label14:
        $i18 = r1.<android.graphics.drawable.GradientDrawable$GradientState: int mHeight>;

        if $i18 < 0 goto label15;

        $i19 = r1.<android.graphics.drawable.GradientDrawable$GradientState: int mHeight>;

        f68 = (float) $i19;

        goto label16;

     label15:
        f68 = virtualinvoke r17.<android.graphics.RectF: float height()>();

     label16:
        $f29 = staticinvoke <java.lang.Math: float min(float,float)>(f67, f68);

        f69 = f66 * $f29;

        goto label18;

     label17:
        f69 = f66;

        $i14 = r1.<android.graphics.drawable.GradientDrawable$GradientState: int mGradientRadiusType>;

        if $i14 != 2 goto label18;

        $f26 = virtualinvoke r17.<android.graphics.RectF: float width()>();

        $f27 = virtualinvoke r17.<android.graphics.RectF: float height()>();

        $f28 = staticinvoke <java.lang.Math: float min(float,float)>($f26, $f27);

        f69 = f66 * $f28;

        goto label18;

     label18:
        f70 = f69;

        $z3 = r1.<android.graphics.drawable.GradientDrawable$GradientState: boolean mUseLevel>;

        if $z3 == 0 goto label19;

        $i16 = virtualinvoke r0.<android.graphics.drawable.GradientDrawable: int getLevel()>();

        $f24 = (float) $i16;

        $f25 = $f24 / 10000.0F;

        f70 = f69 * $f25;

     label19:
        r0.<android.graphics.drawable.GradientDrawable: float mGradientRadius> = f70;

        f71 = f70;

        $b15 = f70 cmpg 0.0F;

        if $b15 > 0 goto label20;

        f71 = 0.001F;

     label20:
        $r9 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        $r7 = new android.graphics.RadialGradient;

        $f18 = f60 - f61;

        $f19 = $f18 * f62;

        $f23 = f59 + $f19;

        $f20 = f63 - f64;

        $f21 = $f20 * f65;

        $f22 = f0 + $f21;

        $r8 = <android.graphics.Shader$TileMode: android.graphics.Shader$TileMode CLAMP>;

        specialinvoke $r7.<android.graphics.RadialGradient: void <init>(float,float,float,int[],float[],android.graphics.Shader$TileMode)>($f23, $f22, f71, r16, null, $r8);

        virtualinvoke $r9.<android.graphics.Paint: android.graphics.Shader setShader(android.graphics.Shader)>($r7);

        goto label29;

     label21:
        $i6 = r1.<android.graphics.drawable.GradientDrawable$GradientState: int mGradient>;

        if $i6 != 2 goto label29;

        f72 = r17.<android.graphics.RectF: float left>;

        f73 = r17.<android.graphics.RectF: float right>;

        f74 = r17.<android.graphics.RectF: float left>;

        f75 = r1.<android.graphics.drawable.GradientDrawable$GradientState: float mCenterX>;

        f76 = r17.<android.graphics.RectF: float top>;

        f77 = r17.<android.graphics.RectF: float bottom>;

        f78 = r17.<android.graphics.RectF: float top>;

        f79 = r1.<android.graphics.drawable.GradientDrawable$GradientState: float mCenterY>;

        r22 = r16;

        r23 = null;

        $z1 = r1.<android.graphics.drawable.GradientDrawable$GradientState: boolean mUseLevel>;

        if $z1 == 0 goto label28;

        r24 = r1.<android.graphics.drawable.GradientDrawable$GradientState: int[] mTempColors>;

        i0 = lengthof r16;

        if r24 == null goto label22;

        r22 = r24;

        $i12 = lengthof r24;

        $i11 = i0 + 1;

        if $i12 == $i11 goto label23;

     label22:
        $i7 = i0 + 1;

        r22 = newarray (int)[$i7];

        r1.<android.graphics.drawable.GradientDrawable$GradientState: int[] mTempColors> = r22;

     label23:
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r16, 0, r22, 0, i0);

        $i25 = i0 - 1;

        $i26 = r16[$i25];

        r22[i0] = $i26;

        r25 = r1.<android.graphics.drawable.GradientDrawable$GradientState: float[] mTempPositions>;

        $i27 = i0 - 1;

        $f80 = (float) $i27;

        f81 = 1.0F / $f80;

        if r25 == null goto label24;

        r23 = r25;

        $i10 = lengthof r25;

        $i9 = i0 + 1;

        if $i10 == $i9 goto label25;

     label24:
        $i8 = i0 + 1;

        r23 = newarray (float)[$i8];

        r1.<android.graphics.drawable.GradientDrawable$GradientState: float[] mTempPositions> = r23;

     label25:
        $i28 = virtualinvoke r0.<android.graphics.drawable.GradientDrawable: int getLevel()>();

        $f82 = (float) $i28;

        f83 = $f82 / 10000.0F;

        i29 = 0;

     label26:
        if i29 >= i0 goto label27;

        $f15 = (float) i29;

        $f16 = $f15 * f81;

        $f17 = $f16 * f83;

        r23[i29] = $f17;

        i29 = i29 + 1;

        goto label26;

     label27:
        r23[i0] = 1.0F;

     label28:
        $r5 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        $r4 = new android.graphics.SweepGradient;

        $f9 = f73 - f74;

        $f10 = $f9 * f75;

        $f14 = f72 + $f10;

        $f11 = f77 - f78;

        $f12 = $f11 * f79;

        $f13 = f76 + $f12;

        specialinvoke $r4.<android.graphics.SweepGradient: void <init>(float,float,int[],float[])>($f14, $f13, r22, r23);

        virtualinvoke $r5.<android.graphics.Paint: android.graphics.Shader setShader(android.graphics.Shader)>($r4);

     label29:
        $r26 = r1.<android.graphics.drawable.GradientDrawable$GradientState: android.content.res.ColorStateList mSolidColors>;

        if $r26 != null goto label30;

        $r3 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        virtualinvoke $r3.<android.graphics.Paint: void setColor(int)>(-16777216);

     label30:
        $r27 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.RectF mRect>;

        $z4 = virtualinvoke $r27.<android.graphics.RectF: boolean isEmpty()>();

        $z5 = $z4 ^ 1;

        return $z5;
    }

    private static float getFloatOrFraction(android.content.res.TypedArray, int, float)
    {
        int $i0, i1;
        android.content.res.TypedArray r0;
        float f0;
        android.util.TypedValue r1;
        boolean z0;

        r0 := @parameter0: android.content.res.TypedArray;

        i1 := @parameter1: int;

        f0 := @parameter2: float;

        r1 = virtualinvoke r0.<android.content.res.TypedArray: android.util.TypedValue peekValue(int)>(i1);

        if r1 == null goto label4;

        $i0 = r1.<android.util.TypedValue: int type>;

        if $i0 != 6 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        if z0 == 0 goto label3;

        f0 = virtualinvoke r1.<android.util.TypedValue: float getFraction(float,float)>(1.0F, 1.0F);

        goto label4;

     label3:
        f0 = virtualinvoke r1.<android.util.TypedValue: float getFloat()>();

     label4:
        return f0;
    }

    private void inflateChildElements(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.graphics.drawable.GradientDrawable r0;
        android.content.res.Resources r1;
        org.xmlpull.v1.XmlPullParser r2;
        android.util.AttributeSet r3;
        android.content.res.Resources$Theme r4;
        int i0, i1, i2, $i3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.StringBuilder $r6;
        java.lang.String $r9, r16;
        int[] $r10, $r11, $r12, $r13, $r14, $r15;
        android.content.res.TypedArray r17, r18, r19, r20, r21, r22;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        r1 := @parameter0: android.content.res.Resources;

        r2 := @parameter1: org.xmlpull.v1.XmlPullParser;

        r3 := @parameter2: android.util.AttributeSet;

        r4 := @parameter3: android.content.res.Resources$Theme;

        $i3 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        i0 = $i3 + 1;

     label01:
        i1 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i1 == 1 goto label12;

        i2 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if i2 >= i0 goto label02;

        if i1 == 3 goto label12;

     label02:
        if i1 == 2 goto label03;

        goto label01;

     label03:
        if i2 <= i0 goto label04;

        goto label01;

     label04:
        r16 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke r16.<java.lang.String: boolean equals(java.lang.Object)>("size");

        if $z0 == 0 goto label05;

        $r15 = <com.android.internal.R$styleable: int[] GradientDrawableSize>;

        r17 = staticinvoke <android.graphics.drawable.GradientDrawable: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>(r1, r4, r3, $r15);

        specialinvoke r0.<android.graphics.drawable.GradientDrawable: void updateGradientDrawableSize(android.content.res.TypedArray)>(r17);

        virtualinvoke r17.<android.content.res.TypedArray: void recycle()>();

        goto label11;

     label05:
        $z1 = virtualinvoke r16.<java.lang.String: boolean equals(java.lang.Object)>("gradient");

        if $z1 == 0 goto label06;

        $r14 = <com.android.internal.R$styleable: int[] GradientDrawableGradient>;

        r18 = staticinvoke <android.graphics.drawable.GradientDrawable: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>(r1, r4, r3, $r14);

        specialinvoke r0.<android.graphics.drawable.GradientDrawable: void updateGradientDrawableGradient(android.content.res.Resources,android.content.res.TypedArray)>(r1, r18);

        virtualinvoke r18.<android.content.res.TypedArray: void recycle()>();

        goto label11;

     label06:
        $z2 = virtualinvoke r16.<java.lang.String: boolean equals(java.lang.Object)>("solid");

        if $z2 == 0 goto label07;

        $r13 = <com.android.internal.R$styleable: int[] GradientDrawableSolid>;

        r19 = staticinvoke <android.graphics.drawable.GradientDrawable: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>(r1, r4, r3, $r13);

        specialinvoke r0.<android.graphics.drawable.GradientDrawable: void updateGradientDrawableSolid(android.content.res.TypedArray)>(r19);

        virtualinvoke r19.<android.content.res.TypedArray: void recycle()>();

        goto label11;

     label07:
        $z3 = virtualinvoke r16.<java.lang.String: boolean equals(java.lang.Object)>("stroke");

        if $z3 == 0 goto label08;

        $r12 = <com.android.internal.R$styleable: int[] GradientDrawableStroke>;

        r20 = staticinvoke <android.graphics.drawable.GradientDrawable: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>(r1, r4, r3, $r12);

        specialinvoke r0.<android.graphics.drawable.GradientDrawable: void updateGradientDrawableStroke(android.content.res.TypedArray)>(r20);

        virtualinvoke r20.<android.content.res.TypedArray: void recycle()>();

        goto label11;

     label08:
        $z4 = virtualinvoke r16.<java.lang.String: boolean equals(java.lang.Object)>("corners");

        if $z4 == 0 goto label09;

        $r11 = <com.android.internal.R$styleable: int[] DrawableCorners>;

        r21 = staticinvoke <android.graphics.drawable.GradientDrawable: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>(r1, r4, r3, $r11);

        specialinvoke r0.<android.graphics.drawable.GradientDrawable: void updateDrawableCorners(android.content.res.TypedArray)>(r21);

        virtualinvoke r21.<android.content.res.TypedArray: void recycle()>();

        goto label11;

     label09:
        $z5 = virtualinvoke r16.<java.lang.String: boolean equals(java.lang.Object)>("padding");

        if $z5 == 0 goto label10;

        $r10 = <com.android.internal.R$styleable: int[] GradientDrawablePadding>;

        r22 = staticinvoke <android.graphics.drawable.GradientDrawable: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>(r1, r4, r3, $r10);

        specialinvoke r0.<android.graphics.drawable.GradientDrawable: void updateGradientDrawablePadding(android.content.res.TypedArray)>(r22);

        virtualinvoke r22.<android.content.res.TypedArray: void recycle()>();

        goto label11;

     label10:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad element under <shape>: ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("drawable", $r9);

     label11:
        goto label01;

     label12:
        return;
    }

    static boolean isOpaque(int)
    {
        int i0, $i1, $i2;
        boolean z0;

        i0 := @parameter0: int;

        $i1 = i0 >> 24;

        $i2 = $i1 & 255;

        if $i2 != 255 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private boolean isOpaqueForState()
    {
        android.graphics.drawable.GradientDrawable r0;
        android.graphics.Paint r1, $r3;
        android.graphics.drawable.GradientDrawable$GradientState $r2, $r4;
        int $i0, $i1, $i2;
        boolean $z0, $z1;
        int[] $r5;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        $r2 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $i0 = $r2.<android.graphics.drawable.GradientDrawable$GradientState: int mStrokeWidth>;

        if $i0 < 0 goto label1;

        r1 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        if r1 == null goto label1;

        $i2 = virtualinvoke r1.<android.graphics.Paint: int getColor()>();

        $z1 = staticinvoke <android.graphics.drawable.GradientDrawable: boolean isOpaque(int)>($i2);

        if $z1 != 0 goto label1;

        return 0;

     label1:
        $r4 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $r5 = $r4.<android.graphics.drawable.GradientDrawable$GradientState: int[] mGradientColors>;

        if $r5 != null goto label2;

        $r3 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        $i1 = virtualinvoke $r3.<android.graphics.Paint: int getColor()>();

        $z0 = staticinvoke <android.graphics.drawable.GradientDrawable: boolean isOpaque(int)>($i1);

        if $z0 != 0 goto label2;

        return 0;

     label2:
        return 1;
    }

    private int modulateAlpha(int)
    {
        android.graphics.drawable.GradientDrawable r0;
        int i0, i1, $i2, $i3, $i4, $i5;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        i0 := @parameter0: int;

        i1 = r0.<android.graphics.drawable.GradientDrawable: int mAlpha>;

        $i2 = i1 >> 7;

        $i3 = i1 + $i2;

        $i4 = i0 * $i3;

        $i5 = $i4 >> 8;

        return $i5;
    }

    private void setStrokeInternal(int, int, float, float)
    {
        android.graphics.drawable.GradientDrawable r0;
        int i0, i1;
        float f0, f1, $f2;
        android.graphics.Paint $r1, $r2, $r3, $r4, $r8;
        byte $b2;
        android.graphics.DashPathEffect $r6, r11;
        float[] $r7;
        android.graphics.Paint$Style $r9;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        f0 := @parameter2: float;

        f1 := @parameter3: float;

        $r1 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        if $r1 != null goto label1;

        $r8 = new android.graphics.Paint;

        specialinvoke $r8.<android.graphics.Paint: void <init>(int)>(1);

        r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint> = $r8;

        $r9 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke $r8.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r9);

     label1:
        $r2 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        $f2 = (float) i0;

        virtualinvoke $r2.<android.graphics.Paint: void setStrokeWidth(float)>($f2);

        $r3 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        virtualinvoke $r3.<android.graphics.Paint: void setColor(int)>(i1);

        r11 = null;

        $b2 = f0 cmpl 0.0F;

        if $b2 <= 0 goto label2;

        $r6 = new android.graphics.DashPathEffect;

        $r7 = newarray (float)[2];

        $r7[0] = f0;

        $r7[1] = f1;

        specialinvoke $r6.<android.graphics.DashPathEffect: void <init>(float[],float)>($r7, 0.0F);

        r11 = $r6;

     label2:
        $r4 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        virtualinvoke $r4.<android.graphics.Paint: android.graphics.PathEffect setPathEffect(android.graphics.PathEffect)>(r11);

        r0.<android.graphics.drawable.GradientDrawable: boolean mGradientIsDirty> = 1;

        virtualinvoke r0.<android.graphics.drawable.GradientDrawable: void invalidateSelf()>();

        return;
    }

    private void updateDrawableCorners(android.content.res.TypedArray)
    {
        android.graphics.drawable.GradientDrawable r0;
        android.content.res.TypedArray r1;
        android.graphics.drawable.GradientDrawable$GradientState r2;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8;
        int[] $r3;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9;
        float[] $r4;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        r1 := @parameter0: android.content.res.TypedArray;

        r2 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $i5 = r2.<android.graphics.drawable.GradientDrawable$GradientState: int mChangingConfigurations>;

        $i6 = virtualinvoke r1.<android.content.res.TypedArray: int getChangingConfigurations()>();

        $i7 = $i5 | $i6;

        r2.<android.graphics.drawable.GradientDrawable$GradientState: int mChangingConfigurations> = $i7;

        $r3 = virtualinvoke r1.<android.content.res.TypedArray: int[] extractThemeAttrs()>();

        r2.<android.graphics.drawable.GradientDrawable$GradientState: int[] mAttrCorners> = $r3;

        $f0 = r2.<android.graphics.drawable.GradientDrawable$GradientState: float mRadius>;

        $i8 = (int) $f0;

        i0 = virtualinvoke r1.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(0, $i8);

        $f1 = (float) i0;

        virtualinvoke r0.<android.graphics.drawable.GradientDrawable: void setCornerRadius(float)>($f1);

        i1 = virtualinvoke r1.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(1, i0);

        i2 = virtualinvoke r1.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(2, i0);

        i3 = virtualinvoke r1.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(3, i0);

        i4 = virtualinvoke r1.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(4, i0);

        if i1 != i0 goto label1;

        if i2 != i0 goto label1;

        if i3 != i0 goto label1;

        if i4 == i0 goto label2;

     label1:
        $r4 = newarray (float)[8];

        $f2 = (float) i1;

        $r4[0] = $f2;

        $f3 = (float) i1;

        $r4[1] = $f3;

        $f4 = (float) i2;

        $r4[2] = $f4;

        $f5 = (float) i2;

        $r4[3] = $f5;

        $f6 = (float) i4;

        $r4[4] = $f6;

        $f7 = (float) i4;

        $r4[5] = $f7;

        $f8 = (float) i3;

        $r4[6] = $f8;

        $f9 = (float) i3;

        $r4[7] = $f9;

        virtualinvoke r0.<android.graphics.drawable.GradientDrawable: void setCornerRadii(float[])>($r4);

     label2:
        return;
    }

    private void updateGradientDrawableGradient(android.content.res.Resources, android.content.res.TypedArray)
    {
        android.graphics.drawable.GradientDrawable r0;
        android.content.res.Resources r1;
        android.graphics.drawable.GradientDrawable$GradientState r2;
        boolean z0, $z1, $z2, $z3, $z4, z5, $z6, z7;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, i18, i19, i20, i21, i22, i23, i24;
        float[] r3, $r23, $r24, $r25;
        int[] $r4, $r5, $r6, $r7, $r8, $r19, $r20, $r21, $r22, $r26, $r27, $r28, $r29;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, f7, f8;
        android.graphics.drawable.GradientDrawable$Orientation $r9, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18;
        android.util.DisplayMetrics $r10;
        byte $b17, b25;
        android.content.res.TypedArray r30;
        android.util.TypedValue r31;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        r1 := @parameter0: android.content.res.Resources;

        r30 := @parameter1: android.content.res.TypedArray;

        r2 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $i1 = r2.<android.graphics.drawable.GradientDrawable$GradientState: int mChangingConfigurations>;

        $i2 = virtualinvoke r30.<android.content.res.TypedArray: int getChangingConfigurations()>();

        $i3 = $i1 | $i2;

        r2.<android.graphics.drawable.GradientDrawable$GradientState: int mChangingConfigurations> = $i3;

        $r4 = virtualinvoke r30.<android.content.res.TypedArray: int[] extractThemeAttrs()>();

        r2.<android.graphics.drawable.GradientDrawable$GradientState: int[] mAttrGradient> = $r4;

        $f0 = r2.<android.graphics.drawable.GradientDrawable$GradientState: float mCenterX>;

        $f1 = staticinvoke <android.graphics.drawable.GradientDrawable: float getFloatOrFraction(android.content.res.TypedArray,int,float)>(r30, 5, $f0);

        r2.<android.graphics.drawable.GradientDrawable$GradientState: float mCenterX> = $f1;

        $f2 = r2.<android.graphics.drawable.GradientDrawable$GradientState: float mCenterY>;

        $f3 = staticinvoke <android.graphics.drawable.GradientDrawable: float getFloatOrFraction(android.content.res.TypedArray,int,float)>(r30, 6, $f2);

        r2.<android.graphics.drawable.GradientDrawable$GradientState: float mCenterY> = $f3;

        $z1 = r2.<android.graphics.drawable.GradientDrawable$GradientState: boolean mUseLevel>;

        $z2 = virtualinvoke r30.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(2, $z1);

        r2.<android.graphics.drawable.GradientDrawable$GradientState: boolean mUseLevel> = $z2;

        $i4 = r2.<android.graphics.drawable.GradientDrawable$GradientState: int mGradient>;

        $i5 = virtualinvoke r30.<android.content.res.TypedArray: int getInt(int,int)>(4, $i4);

        r2.<android.graphics.drawable.GradientDrawable$GradientState: int mGradient> = $i5;

        $r5 = r2.<android.graphics.drawable.GradientDrawable$GradientState: int[] mGradientColors>;

        if $r5 == null goto label01;

        z5 = 1;

        goto label02;

     label01:
        z5 = 0;

     label02:
        z0 = virtualinvoke r2.<android.graphics.drawable.GradientDrawable$GradientState: boolean hasCenterColor()>();

        if z5 == 0 goto label03;

        $r29 = r2.<android.graphics.drawable.GradientDrawable$GradientState: int[] mGradientColors>;

        i18 = $r29[0];

        goto label04;

     label03:
        i18 = 0;

     label04:
        if z0 == 0 goto label05;

        $r28 = r2.<android.graphics.drawable.GradientDrawable$GradientState: int[] mGradientColors>;

        i19 = $r28[1];

        goto label06;

     label05:
        i19 = 0;

     label06:
        $z3 = virtualinvoke r2.<android.graphics.drawable.GradientDrawable$GradientState: boolean hasCenterColor()>();

        if $z3 == 0 goto label07;

        $r27 = r2.<android.graphics.drawable.GradientDrawable$GradientState: int[] mGradientColors>;

        i20 = $r27[2];

        goto label09;

     label07:
        if z5 == 0 goto label08;

        $r26 = r2.<android.graphics.drawable.GradientDrawable$GradientState: int[] mGradientColors>;

        i20 = $r26[1];

        goto label09;

     label08:
        i20 = 0;

     label09:
        i0 = virtualinvoke r30.<android.content.res.TypedArray: int getColor(int,int)>(0, i18);

        $z6 = virtualinvoke r30.<android.content.res.TypedArray: boolean hasValue(int)>(8);

        if $z6 != 0 goto label11;

        if z0 == 0 goto label10;

        goto label11;

     label10:
        z7 = 0;

        goto label12;

     label11:
        z7 = 1;

     label12:
        i21 = virtualinvoke r30.<android.content.res.TypedArray: int getColor(int,int)>(8, i19);

        i22 = virtualinvoke r30.<android.content.res.TypedArray: int getColor(int,int)>(1, i20);

        if z7 == 0 goto label15;

        $r19 = newarray (int)[3];

        r2.<android.graphics.drawable.GradientDrawable$GradientState: int[] mGradientColors> = $r19;

        $r20 = r2.<android.graphics.drawable.GradientDrawable$GradientState: int[] mGradientColors>;

        $r20[0] = i0;

        $r21 = r2.<android.graphics.drawable.GradientDrawable$GradientState: int[] mGradientColors>;

        $r21[1] = i21;

        $r22 = r2.<android.graphics.drawable.GradientDrawable$GradientState: int[] mGradientColors>;

        $r22[2] = i22;

        $r23 = newarray (float)[3];

        r2.<android.graphics.drawable.GradientDrawable$GradientState: float[] mPositions> = $r23;

        $r24 = r2.<android.graphics.drawable.GradientDrawable$GradientState: float[] mPositions>;

        $r24[0] = 0.0F;

        r3 = r2.<android.graphics.drawable.GradientDrawable$GradientState: float[] mPositions>;

        $f6 = r2.<android.graphics.drawable.GradientDrawable$GradientState: float mCenterX>;

        $b17 = $f6 cmpl 0.5F;

        if $b17 == 0 goto label13;

        f7 = r2.<android.graphics.drawable.GradientDrawable$GradientState: float mCenterX>;

        goto label14;

     label13:
        f7 = r2.<android.graphics.drawable.GradientDrawable$GradientState: float mCenterY>;

     label14:
        r3[1] = f7;

        $r25 = r2.<android.graphics.drawable.GradientDrawable$GradientState: float[] mPositions>;

        $r25[2] = 1.0F;

        goto label16;

     label15:
        $r6 = newarray (int)[2];

        r2.<android.graphics.drawable.GradientDrawable$GradientState: int[] mGradientColors> = $r6;

        $r7 = r2.<android.graphics.drawable.GradientDrawable$GradientState: int[] mGradientColors>;

        $r7[0] = i0;

        $r8 = r2.<android.graphics.drawable.GradientDrawable$GradientState: int[] mGradientColors>;

        $r8[1] = i22;

     label16:
        $i6 = r2.<android.graphics.drawable.GradientDrawable$GradientState: int mAngle>;

        $f4 = (float) $i6;

        $f5 = virtualinvoke r30.<android.content.res.TypedArray: float getFloat(int,float)>(3, $f4);

        i23 = (int) $f5;

        $z4 = <android.graphics.drawable.GradientDrawable: boolean sWrapNegativeAngleMeasurements>;

        if $z4 == 0 goto label17;

        $i14 = i23 % 360;

        $i15 = $i14 + 360;

        $i16 = $i15 % 360;

        r2.<android.graphics.drawable.GradientDrawable$GradientState: int mAngle> = $i16;

        goto label18;

     label17:
        $i7 = i23 % 360;

        r2.<android.graphics.drawable.GradientDrawable$GradientState: int mAngle> = $i7;

     label18:
        $i8 = r2.<android.graphics.drawable.GradientDrawable$GradientState: int mAngle>;

        if $i8 < 0 goto label28;

        i24 = r2.<android.graphics.drawable.GradientDrawable$GradientState: int mAngle>;

        if i24 == 0 goto label26;

        if i24 == 45 goto label25;

        if i24 == 90 goto label24;

        if i24 == 135 goto label23;

        if i24 == 180 goto label22;

        if i24 == 225 goto label21;

        if i24 == 270 goto label20;

        if i24 == 315 goto label19;

        goto label27;

     label19:
        $r18 = <android.graphics.drawable.GradientDrawable$Orientation: android.graphics.drawable.GradientDrawable$Orientation TL_BR>;

        r2.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.drawable.GradientDrawable$Orientation mOrientation> = $r18;

        goto label27;

     label20:
        $r17 = <android.graphics.drawable.GradientDrawable$Orientation: android.graphics.drawable.GradientDrawable$Orientation TOP_BOTTOM>;

        r2.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.drawable.GradientDrawable$Orientation mOrientation> = $r17;

        goto label27;

     label21:
        $r16 = <android.graphics.drawable.GradientDrawable$Orientation: android.graphics.drawable.GradientDrawable$Orientation TR_BL>;

        r2.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.drawable.GradientDrawable$Orientation mOrientation> = $r16;

        goto label27;

     label22:
        $r15 = <android.graphics.drawable.GradientDrawable$Orientation: android.graphics.drawable.GradientDrawable$Orientation RIGHT_LEFT>;

        r2.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.drawable.GradientDrawable$Orientation mOrientation> = $r15;

        goto label27;

     label23:
        $r14 = <android.graphics.drawable.GradientDrawable$Orientation: android.graphics.drawable.GradientDrawable$Orientation BR_TL>;

        r2.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.drawable.GradientDrawable$Orientation mOrientation> = $r14;

        goto label27;

     label24:
        $r13 = <android.graphics.drawable.GradientDrawable$Orientation: android.graphics.drawable.GradientDrawable$Orientation BOTTOM_TOP>;

        r2.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.drawable.GradientDrawable$Orientation mOrientation> = $r13;

        goto label27;

     label25:
        $r12 = <android.graphics.drawable.GradientDrawable$Orientation: android.graphics.drawable.GradientDrawable$Orientation BL_TR>;

        r2.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.drawable.GradientDrawable$Orientation mOrientation> = $r12;

        goto label27;

     label26:
        $r11 = <android.graphics.drawable.GradientDrawable$Orientation: android.graphics.drawable.GradientDrawable$Orientation LEFT_RIGHT>;

        r2.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.drawable.GradientDrawable$Orientation mOrientation> = $r11;

     label27:
        goto label29;

     label28:
        $r9 = <android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$Orientation DEFAULT_ORIENTATION>;

        r2.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.drawable.GradientDrawable$Orientation mOrientation> = $r9;

     label29:
        r31 = virtualinvoke r30.<android.content.res.TypedArray: android.util.TypedValue peekValue(int)>(7);

        if r31 == null goto label35;

        $i9 = r31.<android.util.TypedValue: int type>;

        if $i9 != 6 goto label32;

        f8 = virtualinvoke r31.<android.util.TypedValue: float getFraction(float,float)>(1.0F, 1.0F);

        $i11 = r31.<android.util.TypedValue: int data>;

        $i12 = $i11 >> 0;

        $i13 = $i12 & 15;

        if $i13 != 1 goto label30;

        b25 = 2;

        goto label31;

     label30:
        b25 = 1;

     label31:
        goto label34;

     label32:
        $i10 = r31.<android.util.TypedValue: int type>;

        if $i10 != 5 goto label33;

        $r10 = virtualinvoke r1.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        f8 = virtualinvoke r31.<android.util.TypedValue: float getDimension(android.util.DisplayMetrics)>($r10);

        b25 = 0;

        goto label34;

     label33:
        f8 = virtualinvoke r31.<android.util.TypedValue: float getFloat()>();

        b25 = 0;

     label34:
        r2.<android.graphics.drawable.GradientDrawable$GradientState: float mGradientRadius> = f8;

        r2.<android.graphics.drawable.GradientDrawable$GradientState: int mGradientRadiusType> = b25;

     label35:
        return;
    }

    private void updateGradientDrawablePadding(android.content.res.TypedArray)
    {
        android.graphics.drawable.GradientDrawable r0;
        android.content.res.TypedArray r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        int[] $r2;
        android.graphics.Rect $r3, $r4, r6;
        android.graphics.drawable.GradientDrawable$GradientState r5;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        r1 := @parameter0: android.content.res.TypedArray;

        r5 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $i0 = r5.<android.graphics.drawable.GradientDrawable$GradientState: int mChangingConfigurations>;

        $i1 = virtualinvoke r1.<android.content.res.TypedArray: int getChangingConfigurations()>();

        $i2 = $i0 | $i1;

        r5.<android.graphics.drawable.GradientDrawable$GradientState: int mChangingConfigurations> = $i2;

        $r2 = virtualinvoke r1.<android.content.res.TypedArray: int[] extractThemeAttrs()>();

        r5.<android.graphics.drawable.GradientDrawable$GradientState: int[] mAttrPadding> = $r2;

        $r3 = r5.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.Rect mPadding>;

        if $r3 != null goto label1;

        $r4 = new android.graphics.Rect;

        specialinvoke $r4.<android.graphics.Rect: void <init>()>();

        r5.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.Rect mPadding> = $r4;

     label1:
        r6 = r5.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.Rect mPadding>;

        $i3 = r6.<android.graphics.Rect: int left>;

        $i4 = virtualinvoke r1.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>(0, $i3);

        $i5 = r6.<android.graphics.Rect: int top>;

        $i6 = virtualinvoke r1.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>(1, $i5);

        $i7 = r6.<android.graphics.Rect: int right>;

        $i8 = virtualinvoke r1.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>(2, $i7);

        $i9 = r6.<android.graphics.Rect: int bottom>;

        $i10 = virtualinvoke r1.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>(3, $i9);

        virtualinvoke r6.<android.graphics.Rect: void set(int,int,int,int)>($i4, $i6, $i8, $i10);

        r0.<android.graphics.drawable.GradientDrawable: android.graphics.Rect mPadding> = r6;

        return;
    }

    private void updateGradientDrawableSize(android.content.res.TypedArray)
    {
        android.graphics.drawable.GradientDrawable r0;
        android.content.res.TypedArray r1;
        android.graphics.drawable.GradientDrawable$GradientState r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        int[] $r3;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        r1 := @parameter0: android.content.res.TypedArray;

        r2 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $i0 = r2.<android.graphics.drawable.GradientDrawable$GradientState: int mChangingConfigurations>;

        $i1 = virtualinvoke r1.<android.content.res.TypedArray: int getChangingConfigurations()>();

        $i2 = $i0 | $i1;

        r2.<android.graphics.drawable.GradientDrawable$GradientState: int mChangingConfigurations> = $i2;

        $r3 = virtualinvoke r1.<android.content.res.TypedArray: int[] extractThemeAttrs()>();

        r2.<android.graphics.drawable.GradientDrawable$GradientState: int[] mAttrSize> = $r3;

        $i3 = r2.<android.graphics.drawable.GradientDrawable$GradientState: int mWidth>;

        $i4 = virtualinvoke r1.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(1, $i3);

        r2.<android.graphics.drawable.GradientDrawable$GradientState: int mWidth> = $i4;

        $i5 = r2.<android.graphics.drawable.GradientDrawable$GradientState: int mHeight>;

        $i6 = virtualinvoke r1.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(0, $i5);

        r2.<android.graphics.drawable.GradientDrawable$GradientState: int mHeight> = $i6;

        return;
    }

    private void updateGradientDrawableSolid(android.content.res.TypedArray)
    {
        android.graphics.drawable.GradientDrawable r0;
        android.graphics.drawable.GradientDrawable$GradientState r1;
        int $i0, $i1, $i2;
        int[] $r2;
        android.content.res.TypedArray r3;
        android.content.res.ColorStateList r4;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        r3 := @parameter0: android.content.res.TypedArray;

        r1 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $i0 = r1.<android.graphics.drawable.GradientDrawable$GradientState: int mChangingConfigurations>;

        $i1 = virtualinvoke r3.<android.content.res.TypedArray: int getChangingConfigurations()>();

        $i2 = $i0 | $i1;

        r1.<android.graphics.drawable.GradientDrawable$GradientState: int mChangingConfigurations> = $i2;

        $r2 = virtualinvoke r3.<android.content.res.TypedArray: int[] extractThemeAttrs()>();

        r1.<android.graphics.drawable.GradientDrawable$GradientState: int[] mAttrSolid> = $r2;

        r4 = virtualinvoke r3.<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)>(0);

        if r4 == null goto label1;

        virtualinvoke r0.<android.graphics.drawable.GradientDrawable: void setColor(android.content.res.ColorStateList)>(r4);

     label1:
        return;
    }

    private void updateGradientDrawableStroke(android.content.res.TypedArray)
    {
        android.graphics.drawable.GradientDrawable r0;
        android.content.res.TypedArray r1;
        android.graphics.drawable.GradientDrawable$GradientState r2;
        int i0, $i1, $i2, $i3, $i4, $i5;
        float f0, $f1, $f2, $f3;
        android.content.res.ColorStateList r3, r5;
        int[] $r4;
        byte $b6;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        r1 := @parameter0: android.content.res.TypedArray;

        r2 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $i1 = r2.<android.graphics.drawable.GradientDrawable$GradientState: int mChangingConfigurations>;

        $i2 = virtualinvoke r1.<android.content.res.TypedArray: int getChangingConfigurations()>();

        $i3 = $i1 | $i2;

        r2.<android.graphics.drawable.GradientDrawable$GradientState: int mChangingConfigurations> = $i3;

        $r4 = virtualinvoke r1.<android.content.res.TypedArray: int[] extractThemeAttrs()>();

        r2.<android.graphics.drawable.GradientDrawable$GradientState: int[] mAttrStroke> = $r4;

        $i4 = r2.<android.graphics.drawable.GradientDrawable$GradientState: int mStrokeWidth>;

        $i5 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i4);

        i0 = virtualinvoke r1.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(0, $i5);

        $f1 = r2.<android.graphics.drawable.GradientDrawable$GradientState: float mStrokeDashWidth>;

        f0 = virtualinvoke r1.<android.content.res.TypedArray: float getDimension(int,float)>(2, $f1);

        r3 = virtualinvoke r1.<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)>(1);

        r5 = r3;

        if r3 != null goto label1;

        r5 = r2.<android.graphics.drawable.GradientDrawable$GradientState: android.content.res.ColorStateList mStrokeColors>;

     label1:
        $b6 = f0 cmpl 0.0F;

        if $b6 == 0 goto label2;

        $f2 = r2.<android.graphics.drawable.GradientDrawable$GradientState: float mStrokeDashGap>;

        $f3 = virtualinvoke r1.<android.content.res.TypedArray: float getDimension(int,float)>(3, $f2);

        virtualinvoke r0.<android.graphics.drawable.GradientDrawable: void setStroke(int,android.content.res.ColorStateList,float,float)>(i0, r5, f0, $f3);

        goto label3;

     label2:
        virtualinvoke r0.<android.graphics.drawable.GradientDrawable: void setStroke(int,android.content.res.ColorStateList)>(i0, r5);

     label3:
        return;
    }

    private void updateLocalState(android.content.res.Resources)
    {
        android.graphics.drawable.GradientDrawable r0;
        android.content.res.ColorStateList $r1, $r7, $r12, $r15, $r25;
        int[] $r2, r19, r22;
        android.graphics.Paint $r3, $r4, $r6, $r10, $r13, $r14, $r16;
        android.graphics.Paint$Style $r5;
        int $i0, i2, $i3, i4;
        float $f0, $f1, $f2, $f3;
        byte $b1;
        android.graphics.DashPathEffect $r8;
        float[] $r9;
        android.content.res.Resources r17;
        android.graphics.drawable.GradientDrawable$GradientState r18;
        android.graphics.Rect $r20;
        android.graphics.BlendModeColorFilter $r24, $r27;
        android.graphics.BlendMode $r26;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        r17 := @parameter0: android.content.res.Resources;

        r18 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $r1 = r18.<android.graphics.drawable.GradientDrawable$GradientState: android.content.res.ColorStateList mSolidColors>;

        if $r1 == null goto label1;

        r19 = virtualinvoke r0.<android.graphics.drawable.GradientDrawable: int[] getState()>();

        $r15 = r18.<android.graphics.drawable.GradientDrawable$GradientState: android.content.res.ColorStateList mSolidColors>;

        i2 = virtualinvoke $r15.<android.content.res.ColorStateList: int getColorForState(int[],int)>(r19, 0);

        $r16 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        virtualinvoke $r16.<android.graphics.Paint: void setColor(int)>(i2);

        goto label3;

     label1:
        $r2 = r18.<android.graphics.drawable.GradientDrawable$GradientState: int[] mGradientColors>;

        if $r2 != null goto label2;

        $r14 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        virtualinvoke $r14.<android.graphics.Paint: void setColor(int)>(0);

        goto label3;

     label2:
        $r3 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        virtualinvoke $r3.<android.graphics.Paint: void setColor(int)>(-16777216);

     label3:
        $r20 = r18.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.Rect mPadding>;

        r0.<android.graphics.drawable.GradientDrawable: android.graphics.Rect mPadding> = $r20;

        $i3 = r18.<android.graphics.drawable.GradientDrawable$GradientState: int mStrokeWidth>;

        if $i3 < 0 goto label5;

        $r4 = new android.graphics.Paint;

        specialinvoke $r4.<android.graphics.Paint: void <init>(int)>(1);

        r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint> = $r4;

        $r5 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke $r4.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r5);

        $r6 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        $i0 = r18.<android.graphics.drawable.GradientDrawable$GradientState: int mStrokeWidth>;

        $f0 = (float) $i0;

        virtualinvoke $r6.<android.graphics.Paint: void setStrokeWidth(float)>($f0);

        $r7 = r18.<android.graphics.drawable.GradientDrawable$GradientState: android.content.res.ColorStateList mStrokeColors>;

        if $r7 == null goto label4;

        r22 = virtualinvoke r0.<android.graphics.drawable.GradientDrawable: int[] getState()>();

        $r12 = r18.<android.graphics.drawable.GradientDrawable$GradientState: android.content.res.ColorStateList mStrokeColors>;

        i4 = virtualinvoke $r12.<android.content.res.ColorStateList: int getColorForState(int[],int)>(r22, 0);

        $r13 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        virtualinvoke $r13.<android.graphics.Paint: void setColor(int)>(i4);

     label4:
        $f1 = r18.<android.graphics.drawable.GradientDrawable$GradientState: float mStrokeDashWidth>;

        $b1 = $f1 cmpl 0.0F;

        if $b1 == 0 goto label5;

        $r8 = new android.graphics.DashPathEffect;

        $r9 = newarray (float)[2];

        $f2 = r18.<android.graphics.drawable.GradientDrawable$GradientState: float mStrokeDashWidth>;

        $r9[0] = $f2;

        $f3 = r18.<android.graphics.drawable.GradientDrawable$GradientState: float mStrokeDashGap>;

        $r9[1] = $f3;

        specialinvoke $r8.<android.graphics.DashPathEffect: void <init>(float[],float)>($r9, 0.0F);

        $r10 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        virtualinvoke $r10.<android.graphics.Paint: android.graphics.PathEffect setPathEffect(android.graphics.PathEffect)>($r8);

     label5:
        $r24 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.BlendModeColorFilter mBlendModeColorFilter>;

        $r25 = r18.<android.graphics.drawable.GradientDrawable$GradientState: android.content.res.ColorStateList mTint>;

        $r26 = r18.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.BlendMode mBlendMode>;

        $r27 = virtualinvoke r0.<android.graphics.drawable.GradientDrawable: android.graphics.BlendModeColorFilter updateBlendModeFilter(android.graphics.BlendModeColorFilter,android.content.res.ColorStateList,android.graphics.BlendMode)>($r24, $r25, $r26);

        r0.<android.graphics.drawable.GradientDrawable: android.graphics.BlendModeColorFilter mBlendModeColorFilter> = $r27;

        r0.<android.graphics.drawable.GradientDrawable: boolean mGradientIsDirty> = 1;

        staticinvoke <android.graphics.drawable.GradientDrawable$GradientState: void access$100(android.graphics.drawable.GradientDrawable$GradientState)>(r18);

        return;
    }

    private void updateStateFromTypedArray(android.content.res.TypedArray)
    {
        android.graphics.drawable.GradientDrawable r0;
        android.content.res.TypedArray r1;
        android.graphics.drawable.GradientDrawable$GradientState r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20;
        android.content.res.ColorStateList r3;
        int[] $r4;
        boolean $z0, $z1, $z2, $z3;
        android.graphics.Insets $r5, $r6, $r7, $r8, $r9;
        android.graphics.BlendMode $r10, $r11;
        float $f0, $f1, $f2, $f3;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        r1 := @parameter0: android.content.res.TypedArray;

        r2 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $i1 = r2.<android.graphics.drawable.GradientDrawable$GradientState: int mChangingConfigurations>;

        $i2 = virtualinvoke r1.<android.content.res.TypedArray: int getChangingConfigurations()>();

        $i3 = $i1 | $i2;

        r2.<android.graphics.drawable.GradientDrawable$GradientState: int mChangingConfigurations> = $i3;

        $r4 = virtualinvoke r1.<android.content.res.TypedArray: int[] extractThemeAttrs()>();

        r2.<android.graphics.drawable.GradientDrawable$GradientState: int[] mThemeAttrs> = $r4;

        $i4 = r2.<android.graphics.drawable.GradientDrawable$GradientState: int mShape>;

        $i5 = virtualinvoke r1.<android.content.res.TypedArray: int getInt(int,int)>(3, $i4);

        r2.<android.graphics.drawable.GradientDrawable$GradientState: int mShape> = $i5;

        $z0 = r2.<android.graphics.drawable.GradientDrawable$GradientState: boolean mDither>;

        $z1 = virtualinvoke r1.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(0, $z0);

        r2.<android.graphics.drawable.GradientDrawable$GradientState: boolean mDither> = $z1;

        $i6 = r2.<android.graphics.drawable.GradientDrawable$GradientState: int mShape>;

        if $i6 != 3 goto label3;

        $i15 = r2.<android.graphics.drawable.GradientDrawable$GradientState: int mInnerRadius>;

        $i16 = virtualinvoke r1.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(7, $i15);

        r2.<android.graphics.drawable.GradientDrawable$GradientState: int mInnerRadius> = $i16;

        $i17 = r2.<android.graphics.drawable.GradientDrawable$GradientState: int mInnerRadius>;

        if $i17 != -1 goto label1;

        $f2 = r2.<android.graphics.drawable.GradientDrawable$GradientState: float mInnerRadiusRatio>;

        $f3 = virtualinvoke r1.<android.content.res.TypedArray: float getFloat(int,float)>(4, $f2);

        r2.<android.graphics.drawable.GradientDrawable$GradientState: float mInnerRadiusRatio> = $f3;

     label1:
        $i18 = r2.<android.graphics.drawable.GradientDrawable$GradientState: int mThickness>;

        $i19 = virtualinvoke r1.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(8, $i18);

        r2.<android.graphics.drawable.GradientDrawable$GradientState: int mThickness> = $i19;

        $i20 = r2.<android.graphics.drawable.GradientDrawable$GradientState: int mThickness>;

        if $i20 != -1 goto label2;

        $f0 = r2.<android.graphics.drawable.GradientDrawable$GradientState: float mThicknessRatio>;

        $f1 = virtualinvoke r1.<android.content.res.TypedArray: float getFloat(int,float)>(5, $f0);

        r2.<android.graphics.drawable.GradientDrawable$GradientState: float mThicknessRatio> = $f1;

     label2:
        $z2 = r2.<android.graphics.drawable.GradientDrawable$GradientState: boolean mUseLevelForShape>;

        $z3 = virtualinvoke r1.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(6, $z2);

        r2.<android.graphics.drawable.GradientDrawable$GradientState: boolean mUseLevelForShape> = $z3;

     label3:
        i0 = virtualinvoke r1.<android.content.res.TypedArray: int getInt(int,int)>(9, -1);

        if i0 == -1 goto label4;

        $r10 = <android.graphics.BlendMode: android.graphics.BlendMode SRC_IN>;

        $r11 = staticinvoke <android.graphics.drawable.Drawable: android.graphics.BlendMode parseBlendMode(int,android.graphics.BlendMode)>(i0, $r10);

        r2.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.BlendMode mBlendMode> = $r11;

     label4:
        r3 = virtualinvoke r1.<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)>(1);

        if r3 == null goto label5;

        r2.<android.graphics.drawable.GradientDrawable$GradientState: android.content.res.ColorStateList mTint> = r3;

     label5:
        $r5 = r2.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.Insets mOpticalInsets>;

        $i7 = $r5.<android.graphics.Insets: int left>;

        $i8 = virtualinvoke r1.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(10, $i7);

        $r6 = r2.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.Insets mOpticalInsets>;

        $i9 = $r6.<android.graphics.Insets: int top>;

        $i10 = virtualinvoke r1.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(11, $i9);

        $r7 = r2.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.Insets mOpticalInsets>;

        $i11 = $r7.<android.graphics.Insets: int right>;

        $i12 = virtualinvoke r1.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(12, $i11);

        $r8 = r2.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.Insets mOpticalInsets>;

        $i13 = $r8.<android.graphics.Insets: int bottom>;

        $i14 = virtualinvoke r1.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(13, $i13);

        $r9 = staticinvoke <android.graphics.Insets: android.graphics.Insets of(int,int,int,int)>($i8, $i10, $i12, $i14);

        r2.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.Insets mOpticalInsets> = $r9;

        return;
    }

    public void applyTheme(android.content.res.Resources$Theme)
    {
        android.graphics.drawable.GradientDrawable r0;
        android.content.res.Resources$Theme r1;
        android.graphics.drawable.GradientDrawable$GradientState r2;
        android.content.res.TypedArray r3;
        android.content.res.Resources $r4, $r20;
        int $i0;
        int[] $r5, $r16, $r17;
        android.content.res.ColorStateList $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r18, $r19;
        boolean $z0, $z1, $z2;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        r1 := @parameter0: android.content.res.Resources$Theme;

        specialinvoke r0.<android.graphics.drawable.Drawable: void applyTheme(android.content.res.Resources$Theme)>(r1);

        r2 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        if r2 != null goto label1;

        return;

     label1:
        $r4 = virtualinvoke r1.<android.content.res.Resources$Theme: android.content.res.Resources getResources()>();

        $i0 = staticinvoke <android.graphics.drawable.Drawable: int resolveDensity(android.content.res.Resources,int)>($r4, 0);

        virtualinvoke r2.<android.graphics.drawable.GradientDrawable$GradientState: void setDensity(int)>($i0);

        $r5 = r2.<android.graphics.drawable.GradientDrawable$GradientState: int[] mThemeAttrs>;

        if $r5 == null goto label2;

        $r17 = r2.<android.graphics.drawable.GradientDrawable$GradientState: int[] mThemeAttrs>;

        $r16 = <com.android.internal.R$styleable: int[] GradientDrawable>;

        r3 = virtualinvoke r1.<android.content.res.Resources$Theme: android.content.res.TypedArray resolveAttributes(int[],int[])>($r17, $r16);

        specialinvoke r0.<android.graphics.drawable.GradientDrawable: void updateStateFromTypedArray(android.content.res.TypedArray)>(r3);

        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

     label2:
        $r6 = r2.<android.graphics.drawable.GradientDrawable$GradientState: android.content.res.ColorStateList mTint>;

        if $r6 == null goto label3;

        $r13 = r2.<android.graphics.drawable.GradientDrawable$GradientState: android.content.res.ColorStateList mTint>;

        $z2 = virtualinvoke $r13.<android.content.res.ColorStateList: boolean canApplyTheme()>();

        if $z2 == 0 goto label3;

        $r14 = r2.<android.graphics.drawable.GradientDrawable$GradientState: android.content.res.ColorStateList mTint>;

        $r15 = virtualinvoke $r14.<android.content.res.ColorStateList: android.content.res.ColorStateList obtainForTheme(android.content.res.Resources$Theme)>(r1);

        r2.<android.graphics.drawable.GradientDrawable$GradientState: android.content.res.ColorStateList mTint> = $r15;

     label3:
        $r18 = r2.<android.graphics.drawable.GradientDrawable$GradientState: android.content.res.ColorStateList mSolidColors>;

        if $r18 == null goto label4;

        $r10 = r2.<android.graphics.drawable.GradientDrawable$GradientState: android.content.res.ColorStateList mSolidColors>;

        $z1 = virtualinvoke $r10.<android.content.res.ColorStateList: boolean canApplyTheme()>();

        if $z1 == 0 goto label4;

        $r11 = r2.<android.graphics.drawable.GradientDrawable$GradientState: android.content.res.ColorStateList mSolidColors>;

        $r12 = virtualinvoke $r11.<android.content.res.ColorStateList: android.content.res.ColorStateList obtainForTheme(android.content.res.Resources$Theme)>(r1);

        r2.<android.graphics.drawable.GradientDrawable$GradientState: android.content.res.ColorStateList mSolidColors> = $r12;

     label4:
        $r19 = r2.<android.graphics.drawable.GradientDrawable$GradientState: android.content.res.ColorStateList mStrokeColors>;

        if $r19 == null goto label5;

        $r7 = r2.<android.graphics.drawable.GradientDrawable$GradientState: android.content.res.ColorStateList mStrokeColors>;

        $z0 = virtualinvoke $r7.<android.content.res.ColorStateList: boolean canApplyTheme()>();

        if $z0 == 0 goto label5;

        $r8 = r2.<android.graphics.drawable.GradientDrawable$GradientState: android.content.res.ColorStateList mStrokeColors>;

        $r9 = virtualinvoke $r8.<android.content.res.ColorStateList: android.content.res.ColorStateList obtainForTheme(android.content.res.Resources$Theme)>(r1);

        r2.<android.graphics.drawable.GradientDrawable$GradientState: android.content.res.ColorStateList mStrokeColors> = $r9;

     label5:
        specialinvoke r0.<android.graphics.drawable.GradientDrawable: void applyThemeChildElements(android.content.res.Resources$Theme)>(r1);

        $r20 = virtualinvoke r1.<android.content.res.Resources$Theme: android.content.res.Resources getResources()>();

        specialinvoke r0.<android.graphics.drawable.GradientDrawable: void updateLocalState(android.content.res.Resources)>($r20);

        return;
    }

    public boolean canApplyTheme()
    {
        android.graphics.drawable.GradientDrawable r0;
        android.graphics.drawable.GradientDrawable$GradientState r1;
        boolean $z0, $z1, z2;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        r1 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        if r1 == null goto label1;

        $z1 = virtualinvoke r1.<android.graphics.drawable.GradientDrawable$GradientState: boolean canApplyTheme()>();

        if $z1 != 0 goto label2;

     label1:
        $z0 = specialinvoke r0.<android.graphics.drawable.Drawable: boolean canApplyTheme()>();

        if $z0 == 0 goto label3;

     label2:
        z2 = 1;

        goto label4;

     label3:
        z2 = 0;

     label4:
        return z2;
    }

    public void clearMutated()
    {
        android.graphics.drawable.GradientDrawable r0;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        specialinvoke r0.<android.graphics.drawable.Drawable: void clearMutated()>();

        r0.<android.graphics.drawable.GradientDrawable: boolean mMutated> = 0;

        return;
    }

    public void draw(android.graphics.Canvas)
    {
        android.graphics.drawable.GradientDrawable r0;
        android.graphics.Canvas r1;
        int i0, i1, i2, $i4, $i5, $i6, $i7, $i9, $i10, i12, i13;
        android.graphics.drawable.GradientDrawable$GradientState r2;
        android.graphics.ColorFilter r3, r59;
        boolean $z1, $z2, $z3, $z4, z5, z6, z7;
        android.graphics.Paint $r5, $r6, $r7, $r8, $r11, $r12, $r13, $r14, $r16, $r20, $r22, $r24, $r26, $r28, $r30, $r32, $r33, $r34, $r35, $r36, $r37, $r40, $r41, $r42, $r43, $r44, $r46, $r51, $r52, $r54, $r56, r57, r58, $r63;
        float[] $r10;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, f17, f18, f19;
        byte $b3, $b11;
        android.graphics.RectF $r15, $r18, $r19, $r21, $r23, $r29, $r31, $r47, $r48, $r49, $r50, r61, $r62;
        android.graphics.Shader $r17;
        android.graphics.Path $r25, $r27, r60;
        android.content.res.ColorStateList $r39;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        r1 := @parameter0: android.graphics.Canvas;

        $z1 = specialinvoke r0.<android.graphics.drawable.GradientDrawable: boolean ensureValidRect()>();

        if $z1 != 0 goto label01;

        return;

     label01:
        $r5 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        i0 = virtualinvoke $r5.<android.graphics.Paint: int getAlpha()>();

        r57 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        if r57 == null goto label02;

        i12 = virtualinvoke r57.<android.graphics.Paint: int getAlpha()>();

        goto label03;

     label02:
        i12 = 0;

     label03:
        i1 = specialinvoke r0.<android.graphics.drawable.GradientDrawable: int modulateAlpha(int)>(i0);

        i2 = specialinvoke r0.<android.graphics.drawable.GradientDrawable: int modulateAlpha(int)>(i12);

        if i2 <= 0 goto label04;

        r58 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        if r58 == null goto label04;

        $f16 = virtualinvoke r58.<android.graphics.Paint: float getStrokeWidth()>();

        $b11 = $f16 cmpl 0.0F;

        if $b11 <= 0 goto label04;

        z5 = 1;

        goto label05;

     label04:
        z5 = 0;

     label05:
        if i1 <= 0 goto label06;

        z6 = 1;

        goto label07;

     label06:
        z6 = 0;

     label07:
        r2 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        r59 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.ColorFilter mColorFilter>;

        if r59 == null goto label08;

        goto label09;

     label08:
        r59 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.BlendModeColorFilter mBlendModeColorFilter>;

     label09:
        z7 = 0;

        if z5 == 0 goto label11;

        z7 = 0;

        if z6 == 0 goto label11;

        z7 = 0;

        $i9 = r2.<android.graphics.drawable.GradientDrawable$GradientState: int mShape>;

        if $i9 == 2 goto label11;

        z7 = 0;

        if i2 >= 255 goto label11;

        $i10 = r0.<android.graphics.drawable.GradientDrawable: int mAlpha>;

        if $i10 < 255 goto label10;

        z7 = 0;

        if r59 == null goto label11;

     label10:
        z7 = 1;

     label11:
        if z7 == 0 goto label13;

        $r41 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mLayerPaint>;

        if $r41 != null goto label12;

        $r56 = new android.graphics.Paint;

        specialinvoke $r56.<android.graphics.Paint: void <init>()>();

        r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mLayerPaint> = $r56;

     label12:
        $r42 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mLayerPaint>;

        $z4 = r2.<android.graphics.drawable.GradientDrawable$GradientState: boolean mDither>;

        virtualinvoke $r42.<android.graphics.Paint: void setDither(boolean)>($z4);

        $r43 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mLayerPaint>;

        $i7 = r0.<android.graphics.drawable.GradientDrawable: int mAlpha>;

        virtualinvoke $r43.<android.graphics.Paint: void setAlpha(int)>($i7);

        $r44 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mLayerPaint>;

        virtualinvoke $r44.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>(r59);

        $r46 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        f17 = virtualinvoke $r46.<android.graphics.Paint: float getStrokeWidth()>();

        $r47 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.RectF mRect>;

        $f8 = $r47.<android.graphics.RectF: float left>;

        $f15 = $f8 - f17;

        $r48 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.RectF mRect>;

        $f9 = $r48.<android.graphics.RectF: float top>;

        $f14 = $f9 - f17;

        $r49 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.RectF mRect>;

        $f10 = $r49.<android.graphics.RectF: float right>;

        $f13 = $f10 + f17;

        $r50 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.RectF mRect>;

        $f11 = $r50.<android.graphics.RectF: float bottom>;

        $f12 = $f11 + f17;

        $r51 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mLayerPaint>;

        virtualinvoke r1.<android.graphics.Canvas: int saveLayer(float,float,float,float,android.graphics.Paint)>($f15, $f14, $f13, $f12, $r51);

        $r52 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        virtualinvoke $r52.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>(null);

        $r54 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        virtualinvoke $r54.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>(null);

        goto label15;

     label13:
        r3 = r59;

        $r6 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        virtualinvoke $r6.<android.graphics.Paint: void setAlpha(int)>(i1);

        $r7 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        $z2 = r2.<android.graphics.drawable.GradientDrawable$GradientState: boolean mDither>;

        virtualinvoke $r7.<android.graphics.Paint: void setDither(boolean)>($z2);

        $r8 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        virtualinvoke $r8.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>(r59);

        if r59 == null goto label14;

        $r39 = r2.<android.graphics.drawable.GradientDrawable$GradientState: android.content.res.ColorStateList mSolidColors>;

        if $r39 != null goto label14;

        $r40 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        $i5 = r0.<android.graphics.drawable.GradientDrawable: int mAlpha>;

        $i6 = $i5 << 24;

        virtualinvoke $r40.<android.graphics.Paint: void setColor(int)>($i6);

     label14:
        if z5 == 0 goto label15;

        $r35 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        virtualinvoke $r35.<android.graphics.Paint: void setAlpha(int)>(i2);

        $r36 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        $z3 = r2.<android.graphics.drawable.GradientDrawable$GradientState: boolean mDither>;

        virtualinvoke $r36.<android.graphics.Paint: void setDither(boolean)>($z3);

        $r37 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        virtualinvoke $r37.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>(r3);

     label15:
        i13 = r2.<android.graphics.drawable.GradientDrawable$GradientState: int mShape>;

        if i13 == 0 goto label20;

        if i13 == 1 goto label19;

        if i13 == 2 goto label17;

        if i13 == 3 goto label16;

        goto label26;

     label16:
        r60 = specialinvoke r0.<android.graphics.drawable.GradientDrawable: android.graphics.Path buildRing(android.graphics.drawable.GradientDrawable$GradientState)>(r2);

        $r33 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>(r60, $r33);

        if z5 == 0 goto label26;

        $r34 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>(r60, $r34);

        goto label26;

     label17:
        r61 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.RectF mRect>;

        f18 = virtualinvoke r61.<android.graphics.RectF: float centerY()>();

        if z5 == 0 goto label18;

        $f7 = r61.<android.graphics.RectF: float left>;

        $f6 = r61.<android.graphics.RectF: float right>;

        $r32 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>($f7, f18, $f6, f18, $r32);

        goto label26;

     label18:
        goto label26;

     label19:
        $r29 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.RectF mRect>;

        $r28 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawOval(android.graphics.RectF,android.graphics.Paint)>($r29, $r28);

        if z5 == 0 goto label26;

        $r31 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.RectF mRect>;

        $r30 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawOval(android.graphics.RectF,android.graphics.Paint)>($r31, $r30);

        goto label26;

     label20:
        $r10 = r2.<android.graphics.drawable.GradientDrawable$GradientState: float[] mRadiusArray>;

        if $r10 == null goto label21;

        specialinvoke r0.<android.graphics.drawable.GradientDrawable: void buildPathIfDirty()>();

        $r25 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Path mPath>;

        $r24 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>($r25, $r24);

        if z5 == 0 goto label26;

        $r27 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Path mPath>;

        $r26 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>($r27, $r26);

        goto label26;

     label21:
        $f0 = r2.<android.graphics.drawable.GradientDrawable$GradientState: float mRadius>;

        $b3 = $f0 cmpl 0.0F;

        if $b3 <= 0 goto label23;

        $f1 = r2.<android.graphics.drawable.GradientDrawable$GradientState: float mRadius>;

        $r18 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.RectF mRect>;

        $f2 = virtualinvoke $r18.<android.graphics.RectF: float width()>();

        $r19 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.RectF mRect>;

        $f3 = virtualinvoke $r19.<android.graphics.RectF: float height()>();

        $f4 = staticinvoke <java.lang.Math: float min(float,float)>($f2, $f3);

        $f5 = $f4 * 0.5F;

        f19 = staticinvoke <java.lang.Math: float min(float,float)>($f1, $f5);

        $r21 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.RectF mRect>;

        $r20 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawRoundRect(android.graphics.RectF,float,float,android.graphics.Paint)>($r21, f19, f19, $r20);

        if z5 == 0 goto label22;

        $r23 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.RectF mRect>;

        $r22 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawRoundRect(android.graphics.RectF,float,float,android.graphics.Paint)>($r23, f19, f19, $r22);

     label22:
        goto label26;

     label23:
        $r11 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        $i4 = virtualinvoke $r11.<android.graphics.Paint: int getColor()>();

        if $i4 != 0 goto label24;

        if r59 != null goto label24;

        $r16 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        $r17 = virtualinvoke $r16.<android.graphics.Paint: android.graphics.Shader getShader()>();

        if $r17 == null goto label25;

     label24:
        $r62 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.RectF mRect>;

        $r63 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawRect(android.graphics.RectF,android.graphics.Paint)>($r62, $r63);

     label25:
        if z5 == 0 goto label26;

        $r15 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.RectF mRect>;

        $r14 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawRect(android.graphics.RectF,android.graphics.Paint)>($r15, $r14);

     label26:
        if z7 == 0 goto label27;

        virtualinvoke r1.<android.graphics.Canvas: void restore()>();

        goto label28;

     label27:
        $r12 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        virtualinvoke $r12.<android.graphics.Paint: void setAlpha(int)>(i0);

        if z5 == 0 goto label28;

        $r13 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        virtualinvoke $r13.<android.graphics.Paint: void setAlpha(int)>(i12);

     label28:
        return;
    }

    public int getAlpha()
    {
        android.graphics.drawable.GradientDrawable r0;
        int $i0;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        $i0 = r0.<android.graphics.drawable.GradientDrawable: int mAlpha>;

        return $i0;
    }

    public int getChangingConfigurations()
    {
        android.graphics.drawable.GradientDrawable r0;
        int $i0, $i1, $i2;
        android.graphics.drawable.GradientDrawable$GradientState $r1;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        $i0 = specialinvoke r0.<android.graphics.drawable.Drawable: int getChangingConfigurations()>();

        $r1 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $i1 = virtualinvoke $r1.<android.graphics.drawable.GradientDrawable$GradientState: int getChangingConfigurations()>();

        $i2 = $i0 | $i1;

        return $i2;
    }

    public android.content.res.ColorStateList getColor()
    {
        android.graphics.drawable.GradientDrawable r0;
        android.graphics.drawable.GradientDrawable$GradientState $r1;
        android.content.res.ColorStateList $r2;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        $r1 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $r2 = $r1.<android.graphics.drawable.GradientDrawable$GradientState: android.content.res.ColorStateList mSolidColors>;

        return $r2;
    }

    public android.graphics.ColorFilter getColorFilter()
    {
        android.graphics.drawable.GradientDrawable r0;
        android.graphics.ColorFilter $r1;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        $r1 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.ColorFilter mColorFilter>;

        return $r1;
    }

    public int[] getColors()
    {
        android.graphics.drawable.GradientDrawable r0;
        android.graphics.drawable.GradientDrawable$GradientState $r1, $r3;
        int[] $r2, $r4, r6;
        java.lang.Object $r5;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        $r1 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $r2 = $r1.<android.graphics.drawable.GradientDrawable$GradientState: int[] mGradientColors>;

        if $r2 != null goto label1;

        r6 = null;

        goto label2;

     label1:
        $r3 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $r4 = $r3.<android.graphics.drawable.GradientDrawable$GradientState: int[] mGradientColors>;

        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.Object clone()>();

        r6 = (int[]) $r5;

     label2:
        return r6;
    }

    public android.graphics.drawable.Drawable$ConstantState getConstantState()
    {
        android.graphics.drawable.GradientDrawable r0;
        android.graphics.drawable.GradientDrawable$GradientState $r1, $r2;
        int $i0;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        $r1 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $i0 = virtualinvoke r0.<android.graphics.drawable.GradientDrawable: int getChangingConfigurations()>();

        $r1.<android.graphics.drawable.GradientDrawable$GradientState: int mChangingConfigurations> = $i0;

        $r2 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        return $r2;
    }

    public float[] getCornerRadii()
    {
        android.graphics.drawable.GradientDrawable r0;
        android.graphics.drawable.GradientDrawable$GradientState $r1;
        float[] $r2, $r4;
        java.lang.Object $r3;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        $r1 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $r2 = $r1.<android.graphics.drawable.GradientDrawable$GradientState: float[] mRadiusArray>;

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Object clone()>();

        $r4 = (float[]) $r3;

        return $r4;
    }

    public float getCornerRadius()
    {
        android.graphics.drawable.GradientDrawable r0;
        android.graphics.drawable.GradientDrawable$GradientState $r1;
        float $f0;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        $r1 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $f0 = $r1.<android.graphics.drawable.GradientDrawable$GradientState: float mRadius>;

        return $f0;
    }

    public float getGradientCenterX()
    {
        android.graphics.drawable.GradientDrawable r0;
        android.graphics.drawable.GradientDrawable$GradientState $r1;
        float $f0;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        $r1 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $f0 = $r1.<android.graphics.drawable.GradientDrawable$GradientState: float mCenterX>;

        return $f0;
    }

    public float getGradientCenterY()
    {
        android.graphics.drawable.GradientDrawable r0;
        android.graphics.drawable.GradientDrawable$GradientState $r1;
        float $f0;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        $r1 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $f0 = $r1.<android.graphics.drawable.GradientDrawable$GradientState: float mCenterY>;

        return $f0;
    }

    public float getGradientRadius()
    {
        android.graphics.drawable.GradientDrawable r0;
        android.graphics.drawable.GradientDrawable$GradientState $r1;
        int $i0;
        float $f0;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        $r1 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $i0 = $r1.<android.graphics.drawable.GradientDrawable$GradientState: int mGradient>;

        if $i0 == 1 goto label1;

        return 0.0F;

     label1:
        specialinvoke r0.<android.graphics.drawable.GradientDrawable: boolean ensureValidRect()>();

        $f0 = r0.<android.graphics.drawable.GradientDrawable: float mGradientRadius>;

        return $f0;
    }

    public int getGradientType()
    {
        android.graphics.drawable.GradientDrawable r0;
        android.graphics.drawable.GradientDrawable$GradientState $r1;
        int $i0;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        $r1 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $i0 = $r1.<android.graphics.drawable.GradientDrawable$GradientState: int mGradient>;

        return $i0;
    }

    public int getInnerRadius()
    {
        android.graphics.drawable.GradientDrawable r0;
        android.graphics.drawable.GradientDrawable$GradientState $r1;
        int $i0;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        $r1 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $i0 = $r1.<android.graphics.drawable.GradientDrawable$GradientState: int mInnerRadius>;

        return $i0;
    }

    public float getInnerRadiusRatio()
    {
        android.graphics.drawable.GradientDrawable r0;
        android.graphics.drawable.GradientDrawable$GradientState $r1;
        float $f0;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        $r1 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $f0 = $r1.<android.graphics.drawable.GradientDrawable$GradientState: float mInnerRadiusRatio>;

        return $f0;
    }

    public int getIntrinsicHeight()
    {
        android.graphics.drawable.GradientDrawable r0;
        android.graphics.drawable.GradientDrawable$GradientState $r1;
        int $i0;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        $r1 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $i0 = $r1.<android.graphics.drawable.GradientDrawable$GradientState: int mHeight>;

        return $i0;
    }

    public int getIntrinsicWidth()
    {
        android.graphics.drawable.GradientDrawable r0;
        android.graphics.drawable.GradientDrawable$GradientState $r1;
        int $i0;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        $r1 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $i0 = $r1.<android.graphics.drawable.GradientDrawable$GradientState: int mWidth>;

        return $i0;
    }

    public int getOpacity()
    {
        android.graphics.drawable.GradientDrawable r0;
        int $i0;
        android.graphics.drawable.GradientDrawable$GradientState $r1;
        boolean $z0, $z1;
        byte b1;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        $i0 = r0.<android.graphics.drawable.GradientDrawable: int mAlpha>;

        if $i0 != 255 goto label1;

        $r1 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $z0 = $r1.<android.graphics.drawable.GradientDrawable$GradientState: boolean mOpaqueOverBounds>;

        if $z0 == 0 goto label1;

        $z1 = specialinvoke r0.<android.graphics.drawable.GradientDrawable: boolean isOpaqueForState()>();

        if $z1 == 0 goto label1;

        b1 = -1;

        goto label2;

     label1:
        b1 = -3;

     label2:
        return b1;
    }

    public android.graphics.Insets getOpticalInsets()
    {
        android.graphics.drawable.GradientDrawable r0;
        android.graphics.drawable.GradientDrawable$GradientState $r1;
        android.graphics.Insets $r2;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        $r1 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $r2 = $r1.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.Insets mOpticalInsets>;

        return $r2;
    }

    public android.graphics.drawable.GradientDrawable$Orientation getOrientation()
    {
        android.graphics.drawable.GradientDrawable r0;
        android.graphics.drawable.GradientDrawable$GradientState $r1;
        android.graphics.drawable.GradientDrawable$Orientation $r2;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        $r1 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $r2 = $r1.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.drawable.GradientDrawable$Orientation mOrientation>;

        return $r2;
    }

    public void getOutline(android.graphics.Outline)
    {
        android.graphics.drawable.GradientDrawable r0;
        android.graphics.Outline r1;
        android.graphics.Rect r2;
        android.graphics.Paint r3, $r6, $r8, r10;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, f9, f10, f11;
        int i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, i14;
        boolean $z0, z1;
        float[] $r4;
        byte $b1;
        android.graphics.Path $r5;
        double $d0, $d1, $d2, $d3;
        android.graphics.drawable.GradientDrawable$GradientState $r7, r9;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        r1 := @parameter0: android.graphics.Outline;

        r9 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        r2 = virtualinvoke r0.<android.graphics.drawable.GradientDrawable: android.graphics.Rect getBounds()>();

        $z0 = r9.<android.graphics.drawable.GradientDrawable$GradientState: boolean mOpaqueOverShape>;

        if $z0 == 0 goto label02;

        $r7 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $i10 = $r7.<android.graphics.drawable.GradientDrawable$GradientState: int mStrokeWidth>;

        if $i10 <= 0 goto label01;

        r3 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        if r3 == null goto label01;

        $i11 = virtualinvoke r3.<android.graphics.Paint: int getAlpha()>();

        $r8 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        $i12 = virtualinvoke $r8.<android.graphics.Paint: int getAlpha()>();

        if $i11 != $i12 goto label02;

     label01:
        z1 = 1;

        goto label03;

     label02:
        z1 = 0;

     label03:
        if z1 == 0 goto label04;

        $r6 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        $i8 = virtualinvoke $r6.<android.graphics.Paint: int getAlpha()>();

        $i9 = specialinvoke r0.<android.graphics.drawable.GradientDrawable: int modulateAlpha(int)>($i8);

        $f8 = (float) $i9;

        f9 = $f8 / 255.0F;

        goto label05;

     label04:
        f9 = 0.0F;

     label05:
        virtualinvoke r1.<android.graphics.Outline: void setAlpha(float)>(f9);

        i13 = r9.<android.graphics.drawable.GradientDrawable$GradientState: int mShape>;

        if i13 == 0 goto label10;

        if i13 == 1 goto label09;

        if i13 == 2 goto label06;

        return;

     label06:
        r10 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        if r10 != null goto label07;

        f10 = 1.0E-4F;

        goto label08;

     label07:
        $f5 = virtualinvoke r10.<android.graphics.Paint: float getStrokeWidth()>();

        f10 = $f5 * 0.5F;

     label08:
        $i5 = virtualinvoke r2.<android.graphics.Rect: int centerY()>();

        f0 = (float) $i5;

        $f6 = f0 - f10;

        $d0 = (double) $f6;

        $d1 = staticinvoke <java.lang.Math: double floor(double)>($d0);

        i0 = (int) $d1;

        $f7 = f0 + f10;

        $d2 = (double) $f7;

        $d3 = staticinvoke <java.lang.Math: double ceil(double)>($d2);

        i14 = (int) $d3;

        $i7 = r2.<android.graphics.Rect: int left>;

        $i6 = r2.<android.graphics.Rect: int right>;

        virtualinvoke r1.<android.graphics.Outline: void setRect(int,int,int,int)>($i7, i0, $i6, i14);

        return;

     label09:
        virtualinvoke r1.<android.graphics.Outline: void setOval(android.graphics.Rect)>(r2);

        return;

     label10:
        $r4 = r9.<android.graphics.drawable.GradientDrawable$GradientState: float[] mRadiusArray>;

        if $r4 == null goto label11;

        specialinvoke r0.<android.graphics.drawable.GradientDrawable: void buildPathIfDirty()>();

        $r5 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Path mPath>;

        virtualinvoke r1.<android.graphics.Outline: void setPath(android.graphics.Path)>($r5);

        return;

     label11:
        f11 = 0.0F;

        $f1 = r9.<android.graphics.drawable.GradientDrawable$GradientState: float mRadius>;

        $b1 = $f1 cmpl 0.0F;

        if $b1 <= 0 goto label12;

        $f2 = r9.<android.graphics.drawable.GradientDrawable$GradientState: float mRadius>;

        $i2 = virtualinvoke r2.<android.graphics.Rect: int width()>();

        $i3 = virtualinvoke r2.<android.graphics.Rect: int height()>();

        $i4 = staticinvoke <java.lang.Math: int min(int,int)>($i2, $i3);

        $f3 = (float) $i4;

        $f4 = $f3 * 0.5F;

        f11 = staticinvoke <java.lang.Math: float min(float,float)>($f2, $f4);

     label12:
        virtualinvoke r1.<android.graphics.Outline: void setRoundRect(android.graphics.Rect,float)>(r2, f11);

        return;
    }

    public boolean getPadding(android.graphics.Rect)
    {
        android.graphics.drawable.GradientDrawable r0;
        android.graphics.Rect r1, r2;
        boolean $z0;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        r1 := @parameter0: android.graphics.Rect;

        r2 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Rect mPadding>;

        if r2 == null goto label1;

        virtualinvoke r1.<android.graphics.Rect: void set(android.graphics.Rect)>(r2);

        return 1;

     label1:
        $z0 = specialinvoke r0.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>(r1);

        return $z0;
    }

    public int getShape()
    {
        android.graphics.drawable.GradientDrawable r0;
        android.graphics.drawable.GradientDrawable$GradientState $r1;
        int $i0;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        $r1 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $i0 = $r1.<android.graphics.drawable.GradientDrawable$GradientState: int mShape>;

        return $i0;
    }

    public int getThickness()
    {
        android.graphics.drawable.GradientDrawable r0;
        android.graphics.drawable.GradientDrawable$GradientState $r1;
        int $i0;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        $r1 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $i0 = $r1.<android.graphics.drawable.GradientDrawable$GradientState: int mThickness>;

        return $i0;
    }

    public float getThicknessRatio()
    {
        android.graphics.drawable.GradientDrawable r0;
        android.graphics.drawable.GradientDrawable$GradientState $r1;
        float $f0;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        $r1 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $f0 = $r1.<android.graphics.drawable.GradientDrawable$GradientState: float mThicknessRatio>;

        return $f0;
    }

    public boolean getUseLevel()
    {
        android.graphics.drawable.GradientDrawable r0;
        android.graphics.drawable.GradientDrawable$GradientState $r1;
        boolean $z0;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        $r1 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $z0 = $r1.<android.graphics.drawable.GradientDrawable$GradientState: boolean mUseLevel>;

        return $z0;
    }

    public boolean hasFocusStateSpecified()
    {
        android.graphics.drawable.GradientDrawable r0;
        android.graphics.drawable.GradientDrawable$GradientState r1;
        android.content.res.ColorStateList $r2, $r3, $r4, $r5, $r6, $r7;
        boolean $z0, $z1, $z2, z3;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        r1 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $r2 = r1.<android.graphics.drawable.GradientDrawable$GradientState: android.content.res.ColorStateList mSolidColors>;

        if $r2 == null goto label1;

        $r7 = r1.<android.graphics.drawable.GradientDrawable$GradientState: android.content.res.ColorStateList mSolidColors>;

        $z2 = virtualinvoke $r7.<android.content.res.ColorStateList: boolean hasFocusStateSpecified()>();

        if $z2 != 0 goto label3;

     label1:
        $r3 = r1.<android.graphics.drawable.GradientDrawable$GradientState: android.content.res.ColorStateList mStrokeColors>;

        if $r3 == null goto label2;

        $r6 = r1.<android.graphics.drawable.GradientDrawable$GradientState: android.content.res.ColorStateList mStrokeColors>;

        $z1 = virtualinvoke $r6.<android.content.res.ColorStateList: boolean hasFocusStateSpecified()>();

        if $z1 != 0 goto label3;

     label2:
        $r4 = r1.<android.graphics.drawable.GradientDrawable$GradientState: android.content.res.ColorStateList mTint>;

        if $r4 == null goto label4;

        $r5 = r1.<android.graphics.drawable.GradientDrawable$GradientState: android.content.res.ColorStateList mTint>;

        $z0 = virtualinvoke $r5.<android.content.res.ColorStateList: boolean hasFocusStateSpecified()>();

        if $z0 == 0 goto label4;

     label3:
        z3 = 1;

        goto label5;

     label4:
        z3 = 0;

     label5:
        return z3;
    }

    public void inflate(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.graphics.drawable.GradientDrawable r0;
        android.content.res.Resources r1;
        org.xmlpull.v1.XmlPullParser r2;
        android.util.AttributeSet r3;
        android.content.res.Resources$Theme r4;
        android.content.res.TypedArray r5;
        android.graphics.drawable.GradientDrawable$GradientState $r6;
        int $i0;
        int[] $r7;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        r1 := @parameter0: android.content.res.Resources;

        r2 := @parameter1: org.xmlpull.v1.XmlPullParser;

        r3 := @parameter2: android.util.AttributeSet;

        r4 := @parameter3: android.content.res.Resources$Theme;

        specialinvoke r0.<android.graphics.drawable.Drawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>(r1, r2, r3, r4);

        $r6 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $i0 = staticinvoke <android.graphics.drawable.Drawable: int resolveDensity(android.content.res.Resources,int)>(r1, 0);

        virtualinvoke $r6.<android.graphics.drawable.GradientDrawable$GradientState: void setDensity(int)>($i0);

        $r7 = <com.android.internal.R$styleable: int[] GradientDrawable>;

        r5 = staticinvoke <android.graphics.drawable.GradientDrawable: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>(r1, r4, r3, $r7);

        specialinvoke r0.<android.graphics.drawable.GradientDrawable: void updateStateFromTypedArray(android.content.res.TypedArray)>(r5);

        virtualinvoke r5.<android.content.res.TypedArray: void recycle()>();

        specialinvoke r0.<android.graphics.drawable.GradientDrawable: void inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>(r1, r2, r3, r4);

        specialinvoke r0.<android.graphics.drawable.GradientDrawable: void updateLocalState(android.content.res.Resources)>(r1);

        return;
    }

    public boolean isStateful()
    {
        android.graphics.drawable.GradientDrawable r0;
        android.graphics.drawable.GradientDrawable$GradientState r1;
        boolean $z0, $z1, $z2, $z3, z4;
        android.content.res.ColorStateList $r2, $r3, $r4, $r5, $r6, $r7;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        r1 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $z0 = specialinvoke r0.<android.graphics.drawable.Drawable: boolean isStateful()>();

        if $z0 != 0 goto label4;

        $r2 = r1.<android.graphics.drawable.GradientDrawable$GradientState: android.content.res.ColorStateList mSolidColors>;

        if $r2 == null goto label1;

        $r7 = r1.<android.graphics.drawable.GradientDrawable$GradientState: android.content.res.ColorStateList mSolidColors>;

        $z3 = virtualinvoke $r7.<android.content.res.ColorStateList: boolean isStateful()>();

        if $z3 != 0 goto label4;

     label1:
        $r3 = r1.<android.graphics.drawable.GradientDrawable$GradientState: android.content.res.ColorStateList mStrokeColors>;

        if $r3 == null goto label2;

        $r6 = r1.<android.graphics.drawable.GradientDrawable$GradientState: android.content.res.ColorStateList mStrokeColors>;

        $z2 = virtualinvoke $r6.<android.content.res.ColorStateList: boolean isStateful()>();

        if $z2 != 0 goto label4;

     label2:
        $r4 = r1.<android.graphics.drawable.GradientDrawable$GradientState: android.content.res.ColorStateList mTint>;

        if $r4 == null goto label3;

        $r5 = r1.<android.graphics.drawable.GradientDrawable$GradientState: android.content.res.ColorStateList mTint>;

        $z1 = virtualinvoke $r5.<android.content.res.ColorStateList: boolean isStateful()>();

        if $z1 == 0 goto label3;

        goto label4;

     label3:
        z4 = 0;

        goto label5;

     label4:
        z4 = 1;

     label5:
        return z4;
    }

    public android.graphics.drawable.Drawable mutate()
    {
        android.graphics.drawable.GradientDrawable r0;
        boolean $z0;
        android.graphics.drawable.Drawable $r1;
        android.graphics.drawable.GradientDrawable$GradientState $r2, $r3;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        $z0 = r0.<android.graphics.drawable.GradientDrawable: boolean mMutated>;

        if $z0 != 0 goto label1;

        $r1 = specialinvoke r0.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        if $r1 != r0 goto label1;

        $r2 = new android.graphics.drawable.GradientDrawable$GradientState;

        $r3 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        specialinvoke $r2.<android.graphics.drawable.GradientDrawable$GradientState: void <init>(android.graphics.drawable.GradientDrawable$GradientState,android.content.res.Resources)>($r3, null);

        r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState> = $r2;

        specialinvoke r0.<android.graphics.drawable.GradientDrawable: void updateLocalState(android.content.res.Resources)>(null);

        r0.<android.graphics.drawable.GradientDrawable: boolean mMutated> = 1;

     label1:
        return r0;
    }

    protected void onBoundsChange(android.graphics.Rect)
    {
        android.graphics.drawable.GradientDrawable r0;
        android.graphics.Rect r1;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        r1 := @parameter0: android.graphics.Rect;

        specialinvoke r0.<android.graphics.drawable.Drawable: void onBoundsChange(android.graphics.Rect)>(r1);

        r0.<android.graphics.drawable.GradientDrawable: android.graphics.Path mRingPath> = null;

        r0.<android.graphics.drawable.GradientDrawable: boolean mPathIsDirty> = 1;

        r0.<android.graphics.drawable.GradientDrawable: boolean mGradientIsDirty> = 1;

        return;
    }

    protected boolean onLevelChange(int)
    {
        android.graphics.drawable.GradientDrawable r0;
        int i0;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        i0 := @parameter0: int;

        specialinvoke r0.<android.graphics.drawable.Drawable: boolean onLevelChange(int)>(i0);

        r0.<android.graphics.drawable.GradientDrawable: boolean mGradientIsDirty> = 1;

        r0.<android.graphics.drawable.GradientDrawable: boolean mPathIsDirty> = 1;

        virtualinvoke r0.<android.graphics.drawable.GradientDrawable: void invalidateSelf()>();

        return 1;
    }

    protected boolean onStateChange(int[])
    {
        android.graphics.drawable.GradientDrawable r0;
        int[] r1;
        android.graphics.drawable.GradientDrawable$GradientState r2;
        android.content.res.ColorStateList r3, $r6, r11, $r13;
        android.graphics.BlendMode $r4, $r5;
        android.graphics.BlendModeColorFilter $r7, $r8;
        int $i0, $i1, i2, i3;
        android.graphics.Paint $r9, $r10, r12;
        boolean z1, z2, z3;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        r1 := @parameter0: int[];

        r2 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        r11 = r2.<android.graphics.drawable.GradientDrawable$GradientState: android.content.res.ColorStateList mSolidColors>;

        z1 = 0;

        if r11 == null goto label1;

        i2 = virtualinvoke r11.<android.content.res.ColorStateList: int getColorForState(int[],int)>(r1, 0);

        z1 = 0;

        $r9 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        $i1 = virtualinvoke $r9.<android.graphics.Paint: int getColor()>();

        if $i1 == i2 goto label1;

        $r10 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        virtualinvoke $r10.<android.graphics.Paint: void setColor(int)>(i2);

        z1 = 1;

     label1:
        r12 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        z2 = z1;

        if r12 == null goto label2;

        r3 = r2.<android.graphics.drawable.GradientDrawable$GradientState: android.content.res.ColorStateList mStrokeColors>;

        z2 = z1;

        if r3 == null goto label2;

        i3 = virtualinvoke r3.<android.content.res.ColorStateList: int getColorForState(int[],int)>(r1, 0);

        z2 = z1;

        $i0 = virtualinvoke r12.<android.graphics.Paint: int getColor()>();

        if $i0 == i3 goto label2;

        virtualinvoke r12.<android.graphics.Paint: void setColor(int)>(i3);

        z2 = 1;

     label2:
        z3 = z2;

        $r13 = r2.<android.graphics.drawable.GradientDrawable$GradientState: android.content.res.ColorStateList mTint>;

        if $r13 == null goto label3;

        z3 = z2;

        $r4 = r2.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.BlendMode mBlendMode>;

        if $r4 == null goto label3;

        $r7 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.BlendModeColorFilter mBlendModeColorFilter>;

        $r6 = r2.<android.graphics.drawable.GradientDrawable$GradientState: android.content.res.ColorStateList mTint>;

        $r5 = r2.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.BlendMode mBlendMode>;

        $r8 = virtualinvoke r0.<android.graphics.drawable.GradientDrawable: android.graphics.BlendModeColorFilter updateBlendModeFilter(android.graphics.BlendModeColorFilter,android.content.res.ColorStateList,android.graphics.BlendMode)>($r7, $r6, $r5);

        r0.<android.graphics.drawable.GradientDrawable: android.graphics.BlendModeColorFilter mBlendModeColorFilter> = $r8;

        z3 = 1;

     label3:
        if z3 == 0 goto label4;

        virtualinvoke r0.<android.graphics.drawable.GradientDrawable: void invalidateSelf()>();

        return 1;

     label4:
        return 0;
    }

    public void setAlpha(int)
    {
        android.graphics.drawable.GradientDrawable r0;
        int i0, $i1;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        i0 := @parameter0: int;

        $i1 = r0.<android.graphics.drawable.GradientDrawable: int mAlpha>;

        if i0 == $i1 goto label1;

        r0.<android.graphics.drawable.GradientDrawable: int mAlpha> = i0;

        virtualinvoke r0.<android.graphics.drawable.GradientDrawable: void invalidateSelf()>();

     label1:
        return;
    }

    public void setAntiAlias(boolean)
    {
        android.graphics.drawable.GradientDrawable r0;
        boolean z0;
        android.graphics.Paint $r1;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        virtualinvoke $r1.<android.graphics.Paint: void setAntiAlias(boolean)>(z0);

        return;
    }

    public void setColor(int)
    {
        android.graphics.drawable.GradientDrawable r0;
        int i0;
        android.graphics.drawable.GradientDrawable$GradientState $r1;
        android.content.res.ColorStateList $r2;
        android.graphics.Paint $r3;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        i0 := @parameter0: int;

        $r1 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $r2 = staticinvoke <android.content.res.ColorStateList: android.content.res.ColorStateList valueOf(int)>(i0);

        virtualinvoke $r1.<android.graphics.drawable.GradientDrawable$GradientState: void setSolidColors(android.content.res.ColorStateList)>($r2);

        $r3 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        virtualinvoke $r3.<android.graphics.Paint: void setColor(int)>(i0);

        virtualinvoke r0.<android.graphics.drawable.GradientDrawable: void invalidateSelf()>();

        return;
    }

    public void setColor(android.content.res.ColorStateList)
    {
        android.graphics.drawable.GradientDrawable r0;
        android.content.res.ColorStateList r1;
        int i0;
        int[] $r2;
        android.graphics.drawable.GradientDrawable$GradientState $r3;
        android.graphics.Paint $r4;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        r1 := @parameter0: android.content.res.ColorStateList;

        if r1 != null goto label1;

        virtualinvoke r0.<android.graphics.drawable.GradientDrawable: void setColor(int)>(0);

        goto label2;

     label1:
        $r2 = virtualinvoke r0.<android.graphics.drawable.GradientDrawable: int[] getState()>();

        i0 = virtualinvoke r1.<android.content.res.ColorStateList: int getColorForState(int[],int)>($r2, 0);

        $r3 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        virtualinvoke $r3.<android.graphics.drawable.GradientDrawable$GradientState: void setSolidColors(android.content.res.ColorStateList)>(r1);

        $r4 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        virtualinvoke $r4.<android.graphics.Paint: void setColor(int)>(i0);

        virtualinvoke r0.<android.graphics.drawable.GradientDrawable: void invalidateSelf()>();

     label2:
        return;
    }

    public void setColorFilter(android.graphics.ColorFilter)
    {
        android.graphics.drawable.GradientDrawable r0;
        android.graphics.ColorFilter r1, $r2;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        r1 := @parameter0: android.graphics.ColorFilter;

        $r2 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.ColorFilter mColorFilter>;

        if r1 == $r2 goto label1;

        r0.<android.graphics.drawable.GradientDrawable: android.graphics.ColorFilter mColorFilter> = r1;

        virtualinvoke r0.<android.graphics.drawable.GradientDrawable: void invalidateSelf()>();

     label1:
        return;
    }

    public void setColors(int[])
    {
        android.graphics.drawable.GradientDrawable r0;
        int[] r1;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        r1 := @parameter0: int[];

        virtualinvoke r0.<android.graphics.drawable.GradientDrawable: void setColors(int[],float[])>(r1, null);

        return;
    }

    public void setColors(int[], float[])
    {
        android.graphics.drawable.GradientDrawable r0;
        int[] r1;
        float[] r2;
        android.graphics.drawable.GradientDrawable$GradientState $r3, $r4;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        r1 := @parameter0: int[];

        r2 := @parameter1: float[];

        $r3 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        virtualinvoke $r3.<android.graphics.drawable.GradientDrawable$GradientState: void setGradientColors(int[])>(r1);

        $r4 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $r4.<android.graphics.drawable.GradientDrawable$GradientState: float[] mPositions> = r2;

        r0.<android.graphics.drawable.GradientDrawable: boolean mGradientIsDirty> = 1;

        virtualinvoke r0.<android.graphics.drawable.GradientDrawable: void invalidateSelf()>();

        return;
    }

    public void setCornerRadii(float[])
    {
        android.graphics.drawable.GradientDrawable r0;
        float[] r1;
        android.graphics.drawable.GradientDrawable$GradientState $r2;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        r1 := @parameter0: float[];

        $r2 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        virtualinvoke $r2.<android.graphics.drawable.GradientDrawable$GradientState: void setCornerRadii(float[])>(r1);

        r0.<android.graphics.drawable.GradientDrawable: boolean mPathIsDirty> = 1;

        virtualinvoke r0.<android.graphics.drawable.GradientDrawable: void invalidateSelf()>();

        return;
    }

    public void setCornerRadius(float)
    {
        android.graphics.drawable.GradientDrawable r0;
        float f0;
        android.graphics.drawable.GradientDrawable$GradientState $r1;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        f0 := @parameter0: float;

        $r1 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        virtualinvoke $r1.<android.graphics.drawable.GradientDrawable$GradientState: void setCornerRadius(float)>(f0);

        r0.<android.graphics.drawable.GradientDrawable: boolean mPathIsDirty> = 1;

        virtualinvoke r0.<android.graphics.drawable.GradientDrawable: void invalidateSelf()>();

        return;
    }

    public void setDither(boolean)
    {
        android.graphics.drawable.GradientDrawable r0;
        boolean z0, $z1;
        android.graphics.drawable.GradientDrawable$GradientState $r1, $r2;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $z1 = $r1.<android.graphics.drawable.GradientDrawable$GradientState: boolean mDither>;

        if z0 == $z1 goto label1;

        $r2 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $r2.<android.graphics.drawable.GradientDrawable$GradientState: boolean mDither> = z0;

        virtualinvoke r0.<android.graphics.drawable.GradientDrawable: void invalidateSelf()>();

     label1:
        return;
    }

    public void setGradientCenter(float, float)
    {
        android.graphics.drawable.GradientDrawable r0;
        float f0, f1;
        android.graphics.drawable.GradientDrawable$GradientState $r1;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r1 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        virtualinvoke $r1.<android.graphics.drawable.GradientDrawable$GradientState: void setGradientCenter(float,float)>(f0, f1);

        r0.<android.graphics.drawable.GradientDrawable: boolean mGradientIsDirty> = 1;

        virtualinvoke r0.<android.graphics.drawable.GradientDrawable: void invalidateSelf()>();

        return;
    }

    public void setGradientRadius(float)
    {
        android.graphics.drawable.GradientDrawable r0;
        float f0;
        android.graphics.drawable.GradientDrawable$GradientState $r1;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        f0 := @parameter0: float;

        $r1 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        virtualinvoke $r1.<android.graphics.drawable.GradientDrawable$GradientState: void setGradientRadius(float,int)>(f0, 0);

        r0.<android.graphics.drawable.GradientDrawable: boolean mGradientIsDirty> = 1;

        virtualinvoke r0.<android.graphics.drawable.GradientDrawable: void invalidateSelf()>();

        return;
    }

    public void setGradientType(int)
    {
        android.graphics.drawable.GradientDrawable r0;
        int i0;
        android.graphics.drawable.GradientDrawable$GradientState $r1;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        i0 := @parameter0: int;

        $r1 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        virtualinvoke $r1.<android.graphics.drawable.GradientDrawable$GradientState: void setGradientType(int)>(i0);

        r0.<android.graphics.drawable.GradientDrawable: boolean mGradientIsDirty> = 1;

        virtualinvoke r0.<android.graphics.drawable.GradientDrawable: void invalidateSelf()>();

        return;
    }

    public void setInnerRadius(int)
    {
        android.graphics.drawable.GradientDrawable r0;
        int i0;
        android.graphics.drawable.GradientDrawable$GradientState $r1;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        i0 := @parameter0: int;

        $r1 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $r1.<android.graphics.drawable.GradientDrawable$GradientState: int mInnerRadius> = i0;

        r0.<android.graphics.drawable.GradientDrawable: boolean mPathIsDirty> = 1;

        virtualinvoke r0.<android.graphics.drawable.GradientDrawable: void invalidateSelf()>();

        return;
    }

    public void setInnerRadiusRatio(float)
    {
        android.graphics.drawable.GradientDrawable r0;
        float f0;
        byte $b0;
        java.lang.IllegalArgumentException $r1;
        android.graphics.drawable.GradientDrawable$GradientState $r2;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        f0 := @parameter0: float;

        $b0 = f0 cmpg 0.0F;

        if $b0 <= 0 goto label1;

        $r2 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $r2.<android.graphics.drawable.GradientDrawable$GradientState: float mInnerRadiusRatio> = f0;

        r0.<android.graphics.drawable.GradientDrawable: boolean mPathIsDirty> = 1;

        virtualinvoke r0.<android.graphics.drawable.GradientDrawable: void invalidateSelf()>();

        return;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Ratio must be greater than zero");

        throw $r1;
    }

    public void setOrientation(android.graphics.drawable.GradientDrawable$Orientation)
    {
        android.graphics.drawable.GradientDrawable r0;
        android.graphics.drawable.GradientDrawable$Orientation r1;
        android.graphics.drawable.GradientDrawable$GradientState $r2;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        r1 := @parameter0: android.graphics.drawable.GradientDrawable$Orientation;

        $r2 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $r2.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.drawable.GradientDrawable$Orientation mOrientation> = r1;

        r0.<android.graphics.drawable.GradientDrawable: boolean mGradientIsDirty> = 1;

        virtualinvoke r0.<android.graphics.drawable.GradientDrawable: void invalidateSelf()>();

        return;
    }

    public void setPadding(int, int, int, int)
    {
        android.graphics.drawable.GradientDrawable r0;
        int i0, i1, i2, i3;
        android.graphics.drawable.GradientDrawable$GradientState $r1, $r3, $r5, $r8;
        android.graphics.Rect $r2, $r4, $r6, $r7;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $r1 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $r2 = $r1.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.Rect mPadding>;

        if $r2 != null goto label1;

        $r8 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $r7 = new android.graphics.Rect;

        specialinvoke $r7.<android.graphics.Rect: void <init>()>();

        $r8.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.Rect mPadding> = $r7;

     label1:
        $r3 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $r4 = $r3.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.Rect mPadding>;

        virtualinvoke $r4.<android.graphics.Rect: void set(int,int,int,int)>(i0, i1, i2, i3);

        $r5 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $r6 = $r5.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.Rect mPadding>;

        r0.<android.graphics.drawable.GradientDrawable: android.graphics.Rect mPadding> = $r6;

        virtualinvoke r0.<android.graphics.drawable.GradientDrawable: void invalidateSelf()>();

        return;
    }

    public void setShape(int)
    {
        android.graphics.drawable.GradientDrawable r0;
        int i0;
        android.graphics.drawable.GradientDrawable$GradientState $r1;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        i0 := @parameter0: int;

        r0.<android.graphics.drawable.GradientDrawable: android.graphics.Path mRingPath> = null;

        r0.<android.graphics.drawable.GradientDrawable: boolean mPathIsDirty> = 1;

        $r1 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        virtualinvoke $r1.<android.graphics.drawable.GradientDrawable$GradientState: void setShape(int)>(i0);

        virtualinvoke r0.<android.graphics.drawable.GradientDrawable: void invalidateSelf()>();

        return;
    }

    public void setSize(int, int)
    {
        android.graphics.drawable.GradientDrawable r0;
        int i0, i1;
        android.graphics.drawable.GradientDrawable$GradientState $r1;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        virtualinvoke $r1.<android.graphics.drawable.GradientDrawable$GradientState: void setSize(int,int)>(i0, i1);

        r0.<android.graphics.drawable.GradientDrawable: boolean mPathIsDirty> = 1;

        virtualinvoke r0.<android.graphics.drawable.GradientDrawable: void invalidateSelf()>();

        return;
    }

    public void setStroke(int, int)
    {
        android.graphics.drawable.GradientDrawable r0;
        int i0, i1;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<android.graphics.drawable.GradientDrawable: void setStroke(int,int,float,float)>(i0, i1, 0.0F, 0.0F);

        return;
    }

    public void setStroke(int, int, float, float)
    {
        android.graphics.drawable.GradientDrawable r0;
        int i0, i1;
        float f0, f1;
        android.graphics.drawable.GradientDrawable$GradientState $r1;
        android.content.res.ColorStateList $r2;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        f0 := @parameter2: float;

        f1 := @parameter3: float;

        $r1 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $r2 = staticinvoke <android.content.res.ColorStateList: android.content.res.ColorStateList valueOf(int)>(i1);

        virtualinvoke $r1.<android.graphics.drawable.GradientDrawable$GradientState: void setStroke(int,android.content.res.ColorStateList,float,float)>(i0, $r2, f0, f1);

        specialinvoke r0.<android.graphics.drawable.GradientDrawable: void setStrokeInternal(int,int,float,float)>(i0, i1, f0, f1);

        return;
    }

    public void setStroke(int, android.content.res.ColorStateList)
    {
        android.graphics.drawable.GradientDrawable r0;
        int i0;
        android.content.res.ColorStateList r1;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.res.ColorStateList;

        virtualinvoke r0.<android.graphics.drawable.GradientDrawable: void setStroke(int,android.content.res.ColorStateList,float,float)>(i0, r1, 0.0F, 0.0F);

        return;
    }

    public void setStroke(int, android.content.res.ColorStateList, float, float)
    {
        android.graphics.drawable.GradientDrawable r0;
        int i0, i1;
        android.content.res.ColorStateList r1;
        float f0, f1;
        android.graphics.drawable.GradientDrawable$GradientState $r2;
        int[] $r3;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.res.ColorStateList;

        f0 := @parameter2: float;

        f1 := @parameter3: float;

        $r2 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        virtualinvoke $r2.<android.graphics.drawable.GradientDrawable$GradientState: void setStroke(int,android.content.res.ColorStateList,float,float)>(i0, r1, f0, f1);

        if r1 != null goto label1;

        i1 = 0;

        goto label2;

     label1:
        $r3 = virtualinvoke r0.<android.graphics.drawable.GradientDrawable: int[] getState()>();

        i1 = virtualinvoke r1.<android.content.res.ColorStateList: int getColorForState(int[],int)>($r3, 0);

     label2:
        specialinvoke r0.<android.graphics.drawable.GradientDrawable: void setStrokeInternal(int,int,float,float)>(i0, i1, f0, f1);

        return;
    }

    public void setThickness(int)
    {
        android.graphics.drawable.GradientDrawable r0;
        int i0;
        android.graphics.drawable.GradientDrawable$GradientState $r1;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        i0 := @parameter0: int;

        $r1 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $r1.<android.graphics.drawable.GradientDrawable$GradientState: int mThickness> = i0;

        r0.<android.graphics.drawable.GradientDrawable: boolean mPathIsDirty> = 1;

        virtualinvoke r0.<android.graphics.drawable.GradientDrawable: void invalidateSelf()>();

        return;
    }

    public void setThicknessRatio(float)
    {
        android.graphics.drawable.GradientDrawable r0;
        float f0;
        byte $b0;
        java.lang.IllegalArgumentException $r1;
        android.graphics.drawable.GradientDrawable$GradientState $r2;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        f0 := @parameter0: float;

        $b0 = f0 cmpg 0.0F;

        if $b0 <= 0 goto label1;

        $r2 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $r2.<android.graphics.drawable.GradientDrawable$GradientState: float mThicknessRatio> = f0;

        r0.<android.graphics.drawable.GradientDrawable: boolean mPathIsDirty> = 1;

        virtualinvoke r0.<android.graphics.drawable.GradientDrawable: void invalidateSelf()>();

        return;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Ratio must be greater than zero");

        throw $r1;
    }

    public void setTintBlendMode(android.graphics.BlendMode)
    {
        android.graphics.drawable.GradientDrawable r0;
        android.graphics.BlendMode r1;
        android.graphics.drawable.GradientDrawable$GradientState $r2, $r3;
        android.content.res.ColorStateList $r4;
        android.graphics.BlendModeColorFilter $r5, $r6;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        r1 := @parameter0: android.graphics.BlendMode;

        $r2 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $r2.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.BlendMode mBlendMode> = r1;

        $r5 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.BlendModeColorFilter mBlendModeColorFilter>;

        $r3 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $r4 = $r3.<android.graphics.drawable.GradientDrawable$GradientState: android.content.res.ColorStateList mTint>;

        $r6 = virtualinvoke r0.<android.graphics.drawable.GradientDrawable: android.graphics.BlendModeColorFilter updateBlendModeFilter(android.graphics.BlendModeColorFilter,android.content.res.ColorStateList,android.graphics.BlendMode)>($r5, $r4, r1);

        r0.<android.graphics.drawable.GradientDrawable: android.graphics.BlendModeColorFilter mBlendModeColorFilter> = $r6;

        virtualinvoke r0.<android.graphics.drawable.GradientDrawable: void invalidateSelf()>();

        return;
    }

    public void setTintList(android.content.res.ColorStateList)
    {
        android.graphics.drawable.GradientDrawable r0;
        android.content.res.ColorStateList r1;
        android.graphics.drawable.GradientDrawable$GradientState $r2, $r3;
        android.graphics.BlendMode $r4;
        android.graphics.BlendModeColorFilter $r5, $r6;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        r1 := @parameter0: android.content.res.ColorStateList;

        $r2 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $r2.<android.graphics.drawable.GradientDrawable$GradientState: android.content.res.ColorStateList mTint> = r1;

        $r5 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.BlendModeColorFilter mBlendModeColorFilter>;

        $r3 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $r4 = $r3.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.BlendMode mBlendMode>;

        $r6 = virtualinvoke r0.<android.graphics.drawable.GradientDrawable: android.graphics.BlendModeColorFilter updateBlendModeFilter(android.graphics.BlendModeColorFilter,android.content.res.ColorStateList,android.graphics.BlendMode)>($r5, r1, $r4);

        r0.<android.graphics.drawable.GradientDrawable: android.graphics.BlendModeColorFilter mBlendModeColorFilter> = $r6;

        virtualinvoke r0.<android.graphics.drawable.GradientDrawable: void invalidateSelf()>();

        return;
    }

    public void setUseLevel(boolean)
    {
        android.graphics.drawable.GradientDrawable r0;
        boolean z0;
        android.graphics.drawable.GradientDrawable$GradientState $r1;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $r1.<android.graphics.drawable.GradientDrawable$GradientState: boolean mUseLevel> = z0;

        r0.<android.graphics.drawable.GradientDrawable: boolean mGradientIsDirty> = 1;

        virtualinvoke r0.<android.graphics.drawable.GradientDrawable: void invalidateSelf()>();

        return;
    }

    public void setXfermode(android.graphics.Xfermode)
    {
        android.graphics.drawable.GradientDrawable r0;
        android.graphics.Xfermode r1;
        android.graphics.Paint $r2;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        r1 := @parameter0: android.graphics.Xfermode;

        specialinvoke r0.<android.graphics.drawable.Drawable: void setXfermode(android.graphics.Xfermode)>(r1);

        $r2 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        virtualinvoke $r2.<android.graphics.Paint: android.graphics.Xfermode setXfermode(android.graphics.Xfermode)>(r1);

        return;
    }
}
