class android.graphics.drawable.Icon$LoadDrawableTask extends java.lang.Object implements java.lang.Runnable
{
    final android.content.Context mContext;
    final android.os.Message mMessage;
    final android.graphics.drawable.Icon this$0;

    public void <init>(android.graphics.drawable.Icon, android.content.Context, android.os.Handler, android.graphics.drawable.Icon$OnDrawableLoadedListener)
    {
        android.graphics.drawable.Icon$LoadDrawableTask r0;
        android.graphics.drawable.Icon r1;
        android.content.Context r2;
        android.os.Handler r3;
        android.graphics.drawable.Icon$OnDrawableLoadedListener r4;
        android.graphics.drawable.Icon$LoadDrawableTask$1 $r5;
        android.os.Message $r6;

        r0 := @this: android.graphics.drawable.Icon$LoadDrawableTask;

        r1 := @parameter0: android.graphics.drawable.Icon;

        r2 := @parameter1: android.content.Context;

        r3 := @parameter2: android.os.Handler;

        r4 := @parameter3: android.graphics.drawable.Icon$OnDrawableLoadedListener;

        r0.<android.graphics.drawable.Icon$LoadDrawableTask: android.graphics.drawable.Icon this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.graphics.drawable.Icon$LoadDrawableTask: android.content.Context mContext> = r2;

        $r5 = new android.graphics.drawable.Icon$LoadDrawableTask$1;

        specialinvoke $r5.<android.graphics.drawable.Icon$LoadDrawableTask$1: void <init>(android.graphics.drawable.Icon$LoadDrawableTask,android.graphics.drawable.Icon,android.graphics.drawable.Icon$OnDrawableLoadedListener)>(r0, r1, r4);

        $r6 = staticinvoke <android.os.Message: android.os.Message obtain(android.os.Handler,java.lang.Runnable)>(r3, $r5);

        r0.<android.graphics.drawable.Icon$LoadDrawableTask: android.os.Message mMessage> = $r6;

        return;
    }

    public void <init>(android.graphics.drawable.Icon, android.content.Context, android.os.Message)
    {
        android.graphics.drawable.Icon$LoadDrawableTask r0;
        android.graphics.drawable.Icon r1;
        android.content.Context r2;
        android.os.Message r3;

        r0 := @this: android.graphics.drawable.Icon$LoadDrawableTask;

        r1 := @parameter0: android.graphics.drawable.Icon;

        r2 := @parameter1: android.content.Context;

        r3 := @parameter2: android.os.Message;

        r0.<android.graphics.drawable.Icon$LoadDrawableTask: android.graphics.drawable.Icon this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.graphics.drawable.Icon$LoadDrawableTask: android.content.Context mContext> = r2;

        r0.<android.graphics.drawable.Icon$LoadDrawableTask: android.os.Message mMessage> = r3;

        return;
    }

    public void run()
    {
        android.graphics.drawable.Icon$LoadDrawableTask r0;
        android.content.Context $r1;
        android.graphics.drawable.Icon $r2;
        android.os.Message $r3, $r5;
        android.graphics.drawable.Drawable $r4;

        r0 := @this: android.graphics.drawable.Icon$LoadDrawableTask;

        $r3 = r0.<android.graphics.drawable.Icon$LoadDrawableTask: android.os.Message mMessage>;

        $r2 = r0.<android.graphics.drawable.Icon$LoadDrawableTask: android.graphics.drawable.Icon this$0>;

        $r1 = r0.<android.graphics.drawable.Icon$LoadDrawableTask: android.content.Context mContext>;

        $r4 = virtualinvoke $r2.<android.graphics.drawable.Icon: android.graphics.drawable.Drawable loadDrawable(android.content.Context)>($r1);

        $r3.<android.os.Message: java.lang.Object obj> = $r4;

        $r5 = r0.<android.graphics.drawable.Icon$LoadDrawableTask: android.os.Message mMessage>;

        virtualinvoke $r5.<android.os.Message: void sendToTarget()>();

        return;
    }

    public void runAsync()
    {
        android.graphics.drawable.Icon$LoadDrawableTask r0;
        java.util.concurrent.Executor $r1;

        r0 := @this: android.graphics.drawable.Icon$LoadDrawableTask;

        $r1 = <android.os.AsyncTask: java.util.concurrent.Executor THREAD_POOL_EXECUTOR>;

        interfaceinvoke $r1.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>(r0);

        return;
    }
}
